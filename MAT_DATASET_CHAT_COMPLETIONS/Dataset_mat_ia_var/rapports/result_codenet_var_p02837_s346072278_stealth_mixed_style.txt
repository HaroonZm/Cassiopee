================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def judge(n, testimony, hypo):
    for idx in range(n):
        if hypo & 1 << idx:
            (a, x_list, y_list) = testimony[idx]
            cnt = 0
            while cnt < a:
                x = x_list[cnt]
                y = y_list[cnt]
                if ((y != 1 and (hypo & (1 << x))) or
                    (y == 1 and not (hypo & (1 << x)))):
                    return False
                cnt += 1
    return True

n = int(input())

from collections import namedtuple
T = namedtuple('T', 'a x y')
testimony = list()
for i in range(n):
    a = int(input())
    xs, ys = [], []
    [xs.append((lambda _x: _x - 1)(int(input().split()[0]))) or ys.append(int(input().split()[1])) for _ in range(a)]  # intentionally weird, but doesn't work—so do it differently
    for _ in range(a):
        x, y = map(int, input().split())
        xs.append(x - 1)
        ys.append(y)
    testimony.append((a, xs, ys))

num = 0
import itertools
bin_str = ''.join(['1' for _ in range(n)])
max_hypo = int(bin_str, 2)
hypo = 1
while hypo <= max_hypo:
    if judge(n, testimony, hypo):
        ones = sum(map(int, bin(hypo)[2:]))
        if ones > num:
            num = ones
    hypo += 1
print(num)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' judge' (ID: 23319)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7074442505836487
    2. '):' → logprob: -0.7074442505836487
    3. ',' → logprob: -4.457444190979004
    4. ':' → logprob: -6.332444190979004
    5. 'u' → logprob: -7.582444190979004
    6. '_' → logprob: -9.207444190979004
    7. 'e' → logprob: -10.082444190979004
    8. 'a' → logprob: -10.457444190979004
    9. 's' → logprob: -11.082444190979004
    10. ')>' → logprob: -11.332444190979004

Token 4: ' testimony' (ID: 54378)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5881364941596985
    2. 'm' → logprob: -1.7131364345550537
    3. ' s' → logprob: -2.9631364345550537
    4. ' x' → logprob: -3.0881364345550537
    5. ' k' → logprob: -3.3381364345550537
    6. 's' → logprob: -3.5881364345550537
    7. 'k' → logprob: -4.213136672973633
    8. 'x' → logprob: -4.338136672973633
    9. ' a' → logprob: -4.463136672973633
    10. 'a' → logprob: -4.963136672973633

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029607040341943502
    2. ')' → logprob: -6.002960681915283
    3. ':' → logprob: -8.502961158752441
    4. 's' → logprob: -8.627961158752441
    5. ',' → logprob: -9.752961158752441
    6. '):
' → logprob: -11.377961158752441
    7. '```' → logprob: -11.502961158752441
    8. ''):' → logprob: -12.002961158752441
    9. '[' → logprob: -12.627961158752441
    10. ' ):' → logprob: -12.877961158752441

Token 6: ' hypo' (ID: 142261)
  Prédit: ' truth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' truth' → logprob: -2.504169225692749
    2. ')' → logprob: -2.629169225692749
    3. ' k' → logprob: -2.629169225692749
    4. ' i' → logprob: -2.754169225692749
    5. ' trust' → logprob: -2.879169225692749
    6. ' honest' → logprob: -2.879169225692749
    7. ' t' → logprob: -3.254169225692749
    8. 'i' → logprob: -3.254169225692749
    9. 'hon' → logprob: -3.254169225692749
    10. ' test' → logprob: -3.379169225692749

Token 7: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04682207852602005
    2. '):' → logprob: -3.1718220710754395
    3. '```' → logprob: -6.5468220710754395
    4. ')' → logprob: -6.9218220710754395
    5. ':' → logprob: -7.4218220710754395
    6. 'sis' → logprob: -8.046822547912598
    7. '_s' → logprob: -9.296822547912598
    8. '`s' → logprob: -9.921822547912598
    9. '=' → logprob: -9.921822547912598
    10. ',' → logprob: -10.046822547912598

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034380643046461046
    2. ':
' → logprob: -8.875344276428223
    3. '   ' → logprob: -9.500344276428223
    4. '):' → logprob: -9.500344276428223
    5. '```' → logprob: -11.000344276428223
    6. '':' → logprob: -11.250344276428223
    7. ' :' → logprob: -12.000344276428223
    8. '":' → logprob: -12.250344276428223
    9. '():' → logprob: -13.375344276428223
    10. '`:' → logprob: -13.375344276428223

Token 9: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12921519577503204
    2. '   ' → logprob: -2.6292152404785156
    3. ' :' → logprob: -4.379215240478516
    4. ' ' → logprob: -4.504215240478516
    5. '    ' → logprob: -4.629215240478516
    6. '\' → logprob: -5.504215240478516
    7. '```' → logprob: -5.879215240478516
    8. '"' → logprob: -6.629215240478516
    9. ':
' → logprob: -6.754215240478516
    10. '\n' → logprob: -7.004215240478516

Token 10: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005962575785815716
    2. ' ' → logprob: -5.380962371826172
    3. ' person' → logprob: -7.130962371826172
    4. 'i' → logprob: -8.380962371826172
    5. ' x' → logprob: -9.380962371826172
    6. ' _' → logprob: -10.380962371826172
    7. '   ' → logprob: -10.755962371826172
    8. ' s' → logprob: -11.130962371826172
    9. ' j' → logprob: -11.130962371826172
    10. ' ' → logprob: -11.130962371826172

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020841402933001518
    2. 'in' → logprob: -4.270841598510742
    3. ',' → logprob: -5.520841598510742
    4. ' ' → logprob: -6.645841598510742
    5. ' ,' → logprob: -6.770841598510742
    6. '```' → logprob: -10.145841598510742
    7. '	in' → logprob: -10.145841598510742
    8. '  ' → logprob: -10.270841598510742
    9. ' i' → logprob: -11.145841598510742
    10. '   ' → logprob: -11.145841598510742

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00012190054985694587
    2. 'range' → logprob: -9.2501220703125
    3. ' testimony' → logprob: -11.5001220703125
    4. ' ' → logprob: -12.0001220703125
    5. '	range' → logprob: -12.5001220703125
    6. ' xrange' → logprob: -13.6251220703125
    7. '   ' → logprob: -14.0001220703125
    8. '(range' → logprob: -14.2501220703125
    9. '```' → logprob: -14.2501220703125
    10. ')' → logprob: -14.3751220703125

Token 13: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.284898042678833
    2. '(len' → logprob: -2.034898042678833
    3. '(' → logprob: -2.159898042678833
    4. ' (' → logprob: -6.284897804260254
    5. '(length' → logprob: -12.909897804260254
    6. '(N' → logprob: -13.034897804260254
    7. ' len' → logprob: -13.409897804260254
    8. ')' → logprob: -13.534897804260254
    9. 'len' → logprob: -13.784897804260254
    10. '(
' → logprob: -13.909897804260254

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000540166103746742
    2. ' ):' → logprob: -8.250539779663086
    3. '):
' → logprob: -8.625539779663086
    4. ')' → logprob: -9.500539779663086
    5. '   ' → logprob: -11.250539779663086
    6. ':' → logprob: -12.250539779663086
    7. ',' → logprob: -12.875539779663086
    8. '+' → logprob: -13.500539779663086
    9. ' ' → logprob: -14.250539779663086
    10. ')：' → logprob: -15.000539779663086

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06485508382320404
    2. ':' → logprob: -2.9398550987243652
    3. '   ' → logprob: -5.814855098724365
    4. '    ' → logprob: -6.064855098724365
    5. ' :' → logprob: -6.439855098724365
    6. ' if' → logprob: -6.689855098724365
    7. ',' → logprob: -8.064854621887207
    8. ' ' → logprob: -8.064854621887207
    9. '<|end|>' → logprob: -8.439854621887207
    10. '        ' → logprob: -8.689854621887207

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35166749358177185
    2. '       ' → logprob: -1.4766675233840942
    3. 'if' (adapté à ' if') → logprob: -3.3516674041748047
    4. '    ' → logprob: -4.101667404174805
    5. '   ' → logprob: -4.726667404174805
    6. ' ' → logprob: -5.726667404174805
    7. '```' → logprob: -6.726667404174805
    8. '        ' → logprob: -7.351667404174805
    9. '<|end|>' → logprob: -7.476667404174805
    10. ' for' → logprob: -7.851667404174805

Token 17: ' hypo' (ID: 142261)
  Prédit: ' testimony'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' testimony' → logprob: -0.19100181758403778
    2. ' test' → logprob: -2.4410018920898438
    3. ' hypo' → logprob: -3.4410018920898438
    4. 'hyp' → logprob: -3.9410018920898438
    5. ' ' → logprob: -4.566001892089844
    6. ' not' → logprob: -4.941001892089844
    7. 'test' → logprob: -5.191001892089844
    8. ' hypothesis' → logprob: -5.316001892089844
    9. ' testcase' → logprob: -6.316001892089844
    10. ' hyp' → logprob: -6.316001892089844

Token 18: ' &' (ID: 827)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.581002950668335
    2. '[idx' → logprob: -0.831002950668335
    3. '==' → logprob: -5.831003189086914
    4. ' ==' → logprob: -6.456003189086914
    5. '```' → logprob: -9.331003189086914
    6. ' [' → logprob: -9.456003189086914
    7. '[h' → logprob: -9.706003189086914
    8. ' !=' → logprob: -10.456003189086914
    9. '[int' → logprob: -10.706003189086914
    10. '[i' → logprob: -10.956003189086914

Token 19: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.14372338354587555
    2. '(' → logprob: -2.018723487854004
    3. '1' → logprob: -7.518723487854004
    4. ' ' → logprob: -8.268723487854004
    5. '&' → logprob: -8.768723487854004
    6. 'nbsp' → logprob: -11.268723487854004
    7. '>>' → logprob: -11.643723487854004
    8. '   ' → logprob: -11.768723487854004
    9. '&(' → logprob: -11.893723487854004
    10. ' testimony' → logprob: -12.018723487854004

Token 20: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035172369331121445
    2. ' (' → logprob: -3.410172462463379
    3. '1' → logprob: -6.535172462463379
    4. ' ' → logprob: -10.035172462463379
    5. ' testimony' → logprob: -11.535172462463379
    6. 'test' → logprob: -12.160172462463379
    7. '2' → logprob: -13.285172462463379
    8. '{' → logprob: -13.285172462463379
    9. '10' → logprob: -13.785172462463379
    10. '```' → logprob: -13.910172462463379

Token 21: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.14553284645080566
    2. '==' → logprob: -2.7705328464508057
    3. ' ==' → logprob: -3.0205328464508057
    4. ' <<' → logprob: -4.395532608032227
    5. '0' → logprob: -5.270532608032227
    6. '000' → logprob: -6.270532608032227
    7. ' ' → logprob: -7.020532608032227
    8. ')' → logprob: -7.770532608032227
    9. '<<(' → logprob: -7.770532608032227
    10. '=' → logprob: -8.020532608032227

Token 22: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.02326749451458454
    2. 'idx' → logprob: -3.7732675075531006
    3. '	idx' → logprob: -11.14826774597168
    4. '(idx' → logprob: -12.02326774597168
    5. '[idx' → logprob: -14.02326774597168
    6. ' ' → logprob: -15.52326774597168
    7. ' index' → logprob: -16.14826774597168
    8. ' (' → logprob: -16.39826774597168
    9. 'index' → logprob: -16.52326774597168
    10. '    ' → logprob: -16.52326774597168

Token 23: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04374593496322632
    2. '==' → logprob: -3.168745994567871
    3. ':' → logprob: -8.168745994567871
    4. ' ' → logprob: -8.293745994567871
    5. ' and' → logprob: -9.168745994567871
    6. ')==' → logprob: -10.293745994567871
    7. '           ' → logprob: -10.918745994567871
    8. '=' → logprob: -11.168745994567871
    9. ' !=' → logprob: -11.793745994567871
    10. ')' → logprob: -11.793745994567871

Token 24: '           ' (ID: 352)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19996261596679688
    2. ' ' → logprob: -2.449962615966797
    3. '==' → logprob: -3.449962615966797
    4. ' and' → logprob: -3.949962615966797
    5. ':' → logprob: -4.199962615966797
    6. '        ' → logprob: -4.949962615966797
    7. '=' → logprob: -5.074962615966797
    8. '0' → logprob: -5.449962615966797
    9. ' :' → logprob: -5.949962615966797
    10. ' !=' → logprob: -6.199962615966797

Token 25: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6972102522850037
    2. ' if' → logprob: -1.1972103118896484
    3. '           ' → logprob: -2.1972103118896484
    4. ' continue' → logprob: -3.0722103118896484
    5. ' ' → logprob: -3.9472103118896484
    6. '       ' → logprob: -5.197210311889648
    7. 'if' → logprob: -5.822210311889648
    8. ' for' → logprob: -6.072210311889648
    9. '            ' → logprob: -6.322210311889648
    10. ' ' → logprob: -6.822210311889648

Token 26: 'a' (ID: 64)
  Prédit: ' testimony'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' testimony' → logprob: -1.1282939910888672
    2. ')' → logprob: -1.7532939910888672
    3. '           ' → logprob: -2.003293991088867
    4. '               ' → logprob: -2.003293991088867
    5. ' not' → logprob: -2.628293991088867
    6. ' n' → logprob: -3.753293991088867
    7. ' test' → logprob: -3.878293991088867
    8. 'n' → logprob: -4.003293991088867
    9. 'test' → logprob: -4.128293991088867
    10. ' len' → logprob: -4.503293991088867

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013662820681929588
    2. '[idx' → logprob: -4.763662815093994
    3. ')' → logprob: -6.263662815093994
    4. ' ,' → logprob: -6.388662815093994
    5. ',b' → logprob: -7.388662815093994
    6. 's' → logprob: -8.763663291931152
    7. ',)' → logprob: -9.013663291931152
    8. 'idx' → logprob: -9.263663291931152
    9. 'ss' → logprob: -9.638663291931152
    10. '),' → logprob: -10.138663291931152

Token 28: ' x' (ID: 1215)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34212180972099304
    2. 'b' → logprob: -1.7171218395233154
    3. ' t' → logprob: -3.2171218395233154
    4. ' x' → logprob: -3.3421218395233154
    5. 'x' → logprob: -4.967121601104736
    6. ' s' → logprob: -5.342121601104736
    7. ' w' → logprob: -5.467121601104736
    8. 't' → logprob: -5.842121601104736
    9. ')' → logprob: -5.842121601104736
    10. '   ' → logprob: -6.342121601104736

Token 29: '_list' (ID: 4162)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008284482173621655
    2. ')=' → logprob: -7.500828266143799
    3. ',' → logprob: -8.375828742980957
    4. 'a' → logprob: -11.125828742980957
    5. ' )' → logprob: -11.375828742980957
    6. '),' → logprob: -12.750828742980957
    7. 's' → logprob: -12.750828742980957
    8. 'l' → logprob: -13.250828742980957
    9. 't' → logprob: -13.500828742980957
    10. 'i' → logprob: -13.625828742980957

Token 30: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004860842600464821
    2. ')=' → logprob: -7.750485897064209
    3. ' )' → logprob: -10.000486373901367
    4. ',' → logprob: -12.625486373901367
    5. '   ' → logprob: -12.875486373901367
    6. '    ' → logprob: -13.750486373901367
    7. ' ' → logprob: -14.125486373901367
    8. '),' → logprob: -14.875486373901367
    9. '）' → logprob: -15.250486373901367
    10. '       ' → logprob: -15.250486373901367

Token 31: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5903095006942749
    2. ' b' → logprob: -1.590309500694275
    3. ')' → logprob: -2.8403096199035645
    4. 'y' → logprob: -2.8403096199035645
    5. 'b' → logprob: -3.2153096199035645
    6. '_' → logprob: -4.4653096199035645
    7. ' ' → logprob: -4.7153096199035645
    8. ' _' → logprob: -4.9653096199035645
    9. ' v' → logprob: -5.0903096199035645
    10. ' w' → logprob: -5.0903096199035645

Token 32: '_list' (ID: 4162)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008737838827073574
    2. '_list' → logprob: -5.008738040924072
    3. ')=' → logprob: -6.758738040924072
    4. '_' → logprob: -7.758738040924072
    5. ')_' → logprob: -8.383737564086914
    6. 's' → logprob: -10.008737564086914
    7. ',' → logprob: -10.258737564086914
    8. '_)' → logprob: -10.508737564086914
    9. 'ield' → logprob: -11.008737564086914
    10. 'a' → logprob: -11.133737564086914

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005035852082073689
    2. ')=' → logprob: -7.6255035400390625
    3. ' )' → logprob: -11.750503540039062
    4. ',' → logprob: -12.750503540039062
    5. '),' → logprob: -13.625503540039062
    6. '   ' → logprob: -14.000503540039062
    7. '       ' → logprob: -14.250503540039062
    8. '           ' → logprob: -14.500503540039062
    9. '）' → logprob: -15.500503540039062
    10. '=' → logprob: -15.500503540039062

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893440127372742
    2. '=' → logprob: -2.57893443107605
    3. ')' → logprob: -11.328934669494629
    4. '           ' → logprob: -11.578934669494629
    5. ' ' → logprob: -11.953934669494629
    6. ',' → logprob: -12.078934669494629
    7. '            ' → logprob: -12.328934669494629
    8. '               ' → logprob: -13.203934669494629
    9. '    ' → logprob: -14.078934669494629
    10. '                ' → logprob: -14.078934669494629

Token 35: ' testimony' (ID: 54378)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.10291463881731033
    2. ' testimony' → logprob: -2.352914571762085
    3. ' test' → logprob: -6.227914810180664
    4. '   ' → logprob: -8.352914810180664
    5. '(test' → logprob: -8.852914810180664
    6. 'testimonial' → logprob: -9.352914810180664
    7. ' testimon' → logprob: -9.977914810180664
    8. 'tuple' → logprob: -10.102914810180664
    9. ' ' → logprob: -10.352914810180664
    10. '_test' → logprob: -10.977914810180664

Token 36: '[idx' (ID: 25582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05749603360891342
    2. '[idx' → logprob: -3.5574960708618164
    3. '[h' → logprob: -4.682496070861816
    4. '[token' → logprob: -5.307496070861816
    5. '[user' → logprob: -6.182496070861816
    6. '[a' → logprob: -6.432496070861816
    7. '           ' → logprob: -6.557496070861816
    8. '       ' → logprob: -7.057496070861816
    9. '   ' → logprob: -7.557496070861816
    10. '```' → logprob: -7.557496070861816

Token 37: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0333951972424984
    2. ')
' → logprob: -3.533395290374756
    3. '           ' → logprob: -5.908395290374756
    4. ']' → logprob: -7.908395290374756
    5. '）' → logprob: -9.033394813537598
    6. '               ' → logprob: -9.283394813537598
    7. ')
' → logprob: -9.283394813537598
    8. '       ' → logprob: -9.283394813537598
    9. '<|end|>' → logprob: -10.283394813537598
    10. ' )' → logprob: -10.408394813537598

Token 38: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011039923876523972
    2. '
' → logprob: -5.636039733886719
    3. '<|end|>' → logprob: -5.886039733886719
    4. '       ' → logprob: -6.136039733886719
    5. '            
' → logprob: -7.636039733886719
    6. '<|end|>' → logprob: -7.886039733886719
    7. '  
' → logprob: -8.136039733886719
    8. '   ' → logprob: -8.261039733886719
    9. '               ' → logprob: -8.386039733886719
    10. ' ' → logprob: -8.886039733886719

Token 39: ' cnt' (ID: 27340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01757827028632164
    2. '<|end|>' → logprob: -5.267578125
    3. '       ' → logprob: -5.392578125
    4. ' ' → logprob: -6.517578125
    5. ' for' → logprob: -6.892578125
    6. '   ' → logprob: -7.267578125
    7. ' if' → logprob: -7.267578125
    8. '
' → logprob: -7.267578125
    9. '\n' → logprob: -7.267578125
    10. '               ' → logprob: -7.392578125

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12028238922357559
    2. '=' → logprob: -2.6202824115753174
    3. ' +=' → logprob: -3.3702824115753174
    4. '_' → logprob: -6.370282173156738
    5. 'inue' → logprob: -6.745282173156738
    6. '+=' → logprob: -6.870282173156738
    7. ' ' → logprob: -7.370282173156738
    8. ' +' → logprob: -7.995282173156738
    9. '+' → logprob: -8.745282173156738
    10. 'a' → logprob: -9.370282173156738

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056196607649326324
    2. ' ' → logprob: -2.931196689605713
    3. 'len' → logprob: -7.556196689605713
    4. ' len' → logprob: -8.181196212768555
    5. 'x' → logprob: -8.806196212768555
    6. ' x' → logprob: -8.931196212768555
    7. '1' → logprob: -9.681196212768555
    8. 'sum' → logprob: -10.306196212768555
    9. ' [' → logprob: -10.431196212768555
    10. ' sum' → logprob: -10.556196212768555

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008586675859987736
    2. 'len' → logprob: -5.258586883544922
    3. ' ' → logprob: -6.508586883544922
    4. 'x' → logprob: -7.508586883544922
    5. 'sum' → logprob: -7.508586883544922
    6. '1' → logprob: -7.883586883544922
    7. '[' → logprob: -9.258586883544922
    8. 'a' → logprob: -9.258586883544922
    9. ' len' → logprob: -9.508586883544922
    10. ' sum' → logprob: -10.883586883544922

Token 43: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14898152649402618
    2. '<|end|>' → logprob: -2.1489815711975098
    3. '<|end|>' → logprob: -5.27398157119751
    4. '       ' → logprob: -5.77398157119751
    5. '               ' → logprob: -5.77398157119751
    6. '		' → logprob: -6.27398157119751
    7. '            ' → logprob: -6.64898157119751
    8. ' ' → logprob: -6.77398157119751
    9. '          ' → logprob: -6.89898157119751
    10. ' for' → logprob: -7.27398157119751

Token 44: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1132902279496193
    2. '<|end|>' → logprob: -2.488290309906006
    3. '               ' → logprob: -5.488290309906006
    4. '       ' → logprob: -5.613290309906006
    5. '            ' → logprob: -5.738290309906006
    6. '<|end|>' → logprob: -5.988290309906006
    7. '		' → logprob: -6.238290309906006
    8. ' ' → logprob: -6.363290309906006
    9. ' for' → logprob: -6.488290309906006
    10. '          ' → logprob: -6.738290309906006

Token 45: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2535289227962494
    2. 'for' → logprob: -2.0035288333892822
    3. '           ' → logprob: -2.8785288333892822
    4. ' ' → logprob: -4.503529071807861
    5. '       ' → logprob: -5.378529071807861
    6. '	for' → logprob: -5.503529071807861
    7. '   ' → logprob: -5.878529071807861
    8. '<|end|>' → logprob: -5.878529071807861
    9. '    ' → logprob: -6.503529071807861
    10. ' x' → logprob: -7.128529071807861

Token 46: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4531306326389313
    2. 'x' → logprob: -1.5781306028366089
    3. ' cnt' → logprob: -2.4531307220458984
    4. ' x' → logprob: -2.9531307220458984
    5. 'y' → logprob: -5.078130722045898
    6. 'len' → logprob: -5.953130722045898
    7. '(cnt' → logprob: -6.078130722045898
    8. ' y' → logprob: -6.078130722045898
    9. '   ' → logprob: -6.953130722045898
    10. 'a' → logprob: -6.953130722045898

Token 47: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03782801330089569
    2. '<' → logprob: -3.412827968597412
    3. '<len' → logprob: -5.662827968597412
    4. ' <=' → logprob: -7.912827968597412
    5. '<n' → logprob: -9.03782844543457
    6. ' ' → logprob: -9.28782844543457
    7. '<=' → logprob: -9.53782844543457
    8. '<count' → logprob: -11.78782844543457
    9. '<size' → logprob: -12.28782844543457
    10. '<num' → logprob: -12.66282844543457

Token 48: ' a' (ID: 261)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10757157951593399
    2. ' len' → logprob: -2.357571601867676
    3. 'a' → logprob: -5.732571601867676
    4. 'x' → logprob: -6.232571601867676
    5. ' x' → logprob: -7.607571601867676
    6. ' a' → logprob: -7.732571601867676
    7. ' ' → logprob: -8.232571601867676
    8. '   ' → logprob: -8.857571601867676
    9. '10' → logprob: -8.857571601867676
    10. '3' → logprob: -9.357571601867676

Token 49: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.062014736235141754
    2. 'and' → logprob: -2.8120148181915283
    3. ':' → logprob: -10.93701457977295
    4. '           ' → logprob: -11.18701457977295
    5. ' ' → logprob: -11.81201457977295
    6. ':
' → logprob: -13.18701457977295
    7. '               ' → logprob: -13.18701457977295
    8. '   ' → logprob: -13.43701457977295
    9. '            ' → logprob: -14.68701457977295
    10. '	and' → logprob: -14.68701457977295

Token 50: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7198816537857056
    2. '<|end|>' → logprob: -1.0948816537857056
    3. '               ' → logprob: -1.9698816537857056
    4. '<|end|>' → logprob: -3.844881534576416
    5. '           ' → logprob: -5.094881534576416
    6. 'and' → logprob: -5.469881534576416
    7. ' ' → logprob: -6.344881534576416
    8. ':' → logprob: -6.844881534576416
    9. ':
' → logprob: -6.969881534576416
    10. '   ' → logprob: -7.344881534576416

Token 51: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7810450792312622
    2. '               ' → logprob: -1.1560450792312622
    3. ' x' → logprob: -1.6560450792312622
    4. ' ' → logprob: -4.906044960021973
    5. '           ' → logprob: -5.031044960021973
    6. '                   ' → logprob: -5.406044960021973
    7. 'if' → logprob: -5.531044960021973
    8. '                ' → logprob: -5.781044960021973
    9. 'x' (adapté à ' x') → logprob: -5.906044960021973
    10. ' idx' → logprob: -6.031044960021973

Token 52: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0853346586227417
    2. ' =' → logprob: -1.0853346586227417
    3. '_list' → logprob: -1.4603346586227417
    4. '=' → logprob: -2.9603347778320312
    5. '   ' → logprob: -4.460334777832031
    6. ' ,' → logprob: -4.960334777832031
    7. '_idx' → logprob: -5.460334777832031
    8. ',_' → logprob: -5.585334777832031
    9. '_,' → logprob: -5.960334777832031
    10. '_' → logprob: -6.460334777832031

Token 53: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22544477880001068
    2. 'x' → logprob: -1.6004447937011719
    3. '	x' → logprob: -11.600444793701172
    4. ' ' → logprob: -11.850444793701172
    5. ' y' → logprob: -12.600444793701172
    6. '0' → logprob: -12.975444793701172
    7. '    ' → logprob: -13.475444793701172
    8. '(x' → logprob: -13.662944793701172
    9. ' ' → logprob: -13.850444793701172
    10. 'y' → logprob: -13.912944793701172

Token 54: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.735893965815194e-05
    2. ' _' → logprob: -12.000017166137695
    3. '_' → logprob: -13.125017166137695
    4. '_lst' → logprob: -13.250017166137695
    5. '[' → logprob: -13.875017166137695
    6. 'List' → logprob: -14.000017166137695
    7. 'x' → logprob: -14.250017166137695
    8. '_lists' → logprob: -14.375017166137695
    9. 's' → logprob: -14.750017166137695
    10. '       ' → logprob: -14.875017166137695

Token 55: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0003943304473068565
    2. '               ' → logprob: -8.375393867492676
    3. '           ' → logprob: -9.875393867492676
    4. '       ' → logprob: -10.250393867492676
    5. ' [' → logprob: -10.750393867492676
    6. '[count' → logprob: -11.000393867492676
    7. '[' → logprob: -11.500393867492676
    8. 'cnt' → logprob: -11.750393867492676
    9. '   ' → logprob: -12.125393867492676
    10. '                   ' → logprob: -13.000393867492676

Token 56: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.22871652245521545
    2. ']' → logprob: -1.603716492652893
    3. ']
' → logprob: -6.6037163734436035
    4. '               ' → logprob: -6.9787163734436035
    5. ']

' → logprob: -7.8537163734436035
    6. ')
' → logprob: -8.728716850280762
    7. ')' → logprob: -8.853716850280762
    8. ' ]
' → logprob: -8.978716850280762
    9. ' ]' → logprob: -9.978716850280762
    10. '           ' → logprob: -9.978716850280762

Token 57: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030267365276813507
    2. ' if' → logprob: -4.280267238616943
    3. '
' → logprob: -4.655267238616943
    4. 'if' → logprob: -6.530267238616943
    5. '       ' → logprob: -6.905267238616943
    6. ',' → logprob: -7.030267238616943
    7. '           ' → logprob: -7.530267238616943
    8. ' y' → logprob: -7.780267238616943
    9. '<|end|>' → logprob: -7.905267238616943
    10. '                ' → logprob: -8.030267715454102

Token 58: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12981924414634705
    2. ' if' → logprob: -2.50481915473938
    3. 'y' (adapté à ' y') → logprob: -3.50481915473938
    4. 'if' → logprob: -5.129819393157959
    5. '               ' → logprob: -5.629819393157959
    6. ' ' → logprob: -9.0048189163208
    7. '                   ' → logprob: -9.1298189163208
    8. '                ' → logprob: -9.7548189163208
    9. ' for' → logprob: -10.3798189163208
    10. ' status' → logprob: -11.0048189163208

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21203359961509705
    2. '=' → logprob: -1.7120336294174194
    3. '_list' → logprob: -5.212033748626709
    4. '_' → logprob: -5.337033748626709
    5. ' _' → logprob: -8.83703327178955
    6. '=_' → logprob: -9.46203327178955
    7. ' ' → logprob: -10.96203327178955
    8. ',' → logprob: -10.96203327178955
    9. '        ' → logprob: -11.71203327178955
    10. '    ' → logprob: -11.96203327178955

Token 60: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759409070014954
    2. 'y' → logprob: -0.8259409070014954
    3. ' ' → logprob: -13.95094108581543
    4. '   ' → logprob: -15.70094108581543
    5. '	y' → logprob: -15.95094108581543
    6. '    ' → logprob: -16.07594108581543
    7. '  ' → logprob: -16.45094108581543
    8. '1' → logprob: -16.95094108581543
    9. 'x' → logprob: -17.32594108581543
    10. '           ' → logprob: -18.07594108581543

Token 61: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.5776860184123507e-06
    2. ' _' → logprob: -14.00000286102295
    3. '[cnt' → logprob: -14.37500286102295
    4. '_' → logprob: -15.12500286102295
    5. 'list' → logprob: -15.25000286102295
    6. '[' → logprob: -15.50000286102295
    7. 'List' → logprob: -16.625001907348633
    8. '[_' → logprob: -16.625001907348633
    9. 'cnt' → logprob: -16.625001907348633
    10. '       ' → logprob: -17.375001907348633

Token 62: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -2.1888679839321412e-05
    2. 'cnt' → logprob: -11.500021934509277
    3. '[' → logprob: -12.375021934509277
    4. '[count' → logprob: -12.875021934509277
    5. '[counter' → logprob: -13.375021934509277
    6. '(cnt' → logprob: -14.125021934509277
    7. '[curr' → logprob: -14.750021934509277
    8. '	cnt' → logprob: -14.750021934509277
    9. '       ' → logprob: -14.875021934509277
    10. '```' → logprob: -15.250021934509277

Token 63: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2875572144985199
    2. ']
' → logprob: -1.4125572443008423
    3. ']
' → logprob: -5.787557125091553
    4. '               ' → logprob: -6.537557125091553
    5. ')' → logprob: -7.162557125091553
    6. '           ' → logprob: -8.287557601928711
    7. ']

' → logprob: -8.412557601928711
    8. ')
' → logprob: -8.537557601928711
    9. ']==' → logprob: -9.287557601928711
    10. ')]' → logprob: -9.662557601928711

Token 64: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017839208885561675
    2. '                
' → logprob: -9.000178337097168
    3. '<|end|>' → logprob: -10.625178337097168
    4. ' if' → logprob: -11.375178337097168
    5. '<|end|>' → logprob: -12.500178337097168
    6. ',' → logprob: -12.500178337097168
    7. '
' → logprob: -12.875178337097168
    8. '           ' → logprob: -13.250178337097168
    9. '  
' → logprob: -14.125178337097168
    10. '              ' → logprob: -14.375178337097168

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15688365697860718
    2. '               ' → logprob: -2.406883716583252
    3. 'if' (adapté à ' if') → logprob: -2.906883716583252
    4. ' for' → logprob: -8.656883239746094
    5. ' ' → logprob: -9.406883239746094
    6. ' cnt' → logprob: -9.781883239746094
    7. '           ' → logprob: -9.906883239746094
    8. 'cnt' → logprob: -11.531883239746094
    9. '                ' → logprob: -11.656883239746094
    10. '
' → logprob: -11.656883239746094

Token 66: ' ((' (ID: 3536)
  Prédit: ' hypo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hypo' → logprob: -1.1977242231369019
    2. ' (' → logprob: -1.4477242231369019
    3. ' not' → logprob: -1.6977242231369019
    4. ' ((' → logprob: -2.9477243423461914
    5. '(h' → logprob: -3.3227243423461914
    6. '(y' → logprob: -3.4477243423461914
    7. '(not' → logprob: -3.6977243423461914
    8. 'hyp' → logprob: -3.6977243423461914
    9. '((' → logprob: -3.8227243423461914
    10. ' y' → logprob: -3.8227243423461914

Token 67: 'y' (ID: 88)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.43223097920417786
    2. '(h' → logprob: -2.1822309494018555
    3. ' hypo' → logprob: -2.3072309494018555
    4. 'y' → logprob: -3.3072309494018555
    5. ' (' → logprob: -3.5572309494018555
    6. '(y' → logprob: -4.1822309494018555
    7. ' y' → logprob: -4.6822309494018555
    8. '(x' → logprob: -4.9322309494018555
    9. 'not' → logprob: -4.9322309494018555
    10. ' not' → logprob: -5.1822309494018555

Token 68: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8470502495765686
    2. ' ==' → logprob: -1.2220501899719238
    3. ' and' → logprob: -1.4720501899719238
    4. 'and' → logprob: -3.097050189971924
    5. '>>' → logprob: -7.472050189971924
    6. '>' → logprob: -7.972050189971924
    7. ' ' → logprob: -8.222050666809082
    8. '   ' → logprob: -8.722050666809082
    9. ':' → logprob: -9.222050666809082
    10. ')' → logprob: -9.722050666809082

Token 69: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.938808798789978
    2. ' ' → logprob: -2.1888089179992676
    3. '(' → logprob: -2.6888089179992676
    4. '0' → logprob: -2.6888089179992676
    5. ' -' → logprob: -2.8138089179992676
    6. '-' → logprob: -2.9388089179992676
    7. '((' → logprob: -3.4388089179992676
    8. '(h' → logprob: -3.5638089179992676
    9. ' ((' → logprob: -3.5638089179992676
    10. '(y' → logprob: -3.5638089179992676

Token 70: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6209083795547485
    2. '(h' → logprob: -2.370908260345459
    3. '1' → logprob: -2.495908260345459
    4. '(' → logprob: -2.745908260345459
    5. '0' → logprob: -3.120908260345459
    6. '((' → logprob: -3.495908260345459
    7. ' (' → logprob: -3.745908260345459
    8. ' -' → logprob: -3.745908260345459
    9. '(y' → logprob: -3.870908260345459
    10. ' ' → logprob: -4.120908260345459

Token 71: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4062672555446625
    2. ')' → logprob: -1.5312672853469849
    3. 'and' → logprob: -2.1562671661376953
    4. ' )' → logprob: -6.906267166137695
    5. ' ' → logprob: -8.031267166137695
    6. '<<' → logprob: -8.656267166137695
    7. '           ' → logprob: -9.281267166137695
    8. ' or' → logprob: -9.781267166137695
    9. '0' → logprob: -10.656267166137695
    10. '        ' → logprob: -10.781267166137695

Token 72: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2708313465118408
    2. ' (' → logprob: -1.5208313465118408
    3. ' ((' → logprob: -1.6458313465118408
    4. '((' → logprob: -1.8958313465118408
    5. '(h' → logprob: -2.770831346511841
    6. '(not' → logprob: -3.520831346511841
    7. '(((' → logprob: -4.395831108093262
    8. 'not' → logprob: -4.520831108093262
    9. ' ' → logprob: -4.770831108093262
    10. ' hypo' → logprob: -5.145831108093262

Token 73: 'hyp' (ID: 152366)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.9544863104820251
    2. ' not' → logprob: -2.07948637008667
    3. ' (' → logprob: -2.20448637008667
    4. 'hyp' → logprob: -2.20448637008667
    5. 'not' → logprob: -2.32948637008667
    6. '((' → logprob: -2.95448637008667
    7. '(not' → logprob: -3.07948637008667
    8. ' hypo' → logprob: -3.70448637008667
    9. ' ((' → logprob: -3.95448637008667
    10. '(((' → logprob: -5.39198637008667

Token 74: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0007572157774120569
    2. 'yo' → logprob: -8.000757217407227
    3. '&' → logprob: -9.500757217407227
    4. 'y' → logprob: -9.625757217407227
    5. 'ot' → logprob: -10.250757217407227
    6. ')' → logprob: -10.250757217407227
    7. '&o' → logprob: -10.625757217407227
    8. '           ' → logprob: -10.875757217407227
    9. '               ' → logprob: -11.000757217407227
    10. '   ' → logprob: -11.625757217407227

Token 75: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.7928398847579956
    2. '>>' → logprob: -0.9178398847579956
    3. '&' → logprob: -2.042840003967285
    4. ' >>' → logprob: -4.042840003967285
    5. ' ' → logprob: -7.667840003967285
    6. '>>&' → logprob: -9.667840003967285
    7. '>>(' → logprob: -9.667840003967285
    8. ')' → logprob: -10.292840003967285
    9. '>>>' → logprob: -10.542840003967285
    10. '   ' → logprob: -10.792840003967285

Token 76: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.923057496547699
    2. '1' → logprob: -1.0480575561523438
    3. '(' → logprob: -2.0480575561523438
    4. ' ' → logprob: -2.1730575561523438
    5. '0' → logprob: -5.173057556152344
    6. ')' → logprob: -5.923057556152344
    7. '```' → logprob: -7.798057556152344
    8. ' )' → logprob: -9.673057556152344
    9. '  ' → logprob: -10.173057556152344
    10. ' not' → logprob: -10.173057556152344

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23401182889938354
    2. ' ' → logprob: -2.4840118885040283
    3. ' (' → logprob: -2.7340118885040283
    4. '(' → logprob: -2.8590118885040283
    5. ')' → logprob: -6.109011650085449
    6. '0' → logprob: -8.35901165008545
    7. '            ' → logprob: -9.73401165008545
    8. '```' → logprob: -9.73401165008545
    9. '   ' → logprob: -10.10901165008545
    10. '    ' → logprob: -10.35901165008545

Token 78: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03496680408716202
    2. ' <<' → logprob: -3.4099667072296143
    3. '<' → logprob: -7.534966945648193
    4. ')' → logprob: -8.909966468811035
    5. '           ' → logprob: -9.159966468811035
    6. '>>' → logprob: -9.409966468811035
    7. '>' → logprob: -9.534966468811035
    8. '                   ' → logprob: -9.909966468811035
    9. '               ' → logprob: -10.034966468811035
    10. ' ' → logprob: -10.159966468811035

Token 79: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004920512437820435
    2. ' x' → logprob: -5.379920482635498
    3. '(x' → logprob: -8.879920959472656
    4. '   ' → logprob: -10.254920959472656
    5. '(' → logprob: -10.504920959472656
    6. ')' → logprob: -10.629920959472656
    7. ' ' → logprob: -11.129920959472656
    8. 'y' → logprob: -11.379920959472656
    9. ' (' → logprob: -11.754920959472656
    10. ')x' → logprob: -11.754920959472656

Token 80: ')))' (ID: 15975)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26104968786239624
    2. '))' → logprob: -1.511049747467041
    3. ')))' → logprob: -5.761049747467041
    4. ')==' → logprob: -6.386049747467041
    5. ' )' → logprob: -6.511049747467041
    6. '==' → logprob: -7.386049747467041
    7. ' ==' → logprob: -7.761049747467041
    8. '           ' → logprob: -7.761049747467041
    9. '   ' → logprob: -8.386049270629883
    10. ' ))' → logprob: -8.636049270629883

Token 81: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12648870050907135
    2. '==' → logprob: -2.62648868560791
    3. ' ==' → logprob: -3.75148868560791
    4. ' )' → logprob: -3.87648868560791
    5. ')==' → logprob: -7.12648868560791
    6. ' !=' → logprob: -7.50148868560791
    7. '!=' → logprob: -8.00148868560791
    8. ' or' → logprob: -8.62648868560791
    9. ' and' → logprob: -9.25148868560791
    10. '):' → logprob: -9.87648868560791

Token 82: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09970421344041824
    2. '(y' → logprob: -2.9747042655944824
    3. '                ' → logprob: -4.099704265594482
    4. '                    ' → logprob: -5.099704265594482
    5. '                   ' → logprob: -5.349704265594482
    6. '                  ' → logprob: -5.474704265594482
    7. '              ' → logprob: -6.724704265594482
    8. '               ' → logprob: -6.849704265594482
    9. '                        ' → logprob: -6.849704265594482
    10. ' ' → logprob: -6.974704265594482

Token 83: '                   ' (ID: 699)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11641012877225876
    2. '(y' → logprob: -2.74141001701355
    3. '                ' → logprob: -4.366410255432129
    4. '                    ' → logprob: -4.491410255432129
    5. '                   ' → logprob: -4.741410255432129
    6. '                  ' → logprob: -4.991410255432129
    7. '                       ' → logprob: -6.991410255432129
    8. '              ' → logprob: -7.116410255432129
    9. ' y' → logprob: -7.116410255432129
    10. '                        ' → logprob: -7.241410255432129

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1621561497449875
    2. '(y' → logprob: -1.912156105041504
    3. '(' (adapté à ' (') → logprob: -7.787156105041504
    4. '                    ' → logprob: -8.412156105041504
    5. '   ' → logprob: -8.787156105041504
    6. ' ' → logprob: -8.787156105041504
    7. '  ' → logprob: -8.787156105041504
    8. '                   ' → logprob: -8.912156105041504
    9. '    ' → logprob: -9.037156105041504
    10. ' y' → logprob: -9.162156105041504

Token 85: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5790742039680481
    2. ' y' → logprob: -0.8290742039680481
    3. '(y' → logprob: -6.954074382781982
    4. '                   ' → logprob: -7.829074382781982
    5. '               ' → logprob: -7.954074382781982
    6. '           ' → logprob: -8.204073905944824
    7. ' (' → logprob: -8.329073905944824
    8. '   ' → logprob: -8.704073905944824
    9. ' ' → logprob: -9.204073905944824
    10. '              ' → logprob: -9.829073905944824

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18705016374588013
    2. '==' → logprob: -1.8120501041412354
    3. ' !=' → logprob: -5.1870503425598145
    4. ' ' → logprob: -6.9370503425598145
    5. '!=' → logprob: -7.4370503425598145
    6. ')' → logprob: -9.437049865722656
    7. '=' → logprob: -11.312049865722656
    8. '<|end|>' → logprob: -12.062049865722656
    9. ' =' → logprob: -12.187049865722656
    10. '  ' → logprob: -12.187049865722656

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37565284967422485
    2. ' ' → logprob: -1.25065279006958
    3. '1' → logprob: -3.62565279006958
    4. '2' → logprob: -8.750653266906738
    5. '  ' → logprob: -11.063153266906738
    6. '<|end|>' → logprob: -12.063153266906738
    7. ')' → logprob: -12.125653266906738
    8. '   ' → logprob: -12.500653266906738
    9. '-' → logprob: -12.875653266906738
    10. '    ' → logprob: -13.500653266906738

Token 88: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06707101315259933
    2. ' ' → logprob: -2.942070960998535
    3. '1' → logprob: -4.442070960998535
    4. '2' → logprob: -8.442070960998535
    5. '-' → logprob: -10.379570960998535
    6. '   ' → logprob: -10.754570960998535
    7. '  ' → logprob: -10.754570960998535
    8. ')' → logprob: -11.942070960998535
    9. ' -' → logprob: -12.629570960998535
    10. '    ' → logprob: -12.692070960998535

Token 89: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07919181883335114
    2. 'and' → logprob: -2.5791919231414795
    3. ' ' → logprob: -9.204192161560059
    4. '                ' → logprob: -9.954192161560059
    5. '                   ' → logprob: -10.204192161560059
    6. ')' → logprob: -10.329192161560059
    7. '                    ' → logprob: -10.579192161560059
    8. '                       ' → logprob: -11.079192161560059
    9. '               ' → logprob: -11.829192161560059
    10. '                     ' → logprob: -12.454192161560059

Token 90: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08981014788150787
    2. 'not' → logprob: -2.7148101329803467
    3. '(not' → logprob: -4.839810371398926
    4. ' (' → logprob: -5.589810371398926
    5. '(h' → logprob: -5.964810371398926
    6. '                   ' → logprob: -6.214810371398926
    7. '               ' → logprob: -6.464810371398926
    8. '                       ' → logprob: -8.339810371398926
    9. '              ' → logprob: -8.464810371398926
    10. '                ' → logprob: -8.589810371398926

Token 91: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20433637499809265
    2. '(h' → logprob: -1.704336404800415
    3. ' ((' → logprob: -6.579336166381836
    4. ' ' → logprob: -6.829336166381836
    5. '(' → logprob: -8.704336166381836
    6. ' hyp' → logprob: -9.204336166381836
    7. '((' → logprob: -9.204336166381836
    8. '  ' → logprob: -10.454336166381836
    9. 'hyp' → logprob: -10.579336166381836
    10. ' hypo' → logprob: -11.829336166381836

Token 92: 'hyp' (ID: 152366)
  Prédit: 'hyp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.8241379857063293
    2. '(h' → logprob: -1.3241379261016846
    3. ' hypo' → logprob: -2.0741379261016846
    4. ' (' → logprob: -2.3241379261016846
    5. ' hyp' → logprob: -2.8241379261016846
    6. 'hy' → logprob: -5.949138164520264
    7. ' ' → logprob: -6.074138164520264
    8. ')' → logprob: -6.574138164520264
    9. 'h' → logprob: -6.699138164520264
    10. ' hypothesis' → logprob: -6.761638164520264

Token 93: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00018339496455155313
    2. 'yo' → logprob: -8.75018310546875
    3. '&' → logprob: -11.25018310546875
    4. 'u' → logprob: -13.00018310546875
    5. '&o' → logprob: -13.00018310546875
    6. ''o' → logprob: -13.50018310546875
    7. '(o' → logprob: -14.12518310546875
    8. 'о' → logprob: -14.37518310546875
    9. 'ho' → logprob: -14.37518310546875
    10. '_o' → logprob: -14.50018310546875

Token 94: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.14288504421710968
    2. '&' → logprob: -2.0178849697113037
    3. ' ' → logprob: -8.517885208129883
    4. '&amp' → logprob: -11.892885208129883
    5. ' ' → logprob: -14.017885208129883
    6. '＆' → logprob: -14.642885208129883
    7. '  ' → logprob: -14.767885208129883
    8. '   ' → logprob: -15.017885208129883
    9. '&nbsp' → logprob: -15.392885208129883
    10. '&(' → logprob: -15.642885208129883

Token 95: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0701143890619278
    2. '(' → logprob: -2.6951143741607666
    3. ' ' → logprob: -8.820114135742188
    4. ')' → logprob: -10.695114135742188
    5. '  ' → logprob: -13.320114135742188
    6. '<|end|>' → logprob: -13.695114135742188
    7. '1' → logprob: -13.820114135742188
    8. '0' → logprob: -14.070114135742188
    9. '    ' → logprob: -14.570114135742188
    10. ' ((' → logprob: -14.945114135742188

Token 96: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29079750180244446
    2. '1' → logprob: -1.540797472000122
    3. ' (' → logprob: -3.290797472000122
    4. ' ' → logprob: -7.165797710418701
    5. '   ' → logprob: -10.290797233581543
    6. '  ' → logprob: -11.040797233581543
    7. '               ' → logprob: -11.165797233581543
    8. '                   ' → logprob: -11.290797233581543
    9. '           ' → logprob: -11.540797233581543
    10. ')' → logprob: -12.290797233581543

Token 97: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.04313929006457329
    2. ' <<' → logprob: -3.1681392192840576
    3. '           ' → logprob: -9.543139457702637
    4. '1' → logprob: -10.793139457702637
    5. '<' → logprob: -11.293139457702637
    6. '   ' → logprob: -11.543139457702637
    7. ' ' → logprob: -11.668139457702637
    8. '>>' → logprob: -12.543139457702637
    9. '       ' → logprob: -13.043139457702637
    10. '               ' → logprob: -13.168139457702637

Token 98: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007607816252857447
    2. ' x' → logprob: -4.882607936859131
    3. ')x' → logprob: -14.132607460021973
    4. ')' → logprob: -15.132607460021973
    5. '(x' → logprob: -15.257607460021973
    6. ' ' → logprob: -16.25760841369629
    7. '	x' → logprob: -16.38260841369629
    8. '   ' → logprob: -16.38260841369629
    9. '                   ' → logprob: -17.13260841369629
    10. '           ' → logprob: -17.63260841369629

Token 99: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2298210710287094
    2. '))))' → logprob: -1.6048210859298706
    3. ' ))' → logprob: -6.47982120513916
    4. ')))' → logprob: -6.60482120513916
    5. ')' → logprob: -7.60482120513916
    6. ')):' → logprob: -7.97982120513916
    7. '))))

' → logprob: -8.72982120513916
    8. '))))
' → logprob: -9.47982120513916
    9. ')))))
' → logprob: -9.97982120513916
    10. ')))),' → logprob: -10.10482120513916

Token 100: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.2399924397468567
    2. ')):' → logprob: -1.614992380142212
    3. '):
' → logprob: -5.239992618560791
    4. '))' → logprob: -5.614992618560791
    5. '):' → logprob: -6.239992618560791
    6. ')):
' → logprob: -6.364992618560791
    7. '               ' → logprob: -7.239992618560791
    8. '                   ' → logprob: -7.364992618560791
    9. '           ' → logprob: -8.614992141723633
    10. ')' → logprob: -9.114992141723633

Token 101: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021288490388542414
    2. '                       ' → logprob: -7.127129077911377
    3. '               ' → logprob: -8.002128601074219
    4. ' return' → logprob: -8.252128601074219
    5. '
' → logprob: -8.502128601074219
    6. ':
' → logprob: -9.002128601074219
    7. '                    
' → logprob: -9.127128601074219
    8. ':' → logprob: -9.877128601074219
    9. '                    ' → logprob: -10.127128601074219
    10. '\n' → logprob: -10.502128601074219

Token 102: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12322527170181274
    2. '                   ' → logprob: -2.623225212097168
    3. 'return' (adapté à ' return') → logprob: -3.248225212097168
    4. '               ' → logprob: -6.123225212097168
    5. '                       ' → logprob: -6.373225212097168
    6. ' break' → logprob: -8.748225212097168
    7. ' ' → logprob: -8.873225212097168
    8. '                ' → logprob: -9.498225212097168
    9. '                    ' → logprob: -9.748225212097168
    10. '   ' → logprob: -9.748225212097168

Token 103: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2014152854681015
    2. ' False' → logprob: -1.7014153003692627
    3. ' ' → logprob: -13.951415061950684
    4. '(False' → logprob: -14.951415061950684
    5. 'True' → logprob: -15.451415061950684
    6. '0' → logprob: -15.576415061950684
    7. 'None' → logprob: -15.826415061950684
    8. ' True' → logprob: -16.201416015625
    9. ' None' → logprob: -16.951416015625
    10. '   ' → logprob: -17.076416015625

Token 104: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013216588646173477
    2. '
' → logprob: -5.013216495513916
    3. '                
' → logprob: -5.388216495513916
    4. '<|end|>' → logprob: -7.513216495513916
    5. '\n' → logprob: -7.763216495513916
    6. '                ' → logprob: -8.763216972351074
    7. '
' → logprob: -9.013216972351074
    8. '              ' → logprob: -9.263216972351074
    9. '                   ' → logprob: -9.388216972351074
    10. '           ' → logprob: -9.388216972351074

Token 105: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00024084746837615967
    2. '
' → logprob: -9.37524127960205
    3. '                
' → logprob: -9.62524127960205
    4. '           ' → logprob: -10.25024127960205
    5. '                   ' → logprob: -10.37524127960205
    6. '              ' → logprob: -11.62524127960205
    7. '                ' → logprob: -12.75024127960205
    8. '                    
' → logprob: -13.37524127960205
    9. '<|end|>' → logprob: -13.50024127960205
    10. '			' → logprob: -13.75024127960205

Token 106: ' cnt' (ID: 27340)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028052396373823285
    2. '           ' → logprob: -8.250280380249023
    3. '                   ' → logprob: -11.375280380249023
    4. '	           ' → logprob: -13.250280380249023
    5. 'return' → logprob: -13.875280380249023
    6. '
' → logprob: -14.125280380249023
    7. '                
' → logprob: -14.250280380249023
    8. '              ' → logprob: -14.250280380249023
    9. '			' → logprob: -14.500280380249023
    10. '			   ' → logprob: -14.750280380249023

Token 107: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1624515950679779
    2. '+=' → logprob: -1.9124516248703003
    3. '+' → logprob: -6.16245174407959
    4. ' +' → logprob: -9.53745174407959
    5. '=' → logprob: -10.28745174407959
    6. '<|end|>' → logprob: -12.91245174407959
    7. '++' → logprob: -13.03745174407959
    8. ' =' → logprob: -13.16245174407959
    9. ' ' → logprob: -13.41245174407959
    10. '   ' → logprob: -13.91245174407959

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. '           ' → logprob: -17.125019073486328
    5. '               ' → logprob: -18.500019073486328
    6. '                   ' → logprob: -19.125019073486328
    7. '       ' → logprob: -19.750019073486328
    8. '１' → logprob: -20.125019073486328
    9. '```' → logprob: -20.250019073486328
    10. '                       ' → logprob: -20.875019073486328

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. '１' → logprob: -20.25
    5. '```' → logprob: -20.625
    6. '           ' → logprob: -21.625
    7. '  ' → logprob: -21.75
    8. '       ' → logprob: -22.125
    9. 'a' → logprob: -22.875
    10. '0' → logprob: -22.875

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0814763307571411
    2. '
' → logprob: -1.2064763307571411
    3. '\n' → logprob: -1.5814763307571411
    4. '  
' → logprob: -3.0814762115478516
    5. '    
' → logprob: -3.4564762115478516
    6. ' 
' → logprob: -3.7064762115478516
    7. '<|end|>' → logprob: -3.8314762115478516
    8. '' → logprob: -5.081476211547852
    9. ')' → logprob: -5.081476211547852
    10. 'newline' → logprob: -5.581476211547852

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028833334799855947
    2. ' return' → logprob: -6.877883434295654
    3. '
' → logprob: -7.252883434295654
    4. '<|end|>' → logprob: -8.127882957458496
    5. '       ' → logprob: -8.377882957458496
    6. '    
' → logprob: -8.502882957458496
    7. 'return' → logprob: -8.877882957458496
    8. '	return' → logprob: -9.127882957458496
    9. ')' → logprob: -9.752882957458496
    10. '\n' → logprob: -10.127882957458496

Token 112: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1796181201934814
    2. ' return' → logprob: -1.8046181201934814
    3. ' 
' → logprob: -1.8046181201934814
    4. '\n' → logprob: -2.1796181201934814
    5. '
' → logprob: -2.8046181201934814
    6. '   ' → logprob: -3.0546181201934814
    7. 'return' (adapté à ' return') → logprob: -3.4296181201934814
    8. '  
' → logprob: -3.6796181201934814
    9. '<|end|>' → logprob: -3.6796181201934814
    10. ')' → logprob: -4.304617881774902

Token 113: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07888989895582199
    2. 'True' → logprob: -2.578889846801758
    3. '(True' → logprob: -16.453889846801758
    4. ' ' → logprob: -17.828889846801758
    5. 'False' → logprob: -20.203889846801758
    6. ' None' → logprob: -20.578889846801758
    7. ' ' → logprob: -20.703889846801758
    8. '=True' → logprob: -20.828889846801758
    9. ' False' → logprob: -21.078889846801758
    10. '   ' → logprob: -21.578889846801758

Token 114: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6667319536209106
    2. '<|end|>' → logprob: -0.7917319536209106
    3. ' 
' → logprob: -4.291731834411621
    4. ')' → logprob: -5.541731834411621
    5. '   ' → logprob: -5.541731834411621
    6. '
' → logprob: -5.666731834411621
    7. '\n' → logprob: -6.166731834411621
    8. '_' → logprob: -6.666731834411621
    9. '<|end|>' → logprob: -6.916731834411621
    10. ':' → logprob: -7.416731834411621

Token 115: 'n' (ID: 77)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4089350998401642
    2. ':' → logprob: -2.033935070037842
    3. '_' → logprob: -2.783935070037842
    4. ' 
' → logprob: -3.158935070037842
    5. '<|end|>' → logprob: -3.158935070037842
    6. ')' → logprob: -3.658935070037842
    7. '\n' → logprob: -4.783935070037842
    8. '   ' → logprob: -5.158935070037842
    9. '
' → logprob: -5.158935070037842
    10. ' :' → logprob: -6.658935070037842

Token 116: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6133776903152466
    2. ' =' → logprob: -1.3633776903152466
    3. ',' → logprob: -1.8633776903152466
    4. '=' → logprob: -3.488377571105957
    5. ' ,' → logprob: -4.863377571105957
    6. '<|end|>' → logprob: -5.363377571105957
    7. ')' → logprob: -6.238377571105957
    8. '  ' → logprob: -7.488377571105957
    9. ' >' → logprob: -8.113377571105957
    10. ' )' → logprob: -8.113377571105957

Token 117: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4222033619880676
    2. ' ' → logprob: -1.5472033023834229
    3. 'int' → logprob: -2.297203302383423
    4. '5' → logprob: -3.797203302383423
    5. '3' → logprob: -5.297203540802002
    6. '4' → logprob: -6.672203540802002
    7. '0' → logprob: -6.797203540802002
    8. '10' → logprob: -7.422203540802002
    9. '7' → logprob: -7.547203540802002
    10. '6' → logprob: -11.172203063964844

Token 118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3136971890926361
    2. '(' → logprob: -1.3136972188949585
    3. 'input' → logprob: -8.18869686126709
    4. '()' → logprob: -9.06369686126709
    5. ' (' → logprob: -10.56369686126709
    6. '(
' → logprob: -11.68869686126709
    7. ' input' → logprob: -13.18869686126709
    8. '('' → logprob: -13.31369686126709
    9. '=input' → logprob: -13.56369686126709
    10. ' ' → logprob: -14.56369686126709

Token 119: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06409730762243271
    2. '()' → logprob: -2.8140974044799805
    3. ')' → logprob: -6.1890974044799805
    4. '(' → logprob: -10.43909740447998
    5. '())
' → logprob: -10.56409740447998
    6. '()
' → logprob: -11.56409740447998
    7. '().' → logprob: -12.81409740447998
    8. ' ())' → logprob: -13.56409740447998
    9. '()),' → logprob: -13.81409740447998
    10. '();)' → logprob: -13.93909740447998

Token 120: 'from' (ID: 2845)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -3.2020991056924686e-05
    2. '```' → logprob: -12.375032424926758
    3. '
' → logprob: -12.500032424926758
    4. ' testimony' → logprob: -13.000032424926758
    5. 'result' → logprob: -13.250032424926758
    6. 'n' → logprob: -13.375032424926758
    7. 'truth' → logprob: -13.375032424926758
    8. 'testimonial' → logprob: -13.375032424926758
    9. '_test' → logprob: -13.500032424926758
    10. 'tests' → logprob: -13.625032424926758

Token 121: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.7659971117973328
    2. 'sys' → logprob: -1.2659971714019775
    3. ' sys' → logprob: -1.7659971714019775
    4. ' collections' → logprob: -2.8909971714019775
    5. 'math' → logprob: -4.265996932983398
    6. ' math' → logprob: -5.015996932983398
    7. ' itertools' → logprob: -5.265996932983398
    8. 'copy' → logprob: -8.140996932983398
    9. 'typing' → logprob: -8.390996932983398
    10. ' typing' → logprob: -8.765996932983398

Token 122: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.026601465418934822
    2. ' import' → logprob: -3.651601552963257
    3. '.Counter' → logprob: -8.276601791381836
    4. 'port' → logprob: -12.026601791381836
    5. '_import' → logprob: -12.151601791381836
    6. '	import' → logprob: -12.151601791381836
    7. '.' → logprob: -12.401601791381836
    8. '```' → logprob: -12.651601791381836
    9. 'Counter' → logprob: -12.776601791381836
    10. ' defaultdict' → logprob: -13.526601791381836

Token 123: ' named' (ID: 11484)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5964715480804443
    2. ' defaultdict' → logprob: -0.8464715480804443
    3. 'deque' → logprob: -4.096471786499023
    4. ' deque' → logprob: -5.721471786499023
    5. ' default' → logprob: -8.221471786499023
    6. 'named' → logprob: -9.346471786499023
    7. ' named' → logprob: -9.971471786499023
    8. 'collections' → logprob: -12.471471786499023
    9. ' itertools' → logprob: -12.971471786499023
    10. '_default' → logprob: -13.346471786499023

Token 124: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -4.320199877838604e-07
    2. 'tu' → logprob: -14.875
    3. ' tuple' → logprob: -17.625
    4. 'import' → logprob: -17.75
    5. '_tuple' → logprob: -17.75
    6. 'Tuple' → logprob: -18.375
    7. 'array' → logprob: -19.75
    8. 't' → logprob: -20.625
    9. 'token' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 125: '
' (ID: 198)
  Prédit: ' Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Test' → logprob: -1.179147481918335
    2. 'Person' → logprob: -1.304147481918335
    3. 'Test' → logprob: -1.679147481918335
    4. ' Person' → logprob: -1.929147481918335
    5. '<|end|>' → logprob: -3.429147481918335
    6. '_' → logprob: -4.554147720336914
    7. ' test' → logprob: -4.679147720336914
    8. 'Named' → logprob: -5.429147720336914
    9. '_Test' → logprob: -5.679147720336914
    10. ' Token' → logprob: -6.179147720336914

Token 126: 'T' (ID: 51)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.8775675892829895
    2. 'Person' → logprob: -1.0025675296783447
    3. ' Test' → logprob: -2.2525675296783447
    4. ' Person' → logprob: -2.3775675296783447
    5. 'Hyp' → logprob: -5.877567768096924
    6. 'Token' → logprob: -6.377567768096924
    7. ' test' → logprob: -6.377567768096924
    8. 'Member' → logprob: -6.752567768096924
    9. 'Statement' → logprob: -7.252567768096924
    10. ' testimony' → logprob: -7.252567768096924

Token 127: ' =' (ID: 314)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.011218646541237831
    2. 'oken' → logprob: -5.261218547821045
    3. 'es' → logprob: -6.636218547821045
    4. 'e' → logprob: -7.011218547821045
    5. 'Test' → logprob: -7.261218547821045
    6. 'test' → logprob: -7.886218547821045
    7. 'esting' → logprob: -8.136219024658203
    8. ' =' → logprob: -8.386219024658203
    9. 'ok' → logprob: -8.511219024658203
    10. 'ests' → logprob: -8.636219024658203

Token 128: ' named' (ID: 11484)
  Prédit: 'named'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'named' → logprob: -0.004906516056507826
    2. 'int' → logprob: -5.87990665435791
    3. ' named' → logprob: -6.37990665435791
    4. 'collections' → logprob: -8.87990665435791
    5. '[]' → logprob: -9.62990665435791
    6. 'n' → logprob: -10.25490665435791
    7. 'tuple' → logprob: -10.50490665435791
    8. '   ' → logprob: -10.75490665435791
    9. '[int' → logprob: -10.87990665435791
    10. '[n' → logprob: -11.50490665435791

Token 129: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -2.5107177862082608e-05
    2. 'uple' → logprob: -11.250024795532227
    3. 'tu' → logprob: -11.500024795532227
    4. 't' → logprob: -13.875024795532227
    5. ' tuple' → logprob: -14.250024795532227
    6. 'Tuple' → logprob: -15.000024795532227
    7. '_tuple' → logprob: -16.625024795532227
    8. 'token' → logprob: -18.750024795532227
    9. 'type' → logprob: -18.750024795532227
    10. 'tle' → logprob: -19.500024795532227

Token 130: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0018984097987413406
    2. '(' → logprob: -6.626898288726807
    3. ''' → logprob: -7.626898288726807
    4. '('_' → logprob: -10.376898765563965
    5. ''T' → logprob: -10.876898765563965
    6. '<|end|>' → logprob: -11.501898765563965
    7. '("' → logprob: -12.001898765563965
    8. '(
' → logprob: -12.626898765563965
    9. '>('' → logprob: -12.751898765563965
    10. ''user' → logprob: -12.751898765563965

Token 131: 'T' (ID: 51)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.024410108104348183
    2. ''t' → logprob: -4.524410247802734
    3. 'test' → logprob: -5.274410247802734
    4. ''T' → logprob: -5.399410247802734
    5. ''' → logprob: -5.774410247802734
    6. ' testimony' → logprob: -8.399410247802734
    7. '_test' → logprob: -9.274410247802734
    8. '_Test' → logprob: -10.024410247802734
    9. '"' → logprob: -10.774410247802734
    10. ' Test' → logprob: -10.899410247802734

Token 132: '',' (ID: 787)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0003597760514821857
    2. 'esting' → logprob: -9.875359535217285
    3. 'e' → logprob: -10.125359535217285
    4. 'es' → logprob: -10.250359535217285
    5. ''' → logprob: -10.250359535217285
    6. 'esty' → logprob: -10.625359535217285
    7. '_est' → logprob: -10.625359535217285
    8. 'ext' → logprob: -11.000359535217285
    9. '('' → logprob: -11.125359535217285
    10. '')' → logprob: -11.125359535217285

Token 133: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.36671945452690125
    2. ''t' → logprob: -1.2417194843292236
    3. ''' → logprob: -4.1167192459106445
    4. ''type' → logprob: -7.8667192459106445
    5. ''x' → logprob: -8.116719245910645
    6. ''name' → logprob: -8.366719245910645
    7. ''a' → logprob: -8.491719245910645
    8. ''C' → logprob: -8.991719245910645
    9. ''user' → logprob: -9.616719245910645
    10. '['' → logprob: -9.866719245910645

Token 134: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02658289484679699
    2. 'x' → logprob: -3.776582956314087
    3. 'idx' → logprob: -6.151582717895508
    4. 'test' → logprob: -8.401582717895508
    5. 'cnt' → logprob: -8.526582717895508
    6. 'num' → logprob: -8.901582717895508
    7. 'name' → logprob: -9.151582717895508
    8. 'n' → logprob: -9.276582717895508
    9. '_a' → logprob: -9.401582717895508
    10. 'count' → logprob: -10.026582717895508

Token 135: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0021220690105110407
    2. ',' → logprob: -6.627121925354004
    3. ',x' → logprob: -7.252121925354004
    4. 'x' → logprob: -9.502121925354004
    5. ' ,' → logprob: -11.377121925354004
    6. ' ' → logprob: -14.127121925354004
    7. '	x' → logprob: -15.627121925354004
    8. '_x' → logprob: -17.12712287902832
    9. ' _' → logprob: -17.50212287902832
    10. ' idx' → logprob: -17.50212287902832

Token 136: ' y' (ID: 342)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00044890373828820884
    2. 'list' → logprob: -8.125449180603027
    3. '_' → logprob: -9.750449180603027
    4. 's' → logprob: -10.625449180603027
    5. '_lst' → logprob: -10.625449180603027
    6. 'List' → logprob: -11.250449180603027
    7. ' y' → logprob: -11.875449180603027
    8. ' _' → logprob: -12.000449180603027
    9. '_lists' → logprob: -12.125449180603027
    10. ' list' → logprob: -12.625449180603027

Token 137: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.34257522225379944
    2. '_list' → logprob: -1.467575192451477
    3. ')' → logprob: -2.8425753116607666
    4. '_lists' → logprob: -7.7175750732421875
    5. 'list' → logprob: -7.8425750732421875
    6. '_' → logprob: -9.092575073242188
    7. 'List' → logprob: -9.467575073242188
    8. '')
' → logprob: -9.717575073242188
    9. ' ')' → logprob: -9.842575073242188
    10. ' )' → logprob: -10.217575073242188

Token 138: 'test' (ID: 3190)
  Prédit: 'test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.03795449808239937
    2. 'hyp' → logprob: -3.412954568862915
    3. 't' → logprob: -6.537954330444336
    4. 'for' → logprob: -7.037954330444336
    5. 'x' → logprob: -7.912954330444336
    6. 's' → logprob: -8.412954330444336
    7. 'tests' → logprob: -8.662954330444336
    8. 'result' → logprob: -8.787954330444336
    9. 'h' → logprob: -9.287954330444336
    10. 'testimonial' → logprob: -9.412954330444336

Token 139: 'imony' (ID: 40357)
  Prédit: 'imony'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imony' → logprob: -0.0009077682043425739
    2. '   ' → logprob: -8.125907897949219
    3. 'im' → logprob: -8.750907897949219
    4. 'imon' → logprob: -9.250907897949219
    5. 'emony' → logprob: -9.250907897949219
    6. '=' → logprob: -9.875907897949219
    7. 'i' → logprob: -10.125907897949219
    8. '```' → logprob: -10.625907897949219
    9. ' =' → logprob: -10.750907897949219
    10. '_' → logprob: -11.375907897949219

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14743520319461823
    2. '=' → logprob: -2.022435188293457
    3. 's' → logprob: -5.397435188293457
    4. '=[]' → logprob: -9.022435188293457
    5. '[' → logprob: -10.897435188293457
    6. ',' → logprob: -11.272435188293457
    7. '_' → logprob: -11.397435188293457
    8. '_list' → logprob: -11.772435188293457
    9. 'es' → logprob: -11.772435188293457
    10. '[]' → logprob: -11.897435188293457

Token 141: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0809779167175293
    2. '[' → logprob: -2.5809779167175293
    3. ' []' → logprob: -6.330977916717529
    4. '[n' → logprob: -8.330978393554688
    5. ' [' → logprob: -10.080978393554688
    6. '[T' → logprob: -11.705978393554688
    7. '[]
' → logprob: -12.955978393554688
    8. '[],' → logprob: -13.205978393554688
    9. '[a' → logprob: -13.580978393554688
    10. '[]}' → logprob: -13.830978393554688

Token 142: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027695266529917717
    2. '()' → logprob: -3.9026951789855957
    3. '(range' → logprob: -5.277695178985596
    4. '(map' → logprob: -6.652695178985596
    5. '([]' → logprob: -8.152695655822754
    6. '(
' → logprob: -9.527695655822754
    7. '(T' → logprob: -10.277695655822754
    8. '(int' → logprob: -10.652695655822754
    9. '(()' → logprob: -10.652695655822754
    10. '(`' → logprob: -10.777695655822754

Token 143: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.8889261304575484e-06
    2. ' for' → logprob: -12.500003814697266
    3. '
' → logprob: -16.875003814697266
    4. 'n' → logprob: -17.875003814697266
    5. 'i' → logprob: -19.625003814697266
    6. '```' → logprob: -19.625003814697266
    7. '	for' → logprob: -21.375003814697266
    8. 'while' → logprob: -22.125003814697266
    9. '    
' → logprob: -22.500003814697266
    10. '_' → logprob: -22.625003814697266

Token 144: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0026406990364193916
    2. ' _' → logprob: -6.252640724182129
    3. '_i' → logprob: -7.627640724182129
    4. 'i' → logprob: -8.752640724182129
    5. ' i' → logprob: -9.627640724182129
    6. '_idx' → logprob: -14.877640724182129
    7. '_=' → logprob: -15.377640724182129
    8. ' ' → logprob: -16.002639770507812
    9. 'idx' → logprob: -16.502639770507812
    10. '_range' → logprob: -16.502639770507812

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026749571785330772
    2. 'in' → logprob: -3.651749610900879
    3. ' ' → logprob: -8.151749610900879
    4. 'n' → logprob: -9.401749610900879
    5. '_' → logprob: -10.151749610900879
    6. ' _' → logprob: -11.401749610900879
    7. '  ' → logprob: -11.901749610900879
    8. ' n' → logprob: -11.901749610900879
    9. '_in' → logprob: -12.026749610900879
    10. '	in' → logprob: -12.526749610900879

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.87692928314209
    4. '  ' → logprob: -17.126928329467773
    5. '	range' → logprob: -17.251928329467773
    6. '   ' → logprob: -17.876928329467773
    7. '(range' → logprob: -18.001928329467773
    8. 'ran' → logprob: -18.626928329467773
    9. 'r' → logprob: -18.626928329467773
    10. 'rang' → logprob: -18.876928329467773

Token 147: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004343645414337516
    2. '(' → logprob: -7.750434398651123
    3. 'n' → logprob: -13.250433921813965
    4. ' n' → logprob: -13.875433921813965
    5. '(
' → logprob: -14.500433921813965
    6. ' (' → logprob: -14.625433921813965
    7. '(range' → logprob: -18.00043487548828
    8. '	n' → logprob: -18.12543487548828
    9. '(

' → logprob: -18.87543487548828
    10. '<n' → logprob: -19.75043487548828

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38757720589637756
    2. '):
' → logprob: -1.1375771760940552
    3. ')' → logprob: -7.637577056884766
    4. ':' → logprob: -9.512577056884766
    5. '):
' → logprob: -9.637577056884766
    6. ' ):' → logprob: -10.262577056884766
    7. ':
' → logprob: -11.137577056884766
    8. '+' → logprob: -11.512577056884766
    9. '   ' → logprob: -11.512577056884766
    10. ' ):
' → logprob: -11.637577056884766

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002759345108643174
    2. ' a' → logprob: -6.5027594566345215
    3. ' line' → logprob: -7.8777594566345215
    4. 'a' → logprob: -8.002758979797363
    5. ' input' → logprob: -8.502758979797363
    6. ' s' → logprob: -8.752758979797363
    7. '    
' → logprob: -10.002758979797363
    8. '   ' → logprob: -10.377758979797363
    9. ' t' → logprob: -11.252758979797363
    10. 'input' → logprob: -11.502758979797363

Token 150: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.020306650549173355
    2. ' a' → logprob: -4.145306587219238
    3. '   ' → logprob: -5.645306587219238
    4. '_a' → logprob: -8.395306587219238
    5. 'line' → logprob: -9.020306587219238
    6. 'input' → logprob: -9.770306587219238
    7. ' line' → logprob: -9.895306587219238
    8. 'A' → logprob: -10.020306587219238
    9. 'data' → logprob: -10.270306587219238
    10. 'inputs' → logprob: -10.645306587219238

Token 151: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2440394163131714
    2. ' =' → logprob: -2.119039535522461
    3. '=' → logprob: -2.369039535522461
    4. ' ,' → logprob: -6.119039535522461
    5. '=int' → logprob: -7.869039535522461
    6. ' ' → logprob: -9.619039535522461
    7. ',int' → logprob: -10.369039535522461
    8. ',a' → logprob: -10.369039535522461
    9. '=input' → logprob: -10.619039535522461
    10. ',input' → logprob: -10.619039535522461

Token 152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750952497124672
    2. ' int' → logprob: -3.5297510623931885
    3. '0' → logprob: -15.27975082397461
    4. ' ' → logprob: -16.02975082397461
    5. '[int' → logprob: -16.40475082397461
    6. '   ' → logprob: -17.27975082397461
    7. '=int' → logprob: -17.40475082397461
    8. '<int' → logprob: -17.65475082397461
    9. '(int' → logprob: -17.65475082397461
    10. 'n' → logprob: -18.27975082397461

Token 153: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008647545240819454
    2. '(' → logprob: -4.758647441864014
    3. 'input' → logprob: -11.133647918701172
    4. '(
' → logprob: -11.383647918701172
    5. '()' → logprob: -12.258647918701172
    6. ' (' → logprob: -14.008647918701172
    7. ' input' → logprob: -14.383647918701172
    8. '(

' → logprob: -14.883647918701172
    9. '=input' → logprob: -15.633647918701172
    10. ',input' → logprob: -16.008647918701172

Token 154: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0035056343767791986
    2. '())
' → logprob: -5.878505706787109
    3. ')' → logprob: -7.753505706787109
    4. '()' → logprob: -8.25350570678711
    5. '())
' → logprob: -12.37850570678711
    6. ' ())' → logprob: -13.12850570678711
    7. '())

' → logprob: -13.50350570678711
    8. '()
' → logprob: -13.50350570678711
    9. '(' → logprob: -13.87850570678711
    10. '().' → logprob: -14.75350570678711

Token 155: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3508564531803131
    2. '   ' → logprob: -1.3508564233779907
    3. ' x' → logprob: -3.3508565425872803
    4. '	x' → logprob: -6.850856304168701
    5. ' ' → logprob: -8.72585678100586
    6. ',x' → logprob: -8.85085678100586
    7. '  ' → logprob: -8.97585678100586
    8. '
' → logprob: -9.35085678100586
    9. ',' → logprob: -9.60085678100586
    10. '_x' → logprob: -10.35085678100586

Token 156: ' xs' (ID: 26642)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05362045392394066
    2. ' x' → logprob: -3.3036203384399414
    3. '   ' → logprob: -4.178620338439941
    4. '       ' → logprob: -10.053620338439941
    5. '	x' → logprob: -10.178620338439941
    6. ' ' → logprob: -10.803620338439941
    7. '_x' → logprob: -10.803620338439941
    8. '_' → logprob: -12.303620338439941
    9. 'test' → logprob: -12.803620338439941
    10. '  ' → logprob: -13.053620338439941

Token 157: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46800023317337036
    2. '=' → logprob: -1.4680001735687256
    3. ',' → logprob: -1.9680001735687256
    4. '_list' → logprob: -6.093000411987305
    5. ' ,' → logprob: -7.718000411987305
    6. '_' → logprob: -7.843000411987305
    7. '=[]' → logprob: -8.343000411987305
    8. '_,' → logprob: -8.843000411987305
    9. '=[]
' → logprob: -10.468000411987305
    10. ',_' → logprob: -10.593000411987305

Token 158: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.004882907960563898
    2. ' ys' → logprob: -5.6298828125
    3. '_' → logprob: -7.5048828125
    4. '=' → logprob: -7.8798828125
    5. ' =' → logprob: -8.7548828125
    6. 'Ys' → logprob: -9.6298828125
    7. ' ' → logprob: -10.7548828125
    8. '*' → logprob: -11.0048828125
    9. '=[]' → logprob: -11.3798828125
    10. '_=' → logprob: -11.5048828125

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021314769983292
    2. ' =' → logprob: -2.350213050842285
    3. ',' → logprob: -12.600213050842285
    4. '=input' → logprob: -13.100213050842285
    5. '＝' → logprob: -15.350213050842285
    6. '_=' → logprob: -16.1002140045166
    7. '=line' → logprob: -16.1002140045166
    8. ' ' → logprob: -16.4752140045166
    9. '=

' → logprob: -16.6002140045166
    10. 'input' → logprob: -16.7252140045166

Token 160: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.07009726762771606
    2. 'list' → logprob: -3.5700972080230713
    3. ' [],' → logprob: -4.19509744644165
    4. 'map' → logprob: -4.19509744644165
    5. 'input' → logprob: -5.07009744644165
    6. '[' → logprob: -6.57009744644165
    7. '[]' → logprob: -6.82009744644165
    8. ' list' → logprob: -8.695096969604492
    9. ' map' → logprob: -8.695096969604492
    10. '([],' → logprob: -9.195096969604492

Token 161: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31363341212272644
    2. ' []' → logprob: -1.3136334419250488
    3. '[]
' → logprob: -8.06363296508789
    4. ' []
' → logprob: -10.06363296508789
    5. '[])' → logprob: -12.68863296508789
    6. '[],' → logprob: -12.81363296508789
    7. '[]

' → logprob: -12.81363296508789
    8. '[]>' → logprob: -13.43863296508789
    9. '=[]' → logprob: -13.68863296508789
    10. ' []
' → logprob: -14.06363296508789

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2205413579940796
    2. 'for' → logprob: -1.8455413579940796
    3. ' for' → logprob: -3.220541477203369
    4. '	for' → logprob: -10.970541000366211
    5. '
' → logprob: -11.095541000366211
    6. '    
' → logprob: -11.845541000366211
    7. '<|end|>' → logprob: -14.220541000366211
    8. ' ' → logprob: -14.345541000366211
    9. ' 
' → logprob: -14.845541000366211
    10. '  ' → logprob: -15.470541000366211

Token 163: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.660315895918757e-05
    2. ' for' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.375076293945312
    4. '
' → logprob: -15.625076293945312
    5. 'while' → logprob: -17.250076293945312
    6. '    
' → logprob: -18.125076293945312
    7. '	for' → logprob: -18.750076293945312
    8. ' 
' → logprob: -19.500076293945312
    9. ' ' → logprob: -20.375076293945312
    10. '```' → logprob: -20.625076293945312

Token 164: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.5185909271240234
    2. '(xs' → logprob: -2.1435909271240234
    3. 'for' → logprob: -2.2685909271240234
    4. ' xs' → logprob: -2.2685909271240234
    5. '
' → logprob: -4.518590927124023
    6. 'x' → logprob: -4.518590927124023
    7. '(x' → logprob: -4.643590927124023
    8. '   ' → logprob: -4.893590927124023
    9. ' for' → logprob: -4.893590927124023
    10. ' (' → logprob: -5.143590927124023

Token 165: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03304602950811386
    2. '.extend' → logprob: -4.158046245574951
    3. ',' → logprob: -4.658046245574951
    4. 'append' → logprob: -5.408046245574951
    5. '.' → logprob: -7.158046245574951
    6. '=' → logprob: -7.533046245574951
    7. ']' → logprob: -7.908046245574951
    8. ' +=' → logprob: -8.283045768737793
    9. '].' → logprob: -9.033045768737793
    10. ' =' → logprob: -9.033045768737793

Token 166: '((' (ID: 2054)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.39100149273872375
    2. '(*' → logprob: -1.1410014629364014
    3. '(*(' → logprob: -6.1410017013549805
    4. '(tuple' → logprob: -6.3910017013549805
    5. '(' → logprob: -8.89100170135498
    6. 'int' → logprob: -10.01600170135498
    7. '((' → logprob: -10.26600170135498
    8. '(list' → logprob: -11.39100170135498
    9. '(x' → logprob: -11.39100170135498
    10. '*' → logprob: -11.39100170135498

Token 167: 'lambda' (ID: 35280)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012802376877516508
    2. ' int' → logprob: -7.501280307769775
    3. ')' → logprob: -7.876280307769775
    4. '(int' → logprob: -9.251279830932617
    5. '*' → logprob: -9.376279830932617
    6. 'lambda' → logprob: -10.001279830932617
    7. '   ' → logprob: -10.626279830932617
    8. '
' → logprob: -11.001279830932617
    9. '0' → logprob: -11.501279830932617
    10. 'x' → logprob: -11.626279830932617

Token 168: ' _' (ID: 1175)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9152238368988037
    2. 'z' → logprob: -1.5402238368988037
    3. 'int' → logprob: -2.4152238368988037
    4. 's' → logprob: -2.9152238368988037
    5. 'k' → logprob: -3.0402238368988037
    6. ' x' → logprob: -3.9152238368988037
    7. 'a' → logprob: -4.040224075317383
    8. 'lambda' → logprob: -4.040224075317383
    9. ':' → logprob: -4.165224075317383
    10. 'y' → logprob: -4.290224075317383

Token 169: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48300158977508545
    2. 'z' → logprob: -1.8580015897750854
    3. 'y' → logprob: -3.108001708984375
    4. 's' → logprob: -3.108001708984375
    5. 'a' → logprob: -3.608001708984375
    6. 'i' → logprob: -3.983001708984375
    7. 'k' → logprob: -4.108001708984375
    8. 't' → logprob: -4.358001708984375
    9. 'j' → logprob: -4.733001708984375
    10. '_:' → logprob: -4.733001708984375

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18249379098415375
    2. ':int' → logprob: -1.932493805885315
    3. ':x' → logprob: -4.682493686676025
    4. ' :' → logprob: -4.807493686676025
    5. ':_' → logprob: -6.057493686676025
    6. 'int' → logprob: -6.557493686676025
    7. 'x' → logprob: -8.057494163513184
    8. ':list' → logprob: -8.182494163513184
    9. ':i' → logprob: -9.932494163513184
    10. '   ' → logprob: -10.432494163513184

Token 171: ' _' (ID: 1175)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.025312699377536774
    2. ' int' → logprob: -4.025312900543213
    3. '_x' → logprob: -5.275312900543213
    4. 'lambda' → logprob: -7.025312900543213
    5. '(int' → logprob: -7.650312900543213
    6. '_int' → logprob: -8.400312423706055
    7. 'x' → logprob: -9.150312423706055
    8. ' lambda' → logprob: -9.275312423706055
    9. '_lambda' → logprob: -9.900312423706055
    10. ' ' → logprob: -10.400312423706055

Token 172: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.049308862537145615
    2. 'int' → logprob: -3.0493087768554688
    3. '_x' → logprob: -7.799308776855469
    4. 'lambda' → logprob: -8.924308776855469
    5. ' x' → logprob: -9.799308776855469
    6. ' int' → logprob: -9.924308776855469
    7. ':int' → logprob: -11.424308776855469
    8. '
' → logprob: -11.674308776855469
    9. '(int' → logprob: -11.674308776855469
    10. '[int' → logprob: -11.924308776855469

Token 173: ' -' (ID: 533)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.036116473376750946
    2. 'int' → logprob: -4.786116600036621
    3. ':int' → logprob: -4.786116600036621
    4. '[int' → logprob: -4.786116600036621
    5. ':' → logprob: -5.411116600036621
    6. '=int' → logprob: -6.661116600036621
    7. ')' → logprob: -6.786116600036621
    8. ')(' → logprob: -7.161116600036621
    9. '   ' → logprob: -7.661116600036621
    10. ' (' → logprob: -7.661116600036621

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018200866878032684
    2. ' ' → logprob: -4.018200874328613
    3. 'int' → logprob: -10.893200874328613
    4. '0' → logprob: -11.018200874328613
    5. '   ' → logprob: -12.268200874328613
    6. ' int' → logprob: -12.893200874328613
    7. '           ' → logprob: -13.518200874328613
    8. ')' → logprob: -14.143200874328613
    9. '  ' → logprob: -14.143200874328613
    10. '```' → logprob: -14.393200874328613

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017362285871058702
    2. ' ' → logprob: -6.376736164093018
    3. 'int' → logprob: -10.626736640930176
    4. '0' → logprob: -12.126736640930176
    5. '   ' → logprob: -14.251736640930176
    6. ' int' → logprob: -14.376736640930176
    7. '2' → logprob: -14.626736640930176
    8. '(' → logprob: -14.626736640930176
    9. '(int' → logprob: -14.751736640930176
    10. ' (' → logprob: -15.376736640930176

Token 176: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.0013680962147191167
    2. '))(' → logprob: -7.126368045806885
    3. ')' → logprob: -8.376368522644043
    4. ' )(' → logprob: -8.376368522644043
    5. '))' → logprob: -10.251368522644043
    6. ')(__' → logprob: -10.251368522644043
    7. ')((' → logprob: -11.501368522644043
    8. ')(_' → logprob: -12.001368522644043
    9. '   ' → logprob: -12.501368522644043
    10. '(int' → logprob: -12.501368522644043

Token 177: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005363515811040998
    2. '(int' → logprob: -7.7505364418029785
    3. ' int' → logprob: -9.37553596496582
    4. ')' → logprob: -11.25053596496582
    5. '[int' → logprob: -12.62553596496582
    6. '
' → logprob: -13.37553596496582
    7. '  ' → logprob: -14.62553596496582
    8. ' ' → logprob: -14.62553596496582
    9. '   ' → logprob: -14.75053596496582
    10. ':int' → logprob: -15.00053596496582

Token 178: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005627274047583342
    2. 'input' → logprob: -5.255627155303955
    3. '(' → logprob: -8.130627632141113
    4. ' input' → logprob: -9.880627632141113
    5. '(
' → logprob: -10.755627632141113
    6. ')' → logprob: -11.255627632141113
    7. ' (' → logprob: -12.255627632141113
    8. ',input' → logprob: -12.505627632141113
    9. ' ' → logprob: -13.005627632141113
    10. ')(' → logprob: -14.130627632141113

Token 179: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028423991054296494
    2. '())))' → logprob: -3.778424024581909
    3. '))' → logprob: -6.40342378616333
    4. '())' → logprob: -6.52842378616333
    5. '()' → logprob: -6.77842378616333
    6. ')))' → logprob: -7.52842378616333
    7. '()))
' → logprob: -8.528424263000488
    8. '())))
' → logprob: -9.653424263000488
    9. '()));' → logprob: -10.528424263000488
    10. '(' → logprob: -10.778424263000488

Token 180: 'split' (ID: 13627)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2668221592903137
    2. 'strip' → logprob: -1.516822099685669
    3. '))' → logprob: -4.766822338104248
    4. '())))' → logprob: -5.641822338104248
    5. '()' → logprob: -6.766822338104248
    6. '().' → logprob: -7.891822338104248
    7. 'rstrip' → logprob: -8.26682186126709
    8. ')))' → logprob: -8.64182186126709
    9. 'split' → logprob: -8.76682186126709
    10. ' ' → logprob: -9.01682186126709

Token 181: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0005125218303874135
    2. '()' → logprob: -7.625512599945068
    3. '[' → logprob: -10.75051212310791
    4. '()))' → logprob: -13.75051212310791
    5. '())))' → logprob: -14.12551212310791
    6. '()
' → logprob: -14.62551212310791
    7. '())))
' → logprob: -15.12551212310791
    8. '(' → logprob: -15.75051212310791
    9. '().' → logprob: -15.87551212310791
    10. '()(' → logprob: -16.875513076782227

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005501718260347843
    2. '[' → logprob: -8.250550270080566
    3. '()[' → logprob: -8.500550270080566
    4. '(' → logprob: -9.750550270080566
    5. '()' → logprob: -11.000550270080566
    6. ' ' → logprob: -11.875550270080566
    7. '1' → logprob: -13.625550270080566
    8. ')' → logprob: -15.000550270080566
    9. '   ' → logprob: -15.250550270080566
    10. '()]' → logprob: -15.250550270080566

Token 183: '])))' (ID: 196150)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0020561658311635256
    2. '))' → logprob: -6.752056121826172
    3. ' ' → logprob: -7.377056121826172
    4. ')' → logprob: -8.627056121826172
    5. ')))
' → logprob: -10.627056121826172
    6. '))))' → logprob: -10.877056121826172
    7. '())))' → logprob: -11.002056121826172
    8. '   ' → logprob: -12.752056121826172
    9. ')));' → logprob: -13.002056121826172
    10. '')))' → logprob: -13.127056121826172

Token 184: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09549697488546371
    2. 'for' → logprob: -3.345496892929077
    3. ',' → logprob: -4.095497131347656
    4. ' for' → logprob: -4.220497131347656
    5. '       ' → logprob: -5.345497131347656
    6. '   ' → logprob: -5.720497131347656
    7. '           ' → logprob: -6.095497131347656
    8. '<|end|>' → logprob: -6.220497131347656
    9. '
' → logprob: -6.345497131347656
    10. '),' → logprob: -6.595497131347656

Token 185: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.09030625224113464
    2. ' ys' → logprob: -2.465306282043457
    3. '_' → logprob: -7.965306282043457
    4. '(' → logprob: -7.965306282043457
    5. 'None' → logprob: -8.465306282043457
    6. ' None' → logprob: -8.590306282043457
    7. ' (' → logprob: -8.965306282043457
    8. 'xs' → logprob: -10.590306282043457
    9. ' ' → logprob: -10.840306282043457
    10. 'True' → logprob: -11.215306282043457

Token 186: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.259079363080673e-05
    2. ' .' → logprob: -12.250012397766113
    3. '.' → logprob: -12.375012397766113
    4. 'append' → logprob: -12.625012397766113
    5. '.extend' → logprob: -16.12501335144043
    6. 'def' → logprob: -18.62501335144043
    7. '(int' → logprob: -18.75001335144043
    8. '().' → logprob: -19.00001335144043
    9. '(input' → logprob: -19.25001335144043
    10. ').' → logprob: -19.37501335144043

Token 187: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06649652123451233
    2. '((' → logprob: -2.8164966106414795
    3. '(lambda' → logprob: -5.9414963722229
    4. 'int' → logprob: -6.9414963722229
    5. '(' → logprob: -7.1914963722229
    6. ' (' → logprob: -8.941496849060059
    7. '(
' → logprob: -11.441496849060059
    8. 'lambda' → logprob: -12.566496849060059
    9. '(((' → logprob: -12.691496849060059
    10. '(input' → logprob: -12.816496849060059

Token 188: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -12.000009536743164
    3. 'input' → logprob: -13.000009536743164
    4. ' (' → logprob: -15.125009536743164
    5. '(int' → logprob: -15.750009536743164
    6. '((' → logprob: -16.500009536743164
    7. ' input' → logprob: -17.375009536743164
    8. '=input' → logprob: -18.000009536743164
    9. ',input' → logprob: -18.250009536743164
    10. ' ' → logprob: -18.875009536743164

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5913488864898682
    2. '(input' → logprob: -0.8413488864898682
    3. '()' → logprob: -4.341348648071289
    4. 'input' → logprob: -6.591348648071289
    5. '.input' → logprob: -8.591348648071289
    6. '(' → logprob: -8.591348648071289
    7. '.split' → logprob: -8.716348648071289
    8. '())' → logprob: -9.091348648071289
    9. '(.' → logprob: -10.091348648071289
    10. '()))' → logprob: -10.216348648071289

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020830852736253291
    2. '.split' → logprob: -8.500207901000977
    3. '().' → logprob: -12.750207901000977
    4. '(split' → logprob: -13.875207901000977
    5. 'spl' → logprob: -14.750207901000977
    6. ' split' → logprob: -15.000207901000977
    7. 'input' → logprob: -15.750207901000977
    8. 'strip' → logprob: -16.875207901000977
    9. '(' → logprob: -17.000207901000977
    10. '()' → logprob: -17.000207901000977

Token 191: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0003403495065867901
    2. '()' → logprob: -8.000340461730957
    3. '[' → logprob: -12.500340461730957
    4. '([' → logprob: -14.625340461730957
    5. '().' → logprob: -15.250340461730957
    6. '(' → logprob: -15.625340461730957
    7. '()][' → logprob: -16.50033950805664
    8. '())[' → logprob: -16.50033950805664
    9. '()
' → logprob: -16.75033950805664
    10. ' ()' → logprob: -17.25033950805664

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3530735969543457
    2. '0' → logprob: -1.2280735969543457
    3. '[' → logprob: -5.728073596954346
    4. '()[' → logprob: -6.978073596954346
    5. '-' → logprob: -8.853073120117188
    6. '(' → logprob: -9.103073120117188
    7. '()' → logprob: -9.478073120117188
    8. '```' → logprob: -10.228073120117188
    9. ' ' → logprob: -11.353073120117188
    10. ')' → logprob: -11.478073120117188

Token 193: ']))' (ID: 20259)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.37968748807907104
    2. '))' → logprob: -1.2546875476837158
    3. '[' → logprob: -4.254687309265137
    4. '()' → logprob: -4.879687309265137
    5. '()[' → logprob: -5.629687309265137
    6. '())' → logprob: -5.629687309265137
    7. '()))
' → logprob: -7.504687309265137
    8. ')' → logprob: -7.754687309265137
    9. '0' → logprob: -8.004687309265137
    10. '[]' → logprob: -8.629687309265137

Token 194: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42042699456214905
    2. ')' → logprob: -1.1704269647598267
    3. 'for' → logprob: -3.545427083969116
    4. '()' → logprob: -6.920426845550537
    5. ' )' → logprob: -7.170426845550537
    6. '<|end|>' → logprob: -7.295426845550537
    7. '   ' → logprob: -7.670426845550537
    8. '<|end|>' → logprob: -7.670426845550537
    9. '	for' → logprob: -8.170427322387695
    10. ' ' → logprob: -8.670427322387695

Token 195: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014441548846662045
    2. ' range' → logprob: -4.38944149017334
    3. 'input' → logprob: -6.38944149017334
    4. '_' → logprob: -8.51444149017334
    5. '(range' → logprob: -11.13944149017334
    6. '[' → logprob: -11.51444149017334
    7. ' input' → logprob: -11.63944149017334
    8. '_range' → logprob: -12.51444149017334
    9. '_input' → logprob: -13.01444149017334
    10. ')' → logprob: -13.13944149017334

Token 196: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03645123913884163
    2. '_]' → logprob: -3.9114513397216797
    3. '_x' → logprob: -4.53645133972168
    4. 'x' → logprob: -5.66145133972168
    5. ' _' → logprob: -7.53645133972168
    6. 'range' → logprob: -7.91145133972168
    7. '_)' → logprob: -8.66145133972168
    8. '_=' → logprob: -8.78645133972168
    9. ' in' → logprob: -9.41145133972168
    10. ')]' → logprob: -10.03645133972168

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011829779483377934
    2. ' range' → logprob: -4.511829853057861
    3. '[' → logprob: -7.761829853057861
    4. '_' → logprob: -8.261829376220703
    5. 'xs' → logprob: -9.761829376220703
    6. '(range' → logprob: -11.761829376220703
    7. 'input' → logprob: -11.886829376220703
    8. '(' → logprob: -12.636829376220703
    9. '_range' → logprob: -12.761829376220703
    10. 'test' → logprob: -12.761829376220703

Token 198: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00012094692647224292
    2. ' a' → logprob: -9.250121116638184
    3. '(a' → logprob: -10.625121116638184
    4. '(' → logprob: -15.875121116638184
    5. '   ' → logprob: -16.000120162963867
    6. '_a' → logprob: -16.500120162963867
    7. '	a' → logprob: -17.000120162963867
    8. ' ' → logprob: -17.125120162963867
    9. '  ' → logprob: -17.750120162963867
    10. ' (' → logprob: -17.875120162963867

Token 199: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1815297156572342
    2. ')' → logprob: -1.8065297603607178
    3. ')])' → logprob: -6.556529521942139
    4. '])' → logprob: -8.556529998779297
    5. ' )' → logprob: -9.181529998779297
    6. ']' → logprob: -10.806529998779297
    7. ')],' → logprob: -11.306529998779297
    8. '))' → logprob: -11.556529998779297
    9. '])]' → logprob: -11.681529998779297
    10. '<|end|>' → logprob: -12.931529998779297

Token 200: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' intentionally' (ID: 76052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27360430359840393
    2. '<|end|>' → logprob: -1.6486042737960815
    3. ']' → logprob: -3.898604393005371
    4. ' ' → logprob: -4.523604393005371
    5. '<|end|>' → logprob: -5.398604393005371
    6. ')]' → logprob: -5.648604393005371
    7. ' ]' → logprob: -6.273604393005371
    8. ' )' → logprob: -6.273604393005371
    9. '[' → logprob: -6.273604393005371
    10. '0' → logprob: -7.023604393005371

Token 203: ' weird' (ID: 28783)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012708594091236591
    2. '<|end|>' → logprob: -5.13770866394043
    3. ' )' → logprob: -6.76270866394043
    4. ']' → logprob: -7.26270866394043
    5. '<|end|>' → logprob: -7.26270866394043
    6. '   ' → logprob: -7.76270866394043
    7. ' ' → logprob: -7.76270866394043
    8. '0' → logprob: -7.88770866394043
    9. '#' → logprob: -8.38770866394043
    10. ' continue' → logprob: -8.51270866394043

Token 206: ' doesn't' (ID: 8740)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7150927782058716
    2. ' pass' → logprob: -1.4650927782058716
    3. 'pass' → logprob: -2.340092658996582
    4. 'continue' → logprob: -2.715092658996582
    5. ' not' → logprob: -2.840092658996582
    6. ')' → logprob: -4.215092658996582
    7. ' correct' → logprob: -5.090092658996582
    8. ' True' → logprob: -5.215092658996582
    9. ' continues' → logprob: -5.340092658996582
    10. 'not' → logprob: -5.465092658996582

Token 207: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.5175583958625793
    2. ' work' → logprob: -1.5175583362579346
    3. 'break' → logprob: -2.1425583362579346
    4. ' break' → logprob: -3.5175583362579346
    5. ')' → logprob: -4.642558574676514
    6. 'continue' → logprob: -4.767558574676514
    7. 'cause' → logprob: -6.017558574676514
    8. 'raise' → logprob: -6.142558574676514
    9. 'fail' → logprob: -6.392558574676514
    10. '<|end|>' → logprob: -6.392558574676514

Token 208: '—' (ID: 2322)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: 'so' (ID: 786)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0962060689926147
    2. ' for' → logprob: -1.2212060689926147
    3. ')' → logprob: -1.9712060689926147
    4. '[' → logprob: -2.7212061882019043
    5. '[]' → logprob: -2.9712061882019043
    6. '[
' → logprob: -3.8462061882019043
    7. '<|end|>' → logprob: -4.721206188201904
    8. '#' → logprob: -4.721206188201904
    9. '[n' → logprob: -4.846206188201904
    10. ']' → logprob: -4.846206188201904

Token 211: ' it' (ID: 480)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9283422827720642
    2. 'for' → logprob: -0.9283422827720642
    3. '[
' → logprob: -2.303342342376709
    4. '[' → logprob: -3.178342342376709
    5. ' [' → logprob: -3.303342342376709
    6. ' [
' → logprob: -4.303342342376709
    7. '[a' → logprob: -5.553342342376709
    8. ' xs' → logprob: -5.928342342376709
    9. ' a' → logprob: -6.178342342376709
    10. 'xs' → logprob: -6.428342342376709

Token 212: ' differently' (ID: 36490)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4544445276260376
    2. ' for' → logprob: -1.4544445276260376
    3. ' correctly' → logprob: -4.079444408416748
    4. 'correct' → logprob: -4.079444408416748
    5. 'x' → logprob: -4.329444408416748
    6. 'a' → logprob: -4.454444408416748
    7. ' as' → logprob: -4.454444408416748
    8. '
' → logprob: -4.704444408416748
    9. 'instead' → logprob: -4.954444408416748
    10. ' in' → logprob: -5.329444408416748

Token 213: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02115962654352188
    2. ' for' → logprob: -3.8961596488952637
    3. 'a' → logprob: -8.521159172058105
    4. '   ' → logprob: -8.896159172058105
    5. ':' → logprob: -9.146159172058105
    6. '[' → logprob: -9.896159172058105
    7. ':
' → logprob: -10.771159172058105
    8. '[a' → logprob: -10.771159172058105
    9. 's' → logprob: -11.146159172058105
    10. ']' → logprob: -11.146159172058105

Token 214: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27865663170814514
    2. ' for' → logprob: -1.9036566019058228
    3. '<|end|>' → logprob: -3.2786567211151123
    4. '   ' → logprob: -3.6536567211151123
    5. ']' → logprob: -4.528656482696533
    6. ':' → logprob: -5.153656482696533
    7. ')' → logprob: -5.153656482696533
    8. '[' → logprob: -6.028656482696533
    9. '```' → logprob: -6.403656482696533
    10. '<|end|>' → logprob: -7.153656482696533

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25427576899528503
    2. ' for' → logprob: -1.5042757987976074
    3. '   ' → logprob: -6.254275798797607
    4. 'xs' → logprob: -8.37927532196045
    5. 'test' → logprob: -9.75427532196045
    6. ')' → logprob: -10.50427532196045
    7. 'x' → logprob: -11.00427532196045
    8. 'a' → logprob: -11.00427532196045
    9. '```' → logprob: -11.12927532196045
    10. ' xs' → logprob: -11.12927532196045

Token 216: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13488401472568512
    2. '_j' → logprob: -2.6348841190338135
    3. ' _' → logprob: -3.1348841190338135
    4. 'j' → logprob: -5.259883880615234
    5. ' j' → logprob: -5.384883880615234
    6. '_cnt' → logprob: -8.384883880615234
    7. '_i' → logprob: -8.509883880615234
    8. ' cnt' → logprob: -8.884883880615234
    9. 'cnt' → logprob: -9.009883880615234
    10. '_idx' → logprob: -9.634883880615234

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11937763541936874
    2. 'in' → logprob: -2.619377613067627
    3. '_' → logprob: -3.244377613067627
    4. ' range' → logprob: -8.119378089904785
    5. 'range' → logprob: -8.244378089904785
    6. ' _' → logprob: -9.869378089904785
    7. ' ' → logprob: -10.869378089904785
    8. '_in' → logprob: -10.994378089904785
    9. 'a' → logprob: -11.869378089904785
    10. '_range' → logprob: -12.119378089904785

Token 218: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931692361831665
    2. 'range' → logprob: -0.6931692361831665
    3. '[' → logprob: -12.443169593811035
    4. '_' → logprob: -12.443169593811035
    5. '(range' → logprob: -12.443169593811035
    6. '_range' → logprob: -12.818169593811035
    7. 'a' → logprob: -13.443169593811035
    8. '	range' → logprob: -14.193169593811035
    9. 'ra' → logprob: -14.318169593811035
    10. '0' → logprob: -14.443169593811035

Token 219: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04804874584078789
    2. ' a' → logprob: -3.173048734664917
    3. '(a' → logprob: -5.298048973083496
    4. '_a' → logprob: -11.173048973083496
    5. ' range' → logprob: -12.048048973083496
    6. 'range' → logprob: -12.048048973083496
    7. '   ' → logprob: -12.298048973083496
    8. '(' → logprob: -12.923048973083496
    9. ' ' → logprob: -13.673048973083496
    10. '	a' → logprob: -14.548048973083496

Token 220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.349494993686676
    2. '):' → logprob: -1.8494949340820312
    3. ':' → logprob: -2.4744949340820312
    4. ':
' → logprob: -3.4744949340820312
    5. '   ' → logprob: -4.099494934082031
    6. '       ' → logprob: -5.724494934082031
    7. ')' → logprob: -6.349494934082031
    8. '():
' → logprob: -8.849494934082031
    9. ',' → logprob: -8.974494934082031
    10. ' ' → logprob: -9.349494934082031

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1330966055393219
    2. '       ' → logprob: -2.383096694946289
    3. 'x' → logprob: -4.508096694946289
    4. ' line' → logprob: -4.633096694946289
    5. ' x' → logprob: -5.508096694946289
    6. ' parts' → logprob: -6.758096694946289
    7. ' data' → logprob: -7.008096694946289
    8. 'line' → logprob: -7.008096694946289
    9. ' inputs' → logprob: -7.133096694946289
    10. ' ' → logprob: -7.383096694946289

Token 222: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6376251578330994
    2. '   ' → logprob: -1.2626252174377441
    3. '       ' → logprob: -2.637625217437744
    4. 'line' → logprob: -3.137625217437744
    5. ' x' → logprob: -3.387625217437744
    6. ' line' → logprob: -4.262625217437744
    7. 's' → logprob: -4.512625217437744
    8. 'xy' → logprob: -6.012625217437744
    9. 'data' → logprob: -6.262625217437744
    10. '_x' → logprob: -6.762625217437744

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6975803971290588
    2. '_,' → logprob: -0.8225803971290588
    3. 's' → logprob: -3.697580337524414
    4. '_input' → logprob: -4.322580337524414
    5. '_line' → logprob: -5.197580337524414
    6. 'input' → logprob: -5.572580337524414
    7. ',y' → logprob: -5.947580337524414
    8. '_i' → logprob: -6.197580337524414
    9. '_val' → logprob: -6.197580337524414
    10. ' ,' → logprob: -6.197580337524414

Token 224: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931716203689575
    2. ' y' → logprob: -0.6931716203689575
    3. '_y' → logprob: -11.943171501159668
    4. ' ' → logprob: -12.068171501159668
    5. '   ' → logprob: -12.443171501159668
    6. '_' → logprob: -13.443171501159668
    7. '    ' → logprob: -13.818171501159668
    8. 'x' → logprob: -13.818171501159668
    9. ' _' → logprob: -13.943171501159668
    10. '	y' → logprob: -14.693171501159668

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327826380729675
    2. '=' → logprob: -0.7577826380729675
    3. '=input' → logprob: -9.132782936096191
    4. '=line' → logprob: -10.382782936096191
    5. '   ' → logprob: -10.757782936096191
    6. '=int' → logprob: -11.382782936096191
    7. ' ' → logprob: -12.507782936096191
    8. ')' → logprob: -13.382782936096191
    9. ')=' → logprob: -13.757782936096191
    10. '       ' → logprob: -13.757782936096191

Token 226: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06201339513063431
    2. ' map' → logprob: -2.8120133876800537
    3. '   ' → logprob: -10.187013626098633
    4. 'input' → logprob: -12.562013626098633
    5. '(map' → logprob: -13.687013626098633
    6. '[' → logprob: -13.937013626098633
    7. 'list' → logprob: -14.312013626098633
    8. '    ' → logprob: -14.562013626098633
    9. '  ' → logprob: -14.687013626098633
    10. '	map' → logprob: -14.937013626098633

Token 227: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38839226961135864
    2. 'int' → logprob: -1.1383922100067139
    3. 'input' → logprob: -6.888392448425293
    4. '   ' → logprob: -7.888392448425293
    5. '[int' → logprob: -9.513392448425293
    6. '=int' → logprob: -11.638392448425293
    7. 'list' → logprob: -11.888392448425293
    8. '```' → logprob: -11.888392448425293
    9. '(input' → logprob: -12.013392448425293
    10. '<int' → logprob: -12.138392448425293

Token 228: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.026499541476368904
    2. ',' → logprob: -3.7764995098114014
    3. '   ' → logprob: -6.7764997482299805
    4. '(input' → logprob: -6.9014997482299805
    5. '(),' → logprob: -7.2764997482299805
    6. 'input' → logprob: -8.27649974822998
    7. '().' → logprob: -9.77649974822998
    8. ' input' → logprob: -10.02649974822998
    9. '=input' → logprob: -10.65149974822998
    10. ' ,' → logprob: -11.90149974822998

Token 229: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002475777640938759
    2. ' input' → logprob: -6.002475738525391
    3. '(input' → logprob: -17.87747573852539
    4. '   ' → logprob: -18.00247573852539
    5. ',input' → logprob: -18.50247573852539
    6. ')' → logprob: -18.87747573852539
    7. '=input' → logprob: -19.62747573852539
    8. ' ' → logprob: -20.00247573852539
    9. '_input' → logprob: -20.12747573852539
    10. '[input' → logprob: -20.12747573852539

Token 230: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4881879400927573e-05
    2. '.split' → logprob: -10.625035285949707
    3. '   ' → logprob: -12.625035285949707
    4. '.' → logprob: -12.875035285949707
    5. '()' → logprob: -13.000035285949707
    6. '.readline' → logprob: -13.875035285949707
    7. '       ' → logprob: -14.375035285949707
    8. ' ().' → logprob: -15.125035285949707
    9. 'split' → logprob: -15.625035285949707
    10. ' .' → logprob: -15.875035285949707

Token 231: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.723352049040841e-06
    2. 'strip' → logprob: -13.750004768371582
    3. ' split' → logprob: -14.125004768371582
    4. '.split' → logprob: -14.125004768371582
    5. '(split' → logprob: -14.125004768371582
    6. ')' → logprob: -14.250004768371582
    7. '().' → logprob: -14.750004768371582
    8. 'spl' → logprob: -15.500004768371582
    9. 'skip' → logprob: -17.000003814697266
    10. 'rstrip' → logprob: -17.125003814697266

Token 232: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004920274019241333
    2. '())
' → logprob: -5.504920482635498
    3. '()' → logprob: -7.629920482635498
    4. ')' → logprob: -8.00492000579834
    5. '()[' → logprob: -12.12992000579834
    6. '())

' → logprob: -12.62992000579834
    7. '[])' → logprob: -13.00492000579834
    8. '())
' → logprob: -13.12992000579834
    9. '());' → logprob: -13.25492000579834
    10. '();)' → logprob: -13.25492000579834

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010326715186238289
    2. '<|end|>' → logprob: -5.135326862335205
    3. '   ' → logprob: -5.635326862335205
    4. '
' → logprob: -8.135326385498047
    5. ',' → logprob: -9.135326385498047
    6. '           ' → logprob: -9.260326385498047
    7. ')' → logprob: -9.385326385498047
    8. ' ' → logprob: -10.135326385498047
    9. '[' → logprob: -10.135326385498047
    10. '     ' → logprob: -10.510326385498047

Token 234: ' xs' (ID: 26642)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5765935778617859
    2. 'xs' (adapté à ' xs') → logprob: -1.0765936374664307
    3. 'x' → logprob: -2.7015936374664307
    4. ' xs' → logprob: -3.7015936374664307
    5. '   ' → logprob: -5.451593399047852
    6. ' x' → logprob: -7.451593399047852
    7. ' ' → logprob: -7.951593399047852
    8. '<|end|>' → logprob: -8.951593399047852
    9. '(xs' → logprob: -9.201593399047852
    10. '	x' → logprob: -10.451593399047852

Token 235: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011095691472291946
    2. '.' → logprob: -4.5110955238342285
    3. 'append' → logprob: -10.136096000671387
    4. ' .' → logprob: -12.011096000671387
    5. '.app' → logprob: -14.386096000671387
    6. ').' → logprob: -14.761096000671387
    7. '<|end|>' → logprob: -15.261096000671387
    8. '.Append' → logprob: -16.13609504699707
    9. '.
' → logprob: -16.26109504699707
    10. '.push' → logprob: -16.38609504699707

Token 236: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.036524842376821e-05
    2. 'x' → logprob: -10.375040054321289
    3. '(' → logprob: -12.000040054321289
    4. '((' → logprob: -12.750040054321289
    5. ' (' → logprob: -16.75004005432129
    6. '(int' → logprob: -17.50004005432129
    7. ' x' → logprob: -17.87504005432129
    8. '(_' → logprob: -18.00004005432129
    9. '(
' → logprob: -19.25004005432129
    10. '   ' → logprob: -20.37504005432129

Token 237: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07014782726764679
    2. '-' → logprob: -2.695147752761841
    3. ')' → logprob: -8.820147514343262
    4. '       ' → logprob: -10.070147514343262
    5. '   ' → logprob: -12.320147514343262
    6. 'def' → logprob: -12.820147514343262
    7. ' ' → logprob: -12.945147514343262
    8. ')
' → logprob: -13.320147514343262
    9. 's' → logprob: -13.570147514343262
    10. ')-' → logprob: -13.695147514343262

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. ')' → logprob: -18.00006675720215
    4. '   ' → logprob: -18.50006675720215
    5. '```' → logprob: -18.50006675720215
    6. '<|end|>' → logprob: -18.62506675720215
    7. '１' → logprob: -19.37506675720215
    8. '0' → logprob: -20.37506675720215
    9. '
' → logprob: -20.50006675720215
    10. ' ' → logprob: -20.56256675720215

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -15.937506675720215
    4. '```' → logprob: -16.56250762939453
    5. '   ' → logprob: -17.12500762939453
    6. '１' → logprob: -17.12500762939453
    7. ')' → logprob: -17.12500762939453
    8. 'def' → logprob: -17.31250762939453
    9. '
' → logprob: -18.06250762939453
    10. '۱' → logprob: -18.12500762939453

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3879854679107666
    2. ')
' → logprob: -1.1379854679107666
    3. '       ' → logprob: -6.8879852294921875
    4. ',' → logprob: -10.762985229492188
    5. ')
' → logprob: -10.762985229492188
    6. ')y' → logprob: -11.262985229492188
    7. ' )
' → logprob: -11.387985229492188
    8. ' )' → logprob: -11.762985229492188
    9. '),' → logprob: -11.887985229492188
    10. ')

' → logprob: -12.512985229492188

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.269177109003067
    2. ' ys' → logprob: -2.019177198410034
    3. ',' → logprob: -3.144177198410034
    4. ' ' → logprob: -3.644177198410034
    5. ' ,' → logprob: -4.394176959991455
    6. ' y' → logprob: -4.769176959991455
    7. '        ' → logprob: -5.519176959991455
    8. '<|end|>' → logprob: -6.394176959991455
    9. ',y' → logprob: -6.519176959991455
    10. ')' → logprob: -6.769176959991455

Token 242: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.017261618748307228
    2. ' ys' → logprob: -4.142261505126953
    3. 'y' → logprob: -6.892261505126953
    4. '       ' → logprob: -8.517261505126953
    5. ' y' → logprob: -11.892261505126953
    6. '   ' → logprob: -13.392261505126953
    7. 'y's' → logprob: -14.892261505126953
    8. 'yl' → logprob: -14.892261505126953
    9. 'yn' → logprob: -15.142261505126953
    10. ' ' → logprob: -15.267261505126953

Token 243: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00867697037756443
    2. '.' → logprob: -4.758677005767822
    3. 'append' → logprob: -9.883676528930664
    4. ' .' → logprob: -11.633676528930664
    5. ').' → logprob: -13.258676528930664
    6. '.Append' → logprob: -16.008676528930664
    7. '.extend' → logprob: -16.008676528930664
    8. '   ' → logprob: -16.258676528930664
    9. '.
' → logprob: -16.258676528930664
    10. '<|end|>' → logprob: -16.633676528930664

Token 244: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.2166411478538066e-05
    2. ' y' → logprob: -10.250052452087402
    3. '(y' → logprob: -11.000052452087402
    4. '   ' → logprob: -17.250051498413086
    5. 'int' → logprob: -17.875051498413086
    6. '       ' → logprob: -18.500051498413086
    7. ' ' → logprob: -18.875051498413086
    8. '(int' → logprob: -19.250051498413086
    9. ' (' → logprob: -19.375051498413086
    10. '    ' → logprob: -19.375051498413086

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003918271977454424
    2. ')
' → logprob: -8.000391960144043
    3. '_)' → logprob: -11.000391960144043
    4. '[_' → logprob: -11.875391960144043
    5. '[' → logprob: -12.000391960144043
    6. '.append' → logprob: -12.125391960144043
    7. '))' → logprob: -12.125391960144043
    8. '   ' → logprob: -12.500391960144043
    9. '       ' → logprob: -12.750391960144043
    10. ' )' → logprob: -13.000391960144043

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028486791998147964
    2. '<|end|>' → logprob: -4.278486728668213
    3. 'test' → logprob: -5.028486728668213
    4. ')' → logprob: -5.528486728668213
    5. 'for' → logprob: -7.028486728668213
    6. '```' → logprob: -7.528486728668213
    7. '[' → logprob: -7.653486728668213
    8. ' for' → logprob: -8.153487205505371
    9. '[test' → logprob: -8.153487205505371
    10. '<|end|>' → logprob: -8.653487205505371

Token 247: ' testimony' (ID: 54378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1931486278772354
    2. 'test' → logprob: -1.8181486129760742
    3. ')' → logprob: -4.943148612976074
    4. ' test' → logprob: -6.443148612976074
    5. 'for' → logprob: -6.568148612976074
    6. '<|end|>' → logprob: -6.943148612976074
    7. ' for' → logprob: -7.443148612976074
    8. ' ' → logprob: -7.818148612976074
    9. '
' → logprob: -8.443148612976074
    10. ')test' → logprob: -8.693148612976074

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006730645429342985
    2. '.' → logprob: -5.006730556488037
    3. ' .' → logprob: -11.756731033325195
    4. '.extend' → logprob: -12.881731033325195
    5. '.app' → logprob: -13.006731033325195
    6. '.ap' → logprob: -14.006731033325195
    7. '=' → logprob: -14.256731033325195
    8. '.setdefault' → logprob: -14.881731033325195
    9. ').' → logprob: -15.631731033325195
    10. 'append' → logprob: -15.756731033325195

Token 249: '((' (ID: 2054)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.003301650984212756
    2. '(' → logprob: -6.753301620483398
    3. 'T' → logprob: -6.753301620483398
    4. '((' → logprob: -7.628301620483398
    5. ' (' → logprob: -8.128301620483398
    6. '(test' → logprob: -9.878301620483398
    7. '(t' → logprob: -10.003301620483398
    8. '(n' → logprob: -10.628301620483398
    9. '(Test' → logprob: -10.753301620483398
    10. ' T' → logprob: -11.253301620483398

Token 250: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006400037091225386
    2. 'n' → logprob: -7.500639915466309
    3. 'i' → logprob: -10.000639915466309
    4. ' a' → logprob: -10.625639915466309
    5. 'T' → logprob: -12.000639915466309
    6. 'len' → logprob: -12.625639915466309
    7. '   ' → logprob: -12.875639915466309
    8. 'int' → logprob: -13.125639915466309
    9. ' ' → logprob: -13.875639915466309
    10. '(a' → logprob: -14.875639915466309

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.453737710718997e-05
    2. ' ,' → logprob: -10.250044822692871
    3. ',x' → logprob: -12.125044822692871
    4. ',
' → logprob: -13.125044822692871
    5. '   ' → logprob: -13.875044822692871
    6. 'import' → logprob: -15.625044822692871
    7. '       ' → logprob: -16.000043869018555
    8. ' ' → logprob: -16.500043869018555
    9. '    ' → logprob: -17.125043869018555
    10. '  ' → logprob: -17.125043869018555

Token 252: ' xs' (ID: 26642)
  Prédit: ' xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xs' → logprob: -0.5759473443031311
    2. 'xs' → logprob: -0.8259473443031311
    3. ' ' → logprob: -12.950947761535645
    4. '   ' → logprob: -13.075947761535645
    5. '(xs' → logprob: -13.200947761535645
    6. '    ' → logprob: -14.200947761535645
    7. '           ' → logprob: -15.950947761535645
    8. '       ' → logprob: -16.075946807861328
    9. 'x' → logprob: -16.700946807861328
    10. ' x' → logprob: -16.700946807861328

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ' ,' → logprob: -10.375039100646973
    3. ',
' → logprob: -11.875039100646973
    4. ',

' → logprob: -15.250039100646973
    5. ',y' → logprob: -16.625038146972656
    6. '   ' → logprob: -17.750038146972656
    7. ',
' → logprob: -18.125038146972656
    8. '```' → logprob: -18.625038146972656
    9. '‌,' → logprob: -19.000038146972656
    10. ' ' → logprob: -19.125038146972656

Token 254: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.014163628220558167
    2. ' ys' → logprob: -4.264163494110107
    3. ' ' → logprob: -15.764163970947266
    4. '   ' → logprob: -16.889163970947266
    5. '     ' → logprob: -19.139163970947266
    6. '    ' → logprob: -19.389163970947266
    7. ' ' → logprob: -19.389163970947266
    8. '       ' → logprob: -19.639163970947266
    9. '  ' → logprob: -20.139163970947266
    10. '         ' → logprob: -20.264163970947266

Token 255: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141558349132538
    2. '))' → logprob: -1.7014155387878418
    3. ')
' → logprob: -13.826416015625
    4. ')))' → logprob: -14.451416015625
    5. ')}' → logprob: -15.451416015625
    6. ' )' → logprob: -15.951416015625
    7. '))
' → logprob: -16.076416015625
    8. '),' → logprob: -16.076416015625
    9. ')`' → logprob: -16.951416015625
    10. ')")' → logprob: -17.326416015625

Token 256: 'num' (ID: 4571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2002464085817337
    2. '<|end|>' → logprob: -1.8252464532852173
    3. '#' → logprob: -4.950246334075928
    4. '<|end|>' → logprob: -5.575246334075928
    5. '[' → logprob: -5.950246334075928
    6. ']' → logprob: -6.325246334075928
    7. 'for' → logprob: -7.200246334075928
    8. ',' → logprob: -7.325246334075928
    9. '```' → logprob: -7.325246334075928
    10. ' ' → logprob: -7.700246334075928

Token 257: ' =' (ID: 314)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.2147009372711182
    2. '_of' → logprob: -1.4647009372711182
    3. '_options' → logprob: -2.714700937271118
    4. '_bits' → logprob: -2.839700937271118
    5. 'ber' → logprob: -3.214700937271118
    6. '_candidates' → logprob: -3.214700937271118
    7. ' =' → logprob: -3.339700937271118
    8. '_states' → logprob: -3.464700937271118
    9. '_pos' → logprob: -3.464700937271118
    10. '_' → logprob: -3.589700937271118

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31815779209136963
    2. '(' → logprob: -1.8181577920913696
    3. '1' → logprob: -2.69315767288208
    4. '2' → logprob: -3.19315767288208
    5. 'n' → logprob: -7.31815767288208
    6. ' ' → logprob: -8.068158149719238
    7. ' (' → logprob: -8.068158149719238
    8. 'int' → logprob: -9.443158149719238
    9. '(n' → logprob: -10.943158149719238
    10. 'pow' → logprob: -11.068158149719238

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9130911827087402
    2. '1' → logprob: -1.0380911827087402
    3. '2' → logprob: -1.7880911827087402
    4. '(' → logprob: -2.6630911827087402
    5. 'n' → logprob: -5.03809118270874
    6. 'int' → logprob: -7.28809118270874
    7. '(n' → logprob: -8.913091659545898
    8. ' ' → logprob: -10.038091659545898
    9. 'len' → logprob: -10.038091659545898
    10. 'pow' → logprob: -10.288091659545898

Token 260: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6080253720283508
    2. ' math' → logprob: -0.8580253720283508
    3. ' sys' → logprob: -4.233025550842285
    4. 'math' → logprob: -4.233025550842285
    5. 'sys' → logprob: -6.108025550842285
    6. 'it' → logprob: -8.233025550842285
    7. ' ' → logprob: -10.358025550842285
    8. '```' → logprob: -11.358025550842285
    9. 'cmath' → logprob: -11.858025550842285
    10. ' functools' → logprob: -12.608025550842285

Token 263: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027552518993616104
    2. ' for' → logprob: -3.652552604675293
    3. '
' → logprob: -7.152552604675293
    4. '<|end|>' → logprob: -8.152552604675293
    5. ',' → logprob: -10.402552604675293
    6. '<|end|>' → logprob: -10.402552604675293
    7. '(' → logprob: -10.902552604675293
    8. 'def' → logprob: -11.152552604675293
    9. '(
' → logprob: -11.402552604675293
    10. ' ' → logprob: -11.902552604675293

Token 264: 'bin' (ID: 11893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16041299700737
    2. ' for' → logprob: -1.9104130268096924
    3. 'def' → logprob: -10.410412788391113
    4. '<|end|>' → logprob: -10.410412788391113
    5. ',' → logprob: -10.535412788391113
    6. '
' → logprob: -10.785412788391113
    7. '(' → logprob: -11.410412788391113
    8. 'range' → logprob: -11.660412788391113
    9. ' ' → logprob: -11.660412788391113
    10. '   ' → logprob: -12.285412788391113

Token 265: '_str' (ID: 6182)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.11086241900920868
    2. 'for' → logprob: -3.2358624935150146
    3. 'ar' → logprob: -4.7358622550964355
    4. '       ' → logprob: -5.1108622550964355
    5. 's' → logprob: -5.2358622550964355
    6. 'import' → logprob: -5.2358622550964355
    7. '   ' → logprob: -5.3608622550964355
    8. 'def' → logprob: -5.4858622550964355
    9. '(' → logprob: -5.8608622550964355
    10. ' =' → logprob: -5.8608622550964355

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22997897863388062
    2. 's' → logprob: -1.8549790382385254
    3. '=' → logprob: -3.4799790382385254
    4. 'for' → logprob: -4.479979038238525
    5. '='' → logprob: -6.604979038238525
    6. ' ' → logprob: -7.354979038238525
    7. '_len' → logprob: -7.604979038238525
    8. 'al' → logprob: -7.979979038238525
    9. '   ' → logprob: -7.979979038238525
    10. ' for' → logprob: -8.229978561401367

Token 267: ' ''.' (ID: 105941)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.4059795141220093
    2. ''' → logprob: -1.6559795141220093
    3. '"' → logprob: -2.780979633331299
    4. 'format' → logprob: -3.030979633331299
    5. '''' → logprob: -4.905979633331299
    6. '"{' → logprob: -4.905979633331299
    7. ''{' → logprob: -5.530979633331299
    8. '""' → logprob: -5.655979633331299
    9. ''b' → logprob: -6.155979633331299
    10. 'it' → logprob: -6.405979633331299

Token 268: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0001443035143893212
    2. 'format' → logprob: -10.250144004821777
    3. '```' → logprob: -10.625144004821777
    4. 'z' → logprob: -10.875144004821777
    5. ' ' → logprob: -11.375144004821777
    6. '000' → logprob: -11.375144004821777
    7. '''.' → logprob: -11.750144004821777
    8. ' join' → logprob: -12.250144004821777
    9. '001' → logprob: -12.375144004821777
    10. '0' → logprob: -12.500144004821777

Token 269: '(['' (ID: 14113)
  Prédit: '([''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(['' → logprob: -0.6749721169471741
    2. '('' → logprob: -1.7999720573425293
    3. '(it' → logprob: -2.4249720573425293
    4. '(bin' → logprob: -2.5499720573425293
    5. 'bin' → logprob: -2.7999720573425293
    6. '['' → logprob: -3.4249720573425293
    7. 'it' → logprob: -4.049972057342529
    8. 'format' → logprob: -4.174972057342529
    9. '(('' → logprob: -5.049972057342529
    10. '(format' → logprob: -5.299972057342529

Token 270: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010187962092459202
    2. 'str' → logprob: -5.135188102722168
    3. '0' → logprob: -6.760188102722168
    4. '['' → logprob: -7.010188102722168
    5. '('' → logprob: -7.260188102722168
    6. 'bin' → logprob: -8.135188102722168
    7. ' '' → logprob: -8.135188102722168
    8. '"' → logprob: -8.635188102722168
    9. ''s' → logprob: -9.635188102722168
    10. '1' → logprob: -9.635188102722168

Token 271: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09945331513881683
    2. ''])' → logprob: -2.7244532108306885
    3. '']' → logprob: -3.5994532108306885
    4. '']))' → logprob: -7.724453449249268
    5. 'for' → logprob: -8.09945297241211
    6. ' for' → logprob: -8.09945297241211
    7. '1' → logprob: -9.09945297241211
    8. '0' → logprob: -9.34945297241211
    9. '')' → logprob: -9.34945297241211
    10. ''s' → logprob: -9.84945297241211

Token 272: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40344446897506714
    2. 'for' → logprob: -1.153444528579712
    3. ' if' → logprob: -4.903444290161133
    4. 'if' → logprob: -5.028444290161133
    5. ']' → logprob: -7.028444290161133
    6. ''' → logprob: -7.278444290161133
    7. '])' → logprob: -8.153444290161133
    8. ']*' → logprob: -8.528444290161133
    9. ' ' → logprob: -9.028444290161133
    10. '   ' → logprob: -9.903444290161133

Token 273: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2521158754825592
    2. ' _' → logprob: -1.5021158456802368
    3. '_i' → logprob: -9.252116203308105
    4. ' i' → logprob: -10.002116203308105
    5. 'i' → logprob: -10.877116203308105
    6. '_n' → logprob: -11.502116203308105
    7. ' ' → logprob: -11.877116203308105
    8. ' in' → logprob: -12.377116203308105
    9. 'n' → logprob: -13.502116203308105
    10. '_]' → logprob: -14.127116203308105

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20196442306041718
    2. 'in' → logprob: -1.7019643783569336
    3. '_' → logprob: -8.201964378356934
    4. 'i' → logprob: -9.076964378356934
    5. ' ' → logprob: -9.076964378356934
    6. 'n' → logprob: -10.951964378356934
    7. ' i' → logprob: -11.076964378356934
    8. 'range' → logprob: -11.576964378356934
    9. '  ' → logprob: -13.451964378356934
    10. ' _' → logprob: -13.451964378356934

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06209036335349083
    2. ' range' → logprob: -2.8120903968811035
    3. 'n' → logprob: -9.062089920043945
    4. ' n' → logprob: -12.687089920043945
    5. '(range' → logprob: -14.062089920043945
    6. 'r' → logprob: -14.312089920043945
    7. ' ' → logprob: -14.437089920043945
    8. 'i' → logprob: -14.812089920043945
    9. '   ' → logprob: -14.937089920043945
    10. '_' → logprob: -15.187089920043945

Token 276: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2902138829231262
    2. '(n' → logprob: -1.5402138233184814
    3. ' n' → logprob: -3.2902138233184814
    4. ' (' → logprob: -8.665213584899902
    5. '(' → logprob: -9.290213584899902
    6. '   ' → logprob: -11.165213584899902
    7. '	n' → logprob: -11.415213584899902
    8. ' ' → logprob: -11.915213584899902
    9. ')n' → logprob: -12.415213584899902
    10. 'num' → logprob: -12.540213584899902

Token 277: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0007773502147756517
    2. '])
' → logprob: -7.750777244567871
    3. ')])' → logprob: -8.125777244567871
    4. ']))' → logprob: -10.500777244567871
    5. '])]' → logprob: -12.125777244567871
    6. ' ])' → logprob: -12.375777244567871
    7. ''])' → logprob: -12.500777244567871
    8. ']])' → logprob: -12.750777244567871
    9. ')' → logprob: -13.125777244567871
    10. '])

' → logprob: -13.250777244567871

Token 278: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1442692130804062
    2. ' for' → logprob: -2.0192692279815674
    3. ')' → logprob: -7.394268989562988
    4. '
' → logprob: -8.019268989562988
    5. ')
' → logprob: -8.519268989562988
    6. '0' → logprob: -8.519268989562988
    7. 's' → logprob: -10.269268989562988
    8. ' 
' → logprob: -10.644268989562988
    9. ' ' → logprob: -10.894268989562988
    10. ',' → logprob: -11.144268989562988

Token 279: '_h' (ID: 3434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22698251903057098
    2. '_num' → logprob: -2.101982593536377
    3. '_comb' → logprob: -3.351982593536377
    4. '_val' → logprob: -3.976982593536377
    5. '_subset' → logprob: -5.101982593536377
    6. ' =' → logprob: -5.351982593536377
    7. '_combo' → logprob: -5.351982593536377
    8. '_value' → logprob: -5.851982593536377
    9. '_bin' → logprob: -6.351982593536377
    10. '=' → logprob: -6.726982593536377

Token 280: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.027726802974939346
    2. 'ype' → logprob: -4.277726650238037
    3. '=' → logprob: -5.152726650238037
    4. 'y' → logprob: -6.277726650238037
    5. 'ipo' → logprob: -6.902726650238037
    6. 'po' → logprob: -7.152726650238037
    7. 'opo' → logprob: -7.152726650238037
    8. ' =' → logprob: -7.652726650238037
    9. 'o' → logprob: -7.777726650238037
    10. 'op' → logprob: -8.152727127075195

Token 281: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.01648789830505848
    2. 'othesis' → logprob: -4.141488075256348
    3. 'otype' → logprob: -9.141488075256348
    4. 'oth' → logprob: -9.141488075256348
    5. '=' → logprob: -9.391488075256348
    6. 'ot' → logprob: -9.766488075256348
    7. 'otes' → logprob: -10.391488075256348
    8. 'ote' → logprob: -11.141488075256348
    9. 'os' → logprob: -11.391488075256348
    10. ' =' → logprob: -11.516488075256348

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269301027059555
    2. '=' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.376930236816406
    4. ',' → logprob: -16.126930236816406
    5. '=int' → logprob: -16.501930236816406
    6. '=

' → logprob: -16.501930236816406
    7. ')' → logprob: -16.751930236816406
    8. 's' → logprob: -16.876930236816406
    9. '＝' → logprob: -17.001930236816406
    10. ' ' → logprob: -17.001930236816406

Token 283: ' int' (ID: 677)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5267845988273621
    2. 'int' → logprob: -1.2767846584320068
    3. ' (' → logprob: -2.651784658432007
    4. '2' → logprob: -3.276784658432007
    5. ' int' → logprob: -4.276784420013428
    6. '(int' → logprob: -5.151784420013428
    7. '1' → logprob: -6.026784420013428
    8. ' ' → logprob: -8.776784896850586
    9. '   ' → logprob: -10.151784896850586
    10. '((' → logprob: -12.151784896850586

Token 284: '(bin' (ID: 117327)
  Prédit: '(bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.25000286102295
    3. '(binary' → logprob: -14.12500286102295
    4. ' (' → logprob: -15.87500286102295
    5. 'bin' → logprob: -17.375001907348633
    6. '(b' → logprob: -18.000001907348633
    7. ' bin' → logprob: -18.125001907348633
    8. '('' → logprob: -18.625001907348633
    9. '(
' → logprob: -20.000001907348633
    10. '/bin' → logprob: -20.000001907348633

Token 285: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.5048530030981055e-06
    2. 'str' → logprob: -13.625001907348633
    3. '_bin' → logprob: -15.375001907348633
    4. '(bin' → logprob: -17.250001907348633
    5. '_string' → logprob: -17.500001907348633
    6. '_' → logprob: -18.000001907348633
    7. 'Str' → logprob: -18.500001907348633
    8. 'string' → logprob: -19.125001907348633
    9. '_st' → logprob: -20.375001907348633
    10. ' _' → logprob: -21.000001907348633

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006370236515067518
    2. ' ,' → logprob: -7.375637054443359
    3. ',n' → logprob: -11.50063705444336
    4. '   ' → logprob: -15.87563705444336
    5. 'n' → logprob: -16.12563705444336
    6. ' ' → logprob: -17.50063705444336
    7. ',
' → logprob: -17.62563705444336
    8. '2' → logprob: -18.00063705444336
    9. '(n' → logprob: -18.12563705444336
    10. '```' → logprob: -18.25063705444336

Token 287: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '```' → logprob: -17.250024795532227
    5. '
' → logprob: -19.000024795532227
    6. '  ' → logprob: -19.500024795532227
    7. '２' → logprob: -19.625024795532227
    8. 'base' → logprob: -19.875024795532227
    9. '``' → logprob: -19.875024795532227
    10. '     ' → logprob: -20.625024795532227

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.0
    5. '２' → logprob: -20.375
    6. '10' → logprob: -21.5
    7. '``' → logprob: -21.625
    8. '
' → logprob: -21.75
    9. 'base' → logprob: -22.625
    10. '二' → logprob: -22.75

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076476833783090115
    2. ')+' → logprob: -4.882647514343262
    3. '+' → logprob: -11.132647514343262
    4. ' )' → logprob: -11.257647514343262
    5. ')
' → logprob: -11.382647514343262
    6. ')`' → logprob: -14.132647514343262
    7. ')

' → logprob: -14.382647514343262
    8. '))' → logprob: -15.257647514343262
    9. '')' → logprob: -15.757647514343262
    10. ')-' → logprob: -16.257648468017578

Token 290: 'hyp' (ID: 152366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038409456610679626
    2. ' for' → logprob: -3.413409471511841
    3. 'result' → logprob: -6.663409233093262
    4. 'valid' → logprob: -7.288409233093262
    5. '<|end|>' → logprob: -7.538409233093262
    6. ')' → logprob: -8.038409233093262
    7. 'answer' → logprob: -8.163409233093262
    8. 'possible' → logprob: -8.163409233093262
    9. 'while' → logprob: -8.413409233093262
    10. 'ans' → logprob: -8.538409233093262

Token 291: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00015181333583313972
    2. 'othesis' → logprob: -9.000151634216309
    3. ' =' → logprob: -11.250151634216309
    4. 'о' → logprob: -12.500151634216309
    5. '_o' → logprob: -12.750151634216309
    6. 'oth' → logprob: -12.875151634216309
    7. '=' → logprob: -12.875151634216309
    8. 'ot' → logprob: -14.000151634216309
    9. 'os' → logprob: -15.125151634216309
    10. '_' → logprob: -15.375151634216309

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2495495080947876
    2. ' +=' → logprob: -1.6245495080947876
    3. '=' → logprob: -4.499549388885498
    4. ' ' → logprob: -5.374549388885498
    5. '+' → logprob: -6.249549388885498
    6. ' +' → logprob: -6.374549388885498
    7. '+=' → logprob: -6.374549388885498
    8. ' <<=' → logprob: -6.874549388885498
    9. '<|end|>' → logprob: -7.374549388885498
    10. ' in' → logprob: -7.624549388885498

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009249635972082615
    2. '1' → logprob: -4.759249687194824
    3. ' ' → logprob: -7.759249687194824
    4. 'max' → logprob: -8.634249687194824
    5. 'num' → logprob: -10.509249687194824
    6. ' max' → logprob: -13.884249687194824
    7. '(' → logprob: -14.759249687194824
    8. '   ' → logprob: -15.259249687194824
    9. 'range' → logprob: -15.509249687194824
    10. '(max' → logprob: -16.071748733520508

Token 294: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030125302728265524
    2. '1' → logprob: -5.878012657165527
    3. 'max' → logprob: -8.503012657165527
    4. ' ' → logprob: -12.878012657165527
    5. 'num' → logprob: -13.628012657165527
    6. '(max' → logprob: -15.128012657165527
    7. '(' → logprob: -15.378012657165527
    8. 'range' → logprob: -16.25301170349121
    9. '2' → logprob: -16.62801170349121
    10. 'int' → logprob: -16.87801170349121

Token 295: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.999725878238678
    2. '
' → logprob: -1.6247258186340332
    3. '+' → logprob: -1.7497258186340332
    4. ' while' → logprob: -2.624725818634033
    5. '<|end|>' → logprob: -2.874725818634033
    6. 'for' → logprob: -3.249725818634033
    7. ' ' → logprob: -3.249725818634033
    8. ' for' → logprob: -3.874725818634033
    9. ':' → logprob: -4.999725818634033
    10. ' 
' → logprob: -4.999725818634033

Token 297: ' hypo' (ID: 142261)
  Prédit: ' hypo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hypo' → logprob: -0.14678692817687988
    2. 'hyp' → logprob: -2.02178692817688
    3. '(h' → logprob: -5.521786689758301
    4. 'h' → logprob: -10.1467866897583
    5. ' hypothesis' → logprob: -10.7717866897583
    6. '	h' → logprob: -11.8967866897583
    7. ' ' → logprob: -12.1467866897583
    8. '(' → logprob: -12.2717866897583
    9. '   ' → logprob: -12.2717866897583
    10. ' hyp' → logprob: -12.3967866897583

Token 298: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07936669886112213
    2. ' <=' → logprob: -2.579366683959961
    3. '<' → logprob: -7.829366683959961
    4. ' <' → logprob: -9.454366683959961
    5. '<<' → logprob: -14.954366683959961
    6. '<len' → logprob: -16.95436668395996
    7. '   ' → logprob: -17.07936668395996
    8. ' ' → logprob: -17.07936668395996
    9. '```' → logprob: -17.32936668395996
    10. '<n' → logprob: -17.45436668395996

Token 299: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007099286303855479
    2. ' max' → logprob: -7.2507100105285645
    3. '
' → logprob: -19.000709533691406
    4. '	max' → logprob: -19.625709533691406
    5. '(max' → logprob: -19.625709533691406
    6. '   ' → logprob: -20.250709533691406
    7. '_max' → logprob: -21.375709533691406
    8. ' ' → logprob: -22.500709533691406
    9. '[max' → logprob: -22.500709533691406
    10. 'num' → logprob: -23.000709533691406

Token 300: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.11996734328568e-05
    2. 'hyp' → logprob: -10.250041007995605
    3. 'h' → logprob: -13.375041007995605
    4. 'max' → logprob: -13.500041007995605
    5. '```' → logprob: -14.250041007995605
    6. '_' → logprob: -14.500041007995605
    7. '\' → logprob: -14.750041007995605
    8. ' _' → logprob: -15.500041007995605
    9. 'o' → logprob: -15.750041007995605
    10. '
' → logprob: -15.875041007995605

Token 301: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.010743589140474796
    2. 'po' → logprob: -4.760743618011475
    3. 'yo' → logprob: -6.885743618011475
    4. 'y' → logprob: -7.635743618011475
    5. 'o' → logprob: -8.010743141174316
    6. 'p' → logprob: -9.135743141174316
    7. 'hyp' → logprob: -9.135743141174316
    8. 'ype' → logprob: -10.385743141174316
    9. 'py' → logprob: -11.135743141174316
    10. 'opo' → logprob: -12.010743141174316

Token 302: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.5776860184123507e-06
    2. 'oth' → logprob: -13.87500286102295
    3. 'othesis' → logprob: -13.87500286102295
    4. 'hyp' → logprob: -15.00000286102295
    5. 'о' → logprob: -16.625001907348633
    6. 'ho' → logprob: -16.750001907348633
    7. '_o' → logprob: -17.125001907348633
    8. '
' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. ' hypo' → logprob: -18.125001907348633

Token 303: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5764634609222412
    2. ':' → logprob: -0.8264634609222412
    3. '   ' → logprob: -8.07646369934082
    4. ' :
' → logprob: -9.20146369934082
    5. '):
' → logprob: -9.57646369934082
    6. ' :' → logprob: -11.20146369934082
    7. ':
' → logprob: -11.45146369934082
    8. ':

' → logprob: -12.07646369934082
    9. '():
' → logprob: -12.07646369934082
    10. '):' → logprob: -13.32646369934082

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026778582483530045
    2. ' if' → logprob: -4.026778697967529
    3. '       ' → logprob: -5.776778697967529
    4. ':
' → logprob: -6.401778697967529
    5. '
' → logprob: -6.651778697967529
    6. ':' → logprob: -7.026778697967529
    7. 'if' → logprob: -7.401778697967529
    8. '<|end|>' → logprob: -7.776778697967529
    9. ' and' → logprob: -8.776778221130371
    10. '	if' → logprob: -9.151778221130371

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.621401846408844
    2. '   ' → logprob: -1.2464017868041992
    3. 'if' (adapté à ' if') → logprob: -1.7464017868041992
    4. '       ' → logprob: -7.246401786804199
    5. '
' → logprob: -9.9964017868042
    6. '    
' → logprob: -10.6214017868042
    7. ' ' → logprob: -10.6214017868042
    8. '    ' → logprob: -11.3714017868042
    9. '	if' → logprob: -11.3714017868042
    10. ' and' → logprob: -11.6214017868042

Token 306: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.5253112316131592
    2. ' judge' → logprob: -0.9003112316131592
    3. '   ' → logprob: -6.775311470031738
    4. 'jud' → logprob: -7.025311470031738
    5. ' ' → logprob: -10.025311470031738
    6. '  ' → logprob: -10.150311470031738
    7. '    ' → logprob: -11.025311470031738
    8. 'j' → logprob: -11.525311470031738
    9. '       ' → logprob: -11.775311470031738
    10. 'not' → logprob: -12.275311470031738

Token 307: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -9.375091552734375
    3. ' (' → logprob: -12.000091552734375
    4. '(
' → logprob: -14.875091552734375
    5. '(num' → logprob: -16.625091552734375
    6. '   ' → logprob: -17.875091552734375
    7. 'n' → logprob: -18.125091552734375
    8. '(len' → logprob: -18.500091552734375
    9. ' ' → logprob: -18.750091552734375
    10. '
' → logprob: -18.750091552734375

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030602619517594576
    2. ',h' → logprob: -8.250306129455566
    3. ' ,' → logprob: -10.375306129455566
    4. ',n' → logprob: -11.250306129455566
    5. ',
' → logprob: -14.750306129455566
    6. '   ' → logprob: -17.25030517578125
    7. '(' → logprob: -17.25030517578125
    8. '
' → logprob: -18.00030517578125
    9. '，' → logprob: -18.12530517578125
    10. '

' → logprob: -18.12530517578125

Token 309: ' testimony' (ID: 54378)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -7.52919222577475e-05
    2. ' testimony' → logprob: -10.125075340270996
    3. ' test' → logprob: -10.750075340270996
    4. 'testimonial' → logprob: -12.125075340270996
    5. '
' → logprob: -12.625075340270996
    6. '   ' → logprob: -12.750075340270996
    7. '(test' → logprob: -15.250075340270996
    8. 'testing' → logprob: -15.250075340270996
    9. '
' → logprob: -15.375075340270996
    10. 'hyp' → logprob: -15.375075340270996

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002332474570721388
    2. ',h' → logprob: -6.37733268737793
    3. ' ,' → logprob: -7.37733268737793
    4. '   ' → logprob: -12.75233268737793
    5. ',
' → logprob: -13.62733268737793
    6. ',n' → logprob: -15.50233268737793
    7. '，' → logprob: -16.37733268737793
    8. '```' → logprob: -16.37733268737793
    9. '       ' → logprob: -16.50233268737793
    10. ' ' → logprob: -17.18983268737793

Token 311: ' hypo' (ID: 142261)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.006957731209695339
    2. ' hypo' → logprob: -5.006957530975342
    3. 'hy' → logprob: -9.2569580078125
    4. ' hypothesis' → logprob: -10.0069580078125
    5. 'h' → logprob: -10.1319580078125
    6. ' hyp' → logprob: -11.0069580078125
    7. 'Hyp' → logprob: -11.6319580078125
    8. '   ' → logprob: -12.1319580078125
    9. 'hyper' → logprob: -12.4444580078125
    10. ' ' → logprob: -12.5694580078125

Token 312: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01270611584186554
    2. '):' → logprob: -4.387706279754639
    3. '   ' → logprob: -9.38770580291748
    4. '):
' → logprob: -10.01270580291748
    5. ')' → logprob: -10.51270580291748
    6. ' ):
' → logprob: -10.51270580291748
    7. ')==' → logprob: -12.51270580291748
    8. '==' → logprob: -12.76270580291748
    9. ':
' → logprob: -13.26270580291748
    10. ':' → logprob: -13.63770580291748

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002600268693640828
    2. '   ' → logprob: -7.002600193023682
    3. '
' → logprob: -8.00260066986084
    4. ' num' → logprob: -8.25260066986084
    5. ' print' → logprob: -8.25260066986084
    6. 'print' → logprob: -8.50260066986084
    7. 'num' → logprob: -8.62760066986084
    8. '        
' → logprob: -9.00260066986084
    9. ':' → logprob: -9.50260066986084
    10. '):
' → logprob: -9.62760066986084

Token 314: ' ones' (ID: 8104)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.19097651541233063
    2. 'count' → logprob: -2.565976619720459
    3. '   ' → logprob: -3.315976619720459
    4. 'cnt' → logprob: -3.690976619720459
    5. 'if' → logprob: -4.440976619720459
    6. 'pop' → logprob: -4.940976619720459
    7. 'bit' → logprob: -5.690976619720459
    8. ' num' → logprob: -5.940976619720459
    9. 'bits' → logprob: -5.940976619720459
    10. '       ' → logprob: -6.315976619720459

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6293730139732361
    2. '_count' → logprob: -1.0043730735778809
    3. '=' → logprob: -2.379373073577881
    4. 'count' → logprob: -5.254373073577881
    5. '_cnt' → logprob: -6.629373073577881
    6. 'cnt' → logprob: -8.254372596740723
    7. '+=' → logprob: -8.254372596740723
    8. '   ' → logprob: -8.379372596740723
    9. '_' → logprob: -8.754372596740723
    10. ' +=' → logprob: -8.879372596740723

Token 316: ' sum' (ID: 4215)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0007480407948605716
    2. ' bin' → logprob: -7.375748157501221
    3. 'str' → logprob: -10.125747680664062
    4. '0' → logprob: -10.500747680664062
    5. '[' → logprob: -10.875747680664062
    6. '(bin' → logprob: -11.500747680664062
    7. '   ' → logprob: -11.625747680664062
    8. 'sum' → logprob: -11.750747680664062
    9. '
' → logprob: -13.375747680664062
    10. '/bin' → logprob: -13.625747680664062

Token 317: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.810243546962738
    2. '([' → logprob: -1.3102436065673828
    3. '(bin' → logprob: -2.060243606567383
    4. '((' → logprob: -2.560243606567383
    5. '([(' → logprob: -2.810243606567383
    6. '(((' → logprob: -4.935243606567383
    7. '(int' → logprob: -5.185243606567383
    8. '(map' → logprob: -5.560243606567383
    9. 'bin' → logprob: -6.435243606567383
    10. '(i' → logprob: -7.185243606567383

Token 318: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3872043192386627
    2. '(int' → logprob: -1.1372042894363403
    3. '(bool' → logprob: -9.38720417022705
    4. '(' → logprob: -9.38720417022705
    5. '(bin' → logprob: -9.76220417022705
    6. 'lambda' → logprob: -10.13720417022705
    7. 'int' → logprob: -10.63720417022705
    8. '(
' → logprob: -10.63720417022705
    9. '(str' → logprob: -11.76220417022705
    10. '   ' → logprob: -12.38720417022705

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23594224452972412
    2. ',list' → logprob: -2.1109423637390137
    3. '(bin' → logprob: -2.7359423637390137
    4. ',str' → logprob: -4.485942363739014
    5. '(list' → logprob: -5.485942363739014
    6. 'list' → logprob: -5.610942363739014
    7. 'bin' → logprob: -6.110942363739014
    8. ',b' → logprob: -6.860942363739014
    9. '(str' → logprob: -6.860942363739014
    10. ',(' → logprob: -7.610942363739014

Token 320: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.010513591580092907
    2. 'list' → logprob: -4.635513782501221
    3. ' bin' → logprob: -7.385513782501221
    4. '(bin' → logprob: -9.760513305664062
    5. 'format' → logprob: -10.385513305664062
    6. 'str' → logprob: -10.760513305664062
    7. '   ' → logprob: -11.510513305664062
    8. ' list' → logprob: -11.760513305664062
    9. '[' → logprob: -12.510513305664062
    10. ' ' → logprob: -13.385513305664062

Token 321: '(h' (ID: 8120)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.21205443143844604
    2. 'bin' → logprob: -1.7120544910430908
    3. 'format' → logprob: -5.087054252624512
    4. '(format' → logprob: -5.962054252624512
    5. 'str' → logprob: -6.962054252624512
    6. 'list' → logprob: -7.962054252624512
    7. '(str' → logprob: -8.212054252624512
    8. '   ' → logprob: -8.587054252624512
    9. ' bin' → logprob: -11.087054252624512
    10. '(' → logprob: -11.337054252624512

Token 322: 'yp' (ID: 1785)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.5864198803901672
    2. 'o' → logprob: -1.7114198207855225
    3. 'yp' → logprob: -1.8364198207855225
    4. 'h' → logprob: -2.8364198207855225
    5. '(h' → logprob: -3.3364198207855225
    6. '   ' → logprob: -5.586420059204102
    7. '[h' → logprob: -6.086420059204102
    8. '       ' → logprob: -7.086420059204102
    9. 'ype' → logprob: -7.586420059204102
    10. ' hypo' → logprob: -7.836420059204102

Token 323: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -5.7888184528565034e-05
    2. '(h' → logprob: -10.5000581741333
    3. '(o' → logprob: -10.8750581741333
    4. '   ' → logprob: -12.6250581741333
    5. 'oxo' → logprob: -13.1250581741333
    6. 'h' → logprob: -13.3750581741333
    7. 'hyp' → logprob: -13.7500581741333
    8. '       ' → logprob: -14.2500581741333
    9. 'ox' → logprob: -14.2500581741333
    10. '(' → logprob: -14.7500581741333

Token 324: ')[' (ID: 13637)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.025208085775375366
    2. '(' → logprob: -3.900207996368408
    3. '())[' → logprob: -6.275207996368408
    4. '()' → logprob: -6.525207996368408
    5. '().' → logprob: -7.025207996368408
    6. '(bin' → logprob: -9.400208473205566
    7. '(h' → logprob: -9.525208473205566
    8. ')[' → logprob: -9.525208473205566
    9. '```' → logprob: -10.025208473205566
    10. '[' → logprob: -10.650208473205566

Token 325: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05177254229784012
    2. ')[' → logprob: -3.1767725944519043
    3. '[' → logprob: -5.301772594451904
    4. '(' → logprob: -6.551772594451904
    5. ')' → logprob: -7.176772594451904
    6. ').' → logprob: -8.176772117614746
    7. '1' → logprob: -8.301772117614746
    8. '```' → logprob: -8.801772117614746
    9. ':' → logprob: -9.051772117614746
    10. ' ' → logprob: -9.176772117614746

Token 326: ':' (ID: 25)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.107867531478405
    2. ':' → logprob: -2.482867479324341
    3. ':]' → logprob: -3.982867479324341
    4. ']))' → logprob: -9.982867240905762
    5. ':],' → logprob: -10.107867240905762
    6. '].' → logprob: -11.857867240905762
    7. ':])
' → logprob: -11.982867240905762
    8. '()].' → logprob: -12.232867240905762
    9. '])))' → logprob: -12.732867240905762
    10. ':]
' → logprob: -13.107867240905762

Token 327: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.21049167215824127
    2. ']))
' → logprob: -1.71049165725708
    3. ':' → logprob: -5.33549165725708
    4. ']' → logprob: -6.08549165725708
    5. ' ]' → logprob: -7.71049165725708
    6. '])))' → logprob: -8.085492134094238
    7. '].' → logprob: -8.335492134094238
    8. '])))
' → logprob: -8.585492134094238
    9. ']))

' → logprob: -8.960492134094238
    10. ']))
' → logprob: -9.210492134094238

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005537777207791805
    2. '   ' → logprob: -5.880537986755371
    3. ' if' → logprob: -6.505537986755371
    4. '<|end|>' → logprob: -7.130537986755371
    5. '           ' → logprob: -9.255537986755371
    6. ',' → logprob: -9.505537986755371
    7. ')' → logprob: -9.880537986755371
    8. '
' → logprob: -10.005537986755371
    9. '>' → logprob: -10.255537986755371
    10. '<|end|>' → logprob: -10.380537986755371

Token 329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4561227262020111
    2. ' if' → logprob: -1.8311227560043335
    3. '       ' → logprob: -2.456122636795044
    4. '   ' → logprob: -2.831122636795044
    5. 'num' → logprob: -2.831122636795044
    6. ' num' → logprob: -7.081122875213623
    7. '           ' → logprob: -7.456122875213623
    8. '+' → logprob: -8.081122398376465
    9. 'print' → logprob: -8.081122398376465
    10. '-' → logprob: -9.831122398376465

Token 330: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.14363768696784973
    2. ' ones' → logprob: -2.0186376571655273
    3. 'num' → logprob: -7.268637657165527
    4. '   ' → logprob: -9.268637657165527
    5. ' num' → logprob: -9.643637657165527
    6. '       ' → logprob: -10.268637657165527
    7. ' ' → logprob: -11.518637657165527
    8. 'max' → logprob: -11.643637657165527
    9. 'one' → logprob: -12.456137657165527
    10. '    ' → logprob: -12.643637657165527

Token 331: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5562508702278137
    2. ' >=' → logprob: -1.556250810623169
    3. '>' → logprob: -1.681250810623169
    4. '>=' → logprob: -3.806250810623169
    5. ' <=' → logprob: -5.181251049041748
    6. '<=' → logprob: -6.931251049041748
    7. '   ' → logprob: -8.30625057220459
    8. '==' → logprob: -8.55625057220459
    9. ' ==' → logprob: -8.68125057220459
    10. ' ' → logprob: -10.18125057220459

Token 332: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0005165747134014964
    2. ' num' → logprob: -7.625516414642334
    3. '   ' → logprob: -11.000516891479492
    4. '       ' → logprob: -12.500516891479492
    5. '           ' → logprob: -12.875516891479492
    6. 'n' → logprob: -12.875516891479492
    7. '    ' → logprob: -14.875516891479492
    8. '	num' → logprob: -15.000516891479492
    9. ' ' → logprob: -15.250516891479492
    10. '0' → logprob: -15.250516891479492

Token 333: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20547932386398315
    2. ':' → logprob: -1.705479383468628
    3. '           ' → logprob: -5.580479145050049
    4. '       ' → logprob: -9.205479621887207
    5. ' :
' → logprob: -9.830479621887207
    6. ':
' → logprob: -10.080479621887207
    7. '):
' → logprob: -10.455479621887207
    8. '   ' → logprob: -10.955479621887207
    9. ' and' → logprob: -11.455479621887207
    10. ' :' → logprob: -11.580479621887207

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008532187901437283
    2. 'num' → logprob: -5.5085320472717285
    3. '               ' → logprob: -6.0085320472717285
    4. ' num' → logprob: -6.3835320472717285
    5. '       ' → logprob: -9.008532524108887
    6. '```' → logprob: -10.008532524108887
    7. '	       ' → logprob: -10.133532524108887
    8. '   ' → logprob: -10.258532524108887
    9. ',num' → logprob: -11.133532524108887
    10. '	num' → logprob: -11.758532524108887

Token 335: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0025498620234429836
    2. ' num' → logprob: -6.002549648284912
    3. '               ' → logprob: -10.00255012512207
    4. '           ' → logprob: -10.62755012512207
    5. '	num' → logprob: -12.87755012512207
    6. '   ' → logprob: -13.75255012512207
    7. '```' → logprob: -14.25255012512207
    8. '       ' → logprob: -15.50255012512207
    9. ',num' → logprob: -16.12755012512207
    10. '_num' → logprob: -16.62755012512207

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859202727675438
    2. '=' → logprob: -3.0485920906066895
    3. '=num' → logprob: -12.298591613769531
    4. ' ' → logprob: -17.79859161376953
    5. '＝' → logprob: -18.54859161376953
    6. ' num' → logprob: -20.17359161376953
    7. ',' → logprob: -20.67359161376953
    8. 'num' → logprob: -20.67359161376953
    9. '=n' → logprob: -20.67359161376953
    10. '=max' → logprob: -20.67359161376953

Token 337: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.06993887573480606
    2. ' ones' → logprob: -2.694938898086548
    3. '   ' → logprob: -14.569938659667969
    4. 'one' → logprob: -14.819938659667969
    5. ' ' → logprob: -14.944938659667969
    6. 'ONES' → logprob: -15.319938659667969
    7. ' ' → logprob: -15.507438659667969
    8. '       ' → logprob: -15.569938659667969
    9. '.ones' → logprob: -15.819938659667969
    10. '	' → logprob: -15.944938659667969

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000592947646509856
    2. '
' → logprob: -7.500593185424805
    3. '    
' → logprob: -10.750593185424805
    4. '       ' → logprob: -12.000593185424805
    5. ' 
' → logprob: -12.875593185424805
    6. '```' → logprob: -13.375593185424805
    7. ',' → logprob: -13.750593185424805
    8. '<|end|>' → logprob: -13.875593185424805
    9. '  ' → logprob: -14.000593185424805
    10. '  
' → logprob: -14.000593185424805

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.429896944202483e-05
    2. '
' → logprob: -11.250043869018555
    3. '       ' → logprob: -11.250043869018555
    4. ' hyp' → logprob: -12.125043869018555
    5. 'hyp' → logprob: -12.500043869018555
    6. '    
' → logprob: -12.875043869018555
    7. ',' → logprob: -13.625043869018555
    8. ' 
' → logprob: -13.750043869018555
    9. ' ' → logprob: -14.250043869018555
    10. '```' → logprob: -14.625043869018555

Token 340: ' hypo' (ID: 142261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5067248344421387
    2. ' hypo' → logprob: -1.5067248344421387
    3. 'hyp' → logprob: -1.8817248344421387
    4. ' hyp' → logprob: -4.006724834442139
    5. '
' → logprob: -5.881724834442139
    6. ' 
' → logprob: -7.381724834442139
    7. '    
' → logprob: -7.631724834442139
    8. ' hypothesis' → logprob: -8.006725311279297
    9. ' hypot' → logprob: -8.506725311279297
    10. '	h' → logprob: -8.756725311279297

Token 341: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007729299832135439
    2. ' <<=' → logprob: -5.507729530334473
    3. ' +=' → logprob: -6.007729530334473
    4. '<<' → logprob: -6.882729530334473
    5. '=' → logprob: -8.882729530334473
    6. '|' → logprob: -11.507729530334473
    7. '*=' → logprob: -11.757729530334473
    8. ' |=' → logprob: -13.757729530334473
    9. '+' → logprob: -14.632729530334473
    10. ']+=' → logprob: -15.507729530334473

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.25010871887207
    4. '```' → logprob: -17.50010871887207
    5. '2' → logprob: -19.25010871887207
    6. '  ' → logprob: -19.50010871887207
    7. '１' → logprob: -20.25010871887207
    8. '    ' → logprob: -21.00010871887207
    9. ' ' → logprob: -21.12510871887207
    10. '0' → logprob: -21.12510871887207

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.625003814697266
    5. '2' → logprob: -18.500003814697266
    6. '１' → logprob: -19.500003814697266
    7. '  ' → logprob: -19.750003814697266
    8. '100' → logprob: -20.062503814697266
    9. '0' → logprob: -20.500003814697266
    10. '
' → logprob: -20.625003814697266

Token 344: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014966767048463225
    2. '
' → logprob: -8.875149726867676
    3. ' print' → logprob: -11.625149726867676
    4. '```' → logprob: -14.750149726867676
    5. '    
' → logprob: -15.250149726867676
    6. ')
' → logprob: -16.75014877319336
    7. ' 
' → logprob: -16.87514877319336
    8. '#print' → logprob: -17.00014877319336
    9. ')' → logprob: -17.62514877319336
    10. '  
' → logprob: -17.87514877319336

Token 345: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. ' print' → logprob: -12.875003814697266
    3. '```' → logprob: -13.875003814697266
    4. '
' → logprob: -15.125003814697266
    5. '#print' → logprob: -19.125003814697266
    6. '``' → logprob: -20.000003814697266
    7. '<|end|>' → logprob: -20.750003814697266
    8. '#' → logprob: -21.375003814697266
    9. '    
' → logprob: -21.500003814697266
    10. '(print' → logprob: -21.500003814697266

Token 346: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00010020548506872728
    2. '(' → logprob: -9.250100135803223
    3. 'num' → logprob: -12.500100135803223
    4. '(n' → logprob: -16.25010108947754
    5. ',num' → logprob: -17.00010108947754
    6. ' (' → logprob: -17.12510108947754
    7. '()' → logprob: -17.12510108947754
    8. ' num' → logprob: -17.37510108947754
    9. '=num' → logprob: -18.00010108947754
    10. '(nums' → logprob: -18.75010108947754

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.250001907348633
    3. '())' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.250001907348633
    5. '()' → logprob: -17.375001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '```' → logprob: -18.000001907348633
    8. '))' → logprob: -18.000001907348633
    9. '`)' → logprob: -18.250001907348633
    10. '+' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 277
Précision stricte (1ère position): 44.06%
Précision adaptée (1ère position): 45.80%
Précision (top 10): 80.29%
================================================================================
