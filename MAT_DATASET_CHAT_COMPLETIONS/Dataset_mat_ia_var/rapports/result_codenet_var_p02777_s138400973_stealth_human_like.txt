================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on prend les entrées séparées par espaces, un peu à l'arrache
s = input().split(' ')
num = input().split()
# Normalement il faudrait tout convertir ici mais on va le faire plus tard
u = input().strip()

# unpack à la main, c'est plus lisible non ?
num1 = int(num[0]) 
num2 = int(num[1])

# un peu de logique, c'est pas la mer à boire
if u == s[0]:
    # petite décrémentation, allez hop
    res = num1 - 1
    print(str(res) + " " + str(num2))
elif u == s[1]:
    print(str(num1) + " " + str(num2 - 1))
# Pas de else, tant pis si y'a une entrée pourrie
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.248463973402977
    2. ' je' → logprob: -1.8734639883041382
    3. ' ' → logprob: -3.2484638690948486
    4. ' j' → logprob: -4.998464107513428
    5. ' c' → logprob: -5.498464107513428
    6. '```' → logprob: -5.873464107513428
    7. 'soir' → logprob: -6.248464107513428
    8. 'je' → logprob: -6.373464107513428
    9. ' app' → logprob: -6.748464107513428
    10. '  ' → logprob: -6.873464107513428

Token 4: ' prend' (ID: 37463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8732094168663025
    2. '_' → logprob: -1.7482094764709473
    3. ' a' → logprob: -1.7482094764709473
    4. ' continue' → logprob: -2.6232094764709473
    5. ' ```' → logprob: -3.6232094764709473
    6. '```' → logprob: -4.123209476470947
    7. ' #' → logprob: -4.123209476470947
    8. ' _' → logprob: -4.123209476470947
    9. ' va' → logprob: -4.498209476470947
    10. '   ' → logprob: -4.998209476470947

Token 5: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06641888618469238
    2. ' un' → logprob: -3.8164188861846924
    3. ' ' → logprob: -4.941418647766113
    4. '_' → logprob: -4.941418647766113
    5. 'le' → logprob: -5.816418647766113
    6. 'un' → logprob: -5.816418647766113
    7. ' une' → logprob: -6.066418647766113
    8. ' le' → logprob: -6.191418647766113
    9. ' space' → logprob: -6.191418647766113
    10. 'tout' → logprob: -6.191418647766113

Token 6: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1951591968536377
    2. ' données' → logprob: -1.9451591968536377
    3. '#' → logprob: -2.5701591968536377
    4. 'm' → logprob: -3.0701591968536377
    5. 'data' → logprob: -3.1951591968536377
    6. ' ' → logprob: -3.3201591968536377
    7. ' mêmes' → logprob: -3.3201591968536377
    8. 'me' → logprob: -3.4451591968536377
    9. 'import' → logprob: -3.4451591968536377
    10. 'tokens' → logprob: -3.8201591968536377

Token 7: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.015844078734517097
    2. 'r' → logprob: -5.265843868255615
    3. 'ée' → logprob: -5.265843868255615
    4. 'és' → logprob: -5.890843868255615
    5. 'é' → logprob: -6.390843868255615
    6. '#' → logprob: -8.390844345092773
    7. 'es' → logprob: -8.765844345092773
    8. 'ees' → logprob: -8.890844345092773
    9. 'rée' → logprob: -9.140844345092773
    10. 'rees' → logprob: -9.640844345092773

Token 8: ' sépar' (ID: 97160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6407369375228882
    2. '```' → logprob: -1.7657369375228882
    3. ':' → logprob: -2.5157370567321777
    4. '`' → logprob: -3.2657370567321777
    5. 's' → logprob: -3.7657370567321777
    6. '_' → logprob: -3.7657370567321777
    7. ' =' → logprob: -4.015737056732178
    8. ' ' → logprob: -4.265737056732178
    9. '``' → logprob: -4.390737056732178
    10. ',' → logprob: -4.390737056732178

Token 9: 'ées' (ID: 5161)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.055173493921756744
    2. 'ées' → logprob: -3.055173397064209
    3. 'és' → logprob: -5.430173397064209
    4. 'é' → logprob: -6.930173397064209
    5. '```' → logprob: -7.305173397064209
    6. 'par' → logprob: -9.055173873901367
    7. 's' → logprob: -9.055173873901367
    8. ',' → logprob: -9.680173873901367
    9. ' par' → logprob: -9.930173873901367
    10. '́' → logprob: -10.055173873901367

Token 10: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.43384820222854614
    2. ',' → logprob: -1.9338481426239014
    3. '```' → logprob: -2.6838481426239014
    4. '#' → logprob: -3.1838481426239014
    5. 's' → logprob: -3.5588481426239014
    6. '`' → logprob: -4.5588483810424805
    7. '[' → logprob: -4.8088483810424805
    8. 'es' → logprob: -4.8088483810424805
    9. '.' → logprob: -4.9338483810424805
    10. '[:]' → logprob: -5.4338483810424805

Token 11: ' espaces' (ID: 98361)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.505878746509552
    2. 'une' → logprob: -2.1308786869049072
    3. 'un' → logprob: -2.5058786869049072
    4. ' des' → logprob: -2.5058786869049072
    5. '```' → logprob: -3.6308786869049072
    6. 'es' → logprob: -4.005878925323486
    7. 'esp' → logprob: -4.880878925323486
    8. ''' → logprob: -5.005878925323486
    9. '"' → logprob: -5.005878925323486
    10. ',' → logprob: -5.255878925323486

Token 12: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6853035688400269
    2. 'input' → logprob: -1.8103035688400269
    3. 'inputs' → logprob: -2.1853036880493164
    4. 'i' → logprob: -2.3103036880493164
    5. 'e' → logprob: -2.5603036880493164
    6. 'n' → logprob: -3.0603036880493164
    7. '_' → logprob: -3.4353036880493164
    8. 'entr' → logprob: -3.4353036880493164
    9. '#' → logprob: -3.6853036880493164
    10. '=' → logprob: -3.6853036880493164

Token 13: ' un' (ID: 537)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3964659869670868
    2. '.split' → logprob: -2.646466016769409
    3. 's' → logprob: -3.021466016769409
    4. 'inputs' → logprob: -3.271466016769409
    5. 'split' → logprob: -3.771466016769409
    6. 'user' → logprob: -3.771466016769409
    7. 'data' → logprob: -4.52146577835083
    8. 'n' → logprob: -4.89646577835083
    9. 'word' → logprob: -4.89646577835083
    10. '=' → logprob: -4.89646577835083

Token 14: ' peu' (ID: 9235)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.1158781051635742
    2. 'e' → logprob: -1.3658781051635742
    3. 'split' → logprob: -2.240878105163574
    4. ' =' → logprob: -2.615878105163574
    5. '=' → logprob: -2.990878105163574
    6. 'input' → logprob: -3.115878105163574
    7. 's' → logprob: -3.490878105163574
    8. 'esp' → logprob: -3.990878105163574
    9. ' input' → logprob: -4.490878105163574
    10. ' mot' → logprob: -4.490878105163574

Token 15: ' à' (ID: 1221)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.17549581825733185
    2. 'pe' → logprob: -2.6754958629608154
    3. 's' → logprob: -2.9254958629608154
    4. ' par' → logprob: -5.175495624542236
    5. 'es' → logprob: -5.300495624542236
    6. 'd' → logprob: -5.300495624542236
    7. 'plus' → logprob: -5.425495624542236
    8. 'à' → logprob: -5.550495624542236
    9. 'comme' → logprob: -6.050495624542236
    10. '_' → logprob: -6.425495624542236

Token 16: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18555834889411926
    2. 'l' → logprob: -1.8105583190917969
    3. 'part' → logprob: -5.560558319091797
    4. '```' → logprob: -8.060558319091797
    5. 'cha' → logprob: -8.435558319091797
    6. 'python' → logprob: -8.560558319091797
    7. 'pe' → logprob: -8.685558319091797
    8. ' la' → logprob: -9.060558319091797
    9. 'Python' → logprob: -9.060558319091797
    10. '-la' → logprob: -9.310558319091797

Token 17: ''arr' (ID: 49695)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05844142660498619
    2. 'e' → logprob: -4.183441638946533
    3. ''' → logprob: -4.683441638946533
    4. 'es' → logprob: -4.933441638946533
    5. 'ancienne' → logprob: -5.433441638946533
    6. '```' → logprob: -5.808441638946533
    7. ''espace' → logprob: -6.183441638946533
    8. 'esp' → logprob: -6.433441638946533
    9. 'u' → logprob: -6.558441638946533
    10. 'ang' → logprob: -6.558441638946533

Token 18: 'ache' (ID: 2285)
  Prédit: 'ivée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ivée' → logprob: -1.2627923488616943
    2. 'angement' → logprob: -1.5127923488616943
    3. 'y' → logprob: -2.5127923488616943
    4. 'êt' → logprob: -2.6377923488616943
    5. 'i' → logprob: -3.2627923488616943
    6. 'ière' → logprob: -3.6377923488616943
    7. 'ère' → logprob: -3.6377923488616943
    8. 'e' → logprob: -3.6377923488616943
    9. 'eg' → logprob: -3.7627923488616943
    10. 'ow' → logprob: -4.137792587280273

Token 19: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5396291017532349
    2. 's' → logprob: -2.2896289825439453
    3. 'input' → logprob: -2.4146289825439453
    4. 'entr' → logprob: -2.5396289825439453
    5. '```' → logprob: -2.5396289825439453
    6. 'n' → logprob: -2.6646289825439453
    7. 'inputs' → logprob: -2.6646289825439453
    8. 'e' → logprob: -2.6646289825439453
    9. '`' → logprob: -2.9146289825439453
    10. 'entries' → logprob: -3.6646289825439453

Token 20: 's' (ID: 82)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.6778273582458496
    2. '```' → logprob: -1.6778273582458496
    3. 'input' → logprob: -1.8028273582458496
    4. 's' → logprob: -2.5528273582458496
    5. 'n' → logprob: -2.9278273582458496
    6. 'i' → logprob: -3.1778273582458496
    7. 'entrée' → logprob: -3.3028273582458496
    8. 'inputs' → logprob: -3.8028273582458496
    9. 'e' → logprob: -3.9278273582458496
    10. 'x' → logprob: -3.9278273582458496

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3757743835449219
    2. 'plit' → logprob: -2.125774383544922
    3. 'tr' → logprob: -2.500774383544922
    4. 'pl' → logprob: -3.750774383544922
    5. 'tring' → logprob: -4.125774383544922
    6. '=' → logprob: -4.125774383544922
    7. '=input' → logprob: -4.500774383544922
    8. 'trip' → logprob: -4.750774383544922
    9. 'aisie' → logprob: -4.750774383544922
    10. 'aisi' → logprob: -5.000774383544922

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25203120708465576
    2. ' input' → logprob: -1.5020312070846558
    3. 's' → logprob: -10.377031326293945
    4. '"' → logprob: -11.252031326293945
    5. ' s' → logprob: -11.752031326293945
    6. 'raw' → logprob: -12.127031326293945
    7. ' ' → logprob: -12.252031326293945
    8. ''' → logprob: -12.377031326293945
    9. ' ' → logprob: -12.377031326293945
    10. '(input' → logprob: -12.377031326293945

Token 23: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009973051957786083
    2. '("("' → logprob: -5.634973049163818
    3. '('' → logprob: -6.134973049163818
    4. '("' → logprob: -6.134973049163818
    5. '()' → logprob: -6.259973049163818
    6. '("")' → logprob: -9.884973526000977
    7. '("(' → logprob: -10.634973526000977
    8. '("""' → logprob: -12.009973526000977
    9. '(

' → logprob: -12.259973526000977
    10. ')' → logprob: -12.259973526000977

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015093892579898238
    2. 'strip' → logprob: -6.501509189605713
    3. ' split' → logprob: -12.251509666442871
    4. 'rstrip' → logprob: -13.626509666442871
    5. 'spl' → logprob: -15.126509666442871
    6. 's' → logprob: -15.126509666442871
    7. 'replace' → logprob: -15.376509666442871
    8. 'rs' → logprob: -16.001508712768555
    9. '(split' → logprob: -16.376508712768555
    10. 'sp' → logprob: -17.626508712768555

Token 25: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5248330235481262
    2. '(' → logprob: -1.0248329639434814
    3. '()' → logprob: -3.0248329639434814
    4. '("("' → logprob: -7.1498332023620605
    5. '("' → logprob: -9.274832725524902
    6. '(`' → logprob: -11.274832725524902
    7. '("""' → logprob: -12.274832725524902
    8. '(',' → logprob: -12.274832725524902
    9. '(None' → logprob: -12.899832725524902
    10. '('.')' → logprob: -12.899832725524902

Token 26: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1831505000591278
    2. '')' → logprob: -2.43315052986145
    3. ' ')' → logprob: -3.05815052986145
    4. ' )' → logprob: -3.43315052986145
    5. '()' → logprob: -8.933150291442871
    6. ' ' → logprob: -8.933150291442871
    7. ' ' → logprob: -10.683150291442871
    8. ''' → logprob: -10.933150291442871
    9. ' ')'' → logprob: -11.308150291442871
    10. '())' → logprob: -11.683150291442871

Token 27: 'num' (ID: 4571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23494306206703186
    2. '#' → logprob: -2.859943151473999
    3. 'print' → logprob: -3.109943151473999
    4. 'result' → logprob: -3.609943151473999
    5. 'if' → logprob: -3.734943151473999
    6. 'sum' → logprob: -4.48494291305542
    7. 'total' → logprob: -4.73494291305542
    8. 'n' → logprob: -4.85994291305542
    9. 'r' → logprob: -5.10994291305542
    10. 'x' → logprob: -5.35994291305542

Token 28: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002622862346470356
    2. '_' → logprob: -7.002623081207275
    3. '_s' → logprob: -7.127623081207275
    4. 'er' → logprob: -8.377622604370117
    5. 'éros' → logprob: -8.502622604370117
    6. 'ber' → logprob: -9.002622604370117
    7. '_tokens' → logprob: -9.752622604370117
    8. 'éro' → logprob: -10.127622604370117
    9. '[' → logprob: -10.627622604370117
    10. ')' → logprob: -11.002622604370117

Token 29: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19135797023773193
    2. ' int' → logprob: -2.0663580894470215
    3. 'len' → logprob: -3.3163580894470215
    4. ' len' → logprob: -4.8163580894470215
    5. '[int' → logprob: -6.5663580894470215
    6. '0' → logprob: -6.6913580894470215
    7. ' ' → logprob: -8.691357612609863
    8. '[len' → logprob: -9.191357612609863
    9. 's' → logprob: -10.191357612609863
    10. ' [' → logprob: -10.316357612609863

Token 30: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015618811594322324
    2. '().' → logprob: -7.001562118530273
    3. '(' → logprob: -7.626562118530273
    4. ' ()' → logprob: -9.501562118530273
    5. '())' → logprob: -10.751562118530273
    6. '()]' → logprob: -11.751562118530273
    7. '()>' → logprob: -11.751562118530273
    8. ')' → logprob: -12.251562118530273
    9. '()?>' → logprob: -12.251562118530273
    10. '('' → logprob: -12.376562118530273

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.267097532749176
    2. 'strip' → logprob: -1.5170974731445312
    3. 'isdigit' → logprob: -4.267097473144531
    4. 'rstrip' → logprob: -7.017097473144531
    5. 'startswith' → logprob: -10.142097473144531
    6. 'join' → logprob: -10.517097473144531
    7. 'count' → logprob: -11.017097473144531
    8. 'is' → logprob: -11.017097473144531
    9. 'replace' → logprob: -11.017097473144531
    10. 'pop' → logprob: -13.017097473144531

Token 32: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0008091482450254261
    2. ''' → logprob: -7.875809192657471
    3. '(' → logprob: -7.875809192657471
    4. '("("' → logprob: -10.500808715820312
    5. '('.')' → logprob: -12.000808715820312
    6. '()' → logprob: -12.875808715820312
    7. '('(' → logprob: -13.125808715820312
    8. '('_' → logprob: -13.250808715820312
    9. ''(' → logprob: -13.750808715820312
    10. '"' → logprob: -14.125808715820312

Token 33: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' Normal' (ID: 29591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4065982401371002
    2. ' =' → logprob: -2.1565983295440674
    3. '[' → logprob: -3.0315983295440674
    4. 'for' → logprob: -3.2815983295440674
    5. '=' → logprob: -3.7815983295440674
    6. 's' → logprob: -4.031598091125488
    7. '<|end|>' → logprob: -4.156598091125488
    8. ')' → logprob: -4.281598091125488
    9. 'num' → logprob: -4.406598091125488
    10. ''' → logprob: -4.531598091125488

Token 35: 'ement' (ID: 962)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7012614011764526
    2. 's' → logprob: -1.4512614011764526
    3. 'num' → logprob: -2.951261520385742
    4. ' =' → logprob: -2.951261520385742
    5. '=' → logprob: -3.576261520385742
    6. ')' → logprob: -3.701261520385742
    7. '[' → logprob: -4.076261520385742
    8. '_' → logprob: -4.326261520385742
    9. '.' → logprob: -4.451261520385742
    10. '(s' → logprob: -5.076261520385742

Token 36: ' il' (ID: 1793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9448482990264893
    2. ' ' → logprob: -1.3198482990264893
    3. ' =' → logprob: -3.0698482990264893
    4. ',' → logprob: -3.4448482990264893
    5. ' s' → logprob: -3.5698482990264893
    6. ')' → logprob: -3.5698482990264893
    7. 'num' → logprob: -3.6948482990264893
    8. '_' → logprob: -3.9448482990264893
    9. 'for' → logprob: -4.06984806060791
    10. '<|end|>' → logprob: -4.06984806060791

Token 37: ' faudrait' (ID: 128958)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.454644113779068
    2. ' faut' → logprob: -1.8296440839767456
    3. 's' → logprob: -2.579644203186035
    4. ' faudrait' → logprob: -2.954644203186035
    5. 'n' → logprob: -4.079644203186035
    6. 'y' → logprob: -4.454644203186035
    7. ' n' → logprob: -4.704644203186035
    8. ' devrait' → logprob: -4.829644203186035
    9. 'should' → logprob: -5.579644203186035
    10. ' manque' → logprob: -5.829644203186035

Token 38: ' tout' (ID: 5501)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -1.3336670398712158
    2. '#' → logprob: -1.8336670398712158
    3. ' faire' → logprob: -2.458667039871216
    4. ' convertir' → logprob: -2.708667039871216
    5. ' traiter' → logprob: -2.833667039871216
    6. ' ' → logprob: -3.208667039871216
    7. 's' → logprob: -3.333667039871216
    8. 'for' → logprob: -3.458667039871216
    9. '```' → logprob: -3.583667039871216
    10. 'faire' → logprob: -3.833667039871216

Token 39: ' convertir' (ID: 79223)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4328092336654663
    2. ' convertir' → logprob: -2.057809352874756
    3. 's' → logprob: -2.432809352874756
    4. '.split' → logprob: -2.557809352874756
    5. ' vérifier' → logprob: -2.557809352874756
    6. ' tr' → logprob: -3.057809352874756
    7. 'for' → logprob: -3.307809352874756
    8. 'tr' → logprob: -3.307809352874756
    9. ' traiter' → logprob: -3.432809352874756
    10. '.tr' → logprob: -3.932809352874756

Token 40: ' ici' (ID: 27994)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0518158674240112
    2. ' =' → logprob: -1.0518158674240112
    3. 'num' → logprob: -1.9268158674240112
    4. ' en' → logprob: -3.551815986633301
    5. '=' → logprob: -3.676815986633301
    6. 'en' → logprob: -3.926815986633301
    7. 'int' → logprob: -4.051815986633301
    8. '(' → logprob: -4.551815986633301
    9. '(s' → logprob: -4.676815986633301
    10. '()' → logprob: -5.176815986633301

Token 41: ' mais' (ID: 2899)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3338247239589691
    2. 'num' → logprob: -2.208824634552002
    3. '=' → logprob: -2.333824634552002
    4. 's' → logprob: -2.958824634552002
    5. 'nums' → logprob: -4.208824634552002
    6. '_' → logprob: -6.208824634552002
    7. 'for' → logprob: -6.458824634552002
    8. ' ' → logprob: -6.833824634552002
    9. ' num' → logprob: -6.958824634552002
    10. ' s' → logprob: -7.333824634552002

Token 42: ' on' (ID: 402)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8261376023292542
    2. ' for' → logprob: -1.5761375427246094
    3. '#' → logprob: -1.7011375427246094
    4. 's' → logprob: -3.2011375427246094
    5. 'for' → logprob: -3.8261375427246094
    6. ' #' → logprob: -3.9511375427246094
    7. ' on' → logprob: -4.201137542724609
    8. ' num' → logprob: -4.201137542724609
    9. ' ' → logprob: -4.576137542724609
    10. 'num' → logprob: -4.951137542724609

Token 43: ' va' (ID: 3423)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.92279452085495
    2. 'n' → logprob: -2.5477945804595947
    3. ' a' → logprob: -2.6727945804595947
    4. ' ' → logprob: -2.7977945804595947
    5. ' s' → logprob: -2.7977945804595947
    6. 's' → logprob: -3.1727945804595947
    7. ' ne' → logprob: -3.6727945804595947
    8. 'a' → logprob: -3.7977945804595947
    9. ' va' → logprob: -3.7977945804595947
    10. ' peut' → logprob: -4.047794342041016

Token 44: ' le' (ID: 505)
  Prédit: ' laisser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' laisser' → logprob: -2.070326089859009
    2. 'lais' → logprob: -2.320326089859009
    3. ' juste' → logprob: -2.570326089859009
    4. ' continuer' → logprob: -2.570326089859009
    5. '```' → logprob: -2.695326089859009
    6. 'faire' → logprob: -2.820326089859009
    7. 'contin' → logprob: -2.820326089859009
    8. 'y' → logprob: -2.820326089859009
    9. ' les' → logprob: -2.945326089859009
    10. ' y' → logprob: -3.570326089859009

Token 45: ' faire' (ID: 8119)
  Prédit: ' laisser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laisser' → logprob: -0.4098322093486786
    2. ' faire' → logprob: -1.784832239151001
    3. ' garder' → logprob: -3.284832239151001
    4. 'faire' → logprob: -3.784832239151001
    5. '```' → logprob: -4.034832000732422
    6. ' voir' → logprob: -4.534832000732422
    7. ' supp' → logprob: -5.034832000732422
    8. ' leave' → logprob: -5.034832000732422
    9. ' skip' → logprob: -5.159832000732422
    10. ' conserver' → logprob: -5.284832000732422

Token 46: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9110115766525269
    2. ' au' → logprob: -1.4110115766525269
    3. 'au' → logprob: -1.6610115766525269
    4. ' plus' → logprob: -2.1610116958618164
    5. 'à' → logprob: -4.411011695861816
    6. ' ' → logprob: -4.911011695861816
    7. ' à' → logprob: -5.786011695861816
    8. 'a' → logprob: -5.786011695861816
    9. 'dans' → logprob: -5.786011695861816
    10. 'ligne' → logprob: -6.036011695861816

Token 47: ' tard' (ID: 30225)
  Prédit: ' tard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.06388552486896515
    2. 't' → logprob: -2.938885450363159
    3. 'loin' → logprob: -5.188885688781738
    4. 'bas' → logprob: -6.563885688781738
    5. 'plus' → logprob: -7.063885688781738
    6. '```' → logprob: -8.188885688781738
    7. 'late' → logprob: -8.313885688781738
    8. ' loin' → logprob: -8.438885688781738
    9. ' bas' → logprob: -9.563885688781738
    10. '+' → logprob: -10.188885688781738

Token 48: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.396606206893921
    2. 'for' → logprob: -1.521606206893921
    3. 'n' → logprob: -2.021606206893921
    4. 'num' → logprob: -2.271606206893921
    5. 's' → logprob: -2.896606206893921
    6. 'a' → logprob: -3.021606206893921
    7. 'res' → logprob: -3.146606206893921
    8. '#' → logprob: -3.396606206893921
    9. '[' → logprob: -3.771606206893921
    10. 'i' → logprob: -4.3966064453125

Token 49: 'u' (ID: 84)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7737112641334534
    2. 'result' → logprob: -1.7737112045288086
    3. 'n' → logprob: -2.5237112045288086
    4. 'res' → logprob: -3.2737112045288086
    5. 'i' → logprob: -3.3987112045288086
    6. 's' → logprob: -3.3987112045288086
    7. '#' → logprob: -3.5237112045288086
    8. '[' → logprob: -3.8987112045288086
    9. 'num' → logprob: -3.8987112045288086
    10. 'a' → logprob: -3.8987112045288086

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31300830841064453
    2. '=' → logprob: -2.0630083084106445
    3. 'n' → logprob: -2.9380083084106445
    4. 'm' → logprob: -3.6880083084106445
    5. 's' → logprob: -4.5630083084106445
    6. 'num' → logprob: -4.6880083084106445
    7. 'p' → logprob: -5.3130083084106445
    8. 'sers' → logprob: -5.3130083084106445
    9. ' ' → logprob: -5.9380083084106445
    10. '[' → logprob: -6.0630083084106445

Token 51: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5967383980751038
    2. 'num' → logprob: -1.721738338470459
    3. ' []' → logprob: -2.346738338470459
    4. 'int' → logprob: -3.346738338470459
    5. ' [' → logprob: -3.971738338470459
    6. 'list' → logprob: -3.971738338470459
    7. '[int' → logprob: -3.971738338470459
    8. '[' → logprob: -4.221738338470459
    9. 's' → logprob: -4.596738338470459
    10. ' num' → logprob: -4.596738338470459

Token 52: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005313565954566002
    2. '().' → logprob: -5.255313396453857
    3. '(' → logprob: -9.880313873291016
    4. ' ()' → logprob: -11.880313873291016
    5. '()

' → logprob: -12.630313873291016
    6. '()`' → logprob: -12.880313873291016
    7. '();' → logprob: -12.880313873291016
    8. '())' → logprob: -13.130313873291016
    9. '()
' → logprob: -13.255313873291016
    10. '(),' → logprob: -13.755313873291016

Token 53: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006756579037755728
    2. 'strip' → logprob: -5.006756782531738
    3. 'rstrip' → logprob: -10.381756782531738
    4. 'replace' → logprob: -12.131756782531738
    5. 'spl' → logprob: -13.256756782531738
    6. 'isdigit' → logprob: -13.881756782531738
    7. 'startswith' → logprob: -14.006756782531738
    8. 'join' → logprob: -15.006756782531738
    9. 'rs' → logprob: -15.256756782531738
    10. ' split' → logprob: -15.256756782531738

Token 54: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04498798027634621
    2. '(' → logprob: -3.169987916946411
    3. '('' → logprob: -6.54498815536499
    4. ')' → logprob: -8.419987678527832
    5. ''' → logprob: -9.419987678527832
    6. '().' → logprob: -10.544987678527832
    7. '(
' → logprob: -10.669987678527832
    8. '"' → logprob: -10.919987678527832
    9. '()
' → logprob: -10.919987678527832
    10. '())' → logprob: -11.044987678527832

Token 55: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.81295245885849
    2. 'for' → logprob: -1.8129525184631348
    3. '#' → logprob: -2.3129525184631348
    4. 'n' → logprob: -2.5629525184631348
    5. 'i' → logprob: -3.1879525184631348
    6. 'a' → logprob: -3.4379525184631348
    7. 'x' → logprob: -3.5629525184631348
    8. 'u' → logprob: -4.187952518463135
    9. 'print' → logprob: -4.437952518463135
    10. '[' → logprob: -4.687952518463135

Token 56: ' unpack' (ID: 61704)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7312283515930176
    2. '#' → logprob: -1.1062283515930176
    3. 'if' → logprob: -2.6062283515930176
    4. 'n' → logprob: -3.7312283515930176
    5. 'for' → logprob: -3.9812283515930176
    6. 'f' → logprob: -4.231228351593018
    7. 'u' → logprob: -4.481228351593018
    8. 'a' → logprob: -5.106228351593018
    9. 'r' → logprob: -5.231228351593018
    10. 'd' → logprob: -5.231228351593018

Token 57: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3030122220516205
    2. 's' → logprob: -2.9280121326446533
    3. 'num' → logprob: -3.1780121326446533
    4. 'u' → logprob: -3.5530121326446533
    5. ' a' → logprob: -3.6780121326446533
    6. '_' → logprob: -4.178012371063232
    7. '(' → logprob: -4.303012371063232
    8. '*' → logprob: -4.428012371063232
    9. '=' → logprob: -4.553012371063232
    10. 'v' → logprob: -4.678012371063232

Token 58: ' la' (ID: 557)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.1330883502960205
    2. ' la' → logprob: -1.7580883502960205
    3. 'u' → logprob: -2.0080883502960205
    4. 'l' → logprob: -2.5080883502960205
    5. 'la' → logprob: -3.0080883502960205
    6. ' nouveau' → logprob: -3.2580883502960205
    7. '`' → logprob: -3.6330883502960205
    8. ' ' → logprob: -3.8830883502960205
    9. ' deux' → logprob: -4.133088111877441
    10. 'pp' → logprob: -4.383088111877441

Token 59: ' main' (ID: 2758)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.044141173362732
    2. 'part' → logprob: -1.294141173362732
    3. 'la' → logprob: -1.294141173362732
    4. 'pe' → logprob: -3.7941412925720215
    5. ' la' → logprob: -4.7941412925720215
    6. 'plus' → logprob: -5.5441412925720215
    7. ' part' → logprob: -5.5441412925720215
    8. 'u' → logprob: -5.6691412925720215
    9. '```' → logprob: -5.6691412925720215
    10. 'p' → logprob: -5.7941412925720215

Token 60: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06714726984500885
    2. 'x' → logprob: -3.6921472549438477
    3. 'i' → logprob: -3.9421472549438477
    4. 'n' → logprob: -4.317147254943848
    5. 'v' → logprob: -5.817147254943848
    6. 'u' → logprob: -6.067147254943848
    7. 'l' → logprob: -7.692147254943848
    8. 't' → logprob: -8.192147254943848
    9. 'r' → logprob: -8.317147254943848
    10. 'p' → logprob: -8.817147254943848

Token 61: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29719096422195435
    2. 'n' → logprob: -1.6721909046173096
    3. 'x' → logprob: -3.1721909046173096
    4. 'l' → logprob: -5.422191143035889
    5. 'i' → logprob: -5.422191143035889
    6. 'u' → logprob: -5.797191143035889
    7. 'p' → logprob: -6.047191143035889
    8. ' a' → logprob: -6.172191143035889
    9. ' n' → logprob: -6.297191143035889
    10. 'A' → logprob: -6.672191143035889

Token 62: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.6333965063095093
    2. 'ar' → logprob: -1.3833965063095093
    3. 'on' → logprob: -2.508396625518799
    4. 'omm' → logprob: -2.883396625518799
    5. '#' → logprob: -3.508396625518799
    6. 'om' → logprob: -4.508396625518799
    7. 'e' → logprob: -4.883396625518799
    8. ''est' → logprob: -5.008396625518799
    9. 'omp' → logprob: -5.133396625518799
    10. 'ont' → logprob: -5.383396625518799

Token 63: ' plus' (ID: 2932)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.137332558631897
    2. ' pas' → logprob: -1.637332558631897
    3. ' un' → logprob: -2.3873324394226074
    4. 'à' → logprob: -2.8873324394226074
    5. 'tout' → logprob: -3.2623324394226074
    6. 'un' → logprob: -3.8873324394226074
    7. 'ça' → logprob: -3.8873324394226074
    8. 'comme' → logprob: -4.012332439422607
    9. ' mieux' → logprob: -4.012332439422607
    10. 'pour' → logprob: -4.012332439422607

Token 64: ' lis' (ID: 20784)
  Prédit: 'clair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clair' → logprob: -0.8331234455108643
    2. 'simple' → logprob: -1.2081234455108643
    3. 'pro' → logprob: -2.4581234455108643
    4. 'fac' → logprob: -3.0831234455108643
    5. ' clair' → logprob: -3.3331234455108643
    6. 'lis' → logprob: -3.3331234455108643
    7. 'pr' → logprob: -4.458123207092285
    8. ' simple' → logprob: -4.708123207092285
    9. 'safe' → logprob: -4.708123207092285
    10. ' sûr' → logprob: -5.208123207092285

Token 65: 'ible' (ID: 1430)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.43349748849868774
    2. 'bre' → logprob: -1.558497428894043
    3. 'b' → logprob: -2.308497428894043
    4. 'ible' → logprob: -3.308497428894043
    5. 're' → logprob: -6.308497428894043
    6. 'be' → logprob: -7.058497428894043
    7. 'bles' → logprob: -7.308497428894043
    8. 'bres' → logprob: -7.933497428894043
    9. '```' → logprob: -8.308497428894043
    10. 'vre' → logprob: -8.433497428894043

Token 66: ' non' (ID: 2893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15456382930278778
    2. 'n' → logprob: -2.5295639038085938
    3. 'x' → logprob: -3.2795639038085938
    4. 'i' → logprob: -3.9045639038085938
    5. 'v' → logprob: -6.404563903808594
    6. 'num' → logprob: -6.779563903808594
    7. 'd' → logprob: -7.904563903808594
    8. 'u' → logprob: -8.154563903808594
    9. 't' → logprob: -8.154563903808594
    10. 'l' → logprob: -8.529563903808594

Token 67: ' ?
' (ID: 19740)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7538536787033081
    2. 'n' → logprob: -1.003853678703308
    3. 'i' → logprob: -2.6288537979125977
    4. 'x' → logprob: -3.5038537979125977
    5. 't' → logprob: -4.128853797912598
    6. 'p' → logprob: -4.753853797912598
    7. 'v' → logprob: -5.253853797912598
    8. 'u' → logprob: -5.628853797912598
    9. '```' → logprob: -5.628853797912598
    10. 'm' → logprob: -5.753853797912598

Token 68: 'num' (ID: 4571)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12939336895942688
    2. 'n' → logprob: -2.6293933391571045
    3. 'x' → logprob: -3.3793933391571045
    4. 'i' → logprob: -5.504393577575684
    5. 'v' → logprob: -5.879393577575684
    6. '```' → logprob: -6.504393577575684
    7. 'p' → logprob: -6.879393577575684
    8. 'u' → logprob: -6.879393577575684
    9. 'm' → logprob: -7.129393577575684
    10. 'num' → logprob: -7.629393577575684

Token 69: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4410615861415863
    2. ' =' → logprob: -1.6910616159439087
    3. '=' → logprob: -2.066061496734619
    4. ',' → logprob: -4.066061496734619
    5. 's' → logprob: -4.066061496734619
    6. '0' → logprob: -6.066061496734619
    7. '1' → logprob: -6.316061496734619
    8. '[:]' → logprob: -6.691061496734619
    9. ' ' → logprob: -7.066061496734619
    10. '.' → logprob: -7.066061496734619

Token 70: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.255440354347229
    2. '1' → logprob: -1.880440354347229
    3. 's' → logprob: -2.7554402351379395
    4. ' ,' → logprob: -5.7554402351379395
    5. '[' → logprob: -6.1304402351379395
    6. ' =' → logprob: -6.2554402351379395
    7. '=' → logprob: -6.6304402351379395
    8. ',s' → logprob: -8.630440711975098
    9. '0' → logprob: -8.880440711975098
    10. ',num' → logprob: -9.005440711975098

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07465370744466782
    2. 'int' → logprob: -2.6996536254882812
    3. ' num' → logprob: -5.449653625488281
    4. 'num' → logprob: -7.824653625488281
    5. ' s' → logprob: -13.199653625488281
    6. ' ' → logprob: -13.199653625488281
    7. '[int' → logprob: -13.324653625488281
    8. 's' → logprob: -14.199653625488281
    9. '=int' → logprob: -14.199653625488281
    10. '(int' → logprob: -14.699653625488281

Token 72: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.23347321152687073
    2. '(' → logprob: -1.7334731817245483
    3. '(s' → logprob: -3.483473300933838
    4. '(u' → logprob: -7.108473300933838
    5. '(n' → logprob: -10.85847282409668
    6. ' (' → logprob: -12.10847282409668
    7. '(nums' → logprob: -12.60847282409668
    8. 'num' → logprob: -13.73347282409668
    9. '(
' → logprob: -14.35847282409668
    10. '('' → logprob: -14.48347282409668

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.125
    3. ' [' → logprob: -16.375
    4. '1' → logprob: -17.625
    5. ')' → logprob: -19.0
    6. '[
' → logprob: -19.875
    7. ' ' → logprob: -20.0
    8. 's' → logprob: -21.5
    9. '\[' → logprob: -22.0
    10. '   ' → logprob: -22.125

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -14.000017166137695
    4. '2' → logprob: -18.250017166137695
    5. '[' → logprob: -19.250017166137695
    6. ']' → logprob: -19.625017166137695
    7. ')' → logprob: -19.750017166137695
    8. '3' → logprob: -20.375017166137695
    9. '])' → logprob: -20.750017166137695
    10. '-' → logprob: -20.750017166137695

Token 75: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20160873234272003
    2. ')' → logprob: -1.7016087770462036
    3. ']' → logprob: -9.326608657836914
    4. ' ])' → logprob: -9.951608657836914
    5. ' )' → logprob: -11.201608657836914
    6. ''])' → logprob: -11.451608657836914
    7. '])
' → logprob: -11.451608657836914
    8. '))' → logprob: -11.826608657836914
    9. ')
' → logprob: -11.826608657836914
    10. ')]' → logprob: -12.701608657836914

Token 76: ' 
' (ID: 793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: 'num' (ID: 4571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3485313355922699
    2. '[' → logprob: -1.2235313653945923
    3. '2' → logprob: -9.473531723022461
    4. '```' → logprob: -12.473531723022461
    5. ' ' → logprob: -13.223531723022461
    6. ' [' → logprob: -14.348531723022461
    7. '[
' → logprob: -14.848531723022461
    8. '`' → logprob: -14.848531723022461
    9. ']' → logprob: -14.973531723022461
    10. '=' → logprob: -15.098531723022461

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00864659808576107
    2. '=' → logprob: -4.758646488189697
    3. '=int' → logprob: -10.383646965026855
    4. ' ' → logprob: -14.008646965026855
    5. 'int' → logprob: -15.633646965026855
    6. ')' → logprob: -16.63364601135254
    7. '[int' → logprob: -16.75864601135254
    8. '[' → logprob: -18.38364601135254
    9. ' ' → logprob: -18.50864601135254
    10. ' =
' → logprob: -19.00864601135254

Token 80: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740802049636841
    2. 'int' → logprob: -0.9740802049636841
    3. ' ' → logprob: -13.849080085754395
    4. '=int' → logprob: -14.349080085754395
    5. ' ' → logprob: -14.599080085754395
    6. '(int' → logprob: -15.224080085754395
    7. '[int' → logprob: -15.474080085754395
    8. 'num' → logprob: -15.599080085754395
    9. ' in' → logprob: -15.599080085754395
    10. '	int' → logprob: -15.724080085754395

Token 81: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. ' (' → logprob: -14.626171112060547
    4. ' num' → logprob: -17.001171112060547
    5. '(nums' → logprob: -17.126171112060547
    6. '(s' → logprob: -17.251171112060547
    7. 'num' → logprob: -17.376171112060547
    8. ',num' → logprob: -18.251171112060547
    9. '[num' → logprob: -18.876171112060547
    10. '(n' → logprob: -19.001171112060547

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002314303710591048
    2. '1' → logprob: -8.375231742858887
    3. ' [' → logprob: -14.750231742858887
    4. '[
' → logprob: -15.875231742858887
    5. ' ' → logprob: -16.25023078918457
    6. ')' → logprob: -16.50023078918457
    7. '```' → logprob: -16.50023078918457
    8. '2' → logprob: -16.62523078918457
    9. '   ' → logprob: -16.75023078918457
    10. '(' → logprob: -17.37523078918457

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.50003719329834
    3. '0' → logprob: -12.00003719329834
    4. '])' → logprob: -13.12503719329834
    5. '   ' → logprob: -14.62503719329834
    6. '2' → logprob: -15.25003719329834
    7. ']' → logprob: -15.50003719329834
    8. '  ' → logprob: -15.87503719329834
    9. '```' → logprob: -16.125036239624023
    10. '-' → logprob: -17.250036239624023

Token 84: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006736691575497389
    2. ')' → logprob: -5.006736755371094
    3. ' ])' → logprob: -11.631736755371094
    4. '))' → logprob: -12.381736755371094
    5. ']' → logprob: -12.381736755371094
    6. ''])' → logprob: -13.506736755371094
    7. ')]' → logprob: -13.881736755371094
    8. ')])' → logprob: -14.506736755371094
    9. '])
' → logprob: -14.881736755371094
    10. ' )' → logprob: -15.006736755371094

Token 85: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.44085693359375
    2. ' ' → logprob: -1.56585693359375
    3. 'u' → logprob: -1.56585693359375
    4. '<|end|>' → logprob: -1.81585693359375
    5. '=' → logprob: -3.31585693359375
    6. ')' → logprob: -3.69085693359375
    7. 'n' → logprob: -3.81585693359375
    8. '+' → logprob: -3.94085693359375
    9. 's' → logprob: -4.69085693359375
    10. ' 
' → logprob: -4.94085693359375

Token 86: ' un' (ID: 537)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6196015477180481
    2. 'for' → logprob: -1.8696014881134033
    3. '#' → logprob: -1.9946014881134033
    4. 'u' → logprob: -2.7446014881134033
    5. 'i' → logprob: -3.4946014881134033
    6. ' if' → logprob: -3.6196014881134033
    7. 'print' → logprob: -4.994601726531982
    8. 'def' → logprob: -5.244601726531982
    9. ' for' → logprob: -5.244601726531982
    10. 's' → logprob: -5.494601726531982

Token 87: ' peu' (ID: 9235)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0303733348846436
    2. '=' → logprob: -1.4053733348846436
    3. 'e' → logprob: -1.9053733348846436
    4. 'if' → logprob: -2.9053733348846436
    5. 'u' → logprob: -3.1553733348846436
    6. ' if' → logprob: -3.7803733348846436
    7. '_' → logprob: -3.9053733348846436
    8. 'a' → logprob: -4.530373573303223
    9. '+' → logprob: -4.655373573303223
    10. 'i' → logprob: -4.905373573303223

Token 88: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.662655770778656
    2. 'd' → logprob: -2.162655830383301
    3. '=' → logprob: -2.287655830383301
    4. '#' → logprob: -2.662655830383301
    5. ' de' → logprob: -2.912655830383301
    6. 's' → logprob: -3.287655830383301
    7. 'plus' → logprob: -3.912655830383301
    8. ' ' → logprob: -4.412655830383301
    9. ' =' → logprob: -4.412655830383301
    10. '<|end|>' → logprob: -5.037655830383301

Token 89: ' logique' (ID: 115350)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.6654850244522095
    2. 'code' → logprob: -2.04048490524292
    3. ' math' → logprob: -2.41548490524292
    4. ' calcul' → logprob: -2.91548490524292
    5. 'calcul' → logprob: -2.91548490524292
    6. 'math' → logprob: -3.66548490524292
    7. ' validation' → logprob: -3.91548490524292
    8. ' logique' → logprob: -3.91548490524292
    9. ' maths' → logprob: -4.54048490524292
    10. 's' → logprob: -5.16548490524292

Token 90: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6124969720840454
    2. ' if' → logprob: -1.2374969720840454
    3. 'i' → logprob: -2.362496852874756
    4. ' 
' → logprob: -3.362496852874756
    5. ' ' → logprob: -4.362496852874756
    6. 'n' → logprob: -5.237496852874756
    7. '```' → logprob: -5.237496852874756
    8. ' i' → logprob: -5.487496852874756
    9. '\n' → logprob: -6.237496852874756
    10. '  
' → logprob: -6.237496852874756

Token 91: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09303217381238937
    2. 'if' → logprob: -2.468032121658325
    3. ' for' → logprob: -7.093032360076904
    4. ' i' → logprob: -7.218032360076904
    5. ' ' → logprob: -7.718032360076904
    6. ' ' → logprob: -8.093031883239746
    7. ' u' → logprob: -8.218031883239746
    8. 'for' → logprob: -8.218031883239746
    9. ' s' → logprob: -9.093031883239746
    10. 'n' → logprob: -9.343031883239746

Token 92: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.1306374073028564
    2. 'a' → logprob: -1.5056374073028564
    3. 'est' → logprob: -1.8806374073028564
    4. '#' → logprob: -2.2556374073028564
    5. 'e' → logprob: -2.7556374073028564
    6. ''' → logprob: -2.8806374073028564
    7. ''#' → logprob: -3.7556374073028564
    8. ''a' → logprob: -4.380637168884277
    9. 'la' → logprob: -4.380637168884277
    10. ''''' → logprob: -5.005637168884277

Token 93: ' pas' (ID: 2173)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.18415001034736633
    2. 'pas' → logprob: -3.559149980545044
    3. 'b' → logprob: -4.059150218963623
    4. 'simple' → logprob: -4.309150218963623
    5. 'part' → logprob: -4.559150218963623
    6. 'la' → logprob: -4.559150218963623
    7. 'pour' → logprob: -4.684150218963623
    8. 'bon' → logprob: -5.059150218963623
    9. 'plus' → logprob: -5.309150218963623
    10. 'l' → logprob: -5.434150218963623

Token 94: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2488895654678345
    2. 'grave' → logprob: -1.6238895654678345
    3. ' fini' → logprob: -2.498889446258545
    4. ' compliqué' → logprob: -2.748889446258545
    5. 'mal' → logprob: -2.873889446258545
    6. 'la' → logprob: -2.998889446258545
    7. 'tout' → logprob: -3.873889446258545
    8. 'be' → logprob: -3.998889446258545
    9. 'possible' → logprob: -4.248889446258545
    10. ' sor' → logprob: -4.248889446258545

Token 95: ' mer' (ID: 4361)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.687476396560669
    2. '#' → logprob: -1.187476396560669
    3. ':' → logprob: -2.812476396560669
    4. '?' → logprob: -3.812476396560669
    5. 's' → logprob: -4.18747615814209
    6. 'for' → logprob: -4.31247615814209
    7. '+' → logprob: -4.56247615814209
    8. 'f' → logprob: -4.56247615814209
    9. 'def' → logprob: -5.06247615814209
    10. 't' → logprob: -5.18747615814209

Token 96: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7153417468070984
    2. 'de' → logprob: -0.7153417468070984
    3. 'veille' → logprob: -4.840341567993164
    4. 'e' → logprob: -5.340341567993164
    5. 'dou' → logprob: -5.590341567993164
    6. 'dei' → logprob: -6.465341567993164
    7. 'ci' → logprob: -6.715341567993164
    8. 'credi' → logprob: -7.965341567993164
    9. 'di' → logprob: -8.215341567993164
    10. 've' → logprob: -8.715341567993164

Token 97: ' boire' (ID: 136900)
  Prédit: 'bo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bo' → logprob: -0.015821782872080803
    2. 'bu' → logprob: -4.765821933746338
    3. ' boire' → logprob: -5.140821933746338
    4. '-bo' → logprob: -7.640821933746338
    5. '```' → logprob: -8.39082145690918
    6. '123' → logprob: -9.64082145690918
    7. 'b' → logprob: -9.64082145690918
    8. 'bour' → logprob: -9.76582145690918
    9. 'bob' → logprob: -10.14082145690918
    10. 'bac' → logprob: -10.26582145690918

Token 98: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4246170222759247
    2. ' ' → logprob: -2.049617052078247
    3. ' if' → logprob: -2.174617052078247
    4. 'i' → logprob: -3.424617052078247
    5. ' 
' → logprob: -4.174616813659668
    6. 'for' → logprob: -4.799616813659668
    7. '
' → logprob: -5.049616813659668
    8. ',' → logprob: -5.049616813659668
    9. 'n' → logprob: -5.174616813659668
    10. 's' → logprob: -5.174616813659668

Token 99: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11500086635351181
    2. 'result' → logprob: -2.7400009632110596
    3. 'for' → logprob: -3.4900009632110596
    4. 'res' → logprob: -5.3650007247924805
    5. 'i' → logprob: -6.1150007247924805
    6. 'total' → logprob: -6.6150007247924805
    7. 'sum' → logprob: -6.8650007247924805
    8. 'a' → logprob: -7.3650007247924805
    9. 'x' → logprob: -7.3650007247924805
    10. 's' → logprob: -7.7400007247924805

Token 100: ' u' (ID: 337)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.38556942343711853
    2. ' u' → logprob: -1.885569453239441
    3. 'num' → logprob: -2.0105693340301514
    4. ' s' → logprob: -4.3855695724487305
    5. 'u' → logprob: -4.5105695724487305
    6. ' len' → logprob: -5.2605695724487305
    7. ' ' → logprob: -5.6355695724487305
    8. 's' → logprob: -6.6355695724487305
    9. 'len' → logprob: -8.01056957244873
    10. '  ' → logprob: -9.13556957244873

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16160063445568085
    2. '==' → logprob: -1.9116005897521973
    3. '=' → logprob: -7.911600589752197
    4. '[' → logprob: -8.661601066589355
    5. ' in' → logprob: -8.661601066589355
    6. '=='' → logprob: -9.286601066589355
    7. ' ' → logprob: -9.286601066589355
    8. ' =' → logprob: -9.536601066589355
    9. '=="' → logprob: -9.786601066589355
    10. '.' → logprob: -10.036601066589355

Token 102: ' s' (ID: 265)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3938020169734955
    2. ''s' → logprob: -1.6438020467758179
    3. '"' → logprob: -2.2688019275665283
    4. '"s' → logprob: -4.768802165985107
    5. 'num' → logprob: -5.643802165985107
    6. ' '' → logprob: -6.143802165985107
    7. 's' → logprob: -6.143802165985107
    8. '"+"' → logprob: -6.518802165985107
    9. '">' → logprob: -6.643802165985107
    10. ''m' → logprob: -7.018802165985107

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01561161782592535
    2. ''[' → logprob: -4.39061164855957
    3. ''' → logprob: -6.01561164855957
    4. '[num' → logprob: -7.64061164855957
    5. '"[' → logprob: -9.64061164855957
    6. '"' → logprob: -9.89061164855957
    7. '['' → logprob: -10.64061164855957
    8. '[-' → logprob: -11.76561164855957
    9. 'num' → logprob: -12.14061164855957
    10. ''s' → logprob: -12.51561164855957

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021196885500103235
    2. '1' → logprob: -6.252119541168213
    3. '2' → logprob: -8.877120018005371
    4. ' ' → logprob: -10.752120018005371
    5. '3' → logprob: -10.877120018005371
    6. '-' → logprob: -12.377120018005371
    7. '4' → logprob: -13.127120018005371
    8. '[' → logprob: -13.127120018005371
    9. '5' → logprob: -14.189620018005371
    10. 'num' → logprob: -14.939620018005371

Token 105: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2778126299381256
    2. '):' → logprob: -1.5278126001358032
    3. ':' → logprob: -4.027812480926514
    4. ']' → logprob: -5.277812480926514
    5. ')' → logprob: -6.902812480926514
    6. ' ):' → logprob: -8.027812957763672
    7. ']):' → logprob: -8.402812957763672
    8. '[' → logprob: -8.402812957763672
    9. '':' → logprob: -8.527812957763672
    10. '']:' → logprob: -8.652812957763672

Token 106: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007676079869270325
    2. ' :' → logprob: -5.007676124572754
    3. ':
' → logprob: -7.757676124572754
    4. 'print' → logprob: -8.757676124572754
    5. '   ' → logprob: -9.132676124572754
    6. ' and' → logprob: -9.507676124572754
    7. ' print' → logprob: -9.632676124572754
    8. '.' → logprob: -11.007676124572754
    9. ' ' → logprob: -11.007676124572754
    10. ')' → logprob: -11.007676124572754

Token 107: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.253917932510376
    2. ' print' → logprob: -1.503917932510376
    3. '   ' → logprob: -6.753917694091797
    4. 'num' → logprob: -8.378917694091797
    5. 'result' → logprob: -8.878917694091797
    6. ' num' → logprob: -9.128917694091797
    7. ' result' → logprob: -9.378917694091797
    8. ' ' → logprob: -9.628917694091797
    9. 'pass' → logprob: -10.253917694091797
    10. ' pass' → logprob: -10.378917694091797

Token 108: ' petite' (ID: 28119)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02053150162100792
    2. ' print' → logprob: -4.02053165435791
    3. 'pass' → logprob: -6.52053165435791
    4. 'num' → logprob: -8.27053165435791
    5. ' pass' → logprob: -8.64553165435791
    6. 'result' → logprob: -8.89553165435791
    7. '#' → logprob: -9.52053165435791
    8. 'for' → logprob: -9.77053165435791
    9. '   ' → logprob: -10.27053165435791
    10. 'if' → logprob: -10.77053165435791

Token 109: ' décr' (ID: 123041)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1820303499698639
    2. ' print' → logprob: -3.057030439376831
    3. 'indent' → logprob: -4.682030200958252
    4. 'pause' → logprob: -4.807030200958252
    5. 'diff' → logprob: -5.057030200958252
    6. 's' → logprob: -5.182030200958252
    7. 'prise' → logprob: -5.182030200958252
    8. ' modification' → logprob: -5.307030200958252
    9. ' correction' → logprob: -5.307030200958252
    10. ' boucle' → logprob: -5.307030200958252

Token 110: 'ément' (ID: 17645)
  Prédit: 'ption'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ption' → logprob: -1.2375359535217285
    2. 'ar' → logprob: -1.7375359535217285
    3. 'mentation' → logprob: -2.2375359535217285
    4. 'rip' → logprob: -2.2375359535217285
    5. 'ision' → logprob: -2.3625359535217285
    6. 'lar' → logprob: -2.6125359535217285
    7. 'ente' → logprob: -3.9875359535217285
    8. 'p' → logprob: -4.1125359535217285
    9. 'mar' → logprob: -4.2375359535217285
    10. 'ip' → logprob: -4.2375359535217285

Token 111: 'ation' (ID: 387)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8607081770896912
    2. 't' → logprob: -1.235708236694336
    3. 'ment' → logprob: -2.235708236694336
    4. 'num' → logprob: -3.110708236694336
    5. 'tion' → logprob: -3.610708236694336
    6. 'ion' → logprob: -3.985708236694336
    7. 'ent' → logprob: -3.985708236694336
    8. 'nt' → logprob: -3.985708236694336
    9. ' ' → logprob: -4.610708236694336
    10. 'mentation' → logprob: -4.985708236694336

Token 112: ',' (ID: 11)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1619570553302765
    2. '   ' → logprob: -2.161957025527954
    3. ' num' → logprob: -3.536957025527954
    4. 's' → logprob: -6.286957263946533
    5. '
' → logprob: -6.286957263946533
    6. '1' → logprob: -7.786957263946533
    7. ' s' → logprob: -7.786957263946533
    8. ':' → logprob: -8.661956787109375
    9. '    
' → logprob: -8.786956787109375
    10. ' ' → logprob: -9.161956787109375

Token 113: ' allez' (ID: 72134)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5611827969551086
    2. ' num' → logprob: -0.9361827969551086
    3. 'print' → logprob: -4.061182975769043
    4. ' print' → logprob: -4.061182975769043
    5. ' pass' → logprob: -6.436182975769043
    6. ' ' → logprob: -8.186182975769043
    7. 'pass' → logprob: -8.436182975769043
    8. ' s' → logprob: -9.061182975769043
    9. ' u' → logprob: -9.311182975769043
    10. '   ' → logprob: -9.436182975769043

Token 114: ' hop' (ID: 10284)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10824770480394363
    2. ' num' → logprob: -2.483247756958008
    3. '   ' → logprob: -4.733247756958008
    4. '1' → logprob: -5.233247756958008
    5. 's' → logprob: -6.858247756958008
    6. 'print' → logprob: -7.233247756958008
    7. ' s' → logprob: -7.233247756958008
    8. 'u' → logprob: -7.483247756958008
    9. ' ' → logprob: -7.483247756958008
    10. '
' → logprob: -7.858247756958008

Token 115: '
' (ID: 198)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04717579483985901
    2. ' num' → logprob: -3.547175884246826
    3. '   ' → logprob: -4.297175884246826
    4. 's' → logprob: -6.047175884246826
    5. '1' → logprob: -7.422175884246826
    6. ' s' → logprob: -8.047175407409668
    7. ' ' → logprob: -9.297175407409668
    8. 'print' → logprob: -10.047175407409668
    9. '
' → logprob: -10.172175407409668
    10. '(num' → logprob: -10.422175407409668

Token 116: '   ' (ID: 271)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.15838322043418884
    2. '   ' → logprob: -2.0333831310272217
    3. ' num' → logprob: -4.283383369445801
    4. 'print' → logprob: -6.658383369445801
    5. '1' → logprob: -9.2833833694458
    6. ' print' → logprob: -9.4083833694458
    7. ' ' → logprob: -9.5333833694458
    8. '
' → logprob: -9.6583833694458
    9. 's' → logprob: -9.9083833694458
    10. '	num' → logprob: -10.0333833694458

Token 117: ' res' (ID: 694)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.003683093935251236
    2. ' num' → logprob: -6.003683090209961
    3. 'print' → logprob: -6.753683090209961
    4. '   ' → logprob: -11.128683090209961
    5. ' print' → logprob: -11.628683090209961
    6. ' ' → logprob: -12.128683090209961
    7. 'result' → logprob: -13.128683090209961
    8. 's' → logprob: -13.253683090209961
    9. '	num' → logprob: -13.378683090209961
    10. '
' → logprob: -14.003683090209961

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6517820358276367
    2. ' =' → logprob: -0.9017820358276367
    3. 'ult' → logprob: -2.6517820358276367
    4. 'ults' → logprob: -7.401782035827637
    5. ' -=' → logprob: -7.526782035827637
    6. 's' → logprob: -8.276782035827637
    7. 't' → logprob: -8.526782035827637
    8. 'u' → logprob: -8.651782035827637
    9. '-=' → logprob: -8.901782035827637
    10. ' ' → logprob: -8.901782035827637

Token 119: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.062420804053545
    2. ' num' → logprob: -2.8124208450317383
    3. 'int' → logprob: -8.062420845031738
    4. ' ' → logprob: -9.812420845031738
    5. '1' → logprob: -10.562420845031738
    6. ' int' → logprob: -11.062420845031738
    7. '(num' → logprob: -11.562420845031738
    8. '   ' → logprob: -11.812420845031738
    9. '	num' → logprob: -12.312420845031738
    10. '10' → logprob: -12.312420845031738

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016467304667457938
    2. '[' → logprob: -6.626646518707275
    3. '2' → logprob: -8.126646995544434
    4. ' ' → logprob: -11.626646995544434
    5. '0' → logprob: -12.501646995544434
    6. '-' → logprob: -13.064146995544434
    7. '```' → logprob: -13.751646995544434
    8. '[-' → logprob: -14.001646995544434
    9. '"' → logprob: -14.064146995544434
    10. 'num' → logprob: -14.314146995544434

Token 121: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1270572543144226
    2. '-' → logprob: -2.1270573139190674
    3. '+' → logprob: -9.502057075500488
    4. ' +' → logprob: -10.877057075500488
    5. ' ' → logprob: -10.877057075500488
    6. ' -
' → logprob: -12.627057075500488
    7. '<|end|>' → logprob: -12.752057075500488
    8. ' ' → logprob: -12.877057075500488
    9. '1' → logprob: -13.252057075500488
    10. '-
' → logprob: -14.127057075500488

Token 122: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07240493595600128
    2. '1' → logprob: -2.9474048614501953
    3. ' num' → logprob: -4.072404861450195
    4. ' ' → logprob: -8.072404861450195
    5. 'int' → logprob: -11.947404861450195
    6. '	num' → logprob: -11.947404861450195
    7. '   ' → logprob: -13.759904861450195
    8. '  ' → logprob: -13.884904861450195
    9. '(num' → logprob: -13.947404861450195
    10. '2' → logprob: -14.197404861450195

Token 123: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.25298023223876953
    2. '1' → logprob: -1.5029802322387695
    3. ' num' → logprob: -7.1279802322387695
    4. ' ' → logprob: -8.62798023223877
    5. 'int' → logprob: -10.75298023223877
    6. '   ' → logprob: -11.25298023223877
    7. '2' → logprob: -11.62798023223877
    8. '	num' → logprob: -12.44048023223877
    9. '  ' → logprob: -12.50298023223877
    10. '10' → logprob: -12.69048023223877

Token 124: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.399162620306015
    2. '<|end|>' → logprob: -1.7741626501083374
    3. '
' → logprob: -2.149162530899048
    4. 'elif' → logprob: -3.524162530899048
    5. ' else' → logprob: -4.774162769317627
    6. ')' → logprob: -7.149162769317627
    7. '\n' → logprob: -7.274162769317627
    8. '    
' → logprob: -7.524162769317627
    9. '<|end|>' → logprob: -7.774162769317627
    10. '```' → logprob: -7.774162769317627

Token 125: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' print' (ID: 2123)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6434916257858276
    2. '<|end|>' → logprob: -1.2684916257858276
    3. 'elif' → logprob: -2.518491744995117
    4. ')' → logprob: -2.768491744995117
    5. ' else' → logprob: -4.268491744995117
    6. 'print' (adapté à ' print') → logprob: -4.268491744995117
    7. '
' → logprob: -4.393491744995117
    8. ' ' → logprob: -6.268491744995117
    9. '<|end|>' → logprob: -6.768491744995117
    10. '   ' → logprob: -6.893491744995117

Token 127: '(str' (ID: 7946)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.006722826045006514
    2. '(' → logprob: -5.006722927093506
    3. ' (' → logprob: -12.881722450256348
    4. '('' → logprob: -13.131722450256348
    5. '(f' → logprob: -13.506722450256348
    6. 'res' → logprob: -14.631722450256348
    7. '()' → logprob: -15.006722450256348
    8. '("' → logprob: -15.006722450256348
    9. '(s' → logprob: -15.506722450256348
    10. '(
' → logprob: -16.506723403930664

Token 128: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.9292415749514475e-05
    2. 'res' → logprob: -10.500039100646973
    3. '(' → logprob: -11.500039100646973
    4. ' (' → logprob: -13.875039100646973
    5. ')' → logprob: -14.500039100646973
    6. ')(' → logprob: -16.00004005432129
    7. ' res' → logprob: -17.37504005432129
    8. '	res' → logprob: -17.37504005432129
    9. ',res' → logprob: -18.62504005432129
    10. '$res' → logprob: -18.87504005432129

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740923047065735
    2. '))' → logprob: -0.9740923047065735
    3. ')))' → logprob: -11.599092483520508
    4. '))
' → logprob: -13.349092483520508
    5. ' )' → logprob: -13.474092483520508
    6. ' ))' → logprob: -14.224092483520508
    7. ')
' → logprob: -14.349092483520508
    8. ')+' → logprob: -14.974092483520508
    9. '+' → logprob: -15.099092483520508
    10. ')")' → logprob: -15.474092483520508

Token 130: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4656579120783135e-05
    2. '))' → logprob: -10.125044822692871
    3. '+' → logprob: -13.125044822692871
    4. ')
' → logprob: -14.125044822692871
    5. ' )' → logprob: -14.625044822692871
    6. '')' → logprob: -15.125044822692871
    7. ')))' → logprob: -15.125044822692871
    8. ')`' → logprob: -15.625044822692871
    9. '())' → logprob: -16.000043869018555
    10. '+)' → logprob: -16.125043869018555

Token 131: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6551500558853149
    2. '"' → logprob: -0.7801500558853149
    3. 's' → logprob: -5.030149936676025
    4. ''s' → logprob: -5.280149936676025
    5. 'u' → logprob: -5.780149936676025
    6. ')' → logprob: -6.030149936676025
    7. ' '' → logprob: -6.280149936676025
    8. ' "' → logprob: -7.030149936676025
    9. ' u' → logprob: -7.405149936676025
    10. ' ' → logprob: -7.530149936676025

Token 132: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4568571448326111
    2. ')' → logprob: -1.3318572044372559
    3. 'u' → logprob: -3.706857204437256
    4. ''' → logprob: -4.331857204437256
    5. 's' → logprob: -4.456857204437256
    6. ' "' → logprob: -4.456857204437256
    7. ' )' → logprob: -4.456857204437256
    8. '")' → logprob: -4.581857204437256
    9. ' u' → logprob: -5.206857204437256
    10. '"s' → logprob: -5.706857204437256

Token 133: ' +' (ID: 659)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03632088750600815
    2. 'u' → logprob: -3.911320924758911
    3. 'num' → logprob: -4.411320686340332
    4. ')' → logprob: -6.286320686340332
    5. 'str' → logprob: -7.661320686340332
    6. 'res' → logprob: -8.036320686340332
    7. '"' → logprob: -8.161320686340332
    8. '+' → logprob: -8.411320686340332
    9. '")' → logprob: -9.161320686340332
    10. ' s' → logprob: -9.661320686340332

Token 134: ' str' (ID: 989)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07155600935220718
    2. 'num' → logprob: -2.9465560913085938
    3. 'str' → logprob: -4.696556091308594
    4. 'u' → logprob: -5.571556091308594
    5. '"' → logprob: -6.571556091308594
    6. ' s' → logprob: -6.696556091308594
    7. '"s' → logprob: -7.571556091308594
    8. ''' → logprob: -9.071556091308594
    9. ' num' → logprob: -9.196556091308594
    10. ''s' → logprob: -9.196556091308594

Token 135: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0011315245646983385
    2. '(res' → logprob: -7.126131534576416
    3. 'num' → logprob: -8.626131057739258
    4. '(s' → logprob: -8.876131057739258
    5. '(' → logprob: -12.251131057739258
    6. 'res' → logprob: -13.626131057739258
    7. '(n' → logprob: -14.126131057739258
    8. '(u' → logprob: -14.876131057739258
    9. 's' → logprob: -15.126131057739258
    10. ' (' → logprob: -16.376131057739258

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.500005722045898
    3. '1' → logprob: -14.125005722045898
    4. ' ' → logprob: -14.250005722045898
    5. '_' → logprob: -16.5625057220459
    6. '۲' → logprob: -16.8750057220459
    7. '```' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.1250057220459
    9. '٢' → logprob: -17.1875057220459
    10. 's' → logprob: -17.3125057220459

Token 137: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026401663199067116
    2. '))' → logprob: -3.6514017581939697
    3. ' )' → logprob: -10.40140151977539
    4. ')))' → logprob: -10.65140151977539
    5. '")' → logprob: -10.90140151977539
    6. ')")' → logprob: -11.40140151977539
    7. '+' → logprob: -12.15140151977539
    8. ')
' → logprob: -12.90140151977539
    9. ' +' → logprob: -12.90140151977539
    10. ' ))' → logprob: -13.77640151977539

Token 138: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.527650773525238
    2. 'elif' → logprob: -0.902650773525238
    3. '<|end|>' → logprob: -5.902650833129883
    4. ')' → logprob: -7.027650833129883
    5. ' else' → logprob: -7.277650833129883
    6. ' elif' → logprob: -9.652650833129883
    7. 'elseif' → logprob: -10.027650833129883
    8. 'endif' → logprob: -10.777650833129883
    9. '```' → logprob: -10.777650833129883
    10. '<|end|>' → logprob: -10.777650833129883

Token 139: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.28128767013549805
    2. 'u' → logprob: -1.406287670135498
    3. 's' → logprob: -9.781288146972656
    4. ' s' → logprob: -9.906288146972656
    5. ' ' → logprob: -11.656288146972656
    6. ' ' → logprob: -11.781288146972656
    7. 'num' → logprob: -12.156288146972656
    8. '	u' → logprob: -12.906288146972656
    9. ' num' → logprob: -13.531288146972656
    10. '  ' → logprob: -13.906288146972656

Token 140: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07893858850002289
    2. '==' → logprob: -2.5789384841918945
    3. '=' → logprob: -11.578938484191895
    4. ' ' → logprob: -11.578938484191895
    5. ' ' → logprob: -11.578938484191895
    6. ' =' → logprob: -12.078938484191895
    7. '"' → logprob: -12.328938484191895
    8. ''' → logprob: -13.078938484191895
    9. ')' → logprob: -13.328938484191895
    10. '===' → logprob: -13.953938484191895

Token 141: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31328123807907104
    2. ' s' → logprob: -1.3132812976837158
    3. ''s' → logprob: -11.063281059265137
    4. ' ' → logprob: -13.438281059265137
    5. ' ' → logprob: -13.688281059265137
    6. '(s' → logprob: -15.063281059265137
    7. ''' → logprob: -15.188281059265137
    8. '"s' → logprob: -15.688281059265137
    9. '"' → logprob: -16.063282012939453
    10. '	s' → logprob: -16.438282012939453

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4285862057004124e-05
    2. '1' → logprob: -10.37503433227539
    3. ''[' → logprob: -14.37503433227539
    4. '[-' → logprob: -14.87503433227539
    5. '[
' → logprob: -15.00003433227539
    6. ' [' → logprob: -15.00003433227539
    7. '2' → logprob: -15.12503433227539
    8. '['' → logprob: -15.75003433227539
    9. '\[' → logprob: -15.75003433227539
    10. '```' → logprob: -15.87503433227539

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. '0' → logprob: -11.500020027160645
    3. '[' → logprob: -12.375020027160645
    4. ' ' → logprob: -12.750020027160645
    5. '2' → logprob: -13.437520027160645
    6. '-' → logprob: -15.812520027160645
    7. '```' → logprob: -15.812520027160645
    8. '3' → logprob: -16.500019073486328
    9. '`' → logprob: -16.750019073486328
    10. 'num' → logprob: -16.937519073486328

Token 144: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42270898818969727
    2. '):
' → logprob: -1.7977089881896973
    3. ':
' → logprob: -1.9227089881896973
    4. '):' → logprob: -3.4227089881896973
    5. ']:
' → logprob: -9.672708511352539
    6. ' :' → logprob: -10.047708511352539
    7. '   ' → logprob: -10.172708511352539
    8. ' :
' → logprob: -10.672708511352539
    9. ']:' → logprob: -10.797708511352539
    10. ')' → logprob: -12.297708511352539

Token 145: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25485309958457947
    2. '   ' → logprob: -1.7548531293869019
    3. ':
' → logprob: -3.0048530101776123
    4. ' :' → logprob: -6.504853248596191
    5. '):' → logprob: -8.754853248596191
    6. '":' → logprob: -8.879853248596191
    7. ' :
' → logprob: -8.879853248596191
    8. 'res' → logprob: -9.379853248596191
    9. '):
' → logprob: -9.504853248596191
    10. ' ' → logprob: -9.629853248596191

Token 146: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8884702920913696
    2. 'res' → logprob: -1.2634702920913696
    3. '
' → logprob: -1.6384702920913696
    4. ' res' → logprob: -3.01347017288208
    5. '#' → logprob: -3.13847017288208
    6. ' #' → logprob: -4.88847017288208
    7. 'num' → logprob: -5.26347017288208
    8. 'print' (adapté à ' print') → logprob: -6.26347017288208
    9. ' ' → logprob: -6.51347017288208
    10. '
' → logprob: -7.13847017288208

Token 147: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004030668642371893
    2. '(num' → logprob: -5.629030704498291
    3. 'str' → logprob: -8.004030227661133
    4. 'num' → logprob: -10.254030227661133
    5. '("' → logprob: -10.504030227661133
    6. '(' → logprob: -10.629030227661133
    7. '(s' → logprob: -12.129030227661133
    8. '(int' → logprob: -13.629030227661133
    9. '((' → logprob: -14.129030227661133
    10. 's' → logprob: -14.754030227661133

Token 148: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.004628653638064861
    2. 'num' → logprob: -5.379628658294678
    3. '(' → logprob: -11.87962818145752
    4. ' num' → logprob: -14.25462818145752
    5. ',num' → logprob: -15.50462818145752
    6. '[num' → logprob: -15.87962818145752
    7. ' (' → logprob: -16.004629135131836
    8. '(str' → logprob: -16.504629135131836
    9. '(res' → logprob: -16.504629135131836
    10. '("("' → logprob: -16.754629135131836

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005265804938971996
    2. '2' → logprob: -7.625526428222656
    3. '[' → logprob: -10.250526428222656
    4. ' ' → logprob: -13.938026428222656
    5. '   ' → logprob: -15.063026428222656
    6. 'num' → logprob: -15.063026428222656
    7. '
' → logprob: -15.125526428222656
    8. '

' → logprob: -15.688026428222656
    9. '3' → logprob: -16.250526428222656
    10. '１' → logprob: -16.563026428222656

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009756630170159042
    2. '+' → logprob: -7.125975608825684
    3. ' +' → logprob: -9.750975608825684
    4. ' )' → logprob: -9.875975608825684
    5. ')+' → logprob: -10.000975608825684
    6. '-' → logprob: -11.625975608825684
    7. '*' → logprob: -13.000975608825684
    8. '))' → logprob: -13.375975608825684
    9. ' -' → logprob: -14.000975608825684
    10. '),' → logprob: -14.750975608825684

Token 151: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016932565718889236
    2. ' +' → logprob: -4.266932487487793
    3. ')' → logprob: -5.891932487487793
    4. '-' → logprob: -14.641932487487793
    5. '*' → logprob: -14.641932487487793
    6. '"' → logprob: -14.766932487487793
    7. '[' → logprob: -14.766932487487793
    8. '>' → logprob: -14.891932487487793
    9. ')+' → logprob: -15.016932487487793
    10. ' ' → logprob: -15.266932487487793

Token 152: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008677561767399311
    2. ' "' → logprob: -4.7586774826049805
    3. ')' → logprob: -10.00867748260498
    4. ' ' → logprob: -12.13367748260498
    5. ''' → logprob: -12.50867748260498
    6. '("' → logprob: -12.88367748260498
    7. '
' → logprob: -13.63367748260498
    8. ' )' → logprob: -13.75867748260498
    9. ' ' → logprob: -14.00867748260498
    10. '    ' → logprob: -14.38367748260498

Token 153: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.025823991745710373
    2. ' "' → logprob: -4.025824069976807
    3. ' ' → logprob: -5.275824069976807
    4. ')' → logprob: -6.400824069976807
    5. ' ' → logprob: -8.150823593139648
    6. ' )' → logprob: -8.650823593139648
    7. ''' → logprob: -8.775823593139648
    8. ' +' → logprob: -9.275823593139648
    9. '("' → logprob: -10.525823593139648
    10. '
' → logprob: -10.900823593139648

Token 154: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.011055483482778072
    2. '(str' → logprob: -4.5110554695129395
    3. ' str' → logprob: -11.886055946350098
    4. '[str' → logprob: -14.636055946350098
    5. '
' → logprob: -16.13605499267578
    6. '+' → logprob: -16.51105499267578
    7. '(' → logprob: -16.88605499267578
    8. '	str' → logprob: -17.26105499267578
    9. 's' → logprob: -17.76105499267578
    10. 'num' → logprob: -18.26105499267578

Token 155: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.9186317482963204e-05
    2. ' str' → logprob: -10.000049591064453
    3. '(str' → logprob: -12.500049591064453
    4. ' ' → logprob: -20.000049591064453
    5. '[str' → logprob: -20.000049591064453
    6. '	str' → logprob: -20.250049591064453
    7. 's' → logprob: -21.125049591064453
    8. '
' → logprob: -21.250049591064453
    9. 'stri' → logprob: -21.375049591064453
    10. '   ' → logprob: -21.375049591064453

Token 156: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0002128382766386494
    2. 'num' → logprob: -8.625212669372559
    3. '(int' → logprob: -11.000212669372559
    4. '(res' → logprob: -11.500212669372559
    5. '(str' → logprob: -12.125212669372559
    6. '(' → logprob: -14.375212669372559
    7. '((' → logprob: -16.250213623046875
    8. '(max' → logprob: -16.500213623046875
    9. '[num' → logprob: -16.750213623046875
    10. 'res' → logprob: -17.000213623046875

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005561320576816797
    2. '[' → logprob: -7.500555992126465
    3. 's' → logprob: -13.250555992126465
    4. '1' → logprob: -14.875555992126465
    5. 't' → logprob: -15.500555992126465
    6. ' ' → logprob: -15.875555992126465
    7. 'f' → logprob: -16.50055694580078
    8. 'r' → logprob: -16.62555694580078
    9. '```' → logprob: -16.75055694580078
    10. 'res' → logprob: -16.87555694580078

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5327396392822266
    2. '+' → logprob: -1.6577396392822266
    3. ')' → logprob: -2.2827396392822266
    4. ' -' → logprob: -2.4077396392822266
    5. ' +' → logprob: -3.7827396392822266
    6. '))' → logprob: -4.907739639282227
    7. ' ' → logprob: -9.282739639282227
    8. '[' → logprob: -10.032739639282227
    9. '   ' → logprob: -11.157739639282227
    10. ' )' → logprob: -11.282739639282227

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -14.877185821533203
    4. ')' → logprob: -17.377185821533203
    5. '2' → logprob: -17.627185821533203
    6. '0' → logprob: -17.877185821533203
    7. '  ' → logprob: -18.377185821533203
    8. ' ' → logprob: -19.002185821533203
    9. '```' → logprob: -19.377185821533203
    10. '3' → logprob: -20.064685821533203

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.250096321105957
    4. '2' → logprob: -16.875097274780273
    5. ')' → logprob: -17.375097274780273
    6. '  ' → logprob: -17.375097274780273
    7. '<|end|>' → logprob: -18.812597274780273
    8. '3' → logprob: -18.875097274780273
    9. '```' → logprob: -19.125097274780273
    10. '0' → logprob: -19.250097274780273

Token 161: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004123753868043423
    2. '))' → logprob: -5.504123687744141
    3. ')")' → logprob: -10.12912368774414
    4. '")' → logprob: -12.62912368774414
    5. '')' → logprob: -14.12912368774414
    6. ')))' → logprob: -14.62912368774414
    7. ')
' → logprob: -15.12912368774414
    8. '())' → logprob: -15.37912368774414
    9. ' )' → logprob: -15.37912368774414
    10. '()' → logprob: -16.37912368774414

Token 162: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.017520645633339882
    2. ' else' → logprob: -4.517520427703857
    3. 'elif' → logprob: -5.642520427703857
    4. '<|end|>' → logprob: -5.892520427703857
    5. '```' → logprob: -9.142520904541016
    6. ')' → logprob: -11.517520904541016
    7. 'es' → logprob: -12.142520904541016
    8. '
' → logprob: -12.517520904541016
    9. '<|end|>' → logprob: -12.517520904541016
    10. ':' → logprob: -12.892520904541016

Token 163: ' Pas' (ID: 18323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7330069541931152
    2. 'else' → logprob: -0.7330069541931152
    3. ' else' → logprob: -3.3580069541931152
    4. '_else' → logprob: -6.858006954193115
    5. 'es' → logprob: -6.983006954193115
    6. '#' → logprob: -7.358006954193115
    7. '_' → logprob: -7.608006954193115
    8. 'elif' → logprob: -7.733006954193115
    9. 's' → logprob: -8.608007431030273
    10. 'elle' → logprob: -9.483007431030273

Token 165: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.017291264608502388
    2. ' else' → logprob: -4.267291069030762
    3. 'e' → logprob: -6.142291069030762
    4. '_else' → logprob: -8.392291069030762
    5. 'elif' → logprob: -8.767291069030762
    6. 's' → logprob: -9.017291069030762
    7. ' ' → logprob: -9.392291069030762
    8. 'el' → logprob: -9.392291069030762
    9. '```' → logprob: -9.767291069030762
    10. '_' → logprob: -10.142291069030762

Token 166: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' tant' (ID: 16235)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.604629397392273
    2. 'pass' → logprob: -1.354629397392273
    3. '<|end|>' → logprob: -2.8546295166015625
    4. ' pass' → logprob: -3.3546295166015625
    5. ' #' → logprob: -3.4796295166015625
    6. ' on' → logprob: -3.9796295166015625
    7. 'print' → logprob: -4.2296295166015625
    8. ' ' → logprob: -4.3546295166015625
    9. '```' → logprob: -5.8546295166015625
    10. ')' → logprob: -5.9796295166015625

Token 168: ' pis' (ID: 19525)
  Prédit: 'pis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pis' → logprob: -0.0069055212661623955
    2. 'p' → logprob: -5.006905555725098
    3. ' pis' → logprob: -9.256905555725098
    4. 'pi' → logprob: -9.631905555725098
    5. 'que' → logprob: -11.381905555725098
    6. '-p' → logprob: -11.881905555725098
    7. ' mieux' → logprob: -12.881905555725098
    8. 'qu' → logprob: -12.881905555725098
    9. 'm' → logprob: -13.631905555725098
    10. ' ' → logprob: -13.756905555725098

Token 169: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' y' (ID: 342)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6620562672615051
    2. ' u' → logprob: -0.7870562672615051
    3. ' on' → logprob: -4.1620564460754395
    4. '_' → logprob: -6.1620564460754395
    5. ' le' → logprob: -6.4120564460754395
    6. ' rien' → logprob: -6.4120564460754395
    7. 'on' → logprob: -6.6620564460754395
    8. ' aucune' → logprob: -6.7870564460754395
    9. 'le' → logprob: -7.1620564460754395
    10. ' ' → logprob: -7.6620564460754395

Token 171: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02759171649813652
    2. ''a' → logprob: -3.7775917053222656
    3. 'u' → logprob: -6.152591705322266
    4. 'avait' → logprob: -7.277591705322266
    5. 'en' → logprob: -7.777591705322266
    6. ' a' → logprob: -8.152591705322266
    7. 'y' → logprob: -8.527591705322266
    8. ''en' → logprob: -8.777591705322266
    9. '```' → logprob: -8.777591705322266
    10. ''avait' → logprob: -9.902591705322266

Token 172: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.18966814875602722
    2. ' une' → logprob: -2.0646681785583496
    3. 'un' → logprob: -4.81466817855835
    4. 'r' → logprob: -5.18966817855835
    5. ' des' → logprob: -5.18966817855835
    6. 'des' → logprob: -5.31466817855835
    7. ' un' → logprob: -5.43966817855835
    8. 'pas' → logprob: -5.43966817855835
    9. 'er' → logprob: -5.93966817855835
    10. ' erreur' → logprob: -6.06466817855835

Token 173: ' entrée' (ID: 95590)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4165639877319336
    2. 'entrée' → logprob: -1.6665639877319336
    3. ' erreur' → logprob: -2.0415639877319336
    4. 'ligne' → logprob: -5.791563987731934
    5. 'bug' → logprob: -6.416563987731934
    6. 'indent' → logprob: -6.666563987731934
    7. 'input' → logprob: -6.666563987731934
    8. 'error' → logprob: -6.916563987731934
    9. 'suite' → logprob: -6.916563987731934
    10. 'in' → logprob: -7.041563987731934

Token 174: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'rie' (ID: 22604)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7588537335395813
    2. ' rien' → logprob: -2.1338536739349365
    3. '#' → logprob: -2.3838536739349365
    4. 't' → logprob: -2.8838536739349365
    5. 'quoi' → logprob: -3.0088536739349365
    6. 's' → logprob: -3.0088536739349365
    7. 'ue' → logprob: -3.6338536739349365
    8. 'r' → logprob: -3.8838536739349365
    9. '```' → logprob: -3.8838536739349365
    10. ' ' → logprob: -4.383853912353516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 173
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 23.12%
Précision adaptée (1ère position): 23.12%
Précision (top 10): 52.60%
================================================================================
