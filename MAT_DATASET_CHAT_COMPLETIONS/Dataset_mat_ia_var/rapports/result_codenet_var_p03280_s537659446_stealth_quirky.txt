================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math as mATH; import sys as Sys
from bisect import bisect_left as bl, bisect_right as br
from collections import Counter as Cntr, defaultdict as dd, deque as dq
from copy import deepcopy as dp
from functools import lru_cache as cache
from heapq import heapify as hpFy, heappop as hpP, heappush as hpPSH
from itertools import accumulate as acc, combinations as comb, permutations as perm
_ι_ = Sys.stdin.readline
MOD_ = 10 ** 9 + 7
fetch_str = lambda : _ι_().rstrip()
fetch_int = lambda : int(_ι_())
fetch_map = lambda : map(int, _ι_().split())
fetch_list = lambda : list(fetch_map())

def twin_unpack():
    return fetch_map()

# obscure variable names
染料, 糖分 = twin_unpack()

print(染料 * 糖分 - 染料 - 糖分 + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' m' (ID: 284)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0021170699037611485
    2. 'math' → logprob: -6.377117156982422
    3. ' m' → logprob: -8.127117156982422
    4. ' ' → logprob: -9.127117156982422
    5. ' ma' → logprob: -12.252117156982422
    6. 'm' → logprob: -13.502117156982422
    7. ' ' → logprob: -13.627117156982422
    8. '_math' → logprob: -13.877117156982422
    9. '```' → logprob: -14.377117156982422
    10. ' Math' → logprob: -14.752117156982422

Token 4: 'ATH' (ID: 9366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020699729793705046
    2. '\' → logprob: -9.12520694732666
    3. '\n' → logprob: -10.12520694732666
    4. '```' → logprob: -12.00020694732666
    5. 'import' → logprob: -12.00020694732666
    6. '<|end|>' → logprob: -12.00020694732666
    7. '\.' → logprob: -12.12520694732666
    8. '.

' → logprob: -12.37520694732666
    9. 'newline' → logprob: -12.50020694732666
    10. 'm' → logprob: -13.00020694732666

Token 5: ';' (ID: 26)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00048656106810085475
    2. '<|end|>' → logprob: -8.875486373901367
    3. '
' → logprob: -9.750486373901367
    4. ' .' → logprob: -9.875486373901367
    5. '```' → logprob: -10.375486373901367
    6. 'm' → logprob: -10.750486373901367
    7. ' ' → logprob: -10.875486373901367
    8. '\' → logprob: -11.000486373901367
    9. '\n' → logprob: -11.250486373901367
    10. '
' → logprob: -11.250486373901367

Token 6: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.034191910177469254
    2. '
' → logprob: -4.034192085266113
    3. '<|end|>' → logprob: -5.284192085266113
    4. '\n' → logprob: -5.784192085266113
    5. 'newline' → logprob: -6.159192085266113
    6. '' → logprob: -6.659192085266113
    7. 'import' → logprob: -6.909192085266113
    8. 'm' → logprob: -7.284192085266113
    9. '\' → logprob: -7.409192085266113
    10. '
' → logprob: -7.784192085266113

Token 7: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12277019768953323
    2. ' os' → logprob: -2.497770309448242
    3. ' numpy' → logprob: -3.497770309448242
    4. ' ' → logprob: -6.872770309448242
    5. ' re' → logprob: -7.372770309448242
    6. ' random' → logprob: -7.497770309448242
    7. ' ' → logprob: -8.497770309448242
    8. ' math' → logprob: -8.997770309448242
    9. 'sys' → logprob: -8.997770309448242
    10. ' json' → logprob: -9.372770309448242

Token 8: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09024710953235626
    2. '<|end|>' → logprob: -3.34024715423584
    3. '
' → logprob: -3.71524715423584
    4. '\n' → logprob: -4.59024715423584
    5. '

' → logprob: -5.84024715423584
    6. '\' → logprob: -6.09024715423584
    7. ';' → logprob: -6.09024715423584
    8. 'import' → logprob: -6.34024715423584
    9. '<|end|>' → logprob: -6.34024715423584
    10. 'newline' → logprob: -6.59024715423584

Token 9: ' Sys' (ID: 47410)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.39748555421829224
    2. 'sys' → logprob: -2.5224854946136475
    3. 's' → logprob: -3.0224854946136475
    4. ' s' → logprob: -3.1474854946136475
    5. 'SYS' → logprob: -3.1474854946136475
    6. ' ' → logprob: -3.2724854946136475
    7. ' SYS' → logprob: -3.8974854946136475
    8. 'SY' → logprob: -4.272485733032227
    9. ' sy' → logprob: -4.272485733032227
    10. ' system' → logprob: -5.522485733032227

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05205763876438141
    2. '<|end|>' → logprob: -3.5520577430725098
    3. ';' → logprob: -4.67705774307251
    4. '
' → logprob: -5.05205774307251
    5. 'import' → logprob: -6.30205774307251
    6. '\n' → logprob: -6.67705774307251
    7. 'newline' → logprob: -7.30205774307251
    8. '<|end|>' → logprob: -7.42705774307251
    9. ',' → logprob: -7.55205774307251
    10. '.import' → logprob: -8.802057266235352

Token 11: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3787399232387543
    2. '
' → logprob: -1.2537399530410767
    3. ';' → logprob: -5.253739833831787
    4. '

' → logprob: -5.253739833831787
    5. '\n' → logprob: -5.378739833831787
    6. '.
' → logprob: -5.378739833831787
    7. '' → logprob: -6.128739833831787
    8. 'newline' → logprob: -6.128739833831787
    9. '<|end|>' → logprob: -6.253739833831787
    10. 'import' → logprob: -7.753739833831787

Token 12: ' bis' (ID: 7204)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.14622321724891663
    2. ' os' → logprob: -2.396223306655884
    3. ' sys' → logprob: -4.021223068237305
    4. ' ' → logprob: -4.521223068237305
    5. ' collections' → logprob: -5.271223068237305
    6. '_' → logprob: -5.646223068237305
    7. ' ' → logprob: -5.771223068237305
    8. ' numpy' → logprob: -7.271223068237305
    9. ' sklearn' → logprob: -7.396223068237305
    10. ' itertools' → logprob: -7.646223068237305

Token 13: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00758143188431859
    2. 'e' → logprob: -5.3825812339782715
    3. 't' → logprob: -5.8825812339782715
    4. 'ec' → logprob: -9.38258171081543
    5. 'ectl' → logprob: -10.38258171081543
    6. 'ector' → logprob: -11.50758171081543
    7. 'import' → logprob: -11.88258171081543
    8. 'ected' → logprob: -12.25758171081543
    9. 'ct' → logprob: -12.50758171081543
    10. 'c' → logprob: -13.00758171081543

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011129410937428474
    2. 'import' → logprob: -4.511129379272461
    3. ' ' → logprob: -10.511129379272461
    4. '_import' → logprob: -10.511129379272461
    5. '	import' → logprob: -10.761129379272461
    6. ' importar' → logprob: -13.511129379272461
    7. ' impor' → logprob: -13.886129379272461
    8. ' ' → logprob: -14.261129379272461
    9. ' im' → logprob: -15.136129379272461
    10. ' imports' → logprob: -15.261129379272461

Token 15: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.07313327491283417
    2. 'bis' → logprob: -2.6981332302093506
    3. 'ins' → logprob: -6.44813346862793
    4. ' ins' → logprob: -6.44813346862793
    5. ' b' → logprob: -11.32313346862793
    6. '	b' → logprob: -12.44813346862793
    7. ' ' → logprob: -12.44813346862793
    8. 'b' → logprob: -12.82313346862793
    9. '```' → logprob: -13.82313346862793
    10. 'Bis' → logprob: -15.19813346862793

Token 16: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.010079868137836456
    2. 'e' → logprob: -4.635079860687256
    3. 'ec' → logprob: -8.135080337524414
    4. 'ectl' → logprob: -11.885080337524414
    5. '```' → logprob: -12.010080337524414
    6. 'sect' → logprob: -13.010080337524414
    7. 'ected' → logprob: -13.260080337524414
    8. '

' → logprob: -13.385080337524414
    9. '' → logprob: -13.635080337524414
    10. '


' → logprob: -13.760080337524414

Token 17: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08182726055383682
    2. '_left' → logprob: -2.706827163696289
    3. '_right' → logprob: -4.581827163696289
    4. '._' → logprob: -7.331827163696289
    5. '_

' → logprob: -8.706827163696289
    6. '<|end|>' → logprob: -9.206827163696289
    7. ' _' → logprob: -9.331827163696289
    8. 'ing' → logprob: -9.456827163696289
    9. '_
' → logprob: -9.956827163696289
    10. '.b' → logprob: -10.081827163696289

Token 18: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0070748054422438145
    2. '(
' → logprob: -5.50707483291626
    3. '\n' → logprob: -7.38207483291626
    4. '\' → logprob: -7.50707483291626
    5. '<|end|>' → logprob: -8.257074356079102
    6. 'newline' → logprob: -8.382074356079102
    7. '
' → logprob: -8.507074356079102
    8. ' (' → logprob: -8.632074356079102
    9. ',' → logprob: -8.757074356079102
    10. '(

' → logprob: -8.757074356079102

Token 19: ' bl' (ID: 1162)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.6102584004402161
    2. 'bis' → logprob: -1.1102583408355713
    3. 'bl' → logprob: -2.6102583408355713
    4. ' b' → logprob: -3.9852583408355713
    5. 'b' → logprob: -4.11025857925415
    6. ' bl' → logprob: -4.48525857925415
    7. ' bi' → logprob: -6.36025857925415
    8. '	b' → logprob: -6.73525857925415
    9. 'bi' → logprob: -6.86025857925415
    10. ' ' → logprob: -6.98525857925415

Token 20: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.2602803409099579
    2. 'bis' → logprob: -1.5102803707122803
    3. 'ins' → logprob: -5.635280132293701
    4. ' ins' → logprob: -5.760280132293701
    5. 'b' → logprob: -7.885280132293701
    6. 'bl' → logprob: -9.13528060913086
    7. '	b' → logprob: -9.38528060913086
    8. ' b' → logprob: -9.44778060913086
    9. 'from' → logprob: -9.51028060913086
    10. 'import' → logprob: -9.69778060913086

Token 22: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.906711546937004e-05
    2. 'e' → logprob: -10.875048637390137
    3. 'ec' → logprob: -10.875048637390137
    4. 'ext' → logprob: -13.125048637390137
    5. 'ected' → logprob: -13.500048637390137
    6. 'sect' → logprob: -13.625048637390137
    7. '```' → logprob: -13.625048637390137
    8. 'ectl' → logprob: -13.875048637390137
    9. 'ection' → logprob: -14.000048637390137
    10. 'ects' → logprob: -14.250048637390137

Token 23: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.03203035891056061
    2. '_' → logprob: -3.5320303440093994
    3. '<|end|>' → logprob: -6.9070305824279785
    4. '_r' → logprob: -7.6570305824279785
    5. '_left' → logprob: -7.7820305824279785
    6. '__' → logprob: -9.28203010559082
    7. 'right' → logprob: -9.53203010559082
    8. ' _' → logprob: -9.78203010559082
    9. '_Right' → logprob: -10.03203010559082
    10. '_RIGHT' → logprob: -10.15703010559082

Token 24: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.9473727941513062
    2. '<|end|>' → logprob: -1.0723727941513062
    3. 'as' → logprob: -1.3223727941513062
    4. '<|end|>' → logprob: -5.822372913360596
    5. '(as' → logprob: -8.822372436523438
    6. ' ' → logprob: -9.197372436523438
    7. '_as' → logprob: -9.197372436523438
    8. '```' → logprob: -10.197372436523438
    9. ',' → logprob: -10.322372436523438
    10. ')' → logprob: -10.322372436523438

Token 25: ' br' (ID: 1294)
  Prédit: ' br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' br' → logprob: -0.2017519623041153
    2. 'br' → logprob: -1.701751947402954
    3. '	br' → logprob: -8.201751708984375
    4. ' bl' → logprob: -11.076751708984375
    5. ' b' → logprob: -11.576751708984375
    6. ' ' → logprob: -11.576751708984375
    7. 'b' → logprob: -11.576751708984375
    8. '(br' → logprob: -12.451751708984375
    9. 'bl' → logprob: -12.576751708984375
    10. ';br' → logprob: -12.951751708984375

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2898690700531006
    2. '

' → logprob: -2.7898690700531006
    3. '\n' → logprob: -2.9148690700531006
    4. '<|end|>' → logprob: -2.9148690700531006
    5. '' → logprob: -3.5398690700531006
    6. '\' → logprob: -4.53986930847168
    7. 'newline' → logprob: -4.78986930847168
    8. '#' → logprob: -4.78986930847168
    9. ',' → logprob: -4.91486930847168
    10. '.' → logprob: -5.78986930847168

Token 28: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.40560904145240784
    2. ' itertools' → logprob: -1.1556090116500854
    3. ' math' → logprob: -4.405609130859375
    4. 'collections' → logprob: -5.780609130859375
    5. ' typing' → logprob: -6.780609130859375
    6. ' os' → logprob: -7.405609130859375
    7. ' functools' → logprob: -7.405609130859375
    8. ' heap' → logprob: -8.030609130859375
    9. ' datetime' → logprob: -8.780609130859375
    10. ' ' → logprob: -8.780609130859375

Token 29: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10928637534379959
    2. ' import' → logprob: -2.359286308288574
    3. '.' → logprob: -5.234286308288574
    4. '<|end|>' → logprob: -5.734286308288574
    5. '	import' → logprob: -8.984286308288574
    6. '```' → logprob: -8.984286308288574
    7. ' ' → logprob: -9.484286308288574
    8. '.import' → logprob: -10.734286308288574
    9. '_import' → logprob: -10.859286308288574
    10. 'abc' → logprob: -10.984286308288574

Token 30: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.016110852360725403
    2. ' deque' → logprob: -4.266110897064209
    3. ' Counter' → logprob: -6.891110897064209
    4. 'deque' → logprob: -7.641110897064209
    5. 'default' → logprob: -8.01611042022705
    6. ' default' → logprob: -10.01611042022705
    7. ' named' → logprob: -11.14111042022705
    8. ' abc' → logprob: -11.14111042022705
    9. ' de' → logprob: -11.26611042022705
    10. ' ' → logprob: -11.39111042022705

Token 31: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4524875283241272
    2. '

' → logprob: -1.2024874687194824
    3. 'import' → logprob: -4.202487468719482
    4. '\n' → logprob: -4.702487468719482
    5. 'def' → logprob: -4.827487468719482
    6. '<|end|>' → logprob: -4.827487468719482
    7. ',' → logprob: -5.202487468719482
    8. '' → logprob: -5.577487468719482
    9. '#' → logprob: -6.327487468719482
    10. 'n' → logprob: -6.577487468719482

Token 32: ' C' (ID: 363)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.7345558404922485
    2. ' C' → logprob: -1.1095558404922485
    3. ' ' → logprob: -2.234555721282959
    4. ' Co' → logprob: -2.984555721282959
    5. 'Counter' → logprob: -3.984555721282959
    6. ' Coun' → logprob: -5.859555721282959
    7. 'C' → logprob: -5.859555721282959
    8. ' defaultdict' → logprob: -6.359555721282959
    9. ' Ct' → logprob: -6.609555721282959
    10. ' c' → logprob: -6.609555721282959

Token 33: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9472981691360474
    2. 'ounter' → logprob: -1.3222981691360474
    3. '
' → logprob: -2.697298049926758
    4. 'n' → logprob: -2.697298049926758
    5. 'ount' → logprob: -3.447298049926758
    6. '\n' → logprob: -3.697298049926758
    7. '  
' → logprob: -3.822298049926758
    8. ' 
' → logprob: -4.447298049926758
    9. 'o' → logprob: -4.572298049926758
    10. ',' → logprob: -4.947298049926758

Token 34: 'tr' (ID: 371)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2863974869251251
    2. 'def' → logprob: -2.7863974571228027
    3. '' → logprob: -3.5363974571228027
    4. '

' → logprob: -3.7863974571228027
    5. '  
' → logprob: -4.036397457122803
    6. '\n' → logprob: -4.161397457122803
    7. 'n' → logprob: -4.286397457122803
    8. '\' → logprob: -4.286397457122803
    9. ',' → logprob: -4.411397457122803
    10. '#' → logprob: -4.536397457122803

Token 35: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14156879484653473
    2. '\n' → logprob: -3.641568899154663
    3. 'def' → logprob: -3.766568899154663
    4. '

' → logprob: -4.266568660736084
    5. '' → logprob: -4.391568660736084
    6. ';' → logprob: -4.641568660736084
    7. '  
' → logprob: -4.766568660736084
    8. ',' → logprob: -4.766568660736084
    9. '\' → logprob: -5.391568660736084
    10. '#' → logprob: -5.391568660736084

Token 36: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.08887894451618195
    2. 'default' → logprob: -3.213878870010376
    3. 'deque' → logprob: -3.713878870010376
    4. ' deque' → logprob: -3.963878870010376
    5. ' default' → logprob: -7.588879108428955
    6. ' def' → logprob: -8.088878631591797
    7. 'def' → logprob: -8.838878631591797
    8. 'de' → logprob: -8.963878631591797
    9. ' de' → logprob: -9.338878631591797
    10. 'Deque' → logprob: -9.338878631591797

Token 37: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.052087970077991486
    2. 'as' → logprob: -3.0520880222320557
    3. '<|end|>' → logprob: -5.927087783813477
    4. ',' → logprob: -8.177087783813477
    5. 'a' → logprob: -8.802087783813477
    6. 'import' → logprob: -9.177087783813477
    7. ' ' → logprob: -9.552087783813477
    8. '<|end|>' → logprob: -10.302087783813477
    9. 'from' → logprob: -10.552087783813477
    10. ' a' → logprob: -10.552087783813477

Token 38: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.0226165056228638
    2. 'D' → logprob: -1.5226165056228638
    3. ' dd' → logprob: -1.5226165056228638
    4. ' D' → logprob: -2.272616386413574
    5. ' d' → logprob: -3.397616386413574
    6. 'Dd' → logprob: -3.772616386413574
    7. ' defaultdict' → logprob: -4.147616386413574
    8. '_dd' → logprob: -4.522616386413574
    9. 'default' → logprob: -5.147616386413574
    10. 'd' → logprob: -5.647616386413574

Token 39: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4452088177204132
    2. ',' → logprob: -2.445208787918091
    3. '<|end|>' → logprob: -2.820208787918091
    4. 'def' → logprob: -3.320208787918091
    5. '

' → logprob: -3.570208787918091
    6. 'import' → logprob: -3.695208787918091
    7. 'f' → logprob: -4.19520902633667
    8. 'n' → logprob: -4.32020902633667
    9. '\' → logprob: -4.44520902633667
    10. '' → logprob: -4.57020902633667

Token 40: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7007679343223572
    2. 'deque' → logprob: -0.7007679343223572
    3. ' Ordered' → logprob: -5.950767993927002
    4. 'Ordered' → logprob: -6.325767993927002
    5. ' defaultdict' → logprob: -7.075767993927002
    6. 'Deque' → logprob: -7.200767993927002
    7. ' named' → logprob: -7.575767993927002
    8. 'named' → logprob: -7.700767993927002
    9. 'de' → logprob: -8.575767517089844
    10. ' de' → logprob: -8.575767517089844

Token 41: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.02475545182824135
    2. 'as' → logprob: -3.7747554779052734
    3. '<|end|>' → logprob: -6.524755477905273
    4. '	as' → logprob: -11.024755477905273
    5. '<|end|>' → logprob: -12.024755477905273
    6. 'import' → logprob: -12.024755477905273
    7. ' ' → logprob: -12.149755477905273
    8. 'from' → logprob: -13.649755477905273
    9. '```' → logprob: -13.899755477905273
    10. ' ' → logprob: -14.024755477905273

Token 42: ' dq' (ID: 164235)
  Prédit: ' dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.7536188364028931
    2. ' De' → logprob: -1.003618836402893
    3. ' D' → logprob: -2.1286187171936035
    4. 'De' → logprob: -4.2536187171936035
    5. 'dq' → logprob: -4.5036187171936035
    6. 'DQ' → logprob: -4.7536187171936035
    7. ' d' → logprob: -6.0036187171936035
    8. 'D' → logprob: -6.3786187171936035
    9. ' de' → logprob: -6.3786187171936035
    10. ' ' → logprob: -6.5036187171936035

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3207958936691284
    2. '

' → logprob: -1.6957958936691284
    3. '<|end|>' → logprob: -3.445796012878418
    4. '\n' → logprob: -4.445796012878418
    5. ',' → logprob: -4.445796012878418
    6. 'import' → logprob: -4.695796012878418
    7. '' → logprob: -4.945796012878418
    8. '#' → logprob: -5.320796012878418
    9. '  
' → logprob: -6.570796012878418
    10. 'n' → logprob: -6.695796012878418

Token 45: ' copy' (ID: 5150)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.03838134557008743
    2. ' heap' → logprob: -3.913381338119507
    3. ' os' → logprob: -5.038381576538086
    4. ' typing' → logprob: -5.538381576538086
    5. ' functools' → logprob: -6.163381576538086
    6. ' math' → logprob: -6.663381576538086
    7. ' threading' → logprob: -6.663381576538086
    8. ' operator' → logprob: -7.163381576538086
    9. ' fractions' → logprob: -7.913381576538086
    10. ' statistics' → logprob: -8.663381576538086

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3123210072517395
    2. 'import' → logprob: -1.4373209476470947
    3. ' ' → logprob: -3.5623209476470947
    4. '<|end|>' → logprob: -6.312321186065674
    5. '	import' → logprob: -8.562320709228516
    6. '_import' → logprob: -9.062320709228516
    7. 'from' → logprob: -10.562320709228516
    8. ' importar' → logprob: -10.562320709228516
    9. ' ' → logprob: -10.687320709228516
    10. 'space' → logprob: -11.187320709228516

Token 47: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0038763161282986403
    2. ' copy' → logprob: -5.628876209259033
    3. '.deepcopy' → logprob: -8.878876686096191
    4. 'deep' → logprob: -9.753876686096191
    5. ' deep' → logprob: -10.003876686096191
    6. 'copy' → logprob: -10.378876686096191
    7. 'cpy' → logprob: -14.378876686096191
    8. ' import' → logprob: -14.503876686096191
    9. ' cop' → logprob: -14.753876686096191
    10. ' dee' → logprob: -15.003876686096191

Token 48: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.695096492767334
    2. 'dp' → logprob: -1.320096492767334
    3. 'dc' → logprob: -3.195096492767334
    4. 'd' → logprob: -3.320096492767334
    5. ' dc' → logprob: -3.320096492767334
    6. ' d' → logprob: -3.445096492767334
    7. ' cp' → logprob: -3.820096492767334
    8. 'deep' → logprob: -3.820096492767334
    9. 'cpy' → logprob: -4.320096492767334
    10. 'cp' → logprob: -4.320096492767334

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.432425320148468
    2. '<|end|>' → logprob: -1.5574252605438232
    3. ' ' → logprob: -3.3074252605438232
    4. ',' → logprob: -3.4324252605438232
    5. '

' → logprob: -3.9324252605438232
    6. '\n' → logprob: -4.432425498962402
    7. '' → logprob: -4.932425498962402
    8. ' 
' → logprob: -5.432425498962402
    9. '  
' → logprob: -5.682425498962402
    10. '\' → logprob: -6.057425498962402

Token 51: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4473985731601715
    2. '

' → logprob: -1.3223985433578491
    3. '<|end|>' → logprob: -2.6973986625671387
    4. '#' → logprob: -4.947398662567139
    5. 'import' → logprob: -5.697398662567139
    6. '```' → logprob: -5.822398662567139
    7. '' → logprob: -6.072398662567139
    8. ' 

' → logprob: -6.572398662567139
    9. '<|end|>' → logprob: -6.572398662567139
    10. '


' → logprob: -6.697398662567139

Token 52: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.04273195192217827
    2. ' functools' → logprob: -4.292731761932373
    3. ' math' → logprob: -4.542731761932373
    4. 'it' → logprob: -5.417731761932373
    5. ' fractions' → logprob: -5.917731761932373
    6. 'math' → logprob: -6.042731761932373
    7. ' os' → logprob: -6.292731761932373
    8. ' heap' → logprob: -6.542731761932373
    9. ' random' → logprob: -7.292731761932373
    10. ' operator' → logprob: -7.542731761932373

Token 53: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12934821844100952
    2. 'import' → logprob: -2.6293482780456543
    3. ' ' → logprob: -3.7543482780456543
    4. '<|end|>' → logprob: -4.254348278045654
    5. '_' → logprob: -4.629348278045654
    6. '_import' → logprob: -6.754348278045654
    7. ' _' → logprob: -8.254347801208496
    8. '<|end|>' → logprob: -9.004347801208496
    9. '	import' → logprob: -10.129347801208496
    10. ' ‌' → logprob: -10.379347801208496

Token 54: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6780272722244263
    2. 'l' → logprob: -0.8030272722244263
    3. ' reduce' → logprob: -4.053027153015137
    4. 'reduce' → logprob: -4.053027153015137
    5. ' wraps' → logprob: -5.178027153015137
    6. 'cmp' → logprob: -6.803027153015137
    7. ' cmp' → logprob: -7.303027153015137
    8. 'partial' → logprob: -7.303027153015137
    9. ' partial' → logprob: -7.428027153015137
    10. 'wrap' → logprob: -7.553027153015137

Token 55: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0008533471846021712
    2. 'r' → logprob: -7.250853538513184
    3. 'z' → logprob: -10.375853538513184
    4. 'a' → logprob: -10.375853538513184
    5. 'RU' → logprob: -11.375853538513184
    6. 'ruz' → logprob: -11.625853538513184
    7. '32' → logprob: -12.250853538513184
    8. 'reduce' → logprob: -12.375853538513184
    9. 'u' → logprob: -12.375853538513184
    10. 'import' → logprob: -12.750853538513184

Token 56: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0023700587917119265
    2. 'cache' → logprob: -6.6273698806762695
    3. '_' → logprob: -7.7523698806762695
    4. '_c' → logprob: -8.00236988067627
    5. 'c' → logprob: -8.37736988067627
    6. '_cached' → logprob: -10.75236988067627
    7. '_ca' → logprob: -11.50236988067627
    8. '\' → logprob: -12.37736988067627
    9. 'ca' → logprob: -13.12736988067627
    10. '_CACHE' → logprob: -13.12736988067627

Token 57: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.732864260673523
    2. '<|end|>' → logprob: -0.732864260673523
    3. ' as' → logprob: -3.4828643798828125
    4. ',' → logprob: -6.7328643798828125
    5. 'import' → logprob: -6.9828643798828125
    6. '(' → logprob: -7.1078643798828125
    7. ' (' → logprob: -7.2328643798828125
    8. ')' → logprob: -7.2328643798828125
    9. '<|end|>' → logprob: -7.2328643798828125
    10. ' import' → logprob: -7.4828643798828125

Token 58: ' cache' (ID: 11956)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.19488340616226196
    2. ' l' → logprob: -1.9448833465576172
    3. 'lc' → logprob: -4.194883346557617
    4. '_l' → logprob: -5.069883346557617
    5. '	l' → logprob: -5.819883346557617
    6. 'lr' → logprob: -6.069883346557617
    7. ' lr' → logprob: -6.194883346557617
    8. ' lc' → logprob: -6.194883346557617
    9. 'lu' → logprob: -7.569883346557617
    10. '_' → logprob: -7.694883346557617

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4854065775871277
    2. '<|end|>' → logprob: -1.1104066371917725
    3. '\n' → logprob: -4.360406398773193
    4. ',' → logprob: -4.485406398773193
    5. 'def' → logprob: -5.110406398773193
    6. '' → logprob: -5.485406398773193
    7. '<|end|>' → logprob: -6.110406398773193
    8. '

' → logprob: -6.235406398773193
    9. ' ' → logprob: -6.235406398773193
    10. '#' → logprob: -6.235406398773193

Token 60: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.02111748978495598
    2. ' heap' → logprob: -4.771117687225342
    3. ' operator' → logprob: -5.271117687225342
    4. 'operator' → logprob: -5.771117687225342
    5. 'it' → logprob: -6.146117687225342
    6. 'heap' → logprob: -6.896117687225342
    7. ' random' → logprob: -8.521117210388184
    8. ' os' → logprob: -8.646117210388184
    9. ' math' → logprob: -8.771117210388184
    10. ' typing' → logprob: -8.771117210388184

Token 62: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.4121114822482923e-06
    2. 'import' → logprob: -13.250003814697266
    3. '_' → logprob: -14.250003814697266
    4. 'queue' → logprob: -14.625003814697266
    5. '<|end|>' → logprob: -15.000003814697266
    6. '_queue' → logprob: -16.625003814697266
    7. 's' → logprob: -17.000003814697266
    8. 'Q' → logprob: -17.250003814697266
    9. 'a' → logprob: -17.750003814697266
    10. ' queue' → logprob: -18.125003814697266

Token 63: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.013673756271600723
    2. 'import' → logprob: -4.388673782348633
    3. ' ' → logprob: -7.138673782348633
    4. '<|end|>' → logprob: -8.138673782348633
    5. ' as' → logprob: -9.638673782348633
    6. ' ' → logprob: -12.638673782348633
    7. '	import' → logprob: -12.763673782348633
    8. ' space' → logprob: -13.638673782348633
    9. 'space' → logprob: -14.138673782348633
    10. '<|end|>' → logprob: -14.388673782348633

Token 64: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.21643155813217163
    2. 'he' → logprob: -1.9664316177368164
    3. 'heap' → logprob: -3.0914316177368164
    4. ' heap' → logprob: -4.966431617736816
    5. ' ' → logprob: -6.341431617736816
    6. ' n' → logprob: -8.716431617736816
    7. ' h' → logprob: -9.591431617736816
    8. 'h' → logprob: -9.966431617736816
    9. '.heap' → logprob: -9.966431617736816
    10. 'hq' → logprob: -10.466431617736816

Token 65: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.028956498950719833
    2. 'ify' → logprob: -3.653956413269043
    3. 'push' → logprob: -7.028956413269043
    4. 'ush' → logprob: -7.403956413269043
    5. 'u' → logprob: -8.278956413269043
    6. 'p' → logprob: -8.528956413269043
    7. '<|end|>' → logprob: -8.653956413269043
    8. 'replace' → logprob: -8.778956413269043
    9. '_' → logprob: -9.028956413269043
    10. '_push' → logprob: -9.278956413269043

Token 66: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6602745056152344
    2. ' ' → logprob: -0.7852745056152344
    3. '<|end|>' → logprob: -4.160274505615234
    4. ',' → logprob: -4.785274505615234
    5. ' ,' → logprob: -6.785274505615234
    6. '  ' → logprob: -7.285274505615234
    7. 'as' → logprob: -7.285274505615234
    8. ' (' → logprob: -8.785274505615234
    9. 'import' → logprob: -9.160274505615234
    10. ' h' → logprob: -9.160274505615234

Token 67: ' hp' (ID: 37774)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.7298330068588257
    2. ' h' → logprob: -1.1048330068588257
    3. 'hf' → logprob: -2.9798331260681152
    4. 'h' → logprob: -3.3548331260681152
    5. 'heap' → logprob: -3.4798331260681152
    6. ' hf' → logprob: -3.7298331260681152
    7. ' hp' → logprob: -4.354833126068115
    8. 'hp' → logprob: -4.354833126068115
    9. ' heap' → logprob: -4.354833126068115
    10. '	h' → logprob: -5.354833126068115

Token 68: 'Fy' (ID: 180657)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013149880804121494
    2. '<|end|>' → logprob: -4.763149738311768
    3. 'ush' → logprob: -6.138149738311768
    4. ',
' → logprob: -7.263149738311768
    5. 'q' → logprob: -8.263150215148926
    6. ' ' → logprob: -8.263150215148926
    7. '
' → logprob: -8.638150215148926
    8. ',h' → logprob: -8.763150215148926
    9. ' ,' → logprob: -9.138150215148926
    10. 'op' → logprob: -9.513150215148926

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19456332921981812
    2. '<|end|>' → logprob: -2.069563388824463
    3. ' ' → logprob: -3.944563388824463
    4. '
' → logprob: -4.444563388824463
    5. 'import' → logprob: -4.944563388824463
    6. ',
' → logprob: -5.944563388824463
    7. ';' → logprob: -6.694563388824463
    8. 'from' → logprob: -6.694563388824463
    9. '  
' → logprob: -6.694563388824463
    10. '' → logprob: -6.944563388824463

Token 70: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.13100136816501617
    2. ' he' → logprob: -2.1310014724731445
    3. 'heap' → logprob: -5.7560014724731445
    4. ' heap' → logprob: -8.006001472473145
    5. 'h' → logprob: -8.631001472473145
    6. '```' → logprob: -9.131001472473145
    7. ' ' → logprob: -9.631001472473145
    8. '.he' → logprob: -9.881001472473145
    9. ' h' → logprob: -10.381001472473145
    10. 'hea' → logprob: -11.381001472473145

Token 71: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.014182780869305134
    2. 'ap' → logprob: -4.2641825675964355
    3. 'a' → logprob: -11.014183044433594
    4. 'ап' → logprob: -13.889183044433594
    5. 'aq' → logprob: -14.139183044433594
    6. '```' → logprob: -15.264183044433594
    7. 'q' → logprob: -16.014183044433594
    8. ' app' → logprob: -16.389183044433594
    9. 'pp' → logprob: -16.389183044433594
    10. 'aps' → logprob: -16.514183044433594

Token 72: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.16041989624500275
    2. 'op' → logprob: -1.9104199409484863
    3. '

' → logprob: -10.410419464111328
    4. '   ' → logprob: -10.535419464111328
    5. '```' → logprob: -10.660419464111328
    6. 'us' → logprob: -10.910419464111328
    7. 'p' → logprob: -11.410419464111328
    8. 'o' → logprob: -11.410419464111328
    9. '
' → logprob: -11.785419464111328
    10. '  ' → logprob: -12.035419464111328

Token 73: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.016529995948076248
    2. 'as' → logprob: -4.3915300369262695
    3. '<|end|>' → logprob: -5.6415300369262695
    4. ' ' → logprob: -7.7665300369262695
    5. '<|end|>' → logprob: -11.39153003692627
    6. '	as' → logprob: -11.64153003692627
    7. '  ' → logprob: -12.01653003692627
    8. '_as' → logprob: -12.64153003692627
    9. '(as' → logprob: -12.89153003692627
    10. ' (' → logprob: -12.89153003692627

Token 74: ' hp' (ID: 37774)
  Prédit: ' hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.09669487178325653
    2. ' h' → logprob: -3.3466949462890625
    3. 'hp' → logprob: -3.3466949462890625
    4. ' he' → logprob: -4.0966949462890625
    5. 'hpp' → logprob: -5.9716949462890625
    6. ' ' → logprob: -7.3466949462890625
    7. 'he' → logprob: -7.3466949462890625
    8. 'h' → logprob: -7.5966949462890625
    9. ' Hp' → logprob: -8.346694946289062
    10. '  ' → logprob: -9.471694946289062

Token 75: 'P' (ID: 47)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.012088810093700886
    2. 'p' → logprob: -4.637088775634766
    3. 'Pop' → logprob: -7.262088775634766
    4. 'o' → logprob: -7.762088775634766
    5. 'Op' → logprob: -7.762088775634766
    6. 'pop' → logprob: -8.262088775634766
    7. '<|end|>' → logprob: -8.887088775634766
    8. ' ' → logprob: -9.012088775634766
    9. 'P' → logprob: -9.637088775634766
    10. 'O' → logprob: -10.012088775634766

Token 76: ',' (ID: 11)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08348167687654495
    2. ',' → logprob: -3.208481788635254
    3. '<|end|>' → logprob: -3.333481788635254
    4. 'o' → logprob: -6.333481788635254
    5. 'p' → logprob: -7.583481788635254
    6. 'opping' → logprob: -8.083481788635254
    7. ' ' → logprob: -8.333481788635254
    8. 'ush' → logprob: -8.333481788635254
    9. 'opup' → logprob: -8.833481788635254
    10. '  ' → logprob: -9.208481788635254

Token 77: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.07977656275033951
    2. 'he' → logprob: -2.5797765254974365
    3. ' heap' → logprob: -7.954776763916016
    4. 'heap' → logprob: -7.954776763916016
    5. 'h' → logprob: -9.579776763916016
    6. ' ' → logprob: -10.079776763916016
    7. ' h' → logprob: -11.767276763916016
    8. '```' → logprob: -11.954776763916016
    9. '.he' → logprob: -12.204776763916016
    10. ' hea' → logprob: -12.267276763916016

Token 78: 'app' (ID: 903)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.015682265162467957
    2. 'op' → logprob: -4.265682220458984
    3. 'app' → logprob: -7.140682220458984
    4. 'p' → logprob: -8.640682220458984
    5. 'push' → logprob: -8.890682220458984
    6. 'ap' → logprob: -9.140682220458984
    7. 'u' → logprob: -9.640682220458984
    8. 'o' → logprob: -9.765682220458984
    9. 'e' → logprob: -10.140682220458984
    10. 'us' → logprob: -10.265682220458984

Token 79: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.14370881021022797
    2. 'op' → logprob: -2.0187087059020996
    3. 'o' → logprob: -7.3937087059021
    4. 'us' → logprob: -8.393709182739258
    5. '   ' → logprob: -10.268709182739258
    6. 'u' → logprob: -10.518709182739258
    7. '

' → logprob: -10.893709182739258
    8. '```' → logprob: -11.018709182739258
    9. 'osh' → logprob: -11.268709182739258
    10. '
' → logprob: -11.518709182739258

Token 80: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09149054437875748
    2. '<|end|>' → logprob: -2.8414905071258545
    3. ' ' → logprob: -4.091490745544434
    4. 'as' → logprob: -4.466490745544434
    5. '<|end|>' → logprob: -7.591490745544434
    6. 'As' → logprob: -9.466490745544434
    7. '_as' → logprob: -9.591490745544434
    8. '	as' → logprob: -9.591490745544434
    9. '  ' → logprob: -9.966490745544434
    10. '(as' → logprob: -10.591490745544434

Token 81: ' hp' (ID: 37774)
  Prédit: ' hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.007899629883468151
    2. 'hp' → logprob: -5.007899761199951
    3. ' ' → logprob: -7.382899761199951
    4. ' h' → logprob: -8.007899284362793
    5. ' ' → logprob: -9.132899284362793
    6. '_hp' → logprob: -9.882899284362793
    7. '_' → logprob: -11.132899284362793
    8. ' _' → logprob: -11.132899284362793
    9. 'h' → logprob: -11.257899284362793
    10. '	h' → logprob: -12.257899284362793

Token 82: 'PS' (ID: 5895)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.004597565159201622
    2. 'u' → logprob: -5.6295976638793945
    3. 's' → logprob: -8.629597663879395
    4. '<|end|>' → logprob: -8.629597663879395
    5. 'push' → logprob: -8.754597663879395
    6. 'Push' → logprob: -9.504597663879395
    7. 'USH' → logprob: -9.879597663879395
    8. 'us' → logprob: -9.879597663879395
    9. '```' → logprob: -10.379597663879395
    10. '_push' → logprob: -10.379597663879395

Token 83: 'H' (ID: 39)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0283994674682617
    2. '<|end|>' → logprob: -1.2783994674682617
    3. '
' → logprob: -1.6533994674682617
    4. ' ' → logprob: -3.2783994674682617
    5. '#' → logprob: -3.5283994674682617
    6. ',
' → logprob: -4.153399467468262
    7. '' → logprob: -4.403399467468262
    8. '

' → logprob: -4.403399467468262
    9. ' 
' → logprob: -4.653399467468262
    10. '.' → logprob: -4.653399467468262

Token 86: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.057400815188884735
    2. ' os' → logprob: -3.182400703430176
    3. ' random' → logprob: -5.057400703430176
    4. ' math' → logprob: -5.557400703430176
    5. ' operator' → logprob: -6.682400703430176
    6. ' io' → logprob: -7.057400703430176
    7. ' typing' → logprob: -7.307400703430176
    8. ' datetime' → logprob: -8.182400703430176
    9. ' statistics' → logprob: -8.432400703430176
    10. ' json' → logprob: -9.057400703430176

Token 87: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11329171806573868
    2. ' ' → logprob: -2.7382917404174805
    3. '.' → logprob: -4.1132917404174805
    4. 'import' → logprob: -4.2382917404174805
    5. '<|end|>' → logprob: -4.8632917404174805
    6. ' .' → logprob: -6.2382917404174805
    7. ' itertools' → logprob: -6.6132917404174805
    8. '<|end|>' → logprob: -8.73829174041748
    9. '.import' → logprob: -9.48829174041748
    10. '	import' → logprob: -9.98829174041748

Token 88: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.9859974384307861
    2. 'com' → logprob: -1.4859974384307861
    3. ' combinations' → logprob: -2.360997438430786
    4. ' accumulate' → logprob: -2.485997438430786
    5. ' product' → logprob: -2.610997438430786
    6. ' ' → logprob: -2.985997438430786
    7. ' count' → logprob: -3.485997438430786
    8. 'per' → logprob: -3.735997438430786
    9. ' chain' → logprob: -4.610997200012207
    10. 'count' → logprob: -5.235997200012207

Token 89: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.14103256165981293
    2. ' ' → logprob: -2.3910324573516846
    3. '<|end|>' → logprob: -3.8910324573516846
    4. ',' → logprob: -4.266032695770264
    5. 'as' → logprob: -5.891032695770264
    6. ' ,' → logprob: -7.016032695770264
    7. '(' → logprob: -7.141032695770264
    8. ' (' → logprob: -7.641032695770264
    9. '<|end|>' → logprob: -8.641032218933105
    10. 'import' → logprob: -9.016032218933105

Token 90: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.19621902704238892
    2. 'acc' → logprob: -2.446218967437744
    3. ' ac' → logprob: -2.821218967437744
    4. ' accu' → logprob: -4.571218967437744
    5. ' accumulate' → logprob: -5.321218967437744
    6. ' ' → logprob: -5.321218967437744
    7. ' accum' → logprob: -5.571218967437744
    8. 'ac' → logprob: -5.821218967437744
    9. '	acc' → logprob: -5.946218967437744
    10. ' acum' → logprob: -7.446218967437744

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009753254242241383
    2. ' ,' → logprob: -5.134753227233887
    3. '<|end|>' → logprob: -6.259753227233887
    4. 'import' → logprob: -7.634753227233887
    5. 'r' → logprob: -7.884753227233887
    6. ' ' → logprob: -8.259753227233887
    7. '(' → logprob: -8.509753227233887
    8. ',
' → logprob: -8.759753227233887
    9. 'from' → logprob: -9.634753227233887
    10. 't' → logprob: -10.009753227233887

Token 92: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.23455864191055298
    2. 'chain' → logprob: -2.609558582305908
    3. 'product' → logprob: -2.859558582305908
    4. 'per' → logprob: -3.859558582305908
    5. ' product' → logprob: -4.234558582305908
    6. ' chain' → logprob: -4.359558582305908
    7. ' ' → logprob: -5.359558582305908
    8. ' combinations' → logprob: -5.484558582305908
    9. ' permutations' → logprob: -5.484558582305908
    10. 'cycle' → logprob: -5.734558582305908

Token 93: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.7368769645690918
    2. ' co' → logprob: -1.2368769645690918
    3. ' c' → logprob: -2.236876964569092
    4. ' ' → logprob: -2.986876964569092
    5. ' com' → logprob: -3.111876964569092
    6. 'com' → logprob: -4.361876964569092
    7. ' cmb' → logprob: -5.111876964569092
    8. ' combo' → logprob: -5.861876964569092
    9. ' cm' → logprob: -6.111876964569092
    10. ' combos' → logprob: -6.861876964569092

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0547042042016983
    2. 'inations' → logprob: -3.304704189300537
    3. 'utations' → logprob: -5.179704189300537
    4. 'ations' → logprob: -5.304704189300537
    5. 'initions' → logprob: -6.429704189300537
    6. 's' → logprob: -7.179704189300537
    7. 'binations' → logprob: -7.804704189300537
    8. ' ' → logprob: -7.929704189300537
    9. 'as' → logprob: -7.929704189300537
    10. 'entions' → logprob: -7.929704189300537

Token 96: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0509271621704102
    2. ' compress' → logprob: -1.4259271621704102
    3. ' permutations' → logprob: -1.4259271621704102
    4. 'compress' → logprob: -2.67592716217041
    5. ' product' → logprob: -3.17592716217041
    6. 'per' → logprob: -3.55092716217041
    7. 'product' → logprob: -4.55092716217041
    8. '	com' → logprob: -5.05092716217041
    9. 'c' → logprob: -5.30092716217041
    10. ' chain' → logprob: -5.80092716217041

Token 97: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.06143689900636673
    2. '<|end|>' → logprob: -3.061436891555786
    3. 'as' → logprob: -4.686437129974365
    4. ' ' → logprob: -6.061437129974365
    5. '(' → logprob: -7.561437129974365
    6. ' (' → logprob: -8.061436653137207
    7. '<|end|>' → logprob: -8.936436653137207
    8. 's' → logprob: -10.561436653137207
    9. ' (
' → logprob: -10.561436653137207
    10. '(as' → logprob: -10.561436653137207

Token 98: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.6919552683830261
    2. ' perm' → logprob: -0.8169552683830261
    3. ' comb' → logprob: -2.941955327987671
    4. ' ' → logprob: -5.941955089569092
    5. 'per' → logprob: -6.941955089569092
    6. 'comb' → logprob: -7.066955089569092
    7. ' perms' → logprob: -9.19195556640625
    8. ' per' → logprob: -9.69195556640625
    9. '_perm' → logprob: -9.94195556640625
    10. '  ' → logprob: -10.06695556640625

Token 99: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7579295039176941
    2. ' as' → logprob: -0.8829295039176941
    3. 'as' → logprob: -2.382929563522339
    4. '<|end|>' → logprob: -4.13292932510376
    5. 'from' → logprob: -5.88292932510376
    6. 'import' → logprob: -6.63292932510376
    7. 'utations' → logprob: -6.63292932510376
    8. 's' → logprob: -6.88292932510376
    9. ' ' → logprob: -7.38292932510376
    10. '(' → logprob: -7.75792932510376

Token 100: '_' (ID: 62)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 'ι' (ID: 874)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19733309745788574
    2. ' =' → logprob: -3.3223330974578857
    3. '=' → logprob: -3.5723330974578857
    4. 'p' → logprob: -3.8223330974578857
    5. 'm' → logprob: -3.9473330974578857
    6. 's' → logprob: -4.447333335876465
    7. ' ' → logprob: -4.572333335876465
    8. 'a' → logprob: -4.697333335876465
    9. 'n' → logprob: -5.072333335876465
    10. '  ' → logprob: -5.447333335876465

Token 102: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13681747019290924
    2. ' =' → logprob: -2.636817455291748
    3. '_' → logprob: -3.511817455291748
    4. 'n' → logprob: -4.386817455291748
    5. 'd' → logprob: -5.011817455291748
    6. 'f' → logprob: -6.386817455291748
    7. ',' → logprob: -6.511817455291748
    8. '.' → logprob: -7.636817455291748
    9. 'm' → logprob: -7.761817455291748
    10. '\xe2\x82' → logprob: -7.886817455291748

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6461603045463562
    2. ' =' → logprob: -0.7711603045463562
    3. ' ' → logprob: -4.771160125732422
    4. ',' → logprob: -6.271160125732422
    5. '_' → logprob: -6.771160125732422
    6. '.' → logprob: -7.521160125732422
    7. 'n' → logprob: -8.146160125732422
    8. 'm' → logprob: -8.771160125732422
    9. '(' → logprob: -9.271160125732422
    10. 's' → logprob: -9.271160125732422

Token 104: ' Sys' (ID: 47410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46593451499938965
    2. ' ' → logprob: -2.3409345149993896
    3. '[]' → logprob: -2.4659345149993896
    4. 'm' → logprob: -2.8409345149993896
    5. 'int' → logprob: -3.8409345149993896
    6. ' []' → logprob: -3.9659345149993896
    7. ' m' → logprob: -3.9659345149993896
    8. '1' → logprob: -3.9659345149993896
    9. 'lambda' → logprob: -3.9659345149993896
    10. '10' → logprob: -5.215934753417969

Token 105: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024668341502547264
    2. '.argv' → logprob: -4.274668216705322
    3. '.stdout' → logprob: -5.774668216705322
    4. '.stdin' → logprob: -5.899668216705322
    5. '.stderr' → logprob: -6.649668216705322
    6. '._' → logprob: -7.399668216705322
    7. '.exit' → logprob: -7.649668216705322
    8. '.version' → logprob: -7.899668216705322
    9. ' .' → logprob: -8.27466869354248
    10. '.modules' → logprob: -8.27466869354248

Token 106: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.14325368404388428
    2. '.' → logprob: -2.268253803253174
    3. '.read' → logprob: -3.643253803253174
    4. 'read' → logprob: -5.768253803253174
    5. '.readlines' → logprob: -7.768253803253174
    6. '.write' → logprob: -9.893253326416016
    7. '<|end|>' → logprob: -10.518253326416016
    8. '
' → logprob: -10.768253326416016
    9. ' readline' → logprob: -11.268253326416016
    10. '_read' → logprob: -11.393253326416016

Token 107: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060709983110427856
    2. '()' → logprob: -2.9357099533081055
    3. '(
' → logprob: -5.8107099533081055
    4. '#' → logprob: -7.5607099533081055
    5. '_' → logprob: -7.5607099533081055
    6. '
' → logprob: -8.185709953308105
    7. '<|end|>' → logprob: -8.185709953308105
    8. ')' → logprob: -8.310709953308105
    9. ' ' → logprob: -9.060709953308105
    10. ' (' → logprob: -9.060709953308105

Token 108: 'MOD' (ID: 52135)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3309555947780609
    2. '
' → logprob: -2.2059555053710938
    3. '_' → logprob: -2.4559555053710938
    4. '(
' → logprob: -3.0809555053710938
    5. '()' → logprob: -4.830955505371094
    6. '#' → logprob: -5.080955505371094
    7. ',' → logprob: -5.330955505371094
    8. '\n' → logprob: -5.580955505371094
    9. 'def' → logprob: -6.205955505371094
    10. '' → logprob: -6.580955505371094

Token 109: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31164151430130005
    2. ' ' → logprob: -1.4366414546966553
    3. '=' → logprob: -3.6866414546966553
    4. '_' → logprob: -5.686641693115234
    5. '<|end|>' → logprob: -7.061641693115234
    6. '  ' → logprob: -8.311641693115234
    7. ' =
' → logprob: -9.311641693115234
    8. ')' → logprob: -9.561641693115234
    9. ' )' → logprob: -9.686641693115234
    10. ',' → logprob: -9.936641693115234

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1671488881111145
    2. '=' → logprob: -2.6671488285064697
    3. ' ' → logprob: -2.9171488285064697
    4. '_' → logprob: -3.5421488285064697
    5. '  ' → logprob: -7.417149066925049
    6. ' _' → logprob: -9.04214859008789
    7. '32' → logprob: -9.29214859008789
    8. ')' → logprob: -9.66714859008789
    9. '1' → logprob: -9.79214859008789
    10. '<|end|>' → logprob: -10.04214859008789

Token 111: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5985079407691956
    2. ' ' → logprob: -0.8485079407691956
    3. '100' → logprob: -3.848507881164551
    4. '1' → logprob: -6.973507881164551
    5. 'int' → logprob: -10.22350788116455
    6. ' int' → logprob: -11.47350788116455
    7. '998' → logprob: -11.47350788116455
    8. ' ' → logprob: -12.47350788116455
    9. 'pow' → logprob: -13.22350788116455
    10. '999' → logprob: -13.72350788116455

Token 112: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04960521310567856
    2. '100' → logprob: -3.049605131149292
    3. '1' → logprob: -7.174605369567871
    4. ' ' → logprob: -8.549605369567871
    5. '998' → logprob: -10.174605369567871
    6. 'int' → logprob: -10.924605369567871
    7. '999' → logprob: -14.924605369567871
    8. '0' → logprob: -15.299605369567871
    9. '123' → logprob: -15.424605369567871
    10. 'pow' → logprob: -15.799605369567871

Token 113: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.005889572203159332
    2. '**' → logprob: -5.505889415740967
    3. '09' → logprob: -6.380889415740967
    4. '000' → logprob: -9.880889892578125
    5. ' ' → logprob: -10.755889892578125
    6. '00' → logprob: -10.880889892578125
    7. '0' → logprob: -11.005889892578125
    8. '^' → logprob: -13.130889892578125
    9. '7' → logprob: -13.255889892578125
    10. '009' → logprob: -13.755889892578125

Token 114: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.054500666621607e-06
    2. '09' → logprob: -13.25000286102295
    3. ' ' → logprob: -13.87500286102295
    4. '+' → logprob: -17.000003814697266
    5. '```' → logprob: -17.125003814697266
    6. '_' → logprob: -17.250003814697266
    7. '0' → logprob: -18.000003814697266
    8. '10' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.500003814697266
    10. '^' → logprob: -18.625003814697266

Token 115: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '09' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. '+' → logprob: -18.375
    6. '   ' → logprob: -18.625
    7. '10' → logprob: -18.625
    8. '19' → logprob: -18.625
    9. '_' → logprob: -18.625
    10. '
' → logprob: -19.625

Token 116: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005329216364771128
    2. '7' → logprob: -5.630329132080078
    3. ' +' → logprob: -6.380329132080078
    4. '+
' → logprob: -11.130329132080078
    5. '+

' → logprob: -12.130329132080078
    6. ' ' → logprob: -12.630329132080078
    7. '＋' → logprob: -13.005329132080078
    8. '19' → logprob: -14.005329132080078
    9. '37' → logprob: -14.130329132080078
    10. 'plus' → logprob: -14.130329132080078

Token 117: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '+' → logprob: -14.125025749206543
    4. '   ' → logprob: -16.687524795532227
    5. '  ' → logprob: -16.875024795532227
    6. '```' → logprob: -16.875024795532227
    7. '9' → logprob: -17.000024795532227
    8. '07' → logprob: -17.250024795532227
    9. ' ' → logprob: -17.687524795532227
    10. '_' → logprob: -18.062524795532227

Token 118: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.3856492842023727e-06
    2. '+' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '```' → logprob: -15.875000953674316
    5. '07' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '_' → logprob: -18.250001907348633
    8. '

' → logprob: -18.375001907348633
    9. '' → logprob: -18.437501907348633
    10. '77' → logprob: -18.687501907348633

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16430522501468658
    2. '_' → logprob: -2.7893052101135254
    3. '<|end|>' → logprob: -2.7893052101135254
    4. '#' → logprob: -4.914305210113525
    5. '' → logprob: -5.289305210113525
    6. '\n' → logprob: -5.789305210113525
    7. ',' → logprob: -6.289305210113525
    8. '

' → logprob: -6.539305210113525
    9. ' 
' → logprob: -6.539305210113525
    10. 'def' → logprob: -6.914305210113525

Token 120: 'fetch' (ID: 19843)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4196668565273285
    2. '_' → logprob: -1.7946668863296509
    3. 'def' → logprob: -2.5446667671203613
    4. '#' → logprob: -3.4196667671203613
    5. '' → logprob: -4.544666767120361
    6. 'n' → logprob: -4.669666767120361
    7. '

' → logprob: -5.169666767120361
    8. ' 
' → logprob: -5.294666767120361
    9. 'd' → logprob: -5.419666767120361
    10. 'a' → logprob: -5.544666767120361

Token 121: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17767491936683655
    2. '_data' → logprob: -1.9276748895645142
    3. 'data' → logprob: -5.302674770355225
    4. '(' → logprob: -5.677674770355225
    5. '_items' → logprob: -6.302674770355225
    6. '_input' → logprob: -6.427674770355225
    7. ' =' → logprob: -7.677674770355225
    8. '(_' → logprob: -7.677674770355225
    9. '_values' → logprob: -7.802674770355225
    10. '_val' → logprob: -7.927674770355225

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2171136736869812
    2. 'ing' → logprob: -2.342113733291626
    3. '=' → logprob: -2.467113733291626
    4. '_' → logprob: -5.092113494873047
    5. '_line' → logprob: -6.092113494873047
    6. '(' → logprob: -6.842113494873047
    7. ' ' → logprob: -7.092113494873047
    8. 'line' → logprob: -7.342113494873047
    9. '_data' → logprob: -7.467113494873047
    10. 'data' → logprob: -8.092113494873047

Token 123: ' lambda' (ID: 27871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03686334937810898
    2. ' _' → logprob: -3.411863327026367
    3. ' lambda' → logprob: -6.786863327026367
    4. 'lambda' → logprob: -8.161863327026367
    5. ' ' → logprob: -8.286863327026367
    6. '_lambda' → logprob: -8.286863327026367
    7. '_S' → logprob: -8.411863327026367
    8. '"' → logprob: -8.536863327026367
    9. '_sys' → logprob: -8.786863327026367
    10. '(lambda' → logprob: -9.286863327026367

Token 124: ' :' (ID: 712)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.19228798151016235
    2. 's' → logprob: -2.5672879219055176
    3. ' x' → logprob: -3.5672879219055176
    4. ' _' → logprob: -3.9422879219055176
    5. ' :' → logprob: -4.442287921905518
    6. '_' → logprob: -4.567287921905518
    7. '_:' → logprob: -4.692287921905518
    8. ':' → logprob: -5.067287921905518
    9. 'x' → logprob: -5.692287921905518
    10. ' ' → logprob: -6.067287921905518

Token 125: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05844446271657944
    2. ' _' → logprob: -2.9334444999694824
    3. '_i' → logprob: -6.683444499969482
    4. '_.' → logprob: -7.808444499969482
    5. '_S' → logprob: -8.308444023132324
    6. ' ' → logprob: -8.558444023132324
    7. '_str' → logprob: -8.683444023132324
    8. ' input' → logprob: -8.683444023132324
    9. '_sys' → logprob: -8.683444023132324
    10. 'str' → logprob: -8.808444023132324

Token 126: 'ι' (ID: 874)
  Prédit: 'ι'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ι' → logprob: -0.28123512864112854
    2. '_' → logprob: -1.4062350988388062
    3. 'ς' → logprob: -10.156234741210938
    4. 'υ' → logprob: -12.156234741210938
    5. 'Ι' → logprob: -12.406234741210938
    6. '‌' → logprob: -12.406234741210938
    7. '\xc9' → logprob: -12.906234741210938
    8. '\xe2\x82' → logprob: -13.031234741210938
    9. 'ιω' → logprob: -13.031234741210938
    10. 'ια' → logprob: -13.156234741210938

Token 127: '_' (ID: 62)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5761184692382812
    2. '()' → logprob: -0.8261184692382812
    3. '(' → logprob: -9.576118469238281
    4. '()
' → logprob: -10.451118469238281
    5. '()\' → logprob: -10.826118469238281
    6. ' ()' → logprob: -10.951118469238281
    7. ' ().' → logprob: -11.326118469238281
    8. '()[' → logprob: -11.701118469238281
    9. '()(' → logprob: -12.451118469238281
    10. '()

' → logprob: -12.826118469238281

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31342920660972595
    2. '()' → logprob: -1.3134292364120483
    3. '(' → logprob: -8.93842887878418
    4. '()
' → logprob: -11.68842887878418
    5. '()\' → logprob: -11.81342887878418
    6. ' ().' → logprob: -12.31342887878418
    7. ' ()' → logprob: -12.43842887878418
    8. '()

' → logprob: -13.18842887878418
    9. '.rstrip' → logprob: -13.43842887878418
    10. '.strip' → logprob: -13.43842887878418

Token 129: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.12692894041538239
    2. 'rstrip' → logprob: -2.1269290447235107
    3. ' strip' → logprob: -14.62692928314209
    4. 'split' → logprob: -15.62692928314209
    5. 'rst' → logprob: -16.626928329467773
    6. 'str' → logprob: -16.626928329467773
    7. 'rs' → logprob: -16.751928329467773
    8. '.rstrip' → logprob: -17.376928329467773
    9. 'decode' → logprob: -17.501928329467773
    10. '(strip' → logprob: -17.626928329467773

Token 130: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01175367459654808
    2. '(' → logprob: -4.511753559112549
    3. '()
' → logprob: -7.636753559112549
    4. '(
' → logprob: -9.011754035949707
    5. '()\' → logprob: -10.761754035949707
    6. '<|end|>' → logprob: -11.386754035949707
    7. ')' → logprob: -11.511754035949707
    8. ' ()' → logprob: -11.636754035949707
    9. '#' → logprob: -11.886754035949707
    10. '
' → logprob: -11.886754035949707

Token 131: 'fetch' (ID: 19843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3447538614273071
    2. '_' → logprob: -1.8447538614273071
    3. 'fetch' → logprob: -1.9697538614273071
    4. '
' → logprob: -2.4697537422180176
    5. '<|end|>' → logprob: -2.5947537422180176
    6. '(' → logprob: -2.7197537422180176
    7. '()' → logprob: -2.9697537422180176
    8. '#' → logprob: -3.2197537422180176
    9. '(
' → logprob: -4.219753742218018
    10. ')' → logprob: -4.594753742218018

Token 132: '_int' (ID: 12285)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.1170298159122467
    2. '_' → logprob: -2.367029905319214
    3. '_int' → logprob: -4.367029666900635
    4. '_line' → logprob: -6.742029666900635
    5. '_num' → logprob: -7.367029666900635
    6. '_val' → logprob: -7.617029666900635
    7. '()' → logprob: -7.992029666900635
    8. '_list' → logprob: -8.117030143737793
    9. '_s' → logprob: -8.992030143737793
    10. '_raw' → logprob: -9.117030143737793

Token 133: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.71473628282547
    2. '()' → logprob: -1.3397362232208252
    3. '(' → logprob: -2.089736223220825
    4. '=' → logprob: -2.339736223220825
    5. ' =' → logprob: -4.214736461639404
    6. '=lambda' → logprob: -5.464736461639404
    7. '_' → logprob: -6.089736461639404
    8. '_list' → logprob: -7.214736461639404
    9. '32' → logprob: -7.339736461639404
    10. '<|end|>' → logprob: -7.339736461639404

Token 134: ' lambda' (ID: 27871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.394655704498291
    2. '(lambda' → logprob: -2.269655704498291
    3. ' (' → logprob: -2.394655704498291
    4. ' lambda' → logprob: -2.894655704498291
    5. '(int' → logprob: -3.144655704498291
    6. ' ()' → logprob: -3.894655704498291
    7. 'lambda' → logprob: -5.394655704498291
    8. ' ' → logprob: -5.894655704498291
    9. '()' → logprob: -6.144655704498291
    10. 'int' → logprob: -6.144655704498291

Token 135: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.014978017657995224
    2. ' ' → logprob: -4.889977931976318
    3. ':' → logprob: -5.389977931976318
    4. ' ()' → logprob: -7.014977931976318
    5. ' ():' → logprob: -7.264977931976318
    6. '():' → logprob: -7.639977931976318
    7. ' lambda' → logprob: -9.014978408813477
    8. 'int' → logprob: -9.139978408813477
    9. ':int' → logprob: -9.139978408813477
    10. ' _' → logprob: -9.264978408813477

Token 136: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11296562850475311
    2. 'int' → logprob: -2.2379655838012695
    3. ' ' → logprob: -8.98796558380127
    4. '(int' → logprob: -12.11296558380127
    5. '	int' → logprob: -12.23796558380127
    6. '  ' → logprob: -12.48796558380127
    7. ' in' → logprob: -13.36296558380127
    8. '<int' → logprob: -14.61296558380127
    9. ' map' → logprob: -14.61296558380127
    10. '[int' → logprob: -14.73796558380127

Token 137: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10811343789100647
    2. '(fetch' → logprob: -2.3581135272979736
    3. '(_' → logprob: -4.8581132888793945
    4. '(_)' → logprob: -10.483113288879395
    5. '(f' → logprob: -11.233113288879395
    6. '_' → logprob: -11.233113288879395
    7. '('' → logprob: -11.483113288879395
    8. '(
' → logprob: -11.608113288879395
    9. '_fetch' → logprob: -12.358113288879395
    10. 'fetch' → logprob: -12.358113288879395

Token 138: 'ι' (ID: 874)
  Prédit: 'ι'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ι' → logprob: -0.00012713817704934627
    2. 'ιω' → logprob: -10.000126838684082
    3. 'ιε' → logprob: -10.625126838684082
    4. 'ια' → logprob: -10.750126838684082
    5. '\xc9' → logprob: -12.250126838684082
    6. 'ιλ' → logprob: -12.375126838684082
    7. 'ιώ' → logprob: -12.500126838684082
    8. 'ισ' → logprob: -12.500126838684082
    9. 'ικ' → logprob: -12.625126838684082
    10. 'ί' → logprob: -13.000126838684082

Token 139: '_' (ID: 62)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6974244117736816
    2. '())' → logprob: -0.6974244117736816
    3. '().' → logprob: -5.572424411773682
    4. ')' → logprob: -7.822424411773682
    5. '_' → logprob: -10.947423934936523
    6. ' ())' → logprob: -11.197423934936523
    7. '()
' → logprob: -12.072423934936523
    8. '()]' → logprob: -12.447423934936523
    9. ' ' → logprob: -12.697423934936523
    10. '`()' → logprob: -12.822423934936523

Token 140: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.492592990398407
    2. '().' → logprob: -0.992592990398407
    3. '()' → logprob: -4.117592811584473
    4. ')' → logprob: -6.242592811584473
    5. '(' → logprob: -9.867592811584473
    6. ' ())' → logprob: -10.242592811584473
    7. '()
' → logprob: -11.867592811584473
    8. '();)' → logprob: -12.242592811584473
    9. '()[' → logprob: -12.367592811584473
    10. '()]' → logprob: -12.742592811584473

Token 141: 'fetch' (ID: 19843)
  Prédit: 'fetch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.9889440536499023
    2. '<|end|>' → logprob: -1.2389440536499023
    3. '
' → logprob: -1.3639440536499023
    4. '_' → logprob: -3.7389440536499023
    5. '_fetch' → logprob: -4.363944053649902
    6. '(fetch' → logprob: -4.738944053649902
    7. 'def' → logprob: -4.988944053649902
    8. '()' → logprob: -5.238944053649902
    9. ' fetch' → logprob: -5.238944053649902
    10. '<|end|>' → logprob: -5.238944053649902

Token 142: '_map' (ID: 11824)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05973060056567192
    2. '_lst' → logprob: -3.1847305297851562
    3. '_array' → logprob: -4.934730529785156
    4. '_' → logprob: -5.059730529785156
    5. '_str' → logprob: -7.309730529785156
    6. '_arr' → logprob: -7.559730529785156
    7. 's' → logprob: -7.684730529785156
    8. '_int' → logprob: -7.809730529785156
    9. '_tuple' → logprob: -8.184730529785156
    10. '_line' → logprob: -8.434730529785156

Token 143: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5953012108802795
    2. '(lambda' → logprob: -1.4703011512756348
    3. ' =' → logprob: -1.7203011512756348
    4. '=' → logprob: -3.4703011512756348
    5. '=lambda' → logprob: -4.970301151275635
    6. '()' → logprob: -7.220301151275635
    7. '(
' → logprob: -8.095301628112793
    8. '<|end|>' → logprob: -8.845301628112793
    9. ' ' → logprob: -8.970301628112793
    10. 'lambda' → logprob: -9.845301628112793

Token 144: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.743103563785553
    2. ' lambda' → logprob: -1.2431035041809082
    3. '(lambda' → logprob: -1.4931035041809082
    4. 'list' → logprob: -4.868103504180908
    5. '(' → logprob: -6.618103504180908
    6. 'map' → logprob: -6.993103504180908
    7. ' list' → logprob: -7.368103504180908
    8. ' map' → logprob: -7.993103504180908
    9. ' (' → logprob: -9.743103981018066
    10. '(int' → logprob: -9.993103981018066

Token 145: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5094741582870483
    2. ':' → logprob: -1.5094741582870483
    3. ' :' → logprob: -2.884474277496338
    4. ' lambda' → logprob: -3.134474277496338
    5. 'lambda' → logprob: -3.634474277496338
    6. '()' → logprob: -3.634474277496338
    7. '(' → logprob: -5.009474277496338
    8. '(lambda' → logprob: -5.009474277496338
    9. '():' → logprob: -5.509474277496338
    10. ' ()' → logprob: -6.134474277496338

Token 146: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002235186053439975
    2. ' map' → logprob: -6.127235412597656
    3. 'lambda' → logprob: -10.627235412597656
    4. 'list' → logprob: -10.877235412597656
    5. 'm' → logprob: -12.627235412597656
    6. '	map' → logprob: -13.252235412597656
    7. ' ' → logprob: -14.127235412597656
    8. '   ' → logprob: -15.127235412597656
    9. 'dict' → logprob: -15.752235412597656
    10. '  ' → logprob: -15.877235412597656

Token 147: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009226576657965779
    2. 'int' → logprob: -7.125922679901123
    3. '(' → logprob: -9.375922203063965
    4. '<int' → logprob: -10.500922203063965
    5. '()' → logprob: -13.500922203063965
    6. '=int' → logprob: -13.875922203063965
    7. '[int' → logprob: -14.375922203063965
    8. '(eval' → logprob: -14.500922203063965
    9. '(
' → logprob: -14.625922203063965
    10. '(lambda' → logprob: -14.875922203063965

Token 148: ',' (ID: 11)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.7713732123374939
    2. '_' → logprob: -0.8963732123374939
    3. ',' → logprob: -2.6463732719421387
    4. '(' → logprob: -3.5213732719421387
    5. ')' → logprob: -4.521373271942139
    6. ',_' → logprob: -4.771373271942139
    7. '())' → logprob: -5.146373271942139
    8. '(),' → logprob: -6.646373271942139
    9. '()' → logprob: -6.896373271942139
    10. ' _' → logprob: -7.396373271942139

Token 149: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0020378450863063335
    2. ' _' → logprob: -6.25203800201416
    3. '_i' → logprob: -9.25203800201416
    4. 'ι' → logprob: -12.37703800201416
    5. '_itr' → logprob: -13.00203800201416
    6. ' ' → logprob: -13.12703800201416
    7. '_I' → logprob: -14.00203800201416
    8. '_str' → logprob: -14.37703800201416
    9. '_s' → logprob: -14.75203800201416
    10. '_ix' → logprob: -15.12703800201416

Token 150: 'ι' (ID: 874)
  Prédit: 'ι'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ι' → logprob: -0.00021736434428021312
    2. 'ιω' → logprob: -8.75021743774414
    3. 'ιε' → logprob: -10.37521743774414
    4. 'ια' → logprob: -11.37521743774414
    5. 'ιώ' → logprob: -12.37521743774414
    6. 'ικ' → logprob: -13.00021743774414
    7. 'ί' → logprob: -13.87521743774414
    8. 'Ι' → logprob: -13.87521743774414
    9. 'ιλ' → logprob: -14.00021743774414
    10. 'ισ' → logprob: -14.12521743774414

Token 151: '_' (ID: 62)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1428174525499344
    2. '()' → logprob: -2.017817497253418
    3. ')' → logprob: -9.267817497253418
    4. ' ' → logprob: -11.392817497253418
    5. '()
' → logprob: -11.517817497253418
    6. '())' → logprob: -11.892817497253418
    7. '_' → logprob: -12.142817497253418
    8. ' ()' → logprob: -12.392817497253418
    9. ' ().' → logprob: -13.392817497253418
    10. '	' → logprob: -13.392817497253418

Token 152: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010435284348204732
    2. '()' → logprob: -6.876043319702148
    3. ' ().' → logprob: -11.876043319702148
    4. ')' → logprob: -13.376043319702148
    5. ' ()' → logprob: -13.626043319702148
    6. ' ' → logprob: -15.126043319702148
    7. '()
' → logprob: -15.251043319702148
    8. '())' → logprob: -16.00104331970215
    9. '().__' → logprob: -16.50104331970215
    10. '().'' → logprob: -16.50104331970215

Token 153: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0076367976143956184
    2. 'rstrip' → logprob: -5.007637023925781
    3. 'strip' → logprob: -7.007637023925781
    4. ' split' → logprob: -11.132637023925781
    5. 'spl' → logprob: -13.632637023925781
    6. '(split' → logprob: -16.13263702392578
    7. ' ' → logprob: -16.63263702392578
    8. 's' → logprob: -17.13263702392578
    9. ')' → logprob: -17.25763702392578
    10. '.split' → logprob: -17.75763702392578

Token 154: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18916401267051697
    2. ')' → logprob: -1.9391640424728394
    3. '()' → logprob: -3.56416392326355
    4. '(' → logprob: -9.064164161682129
    5. '))' → logprob: -10.814164161682129
    6. '())
' → logprob: -11.314164161682129
    7. '()))' → logprob: -11.314164161682129
    8. ' ())' → logprob: -11.314164161682129
    9. '()
' → logprob: -11.439164161682129
    10. ' )' → logprob: -11.439164161682129

Token 155: 'fetch' (ID: 19843)
  Prédit: 'fetch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.7394628524780273
    2. ' 
' → logprob: -2.3644628524780273
    3. '
' → logprob: -2.4894628524780273
    4. ' ' → logprob: -2.6144628524780273
    5. '_' → logprob: -2.7394628524780273
    6. '<|end|>' → logprob: -3.1144628524780273
    7. 'def' → logprob: -3.3644628524780273
    8. 'n' → logprob: -4.114462852478027
    9. 'a' → logprob: -4.364462852478027
    10. '#' → logprob: -4.739462852478027

Token 156: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003331948770210147
    2. '_lst' → logprob: -6.378332138061523
    3. '_' → logprob: -7.253332138061523
    4. '_array' → logprob: -8.503332138061523
    5. '_tuple' → logprob: -8.503332138061523
    6. '_str' → logprob: -8.628332138061523
    7. '_line' → logprob: -9.253332138061523
    8. '_int' → logprob: -10.128332138061523
    9. '_l' → logprob: -10.378332138061523
    10. '_val' → logprob: -10.503332138061523

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023260971531271935
    2. '=' → logprob: -3.773261070251465
    3. '=lambda' → logprob: -11.273261070251465
    4. ' ' → logprob: -14.023261070251465
    5. '(lambda' → logprob: -14.273261070251465
    6. '(' → logprob: -14.398261070251465
    7. '_' → logprob: -15.648261070251465
    8. '＝' → logprob: -16.02326011657715
    9. 's' → logprob: -16.02326011657715
    10. 'space' → logprob: -16.14826011657715

Token 158: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7173064947128296
    2. ' list' → logprob: -1.7173064947128296
    3. 'lambda' → logprob: -1.8423064947128296
    4. 'list' → logprob: -1.9673064947128296
    5. '(lambda' → logprob: -3.592306613922119
    6. ' ' → logprob: -5.592306613922119
    7. ' (' → logprob: -6.467306613922119
    8. '(' → logprob: -7.467306613922119
    9. '(list' → logprob: -8.592306137084961
    10. ' =' → logprob: -8.967306137084961

Token 159: ' :' (ID: 712)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3496535122394562
    2. 'list' → logprob: -1.3496534824371338
    3. ' :' → logprob: -4.599653720855713
    4. '_' → logprob: -4.974653720855713
    5. '():' → logprob: -5.724653720855713
    6. ' ' → logprob: -5.849653720855713
    7. '()' → logprob: -5.849653720855713
    8. ':' → logprob: -5.974653720855713
    9. ' lambda' → logprob: -6.349653720855713
    10. ':list' → logprob: -6.599653720855713

Token 160: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02056220732629299
    2. ' list' → logprob: -3.895562171936035
    3. '[' → logprob: -12.020562171936035
    4. '_' → logprob: -12.395562171936035
    5. '_list' → logprob: -12.770562171936035
    6. '	list' → logprob: -13.770562171936035
    7. '[list' → logprob: -13.770562171936035
    8. '[_' → logprob: -13.895562171936035
    9. 'lst' → logprob: -14.270562171936035
    10. 'li' → logprob: -14.395562171936035

Token 161: '(fetch' (ID: 76382)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.021534554660320282
    2. '(fetch' → logprob: -4.521534442901611
    3. '(' → logprob: -4.646534442901611
    4. '(map' → logprob: -7.646534442901611
    5. '(int' → logprob: -9.14653491973877
    6. '()' → logprob: -9.64653491973877
    7. '_' → logprob: -9.64653491973877
    8. 'fetch' → logprob: -10.02153491973877
    9. '(_)' → logprob: -10.27153491973877
    10. '(eval' → logprob: -11.77153491973877

Token 162: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.026109039783477783
    2. '_str' → logprob: -3.901108980178833
    3. '_list' → logprob: -5.776109218597412
    4. '_int' → logprob: -6.151109218597412
    5. '_' → logprob: -8.151108741760254
    6. 'map' → logprob: -11.276108741760254
    7. 'int' → logprob: -11.651108741760254
    8. '_)' → logprob: -12.276108741760254
    9. 'str' → logprob: -13.526108741760254
    10. '(int' → logprob: -14.151108741760254

Token 163: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011457797139883041
    2. ')' → logprob: -4.636457920074463
    3. '()' → logprob: -6.386457920074463
    4. '();)' → logprob: -12.511457443237305
    5. ' ())' → logprob: -12.636457443237305
    6. '())
' → logprob: -12.761457443237305
    7. '()))' → logprob: -12.886457443237305
    8. '()
' → logprob: -14.136457443237305
    9. '(' → logprob: -14.261457443237305
    10. '());' → logprob: -14.386457443237305

Token 164: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24608220160007477
    2. '#' → logprob: -2.371082305908203
    3. 'n' → logprob: -2.496082305908203
    4. 'a' → logprob: -4.496082305908203
    5. 'd' → logprob: -4.996082305908203
    6. '
' → logprob: -5.121082305908203
    7. 'for' → logprob: -5.746082305908203
    8. 'class' → logprob: -6.371082305908203
    9. 'x' → logprob: -6.496082305908203
    10. '_' → logprob: -6.496082305908203

Token 165: ' twin' (ID: 41974)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.673042356967926
    2. ' main' → logprob: -0.923042356967926
    3. ' solve' → logprob: -2.9230422973632812
    4. ' solution' → logprob: -5.298042297363281
    5. '_' → logprob: -5.548042297363281
    6. ' solver' → logprob: -5.548042297363281
    7. ' dfs' → logprob: -5.548042297363281
    8. ' space' → logprob: -5.673042297363281
    9. ' _' → logprob: -5.923042297363281
    10. ' add' → logprob: -6.173042297363281

Token 166: '_unpack' (ID: 157177)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9948612451553345
    2. '_' → logprob: -1.1198612451553345
    3. 's' → logprob: -1.2448612451553345
    4. '_s' → logprob: -4.744861125946045
    5. '(_' → logprob: -6.994861125946045
    6. '_pairs' → logprob: -7.119861125946045
    7. '_parent' → logprob: -7.119861125946045
    8. '(s' → logprob: -7.494861125946045
    9. '_(' → logprob: -7.619861125946045
    10. '_sum' → logprob: -7.994861125946045

Token 167: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1816175878047943
    2. '():' → logprob: -1.9316176176071167
    3. '(args' → logprob: -4.931617736816406
    4. '(s' → logprob: -5.181617736816406
    5. '(x' → logprob: -6.931617736816406
    6. '(line' → logprob: -7.056617736816406
    7. '(_' → logprob: -7.056617736816406
    8. '(lst' → logprob: -7.056617736816406
    9. '()' → logprob: -7.431617736816406
    10. '(*' → logprob: -7.681617736816406

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23022304475307465
    2. '(' → logprob: -2.1052229404449463
    3. '    ' → logprob: -3.8552229404449463
    4. '	' → logprob: -4.230223178863525
    5. '	return' → logprob: -4.980223178863525
    6. '<|end|>' → logprob: -5.230223178863525
    7. '    
' → logprob: -5.355223178863525
    8. ' ' → logprob: -5.480223178863525
    9. '()' → logprob: -5.980223178863525
    10. '
' → logprob: -6.105223178863525

Token 169: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7780386209487915
    2. 'pass' → logprob: -2.028038501739502
    3. 'a' → logprob: -2.153038501739502
    4. 'l' → logprob: -2.528038501739502
    5. 'line' → logprob: -3.278038501739502
    6. 's' → logprob: -3.403038501739502
    7. '_' → logprob: -3.403038501739502
    8. 'data' → logprob: -3.528038501739502
    9. 'n' → logprob: -3.528038501739502
    10. 'left' → logprob: -3.903038501739502

Token 170: ' fetch' (ID: 12011)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1780790090560913
    2. 'fetch' → logprob: -1.6780790090560913
    3. '_' → logprob: -2.053079128265381
    4. ' None' → logprob: -2.928079128265381
    5. '0' → logprob: -3.303079128265381
    6. ' fetch' → logprob: -3.428079128265381
    7. ' ' → logprob: -3.553079128265381
    8. ' []' → logprob: -3.553079128265381
    9. 'None' → logprob: -4.053079128265381
    10. '()' → logprob: -4.053079128265381

Token 171: '_map' (ID: 11824)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1909160166978836
    2. '_str' → logprob: -1.9409160614013672
    3. '_int' → logprob: -4.065916061401367
    4. '_' → logprob: -4.440916061401367
    5. '_map' → logprob: -6.815916061401367
    6. '_string' → logprob: -9.065916061401367
    7. '_tuple' → logprob: -9.815916061401367
    8. ' _' → logprob: -12.065916061401367
    9. '__' → logprob: -12.565916061401367
    10. '_line' → logprob: -12.690916061401367

Token 172: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009551709517836571
    2. '(' → logprob: -7.000955104827881
    3. '()
' → logprob: -11.000955581665039
    4. '(),' → logprob: -11.000955581665039
    5. '(
' → logprob: -13.000955581665039
    6. '()

' → logprob: -13.625955581665039
    7. '();' → logprob: -13.750955581665039
    8. ' ()' → logprob: -13.875955581665039
    9. '().' → logprob: -14.250955581665039
    10. '()]' → logprob: -14.625955581665039

Token 173: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23920516669750214
    2. 'def' → logprob: -2.4892051219940186
    3. '
' → logprob: -3.4892051219940186
    4. '#' → logprob: -4.364205360412598
    5. '(' → logprob: -4.364205360412598
    6. ',' → logprob: -4.489205360412598
    7. ')' → logprob: -4.864205360412598
    8. '\n' → logprob: -4.864205360412598
    9. '()' → logprob: -5.114205360412598
    10. '[' → logprob: -5.364205360412598

Token 174: ' obscure' (ID: 77331)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6665576696395874
    2. '(' → logprob: -1.2915576696395874
    3. 'd' → logprob: -2.416557788848877
    4. 'n' → logprob: -3.166557788848877
    5. '_' → logprob: -3.916557788848877
    6. '#' → logprob: -4.166557788848877
    7. ' ' → logprob: -4.541557788848877
    8. 't' → logprob: -4.916557788848877
    9. 'a' → logprob: -5.041557788848877
    10. 'for' → logprob: -5.916557788848877

Token 175: ' variable' (ID: 11076)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15243402123451233
    2. '_' → logprob: -2.5274341106414795
    3. ' def' → logprob: -4.1524338722229
    4. '<|end|>' → logprob: -4.1524338722229
    5. '()' → logprob: -4.7774338722229
    6. ':' → logprob: -6.1524338722229
    7. 'import' → logprob: -6.5274338722229
    8. '#' → logprob: -6.6524338722229
    9. 'ly' → logprob: -6.6524338722229
    10. ' =' → logprob: -6.6524338722229

Token 176: ' names' (ID: 8747)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10140848159790039
    2. 's' → logprob: -2.8514084815979004
    3. ' ' → logprob: -5.1014084815979
    4. 'a' → logprob: -5.3514084815979
    5. ' _' → logprob: -5.3514084815979
    6. ' =' → logprob: -5.3514084815979
    7. 'n' → logprob: -5.4764084815979
    8. '=' → logprob: -5.7264084815979
    9. '_=' → logprob: -6.1014084815979
    10. 'x' → logprob: -6.6014084815979

Token 177: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0014773607254028
    2. '_' → logprob: -1.1264773607254028
    3. 'def' → logprob: -2.2514772415161133
    4. '
' → logprob: -2.7514772415161133
    5. '(' → logprob: -3.2514772415161133
    6. ',' → logprob: -3.7514772415161133
    7. '#' → logprob: -3.8764772415161133
    8. '=' → logprob: -4.876477241516113
    9. 'a' → logprob: -5.376477241516113
    10. '(
' → logprob: -5.501477241516113

Token 178: '染' (ID: 58161)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3737740516662598
    2. '_' → logprob: -1.6237740516662598
    3. 'a' → logprob: -1.7487740516662598
    4. 'i' → logprob: -2.1237740516662598
    5. 'n' → logprob: -2.4987740516662598
    6. 'def' → logprob: -2.9987740516662598
    7. ':' → logprob: -3.6237740516662598
    8. '(' → logprob: -4.24877405166626
    9. '=' → logprob: -4.49877405166626
    10. 't' → logprob: -4.62377405166626

Token 179: '料' (ID: 9268)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9861472249031067
    2. '_' → logprob: -1.236147165298462
    3. ' =' → logprob: -1.361147165298462
    4. 'def' → logprob: -4.361147403717041
    5. '色' → logprob: -4.486147403717041
    6. '染' → logprob: -4.923647403717041
    7. ' ' → logprob: -5.173647403717041
    8. '＝' → logprob: -6.298647403717041
    9. '料' → logprob: -6.361147403717041
    10. '.' → logprob: -6.486147403717041

Token 180: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25700873136520386
    2. '=' → logprob: -1.6320087909698486
    3. ',' → logprob: -4.0070085525512695
    4. ' ' → logprob: -4.8820085525512695
    5. '_' → logprob: -5.7570085525512695
    6. 's' → logprob: -8.25700855255127
    7. '＝' → logprob: -8.38200855255127
    8. ' ,' → logprob: -8.38200855255127
    9. '.' → logprob: -8.50700855255127
    10. '<|end|>' → logprob: -8.88200855255127

Token 181: ' �' (ID: 133945)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' \xe6\x9f' → logprob: -1.258689522743225
    2. ' \xe9' → logprob: -2.7586894035339355
    3. '染' → logprob: -3.0086894035339355
    4. ' ' → logprob: -3.6336894035339355
    5. ' \xe7\xb4' → logprob: -3.6961894035339355
    6. ' \xe7\xb2' → logprob: -3.7586894035339355
    7. ' \xe7\xb6' → logprob: -3.9461894035339355
    8. ' \xe7\xb3' → logprob: -4.0086894035339355
    9. ' \xe6\x8a' → logprob: -4.3836894035339355
    10. ' \xe5\xa1' → logprob: -4.6336894035339355

Token 182: '�' (ID: 244)
  Prédit: '染'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '染' → logprob: -0.4127596914768219
    2. '_' → logprob: -2.912759780883789
    3. ',' → logprob: -3.350259780883789
    4. '�' → logprob: -3.475259780883789
    5. ' =' → logprob: -4.037759780883789
    6. '=' → logprob: -4.162759780883789
    7. '1' → logprob: -5.225259780883789
    8. '_,' → logprob: -5.412759780883789
    9. '剤' → logprob: -5.537759780883789
    10. '数' → logprob: -5.662759780883789

Token 183: '分' (ID: 2957)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9081041812896729
    2. ' =' → logprob: -1.1581041812896729
    3. ',' → logprob: -1.5331041812896729
    4. '_' → logprob: -3.533104181289673
    5. '染' → logprob: -4.283103942871094
    6. '�' → logprob: -4.783103942871094
    7. '＝' → logprob: -5.533103942871094
    8. '��' → logprob: -6.658103942871094
    9. '_,' → logprob: -6.720603942871094
    10. ' ' → logprob: -6.970603942871094

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18985489010810852
    2. ' =' → logprob: -1.9398548603057861
    3. ',' → logprob: -3.564854860305786
    4. '_' → logprob: -7.689855098724365
    5. '＝' → logprob: -8.439854621887207
    6. ' ,' → logprob: -10.064854621887207
    7. ' ' → logprob: -10.439854621887207
    8. '_=' → logprob: -10.939854621887207
    9. 'a' → logprob: -11.252354621887207
    10. 's' → logprob: -11.252354621887207

Token 185: ' twin' (ID: 41974)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.40689748525619507
    2. 'fetch' → logprob: -1.9068975448608398
    3. ' twin' → logprob: -2.28189754486084
    4. ' fetch' → logprob: -2.53189754486084
    5. ' t' → logprob: -6.59439754486084
    6. ' ' → logprob: -7.71939754486084
    7. '	t' → logprob: -7.71939754486084
    8. '

' → logprob: -8.46939754486084
    9. ' dp' → logprob: -8.65689754486084
    10. 'dp' → logprob: -8.90689754486084

Token 186: '_unpack' (ID: 157177)
  Prédit: '_unpack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unpack' → logprob: -0.0024349973537027836
    2. '_' → logprob: -6.127435207366943
    3. 'un' → logprob: -9.252434730529785
    4. '()' → logprob: -9.627434730529785
    5. '分' → logprob: -10.877434730529785
    6. '(' → logprob: -11.252434730529785
    7. ' unpack' → logprob: -11.877434730529785
    8. '.unpack' → logprob: -11.877434730529785
    9. '_map' → logprob: -12.252434730529785
    10. '＿' → logprob: -12.377434730529785

Token 187: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019297054968774319
    2. '()
' → logprob: -6.501929759979248
    3. '<|end|>' → logprob: -8.50192928314209
    4. '(' → logprob: -9.12692928314209
    5. '()\' → logprob: -10.12692928314209
    6. '
' → logprob: -11.00192928314209
    7. '();' → logprob: -11.62692928314209
    8. '()

' → logprob: -11.62692928314209
    9. '()<' → logprob: -11.87692928314209
    10. '()[' → logprob: -11.87692928314209

Token 188: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012974964920431376
    2. '((' → logprob: -7.501297473907471
    3. '染' → logprob: -8.001297950744629
    4. '('' → logprob: -8.501297950744629
    5. '()' → logprob: -9.626297950744629
    6. '("' → logprob: -10.126297950744629
    7. '(
' → logprob: -10.376297950744629
    8. '(f' → logprob: -10.501297950744629
    9. '(´' → logprob: -12.001297950744629
    10. ' (' → logprob: -12.001297950744629

Token 190: '染' (ID: 58161)
  Prédit: '染'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '染' → logprob: -0.000464631273644045
    2. 'f' → logprob: -8.50046443939209
    3. '�' → logprob: -9.50046443939209
    4. ' \xe6\x9f' → logprob: -10.37546443939209
    5. '\xe6\x9f' → logprob: -10.62546443939209
    6. '```' → logprob: -10.87546443939209
    7. '��' → logprob: -11.00046443939209
    8. 'sum' → logprob: -11.50046443939209
    9. 'len' → logprob: -11.50046443939209
    10. ''' → logprob: -11.75046443939209

Token 191: '料' (ID: 9268)
  Prédit: '料'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '料' → logprob: -0.00094933359650895
    2. '染' → logprob: -7.000949382781982
    3. '료' → logprob: -10.500948905944824
    4. '液' → logprob: -12.375948905944824
    5. '量' → logprob: -13.125948905944824
    6. ' dye' → logprob: -13.500948905944824
    7. '```' → logprob: -15.000948905944824
    8. '�' → logprob: -15.000948905944824
    9. ')' → logprob: -15.250948905944824
    10. '色' → logprob: -15.375948905944824

Token 192: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007962193340063095
    2. ')' → logprob: -5.507962226867676
    3. ' ,' → logprob: -5.882962226867676
    4. '+' → logprob: -7.257962226867676
    5. ' +' → logprob: -9.007962226867676
    6. '*' → logprob: -9.257962226867676
    7. ' ' → logprob: -10.132962226867676
    8. '，' → logprob: -10.257962226867676
    9. ' *' → logprob: -10.757962226867676
    10. '-' → logprob: -10.882962226867676

Token 193: ' �' (ID: 133945)
  Prédit: '��'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '��' → logprob: -0.024268049746751785
    2. ' ��' → logprob: -4.89926815032959
    3. '分' → logprob: -5.14926815032959
    4. '染' → logprob: -5.64926815032959
    5. '�' → logprob: -5.77426815032959
    6. '���' → logprob: -6.52426815032959
    7. '2' → logprob: -6.64926815032959
    8. ' ' → logprob: -8.89926815032959
    9. '②' → logprob: -9.02426815032959
    10. '����' → logprob: -9.08676815032959

Token 194: '�' (ID: 244)
  Prédit: '��'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '��' → logprob: -0.7510126233100891
    2. '�' → logprob: -0.8760126233100891
    3. '分' → logprob: -2.8760125637054443
    4. '2' → logprob: -3.5010125637054443
    5. '染' → logprob: -4.001012802124023
    6. '₂' → logprob: -7.001012802124023
    7. '���' → logprob: -7.126012802124023
    8. '②' → logprob: -8.438512802124023
    9. '２' → logprob: -8.501012802124023
    10. '```' → logprob: -8.501012802124023

Token 195: '分' (ID: 2957)
  Prédit: '分'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '分' → logprob: -8.721228368813172e-05
    2. '染' → logprob: -9.875086784362793
    3. '분' → logprob: -10.875086784362793
    4. '�' → logprob: -11.375086784362793
    5. '��' → logprob: -13.500086784362793
    6. ' 分' → logprob: -13.750086784362793
    7. '2' → logprob: -14.000086784362793
    8. '_' → logprob: -14.625086784362793
    9. '���' → logprob: -15.500086784362793
    10. '#' → logprob: -15.625086784362793

Token 196: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -13.125005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '）' → logprob: -14.750005722045898
    5. '*' → logprob: -14.875005722045898
    6. '')' → logprob: -15.750005722045898
    7. '**' → logprob: -15.750005722045898
    8. '```' → logprob: -15.875005722045898
    9. '`)' → logprob: -16.1250057220459
    10. '))' → logprob: -16.2500057220459

Token 197: ' �' (ID: 87594)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013933241367340088
    2. '染' → logprob: -5.388933181762695
    3. '(' → logprob: -5.763933181762695
    4. ' ' → logprob: -6.263933181762695
    5. 'abs' → logprob: -6.513933181762695
    6. 'min' → logprob: -6.763933181762695
    7. 'max' → logprob: -8.451433181762695
    8. '2' → logprob: -8.513933181762695
    9. ' \xe6\x9f' → logprob: -8.701433181762695
    10. ' (' → logprob: -9.138933181762695

Token 198: '�' (ID: 241)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23177854716777802
    2. '染' → logprob: -2.106778621673584
    3. '��' → logprob: -3.481778621673584
    4. '分' → logprob: -3.606778621673584
    5. '�' → logprob: -3.731778621673584
    6. '2' → logprob: -6.981778621673584
    7. '���' → logprob: -7.731778621673584
    8. '```' → logprob: -8.106778144836426
    9. '_' → logprob: -9.044278144836426
    10. '１' → logprob: -9.294278144836426

Token 199: '料' (ID: 9268)
  Prédit: '分'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '分' → logprob: -0.0006822916911914945
    2. '분' → logprob: -8.00068187713623
    3. '染' → logprob: -8.12568187713623
    4. '1' → logprob: -10.37568187713623
    5. '�' → logprob: -12.62568187713623
    6. ' 分' → logprob: -12.87568187713623
    7. '```' → logprob: -13.25068187713623
    8. '2' → logprob: -13.25068187713623
    9. '��' → logprob: -13.50068187713623
    10. '���' → logprob: -13.75068187713623

Token 200: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025097858160734177
    2. ' )' → logprob: -6.752509593963623
    3. '*' → logprob: -7.502509593963623
    4. '）' → logprob: -8.377510070800781
    5. ' ' → logprob: -8.627510070800781
    6. '[' → logprob: -9.502510070800781
    7. '%' → logprob: -10.002510070800781
    8. '染' → logprob: -10.502510070800781
    9. '1' → logprob: -10.752510070800781
    10. '*)' → logprob: -10.877510070800781

Token 201: ' �' (ID: 133945)
  Prédit: '��'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '��' → logprob: -0.3603239059448242
    2. '分' → logprob: -1.3603239059448242
    3. '�' → logprob: -3.235323905944824
    4. '染' → logprob: -5.610323905944824
    5. '���' → logprob: -7.110323905944824
    6. '```' → logprob: -7.860323905944824
    7. 'Sys' → logprob: -8.485323905944824
    8. '����' → logprob: -8.735323905944824
    9. ' 分' → logprob: -8.735323905944824
    10. '1' → logprob: -9.110323905944824

Token 202: '�' (ID: 244)
  Prédit: '分'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '分' → logprob: -0.05774518474936485
    2. '��' → logprob: -3.3077452182769775
    3. '�' → logprob: -4.307744979858398
    4. '染' → logprob: -5.807744979858398
    5. '분' → logprob: -6.432744979858398
    6. '���' → logprob: -8.557744979858398
    7. ' 分' → logprob: -8.807744979858398
    8. '_' → logprob: -9.057744979858398
    9. '粉' → logprob: -9.057744979858398
    10. '```' → logprob: -9.932744979858398

Token 203: '分' (ID: 2957)
  Prédit: '分'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '分' → logprob: -0.000305310997646302
    2. '染' → logprob: -9.00030517578125
    3. '분' → logprob: -9.12530517578125
    4. '_' → logprob: -10.75030517578125
    5. '�' → logprob: -10.87530517578125
    6. '��' → logprob: -11.50030517578125
    7. ' 分' → logprob: -12.12530517578125
    8. '```' → logprob: -13.62530517578125
    9. '1' → logprob: -13.81280517578125
    10. '���' → logprob: -13.87530517578125

Token 204: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002622624160721898
    2. ' )' → logprob: -6.002622604370117
    3. '）' → logprob: -10.252622604370117
    4. '*' → logprob: -10.377622604370117
    5. ' ' → logprob: -11.127622604370117
    6. '```' → logprob: -11.502622604370117
    7. '+' → logprob: -11.752622604370117
    8. ')
' → logprob: -11.877622604370117
    9. ' ' → logprob: -11.877622604370117
    10. ' +' → logprob: -12.002622604370117

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005834150360897183
    2. ' ' → logprob: -7.625583648681641
    3. '2' → logprob: -10.12558364868164
    4. '0' → logprob: -11.50058364868164
    5. '```' → logprob: -11.93808364868164
    6. '１' → logprob: -12.31308364868164
    7. 'MOD' → logprob: -12.31308364868164
    8. '染' → logprob: -12.43808364868164
    9. '' → logprob: -12.68808364868164
    10. ')' → logprob: -13.25058364868164

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -11.25002670288086
    3. '１' → logprob: -12.62502670288086
    4. '0' → logprob: -13.50002670288086
    5. 'MOD' → logprob: -13.50002670288086
    6. '2' → logprob: -13.62502670288086
    7. '```' → logprob: -14.00002670288086
    8. '' → logprob: -14.06252670288086
    9. '﻿' → logprob: -14.12502670288086
    10. '染' → logprob: -14.81252670288086

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.133198283147067e-05
    2. ' )' → logprob: -10.375051498413086
    3. '）' → logprob: -11.875051498413086
    4. ')
' → logprob: -12.375051498413086
    5. '```' → logprob: -13.125051498413086
    6. '(' → logprob: -13.500051498413086
    7. '*' → logprob: -13.625051498413086
    8. '')' → logprob: -14.125051498413086
    9. '`)' → logprob: -14.500051498413086
    10. ')`' → logprob: -14.875051498413086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 37.07%
Précision adaptée (1ère position): 37.07%
Précision (top 10): 73.17%
================================================================================
