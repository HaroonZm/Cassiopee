================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_maximum_operation():
    """
    Lit deux entiers depuis l'entrée standard, calcule la somme, la différence et le produit de ces deux entiers,
    puis affiche la valeur maximale parmi ces trois résultats.

    Entrée :
        Deux entiers séparés par un espace (exemple : "3 5")

    Sortie :
        Un entier, qui est le maximum des valeurs A+B, A-B, A*B
    """

    # Lire une ligne depuis l'entrée standard, la séparer en deux éléments,
    # puis convertir chaque élément en entier A et B
    A, B = map(int, input().split())
    
    # Calculer la somme de A et B
    sum_ab = A + B
    # Calculer la différence de A et B
    diff_ab = A - B
    # Calculer le produit de A et B
    prod_ab = A * B

    # Trouver la valeur maximale parmi la somme, la différence et le produit
    result = max(sum_ab, diff_ab, prod_ab)

    # Afficher la valeur maximale
    print(result)

# Appeler la fonction principale pour exécuter le programme
calculate_maximum_operation()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_max' (ID: 13731)
  → Token d'amorce (pas de prédiction)

Token 3: 'imum' (ID: 4556)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005158595158718526
    2. '```' → logprob: -9.375515937805176
    3. '_value' → logprob: -9.500515937805176
    4. '(_' → logprob: -9.625515937805176
    5. 'imum' → logprob: -9.750515937805176
    6. '_length' → logprob: -10.250515937805176
    7. ' _' → logprob: -10.375515937805176
    8. '_return' → logprob: -10.500515937805176
    9. '_max' → logprob: -11.000515937805176
    10. '(' → logprob: -11.625515937805176

Token 4: '_operation' (ID: 77985)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010805641068145633
    2. '```' → logprob: -7.376080513000488
    3. '(_' → logprob: -9.126080513000488
    4. '(' → logprob: -9.501080513000488
    5. '_space' → logprob: -10.251080513000488
    6. '_price' → logprob: -10.876080513000488
    7. '_s' → logprob: -11.126080513000488
    8. '_max' → logprob: -11.376080513000488
    9. '_value' → logprob: -11.376080513000488
    10. '(_)' → logprob: -11.501080513000488

Token 5: '():
' (ID: 8595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.434100478887558
    2. '_' → logprob: -1.8091005086898804
    3. '(' → logprob: -2.309100389480591
    4. '(s' → logprob: -2.684100389480591
    5. '_s' → logprob: -4.43410062789917
    6. '```' → logprob: -5.55910062789917
    7. '_space' → logprob: -6.55910062789917
    8. '(_' → logprob: -7.05910062789917
    9. '(_:' → logprob: -7.68410062789917
    10. '_:' → logprob: -8.184100151062012

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3771032094955444
    2. '\' → logprob: -1.3771032094955444
    3. '   ' → logprob: -1.6271032094955444
    4. '\n' → logprob: -2.127103328704834
    5. '```' → logprob: -2.752103328704834
    6. '(' → logprob: -3.377103328704834
    7. ''' → logprob: -4.252103328704834
    8. '    
' → logprob: -4.502103328704834
    9. '():' → logprob: -4.627103328704834
    10. '(
' → logprob: -4.877103328704834

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6191103458404541
    2. 'max' → logprob: -1.869110345840454
    3. 'r' → logprob: -2.494110345840454
    4. 'return' → logprob: -2.744110345840454
    5. ' ' → logprob: -3.619110345840454
    6. '_' → logprob: -3.744110345840454
    7. 'm' → logprob: -4.369110107421875
    8. 'x' → logprob: -4.494110107421875
    9. ' max' → logprob: -4.494110107421875
    10. 'result' → logprob: -4.619110107421875

Token 8: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.1691275835037231
    2. ' ' → logprob: -1.2941275835037231
    3. ' """' → logprob: -1.6691275835037231
    4. ' Calculate' → logprob: -2.0441274642944336
    5. 'Calculate' → logprob: -3.5441274642944336
    6. ' Calculates' → logprob: -4.544127464294434
    7. ''''' → logprob: -4.794127464294434
    8. ' Find' → logprob: -4.794127464294434
    9. '   ' → logprob: -4.919127464294434
    10. ' Maximum' → logprob: -5.294127464294434

Token 9: ' Lit' (ID: 45595)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.5140557289123535
    2. '"""' → logprob: -2.3890557289123535
    3. 'Calcul' → logprob: -2.5140557289123535
    4. 'Find' → logprob: -2.5140557289123535
    5. 'Returns' → logprob: -2.7640557289123535
    6. 'Return' → logprob: -3.8890557289123535
    7. 'Maximum' → logprob: -4.3890557289123535
    8. '   ' → logprob: -4.7640557289123535
    9. 'R' → logprob: -5.2640557289123535
    10. 'r' → logprob: -5.3890557289123535

Token 10: ' deux' (ID: 10301)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09196114540100098
    2. '   ' → logprob: -3.341961145401001
    3. 'eral' → logprob: -3.716961145401001
    4. 'ral' → logprob: -4.716960906982422
    5. 'e' → logprob: -4.841960906982422
    6. 'def' → logprob: -5.341960906982422
    7. 'her' → logprob: -7.341960906982422
    8. 'ernal' → logprob: -7.341960906982422
    9. '```' → logprob: -7.591960906982422
    10. 'tle' → logprob: -7.716960906982422

Token 11: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6921778321266174
    2. ' nombres' → logprob: -1.4421777725219727
    3. ' espaces' → logprob: -1.6921777725219727
    4. ' lignes' → logprob: -4.192177772521973
    5. ' ent' → logprob: -4.442177772521973
    6. '\' → logprob: -5.067177772521973
    7. ' caractères' → logprob: -5.067177772521973
    8. ' arguments' → logprob: -5.317177772521973
    9. 'ent' → logprob: -6.067177772521973
    10. '   ' → logprob: -6.067177772521973

Token 12: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.26786482334136963
    2. 'r' → logprob: -2.39286470413208
    3. 'ières' → logprob: -2.64286470413208
    4. 'er' → logprob: -3.76786470413208
    5. 'êtes' → logprob: -4.14286470413208
    6. 'ier' → logprob: -4.26786470413208
    7. 'e' → logprob: -5.76786470413208
    8. 'i' → logprob: -6.14286470413208
    9. 'é' → logprob: -6.14286470413208
    10. 'rée' → logprob: -6.39286470413208

Token 13: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6333589553833008
    2. 's' → logprob: -1.7583589553833008
    3. '   ' → logprob: -1.8833589553833008
    4. ' à' → logprob: -3.883358955383301
    5. ' de' → logprob: -3.883358955383301
    6. ' et' → logprob: -4.008358955383301
    7. '\n' → logprob: -4.258358955383301
    8. ' en' → logprob: -4.633358955383301
    9. ' (' → logprob: -5.008358955383301
    10. '\' → logprob: -5.008358955383301

Token 14: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5104971528053284
    2. ' l' → logprob: -1.1354970932006836
    3. ' input' → logprob: -2.7604970932006836
    4. 'input' → logprob: -4.385497093200684
    5. ' stdin' → logprob: -7.135497093200684
    6. 'le' → logprob: -7.885497093200684
    7. ' la' → logprob: -8.010497093200684
    8. 'la' → logprob: -8.385497093200684
    9. '   ' → logprob: -8.885497093200684
    10. 'stdin' → logprob: -9.010497093200684

Token 15: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04678191989660263
    2. 'a' → logprob: -3.4217820167541504
    3. 'entrée' → logprob: -4.79678201675415
    4. 'e' → logprob: -5.92178201675415
    5. ''' → logprob: -7.17178201675415
    6. 'input' → logprob: -7.29678201675415
    7. 'es' → logprob: -8.171781539916992
    8. ''utilisateur' → logprob: -9.296781539916992
    9. '’entrée' → logprob: -9.796781539916992
    10. ''ent' → logprob: -9.796781539916992

Token 16: ' standard' (ID: 7024)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5735100507736206
    2. ' ' → logprob: -1.3235100507736206
    3. '   ' → logprob: -2.19851016998291
    4. '\' → logprob: -3.94851016998291
    5. '  
' → logprob: -4.57351016998291
    6. 's' → logprob: -5.19851016998291
    7. '`' → logprob: -5.69851016998291
    8. ' \' → logprob: -6.19851016998291
    9. ',' → logprob: -6.32351016998291
    10. ')' → logprob: -6.32351016998291

Token 17: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10808315873146057
    2. '   ' → logprob: -2.7330832481384277
    3. '    
' → logprob: -3.9830832481384277
    4. '  
' → logprob: -5.233083248138428
    5. '
' → logprob: -6.108083248138428
    6. ' 
' → logprob: -6.108083248138428
    7. '    ' → logprob: -6.483083248138428
    8. '\' → logprob: -6.483083248138428
    9. ' ' → logprob: -6.733083248138428
    10. '   
' → logprob: -7.108083248138428

Token 18: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20371189713478088
    2. '    ' → logprob: -2.828711986541748
    3. ' ' → logprob: -2.953711986541748
    4. ' et' → logprob: -4.078711986541748
    5. ' ' → logprob: -4.328711986541748
    6. ' and' → logprob: -5.078711986541748
    7. ' return' → logprob: -5.328711986541748
    8. '\n' → logprob: -5.453711986541748
    9. '    
' → logprob: -5.953711986541748
    10. '  ' → logprob: -5.953711986541748

Token 19: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00030507624614983797
    2. 'ulé' → logprob: -8.75030517578125
    3. 'ul' → logprob: -9.50030517578125
    4. 'cule' → logprob: -10.75030517578125
    5. '```' → logprob: -11.25030517578125
    6. '   ' → logprob: -11.50030517578125
    7. '#' → logprob: -12.37530517578125
    8. 'u' → logprob: -12.87530517578125
    9. 'uler' → logprob: -12.87530517578125
    10. ' ule' → logprob: -13.25030517578125

Token 20: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.068304181098938
    2. 's' → logprob: -1.193304181098938
    3. ' l' → logprob: -2.0683040618896484
    4. ' le' → logprob: -2.3183040618896484
    5. '   ' → logprob: -3.5683040618896484
    6. ' ' → logprob: -3.5683040618896484
    7. ' et' → logprob: -3.9433040618896484
    8. '_' → logprob: -4.693304061889648
    9. 'e' → logprob: -4.693304061889648
    10. ',' → logprob: -5.193304061889648

Token 21: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0934050902724266
    2. ' maximum' → logprob: -2.84340500831604
    3. ' maximale' → logprob: -4.343405246734619
    4. ' somme' → logprob: -5.218405246734619
    5. '   ' → logprob: -5.843405246734619
    6. ' valeur' → logprob: -6.343405246734619
    7. ' espace' → logprob: -6.593405246734619
    8. '  ' → logprob: -6.968405246734619
    9. ' résultat' → logprob: -6.968405246734619
    10. ' nombre' → logprob: -7.468405246734619

Token 22: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35609301924705505
    2. ' ' → logprob: -1.9810930490493774
    3. ',' → logprob: -2.981092929840088
    4. '    ' → logprob: -3.606092929840088
    5. ' et' → logprob: -3.606092929840088
    6. '    
' → logprob: -3.981092929840088
    7. ' ,' → logprob: -4.606092929840088
    8. ' des' → logprob: -5.106092929840088
    9. ' 
' → logprob: -5.856092929840088
    10. '     
' → logprob: -5.856092929840088

Token 23: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4889207184314728
    2. ' puis' → logprob: -1.2389206886291504
    3. ' et' → logprob: -2.7389206886291504
    4. ' ou' → logprob: -4.73892068862915
    5. ' ' → logprob: -5.61392068862915
    6. '   ' → logprob: -5.98892068862915
    7. ',' → logprob: -5.98892068862915
    8. 'diff' → logprob: -6.23892068862915
    9. 'et' → logprob: -6.61392068862915
    10. ' sou' → logprob: -6.61392068862915

Token 24: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.2688828110694885
    2. 's' → logprob: -2.6438827514648438
    3. 'diff' → logprob: -2.7688827514648438
    4. ' difference' → logprob: -3.6438827514648438
    5. 'difference' → logprob: -3.8938827514648438
    6. 'sou' → logprob: -4.393882751464844
    7. ' sou' → logprob: -4.768882751464844
    8. ' somme' → logprob: -5.143882751464844
    9. ' ' → logprob: -5.393882751464844
    10. ' moyenne' → logprob: -5.518882751464844

Token 25: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07450634241104126
    2. 's' → logprob: -3.4495062828063965
    3. ' ,' → logprob: -4.8245062828063965
    4. '`' → logprob: -5.1995062828063965
    5. ' ' → logprob: -5.3245062828063965
    6. '   ' → logprob: -5.4495062828063965
    7. '```' → logprob: -5.9495062828063965
    8. '\n' → logprob: -6.1995062828063965
    9. ' \' → logprob: -6.3245062828063965
    10. '\' → logprob: -6.3245062828063965

Token 26: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6154886484146118
    2. ' le' → logprob: -0.9904886484146118
    3. 'le' → logprob: -2.7404885292053223
    4. ' produit' → logprob: -4.615488529205322
    5. '   ' → logprob: -4.990488529205322
    6. 'l' → logprob: -6.865488529205322
    7. 'la' → logprob: -6.990488529205322
    8. 'product' → logprob: -7.115488529205322
    9. ' l' → logprob: -7.740488529205322
    10. ' ' → logprob: -7.740488529205322

Token 27: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.000700641714502126
    2. 'produ' → logprob: -8.000700950622559
    3. ' maximum' → logprob: -8.250700950622559
    4. ' product' → logprob: -10.125700950622559
    5. ' produits' → logprob: -11.625700950622559
    6. ' produ' → logprob: -12.000700950622559
    7. ' max' → logprob: -12.000700950622559
    8. ' multip' → logprob: -12.375700950622559
    9. ' multiplication' → logprob: -12.500700950622559
    10. ' maximale' → logprob: -12.500700950622559

Token 28: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024452801793813705
    2. '\n' → logprob: -4.7744526863098145
    3. ',' → logprob: -5.1494526863098145
    4. ' et' → logprob: -6.0244526863098145
    5. '    
' → logprob: -6.1494526863098145
    6. ' des' → logprob: -6.8994526863098145
    7. '\' → logprob: -6.8994526863098145
    8. ' entre' → logprob: -7.2744526863098145
    9. ' ' → logprob: -7.3994526863098145
    10. ' de' → logprob: -8.149453163146973

Token 29: ' ces' (ID: 10532)
  Prédit: ' ces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.31470435857772827
    2. 'ces' → logprob: -1.314704418182373
    3. 'de' → logprob: -6.689704418182373
    4. 'les' → logprob: -9.564703941345215
    5. ' deux' → logprob: -10.564703941345215
    6. ' these' → logprob: -10.814703941345215
    7. ' ' → logprob: -11.189703941345215
    8. ' les' → logprob: -11.189703941345215
    9. 'l' → logprob: -11.564703941345215
    10. ' ceux' → logprob: -11.689703941345215

Token 30: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9547426700592041
    2. '_' → logprob: -1.454742670059204
    3. ' ' → logprob: -1.454742670059204
    4. 'de' → logprob: -2.079742670059204
    5. ' _' → logprob: -4.454742431640625
    6. ' two' → logprob: -5.579742431640625
    7. '_de' → logprob: -6.329742431640625
    8. '  ' → logprob: -6.329742431640625
    9. 's' → logprob: -6.829742431640625
    10. ' de' → logprob: -7.329742431640625

Token 31: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06595161557197571
    2. ' ent' → logprob: -3.6909515857696533
    3. '_' → logprob: -4.690951824188232
    4. '<|end|>' → logprob: -5.440951824188232
    5. ' nombres' → logprob: -5.815951824188232
    6. ' _' → logprob: -6.065951824188232
    7. 's' → logprob: -6.065951824188232
    8. ' )' → logprob: -6.065951824188232
    9. '  ' → logprob: -6.190951824188232
    10. ' ,' → logprob: -6.440951824188232

Token 32: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.005773669108748436
    2. 'i' → logprob: -5.880773544311523
    3. '   ' → logprob: -6.880773544311523
    4. 'ier' → logprob: -7.005773544311523
    5. 'ières' → logprob: -7.630773544311523
    6. 's' → logprob: -8.755773544311523
    7. 'ière' → logprob: -9.255773544311523
    8. '```' → logprob: -9.630773544311523
    9. 'e' → logprob: -10.130773544311523
    10. 'ié' → logprob: -10.505773544311523

Token 33: ',
' (ID: 412)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1970055103302002
    2. '   ' → logprob: -2.1970055103302
    3. '
' → logprob: -3.5720055103302
    4. '\' → logprob: -4.447005271911621
    5. '    
' → logprob: -4.697005271911621
    6. ' 
' → logprob: -4.947005271911621
    7. '  
' → logprob: -5.572005271911621
    8. ',' → logprob: -5.947005271911621
    9. ' ' → logprob: -6.572005271911621
    10. '   
' → logprob: -6.947005271911621

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041566673666238785
    2. ' et' → logprob: -3.5415666103363037
    3. ' puis' → logprob: -5.166566848754883
    4. '    ' → logprob: -5.541566848754883
    5. 'et' → logprob: -7.291566848754883
    6. ',' → logprob: -7.791566848754883
    7. ' ' → logprob: -8.666566848754883
    8. '    
' → logprob: -8.916566848754883
    9. ' retourne' → logprob: -9.041566848754883
    10. '  ' → logprob: -9.291566848754883

Token 35: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13280606269836426
    2. ' et' → logprob: -2.2578060626983643
    3. 'et' → logprob: -5.007805824279785
    4. '\n' → logprob: -5.507805824279785
    5. ' puis' → logprob: -5.507805824279785
    6. '    ' → logprob: -6.507805824279785
    7. '\' → logprob: -7.132805824279785
    8. ',' → logprob: -7.507805824279785
    9. ' ' → logprob: -7.757805824279785
    10. ' and' → logprob: -8.007805824279785

Token 36: ' affiche' (ID: 127479)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.838554322719574
    2. ' retourne' → logprob: -0.838554322719574
    3. ' affiche' → logprob: -2.2135543823242188
    4. ' ren' → logprob: -4.963554382324219
    5. 'aff' → logprob: -5.338554382324219
    6. ' return' → logprob: -5.713554382324219
    7. ' imprime' → logprob: -5.838554382324219
    8. 'ret' → logprob: -6.213554382324219
    9. 'les' → logprob: -6.463554382324219
    10. '   ' → logprob: -6.963554382324219

Token 37: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5340240597724915
    2. ' le' → logprob: -1.7840240001678467
    3. ' la' → logprob: -2.7840240001678467
    4. ' les' → logprob: -2.7840240001678467
    5. ' l' → logprob: -3.5340240001678467
    6. ' ' → logprob: -3.7840240001678467
    7. ' leur' → logprob: -3.9090240001678467
    8. ' leurs' → logprob: -3.9090240001678467
    9. 's' → logprob: -5.034024238586426
    10. 'leur' → logprob: -5.034024238586426

Token 38: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28082039952278137
    2. ' valeur' → logprob: -2.030820369720459
    3. 's' → logprob: -3.155820369720459
    4. ' plus' → logprob: -3.405820369720459
    5. ' meilleure' → logprob: -4.530820369720459
    6. ' meilleur' → logprob: -5.280820369720459
    7. ' somme' → logprob: -5.405820369720459
    8. ' espace' → logprob: -5.530820369720459
    9. ' maximale' → logprob: -6.155820369720459
    10. ' space' → logprob: -6.530820369720459

Token 39: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.08568039536476135
    2. ' maximum' → logprob: -3.4606804847717285
    3. ' max' → logprob: -3.5856804847717285
    4. ' maximal' → logprob: -3.9606804847717285
    5. 'max' → logprob: -6.4606804847717285
    6. ' maxim' → logprob: -7.3356804847717285
    7. ' ' → logprob: -7.7106804847717285
    8. 'maximum' → logprob: -8.08568000793457
    9. '   ' → logprob: -8.21068000793457
    10. ' la' → logprob: -9.33568000793457

Token 40: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6078998446464539
    2. '\n' → logprob: -1.8578999042510986
    3. '\' → logprob: -1.9828999042510986
    4. '
' → logprob: -2.4828999042510986
    5. '    
' → logprob: -3.2328999042510986
    6. ' 
' → logprob: -4.7328996658325195
    7. '"""
' → logprob: -5.3578996658325195
    8. '  
' → logprob: -5.3578996658325195
    9. ' ' → logprob: -5.6078996658325195
    10. '"' → logprob: -6.1078996658325195

Token 41: ' ces' (ID: 10532)
  Prédit: ' ces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.26786819100379944
    2. 'ces' → logprob: -1.767868161201477
    3. ' les' → logprob: -3.2678682804107666
    4. ' eux' → logprob: -4.5178680419921875
    5. 'les' → logprob: -4.8928680419921875
    6. 'eux' → logprob: -5.6428680419921875
    7. ' la' → logprob: -6.3928680419921875
    8. ' these' → logprob: -7.3928680419921875
    9. 'la' → logprob: -7.5178680419921875
    10. ' ' → logprob: -7.7678680419921875

Token 42: ' trois' (ID: 25564)
  Prédit: ' trois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.6166717410087585
    2. ' ' → logprob: -1.3666718006134033
    3. 'tro' → logprob: -2.1166718006134033
    4. ' opérations' → logprob: -3.3666718006134033
    5. ' operations' → logprob: -4.491671562194824
    6. ' quatre' → logprob: -4.991671562194824
    7. '3' → logprob: -4.991671562194824
    8. 'operations' → logprob: -5.366671562194824
    9. ' valeurs' → logprob: -5.491671562194824
    10. 'qu' → logprob: -5.741671562194824

Token 43: ' résultats' (ID: 48985)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.362007200717926
    2. '\n' → logprob: -1.7370071411132812
    3. '    
' → logprob: -3.8620071411132812
    4. ' 
' → logprob: -4.112007141113281
    5. '   ' → logprob: -4.112007141113281
    6. '  
' → logprob: -4.112007141113281
    7. '"""
' → logprob: -4.237007141113281
    8. '   
' → logprob: -4.487007141113281
    9. ' opérations' → logprob: -4.987007141113281
    10. '_' → logprob: -5.237007141113281

Token 44: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6708621978759766
    2. '\n' → logprob: -1.0458621978759766
    3. '\' → logprob: -2.6708621978759766
    4. '
' → logprob: -3.5458621978759766
    5. '    
' → logprob: -3.6708621978759766
    6. '```' → logprob: -4.920862197875977
    7. '  
' → logprob: -6.045862197875977
    8. '   
' → logprob: -6.795862197875977
    9. '"""
' → logprob: -7.545862197875977
    10. '"\' → logprob: -7.545862197875977

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05058837682008743
    2. '"""' → logprob: -3.050588369369507
    3. '```' → logprob: -6.425588607788086
    4. '"""
' → logprob: -8.675588607788086
    5. '""' → logprob: -9.550588607788086
    6. ' """' → logprob: -9.800588607788086
    7. '
' → logprob: -10.800588607788086
    8. '    ' → logprob: -11.175588607788086
    9. '"' → logprob: -11.175588607788086
    10. ' ' → logprob: -11.800588607788086

Token 46: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004901412408798933
    2. '"""' → logprob: -6.12990140914917
    3. '```' → logprob: -6.62990140914917
    4. '    
' → logprob: -7.87990140914917
    5. 'def' → logprob: -8.129901885986328
    6. '
' → logprob: -8.504901885986328
    7. '\n' → logprob: -8.879901885986328
    8. '    ' → logprob: -9.254901885986328
    9. '"""
' → logprob: -9.504901885986328
    10. ' 
' → logprob: -10.504901885986328

Token 47: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.061848681420087814
    2. 'rée' → logprob: -3.1868486404418945
    3. 'ées' → logprob: -4.1868486404418945
    4. 'r' → logprob: -6.5618486404418945
    5. 'é' → logprob: -7.1868486404418945
    6. 'iers' → logprob: -7.8118486404418945
    7. 'és' → logprob: -8.061848640441895
    8. '   ' → logprob: -8.311848640441895
    9. '```' → logprob: -8.936848640441895
    10. 'ré' → logprob: -8.936848640441895

Token 48: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4030943810939789
    2. 's' → logprob: -1.7780944108963013
    3. ' :' → logprob: -3.1530942916870117
    4. '```' → logprob: -3.1530942916870117
    5. '(s' → logprob: -4.153094291687012
    6. ')' → logprob: -4.278094291687012
    7. ':' → logprob: -4.903094291687012
    8. '_' → logprob: -5.278094291687012
    9. '):' → logprob: -5.528094291687012
    10. ' ' → logprob: -5.528094291687012

Token 49: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6585405468940735
    2. '   ' → logprob: -1.6585404872894287
    3. ' ' → logprob: -2.2835404872894287
    4. 'n' → logprob: -2.4085404872894287
    5. 's' → logprob: -3.9085404872894287
    6. ' )' → logprob: -4.283540725708008
    7. '```' → logprob: -4.283540725708008
    8. '     
' → logprob: -5.158540725708008
    9. ' ```' → logprob: -5.283540725708008
    10. ' n' → logprob: -5.408540725708008

Token 50: ' Deux' (ID: 92086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3941640853881836
    2. 'a' → logprob: -2.3941640853881836
    3. 'int' → logprob: -2.6441640853881836
    4. 'n' → logprob: -2.8941640853881836
    5. 'ent' → logprob: -3.1441640853881836
    6. ' two' → logprob: -3.8941640853881836
    7. ' int' → logprob: -5.269164085388184
    8. ' deux' → logprob: -5.519164085388184
    9. 'l' → logprob: -5.644164085388184
    10. 'two' → logprob: -5.769164085388184

Token 51: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.003374599851667881
    2. ' integers' → logprob: -6.1283745765686035
    3. ' ' → logprob: -7.7533745765686035
    4. ' int' → logprob: -8.253375053405762
    5. 'ent' → logprob: -8.628375053405762
    6. ' entier' → logprob: -9.003375053405762
    7. ' nombres' → logprob: -9.253375053405762
    8. ' espaces' → logprob: -10.128375053405762
    9. ' enti' → logprob: -10.753375053405762
    10. 's' → logprob: -12.003375053405762

Token 52: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0031535925809293985
    2. 'i' → logprob: -6.1281538009643555
    3. 'ier' → logprob: -7.2531538009643555
    4. 'ières' → logprob: -9.003153800964355
    5. '   ' → logprob: -9.878153800964355
    6. ' i' → logprob: -10.128153800964355
    7. '```' → logprob: -11.003153800964355
    8. 'ière' → logprob: -11.878153800964355
    9. 's' → logprob: -12.253153800964355
    10. ' ' → logprob: -12.753153800964355

Token 53: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4560895264148712
    2. '\n' → logprob: -1.9560894966125488
    3. '\' → logprob: -2.581089496612549
    4. ',' → logprob: -2.956089496612549
    5. 's' → logprob: -3.456089496612549
    6. ' ' → logprob: -3.831089496612549
    7. ')' → logprob: -4.956089496612549
    8. ' ,' → logprob: -5.081089496612549
    9. ' \' → logprob: -5.456089496612549
    10. '    ' → logprob: -5.581089496612549

Token 54: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0012592797866091132
    2. 'é' → logprob: -6.7512593269348145
    3. 'es' → logprob: -9.626258850097656
    4. 's' → logprob: -11.751258850097656
    5. 'ès' → logprob: -12.126258850097656
    6. 'par' → logprob: -12.626258850097656
    7. 'ÉS' → logprob: -13.251258850097656
    8. 'ées' → logprob: -13.376258850097656
    9. 'e' → logprob: -14.001258850097656
    10. ' par' → logprob: -14.626258850097656

Token 55: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.016111087054014206
    2. 'par' → logprob: -4.141110897064209
    3. '_par' → logprob: -11.141111373901367
    4. 'es' → logprob: -11.766111373901367
    5. ' by' → logprob: -11.766111373901367
    6. '```' → logprob: -11.766111373901367
    7. ' ' → logprob: -11.891111373901367
    8. '   ' → logprob: -11.891111373901367
    9. '(par' → logprob: -12.016111373901367
    10. 'e' → logprob: -12.391111373901367

Token 56: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.130313903093338
    2. 'un' → logprob: -2.3803138732910156
    3. ' ' → logprob: -4.130313873291016
    4. ''un' → logprob: -4.505313873291016
    5. ' espace' → logprob: -7.255313873291016
    6. ' une' → logprob: -7.755313873291016
    7. ' espaces' → logprob: -8.505313873291016
    8. 'es' → logprob: -8.630313873291016
    9. ''espace' → logprob: -8.755313873291016
    10. ' a' → logprob: -9.255313873291016

Token 57: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.3615416884422302
    2. 'es' → logprob: -1.486541748046875
    3. ''espace' → logprob: -2.736541748046875
    4. 'esp' → logprob: -4.986541748046875
    5. 'e' → logprob: -6.486541748046875
    6. 'space' → logprob: -6.736541748046875
    7. '’espace' → logprob: -6.861541748046875
    8. ''esp' → logprob: -7.361541748046875
    9. ' espaces' → logprob: -7.736541748046875
    10. ' space' → logprob: -8.486541748046875

Token 58: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2241193652153015
    2. '\' → logprob: -2.4741194248199463
    3. '\n' → logprob: -2.4741194248199463
    4. '    
' → logprob: -4.474119186401367
    5. '
' → logprob: -5.349119186401367
    6. ' 
' → logprob: -5.724119186401367
    7. '   
' → logprob: -6.099119186401367
    8. '  
' → logprob: -6.349119186401367
    9. ')' → logprob: -6.474119186401367
    10. '```' → logprob: -6.724119186401367

Token 59: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4632936120033264
    2. 'a' → logprob: -1.3382935523986816
    3. 'n' → logprob: -3.2132935523986816
    4. 'x' → logprob: -3.9632935523986816
    5. ' )' → logprob: -4.088293552398682
    6. 'ent' → logprob: -4.713293552398682
    7. '")' → logprob: -4.838293552398682
    8. 'val' → logprob: -5.338293552398682
    9. '):' → logprob: -5.963293552398682
    10. '`)' → logprob: -6.713293552398682

Token 60: 'emple' (ID: 55259)
  Prédit: 'emple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emple' → logprob: -0.030016597360372543
    2. ')' → logprob: -4.0300164222717285
    3. ':' → logprob: -5.0300164222717285
    4. 'ample' → logprob: -6.1550164222717285
    5. 'em' → logprob: -6.7800164222717285
    6. 'empl' → logprob: -7.4050164222717285
    7. 'e' → logprob: -7.7800164222717285
    8. 'p' → logprob: -8.030016899108887
    9. 'plic' → logprob: -8.780016899108887
    10. '):' → logprob: -8.780016899108887

Token 61: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3925010561943054
    2. ' )' → logprob: -1.2675011157989502
    3. ' :' → logprob: -3.76750111579895
    4. '):' → logprob: -5.142500877380371
    5. ':' → logprob: -5.267500877380371
    6. ' ):' → logprob: -6.142500877380371
    7. ' de' → logprob: -6.267500877380371
    8. '1' → logprob: -6.767500877380371
    9. ' ' → logprob: -7.017500877380371
    10. 'de' → logprob: -7.392500877380371

Token 62: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2169947624206543
    2. '"' → logprob: -1.5919947624206543
    3. '1' → logprob: -2.0919947624206543
    4. '3' → logprob: -2.3419947624206543
    5. '12' → logprob: -2.5919947624206543
    6. ' "' → logprob: -3.3419947624206543
    7. '5' → logprob: -3.3419947624206543
    8. '10' → logprob: -3.4669947624206543
    9. '2' → logprob: -3.5919947624206543
    10. ')' → logprob: -3.7169947624206543

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03591776639223099
    2. '5' → logprob: -4.28591775894165
    3. '12' → logprob: -4.41091775894165
    4. '4' → logprob: -5.28591775894165
    5. '10' → logprob: -6.53591775894165
    6. '7' → logprob: -6.53591775894165
    7. '2' → logprob: -6.91091775894165
    8. '1' → logprob: -9.285918235778809
    9. '23' → logprob: -9.285918235778809
    10. '8' → logprob: -9.410918235778809

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019167302176356316
    2. '4' → logprob: -4.519167423248291
    3. '5' → logprob: -5.269167423248291
    4. '7' → logprob: -6.144167423248291
    5. '   ' → logprob: -8.269166946411133
    6. '2' → logprob: -8.519166946411133
    7. '8' → logprob: -9.769166946411133
    8. ' +' → logprob: -9.894166946411133
    9. ' ")' → logprob: -10.019166946411133
    10. ' "' → logprob: -10.769166946411133

Token 65: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3897148370742798
    2. '5' → logprob: -1.2647148370742798
    3. '7' → logprob: -3.2647147178649902
    4. ' ' → logprob: -6.26471471786499
    5. '2' → logprob: -9.264715194702148
    6. '+' → logprob: -10.139715194702148
    7. '10' → logprob: -10.139715194702148
    8. '9' → logprob: -10.139715194702148
    9. '8' → logprob: -10.264715194702148
    10. '6' → logprob: -10.764715194702148

Token 66: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005561320576816797
    2. ')' → logprob: -7.750555992126465
    3. ')")' → logprob: -9.625555992126465
    4. '")
' → logprob: -10.375555992126465
    5. ' ")' → logprob: -11.250555992126465
    6. '"""' → logprob: -12.250555992126465
    7. ' )' → logprob: -12.875555992126465
    8. '"' → logprob: -13.125555992126465
    9. '"""
' → logprob: -13.125555992126465
    10. '").' → logprob: -14.375555992126465

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014178205281496048
    2. '```' → logprob: -5.014178276062012
    3. '"""' → logprob: -5.514178276062012
    4. '
' → logprob: -6.639178276062012
    5. '"""
' → logprob: -6.889178276062012
    6. '    
' → logprob: -7.764178276062012
    7. '\n' → logprob: -8.139178276062012
    8. '    ' → logprob: -9.764178276062012
    9. ' """
' → logprob: -10.389178276062012
    10. '   
' → logprob: -10.514178276062012

Token 68: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04539062827825546
    2. '"""' → logprob: -3.7953906059265137
    3. '"""
' → logprob: -4.670390605926514
    4. '```' → logprob: -5.420390605926514
    5. 'Returns' → logprob: -6.045390605926514
    6. 'def' → logprob: -7.045390605926514
    7. 'return' → logprob: -7.045390605926514
    8. '
' → logprob: -7.170390605926514
    9. 'Retour' → logprob: -7.420390605926514
    10. ' """
' → logprob: -7.670390605926514

Token 69: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.000948141620028764
    2. '   ' → logprob: -8.125947952270508
    3. 'ies' → logprob: -8.250947952270508
    4. 'i' → logprob: -8.375947952270508
    5. ' ie' → logprob: -10.125947952270508
    6. 'ur' → logprob: -10.500947952270508
    7. 'ée' → logprob: -11.375947952270508
    8. '```' → logprob: -11.375947952270508
    9. 'ir' → logprob: -11.750947952270508
    10. 'e' → logprob: -11.875947952270508

Token 70: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.004883857909590006
    2. ':' → logprob: -5.379883766174316
    3. '   ' → logprob: -9.129883766174316
    4. ' :
' → logprob: -9.254883766174316
    5. ' ' → logprob: -11.379883766174316
    6. 's' → logprob: -11.879883766174316
    7. '```' → logprob: -12.129883766174316
    8. '  ' → logprob: -12.254883766174316
    9. '"""' → logprob: -12.254883766174316
    10. ' :

' → logprob: -12.379883766174316

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010329077951610088
    2. '    ' → logprob: -5.135329246520996
    3. ' """' → logprob: -7.135329246520996
    4. '       ' → logprob: -7.260329246520996
    5. ' La' → logprob: -7.635329246520996
    6. ' ' → logprob: -8.135329246520996
    7. ' maximale' → logprob: -8.135329246520996
    8. ' """
' → logprob: -8.385329246520996
    9. '"' → logprob: -8.510329246520996
    10. ' "' → logprob: -8.885329246520996

Token 72: ' Un' (ID: 1367)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.9921035766601562
    2. '   ' → logprob: -1.4921035766601562
    3. 'L' → logprob: -1.9921035766601562
    4. 'La' → logprob: -2.3671035766601562
    5. 'Le' → logprob: -3.1171035766601562
    6. ' La' → logprob: -3.3671035766601562
    7. ' Le' → logprob: -3.8671035766601562
    8. ' l' → logprob: -3.9921035766601562
    9. ' int' → logprob: -3.9921035766601562
    10. 'int' → logprob: -4.492103576660156

Token 73: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020145203918218613
    2. ' entier' → logprob: -4.020145416259766
    3. ' e' → logprob: -6.895145416259766
    4. ' nombre' → logprob: -7.770145416259766
    5. '   ' → logprob: -8.395145416259766
    6. 'ent' → logprob: -8.520145416259766
    7. 'a' → logprob: -11.020145416259766
    8. 'nombre' → logprob: -11.145145416259766
    9. ' ent' → logprob: -11.145145416259766
    10. ' ' → logprob: -11.145145416259766

Token 74: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33531513810157776
    2. '    
' → logprob: -2.085315227508545
    3. '
' → logprob: -2.585315227508545
    4. '\n' → logprob: -3.335315227508545
    5. 'def' → logprob: -3.960315227508545
    6. '\' → logprob: -4.210315227508545
    7. ' 
' → logprob: -5.585315227508545
    8. '  
' → logprob: -5.585315227508545
    9. '   
' → logprob: -5.710315227508545
    10. 'n' → logprob: -7.210315227508545

Token 75: ' qui' (ID: 2780)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.5310101509094238
    2. ' maximal' → logprob: -2.531010150909424
    3. ' ' → logprob: -2.656010150909424
    4. ' max' → logprob: -2.781010150909424
    5. ' maximale' → logprob: -2.906010150909424
    6. '   ' → logprob: -3.906010150909424
    7. 'maximum' → logprob: -3.906010150909424
    8. ' la' → logprob: -4.281010150909424
    9. ' )' → logprob: -4.281010150909424
    10. 'max' → logprob: -4.406010150909424

Token 76: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.28924474120140076
    2. ' correspond' → logprob: -1.6642447710037231
    3. 'est' → logprob: -3.5392446517944336
    4. 's' → logprob: -4.664244651794434
    5. ' ' → logprob: -5.039244651794434
    6. ' sera' → logprob: -5.039244651794434
    7. '   ' → logprob: -6.164244651794434
    8. ' vaut' → logprob: -6.539244651794434
    9. ' ' → logprob: -6.789244651794434
    10. ' représente' → logprob: -6.914244651794434

Token 77: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15194278955459595
    2. ' le' → logprob: -2.776942729949951
    3. ' the' → logprob: -4.026942729949951
    4. ' l' → logprob: -4.276942729949951
    5. ' maximum' → logprob: -4.276942729949951
    6. 'la' → logprob: -4.526942729949951
    7. 'le' → logprob: -4.901942729949951
    8. ' maximal' → logprob: -4.901942729949951
    9. 'l' → logprob: -6.026942729949951
    10. ' ' → logprob: -6.526942729949951

Token 78: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.027834169566631317
    2. ' max' → logprob: -4.777833938598633
    3. ' résultat' → logprob: -5.027833938598633
    4. ' maximale' → logprob: -5.402833938598633
    5. ' maximal' → logprob: -5.902833938598633
    6. 'maximum' → logprob: -6.027833938598633
    7. 'e' → logprob: -7.027833938598633
    8. 'max' → logprob: -7.152833938598633
    9. 'a' → logprob: -7.902833938598633
    10. ' resultat' → logprob: -8.652833938598633

Token 79: ' des' (ID: 731)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7315744757652283
    2. '   ' → logprob: -1.481574535369873
    3. '\' → logprob: -2.356574535369873
    4. ' 
' → logprob: -2.606574535369873
    5. 'def' → logprob: -3.606574535369873
    6. '\n' → logprob: -3.981574535369873
    7. ' des' → logprob: -4.731574535369873
    8. '  
' → logprob: -4.856574535369873
    9. '   
' → logprob: -5.231574535369873
    10. ' 

' → logprob: -5.481574535369873

Token 80: ' valeurs' (ID: 73668)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.27624571323394775
    2. ' résultats' → logprob: -2.401245594024658
    3. ' [' → logprob: -2.651245594024658
    4. '[' → logprob: -3.901245594024658
    5. 's' → logprob: -4.151245594024658
    6. ' ' → logprob: -4.776245594024658
    7. ' somme' → logprob: -5.026245594024658
    8. ' résultat' → logprob: -5.276245594024658
    9. ' la' → logprob: -5.651245594024658
    10. 'tro' → logprob: -5.901245594024658

Token 81: ' A' (ID: 355)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.9405925273895264
    2. '   ' → logprob: -2.0655925273895264
    3. ' possible' → logprob: -2.0655925273895264
    4. ' ' → logprob: -2.4405925273895264
    5. ' des' → logprob: -2.5655925273895264
    6. 'calcul' → logprob: -3.3155925273895264
    7. ' possibles' → logprob: -3.4405925273895264
    8. ' calculated' → logprob: -4.3155927658081055
    9. ' parmi' → logprob: -4.3155927658081055
    10. '    
' → logprob: -4.6905927658081055

Token 82: '+B' (ID: 185895)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.097808599472046
    2. '   ' → logprob: -1.472808599472046
    3. 'u' → logprob: -1.847808599472046
    4. ' ' → logprob: -2.347808599472046
    5. ',' → logprob: -3.222808599472046
    6. 'r' → logprob: -3.347808599472046
    7. '  ' → logprob: -3.972808599472046
    8. ''' → logprob: -4.972808837890625
    9. ')' → logprob: -4.972808837890625
    10. '```' → logprob: -5.097808837890625

Token 83: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23347046971321106
    2. '\n' → logprob: -2.7334704399108887
    3. '\' → logprob: -3.4834704399108887
    4. ')' → logprob: -3.7334704399108887
    5. '    
' → logprob: -3.9834704399108887
    6. '
' → logprob: -4.108470439910889
    7. 'def' → logprob: -4.483470439910889
    8. '```' → logprob: -4.608470439910889
    9. ' 
' → logprob: -5.358470439910889
    10. '   
' → logprob: -5.733470439910889

Token 84: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08902464807033539
    2. 'A' → logprob: -2.464024543762207
    3. ',' → logprob: -10.589024543762207
    4. ' B' → logprob: -11.214024543762207
    5. ' ' → logprob: -11.464024543762207
    6. ' ,' → logprob: -11.589024543762207
    7. '   ' → logprob: -11.714024543762207
    8. ' `' → logprob: -12.839024543762207
    9. ' ' → logprob: -13.089024543762207
    10. 'B' → logprob: -13.214024543762207

Token 85: '-B' (ID: 8287)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12718385457992554
    2. '-B' → logprob: -2.1271839141845703
    3. '-C' → logprob: -9.25218391418457
    4. '+' → logprob: -10.00218391418457
    5. ',' → logprob: -10.12718391418457
    6. ' -' → logprob: -10.62718391418457
    7. '_' → logprob: -11.12718391418457
    8. 'B' → logprob: -11.75218391418457
    9. '-
' → logprob: -11.87718391418457
    10. '-A' → logprob: -12.00218391418457

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035638149827718735
    2. '+' → logprob: -3.7856380939483643
    3. ' ,' → logprob: -5.035638332366943
    4. ',
' → logprob: -6.410638332366943
    5. ' +' → logprob: -7.035638332366943
    6. 'A' → logprob: -7.535638332366943
    7. ')' → logprob: -7.660638332366943
    8. '```' → logprob: -7.785638332366943
    9. ' et' → logprob: -7.910638332366943
    10. ' ' → logprob: -8.035637855529785

Token 87: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5791119337081909
    2. ' A' → logprob: -0.8291119337081909
    3. '   ' → logprob: -6.3291120529174805
    4. 'et' → logprob: -7.3291120529174805
    5. ' et' → logprob: -7.5791120529174805
    6. ' ' → logprob: -9.45411205291748
    7. ' and' → logprob: -10.45411205291748
    8. 'B' → logprob: -11.07911205291748
    9. 'def' → logprob: -11.32911205291748
    10. '```' → logprob: -11.32911205291748

Token 88: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005876298528164625
    2. '*' → logprob: -5.755876064300537
    3. '+B' → logprob: -6.130876064300537
    4. ' +' → logprob: -7.755876064300537
    5. '-' → logprob: -9.755876541137695
    6. '+b' → logprob: -11.755876541137695
    7. '-B' → logprob: -12.255876541137695
    8. '+C' → logprob: -12.380876541137695
    9. '<|end|>' → logprob: -12.630876541137695
    10. 'B' → logprob: -12.755876541137695

Token 89: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002979245036840439
    2. 'b' → logprob: -6.252979278564453
    3. ' B' → logprob: -7.252979278564453
    4. ' ' → logprob: -8.877979278564453
    5. '*' → logprob: -10.502979278564453
    6. '```' → logprob: -10.502979278564453
    7. '+' → logprob: -10.627979278564453
    8. ')' → logprob: -10.752979278564453
    9. '  ' → logprob: -10.877979278564453
    10. 's' → logprob: -11.752979278564453

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17509014904499054
    2. '   ' → logprob: -1.9250901937484741
    3. '    
' → logprob: -4.675090312957764
    4. '\n' → logprob: -5.425090312957764
    5. '\' → logprob: -8.050089836120605
    6. '```' → logprob: -8.175089836120605
    7. '  
' → logprob: -9.050089836120605
    8. '   
' → logprob: -9.175089836120605
    9. ' 
' → logprob: -9.925089836120605
    10. '

' → logprob: -10.050089836120605

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4499373733997345
    2. '
' → logprob: -1.074937343597412
    3. '    
' → logprob: -4.074937343597412
    4. '\n' → logprob: -6.824937343597412
    5. '   
' → logprob: -7.074937343597412
    6. '  
' → logprob: -7.699937343597412
    7. '\' → logprob: -7.699937343597412
    8. ' 
' → logprob: -7.824937343597412
    9. '```' → logprob: -8.32493782043457
    10. 'def' → logprob: -9.07493782043457

Token 92: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14449641108512878
    2. '
' → logprob: -2.144496440887451
    3. '    
' → logprob: -4.769496440887451
    4. '\n' → logprob: -5.019496440887451
    5. '```' → logprob: -7.519496440887451
    6. ' 
' → logprob: -8.019495964050293
    7. '    ' → logprob: -8.019495964050293
    8. '\' → logprob: -8.019495964050293
    9. '   
' → logprob: -8.519495964050293
    10. '  
' → logprob: -8.769495964050293

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008440529345534742
    2. '    
' → logprob: -7.8758440017700195
    3. 'a' → logprob: -8.50084400177002
    4. 'A' → logprob: -9.75084400177002
    5. '    ' → logprob: -9.87584400177002
    6. 'n' → logprob: -10.12584400177002
    7. '```' → logprob: -10.25084400177002
    8. '
' → logprob: -10.50084400177002
    9. ' A' → logprob: -11.25084400177002
    10. 'import' → logprob: -12.62584400177002

Token 94: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22335784137248993
    2. 'a' → logprob: -2.098357915878296
    3. '   ' → logprob: -3.098357915878296
    4. ' A' → logprob: -3.598357915878296
    5. 'n' → logprob: -6.223357677459717
    6. 'try' → logprob: -7.098357677459717
    7. ' a' → logprob: -7.973357677459717
    8. '#' (adapté à ' #') → logprob: -8.098358154296875
    9. 'input' → logprob: -8.098358154296875
    10. 'line' → logprob: -8.098358154296875

Token 95: ' Lire' (ID: 57624)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4215863049030304
    2. 'A' → logprob: -1.671586275100708
    3. ' A' → logprob: -2.296586275100708
    4. ' a' → logprob: -3.421586275100708
    5. ' line' → logprob: -4.171586513519287
    6. 'line' → logprob: -6.171586513519287
    7. '   ' → logprob: -6.546586513519287
    8. 'input' → logprob: -7.171586513519287
    9. 'n' → logprob: -7.296586513519287
    10. '#' → logprob: -7.671586513519287

Token 96: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5046643614768982
    2. ' l' → logprob: -1.879664421081543
    3. ' a' → logprob: -2.504664421081543
    4. 'a' → logprob: -2.754664421081543
    5. ' les' → logprob: -3.379664421081543
    6. ' A' → logprob: -4.254664421081543
    7. ' line' → logprob: -4.504664421081543
    8. 'l' → logprob: -5.004664421081543
    9. 'A' → logprob: -5.004664421081543
    10. ' deux' → logprob: -5.254664421081543

Token 97: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.11886588484048843
    2. ' ' → logprob: -2.743865966796875
    3. 'ligne' → logprob: -3.368865966796875
    4. 'l' → logprob: -5.243865966796875
    5. 'entrée' → logprob: -6.118865966796875
    6. ' input' → logprob: -6.118865966796875
    7. 's' → logprob: -7.118865966796875
    8. ' line' → logprob: -7.243865966796875
    9. 'input' → logprob: -7.493865966796875
    10. 'e' → logprob: -8.493865966796875

Token 98: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013866664376109838
    2. 's' → logprob: -7.626386642456055
    3. '       ' → logprob: -8.751386642456055
    4. '    
' → logprob: -8.751386642456055
    5. 'input' → logprob: -8.876386642456055
    6. ' =' → logprob: -9.376386642456055
    7. '    ' → logprob: -9.501386642456055
    8. 'n' → logprob: -9.626386642456055
    9. '  ' → logprob: -9.876386642456055
    10. 'a' → logprob: -10.251386642456055

Token 99: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08652202785015106
    2. 'input' → logprob: -2.711522102355957
    3. ' l' → logprob: -4.586522102355957
    4. 'l' → logprob: -5.961522102355957
    5. '   ' → logprob: -5.961522102355957
    6. ' stdin' → logprob: -8.211522102355957
    7. ' standard' → logprob: -8.461522102355957
    8. ' la' → logprob: -8.586522102355957
    9. 'stdin' → logprob: -8.711522102355957
    10. ' ' → logprob: -9.211522102355957

Token 100: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.253648042678833
    2. 'input' → logprob: -2.128648042678833
    3. ' entrée' → logprob: -3.378648042678833
    4. ' input' → logprob: -3.628648042678833
    5. '   ' → logprob: -3.878648042678833
    6. ''entrée' → logprob: -4.003647804260254
    7. 'stdin' → logprob: -6.253647804260254
    8. 'ent' → logprob: -7.253647804260254
    9. 'e' → logprob: -7.378647804260254
    10. 'entr' → logprob: -7.378647804260254

Token 101: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1965319812297821
    2. 'input' → logprob: -2.0715320110321045
    3. ' input' → logprob: -3.1965320110321045
    4. '=input' → logprob: -6.071531772613525
    5. '    
' → logprob: -6.321531772613525
    6. 'user' → logprob: -6.946531772613525
    7. ' ' → logprob: -7.071531772613525
    8. ' =' → logprob: -7.196531772613525
    9. 'stdin' → logprob: -7.196531772613525
    10. '    ' → logprob: -7.446531772613525

Token 102: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028000064194202423
    2. '    
' → logprob: -6.752799987792969
    3. ' line' → logprob: -7.377799987792969
    4. 'input' → logprob: -7.877799987792969
    5. ' input' → logprob: -8.002799987792969
    6. 'n' → logprob: -9.627799987792969
    7. ' ligne' → logprob: -10.002799987792969
    8. 's' → logprob: -10.252799987792969
    9. '    ' → logprob: -10.627799987792969
    10. 'line' → logprob: -10.752799987792969

Token 103: ' la' (ID: 557)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.47691652178764343
    2. ' input' → logprob: -1.7269165515899658
    3. '   ' → logprob: -2.101916551589966
    4. ' ligne' → logprob: -3.101916551589966
    5. 'input' → logprob: -4.601916313171387
    6. 'ligne' → logprob: -5.351916313171387
    7. ' data' → logprob: -5.476916313171387
    8. ' a' → logprob: -5.851916313171387
    9. ' A' → logprob: -6.101916313171387
    10. 'a' → logprob: -6.476916313171387

Token 104: ' sé' (ID: 7462)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.1630908250808716
    2. 'l' → logprob: -1.5380908250808716
    3. 'split' → logprob: -1.7880908250808716
    4. 'ligne' → logprob: -2.413090705871582
    5. 'line' → logprob: -2.538090705871582
    6. 'input' → logprob: -2.538090705871582
    7. 's' → logprob: -4.038090705871582
    8. 'data' → logprob: -5.288090705871582
    9. 'val' → logprob: -5.413090705871582
    10. 'raw' → logprob: -5.538090705871582

Token 105: 'parer' (ID: 48041)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.5503204464912415
    2. 'par' → logprob: -1.4253203868865967
    3. 'pa' → logprob: -2.4253203868865967
    4. 'parer' → logprob: -2.8003203868865967
    5. 'para' → logprob: -3.9253203868865967
    6. 'p' → logprob: -4.800320625305176
    7. 'paration' → logprob: -7.050320625305176
    8. 'pard' → logprob: -7.175320625305176
    9. 'paren' → logprob: -7.175320625305176
    10. 'pari' → logprob: -7.675320625305176

Token 106: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.36630508303642273
    2. ' en' → logprob: -1.4913051128387451
    3. '   ' → logprob: -3.616305112838745
    4. 'tokens' → logprob: -3.616305112838745
    5. ' =' → logprob: -4.491304874420166
    6. '=' → logprob: -5.241304874420166
    7. 'par' → logprob: -5.616304874420166
    8. ' par' → logprob: -6.241304874420166
    9. 'input' → logprob: -6.991304874420166
    10. 's' → logprob: -7.241304874420166

Token 107: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5329970717430115
    2. ' deux' → logprob: -2.0329971313476562
    3. ' ent' → logprob: -2.1579971313476562
    4. ' tokens' → logprob: -2.9079971313476562
    5. 'ent' → logprob: -3.1579971313476562
    6. ' parts' → logprob: -4.157997131347656
    7. 'tokens' → logprob: -4.407997131347656
    8. ' A' → logprob: -4.532997131347656
    9. ' espaces' → logprob: -5.407997131347656
    10. ' nombres' → logprob: -5.782997131347656

Token 108: ' éléments' (ID: 57375)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8680457472801208
    2. '   ' → logprob: -1.8680458068847656
    3. 'a' → logprob: -2.2430458068847656
    4. 'n' → logprob: -2.4930458068847656
    5. 'ent' → logprob: -2.6180458068847656
    6. ' a' → logprob: -3.3680458068847656
    7. 'parts' → logprob: -3.8680458068847656
    8. ' parts' → logprob: -3.9930458068847656
    9. 'val' → logprob: -4.118045806884766
    10. ' tokens' → logprob: -4.618045806884766

Token 109: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08316273242235184
    2. ' line' → logprob: -3.833162784576416
    3. 'line' → logprob: -3.958162784576416
    4. '    
' → logprob: -4.208162784576416
    5. 's' → logprob: -4.708162784576416
    6. 'input' → logprob: -5.083162784576416
    7. 'ligne' → logprob: -5.958162784576416
    8. 'a' → logprob: -6.083162784576416
    9. 'inputs' → logprob: -7.333162784576416
    10. ' ligne' → logprob: -7.458162784576416

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18350517749786377
    2. ' puis' → logprob: -2.558505058288574
    3. ' input' → logprob: -3.433505058288574
    4. '    ' → logprob: -4.558505058288574
    5. ' split' → logprob: -4.808505058288574
    6. ' lire' → logprob: -5.308505058288574
    7. 'input' → logprob: -5.308505058288574
    8. 'split' → logprob: -5.308505058288574
    9. ' saisir' → logprob: -5.808505058288574
    10. ' A' → logprob: -6.433505058288574

Token 111: ' #' (ID: 1069)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.1773213148117065
    2. '   ' → logprob: -1.6773213148117065
    3. 'A' → logprob: -2.302321434020996
    4. ' line' → logprob: -2.677321434020996
    5. ' les' → logprob: -2.927321434020996
    6. ' A' → logprob: -2.927321434020996
    7. 'a' → logprob: -3.427321434020996
    8. ' ligne' → logprob: -3.552321434020996
    9. ' parts' → logprob: -3.802321434020996
    10. ' a' → logprob: -4.302321434020996

Token 112: ' puis' (ID: 18766)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.217043399810791
    2. '   ' → logprob: -1.467043399810791
    3. ' line' → logprob: -1.717043399810791
    4. ' a' → logprob: -1.967043399810791
    5. ' parts' → logprob: -3.592043399810791
    6. 'inputs' → logprob: -4.342043399810791
    7. 'ligne' → logprob: -4.467043399810791
    8. 'A' → logprob: -4.467043399810791
    9. ' input' → logprob: -4.592043399810791
    10. ' ligne' → logprob: -4.592043399810791

Token 113: ' convertir' (ID: 79223)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.29838448762893677
    2. ' a' → logprob: -2.548384428024292
    3. 'a' → logprob: -2.923384428024292
    4. ' convertir' → logprob: -2.923384428024292
    5. ' A' → logprob: -4.173384666442871
    6. 'A' → logprob: -4.673384666442871
    7. ' stock' → logprob: -5.423384666442871
    8. ' split' → logprob: -5.423384666442871
    9. ' récupérer' → logprob: -5.548384666442871
    10. ' continuer' → logprob: -5.798384666442871

Token 114: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4532133936882019
    2. ' les' → logprob: -1.5782134532928467
    3. 'la' → logprob: -2.9532134532928467
    4. '   ' → logprob: -3.0782134532928467
    5. ' ' → logprob: -4.703213214874268
    6. 'les' → logprob: -4.828213214874268
    7. ' line' → logprob: -5.453213214874268
    8. 'l' → logprob: -5.578213214874268
    9. ' ces' → logprob: -5.578213214874268
    10. ' en' → logprob: -5.828213214874268

Token 115: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.14856886863708496
    2. ' élément' → logprob: -2.148568868637085
    3. ' partie' → logprob: -4.898569107055664
    4. ' element' → logprob: -5.898569107055664
    5. ' ' → logprob: -6.273569107055664
    6. 'element' → logprob: -6.398569107055664
    7. ' part' → logprob: -6.523569107055664
    8. 'part' → logprob: -6.523569107055664
    9. ' en' → logprob: -6.898569107055664
    10. 'ent' → logprob: -7.398569107055664

Token 116: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.12893712520599365
    2. '   ' → logprob: -2.878937244415283
    3. 'en' → logprob: -3.378937244415283
    4. ' a' → logprob: -4.378937244415283
    5. ' input' → logprob: -5.128937244415283
    6. 'a' → logprob: -5.753937244415283
    7. ' line' → logprob: -6.128937244415283
    8. 'input' → logprob: -6.128937244415283
    9. ' =' → logprob: -7.253937244415283
    10. ' ' → logprob: -7.378937244415283

Token 117: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6873314380645752
    2. 'int' → logprob: -1.3123314380645752
    3. 'ent' → logprob: -2.062331438064575
    4. ' entier' → logprob: -2.437331438064575
    5. ' ent' → logprob: -4.937331199645996
    6. ' un' → logprob: -5.187331199645996
    7. ' des' → logprob: -8.937331199645996
    8. ' ' → logprob: -9.187331199645996
    9. 'un' → logprob: -9.312331199645996
    10. ' integer' → logprob: -9.437331199645996

Token 118: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008250844664871693
    2. ' line' → logprob: -6.383250713348389
    3. 'line' → logprob: -6.633250713348389
    4. '    
' → logprob: -6.633250713348389
    5. 'a' → logprob: -6.758250713348389
    6. 'input' → logprob: -7.008250713348389
    7. 'ligne' → logprob: -7.133250713348389
    8. 'A' → logprob: -8.508251190185547
    9. 'n' → logprob: -8.758251190185547
    10. ' a' → logprob: -8.883251190185547

Token 119: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021880540996789932
    2. '   ' → logprob: -4.021880626678467
    3. ' =' → logprob: -6.146880626678467
    4. ' ,' → logprob: -7.396880626678467
    5. '=' → logprob: -8.021880149841309
    6. 'a' → logprob: -8.146880149841309
    7. 's' → logprob: -9.396880149841309
    8. ' et' → logprob: -10.021880149841309
    9. ',A' → logprob: -10.021880149841309
    10. ' A' → logprob: -10.271880149841309

Token 120: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.16105321049690247
    2. 'B' → logprob: -1.91105318069458
    3. ' ' → logprob: -7.16105318069458
    4. '```' → logprob: -11.911053657531738
    5. ' ' → logprob: -11.911053657531738
    6. 'int' → logprob: -12.161053657531738
    7. '  ' → logprob: -12.161053657531738
    8. ' a' → logprob: -12.286053657531738
    9. 'A' → logprob: -12.536053657531738
    10. ' A' → logprob: -12.661053657531738

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038516204804182053
    2. '    
' → logprob: -6.003851413726807
    3. '
' → logprob: -7.128851413726807
    4. 'ligne' → logprob: -8.878851890563965
    5. 'input' → logprob: -9.003851890563965
    6. 'A' → logprob: -9.003851890563965
    7. 'line' → logprob: -10.503851890563965
    8. ' A' → logprob: -10.628851890563965
    9. '\n' → logprob: -10.753851890563965
    10. 'a' → logprob: -11.003851890563965

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002053193049505353
    2. '
' → logprob: -6.627053260803223
    3. '    
' → logprob: -7.377053260803223
    4. 'A' → logprob: -10.002053260803223
    5. ' A' → logprob: -10.752053260803223
    6. ' 
' → logprob: -11.752053260803223
    7. '  
' → logprob: -12.252053260803223
    8. '\n' → logprob: -13.002053260803223
    9. 'ligne' → logprob: -13.002053260803223
    10. ' line' → logprob: -13.002053260803223

Token 123: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09046319127082825
    2. 'A' (adapté à ' A') → logprob: -3.340463161468506
    3. ' line' → logprob: -3.965463161468506
    4. ' A' → logprob: -4.090463161468506
    5. 'line' → logprob: -4.715463161468506
    6. 'ligne' → logprob: -6.215463161468506
    7. '    
' → logprob: -6.340463161468506
    8. 'input' → logprob: -6.465463161468506
    9. ' ligne' → logprob: -7.840463161468506
    10. 'a' → logprob: -8.965463638305664

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',B' → logprob: -14.625022888183594
    4. ',b' → logprob: -15.500022888183594
    5. ',A' → logprob: -16.500022888183594
    6. ',int' → logprob: -16.750022888183594
    7. ',
' → logprob: -17.000022888183594
    8. '=' → logprob: -17.750022888183594
    9. ' =' → logprob: -17.875022888183594
    10. 's' → logprob: -18.000022888183594

Token 125: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.10034544765949249
    2. 'B' → logprob: -2.3503453731536865
    3. ' ' → logprob: -8.975345611572266
    4. '<|end|>' → logprob: -12.600345611572266
    5. '  ' → logprob: -12.975345611572266
    6. ' ' → logprob: -13.600345611572266
    7. ' =' → logprob: -13.975345611572266
    8. 'input' → logprob: -14.225345611572266
    9. '_B' → logprob: -14.600345611572266
    10. 's' → logprob: -14.850345611572266

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740804135799408
    2. ' =' → logprob: -0.9740804433822632
    3. '=input' → logprob: -12.849080085754395
    4. '=int' → logprob: -14.474080085754395
    5. ',' → logprob: -16.72408103942871
    6. ' ' → logprob: -16.84908103942871
    7. ')' → logprob: -17.09908103942871
    8. '=line' → logprob: -17.47408103942871
    9. '=

' → logprob: -17.47408103942871
    10. ' ' → logprob: -17.59908103942871

Token 127: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1602381318807602
    2. 'map' → logprob: -1.9102381467819214
    3. 'input' → logprob: -12.160238265991211
    4. ' input' → logprob: -12.660238265991211
    5. '	map' → logprob: -13.160238265991211
    6. ' ' → logprob: -14.160238265991211
    7. ' ' → logprob: -14.285238265991211
    8. '(map' → logprob: -14.410238265991211
    9. ' list' → logprob: -14.535238265991211
    10. '[' → logprob: -14.535238265991211

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014207577332854271
    2. '(' → logprob: -4.264207363128662
    3. 'int' → logprob: -10.63920783996582
    4. '(input' → logprob: -11.38920783996582
    5. '(
' → logprob: -12.76420783996582
    6. '(str' → logprob: -12.88920783996582
    7. ' int' → logprob: -13.51420783996582
    8. '<int' → logprob: -14.13920783996582
    9. ' (' → logprob: -14.88920783996582
    10. '[int' → logprob: -15.13920783996582

Token 129: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1045893132686615
    2. '(input' → logprob: -2.3545892238616943
    3. ' input' → logprob: -5.979589462280273
    4. ',input' → logprob: -6.729589462280273
    5. ')' → logprob: -7.854589462280273
    6. ',' → logprob: -8.604589462280273
    7. '(' → logprob: -9.604589462280273
    8. '   ' → logprob: -12.604589462280273
    9. '=input' → logprob: -12.729589462280273
    10. '	input' → logprob: -13.854589462280273

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196858361363411
    2. ' input' → logprob: -2.8119685649871826
    3. '(input' → logprob: -15.061968803405762
    4. '   ' → logprob: -15.561968803405762
    5. '	input' → logprob: -15.686968803405762
    6. ')' → logprob: -16.061967849731445
    7. ' ' → logprob: -16.311967849731445
    8. '=input' → logprob: -16.686967849731445
    9. '<input' → logprob: -17.686967849731445
    10. ',input' → logprob: -17.936967849731445

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003821716527454555
    2. '()' → logprob: -7.875381946563721
    3. ' ().' → logprob: -13.625382423400879
    4. '()
' → logprob: -14.875382423400879
    5. ')' → logprob: -15.375382423400879
    6. '())' → logprob: -15.750382423400879
    7. '(' → logprob: -16.625381469726562
    8. ' ()' → logprob: -18.000381469726562
    9. '("").' → logprob: -18.125381469726562
    10. '().
' → logprob: -18.250381469726562

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008615161292254925
    2. 'strip' → logprob: -4.758615016937256
    3. 'rstrip' → logprob: -15.008615493774414
    4. ' split' → logprob: -15.508615493774414
    5. 'spl' → logprob: -18.258615493774414
    6. '(split' → logprob: -18.258615493774414
    7. ' strip' → logprob: -19.383615493774414
    8. '.split' → logprob: -19.383615493774414
    9. 'read' → logprob: -20.133615493774414
    10. '().' → logprob: -20.258615493774414

Token 133: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007522273808717728
    2. '()))' → logprob: -5.382522106170654
    3. '()' → logprob: -6.132522106170654
    4. ')' → logprob: -7.382522106170654
    5. '))' → logprob: -9.382522583007812
    6. '(' → logprob: -11.382522583007812
    7. ' ())' → logprob: -12.382522583007812
    8. '())
' → logprob: -12.882522583007812
    9. '()))
' → logprob: -14.132522583007812
    10. '()));' → logprob: -14.757522583007812

Token 134: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5402872562408447
    2. '   ' → logprob: -1.0402872562408447
    3. '    
' → logprob: -3.1652872562408447
    4. '  
' → logprob: -4.415287017822266
    5. 'result' → logprob: -6.040287017822266
    6. '#' → logprob: -6.290287017822266
    7. '   
' → logprob: -6.665287017822266
    8. ' 
' → logprob: -6.665287017822266
    9. 's' → logprob: -7.540287017822266
    10. '<|end|>' → logprob: -7.790287017822266

Token 135: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.8151703476905823
    2. '   ' → logprob: -0.9401703476905823
    3. 'result' → logprob: -2.5651702880859375
    4. ' results' → logprob: -2.8151702880859375
    5. '    
' → logprob: -4.4401702880859375
    6. '#' → logprob: -4.9401702880859375
    7. '
' → logprob: -6.1901702880859375
    8. ' result' → logprob: -6.1901702880859375
    9. 'operations' → logprob: -6.4401702880859375
    10. 's' → logprob: -6.6901702880859375

Token 136: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.9371800422668457
    2. 's' → logprob: -1.0621800422668457
    3. 'sum' → logprob: -1.6871800422668457
    4. 'result' → logprob: -3.0621800422668457
    5. '#' (adapté à ' #') → logprob: -3.6871800422668457
    6. 'som' → logprob: -5.937180042266846
    7. 'res' → logprob: -7.312180042266846
    8. 'values' → logprob: -7.437180042266846
    9. 'addition' → logprob: -7.562180042266846
    10. 'operations' → logprob: -8.187179565429688

Token 137: ' Calcul' (ID: 57243)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9070014953613281
    2. 'sum' → logprob: -1.4070014953613281
    3. '#' → logprob: -2.282001495361328
    4. 'results' → logprob: -2.782001495361328
    5. 'result' → logprob: -3.032001495361328
    6. ' sum' → logprob: -3.032001495361328
    7. ' somme' → logprob: -3.157001495361328
    8. ' results' → logprob: -4.657001495361328
    9. ' result' → logprob: -4.907001495361328
    10. ' sums' → logprob: -5.407001495361328

Token 138: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005590891465544701
    2. '   ' → logprob: -5.380590915679932
    3. 's' → logprob: -7.755590915679932
    4. ' des' → logprob: -8.880590438842773
    5. '_' → logprob: -9.255590438842773
    6. 'A' → logprob: -9.630590438842773
    7. '    ' → logprob: -9.880590438842773
    8. ' A' → logprob: -10.005590438842773
    9. 'a' → logprob: -10.380590438842773
    10. '    
' → logprob: -10.880590438842773

Token 139: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4571297764778137
    2. ' les' → logprob: -1.957129716873169
    3. ' A' → logprob: -2.457129716873169
    4. 's' → logprob: -2.707129716873169
    5. 'A' → logprob: -3.082129716873169
    6. ' l' → logprob: -4.582129955291748
    7. 'sum' → logprob: -6.207129955291748
    8. 'les' → logprob: -6.332129955291748
    9. ' le' → logprob: -6.832129955291748
    10. ' ' → logprob: -7.082129955291748

Token 140: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037986744195222855
    2. ' somme' → logprob: -4.037986755371094
    3. 'sum' → logprob: -4.162986755371094
    4. 'som' → logprob: -5.537986755371094
    5. 'summ' → logprob: -9.912986755371094
    6. ' som' → logprob: -10.912986755371094
    7. ' sum' → logprob: -10.912986755371094
    8. 'Som' → logprob: -11.287986755371094
    9. '_s' → logprob: -11.537986755371094
    10. 'a' → logprob: -11.787986755371094

Token 141: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013442796654999256
    2. ' =' → logprob: -4.8884429931640625
    3. ' ,' → logprob: -6.5134429931640625
    4. 'A' → logprob: -6.5134429931640625
    5. '=' → logprob: -6.7634429931640625
    6. 's' → logprob: -7.1384429931640625
    7. '   ' → logprob: -7.7634429931640625
    8. 'sum' → logprob: -8.763442993164062
    9. ' A' → logprob: -9.138442993164062
    10. '_' → logprob: -10.263442993164062

Token 142: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06200768053531647
    2. ' A' → logprob: -2.8120076656341553
    3. '[A' → logprob: -10.687007904052734
    4. ' ' → logprob: -11.937007904052734
    5. '[' → logprob: -12.437007904052734
    6. '(A' → logprob: -12.437007904052734
    7. '	A' → logprob: -13.437007904052734
    8. ' [' → logprob: -15.062007904052734
    9. '  ' → logprob: -15.562007904052734
    10. '   ' → logprob: -15.687007904052734

Token 143: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2029040902853012
    2. ' +' → logprob: -1.8279041051864624
    3. ',' → logprob: -3.827903985977173
    4. '+A' → logprob: -7.952904224395752
    5. ' ,' → logprob: -8.327903747558594
    6. '+B' → logprob: -8.577903747558594
    7. 'A' → logprob: -9.077903747558594
    8. ')' → logprob: -9.202903747558594
    9. ' ' → logprob: -10.327903747558594
    10. ' plus' → logprob: -10.452903747558594

Token 144: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.38688650727272034
    2. 'B' → logprob: -1.136886477470398
    3. ' ' → logprob: -11.136886596679688
    4. ',' → logprob: -15.136886596679688
    5. ' ' → logprob: -15.761886596679688
    6. '  ' → logprob: -16.261886596679688
    7. '	B' → logprob: -16.636886596679688
    8. '<|end|>' → logprob: -16.886886596679688
    9. '```' → logprob: -16.886886596679688
    10. ' ,' → logprob: -17.136886596679688

Token 145: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5146322250366211
    2. ',' → logprob: -1.014632225036621
    3. 'C' → logprob: -4.264632225036621
    4. 'sum' → logprob: -4.764632225036621
    5. '   ' → logprob: -5.514632225036621
    6. 'S' → logprob: -5.639632225036621
    7. 'A' → logprob: -6.389632225036621
    8. '_' → logprob: -6.889632225036621
    9. ' =' → logprob: -7.014632225036621
    10. '=' → logprob: -7.014632225036621

Token 146: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6980980038642883
    2. '   ' → logprob: -0.8230980038642883
    3. ',' → logprob: -3.6980979442596436
    4. '    
' → logprob: -4.198098182678223
    5. ' ' → logprob: -5.573098182678223
    6. 'A' → logprob: -5.823098182678223
    7. ')' → logprob: -5.948098182678223
    8. ' A' → logprob: -6.198098182678223
    9. '    ' → logprob: -6.573098182678223
    10. ' s' → logprob: -6.698098182678223

Token 147: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.32613661885261536
    2. ' sum' → logprob: -1.826136589050293
    3. 's' → logprob: -2.451136589050293
    4. 'result' → logprob: -4.451136589050293
    5. ' somme' → logprob: -4.701136589050293
    6. ' s' → logprob: -6.076136589050293
    7. ' result' → logprob: -6.076136589050293
    8. 'S' → logprob: -6.451136589050293
    9. '   ' → logprob: -6.576136589050293
    10. 'summ' → logprob: -7.201136589050293

Token 148: '_ab' (ID: 53632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016385652124881744
    2. ' =' → logprob: -4.891385555267334
    3. '_val' → logprob: -5.391385555267334
    4. '=' → logprob: -6.391385555267334
    5. 'A' → logprob: -7.016385555267334
    6. '(' → logprob: -7.891385555267334
    7. 's' → logprob: -8.266386032104492
    8. '_value' → logprob: -8.391386032104492
    9. 'a' → logprob: -8.516386032104492
    10. '_a' → logprob: -9.016386032104492

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327328085899353
    2. '=' → logprob: -1.313273310661316
    3. ')' → logprob: -12.563273429870605
    4. ' ' → logprob: -12.938273429870605
    5. '_' → logprob: -13.313273429870605
    6. ',' → logprob: -13.688273429870605
    7. '   ' → logprob: -13.938273429870605
    8. 's' → logprob: -13.938273429870605
    9. ' ' → logprob: -14.688273429870605
    10. '  ' → logprob: -15.688273429870605

Token 150: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20142006874084473
    2. 'A' → logprob: -1.7014200687408447
    3. ' ' → logprob: -12.701419830322266
    4. '   ' → logprob: -12.826419830322266
    5. '	A' → logprob: -14.451419830322266
    6. '  ' → logprob: -15.326419830322266
    7. '(A' → logprob: -16.201419830322266
    8. ' ' → logprob: -16.701419830322266
    9. '_A' → logprob: -17.576419830322266
    10. '    ' → logprob: -18.201419830322266

Token 151: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132747709751129
    2. '+' → logprob: -1.3132747411727905
    3. '+B' → logprob: -11.313274383544922
    4. ' ' → logprob: -14.938274383544922
    5. '+b' → logprob: -15.063274383544922
    6. ' plus' → logprob: -16.188274383544922
    7. ' ' → logprob: -16.313274383544922
    8. '+A' → logprob: -18.188274383544922
    9. '＋' → logprob: -18.563274383544922
    10. ')' → logprob: -18.563274383544922

Token 152: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.313264936208725
    2. 'B' → logprob: -1.3132649660110474
    3. ' ' → logprob: -12.688264846801758
    4. '<|end|>' → logprob: -16.313264846801758
    5. '	B' → logprob: -17.188264846801758
    6. ' ' → logprob: -17.563264846801758
    7. '  ' → logprob: -17.938264846801758
    8. '_B' → logprob: -19.188264846801758
    9. '   ' → logprob: -19.938264846801758
    10. ' ' → logprob: -20.438264846801758

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6054624319076538
    2. '    
' → logprob: -1.3554624319076538
    3. '
' → logprob: -1.7304624319076538
    4. '<|end|>' → logprob: -5.105462551116943
    5. '\n' → logprob: -5.355462551116943
    6. '   
' → logprob: -6.230462551116943
    7. '  
' → logprob: -6.230462551116943
    8. '  ' → logprob: -6.730462551116943
    9. ')' → logprob: -7.355462551116943
    10. ' 
' → logprob: -7.480462551116943

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.702513575553894
    2. '   ' → logprob: -1.327513575553894
    3. '    
' → logprob: -1.452513575553894
    4. '\n' → logprob: -6.327513694763184
    5. '   
' → logprob: -6.577513694763184
    6. '  
' → logprob: -7.077513694763184
    7. '  ' → logprob: -7.452513694763184
    8. ' 
' → logprob: -8.327513694763184
    9. '    ' → logprob: -8.577513694763184
    10. '<|end|>' → logprob: -9.327513694763184

Token 155: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8020943999290466
    2. '   ' → logprob: -1.1770944595336914
    3. '    
' → logprob: -1.6770944595336914
    4. '\n' → logprob: -3.3020944595336914
    5. '  
' → logprob: -5.052094459533691
    6. '   
' → logprob: -5.302094459533691
    7. ' 
' → logprob: -5.802094459533691
    8. '  ' → logprob: -6.302094459533691
    9. 'n' → logprob: -6.802094459533691
    10. '    ' → logprob: -8.052094459533691

Token 156: ' Calcul' (ID: 57243)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7433857321739197
    2. ' diff' → logprob: -0.9933857321739197
    3. '   ' → logprob: -2.8683857917785645
    4. '#' → logprob: -3.3683857917785645
    5. 'difference' → logprob: -3.7433857917785645
    6. ' difference' → logprob: -4.1183857917785645
    7. ' #' → logprob: -4.4933857917785645
    8. ' subtract' → logprob: -5.1183857917785645
    9. 'subtract' → logprob: -5.9933857917785645
    10. 'sub' → logprob: -6.8683857917785645

Token 157: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.40998875699006e-05
    2. 'erer' → logprob: -10.37507438659668
    3. 'uler' → logprob: -10.75007438659668
    4. 'rer' → logprob: -12.00007438659668
    5. 'e' → logprob: -12.50007438659668
    6. '   ' → logprob: -12.62507438659668
    7. '#' → logprob: -13.25007438659668
    8. '_er' → logprob: -13.37507438659668
    9. 'érer' → logprob: -13.62507438659668
    10. 'ate' → logprob: -14.25007438659668

Token 158: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.007723271381109953
    2. 'la' → logprob: -5.257723331451416
    3. ' l' → logprob: -7.382723331451416
    4. 'diff' → logprob: -7.382723331451416
    5. ' ' → logprob: -7.507723331451416
    6. ' the' → logprob: -8.382722854614258
    7. 'l' → logprob: -9.382722854614258
    8. '   ' → logprob: -9.632722854614258
    9. '_la' → logprob: -9.632722854614258
    10. '  ' → logprob: -10.132722854614258

Token 159: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.34934499859809875
    2. 'difference' → logprob: -1.2243449687957764
    3. ' difference' → logprob: -7.7243452072143555
    4. ' diff' → logprob: -8.099345207214355
    5. 'd' → logprob: -9.599345207214355
    6. 'dif' → logprob: -10.474345207214355
    7. ' différence' → logprob: -10.724345207214355
    8. 'sub' → logprob: -11.099345207214355
    9. 'subtract' → logprob: -12.099345207214355
    10. '-' → logprob: -12.224345207214355

Token 160: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6630035042762756
    2. '_ab' → logprob: -0.9130035042762756
    3. 'ab' → logprob: -3.038003444671631
    4. ' ab' → logprob: -3.663003444671631
    5. 'de' → logprob: -5.663003444671631
    6. ' entre' → logprob: -6.288003444671631
    7. ' between' → logprob: -6.413003444671631
    8. '_' → logprob: -7.163003444671631
    9. '   ' → logprob: -7.788003444671631
    10. ' =' → logprob: -7.913003444671631

Token 161: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.10045456141233444
    2. 'A' → logprob: -2.350454568862915
    3. ' ' → logprob: -9.100454330444336
    4. 'AB' → logprob: -9.350454330444336
    5. 'ab' → logprob: -10.475454330444336
    6. '	A' → logprob: -12.225454330444336
    7. '  ' → logprob: -13.225454330444336
    8. '_ab' → logprob: -13.350454330444336
    9. ' ' → logprob: -13.475454330444336
    10. '(A' → logprob: -13.475454330444336

Token 162: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10069991648197174
    2. '-' → logprob: -3.2256999015808105
    3. ' ' → logprob: -3.4756999015808105
    4. ',' → logprob: -4.9756999015808105
    5. ' et' → logprob: -4.9756999015808105
    6. ' and' → logprob: -5.3506999015808105
    7. ' ,' → logprob: -6.1006999015808105
    8. ' ' → logprob: -6.4756999015808105
    9. '_' → logprob: -7.1006999015808105
    10. '_ab' → logprob: -7.3506999015808105

Token 163: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.04303424432873726
    2. 'B' → logprob: -3.168034315109253
    3. ' ' → logprob: -10.293034553527832
    4. '  ' → logprob: -14.668034553527832
    5. ' A' → logprob: -16.043033599853516
    6. ' ' → logprob: -16.168033599853516
    7. '   ' → logprob: -16.418033599853516
    8. '	B' → logprob: -16.418033599853516
    9. 'A' → logprob: -16.855533599853516
    10. '(B' → logprob: -17.168033599853516

Token 164: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008623555302619934
    2. '=' → logprob: -4.8836236000061035
    3. ' ' → logprob: -7.8836236000061035
    4. ' sum' → logprob: -8.133623123168945
    5. 'sum' → logprob: -8.383623123168945
    6. '_' → logprob: -10.258623123168945
    7. ' ' → logprob: -10.508623123168945
    8. '_ab' → logprob: -10.883623123168945
    9. '=sum' → logprob: -11.758623123168945
    10. 'ab' → logprob: -12.008623123168945

Token 165: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10285107791423798
    2. ' sum' → logprob: -2.727851152420044
    3. 'sum' → logprob: -4.602850914001465
    4. '=' → logprob: -4.602850914001465
    5. ' ' → logprob: -5.727850914001465
    6. '_' → logprob: -6.477850914001465
    7. '   ' → logprob: -6.852850914001465
    8. 'diff' → logprob: -6.852850914001465
    9. ' difference' → logprob: -6.977850914001465
    10. ' _' → logprob: -7.102850914001465

Token 166: ' diff' (ID: 8868)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.030187318101525307
    2. 'A' → logprob: -3.5301873683929443
    3. ' B' → logprob: -8.280187606811523
    4. ' ' → logprob: -8.905187606811523
    5. 'B' → logprob: -11.155187606811523
    6. ' abs' → logprob: -11.905187606811523
    7. 'diff' (adapté à ' diff') → logprob: -12.155187606811523
    8. ' sum' → logprob: -12.780187606811523
    9. ' (' → logprob: -12.780187606811523
    10. '   ' → logprob: -13.030187606811523

Token 167: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -2.7729658540920354e-05
    2. '_' → logprob: -10.500027656555176
    3. '_AB' → logprob: -16.125028610229492
    4. ' =' → logprob: -17.875028610229492
    5. 'ab' → logprob: -18.625028610229492
    6. ' _' → logprob: -19.000028610229492
    7. '_an' → logprob: -19.125028610229492
    8. '_a' → logprob: -19.250028610229492
    9. '_abs' → logprob: -19.375028610229492
    10. '_al' → logprob: -19.625028610229492

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '_' → logprob: -14.893150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '   ' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.893150329589844
    7. 's' → logprob: -18.268150329589844
    8. '_=' → logprob: -19.268150329589844
    9. ',' → logprob: -19.518150329589844
    10. '  ' → logprob: -19.643150329589844

Token 169: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0067154900170862675
    2. 'A' → logprob: -5.006715297698975
    3. '(A' → logprob: -16.756715774536133
    4. ' ' → logprob: -16.756715774536133
    5. '	A' → logprob: -17.006715774536133
    6. ' (' → logprob: -17.381715774536133
    7. '   ' → logprob: -17.506715774536133
    8. ' ' → logprob: -19.256715774536133
    9. '=A' → logprob: -19.256715774536133
    10. ' А' → logprob: -19.881715774536133

Token 170: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14269034564495087
    2. '-' → logprob: -2.017690420150757
    3. ' ' → logprob: -11.767690658569336
    4. ' ' → logprob: -12.267690658569336
    5. '_' → logprob: -13.517690658569336
    6. ')' → logprob: -14.892690658569336
    7. '-B' → logprob: -15.267690658569336
    8. '"' → logprob: -15.392690658569336
    9. ' -
' → logprob: -16.392690658569336
    10. '[' → logprob: -16.392690658569336

Token 171: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2014150768518448
    2. 'B' → logprob: -1.7014150619506836
    3. ' ' → logprob: -13.451415061950684
    4. '<|end|>' → logprob: -15.326415061950684
    5. ' ' → logprob: -16.201416015625
    6. 'space' → logprob: -18.076416015625
    7. '	B' → logprob: -18.701416015625
    8. ',' → logprob: -19.451416015625
    9. '‌' → logprob: -19.763916015625
    10. '  ' → logprob: -20.013916015625

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038620512932538986
    2. '    
' → logprob: -3.5386204719543457
    3. '
' → logprob: -4.788620471954346
    4. '   
' → logprob: -8.913620948791504
    5. '  
' → logprob: -9.038620948791504
    6. '    ' → logprob: -9.163620948791504
    7. '  ' → logprob: -9.538620948791504
    8. 'product' → logprob: -10.663620948791504
    9. '#' → logprob: -11.163620948791504
    10. ' 
' → logprob: -11.663620948791504

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01632091961801052
    2. '    
' → logprob: -4.891320705413818
    3. 'product' → logprob: -5.516320705413818
    4. '
' → logprob: -5.766320705413818
    5. 'prod' → logprob: -6.641320705413818
    6. ' product' → logprob: -9.516321182250977
    7. ' prod' → logprob: -10.016321182250977
    8. '#' → logprob: -10.516321182250977
    9. '```' → logprob: -10.891321182250977
    10. '  
' → logprob: -11.016321182250977

Token 174: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17392463982105255
    2. 'product' → logprob: -2.673924684524536
    3. 'prod' → logprob: -2.923924684524536
    4. '
' → logprob: -3.798924684524536
    5. '    
' → logprob: -5.173924446105957
    6. ' product' → logprob: -5.548924446105957
    7. '#' (adapté à ' #') → logprob: -6.173924446105957
    8. ' prod' → logprob: -6.298924446105957
    9. '*' → logprob: -7.548924446105957
    10. '```' → logprob: -8.548924446105957

Token 175: ' Calcul' (ID: 57243)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.20624051988124847
    2. 'product' → logprob: -2.45624041557312
    3. ' prod' → logprob: -2.45624041557312
    4. ' product' → logprob: -4.581240653991699
    5. 'mul' → logprob: -6.206240653991699
    6. '   ' → logprob: -7.081240653991699
    7. 'mult' → logprob: -7.081240653991699
    8. '#' → logprob: -7.581240653991699
    9. ' mul' → logprob: -8.5812406539917
    10. ' mult' → logprob: -9.0812406539917

Token 176: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00014120421838015318
    2. '   ' → logprob: -9.875141143798828
    3. 'rer' → logprob: -10.125141143798828
    4. '#' → logprob: -10.625141143798828
    5. 'uler' → logprob: -11.625141143798828
    6. 'ler' → logprob: -12.500141143798828
    7. 'ate' → logprob: -12.875141143798828
    8. 'iter' → logprob: -13.500141143798828
    9. 'érer' → logprob: -13.500141143798828
    10. 'erer' → logprob: -13.875141143798828

Token 177: ' le' (ID: 505)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8566968441009521
    2. ' product' → logprob: -2.356696844100952
    3. ' prod' → logprob: -2.356696844100952
    4. 'product' → logprob: -2.481696844100952
    5. 'prod' → logprob: -2.606696844100952
    6. 'the' → logprob: -2.606696844100952
    7. ' A' → logprob: -2.731696844100952
    8. 'A' → logprob: -3.356696844100952
    9. ' produit' → logprob: -4.356697082519531
    10. '   ' → logprob: -4.481697082519531

Token 178: ' produit' (ID: 29429)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8131387829780579
    2. ' produit' → logprob: -1.188138723373413
    3. 'prod' → logprob: -2.188138723373413
    4. ' product' → logprob: -2.188138723373413
    5. 'produ' → logprob: -3.688138723373413
    6. ' prod' → logprob: -6.188138961791992
    7. ' produs' → logprob: -8.813138961791992
    8. 'pro' → logprob: -9.938138961791992
    9. 'produto' → logprob: -10.063138961791992
    10. 'producto' → logprob: -10.563138961791992

Token 179: ' de' (ID: 334)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.0407608263194561
    2. ' de' → logprob: -4.0407609939575195
    3. '_' → logprob: -4.1657609939575195
    4. ' =' → logprob: -5.9157609939575195
    5. 'ab' → logprob: -6.1657609939575195
    6. '=' → logprob: -7.0407609939575195
    7. '   ' → logprob: -8.29076099395752
    8. ' ab' → logprob: -8.41576099395752
    9. ' of' → logprob: -8.54076099395752
    10. ' _' → logprob: -8.91576099395752

Token 180: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.25193020701408386
    2. 'A' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.126930236816406
    4. 'AB' → logprob: -15.251930236816406
    5. '	A' → logprob: -16.626930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '   ' → logprob: -17.501930236816406
    8. '(A' → logprob: -18.126930236816406
    9. '  ' → logprob: -18.376930236816406
    10. '_A' → logprob: -18.501930236816406

Token 181: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6606335639953613
    2. '*' → logprob: -0.7856335639953613
    3. ' ' → logprob: -3.6606335639953613
    4. ' ' → logprob: -7.535633563995361
    5. '_' → logprob: -7.785633563995361
    6. 'ab' → logprob: -8.160633087158203
    7. ',' → logprob: -8.160633087158203
    8. ' ,' → logprob: -9.660633087158203
    9. '  ' → logprob: -9.910633087158203
    10. ' A' → logprob: -10.160633087158203

Token 182: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2519305646419525
    2. 'B' → logprob: -1.501930594444275
    3. ' ' → logprob: -13.626930236816406
    4. '_B' → logprob: -16.251930236816406
    5. '	B' → logprob: -16.751930236816406
    6. ' ' → logprob: -17.376930236816406
    7. '<|end|>' → logprob: -17.376930236816406
    8. '  ' → logprob: -18.501930236816406
    9. '<B' → logprob: -19.001930236816406
    10. ' Б' → logprob: -19.501930236816406

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4186568260192871
    2. 'prod' → logprob: -1.668656826019287
    3. 'product' → logprob: -2.668656826019287
    4. ' prod' → logprob: -3.293656826019287
    5. '    
' → logprob: -4.168656826019287
    6. '   ' → logprob: -4.168656826019287
    7. ' product' → logprob: -4.418656826019287
    8. '=' → logprob: -5.918656826019287
    9. ' =' → logprob: -7.418656826019287
    10. '  
' → logprob: -8.418657302856445

Token 184: '   ' (ID: 271)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.751488983631134
    2. ' prod' → logprob: -1.0014889240264893
    3. 'prod' → logprob: -2.5014889240264893
    4. 'product' → logprob: -2.7514889240264893
    5. '   ' → logprob: -4.251489162445068
    6. '
' → logprob: -7.251489162445068
    7. ' =' → logprob: -9.12648868560791
    8. '    
' → logprob: -9.75148868560791
    9. '=' → logprob: -10.25148868560791
    10. ' result' → logprob: -11.75148868560791

Token 185: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' (adapté à ' prod') → logprob: -0.001733252196572721
    2. 'product' → logprob: -6.751733303070068
    3. ' prod' → logprob: -7.501733303070068
    4. ' product' → logprob: -11.50173282623291
    5. 'mul' → logprob: -14.25173282623291
    6. 'pro' → logprob: -18.126733779907227
    7. 'mult' → logprob: -18.876733779907227
    8. '   ' → logprob: -19.626733779907227
    9. ' produit' → logprob: -19.626733779907227
    10. '_prod' → logprob: -20.126733779907227

Token 186: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -3.666993507067673e-05
    2. '_' → logprob: -10.250036239624023
    3. '_AB' → logprob: -15.000036239624023
    4. ' _' → logprob: -15.125036239624023
    5. '_a' → logprob: -15.750036239624023
    6. '_an' → logprob: -16.000036239624023
    7. ' =' → logprob: -16.125036239624023
    8. '_abs' → logprob: -16.625036239624023
    9. '=_' → logprob: -16.875036239624023
    10. '   ' → logprob: -17.125036239624023

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. '=A' → logprob: -15.011871337890625
    4. '   ' → logprob: -16.636871337890625
    5. ' ' → logprob: -17.136871337890625
    6. '_' → logprob: -18.511871337890625
    7. '＝' → logprob: -18.761871337890625
    8. 's' → logprob: -19.386871337890625
    9. ' ' → logprob: -19.511871337890625
    10. ')' → logprob: -20.261871337890625

Token 188: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.018150413408875465
    2. 'A' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. '	A' → logprob: -16.518150329589844
    5. '   ' → logprob: -17.393150329589844
    6. ' ' → logprob: -17.768150329589844
    7. '  ' → logprob: -18.518150329589844
    8. ' А' → logprob: -20.143150329589844
    9. '_A' → logprob: -20.643150329589844
    10. '(A' → logprob: -21.143150329589844

Token 189: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20142094790935516
    2. ' *' → logprob: -1.7014209032058716
    3. ' ' → logprob: -12.076420783996582
    4. ' ' → logprob: -13.326420783996582
    5. '_' → logprob: -16.4514217376709
    6. '   ' → logprob: -17.5764217376709
    7. '*A' → logprob: -17.5764217376709
    8. '[' → logprob: -17.7014217376709
    9. '  ' → logprob: -17.7014217376709
    10. '**' → logprob: -17.7014217376709

Token 190: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1269325166940689
    2. ' B' → logprob: -2.1269326210021973
    3. ' ' → logprob: -12.376932144165039
    4. '	B' → logprob: -16.25193214416504
    5. '   ' → logprob: -17.12693214416504
    6. '_B' → logprob: -17.25193214416504
    7. '  ' → logprob: -17.25193214416504
    8. ' ' → logprob: -17.62693214416504
    9. '```' → logprob: -18.43943214416504
    10. 'b' → logprob: -18.50193214416504

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13047577440738678
    2. '    
' → logprob: -3.0054757595062256
    3. 'max' → logprob: -3.3804757595062256
    4. '   ' → logprob: -3.5054757595062256
    5. 'result' → logprob: -5.130475997924805
    6. '\n' → logprob: -7.130475997924805
    7. '  
' → logprob: -7.505475997924805
    8. ' max' → logprob: -7.505475997924805
    9. 'maximum' → logprob: -8.505475997924805
    10. '   
' → logprob: -8.630475997924805

Token 192: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12421385943889618
    2. '   ' → logprob: -2.624213933944702
    3. 'max' → logprob: -3.624213933944702
    4. '    
' → logprob: -4.374213695526123
    5. 'result' → logprob: -5.499213695526123
    6. ' max' → logprob: -8.124214172363281
    7. '\n' → logprob: -8.499214172363281
    8. 'return' → logprob: -8.999214172363281
    9. '  
' → logprob: -9.499214172363281
    10. ' result' → logprob: -9.749214172363281

Token 193: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03510723263025284
    2. '#' (adapté à ' #') → logprob: -4.035107135772705
    3. 'result' → logprob: -4.660107135772705
    4. 'maximum' → logprob: -6.035107135772705
    5. 'return' → logprob: -6.160107135772705
    6. '   ' → logprob: -6.660107135772705
    7. 'print' → logprob: -7.160107135772705
    8. '
' → logprob: -7.910107135772705
    9. ' max' → logprob: -8.035107612609863
    10. '    
' → logprob: -9.785107612609863

Token 194: ' Trou' (ID: 58947)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06357905268669128
    2. ' max' → logprob: -3.0635790824890137
    3. 'print' → logprob: -4.938579082489014
    4. 'maximum' → logprob: -5.438579082489014
    5. 'result' → logprob: -6.563579082489014
    6. '#' → logprob: -7.063579082489014
    7. ' maximum' → logprob: -7.188579082489014
    8. ' print' → logprob: -8.688578605651855
    9. ' result' → logprob: -9.188578605651855
    10. 'return' → logprob: -10.313578605651855

Token 195: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.00017231269157491624
    2. '   ' → logprob: -9.12517261505127
    3. 've' → logprob: -10.12517261505127
    4. 'v' → logprob: -11.62517261505127
    5. 'vez' → logprob: -12.50017261505127
    6. '#' → logprob: -12.62517261505127
    7. '       ' → logprob: -13.25017261505127
    8. 'er' → logprob: -13.37517261505127
    9. '    ' → logprob: -14.12517261505127
    10. '     ' → logprob: -14.37517261505127

Token 196: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5133974552154541
    2. ' le' → logprob: -1.888397455215454
    3. 'le' → logprob: -2.138397455215454
    4. ' max' → logprob: -2.513397455215454
    5. ' la' → logprob: -3.388397455215454
    6. 'la' → logprob: -5.013397216796875
    7. ' l' → logprob: -6.013397216796875
    8. 'l' → logprob: -6.013397216796875
    9. 'maximum' → logprob: -6.513397216796875
    10. ' maximum' → logprob: -7.013397216796875

Token 197: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05098676681518555
    2. ' max' → logprob: -3.1759867668151855
    3. ' valeur' → logprob: -5.8009867668151855
    4. 'val' → logprob: -6.3009867668151855
    5. ' maximum' → logprob: -6.5509867668151855
    6. 'maximum' → logprob: -6.8009867668151855
    7. ' maximale' → logprob: -7.6759867668151855
    8. ' maximal' → logprob: -10.675987243652344
    9. 'value' → logprob: -11.175987243652344
    10. '_max' → logprob: -11.675987243652344

Token 198: ' maximale' (ID: 76380)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7698231339454651
    2. ' maximale' → logprob: -1.2698230743408203
    3. 'max' → logprob: -1.3948230743408203
    4. ' max' → logprob: -5.14482307434082
    5. ' maximum' → logprob: -6.76982307434082
    6. 'maximum' → logprob: -7.39482307434082
    7. '_' → logprob: -8.01982307434082
    8. ' _' → logprob: -9.89482307434082
    9. ' maximal' → logprob: -9.89482307434082
    10. '_m' → logprob: -10.51982307434082

Token 199: ' parmi' (ID: 51713)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11463038623332977
    2. ' maximale' → logprob: -3.3646304607391357
    3. ' max' → logprob: -3.4896304607391357
    4. '   ' → logprob: -3.6146304607391357
    5. 'maximum' → logprob: -4.989630222320557
    6. ' maximum' → logprob: -5.864630222320557
    7. '    
' → logprob: -6.489630222320557
    8. 'result' → logprob: -6.739630222320557
    9. ' =' → logprob: -6.989630222320557
    10. '_max' → logprob: -7.114630222320557

Token 200: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.008895817212760448
    2. '[' → logprob: -5.0088958740234375
    3. ' sum' → logprob: -6.3838958740234375
    4. '(sum' → logprob: -7.6338958740234375
    5. '   ' → logprob: -12.883895874023438
    6. ' [' → logprob: -13.133895874023438
    7. '	sum' → logprob: -15.133895874023438
    8. '```' → logprob: -15.133895874023438
    9. '=sum' → logprob: -15.883895874023438
    10. '.sum' → logprob: -16.383895874023438

Token 201: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012750022113323212
    2. ' sum' → logprob: -4.387750148773193
    3. ' somme' → logprob: -8.512749671936035
    4. '[' → logprob: -11.262749671936035
    5. ' three' → logprob: -11.762749671936035
    6. 'three' → logprob: -12.387749671936035
    7. '3' → logprob: -12.387749671936035
    8. 's' → logprob: -12.637749671936035
    9. '(sum' → logprob: -12.887749671936035
    10. ' trois' → logprob: -13.387749671936035

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012671275995671749
    2. ',sum' → logprob: -5.13767147064209
    3. 'sum' → logprob: -5.26267147064209
    4. ' ,' → logprob: -6.51267147064209
    5. 'diff' → logprob: -10.63767147064209
    6. '   ' → logprob: -11.76267147064209
    7. '(sum' → logprob: -12.13767147064209
    8. '_,' → logprob: -12.38767147064209
    9. ' sum' → logprob: -12.63767147064209
    10. '_sum' → logprob: -12.63767147064209

Token 203: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.19391977787017822
    2. ' diff' → logprob: -2.4439196586608887
    3. ' la' → logprob: -2.5689196586608887
    4. 'la' → logprob: -4.818919658660889
    5. '   ' → logprob: -5.443919658660889
    6. '	diff' → logprob: -8.318920135498047
    7. ' ' → logprob: -9.318920135498047
    8. 'difference' → logprob: -10.443920135498047
    9. '  ' → logprob: -10.818920135498047
    10. '(diff' → logprob: -11.318920135498047

Token 204: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0005626845522783697
    2. ' différence' → logprob: -7.75056266784668
    3. ' diff' → logprob: -9.50056266784668
    4. 'difference' → logprob: -10.12556266784668
    5. 's' → logprob: -12.00056266784668
    6. ' somme' → logprob: -12.62556266784668
    7. '	diff' → logprob: -12.75056266784668
    8. '   ' → logprob: -13.37556266784668
    9. ' ' → logprob: -13.87556266784668
    10. '#' → logprob: -14.75056266784668

Token 205: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005369475693441927
    2. ' ,' → logprob: -8.125536918640137
    3. '   ' → logprob: -9.625536918640137
    4. 'et' → logprob: -9.875536918640137
    5. 'diff' → logprob: -9.875536918640137
    6. ',sum' → logprob: -10.125536918640137
    7. ' et' → logprob: -10.750536918640137
    8. 'sum' → logprob: -12.375536918640137
    9. ' and' → logprob: -14.125536918640137
    10. 'and' → logprob: -14.250536918640137

Token 206: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.1607697606086731
    2. ' le' → logprob: -1.9107697010040283
    3. 'la' → logprob: -8.41076946258545
    4. 'prod' → logprob: -8.41076946258545
    5. ' la' → logprob: -10.41076946258545
    6. '   ' → logprob: -11.03576946258545
    7. 'produ' → logprob: -11.41076946258545
    8. ' prod' → logprob: -11.66076946258545
    9. 'the' → logprob: -12.16076946258545
    10. 'leur' → logprob: -12.28576946258545

Token 207: ' produit' (ID: 29429)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.3928666412830353
    2. ' produit' → logprob: -1.267866611480713
    3. 'prod' → logprob: -3.142866611480713
    4. 'product' → logprob: -8.892867088317871
    5. ' prod' → logprob: -9.642867088317871
    6. 'pro' → logprob: -10.767867088317871
    7. ' ' → logprob: -11.267867088317871
    8. '   ' → logprob: -11.642867088317871
    9. 'Produit' → logprob: -11.642867088317871
    10. 'produce' → logprob: -12.142867088317871

Token 208: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.565996527671814
    2. '   ' → logprob: -0.940996527671814
    3. ' max' → logprob: -3.3159966468811035
    4. '
' → logprob: -6.0659966468811035
    5. 'maximum' → logprob: -6.9409966468811035
    6. '    
' → logprob: -7.1909966468811035
    7. 'result' → logprob: -7.3159966468811035
    8. ' maximum' → logprob: -7.4409966468811035
    9. 'return' → logprob: -8.940996170043945
    10. ' result' → logprob: -9.690996170043945

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28316861391067505
    2. 'max' → logprob: -1.7831685543060303
    3. ' max' → logprob: -2.6581685543060303
    4. 'result' → logprob: -5.658168792724609
    5. ' maximum' → logprob: -6.408168792724609
    6. ' result' → logprob: -6.783168792724609
    7. 'maximum' → logprob: -6.783168792724609
    8. ' return' → logprob: -7.908168792724609
    9. '    
' → logprob: -8.15816879272461
    10. 'return' → logprob: -8.28316879272461

Token 210: ' result' (ID: 1534)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.030473317950963974
    2. ' max' → logprob: -3.530473232269287
    3. 'maximum' → logprob: -7.905473232269287
    4. 'return' → logprob: -8.780473709106445
    5. '   ' → logprob: -9.280473709106445
    6. 'result' (adapté à ' result') → logprob: -9.780473709106445
    7. ' maximum' → logprob: -10.280473709106445
    8. ' return' → logprob: -11.530473709106445
    9. ' result' → logprob: -12.655473709106445
    10. '`' → logprob: -13.530473709106445

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411003708839417
    2. '=' → logprob: -0.9741100072860718
    3. '_' → logprob: -10.599109649658203
    4. '   ' → logprob: -12.099109649658203
    5. '_max' → logprob: -14.224109649658203
    6. ' ' → logprob: -14.599109649658203
    7. 's' → logprob: -14.724109649658203
    8. ')' → logprob: -15.474109649658203
    9. '=max' → logprob: -15.849109649658203
    10. '_result' → logprob: -16.224109649658203

Token 212: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12692810595035553
    2. 'max' → logprob: -2.1269280910491943
    3. '(max' → logprob: -17.501928329467773
    4. '	max' → logprob: -19.126928329467773
    5. '=max' → logprob: -20.126928329467773
    6. ' ' → logprob: -20.251928329467773
    7. ' maximum' → logprob: -20.376928329467773
    8. '   ' → logprob: -20.376928329467773
    9. '_max' → logprob: -20.876928329467773
    10. '[max' → logprob: -21.001928329467773

Token 213: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.0003396343090571463
    2. '(' → logprob: -8.00033950805664
    3. 'sum' → logprob: -12.50033950805664
    4. ' (' → logprob: -15.37533950805664
    5. ' sum' → logprob: -17.12533950805664
    6. '_sum' → logprob: -17.12533950805664
    7. '(
' → logprob: -17.25033950805664
    8. '=sum' → logprob: -17.50033950805664
    9. '((' → logprob: -17.75033950805664
    10. ',sum' → logprob: -18.12533950805664

Token 214: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -1.1637164789135568e-05
    2. 'ab' → logprob: -11.500011444091797
    3. 'sum' → logprob: -13.750011444091797
    4. '(sum' → logprob: -15.250011444091797
    5. '_sum' → logprob: -16.500011444091797
    6. '_AB' → logprob: -17.125011444091797
    7. '_,' → logprob: -17.125011444091797
    8. '_' → logprob: -17.125011444091797
    9. 'Ab' → logprob: -18.000011444091797
    10. 's' → logprob: -18.750011444091797

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008180848672054708
    2. ' ,' → logprob: -7.125818252563477
    3. 'diff' → logprob: -11.375818252563477
    4. ' diff' → logprob: -13.375818252563477
    5. ',d' → logprob: -15.125818252563477
    6. ')' → logprob: -15.875818252563477
    7. ',
' → logprob: -16.500818252563477
    8. '(diff' → logprob: -16.500818252563477
    9. '_diff' → logprob: -17.500818252563477
    10. ',sum' → logprob: -18.500818252563477

Token 216: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0009126556105911732
    2. 'diff' → logprob: -7.000912666320801
    3. '	diff' → logprob: -14.0009126663208
    4. '(diff' → logprob: -15.1259126663208
    5. ' ' → logprob: -16.750911712646484
    6. ' ' → logprob: -17.500911712646484
    7. '_diff' → logprob: -17.625911712646484
    8. ' dif' → logprob: -17.875911712646484
    9. '.diff' → logprob: -19.125911712646484
    10. ' diffusion' → logprob: -20.500911712646484

Token 217: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -6.511406809295295e-06
    2. 'ab' → logprob: -12.000006675720215
    3. '_' → logprob: -16.2500057220459
    4. 'diff' → logprob: -16.8750057220459
    5. '_AB' → logprob: -17.2500057220459
    6. ' _' → logprob: -17.6250057220459
    7. '_diff' → logprob: -17.7500057220459
    8. 'prod' → logprob: -18.2500057220459
    9. ',_' → logprob: -18.3750057220459
    10. '_prod' → logprob: -18.8750057220459

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012368128227535635
    2. ' ,' → logprob: -9.000123977661133
    3. ',
' → logprob: -15.875123977661133
    4. 'prod' → logprob: -16.500123977661133
    5. ')' → logprob: -17.875123977661133
    6. ',p' → logprob: -18.875123977661133
    7. ' prod' → logprob: -19.500123977661133
    8. '   ' → logprob: -19.625123977661133
    9. ',

' → logprob: -20.500123977661133
    10. '_,' → logprob: -21.000123977661133

Token 219: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.005234121344983578
    2. 'prod' → logprob: -5.255234241485596
    3. '(prod' → logprob: -15.880233764648438
    4. '.prod' → logprob: -16.255233764648438
    5. '_prod' → logprob: -16.505233764648438
    6. ' product' → logprob: -17.005233764648438
    7. ' ' → logprob: -17.130233764648438
    8. ' Prod' → logprob: -18.505233764648438
    9. ' diff' → logprob: -18.880233764648438
    10. 'Prod' → logprob: -18.880233764648438

Token 220: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -2.1888679839321412e-05
    2. 'ab' → logprob: -10.750021934509277
    3. '_prod' → logprob: -15.625021934509277
    4. '_pb' → logprob: -16.12502098083496
    5. '_b' → logprob: -17.00002098083496
    6. 'Ab' → logprob: -17.00002098083496
    7. '_AB' → logprob: -17.25002098083496
    8. 'prod' → logprob: -17.25002098083496
    9. '_' → logprob: -17.62502098083496
    10. ' _' → logprob: -18.50002098083496

Token 221: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.625001907348633
    4. ' )' → logprob: -17.625001907348633
    5. ')

' → logprob: -19.250001907348633
    6. ')
' → logprob: -20.375001907348633
    7. ')`' → logprob: -20.375001907348633
    8. '}' → logprob: -20.625001907348633
    9. '),' → logprob: -20.875001907348633
    10. '))' → logprob: -21.375001907348633

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010412635747343302
    2. 'print' → logprob: -7.251041412353516
    3. '
' → logprob: -8.251041412353516
    4. '    
' → logprob: -9.626041412353516
    5. ' print' → logprob: -12.876041412353516
    6. '```' → logprob: -13.376041412353516
    7. '\n' → logprob: -16.876041412353516
    8. '  
' → logprob: -16.876041412353516
    9. '
' → logprob: -17.126041412353516
    10. '       ' → logprob: -18.126041412353516

Token 223: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023943254724144936
    2. '   ' → logprob: -3.7739431858062744
    3. ' print' → logprob: -7.2739434242248535
    4. '```' → logprob: -12.648942947387695
    5. '
' → logprob: -14.523942947387695
    6. '    
' → logprob: -15.023942947387695
    7. '	print' → logprob: -17.523942947387695
    8. '  ' → logprob: -18.273942947387695
    9. 'return' → logprob: -18.898942947387695
    10. '  
' → logprob: -18.898942947387695

Token 224: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02976737916469574
    2. ' print' → logprob: -3.5297672748565674
    3. '   ' → logprob: -11.029767036437988
    4. 'aff' → logprob: -15.404767036437988
    5. 'return' → logprob: -15.529767036437988
    6. 'Afficher' → logprob: -16.029767990112305
    7. 'Print' → logprob: -16.529767990112305
    8. '#' → logprob: -16.779767990112305
    9. '```' → logprob: -17.154767990112305
    10. ' afficher' → logprob: -17.779767990112305

Token 225: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0012040425790473819
    2. '   ' → logprob: -7.376204013824463
    3. 'iche' → logprob: -7.626204013824463
    4. '#' → logprob: -9.501204490661621
    5. 'ic' → logprob: -12.501204490661621
    6. 'ichage' → logprob: -12.626204490661621
    7. 'ich' → logprob: -13.251204490661621
    8. 'cher' → logprob: -13.501204490661621
    9. 'f' → logprob: -14.251204490661621
    10. '```' → logprob: -14.376204490661621

Token 226: ' la' (ID: 557)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004181329160928726
    2. 'result' → logprob: -5.504181385040283
    3. ' result' → logprob: -9.879180908203125
    4. '(' → logprob: -9.879180908203125
    5. ' (' → logprob: -15.504180908203125
    6. ' resultat' → logprob: -16.879180908203125
    7. '=result' → logprob: -16.879180908203125
    8. '   ' → logprob: -17.004180908203125
    9. ',result' → logprob: -17.254180908203125
    10. '("' → logprob: -17.254180908203125

Token 227: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0010699660051614046
    2. ' result' → logprob: -7.001070022583008
    3. '(result' → logprob: -8.751070022583008
    4. ' resultat' → logprob: -16.751070022583008
    5. ' résultat' → logprob: -17.126070022583008
    6. '	result' → logprob: -18.251070022583008
    7. 'value' → logprob: -19.376070022583008
    8. '(' → logprob: -19.376070022583008
    9. 'resultado' → logprob: -19.501070022583008
    10. ',result' → logprob: -20.001070022583008

Token 228: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.03902885690331459
    2. 'result' → logprob: -3.7890288829803467
    3. 'max' → logprob: -5.039028644561768
    4. ' result' → logprob: -5.289028644561768
    5. '(result' → logprob: -6.414028644561768
    6. ' maximum' → logprob: -6.789028644561768
    7. '   ' → logprob: -7.289028644561768
    8. 'maximum' → logprob: -8.164029121398926
    9. ' maximal' → logprob: -8.914029121398926
    10. ' maxim' → logprob: -9.539029121398926

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05863828957080841
    2. '
' → logprob: -3.558638334274292
    3. 'print' → logprob: -3.683638334274292
    4. ' print' → logprob: -6.433638095855713
    5. '(result' → logprob: -7.308638095855713
    6. 'result' → logprob: -7.683638095855713
    7. '    
' → logprob: -8.558638572692871
    8. ' result' → logprob: -8.808638572692871
    9. ',' → logprob: -9.558638572692871
    10. '(print' → logprob: -9.683638572692871

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01712300442159176
    2. 'print' → logprob: -4.392123222351074
    3. ' print' → logprob: -5.392123222351074
    4. '
' → logprob: -11.142123222351074
    5. 'result' → logprob: -11.142123222351074
    6. ' result' → logprob: -11.642123222351074
    7. '```' → logprob: -11.767123222351074
    8. '(result' → logprob: -13.767123222351074
    9. '	print' → logprob: -13.892123222351074
    10. '(print' → logprob: -14.142123222351074

Token 231: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.0629870858974755e-05
    2. ' print' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.00006103515625
    4. '```' → logprob: -20.37506103515625
    5. 'pr' → logprob: -21.62506103515625
    6. '	print' → logprob: -23.50006103515625
    7. 'prin' → logprob: -24.37506103515625
    8. '  ' → logprob: -25.00006103515625
    9. 'Print' → logprob: -25.00006103515625
    10. '.print' → logprob: -25.25006103515625

Token 232: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.018154622986912727
    2. '(' → logprob: -4.018154621124268
    3. ' (' → logprob: -12.893155097961426
    4. '(res' → logprob: -14.143155097961426
    5. '(resultado' → logprob: -14.768155097961426
    6. '()' → logprob: -14.893155097961426
    7. 'result' → logprob: -15.643155097961426
    8. '(max' → logprob: -15.643155097961426
    9. '(results' → logprob: -15.893155097961426
    10. '(
' → logprob: -16.01815414428711

Token 233: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -18.625
    4. '()' → logprob: -19.25
    5. '())' → logprob: -19.5
    6. '')' → logprob: -20.0
    7. '))' → logprob: -20.25
    8. ')`' → logprob: -20.625
    9. '")' → logprob: -21.125
    10. '）' → logprob: -21.5

Token 234: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' App' (ID: 2583)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.05265294015407562
    2. 'c' → logprob: -3.4276528358459473
    3. 'def' → logprob: -4.552652835845947
    4. 'define' → logprob: -6.052652835845947
    5. '#' → logprob: -6.427652835845947
    6. 'd' → logprob: -6.552652835845947
    7. 'if' → logprob: -6.677652835845947
    8. '```' → logprob: -7.427652835845947
    9. 'cal' → logprob: -8.302653312683105
    10. ' calculate' → logprob: -8.302653312683105

Token 236: 'eler' (ID: 6998)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.617530345916748
    2. 'el' → logprob: -0.992530345916748
    3. 'ly' → logprob: -2.492530345916748
    4. 'l' → logprob: -5.742530345916748
    5. '#' → logprob: -6.742530345916748
    6. 'ely' → logprob: -7.492530345916748
    7. 'eler' → logprob: -8.117530822753906
    8. 'ele' → logprob: -8.367530822753906
    9. 'elé' → logprob: -8.492530822753906
    10. 'elate' → logprob: -8.867530822753906

Token 237: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.31328174471855164
    2. ' calculate' → logprob: -1.313281774520874
    3. '()' → logprob: -11.563282012939453
    4. 'def' → logprob: -12.563282012939453
    5. 'c' → logprob: -12.938282012939453
    6. 'alculate' → logprob: -14.063282012939453
    7. '.calculate' → logprob: -14.188282012939453
    8. '_' → logprob: -14.438282012939453
    9. '(' → logprob: -14.563282012939453
    10. '(c' → logprob: -14.688282012939453

Token 238: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -8.2994620242971e-06
    2. ' calculate' → logprob: -11.750008583068848
    3. 'def' → logprob: -15.250008583068848
    4. 'if' → logprob: -16.37500762939453
    5. 'calcul' → logprob: -18.75000762939453
    6. 'Calculate' → logprob: -19.37500762939453
    7. '```' → logprob: -19.62500762939453
    8. 'alculate' → logprob: -20.50000762939453
    9. 'define' → logprob: -20.62500762939453
    10. '.calculate' → logprob: -20.62500762939453

Token 239: ' principale' (ID: 68926)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -3.054500666621607e-06
    2. ' calculate' → logprob: -13.00000286102295
    3. '
' → logprob: -15.37500286102295
    4. '.calculate' → logprob: -15.37500286102295
    5. 'calcul' → logprob: -15.87500286102295
    6. 'def' → logprob: -16.125003814697266
    7. 'Calculate' → logprob: -16.875003814697266
    8. 'alculate' → logprob: -17.125003814697266
    9. '()
' → logprob: -18.000003814697266
    10. 'cal' → logprob: -18.375003814697266

Token 240: ' pour' (ID: 1930)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.048626311123371124
    2. '
' → logprob: -3.04862642288208
    3. '

' → logprob: -11.423625946044922
    4. ' calculate' → logprob: -11.923625946044922
    5. '
' → logprob: -12.173625946044922
    6. 'def' → logprob: -12.298625946044922
    7. '()
' → logprob: -13.173625946044922
    8. 'alculate' → logprob: -13.548625946044922
    9. '```' → logprob: -13.548625946044922
    10. '.calculate' → logprob: -13.548625946044922

Token 241: ' ex' (ID: 513)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.11970870941877365
    2. 'calcul' → logprob: -3.369708776473999
    3. 'ex' → logprob: -3.494708776473999
    4. 'execute' → logprob: -4.11970853805542
    5. ' calcul' → logprob: -4.24470853805542
    6. ' calculate' → logprob: -4.74470853805542
    7. ' ex' → logprob: -5.49470853805542
    8. ' lancer' → logprob: -6.49470853805542
    9. ' effectuer' → logprob: -7.24470853805542
    10. ' execut' → logprob: -7.36970853805542

Token 242: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.6045927405357361
    2. 'calculate' → logprob: -1.3545928001403809
    3. 'cute' → logprob: -2.229592800140381
    4. 'culate' → logprob: -2.854592800140381
    5. 'cut' → logprob: -4.604592800140381
    6. 'alculate' → logprob: -4.604592800140381
    7. 'ecut' → logprob: -6.479592800140381
    8. 'if' → logprob: -6.479592800140381
    9. 'ec' → logprob: -6.479592800140381
    10. 'cul' → logprob: -6.979592800140381

Token 243: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -5.080963092041202e-06
    2. 'ute' → logprob: -12.375004768371582
    3. 'cut' → logprob: -15.000004768371582
    4. 'ut' → logprob: -15.125004768371582
    5. 'uer' → logprob: -16.5000057220459
    6. 'utter' → logprob: -17.0000057220459
    7. 'urer' → logprob: -17.5000057220459
    8. 'ution' → logprob: -18.0000057220459
    9. 'uteur' → logprob: -18.1250057220459
    10. 'user' → logprob: -18.2500057220459

Token 244: ' le' (ID: 505)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -4.68022444692906e-05
    2. ' calculate' → logprob: -10.000046730041504
    3. 'def' → logprob: -14.375046730041504
    4. 'calcul' → logprob: -14.750046730041504
    5. 'alculate' → logprob: -15.750046730041504
    6. '```' → logprob: -16.75004768371582
    7. '.calculate' → logprob: -16.87504768371582
    8. '()' → logprob: -16.87504768371582
    9. 'compute' → logprob: -17.62504768371582
    10. 'Calculate' → logprob: -17.75004768371582

Token 245: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.9655733108520508
    2. 'code' → logprob: -1.2155733108520508
    3. 'calcul' → logprob: -1.2155733108520508
    4. 'calculate' → logprob: -4.340573310852051
    5. ' programme' → logprob: -5.340573310852051
    6. 'script' → logprob: -6.215573310852051
    7. ' calcul' → logprob: -6.215573310852051
    8. ' code' → logprob: -6.340573310852051
    9. 'cal' → logprob: -6.590573310852051
    10. 'program' → logprob: -7.340573310852051

Token 246: '
' (ID: 198)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0019353042589500546
    2. '
' → logprob: -6.2519354820251465
    3. ' calculate' → logprob: -12.501935005187988
    4. 'def' → logprob: -13.626935005187988
    5. 'if' → logprob: -14.001935005187988
    6. 'alculate' → logprob: -15.126935005187988
    7. '.calculate' → logprob: -15.251935005187988
    8. '```' → logprob: -15.626935005187988
    9. 'Calculate' → logprob: -15.876935005187988
    10. '
' → logprob: -16.251935958862305

Token 247: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: 0.0
    2. ' calculate' → logprob: -17.25
    3. 'if' → logprob: -19.875
    4. '.calculate' → logprob: -21.0
    5. 'def' → logprob: -22.75
    6. '```' → logprob: -22.75
    7. 'calcul' → logprob: -22.875
    8. 'Calculate' → logprob: -23.125
    9. 'compute' → logprob: -23.375
    10. 'alculate' → logprob: -23.75

Token 248: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0002135534887202084
    2. '_' → logprob: -8.500213623046875
    3. 'maximum' → logprob: -12.125213623046875
    4. 'max' → logprob: -12.750213623046875
    5. 'Maximum' → logprob: -14.250213623046875
    6. '_MAX' → logprob: -15.000213623046875
    7. ' maximum' → logprob: -15.250213623046875
    8. ' maximale' → logprob: -16.625213623046875
    9. '_Max' → logprob: -16.750213623046875
    10. '_)' → logprob: -16.750213623046875

Token 249: 'imum' (ID: 4556)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.14293991029262543
    2. 'imum' → logprob: -2.017939805984497
    3. 'ium' → logprob: -8.892939567565918
    4. 'ume' → logprob: -10.142939567565918
    5. 'mum' → logprob: -10.767939567565918
    6. 'ation' → logprob: -10.892939567565918
    7. 'ument' → logprob: -11.517939567565918
    8. '_' → logprob: -11.767939567565918
    9. 'umber' → logprob: -12.517939567565918
    10. 'umption' → logprob: -12.892939567565918

Token 250: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -2.2200749754119897e-06
    2. '_op' → logprob: -13.875001907348633
    3. '_' → logprob: -14.500001907348633
    4. 'operation' → logprob: -15.250001907348633
    5. '_operator' → logprob: -15.500001907348633
    6. '_oper' → logprob: -15.750001907348633
    7. '_operations' → logprob: -16.625001907348633
    8. '_OPERATION' → logprob: -18.250001907348633
    9. '_opcode' → logprob: -18.750001907348633
    10. '_operand' → logprob: -18.750001907348633

Token 251: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17018884420394897
    2. '<|end|>' → logprob: -2.0451889038085938
    3. ')' → logprob: -4.420188903808594
    4. '```' → logprob: -5.170188903808594
    5. '(' → logprob: -5.795188903808594
    6. '
' → logprob: -5.920188903808594
    7. '#' → logprob: -6.545188903808594
    8. '<|end|>' → logprob: -7.295188903808594
    9. '\n' → logprob: -7.795188903808594
    10. '()
' → logprob: -8.170188903808594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 249
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 37.75%
Précision adaptée (1ère position): 38.96%
Précision (top 10): 71.08%
================================================================================
