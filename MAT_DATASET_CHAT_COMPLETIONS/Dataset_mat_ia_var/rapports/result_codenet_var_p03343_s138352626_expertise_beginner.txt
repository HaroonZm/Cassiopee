================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k, q = map(int, input().split())
a = list(map(int, input().split()))
ans = 10**9

for i in a:
    temp_list = []
    group = []
    group_len = 0
    for num in a + [-1]:
        if num < i:
            if group_len >= k:
                group.sort()
                for x in range(group_len - k + 1):
                    temp_list.append(group[x])
            group = []
            group_len = 0
        else:
            group.append(num)
            group_len += 1
    if len(temp_list) < q:
        continue
    temp_list.sort()
    diff = temp_list[q-1] - i
    if diff < ans:
        ans = diff

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023713937029242516
    2. ' =' → logprob: -4.398714065551758
    3. ',' → logprob: -4.523714065551758
    4. ' ' → logprob: -10.148714065551758
    5. '*' → logprob: -10.273714065551758
    6. '+' → logprob: -10.398714065551758
    7. ')' → logprob: -10.398714065551758
    8. '[' → logprob: -10.648714065551758
    9. '.' → logprob: -10.773714065551758
    10. '_' → logprob: -10.773714065551758

Token 4: ' q' (ID: 2335)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22706231474876404
    2. ' =' → logprob: -1.6020623445510864
    3. ',' → logprob: -6.602062225341797
    4. ' ' → logprob: -8.727062225341797
    5. ')' → logprob: -9.727062225341797
    6. ';' → logprob: -10.977062225341797
    7. '.' → logprob: -11.102062225341797
    8. ' ,' → logprob: -12.102062225341797
    9. '_' → logprob: -12.352062225341797
    10. '*' → logprob: -12.727062225341797

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07337744534015656
    2. ' =' → logprob: -2.6983773708343506
    3. ',' → logprob: -6.19837760925293
    4. ' ' → logprob: -7.07337760925293
    5. '.' → logprob: -8.32337760925293
    6. '[' → logprob: -9.19837760925293
    7. ')' → logprob: -9.82337760925293
    8. '_' → logprob: -10.07337760925293
    9. ''' → logprob: -10.44837760925293
    10. ';' → logprob: -10.69837760925293

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6193147301673889
    2. 'map' → logprob: -1.1193146705627441
    3. 'input' → logprob: -2.369314670562744
    4. ' input' → logprob: -3.494314670562744
    5. ' ' → logprob: -5.619314670562744
    6. '0' → logprob: -5.869314670562744
    7. ' n' → logprob: -6.494314670562744
    8. ' list' → logprob: -6.619314670562744
    9. 'list' → logprob: -6.744314670562744
    10. 'n' → logprob: -8.369315147399902

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015135243535041809
    2. '(lambda' → logprob: -4.765135288238525
    3. '(int' → logprob: -5.640135288238525
    4. '(str' → logprob: -6.515135288238525
    5. '```' → logprob: -7.890135288238525
    6. '<|end|>' → logprob: -7.890135288238525
    7. '(input' → logprob: -8.890134811401367
    8. ')' → logprob: -9.265134811401367
    9. '(
' → logprob: -9.765134811401367
    10. '(user' → logprob: -10.015134811401367

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012549558654427528
    2. 'input' → logprob: -5.13754940032959
    3. ')' → logprob: -5.63754940032959
    4. '(' → logprob: -5.88754940032959
    5. ' input' → logprob: -9.51254940032959
    6. '(int' → logprob: -9.51254940032959
    7. '=input' → logprob: -10.13754940032959
    8. ',input' → logprob: -11.01254940032959
    9. '(str' → logprob: -11.13754940032959
    10. '<input' → logprob: -11.38754940032959

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16028881072998047
    2. ' input' → logprob: -1.9102888107299805
    3. '(input' → logprob: -9.66028881072998
    4. ')' → logprob: -14.91028881072998
    5. ',input' → logprob: -15.03528881072998
    6. '=input' → logprob: -15.66028881072998
    7. '```' → logprob: -17.410289764404297
    8. '<input' → logprob: -17.660289764404297
    9. '	input' → logprob: -17.910289764404297
    10. '[input' → logprob: -18.660289764404297

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2824134826660156
    2. '())' → logprob: -2.0324134826660156
    3. ')' → logprob: -3.0324134826660156
    4. '(' → logprob: -3.2824134826660156
    5. '('' → logprob: -4.907413482666016
    6. '().' → logprob: -5.532413482666016
    7. '("")' → logprob: -5.907413482666016
    8. '(""))' → logprob: -5.907413482666016
    9. '();)' → logprob: -6.282413482666016
    10. '(()' → logprob: -6.407413482666016

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004754751571454108
    2. 'strip' → logprob: -7.7504754066467285
    3. 'rstrip' → logprob: -10.250475883483887
    4. 'read' → logprob: -12.125475883483887
    5. ' split' → logprob: -13.250475883483887
    6. ')' → logprob: -13.625475883483887
    7. '(split' → logprob: -14.375475883483887
    8. 'spl' → logprob: -15.125475883483887
    9. 'startswith' → logprob: -16.37547492980957
    10. '```' → logprob: -16.87547492980957

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041935864835977554
    2. '())' → logprob: -3.666935920715332
    3. '))' → logprob: -4.541935920715332
    4. '('' → logprob: -5.791935920715332
    5. '()' → logprob: -7.041935920715332
    6. '(' → logprob: -8.041935920715332
    7. '`)' → logprob: -8.416935920715332
    8. '()))' → logprob: -8.541935920715332
    9. '')' → logprob: -9.916935920715332
    10. '```' → logprob: -10.291935920715332

Token 13: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04450729489326477
    2. 'arr' → logprob: -3.4195072650909424
    3. 's' → logprob: -5.7945075035095215
    4. 'array' → logprob: -6.5445075035095215
    5. '\n' → logprob: -6.6695075035095215
    6. 'for' → logprob: -6.6695075035095215
    7. 'n' → logprob: -7.5445075035095215
    8. 'ar' → logprob: -7.6695075035095215
    9. 'numbers' → logprob: -7.6695075035095215
    10. '\' → logprob: -7.7945075035095215

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014492308720946312
    2. '[a' → logprob: -5.014492511749268
    3. '.' → logprob: -5.639492511749268
    4. '=' → logprob: -6.889492511749268
    5. 'a' → logprob: -7.139492511749268
    6. ' =' → logprob: -7.264492511749268
    7. '[]' → logprob: -7.514492511749268
    8. '[:]' → logprob: -7.889492511749268
    9. '\[' → logprob: -9.01449203491211
    10. '.append' → logprob: -9.26449203491211

Token 15: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6964661478996277
    2. ' list' → logprob: -1.5714662075042725
    3. '[]' → logprob: -2.3214662075042725
    4. ' [' → logprob: -2.5714662075042725
    5. '[' → logprob: -2.6964662075042725
    6. ' []' → logprob: -3.3214662075042725
    7. '[list' → logprob: -4.571465969085693
    8. '[a' → logprob: -5.946465969085693
    9. '[int' → logprob: -6.321465969085693
    10. '[input' → logprob: -7.446465969085693

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012884302996098995
    2. '(a' → logprob: -4.887884140014648
    3. '(range' → logprob: -5.887884140014648
    4. '(int' → logprob: -7.012884140014648
    5. '(input' → logprob: -7.137884140014648
    6. '```' → logprob: -9.137884140014648
    7. '(map' → logprob: -9.762884140014648
    8. '(np' → logprob: -9.887884140014648
    9. 'a' → logprob: -9.887884140014648
    10. '()' → logprob: -10.137884140014648

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16162030398845673
    2. '(' → logprob: -1.9116202592849731
    3. '(str' → logprob: -6.786620140075684
    4. '(input' → logprob: -8.786620140075684
    5. '<int' → logprob: -10.661620140075684
    6. '(eval' → logprob: -10.911620140075684
    7. '(lambda' → logprob: -10.911620140075684
    8. 'int' → logprob: -11.411620140075684
    9. '[int' → logprob: -12.036620140075684
    10. '(
' → logprob: -12.161620140075684

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03916069492697716
    2. ',input' → logprob: -3.78916072845459
    3. ',' → logprob: -4.28916072845459
    4. '(' → logprob: -6.28916072845459
    5. '=input' → logprob: -9.66416072845459
    6. '(int' → logprob: -10.16416072845459
    7. 'input' → logprob: -10.16416072845459
    8. '```' → logprob: -10.78916072845459
    9. '<input' → logprob: -11.28916072845459
    10. ')' → logprob: -11.66416072845459

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023283451795578003
    2. ' input' → logprob: -3.7732834815979004
    3. '(input' → logprob: -10.273283004760742
    4. ',input' → logprob: -13.023283004760742
    5. '=input' → logprob: -14.523283004760742
    6. '<input' → logprob: -15.523283004760742
    7. '	input' → logprob: -15.898283004760742
    8. ')' → logprob: -16.398283004760742
    9. ' ' → logprob: -16.398283004760742
    10. 'list' → logprob: -17.273283004760742

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.021598489955067635
    2. '(.' → logprob: -3.8965985774993896
    3. '(' → logprob: -7.1465983390808105
    4. '()' → logprob: -8.771598815917969
    5. '.' → logprob: -9.646598815917969
    6. ')' → logprob: -12.021598815917969
    7. ').' → logprob: -12.146598815917969
    8. '(int' → logprob: -12.146598815917969
    9. '())' → logprob: -12.146598815917969
    10. ' .' → logprob: -12.521598815917969

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.500000953674316
    3. '(split' → logprob: -15.625000953674316
    4. ' split' → logprob: -16.125
    5. 'rstrip' → logprob: -18.125
    6. 'spl' → logprob: -18.625
    7. ')' → logprob: -20.875
    8. 'plit' → logprob: -21.375
    9. 'read' → logprob: -21.5
    10. '_split' → logprob: -22.125

Token 22: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6391662359237671
    2. '))' → logprob: -0.8891662359237671
    3. '()))' → logprob: -3.1391663551330566
    4. '(' → logprob: -4.389166355133057
    5. '())' → logprob: -5.389166355133057
    6. '()' → logprob: -7.139166355133057
    7. ')))' → logprob: -9.264165878295898
    8. ''))' → logprob: -11.264165878295898
    9. ')(' → logprob: -11.764165878295898
    10. '),' → logprob: -11.764165878295898

Token 23: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025948988273739815
    2. 's' → logprob: -4.400949001312256
    3. 'q' → logprob: -5.400949001312256
    4. 'queries' → logprob: -5.900949001312256
    5. 'x' → logprob: -7.025949001312256
    6. 'b' → logprob: -7.150949001312256
    7. 'r' → logprob: -7.150949001312256
    8. 'm' → logprob: -7.525949001312256
    9. 'result' → logprob: -7.650949001312256
    10. 'c' → logprob: -7.775949001312256

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6566991209983826
    2. '=' → logprob: -1.2816991806030273
    3. '_' → logprob: -1.9066991806030273
    4. '[' → logprob: -3.0316991806030273
    5. '(' → logprob: -6.406699180603027
    6. 's' → logprob: -6.531699180603027
    7. '[:]' → logprob: -6.531699180603027
    8. '[]' → logprob: -7.406699180603027
    9. ')' → logprob: -7.656699180603027
    10. ' ' → logprob: -8.156699180603027

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8847213983535767
    2. ' []' → logprob: -1.7597213983535767
    3. '[' → logprob: -1.8847213983535767
    4. ' ' → logprob: -2.009721279144287
    5. ' [' → logprob: -2.759721279144287
    6. '[]' → logprob: -2.884721279144287
    7. 'a' → logprob: -5.634721279144287
    8. '[a' → logprob: -6.009721279144287
    9. ' a' → logprob: -6.384721279144287
    10. '"' → logprob: -7.009721279144287

Token 26: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6939420700073242
    2. '[]' → logprob: -1.1939420700073242
    3. '[' → logprob: -1.6939420700073242
    4. 'a' → logprob: -5.443942070007324
    5. '[max' → logprob: -5.693942070007324
    6. '[a' → logprob: -6.693942070007324
    7. 'max' → logprob: -6.693942070007324
    8. 'sum' → logprob: -6.818942070007324
    9. 'k' → logprob: -7.443942070007324
    10. '[k' → logprob: -7.818942070007324

Token 27: '**' (ID: 410)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9888808727264404
    2. '0' → logprob: -1.4888808727264404
    3. '**' → logprob: -1.6138808727264404
    4. ')' → logprob: -2.8638808727264404
    5. '_' → logprob: -2.8638808727264404
    6. '*' → logprob: -4.2388811111450195
    7. '=' → logprob: -4.7388811111450195
    8. '-' → logprob: -4.7388811111450195
    9. ' ' → logprob: -4.9888811111450195
    10. '\' → logprob: -5.1138811111450195

Token 28: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005054924986325204
    2. '18' → logprob: -8.375505447387695
    3. '10' → logprob: -8.750505447387695
    4. '7' → logprob: -10.375505447387695
    5. '8' → logprob: -10.375505447387695
    6. '6' → logprob: -10.875505447387695
    7. '15' → logprob: -11.000505447387695
    8. '12' → logprob: -11.500505447387695
    9. '11' → logprob: -13.125505447387695
    10. '5' → logprob: -13.250505447387695

Token 29: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21561118960380554
    2. ' ' → logprob: -2.715611219406128
    3. '<|end|>' → logprob: -2.840611219406128
    4. '
' → logprob: -3.215611219406128
    5. ' 
' → logprob: -4.590610980987549
    6. '-' → logprob: -5.965610980987549
    7. '*' → logprob: -6.215610980987549
    8. 'for' → logprob: -6.215610980987549
    9. '\' → logprob: -6.465610980987549
    10. '  
' → logprob: -6.590610980987549

Token 30: 'for' (ID: 1938)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3379606008529663
    2. 'for' → logprob: -1.3379606008529663
    3. ' ' → logprob: -1.5879606008529663
    4. '+' → logprob: -2.462960720062256
    5. '
' → logprob: -2.462960720062256
    6. ' for' → logprob: -2.837960720062256
    7. '-' → logprob: -4.462960720062256
    8. '<|end|>' → logprob: -4.712960720062256
    9. ')' → logprob: -4.837960720062256
    10. '  
' → logprob: -5.962960720062256

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32541677355766296
    2. ' ' → logprob: -1.3254168033599854
    3. '_' → logprob: -5.200416564941406
    4. ' _' → logprob: -5.450416564941406
    5. 'i' → logprob: -6.575416564941406
    6. ' ‌' → logprob: -7.200416564941406
    7. '  ' → logprob: -9.325416564941406
    8. '_i' → logprob: -11.450416564941406
    9. ' ▁' → logprob: -11.700416564941406
    10. ' ' → logprob: -11.825416564941406

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014403834007680416
    2. 'in' → logprob: -4.514403820037842
    3. ' ' → logprob: -5.764403820037842
    4. '  ' → logprob: -9.389404296875
    5. 'range' → logprob: -10.639404296875
    6. ' range' → logprob: -10.889404296875
    7. ' i' → logprob: -11.139404296875
    8. ')' → logprob: -11.264404296875
    9. '	in' → logprob: -11.389404296875
    10. '<|end|>' → logprob: -11.639404296875

Token 33: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023258404806256294
    2. 'range' → logprob: -3.7732584476470947
    3. ' ' → logprob: -12.148258209228516
    4. ' a' → logprob: -13.023258209228516
    5. '	range' → logprob: -13.023258209228516
    6. ' xrange' → logprob: -13.398258209228516
    7. '(range' → logprob: -15.273258209228516
    8. '  ' → logprob: -15.273258209228516
    9. ' ' → logprob: -15.398258209228516
    10. ' ran' → logprob: -15.648258209228516

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037488907109946012
    2. ' :' → logprob: -5.753748893737793
    3. '[:]' → logprob: -7.878748893737793
    4. '[' → logprob: -9.003748893737793
    5. '[:' → logprob: -10.628748893737793
    6. '.' → logprob: -11.878748893737793
    7. '):' → logprob: -12.253748893737793
    8. ':
' → logprob: -12.253748893737793
    9. ':**' → logprob: -12.503748893737793
    10. ')' → logprob: -12.503748893737793

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14217589795589447
    2. '    ' → logprob: -2.5171759128570557
    3. ' i' → logprob: -4.267175674438477
    4. ''' → logprob: -4.267175674438477
    5. '   ' → logprob: -4.767175674438477
    6. '<|end|>' → logprob: -5.892175674438477
    7. '"' → logprob: -6.517175674438477
    8. ':' → logprob: -6.642175674438477
    9. '  ' → logprob: -6.642175674438477
    10. ' (' → logprob: -6.767175674438477

Token 36: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7248054146766663
    2. ' ' → logprob: -0.9748054146766663
    3. ' i' → logprob: -3.0998053550720215
    4. '    ' → logprob: -3.0998053550720215
    5. '   ' → logprob: -4.2248053550720215
    6. 'if' → logprob: -4.4748053550720215
    7. ' for' → logprob: -4.7248053550720215
    8. ' ans' → logprob: -5.5998053550720215
    9. 'for' → logprob: -6.2248053550720215
    10. ' a' → logprob: -6.7248053550720215

Token 37: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03198521211743355
    2. '=' → logprob: -4.031985282897949
    3. '_' → logprob: -4.906985282897949
    4. ' ' → logprob: -5.656985282897949
    5. ' +=' → logprob: -6.656985282897949
    6. ' -=' → logprob: -7.156985282897949
    7. ' _' → logprob: -8.53198528289795
    8. '_space' → logprob: -8.65698528289795
    9. '    ' → logprob: -9.78198528289795
    10. ' ==' → logprob: -9.90698528289795

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020756876096129417
    2. '.' → logprob: -4.645756721496582
    3. '=' → logprob: -4.770756721496582
    4. '.append' → logprob: -6.145756721496582
    5. ' .' → logprob: -9.145756721496582
    6. '[:]' → logprob: -9.895756721496582
    7. '[' → logprob: -10.020756721496582
    8. '_' → logprob: -10.520756721496582
    9. '.extend' → logprob: -10.895756721496582
    10. ' .=' → logprob: -11.145756721496582

Token 39: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.36017560958862305
    2. '[i' → logprob: -2.235175609588623
    3. '[a' → logprob: -2.235175609588623
    4. '[' → logprob: -3.110175609588623
    5. '[]' → logprob: -3.610175609588623
    6. ' []' → logprob: -4.860175609588623
    7. 'a' → logprob: -6.110175609588623
    8. ' a' → logprob: -6.610175609588623
    9. '[k' → logprob: -6.735175609588623
    10. ' list' → logprob: -7.110175609588623

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.308750182390213
    2. 'for' → logprob: -1.9337501525878906
    3. ' for' → logprob: -2.3087501525878906
    4. '    
' → logprob: -4.433750152587891
    5. '    ' → logprob: -5.558750152587891
    6. ' ' → logprob: -6.058750152587891
    7. '     
' → logprob: -6.683750152587891
    8. '<|end|>' → logprob: -8.05875015258789
    9. ' 
' → logprob: -8.18375015258789
    10. '[' → logprob: -8.30875015258789

Token 41: ' group' (ID: 3566)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5425528287887573
    2. ' for' → logprob: -0.9175528287887573
    3. '   ' → logprob: -4.042552947998047
    4. ' ' → logprob: -6.917552947998047
    5. '    ' → logprob: -8.542552947998047
    6. '[' → logprob: -8.792552947998047
    7. ' if' → logprob: -8.917552947998047
    8. 'if' → logprob: -10.042552947998047
    9. '	for' → logprob: -10.542552947998047
    10. ' [' → logprob: -10.792552947998047

Token 42: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.900495707988739
    2. 's' → logprob: -1.4004957675933838
    3. ' =' → logprob: -1.5254957675933838
    4. 'ed' → logprob: -2.650495767593384
    5. '=' → logprob: -3.900495767593384
    6. '_size' → logprob: -4.025495529174805
    7. 'ing' → logprob: -5.650495529174805
    8. '_count' → logprob: -5.900495529174805
    9. '_s' → logprob: -6.025495529174805
    10. '_sizes' → logprob: -6.025495529174805

Token 43: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37017393112182617
    2. ' []' → logprob: -1.3701739311218262
    3. '[i' → logprob: -4.120173931121826
    4. ' [' → logprob: -4.495173931121826
    5. '0' → logprob: -4.745173931121826
    6. '[' → logprob: -4.745173931121826
    7. ' ' → logprob: -5.495173931121826
    8. 'i' → logprob: -6.245173931121826
    9. ' i' → logprob: -6.245173931121826
    10. '1' → logprob: -7.120173931121826

Token 44: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9787502884864807
    2. 'for' → logprob: -0.9787502884864807
    3. '   ' → logprob: -1.853750228881836
    4. ' if' → logprob: -3.603750228881836
    5. '     
' → logprob: -4.353750228881836
    6. '    ' → logprob: -4.603750228881836
    7. '    
' → logprob: -4.728750228881836
    8. 'if' → logprob: -4.978750228881836
    9. ' 
' → logprob: -5.103750228881836
    10. '[' → logprob: -5.978750228881836

Token 45: ' group' (ID: 3566)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4550783932209015
    2. ' for' → logprob: -1.330078363418579
    3. 'if' → logprob: -2.830078363418579
    4. ' if' → logprob: -3.705078363418579
    5. '   ' → logprob: -5.330078601837158
    6. 'group' (adapté à ' group') → logprob: -5.330078601837158
    7. 'temp' → logprob: -5.455078601837158
    8. ' group' → logprob: -6.830078601837158
    9. '    ' → logprob: -7.705078601837158
    10. 'count' → logprob: -8.080078125

Token 46: '_len' (ID: 13683)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.24282386898994446
    2. ' =' → logprob: -1.617823839187622
    3. '=' → logprob: -4.742824077606201
    4. '.' → logprob: -5.242824077606201
    5. '=[]' → logprob: -6.367824077606201
    6. '.clear' → logprob: -6.992824077606201
    7. ' .' → logprob: -9.492823600769043
    8. '_size' → logprob: -9.617823600769043
    9. '_count' → logprob: -9.742823600769043
    10. 's' → logprob: -9.867823600769043

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11349477618932724
    2. '=' → logprob: -2.238494873046875
    3. ' ==' → logprob: -8.363494873046875
    4. ' >=' → logprob: -9.238494873046875
    5. ' ' → logprob: -9.363494873046875
    6. '_' → logprob: -9.988494873046875
    7. ' >' → logprob: -9.988494873046875
    8. ' +=' → logprob: -10.113494873046875
    9. '==' → logprob: -10.738494873046875
    10. '   ' → logprob: -11.238494873046875

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2077324390411377
    2. ' ' → logprob: -1.8327324390411377
    3. ' k' → logprob: -4.082732200622559
    4. 'k' → logprob: -4.707732200622559
    5. '1' → logprob: -6.707732200622559
    6. ' i' → logprob: -8.457732200622559
    7. 'i' → logprob: -9.582732200622559
    8. ' n' → logprob: -10.082732200622559
    9. 'len' → logprob: -10.207732200622559
    10. ' len' → logprob: -10.582732200622559

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044776443392038345
    2. 'k' → logprob: -3.294776439666748
    3. '1' → logprob: -5.419776439666748
    4. ' ' → logprob: -6.919776439666748
    5. 'len' → logprob: -7.294776439666748
    6. 'i' → logprob: -8.044776916503906
    7. ' k' → logprob: -8.919776916503906
    8. '[]' → logprob: -9.794776916503906
    9. 'n' → logprob: -10.419776916503906
    10. '[' → logprob: -11.169776916503906

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37021252512931824
    2. '<|end|>' → logprob: -1.6202125549316406
    3. ' ' → logprob: -3.6202125549316406
    4. ' for' → logprob: -3.7452125549316406
    5. ' 
' → logprob: -3.9952125549316406
    6. '    
' → logprob: -4.370212554931641
    7. 'for' → logprob: -4.870212554931641
    8. '    ' → logprob: -5.245212554931641
    9. '
' → logprob: -5.745212554931641
    10. '\n' → logprob: -5.870212554931641

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0749154090881348
    2. ' for' → logprob: -1.5749154090881348
    3. '<|end|>' → logprob: -1.6999154090881348
    4. '
' → logprob: -2.1999154090881348
    5. 'for' → logprob: -2.8249154090881348
    6. ' 
' → logprob: -3.3249154090881348
    7. '\n' → logprob: -3.4499154090881348
    8. ' ' → logprob: -4.324915409088135
    9. '    
' → logprob: -5.074915409088135
    10. '  
' → logprob: -5.074915409088135

Token 52: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12167380005121231
    2. ' for' → logprob: -2.246673822402954
    3. 'if' → logprob: -5.871673583984375
    4. '   ' → logprob: -5.871673583984375
    5. ' ' → logprob: -6.871673583984375
    6. ' if' → logprob: -6.871673583984375
    7. 'n' → logprob: -8.371673583984375
    8. 'i' → logprob: -8.871673583984375
    9. '    ' → logprob: -8.871673583984375
    10. '<|end|>' → logprob: -9.371673583984375

Token 53: ' num' (ID: 2269)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.21870960295200348
    2. 'j' → logprob: -1.8437095880508423
    3. ' x' → logprob: -4.343709468841553
    4. ' num' → logprob: -5.093709468841553
    5. 'x' → logprob: -5.218709468841553
    6. ' a' → logprob: -5.843709468841553
    7. 'num' → logprob: -5.968709468841553
    8. 'a' → logprob: -6.093709468841553
    9. ' val' → logprob: -6.843709468841553
    10. ' i' → logprob: -7.093709468841553

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014501470141112804
    2. 'in' → logprob: -4.264501571655273
    3. 's' → logprob: -8.889501571655273
    4. ' ' → logprob: -9.264501571655273
    5. '  ' → logprob: -10.389501571655273
    6. '   ' → logprob: -10.889501571655273
    7. '	in' → logprob: -11.639501571655273
    8. ',' → logprob: -11.952001571655273
    9. '    ' → logprob: -12.077001571655273
    10. '_in' → logprob: -12.327001571655273

Token 55: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2900528013706207
    2. 'a' → logprob: -1.4150527715682983
    3. ' range' → logprob: -5.165052890777588
    4. 'range' → logprob: -6.165052890777588
    5. ' ' → logprob: -8.16505241394043
    6. '[a' → logprob: -8.79005241394043
    7. '  ' → logprob: -9.85255241394043
    8. '[' → logprob: -9.85255241394043
    9. 'k' → logprob: -9.91505241394043
    10. '   ' → logprob: -9.97755241394043

Token 56: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004182633012533188
    2. ':
' → logprob: -5.504182815551758
    3. '   ' → logprob: -9.754182815551758
    4. '       ' → logprob: -10.754182815551758
    5. '[' → logprob: -11.254182815551758
    6. ' :' → logprob: -12.504182815551758
    7. '[:' → logprob: -13.254182815551758
    8. '    ' → logprob: -13.504182815551758
    9. ':
' → logprob: -13.879182815551758
    10. ':

' → logprob: -14.004182815551758

Token 57: ' [-' (ID: 20191)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.37009766697883606
    2. 'a' → logprob: -1.2450976371765137
    3. ' [' → logprob: -4.370097637176514
    4. '[' → logprob: -4.995097637176514
    5. '[a' → logprob: -6.870097637176514
    6. ' ' → logprob: -7.370097637176514
    7. '  ' → logprob: -9.745098114013672
    8. '   ' → logprob: -9.745098114013672
    9. '[i' → logprob: -9.870098114013672
    10. '[]' → logprob: -11.182598114013672

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005940055940300226
    2. 'k' → logprob: -5.630939960479736
    3. '10' → logprob: -6.630939960479736
    4. 'i' → logprob: -7.630939960479736
    5. '100' → logprob: -8.755940437316895
    6. '999' → logprob: -9.255940437316895
    7. 'num' → logprob: -9.505940437316895
    8. 'n' → logprob: -9.880940437316895
    9. 'float' → logprob: -10.505940437316895
    10. '(' → logprob: -10.505940437316895

Token 59: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00270644249394536
    2. ' ]' → logprob: -6.502706527709961
    3. ',' → logprob: -7.752706527709961
    4. ']' → logprob: -7.877706527709961
    5. ']:
' → logprob: -8.127706527709961
    6. ']:
' → logprob: -9.752706527709961
    7. ':' → logprob: -11.127706527709961
    8. '   ' → logprob: -11.627706527709961
    9. '       ' → logprob: -12.752706527709961
    10. ']:

' → logprob: -13.252706527709961

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5693967938423157
    2. '<|end|>' → logprob: -0.9443967938423157
    3. ':' → logprob: -4.06939697265625
    4. '<|end|>' → logprob: -5.06939697265625
    5. '        
' → logprob: -5.31939697265625
    6. ' 
' → logprob: -5.81939697265625
    7. ' ' → logprob: -6.19439697265625
    8. ',' → logprob: -6.19439697265625
    9. '   ' → logprob: -6.44439697265625
    10. '    
' → logprob: -6.56939697265625

Token 61: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6370682120323181
    2. ' ' → logprob: -1.637068271636963
    3. ' if' → logprob: -1.887068271636963
    4. '<|end|>' → logprob: -2.387068271636963
    5. '```' → logprob: -5.387068271636963
    6. '       ' → logprob: -5.512068271636963
    7. 'if' (adapté à ' if') → logprob: -5.762068271636963
    8. '\n' → logprob: -5.887068271636963
    9. '        ' → logprob: -5.887068271636963
    10. '<|end|>' → logprob: -5.887068271636963

Token 62: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16040192544460297
    2. 'num' → logprob: -1.9104019403457642
    3. ' ' → logprob: -9.910402297973633
    4. '(num' → logprob: -10.285402297973633
    5. ' len' → logprob: -10.535402297973633
    6. ' abs' → logprob: -11.660402297973633
    7. '	num' → logprob: -11.660402297973633
    8. ' not' → logprob: -11.910402297973633
    9. ' group' → logprob: -12.160402297973633
    10. 'len' → logprob: -12.285402297973633

Token 63: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3351660370826721
    2. ' ==' → logprob: -1.3351659774780273
    3. '!=' → logprob: -4.210165977478027
    4. ' !=' → logprob: -5.085165977478027
    5. '>=' → logprob: -7.960165977478027
    6. '<=' → logprob: -9.710165977478027
    7. '>' → logprob: -9.960165977478027
    8. ' >=' → logprob: -10.210165977478027
    9. '<' → logprob: -10.335165977478027
    10. ' ' → logprob: -10.960165977478027

Token 64: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31186434626579285
    2. ' i' → logprob: -1.5618643760681152
    3. 'k' → logprob: -3.0618643760681152
    4. ' k' → logprob: -4.686864376068115
    5. ' ' → logprob: -7.061864376068115
    6. '0' → logprob: -7.436864376068115
    7. 'q' → logprob: -8.311863899230957
    8. '=' → logprob: -8.686863899230957
    9. '>' → logprob: -10.249363899230957
    10. 'n' → logprob: -10.311863899230957

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5533812046051025
    2. ' or' → logprob: -1.0533812046051025
    3. ' and' → logprob: -2.6783812046051025
    4. ':
' → logprob: -5.178380966186523
    5. 'and' → logprob: -7.178380966186523
    6. 'or' → logprob: -7.553380966186523
    7. ' :' → logprob: -8.428380966186523
    8. '   ' → logprob: -8.803380966186523
    9. ' ' → logprob: -8.928380966186523
    10. '       ' → logprob: -9.678380966186523

Token 66: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5506079196929932
    2. '           ' → logprob: -1.4256079196929932
    3. ' or' → logprob: -1.8006079196929932
    4. ' and' → logprob: -4.550607681274414
    5. ' if' → logprob: -6.175607681274414
    6. ' group' → logprob: -6.300607681274414
    7. 'group' → logprob: -6.925607681274414
    8. ':' → logprob: -7.425607681274414
    9. '   ' → logprob: -7.425607681274414
    10. ',' → logprob: -8.675607681274414

Token 67: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4708530306816101
    2. ' group' → logprob: -2.095853090286255
    3. 'group' → logprob: -2.470853090286255
    4. ' if' → logprob: -2.595853090286255
    5. 'if' (adapté à ' if') → logprob: -2.595853090286255
    6. '           ' → logprob: -4.595852851867676
    7. 'temp' → logprob: -5.720852851867676
    8. '   ' → logprob: -6.220852851867676
    9. 'continue' → logprob: -6.845852851867676
    10. ' temp' → logprob: -7.095852851867676

Token 68: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.06161120533943176
    2. 'group' → logprob: -2.9366111755371094
    3. ' len' → logprob: -5.436611175537109
    4. 'len' → logprob: -6.186611175537109
    5. ' num' → logprob: -9.68661117553711
    6. 'num' → logprob: -9.68661117553711
    7. '   ' → logprob: -10.06161117553711
    8. ' not' → logprob: -10.18661117553711
    9. ' ' → logprob: -10.93661117553711
    10. '           ' → logprob: -11.31161117553711

Token 69: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.003669317811727524
    2. ':' → logprob: -6.128669261932373
    3. ' and' → logprob: -7.003669261932373
    4. 'and' → logprob: -8.003669738769531
    5. 'len' → logprob: -8.628669738769531
    6. ':
' → logprob: -10.753669738769531
    7. '   ' → logprob: -12.503669738769531
    8. ' ' → logprob: -12.503669738769531
    9. '!=' → logprob: -12.753669738769531
    10. '>' → logprob: -12.878669738769531

Token 70: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7791785597801208
    2. ' ==' → logprob: -1.6541786193847656
    3. '==' → logprob: -2.2791786193847656
    4. '>=' → logprob: -2.4041786193847656
    5. '>' → logprob: -2.6541786193847656
    6. ' >' → logprob: -2.6541786193847656
    7. ' <' → logprob: -5.154178619384766
    8. ' +' → logprob: -5.279178619384766
    9. '+' → logprob: -5.779178619384766
    10. '<' → logprob: -7.029178619384766

Token 71: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033810172230005264
    2. ' k' → logprob: -3.4088101387023926
    3. 'q' → logprob: -9.40881061553955
    4. ' ' → logprob: -10.15881061553955
    5. '1' → logprob: -11.15881061553955
    6. ' q' → logprob: -11.65881061553955
    7. '   ' → logprob: -12.03381061553955
    8. '3' → logprob: -12.40881061553955
    9. '4' → logprob: -13.15881061553955
    10. '2' → logprob: -13.15881061553955

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03465905785560608
    2. ':
' → logprob: -4.034658908843994
    3. ' and' → logprob: -4.159658908843994
    4. 'and' → logprob: -7.659658908843994
    5. '           ' → logprob: -9.034659385681152
    6. ',' → logprob: -10.284659385681152
    7. ':

' → logprob: -10.659659385681152
    8. '       ' → logprob: -10.784659385681152
    9. ' :' → logprob: -11.159659385681152
    10. '*' → logprob: -11.284659385681152

Token 73: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05031397566199303
    2. '           ' → logprob: -3.300313949584961
    3. '<|end|>' → logprob: -5.425313949584961
    4. '[' → logprob: -6.550313949584961
    5. ',' → logprob: -6.800313949584961
    6. '                   ' → logprob: -7.175313949584961
    7. '```' → logprob: -7.175313949584961
    8. ':' → logprob: -7.925313949584961
    9. ' ' → logprob: -8.050313949584961
    10. '                
' → logprob: -8.050313949584961

Token 74: ' group' (ID: 3566)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.835639238357544
    2. '           ' → logprob: -1.710639238357544
    3. ' group' → logprob: -1.835639238357544
    4. '                   ' → logprob: -1.960639238357544
    5. 'temp' → logprob: -3.460639238357544
    6. '               ' → logprob: -3.960639238357544
    7. ' for' → logprob: -4.710638999938965
    8. '```' → logprob: -5.335638999938965
    9. 'group' (adapté à ' group') → logprob: -5.460638999938965
    10. '       ' → logprob: -5.585638999938965

Token 75: '.sort' (ID: 19551)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038478054106235504
    2. '.' → logprob: -3.538478136062622
    3. '.extend' → logprob: -4.913477897644043
    4. '+=' → logprob: -6.913477897644043
    5. ' +=' → logprob: -8.538477897644043
    6. '=' → logprob: -9.663477897644043
    7. '+' → logprob: -10.163477897644043
    8. ' .' → logprob: -11.413477897644043
    9. '.app' → logprob: -11.538477897644043
    10. ' =' → logprob: -11.788477897644043

Token 76: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08960364758968353
    2. '()
' → logprob: -2.4646036624908447
    3. '()
' → logprob: -8.214603424072266
    4. '(reverse' → logprob: -8.589603424072266
    5. ')' → logprob: -9.464603424072266
    6. '();' → logprob: -9.589603424072266
    7. '                   ' → logprob: -11.089603424072266
    8. 'reverse' → logprob: -11.214603424072266
    9. '())' → logprob: -12.089603424072266
    10. ')
' → logprob: -12.464603424072266

Token 77: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23452262580394745
    2. '               ' → logprob: -2.234522581100464
    3. '<|end|>' → logprob: -2.984522581100464
    4. '       ' → logprob: -4.359522819519043
    5. ',' → logprob: -4.484522819519043
    6. '                   ' → logprob: -4.734522819519043
    7. ')' → logprob: -5.984522819519043
    8. '```' → logprob: -5.984522819519043
    9. '            
' → logprob: -5.984522819519043
    10. '
' → logprob: -6.359522819519043

Token 78: ' for' (ID: 395)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9989715218544006
    2. ' temp' → logprob: -1.2489714622497559
    3. 'temp' → logprob: -1.9989714622497559
    4. ' for' → logprob: -2.123971462249756
    5. '           ' → logprob: -3.373971462249756
    6. 'ans' → logprob: -4.123971462249756
    7. 'for' (adapté à ' for') → logprob: -4.248971462249756
    8. ' group' → logprob: -5.748971462249756
    9. '       ' → logprob: -5.873971462249756
    10. '               ' → logprob: -5.998971462249756

Token 79: ' x' (ID: 1215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7026821970939636
    2. ' x' → logprob: -1.7026822566986084
    3. 'j' → logprob: -2.0776822566986084
    4. 'x' → logprob: -2.2026822566986084
    5. ' _' → logprob: -4.077682018280029
    6. '_' → logprob: -4.327682018280029
    7. ' num' → logprob: -5.077682018280029
    8. ' idx' → logprob: -5.077682018280029
    9. 'm' → logprob: -5.327682018280029
    10. ' val' → logprob: -5.452682018280029

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036918821278959513
    2. 'in' → logprob: -5.628691673278809
    3. ' ' → logprob: -10.128691673278809
    4. 's' → logprob: -11.503691673278809
    5. ',' → logprob: -11.878691673278809
    6. '   ' → logprob: -12.003691673278809
    7. 'n' → logprob: -12.691191673278809
    8. '  ' → logprob: -12.878691673278809
    9. '_in' → logprob: -12.941191673278809
    10. '    ' → logprob: -13.128691673278809

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9823673963546753
    2. 'range' → logprob: -0.9823673963546753
    3. 'group' → logprob: -1.8573673963546753
    4. ' group' → logprob: -2.357367515563965
    5. ' xrange' → logprob: -8.982367515563965
    6. '[group' → logprob: -10.482367515563965
    7. ' ' → logprob: -10.544867515563965
    8. 'x' → logprob: -10.732367515563965
    9. '(range' → logprob: -10.794867515563965
    10. 'g' → logprob: -10.794867515563965

Token 82: '(group' (ID: 36416)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.08490561693906784
    2. '(group' → logprob: -2.5849056243896484
    3. '(' → logprob: -5.334905624389648
    4. 'k' → logprob: -7.834905624389648
    5. 'group' → logprob: -8.334905624389648
    6. ' group' → logprob: -8.834905624389648
    7. ' k' → logprob: -8.959905624389648
    8. ' (' → logprob: -9.584905624389648
    9. '(len' → logprob: -9.709905624389648
    10. '(q' → logprob: -10.209905624389648

Token 83: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0010144683765247464
    2. 'len' → logprob: -7.251014232635498
    3. '-' → logprob: -9.751014709472656
    4. 'k' → logprob: -10.001014709472656
    5. '   ' → logprob: -10.626014709472656
    6. '_k' → logprob: -11.126014709472656
    7. ')' → logprob: -11.251014709472656
    8. 'Len' → logprob: -11.313514709472656
    9. '[' → logprob: -11.376014709472656
    10. '[:' → logprob: -11.501014709472656

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6668323874473572
    2. '-k' → logprob: -0.9168323874473572
    3. '-' → logprob: -2.541832447052002
    4. '):' → logprob: -5.666832447052002
    5. '):
' → logprob: -6.541832447052002
    6. '//' → logprob: -6.791832447052002
    7. '   ' → logprob: -7.541832447052002
    8. ' //' → logprob: -7.666832447052002
    9. '-n' → logprob: -8.291831970214844
    10. ')' → logprob: -8.291831970214844

Token 85: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.47521641850471497
    2. ' k' → logprob: -0.9752163887023926
    3. ' (' → logprob: -7.475216388702393
    4. '(k' → logprob: -8.22521686553955
    5. ' ' → logprob: -8.60021686553955
    6. '1' → logprob: -10.22521686553955
    7. '(' → logprob: -11.16271686553955
    8. '{k' → logprob: -11.22521686553955
    9. '   ' → logprob: -11.53771686553955
    10. ' n' → logprob: -12.28771686553955

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5242737531661987
    2. ' +' → logprob: -0.8992737531661987
    3. '):' → logprob: -7.149273872375488
    4. '):
' → logprob: -9.399273872375488
    5. '1' → logprob: -10.024273872375488
    6. ',' → logprob: -10.024273872375488
    7. ' ' → logprob: -10.149273872375488
    8. ' ):' → logprob: -10.149273872375488
    9. ')' → logprob: -11.024273872375488
    10. '0' → logprob: -11.274273872375488

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01251177117228508
    2. ' ' → logprob: -4.387511730194092
    3. '

' → logprob: -15.32501220703125
    4. '   ' → logprob: -15.51251220703125
    5. ' ' → logprob: -15.57501220703125
    6. '2' → logprob: -15.63751220703125
    7. ')' → logprob: -15.76251220703125
    8. '  ' → logprob: -15.82501220703125
    9. '
' → logprob: -16.01251220703125
    10. '0' → logprob: -16.26251220703125

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -14.812520027160645
    4. '
' → logprob: -15.125020027160645
    5. '   ' → logprob: -16.37502098083496
    6. '0' → logprob: -16.87502098083496
    7. '10' → logprob: -16.93752098083496
    8. '```' → logprob: -17.12502098083496
    9. '11' → logprob: -17.18752098083496
    10. ')' → logprob: -17.25002098083496

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014343547634780407
    2. '):
' → logprob: -4.514343738555908
    3. ':' → logprob: -6.389343738555908
    4. ' ):' → logprob: -7.014343738555908
    5. ')' → logprob: -8.01434326171875
    6. ',' → logprob: -8.38934326171875
    7. ' ):
' → logprob: -10.01434326171875
    8. '):
' → logprob: -10.38934326171875
    9. '+' → logprob: -11.38934326171875
    10. '):

' → logprob: -11.51434326171875

Token 90: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05989712476730347
    2. '<|end|>' → logprob: -4.059896945953369
    3. '           ' → logprob: -4.434896945953369
    4. ' ' → logprob: -5.309896945953369
    5. '                           ' → logprob: -5.559896945953369
    6. 'temp' → logprob: -5.559896945953369
    7. ' temp' → logprob: -5.684896945953369
    8. '   ' → logprob: -6.184896945953369
    9. '               ' → logprob: -6.309896945953369
    10. '                       ' → logprob: -6.559896945953369

Token 91: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.5593685507774353
    2. ' temp' → logprob: -1.05936861038208
    3. ' if' → logprob: -3.80936861038208
    4. ' group' → logprob: -4.68436861038208
    5. '                       ' → logprob: -4.68436861038208
    6. '                   ' → logprob: -4.80936861038208
    7. 'if' → logprob: -4.93436861038208
    8. '   ' → logprob: -5.30936861038208
    9. '                           ' → logprob: -5.30936861038208
    10. 'group' → logprob: -5.43436861038208

Token 92: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.09449432045221329
    2. '_ans' → logprob: -3.219494342803955
    3. '_sum' → logprob: -3.594494342803955
    4. '_cost' → logprob: -4.594494342803955
    5. '_min' → logprob: -5.344494342803955
    6. '_val' → logprob: -6.844494342803955
    7. '_max' → logprob: -6.969494342803955
    8. 'sum' → logprob: -7.344494342803955
    9. '_len' → logprob: -7.344494342803955
    10. '_group' → logprob: -7.469494342803955

Token 93: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011274991557002068
    2. '.' → logprob: -4.761274814605713
    3. '.extend' → logprob: -6.136274814605713
    4. ' .' → logprob: -8.136275291442871
    5. '=' → logprob: -9.261275291442871
    6. '+=' → logprob: -10.136275291442871
    7. ' +=' → logprob: -11.261275291442871
    8. 'append' → logprob: -11.886275291442871
    9. '[' → logprob: -11.886275291442871
    10. '+' → logprob: -12.011275291442871

Token 94: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.05203387886285782
    2. 'group' → logprob: -3.5520339012145996
    3. '(' → logprob: -4.0520339012146
    4. ' group' → logprob: -6.3020339012146
    5. '(abs' → logprob: -6.8020339012146
    6. '(
' → logprob: -7.8020339012146
    7. '(sum' → logprob: -7.9270339012146
    8. 'abs' → logprob: -8.052033424377441
    9. 'sum' → logprob: -8.802033424377441
    10. '(max' → logprob: -9.802033424377441

Token 95: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00036025288864038885
    2. '[' → logprob: -8.750360488891602
    3. '   ' → logprob: -9.250360488891602
    4. '[i' → logprob: -10.375360488891602
    5. ' [' → logprob: -10.500360488891602
    6. 'x' → logprob: -11.750360488891602
    7. ' ' → logprob: -12.125360488891602
    8. '[k' → logprob: -12.125360488891602
    9. '[j' → logprob: -12.500360488891602
    10. '[n' → logprob: -13.125360488891602

Token 96: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4138374328613281
    2. ']' → logprob: -1.6638374328613281
    3. '+k' → logprob: -2.663837432861328
    4. '])
' → logprob: -3.163837432861328
    5. '+' → logprob: -3.663837432861328
    6. ']+' → logprob: -5.413837432861328
    7. ' +' → logprob: -5.538837432861328
    8. '])
' → logprob: -7.163837432861328
    9. '   ' → logprob: -7.663837432861328
    10. ')' → logprob: -7.913837432861328

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4470583200454712
    2. '       ' → logprob: -1.3220583200454712
    3. '               ' → logprob: -2.4470582008361816
    4. 'else' → logprob: -6.447058200836182
    5. ' else' → logprob: -7.072058200836182
    6. '   ' → logprob: -7.197058200836182
    7. '```' → logprob: -7.322058200836182
    8. '            
' → logprob: -7.822058200836182
    9. '    
' → logprob: -7.822058200836182
    10. '                
' → logprob: -8.32205867767334

Token 98: ' group' (ID: 3566)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37735435366630554
    2. '           ' → logprob: -1.377354383468628
    3. 'else' → logprob: -3.002354383468628
    4. ' else' → logprob: -4.877354145050049
    5. 'group' (adapté à ' group') → logprob: -6.252354145050049
    6. 'elif' → logprob: -6.752354145050049
    7. '               ' → logprob: -7.252354145050049
    8. '   ' → logprob: -7.502354145050049
    9. ' group' → logprob: -8.627354621887207
    10. '```' → logprob: -10.002354621887207

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31382426619529724
    2. ' =' → logprob: -1.3138242959976196
    3. '.clear' → logprob: -8.188824653625488
    4. '=[]' → logprob: -8.188824653625488
    5. '_len' → logprob: -12.688824653625488
    6. '＝' → logprob: -13.563824653625488
    7. '   ' → logprob: -14.688824653625488
    8. '[:]' → logprob: -14.688824653625488
    9. '  ' → logprob: -14.813824653625488
    10. ',' → logprob: -14.938824653625488

Token 100: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00041363044874742627
    2. ' []' → logprob: -8.00041389465332
    3. '[]
' → logprob: -9.50041389465332
    4. '[' → logprob: -13.00041389465332
    5. '[]

' → logprob: -14.50041389465332
    6. '[]}' → logprob: -15.00041389465332
    7. '[],' → logprob: -16.00041389465332
    8. '[]>' → logprob: -16.12541389465332
    9. ' ' → logprob: -17.00041389465332
    10. '[])' → logprob: -17.50041389465332

Token 101: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033279068302363157
    2. ' else' → logprob: -6.6283278465271
    3. '           ' → logprob: -7.0033278465271
    4. 'else' → logprob: -7.2533278465271
    5. '<|end|>' → logprob: -8.003328323364258
    6. 'elif' → logprob: -11.253328323364258
    7. '```' → logprob: -11.628328323364258
    8. '   ' → logprob: -11.753328323364258
    9. '	else' → logprob: -12.628328323364258
    10. ' elif' → logprob: -12.753328323364258

Token 102: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.4430880844593048
    2. '           ' → logprob: -1.1930880546569824
    3. '       ' → logprob: -3.3180880546569824
    4. 'else' → logprob: -4.568088054656982
    5. ' group' → logprob: -4.943088054656982
    6. '   ' → logprob: -7.318088054656982
    7. ' else' → logprob: -9.06808853149414
    8. 'elif' → logprob: -9.69308853149414
    9. ' ' → logprob: -11.31808853149414
    10. '          ' → logprob: -11.31808853149414

Token 103: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.47630390524864197
    2. '=' → logprob: -0.9763039350509644
    3. 'len' → logprob: -6.351304054260254
    4. '=len' → logprob: -8.226304054260254
    5. ' =' → logprob: -8.601304054260254
    6. 'Len' → logprob: -11.351304054260254
    7. '=[]' → logprob: -11.726304054260254
    8. '_length' → logprob: -13.726304054260254
    9. '.clear' → logprob: -13.976304054260254
    10. '.append' → logprob: -13.976304054260254

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133842349052429
    2. '=' → logprob: -1.3133842945098877
    3. ' +=' → logprob: -9.063384056091309
    4. '+=' → logprob: -12.313384056091309
    5. ' ' → logprob: -13.188384056091309
    6. '0' → logprob: -16.313385009765625
    7. '<|end|>' → logprob: -16.313385009765625
    8. '.=' → logprob: -17.063385009765625
    9. ' -=' → logprob: -17.813385009765625
    10. ' .=' → logprob: -18.063385009765625

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.625627517700195
    4. '<|end|>' → logprob: -18.375627517700195
    5. '  ' → logprob: -18.875627517700195
    6. '۰' → logprob: -19.125627517700195
    7. '1' → logprob: -20.063127517700195
    8. '00' → logprob: -20.625627517700195
    9. '```' → logprob: -20.688127517700195
    10. '    ' → logprob: -20.813127517700195

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -20.750001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '<|end|>' → logprob: -21.750001907348633
    6. '```' → logprob: -22.250001907348633
    7. '00' → logprob: -22.625001907348633
    8. '  ' → logprob: -22.875001907348633
    9. '000' → logprob: -23.000001907348633
    10. '1' → logprob: -23.750001907348633

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009344478603452444
    2. ' else' → logprob: -7.625934600830078
    3. 'else' → logprob: -8.250934600830078
    4. '<|end|>' → logprob: -9.125934600830078
    5. '```' → logprob: -10.750934600830078
    6. 'elif' → logprob: -11.000934600830078
    7. ' elif' → logprob: -11.625934600830078
    8. '   ' → logprob: -11.625934600830078
    9. '           ' → logprob: -12.250934600830078
    10. ',' → logprob: -12.375934600830078

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004329341172706336
    2. 'else' → logprob: -8.250432968139648
    3. ' else' → logprob: -9.750432968139648
    4. '```' → logprob: -9.750432968139648
    5. '<|end|>' → logprob: -10.625432968139648
    6. 'elif' → logprob: -10.750432968139648
    7. '   ' → logprob: -12.875432968139648
    8. '           ' → logprob: -12.875432968139648
    9. ' elif' → logprob: -13.125432968139648
    10. '	' → logprob: -15.000432968139648

Token 109: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026955097913742065
    2. 'else' (adapté à ' else') → logprob: -3.9019551277160645
    3. ' else' → logprob: -5.5269551277160645
    4. 'elif' → logprob: -6.2769551277160645
    5. '```' → logprob: -8.651954650878906
    6. ' elif' → logprob: -8.901954650878906
    7. '<|end|>' → logprob: -9.026954650878906
    8. '   ' → logprob: -9.776954650878906
    9. '	elif' → logprob: -10.901954650878906
    10. '	else' → logprob: -11.651954650878906

Token 110: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07469075918197632
    2. ':' → logprob: -3.074690818786621
    3. '       ' → logprob: -4.449690818786621
    4. ':
' → logprob: -4.824690818786621
    5. '<|end|>' → logprob: -5.824690818786621
    6. '```' → logprob: -6.449690818786621
    7. ',' → logprob: -7.574690818786621
    8. '   ' → logprob: -8.699690818786621
    9. '               ' → logprob: -8.824690818786621
    10. '
' → logprob: -9.324690818786621

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010073235025629401
    2. '       ' → logprob: -7.751007556915283
    3. ' group' → logprob: -8.001007080078125
    4. '```' → logprob: -8.751007080078125
    5. 'group' → logprob: -9.876007080078125
    6. '               ' → logprob: -11.501007080078125
    7. '   ' → logprob: -12.126007080078125
    8. '	       ' → logprob: -12.751007080078125
    9. '          ' → logprob: -13.376007080078125
    10. '		' → logprob: -13.376007080078125

Token 112: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.47410446405410767
    2. 'group' (adapté à ' group') → logprob: -0.9741044640541077
    3. '	group' → logprob: -11.349104881286621
    4. '           ' → logprob: -11.724104881286621
    5. '   ' → logprob: -12.974104881286621
    6. '               ' → logprob: -13.849104881286621
    7. '_group' → logprob: -14.099104881286621
    8. '"group' → logprob: -14.224104881286621
    9. '[group' → logprob: -14.474104881286621
    10. '       ' → logprob: -14.724104881286621

Token 113: '.append' (ID: 3709)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -7.76759916334413e-05
    2. '.append' → logprob: -9.625077247619629
    3. '_' → logprob: -11.500077247619629
    4. '+=' → logprob: -13.875077247619629
    5. 'len' → logprob: -15.375077247619629
    6. '_length' → logprob: -16.125078201293945
    7. '_.' → logprob: -16.750078201293945
    8. '_append' → logprob: -16.875078201293945
    9. '=' → logprob: -17.250078201293945
    10. '._' → logprob: -17.500078201293945

Token 114: '(num' (ID: 15828)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6932564973831177
    2. '(num' → logprob: -0.6932564973831177
    3. ' num' → logprob: -9.193256378173828
    4. '(' → logprob: -11.818256378173828
    5. '	num' → logprob: -16.943256378173828
    6. '(
' → logprob: -17.068256378173828
    7. '<num' → logprob: -17.318256378173828
    8. '$num' → logprob: -17.818256378173828
    9. ',num' → logprob: -17.943256378173828
    10. '[num' → logprob: -18.068256378173828

Token 115: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.492601603269577
    2. ')' → logprob: -1.4926016330718994
    3. ')
' → logprob: -1.8676016330718994
    4. '               ' → logprob: -5.61760139465332
    5. '
' → logprob: -5.99260139465332
    6. '<|end|>' → logprob: -6.61760139465332
    7. '       ' → logprob: -6.74260139465332
    8. '                   ' → logprob: -8.74260139465332
    9. '            
' → logprob: -8.86760139465332
    10. '   ' → logprob: -9.11760139465332

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007772310636937618
    2. 'group' → logprob: -8.375777244567871
    3. '		' → logprob: -8.500777244567871
    4. '```' → logprob: -9.000777244567871
    5. '       ' → logprob: -9.875777244567871
    6. '   ' → logprob: -10.125777244567871
    7. '	       ' → logprob: -10.250777244567871
    8. '+' → logprob: -10.250777244567871
    9. '​' → logprob: -11.250777244567871
    10. ' group' → logprob: -11.250777244567871

Token 117: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.0019619399681687355
    2. ' group' → logprob: -6.626961708068848
    3. '           ' → logprob: -7.376961708068848
    4. '	group' → logprob: -12.126961708068848
    5. '   ' → logprob: -13.001961708068848
    6. '"group' → logprob: -13.876961708068848
    7. '
' → logprob: -14.376961708068848
    8. '       ' → logprob: -15.126961708068848
    9. ' ' → logprob: -15.626961708068848
    10. '```' → logprob: -16.126962661743164

Token 118: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.15441757265944e-05
    2. '+=' → logprob: -10.500031471252441
    3. '_' → logprob: -13.125031471252441
    4. 'len' → logprob: -13.250031471252441
    5. ' +=' → logprob: -16.625032424926758
    6. '+' → logprob: -17.625032424926758
    7. '_length' → logprob: -17.625032424926758
    8. '_le' → logprob: -17.750032424926758
    9. 'Len' → logprob: -18.125032424926758
    10. '=' → logprob: -18.375032424926758

Token 119: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759647488594055
    2. '+=' → logprob: -0.8259647488594055
    3. '+' → logprob: -10.82596492767334
    4. '<|end|>' → logprob: -13.20096492767334
    5. '=' → logprob: -13.57596492767334
    6. ']+=' → logprob: -13.70096492767334
    7. '+='' → logprob: -14.57596492767334
    8. ' ' → logprob: -15.45096492767334
    9. '+="' → logprob: -15.57596492767334
    10. ' +' → logprob: -15.82596492767334

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. '```' → logprob: -21.125045776367188
    5. '１' → logprob: -21.750045776367188
    6. '0' → logprob: -22.000045776367188
    7. '۱' → logprob: -22.375045776367188
    8. ' ' → logprob: -22.562545776367188
    9. '  ' → logprob: -22.562545776367188
    10. '١' → logprob: -23.750045776367188

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -20.125
    5. '
' → logprob: -20.875
    6. 'num' → logprob: -21.125
    7. '+' → logprob: -21.375
    8. '１' → logprob: -21.875
    9. ')' → logprob: -22.5
    10. 'len' → logprob: -22.5625

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03328186273574829
    2. ' if' → logprob: -3.9082818031311035
    3. ' for' → logprob: -4.9082818031311035
    4. 'for' → logprob: -6.5332818031311035
    5. 'if' → logprob: -6.9082818031311035
    6. '       ' → logprob: -6.9082818031311035
    7. ')' → logprob: -7.7832818031311035
    8. ' ans' → logprob: -7.9082818031311035
    9. '    
' → logprob: -8.158282279968262
    10. ',' → logprob: -9.033282279968262

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05927829071879387
    2. ' if' → logprob: -3.3092782497406006
    3. ')' → logprob: -4.93427848815918
    4. ' for' → logprob: -5.55927848815918
    5. '
' → logprob: -6.55927848815918
    6. '    
' → logprob: -6.55927848815918
    7. '       ' → logprob: -6.68427848815918
    8. ' ' → logprob: -6.80927848815918
    9. 'if' → logprob: -6.80927848815918
    10. '<|end|>' → logprob: -6.93427848815918

Token 124: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0911301374435425
    2. '   ' → logprob: -1.2161301374435425
    3. ' for' → logprob: -2.216130256652832
    4. 'if' (adapté à ' if') → logprob: -2.216130256652832
    5. 'for' → logprob: -3.091130256652832
    6. ' ans' → logprob: -3.466130256652832
    7. 'ans' → logprob: -3.716130256652832
    8. 'temp' → logprob: -4.091130256652832
    9. 'sum' → logprob: -5.091130256652832
    10. ' temp' → logprob: -5.216130256652832

Token 125: ' len' (ID: 4631)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.6817723512649536
    2. 'temp' → logprob: -1.3067723512649536
    3. ' len' → logprob: -1.8067723512649536
    4. 'len' → logprob: -3.056772232055664
    5. ' min' → logprob: -5.806772232055664
    6. ' sum' → logprob: -5.931772232055664
    7. ' max' → logprob: -6.056772232055664
    8. 'sum' → logprob: -6.431772232055664
    9. ' ans' → logprob: -7.181772232055664
    10. 'min' → logprob: -7.306772232055664

Token 126: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.15665210783481598
    2. ' (' → logprob: -2.4066522121429443
    3. '(' → logprob: -2.9066522121429443
    4. ' temp' → logprob: -8.906652450561523
    5. 'temp' → logprob: -9.656652450561523
    6. '(ans' → logprob: -11.531652450561523
    7. '(s' → logprob: -11.781652450561523
    8. '(t' → logprob: -13.156652450561523
    9. '(tmp' → logprob: -13.531652450561523
    10. '_temp' → logprob: -14.406652450561523

Token 127: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.088346359931165e-07
    2. '(_' → logprob: -15.125000953674316
    3. '(' → logprob: -15.625000953674316
    4. 'List' → logprob: -16.25
    5. '_' → logprob: -16.375
    6. '(list' → logprob: -16.625
    7. 'list' → logprob: -16.875
    8. '```' → logprob: -16.875
    9. ')' → logprob: -17.125
    10. '()' → logprob: -17.625

Token 128: ')' (ID: 8)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3584640622138977
    2. ' <' → logprob: -2.733464002609253
    3. '>=' → logprob: -2.733464002609253
    4. ' >' → logprob: -3.108464002609253
    5. ' <=' → logprob: -3.358464002609253
    6. ')' → logprob: -3.483464002609253
    7. ' ==' → logprob: -3.483464002609253
    8. '==' → logprob: -4.483464241027832
    9. '>' → logprob: -4.608464241027832
    10. '<' → logprob: -5.358464241027832

Token 129: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13367828726768494
    2. ' <' → logprob: -3.2586781978607178
    3. '>=' → logprob: -3.2586781978607178
    4. ' >' → logprob: -4.008678436279297
    5. ' ==' → logprob: -4.008678436279297
    6. '>' → logprob: -5.633678436279297
    7. '==' → logprob: -5.633678436279297
    8. '<' → logprob: -5.883678436279297
    9. '<|end|>' → logprob: -7.133678436279297
    10. ' ' → logprob: -7.633678436279297

Token 130: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4754696786403656
    2. 'k' → logprob: -1.225469708442688
    3. ' q' → logprob: -2.7254695892333984
    4. ' k' → logprob: -3.9754695892333984
    5. 'n' → logprob: -8.725469589233398
    6. ' n' → logprob: -9.350469589233398
    7. ' ' → logprob: -9.600469589233398
    8. 'ans' → logprob: -10.225469589233398
    9. ' ans' → logprob: -10.225469589233398
    10. '1' → logprob: -10.600469589233398

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003372938372194767
    2. ':
' → logprob: -5.878373146057129
    3. ' or' → logprob: -7.628373146057129
    4. ' :' → logprob: -9.878373146057129
    5. ':return' → logprob: -10.753373146057129
    6. '):' → logprob: -13.128373146057129
    7. 'or' → logprob: -13.128373146057129
    8. ' and' → logprob: -13.753373146057129
    9. ' :
' → logprob: -14.128373146057129
    10. ':
' → logprob: -14.378373146057129

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3611835241317749
    2. ':' → logprob: -1.236183524131775
    3. '   ' → logprob: -5.1111836433410645
    4. ':
' → logprob: -5.2361836433410645
    5. ',' → logprob: -8.486183166503906
    6. ' :' → logprob: -8.861183166503906
    7. '):' → logprob: -8.861183166503906
    8. ' or' → logprob: -9.111183166503906
    9. '    ' → logprob: -9.236183166503906
    10. ' =' → logprob: -9.986183166503906

Token 133: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06262002140283585
    2. ' continue' → logprob: -3.187619924545288
    3. 'continue' (adapté à ' continue') → logprob: -4.187620162963867
    4. '       ' → logprob: -5.687620162963867
    5. ' print' → logprob: -7.937620162963867
    6. 'print' → logprob: -8.312620162963867
    7. '	continue' → logprob: -9.187620162963867
    8. '    ' → logprob: -9.937620162963867
    9. ' ans' → logprob: -10.187620162963867
    10. '    
' → logprob: -11.437620162963867

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17558032274246216
    2. '    
' → logprob: -2.0505802631378174
    3. '
' → logprob: -4.0505805015563965
    4. ' 
' → logprob: -5.3005805015563965
    5. '  
' → logprob: -5.9255805015563965
    6. '   
' → logprob: -6.0505805015563965
    7. ' ans' → logprob: -6.6755805015563965
    8. '<|end|>' → logprob: -6.9255805015563965
    9. 'temp' → logprob: -7.5505805015563965
    10. ')' → logprob: -8.050580024719238

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5772166848182678
    2. 'temp' → logprob: -1.952216625213623
    3. '    
' → logprob: -2.077216625213623
    4. '
' → logprob: -2.577216625213623
    5. ' ans' → logprob: -3.577216625213623
    6. 'ans' → logprob: -3.702216625213623
    7. ' temp' → logprob: -3.952216625213623
    8. ' 
' → logprob: -4.327216625213623
    9. '   
' → logprob: -5.952216625213623
    10. '  
' → logprob: -6.577216625213623

Token 136: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0790521651506424
    2. ' temp' → logprob: -2.704052209854126
    3. '
' → logprob: -5.204051971435547
    4. '    
' → logprob: -5.954051971435547
    5. '   ' → logprob: -8.329051971435547
    6. 'sorted' → logprob: -8.329051971435547
    7. 'ans' → logprob: -9.079051971435547
    8. ' 
' → logprob: -9.454051971435547
    9. ' sorted' → logprob: -9.704051971435547
    10. ' ans' → logprob: -9.829051971435547

Token 137: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00010604646377032623
    2. '_sorted' → logprob: -9.250105857849121
    3. '_' → logprob: -11.875105857849121
    4. '_li' → logprob: -14.875105857849121
    5. '_sort' → logprob: -15.125105857849121
    6. '_lst' → logprob: -15.250105857849121
    7. '```' → logprob: -15.250105857849121
    8. '=_' → logprob: -15.500105857849121
    9. '=' → logprob: -15.500105857849121
    10. ' _' → logprob: -16.000106811523438

Token 138: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.003635945962741971
    2. '.' → logprob: -5.628635883331299
    3. ' .' → logprob: -10.878636360168457
    4. '=' → logprob: -11.503636360168457
    5. 'sort' → logprob: -12.378636360168457
    6. ' =' → logprob: -14.128636360168457
    7. '   ' → logprob: -14.628636360168457
    8. ' sort' → logprob: -15.128636360168457
    9. '[temp' → logprob: -15.378636360168457
    10. ').' → logprob: -15.753636360168457

Token 139: '()
' (ID: 1234)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.6473096609115601
    2. '[' → logprob: -1.52230966091156
    3. '
' → logprob: -2.0223097801208496
    4. '(ans' → logprob: -3.1473097801208496
    5. '()
' → logprob: -4.14730978012085
    6. '    
' → logprob: -4.52230978012085
    7. ')
' → logprob: -4.77230978012085
    8. ' ans' → logprob: -4.89730978012085
    9. '()' → logprob: -5.14730978012085
    10. '   ' → logprob: -5.14730978012085

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7378721237182617
    2. ' ans' → logprob: -1.3628721237182617
    3. '[' → logprob: -2.3628721237182617
    4. '(ans' → logprob: -3.3628721237182617
    5. '    
' → logprob: -3.4878721237182617
    6. 'ans' → logprob: -3.6128721237182617
    7. '```' → logprob: -3.6128721237182617
    8. '
' → logprob: -4.237872123718262
    9. '<|end|>' → logprob: -4.237872123718262
    10. '	ans' → logprob: -5.487872123718262

Token 141: ' diff' (ID: 8868)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00036323294625617564
    2. ' ans' → logprob: -8.25036334991455
    3. '   ' → logprob: -10.50036334991455
    4. '    
' → logprob: -10.62536334991455
    5. 'answer' → logprob: -11.00036334991455
    6. '
' → logprob: -11.50036334991455
    7. 'sum' → logprob: -11.50036334991455
    8. '	ans' → logprob: -12.37536334991455
    9. 'total' → logprob: -13.37536334991455
    10. '```' → logprob: -13.50036334991455

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00806081760674715
    2. '=' → logprob: -4.883060932159424
    3. 's' → logprob: -8.008060455322266
    4. '_' → logprob: -9.133060455322266
    5. 'er' → logprob: -12.508060455322266
    6. ' ' → logprob: -12.758060455322266
    7. '   ' → logprob: -13.508060455322266
    8. ' =
' → logprob: -13.883060455322266
    9. '_=' → logprob: -14.008060455322266
    10. '_min' → logprob: -14.133060455322266

Token 143: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.005337166599929333
    2. ' temp' → logprob: -5.255337238311768
    3. 'abs' → logprob: -9.50533676147461
    4. '10' → logprob: -11.25533676147461
    5. '0' → logprob: -12.75533676147461
    6. '(temp' → logprob: -13.13033676147461
    7. 'tmp' → logprob: -13.13033676147461
    8. '=temp' → logprob: -13.25533676147461
    9. 'float' → logprob: -13.38033676147461
    10. '   ' → logprob: -13.63033676147461

Token 144: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.465036105713807e-06
    2. '[_' → logprob: -13.000007629394531
    3. 'List' → logprob: -13.500007629394531
    4. '[-' → logprob: -13.875007629394531
    5. 'list' → logprob: -14.500007629394531
    6. '-_' → logprob: -14.500007629394531
    7. '[' → logprob: -14.750007629394531
    8. '-list' → logprob: -15.000007629394531
    9. '_' → logprob: -15.125007629394531
    10. '-' → logprob: -15.250007629394531

Token 145: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -3.2855416066013277e-05
    2. '[' → logprob: -10.375032424926758
    3. ' [' → logprob: -13.500032424926758
    4. 'q' → logprob: -15.875032424926758
    5. '
' → logprob: -17.000032424926758
    6. '[temp' → logprob: -17.500032424926758
    7. '[-' → logprob: -18.000032424926758
    8. '[k' → logprob: -18.250032424926758
    9. '[
' → logprob: -18.250032424926758
    10. '\[' → logprob: -18.625032424926758

Token 146: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004081724211573601
    2. ' -' → logprob: -5.504081726074219
    3. ']' → logprob: -13.754081726074219
    4. '   ' → logprob: -14.504081726074219
    5. ' ' → logprob: -14.879081726074219
    6. '−' → logprob: -15.254081726074219
    7. ']-' → logprob: -15.254081726074219
    8. '1' → logprob: -15.379081726074219
    9. '[' → logprob: -16.00408172607422
    10. '–' → logprob: -16.25408172607422

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.125021934509277
    3. ']' → logprob: -12.000021934509277
    4. '   ' → logprob: -15.000021934509277
    5. '-' → logprob: -15.750021934509277
    6. '  ' → logprob: -17.00002098083496
    7. '2' → logprob: -17.12502098083496
    8. ' -' → logprob: -17.43752098083496
    9. '0' → logprob: -17.75002098083496
    10. ')' → logprob: -17.93752098083496

Token 148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10976289957761765
    2. ' -' → logprob: -2.6097629070281982
    3. '-' → logprob: -3.6097629070281982
    4. ' ]' → logprob: -6.109762668609619
    5. ']-' → logprob: -6.859762668609619
    6. ' ' → logprob: -9.734763145446777
    7. ' ' → logprob: -11.734763145446777
    8. '   ' → logprob: -13.984763145446777
    9. ')' → logprob: -14.734763145446777
    10. '  ' → logprob: -14.859763145446777

Token 149: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868745267391205
    2. ' -' → logprob: -1.1368745565414429
    3. ' ' → logprob: -12.886874198913574
    4. ' ' → logprob: -15.136874198913574
    5. '-
' → logprob: -15.261874198913574
    6. ' -
' → logprob: -15.761874198913574
    7. '   ' → logprob: -16.26187515258789
    8. '<|end|>' → logprob: -16.38687515258789
    9. '
' → logprob: -16.88687515258789
    10. '  ' → logprob: -17.63687515258789

Token 150: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2575489282608032
    2. 'temp' → logprob: -1.5075489282608032
    3. ' temp' → logprob: -5.882548809051514
    4. ' i' → logprob: -5.882548809051514
    5. 'tmp' → logprob: -11.882549285888672
    6. 't' → logprob: -12.007549285888672
    7. '0' → logprob: -12.632549285888672
    8. '	temp' → logprob: -13.007549285888672
    9. '   ' → logprob: -13.132549285888672
    10. '           ' → logprob: -13.632549285888672

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006799329072237015
    2. 'if' → logprob: -5.631799221038818
    3. 'ans' → logprob: -6.631799221038818
    4. '   ' → logprob: -7.256799221038818
    5. ' if' → logprob: -7.256799221038818
    6. '
' → logprob: -8.506799697875977
    7. '    
' → logprob: -8.756799697875977
    8. ' ans' → logprob: -9.881799697875977
    9. ' 
' → logprob: -11.506799697875977
    10. '  
' → logprob: -11.631799697875977

Token 152: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1634301096200943
    2. 'if' → logprob: -1.913430094718933
    3. '
' → logprob: -6.538430213928223
    4. '   ' → logprob: -6.913430213928223
    5. ' if' → logprob: -7.413430213928223
    6. ' ans' → logprob: -9.163430213928223
    7. '	ans' → logprob: -10.413430213928223
    8. '    
' → logprob: -12.038430213928223
    9. '(ans' → logprob: -12.413430213928223
    10. '
' → logprob: -12.413430213928223

Token 153: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08033259212970734
    2. 'ans' → logprob: -2.7053325176239014
    3. ' if' → logprob: -4.7053327560424805
    4. ' ans' → logprob: -7.4553327560424805
    5. '   ' → logprob: -7.7053327560424805
    6. '
' → logprob: -8.33033275604248
    7. '    
' → logprob: -11.70533275604248
    8. '	ans' → logprob: -12.08033275604248
    9. '
' → logprob: -12.70533275604248
    10. 'answer' → logprob: -12.95533275604248

Token 154: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0619698166847229
    2. 'diff' → logprob: -2.811969757080078
    3. '	diff' → logprob: -13.561969757080078
    4. '(diff' → logprob: -14.436969757080078
    5. ' ans' → logprob: -15.186969757080078
    6. 'ans' → logprob: -16.811969757080078
    7. ' ' → logprob: -18.311969757080078
    8. 'd' → logprob: -18.686969757080078
    9. ' ' → logprob: -19.186969757080078
    10. '_diff' → logprob: -19.311969757080078

Token 155: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17977449297904968
    2. '<' → logprob: -1.804774522781372
    3. ' <=' → logprob: -11.554774284362793
    4. ' ' → logprob: -11.804774284362793
    5. '<|end|>' → logprob: -12.304774284362793
    6. '<=' → logprob: -13.054774284362793
    7. '<int' → logprob: -14.304774284362793
    8. '   ' → logprob: -14.429774284362793
    9. '<
' → logprob: -14.554774284362793
    10. '0' → logprob: -14.679774284362793

Token 156: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0788925439119339
    2. ' ans' → logprob: -2.578892469406128
    3. '(ans' → logprob: -13.828892707824707
    4. '	ans' → logprob: -13.828892707824707
    5. '0' → logprob: -14.078892707824707
    6. '_ans' → logprob: -16.95389175415039
    7. ' ' → logprob: -17.70389175415039
    8. 'Ans' → logprob: -18.20389175415039
    9. '   ' → logprob: -18.45389175415039
    10. 'answer' → logprob: -18.57889175415039

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0040854052640497684
    2. ':
' → logprob: -5.504085540771484
    3. '):' → logprob: -12.254085540771484
    4. ' :' → logprob: -14.004085540771484
    5. ':
' → logprob: -14.379085540771484
    6. '):
' → logprob: -15.129085540771484
    7. '=' → logprob: -15.629085540771484
    8. '   ' → logprob: -16.129085540771484
    9. ':

' → logprob: -16.504085540771484
    10. ' :
' → logprob: -16.629085540771484

Token 158: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5139902234077454
    2. 'ans' → logprob: -1.2639901638031006
    3. ' ans' → logprob: -2.7639901638031006
    4. '	ans' → logprob: -3.3889901638031006
    5. ':' → logprob: -4.38899040222168
    6. '       ' → logprob: -5.26399040222168
    7. ':
' → logprob: -6.63899040222168
    8. '(ans' → logprob: -6.88899040222168
    9. '    
' → logprob: -6.88899040222168
    10. '
' → logprob: -6.88899040222168

Token 159: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.693162202835083
    2. ' ans' → logprob: -0.693162202835083
    3. '	ans' → logprob: -11.318161964416504
    4. '_ans' → logprob: -13.818161964416504
    5. '   ' → logprob: -13.943161964416504
    6. '(ans' → logprob: -14.318161964416504
    7. '
' → logprob: -14.943161964416504
    8. 'Ans' → logprob: -17.69316291809082
    9. 'diff' → logprob: -18.06816291809082
    10. '
' → logprob: -18.19316291809082

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020741820335388
    2. '=' → logprob: -2.3502073287963867
    3. '＝' → logprob: -14.475207328796387
    4. ' =
' → logprob: -16.725208282470703
    5. ' ' → logprob: -16.975208282470703
    6. ' =)' → logprob: -17.600208282470703
    7. '=

' → logprob: -17.850208282470703
    8. ',' → logprob: -17.850208282470703
    9. '.=' → logprob: -18.475208282470703
    10. ' ="' → logprob: -18.975208282470703

Token 161: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.01815146580338478
    2. ' diff' → logprob: -4.01815128326416
    3. '	diff' → logprob: -13.51815128326416
    4. '   ' → logprob: -16.768152236938477
    5. '(diff' → logprob: -16.768152236938477
    6. 'difference' → logprob: -17.768152236938477
    7. 'dif' → logprob: -18.018152236938477
    8. '
' → logprob: -18.643152236938477
    9. 'd' → logprob: -18.768152236938477
    10. '_diff' → logprob: -19.143152236938477

Token 162: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16037309169769287
    2. '
' → logprob: -1.9103730916976929
    3. '
' → logprob: -9.785372734069824
    4. ' print' → logprob: -10.160372734069824
    5. ' 
' → logprob: -10.410372734069824
    6. '  
' → logprob: -11.160372734069824
    7. '```' → logprob: -13.160372734069824
    8. '<|end|>' → logprob: -13.285372734069824
    9. '

' → logprob: -13.410372734069824
    10. '    
' → logprob: -13.410372734069824

Token 163: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004733294772449881
    2. '
' → logprob: -7.875473499298096
    3. ' print' → logprob: -9.375473022460938
    4. ')' → logprob: -12.375473022460938
    5. ' 
' → logprob: -13.000473022460938
    6. ')
' → logprob: -14.375473022460938
    7. '```' → logprob: -14.875473022460938
    8. '
' → logprob: -15.250473022460938
    9. 'pr' → logprob: -15.625473022460938
    10. '(print' → logprob: -16.000473022460938

Token 164: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003710894088726491
    2. '(' → logprob: -8.000370979309082
    3. 'ans' → logprob: -10.250370979309082
    4. '()' → logprob: -15.250370979309082
    5. '(f' → logprob: -17.3753719329834
    6. '(
' → logprob: -17.3753719329834
    7. '(answer' → logprob: -17.3753719329834
    8. '	ans' → logprob: -17.5003719329834
    9. '(abs' → logprob: -17.8753719329834
    10. '('' → logprob: -17.8753719329834

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')`' → logprob: -16.0
    4. ')
' → logprob: -16.625
    5. '))' → logprob: -17.125
    6. '+' → logprob: -17.5
    7. '')' → logprob: -17.625
    8. '`)' → logprob: -17.75
    9. '#' → logprob: -18.625
    10. ')#' → logprob: -19.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 41.10%
Précision adaptée (1ère position): 45.40%
Précision (top 10): 87.12%
================================================================================
