================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

get = lambda: list(map(int, input().split()))
N, M = get()
A = get()

tot = reduce(lambda x, y: x + y, A)
judge = lambda x: x * 4 * M >= tot
vote = sum(map(judge, A))

result = {True: 'Yes', False: 'No'}[vote >= M]
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3121795952320099
    2. 'reduce' → logprob: -2.0621795654296875
    3. 'partial' → logprob: -2.0621795654296875
    4. 'l' → logprob: -4.8121795654296875
    5. ' wraps' → logprob: -5.3121795654296875
    6. 'cached' → logprob: -8.562179565429688
    7. 'cache' → logprob: -8.687179565429688
    8. 'cmp' → logprob: -8.937179565429688
    9. ' partial' → logprob: -9.562179565429688
    10. 'wr' → logprob: -9.937179565429688

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006976079195737839
    2. '(lambda' → logprob: -5.131976127624512
    3. ' (' → logprob: -7.756976127624512
    4. ',' → logprob: -8.506976127624512
    5. '```' → logprob: -9.256976127624512
    6. '.' → logprob: -9.381976127624512
    7. 'def' → logprob: -9.506976127624512
    8. '(
' → logprob: -10.256976127624512
    9. 'lambda' → logprob: -10.756976127624512
    10. '\(' → logprob: -10.881976127624512

Token 5: 'get' (ID: 522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014034456573426723
    2. '(lambda' → logprob: -4.889034271240234
    3. '\' → logprob: -6.514034271240234
    4. ',' → logprob: -6.514034271240234
    5. 'def' → logprob: -6.639034271240234
    6. '.' → logprob: -7.014034271240234
    7. '```' → logprob: -7.389034271240234
    8. '\(' → logprob: -8.889034271240234
    9. '(
' → logprob: -9.139034271240234
    10. '\n' → logprob: -9.514034271240234

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28489041328430176
    2. 'attr' → logprob: -1.4098904132843018
    3. '_attr' → logprob: -6.659890174865723
    4. '_user' → logprob: -7.034890174865723
    5. '_item' → logprob: -7.284890174865723
    6. 'ter' → logprob: -8.659890174865723
    7. '_sum' → logprob: -8.659890174865723
    8. '_filter' → logprob: -9.659890174865723
    9. '_total' → logprob: -9.909890174865723
    10. '_attribute' → logprob: -10.034890174865723

Token 7: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.47017720341682434
    2. ' getattr' → logprob: -1.345177173614502
    3. ' get' → logprob: -2.595177173614502
    4. 'get' → logprob: -3.970177173614502
    5. 'lambda' → logprob: -3.970177173614502
    6. ' dict' → logprob: -7.345177173614502
    7. 'getitem' → logprob: -8.09517765045166
    8. ' ' → logprob: -8.22017765045166
    9. ' functools' → logprob: -8.34517765045166
    10. 'dict' → logprob: -8.97017765045166

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13307948410511017
    2. ' obj' → logprob: -2.6330795288085938
    3. ' s' → logprob: -4.133079528808594
    4. ' f' → logprob: -4.258079528808594
    5. ' lambda' → logprob: -4.508079528808594
    6. ' ' → logprob: -5.258079528808594
    7. ' lst' → logprob: -7.008079528808594
    8. ' object' → logprob: -7.258079528808594
    9. ' a' → logprob: -7.258079528808594
    10. ' getattr' → logprob: -7.633079528808594

Token 9: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47097665071487427
    2. 'input' → logprob: -1.8459765911102295
    3. ' reduce' → logprob: -2.4709765911102295
    4. 'reduce' → logprob: -2.9709765911102295
    5. ' int' → logprob: -3.5959765911102295
    6. ' sum' → logprob: -5.095976829528809
    7. 'int' → logprob: -5.095976829528809
    8. ' ' → logprob: -5.595976829528809
    9. ' map' → logprob: -5.595976829528809
    10. ' None' → logprob: -5.845976829528809

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22669024765491486
    2. '(map' → logprob: -1.7266902923583984
    3. '(filter' → logprob: -4.601690292358398
    4. '(get' → logprob: -4.726690292358398
    5. '()' → logprob: -6.101690292358398
    6. '(range' → logprob: -6.351690292358398
    7. '(re' → logprob: -7.101690292358398
    8. '(
' → logprob: -8.101690292358398
    9. '(int' → logprob: -9.226690292358398
    10. '(eval' → logprob: -9.226690292358398

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7100220322608948
    2. '(lambda' → logprob: -1.08502197265625
    3. '(int' → logprob: -2.08502197265625
    4. '(str' → logprob: -3.21002197265625
    5. ')' → logprob: -6.21002197265625
    6. '(eval' → logprob: -6.83502197265625
    7. '(get' → logprob: -7.46002197265625
    8. '(
' → logprob: -8.33502197265625
    9. 'int' → logprob: -8.46002197265625
    10. '(abs' → logprob: -8.58502197265625

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5697628855705261
    2. '(get' → logprob: -2.319762945175171
    3. '(input' → logprob: -2.319762945175171
    4. '(range' → logprob: -2.819762945175171
    5. '(token' → logprob: -3.069762945175171
    6. '(user' → logprob: -3.444762945175171
    7. '))' → logprob: -4.194762706756592
    8. '(data' → logprob: -4.944762706756592
    9. '(tokens' → logprob: -4.944762706756592
    10. '(open' → logprob: -5.069762706756592

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0797148197889328
    2. ' input' → logprob: -2.579714775085449
    3. '(input' → logprob: -7.329714775085449
    4. 'get' → logprob: -9.57971477508545
    5. ',input' → logprob: -10.95471477508545
    6. 'open' → logprob: -11.20471477508545
    7. ')' → logprob: -11.20471477508545
    8. '))' → logprob: -11.57971477508545
    9. '```' → logprob: -11.57971477508545
    10. ' get' → logprob: -12.07971477508545

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47965994477272034
    2. '(' → logprob: -1.854659914970398
    3. '()' → logprob: -2.6046600341796875
    4. '(()' → logprob: -2.8546600341796875
    5. '())' → logprob: -3.1046600341796875
    6. '()));' → logprob: -3.6046600341796875
    7. '())))' → logprob: -4.9796600341796875
    8. '(""))' → logprob: -5.6046600341796875
    9. '());' → logprob: -6.1046600341796875
    10. '('' → logprob: -6.4796600341796875

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004114492796361446
    2. 'strip' → logprob: -5.504114627838135
    3. 'rstrip' → logprob: -10.254114151000977
    4. 'read' → logprob: -14.254114151000977
    5. ' split' → logprob: -15.379114151000977
    6. '(split' → logprob: -17.004114151000977
    7. 'spl' → logprob: -17.754114151000977
    8. 'replace' → logprob: -18.879114151000977
    9. '.split' → logprob: -19.004114151000977
    10. ')' → logprob: -19.754114151000977

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7399667501449585
    2. '())' → logprob: -0.9899667501449585
    3. '))' → logprob: -2.989966869354248
    4. ')))' → logprob: -3.364966869354248
    5. ')' → logprob: -3.614966869354248
    6. '())))' → logprob: -3.739966869354248
    7. '()' → logprob: -4.614966869354248
    8. '(' → logprob: -5.239966869354248
    9. '()));' → logprob: -8.61496639251709
    10. '('' → logprob: -9.86496639251709

Token 17: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40049704909324646
    2. 'x' → logprob: -2.7754969596862793
    3. 'n' → logprob: -2.7754969596862793
    4. '(' → logprob: -3.1504969596862793
    5. '(n' → logprob: -3.9004969596862793
    6. 'def' → logprob: -4.025496959686279
    7. 'nums' → logprob: -4.025496959686279
    8. 'data' → logprob: -4.275496959686279
    9. 'numbers' → logprob: -4.400496959686279
    10. '_' → logprob: -4.400496959686279

Token 18: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8577066659927368
    2. ' =' → logprob: -1.6077066659927368
    3. '=' → logprob: -1.7327066659927368
    4. '[' → logprob: -2.2327065467834473
    5. '.' → logprob: -3.1077065467834473
    6. ',' → logprob: -3.7327065467834473
    7. ' ' → logprob: -4.857706546783447
    8. ' )' → logprob: -5.732706546783447
    9. '(' → logprob: -5.857706546783447
    10. '_' → logprob: -6.482706546783447

Token 19: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.47301870584487915
    2. 'M' → logprob: -1.2230186462402344
    3. '*' → logprob: -4.223018646240234
    4. 'A' → logprob: -4.473018646240234
    5. ' K' → logprob: -4.473018646240234
    6. '*M' → logprob: -4.473018646240234
    7. '*K' → logprob: -4.973018646240234
    8. 'Q' → logprob: -5.098018646240234
    9. ' M' → logprob: -5.223018646240234
    10. 'a' → logprob: -5.473018646240234

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12754583358764648
    2. '=' → logprob: -2.1275458335876465
    3. ',' → logprob: -7.6275458335876465
    4. '<|end|>' → logprob: -9.377546310424805
    5. ' =
' → logprob: -11.377546310424805
    6. ')' → logprob: -11.377546310424805
    7. ' ,' → logprob: -11.502546310424805
    8. ' ' → logprob: -12.127546310424805
    9. ' =)' → logprob: -13.502546310424805
    10. ' =",' → logprob: -14.002546310424805

Token 21: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.05947689339518547
    2. 'get' → logprob: -3.059476852416992
    3. ' map' → logprob: -4.559476852416992
    4. 'map' → logprob: -7.934476852416992
    5. ' list' → logprob: -13.809476852416992
    6. ' ' → logprob: -14.184476852416992
    7. ' input' → logprob: -14.184476852416992
    8. '=get' → logprob: -14.559476852416992
    9. '(get' → logprob: -15.309476852416992
    10. '	get' → logprob: -15.434476852416992

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005373051972128451
    2. '(' → logprob: -7.750537395477295
    3. '()[' → logprob: -10.000536918640137
    4. '(),' → logprob: -10.625536918640137
    5. '()
' → logprob: -11.750536918640137
    6. ' ()' → logprob: -12.000536918640137
    7. '()]' → logprob: -12.750536918640137
    8. '()

' → logprob: -12.750536918640137
    9. '[]' → logprob: -13.000536918640137
    10. '()\' → logprob: -13.250536918640137

Token 23: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7580127716064453
    2. 'data' → logprob: -1.7580127716064453
    3. 'graph' → logprob: -1.7580127716064453
    4. 'a' → logprob: -2.5080127716064453
    5. 'arr' → logprob: -2.5080127716064453
    6. 'matrix' → logprob: -3.0080127716064453
    7. 'result' → logprob: -3.2580127716064453
    8. 'edges' → logprob: -3.7580127716064453
    9. 'grid' → logprob: -3.8830127716064453
    10. 'array' → logprob: -4.008012771606445

Token 24: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7401311993598938
    2. ' =' → logprob: -1.240131139755249
    3. '[' → logprob: -1.740131139755249
    4. '=' → logprob: -3.990131139755249
    5. 's' → logprob: -4.490131378173828
    6. '[:]' → logprob: -4.740131378173828
    7. ',' → logprob: -5.240131378173828
    8. '_' → logprob: -5.740131378173828
    9. '<|end|>' → logprob: -5.740131378173828
    10. '[:' → logprob: -6.115131378173828

Token 25: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5877963900566101
    2. 'get' → logprob: -1.0877964496612549
    3. ' list' → logprob: -2.962796449661255
    4. 'list' → logprob: -3.587796449661255
    5. '[get' → logprob: -4.087796211242676
    6. '[]' → logprob: -5.337796211242676
    7. ' [' → logprob: -5.587796211242676
    8. '[' → logprob: -6.337796211242676
    9. ' []' → logprob: -6.962796211242676
    10. '[list' → logprob: -11.087796211242676

Token 26: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -12.000014305114746
    3. '()
' → logprob: -12.750014305114746
    4. ' ()' → logprob: -13.500014305114746
    5. '()]' → logprob: -13.625014305114746
    6. '()[' → logprob: -14.375014305114746
    7. '())' → logprob: -14.875014305114746
    8. '()`' → logprob: -14.875014305114746
    9. '()

' → logprob: -15.125014305114746
    10. '`()' → logprob: -15.250014305114746

Token 27: 'tot' (ID: 25645)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06774065643548965
    2. 'for' → logprob: -3.6927406787872314
    3. 'dp' → logprob: -4.567740440368652
    4. 'A' → logprob: -4.942740440368652
    5. 'b' → logprob: -5.442740440368652
    6. 'count' → logprob: -6.067740440368652
    7. 'Q' → logprob: -6.067740440368652
    8. 'counts' → logprob: -6.192740440368652
    9. 'result' → logprob: -6.192740440368652
    10. 'd' → logprob: -6.692740440368652

Token 28: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.009881101548671722
    2. 'a' → logprob: -5.259881019592285
    3. ' =' → logprob: -5.759881019592285
    4. '=' → logprob: -6.634881019592285
    5. 'l' → logprob: -10.134881019592285
    6. '_' → logprob: -10.384881019592285
    7. '_al' → logprob: -10.634881019592285
    8. '_a' → logprob: -10.759881019592285
    9. 'als' → logprob: -11.384881019592285
    10. ' +=' → logprob: -11.884881019592285

Token 29: ' reduce' (ID: 10389)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7763209342956543
    2. 'sum' → logprob: -0.7763209342956543
    3. '0' → logprob: -2.9013209342956543
    4. ' ' → logprob: -4.776320934295654
    5. 'reduce' → logprob: -5.401320934295654
    6. ' M' → logprob: -5.526320934295654
    7. ' reduce' → logprob: -6.026320934295654
    8. ' A' → logprob: -6.526320934295654
    9. 'M' → logprob: -7.026320934295654
    10. ' [' → logprob: -7.401320934295654

Token 30: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06235472112894058
    2. '(' → logprob: -2.812354803085327
    3. '(operator' → logprob: -8.062355041503906
    4. '(sum' → logprob: -10.062355041503906
    5. '(+' → logprob: -11.437355041503906
    6. '((' → logprob: -12.187355041503906
    7. '(int' → logprob: -12.312355041503906
    8. 'lambda' → logprob: -12.687355041503906
    9. '```' → logprob: -13.312355041503906
    10. '(
' → logprob: -13.937355041503906

Token 31: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22110389173030853
    2. ' a' → logprob: -1.7211039066314697
    3. 'a' → logprob: -4.596103668212891
    4. 'x' → logprob: -4.971103668212891
    5. ' acc' → logprob: -7.096103668212891
    6. ' ' → logprob: -7.471103668212891
    7. ',' → logprob: -7.846103668212891
    8. ' ,' → logprob: -8.84610366821289
    9. 'acc' → logprob: -9.09610366821289
    10. ' total' → logprob: -9.22110366821289

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010026819072663784
    2. '+' → logprob: -7.126002788543701
    3. ' ,' → logprob: -9.626002311706543
    4. ',x' → logprob: -9.626002311706543
    5. ' +' → logprob: -10.626002311706543
    6. '+,' → logprob: -11.376002311706543
    7. 'x' → logprob: -12.501002311706543
    8. ',y' → logprob: -12.501002311706543
    9. 'plus' → logprob: -12.751002311706543
    10. 'a' → logprob: -12.876002311706543

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759730339050293
    2. 'y' → logprob: -0.8259730339050293
    3. 'x' → logprob: -11.200973510742188
    4. 'a' → logprob: -11.825973510742188
    5. ' ' → logprob: -12.200973510742188
    6. ' x' → logprob: -12.825973510742188
    7. ' a' → logprob: -13.950973510742188
    8. ',' → logprob: -14.075973510742188
    9. '	y' → logprob: -14.575973510742188
    10. '  ' → logprob: -14.700973510742188

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018775809556245804
    2. ',' → logprob: -4.018775939941406
    3. ' :' → logprob: -8.268775939941406
    4. 'x' → logprob: -9.143775939941406
    5. ':x' → logprob: -9.393775939941406
    6. '+' → logprob: -9.643775939941406
    7. ',x' → logprob: -9.643775939941406
    8. '+:' → logprob: -11.643775939941406
    9. ' ,' → logprob: -11.893775939941406
    10. '+x' → logprob: -12.393775939941406

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5231753587722778
    2. 'x' → logprob: -0.8981753587722778
    3. ' ' → logprob: -10.523175239562988
    4. '	x' → logprob: -11.523175239562988
    5. '  ' → logprob: -12.273175239562988
    6. '   ' → logprob: -12.773175239562988
    7. '(x' → logprob: -13.523175239562988
    8. ' (' → logprob: -13.835675239562988
    9. ' ' → logprob: -14.273175239562988
    10. '+' → logprob: -14.460675239562988

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008148793131113052
    2. ' +' → logprob: -5.508148670196533
    3. '+y' → logprob: -5.508148670196533
    4. '+x' → logprob: -12.258149147033691
    5. '|' → logprob: -14.008149147033691
    6. '+=' → logprob: -14.633149147033691
    7. '＋' → logprob: -14.758149147033691
    8. '+,' → logprob: -15.008149147033691
    9. '+b' → logprob: -15.133149147033691
    10. ',' → logprob: -15.758149147033691

Token 37: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12718836963176727
    2. ' y' → logprob: -2.1271884441375732
    3. ' ' → logprob: -9.627188682556152
    4. 'x' → logprob: -9.752188682556152
    5. 'A' → logprob: -10.252188682556152
    6. '1' → logprob: -10.502188682556152
    7. ' A' → logprob: -11.252188682556152
    8. ' (' → logprob: -11.377188682556152
    9. '(' → logprob: -11.502188682556152
    10. '  ' → logprob: -12.127188682556152

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010824963450431824
    2. ' +' → logprob: -5.385825157165527
    3. '+' → logprob: -5.510825157165527
    4. ' ,' → logprob: -7.135825157165527
    5. 'A' → logprob: -7.760825157165527
    6. '+A' → logprob: -8.385825157165527
    7. ',A' → logprob: -8.385825157165527
    8. ' if' → logprob: -8.885825157165527
    9. ' A' → logprob: -8.885825157165527
    10. '*' → logprob: -10.135825157165527

Token 39: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.47412940859794617
    2. 'A' → logprob: -0.9741294384002686
    3. ' ' → logprob: -10.474129676818848
    4. '[' → logprob: -11.974129676818848
    5. '[A' → logprob: -12.474129676818848
    6. ')' → logprob: -12.599129676818848
    7. ' [' → logprob: -12.724129676818848
    8. '	A' → logprob: -13.599129676818848
    9. '(A' → logprob: -13.849129676818848
    10. ',A' → logprob: -13.849129676818848

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001417261315509677
    2. ',' → logprob: -6.62641716003418
    3. ' )' → logprob: -9.75141716003418
    4. ')+' → logprob: -11.75141716003418
    5. '+' → logprob: -12.00141716003418
    6. ')
' → logprob: -12.37641716003418
    7. ' ' → logprob: -13.00141716003418
    8. '[:' → logprob: -13.00141716003418
    9. '))' → logprob: -13.12641716003418
    10. ' ,' → logprob: -13.50141716003418

Token 41: 'judge' (ID: 163735)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9053545594215393
    2. '+' → logprob: -1.5303544998168945
    3. '-' → logprob: -2.4053544998168945
    4. ' ' → logprob: -2.7803544998168945
    5. 'if' → logprob: -3.0303544998168945
    6. '#' → logprob: -3.1553544998168945
    7. 'print' → logprob: -3.5303544998168945
    8. '*' → logprob: -4.2803544998168945
    9. ' if' → logprob: -4.2803544998168945
    10. ')' → logprob: -4.4053544998168945

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2510473132133484
    2. '=' → logprob: -2.251047372817993
    3. 'd' → logprob: -3.001047372817993
    4. 's' → logprob: -3.876047372817993
    5. 'r' → logprob: -4.251047134399414
    6. '_' → logprob: -4.501047134399414
    7. '(' → logprob: -4.626047134399414
    8. 'ment' → logprob: -4.876047134399414
    9. ' ' → logprob: -6.876047134399414
    10. 'm' → logprob: -8.126047134399414

Token 43: ' lambda' (ID: 27871)
  Prédit: ' tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tot' → logprob: -1.0482503175735474
    2. ' lambda' → logprob: -1.5482503175735474
    3. 'tot' → logprob: -1.5482503175735474
    4. 'lambda' → logprob: -1.7982503175735474
    5. '(lambda' → logprob: -4.173250198364258
    6. ' M' → logprob: -4.798250198364258
    7. '0' → logprob: -4.923250198364258
    8. ' N' → logprob: -4.923250198364258
    9. 'N' → logprob: -5.173250198364258
    10. ' ' → logprob: -5.923250198364258

Token 44: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07752963155508041
    2. 'x' → logprob: -3.0775296688079834
    3. ' n' → logprob: -4.327529430389404
    4. ' s' → logprob: -4.952529430389404
    5. ' a' → logprob: -5.702529430389404
    6. ' total' → logprob: -6.702529430389404
    7. 'n' → logprob: -7.452529430389404
    8. ' t' → logprob: -7.577529430389404
    9. ' ' → logprob: -7.702529430389404
    10. 's' → logprob: -7.827529430389404

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006142667261883616
    2. ' :' → logprob: -7.625614166259766
    3. ',' → logprob: -9.375614166259766
    4. ':x' → logprob: -10.375614166259766
    5. 'x' → logprob: -13.375614166259766
    6. '=' → logprob: -13.500614166259766
    7. ',x' → logprob: -14.000614166259766
    8. ',:' → logprob: -14.125614166259766
    9. ':,' → logprob: -14.250614166259766
    10. ':
' → logprob: -14.375614166259766

Token 46: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9825623631477356
    2. ' x' → logprob: -1.3575623035430908
    3. ' tot' → logprob: -1.6075623035430908
    4. 'tot' → logprob: -1.9825623035430908
    5. ' all' → logprob: -4.48256254196167
    6. 'all' → logprob: -5.23256254196167
    7. '(x' → logprob: -5.85756254196167
    8. 'abs' → logprob: -6.48256254196167
    9. 'sum' → logprob: -6.48256254196167
    10. ' abs' → logprob: -6.60756254196167

Token 47: ' *' (ID: 425)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.38683730363845825
    2. '>=' → logprob: -1.6368372440338135
    3. ' >' → logprob: -2.8868372440338135
    4. ' <=' → logprob: -3.8868372440338135
    5. '>' → logprob: -4.011837482452393
    6. '<=' → logprob: -5.136837482452393
    7. '*' → logprob: -5.261837482452393
    8. ' *' → logprob: -5.511837482452393
    9. '+' → logprob: -5.511837482452393
    10. '%' → logprob: -6.011837482452393

Token 48: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.167701244354248
    2. '2' → logprob: -1.292701244354248
    3. 'M' → logprob: -1.417701244354248
    4. 'tot' → logprob: -2.792701244354248
    5. 'N' → logprob: -3.042701244354248
    6. '(x' → logprob: -3.417701244354248
    7. '(M' → logprob: -5.167701244354248
    8. '(N' → logprob: -5.417701244354248
    9. ' ' → logprob: -5.542701244354248
    10. '4' → logprob: -5.792701244354248

Token 49: '4' (ID: 19)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.09126315265893936
    2. 'x' → logprob: -2.9662630558013916
    3. '2' → logprob: -3.9662630558013916
    4. 'N' → logprob: -4.841263294219971
    5. '(M' → logprob: -5.716263294219971
    6. '(' → logprob: -5.966263294219971
    7. '(x' → logprob: -7.091263294219971
    8. ' M' → logprob: -7.591263294219971
    9. 'tot' → logprob: -7.966263294219971
    10. 'len' → logprob: -8.591262817382812

Token 50: ' *' (ID: 425)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.5405210852622986
    2. 'M' → logprob: -1.5405211448669434
    3. ' tot' → logprob: -1.9155211448669434
    4. 'N' → logprob: -4.040521144866943
    5. ' M' → logprob: -4.415521144866943
    6. '>=' → logprob: -5.165521144866943
    7. '<=' → logprob: -5.290521144866943
    8. '>' → logprob: -6.040521144866943
    9. '<M' → logprob: -6.040521144866943
    10. '*' → logprob: -6.665521144866943

Token 51: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0022307864855974913
    2. 'N' → logprob: -6.252230644226074
    3. ' M' → logprob: -8.877230644226074
    4. 'tot' → logprob: -8.877230644226074
    5. '   ' → logprob: -12.502230644226074
    6. ' tot' → logprob: -13.002230644226074
    7. '>M' → logprob: -13.502230644226074
    8. '  ' → logprob: -13.752230644226074
    9. '*M' → logprob: -13.752230644226074
    10. '7' → logprob: -14.002230644226074

Token 52: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5246803164482117
    2. '<=' → logprob: -1.0246803760528564
    3. ' >=' → logprob: -3.7746803760528564
    4. ' <=' → logprob: -4.149680137634277
    5. '>' → logprob: -4.774680137634277
    6. ' ' → logprob: -8.024680137634277
    7. '<|end|>' → logprob: -8.149680137634277
    8. ' >' → logprob: -8.149680137634277
    9. '<' → logprob: -8.399680137634277
    10. '*' → logprob: -8.774680137634277

Token 53: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.07889606058597565
    2. ' tot' → logprob: -2.5788960456848145
    3. 'total' → logprob: -12.328896522521973
    4. ' ' → logprob: -14.578896522521973
    5. ' ' → logprob: -15.328896522521973
    6. 't' → logprob: -15.453896522521973
    7. ' total' → logprob: -15.703896522521973
    8. 'tol' → logprob: -15.703896522521973
    9. '_tot' → logprob: -15.828896522521973
    10. 'tod' → logprob: -16.328895568847656

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'vote' (ID: 57889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16462934017181396
    2. ' =' → logprob: -2.0396294593811035
    3. '=' → logprob: -4.4146294593811035
    4. ' ' → logprob: -5.9146294593811035
    5. 'A' → logprob: -6.2896294593811035
    6. 'er' → logprob: -7.1646294593811035
    7. 'ers' → logprob: -7.2896294593811035
    8. '<|end|>' → logprob: -7.2896294593811035
    9. '_count' → logprob: -7.5396294593811035
    10. 'ed' → logprob: -7.7896294593811035

Token 57: ' sum' (ID: 4215)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8792576193809509
    2. ' list' → logprob: -1.8792576789855957
    3. 'get' → logprob: -2.6292576789855957
    4. ' [' → logprob: -3.0042576789855957
    5. 'lambda' → logprob: -3.0042576789855957
    6. '[get' → logprob: -3.2542576789855957
    7. '[' → logprob: -3.3792576789855957
    8. ' get' → logprob: -3.8792576789855957
    9. 'A' → logprob: -4.129257678985596
    10. '0' → logprob: -4.129257678985596

Token 58: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39545902609825134
    2. '(j' → logprob: -1.8954590559005737
    3. '(map' → logprob: -2.895458936691284
    4. '(x' → logprob: -3.020458936691284
    5. '([' → logprob: -3.520458936691284
    6. '(a' → logprob: -4.520459175109863
    7. '(A' → logprob: -4.520459175109863
    8. '(v' → logprob: -4.895459175109863
    9. '(i' → logprob: -5.520459175109863
    10. '(lambda' → logprob: -5.770459175109863

Token 59: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.003914899658411741
    2. '(lambda' → logprob: -5.628914833068848
    3. '(' → logprob: -8.253914833068848
    4. '(int' → logprob: -10.503914833068848
    5. '(v' → logprob: -11.003914833068848
    6. '(l' → logprob: -13.378914833068848
    7. '(i' → logprob: -13.378914833068848
    8. '(J' → logprob: -13.503914833068848
    9. '((' → logprob: -14.003914833068848
    10. 'judge' → logprob: -14.128914833068848

Token 60: 'udge' (ID: 35933)
  Prédit: 'udge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udge' → logprob: -0.0001342903997283429
    2. 'judge' → logprob: -9.750134468078613
    3. 'ud' → logprob: -10.625134468078613
    4. 'UDGE' → logprob: -10.875134468078613
    5. 'ambda' → logprob: -11.125134468078613
    6. 'lambda' → logprob: -12.125134468078613
    7. 'udget' → logprob: -13.375134468078613
    8. 'adge' → logprob: -13.500134468078613
    9. 'dge' → logprob: -13.500134468078613
    10. 'odge' → logprob: -13.625134468078613

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023108383174985647
    2. ' ,' → logprob: -6.502310752868652
    3. ',A' → logprob: -7.252310752868652
    4. '(A' → logprob: -9.627310752868652
    5. 'A' → logprob: -10.752310752868652
    6. ' A' → logprob: -12.252310752868652
    7. '),' → logprob: -13.002310752868652
    8. '(),' → logprob: -13.252310752868652
    9. '(' → logprob: -14.002310752868652
    10. ' ' → logprob: -14.752310752868652

Token 62: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16023407876491547
    2. ' A' → logprob: -1.9102340936660767
    3. '(A' → logprob: -12.535234451293945
    4. ')' → logprob: -13.410234451293945
    5. ' ' → logprob: -13.410234451293945
    6. '	A' → logprob: -14.035234451293945
    7. '[A' → logprob: -14.535234451293945
    8. '   ' → logprob: -15.160234451293945
    9. '>A' → logprob: -15.160234451293945
    10. '_A' → logprob: -15.410234451293945

Token 63: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005349211278371513
    2. '))
' → logprob: -7.625535011291504
    3. ' ))' → logprob: -10.750535011291504
    4. ')))' → logprob: -11.500535011291504
    5. ')' → logprob: -11.750535011291504
    6. '))

' → logprob: -12.250535011291504
    7. ' ' → logprob: -13.375535011291504
    8. '))
' → logprob: -14.875535011291504
    9. '),' → logprob: -15.500535011291504
    10. '   ' → logprob: -16.875534057617188

Token 64: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016922367736697197
    2. '"\' → logprob: -4.641922473907471
    3. 'if' → logprob: -5.141922473907471
    4. ''\' → logprob: -7.141922473907471
    5. '"' → logprob: -8.766921997070312
    6. '\n' → logprob: -9.016921997070312
    7. ' print' → logprob: -9.891921997070312
    8. ''' → logprob: -10.391921997070312
    9. '"
' → logprob: -10.391921997070312
    10. '\' → logprob: -10.641921997070312

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06212979927659035
    2. '=' → logprob: -2.8121297359466553
    3. ' ' → logprob: -9.937129974365234
    4. '(' → logprob: -10.562129974365234
    5. ' ==' → logprob: -11.187129974365234
    6. ':' → logprob: -11.312129974365234
    7. '>' → logprob: -11.937129974365234
    8. '```' → logprob: -12.062129974365234
    9. '1' → logprob: -12.562129974365234
    10. ' =
' → logprob: -12.687129974365234

Token 66: ' {' (ID: 354)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13527831435203552
    2. ' "' → logprob: -2.5102782249450684
    3. ''' → logprob: -3.5102782249450684
    4. '"M' → logprob: -4.885278224945068
    5. ' '' → logprob: -5.885278224945068
    6. ''M' → logprob: -6.635278224945068
    7. '"N' → logprob: -7.260278224945068
    8. '1' → logprob: -7.885278224945068
    9. 'vote' → logprob: -8.510278701782227
    10. 'True' → logprob: -8.510278701782227

Token 67: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8022189140319824
    2. '"' → logprob: -1.0522189140319824
    3. ''' → logprob: -2.3022189140319824
    4. '   ' → logprob: -2.8022189140319824
    5. ' True' → logprob: -3.5522189140319824
    6. ' ' → logprob: -5.552218914031982
    7. ' "' → logprob: -5.927218914031982
    8. ''T' → logprob: -6.052218914031982
    9. ' '' → logprob: -6.927218914031982
    10. '  ' → logprob: -7.677218914031982

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032922595273703337
    2. '}' → logprob: -5.753292083740234
    3. ',' → logprob: -10.128292083740234
    4. ' :' → logprob: -10.253292083740234
    5. ':true' → logprob: -10.628292083740234
    6. ':false' → logprob: -12.128292083740234
    7. ':return' → logprob: -14.003292083740234
    8. '}:' → logprob: -14.253292083740234
    9. ':T' → logprob: -14.253292083740234
    10. ':value' → logprob: -14.628292083740234

Token 69: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22684189677238464
    2. ''' → logprob: -1.976841926574707
    3. ' "' → logprob: -2.851841926574707
    4. ' '' → logprob: -5.351841926574707
    5. ' ' → logprob: -8.226841926574707
    6. '   ' → logprob: -8.351841926574707
    7. '"No' → logprob: -8.476841926574707
    8. 'print' → logprob: -9.101841926574707
    9. ''M' → logprob: -9.101841926574707
    10. '"W' → logprob: -9.101841926574707

Token 70: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.009419816546142101
    2. 'No' → logprob: -6.009419918060303
    3. 'YES' → logprob: -6.509419918060303
    4. 'All' → logprob: -6.884419918060303
    5. ' Yes' → logprob: -6.884419918060303
    6. 'yes' → logprob: -7.259419918060303
    7. '是' → logprob: -7.509419918060303
    8. 'At' → logprob: -8.509419441223145
    9. ':' → logprob: -8.509419441223145
    10. 's' → logprob: -8.759419441223145

Token 71: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -3.309382373117842e-05
    2. ''' → logprob: -10.375033378601074
    3. '",' → logprob: -13.625033378601074
    4. ',' → logprob: -15.375033378601074
    5. '',
' → logprob: -16.000032424926758
    6. '','' → logprob: -16.125032424926758
    7. ''}' → logprob: -16.625032424926758
    8. ' ',' → logprob: -16.875032424926758
    9. 'Yes' → logprob: -17.125032424926758
    10. '',
' → logprob: -18.000032424926758

Token 72: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.05804150924086571
    2. 'False' → logprob: -3.058041572570801
    3. ''' → logprob: -5.058041572570801
    4. ' '' → logprob: -6.058041572570801
    5. ' True' → logprob: -7.308041572570801
    6. ' ' → logprob: -11.4330415725708
    7. 'True' → logprob: -11.6830415725708
    8. '(False' → logprob: -11.9330415725708
    9. '=False' → logprob: -12.3080415725708
    10. ' ' → logprob: -12.6830415725708

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2113979209971149e-05
    2. ' :' → logprob: -11.875012397766113
    3. ':'' → logprob: -12.250012397766113
    4. '':' → logprob: -16.375011444091797
    5. ':['' → logprob: -16.625011444091797
    6. '}' → logprob: -17.875011444091797
    7. ' ' → logprob: -18.125011444091797
    8. '[' → logprob: -18.375011444091797
    9. ' :'' → logprob: -18.375011444091797
    10. '<|end|>' → logprob: -18.375011444091797

Token 74: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08901374042034149
    2. ' '' → logprob: -2.4640138149261475
    3. '"' → logprob: -10.089014053344727
    4. ' ' → logprob: -10.714014053344727
    5. ' ' → logprob: -12.089014053344727
    6. ')' → logprob: -14.089014053344727
    7. ',' → logprob: -15.089014053344727
    8. ' "' → logprob: -15.276514053344727
    9. '('' → logprob: -15.339014053344727
    10. ''s' → logprob: -15.401514053344727

Token 75: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00021295747137628496
    2. ' No' → logprob: -8.750212669372559
    3. ''' → logprob: -9.875212669372559
    4. ' ' → logprob: -13.875212669372559
    5. '"No' → logprob: -14.125212669372559
    6. 'Yes' → logprob: -15.250212669372559
    7. 'NO' → logprob: -15.250212669372559
    8. '```' → logprob: -15.500212669372559
    9. '`' → logprob: -16.000213623046875
    10. 'N' → logprob: -16.125213623046875

Token 76: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.4112284183502197
    2. '}' → logprob: -1.1612284183502197
    3. '}[' → logprob: -4.411228179931641
    4. '}'' → logprob: -4.661228179931641
    5. ''' → logprob: -6.661228179931641
    6. ''}
' → logprob: -7.161228179931641
    7. ''}

' → logprob: -8.41122817993164
    8. '}
' → logprob: -9.41122817993164
    9. '[' → logprob: -10.41122817993164
    10. '}

' → logprob: -10.78622817993164

Token 77: '[' (ID: 58)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03833901509642601
    2. '
' → logprob: -3.2883388996124268
    3. '
' → logprob: -8.788338661193848
    4. '[' → logprob: -10.163338661193848
    5. '[
' → logprob: -10.288338661193848
    6. ' print' → logprob: -10.788338661193848
    7. '\n' → logprob: -11.413338661193848
    8. '```' → logprob: -11.663338661193848
    9. '[result' → logprob: -11.913338661193848
    10. '' → logprob: -12.413338661193848

Token 78: 'vote' (ID: 57889)
  Prédit: 'vote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vote' → logprob: -0.0019432762637734413
    2. ' vote' → logprob: -6.251943111419678
    3. 'judge' → logprob: -11.751943588256836
    4. 'v' → logprob: -12.376943588256836
    5. '(v' → logprob: -14.126943588256836
    6. 'votes' → logprob: -14.876943588256836
    7. '.vote' → logprob: -14.876943588256836
    8. 'result' → logprob: -15.251943588256836
    9. ' ' → logprob: -15.501943588256836
    10. '   ' → logprob: -15.876943588256836

Token 79: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6326944828033447
    2. ' >=' → logprob: -0.7576944828033447
    3. ' ' → logprob: -9.507694244384766
    4. '>' → logprob: -11.757694244384766
    5. ']>=' → logprob: -11.757694244384766
    6. '   ' → logprob: -13.632694244384766
    7. '≥' → logprob: -14.132694244384766
    8. ')' → logprob: -14.507694244384766
    9. ')>=' → logprob: -14.632694244384766
    10. ' >' → logprob: -14.632694244384766

Token 80: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0010710387723520398
    2. ' M' → logprob: -7.001070976257324
    3. 'N' → logprob: -9.251070976257324
    4. ' ' → logprob: -10.001070976257324
    5. '   ' → logprob: -11.376070976257324
    6. '  ' → logprob: -12.251070976257324
    7. '    ' → logprob: -14.376070976257324
    8. '1' → logprob: -15.376070976257324
    9. '(M' → logprob: -15.751070976257324
    10. '2' → logprob: -16.00107192993164

Token 81: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049849651753902435
    2. ')]' → logprob: -3.04984974861145
    3. '])' → logprob: -7.299849510192871
    4. ']' → logprob: -7.799849510192871
    5. ')])' → logprob: -8.799849510192871
    6. '))' → logprob: -11.299849510192871
    7. '）' → logprob: -12.174849510192871
    8. ' )' → logprob: -13.299849510192871
    9. ')}' → logprob: -13.424849510192871
    10. ')
' → logprob: -13.549849510192871

Token 82: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. '
' → logprob: -12.500004768371582
    3. '```' → logprob: -13.875004768371582
    4. ' print' → logprob: -15.625004768371582
    5. '
' → logprob: -17.8750057220459
    6. '``' → logprob: -18.6250057220459
    7. '\n' → logprob: -18.8750057220459
    8. '(print' → logprob: -19.3750057220459
    9. '#print' → logprob: -19.7500057220459
    10. 'pr' → logprob: -20.3750057220459

Token 83: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.06200263649225235
    2. '(' → logprob: -2.812002658843994
    3. '(f' → logprob: -11.312002182006836
    4. '('' → logprob: -11.562002182006836
    5. '("("' → logprob: -12.687002182006836
    6. '(results' → logprob: -12.937002182006836
    7. 'result' → logprob: -13.562002182006836
    8. ' (' → logprob: -13.687002182006836
    9. '((' → logprob: -14.062002182006836
    10. '(res' → logprob: -14.187002182006836

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.500001907348633
    5. ' )' → logprob: -16.000001907348633
    6. ')`' → logprob: -16.625001907348633
    7. '})' → logprob: -16.750001907348633
    8. '）' → logprob: -17.375001907348633
    9. ')}' → logprob: -18.125001907348633
    10. '])' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 40.24%
Précision adaptée (1ère position): 40.24%
Précision (top 10): 75.61%
================================================================================
