================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, w = map(int, input().split())
a = [''] * h
for i in range(h):
    a[i] = input()

row = [False] * h
col = [False] * w
for i in range(h):
    for j in range(w):
        if a[i][j] == '#':
            row[i] = True
            col[j] = True

for i in range(h):
    if row[i]:
        for j in range(w):
            if col[j]:
                print(a[i][j], end='')
        print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7141396999359131
    2. '=' → logprob: -0.7141396999359131
    3. ' =' → logprob: -4.089139938354492
    4. ')' → logprob: -6.464139938354492
    5. '*' → logprob: -6.839139938354492
    6. '.' → logprob: -7.964139938354492
    7. ':' → logprob: -8.839139938354492
    8. '[' → logprob: -8.839139938354492
    9. '```' → logprob: -9.339139938354492
    10. ' ' → logprob: -9.464139938354492

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20209194719791412
    2. ' image' → logprob: -2.452091932296753
    3. ' h' → logprob: -3.077091932296753
    4. ' img' → logprob: -3.452091932296753
    5. ' map' → logprob: -4.952092170715332
    6. '0' → logprob: -5.952092170715332
    7. 'image' → logprob: -5.952092170715332
    8. 'map' → logprob: -6.577092170715332
    9. ' np' → logprob: -7.327092170715332
    10. ' input' → logprob: -7.327092170715332

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06916536390781403
    2. '(int' → logprob: -3.4441654682159424
    3. '(lambda' → logprob: -3.8191654682159424
    4. '(str' → logprob: -4.694165229797363
    5. '```' → logprob: -6.694165229797363
    6. '<|end|>' → logprob: -7.819165229797363
    7. '[int' → logprob: -8.069165229797363
    8. ')' → logprob: -8.319165229797363
    9. '(len' → logprob: -8.694165229797363
    10. '<int' → logprob: -8.819165229797363

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018421495333313942
    2. '(' → logprob: -4.768421649932861
    3. ')' → logprob: -4.768421649932861
    4. 'input' → logprob: -7.393421649932861
    5. '(str' → logprob: -8.768421173095703
    6. '```' → logprob: -9.018421173095703
    7. '(raw' → logprob: -9.143421173095703
    8. ' input' → logprob: -10.143421173095703
    9. '(int' → logprob: -10.268421173095703
    10. '[input' → logprob: -10.643421173095703

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4742639660835266
    2. 'input' → logprob: -0.9742639660835266
    3. '(input' → logprob: -9.099264144897461
    4. ')' → logprob: -9.599264144897461
    5. ',input' → logprob: -12.474264144897461
    6. ' )' → logprob: -13.849264144897461
    7. '=input' → logprob: -13.974264144897461
    8. '<input' → logprob: -15.099264144897461
    9. '[input' → logprob: -15.349264144897461
    10. '	input' → logprob: -15.849264144897461

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5141751766204834
    2. '()' → logprob: -1.3891751766204834
    3. ')' → logprob: -2.2641751766204834
    4. '(' → logprob: -4.2641754150390625
    5. '`()' → logprob: -5.5141754150390625
    6. '()">' → logprob: -5.6391754150390625
    7. '()>' → logprob: -5.7641754150390625
    8. '(()' → logprob: -5.7641754150390625
    9. '```' → logprob: -5.7641754150390625
    10. '().' → logprob: -5.8891754150390625

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009176511666737497
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.250917434692383
    4. 'read' → logprob: -14.125917434692383
    5. ' split' → logprob: -14.625917434692383
    6. '(split' → logprob: -15.875917434692383
    7. ')' → logprob: -16.500917434692383
    8. 'startswith' → logprob: -17.750917434692383
    9. 'decode' → logprob: -18.250917434692383
    10. '```' → logprob: -18.375917434692383

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5657400488853455
    2. ')' → logprob: -0.9407400488853455
    3. '))' → logprob: -3.4407401084899902
    4. '()' → logprob: -5.19074010848999
    5. '()))' → logprob: -5.69074010848999
    6. '('' → logprob: -8.315739631652832
    7. '`)' → logprob: -8.815739631652832
    8. '(' → logprob: -8.815739631652832
    9. '')' → logprob: -10.190739631652832
    10. ' ())' → logprob: -10.565739631652832

Token 11: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9505304098129272
    2. ',' → logprob: -1.8255304098129272
    3. 'a' → logprob: -1.9505304098129272
    4. '#' → logprob: -1.9505304098129272
    5. ')' → logprob: -3.325530529022217
    6. 'r' → logprob: -4.075530529022217
    7. 'print' → logprob: -4.200530529022217
    8. 'for' → logprob: -4.450530529022217
    9. 'n' → logprob: -4.700530529022217
    10. 'm' → logprob: -4.700530529022217

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4353376626968384
    2. '[i' → logprob: -2.310337543487549
    3. '[h' → logprob: -2.685337543487549
    4. 'rray' → logprob: -3.310337543487549
    5. 'r' → logprob: -3.310337543487549
    6. ' =' → logprob: -3.810337543487549
    7. '[r' → logprob: -3.810337543487549
    8. 'rr' → logprob: -4.435337543487549
    9. ',' → logprob: -4.810337543487549
    10. ' ' → logprob: -4.810337543487549

Token 13: ' ['' (ID: 5140)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.3237331807613373
    2. '[' → logprob: -2.69873309135437
    3. '[]' → logprob: -2.82373309135437
    4. ' [' → logprob: -2.94873309135437
    5. 'list' → logprob: -3.32373309135437
    6. '[[' → logprob: -4.323733329772949
    7. 'h' → logprob: -4.698733329772949
    8. '[int' → logprob: -4.823733329772949
    9. ' []' → logprob: -4.948733329772949
    10. '[list' → logprob: -5.073733329772949

Token 14: '']' (ID: 1089)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01815146580338478
    2. '.#' → logprob: -5.01815128326416
    3. '#' → logprob: -5.14315128326416
    4. '0' → logprob: -6.14315128326416
    5. ''.' → logprob: -7.14315128326416
    6. '.'' → logprob: -7.26815128326416
    7. 'input' → logprob: -7.26815128326416
    8. '']' → logprob: -8.14315128326416
    9. ' ' → logprob: -8.76815128326416
    10. '.]' → logprob: -9.14315128326416

Token 15: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6127546429634094
    2. '[' → logprob: -0.8627546429634094
    3. ' *' → logprob: -4.862754821777344
    4. ')' → logprob: -5.362754821777344
    5. '+' → logprob: -5.362754821777344
    6. '(' → logprob: -5.362754821777344
    7. ' for' → logprob: -5.862754821777344
    8. 'a' → logprob: -5.862754821777344
    9. 'for' → logprob: -6.237754821777344
    10. ']' → logprob: -6.612754821777344

Token 16: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011403822340071201
    2. ' h' → logprob: -4.511404037475586
    3. 'w' → logprob: -8.636404037475586
    4. '(h' → logprob: -9.011404037475586
    5. '(' → logprob: -11.011404037475586
    6. ' ' → logprob: -11.136404037475586
    7. '10' → logprob: -12.261404037475586
    8. ' (' → logprob: -12.386404037475586
    9. ' w' → logprob: -12.511404037475586
    10. '5' → logprob: -12.886404037475586

Token 17: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7144724130630493
    2. '<|end|>' → logprob: -0.8394724130630493
    3. '[
' → logprob: -3.3394722938537598
    4. '\' → logprob: -4.46447229385376
    5. '
' → logprob: -4.58947229385376
    6. '\n' → logprob: -5.21447229385376
    7. 'a' → logprob: -5.33947229385376
    8. '<|end|>' → logprob: -5.96447229385376
    9. '\[' → logprob: -6.46447229385376
    10. '```' → logprob: -6.96447229385376

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007312234491109848
    2. '<|end|>' → logprob: -6.007312297821045
    3. ' for' → logprob: -6.132312297821045
    4. '[' → logprob: -6.882312297821045
    5. '
' → logprob: -7.257312297821045
    6. 'a' → logprob: -8.007311820983887
    7. '\' → logprob: -8.382311820983887
    8. '```' → logprob: -9.257311820983887
    9. '\n' → logprob: -9.507311820983887
    10. '<|end|>' → logprob: -10.507311820983887

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0777040421962738
    2. ' ' → logprob: -2.7027039527893066
    3. 'i' → logprob: -5.202703952789307
    4. '_' → logprob: -6.577703952789307
    5. ' _' → logprob: -7.202703952789307
    6. ' ‌' → logprob: -9.577704429626465
    7. '  ' → logprob: -11.202704429626465
    8. ' ' → logprob: -12.077704429626465
    9. ' I' → logprob: -13.702704429626465
    10. ' h' → logprob: -13.702704429626465

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016367007046937943
    2. 'in' → logprob: -4.266366958618164
    3. 'n' → logprob: -6.516366958618164
    4. ' ' → logprob: -7.516366958618164
    5. ' n' → logprob: -9.141366958618164
    6. '  ' → logprob: -10.266366958618164
    7. ' i' → logprob: -12.016366958618164
    8. ',' → logprob: -12.141366958618164
    9. '	in' → logprob: -12.391366958618164
    10. 'range' → logprob: -12.516366958618164

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269330382347107
    2. 'range' → logprob: -2.1269330978393555
    3. '	range' → logprob: -13.251933097839355
    4. ' ' → logprob: -13.376933097839355
    5. '(range' → logprob: -14.251933097839355
    6. ' xrange' → logprob: -14.376933097839355
    7. '_range' → logprob: -15.751933097839355
    8. ')' → logprob: -16.62693214416504
    9. '.range' → logprob: -17.62693214416504
    10. '  ' → logprob: -17.87693214416504

Token 22: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11354586482048035
    2. '(h' → logprob: -2.2385458946228027
    3. ' (' → logprob: -7.363545894622803
    4. '(a' → logprob: -10.113545417785645
    5. '(len' → logprob: -10.613545417785645
    6. '(i' → logprob: -11.988545417785645
    7. 'h' → logprob: -12.988545417785645
    8. '(range' → logprob: -13.113545417785645
    9. '(space' → logprob: -13.238545417785645
    10. '(n' → logprob: -13.613545417785645

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001387731870636344
    2. ')' → logprob: -7.001387596130371
    3. '):
' → logprob: -8.251387596130371
    4. ':' → logprob: -8.501387596130371
    5. '+' → logprob: -12.001387596130371
    6. ' ):' → logprob: -13.376387596130371
    7. ''):' → logprob: -14.126387596130371
    8. ',' → logprob: -15.126387596130371
    9. ']:' → logprob: -15.251387596130371
    10. '}:' → logprob: -15.251387596130371

Token 24: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7811651825904846
    2. '   ' → logprob: -0.9061651825904846
    3. ' a' → logprob: -2.53116512298584
    4. '<|end|>' → logprob: -3.03116512298584
    5. ' ' → logprob: -5.28116512298584
    6. '<|end|>' → logprob: -6.65616512298584
    7. '	a' → logprob: -7.03116512298584
    8. ')' → logprob: -7.40616512298584
    9. '    ' → logprob: -7.53116512298584
    10. 'w' → logprob: -8.40616512298584

Token 25: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0019311357755213976
    2. ' a' → logprob: -6.251931190490723
    3. '   ' → logprob: -14.001931190490723
    4. ' ' → logprob: -15.001931190490723
    5. 'input' → logprob: -15.126931190490723
    6. '_a' → logprob: -15.376931190490723
    7. 's' → logprob: -15.376931190490723
    8. '	a' → logprob: -15.751931190490723
    9. 'A' → logprob: -16.501930236816406
    10. '(a' → logprob: -16.876930236816406

Token 26: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014091627672314644
    2. '[' → logprob: -6.75140905380249
    3. '[a' → logprob: -8.501409530639648
    4. '[input' → logprob: -10.876409530639648
    5. '[int' → logprob: -12.001409530639648
    6. '[I' → logprob: -12.626409530639648
    7. ' [' → logprob: -13.126409530639648
    8. '\[' → logprob: -14.126409530639648
    9. '[h' → logprob: -14.251409530639648
    10. '```' → logprob: -14.251409530639648

Token 27: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6089649200439453
    2. '=' → logprob: -0.9839649200439453
    3. ']' → logprob: -2.6089649200439453
    4. ')' → logprob: -5.358964920043945
    5. ']=' → logprob: -5.733964920043945
    6. ')=' → logprob: -7.983964920043945
    7. 'input' → logprob: -9.233964920043945
    8. ' ]' → logprob: -9.733964920043945
    9. '=input' → logprob: -10.108964920043945
    10. ' +=' → logprob: -10.233964920043945

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42882782220840454
    2. '=' → logprob: -1.0538277626037598
    3. '=input' → logprob: -10.178828239440918
    4. ' +=' → logprob: -10.303828239440918
    5. '<|end|>' → logprob: -11.178828239440918
    6. 'input' → logprob: -11.428828239440918
    7. ',' → logprob: -11.803828239440918
    8. '+=' → logprob: -12.053828239440918
    9. ' =
' → logprob: -12.553828239440918
    10. ')' → logprob: -13.053828239440918

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048604074865579605
    2. ' input' → logprob: -3.0486040115356445
    3. 'list' → logprob: -11.173604011535645
    4. ' list' → logprob: -13.423604011535645
    5. '(input' → logprob: -14.423604011535645
    6. '=input' → logprob: -15.548604011535645
    7. '<input' → logprob: -15.798604011535645
    8. '[input' → logprob: -16.67360496520996
    9. ',input' → logprob: -16.79860496520996
    10. 'int' → logprob: -16.79860496520996

Token 30: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.822646693966817e-06
    2. '().' → logprob: -13.375007629394531
    3. '()
' → logprob: -13.875007629394531
    4. ' ()' → logprob: -14.000007629394531
    5. '()]' → logprob: -14.000007629394531
    6. '()`' → logprob: -14.000007629394531
    7. '`()' → logprob: -14.250007629394531
    8. ']()' → logprob: -14.875007629394531
    9. '（）' → logprob: -14.875007629394531
    10. '(' → logprob: -15.250007629394531

Token 31: 'row' (ID: 843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6409234404563904
    2. 'm' → logprob: -1.7659235000610352
    3. 'b' → logprob: -2.515923500061035
    4. 'n' → logprob: -3.140923500061035
    5. 'f' → logprob: -3.265923500061035
    6. '#' → logprob: -3.765923500061035
    7. 'r' → logprob: -3.765923500061035
    8. 'max' → logprob: -4.015923500061035
    9. 'x' → logprob: -4.390923500061035
    10. 'h' → logprob: -4.390923500061035

Token 32: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2982400059700012
    2. 's' → logprob: -1.9232399463653564
    3. '_s' → logprob: -2.2982399463653564
    4. '_sum' → logprob: -4.9232401847839355
    5. '[:]' → logprob: -7.0482401847839355
    6. '_count' → logprob: -7.2982401847839355
    7. '[]' → logprob: -8.173239707946777
    8. '_counts' → logprob: -8.173239707946777
    9. ' =' → logprob: -8.423239707946777
    10. '_max' → logprob: -8.548239707946777

Token 33: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.819337785243988
    2. '[h' → logprob: -0.819337785243988
    3. '['' → logprob: -3.194337844848633
    4. '[a' → logprob: -3.444337844848633
    5. 'h' → logprob: -4.444337844848633
    6. '[max' → logprob: -4.569337844848633
    7. '[]' → logprob: -5.694337844848633
    8. '[min' → logprob: -5.694337844848633
    9. '[w' → logprob: -5.694337844848633
    10. 'sum' → logprob: -5.944337844848633

Token 34: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03854046016931534
    2. 'False' → logprob: -3.5385403633117676
    3. 'max' → logprob: -6.788540363311768
    4. '[' → logprob: -6.788540363311768
    5. ''' → logprob: -6.913540363311768
    6. 'True' → logprob: -7.038540363311768
    7. 'sum' → logprob: -7.163540363311768
    8. 'a' → logprob: -7.538540363311768
    9. ']' → logprob: -7.788540363311768
    10. ' ' → logprob: -8.038540840148926

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009275498799979687
    2. ' for' → logprob: -5.009275436401367
    3. ']*' → logprob: -6.134275436401367
    4. 'for' → logprob: -8.759275436401367
    5. ')' → logprob: -9.509275436401367
    6. ' ]' → logprob: -9.634275436401367
    7. ',' → logprob: -9.759275436401367
    8. ')]' → logprob: -11.509275436401367
    9. '[' → logprob: -12.134275436401367
    10. ']*(' → logprob: -12.259275436401367

Token 36: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7524120807647705
    2. ')' → logprob: -1.3774120807647705
    3. '*' → logprob: -1.6274120807647705
    4. ' for' → logprob: -3.0024120807647705
    5. ' *' → logprob: -4.127411842346191
    6. ',' → logprob: -5.377411842346191
    7. '[' → logprob: -5.877411842346191
    8. '(' → logprob: -6.627411842346191
    9. 'for' → logprob: -7.002411842346191
    10. ' ]' → logprob: -7.127411842346191

Token 37: ' h' (ID: 312)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3146848678588867
    2. 'h' → logprob: -1.3146848678588867
    3. ' w' → logprob: -6.814684867858887
    4. ' h' → logprob: -8.064684867858887
    5. '10' → logprob: -13.439684867858887
    6. '9' → logprob: -13.564684867858887
    7. '(h' → logprob: -13.814684867858887
    8. '(w' → logprob: -13.939684867858887
    9. '   ' → logprob: -14.064684867858887
    10. ' ' → logprob: -14.064684867858887

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'col' (ID: 1798)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490913987159729
    2. '=' → logprob: -2.9299092292785645
    3. 's' → logprob: -11.054908752441406
    4. ' ' → logprob: -12.429908752441406
    5. ']' → logprob: -12.804908752441406
    6. '[' → logprob: -13.179908752441406
    7. ')' → logprob: -14.429908752441406
    8. '[]' → logprob: -15.054908752441406
    9. ',' → logprob: -15.179908752441406
    10. '＝' → logprob: -15.304908752441406

Token 41: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21167394518852234
    2. ' [' → logprob: -1.8366739749908447
    3. '[w' → logprob: -3.4616739749908447
    4. ' ' → logprob: -11.086673736572266
    5. ' w' → logprob: -12.086673736572266
    6. 'w' → logprob: -12.211673736572266
    7. '<w' → logprob: -12.836673736572266
    8. '[c' → logprob: -12.836673736572266
    9. 'False' → logprob: -12.961673736572266
    10. '   ' → logprob: -12.961673736572266

Token 42: 'False' (ID: 8168)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3136099874973297
    2. 'False' → logprob: -1.3136099576950073
    3. ' False' → logprob: -8.938610076904297
    4. ' w' → logprob: -9.063610076904297
    5. 'True' → logprob: -9.813610076904297
    6. '(w' → logprob: -11.063610076904297
    7. 'W' → logprob: -11.688610076904297
    8. '   ' → logprob: -12.188610076904297
    9. '<w' → logprob: -12.813610076904297
    10. '(False' → logprob: -13.063610076904297

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23035664856433868
    2. ')' → logprob: -1.6053566932678223
    3. '*' → logprob: -5.480356693267822
    4. ' *' → logprob: -8.980356216430664
    5. ' ' → logprob: -8.980356216430664
    6. 'w' → logprob: -9.230356216430664
    7. '>' → logprob: -9.230356216430664
    8. ' ]' → logprob: -9.605356216430664
    9. ' w' → logprob: -10.105356216430664
    10. '   ' → logprob: -10.230356216430664

Token 44: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6126951575279236
    2. '[' → logprob: -1.3626952171325684
    3. '(' → logprob: -2.4876952171325684
    4. '(w' → logprob: -2.7376952171325684
    5. '*w' → logprob: -3.9876952171325684
    6. '[w' → logprob: -4.737695217132568
    7. ' *' → logprob: -5.237695217132568
    8. ')' → logprob: -5.237695217132568
    9. 'w' → logprob: -5.612695217132568
    10. '`' → logprob: -5.862695217132568

Token 45: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005819887388497591
    2. 'len' → logprob: -5.880819797515869
    3. ' w' → logprob: -6.005819797515869
    4. '(w' → logprob: -8.380820274353027
    5. ' len' → logprob: -8.755820274353027
    6. '(len' → logprob: -9.005820274353027
    7. 'h' → logprob: -11.005820274353027
    8. ' (' → logprob: -12.630820274353027
    9. ' ' → logprob: -12.755820274353027
    10. '(' → logprob: -13.005820274353027

Token 46: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0742507129907608
    2. ' for' → logprob: -2.9492506980895996
    3. '#' → logprob: -4.4492506980896
    4. ' ' → logprob: -6.5742506980896
    5. ' 
' → logprob: -6.9492506980896
    6. '\n' → logprob: -6.9492506980896
    7. '<|end|>' → logprob: -7.1992506980896
    8. '```' → logprob: -7.1992506980896
    9. '\' → logprob: -7.4492506980896
    10. '
' → logprob: -7.8242506980896

Token 47: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003625177196227014
    2. ' for' → logprob: -8.250362396240234
    3. 'f' → logprob: -9.750362396240234
    4. '```' → logprob: -10.375362396240234
    5. '
' → logprob: -12.375362396240234
    6. '#' → logprob: -13.750362396240234
    7. 'n' → logprob: -13.875362396240234
    8. 'i' → logprob: -14.000362396240234
    9. 'r' → logprob: -14.625362396240234
    10. '`' → logprob: -14.625362396240234

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0020414141472429037
    2. ' ' → logprob: -6.252041339874268
    3. 'i' → logprob: -9.627041816711426
    4. ' h' → logprob: -10.627041816711426
    5. ' _' → logprob: -11.502041816711426
    6. ' ' → logprob: -12.252041816711426
    7. ' ‌' → logprob: -12.752041816711426
    8. '  ' → logprob: -13.752041816711426
    9. '_' → logprob: -14.127041816711426
    10. '	i' → logprob: -14.502041816711426

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.136266827583313
    2. ' ' → logprob: -2.7612667083740234
    3. 'in' → logprob: -2.7612667083740234
    4. '  ' → logprob: -7.636266708374023
    5. '<|end|>' → logprob: -8.386266708374023
    6. ')' → logprob: -9.636266708374023
    7. '	in' → logprob: -10.136266708374023
    8. '   ' → logprob: -11.011266708374023
    9. ' i' → logprob: -11.386266708374023
    10. 'space' → logprob: -11.448766708374023

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024914760142564774
    2. 'range' → logprob: -6.002491474151611
    3. ' ' → logprob: -11.37749195098877
    4. ' xrange' → logprob: -13.50249195098877
    5. '	range' → logprob: -13.75249195098877
    6. ' h' → logprob: -13.87749195098877
    7. '(range' → logprob: -14.50249195098877
    8. ')' → logprob: -15.75249195098877
    9. ' ' → logprob: -16.252490997314453
    10. ' r' → logprob: -17.002490997314453

Token 51: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.12805305421352386
    2. '(' → logprob: -2.1280529499053955
    3. ' (' → logprob: -6.878053188323975
    4. '(w' → logprob: -9.753052711486816
    5. '(s' → logprob: -10.878052711486816
    6. '(len' → logprob: -12.378052711486816
    7. '(n' → logprob: -12.878052711486816
    8. ' ' → logprob: -13.253052711486816
    9. '(a' → logprob: -13.253052711486816
    10. '(range' → logprob: -13.628052711486816

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007945279590785503
    2. ')' → logprob: -4.8829450607299805
    3. ':' → logprob: -8.38294506072998
    4. '):
' → logprob: -9.25794506072998
    5. ' ):' → logprob: -11.88294506072998
    6. '+' → logprob: -13.25794506072998
    7. 'for' → logprob: -13.88294506072998
    8. ']:' → logprob: -14.13294506072998
    9. '   ' → logprob: -14.25794506072998
    10. 'in' → logprob: -14.63294506072998

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026894759386777878
    2. ' for' → logprob: -3.6518948078155518
    3. 'for' → logprob: -7.776894569396973
    4. ' ' → logprob: -9.651894569396973
    5. '	for' → logprob: -10.526894569396973
    6. ' range' → logprob: -10.651894569396973
    7. '   ' → logprob: -11.151894569396973
    8. '<|end|>' → logprob: -11.276894569396973
    9. '```' → logprob: -11.526894569396973
    10. ')' → logprob: -12.526894569396973

Token 54: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09682860970497131
    2. ' for' → logprob: -2.7218286991119385
    3. 'range' → logprob: -4.346828460693359
    4. '   ' → logprob: -5.096828460693359
    5. 'j' → logprob: -5.721828460693359
    6. ' range' → logprob: -6.096828460693359
    7. ' j' → logprob: -7.096828460693359
    8. ' ' → logprob: -7.721828460693359
    9. 'a' → logprob: -8.84682846069336
    10. ' in' → logprob: -9.09682846069336

Token 55: ' j' (ID: 441)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.167977437376976
    2. ' j' → logprob: -2.2929773330688477
    3. 'w' → logprob: -3.0429773330688477
    4. 'j' → logprob: -5.417977333068848
    5. ' range' → logprob: -7.042977333068848
    6. '    ' → logprob: -8.917977333068848
    7. '   ' → logprob: -9.042977333068848
    8. 'range' → logprob: -9.167977333068848
    9. ')' → logprob: -9.292977333068848
    10. ' h' → logprob: -9.792977333068848

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08482512086629868
    2. 'in' → logprob: -2.584825038909912
    3. ' ' → logprob: -5.459825038909912
    4. '<|end|>' → logprob: -6.584825038909912
    5. ')' → logprob: -8.70982551574707
    6. '  ' → logprob: -10.83482551574707
    7. '=' → logprob: -11.45982551574707
    8. 'In' → logprob: -11.45982551574707
    9. ' =' → logprob: -11.58482551574707
    10. '<|end|>' → logprob: -11.83482551574707

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08077066391706467
    2. ' w' → logprob: -3.08077073097229
    3. 'range' → logprob: -3.70577073097229
    4. 'w' → logprob: -5.580770492553711
    5. '(w' → logprob: -5.955770492553711
    6. '(range' → logprob: -7.455770492553711
    7. '(' → logprob: -9.830770492553711
    8. ' (' → logprob: -9.955770492553711
    9. ')' → logprob: -10.330770492553711
    10. '<w' → logprob: -12.330770492553711

Token 58: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.007154588121920824
    2. '(' → logprob: -5.00715446472168
    3. ' (' → logprob: -7.75715446472168
    4. '(h' → logprob: -11.88215446472168
    5. ')' → logprob: -13.25715446472168
    6. '(s' → logprob: -13.88215446472168
    7. 'w' → logprob: -14.88215446472168
    8. ' w' → logprob: -15.25715446472168
    9. '(range' → logprob: -15.75715446472168
    10. '(len' → logprob: -16.00715446472168

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003885580925270915
    2. ')' → logprob: -5.628885746002197
    3. '):
' → logprob: -8.753885269165039
    4. ':' → logprob: -9.503885269165039
    5. ']:' → logprob: -11.003885269165039
    6. ' ):' → logprob: -11.003885269165039
    7. 'if' → logprob: -12.003885269165039
    8. '   ' → logprob: -12.128885269165039
    9. ')]' → logprob: -13.003885269165039
    10. ' if' → logprob: -14.628885269165039

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7698148488998413
    2. ':' → logprob: -1.6448148488998413
    3. '   ' → logprob: -1.7698148488998413
    4. ' if' → logprob: -2.019814968109131
    5. 'if' → logprob: -3.894814968109131
    6. ' ' → logprob: -4.769814968109131
    7. '[' → logprob: -5.269814968109131
    8. '    ' → logprob: -6.019814968109131
    9. ' :' → logprob: -6.894814968109131
    10. ',' → logprob: -7.144814968109131

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4523627460002899
    2. 'if' (adapté à ' if') → logprob: -1.0773627758026123
    3. '   ' → logprob: -4.452362537384033
    4. 'a' → logprob: -4.827362537384033
    5. ' a' → logprob: -5.702362537384033
    6. '       ' → logprob: -8.327363014221191
    7. '    ' → logprob: -9.452363014221191
    8. ':' → logprob: -11.577363014221191
    9. ' ' → logprob: -11.577363014221191
    10. '           ' → logprob: -11.702363014221191

Token 62: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1602877974510193
    2. 'a' → logprob: -1.910287857055664
    3. '   ' → logprob: -10.410287857055664
    4. '    ' → logprob: -11.285287857055664
    5. ' ' → logprob: -11.285287857055664
    6. '	a' → logprob: -13.285287857055664
    7. '(a' → logprob: -13.285287857055664
    8. ' ' → logprob: -13.910287857055664
    9. ' not' → logprob: -13.910287857055664
    10. '  ' → logprob: -14.785287857055664

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010783452307805419
    2. '[j' → logprob: -9.250107765197754
    3. '[' → logprob: -11.625107765197754
    4. '[I' → logprob: -13.375107765197754
    5. '[h' → logprob: -14.875107765197754
    6. ' [' → logprob: -15.250107765197754
    7. '```' → logprob: -15.625107765197754
    8. '[int' → logprob: -16.37510871887207
    9. '\[' → logprob: -16.87510871887207
    10. '   ' → logprob: -16.87510871887207

Token 64: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23704726994037628
    2. '[j' → logprob: -1.6120473146438599
    3. '][' → logprob: -4.98704719543457
    4. '[' → logprob: -5.48704719543457
    5. '[I' → logprob: -8.23704719543457
    6. ']' → logprob: -9.48704719543457
    7. ' [' → logprob: -9.86204719543457
    8. '[a' → logprob: -10.23704719543457
    9. '[h' → logprob: -10.23704719543457
    10. '```' → logprob: -10.36204719543457

Token 65: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016957100888248533
    2. ''#' → logprob: -9.37516975402832
    3. '#' → logprob: -10.12516975402832
    4. ''' → logprob: -10.50016975402832
    5. ' j' → logprob: -12.37516975402832
    6. ']' → logprob: -12.62516975402832
    7. ''.' → logprob: -12.87516975402832
    8. ' ' → logprob: -13.25016975402832
    9. '']' → logprob: -13.87516975402832
    10. '0' → logprob: -13.87516975402832

Token 66: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44681739807128906
    2. '==' → logprob: -1.071817398071289
    3. '=='' → logprob: -5.696817398071289
    4. '!=' → logprob: -5.946817398071289
    5. '   ' → logprob: -6.071817398071289
    6. ' !=' → logprob: -6.071817398071289
    7. '=' → logprob: -6.446817398071289
    8. ''' → logprob: -6.571817398071289
    9. ' ' → logprob: -6.821817398071289
    10. ' '' → logprob: -7.571817398071289

Token 67: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3108545243740082
    2. ' ==' → logprob: -1.4358545541763306
    3. '!=' → logprob: -4.560854434967041
    4. '=='' → logprob: -5.310854434967041
    5. '=' → logprob: -5.435854434967041
    6. '   ' → logprob: -5.560854434967041
    7. ' !=' → logprob: -6.310854434967041
    8. '#' → logprob: -6.560854434967041
    9. '!' → logprob: -7.435854434967041
    10. ' ' → logprob: -8.4358549118042

Token 68: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.18079422414302826
    2. '#' → logprob: -2.3057942390441895
    3. ''' → logprob: -3.0557942390441895
    4. ''*' → logprob: -4.9307942390441895
    5. ' '#'' → logprob: -5.3057942390441895
    6. ''.' → logprob: -5.6807942390441895
    7. '"#' → logprob: -7.3057942390441895
    8. ''''' → logprob: -7.9307942390441895
    9. ''x' → logprob: -8.555793762207031
    10. '"' → logprob: -8.805793762207031

Token 69: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.022550953552126884
    2. ''' → logprob: -4.2725510597229
    3. '':
' → logprob: -4.8975510597229
    4. ':' → logprob: -7.3975510597229
    5. ' ':' → logprob: -9.022550582885742
    6. '#' → logprob: -9.272550582885742
    7. '':'' → logprob: -11.272550582885742
    8. '':
' → logprob: -11.397550582885742
    9. ' '' → logprob: -11.522550582885742
    10. '':

' → logprob: -11.897550582885742

Token 70: '           ' (ID: 352)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9745067954063416
    2. ' row' → logprob: -1.0995068550109863
    3. '           ' → logprob: -1.4745068550109863
    4. ' ' → logprob: -3.5995068550109863
    5. '       ' → logprob: -3.8495068550109863
    6. '   ' → logprob: -4.974506855010986
    7. '#' → logprob: -7.224506855010986
    8. '               ' → logprob: -7.474506855010986
    9. ' True' → logprob: -7.849506855010986
    10. '[row' → logprob: -7.974506855010986

Token 71: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.0016310286009684205
    2. ' row' → logprob: -6.501631259918213
    3. ' ' → logprob: -9.376630783081055
    4. 'r' → logprob: -10.376630783081055
    5. '   ' → logprob: -12.251630783081055
    6. '           ' → logprob: -12.751630783081055
    7. 'ro' → logprob: -13.501630783081055
    8. '       ' → logprob: -14.126630783081055
    9. '	row' → logprob: -14.376630783081055
    10. '#' → logprob: -14.876630783081055

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001976095838472247
    2. '[' → logprob: -6.376976013183594
    3. '[j' → logprob: -8.251976013183594
    4. '[I' → logprob: -12.251976013183594
    5. ' [' → logprob: -12.751976013183594
    6. '```' → logprob: -13.751976013183594
    7. '[row' → logprob: -14.626976013183594
    8. '[s' → logprob: -15.001976013183594
    9. '[ii' → logprob: -15.251976013183594
    10. '[x' → logprob: -15.251976013183594

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012203442165628076
    2. ']=' → logprob: -6.751220226287842
    3. '=' → logprob: -10.001220703125
    4. ' ]' → logprob: -12.626220703125
    5. '],' → logprob: -14.501220703125
    6. '[' → logprob: -14.876220703125
    7. ']
' → logprob: -15.251220703125
    8. '=True' → logprob: -16.626220703125
    9. '']' → logprob: -16.751220703125
    10. ' =' → logprob: -16.876220703125

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000488811288960278
    2. ' =' → logprob: -7.625488758087158
    3. '=True' → logprob: -14.375489234924316
    4. ',' → logprob: -16.25048828125
    5. ' ' → logprob: -17.87548828125
    6. '=

' → logprob: -18.37548828125
    7. ']' → logprob: -18.62548828125
    8. '=
' → logprob: -18.87548828125
    9. '=}' → logprob: -19.37548828125
    10. '[' → logprob: -19.50048828125

Token 75: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007105246186256409
    2. ' True' → logprob: -7.250710487365723
    3. 'T' → logprob: -15.375710487365723
    4. '(True' → logprob: -15.875710487365723
    5. '=True' → logprob: -16.62571144104004
    6. 'Tr' → logprob: -18.12571144104004
    7. '   ' → logprob: -18.87571144104004
    8. '1' → logprob: -19.12571144104004
    9. 'False' → logprob: -19.87571144104004
    10. ' ' → logprob: -19.87571144104004

Token 76: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013547345995903015
    2. '<|end|>' → logprob: -4.638547420501709
    3. '            
' → logprob: -6.388547420501709
    4. '
' → logprob: -6.763547420501709
    5. ' 
' → logprob: -8.63854694366455
    6. ' col' → logprob: -8.88854694366455
    7. '               ' → logprob: -9.26354694366455
    8. '  
' → logprob: -9.51354694366455
    9. '    
' → logprob: -9.51354694366455
    10. '       ' → logprob: -10.26354694366455

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011855226941406727
    2. '            
' → logprob: -5.261855125427246
    3. ' 
' → logprob: -6.386855125427246
    4. '<|end|>' → logprob: -6.761855125427246
    5. '        
' → logprob: -7.511855125427246
    6. '           
' → logprob: -7.636855125427246
    7. '       ' → logprob: -7.761855125427246
    8. '       
' → logprob: -8.136855125427246
    9. '          ' → logprob: -8.261855125427246
    10. '               ' → logprob: -8.261855125427246

Token 78: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.003177952254191041
    2. ' col' → logprob: -5.753178119659424
    3. '           ' → logprob: -15.128177642822266
    4. '	col' → logprob: -18.003177642822266
    5. 'colm' → logprob: -18.253177642822266
    6. ' ' → logprob: -19.253177642822266
    7. '[col' → logprob: -19.753177642822266
    8. 'coln' → logprob: -20.003177642822266
    9. '   ' → logprob: -20.128177642822266
    10. '.col' → logprob: -20.378177642822266

Token 79: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016861737822182477
    2. '[' → logprob: -8.750168800354004
    3. '[col' → logprob: -12.000168800354004
    4. '[i' → logprob: -13.500168800354004
    5. '```' → logprob: -13.875168800354004
    6. ' [' → logprob: -14.000168800354004
    7. ')[' → logprob: -15.375168800354004
    8. '[js' → logprob: -15.875168800354004
    9. '][' → logprob: -16.125167846679688
    10. '[c' → logprob: -16.500167846679688

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029518234077841043
    2. '=' → logprob: -8.500295639038086
    3. ']=' → logprob: -9.375295639038086
    4. ' ]' → logprob: -12.625295639038086
    5. ')' → logprob: -12.875295639038086
    6. ' =' → logprob: -13.875295639038086
    7. ']
' → logprob: -16.625295639038086
    8. '=True' → logprob: -17.125295639038086
    9. '']' → logprob: -17.750295639038086
    10. ']

' → logprob: -18.375295639038086

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008627697825431824
    2. ' =' → logprob: -4.758627891540527
    3. '=True' → logprob: -11.258627891540527
    4. ')' → logprob: -15.633627891540527
    5. '=
' → logprob: -16.88362693786621
    6. '<|end|>' → logprob: -17.00862693786621
    7. ']' → logprob: -17.25862693786621
    8. '[' → logprob: -17.38362693786621
    9. '＝' → logprob: -17.88362693786621
    10. ' ' → logprob: -18.38362693786621

Token 82: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -17.633615493774414
    4. '=True' → logprob: -17.883615493774414
    5. '1' → logprob: -21.758615493774414
    6. 'T' → logprob: -22.008615493774414
    7. '.True' → logprob: -22.508615493774414
    8. ' ' → logprob: -22.508615493774414
    9. 'False' → logprob: -23.133615493774414
    10. 'Tr' → logprob: -23.758615493774414

Token 83: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0575060844421387
    2. '
' → logprob: -1.3075060844421387
    3. '#' → logprob: -1.8075060844421387
    4. '\n' → logprob: -2.3075060844421387
    5. '<|end|>' → logprob: -3.3075060844421387
    6. '```' → logprob: -3.6825060844421387
    7. ' ' → logprob: -4.057506084442139
    8. ' for' → logprob: -4.682506084442139
    9. ' 
' → logprob: -4.932506084442139
    10. 'n' → logprob: -5.432506084442139

Token 84: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013452880375552922
    2. ' for' → logprob: -10.500134468078613
    3. '\n' → logprob: -10.500134468078613
    4. '#' → logprob: -10.875134468078613
    5. 'r' → logprob: -10.875134468078613
    6. 'i' → logprob: -11.000134468078613
    7. '```' → logprob: -12.375134468078613
    8. 'f' → logprob: -12.375134468078613
    9. 'result' → logprob: -12.625134468078613
    10. '
' → logprob: -12.875134468078613

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0005305142258293927
    2. 'i' → logprob: -7.75053071975708
    3. ' ' → logprob: -9.250530242919922
    4. ' _' → logprob: -13.500530242919922
    5. ' ' → logprob: -13.750530242919922
    6. '_' → logprob: -14.375530242919922
    7. '	i' → logprob: -15.125530242919922
    8. ' ‌' → logprob: -16.000530242919922
    9. '  ' → logprob: -16.250530242919922
    10. '_i' → logprob: -16.750530242919922

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033406175207346678
    2. 'in' → logprob: -6.003340721130371
    3. ' ' → logprob: -7.128340721130371
    4. ' range' → logprob: -10.253340721130371
    5. 'range' → logprob: -11.503340721130371
    6. ' i' → logprob: -12.003340721130371
    7. '  ' → logprob: -12.503340721130371
    8. 'n' → logprob: -13.503340721130371
    9. ' n' → logprob: -13.628340721130371
    10. ' ‌' → logprob: -14.128340721130371

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04860168322920799
    2. ' range' → logprob: -3.0486016273498535
    3. '   ' → logprob: -12.298602104187012
    4. 'r' → logprob: -12.548602104187012
    5. '(range' → logprob: -12.923602104187012
    6. ' ' → logprob: -13.423602104187012
    7. '```' → logprob: -13.923602104187012
    8. '	range' → logprob: -15.173602104187012
    9. 'rang' → logprob: -15.298602104187012
    10. 'row' → logprob: -15.548602104187012

Token 88: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0005675682332366705
    2. '(' → logprob: -7.500567436218262
    3. '(
' → logprob: -12.000567436218262
    4. ' (' → logprob: -12.500567436218262
    5. 'h' → logprob: -12.500567436218262
    6. ' h' → logprob: -14.625567436218262
    7. '(len' → logprob: -15.875567436218262
    8. '(s' → logprob: -16.000568389892578
    9. '(w' → logprob: -16.250568389892578
    10. '(i' → logprob: -17.000568389892578

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007634435780346394
    2. '):
' → logprob: -4.88263463973999
    3. ':' → logprob: -11.382634162902832
    4. ')' → logprob: -11.757634162902832
    5. '):
' → logprob: -11.882634162902832
    6. ' ):' → logprob: -13.632634162902832
    7. ']:' → logprob: -15.007634162902832
    8. '}:' → logprob: -15.507634162902832
    9. ':
' → logprob: -16.00763511657715
    10. '):

' → logprob: -16.25763511657715

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022437504958361387
    2. ' if' → logprob: -6.877243518829346
    3. '<|end|>' → logprob: -6.877243518829346
    4. 'if' → logprob: -9.377243995666504
    5. ' ' → logprob: -10.377243995666504
    6. '    
' → logprob: -10.627243995666504
    7. '<|end|>' → logprob: -11.877243995666504
    8. '```' → logprob: -12.002243995666504
    9. '   ' → logprob: -12.002243995666504
    10. ',' → logprob: -12.377243995666504

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5812937617301941
    2. '   ' → logprob: -1.2062938213348389
    3. ' if' → logprob: -1.9562938213348389
    4. '```' → logprob: -9.706294059753418
    5. ' ' → logprob: -9.956294059753418
    6. 'for' → logprob: -12.206294059753418
    7. '	if' → logprob: -12.206294059753418
    8. '>' → logprob: -12.206294059753418
    9. '    
' → logprob: -12.581294059753418
    10. '   ' → logprob: -13.331294059753418

Token 92: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.028905078768730164
    2. 'row' → logprob: -4.153904914855957
    3. ' not' → logprob: -4.403904914855957
    4. ' ' → logprob: -7.778904914855957
    5. 'not' → logprob: -8.903904914855957
    6. ' ' → logprob: -13.903904914855957
    7. '   ' → logprob: -13.903904914855957
    8. '  ' → logprob: -14.153904914855957
    9. '	row' → logprob: -14.528904914855957
    10. ' r' → logprob: -14.903904914855957

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.625025749206543
    3. '[I' → logprob: -14.250025749206543
    4. '```' → logprob: -14.750025749206543
    5. '[
' → logprob: -17.250024795532227
    6. '\[' → logprob: -18.125024795532227
    7. '[]' → logprob: -18.875024795532227
    8. '``' → logprob: -19.625024795532227
    9. 'i' → logprob: -19.750024795532227
    10. '[`' → logprob: -20.125024795532227

Token 94: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2588517665863037
    2. '):' → logprob: -2.0088517665863037
    3. ':' → logprob: -2.5088517665863037
    4. ']' → logprob: -4.758852005004883
    5. '>:' → logprob: -6.133852005004883
    6. '}:' → logprob: -7.633852005004883
    7. '==' → logprob: -7.633852005004883
    8. ')' → logprob: -8.633852005004883
    9. ' ):' → logprob: -9.883852005004883
    10. '   ' → logprob: -9.883852005004883

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07134325057268143
    2. '   ' → logprob: -2.696343183517456
    3. ':' → logprob: -7.446343421936035
    4. ' for' → logprob: -8.071343421936035
    5. ' print' → logprob: -8.946343421936035
    6. ':
' → logprob: -9.446343421936035
    7. ' and' → logprob: -9.446343421936035
    8. 'print' → logprob: -9.696343421936035
    9. ' ' → logprob: -9.946343421936035
    10. ',' → logprob: -10.321343421936035

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1398993879556656
    2. 'print' → logprob: -2.139899492263794
    3. ' for' → logprob: -4.389899253845215
    4. '   ' → logprob: -8.014899253845215
    5. ' print' → logprob: -9.139899253845215
    6. '       ' → logprob: -10.014899253845215
    7. 'if' → logprob: -14.014899253845215
    8. '           ' → logprob: -14.139899253845215
    9. 'continue' → logprob: -14.764899253845215
    10. '
' → logprob: -14.889899253845215

Token 97: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08014138042926788
    2. ' j' → logprob: -2.580141305923462
    3. 'range' → logprob: -6.830141544342041
    4. ' range' → logprob: -8.705141067504883
    5. '   ' → logprob: -12.955141067504883
    6. ' ' → logprob: -14.705141067504883
    7. '	j' → logprob: -15.080141067504883
    8. '    ' → logprob: -15.330141067504883
    9. '[j' → logprob: -15.330141067504883
    10. '  ' → logprob: -15.455141067504883

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015794962644577
    2. 'in' → logprob: -1.7015794515609741
    3. '   ' → logprob: -9.201579093933105
    4. ' ' → logprob: -10.076579093933105
    5. '    ' → logprob: -11.701579093933105
    6. '(' → logprob: -12.326579093933105
    7. '  ' → logprob: -12.576579093933105
    8. '(w' → logprob: -13.576579093933105
    9. '```' → logprob: -13.826579093933105
    10. '        ' → logprob: -14.076579093933105

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009264685213565826
    2. ' range' → logprob: -7.000926494598389
    3. '(range' → logprob: -11.12592601776123
    4. '   ' → logprob: -15.75092601776123
    5. '(w' → logprob: -15.87592601776123
    6. 'rang' → logprob: -18.625926971435547
    7. 'ran' → logprob: -18.750926971435547
    8. '`' → logprob: -18.875926971435547
    9. '	range' → logprob: -18.875926971435547
    10. ' ' → logprob: -19.250926971435547

Token 100: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -9.77022064034827e-05
    2. '(range' → logprob: -9.375097274780273
    3. 'range' → logprob: -11.625097274780273
    4. '(' → logprob: -12.625097274780273
    5. ' range' → logprob: -15.125097274780273
    6. ' (' → logprob: -15.625097274780273
    7. '   ' → logprob: -17.250097274780273
    8. 'Range' → logprob: -17.500097274780273
    9. 'w' → logprob: -17.500097274780273
    10. '(W' → logprob: -17.625097274780273

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5767988562583923
    2. '):
' → logprob: -0.8267988562583923
    3. '   ' → logprob: -8.076798439025879
    4. ')' → logprob: -8.451798439025879
    5. '       ' → logprob: -8.451798439025879
    6. '           ' → logprob: -10.201798439025879
    7. 'if' → logprob: -10.701798439025879
    8. ':' → logprob: -11.076798439025879
    9. '):
' → logprob: -11.451798439025879
    10. ' ):' → logprob: -11.576798439025879

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12114252150058746
    2. ' if' → logprob: -2.871142625808716
    3. '           ' → logprob: -3.121142625808716
    4. '   ' → logprob: -4.746142387390137
    5. '<|end|>' → logprob: -6.121142387390137
    6. ' ' → logprob: -6.746142387390137
    7. 'if' → logprob: -6.996142387390137
    8. '```' → logprob: -8.871142387390137
    9. '               ' → logprob: -9.746142387390137
    10. '<|end|>' → logprob: -10.371142387390137

Token 103: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7129351496696472
    2. ' if' → logprob: -0.7129351496696472
    3. '           ' → logprob: -4.337934970855713
    4. '       ' → logprob: -5.587934970855713
    5. '               ' → logprob: -6.462934970855713
    6. '   ' → logprob: -7.337934970855713
    7. ' ' → logprob: -7.587934970855713
    8. '```' → logprob: -10.337935447692871
    9. '<|end|>' → logprob: -11.712935447692871
    10. '  ' → logprob: -11.712935447692871

Token 104: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.027174733579158783
    2. ' col' → logprob: -3.652174711227417
    3. 'row' → logprob: -7.152174949645996
    4. ' row' → logprob: -9.527174949645996
    5. 'column' → logprob: -12.277174949645996
    6. 'not' → logprob: -12.527174949645996
    7. '   ' → logprob: -12.652174949645996
    8. ' not' → logprob: -12.777174949645996
    9. ' ' → logprob: -13.777174949645996
    10. '           ' → logprob: -14.152174949645996

Token 105: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.696889623621246e-06
    2. '[i' → logprob: -13.75000286102295
    3. '[' → logprob: -13.87500286102295
    4. '```' → logprob: -15.12500286102295
    5. ')[' → logprob: -16.375001907348633
    6. '[js' → logprob: -16.875001907348633
    7. '][' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. 'j' → logprob: -17.500001907348633
    10. ' [' → logprob: -17.750001907348633

Token 106: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.036241915076971054
    2. '):' → logprob: -3.4112420082092285
    3. ']:
' → logprob: -6.6612420082092285
    4. ']' → logprob: -7.1612420082092285
    5. '):
' → logprob: -8.41124153137207
    6. ':' → logprob: -9.28624153137207
    7. '           ' → logprob: -9.66124153137207
    8. ']==' → logprob: -10.41124153137207
    9. '       ' → logprob: -10.66124153137207
    10. '}:' → logprob: -10.91124153137207

Token 107: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05821685492992401
    2. 'print' → logprob: -3.4332168102264404
    3. '           ' → logprob: -3.8082168102264404
    4. ' print' → logprob: -6.5582170486450195
    5. '       ' → logprob: -7.8082170486450195
    6. '   ' → logprob: -9.18321704864502
    7. '#' → logprob: -9.55821704864502
    8. ' ' → logprob: -11.05821704864502
    9. '```' → logprob: -11.05821704864502
    10. '                   ' → logprob: -11.55821704864502

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01473441906273365
    2. ' print' → logprob: -4.639734268188477
    3. '               ' → logprob: -5.389734268188477
    4. '                   ' → logprob: -7.889734268188477
    5. '           ' → logprob: -11.264734268188477
    6. '   ' → logprob: -11.764734268188477
    7. '       ' → logprob: -12.639734268188477
    8. ' ' → logprob: -13.264734268188477
    9. '	print' → logprob: -14.264734268188477
    10. '#print' → logprob: -14.389734268188477

Token 109: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011153311934322119
    2. '(' → logprob: -7.001115322113037
    3. 'a' → logprob: -8.501115798950195
    4. '('#' → logprob: -15.001115798950195
    5. '(
' → logprob: -15.626115798950195
    6. ' a' → logprob: -17.376115798950195
    7. '('' → logprob: -17.876115798950195
    8. '#a' → logprob: -17.876115798950195
    9. '(

' → logprob: -18.251115798950195
    10. '("#' → logprob: -18.251115798950195

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[I' → logprob: -17.75
    3. ')[' → logprob: -18.5
    4. '[j' → logprob: -18.625
    5. 'i' → logprob: -18.75
    6. '[' → logprob: -18.75
    7. ')' → logprob: -18.75
    8. '[
' → logprob: -19.375
    9. '```' → logprob: -20.125
    10. ')i' → logprob: -20.875

Token 111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012710118666291237
    2. '[j' → logprob: -4.387710094451904
    3. '[' → logprob: -9.387710571289062
    4. ']' → logprob: -9.637710571289062
    5. '"][' → logprob: -10.637710571289062
    6. ''][' → logprob: -11.887710571289062
    7. ' ][' → logprob: -12.137710571289062
    8. '[i' → logprob: -12.387710571289062
    9. ')[' → logprob: -12.637710571289062
    10. '}[' → logprob: -13.262710571289062

Token 112: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3782830137643032e-05
    2. ' j' → logprob: -11.37501335144043
    3. '[j' → logprob: -13.62501335144043
    4. '][' → logprob: -14.12501335144043
    5. ')' → logprob: -16.50001335144043
    6. ']' → logprob: -16.87501335144043
    7. '   ' → logprob: -17.00001335144043
    8. '```' → logprob: -17.50001335144043
    9. '	j' → logprob: -18.25001335144043
    10. ' ' → logprob: -18.37501335144043

Token 113: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20189468562602997
    2. ',end' → logprob: -1.7018946409225464
    3. 'end' → logprob: -7.951894760131836
    4. ' ,' → logprob: -10.201894760131836
    5. ')' → logprob: -10.326894760131836
    6. '',' → logprob: -10.326894760131836
    7. '),' → logprob: -10.951894760131836
    8. ''',' → logprob: -12.701894760131836
    9. ',j' → logprob: -13.951894760131836
    10. '],' → logprob: -13.951894760131836

Token 114: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00026205103495158255
    2. ' end' → logprob: -8.250262260437012
    3. ',end' → logprob: -14.500262260437012
    4. '(end' → logprob: -16.375261306762695
    5. ''',' → logprob: -16.625261306762695
    6. ''end' → logprob: -17.375261306762695
    7. '	end' → logprob: -17.625261306762695
    8. '=end' → logprob: -18.000261306762695
    9. '   ' → logprob: -18.125261306762695
    10. '''' → logprob: -18.500261306762695

Token 115: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0007667447789572179
    2. '=' → logprob: -7.250766754150391
    3. '=''' → logprob: -9.87576675415039
    4. '="' → logprob: -12.87576675415039
    5. '='')
' → logprob: -13.25076675415039
    6. ''' → logprob: -14.50076675415039
    7. ')' → logprob: -15.87576675415039
    8. '='',' → logprob: -16.37576675415039
    9. '''' → logprob: -16.50076675415039
    10. ' '')' → logprob: -16.87576675415039

Token 116: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17358888685703278
    2. '   ' → logprob: -1.9235888719558716
    3. '
' → logprob: -4.423588752746582
    4. ' print' → logprob: -7.673588752746582
    5. '<|end|>' → logprob: -7.923588752746582
    6. '       ' → logprob: -8.798588752746582
    7. '```' → logprob: -9.548588752746582
    8. ' ' → logprob: -10.048588752746582
    9. '    
' → logprob: -10.173588752746582
    10. ')' → logprob: -10.423588752746582

Token 117: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010912814177572727
    2. '   ' → logprob: -7.251091480255127
    3. '
' → logprob: -8.251091003417969
    4. ' print' → logprob: -10.126091003417969
    5. '\n' → logprob: -10.251091003417969
    6. '<|end|>' → logprob: -11.001091003417969
    7. ')' → logprob: -12.001091003417969
    8. '       ' → logprob: -12.251091003417969
    9. '```' → logprob: -12.251091003417969
    10. '    
' → logprob: -12.626091003417969

Token 118: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '()
' → logprob: -16.75
    4. '()`' → logprob: -17.375
    5. '("")' → logprob: -18.125
    6. ' ()' → logprob: -18.125
    7. '()

' → logprob: -18.75
    8. '（）' → logprob: -19.0
    9. '().' → logprob: -19.75
    10. '()"' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 116
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 40.52%
Précision adaptée (1ère position): 48.28%
Précision (top 10): 89.66%
================================================================================
