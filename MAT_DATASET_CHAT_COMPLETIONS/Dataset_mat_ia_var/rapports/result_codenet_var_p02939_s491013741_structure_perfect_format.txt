================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
s = input()

head = 0
tail = 1
ans = 0
before = ""
while True:
    ss = s[head:tail]
    if ss != before:
        before = ss
        head = tail
        tail = head + 1
        ans += 1
    else:
        tail += 1
    if tail == len(s) + 1:
        print(ans)
        exit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013816634891554713
    2. '(
' → logprob: -7.251381874084473
    3. '\' → logprob: -8.626381874084473
    4. '\(' → logprob: -8.626381874084473
    5. '\n' → logprob: -9.251381874084473
    6. 'newline' → logprob: -10.376381874084473
    7. '```' → logprob: -10.501381874084473
    8. '()' → logprob: -10.626381874084473
    9. '(

' → logprob: -10.751381874084473
    10. '
' → logprob: -11.251381874084473

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5359821915626526
    2. '(
' → logprob: -2.160982131958008
    3. '
' → logprob: -2.535982131958008
    4. 'd' → logprob: -2.910982131958008
    5. '\n' → logprob: -3.535982131958008
    6. 'default' → logprob: -3.660982131958008
    7. '\' → logprob: -4.035982131958008
    8. 'def' → logprob: -4.035982131958008
    9. '```' → logprob: -4.160982131958008
    10. 'newline' → logprob: -4.785982131958008

Token 6: ' =' (ID: 314)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6313499808311462
    2. 'et' → logprob: -1.881350040435791
    3. 't' → logprob: -2.381350040435791
    4. '=' → logprob: -2.631350040435791
    5. ' =' → logprob: -3.506350040435791
    6. 's' → logprob: -3.631350040435791
    7. 'e' → logprob: -3.756350040435791
    8. '_' → logprob: -3.756350040435791
    9. '(' → logprob: -4.631350040435791
    10. 'tring' → logprob: -4.881350040435791

Token 7: ' input' (ID: 3422)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4040448069572449
    2. '"' → logprob: -2.4040448665618896
    3. '"default' → logprob: -2.5290448665618896
    4. ' "' → logprob: -2.7790448665618896
    5. 'default' → logprob: -3.2790448665618896
    6. ' ' → logprob: -3.6540448665618896
    7. ''' → logprob: -4.7790446281433105
    8. ' '' → logprob: -4.9040446281433105
    9. ' ""' → logprob: -4.9040446281433105
    10. ' []' → logprob: -5.2790446281433105

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028605204075574875
    2. '('' → logprob: -4.028604984283447
    3. ''' → logprob: -4.903604984283447
    4. '`' → logprob: -7.153604984283447
    5. '"' → logprob: -7.278604984283447
    6. '```' → logprob: -7.778604984283447
    7. '("("' → logprob: -7.903604984283447
    8. '(
' → logprob: -8.653605461120605
    9. '()' → logprob: -8.903605461120605
    10. ')' → logprob: -9.028605461120605

Token 9: 'head' (ID: 3636)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7399429678916931
    2. 'd' → logprob: -0.8649429678916931
    3. '[' → logprob: -3.364943027496338
    4. '_' → logprob: -3.364943027496338
    5. 'default' → logprob: -3.864943027496338
    6. ' =' → logprob: -5.364943027496338
    7. ':' → logprob: -5.989943027496338
    8. '.' → logprob: -6.864943027496338
    9. 'def' → logprob: -7.739943027496338
    10. 't' → logprob: -8.11494255065918

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9986361265182495
    2. 's' → logprob: -0.9986361265182495
    3. '_' → logprob: -1.9986361265182495
    4. ' =' → logprob: -2.373636245727539
    5. '[' → logprob: -3.623636245727539
    6. '_count' → logprob: -6.623636245727539
    7. '[]' → logprob: -6.998636245727539
    8. 'count' → logprob: -7.248636245727539
    9. '_s' → logprob: -7.248636245727539
    10. '_char' → logprob: -7.498636245727539

Token 11: ' ' (ID: 220)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.46339380741119385
    2. 'default' → logprob: -1.2133938074111938
    3. '{}' → logprob: -3.0883936882019043
    4. 's' → logprob: -5.338393688201904
    5. ' ' → logprob: -5.463393688201904
    6. 'None' → logprob: -5.713393688201904
    7. '0' → logprob: -5.838393688201904
    8. ' {}' → logprob: -5.838393688201904
    9. '[]' → logprob: -6.213393688201904
    10. '"default' → logprob: -6.463393688201904

Token 12: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.018038256093859673
    2. 's' → logprob: -5.268038272857666
    3. '0' → logprob: -5.643038272857666
    4. '{}' → logprob: -5.768038272857666
    5. '{' → logprob: -6.143038272857666
    6. '[]' → logprob: -6.518038272857666
    7. ' defaultdict' → logprob: -7.143038272857666
    8. '"default' → logprob: -7.518038272857666
    9. ''default' → logprob: -8.268037796020508
    10. '{s' → logprob: -8.518037796020508

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0381312295794487
    2. '<|end|>' → logprob: -3.9131312370300293
    3. ':' → logprob: -5.788131237030029
    4. '```' → logprob: -6.038131237030029
    5. 'tokens' → logprob: -6.413131237030029
    6. '<|end|>' → logprob: -6.663131237030029
    7. 's' → logprob: -6.788131237030029
    8. 'while' → logprob: -7.163131237030029
    9. 'token' → logprob: -7.288131237030029
    10. '\n' → logprob: -7.538131237030029

Token 14: 'tail' (ID: 20472)
  Prédit: 'tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.8509052395820618
    2. 'freq' → logprob: -1.475905179977417
    3. 'count' → logprob: -1.725905179977417
    4. 'while' → logprob: -3.225905179977417
    5. 'counts' → logprob: -3.725905179977417
    6. 'char' → logprob: -3.975905179977417
    7. 'n' → logprob: -4.225905418395996
    8. 't' → logprob: -4.350905418395996
    9. 'length' → logprob: -4.600905418395996
    10. 'pos' → logprob: -5.225905418395996

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523881196975708
    2. '=' → logprob: -1.5023881196975708
    3. '+' → logprob: -8.252388000488281
    4. '_' → logprob: -10.002388000488281
    5. ' ' → logprob: -10.127388000488281
    6. ' +=' → logprob: -10.252388000488281
    7. ')' → logprob: -10.752388000488281
    8. ' +' → logprob: -11.127388000488281
    9. ',' → logprob: -11.377388000488281
    10. '+=' → logprob: -11.502388000488281

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2821713387966156
    2. ' ' → logprob: -1.407171368598938
    3. 'len' → logprob: -7.532171249389648
    4. ' len' → logprob: -8.532171249389648
    5. ' -' → logprob: -9.032171249389648
    6. '-' → logprob: -9.657171249389648
    7. 'head' → logprob: -9.782171249389648
    8. ' head' → logprob: -10.907171249389648
    9. 's' → logprob: -11.532171249389648
    10. '1' → logprob: -11.782171249389648

Token 17: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14201590418815613
    2. 'len' → logprob: -2.1420159339904785
    3. '-' → logprob: -4.5170159339904785
    4. ' ' → logprob: -5.8920159339904785
    5. ' len' → logprob: -7.5170159339904785
    6. ' -' → logprob: -8.26701545715332
    7. 'head' → logprob: -9.01701545715332
    8. '1' → logprob: -9.26701545715332
    9. 's' → logprob: -9.39201545715332
    10. '-l' → logprob: -9.64201545715332

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3589633107185364
    2. 'while' → logprob: -2.3589632511138916
    3. '0' → logprob: -2.9839632511138916
    4. ' ' → logprob: -3.3589632511138916
    5. 's' → logprob: -3.7339632511138916
    6. '#' → logprob: -3.9839632511138916
    7. ' while' → logprob: -4.483963489532471
    8. ':' → logprob: -4.733963489532471
    9. ' 
' → logprob: -4.733963489532471
    10. '+' → logprob: -4.858963489532471

Token 19: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6732277870178223
    2. '0' → logprob: -1.1732277870178223
    3. ' ' → logprob: -3.4232277870178223
    4. 'while' → logprob: -3.5482277870178223
    5. 's' → logprob: -3.9232277870178223
    6. ' 
' → logprob: -4.048227787017822
    7. ' while' → logprob: -4.423227787017822
    8. '#' → logprob: -4.798227787017822
    9. 'n' → logprob: -5.173227787017822
    10. '.' → logprob: -5.298227787017822

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3949996829032898
    2. ' =' → logprob: -1.1449997425079346
    3. '[' → logprob: -4.8949995040893555
    4. '_' → logprob: -7.7699995040893555
    5. ' ' → logprob: -9.519999504089355
    6. 's' → logprob: -10.269999504089355
    7. '.' → logprob: -10.644999504089355
    8. ',' → logprob: -10.769999504089355
    9. ')' → logprob: -11.269999504089355
    10. ']' → logprob: -12.394999504089355

Token 21: ' ' (ID: 220)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.8578872084617615
    2. '0' → logprob: -1.1078872680664062
    3. ' defaultdict' → logprob: -1.7328872680664062
    4. ' ' → logprob: -2.9828872680664062
    5. '[]' → logprob: -5.107887268066406
    6. '{}' → logprob: -5.357887268066406
    7. ' default' → logprob: -6.482887268066406
    8. ' []' → logprob: -6.482887268066406
    9. '"default' → logprob: -6.482887268066406
    10. ''default' → logprob: -7.232887268066406

Token 22: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.45424753427505493
    2. '0' → logprob: -1.0792474746704102
    3. '{}' → logprob: -4.95424747467041
    4. '[]' → logprob: -5.20424747467041
    5. '{' → logprob: -5.82924747467041
    6. '"default' → logprob: -6.07924747467041
    7. '[' → logprob: -6.20424747467041
    8. '1' → logprob: -7.20424747467041
    9. ''default' → logprob: -7.32924747467041
    10. 'float' → logprob: -7.32924747467041

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9702155590057373
    2. 'd' → logprob: -1.3452155590057373
    3. 'while' → logprob: -1.3452155590057373
    4. 'for' → logprob: -3.8452155590057373
    5. 'count' → logprob: -4.345215797424316
    6. ' 
' → logprob: -4.845215797424316
    7. ' while' → logprob: -4.845215797424316
    8. 'n' → logprob: -4.970215797424316
    9. 's' → logprob: -5.095215797424316
    10. 'freq' → logprob: -5.220215797424316

Token 24: 'before' (ID: 29615)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12192043662071228
    2. 'd' → logprob: -2.996920347213745
    3. ' while' → logprob: -3.871920347213745
    4. ':' → logprob: -4.246920585632324
    5. 'for' → logprob: -4.371920585632324
    6. 's' → logprob: -4.871920585632324
    7. 'n' → logprob: -6.246920585632324
    8. 'count' → logprob: -7.371920585632324
    9. 'if' → logprob: -7.496920585632324
    10. 'a' → logprob: -7.496920585632324

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9138855934143066
    2. ' =' → logprob: -1.1638855934143066
    3. '_' → logprob: -2.7888855934143066
    4. '_count' → logprob: -2.7888855934143066
    5. '[' → logprob: -2.9138855934143066
    6. 's' → logprob: -3.0388855934143066
    7. '_counts' → logprob: -4.663885593414307
    8. '_freq' → logprob: -4.663885593414307
    9. '_char' → logprob: -5.288885593414307
    10. 'count' → logprob: -5.413885593414307

Token 26: ' ""
' (ID: 18061)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.12823207676410675
    2. ' defaultdict' → logprob: -2.628232002258301
    3. '{}' → logprob: -3.378232002258301
    4. '0' → logprob: -4.878232002258301
    5. '{' → logprob: -6.378232002258301
    6. ' ' → logprob: -6.378232002258301
    7. '"default' → logprob: -6.878232002258301
    8. ''default' → logprob: -7.503232002258301
    9. '[]' → logprob: -8.2532320022583
    10. ' {}' → logprob: -8.2532320022583

Token 27: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13603055477142334
    2. 'for' → logprob: -2.136030673980713
    3. ' while' → logprob: -5.261030673980713
    4. 's' → logprob: -7.011030673980713
    5. 'w' → logprob: -7.261030673980713
    6. 'd' → logprob: -7.261030673980713
    7. ' for' → logprob: -7.636030673980713
    8. 'n' → logprob: -8.386030197143555
    9. 'if' → logprob: -8.886030197143555
    10. ':' → logprob: -9.136030197143555

Token 28: ' True' (ID: 6432)
  Prédit: ' tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tail' → logprob: -0.07759009301662445
    2. ' head' → logprob: -2.827589988708496
    3. 'tail' → logprob: -5.077589988708496
    4. ' s' → logprob: -5.702589988708496
    5. 'head' → logprob: -5.827589988708496
    6. ' len' → logprob: -6.077589988708496
    7. 's' → logprob: -8.702589988708496
    8. ' True' → logprob: -8.702589988708496
    9. ' ans' → logprob: -9.702589988708496
    10. ' ' → logprob: -9.702589988708496

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012535012501757592
    2. ' :' → logprob: -9.12512493133545
    3. ':
' → logprob: -11.62512493133545
    4. '():' → logprob: -12.87512493133545
    5. '   ' → logprob: -13.12512493133545
    6. ':**' → logprob: -14.12512493133545
    7. '):' → logprob: -14.37512493133545
    8. ',' → logprob: -15.00012493133545
    9. '[' → logprob: -15.25012493133545
    10. ':return' → logprob: -15.87512493133545

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2779056429862976
    2. 's' → logprob: -2.5279057025909424
    3. ' if' → logprob: -2.5279057025909424
    4. ' s' → logprob: -2.6529057025909424
    5. 'if' → logprob: -5.027905464172363
    6. ' c' → logprob: -6.277905464172363
    7. 'c' → logprob: -7.402905464172363
    8. ' ' → logprob: -7.652905464172363
    9. ' line' → logprob: -7.902905464172363
    10. '    ' → logprob: -8.027905464172363

Token 31: ' ss' (ID: 20928)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8391385078430176
    2. '   ' → logprob: -1.0891385078430176
    3. ' s' → logprob: -2.0891385078430176
    4. ' line' → logprob: -2.8391385078430176
    5. 'line' → logprob: -4.339138507843018
    6. ' if' → logprob: -4.339138507843018
    7. 'if' → logprob: -4.964138507843018
    8. 'c' → logprob: -5.589138507843018
    9. ' c' → logprob: -6.464138507843018
    10. 'try' → logprob: -6.839138507843018

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5240272283554077
    2. ' =' → logprob: -0.8990272283554077
    3. '==' → logprob: -8.399026870727539
    4. ' ==' → logprob: -8.399026870727539
    5. '[' → logprob: -9.524026870727539
    6. 's' → logprob: -9.524026870727539
    7. ' ' → logprob: -9.774026870727539
    8. '.startswith' → logprob: -9.774026870727539
    9. '=input' → logprob: -10.274026870727539
    10. '.' → logprob: -10.899026870727539

Token 33: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02493046596646309
    2. ' s' → logprob: -4.024930477142334
    3. 'default' → logprob: -5.149930477142334
    4. 'input' → logprob: -7.399930477142334
    5. ' defaultdict' → logprob: -8.774930000305176
    6. 'head' → logprob: -10.524930000305176
    7. 'len' → logprob: -10.524930000305176
    8. ' input' → logprob: -10.774930000305176
    9. ''s' → logprob: -11.274930000305176
    10. ' default' → logprob: -11.399930000305176

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005109758349135518
    2. '[:' → logprob: -7.625511169433594
    3. '[s' → logprob: -12.500511169433594
    4. '+' → logprob: -12.750511169433594
    5. '[start' → logprob: -13.500511169433594
    6. '=head' → logprob: -13.625511169433594
    7. '[:]' → logprob: -13.625511169433594
    8. '   ' → logprob: -13.750511169433594
    9. '[a' → logprob: -14.000511169433594
    10. 'head' → logprob: -14.250511169433594

Token 35: 'head' (ID: 3636)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5252188444137573
    2. 'head' → logprob: -0.9002188444137573
    3. ' tail' → logprob: -6.525218963623047
    4. ' head' → logprob: -7.400218963623047
    5. '(head' → logprob: -12.775218963623047
    6. '	head' → logprob: -12.900218963623047
    7. ' ' → logprob: -13.775218963623047
    8. '=head' → logprob: -13.775218963623047
    9. 'tails' → logprob: -13.900218963623047
    10. '   ' → logprob: -14.025218963623047

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002911265939474106
    2. ' :' → logprob: -6.37791109085083
    3. '+' → logprob: -7.50291109085083
    4. ']' → logprob: -8.002911567687988
    5. ':]' → logprob: -9.252911567687988
    6. 'tail' → logprob: -9.502911567687988
    7. ' +' → logprob: -9.877911567687988
    8. ':].' → logprob: -10.377911567687988
    9. ']+' → logprob: -11.252911567687988
    10. ':]
' → logprob: -12.252911567687988

Token 37: 'tail' (ID: 20472)
  Prédit: 'tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.00441480940207839
    2. ' tail' → logprob: -6.004415035247803
    3. 'head' → logprob: -6.254415035247803
    4. ' head' → logprob: -12.004414558410645
    5. '-tail' → logprob: -13.129414558410645
    6. 'tails' → logprob: -13.379414558410645
    7. '   ' → logprob: -13.879414558410645
    8. '1' → logprob: -14.129414558410645
    9. '
' → logprob: -14.504414558410645
    10. '_tail' → logprob: -14.629414558410645

Token 38: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035677615087479353
    2. '+' → logprob: -5.753567695617676
    3. ' ]' → logprob: -8.753567695617676
    4. ']
' → logprob: -9.128567695617676
    5. ')' → logprob: -9.878567695617676
    6. ')]' → logprob: -10.503567695617676
    7. '])' → logprob: -10.753567695617676
    8. '+]' → logprob: -11.628567695617676
    9. ']

' → logprob: -12.628567695617676
    10. ' +' → logprob: -12.753567695617676

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3797537088394165
    2. '<|end|>' → logprob: -1.5047537088394165
    3. '
' → logprob: -2.879753589630127
    4. ' if' → logprob: -4.504753589630127
    5. '    
' → logprob: -5.129753589630127
    6. '+' → logprob: -5.254753589630127
    7. ' ' → logprob: -5.504753589630127
    8. ' 
' → logprob: -5.629753589630127
    9. '    ' → logprob: -6.254753589630127
    10. '<|end|>' → logprob: -6.504753589630127

Token 40: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5674601793289185
    2. '<|end|>' → logprob: -2.192460060119629
    3. 'if' (adapté à ' if') → logprob: -2.442460060119629
    4. '+' → logprob: -2.692460060119629
    5. '   ' → logprob: -2.692460060119629
    6. ' ' → logprob: -3.317460060119629
    7. ' 
' → logprob: -3.817460060119629
    8. '    
' → logprob: -4.942460060119629
    9. '    ' → logprob: -5.317460060119629
    10. '...' → logprob: -5.317460060119629

Token 41: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.1827687919139862
    2. ' tail' → logprob: -2.6827688217163086
    3. ' not' → logprob: -3.0577688217163086
    4. ' s' → logprob: -3.9327688217163086
    5. ' len' → logprob: -4.057768821716309
    6. 'ss' → logprob: -5.182768821716309
    7. ' before' → logprob: -5.182768821716309
    8. ' head' → logprob: -6.307768821716309
    9. 'tail' → logprob: -7.307768821716309
    10. ' ' → logprob: -8.057768821716309

Token 42: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14849261939525604
    2. ' in' → logprob: -2.3984925746917725
    3. '==' → logprob: -3.3984925746917725
    4. ' not' → logprob: -4.773492813110352
    5. ' !=' → logprob: -5.523492813110352
    6. ' ' → logprob: -6.898492813110352
    7. 'in' → logprob: -9.148492813110352
    8. '!=' → logprob: -9.398492813110352
    9. 'not' → logprob: -11.148492813110352
    10. ' =' → logprob: -11.273492813110352

Token 43: ' before' (ID: 2254)
  Prédit: ' before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' before' → logprob: -0.11284423619508743
    2. 'before' → logprob: -2.237844228744507
    3. ' ' → logprob: -11.612844467163086
    4. '""' → logprob: -12.487844467163086
    5. '	before' → logprob: -12.612844467163086
    6. '"' → logprob: -13.362844467163086
    7. '(before' → logprob: -13.362844467163086
    8. ' s' → logprob: -14.487844467163086
    9. 'bef' → logprob: -14.487844467163086
    10. 's' → logprob: -14.612844467163086

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09028664976358414
    2. ' and' → logprob: -2.8402867317199707
    3. ':
' → logprob: -3.7152867317199707
    4. 'and' → logprob: -5.965286731719971
    5. ' or' → logprob: -7.590286731719971
    6. '<|end|>' → logprob: -9.215286254882812
    7. ' :' → logprob: -9.465286254882812
    8. '   ' → logprob: -9.590286254882812
    9. '<|end|>' → logprob: -9.965286254882812
    10. '       ' → logprob: -9.965286254882812

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003122340887784958
    2. '   ' → logprob: -7.378122329711914
    3. '<|end|>' → logprob: -7.378122329711914
    4. '    ' → logprob: -7.628122329711914
    5. '        
' → logprob: -8.128122329711914
    6. '+' → logprob: -8.253122329711914
    7. ':' → logprob: -9.503122329711914
    8. '\n' → logprob: -9.503122329711914
    9. '```' → logprob: -9.753122329711914
    10. '      ' → logprob: -10.003122329711914

Token 46: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49372535943984985
    2. 'ans' → logprob: -1.493725299835205
    3. ' ans' → logprob: -2.493725299835205
    4. '           ' → logprob: -2.993725299835205
    5. '```' → logprob: -3.868725299835205
    6. 'count' → logprob: -6.618725299835205
    7. ' before' → logprob: -6.618725299835205
    8. 'head' → logprob: -6.618725299835205
    9. 'before' (adapté à ' before') → logprob: -6.743725299835205
    10. ' defaultdict' → logprob: -7.118725299835205

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023274246603250504
    2. '=' → logprob: -3.7732741832733154
    3. ' ' → logprob: -10.648274421691895
    4. ' +=' → logprob: -12.523274421691895
    5. '<|end|>' → logprob: -15.273274421691895
    6. ' ==' → logprob: -15.648274421691895
    7. ',' → logprob: -15.898274421691895
    8. '+=' → logprob: -16.023273468017578
    9. ')' → logprob: -16.148273468017578
    10. '.' → logprob: -16.648273468017578

Token 48: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.5232258439064026
    2. ' ss' → logprob: -0.8982258439064026
    3. 's' → logprob: -9.648225784301758
    4. '	ss' → logprob: -11.523225784301758
    5. '(ss' → logprob: -11.898225784301758
    6. 'sss' → logprob: -12.023225784301758
    7. ' s' → logprob: -12.898225784301758
    8. ':ss' → logprob: -13.023225784301758
    9. '_ss' → logprob: -13.148225784301758
    10. ' ' → logprob: -13.148225784301758

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006735026836395264
    2. '<|end|>' → logprob: -5.506734848022461
    3. '        
' → logprob: -7.006734848022461
    4. '   ' → logprob: -7.381734848022461
    5. '
' → logprob: -7.881734848022461
    6. ',' → logprob: -9.006734848022461
    7. '```' → logprob: -9.006734848022461
    8. '<|end|>' → logprob: -9.131734848022461
    9. '  
' → logprob: -9.881734848022461
    10. '        ' → logprob: -10.131734848022461

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014779888093471527
    2. 'tail' → logprob: -5.264780044555664
    3. '<|end|>' → logprob: -6.264780044555664
    4. '   ' → logprob: -6.389780044555664
    5. '        
' → logprob: -6.639780044555664
    6. '```' → logprob: -6.639780044555664
    7. ' tail' → logprob: -6.764780044555664
    8. '
' → logprob: -7.889780044555664
    9. '+' → logprob: -7.889780044555664
    10. '        ' → logprob: -8.014780044555664

Token 51: ' head' (ID: 3189)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.005075216293335
    2. 'tail' → logprob: -1.005075216293335
    3. '       ' → logprob: -1.380075216293335
    4. 'if' → logprob: -4.505075454711914
    5. 'default' → logprob: -6.630075454711914
    6. 'head' (adapté à ' head') → logprob: -6.755075454711914
    7. '   ' → logprob: -7.005075454711914
    8. ' ans' → logprob: -7.755075454711914
    9. '```' → logprob: -7.880075454711914
    10. ' tail' → logprob: -8.755075454711914

Token 52: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5417555570602417
    2. '+' → logprob: -1.2917555570602417
    3. '+=' → logprob: -2.0417556762695312
    4. ' +' → logprob: -4.916755676269531
    5. '=' → logprob: -5.291755676269531
    6. ' =' → logprob: -6.791755676269531
    7. '<|end|>' → logprob: -9.291755676269531
    8. ' ' → logprob: -10.166755676269531
    9. '++' → logprob: -10.541755676269531
    10. ')' → logprob: -11.541755676269531

Token 53: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.04823959991335869
    2. ' tail' → logprob: -3.1732397079467773
    3. 'head' → logprob: -5.423239707946777
    4. '0' → logprob: -7.798239707946777
    5. ' head' → logprob: -8.048239707946777
    6. '1' → logprob: -9.923239707946777
    7. '   ' → logprob: -11.923239707946777
    8. '_tail' → logprob: -12.048239707946777
    9. 't' → logprob: -12.298239707946777
    10. ' ' → logprob: -12.423239707946777

Token 54: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8002123236656189
    2. '       ' → logprob: -1.1752123832702637
    3. '
' → logprob: -1.9252123832702637
    4. '<|end|>' → logprob: -2.9252123832702637
    5. '   ' → logprob: -4.300212383270264
    6. '<|end|>' → logprob: -4.675212383270264
    7. '+
' → logprob: -4.800212383270264
    8. '```' → logprob: -5.925212383270264
    9. 'tail' → logprob: -6.050212383270264
    10. ' +' → logprob: -6.175212383270264

Token 55: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.506939172744751
    2. '       ' → logprob: -1.381939172744751
    3. 'tail' → logprob: -2.006939172744751
    4. '   ' → logprob: -5.006938934326172
    5. '+
' → logprob: -6.131938934326172
    6. ' +' → logprob: -7.006938934326172
    7. ' tail' → logprob: -7.506938934326172
    8. '++' → logprob: -7.506938934326172
    9. '
' → logprob: -7.881938934326172
    10. '```' → logprob: -8.256938934326172

Token 56: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' (adapté à ' tail') → logprob: -0.00019018957391381264
    2. ' tail' → logprob: -9.250189781188965
    3. '       ' → logprob: -9.375189781188965
    4. '   ' → logprob: -12.750189781188965
    5. '           ' → logprob: -12.875189781188965
    6. '+' → logprob: -13.500189781188965
    7. 'head' → logprob: -14.125189781188965
    8. 'tails' → logprob: -14.500189781188965
    9. '```' → logprob: -14.750189781188965
    10. '++' → logprob: -15.625189781188965

Token 57: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3433064818382263
    2. '+=' → logprob: -1.343306541442871
    3. ' +=' → logprob: -3.718306541442871
    4. ' +' → logprob: -5.593306541442871
    5. '=' → logprob: -6.468306541442871
    6. ' =' → logprob: -10.593306541442871
    7. '++' → logprob: -12.093306541442871
    8. '<|end|>' → logprob: -12.093306541442871
    9. '```' → logprob: -12.593306541442871
    10. ']+=' → logprob: -13.343306541442871

Token 58: ' head' (ID: 3189)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.6610437631607056
    2. ' tail' → logprob: -1.7860437631607056
    3. 'head' → logprob: -1.7860437631607056
    4. ' head' → logprob: -1.9110437631607056
    5. '   ' → logprob: -8.661044120788574
    6. 'len' → logprob: -9.661044120788574
    7. ' ' → logprob: -9.786044120788574
    8. 't' → logprob: -10.411044120788574
    9. '	head' → logprob: -10.661044120788574
    10. '=head' → logprob: -10.911044120788574

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003601617179811001
    2. ' +' → logprob: -5.628601551055908
    3. '1' → logprob: -14.128602027893066
    4. '2' → logprob: -15.753602027893066
    5. '＋' → logprob: -16.00360107421875
    6. ' plus' → logprob: -16.12860107421875
    7. '+k' → logprob: -16.12860107421875
    8. '+
' → logprob: -16.25360107421875
    9. '+i' → logprob: -16.75360107421875
    10. '```' → logprob: -16.87860107421875

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. ' ' → logprob: -10.375041961669922
    3. '2' → logprob: -11.750041961669922
    4. 'len' → logprob: -13.125041961669922
    5. '   ' → logprob: -15.500041961669922
    6. 's' → logprob: -16.312541961669922
    7. '3' → logprob: -16.375041961669922
    8. '0' → logprob: -16.937541961669922
    9. '10' → logprob: -17.062541961669922
    10. '  ' → logprob: -17.250041961669922

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015085970517247915
    2. ' ' → logprob: -9.375150680541992
    3. '2' → logprob: -10.250150680541992
    4. 'len' → logprob: -10.625150680541992
    5. '3' → logprob: -13.375150680541992
    6. '4' → logprob: -14.562650680541992
    7. '   ' → logprob: -14.625150680541992
    8. '0' → logprob: -14.687650680541992
    9. '10' → logprob: -14.687650680541992
    10. 's' → logprob: -15.250150680541992

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12926965951919556
    2. '<|end|>' → logprob: -2.379269599914551
    3. '
' → logprob: -3.879269599914551
    4. '       ' → logprob: -5.879269599914551
    5. '    
' → logprob: -5.879269599914551
    6. '<|end|>' → logprob: -7.379269599914551
    7. '+' → logprob: -8.00426959991455
    8. '```' → logprob: -8.25426959991455
    9. '  
' → logprob: -8.37926959991455
    10. '\n' → logprob: -8.75426959991455

Token 63: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08245360851287842
    2. '<|end|>' → logprob: -3.207453727722168
    3. '       ' → logprob: -3.582453727722168
    4. '
' → logprob: -5.707453727722168
    5. 'else' → logprob: -5.832453727722168
    6. '```' → logprob: -6.082453727722168
    7. ' else' → logprob: -7.332453727722168
    8. '<|end|>' → logprob: -7.957453727722168
    9. 'elif' → logprob: -8.082453727722168
    10. '    
' → logprob: -8.457453727722168

Token 64: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9047528505325317
    2. '   ' → logprob: -1.2797528505325317
    3. 'continue' → logprob: -1.5297528505325317
    4. 'else' → logprob: -2.529752731323242
    5. 'ans' (adapté à ' ans') → logprob: -4.154752731323242
    6. 'elif' → logprob: -6.154752731323242
    7. '```' → logprob: -6.404752731323242
    8. ' continue' → logprob: -7.154752731323242
    9. ' else' → logprob: -9.029752731323242
    10. 'if' → logprob: -9.654752731323242

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.035850368440151215
    2. '+=' → logprob: -3.4108502864837646
    3. '+' → logprob: -6.160850524902344
    4. ' +' → logprob: -10.160850524902344
    5. ' =' → logprob: -10.285850524902344
    6. '=' → logprob: -11.910850524902344
    7. '<|end|>' → logprob: -12.285850524902344
    8. '++' → logprob: -12.910850524902344
    9. ' ' → logprob: -13.535850524902344
    10. '+='' → logprob: -14.285850524902344

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007614083122462034
    2. ' ' → logprob: -4.8826141357421875
    3. 's' → logprob: -12.507614135742188
    4. 'len' → logprob: -13.507614135742188
    5. 'ss' → logprob: -13.882614135742188
    6. '2' → logprob: -14.132614135742188
    7. '0' → logprob: -15.882614135742188
    8. ' defaultdict' → logprob: -16.007614135742188
    9. ' len' → logprob: -16.257614135742188
    10. ' ss' → logprob: -16.320114135742188

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.500040054321289
    3. 'len' → logprob: -11.750040054321289
    4. 'ss' → logprob: -13.125040054321289
    5. '2' → logprob: -13.750040054321289
    6. 's' → logprob: -13.875040054321289
    7. '0' → logprob: -15.750040054321289
    8. 'int' → logprob: -16.25004005432129
    9. '10' → logprob: -16.81254005432129
    10. '   ' → logprob: -16.87504005432129

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010720239020884037
    2. ' else' → logprob: -5.135720252990723
    3. 'else' → logprob: -5.760720252990723
    4. '<|end|>' → logprob: -6.885720252990723
    5. 'elif' → logprob: -8.635720252990723
    6. '	else' → logprob: -8.885720252990723
    7. ' elif' → logprob: -9.635720252990723
    8. '    
' → logprob: -10.260720252990723
    9. '  ' → logprob: -10.260720252990723
    10. ' ' → logprob: -10.635720252990723

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002745554083958268
    2. 'else' → logprob: -6.877745628356934
    3. '<|end|>' → logprob: -7.002745628356934
    4. ' else' → logprob: -7.627745628356934
    5. 'elif' → logprob: -8.627745628356934
    6. ' elif' → logprob: -10.627745628356934
    7. ' ' → logprob: -10.627745628356934
    8. '  ' → logprob: -10.752745628356934
    9. '```' → logprob: -11.502745628356934
    10. '	else' → logprob: -11.627745628356934

Token 70: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5008466839790344
    2. ' else' → logprob: -1.5008466243743896
    3. '   ' → logprob: -2.5008466243743896
    4. 'elif' → logprob: -2.5008466243743896
    5. ' elif' → logprob: -5.000846862792969
    6. '  ' → logprob: -10.250846862792969
    7. ')' → logprob: -10.625846862792969
    8. ' ' → logprob: -10.625846862792969
    9. '```' → logprob: -10.750846862792969
    10. '    ' → logprob: -10.875846862792969

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057904381304979324
    2. ':
' → logprob: -2.9329044818878174
    3. '       ' → logprob: -5.932904243469238
    4. '   ' → logprob: -8.182904243469238
    5. ',' → logprob: -10.557904243469238
    6. '<|end|>' → logprob: -11.557904243469238
    7. '=' → logprob: -12.057904243469238
    8. '    ' → logprob: -12.182904243469238
    9. '        ' → logprob: -12.432904243469238
    10. '):
' → logprob: -12.557904243469238

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06322459876537323
    2. 'tail' → logprob: -3.0632245540618896
    3. ' tail' → logprob: -4.438224792480469
    4. '   ' → logprob: -5.938224792480469
    5. '           ' → logprob: -10.688224792480469
    6. '_tail' → logprob: -11.188224792480469
    7. '```' → logprob: -11.563224792480469
    8. ' ' → logprob: -12.313224792480469
    9. '++' → logprob: -12.563224792480469
    10. '    ' → logprob: -12.688224792480469

Token 73: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' (adapté à ' tail') → logprob: -0.0011948712635785341
    2. ' tail' → logprob: -7.126194953918457
    3. '   ' → logprob: -8.126194953918457
    4. '       ' → logprob: -9.501194953918457
    5. ' ' → logprob: -12.251194953918457
    6. '           ' → logprob: -12.251194953918457
    7. '_tail' → logprob: -12.876194953918457
    8. '  ' → logprob: -13.626194953918457
    9. '
' → logprob: -13.626194953918457
    10. '.tail' → logprob: -13.751194953918457

Token 74: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6935009360313416
    2. '+=' → logprob: -0.6935009360313416
    3. '+' → logprob: -8.193500518798828
    4. '=' → logprob: -9.568500518798828
    5. ' =' → logprob: -12.818500518798828
    6. ' +' → logprob: -12.943500518798828
    7. '++' → logprob: -14.068500518798828
    8. ']+=' → logprob: -14.818500518798828
    9. '+='' → logprob: -14.943500518798828
    10. '+="' → logprob: -15.068500518798828

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. '+' → logprob: -17.250045776367188
    5. '2' → logprob: -17.250045776367188
    6. '```' → logprob: -18.000045776367188
    7. '<|end|>' → logprob: -18.062545776367188
    8. '0' → logprob: -18.500045776367188
    9. '  ' → logprob: -18.687545776367188
    10. '3' → logprob: -19.687545776367188

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -17.500001907348633
    4. '2' → logprob: -17.750001907348633
    5. '```' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '0' → logprob: -19.375001907348633
    8. '１' → logprob: -19.750001907348633
    9. '+' → logprob: -19.875001907348633
    10. '  ' → logprob: -19.937501907348633

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6920731067657471
    2. '<|end|>' → logprob: -0.8170731067657471
    3. '
' → logprob: -3.067073106765747
    4. ' if' → logprob: -5.567072868347168
    5. '<|end|>' → logprob: -6.067072868347168
    6. ' ' → logprob: -6.692072868347168
    7. '```' → logprob: -6.942072868347168
    8. '    ' → logprob: -7.567072868347168
    9. '    
' → logprob: -7.817072868347168
    10. '  
' → logprob: -7.942072868347168

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09040132910013199
    2. ' if' → logprob: -2.7154014110565186
    3. ' ' → logprob: -4.9654011726379395
    4. '<|end|>' → logprob: -5.0904011726379395
    5. '
' → logprob: -5.7154011726379395
    6. 'if' (adapté à ' if') → logprob: -6.4654011726379395
    7. '    ' → logprob: -7.3404011726379395
    8. '  ' → logprob: -7.8404011726379395
    9. '#' → logprob: -8.215401649475098
    10. '```' → logprob: -8.465401649475098

Token 80: ' tail' (ID: 12742)
  Prédit: ' tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tail' → logprob: -0.02341492846608162
    2. 'tail' → logprob: -3.7734148502349854
    3. ' head' → logprob: -8.773414611816406
    4. 'head' → logprob: -11.273414611816406
    5. ' not' → logprob: -13.898414611816406
    6. ' ' → logprob: -15.023414611816406
    7. ' len' → logprob: -15.648414611816406
    8. '_tail' → logprob: -15.773414611816406
    9. 'Tail' → logprob: -16.023414611816406
    10. 't' → logprob: -16.273414611816406

Token 81: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3881067633628845
    2. ' >' → logprob: -1.1381068229675293
    3. '>=' → logprob: -7.138106822967529
    4. ' >=' → logprob: -8.638106346130371
    5. '==' → logprob: -8.763106346130371
    6. ' ==' → logprob: -9.263106346130371
    7. '<=' → logprob: -12.138106346130371
    8. ' <=' → logprob: -13.263106346130371
    9. '>end' → logprob: -13.388106346130371
    10. '">' → logprob: -13.638106346130371

Token 82: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011711753904819489
    2. ' len' → logprob: -6.751171112060547
    3. '(len' → logprob: -14.126171112060547
    4. '=len' → logprob: -15.876171112060547
    5. '	len' → logprob: -17.001171112060547
    6. ' ' → logprob: -17.751171112060547
    7. '[len' → logprob: -18.376171112060547
    8. ',len' → logprob: -18.626171112060547
    9. '   ' → logprob: -18.626171112060547
    10. '<len' → logprob: -18.626171112060547

Token 83: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.125005722045898
    3. 's' → logprob: -14.250005722045898
    4. '(ss' → logprob: -20.3750057220459
    5. '(
' → logprob: -20.6250057220459
    6. ' (' → logprob: -21.1250057220459
    7. '(S' → logprob: -22.2500057220459
    8. ')' → logprob: -22.5000057220459
    9. '()' → logprob: -22.8750057220459
    10. '(x' → logprob: -23.7500057220459

Token 84: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002239470137283206
    2. ')' → logprob: -6.12723970413208
    3. '):
' → logprob: -10.752239227294922
    4. ' ):' → logprob: -11.377239227294922
    5. ')+' → logprob: -11.377239227294922
    6. ':' → logprob: -11.877239227294922
    7. '):

' → logprob: -14.252239227294922
    8. '+' → logprob: -14.752239227294922
    9. ')):' → logprob: -14.752239227294922
    10. ''):' → logprob: -15.252239227294922

Token 85: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03720913082361221
    2. '+' → logprob: -3.4122090339660645
    3. '+:' → logprob: -6.2872090339660645
    4. ' +' → logprob: -6.5372090339660645
    5. ' or' → logprob: -9.287209510803223
    6. ' :' → logprob: -9.787209510803223
    7. ':
' → logprob: -9.787209510803223
    8. '):' → logprob: -11.037209510803223
    9. ' and' → logprob: -11.162209510803223
    10. '():' → logprob: -12.912209510803223

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '0' → logprob: -18.250036239624023
    4. '   ' → logprob: -19.375036239624023
    5. '2' → logprob: -19.625036239624023
    6. '  ' → logprob: -20.125036239624023
    7. '１' → logprob: -20.125036239624023
    8. '```' → logprob: -20.750036239624023
    9. '+' → logprob: -21.000036239624023
    10. '	' → logprob: -21.250036239624023

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '0' → logprob: -18.37502098083496
    4. '2' → logprob: -19.25002098083496
    5. '  ' → logprob: -19.87502098083496
    6. '   ' → logprob: -20.25002098083496
    7. '１' → logprob: -20.37502098083496
    8. '{' → logprob: -20.37502098083496
    9. '۱' → logprob: -20.75002098083496
    10. '﻿' → logprob: -21.56252098083496

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005341547541320324
    2. ':
' → logprob: -5.255341529846191
    3. '   ' → logprob: -9.380341529846191
    4. '       ' → logprob: -10.755341529846191
    5. ':
' → logprob: -14.630341529846191
    6. '):' → logprob: -15.130341529846191
    7. ' :' → logprob: -15.380341529846191
    8. ':return' → logprob: -15.505341529846191
    9. ':

' → logprob: -15.880341529846191
    10. ',' → logprob: -15.880341529846191

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5232666730880737
    2. '   ' → logprob: -0.8982666730880737
    3. ' break' → logprob: -9.648266792297363
    4. 'break' → logprob: -10.273266792297363
    5. '```' → logprob: -11.148266792297363
    6. '	break' → logprob: -11.523266792297363
    7. '   ' → logprob: -11.773266792297363
    8. ' ' → logprob: -12.773266792297363
    9. '           ' → logprob: -12.898266792297363
    10. '    ' → logprob: -13.148266792297363

Token 90: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26800671219825745
    2. '       ' → logprob: -1.893006682395935
    3. ' break' → logprob: -2.8930068016052246
    4. 'break' → logprob: -3.6430068016052246
    5. '	break' → logprob: -6.143006801605225
    6. 'print' (adapté à ' print') → logprob: -8.018006324768066
    7. '```' → logprob: -8.893006324768066
    8. ' ' → logprob: -9.143006324768066
    9. ' print' → logprob: -9.143006324768066
    10. '           ' → logprob: -11.768006324768066

Token 91: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.802049756515771e-05
    2. '(' → logprob: -9.625067710876465
    3. 'ans' → logprob: -13.250067710876465
    4. '(answer' → logprob: -15.875067710876465
    5. '	ans' → logprob: -17.12506866455078
    6. '(
' → logprob: -17.75006866455078
    7. '(s' → logprob: -17.87506866455078
    8. ' (' → logprob: -17.87506866455078
    9. '(abs' → logprob: -18.00006866455078
    10. '(an' → logprob: -18.12506866455078

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029757089912891388
    2. ')
' → logprob: -3.529757022857666
    3. ')
' → logprob: -12.529757499694824
    4. ' )' → logprob: -14.029757499694824
    5. ')`' → logprob: -14.404757499694824
    6. ')`
' → logprob: -15.154757499694824
    7. '`)' → logprob: -15.279757499694824
    8. ')return' → logprob: -15.529757499694824
    9. '   ' → logprob: -16.029756546020508
    10. '))' → logprob: -16.029756546020508

Token 93: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.275068461894989
    2. '       ' → logprob: -1.5250685214996338
    3. '<|end|>' → logprob: -5.150068283081055
    4. '	break' → logprob: -5.775068283081055
    5. ' break' → logprob: -5.900068283081055
    6. '    ' → logprob: -6.025068283081055
    7. 'break' → logprob: -6.025068283081055
    8. '     ' → logprob: -7.025068283081055
    9. '\n' → logprob: -7.150068283081055
    10. ')' → logprob: -7.525068283081055

Token 94: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010490112006664276
    2. ' break' → logprob: -5.0104899406433105
    3. 'break' → logprob: -5.6354899406433105
    4. '   ' → logprob: -8.885490417480469
    5. '	break' → logprob: -9.885490417480469
    6. '```' → logprob: -12.260490417480469
    7. ' ' → logprob: -13.635490417480469
    8. '           ' → logprob: -13.760490417480469
    9. '        
' → logprob: -14.135490417480469
    10. '	' → logprob: -15.260490417480469

Token 95: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002194755943492055
    2. '(' → logprob: -6.127194881439209
    3. '()`' → logprob: -12.50219440460205
    4. '()
' → logprob: -12.75219440460205
    5. ' ()' → logprob: -14.25219440460205
    6. '().' → logprob: -14.75219440460205
    7. '()

' → logprob: -14.75219440460205
    8. '();' → logprob: -15.12719440460205
    9. '`()' → logprob: -15.75219440460205
    10. '()<' → logprob: -15.87719440460205


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 32.26%
Précision adaptée (1ère position): 35.48%
Précision (top 10): 88.17%
================================================================================
