================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict

def parse_n(arg):
    return int(arg)

def parse_A(arg):
    return list(map(int, arg.split()))

def initialize_ret():
    return 0

def initialize_X():
    return defaultdict(int)

def update_X(X, a, i):
    X[a+i] += 1

def compute_key(i, a):
    return i - a

def is_valid_key(key):
    return key >= 0

def update_ret(ret, X, key):
    ret += X[key]
    return ret

def process_element(i, a, X, ret):
    update_X(X, a, i)
    key = compute_key(i, a)
    if is_valid_key(key):
        ret = update_ret(ret, X, key)
    return ret

def process_list(A):
    ret = initialize_ret()
    X = initialize_X()
    for i, a in enumerate(A):
        ret = process_element(i, a, X, ret)
    return ret

def solve(*args: str) -> str:
    n = parse_n(args[0])
    A = parse_A(args[1])
    result = process_list(A)
    return str(result)

if __name__ == "__main__":
    print(solve(*(open(0).read().splitlines())))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.5559979677200317
    2. 'deque' → logprob: -1.3059979677200317
    3. 'default' → logprob: -2.305997848510742
    4. ' defaultdict' → logprob: -3.680997848510742
    5. 'Counter' → logprob: -4.180997848510742
    6. ' abc' → logprob: -4.805997848510742
    7. 'named' → logprob: -5.680997848510742
    8. ' deque' → logprob: -6.555997848510742
    9. ' Counter' → logprob: -7.180997848510742
    10. '```' → logprob: -7.305997848510742

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007142632734030485
    2. '(
' → logprob: -5.632142543792725
    3. '\' → logprob: -7.132142543792725
    4. '\(' → logprob: -7.382142543792725
    5. '```' → logprob: -7.882142543792725
    6. 'newline' → logprob: -8.007143020629883
    7. '\n' → logprob: -8.382143020629883
    8. '[' → logprob: -8.507143020629883
    9. '
' → logprob: -9.132143020629883
    10. 'def' → logprob: -9.257143020629883

Token 5: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6362341046333313
    2. '(' → logprob: -1.3862340450286865
    3. 'default' → logprob: -2.2612340450286865
    4. 'def' → logprob: -2.8862340450286865
    5. '\' → logprob: -4.386234283447266
    6. '(
' → logprob: -4.636234283447266
    7. 'a' → logprob: -4.761234283447266
    8. '
' → logprob: -5.886234283447266
    9. '\n' → logprob: -6.011234283447266
    10. '```' → logprob: -6.011234283447266

Token 6: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012152367271482944
    2. ' defaultdict' → logprob: -7.00121545791626
    3. ' ' → logprob: -9.376214981079102
    4. ' space' → logprob: -10.001214981079102
    5. ' process' → logprob: -10.626214981079102
    6. '  ' → logprob: -11.126214981079102
    7. ' add' → logprob: -11.501214981079102
    8. ' func' → logprob: -11.501214981079102
    9. ' ```' → logprob: -11.876214981079102
    10. ' _' → logprob: -11.876214981079102

Token 7: '_n' (ID: 2170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6473574042320251
    2. '_' → logprob: -0.8973574042320251
    3. '_token' → logprob: -3.14735746383667
    4. ' (' → logprob: -4.89735746383667
    5. '_line' → logprob: -4.89735746383667
    6. '_parser' → logprob: -6.52235746383667
    7. '_function' → logprob: -6.89735746383667
    8. '_par' → logprob: -7.14735746383667
    9. '_parse' → logprob: -7.27235746383667
    10. '```' → logprob: -7.39735746383667

Token 8: '(arg' (ID: 19030)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.014588993974030018
    2. '_' → logprob: -4.639588832855225
    3. 'amespace' → logprob: -6.389588832855225
    4. 'ames' → logprob: -6.639588832855225
    5. 'a' → logprob: -6.889588832855225
    6. 'umber' → logprob: -8.139589309692383
    7. 'ext' → logprob: -8.264589309692383
    8. 'ode' → logprob: -10.139589309692383
    9. 'amed' → logprob: -10.139589309692383
    10. '_a' → logprob: -10.764589309692383

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02741358056664467
    2. ')' → logprob: -4.152413368225098
    3. 's' → logprob: -5.777413368225098
    4. 'ument' → logprob: -6.027413368225098
    5. '):
' → logprob: -6.777413368225098
    6. 'u' → logprob: -6.902413368225098
    7. '_' → logprob: -7.027413368225098
    8. '):

' → logprob: -7.027413368225098
    9. 'ame' → logprob: -7.527413368225098
    10. 'um' → logprob: -8.027413368225098

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7483047246932983
    2. '    ' → logprob: -1.1233047246932983
    3. ' ' → logprob: -1.8733047246932983
    4. ' return' → logprob: -4.248304843902588
    5. '(' → logprob: -5.123304843902588
    6. 'return' → logprob: -5.248304843902588
    7. '\' → logprob: -5.998304843902588
    8. ':' → logprob: -5.998304843902588
    9. '     
' → logprob: -6.123304843902588
    10. '    
' → logprob: -6.373304843902588

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7327265739440918
    2. ' ' → logprob: -1.3577265739440918
    3. '    ' → logprob: -2.732726573944092
    4. ' return' → logprob: -3.232726573944092
    5. 'd' → logprob: -3.482726573944092
    6. 'return' (adapté à ' return') → logprob: -3.607726573944092
    7. '_' → logprob: -4.482726573944092
    8. ''' → logprob: -4.482726573944092
    9. '`' → logprob: -4.607726573944092
    10. '```' → logprob: -4.857726573944092

Token 12: ' int' (ID: 677)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5366446375846863
    2. ' ' → logprob: -1.286644697189331
    3. ' arg' → logprob: -2.786644697189331
    4. ' {}' → logprob: -2.911644697189331
    5. ' []' → logprob: -4.786644458770752
    6. ' int' → logprob: -4.911644458770752
    7. 'default' → logprob: -6.411644458770752
    8. 'arg' → logprob: -6.911644458770752
    9. '{}' → logprob: -6.911644458770752
    10. ' None' → logprob: -7.286644458770752

Token 13: '(arg' (ID: 19030)
  Prédit: '(arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arg' → logprob: -0.20164868235588074
    2. '(' → logprob: -1.7016487121582031
    3. '('' → logprob: -9.201648712158203
    4. '(n' → logprob: -10.576648712158203
    5. ')arg' → logprob: -10.701648712158203
    6. '(argument' → logprob: -11.201648712158203
    7. '("("' → logprob: -11.326648712158203
    8. 'arg' → logprob: -11.701648712158203
    9. '(a' → logprob: -12.076648712158203
    10. '(`' → logprob: -12.076648712158203

Token 14: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -13.375005722045898
    3. '))' → logprob: -14.250005722045898
    4. ')return' → logprob: -14.625005722045898
    5. '[' → logprob: -14.750005722045898
    6. '')' → logprob: -14.875005722045898
    7. ')))' → logprob: -15.000005722045898
    8. '   ' → logprob: -15.000005722045898
    9. ' ' → logprob: -15.500005722045898
    10. ')
' → logprob: -15.625005722045898

Token 15: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05017475038766861
    2. ':' → logprob: -4.175174713134766
    3. '_' → logprob: -4.300174713134766
    4. '[' → logprob: -4.800174713134766
    5. 'def' → logprob: -5.800174713134766
    6. '(
' → logprob: -6.425174713134766
    7. ',' → logprob: -6.425174713134766
    8. ')' → logprob: -6.550174713134766
    9. '\' → logprob: -7.175174713134766
    10. '
' → logprob: -7.800174713134766

Token 16: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0037360643036663532
    2. ' process' → logprob: -6.6287360191345215
    3. ' parser' → logprob: -7.1287360191345215
    4. ' main' → logprob: -7.8787360191345215
    5. ' calculate' → logprob: -8.12873649597168
    6. '_' → logprob: -8.37873649597168
    7. ' compute' → logprob: -9.12873649597168
    8. ' add' → logprob: -9.62873649597168
    9. ' _' → logprob: -9.62873649597168
    10. '_parse' → logprob: -9.62873649597168

Token 17: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.256134957075119
    2. '_n' → logprob: -1.5061349868774414
    3. '_s' → logprob: -6.381134986877441
    4. '_i' → logprob: -7.381134986877441
    5. '_a' → logprob: -7.506134986877441
    6. '_space' → logprob: -8.256134986877441
    7. '_string' → logprob: -9.006134986877441
    8. '_o' → logprob: -9.381134986877441
    9. '_x' → logprob: -9.506134986877441
    10. '__' → logprob: -9.506134986877441

Token 18: '(arg' (ID: 19030)
  Prédit: '(arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arg' → logprob: -0.3579440712928772
    2. '(' → logprob: -1.8579440116882324
    3. 'rg' → logprob: -2.4829440116882324
    4. '_' → logprob: -4.607944011688232
    5. '(r' → logprob: -4.857944011688232
    6. '([]' → logprob: -5.482944011688232
    7. '[' → logprob: -5.607944011688232
    8. '[]' → logprob: -5.982944011688232
    9. '(args' → logprob: -5.982944011688232
    10. 'rray' → logprob: -6.107944011688232

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008214538916945457
    2. ')' → logprob: -4.883214473724365
    3. '):
' → logprob: -7.758214473724365
    4. '[' → logprob: -10.008214950561523
    5. '[]):' → logprob: -10.508214950561523
    6. '   ' → logprob: -10.883214950561523
    7. ' ):' → logprob: -11.133214950561523
    8. ''):' → logprob: -11.258214950561523
    9. ',' → logprob: -11.508214950561523
    10. '):
' → logprob: -11.758214950561523

Token 20: '   ' (ID: 271)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5553126335144043
    2. '[arg' → logprob: -1.5553126335144043
    3. 'return' → logprob: -1.8053126335144043
    4. ' arg' → logprob: -2.1803126335144043
    5. 'int' → logprob: -2.3053126335144043
    6. ' return' → logprob: -2.5553126335144043
    7. 'arg' → logprob: -2.9303126335144043
    8. '   ' → logprob: -4.305312633514404
    9. '[' → logprob: -4.430312633514404
    10. ' int' → logprob: -4.680312633514404

Token 21: ' return' (ID: 622)
  Prédit: '[arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arg' → logprob: -0.8572369813919067
    2. 'return' (adapté à ' return') → logprob: -1.6072369813919067
    3. '[int' → logprob: -2.357236862182617
    4. '[' → logprob: -2.607236862182617
    5. 'arg' → logprob: -2.607236862182617
    6. 'default' → logprob: -3.232236862182617
    7. 'int' → logprob: -3.607236862182617
    8. ' arg' → logprob: -3.857236862182617
    9. ' return' → logprob: -3.982236862182617
    10. ' [' → logprob: -4.607236862182617

Token 22: ' list' (ID: 1562)
  Prédit: '[arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arg' → logprob: -0.6623263359069824
    2. ' arg' → logprob: -1.5373263359069824
    3. '[int' → logprob: -2.4123263359069824
    4. 'arg' → logprob: -2.4123263359069824
    5. 'int' → logprob: -4.037326335906982
    6. 'list' → logprob: -4.162326335906982
    7. ' [' → logprob: -4.287326335906982
    8. '[' → logprob: -4.412326335906982
    9. ' list' → logprob: -4.537326335906982
    10. 'float' → logprob: -5.412326335906982

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20634770393371582
    2. '(arg' → logprob: -1.7063477039337158
    3. '(eval' → logprob: -6.081347465515137
    4. '(map' → logprob: -7.206347465515137
    5. '(parse' → logprob: -7.331347465515137
    6. '(range' → logprob: -7.831347465515137
    7. '(int' → logprob: -7.831347465515137
    8. '((' → logprob: -9.706347465515137
    9. '(argument' → logprob: -9.706347465515137
    10. '('' → logprob: -10.081347465515137

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.019759349524974823
    2. '(str' → logprob: -4.519759178161621
    3. '(' → logprob: -4.894759178161621
    4. '(parse' → logprob: -7.769759178161621
    5. ')' → logprob: -8.394759178161621
    6. '(lambda' → logprob: -8.519759178161621
    7. '<|end|>' → logprob: -9.269759178161621
    8. 'int' → logprob: -9.769759178161621
    9. '<int' → logprob: -9.769759178161621
    10. '(eval' → logprob: -10.144759178161621

Token 25: ',' (ID: 11)
  Prédit: ',arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',arg' → logprob: -0.6652683615684509
    2. ',' → logprob: -1.0402684211730957
    3. '(arg' → logprob: -2.0402684211730957
    4. ')arg' → logprob: -6.665268421173096
    5. '(' → logprob: -7.415268421173096
    6. ',(' → logprob: -8.540267944335938
    7. ')(' → logprob: -9.415267944335938
    8. ')' → logprob: -9.415267944335938
    9. ',args' → logprob: -10.415267944335938
    10. ' ,' → logprob: -10.415267944335938

Token 26: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.10904889553785324
    2. ' arg' → logprob: -2.359048843383789
    3. ')arg' → logprob: -5.609048843383789
    4. ',arg' → logprob: -6.234048843383789
    5. '	arg' → logprob: -6.359048843383789
    6. '(arg' → logprob: -6.859048843383789
    7. '[arg' → logprob: -8.109048843383789
    8. 'argin' → logprob: -10.734048843383789
    9. 'argon' → logprob: -10.984048843383789
    10. 'argi' → logprob: -11.109048843383789

Token 27: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.29553234577178955
    2. '.' → logprob: -1.7955323457717896
    3. '.strip' → logprob: -2.4205322265625
    4. ' .' → logprob: -7.2955322265625
    5. 'split' → logprob: -9.1705322265625
    6. '   ' → logprob: -9.7955322265625
    7. ')' → logprob: -10.6705322265625
    8. '().' → logprob: -11.1705322265625
    9. '.rstrip' → logprob: -11.4205322265625
    10. ').' → logprob: -11.4205322265625

Token 28: '()))

' (ID: 125972)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0038769119419157505
    2. '())' → logprob: -6.003876686096191
    3. '()))' → logprob: -7.378876686096191
    4. '(','' → logprob: -7.503876686096191
    5. '()' → logprob: -8.878876686096191
    6. '(' → logprob: -10.503876686096191
    7. '("("' → logprob: -11.128876686096191
    8. ')' → logprob: -11.753876686096191
    9. '(',' → logprob: -11.753876686096191
    10. '('='' → logprob: -11.753876686096191

Token 29: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4041111171245575
    2. 'd' → logprob: -1.2791111469268799
    3. '
' → logprob: -4.029110908508301
    4. 'n' → logprob: -4.154110908508301
    5. '

' → logprob: -4.904110908508301
    6. '\' → logprob: -5.029110908508301
    7. '\n' → logprob: -5.529110908508301
    8. '```' → logprob: -6.279110908508301
    9. 'r' → logprob: -8.7791109085083
    10. '#' → logprob: -9.0291109085083

Token 30: ' initialize' (ID: 18400)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0755431205034256
    2. 'parse' → logprob: -3.575543165206909
    3. '_B' → logprob: -4.07554292678833
    4. ' main' → logprob: -4.20054292678833
    5. '_' → logprob: -5.20054292678833
    6. ' solve' → logprob: -6.32554292678833
    7. '_main' → logprob: -6.45054292678833
    8. '_parse' → logprob: -7.20054292678833
    9. '_A' → logprob: -7.57554292678833
    10. '_n' → logprob: -8.200543403625488

Token 31: '_ret' (ID: 56051)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20377783477306366
    2. '(' → logprob: -2.32877779006958
    3. '_data' → logprob: -4.20377779006958
    4. '_states' → logprob: -4.57877779006958
    5. '_variables' → logprob: -4.57877779006958
    6. '_parameters' → logprob: -4.70377779006958
    7. '_(' → logprob: -5.20377779006958
    8. '_state' → logprob: -5.32877779006958
    9. '_A' → logprob: -5.32877779006958
    10. '_params' → logprob: -5.95377779006958

Token 32: '():
' (ID: 8595)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.21594630181789398
    2. 'val' → logprob: -2.3409461975097656
    3. '()' → logprob: -2.8409461975097656
    4. '():' → logprob: -4.215946197509766
    5. '_val' → logprob: -4.465946197509766
    6. '(' → logprob: -4.715946197509766
    7. 'u' → logprob: -7.090946197509766
    8. 'ur' → logprob: -7.340946197509766
    9. '_' → logprob: -7.840946197509766
    10. 'urning' → logprob: -7.840946197509766

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00136499700602144
    2. 'return' → logprob: -8.001364707946777
    3. 'default' → logprob: -8.126364707946777
    4. ' defaultdict' → logprob: -8.376364707946777
    5. '    
' → logprob: -8.626364707946777
    6. '{' → logprob: -9.626364707946777
    7. '```' → logprob: -9.751364707946777
    8. ' return' → logprob: -10.251364707946777
    9. '[' → logprob: -10.751364707946777
    10. 'ret' → logprob: -10.876364707946777

Token 34: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30750611424446106
    2. '   ' → logprob: -1.9325060844421387
    3. ' return' → logprob: -2.3075060844421387
    4. 'default' → logprob: -4.307506084442139
    5. ' defaultdict' → logprob: -5.432506084442139
    6. 'ret' → logprob: -6.557506084442139
    7. ' ' → logprob: -7.557506084442139
    8. '{return' → logprob: -8.932506561279297
    9. '	return' → logprob: -9.432506561279297
    10. '{}' → logprob: -9.557506561279297

Token 35: ' ' (ID: 220)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.00031389365904033184
    2. '[]' → logprob: -9.125313758850098
    3. '{}' → logprob: -9.500313758850098
    4. '[' → logprob: -10.500313758850098
    5. '   ' → logprob: -10.500313758850098
    6. ' defaultdict' → logprob: -10.625313758850098
    7. ''default' → logprob: -11.375313758850098
    8. '(default' → logprob: -11.875313758850098
    9. '{' → logprob: -11.875313758850098
    10. '"default' → logprob: -11.875313758850098

Token 36: '0' (ID: 15)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0016837513539940119
    2. '[]' → logprob: -7.126683712005615
    3. '{}' → logprob: -7.251683712005615
    4. ' defaultdict' → logprob: -10.126684188842773
    5. '{' → logprob: -10.376684188842773
    6. '   ' → logprob: -11.001684188842773
    7. '"default' → logprob: -11.251684188842773
    8. ''default' → logprob: -11.501684188842773
    9. '[' → logprob: -11.626684188842773
    10. '{'' → logprob: -11.751684188842773

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4508194029331207
    2. '<|end|>' → logprob: -1.8258193731307983
    3. '\n' → logprob: -2.575819492340088
    4. 'def' → logprob: -2.950819492340088
    5. '\' → logprob: -3.700819492340088
    6. 'n' → logprob: -4.700819492340088
    7. 'newline' → logprob: -5.075819492340088
    8. '

' → logprob: -5.075819492340088
    9. '*' → logprob: -5.325819492340088
    10. '```' → logprob: -5.450819492340088

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06726285815238953
    2. 'n' → logprob: -3.317262887954712
    3. '
' → logprob: -4.692262649536133
    4. '

' → logprob: -5.317262649536133
    5. '\' → logprob: -5.567262649536133
    6. '#' → logprob: -5.692262649536133
    7. 'ret' → logprob: -6.067262649536133
    8. '\n' → logprob: -6.442262649536133
    9. 'd' → logprob: -6.567262649536133
    10. 'r' → logprob: -7.442262649536133

Token 39: ' initialize' (ID: 18400)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.03322616592049599
    2. ' initialize' → logprob: -4.658226013183594
    3. ' main' → logprob: -4.908226013183594
    4. ' solve' → logprob: -5.533226013183594
    5. '_' → logprob: -5.908226013183594
    6. 'parse' → logprob: -6.533226013183594
    7. ' process' → logprob: -6.533226013183594
    8. '_parse' → logprob: -6.533226013183594
    9. ' compute' → logprob: -6.658226013183594
    10. ' calculate' → logprob: -6.908226013183594

Token 40: '_X' (ID: 16245)
  Prédit: '_ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ret' → logprob: -0.14747130870819092
    2. '_' → logprob: -2.1474714279174805
    3. '_r' → logprob: -5.8974714279174805
    4. '_val' → logprob: -6.1474714279174805
    5. '_array' → logprob: -6.3974714279174805
    6. '_counter' → logprob: -6.8974714279174805
    7. '_A' → logprob: -7.0224714279174805
    8. '_f' → logprob: -7.2724714279174805
    9. '_a' → logprob: -7.2724714279174805
    10. '_list' → logprob: -7.6474714279174805

Token 41: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005660186288878322
    2. '():
' → logprob: -8.375566482543945
    3. '(' → logprob: -8.625566482543945
    4. '()' → logprob: -9.875566482543945
    5. ' ():' → logprob: -10.375566482543945
    6. '(arg' → logprob: -10.625566482543945
    7. '_' → logprob: -10.875566482543945
    8. '_list' → logprob: -12.250566482543945
    9. 'def' → logprob: -13.000566482543945
    10. '():

' → logprob: -13.250566482543945

Token 42: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23553673923015594
    2. ' []' → logprob: -1.8605366945266724
    3. ' defaultdict' → logprob: -3.985536813735962
    4. 'default' → logprob: -4.110536575317383
    5. '{}' → logprob: -4.985536575317383
    6. '   ' → logprob: -5.235536575317383
    7. '[' → logprob: -6.235536575317383
    8. ' [' → logprob: -6.735536575317383
    9. 'return' → logprob: -7.235536575317383
    10. ' ' → logprob: -7.610536575317383

Token 43: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023649204522371292
    2. 'default' → logprob: -4.023649215698242
    3. '[' → logprob: -6.023649215698242
    4. '{}' → logprob: -6.273649215698242
    5. ' []' → logprob: -8.273649215698242
    6. ' defaultdict' → logprob: -8.273649215698242
    7. '[]
' → logprob: -8.398649215698242
    8. '0' → logprob: -9.148649215698242
    9. 'def' → logprob: -9.273649215698242
    10. 'lambda' → logprob: -9.523649215698242

Token 44: ' defaultdict' (ID: 107098)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7085694074630737
    2. ' []' → logprob: -0.7085694074630737
    3. ' defaultdict' → logprob: -5.083569526672363
    4. '{}' → logprob: -5.708569526672363
    5. ' {}' → logprob: -5.708569526672363
    6. ' ' → logprob: -7.083569526672363
    7. 'default' → logprob: -7.708569526672363
    8. '0' → logprob: -7.958569526672363
    9. ' [' → logprob: -8.833569526672363
    10. 'set' → logprob: -8.833569526672363

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00997812207788229
    2. '(list' → logprob: -5.259978294372559
    3. '(lambda' → logprob: -6.009978294372559
    4. '(' → logprob: -6.134978294372559
    5. '(dict' → logprob: -9.509978294372559
    6. '<int' → logprob: -11.384978294372559
    7. 'int' → logprob: -11.759978294372559
    8. '(<' → logprob: -11.884978294372559
    9. '(
' → logprob: -12.384978294372559
    10. '()(' → logprob: -13.259978294372559

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. '())' → logprob: -11.625019073486328
    3. '))' → logprob: -11.750019073486328
    4. '()' → logprob: -13.875019073486328
    5. ' )' → logprob: -14.750019073486328
    6. ')
' → logprob: -15.625019073486328
    7. ')))' → logprob: -16.625019073486328
    8. ')`' → logprob: -17.000019073486328
    9. ')}}' → logprob: -17.250019073486328
    10. ')}' → logprob: -17.375019073486328

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20888569951057434
    2. 'n' → logprob: -2.458885669708252
    3. '
' → logprob: -2.708885669708252
    4. '\n' → logprob: -4.583885669708252
    5. '<|end|>' → logprob: -5.583885669708252
    6. '```' → logprob: -5.583885669708252
    7. 'class' → logprob: -5.708885669708252
    8. '

' → logprob: -5.708885669708252
    9. '\' → logprob: -5.958885669708252
    10. '#' → logprob: -6.458885669708252

Token 48: ' update' (ID: 4027)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.33199381828308105
    2. ' main' → logprob: -1.706993818283081
    3. ' initialize' → logprob: -2.956993818283081
    4. 'parse' → logprob: -4.45699405670166
    5. '_' → logprob: -5.45699405670166
    6. ' run' → logprob: -5.45699405670166
    7. 'initialize' → logprob: -5.58199405670166
    8. ' solve' → logprob: -5.95699405670166
    9. ' ' → logprob: -5.95699405670166
    10. 'main' → logprob: -6.08199405670166

Token 49: '_X' (ID: 16245)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1709945648908615
    2. '_ret' → logprob: -2.795994520187378
    3. '_X' → logprob: -2.920994520187378
    4. '_R' → logprob: -3.920994520187378
    5. '_(' → logprob: -4.045994758605957
    6. '_RET' → logprob: -6.545994758605957
    7. '(' → logprob: -6.920994758605957
    8. '_A' → logprob: -7.545994758605957
    9. '(_' → logprob: -7.670994758605957
    10. '```' → logprob: -8.670994758605957

Token 50: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.1837095469236374
    2. '(' → logprob: -1.8087095022201538
    3. '(x' → logprob: -6.183709621429443
    4. '(key' → logprob: -6.683709621429443
    5. ' (' → logprob: -8.433709144592285
    6. '(line' → logprob: -9.683709144592285
    7. '(A' → logprob: -10.058709144592285
    8. '(a' → logprob: -10.558709144592285
    9. '(value' → logprob: -10.808709144592285
    10. '((' → logprob: -10.933709144592285

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010795372509164736
    2. ' ,' → logprob: -9.625107765197754
    3. ',x' → logprob: -12.000107765197754
    4. '[' → logprob: -12.125107765197754
    5. ',key' → logprob: -12.375107765197754
    6. ')' → logprob: -12.500107765197754
    7. ',n' → logprob: -13.250107765197754
    8. ',a' → logprob: -13.250107765197754
    9. ',A' → logprob: -13.250107765197754
    10. ',arg' → logprob: -13.375107765197754

Token 52: ' a' (ID: 261)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -1.3353787660598755
    2. ' A' → logprob: -1.9603787660598755
    3. ' a' → logprob: -2.335378646850586
    4. 'a' → logprob: -2.335378646850586
    5. 'A' → logprob: -2.710378646850586
    6. 'key' → logprob: -3.085378646850586
    7. 'i' → logprob: -3.085378646850586
    8. 'n' → logprob: -3.210378646850586
    9. ' i' → logprob: -3.210378646850586
    10. ' n' → logprob: -3.210378646850586

Token 53: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021327324211597443
    2. ',' → logprob: -4.521327495574951
    3. '[i' → logprob: -5.521327495574951
    4. '):
' → logprob: -5.771327495574951
    5. ')' → logprob: -6.771327495574951
    6. '[' → logprob: -7.521327495574951
    7. '[]):' → logprob: -8.021327018737793
    8. 'rray' → logprob: -8.646327018737793
    9. 's' → logprob: -8.896327018737793
    10. '_list' → logprob: -9.021327018737793

Token 54: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3098283112049103
    2. ' b' → logprob: -1.684828281402588
    3. 'n' → logprob: -3.934828281402588
    4. 'v' → logprob: -4.059828281402588
    5. ' n' → logprob: -4.559828281402588
    6. ' v' → logprob: -5.309828281402588
    7. 'value' → logprob: -5.309828281402588
    8. ')' → logprob: -5.934828281402588
    9. 'val' → logprob: -6.059828281402588
    10. ' ' → logprob: -6.559828281402588

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18841968476772308
    2. ',' → logprob: -2.1884195804595947
    3. 'x' → logprob: -3.3134195804595947
    4. 'nd' → logprob: -4.688419818878174
    5. ')' → logprob: -5.063419818878174
    6. '):
' → logprob: -5.563419818878174
    7. 'dx' → logprob: -6.438419818878174
    8. 'n' → logprob: -7.188419818878174
    9. 'ex' → logprob: -7.438419818878174
    10. 'd' → logprob: -8.688419342041016

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10703114420175552
    2. 'X' → logprob: -2.3570311069488525
    3. ' X' → logprob: -5.107031345367432
    4. ')' → logprob: -7.982031345367432
    5. '):
' → logprob: -9.357030868530273
    6. '  ' → logprob: -9.857030868530273
    7. ':' → logprob: -9.982030868530273
    8. ' ' → logprob: -10.107030868530273
    9. '):' → logprob: -10.232030868530273
    10. '	X' → logprob: -10.232030868530273

Token 57: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.23151187598705292
    2. ' X' → logprob: -1.6065118312835693
    3. '   ' → logprob: -5.106512069702148
    4. ' ' → logprob: -11.856512069702148
    5. '  ' → logprob: -12.731512069702148
    6. '	X' → logprob: -12.731512069702148
    7. '
' → logprob: -13.106512069702148
    8. ' return' → logprob: -13.231512069702148
    9. '    
' → logprob: -13.356512069702148
    10. '```' → logprob: -14.106512069702148

Token 58: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.500020980834961
    3. 'a' → logprob: -11.625020980834961
    4. '[i' → logprob: -14.375020980834961
    5. '[A' → logprob: -14.375020980834961
    6. '```' → logprob: -15.250020980834961
    7. ' a' → logprob: -15.750020980834961
    8. ' [' → logprob: -16.12502098083496
    9. '(a' → logprob: -16.75002098083496
    10. '   ' → logprob: -16.87502098083496

Token 59: '+i' (ID: 49691)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020449509844183922
    2. ']+=' → logprob: -4.020449638366699
    3. '][' → logprob: -7.270449638366699
    4. '[i' → logprob: -7.770449638366699
    5. ',' → logprob: -7.895449638366699
    6. ']=' → logprob: -8.2704496383667
    7. '],' → logprob: -8.8954496383667
    8. ']+' → logprob: -9.5204496383667
    9. ' ]' → logprob: -9.7704496383667
    10. '[' → logprob: -9.7704496383667

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012533903121948242
    2. ']+=' → logprob: -4.887534141540527
    3. ' ]' → logprob: -5.387534141540527
    4. ')]' → logprob: -8.887534141540527
    5. '1' → logprob: -10.262534141540527
    6. '']' → logprob: -10.387534141540527
    7. '`]' → logprob: -10.637534141540527
    8. ' +=' → logprob: -10.637534141540527
    9. ')' → logprob: -11.012534141540527
    10. '"]' → logprob: -11.262534141540527

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20276014506816864
    2. ' +=' → logprob: -1.702760100364685
    3. '=' → logprob: -6.827760219573975
    4. '+' → logprob: -8.702759742736816
    5. ']+=' → logprob: -9.702759742736816
    6. ' ' → logprob: -11.077759742736816
    7. ' =' → logprob: -11.452759742736816
    8. ' +' → logprob: -13.202759742736816
    9. '```' → logprob: -13.327759742736816
    10. '<|end|>' → logprob: -13.327759742736816

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008191577508114278
    2. ' ' → logprob: -7.125819206237793
    3. '   ' → logprob: -11.250819206237793
    4. '2' → logprob: -14.750819206237793
    5. 'a' → logprob: -14.875819206237793
    6. '  ' → logprob: -15.000819206237793
    7. '0' → logprob: -15.625819206237793
    8. 'X' → logprob: -16.375818252563477
    9. 'i' → logprob: -16.750818252563477
    10. 'int' → logprob: -16.813318252563477

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001305950863752514
    2. ' ' → logprob: -9.000130653381348
    3. '   ' → logprob: -12.250130653381348
    4. '2' → logprob: -14.500130653381348
    5. 'X' → logprob: -14.625130653381348
    6. 'a' → logprob: -14.750130653381348
    7. '0' → logprob: -15.125130653381348
    8. 'ret' → logprob: -15.750130653381348
    9. '  ' → logprob: -15.875130653381348
    10. '-' → logprob: -16.62512969970703

Token 64: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3250238299369812
    2. '<|end|>' → logprob: -1.325023889541626
    3. '\n' → logprob: -4.825023651123047
    4. '<|end|>' → logprob: -6.325023651123047
    5. '\' → logprob: -7.325023651123047
    6. 'newline' → logprob: -8.700023651123047
    7. 'return' → logprob: -9.075023651123047
    8. '
' → logprob: -9.075023651123047
    9. '```' → logprob: -9.075023651123047
    10. ' 
' → logprob: -9.200023651123047

Token 65: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5514010787010193
    2. '<|end|>' → logprob: -1.551401138305664
    3. 'def' → logprob: -1.926401138305664
    4. '\' → logprob: -3.426401138305664
    5. '\n' → logprob: -4.051401138305664
    6. ')' → logprob: -5.801401138305664
    7. '```' → logprob: -6.176401138305664
    8. '#' → logprob: -6.301401138305664
    9. '<|end|>' → logprob: -6.301401138305664
    10. 'n' → logprob: -6.551401138305664

Token 66: ' compute' (ID: 23864)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.48641809821128845
    2. ' process' → logprob: -1.7364181280136108
    3. ' main' → logprob: -2.7364180088043213
    4. ' parse' → logprob: -2.7364180088043213
    5. ' solve' → logprob: -3.7364180088043213
    6. ' compute' → logprob: -4.1114182472229
    7. ' calculate' → logprob: -4.8614182472229
    8. '_update' → logprob: -5.3614182472229
    9. ' count' → logprob: -5.6114182472229
    10. 'update' → logprob: -5.7364182472229

Token 67: '_key' (ID: 6724)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.9882640242576599
    2. '_ret' → logprob: -1.3632640838623047
    3. '_sum' → logprob: -1.6132640838623047
    4. '_' → logprob: -2.7382640838623047
    5. '_S' → logprob: -3.6132640838623047
    6. '_R' → logprob: -4.488264083862305
    7. '_value' → logprob: -4.613264083862305
    8. '_final' → logprob: -4.988264083862305
    9. '_X' → logprob: -5.113264083862305
    10. '_total' → logprob: -5.238264083862305

Token 68: '(i' (ID: 3649)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.22236448526382446
    2. '(a' → logprob: -1.8473644256591797
    3. '(A' → logprob: -4.09736442565918
    4. '(n' → logprob: -4.22236442565918
    5. '(' → logprob: -5.84736442565918
    6. '(key' → logprob: -6.34736442565918
    7. '(x' → logprob: -6.84736442565918
    8. '(i' → logprob: -6.97236442565918
    9. '(s' → logprob: -6.97236442565918
    10. '(k' → logprob: -7.22236442565918

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10361957550048828
    2. '):' → logprob: -2.3536195755004883
    3. ' ,' → logprob: -6.103619575500488
    4. '):
' → logprob: -8.103619575500488
    5. ')' → logprob: -8.228619575500488
    6. ' ):' → logprob: -8.603619575500488
    7. ',a' → logprob: -9.728619575500488
    8. '   ' → logprob: -9.853619575500488
    9. ' ' → logprob: -10.103619575500488
    10. '  ' → logprob: -10.228619575500488

Token 70: ' a' (ID: 261)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8387067317962646
    2. 'a' → logprob: -0.9637067317962646
    3. 'n' → logprob: -1.8387067317962646
    4. 'N' → logprob: -5.213706970214844
    5. ' j' → logprob: -5.213706970214844
    6. ' a' → logprob: -5.838706970214844
    7. ' n' → logprob: -5.963706970214844
    8. 'k' → logprob: -6.088706970214844
    9. 'x' → logprob: -6.588706970214844
    10. ')' → logprob: -6.713706970214844

Token 71: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49486038088798523
    2. '):' → logprob: -0.9948604106903076
    3. '+' → logprob: -4.7448601722717285
    4. '):
' → logprob: -5.6198601722717285
    5. '+i' → logprob: -5.7448601722717285
    6. ')' → logprob: -5.9948601722717285
    7. ' ,' → logprob: -7.3698601722717285
    8. '+,' → logprob: -8.119860649108887
    9. ',i' → logprob: -8.494860649108887
    10. '-' → logprob: -8.744860649108887

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4395609498023987
    2. ' return' → logprob: -1.189560890197754
    3. 'return' → logprob: -3.689560890197754
    4. ' i' → logprob: -4.439560890197754
    5. ' a' → logprob: -4.689560890197754
    6. 'a' → logprob: -6.064560890197754
    7. ' f' → logprob: -6.564560890197754
    8. 'i' → logprob: -7.189560890197754
    9. ' str' → logprob: -7.439560890197754
    10. 'f' → logprob: -9.189560890197754

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0438225269317627
    2. 'return' (adapté à ' return') → logprob: -1.5438225269317627
    3. 'a' → logprob: -1.6688225269317627
    4. '   ' → logprob: -2.5438225269317627
    5. ' a' → logprob: -2.9188225269317627
    6. ' i' → logprob: -3.1688225269317627
    7. 'i' → logprob: -3.1688225269317627
    8. ' str' → logprob: -4.168822288513184
    9. 'str' → logprob: -5.543822288513184
    10. ' f' → logprob: -5.918822288513184

Token 74: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46476462483406067
    2. ' a' → logprob: -1.8397645950317383
    3. 'i' → logprob: -1.9647645950317383
    4. ' i' → logprob: -2.7147645950317383
    5. ' (' → logprob: -5.964764595031738
    6. '(a' → logprob: -7.089764595031738
    7. '   ' → logprob: -7.214764595031738
    8. ' str' → logprob: -7.589764595031738
    9. 'f' → logprob: -7.839764595031738
    10. '(i' → logprob: -7.839764595031738

Token 75: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0400753952562809
    2. '*' → logprob: -3.9150753021240234
    3. ',' → logprob: -5.040075302124023
    4. '[' → logprob: -5.415075302124023
    5. '.' → logprob: -6.415075302124023
    6. '%' → logprob: -6.540075302124023
    7. '-' → logprob: -6.915075302124023
    8. 'def' → logprob: -7.290075302124023
    9. '<|end|>' → logprob: -7.415075302124023
    10. ')' → logprob: -7.415075302124023

Token 76: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. '	a' → logprob: -18.000553131103516
    4. ' ' → logprob: -18.125553131103516
    5. ''a' → logprob: -18.125553131103516
    6. '<|end|>' → logprob: -18.250553131103516
    7. '>a' → logprob: -18.500553131103516
    8. '#a' → logprob: -19.000553131103516
    9. '1' → logprob: -19.125553131103516
    10. '_a' → logprob: -19.375553131103516

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009174622595310211
    2. '<|end|>' → logprob: -5.009174823760986
    3. '
' → logprob: -7.259174823760986
    4. '\' → logprob: -7.509174823760986
    5. '\n' → logprob: -7.509174823760986
    6. ' def' → logprob: -8.384174346923828
    7. '<|end|>' → logprob: -8.384174346923828
    8. '#' → logprob: -9.634174346923828
    9. '

' → logprob: -10.634174346923828
    10. '```' → logprob: -11.009174346923828

Token 79: ' is' (ID: 382)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -1.0465619564056396
    2. ' main' → logprob: -1.6715619564056396
    3. ' process' → logprob: -1.9215619564056396
    4. ' parse' → logprob: -2.1715619564056396
    5. ' update' → logprob: -2.2965619564056396
    6. ' solve' → logprob: -3.9215619564056396
    7. ' calculate' → logprob: -4.046562194824219
    8. ' find' → logprob: -4.296562194824219
    9. ' initialize' → logprob: -4.921562194824219
    10. ' def' → logprob: -4.921562194824219

Token 80: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.07252878695726395
    2. '_' → logprob: -3.822528839111328
    3. '_key' → logprob: -3.947528839111328
    4. '_equal' → logprob: -5.572528839111328
    5. '_unique' → logprob: -5.947528839111328
    6. '_empty' → logprob: -6.197528839111328
    7. '_possible' → logprob: -6.322528839111328
    8. '_s' → logprob: -6.572528839111328
    9. '_prime' → logprob: -6.697528839111328
    10. '_safe' → logprob: -6.822528839111328

Token 81: '_key' (ID: 6724)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3603065013885498
    2. '_key' → logprob: -1.8603065013885498
    3. '_' → logprob: -2.11030650138855
    4. '_(' → logprob: -4.610306739807129
    5. '(i' → logprob: -4.735306739807129
    6. '(a' → logprob: -7.110306739807129
    7. '_input' → logprob: -7.485306739807129
    8. '_range' → logprob: -7.610306739807129
    9. '(key' → logprob: -8.235306739807129
    10. '_code' → logprob: -8.235306739807129

Token 82: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0032018350902944803
    2. '(' → logprob: -5.753201961517334
    3. ' (' → logprob: -11.253201484680176
    4. '(k' → logprob: -12.253201484680176
    5. '(Key' → logprob: -13.128201484680176
    6. ' key' → logprob: -13.753201484680176
    7. '(i' → logprob: -14.128201484680176
    8. '_key' → logprob: -14.503201484680176
    9. ' ' → logprob: -15.128201484680176
    10. '(KEY' → logprob: -15.128201484680176

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04397103935480118
    2. ',' → logprob: -3.418971061706543
    3. ')' → logprob: -4.918971061706543
    4. ' ):' → logprob: -6.043971061706543
    5. '):
' → logprob: -8.043971061706543
    6. ' )' → logprob: -9.418971061706543
    7. ' ,' → logprob: -10.168971061706543
    8. '   ' → logprob: -10.543971061706543
    9. ':' → logprob: -10.793971061706543
    10. ' >=' → logprob: -11.043971061706543

Token 84: '   ' (ID: 271)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -1.002496361732483
    2. '   ' → logprob: -1.127496361732483
    3. ' return' → logprob: -1.377496361732483
    4. ' True' → logprob: -3.0024962425231934
    5. 'return' → logprob: -5.752496242523193
    6. 'key' → logprob: -6.127496242523193
    7. 'True' → logprob: -6.377496242523193
    8. '(key' → logprob: -8.877496719360352
    9. ' ' → logprob: -10.877496719360352
    10. '0' → logprob: -11.002496719360352

Token 85: ' return' (ID: 622)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.524080753326416
    2. 'key' → logprob: -1.524080753326416
    3. ' return' → logprob: -2.399080753326416
    4. 'return' (adapté à ' return') → logprob: -2.399080753326416
    5. '0' → logprob: -5.774080753326416
    6. 'True' → logprob: -5.899080753326416
    7. ' True' → logprob: -6.774080753326416
    8. '   ' → logprob: -7.149080753326416
    9. 'abs' → logprob: -8.274080276489258
    10. ' abs' → logprob: -8.899080276489258

Token 86: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.20938272774219513
    2. 'key' → logprob: -1.7093827724456787
    3. 'True' → logprob: -5.8343825340271
    4. ' True' → logprob: -6.2093825340271
    5. '0' → logprob: -6.3343825340271
    6. ' isinstance' → logprob: -7.5843825340271
    7. ' ' → logprob: -8.209383010864258
    8. ' abs' → logprob: -8.584383010864258
    9. 'abs' → logprob: -8.959383010864258
    10. '-' → logprob: -10.709383010864258

Token 87: ' >=' (ID: 5064)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4679211974143982
    2. '!=' → logprob: -1.967921257019043
    3. ' >' → logprob: -1.967921257019043
    4. '>' → logprob: -2.592921257019043
    5. ' >=' → logprob: -4.717921257019043
    6. '<|end|>' → logprob: -5.842921257019043
    7. '>=' → logprob: -6.092921257019043
    8. ' ' → logprob: -6.342921257019043
    9. ' is' → logprob: -6.842921257019043
    10. ' ==' → logprob: -6.842921257019043

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010401944164186716
    2. ' ' → logprob: -7.001039981842041
    3. '1' → logprob: -9.5010404586792
    4. '-' → logprob: -10.2510404586792
    5. '   ' → logprob: -11.7510404586792
    6. ' -' → logprob: -12.3760404586792
    7. '2' → logprob: -12.6885404586792
    8. '3' → logprob: -14.3760404586792
    9. '  ' → logprob: -14.9385404586792
    10. '4' → logprob: -15.0010404586792

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000510856625624001
    2. '1' → logprob: -8.250511169433594
    3. ' ' → logprob: -8.625511169433594
    4. '-' → logprob: -9.750511169433594
    5. '2' → logprob: -12.375511169433594
    6. ' -' → logprob: -12.938011169433594
    7. '3' → logprob: -14.250511169433594
    8. '   ' → logprob: -14.813011169433594
    9. '4' → logprob: -15.125511169433594
    10. '```' → logprob: -15.125511169433594

Token 90: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04414055123925209
    2. '<|end|>' → logprob: -3.544140577316284
    3. '
' → logprob: -4.669140338897705
    4. '<|end|>' → logprob: -6.294140338897705
    5. '\' → logprob: -7.419140338897705
    6. '```' → logprob: -7.419140338897705
    7. '

' → logprob: -7.544140338897705
    8. '\n' → logprob: -7.544140338897705
    9. '#' → logprob: -8.044140815734863
    10. 'n' → logprob: -8.544140815734863

Token 92: ' update' (ID: 4027)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3252098560333252
    2. ' main' → logprob: -1.4502098560333252
    3. 'process' → logprob: -1.7002098560333252
    4. ' process' → logprob: -2.700209856033325
    5. 'update' → logprob: -3.575209856033325
    6. 'parse' → logprob: -3.575209856033325
    7. 'count' → logprob: -3.700209856033325
    8. 'solve' → logprob: -3.700209856033325
    9. 'compute' → logprob: -3.950209856033325
    10. 'calculate' → logprob: -4.075209617614746

Token 93: '_ret' (ID: 56051)
  Prédit: '_X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.5791085362434387
    2. '_ret' → logprob: -0.9541085362434387
    3. 'X' → logprob: -3.954108476638794
    4. '_A' → logprob: -4.079108715057373
    5. 'ret' → logprob: -5.204108715057373
    6. '_result' → logprob: -5.954108715057373
    7. '(ret' → logprob: -6.329108715057373
    8. '_key' → logprob: -6.829108715057373
    9. '_results' → logprob: -7.204108715057373
    10. '_R' → logprob: -7.204108715057373

Token 94: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.06252841651439667
    2. '(' → logprob: -2.812528371810913
    3. ' (' → logprob: -7.812528610229492
    4. '(R' → logprob: -9.062528610229492
    5. '_ret' → logprob: -11.437528610229492
    6. '(_' → logprob: -11.437528610229492
    7. '```' → logprob: -12.687528610229492
    8. '_(' → logprob: -13.062528610229492
    9. '(return' → logprob: -13.312528610229492
    10. ' ' → logprob: -13.437528610229492

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',X' → logprob: -14.625041007995605
    4. ',
' → logprob: -16.12504005432129
    5. '‌,' → logprob: -16.75004005432129
    6. '   ' → logprob: -16.75004005432129
    7. '_,' → logprob: -17.00004005432129
    8. ',int' → logprob: -17.25004005432129
    9. ',key' → logprob: -17.37504005432129
    10. ',val' → logprob: -17.75004005432129

Token 96: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.10937123000621796
    2. ' key' → logprob: -3.6093711853027344
    3. 'X' → logprob: -3.9843711853027344
    4. ' a' → logprob: -4.484371185302734
    5. ' value' → logprob: -4.484371185302734
    6. ' val' → logprob: -4.609371185302734
    7. ' ' → logprob: -5.609371185302734
    8. ')' → logprob: -5.734371185302734
    9. ' x' → logprob: -5.859371185302734
    10. ' new' → logprob: -5.984371185302734

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014966767048463225
    2. ' ,' → logprob: -9.250149726867676
    3. ',key' → logprob: -10.500149726867676
    4. '[' → logprob: -11.375149726867676
    5. '[key' → logprob: -12.500149726867676
    6. '):' → logprob: -12.875149726867676
    7. ',
' → logprob: -13.375149726867676
    8. '_,' → logprob: -13.875149726867676
    9. '   ' → logprob: -14.000149726867676
    10. 'def' → logprob: -14.375149726867676

Token 98: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5569433569908142
    2. ' key' → logprob: -1.431943416595459
    3. 'a' → logprob: -2.056943416595459
    4. 'i' → logprob: -3.306943416595459
    5. ' a' → logprob: -4.181943416595459
    6. ' i' → logprob: -5.556943416595459
    7. ')' → logprob: -6.931943416595459
    8. 'k' → logprob: -7.056943416595459
    9. ' ret' → logprob: -7.681943416595459
    10. 'ret' → logprob: -7.681943416595459

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12239804118871689
    2. ',' → logprob: -2.3723981380462646
    3. '):
' → logprob: -3.8723981380462646
    4. ' ):' → logprob: -7.3723978996276855
    5. ')' → logprob: -8.247398376464844
    6. '   ' → logprob: -9.122398376464844
    7. '):
' → logprob: -10.122398376464844
    8. ' ,' → logprob: -10.122398376464844
    9. ' ' → logprob: -11.122398376464844
    10. '):

' → logprob: -11.497398376464844

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002326055895537138
    2. 'return' → logprob: -7.502326011657715
    3. ' return' → logprob: -7.627326011657715
    4. 'ret' → logprob: -7.627326011657715
    5. '+' → logprob: -8.002326011657715
    6. ' ret' → logprob: -8.627326011657715
    7. ',' → logprob: -9.252326011657715
    8. ' if' → logprob: -9.377326011657715
    9. ' +' → logprob: -9.752326011657715
    10. 'if' → logprob: -11.002326011657715

Token 101: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.2890321612358093
    2. '   ' → logprob: -2.289032220840454
    3. 'return' → logprob: -2.664032220840454
    4. ' ret' → logprob: -2.914032220840454
    5. ' return' → logprob: -4.289031982421875
    6. ' if' → logprob: -5.664031982421875
    7. 'max' → logprob: -5.789031982421875
    8. 'if' → logprob: -5.914031982421875
    9. ' max' → logprob: -6.039031982421875
    10. '+' → logprob: -8.539031982421875

Token 102: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3852721154689789
    2. '+' → logprob: -1.8852721452713013
    3. '+=' → logprob: -2.1352720260620117
    4. ' +' → logprob: -3.0102720260620117
    5. '=' → logprob: -8.385272026062012
    6. ' =' → logprob: -8.510272026062012
    7. '[' → logprob: -12.260272026062012
    8. ' ' → logprob: -12.885272026062012
    9. '```' → logprob: -13.135272026062012
    10. ' |=' → logprob: -13.510272026062012

Token 103: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.006719282828271389
    2. ' X' → logprob: -5.00671911239624
    3. '1' → logprob: -13.381719589233398
    4. ' ' → logprob: -14.256719589233398
    5. 'sum' → logprob: -14.631719589233398
    6. 'len' → logprob: -14.631719589233398
    7. '   ' → logprob: -15.131719589233398
    8. ' sum' → logprob: -15.881719589233398
    9. 'max' → logprob: -15.881719589233398
    10. '  ' → logprob: -16.6317195892334

Token 104: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0029218492563813925
    2. '.get' → logprob: -6.127922058105469
    3. '[' → logprob: -7.252922058105469
    4. '[get' → logprob: -11.002922058105469
    5. 'get' → logprob: -12.252922058105469
    6. ' [' → logprob: -12.502922058105469
    7. ' ' → logprob: -13.627922058105469
    8. '[
' → logprob: -15.002922058105469
    9. 'key' → logprob: -15.127922058105469
    10. '   ' → logprob: -15.877922058105469

Token 105: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12786908447742462
    2. ']
' → logprob: -2.127869129180908
    3. ']

' → logprob: -7.127869129180908
    4. ' ]' → logprob: -9.75286865234375
    5. ']
' → logprob: -9.87786865234375
    6. ' ]
' → logprob: -11.37786865234375
    7. '])' → logprob: -13.00286865234375
    8. ']*' → logprob: -13.00286865234375
    9. ']+' → logprob: -13.37786865234375
    10. ')' → logprob: -13.50286865234375

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026843227446079254
    2. 'return' → logprob: -4.526843070983887
    3. '<|end|>' → logprob: -4.776843070983887
    4. ' return' → logprob: -5.151843070983887
    5. '
' → logprob: -7.151843070983887
    6. '	return' → logprob: -7.776843070983887
    7. '<|end|>' → logprob: -9.401843070983887
    8. '```' → logprob: -10.151843070983887
    9. ':return' → logprob: -10.651843070983887
    10. 'def' → logprob: -10.776843070983887

Token 107: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14747489988803864
    2. ' return' → logprob: -2.147475004196167
    3. '   ' → logprob: -3.897475004196167
    4. '	return' → logprob: -10.522475242614746
    5. ' ' → logprob: -11.272475242614746
    6. '<|end|>' → logprob: -13.147475242614746
    7. '  ' → logprob: -13.897475242614746
    8. ':return' → logprob: -14.897475242614746
    9. '
' → logprob: -15.272475242614746
    10. 'def' → logprob: -15.272475242614746

Token 108: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.1269284337759018
    2. ' ret' → logprob: -2.1269283294677734
    3. '(ret' → logprob: -15.251928329467773
    4. '	ret' → logprob: -16.501928329467773
    5. 'rets' → logprob: -16.626928329467773
    6. '_ret' → logprob: -17.001928329467773
    7. '$ret' → logprob: -17.126928329467773
    8. 'retval' → logprob: -18.501928329467773
    9. '.ret' → logprob: -18.876928329467773
    10. ' ' → logprob: -19.626928329467773

Token 109: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12355097383260727
    2. '<|end|>' → logprob: -2.2485508918762207
    3. '
' → logprob: -5.623550891876221
    4. '<|end|>' → logprob: -6.248550891876221
    5. 'n' → logprob: -6.623550891876221
    6. '```' → logprob: -6.998550891876221
    7. '\n' → logprob: -6.998550891876221
    8. ' def' → logprob: -7.623550891876221
    9. '#' → logprob: -7.748550891876221
    10. '\' → logprob: -7.998550891876221

Token 111: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.48415064811706543
    2. 'main' → logprob: -0.9841506481170654
    3. 'process' → logprob: -5.9841508865356445
    4. ' solve' → logprob: -6.1091508865356445
    5. 'solve' → logprob: -6.1091508865356445
    6. ' process' → logprob: -6.6091508865356445
    7. 'count' → logprob: -7.7341508865356445
    8. ' count' → logprob: -8.109150886535645
    9. ' parse' → logprob: -9.109150886535645
    10. 'parse' → logprob: -9.109150886535645

Token 112: '_element' (ID: 21131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24177873134613037
    2. '_' → logprob: -2.11677885055542
    3. '(n' → logprob: -3.99177885055542
    4. '_(' → logprob: -4.24177885055542
    5. '_input' → logprob: -4.36677885055542
    6. '(arg' → logprob: -4.99177885055542
    7. '_line' → logprob: -5.11677885055542
    8. '(_' → logprob: -5.86677885055542
    9. '_data' → logprob: -5.86677885055542
    10. '(data' → logprob: -5.99177885055542

Token 113: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.9106186628341675
    2. '(X' → logprob: -1.2856186628341675
    3. '(A' → logprob: -2.035618782043457
    4. '(' → logprob: -2.410618782043457
    5. '(i' → logprob: -2.785618782043457
    6. '(n' → logprob: -3.785618782043457
    7. '(arg' → logprob: -5.785618782043457
    8. '(N' → logprob: -5.785618782043457
    9. '(element' → logprob: -5.910618782043457
    10. ' (' → logprob: -6.160618782043457

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003945688367821276
    2. ' ,' → logprob: -8.125394821166992
    3. ',a' → logprob: -9.250394821166992
    4. ',
' → logprob: -14.500394821166992
    5. 'a' → logprob: -14.875394821166992
    6. '   ' → logprob: -15.000394821166992
    7. ',n' → logprob: -15.625394821166992
    8. ' a' → logprob: -15.750394821166992
    9. '‌,' → logprob: -16.250394821166992
    10. '_,' → logprob: -16.250394821166992

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3562687635421753
    2. ' a' → logprob: -1.2312687635421753
    3. 'A' → logprob: -6.356268882751465
    4. 'X' → logprob: -6.606268882751465
    5. ' X' → logprob: -6.606268882751465
    6. ' ret' → logprob: -6.856268882751465
    7. 'ret' → logprob: -7.356268882751465
    8. ' A' → logprob: -7.356268882751465
    9. '   ' → logprob: -7.731268882751465
    10. ' ' → logprob: -8.856268882751465

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006815777160227299
    2. '):' → logprob: -5.0068159103393555
    3. ' ,' → logprob: -10.006815910339355
    4. '):
' → logprob: -10.506815910339355
    5. '   ' → logprob: -10.631815910339355
    6. ')' → logprob: -14.006815910339355
    7. ',a' → logprob: -14.381815910339355
    8. ' ):' → logprob: -14.631815910339355
    9. ',
' → logprob: -15.131815910339355
    10. ',i' → logprob: -15.256815910339355

Token 117: ' X' (ID: 2127)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.010306309908628464
    2. ' ret' → logprob: -4.635306358337402
    3. 'X' → logprob: -7.885306358337402
    4. ' X' → logprob: -9.885306358337402
    5. '  ' → logprob: -10.260306358337402
    6. '   ' → logprob: -10.385306358337402
    7. ' ' → logprob: -10.385306358337402
    8. ')' → logprob: -11.885306358337402
    9. '	ret' → logprob: -12.385306358337402
    10. 'r' → logprob: -13.010306358337402

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007735356921330094
    2. '):' → logprob: -7.2507734298706055
    3. ' ,' → logprob: -10.375773429870605
    4. '   ' → logprob: -11.125773429870605
    5. '):
' → logprob: -11.250773429870605
    6. ')' → logprob: -13.250773429870605
    7. ' ' → logprob: -14.500773429870605
    8. ' ):' → logprob: -14.625773429870605
    9. '  ' → logprob: -15.000773429870605
    10. '):

' → logprob: -15.125773429870605

Token 119: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.009772616438567638
    2. ' ret' → logprob: -4.634772777557373
    3. ' ' → logprob: -12.134772300720215
    4. '  ' → logprob: -12.134772300720215
    5. '	ret' → logprob: -13.009772300720215
    6. '   ' → logprob: -13.884772300720215
    7. 'r' → logprob: -14.634772300720215
    8. '_ret' → logprob: -14.884772300720215
    9. ')' → logprob: -15.009772300720215
    10. '$ret' → logprob: -15.009772300720215

Token 120: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05563027039170265
    2. '):' → logprob: -2.9306302070617676
    3. '):
' → logprob: -7.305630207061768
    4. ' ,' → logprob: -10.430630683898926
    5. '   ' → logprob: -10.805630683898926
    6. ' ):' → logprob: -11.180630683898926
    7. ')' → logprob: -12.055630683898926
    8. '):
' → logprob: -12.805630683898926
    9. '):

' → logprob: -13.430630683898926
    10. ' ' → logprob: -14.680630683898926

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36656272411346436
    2. ' key' → logprob: -1.2415627241134644
    3. 'key' → logprob: -4.116562843322754
    4. '
' → logprob: -6.866562843322754
    5. ' if' → logprob: -8.241562843322754
    6. '```' → logprob: -9.366562843322754
    7. '_key' → logprob: -9.491562843322754
    8. '{
' → logprob: -9.616562843322754
    9. 'if' → logprob: -10.366562843322754
    10. '    
' → logprob: -10.616562843322754

Token 122: ' update' (ID: 4027)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.32251572608947754
    2. ' key' → logprob: -1.3225157260894775
    3. '   ' → logprob: -4.822515487670898
    4. '
' → logprob: -6.947515487670898
    5. 'if' → logprob: -9.947515487670898
    6. '```' → logprob: -9.947515487670898
    7. '    
' → logprob: -10.322515487670898
    8. '_key' → logprob: -11.322515487670898
    9. '	key' → logprob: -11.322515487670898
    10. 'a' → logprob: -11.447515487670898

Token 123: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.00010688089241739362
    2. '_' → logprob: -9.875106811523438
    3. 'X' → logprob: -10.250106811523438
    4. ' _' → logprob: -11.250106811523438
    5. '```' → logprob: -12.875106811523438
    6. 'ret' → logprob: -13.875106811523438
    7. '`' → logprob: -14.625106811523438
    8. '

' → logprob: -14.750106811523438
    9. '_ret' → logprob: -14.875106811523438
    10. '_x' → logprob: -15.000106811523438

Token 124: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.003178306156769395
    2. '(' → logprob: -5.753178119659424
    3. '(
' → logprob: -14.878178596496582
    4. ' (' → logprob: -15.878178596496582
    5. '(x' → logprob: -17.128177642822266
    6. '(A' → logprob: -17.878177642822266
    7. '(Q' → logprob: -18.378177642822266
    8. '```' → logprob: -18.503177642822266
    9. '(Y' → logprob: -18.878177642822266
    10. 'X' → logprob: -18.878177642822266

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',a' → logprob: -13.250021934509277
    4. ')' → logprob: -15.125021934509277
    5. ',
' → logprob: -15.250021934509277
    6. '   ' → logprob: -16.37502098083496
    7. '(' → logprob: -16.50002098083496
    8. ',X' → logprob: -16.87502098083496
    9. ',A' → logprob: -17.50002098083496
    10. '

' → logprob: -17.62502098083496

Token 126: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0040939548052847385
    2. ' a' → logprob: -5.504094123840332
    3. ')a' → logprob: -12.129094123840332
    4. '	a' → logprob: -12.754094123840332
    5. '   ' → logprob: -12.754094123840332
    6. '<|end|>' → logprob: -13.379094123840332
    7. ')' → logprob: -14.129094123840332
    8. ',a' → logprob: -14.629094123840332
    9. '    ' → logprob: -15.004094123840332
    10. '-a' → logprob: -15.504094123840332

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005430232849903405
    2. ',i' → logprob: -7.750543117523193
    3. ' ,' → logprob: -9.125542640686035
    4. '   ' → logprob: -14.375542640686035
    5. '=' → logprob: -14.625542640686035
    6. ')' → logprob: -14.750542640686035
    7. ' ' → logprob: -14.875542640686035
    8. 'def' → logprob: -15.125542640686035
    9. '[i' → logprob: -15.375542640686035
    10. 'i' → logprob: -15.750542640686035

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026318764314055443
    2. ' i' → logprob: -3.6513187885284424
    3. ')' → logprob: -12.026318550109863
    4. '   ' → logprob: -12.526318550109863
    5. '-' → logprob: -13.026318550109863
    6. ' ' → logprob: -13.151318550109863
    7. ' -' → logprob: -13.276318550109863
    8. '-i' → logprob: -13.901318550109863
    9. '	i' → logprob: -14.526318550109863
    10. ')i' → logprob: -14.651318550109863

Token 129: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06324183940887451
    2. ')' → logprob: -2.813241958618164
    3. ')

' → logprob: -7.063241958618164
    4. ')
' → logprob: -8.063241958618164
    5. '   ' → logprob: -9.438241958618164
    6. ' )
' → logprob: -10.938241958618164
    7. ' ' → logprob: -13.813241958618164
    8. '
' → logprob: -14.563241958618164
    9. ' )' → logprob: -14.688241958618164
    10. ')

' → logprob: -14.813241958618164

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07569453120231628
    2. '   ' → logprob: -3.3256945610046387
    3. 'key' → logprob: -3.7006945610046387
    4. ' key' → logprob: -4.575694561004639
    5. '    
' → logprob: -7.075694561004639
    6. '

' → logprob: -8.45069408416748
    7. '<|end|>' → logprob: -8.82569408416748
    8. 'ret' → logprob: -9.07569408416748
    9. '	key' → logprob: -9.07569408416748
    10. '
' → logprob: -9.45069408416748

Token 131: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.000800811278168112
    2. 'return' → logprob: -8.125801086425781
    3. ' key' → logprob: -8.500801086425781
    4. 'ret' → logprob: -9.125801086425781
    5. '   ' → logprob: -9.625801086425781
    6. '
' → logprob: -9.625801086425781
    7. 'if' → logprob: -9.875801086425781
    8. '    
' → logprob: -12.750801086425781
    9. '```' → logprob: -13.125801086425781
    10. 'k' → logprob: -14.500801086425781

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043000224977731705
    2. '=' → logprob: -3.1680002212524414
    3. ' ' → logprob: -14.793000221252441
    4. ')' → logprob: -14.918000221252441
    5. ',' → logprob: -15.668000221252441
    6. 's' → logprob: -16.043001174926758
    7. ' =
' → logprob: -16.668001174926758
    8. '  ' → logprob: -17.918001174926758
    9. ' =)' → logprob: -18.168001174926758
    10. ':' → logprob: -18.293001174926758

Token 133: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.061968132853507996
    2. ' compute' → logprob: -2.8119680881500244
    3. '   ' → logprob: -16.061967849731445
    4. ' ' → logprob: -16.186967849731445
    5. '.compute' → logprob: -16.436967849731445
    6. '_compute' → logprob: -16.561967849731445
    7. 'computer' → logprob: -17.311967849731445
    8. ' i' → logprob: -17.436967849731445
    9. 'calculate' → logprob: -17.561967849731445
    10. 'i' → logprob: -17.936967849731445

Token 134: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -2.5107177862082608e-05
    2. 'key' → logprob: -10.625024795532227
    3. '(key' → logprob: -15.375024795532227
    4. 'Key' → logprob: -16.000024795532227
    5. '_' → logprob: -16.375024795532227
    6. ' key' → logprob: -16.375024795532227
    7. '(i' → logprob: -16.625024795532227
    8. '_token' → logprob: -17.125024795532227
    9. '(' → logprob: -17.375024795532227
    10. '_Key' → logprob: -17.500024795532227

Token 135: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -16.000024795532227
    4. '(
' → logprob: -17.125024795532227
    5. 'i' → logprob: -18.250024795532227
    6. '(I' → logprob: -18.250024795532227
    7. ' ' → logprob: -19.250024795532227
    8. '(ii' → logprob: -19.625024795532227
    9. '   ' → logprob: -20.250024795532227
    10. '```' → logprob: -20.625024795532227

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023011912708170712
    2. ',a' → logprob: -8.500229835510254
    3. ' ,' → logprob: -10.750229835510254
    4. '   ' → logprob: -13.375229835510254
    5. 'a' → logprob: -13.500229835510254
    6. ',
' → logprob: -13.750229835510254
    7. ',i' → logprob: -15.375229835510254
    8. '‌,' → logprob: -16.50023078918457
    9. '```' → logprob: -16.62523078918457
    10. ',A' → logprob: -16.62523078918457

Token 137: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024773201439529657
    2. ' a' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.627477645874023
    4. ' ' → logprob: -14.752477645874023
    5. '
' → logprob: -15.502477645874023
    6. ')' → logprob: -16.002477645874023
    7. '	a' → logprob: -16.377477645874023
    8. ',' → logprob: -16.627477645874023
    9. ',a' → logprob: -16.627477645874023
    10. ')a' → logprob: -16.752477645874023

Token 138: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521340250968933
    2. ')' → logprob: -1.502134084701538
    3. ')

' → logprob: -9.127134323120117
    4. ')
' → logprob: -9.877134323120117
    5. '   ' → logprob: -10.127134323120117
    6. ' )
' → logprob: -12.877134323120117
    7. '
' → logprob: -14.002134323120117
    8. ' )' → logprob: -14.877134323120117
    9. ' ' → logprob: -15.127134323120117
    10. ')\' → logprob: -16.127134323120117

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21184708178043365
    2. ' if' → logprob: -1.7118470668792725
    3. 'if' → logprob: -5.461847305297852
    4. '
' → logprob: -5.836847305297852
    5. '<|end|>' → logprob: -6.086847305297852
    6. '	if' → logprob: -7.961847305297852
    7. '    
' → logprob: -8.211847305297852
    8. ' ' → logprob: -9.461847305297852
    9. ' return' → logprob: -10.211847305297852
    10. '  
' → logprob: -10.211847305297852

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0623851902782917
    2. ' if' → logprob: -2.812385082244873
    3. '   ' → logprob: -7.812385082244873
    4. 'ret' → logprob: -12.187385559082031
    5. 'return' → logprob: -12.937385559082031
    6. '	if' → logprob: -13.187385559082031
    7. '
' → logprob: -13.187385559082031
    8. ' ' → logprob: -14.812385559082031
    9. '    
' → logprob: -15.187385559082031
    10. '```' → logprob: -15.437385559082031

Token 141: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002485169330611825
    2. 'is' → logprob: -6.002485275268555
    3. ' key' → logprob: -11.752485275268555
    4. '(is' → logprob: -14.252485275268555
    5. 'key' → logprob: -14.877485275268555
    6. ' (' → logprob: -15.252485275268555
    7. ' not' → logprob: -15.252485275268555
    8. ' ' → logprob: -16.252485275268555
    9. '   ' → logprob: -17.377485275268555
    10. 'not' → logprob: -17.877485275268555

Token 142: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -6.704273118884885e-07
    2. 'valid' → logprob: -15.000000953674316
    3. ' _' → logprob: -15.750000953674316
    4. '_' → logprob: -15.750000953674316
    5. ' valid' → logprob: -17.375
    6. '_key' → logprob: -17.625
    7. 'Valid' → logprob: -18.5
    8. '_VALID' → logprob: -19.75
    9. '_safe' → logprob: -19.75
    10. '_val' → logprob: -20.125

Token 143: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.0280383548888494e-06
    2. 'key' → logprob: -14.250000953674316
    3. '(key' → logprob: -14.750000953674316
    4. '_' → logprob: -18.750001907348633
    5. ' key' → logprob: -19.500001907348633
    6. '(_' → logprob: -20.250001907348633
    7. '(' → logprob: -21.000001907348633
    8. '_KEY' → logprob: -21.250001907348633
    9. '
' → logprob: -21.500001907348633
    10. '_Key' → logprob: -22.000001907348633

Token 144: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.875005722045898
    3. ' (' → logprob: -13.125005722045898
    4. 'key' → logprob: -14.000005722045898
    5. ' key' → logprob: -16.3750057220459
    6. '[key' → logprob: -17.7500057220459
    7. ',key' → logprob: -18.2500057220459
    8. '(
' → logprob: -19.0000057220459
    9. ')' → logprob: -19.1250057220459
    10. '_key' → logprob: -19.3750057220459

Token 145: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14304976165294647
    2. '):' → logprob: -2.018049716949463
    3. ':' → logprob: -8.143050193786621
    4. '   ' → logprob: -10.518050193786621
    5. ':
' → logprob: -11.268050193786621
    6. ')' → logprob: -11.518050193786621
    7. '):
' → logprob: -11.643050193786621
    8. '):

' → logprob: -11.768050193786621
    9. '():
' → logprob: -12.018050193786621
    10. ' ):
' → logprob: -12.268050193786621

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009887460619211197
    2. ' ret' → logprob: -7.250988960266113
    3. '   ' → logprob: -8.625988960266113
    4. 'ret' → logprob: -9.500988960266113
    5. '<|end|>' → logprob: -11.875988960266113
    6. ',' → logprob: -12.875988960266113
    7. '    ' → logprob: -12.875988960266113
    8. '      ' → logprob: -13.125988960266113
    9. '	ret' → logprob: -13.375988960266113
    10. '(ret' → logprob: -13.375988960266113

Token 147: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.352748304605484
    2. 'ret' (adapté à ' ret') → logprob: -1.2277482748031616
    3. '       ' → logprob: -5.477748394012451
    4. '   ' → logprob: -10.352747917175293
    5. '	ret' → logprob: -10.477747917175293
    6. ' return' → logprob: -10.977747917175293
    7. 'return' → logprob: -11.227747917175293
    8. '$ret' → logprob: -11.977747917175293
    9. '(ret' → logprob: -12.227747917175293
    10. '
' → logprob: -12.602747917175293

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043005481362342834
    2. '=' → logprob: -3.1680054664611816
    3. ',' → logprob: -12.16800594329834
    4. ' +=' → logprob: -13.91800594329834
    5. ' ' → logprob: -15.66800594329834
    6. ')' → logprob: -16.793004989624023
    7. '   ' → logprob: -17.168004989624023
    8. '+=' → logprob: -17.418004989624023
    9. ':' → logprob: -18.043004989624023
    10. '    ' → logprob: -18.043004989624023

Token 149: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.10021205991506577
    2. 'update' → logprob: -2.3502120971679688
    3. '(update' → logprob: -12.975212097167969
    4. '.update' → logprob: -12.975212097167969
    5. '	update' → logprob: -15.225212097167969
    6. '_update' → logprob: -15.850212097167969
    7. '       ' → logprob: -15.975212097167969
    8. '   ' → logprob: -16.22521209716797
    9. ':update' → logprob: -16.85021209716797
    10. ' ' → logprob: -17.22521209716797

Token 150: '_ret' (ID: 56051)
  Prédit: '_ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ret' → logprob: -9.662937372922897e-05
    2. 'ret' → logprob: -9.250096321105957
    3. '(ret' → logprob: -15.625096321105957
    4. '	ret' → logprob: -16.375097274780273
    5. '$ret' → logprob: -16.500097274780273
    6. ' ret' → logprob: -16.750097274780273
    7. '_RET' → logprob: -17.750097274780273
    8. '_re' → logprob: -18.875097274780273
    9. '_return' → logprob: -19.000097274780273
    10. '.ret' → logprob: -19.375097274780273

Token 151: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -2.8921695047756657e-05
    2. 'ret' → logprob: -10.625028610229492
    3. '(' → logprob: -12.500028610229492
    4. ' ret' → logprob: -15.000028610229492
    5. '$ret' → logprob: -15.250028610229492
    6. '(
' → logprob: -16.125028610229492
    7. '_ret' → logprob: -17.125028610229492
    8. '.ret' → logprob: -17.500028610229492
    9. '(rest' → logprob: -17.500028610229492
    10. ' (' → logprob: -17.625028610229492

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015321242390200496
    2. '(ret' → logprob: -6.501532077789307
    3. 'ret' → logprob: -11.376532554626465
    4. ' ,' → logprob: -11.626532554626465
    5. ' ret' → logprob: -12.001532554626465
    6. '(' → logprob: -13.876532554626465
    7. ')' → logprob: -14.126532554626465
    8. '<|end|>' → logprob: -14.751532554626465
    9. '$ret' → logprob: -15.126532554626465
    10. '   ' → logprob: -15.251532554626465

Token 153: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31408455967903137
    2. ' X' → logprob: -1.314084529876709
    3. '<|end|>' → logprob: -7.189084529876709
    4. ')' → logprob: -9.814085006713867
    5. ' ' → logprob: -12.439085006713867
    6. '(X' → logprob: -13.314085006713867
    7. ',' → logprob: -13.314085006713867
    8. ',X' → logprob: -14.064085006713867
    9. '>X' → logprob: -14.064085006713867
    10. '	X' → logprob: -14.064085006713867

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.619311974034645e-05
    2. ',key' → logprob: -10.500036239624023
    3. ' ,' → logprob: -12.000036239624023
    4. '[key' → logprob: -14.375036239624023
    5. ',
' → logprob: -14.375036239624023
    6. ')' → logprob: -14.500036239624023
    7. '[' → logprob: -15.250036239624023
    8. 'ret' → logprob: -15.250036239624023
    9. ' ret' → logprob: -16.375036239624023
    10. '```' → logprob: -16.500036239624023

Token 155: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3132634460926056
    2. ' key' → logprob: -1.3132634162902832
    3. '   ' → logprob: -14.438263893127441
    4. ')' → logprob: -14.938263893127441
    5. '	key' → logprob: -15.063263893127441
    6. '(key' → logprob: -15.688263893127441
    7. ' ' → logprob: -15.813263893127441
    8. '       ' → logprob: -16.438262939453125
    9. ',key' → logprob: -17.063262939453125
    10. '_key' → logprob: -17.438262939453125

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05585892125964165
    2. ')
' → logprob: -3.055858850479126
    3. '   ' → logprob: -4.930859088897705
    4. ')

' → logprob: -10.930858612060547
    5. ')
' → logprob: -12.680858612060547
    6. ')return' → logprob: -12.930858612060547
    7. ' ' → logprob: -14.930858612060547
    8. ' )' → logprob: -15.180858612060547
    9. ')\
' → logprob: -15.930858612060547
    10. '       ' → logprob: -16.055858612060547

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.016616291366518e-05
    2. ' return' → logprob: -9.750070571899414
    3. 'return' → logprob: -12.000070571899414
    4. '<|end|>' → logprob: -12.500070571899414
    5. '	return' → logprob: -14.875070571899414
    6. '
' → logprob: -14.875070571899414
    7. '       ' → logprob: -15.000070571899414
    8. ',' → logprob: -15.250070571899414
    9. '    
' → logprob: -15.625070571899414
    10. '<|end|>' → logprob: -16.375070571899414

Token 158: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07529792934656143
    2. ' return' → logprob: -2.8252978324890137
    3. 'return' (adapté à ' return') → logprob: -4.325297832489014
    4. '	return' → logprob: -12.450298309326172
    5. ' ' → logprob: -12.825298309326172
    6. '<|end|>' → logprob: -13.325298309326172
    7. ':return' → logprob: -13.575298309326172
    8. '  ' → logprob: -14.200298309326172
    9. '       ' → logprob: -14.450298309326172
    10. '    ' → logprob: -14.825298309326172

Token 159: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.10020710527896881
    2. ' ret' → logprob: -2.3502070903778076
    3. '(ret' → logprob: -15.350207328796387
    4. '	ret' → logprob: -15.850207328796387
    5. 'rets' → logprob: -17.22520637512207
    6. 're' → logprob: -17.35020637512207
    7. '$ret' → logprob: -17.85020637512207
    8. ' ' → logprob: -17.97520637512207
    9. 'r' → logprob: -18.35020637512207
    10. '   ' → logprob: -18.60020637512207

Token 160: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48122498393058777
    2. ' ' → logprob: -1.8562250137329102
    3. 'n' → logprob: -2.60622501373291
    4. '#' → logprob: -3.35622501373291
    5. 'd' → logprob: -3.48122501373291
    6. '<|end|>' → logprob: -3.48122501373291
    7. '\' → logprob: -4.60622501373291
    8. ' 
' → logprob: -5.35622501373291
    9. '
' → logprob: -5.35622501373291
    10. 'a' → logprob: -5.35622501373291

Token 162: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23880238831043243
    2. ' process' → logprob: -1.613802433013916
    3. ' solve' → logprob: -4.863802433013916
    4. 'main' → logprob: -6.238802433013916
    5. 'process' → logprob: -6.738802433013916
    6. ' parse' → logprob: -7.488802433013916
    7. ' solution' → logprob: -7.988802433013916
    8. ' count' → logprob: -8.113801956176758
    9. ' compute' → logprob: -8.238801956176758
    10. ' sum' → logprob: -8.488801956176758

Token 163: '_list' (ID: 4162)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.20156049728393555
    2. '_elements' → logprob: -2.0765604972839355
    3. '_' → logprob: -4.2015604972839355
    4. '(' → logprob: -4.5765604972839355
    5. '(i' → logprob: -4.7015604972839355
    6. '_array' → logprob: -5.3265604972839355
    7. '_list' → logprob: -5.5765604972839355
    8. '(n' → logprob: -6.0765604972839355
    9. 'element' → logprob: -6.4515604972839355
    10. '(elements' → logprob: -6.5765604972839355

Token 164: '(A' (ID: 10706)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.40070241689682007
    2. '(L' → logprob: -1.7757024765014648
    3. '(n' → logprob: -2.150702476501465
    4. '(i' → logprob: -3.775702476501465
    5. '(arr' → logprob: -5.275702476501465
    6. '(l' → logprob: -5.275702476501465
    7. '(' → logprob: -5.400702476501465
    8. '(A' → logprob: -5.900702476501465
    9. '(ls' → logprob: -6.650702476501465
    10. '(nums' → logprob: -7.525702476501465

Token 165: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020116813480854034
    2. '):' → logprob: -4.020116806030273
    3. '):
' → logprob: -6.270116806030273
    4. '   ' → logprob: -10.770116806030273
    5. ',
' → logprob: -11.020116806030273
    6. ' ,' → logprob: -11.145116806030273
    7. ')' → logprob: -12.020116806030273
    8. '):
' → logprob: -12.770116806030273
    9. ',A' → logprob: -13.145116806030273
    10. ',n' → logprob: -13.270116806030273

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19710388779640198
    2. ' ret' → logprob: -2.072103977203369
    3. 'ret' → logprob: -2.947103977203369
    4. '
' → logprob: -7.947103977203369
    5. '    
' → logprob: -9.947103500366211
    6. '	ret' → logprob: -10.447103500366211
    7. ' ' → logprob: -11.697103500366211
    8. '  ' → logprob: -11.822103500366211
    9. '(ret' → logprob: -11.822103500366211
    10. 'def' → logprob: -12.197103500366211

Token 167: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0012777344090864062
    2. ' ret' → logprob: -6.751277923583984
    3. '   ' → logprob: -9.251277923583984
    4. '
' → logprob: -11.876277923583984
    5. 'def' → logprob: -12.751277923583984
    6. 'X' → logprob: -13.876277923583984
    7. '```' → logprob: -15.501277923583984
    8. '    
' → logprob: -15.751277923583984
    9. '	ret' → logprob: -15.876277923583984
    10. ' ' → logprob: -16.501277923583984

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868755102157593
    2. '=' → logprob: -1.1368755102157593
    3. ',' → logprob: -12.76187515258789
    4. ' ' → logprob: -13.76187515258789
    5. '   ' → logprob: -14.63687515258789
    6. '  ' → logprob: -16.26187515258789
    7. ' =
' → logprob: -16.88687515258789
    8. ' ,' → logprob: -18.01187515258789
    9. '＝' → logprob: -18.01187515258789
    10. '=
' → logprob: -18.51187515258789

Token 169: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08494481444358826
    2. ' ' → logprob: -3.084944725036621
    3. 'initialize' → logprob: -3.459944725036621
    4. ' initialize' → logprob: -5.459944725036621
    5. '   ' → logprob: -11.334944725036621
    6. '  ' → logprob: -12.709944725036621
    7. '	initialize' → logprob: -13.834944725036621
    8. '_initialize' → logprob: -14.959944725036621
    9. 'initial' → logprob: -15.022444725036621
    10. '```' → logprob: -15.022444725036621

Token 170: '_ret' (ID: 56051)
  Prédit: '_ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ret' → logprob: -4.842555426876061e-06
    2. 'ret' → logprob: -12.375004768371582
    3. '_' → logprob: -15.125004768371582
    4. '_return' → logprob: -16.3750057220459
    5. '_re' → logprob: -17.6250057220459
    6. '$ret' → logprob: -17.7500057220459
    7. ' _' → logprob: -18.0000057220459
    8. '_RET' → logprob: -18.1250057220459
    9. '_rep' → logprob: -18.1250057220459
    10. '_ref' → logprob: -18.8750057220459

Token 171: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6933771967887878
    2. '()
' → logprob: -0.6933771967887878
    3. '()

' → logprob: -8.693377494812012
    4. '()
' → logprob: -9.693377494812012
    5. '()\' → logprob: -14.693377494812012
    6. '()`' → logprob: -16.193376541137695
    7. ' ()
' → logprob: -16.943376541137695
    8. '()

' → logprob: -17.318376541137695
    9. ' ()' → logprob: -17.693376541137695
    10. '()"' → logprob: -17.693376541137695

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1970059871673584
    2. 'X' → logprob: -1.8220059871673584
    3. ' X' → logprob: -4.0720062255859375
    4. '
' → logprob: -10.322006225585938
    5. ' ' → logprob: -11.447006225585938
    6. '  ' → logprob: -11.947006225585938
    7. '	X' → logprob: -12.322006225585938
    8. '    
' → logprob: -12.947006225585938
    9. '   ' → logprob: -12.947006225585938
    10. '```' → logprob: -13.072006225585938

Token 173: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -1.7835754988482222e-05
    2. ' X' → logprob: -11.125018119812012
    3. '   ' → logprob: -12.875018119812012
    4. '
' → logprob: -15.250018119812012
    5. ' ' → logprob: -16.250017166137695
    6. '  ' → logprob: -17.500017166137695
    7. '```' → logprob: -17.875017166137695
    8. 'N' → logprob: -18.000017166137695
    9. 'for' → logprob: -18.000017166137695
    10. 'from' → logprob: -18.125017166137695

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194039940834045
    2. ' =' → logprob: -1.501940369606018
    3. '()' → logprob: -11.751940727233887
    4. '   ' → logprob: -13.751940727233887
    5. '(' → logprob: -14.126940727233887
    6. ',' → logprob: -14.501940727233887
    7. ' ' → logprob: -15.251940727233887
    8. ')' → logprob: -15.376940727233887
    9. 'initialize' → logprob: -15.626940727233887
    10. '  ' → logprob: -16.62693977355957

Token 175: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.22545886039733887
    2. ' initialize' → logprob: -1.6004588603973389
    3. '	initialize' → logprob: -10.850459098815918
    4. ' defaultdict' → logprob: -11.850459098815918
    5. 'default' → logprob: -12.100459098815918
    6. '_initialize' → logprob: -12.475459098815918
    7. ' ' → logprob: -12.975459098815918
    8. 'itialize' → logprob: -13.225459098815918
    9. '.initialize' → logprob: -13.350459098815918
    10. '   ' → logprob: -13.600459098815918

Token 176: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.0012210593558847904
    2. 'X' → logprob: -6.751221179962158
    3. '```' → logprob: -10.876220703125
    4. '(X' → logprob: -11.626220703125
    5. '(' → logprob: -12.251220703125
    6. '`' → logprob: -13.001220703125
    7. '()' → logprob: -13.001220703125
    8. 'ret' → logprob: -13.376220703125
    9. ' X' → logprob: -13.376220703125
    10. ')' → logprob: -13.626220703125

Token 177: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3885793685913086
    2. '()' → logprob: -1.1385793685913086
    3. '()

' → logprob: -6.388579368591309
    4. '()
' → logprob: -10.763579368591309
    5. '()\' → logprob: -12.638579368591309
    6. '   ' → logprob: -14.263579368591309
    7. '
' → logprob: -14.638579368591309
    8. '()

' → logprob: -15.638579368591309
    9. '()`' → logprob: -15.763579368591309
    10. '()


' → logprob: -15.888579368591309

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42351531982421875
    2. '
' → logprob: -1.1735153198242188
    3. ' for' → logprob: -3.6735153198242188
    4. '    
' → logprob: -5.173515319824219
    5. 'for' → logprob: -5.548515319824219
    6. '<|end|>' → logprob: -7.923515319824219
    7. '  
' → logprob: -8.173515319824219
    8. ' 
' → logprob: -9.673515319824219
    9. '	for' → logprob: -9.798515319824219
    10. '

' → logprob: -9.798515319824219

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0027230868581682444
    2. ' for' → logprob: -6.502723217010498
    3. '   ' → logprob: -6.752723217010498
    4. '
' → logprob: -10.00272274017334
    5. '    
' → logprob: -12.00272274017334
    6. '	for' → logprob: -14.50272274017334
    7. '```' → logprob: -15.37772274017334
    8. '  
' → logprob: -15.87772274017334
    9. ' ' → logprob: -16.877723693847656
    10. 'ret' → logprob: -17.002723693847656

Token 180: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007654900196939707
    2. 'i' → logprob: -4.882654666900635
    3. ' ' → logprob: -11.007655143737793
    4. '   ' → logprob: -12.257655143737793
    5. '	i' → logprob: -12.257655143737793
    6. '(i' → logprob: -12.757655143737793
    7. ' _' → logprob: -12.882655143737793
    8. '_i' → logprob: -13.007655143737793
    9. 'range' → logprob: -13.132655143737793
    10. '  ' → logprob: -13.257655143737793

Token 181: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09557922184467316
    2. ',' → logprob: -3.095579147338867
    3. 'in' → logprob: -3.095579147338867
    4. ' ,' → logprob: -7.720579147338867
    5. ' ' → logprob: -8.595579147338867
    6. '	in' → logprob: -11.595579147338867
    7. ',in' → logprob: -12.345579147338867
    8. ')' → logprob: -12.845579147338867
    9. '```' → logprob: -12.970579147338867
    10. '0' → logprob: -13.970579147338867

Token 182: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.474091112613678
    2. 'a' → logprob: -0.974091112613678
    3. ' ' → logprob: -11.974091529846191
    4. '	a' → logprob: -13.474091529846191
    5. 'A' → logprob: -13.849091529846191
    6. '   ' → logprob: -13.974091529846191
    7. 'value' → logprob: -14.349091529846191
    8. '_a' → logprob: -14.599091529846191
    9. ',a' → logprob: -14.599091529846191
    10. '```' → logprob: -14.724091529846191

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054916925728321075
    2. 'in' → logprob: -2.9299168586730957
    3. ',' → logprob: -11.179917335510254
    4. ')' → logprob: -11.929917335510254
    5. ' ' → logprob: -11.929917335510254
    6. '	in' → logprob: -12.554917335510254
    7. '   ' → logprob: -14.679917335510254
    8. '<|end|>' → logprob: -14.929917335510254
    9. 's' → logprob: -15.179917335510254
    10. 'enumer' → logprob: -15.242417335510254

Token 184: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.1602308303117752
    2. ' enumerate' → logprob: -1.9102308750152588
    3. '(en' → logprob: -12.78523063659668
    4. 'en' → logprob: -13.16023063659668
    5. 'enum' → logprob: -13.66023063659668
    6. '```' → logprob: -15.16023063659668
    7. 'em' → logprob: -16.03523063659668
    8. '(' → logprob: -16.28523063659668
    9. '
' → logprob: -16.78523063659668
    10. 'Enumer' → logprob: -17.03523063659668

Token 185: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.3856492842023727e-06
    2. 'A' → logprob: -14.125000953674316
    3. '(' → logprob: -14.500000953674316
    4. ')' → logprob: -16.375001907348633
    5. '(
' → logprob: -18.375001907348633
    6. '```' → logprob: -18.500001907348633
    7. ',A' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. ')(' → logprob: -19.375001907348633
    10. '
' → logprob: -19.750001907348633

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001093841710826382
    2. '):
' → logprob: -9.375109672546387
    3. ':' → logprob: -11.500109672546387
    4. ',' → logprob: -11.875109672546387
    5. '():' → logprob: -12.500109672546387
    6. ')' → logprob: -13.250109672546387
    7. ' ):' → logprob: -13.875109672546387
    8. '   ' → logprob: -15.000109672546387
    9. 'def' → logprob: -15.500109672546387
    10. '):
' → logprob: -16.25010871887207

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004884536610916257
    2. '
' → logprob: -8.62548828125
    3. 'ret' → logprob: -8.75048828125
    4. '   ' → logprob: -9.37548828125
    5. ' ret' → logprob: -10.12548828125
    6. '        
' → logprob: -11.75048828125
    7. '    
' → logprob: -11.75048828125
    8. ',' → logprob: -12.37548828125
    9. '	ret' → logprob: -14.00048828125
    10. '```' → logprob: -14.50048828125

Token 188: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3747748136520386
    2. 'ret' (adapté à ' ret') → logprob: -2.124774932861328
    3. ' ret' → logprob: -2.124774932861328
    4. '       ' → logprob: -2.624774932861328
    5. '
' → logprob: -7.374774932861328
    6. '           ' → logprob: -8.624774932861328
    7. '	ret' → logprob: -8.999774932861328
    8. ' ' → logprob: -9.249774932861328
    9. '    ' → logprob: -10.249774932861328
    10. '  ' → logprob: -10.499774932861328

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' +=' → logprob: -14.600207328796387
    4. '+=' → logprob: -15.975207328796387
    5. ' ' → logprob: -17.97520637512207
    6. '＝' → logprob: -18.22520637512207
    7. '   ' → logprob: -18.35020637512207
    8. ',' → logprob: -19.22520637512207
    9. ' ' → logprob: -19.47520637512207
    10. '	' → logprob: -19.47520637512207

Token 190: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6931474208831787
    2. 'process' → logprob: -0.6931474208831787
    3. '(process' → logprob: -16.818147659301758
    4. ' proces' → logprob: -17.318147659301758
    5. '	process' → logprob: -17.568147659301758
    6. '.process' → logprob: -18.818147659301758
    7. 'proces' → logprob: -19.818147659301758
    8. '_process' → logprob: -20.068147659301758
    9. '   ' → logprob: -21.693147659301758
    10. 'rocess' → logprob: -22.068147659301758

Token 191: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.1432982087135315
    2. '_list' → logprob: -2.0182981491088867
    3. 'element' → logprob: -7.518298149108887
    4. '_elem' → logprob: -10.643298149108887
    5. 'list' → logprob: -10.768298149108887
    6. 'lement' → logprob: -11.518298149108887
    7. '_elements' → logprob: -12.268298149108887
    8. '_' → logprob: -12.893298149108887
    9. '(i' → logprob: -13.018298149108887
    10. '```' → logprob: -13.143298149108887

Token 192: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003178544342517853
    2. '(' → logprob: -5.753178596496582
    3. ' (' → logprob: -14.503178596496582
    4. '(
' → logprob: -15.128178596496582
    5. '(I' → logprob: -17.628177642822266
    6. '```' → logprob: -17.753177642822266
    7. 'i' → logprob: -17.878177642822266
    8. '   ' → logprob: -18.753177642822266
    9. '((' → logprob: -18.878177642822266
    10. ' ' → logprob: -19.003177642822266

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012308525037951767
    2. ' ,' → logprob: -9.625123023986816
    3. ',a' → logprob: -9.875123023986816
    4. 'a' → logprob: -12.500123023986816
    5. '   ' → logprob: -13.750123023986816
    6. ',
' → logprob: -14.750123023986816
    7. '```' → logprob: -16.500123977661133
    8. '(a' → logprob: -17.000123977661133
    9. '(' → logprob: -17.000123977661133
    10. '       ' → logprob: -17.000123977661133

Token 194: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019293478690087795
    2. ' a' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.37692928314209
    4. ' ' → logprob: -16.501930236816406
    5. '    ' → logprob: -17.376930236816406
    6. '	a' → logprob: -17.626930236816406
    7. '  ' → logprob: -18.376930236816406
    8. '       ' → logprob: -18.626930236816406
    9. ')a' → logprob: -19.001930236816406
    10. '
' → logprob: -19.251930236816406

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.6087021473795176e-05
    2. ' ,' → logprob: -10.250045776367188
    3. ')' → logprob: -11.875045776367188
    4. ',X' → logprob: -13.250045776367188
    5. '   ' → logprob: -13.500045776367188
    6. '),' → logprob: -16.125045776367188
    7. ',
' → logprob: -16.375045776367188
    8. '       ' → logprob: -16.500045776367188
    9. '```' → logprob: -16.750045776367188
    10. 'X' → logprob: -17.000045776367188

Token 196: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.023245595395565033
    2. ' X' → logprob: -3.7732455730438232
    3. ')' → logprob: -17.148244857788086
    4. ' ' → logprob: -17.398244857788086
    5. '	X' → logprob: -17.898244857788086
    6. '   ' → logprob: -18.148244857788086
    7. '```' → logprob: -19.023244857788086
    8. '
' → logprob: -19.273244857788086
    9. '<|end|>' → logprob: -19.898244857788086
    10. '  ' → logprob: -20.148244857788086

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.75000286102295
    3. 'ret' → logprob: -16.250003814697266
    4. ')' → logprob: -17.875003814697266
    5. '   ' → logprob: -17.875003814697266
    6. ' ret' → logprob: -18.500003814697266
    7. ',
' → logprob: -18.500003814697266
    8. '```' → logprob: -20.000003814697266
    9. '),' → logprob: -20.250003814697266
    10. '',' → logprob: -20.750003814697266

Token 198: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0007099286303855479
    2. ' ret' → logprob: -7.2507100105285645
    3. '	ret' → logprob: -19.125709533691406
    4. '(ret' → logprob: -20.750709533691406
    5. 'rets' → logprob: -21.625709533691406
    6. '   ' → logprob: -22.250709533691406
    7. '_ret' → logprob: -22.375709533691406
    8. '$ret' → logprob: -22.500709533691406
    9. '.ret' → logprob: -23.000709533691406
    10. ' ' → logprob: -23.125709533691406

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12695078551769257
    2. ')
' → logprob: -2.126950740814209
    3. '   ' → logprob: -11.126951217651367
    4. ')

' → logprob: -12.626951217651367
    5. ')return' → logprob: -13.001951217651367
    6. ')
' → logprob: -13.126951217651367
    7. ')`
' → logprob: -16.126951217651367
    8. ' )' → logprob: -16.251951217651367
    9. ')\
' → logprob: -16.626951217651367
    10. ' )
' → logprob: -17.126951217651367

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048596507986076176
    2. ' return' → logprob: -8.000486373901367
    3. 'return' → logprob: -8.875486373901367
    4. '<|end|>' → logprob: -12.000486373901367
    5. '       ' → logprob: -13.125486373901367
    6. '
' → logprob: -13.750486373901367
    7. '    
' → logprob: -15.125486373901367
    8. ' ' → logprob: -15.250486373901367
    9. '	return' → logprob: -15.250486373901367
    10. '  ' → logprob: -15.375486373901367

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07928983867168427
    2. '   ' → logprob: -2.5792899131774902
    3. ' return' → logprob: -7.82928991317749
    4. '	return' → logprob: -13.329289436340332
    5. '
' → logprob: -15.829289436340332
    6. '<|end|>' → logprob: -16.45429039001465
    7. 'ret' → logprob: -16.70429039001465
    8. '    
' → logprob: -17.32929039001465
    9. ':return' → logprob: -17.32929039001465
    10. ' ' → logprob: -17.45429039001465

Token 202: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0001584850688232109
    2. ' ret' → logprob: -8.750158309936523
    3. '(ret' → logprob: -18.875158309936523
    4. '	ret' → logprob: -21.125158309936523
    5. '$ret' → logprob: -21.125158309936523
    6. 'rets' → logprob: -22.250158309936523
    7. 'retval' → logprob: -22.750158309936523
    8. 'rett' → logprob: -23.250158309936523
    9. '_ret' → logprob: -23.375158309936523
    10. '   ' → logprob: -23.875158309936523

Token 203: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36841174960136414
    2. '<|end|>' → logprob: -1.3684117794036865
    3. '```' → logprob: -3.7434117794036865
    4. 'n' → logprob: -4.118411540985107
    5. 'def' → logprob: -5.118411540985107
    6. '<|end|>' → logprob: -6.118411540985107
    7. ')' → logprob: -6.368411540985107
    8. '[' → logprob: -6.618411540985107
    9. 'a' → logprob: -7.118411540985107
    10. '...' → logprob: -8.368412017822266

Token 205: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0022152038291096687
    2. 'main' → logprob: -6.252215385437012
    3. ' solve' → logprob: -8.377215385437012
    4. '_main' → logprob: -11.252215385437012
    5. ' solution' → logprob: -11.627215385437012
    6. ' process' → logprob: -11.627215385437012
    7. ' run' → logprob: -11.752215385437012
    8. ' parse' → logprob: -11.877215385437012
    9. ' test' → logprob: -12.877215385437012
    10. ' read' → logprob: -13.002215385437012

Token 206: '(*' (ID: 9000)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005719623528420925
    2. '(n' → logprob: -6.2557196617126465
    3. '(A' → logprob: -6.5057196617126465
    4. '(N' → logprob: -6.6307196617126465
    5. '():
' → logprob: -7.8807196617126465
    6. '(input' → logprob: -8.380719184875488
    7. '(' → logprob: -9.005719184875488
    8. '(args' → logprob: -9.630719184875488
    9. '()' → logprob: -10.255719184875488
    10. '(arg' → logprob: -10.380719184875488

Token 207: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.012285236269235611
    2. 'argv' → logprob: -4.512285232543945
    3. 'input' → logprob: -7.387285232543945
    4. 'lines' → logprob: -8.887285232543945
    5. 'inputs' → logprob: -9.012285232543945
    6. 'A' → logprob: -9.137285232543945
    7. ')' → logprob: -9.387285232543945
    8. 'tests' → logprob: -10.387285232543945
    9. ',' → logprob: -10.512285232543945
    10. 'a' → logprob: -10.762285232543945

Token 208: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00365281431004405
    2. '):
' → logprob: -5.628653049468994
    3. '():' → logprob: -10.378652572631836
    4. '):
' → logprob: -11.878652572631836
    5. ':' → logprob: -12.503652572631836
    6. ')' → logprob: -12.878652572631836
    7. '(*' → logprob: -12.878652572631836
    8. ',' → logprob: -13.628652572631836
    9. '(args' → logprob: -13.628652572631836
    10. '):

' → logprob: -14.128652572631836

Token 209: ' str' (ID: 989)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2601263225078583
    2. 'str' → logprob: -2.0101263523101807
    3. ')' → logprob: -2.7601263523101807
    4. '):
' → logprob: -4.010126113891602
    5. '):' → logprob: -5.010126113891602
    6. 'Any' → logprob: -6.135126113891602
    7. 'tuple' → logprob: -6.510126113891602
    8. 'object' → logprob: -7.260126113891602
    9. '   ' → logprob: -7.260126113891602
    10. 'list' → logprob: -7.760126113891602

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21881802380084991
    2. '):' → logprob: -1.8438180685043335
    3. '):
' → logprob: -3.343817949295044
    4. ')->' → logprob: -5.843818187713623
    5. '):
' → logprob: -9.593817710876465
    6. '   ' → logprob: -11.593817710876465
    7. '):

' → logprob: -11.718817710876465
    8. '[]):' → logprob: -11.843817710876465
    9. '()' → logprob: -12.343817710876465
    10. 's' → logprob: -12.593817710876465

Token 211: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025730235502123833
    2. '->' → logprob: -3.9007301330566406
    3. ':
' → logprob: -5.775730133056641
    4. ' ->' → logprob: -6.275730133056641
    5. '   ' → logprob: -8.90073013305664
    6. ' :' → logprob: -11.77573013305664
    7. '```' → logprob: -11.77573013305664
    8. '>' → logprob: -12.02573013305664
    9. '():' → logprob: -12.40073013305664
    10. ':
' → logprob: -12.77573013305664

Token 212: ' str' (ID: 989)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.034592388459714e-06
    2. ' int' → logprob: -12.250005722045898
    3. '[int' → logprob: -14.125005722045898
    4. '   ' → logprob: -14.875005722045898
    5. 'None' → logprob: -17.1250057220459
    6. '(int' → logprob: -18.0000057220459
    7. 'str' → logprob: -18.7500057220459
    8. '  ' → logprob: -19.1250057220459
    9. '	int' → logprob: -19.2500057220459
    10. '<int' → logprob: -19.3750057220459

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11448251456022263
    2. '():' → logprob: -2.2394824028015137
    3. ':
' → logprob: -6.614482402801514
    4. '():
' → logprob: -9.239482879638672
    5. '   ' → logprob: -9.614482879638672
    6. '(":' → logprob: -10.114482879638672
    7. '):' → logprob: -10.239482879638672
    8. '(' → logprob: -10.239482879638672
    9. '()' → logprob: -11.989482879638672
    10. ':return' → logprob: -11.989482879638672

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015272959135472775
    2. 'A' → logprob: -4.890273094177246
    3. 'n' → logprob: -5.265273094177246
    4. ' A' → logprob: -6.265273094177246
    5. ' n' → logprob: -7.765273094177246
    6. 'a' → logprob: -9.140273094177246
    7. 'args' → logprob: -11.140273094177246
    8. ' args' → logprob: -12.890273094177246
    9. '    
' → logprob: -13.140273094177246
    10. ' a' → logprob: -13.140273094177246

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0463646836578846
    2. '   ' → logprob: -3.1713647842407227
    3. 'A' → logprob: -5.796364784240723
    4. ' n' → logprob: -8.546364784240723
    5. 'args' → logprob: -10.796364784240723
    6. 'N' → logprob: -10.921364784240723
    7. '```' → logprob: -11.296364784240723
    8. '    
' → logprob: -11.796364784240723
    9. '_n' → logprob: -11.921364784240723
    10. '#' → logprob: -11.921364784240723

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764535665512085
    2. ' =' → logprob: -0.8264535665512085
    3. ',' → logprob: -8.07645320892334
    4. ' ' → logprob: -9.07645320892334
    5. '=int' → logprob: -9.70145320892334
    6. '   ' → logprob: -10.95145320892334
    7. ')' → logprob: -11.95145320892334
    8. '  ' → logprob: -13.82645320892334
    9. '=parse' → logprob: -13.82645320892334
    10. ')=' → logprob: -14.07645320892334

Token 217: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.004176698625087738
    2. ' parse' → logprob: -5.504176616668701
    3. 'int' → logprob: -9.25417709350586
    4. ' int' → logprob: -13.00417709350586
    5. '   ' → logprob: -15.75417709350586
    6. ' ' → logprob: -16.50417709350586
    7. '  ' → logprob: -17.00417709350586
    8. '(parse' → logprob: -17.37917709350586
    9. '	parse' → logprob: -17.37917709350586
    10. '=parse' → logprob: -18.00417709350586

Token 218: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0004928641719743609
    2. '_' → logprob: -7.750493049621582
    3. '(args' → logprob: -10.375493049621582
    4. 'n' → logprob: -10.875493049621582
    5. 'args' → logprob: -12.500493049621582
    6. '(' → logprob: -12.750493049621582
    7. '_args' → logprob: -13.125493049621582
    8. '_(' → logprob: -14.500493049621582
    9. '('_' → logprob: -14.500493049621582
    10. '(_' → logprob: -14.625493049621582

Token 219: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -5.919942486798391e-05
    2. 'args' → logprob: -9.750059127807617
    3. '(' → logprob: -14.625059127807617
    4. '(*' → logprob: -15.125059127807617
    5. '=args' → logprob: -18.000059127807617
    6. '((' → logprob: -18.000059127807617
    7. '(argv' → logprob: -18.125059127807617
    8. ' args' → logprob: -18.250059127807617
    9. '(n' → logprob: -18.375059127807617
    10. '	args' → logprob: -18.625059127807617

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018685187387745827
    2. '0' → logprob: -8.875186920166016
    3. '(' → logprob: -10.000186920166016
    4. '   ' → logprob: -14.875186920166016
    5. '\[' → logprob: -14.875186920166016
    6. ')[' → logprob: -15.375186920166016
    7. '1' → logprob: -15.500186920166016
    8. '```' → logprob: -15.750186920166016
    9. '{' → logprob: -16.250186920166016
    10. ' [' → logprob: -16.625186920166016

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -14.750000953674316
    4. '[' → logprob: -16.000001907348633
    5. '1' → logprob: -17.500001907348633
    6. '
' → logprob: -17.625001907348633
    7. '  ' → logprob: -18.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '۰' → logprob: -19.000001907348633
    10. '    ' → logprob: -19.125001907348633

Token 222: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00014096579980105162
    2. '])
' → logprob: -9.000141143798828
    3. ')' → logprob: -11.375141143798828
    4. ']' → logprob: -12.875141143798828
    5. ' ])' → logprob: -14.000141143798828
    6. '])

' → logprob: -14.250141143798828
    7. '[' → logprob: -14.625141143798828
    8. ']);' → logprob: -15.000141143798828
    9. ''])' → logprob: -15.125141143798828
    10. '])
' → logprob: -15.625141143798828

Token 223: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04752757027745247
    2. '   ' → logprob: -3.172527551651001
    3. ' A' → logprob: -5.42252779006958
    4. 'a' → logprob: -9.547527313232422
    5. '	A' → logprob: -11.047527313232422
    6. ',A' → logprob: -12.422527313232422
    7. 'n' → logprob: -13.047527313232422
    8. '#' → logprob: -13.547527313232422
    9. 's' → logprob: -13.922527313232422
    10. '```' → logprob: -13.922527313232422

Token 224: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -2.45848218582978e-06
    2. ' A' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.00000286102295
    4. 'a' → logprob: -14.37500286102295
    5. '	A' → logprob: -18.250001907348633
    6. '_A' → logprob: -18.625001907348633
    7. 'rest' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. '*A' → logprob: -18.875001907348633
    10. '#' → logprob: -19.000001907348633

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '=parse' → logprob: -15.203890800476074
    4. ')' → logprob: -16.578889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '=[]' → logprob: -17.078889846801758
    7. '=
' → logprob: -17.078889846801758
    8. '[' → logprob: -17.703889846801758
    9. ',' → logprob: -17.703889846801758
    10. ':' → logprob: -17.828889846801758

Token 226: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.014167623594403267
    2. ' parse' → logprob: -4.264167785644531
    3. '(parse' → logprob: -12.514167785644531
    4. '	parse' → logprob: -15.764167785644531
    5. '=parse' → logprob: -16.26416778564453
    6. '   ' → logprob: -16.38916778564453
    7. ' ' → logprob: -17.38916778564453
    8. '_parse' → logprob: -17.51416778564453
    9. '.parse' → logprob: -17.88916778564453
    10. '  ' → logprob: -18.38916778564453

Token 227: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -4.320199877838604e-07
    2. 'A' → logprob: -15.0
    3. '```' → logprob: -18.875
    4. '_' → logprob: -19.0
    5. 'args' → logprob: -20.875
    6. '_a' → logprob: -21.125
    7. '\' → logprob: -21.25
    8. '_args' → logprob: -21.5
    9. '(A' → logprob: -21.5
    10. '_B' → logprob: -21.625

Token 228: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -1.1517960956552997e-05
    2. 'args' → logprob: -11.375011444091797
    3. '(' → logprob: -18.000011444091797
    4. '=args' → logprob: -18.000011444091797
    5. ',args' → logprob: -18.500011444091797
    6. ' (' → logprob: -19.375011444091797
    7. ' args' → logprob: -19.500011444091797
    8. '((' → logprob: -19.500011444091797
    9. '(argv' → logprob: -19.500011444091797
    10. '(arg' → logprob: -20.000011444091797

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.682846287731081e-05
    2. '1' → logprob: -10.000066757202148
    3. '(' → logprob: -10.875066757202148
    4. ')' → logprob: -15.000066757202148
    5. '0' → logprob: -15.000066757202148
    6. '
' → logprob: -15.125066757202148
    7. ')[' → logprob: -15.250066757202148
    8. '```' → logprob: -15.375066757202148
    9. '[-' → logprob: -15.625066757202148
    10. '()[' → logprob: -16.00006675720215

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '0' → logprob: -13.875001907348633
    3. '[' → logprob: -14.375001907348633
    4. '```' → logprob: -15.000001907348633
    5. '   ' → logprob: -15.625001907348633
    6. ' ' → logprob: -15.750001907348633
    7. '
' → logprob: -16.500001907348633
    8. '2' → logprob: -16.750001907348633
    9. '`' → logprob: -17.687501907348633
    10. '(' → logprob: -18.000001907348633

Token 231: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22637498378753662
    2. ')' → logprob: -1.6013749837875366
    3. '))' → logprob: -7.601375102996826
    4. '())' → logprob: -8.226374626159668
    5. '})' → logprob: -9.976374626159668
    6. ')
' → logprob: -10.476374626159668
    7. '[' → logprob: -10.726374626159668
    8. ')])' → logprob: -10.726374626159668
    9. '()' → logprob: -10.851374626159668
    10. '>)' → logprob: -11.476374626159668

Token 232: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13327012956142426
    2. '   ' → logprob: -2.383270025253296
    3. 'ret' → logprob: -3.508270025253296
    4. '    
' → logprob: -7.008270263671875
    5. ' ret' → logprob: -7.258270263671875
    6. '```' → logprob: -7.508270263671875
    7. '
' → logprob: -9.008270263671875
    8. 'return' → logprob: -9.383270263671875
    9. '	ret' → logprob: -9.633270263671875
    10. '  
' → logprob: -10.383270263671875

Token 233: ' result' (ID: 1534)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0013397661969065666
    2. 'result' (adapté à ' result') → logprob: -7.251339912414551
    3. ' ret' → logprob: -7.501339912414551
    4. '   ' → logprob: -10.50133991241455
    5. 'res' → logprob: -10.50133991241455
    6. 'return' → logprob: -11.25133991241455
    7. '
' → logprob: -12.12633991241455
    8. ' result' → logprob: -12.75133991241455
    9. '```' → logprob: -15.37633991241455
    10. 'retval' → logprob: -15.50133991241455

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. ':' → logprob: -16.501928329467773
    4. ')' → logprob: -18.126928329467773
    5. '＝' → logprob: -18.501928329467773
    6. ' ' → logprob: -18.751928329467773
    7. ',' → logprob: -19.251928329467773
    8. ' =
' → logprob: -19.251928329467773
    9. '   ' → logprob: -19.501928329467773
    10. ' ' → logprob: -20.001928329467773

Token 235: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2520119249820709
    2. ' process' → logprob: -1.5020118951797485
    3. ' str' → logprob: -9.752012252807617
    4. 'str' → logprob: -10.627012252807617
    5. '   ' → logprob: -15.127012252807617
    6. '(process' → logprob: -16.877012252807617
    7. '	process' → logprob: -18.127012252807617
    8. ' ' → logprob: -19.127012252807617
    9. ' proces' → logprob: -19.502012252807617
    10. '
' → logprob: -20.002012252807617

Token 236: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '_element' → logprob: -17.25
    3. 'list' → logprob: -17.375
    4. '_' → logprob: -19.0
    5. '_l' → logprob: -19.125
    6. '```' → logprob: -19.125
    7. 'List' → logprob: -20.25
    8. ' _' → logprob: -20.25
    9. '_li' → logprob: -20.625
    10. 's' → logprob: -20.75

Token 237: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -17.0
    4. '(
' → logprob: -17.5
    5. '```' → logprob: -19.5
    6. '((' → logprob: -19.75
    7. '(AST' → logprob: -20.625
    8. '(E' → logprob: -20.875
    9. '(I' → logprob: -21.375
    10. '(`' → logprob: -22.0

Token 238: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014167606830597
    2. ')' → logprob: -1.7014167308807373
    3. ')
' → logprob: -13.451416969299316
    4. ')

' → logprob: -13.576416969299316
    5. ' )
' → logprob: -14.576416969299316
    6. ')return' → logprob: -15.826416969299316
    7. '())
' → logprob: -16.826416015625
    8. ')`
' → logprob: -16.951416015625
    9. ' )' → logprob: -17.076416015625
    10. '   ' → logprob: -17.576416015625

Token 239: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7161171436309814
    2. '   ' → logprob: -0.8411171436309814
    3. ' return' → logprob: -2.5911171436309814
    4. 'return' → logprob: -5.591116905212402
    5. '\n' → logprob: -7.341116905212402
    6. '	return' → logprob: -7.966116905212402
    7. '```' → logprob: -8.841116905212402
    8. '\' → logprob: -9.091116905212402
    9. '    
' → logprob: -9.341116905212402
    10. '
' → logprob: -9.966116905212402

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3159908652305603
    2. ' return' → logprob: -1.315990924835205
    3. '
' → logprob: -6.065990924835205
    4. '   ' → logprob: -7.815990924835205
    5. '	return' → logprob: -13.690990447998047
    6. '
' → logprob: -15.565990447998047
    7. '\n' → logprob: -15.940990447998047
    8. '    
' → logprob: -16.315990447998047
    9. '```' → logprob: -16.565990447998047
    10. ' 
' → logprob: -16.690990447998047

Token 241: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.006143272388726473
    2. 'str' → logprob: -5.256143093109131
    3. ' f' → logprob: -7.006143093109131
    4. ' ' → logprob: -13.131143569946289
    5. ' ' → logprob: -14.631143569946289
    6. 'f' → logprob: -15.381143569946289
    7. '(str' → logprob: -17.38114356994629
    8. '```' → logprob: -17.88114356994629
    9. '	str' → logprob: -18.38114356994629
    10. '"' → logprob: -18.50614356994629

Token 242: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4740976393222809
    2. '(' → logprob: -0.9740976095199585
    3. 'result' → logprob: -12.09909725189209
    4. '(
' → logprob: -12.34909725189209
    5. '('' → logprob: -12.84909725189209
    6. '(return' → logprob: -12.97409725189209
    7. '("("' → logprob: -13.22409725189209
    8. ' (' → logprob: -13.59909725189209
    9. '()' → logprob: -14.34909725189209
    10. '(results' → logprob: -14.97409725189209

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')`' → logprob: -14.625000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')
' → logprob: -16.375
    5. '())' → logprob: -17.375
    6. '')' → logprob: -17.5
    7. '()' → logprob: -17.875
    8. ')}' → logprob: -18.25
    9. ' )' → logprob: -18.5
    10. '`)' → logprob: -18.5

Token 244: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13468660414218903
    2. '\n' → logprob: -2.8846867084503174
    3. '<|end|>' → logprob: -3.5096867084503174
    4. '\' → logprob: -3.8846867084503174
    5. 'n' → logprob: -5.009686470031738
    6. '```' → logprob: -5.759686470031738
    7. ')' → logprob: -6.134686470031738
    8. '%' → logprob: -6.759686470031738
    9. '_' → logprob: -6.884686470031738
    10. ' ' → logprob: -6.884686470031738

Token 245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602381318807602
    2. '__' → logprob: -1.9102381467819214
    3. ' ' → logprob: -11.785238265991211
    4. 'name' → logprob: -12.660238265991211
    5. '_' → logprob: -13.660238265991211
    6. '_name' → logprob: -14.410238265991211
    7. '___' → logprob: -14.660238265991211
    8. '  ' → logprob: -14.910238265991211
    9. ' ' → logprob: -15.035238265991211
    10. '/__' → logprob: -15.660238265991211

Token 246: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05807052552700043
    2. ' __' → logprob: -3.183070421218872
    3. 'name' → logprob: -4.558070659637451
    4. ' ==' → logprob: -5.558070659637451
    5. '==' → logprob: -8.308070182800293
    6. '_name' → logprob: -9.433070182800293
    7. '.__' → logprob: -9.808070182800293
    8. '.name' → logprob: -10.558070182800293
    9. 'main' → logprob: -10.683070182800293
    10. ' name' → logprob: -10.808070182800293

Token 247: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1472419600977446e-06
    2. '==' → logprob: -14.375000953674316
    3. '__.__' → logprob: -16.125001907348633
    4. '_' → logprob: -16.375001907348633
    5. '___' → logprob: -16.625001907348633
    6. ' ==' → logprob: -16.625001907348633
    7. 'name' → logprob: -16.750001907348633
    8. '____' → logprob: -16.875001907348633
    9. '__
' → logprob: -17.000001907348633
    10. '__.' → logprob: -17.500001907348633

Token 248: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1903659999370575
    2. ' ==' → logprob: -1.9403660297393799
    3. '==' → logprob: -3.56536602973938
    4. '=="' → logprob: -6.815365791320801
    5. '__.__' → logprob: -8.8153657913208
    6. '=='' → logprob: -10.1903657913208
    7. '__.' → logprob: -10.4403657913208
    8. '_' → logprob: -10.9403657913208
    9. '___' → logprob: -11.0653657913208
    10. '.__' → logprob: -11.3153657913208

Token 249: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859941080212593
    2. ''' → logprob: -3.0485994815826416
    3. ' "__' → logprob: -11.548599243164062
    4. '__' → logprob: -13.423599243164062
    5. ' '__' → logprob: -15.298599243164062
    6. ''"' → logprob: -15.673599243164062
    7. '"name' → logprob: -16.173599243164062
    8. '   ' → logprob: -16.673599243164062
    9. '"user' → logprob: -16.923599243164062
    10. '"_' → logprob: -17.173599243164062

Token 250: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.025864768773317337
    2. '__' → logprob: -3.775864839553833
    3. '"' → logprob: -6.025864601135254
    4. 'name' → logprob: -9.275864601135254
    5. ''' → logprob: -9.275864601135254
    6. '_main' → logprob: -12.150864601135254
    7. ' main' → logprob: -13.400864601135254
    8. '__":
' → logprob: -13.900864601135254
    9. '__
' → logprob: -14.150864601135254
    10. '   ' → logprob: -14.275864601135254

Token 251: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011126928962767124
    2. '__' → logprob: -4.51112699508667
    3. '__':
' → logprob: -9.511126518249512
    4. '__:' → logprob: -12.386126518249512
    5. '__.' → logprob: -14.886126518249512
    6. '__
' → logprob: -15.636126518249512
    7. '_' → logprob: -16.261127471923828
    8. '":' → logprob: -16.511127471923828
    9. '__["' → logprob: -16.761127471923828
    10. '":
' → logprob: -17.011127471923828

Token 252: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3374042212963104
    2. 'import' → logprob: -1.4624042510986328
    3. '   ' → logprob: -2.962404251098633
    4. '	import' → logprob: -6.337404251098633
    5. '```' → logprob: -7.587404251098633
    6. ' input' → logprob: -7.837404251098633
    7. '    
' → logprob: -9.337404251098633
    8. ' n' → logprob: -10.087404251098633
    9. ' ' → logprob: -10.462404251098633
    10. ' 
' → logprob: -10.712404251098633

Token 253: ' print' (ID: 2123)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12713021039962769
    2. ' import' → logprob: -2.1271302700042725
    3. ' input' → logprob: -9.377130508422852
    4. 'n' → logprob: -10.252130508422852
    5. 'input' → logprob: -10.502130508422852
    6. 'from' → logprob: -11.002130508422852
    7. '   ' → logprob: -11.127130508422852
    8. ' n' → logprob: -11.502130508422852
    9. ' from' → logprob: -13.252130508422852
    10. 'print' (adapté à ' print') → logprob: -13.377130508422852

Token 254: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742366373538971
    2. '(s' → logprob: -0.9742366075515747
    3. '(
' → logprob: -9.099236488342285
    4. '(

' → logprob: -10.474236488342285
    5. '(solution' → logprob: -12.474236488342285
    6. '()' → logprob: -12.599236488342285
    7. '('' → logprob: -12.974236488342285
    8. 'solve' → logprob: -13.099236488342285
    9. '(sol' → logprob: -13.224236488342285
    10. ' (' → logprob: -13.849236488342285

Token 255: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.759734732331708e-05
    2. 'solve' → logprob: -11.125017166137695
    3. 'ove' → logprob: -13.250017166137695
    4. '```' → logprob: -15.000017166137695
    5. 'ol' → logprob: -15.250017166137695
    6. 'OLVE' → logprob: -16.250017166137695
    7. 'l' → logprob: -16.375017166137695
    8. 'erve' → logprob: -16.500017166137695
    9. 't' → logprob: -16.625017166137695
    10. 'olver' → logprob: -16.750017166137695

Token 256: '(*(' (ID: 103513)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4944157302379608
    2. '(*' → logprob: -1.6194157600402832
    3. '()' → logprob: -2.494415760040283
    4. '(' → logprob: -3.119415760040283
    5. '(*(' → logprob: -3.119415760040283
    6. '(input' → logprob: -4.744415760040283
    7. '("("' → logprob: -4.869415760040283
    8. '(
' → logprob: -6.369415760040283
    9. '("(' → logprob: -7.619415760040283
    10. '('' → logprob: -7.619415760040283

Token 257: 'open' (ID: 3843)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0020148828625679016
    2. '[input' → logprob: -6.877015113830566
    3. '[
' → logprob: -7.377015113830566
    4. 'open' → logprob: -9.127015113830566
    5. '[i' → logprob: -10.127015113830566
    6. '["' → logprob: -10.252015113830566
    7. 'line' → logprob: -10.502015113830566
    8. '(input' → logprob: -10.627015113830566
    9. '[' → logprob: -10.752015113830566
    10. 'list' → logprob: -11.127015113830566

Token 258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26277604699134827
    2. '0' → logprob: -1.5127760171890259
    3. '('' → logprob: -5.137775897979736
    4. '("' → logprob: -5.762775897979736
    5. '"' → logprob: -6.887775897979736
    6. ''' → logprob: -8.512776374816895
    7. '()' → logprob: -8.512776374816895
    8. '())' → logprob: -9.512776374816895
    9. '().' → logprob: -9.887776374816895
    10. ' ' → logprob: -10.387776374816895

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10609468072652817
    2. '"' → logprob: -2.4810945987701416
    3. ''' → logprob: -4.481094837188721
    4. '"/' → logprob: -5.481094837188721
    5. ''/' → logprob: -6.981094837188721
    6. '(' → logprob: -8.106094360351562
    7. ' ' → logprob: -8.606094360351562
    8. '"./' → logprob: -9.606094360351562
    9. ' "' → logprob: -11.356094360351562
    10. '/' → logprob: -12.106094360351562

Token 260: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.003371511586010456
    2. ')))' → logprob: -5.753371715545654
    3. '().' → logprob: -9.753371238708496
    4. ')' → logprob: -9.878371238708496
    5. '()).' → logprob: -10.253371238708496
    6. ')).' → logprob: -11.128371238708496
    7. ' ).' → logprob: -11.753371238708496
    8. '))' → logprob: -12.003371238708496
    9. ' ' → logprob: -12.128371238708496
    10. '.readlines' → logprob: -12.503371238708496

Token 261: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -6.704273118884885e-07
    2. ' read' → logprob: -14.625000953674316
    3. '.read' → logprob: -16.5
    4. '.readlines' → logprob: -16.75
    5. ')' → logprob: -18.875
    6. '	read' → logprob: -19.0
    7. '```' → logprob: -19.625
    8. ' ' → logprob: -19.875
    9. '   ' → logprob: -19.875
    10. '(read' → logprob: -19.875

Token 262: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011975488450843841
    2. '()' → logprob: -9.625120162963867
    3. 'lines' → logprob: -10.125120162963867
    4. '_lines' → logprob: -11.375120162963867
    5. 'line' → logprob: -14.125120162963867
    6. '_text' → logprob: -14.375120162963867
    7. ' ().' → logprob: -15.750120162963867
    8. ' lines' → logprob: -15.875120162963867
    9. '_line' → logprob: -16.625120162963867
    10. '(' → logprob: -16.750120162963867

Token 263: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.029995189979672432
    2. 'split' → logprob: -3.5299952030181885
    3. 'rstrip' → logprob: -8.65499496459961
    4. '().' → logprob: -10.40499496459961
    5. 'read' → logprob: -10.65499496459961
    6. ' strip' → logprob: -11.65499496459961
    7. ' split' → logprob: -12.15499496459961
    8. 'decode' → logprob: -13.65499496459961
    9. '.strip' → logprob: -14.02999496459961
    10. '()' → logprob: -15.65499496459961

Token 264: 'lines' (ID: 10105)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.36886659264564514
    2. 'lines' → logprob: -1.9938665628433228
    3. '()))' → logprob: -2.2438666820526123
    4. '()' → logprob: -2.7438666820526123
    5. ')))' → logprob: -6.868866443634033
    6. '())))
' → logprob: -7.493866443634033
    7. 'line' → logprob: -8.993866920471191
    8. '('\' → logprob: -9.243866920471191
    9. '()]' → logprob: -10.493866920471191
    10. '())' → logprob: -10.868866920471191

Token 265: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.03231605514883995
    2. '()' → logprob: -3.532315969467163
    3. '()))' → logprob: -6.282316207885742
    4. '())))
' → logprob: -7.657316207885742
    5. '()[' → logprob: -9.157316207885742
    6. '())' → logprob: -9.907316207885742
    7. ')))' → logprob: -10.782316207885742
    8. '(),' → logprob: -11.157316207885742
    9. '()
' → logprob: -11.657316207885742
    10. '()]' → logprob: -11.907316207885742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 263
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 42.97%
Précision adaptée (1ère position): 47.91%
Précision (top 10): 86.31%
================================================================================
