================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
import itertools as it

d,g=[int(x) for x in input().split()]
arr=[]
i=0
while i<d:
    arr+=[list(map(int,input().split()))]
    i+=1

ans=1e10
for bits in it.product([0,1],repeat=d):
    score,num=0,0
    idx=None
    def add(x,y):
        return x+y
    for n in range(d):
        if bits[n]:
            tmp=(n+1)*100*arr[n][0]
            b=arr[n][1]
            score=add(score,tmp+b)
            num+=arr[n][0]
        else:
            idx=n if idx is None or n>idx else idx
    # POO
    class X:pass
    x=X();x.value=ans
    if score>=g:
        x.value=min(x.value,num)
    elif idx is not None:
        m=arr[idx][0]-1
        mx=(idx+1)*100*m
        left=g-score
        if left<=mx:
            k=-(-(left)//(100*(idx+1)))
            num+=k
            x.value=min(x.value,num)
    ans=x.value
print(int(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6588930487632751
    2. ' math' → logprob: -1.15889310836792
    3. ' operator' → logprob: -1.90889310836792
    4. ' itertools' → logprob: -4.40889310836792
    5. ' sys' → logprob: -5.53389310836792
    6. ' functools' → logprob: -6.53389310836792
    7. ' collections' → logprob: -6.65889310836792
    8. 'operator' → logprob: -7.28389310836792
    9. 'math' → logprob: -8.158892631530762
    10. ' re' → logprob: -8.408892631530762

Token 7: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.052765458822250366
    2. '(' → logprob: -4.427765369415283
    3. '\' → logprob: -4.427765369415283
    4. ',' → logprob: -5.052765369415283
    5. '_' → logprob: -5.552765369415283
    6. 'import' → logprob: -5.802765369415283
    7. '(
' → logprob: -6.177765369415283
    8. 'def' → logprob: -6.302765369415283
    9. '
' → logprob: -6.302765369415283
    10. '```' → logprob: -6.302765369415283

Token 8: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5769837498664856
    2. ' it' → logprob: -0.8269837498664856
    3. ' ' → logprob: -8.326983451843262
    4. 'It' → logprob: -8.326983451843262
    5. ' itt' → logprob: -9.201983451843262
    6. 'itl' → logprob: -9.576983451843262
    7. '```' → logprob: -9.701983451843262
    8. '_it' → logprob: -10.076983451843262
    9. '    ' → logprob: -10.201983451843262
    10. '1' → logprob: -10.201983451843262

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007202956476248801
    2. '\' → logprob: -7.875720500946045
    3. ',' → logprob: -8.625720024108887
    4. '_' → logprob: -10.250720024108887
    5. '.
' → logprob: -10.625720024108887
    6. '.

' → logprob: -10.875720024108887
    7. 'import' → logprob: -11.250720024108887
    8. '\n' → logprob: -11.250720024108887
    9. '\.' → logprob: -11.625720024108887
    10. '#' → logprob: -12.625720024108887

Token 10: 'd' (ID: 67)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01836649514734745
    2. '_' → logprob: -4.64336633682251
    3. '(' → logprob: -5.76836633682251
    4. ',' → logprob: -6.51836633682251
    5. 'def' → logprob: -6.51836633682251
    6. '\' → logprob: -7.39336633682251
    7. '#' → logprob: -8.393366813659668
    8. ')' → logprob: -8.518366813659668
    9. '`' → logprob: -8.518366813659668
    10. '.reduce' → logprob: -8.768366813659668

Token 11: ',g' (ID: 44461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9308996200561523
    2. ' =' → logprob: -1.6808996200561523
    3. 'ata' → logprob: -2.5558996200561523
    4. '=' → logprob: -2.5558996200561523
    5. 'a' → logprob: -2.9308996200561523
    6. '[' → logprob: -2.9308996200561523
    7. '.' → logprob: -3.1808996200561523
    8. 'ict' → logprob: -3.4308996200561523
    9. 'ictionary' → logprob: -3.4308996200561523
    10. 'e' → logprob: -4.180899620056152

Token 12: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07380957901477814
    2. '.' → logprob: -3.1988096237182617
    3. ',' → logprob: -4.073809623718262
    4. ' =' → logprob: -4.698809623718262
    5. 'e' → logprob: -6.573809623718262
    6. '[' → logprob: -7.323809623718262
    7. 'u' → logprob: -8.073809623718262
    8. ',e' → logprob: -8.073809623718262
    9. 'et' → logprob: -8.198809623718262
    10. '.=' → logprob: -8.323809623718262

Token 13: 'int' (ID: 491)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.190838098526001
    2. '0' → logprob: -1.315838098526001
    3. '1' → logprob: -1.815838098526001
    4. '{' → logprob: -2.565838098526001
    5. '{},' → logprob: -2.940838098526001
    6. '[]' → logprob: -3.190838098526001
    7. '[' → logprob: -3.690838098526001
    8. '[],' → logprob: -4.315837860107422
    9. ']' → logprob: -4.690837860107422
    10. '{'' → logprob: -4.815837860107422

Token 14: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5690257549285889
    2. '(x' → logprob: -1.1940257549285889
    3. '(i' → logprob: -2.194025754928589
    4. '(s' → logprob: -4.319025993347168
    5. ']' → logprob: -6.319025993347168
    6. '('' → logprob: -6.444025993347168
    7. '(a' → logprob: -7.069025993347168
    8. '(n' → logprob: -8.194025993347168
    9. ',' → logprob: -8.444025993347168
    10. '("' → logprob: -9.069025993347168

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. '(x' → logprob: -12.625009536743164
    3. 'for' → logprob: -13.875009536743164
    4. '')' → logprob: -14.125009536743164
    5. '))' → logprob: -14.500009536743164
    6. ')d' → logprob: -14.500009536743164
    7. ')]' → logprob: -14.750009536743164
    8. '())' → logprob: -15.000009536743164
    9. '),' → logprob: -15.250009536743164
    10. ')x' → logprob: -15.375009536743164

Token 16: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19617240130901337
    2. ' for' → logprob: -2.1961724758148193
    3. ')' → logprob: -2.8211724758148193
    4. '(' → logprob: -5.32117223739624
    5. '(x' → logprob: -6.19617223739624
    6. ' ' → logprob: -8.821172714233398
    7. ',' → logprob: -9.696172714233398
    8. ']' → logprob: -9.946172714233398
    9. '  ' → logprob: -11.071172714233398
    10. '<|end|>' → logprob: -11.196172714233398

Token 17: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.011371415108442307
    2. ' x' → logprob: -5.136371612548828
    3. 'input' → logprob: -5.261371612548828
    4. ' raw' → logprob: -9.511371612548828
    5. ' range' → logprob: -9.886371612548828
    6. 'x' → logprob: -10.386371612548828
    7. ' d' → logprob: -10.386371612548828
    8. ' open' → logprob: -10.761371612548828
    9. ' in' → logprob: -11.886371612548828
    10. ' ' → logprob: -12.011371612548828

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035693831741809845
    2. 'input' → logprob: -4.160693645477295
    3. ' input' → logprob: -4.660693645477295
    4. 'in' → logprob: -4.660693645477295
    5. '=input' → logprob: -7.785693645477295
    6. 'd' → logprob: -9.785694122314453
    7. 'raw' → logprob: -10.660694122314453
    8. ' d' → logprob: -11.160694122314453
    9. ' raw' → logprob: -11.910694122314453
    10. ' ' → logprob: -12.160694122314453

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38703811168670654
    2. ' input' → logprob: -1.1370381116867065
    3. ''' → logprob: -10.387038230895996
    4. 'range' → logprob: -10.387038230895996
    5. '(input' → logprob: -10.637038230895996
    6. ' iter' → logprob: -11.512038230895996
    7. 'open' → logprob: -11.762038230895996
    8. ' range' → logprob: -11.762038230895996
    9. ' ' → logprob: -11.887038230895996
    10. 'raw' → logprob: -11.887038230895996

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04375985637307167
    2. '()' → logprob: -3.543759822845459
    3. '()]' → logprob: -4.293759822845459
    4. '(' → logprob: -9.043760299682617
    5. '('' → logprob: -9.918760299682617
    6. '())' → logprob: -10.668760299682617
    7. '()].' → logprob: -10.793760299682617
    8. '()>' → logprob: -11.418760299682617
    9. '()[' → logprob: -12.043760299682617
    10. '()][' → logprob: -12.168760299682617

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032724218908697367
    2. 'strip' → logprob: -5.753272533416748
    3. ' split' → logprob: -9.75327205657959
    4. 'rstrip' → logprob: -10.25327205657959
    5. 'spl' → logprob: -14.50327205657959
    6. ' strip' → logprob: -15.00327205657959
    7. '(split' → logprob: -15.62827205657959
    8. 'read' → logprob: -15.75327205657959
    9. ' ' → logprob: -16.628273010253906
    10. 'replace' → logprob: -16.753273010253906

Token 22: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.018741419538855553
    2. '())' → logprob: -4.768741607666016
    3. '('' → logprob: -5.143741607666016
    4. '()' → logprob: -5.893741607666016
    5. '(' → logprob: -7.018741607666016
    6. ')]' → logprob: -7.643741607666016
    7. ']' → logprob: -10.393741607666016
    8. '()],' → logprob: -10.768741607666016
    9. '("' → logprob: -10.893741607666016
    10. '')]' → logprob: -11.518741607666016

Token 23: 'arr' (ID: 1614)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6107797622680664
    2. '<|end|>' → logprob: -1.8607797622680664
    3. ' 
' → logprob: -2.8607797622680664
    4. 'n' → logprob: -3.1107797622680664
    5. '
' → logprob: -3.6107797622680664
    6. 'for' → logprob: -3.7357797622680664
    7. ')' → logprob: -4.235779762268066
    8. 'a' → logprob: -4.360779762268066
    9. 's' → logprob: -4.485779762268066
    10. 'data' → logprob: -4.610779762268066

Token 24: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4268679916858673
    2. '[' → logprob: -1.426867961883545
    3. ' =' → logprob: -2.301867961883545
    4. '[:]' → logprob: -6.051867961883545
    5. '[:' → logprob: -6.676867961883545
    6. '=[]' → logprob: -6.801867961883545
    7. '=[' → logprob: -7.301867961883545
    8. 's' → logprob: -7.551867961883545
    9. ']' → logprob: -8.801868438720703
    10. ',' → logprob: -9.051868438720703

Token 25: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012046386254951358
    2. ' for' → logprob: -6.751204490661621
    3. '[' → logprob: -11.001204490661621
    4. '```' → logprob: -12.626204490661621
    5. 'f' → logprob: -12.751204490661621
    6. '_' → logprob: -12.876204490661621
    7. '
' → logprob: -13.376204490661621
    8. '\n' → logprob: -13.376204490661621
    9. 'n' → logprob: -13.501204490661621
    10. '`' → logprob: -13.876204490661621

Token 26: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12763524055480957
    2. ' =' → logprob: -2.1276352405548096
    3. 'n' → logprob: -7.3776350021362305
    4. 'nt' → logprob: -10.12763500213623
    5. ' ' → logprob: -11.12763500213623
    6. 'x' → logprob: -12.62763500213623
    7. ' +=' → logprob: -13.00263500213623
    8. '=n' → logprob: -13.00263500213623
    9. '+=' → logprob: -13.00263500213623
    10. 's' → logprob: -13.12763500213623

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005773392622359097
    2. ' ' → logprob: -7.500577449798584
    3. '1' → logprob: -10.750576972961426
    4. 'd' → logprob: -12.875576972961426
    5. 'i' → logprob: -17.000577926635742
    6. '2' → logprob: -17.250577926635742
    7. '4' → logprob: -17.438077926635742
    8. 'n' → logprob: -17.750577926635742
    9. ' d' → logprob: -17.938077926635742
    10. '[' → logprob: -18.063077926635742

Token 28: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4753757119178772
    2. ' while' → logprob: -0.9753757119178772
    3. '	while' → logprob: -8.22537612915039
    4. '<|end|>' → logprob: -8.35037612915039
    5. ' ' → logprob: -8.60037612915039
    6. '
' → logprob: -8.97537612915039
    7. ':' → logprob: -9.22537612915039
    8. 'While' → logprob: -9.60037612915039
    9. '\n' → logprob: -9.72537612915039
    10. '\' → logprob: -9.72537612915039

Token 29: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4306474030017853
    2. 'while' → logprob: -1.055647373199463
    3. '<|end|>' → logprob: -6.805647373199463
    4. ' ' → logprob: -8.555647850036621
    5. '	while' → logprob: -8.805647850036621
    6. '
' → logprob: -8.805647850036621
    7. ' While' → logprob: -9.555647850036621
    8. ' 
' → logprob: -10.055647850036621
    9. 'w' → logprob: -10.180647850036621
    10. 'While' → logprob: -10.430647850036621

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02975870668888092
    2. 'i' → logprob: -3.5297586917877197
    3. ' ' → logprob: -12.27975845336914
    4. '(i' → logprob: -13.15475845336914
    5. '	i' → logprob: -13.65475845336914
    6. ' True' → logprob: -16.27975845336914
    7. ' d' → logprob: -16.40475845336914
    8. '<i' → logprob: -16.52975845336914
    9. ' ' → logprob: -16.77975845336914
    10. 'd' → logprob: -16.90475845336914

Token 31: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07914556562900543
    2. ' <' → logprob: -2.579145669937134
    3. ' ' → logprob: -9.079145431518555
    4. '<len' → logprob: -9.704145431518555
    5. '<=' → logprob: -9.954145431518555
    6. 'd' → logprob: -11.329145431518555
    7. '<n' → logprob: -11.579145431518555
    8. ' <=' → logprob: -12.204145431518555
    9. ' d' → logprob: -13.829145431518555
    10. ' less' → logprob: -14.204145431518555

Token 32: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029270516708493233
    2. ' d' → logprob: -3.7792704105377197
    3. 'g' → logprob: -5.154270648956299
    4. ' g' → logprob: -8.52927017211914
    5. ' ' → logprob: -10.40427017211914
    6. 'len' → logprob: -13.27927017211914
    7. ' len' → logprob: -14.15427017211914
    8. '  ' → logprob: -14.65427017211914
    9. 'n' → logprob: -15.02927017211914
    10. '   ' → logprob: -15.65427017211914

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011195420287549496
    2. ' :' → logprob: -4.636195182800293
    3. '   ' → logprob: -7.261195182800293
    4. ':
' → logprob: -7.636195182800293
    5. ' ' → logprob: -9.636195182800293
    6. '+' → logprob: -9.886195182800293
    7. ' :
' → logprob: -10.761195182800293
    8. '[' → logprob: -11.261195182800293
    9. '):' → logprob: -11.386195182800293
    10. '[i' → logprob: -11.636195182800293

Token 34: '   ' (ID: 271)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.09044021368026733
    2. ' 
' → logprob: -2.715440273284912
    3. '     
' → logprob: -5.340440273284912
    4. 'arr' → logprob: -5.590440273284912
    5. '	arr' → logprob: -5.715440273284912
    6. ' ' → logprob: -6.340440273284912
    7. '   ' → logprob: -6.840440273284912
    8. ' i' → logprob: -7.090440273284912
    9. '[arr' → logprob: -7.090440273284912
    10. '    ' → logprob: -7.340440273284912

Token 35: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.16881775856018066
    2. 'arr' (adapté à ' arr') → logprob: -1.9188177585601807
    3. ' n' → logprob: -6.293817520141602
    4. 'n' → logprob: -6.918817520141602
    5. ' s' → logprob: -7.168817520141602
    6. ' data' → logprob: -7.168817520141602
    7. '   ' → logprob: -7.293817520141602
    8. ' a' → logprob: -7.293817520141602
    9. 'data' → logprob: -7.918817520141602
    10. 's' → logprob: -7.918817520141602

Token 36: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013849065639078617
    2. '.' → logprob: -4.638849258422852
    3. '.extend' → logprob: -5.513849258422852
    4. '.ap' → logprob: -11.013849258422852
    5. '+=' → logprob: -11.138849258422852
    6. '.app' → logprob: -11.638849258422852
    7. '.=' → logprob: -12.263849258422852
    8. '=' → logprob: -12.388849258422852
    9. ' +=' → logprob: -13.763849258422852
    10. '+.' → logprob: -14.138849258422852

Token 37: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048755522817373276
    2. '=[' → logprob: -3.298755407333374
    3. '=input' → logprob: -5.048755645751953
    4. '=list' → logprob: -5.923755645751953
    5. '[' → logprob: -7.048755645751953
    6. '.append' → logprob: -8.548755645751953
    7. '=int' → logprob: -8.798755645751953
    8. '=[]' → logprob: -9.673755645751953
    9. ' =' → logprob: -9.923755645751953
    10. '[input' → logprob: -10.173755645751953

Token 38: 'list' (ID: 2641)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.40695318579673767
    2. 'int' → logprob: -1.65695321559906
    3. 'list' → logprob: -2.0319530963897705
    4. '[' → logprob: -4.78195333480835
    5. '[list' → logprob: -6.03195333480835
    6. 'tuple' → logprob: -7.53195333480835
    7. '[*' → logprob: -7.78195333480835
    8. '[input' → logprob: -8.656952857971191
    9. 'input' → logprob: -9.031952857971191
    10. ' [' → logprob: -9.156952857971191

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00018411019118502736
    2. '(' → logprob: -8.875184059143066
    3. '(int' → logprob: -10.125184059143066
    4. '(input' → logprob: -12.625184059143066
    5. 'map' → logprob: -15.125184059143066
    6. '(
' → logprob: -15.375184059143066
    7. '(range' → logprob: -15.750184059143066
    8. ' map' → logprob: -16.500185012817383
    9. '()' → logprob: -16.875185012817383
    10. '	map' → logprob: -16.875185012817383

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.478889215737581e-05
    2. '(' → logprob: -11.000054359436035
    3. 'int' → logprob: -11.250054359436035
    4. ',int' → logprob: -11.500054359436035
    5. '<int' → logprob: -12.250054359436035
    6. ']int' → logprob: -12.625054359436035
    7. '=int' → logprob: -12.875054359436035
    8. ')' → logprob: -13.250054359436035
    9. '(lambda' → logprob: -14.000054359436035
    10. '[int' → logprob: -15.125054359436035

Token 41: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.14635947346687317
    2. ',input' → logprob: -2.021359443664551
    3. ',' → logprob: -6.146359443664551
    4. '(' → logprob: -7.146359443664551
    5. 'input' → logprob: -7.271359443664551
    6. ' input' → logprob: -10.77135944366455
    7. ' (' → logprob: -11.27135944366455
    8. '=input' → logprob: -12.39635944366455
    9. '```' → logprob: -12.52135944366455
    10. '(
' → logprob: -12.77135944366455

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.232493564719334e-05
    2. '()' → logprob: -9.625082015991211
    3. ' ().' → logprob: -11.625082015991211
    4. '.' → logprob: -13.000082015991211
    5. '()))' → logprob: -13.875082015991211
    6. ')' → logprob: -14.000082015991211
    7. '(' → logprob: -14.625082015991211
    8. '))' → logprob: -14.625082015991211
    9. ' ' → logprob: -14.750082015991211
    10. '.readline' → logprob: -15.000082015991211

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00023476807109545916
    2. 'strip' → logprob: -8.500234603881836
    3. ' split' → logprob: -10.625234603881836
    4. 'rstrip' → logprob: -12.000234603881836
    5. '(split' → logprob: -14.125234603881836
    6. 'spl' → logprob: -17.125234603881836
    7. ' ' → logprob: -18.125234603881836
    8. '.split' → logprob: -18.500234603881836
    9. 'read' → logprob: -18.750234603881836
    10. ' strip' → logprob: -19.125234603881836

Token 44: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.001331190811470151
    2. '()' → logprob: -7.501331329345703
    3. '))' → logprob: -8.001331329345703
    4. '())' → logprob: -8.126331329345703
    5. '()))
' → logprob: -9.626331329345703
    6. '())))' → logprob: -10.251331329345703
    7. '(' → logprob: -10.376331329345703
    8. '()));' → logprob: -12.501331329345703
    9. '()
' → logprob: -12.876331329345703
    10. '())))
' → logprob: -13.376331329345703

Token 45: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7262240648269653
    2. ')]' → logprob: -1.3512240648269653
    3. ')]
' → logprob: -1.8512240648269653
    4. ')
' → logprob: -2.351223945617676
    5. ')]
' → logprob: -6.476223945617676
    6. ']' → logprob: -6.851223945617676
    7. ']
' → logprob: -6.976223945617676
    8. ')
' → logprob: -7.726223945617676
    9. '   ' → logprob: -8.476223945617676
    10. ')])' → logprob: -8.601223945617676

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6102592349052429
    2. '
' → logprob: -0.8602592349052429
    3. 'i' → logprob: -4.235259056091309
    4. '    
' → logprob: -5.360259056091309
    5. '	i' → logprob: -5.860259056091309
    6. ' i' → logprob: -5.985259056091309
    7. '[i' → logprob: -6.110259056091309
    8. '```' → logprob: -6.485259056091309
    9. '\n' → logprob: -6.735259056091309
    10. '  
' → logprob: -6.985259056091309

Token 47: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.043067704886198044
    2. '
' → logprob: -3.668067693710327
    3. '   ' → logprob: -4.418067932128906
    4. ' i' → logprob: -5.918067932128906
    5. '\n' → logprob: -7.168067932128906
    6. '	i' → logprob: -7.168067932128906
    7. '[i' → logprob: -9.668067932128906
    8. '    
' → logprob: -9.918067932128906
    9. '\' → logprob: -9.918067932128906
    10. '```' → logprob: -10.293067932128906

Token 48: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008398021571338177
    2. '+=' → logprob: -4.883398056030273
    3. '++' → logprob: -7.508398056030273
    4. ' +=' → logprob: -8.508398056030273
    5. '+++' → logprob: -11.008398056030273
    6. ' +' → logprob: -11.008398056030273
    7. '<|end|>' → logprob: -13.008398056030273
    8. ' ' → logprob: -13.633398056030273
    9. '+='' → logprob: -13.758398056030273
    10. '1' → logprob: -13.883398056030273

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -19.000001907348633
    5. '+' → logprob: -20.250001907348633
    6. '0' → logprob: -20.312501907348633
    7. '`' → logprob: -20.687501907348633
    8. 'd' → logprob: -20.937501907348633
    9. '۱' → logprob: -21.062501907348633
    10. '１' → logprob: -21.187501907348633

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018568359315395355
    2. ' 
' → logprob: -5.643568515777588
    3. 'n' → logprob: -5.768568515777588
    4. '
' → logprob: -6.393568515777588
    5. '\n' → logprob: -6.518568515777588
    6. '  
' → logprob: -6.518568515777588
    7. 'for' → logprob: -6.768568515777588
    8. 'while' → logprob: -6.893568515777588
    9. 'arr' → logprob: -7.018568515777588
    10. 's' → logprob: -7.518568515777588

Token 51: 'ans' (ID: 616)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.13154935836792
    2. 'max' → logprob: -1.13154935836792
    3. 'for' → logprob: -3.00654935836792
    4. 'res' → logprob: -3.25654935836792
    5. 'b' → logprob: -3.38154935836792
    6. 'k' → logprob: -3.50654935836792
    7. 'r' → logprob: -3.88154935836792
    8. 's' → logprob: -3.88154935836792
    9. 'mx' → logprob: -3.88154935836792
    10. 'c' → logprob: -4.13154935836792

Token 52: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1321600377559662
    2. ' =' → logprob: -2.132159948348999
    3. '=[]' → logprob: -5.382160186767578
    4. '=[' → logprob: -7.882160186767578
    5. ',' → logprob: -10.007160186767578
    6. '={}' → logprob: -10.132160186767578
    7. '=int' → logprob: -10.507160186767578
    8. '=list' → logprob: -10.757160186767578
    9. '=max' → logprob: -11.007160186767578
    10. '=sum' → logprob: -11.007160186767578

Token 53: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41185227036476135
    2. 'reduce' → logprob: -1.786852240562439
    3. 'max' → logprob: -2.2868523597717285
    4. 'list' → logprob: -4.0368523597717285
    5. 'float' → logprob: -4.1618523597717285
    6. '-' → logprob: -4.7868523597717285
    7. 'it' → logprob: -4.9118523597717285
    8. '[]' → logprob: -5.2868523597717285
    9. 'min' → logprob: -5.4118523597717285
    10. '1' → logprob: -6.0368523597717285

Token 54: 'e' (ID: 68)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46963146328926086
    2. 'for' → logprob: -1.0946314334869385
    3. '
' → logprob: -3.4696314334869385
    4. '0' → logprob: -5.844631671905518
    5. ' ' → logprob: -6.344631671905518
    6. ' 
' → logprob: -6.719631671905518
    7. ',' → logprob: -7.469631671905518
    8. 'while' → logprob: -7.719631671905518
    9. ' while' → logprob: -7.969631671905518
    10. '```' → logprob: -8.59463119506836

Token 55: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09748208522796631
    2. '-' → logprob: -2.722482204437256
    3. '18' → logprob: -4.347482204437256
    4. '8' → logprob: -5.472482204437256
    5. '+' → logprob: -5.847482204437256
    6. '7' → logprob: -6.222482204437256
    7. '10' → logprob: -6.347482204437256
    8. '6' → logprob: -6.847482204437256
    9. '12' → logprob: -7.222482204437256
    10. '15' → logprob: -7.347482204437256

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6773321628570557
    2. ' 
' → logprob: -1.0523321628570557
    3. 'for' → logprob: -3.1773321628570557
    4. '<|end|>' → logprob: -3.1773321628570557
    5. ' ' → logprob: -3.3023321628570557
    6. ' for' → logprob: -4.427331924438477
    7. '  
' → logprob: -5.552331924438477
    8. '\n' → logprob: -6.052331924438477
    9. '' → logprob: -6.177331924438477
    10. '\' → logprob: -7.052331924438477

Token 57: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016256878152489662
    2. ' for' → logprob: -4.141256809234619
    3. '
' → logprob: -8.766257286071777
    4. '\n' → logprob: -10.266257286071777
    5. '\' → logprob: -11.766257286071777
    6. '```' → logprob: -12.766257286071777
    7. 'd' → logprob: -12.891257286071777
    8. ' 
' → logprob: -13.016257286071777
    9. 'r' → logprob: -13.141257286071777
    10. 'a' → logprob: -13.516257286071777

Token 58: ' bits' (ID: 18189)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -1.3461230993270874
    2. ' s' → logprob: -1.9711230993270874
    3. ' mask' → logprob: -1.9711230993270874
    4. ' i' → logprob: -2.471123218536377
    5. ' x' → logprob: -2.971123218536377
    6. ' comb' → logprob: -3.221123218536377
    7. ' combo' → logprob: -3.346123218536377
    8. ' j' → logprob: -3.596123218536377
    9. ' sub' → logprob: -3.721123218536377
    10. ' _' → logprob: -3.971123218536377

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007673114072531462
    2. 'in' → logprob: -4.882673263549805
    3. ' ' → logprob: -10.132673263549805
    4. '   ' → logprob: -11.507673263549805
    5. ' i' → logprob: -12.632673263549805
    6. '	in' → logprob: -12.757673263549805
    7. '  ' → logprob: -13.007673263549805
    8. ',' → logprob: -13.007673263549805
    9. 's' → logprob: -13.257673263549805
    10. ' _' → logprob: -14.132673263549805

Token 60: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.057796936482191086
    2. ' range' → logprob: -3.0577969551086426
    3. 'it' → logprob: -4.807796955108643
    4. 'range' → logprob: -6.932796955108643
    5. ' ' → logprob: -10.807796478271484
    6. '	it' → logprob: -12.682796478271484
    7. ' itertools' → logprob: -14.557796478271484
    8. '(it' → logprob: -14.557796478271484
    9. '  ' → logprob: -14.807796478271484
    10. '   ' → logprob: -15.057796478271484

Token 61: '.product' (ID: 21166)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.3939209580421448
    2. '.product' → logprob: -1.2689208984375
    3. '.chain' → logprob: -3.8939208984375
    4. 'ertools' → logprob: -4.1439208984375
    5. '.' → logprob: -5.2689208984375
    6. '.per' → logprob: -7.0189208984375
    7. ' .' → logprob: -7.2689208984375
    8. '.acc' → logprob: -8.2689208984375
    9. '.p' → logprob: -8.7689208984375
    10. 'er' → logprob: -8.8939208984375

Token 62: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.005692353937774897
    2. '(range' → logprob: -5.380692481994629
    3. '((' → logprob: -6.880692481994629
    4. '(' → logprob: -10.255692481994629
    5. '(([' → logprob: -12.380692481994629
    6. ' ([' → logprob: -13.255692481994629
    7. '({' → logprob: -13.380692481994629
    8. '(['' → logprob: -14.380692481994629
    9. '[' → logprob: -15.505692481994629
    10. ' (' → logprob: -16.005691528320312

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025907461531460285
    2. ' ' → logprob: -8.625259399414062
    3. 'False' → logprob: -10.125259399414062
    4. 'True' → logprob: -11.000259399414062
    5. '-' → logprob: -11.125259399414062
    6. '   ' → logprob: -12.125259399414062
    7. ' False' → logprob: -14.250259399414062
    8. ' True' → logprob: -14.250259399414062
    9. '1' → logprob: -14.875259399414062
    10. '  ' → logprob: -15.250259399414062

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8802491215174086e-05
    2. ' ,' → logprob: -10.500028610229492
    3. '1' → logprob: -13.750028610229492
    4. ',
' → logprob: -16.000028610229492
    5. ' ' → logprob: -17.000028610229492
    6. ',

' → logprob: -18.375028610229492
    7. '2' → logprob: -18.375028610229492
    8. '

' → logprob: -19.250028610229492
    9. '‌,' → logprob: -19.750028610229492
    10. '],' → logprob: -19.875028610229492

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018155092373490334
    2. ' ' → logprob: -4.018155097961426
    3. ',' → logprob: -13.580655097961426
    4. '   ' → logprob: -14.205655097961426
    5. '2' → logprob: -14.268155097961426
    6. '0' → logprob: -14.705655097961426
    7. '  ' → logprob: -15.018155097961426
    8. '-' → logprob: -15.143155097961426
    9. '9' → logprob: -15.330655097961426
    10. ' -' → logprob: -15.643155097961426

Token 66: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0003625177196227014
    2. ']' → logprob: -8.125362396240234
    3. '],[' → logprob: -10.750362396240234
    4. ' ],' → logprob: -11.250362396240234
    5. '])' → logprob: -11.750362396240234
    6. '],'' → logprob: -11.875362396240234
    7. ''],' → logprob: -12.000362396240234
    8. '),' → logprob: -12.750362396240234
    9. '"],' → logprob: -13.500362396240234
    10. '],"' → logprob: -13.750362396240234

Token 67: 'repeat' (ID: 63242)
  Prédit: ' repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.31360527873039246
    2. 'repeat' → logprob: -1.3136053085327148
    3. ' range' → logprob: -8.438605308532715
    4. 'range' → logprob: -9.063605308532715
    5. ' ' → logprob: -12.938605308532715
    6. 'arr' → logprob: -13.188605308532715
    7. '   ' → logprob: -13.438605308532715
    8. ' arr' → logprob: -14.063605308532715
    9. '  ' → logprob: -14.188605308532715
    10. '    ' → logprob: -14.563605308532715

Token 68: '=d' (ID: 56413)
  Prédit: '=g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=g' → logprob: -0.11212953925132751
    2. '=d' → logprob: -2.8621294498443604
    3. ' g' → logprob: -3.6121294498443604
    4. '=' → logprob: -4.2371296882629395
    5. ' d' → logprob: -5.4871296882629395
    6. 'g' → logprob: -6.1121296882629395
    7. 'd' → logprob: -7.1121296882629395
    8. ')' → logprob: -9.237129211425781
    9. '=len' → logprob: -9.987129211425781
    10. ' ' → logprob: -10.112129211425781

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002933942887466401
    2. ')' → logprob: -8.875293731689453
    3. '):
' → logprob: -9.375293731689453
    4. ' ):' → logprob: -9.875293731689453
    5. ':' → logprob: -11.125293731689453
    6. '):
' → logprob: -14.375293731689453
    7. '}:' → logprob: -15.000293731689453
    8. ''):' → logprob: -15.250293731689453
    9. ',' → logprob: -15.375293731689453
    10. ']:' → logprob: -15.750293731689453

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5996899008750916
    2. ':' → logprob: -0.8496899008750916
    3. ' ' → logprob: -4.849689960479736
    4. '<|end|>' → logprob: -4.974689960479736
    5. ' :' → logprob: -6.099689960479736
    6. ':
' → logprob: -6.224689960479736
    7. ',' → logprob: -6.599689960479736
    8. '    
' → logprob: -7.224689960479736
    9. '
' → logprob: -7.974689960479736
    10. '    ' → logprob: -8.099689483642578

Token 71: ' score' (ID: 8429)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6407564878463745
    2. '   ' → logprob: -1.7657564878463745
    3. ' val' → logprob: -2.390756607055664
    4. ' sum' → logprob: -3.890756607055664
    5. 's' → logprob: -4.015756607055664
    6. ' total' → logprob: -4.015756607055664
    7. ' subset' → logprob: -4.140756607055664
    8. '    ' → logprob: -4.265756607055664
    9. ' ' → logprob: -4.640756607055664
    10. ' res' → logprob: -4.765756607055664

Token 72: ',num' (ID: 78576)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1414802074432373
    2. ' =' → logprob: -2.1414802074432373
    3. 's' → logprob: -4.266480445861816
    4. '=sum' → logprob: -8.516480445861816
    5. '_=' → logprob: -9.766480445861816
    6. '=s' → logprob: -10.016480445861816
    7. ' ' → logprob: -10.641480445861816
    8. '_' → logprob: -10.891480445861816
    9. '=[]' → logprob: -10.891480445861816
    10. ',' → logprob: -11.641480445861816

Token 73: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009167898446321487
    2. '=[' → logprob: -6.509167671203613
    3. '_=' → logprob: -6.634167671203613
    4. '=[]' → logprob: -7.009167671203613
    5. ' =' → logprob: -7.509167671203613
    6. '_' → logprob: -7.509167671203613
    7. 's' → logprob: -7.509167671203613
    8. '=_' → logprob: -7.884167671203613
    9. '_groups' → logprob: -8.009167671203613
    10. '_selected' → logprob: -8.259167671203613

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01876036450266838
    2. '1' → logprob: -4.3937602043151855
    3. '[' → logprob: -5.5187602043151855
    4. '(' → logprob: -6.8937602043151855
    5. ' ' → logprob: -6.8937602043151855
    6. '[],' → logprob: -9.893760681152344
    7. 'ans' → logprob: -10.018760681152344
    8. 'arr' → logprob: -10.768760681152344
    9. ' [' → logprob: -11.143760681152344
    10. '   ' → logprob: -11.643760681152344

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27671948075294495
    2. '=' → logprob: -1.6517194509506226
    3. ' =' → logprob: -3.901719570159912
    4. ' ' → logprob: -4.651719570159912
    5. '   ' → logprob: -5.026719570159912
    6. '0' → logprob: -5.276719570159912
    7. ')' → logprob: -6.276719570159912
    8. '    ' → logprob: -6.901719570159912
    9. '1' → logprob: -7.026719570159912
    10. '<|end|>' → logprob: -7.526719570159912

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25006717443466187
    2. '1' → logprob: -1.6250672340393066
    3. '[]' → logprob: -3.8750672340393066
    4. '[' → logprob: -6.250067234039307
    5. 'ans' → logprob: -7.750067234039307
    6. ' ' → logprob: -8.500066757202148
    7. 'd' → logprob: -8.500066757202148
    8. '{}' → logprob: -9.000066757202148
    9. '-' → logprob: -9.250066757202148
    10. 'sum' → logprob: -9.250066757202148

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10299572348594666
    2. '
' → logprob: -2.3529956340789795
    3. '    
' → logprob: -5.977995872497559
    4. '
' → logprob: -9.602995872497559
    5. ' 
' → logprob: -10.727995872497559
    6. 'for' → logprob: -10.727995872497559
    7. '<|end|>' → logprob: -10.727995872497559
    8. '0' → logprob: -10.852995872497559
    9. ',' → logprob: -10.852995872497559
    10. '  
' → logprob: -11.602995872497559

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01889103837311268
    2. '
' → logprob: -4.018890857696533
    3. '    
' → logprob: -7.518890857696533
    4. 'for' → logprob: -9.518891334533691
    5. ' for' → logprob: -10.018891334533691
    6. '```' → logprob: -11.018891334533691
    7. '<|end|>' → logprob: -11.393891334533691
    8. '
' → logprob: -11.768891334533691
    9. ',' → logprob: -12.018891334533691
    10. ' 
' → logprob: -12.643891334533691

Token 79: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03192391246557236
    2. ' for' → logprob: -3.53192400932312
    3. '   ' → logprob: -6.156923770904541
    4. ' ' → logprob: -10.5319242477417
    5. '	for' → logprob: -12.0319242477417
    6. '0' → logprob: -12.2819242477417
    7. '  ' → logprob: -13.0319242477417
    8. 's' → logprob: -13.1569242477417
    9. 't' → logprob: -13.5319242477417
    10. '    ' → logprob: -13.9069242477417

Token 80: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05490293353796005
    2. ' =' → logprob: -2.929903030395508
    3. ',' → logprob: -11.804903030395508
    4. ' ' → logprob: -12.054903030395508
    5. 's' → logprob: -12.804903030395508
    6. '0' → logprob: -13.929903030395508
    7. '=len' → logprob: -14.429903030395508
    8. '_=' → logprob: -14.929903030395508
    9. '```' → logprob: -15.054903030395508
    10. '   ' → logprob: -15.304903030395508

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033079128712415695
    2. ' for' → logprob: -4.533079147338867
    3. '<|end|>' → logprob: -4.533079147338867
    4. '    
' → logprob: -5.533079147338867
    5. ' 
' → logprob: -6.033079147338867
    6. ' ' → logprob: -6.658079147338867
    7. '
' → logprob: -6.908079147338867
    8. ',' → logprob: -7.908079147338867
    9. '    ' → logprob: -7.908079147338867
    10. 'for' → logprob: -8.408079147338867

Token 83: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2536594271659851
    2. ' for' → logprob: -1.7536594867706299
    3. 'for' → logprob: -3.00365948677063
    4. ' ' → logprob: -7.378659248352051
    5. 's' → logprob: -8.75365924835205
    6. '    ' → logprob: -8.87865924835205
    7. '  ' → logprob: -9.00365924835205
    8. '	for' → logprob: -9.25365924835205
    9. ',' → logprob: -10.50365924835205
    10. '0' → logprob: -10.62865924835205

Token 84: ' add' (ID: 1147)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.985679566860199
    2. ' check' → logprob: -1.6106796264648438
    3. ' calc' → logprob: -2.4856796264648438
    4. ' inner' → logprob: -3.2356796264648438
    5. ' func' → logprob: -3.3606796264648438
    6. ' f' → logprob: -3.3606796264648438
    7. ' find' → logprob: -3.6106796264648438
    8. ' evaluate' → logprob: -3.6106796264648438
    9. ' compute' → logprob: -3.7356796264648438
    10. ' score' → logprob: -3.7356796264648438

Token 85: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.3737976551055908
    2. '(' → logprob: -1.6237976551055908
    3. '(arr' → logprob: -1.9987976551055908
    4. '(a' → logprob: -2.248797655105591
    5. '(num' → logprob: -2.873797655105591
    6. '(idx' → logprob: -3.623797655105591
    7. '(i' → logprob: -3.748797655105591
    8. '_' → logprob: -3.873797655105591
    9. '(bit' → logprob: -3.873797655105591
    10. '(_' → logprob: -3.998797655105591

Token 86: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6213322281837463
    2. '):' → logprob: -1.6213321685791016
    3. ',y' → logprob: -2.1213321685791016
    4. ',k' → logprob: -2.9963321685791016
    5. ',n' → logprob: -3.7463321685791016
    6. ',a' → logprob: -4.496332168579102
    7. ',val' → logprob: -4.621332168579102
    8. ',num' → logprob: -4.996332168579102
    9. ',x' → logprob: -4.996332168579102
    10. ',b' → logprob: -5.121332168579102

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002991609275341034
    2. ':' → logprob: -6.252991676330566
    3. '):
' → logprob: -7.252991676330566
    4. ' ):' → logprob: -9.002991676330566
    5. ',' → logprob: -9.752991676330566
    6. ')' → logprob: -9.877991676330566
    7. '   ' → logprob: -10.752991676330566
    8. '):
' → logprob: -10.752991676330566
    9. ' :' → logprob: -11.252991676330566
    10. '=' → logprob: -11.377991676330566

Token 88: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5865300297737122
    2. ' return' → logprob: -2.2115299701690674
    3. ',' → logprob: -2.3365299701690674
    4. ':return' → logprob: -2.4615299701690674
    5. '   ' → logprob: -3.0865299701690674
    6. ' x' → logprob: -3.3365299701690674
    7. '0' → logprob: -4.0865302085876465
    8. 'x' → logprob: -4.4615302085876465
    9. '):' → logprob: -4.8365302085876465
    10. 'return' → logprob: -4.9615302085876465

Token 89: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030783774331212044
    2. ' x' → logprob: -3.7807838916778564
    3. 'return' (adapté à ' return') → logprob: -5.530783653259277
    4. '[x' → logprob: -7.405783653259277
    5. '(x' → logprob: -7.405783653259277
    6. ' return' → logprob: -7.530783653259277
    7. 'y' → logprob: -7.655783653259277
    8. ' ' → logprob: -7.780783653259277
    9. '[' → logprob: -8.655783653259277
    10. '0' → logprob: -8.780783653259277

Token 90: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01586308889091015
    2. ' x' → logprob: -4.265862941741943
    3. '[x' → logprob: -7.265862941741943
    4. '(x' → logprob: -7.265862941741943
    5. ' (' → logprob: -9.390863418579102
    6. '[' → logprob: -9.640863418579102
    7. ' [' → logprob: -9.890863418579102
    8. ' ' → logprob: -10.265863418579102
    9. '(' → logprob: -11.015863418579102
    10. 'y' → logprob: -11.515863418579102

Token 91: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.1629628986120224
    2. '+' → logprob: -1.9129629135131836
    3. '*y' → logprob: -6.287962913513184
    4. ' +' → logprob: -7.412962913513184
    5. '*' → logprob: -9.162962913513184
    6. '|' → logprob: -9.912962913513184
    7. 'y' → logprob: -10.537962913513184
    8. '-y' → logprob: -10.912962913513184
    9. '+[' → logprob: -10.912962913513184
    10. ' if' → logprob: -11.787962913513184

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.447700172662735
    2. '<|end|>' → logprob: -1.1977001428604126
    3. '

' → logprob: -3.947700262069702
    4. '   ' → logprob: -4.322700023651123
    5. '    
' → logprob: -4.697700023651123
    6. '<|end|>' → logprob: -5.197700023651123
    7. '  
' → logprob: -5.947700023651123
    8. '
    
' → logprob: -6.197700023651123
    9. ',' → logprob: -6.322700023651123
    10. '[' → logprob: -7.447700023651123

Token 94: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5059484839439392
    2. '   ' → logprob: -1.130948543548584
    3. '    
' → logprob: -3.255948543548584
    4. ' for' → logprob: -4.755948543548584
    5. 'for' (adapté à ' for') → logprob: -5.505948543548584
    6. '

' → logprob: -5.630948543548584
    7. '<|end|>' → logprob: -5.630948543548584
    8. ',' → logprob: -6.130948543548584
    9. '  
' → logprob: -6.255948543548584
    10. '   
' → logprob: -6.630948543548584

Token 95: ' n' (ID: 297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.23080025613307953
    2. ' j' → logprob: -2.730800151824951
    3. 'range' → logprob: -2.855800151824951
    4. ' i' → logprob: -3.355800151824951
    5. ' idx' → logprob: -4.105800151824951
    6. 'j' → logprob: -5.355800151824951
    7. ' k' → logprob: -5.480800151824951
    8. ' r' → logprob: -5.855800151824951
    9. 'idx' → logprob: -5.855800151824951
    10. '(range' → logprob: -6.355800151824951

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.360806405544281
    2. ',' → logprob: -1.6108064651489258
    3. 'range' → logprob: -3.110806465148926
    4. ',(' → logprob: -3.985806465148926
    5. 'in' → logprob: -4.985806465148926
    6. ',num' → logprob: -5.235806465148926
    7. ',r' → logprob: -5.485806465148926
    8. ',x' → logprob: -5.485806465148926
    9. ',b' → logprob: -5.735806465148926
    10. ',s' → logprob: -6.610806465148926

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003765727742575109
    2. 'arr' → logprob: -8.50037670135498
    3. ' range' → logprob: -8.87537670135498
    4. '[' → logprob: -11.12537670135498
    5. 'bits' → logprob: -12.00037670135498
    6. 'enumer' → logprob: -12.75037670135498
    7. 'it' → logprob: -13.12537670135498
    8. '(range' → logprob: -13.62537670135498
    9. 'filter' → logprob: -13.62537670135498
    10. 'r' → logprob: -14.00037670135498

Token 98: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.038506846874952316
    2. 'd' → logprob: -3.2885067462921143
    3. '(len' → logprob: -8.038506507873535
    4. '(' → logprob: -9.163506507873535
    5. 'len' → logprob: -11.038506507873535
    6. '   ' → logprob: -11.413506507873535
    7. ' d' → logprob: -12.663506507873535
    8. '(g' → logprob: -13.413506507873535
    9. ' ' → logprob: -13.663506507873535
    10. '	d' → logprob: -13.788506507873535

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42907828092575073
    2. '):
' → logprob: -1.0540783405303955
    3. '):
' → logprob: -8.179078102111816
    4. '   ' → logprob: -10.179078102111816
    5. '+' → logprob: -11.304078102111816
    6. '-' → logprob: -11.429078102111816
    7. ':' → logprob: -11.554078102111816
    8. '):

' → logprob: -11.679078102111816
    9. ')' → logprob: -12.054078102111816
    10. '       ' → logprob: -12.804078102111816

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009486186318099499
    2. '<|end|>' → logprob: -5.259486198425293
    3. ' if' → logprob: -6.759486198425293
    4. '   ' → logprob: -6.759486198425293
    5. ',' → logprob: -7.009486198425293
    6. ':' → logprob: -8.509486198425293
    7. ' ' → logprob: -8.884486198425293
    8. ':
' → logprob: -9.009486198425293
    9. '<|end|>' → logprob: -9.009486198425293
    10. '
' → logprob: -9.259486198425293

Token 101: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8142700791358948
    2. '       ' → logprob: -1.31427001953125
    3. 'if' (adapté à ' if') → logprob: -1.68927001953125
    4. '   ' → logprob: -2.31427001953125
    5. ' score' → logprob: -6.68927001953125
    6. 'score' → logprob: -6.81427001953125
    7. '    ' → logprob: -7.56427001953125
    8. 'num' → logprob: -7.56427001953125
    9. ' ' → logprob: -7.68927001953125
    10. '
' → logprob: -7.68927001953125

Token 102: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.013158346526324749
    2. 'bits' → logprob: -4.388158321380615
    3. '(bits' → logprob: -7.513158321380615
    4. ' not' → logprob: -9.888158798217773
    5. '   ' → logprob: -11.263158798217773
    6. '_bits' → logprob: -12.013158798217773
    7. '.bits' → logprob: -12.138158798217773
    8. ' ' → logprob: -12.263158798217773
    9. '    ' → logprob: -12.325658798217773
    10. 'b' → logprob: -12.825658798217773

Token 103: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0833735466003418
    2. ':' → logprob: -2.583373546600342
    3. '==' → logprob: -5.458373546600342
    4. '[' → logprob: -9.5833740234375
    5. ':n' → logprob: -10.0833740234375
    6. ' ==' → logprob: -11.0833740234375
    7. ']:' → logprob: -11.2083740234375
    8. ' [' → logprob: -11.3333740234375
    9. ']==' → logprob: -11.4583740234375
    10. ']' → logprob: -11.7083740234375

Token 104: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.08358234167098999
    2. ']:' → logprob: -2.7085824012756348
    3. ']:
' → logprob: -4.458582401275635
    4. ']' → logprob: -6.583582401275635
    5. '==' → logprob: -8.458581924438477
    6. ':' → logprob: -9.083581924438477
    7. ']>' → logprob: -10.208581924438477
    8. '']==' → logprob: -10.583581924438477
    9. '):
' → logprob: -10.708581924438477
    10. ')==' → logprob: -10.708581924438477

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17075981199741364
    2. '       ' → logprob: -2.420759916305542
    3. ':
' → logprob: -3.670759916305542
    4. ' score' → logprob: -3.795759916305542
    5. ':' → logprob: -5.670759677886963
    6. '
' → logprob: -5.670759677886963
    7. ',' → logprob: -5.920759677886963
    8. 'score' → logprob: -5.920759677886963
    9. ' num' → logprob: -6.295759677886963
    10. 'num' → logprob: -6.795759677886963

Token 106: ' tmp' (ID: 8919)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.24830959737300873
    2. 'score' → logprob: -1.99830961227417
    3. '           ' → logprob: -3.37330961227417
    4. ' num' → logprob: -3.74830961227417
    5. 'num' → logprob: -5.12330961227417
    6. ' idx' → logprob: -5.24830961227417
    7. ' for' → logprob: -5.37330961227417
    8. '   ' → logprob: -5.62330961227417
    9. '       ' → logprob: -5.87330961227417
    10. 'idx' → logprob: -7.24830961227417

Token 107: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09668663889169693
    2. '=sum' → logprob: -3.096686601638794
    3. '=list' → logprob: -3.721686601638794
    4. '=[' → logprob: -4.721686840057373
    5. '=len' → logprob: -5.221686840057373
    6. '+=' → logprob: -5.596686840057373
    7. ' =' → logprob: -5.846686840057373
    8. ']=' → logprob: -7.471686840057373
    9. '   ' → logprob: -8.346686363220215
    10. '=max' → logprob: -8.346686363220215

Token 108: 'n' (ID: 77)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3168836534023285
    2. 'score' → logprob: -1.6918836832046509
    3. 'sum' → logprob: -3.3168835639953613
    4. 'num' → logprob: -3.8168835639953613
    5. 'ans' → logprob: -5.691883563995361
    6. '1' → logprob: -5.816883563995361
    7. 'reduce' → logprob: -5.941883563995361
    8. '   ' → logprob: -6.066883563995361
    9. '[arr' → logprob: -6.066883563995361
    10. '[num' → logprob: -6.191883563995361

Token 109: '+' (ID: 10)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -1.1878851652145386
    2. '][' → logprob: -1.3128851652145386
    3. '+' → logprob: -1.5628851652145386
    4. ']' → logprob: -2.437885284423828
    5. ']*' → logprob: -3.312885284423828
    6. '])' → logprob: -4.062885284423828
    7. '*' → logprob: -4.312885284423828
    8. ')+' → logprob: -4.562885284423828
    9. ',' → logprob: -4.687885284423828
    10. ')' → logprob: -4.812885284423828

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017803447553887963
    2. 'g' → logprob: -9.000178337097168
    3. '2' → logprob: -10.625178337097168
    4. ' ' → logprob: -11.375178337097168
    5. 'arr' → logprob: -11.625178337097168
    6. '0' → logprob: -13.125178337097168
    7. 'idx' → logprob: -13.625178337097168
    8. '   ' → logprob: -13.875178337097168
    9. '100' → logprob: -14.125178337097168
    10. 'len' → logprob: -14.250178337097168

Token 111: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.1933777928352356
    2. ')' → logprob: -1.8183777332305908
    3. ')*(' → logprob: -4.94337797164917
    4. ')**' → logprob: -5.44337797164917
    5. ',' → logprob: -7.06837797164917
    6. ' )' → logprob: -7.94337797164917
    7. '   ' → logprob: -9.068377494812012
    8. ')
' → logprob: -9.568377494812012
    9. '-' → logprob: -9.818377494812012
    10. ',len' → logprob: -9.943377494812012

Token 112: '100' (ID: 1353)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1016092300415039
    2. 'sum' → logprob: -3.226609230041504
    3. 'g' → logprob: -3.601609230041504
    4. 'reduce' → logprob: -4.851609230041504
    5. '(arr' → logprob: -4.976609230041504
    6. '2' → logprob: -5.726609230041504
    7. 'max' → logprob: -6.351609230041504
    8. 'd' → logprob: -6.726609230041504
    9. '(' → logprob: -6.851609230041504
    10. '1' → logprob: -7.101609230041504

Token 113: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0307706594467163
    2. '
' → logprob: -1.4057706594467163
    3. '0' → logprob: -2.655770778656006
    4. '-' → logprob: -3.030770778656006
    5. '*' → logprob: -3.280770778656006
    6. '-score' → logprob: -3.280770778656006
    7. '           ' → logprob: -3.405770778656006
    8. 'score' → logprob: -3.530770778656006
    9. ' +' → logprob: -4.280770778656006
    10. ',' → logprob: -4.280770778656006

Token 114: 'arr' (ID: 1614)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3611832857131958
    2. 'arr' → logprob: -1.3611832857131958
    3. '(g' → logprob: -4.736183166503906
    4. 'sum' → logprob: -4.861183166503906
    5. '(arr' → logprob: -5.111183166503906
    6. 'reduce' → logprob: -5.111183166503906
    7. 'd' → logprob: -5.361183166503906
    8. '(' → logprob: -5.986183166503906
    9. 'max' → logprob: -6.611183166503906
    10. ' g' → logprob: -6.611183166503906

Token 115: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006810996565036476
    2. '[' → logprob: -7.625680923461914
    3. '[m' → logprob: -9.875680923461914
    4. ' [' → logprob: -10.750680923461914
    5. '[i' → logprob: -10.875680923461914
    6. '[s' → logprob: -11.125680923461914
    7. '   ' → logprob: -11.375680923461914
    8. '```' → logprob: -11.375680923461914
    9. '[
' → logprob: -12.125680923461914
    10. 'n' → logprob: -12.125680923461914

Token 116: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008226721547544003
    2. '[' → logprob: -5.8832268714904785
    3. '][-' → logprob: -6.2582268714904785
    4. '[g' → logprob: -6.5082268714904785
    5. ']' → logprob: -7.0082268714904785
    6. 'g' → logprob: -8.25822639465332
    7. '0' → logprob: -8.25822639465332
    8. '])' → logprob: -8.75822639465332
    9. ' ][' → logprob: -9.38322639465332
    10. '-' → logprob: -10.13322639465332

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6598665714263916
    2. 'g' → logprob: -1.0348665714263916
    3. '1' → logprob: -2.1598665714263916
    4. 'idx' → logprob: -5.2848663330078125
    5. 'y' → logprob: -6.0348663330078125
    6. 'n' → logprob: -6.1598663330078125
    7. 'num' → logprob: -7.0348663330078125
    8. '2' → logprob: -7.2848663330078125
    9. 'd' → logprob: -8.284866333007812
    10. '   ' → logprob: -8.784866333007812

Token 118: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10170970112085342
    2. ']+' → logprob: -2.9767096042633057
    3. '])' → logprob: -3.4767096042633057
    4. ')' → logprob: -5.101709842681885
    5. ' ]' → logprob: -6.226709842681885
    6. '+' → logprob: -6.351709842681885
    7. '<|end|>' → logprob: -7.226709842681885
    8. ']+=' → logprob: -7.351709842681885
    9. '       ' → logprob: -7.601709842681885
    10. ']
' → logprob: -7.726709842681885

Token 119: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2675660252571106
    2. '           ' → logprob: -1.7675659656524658
    3. '
' → logprob: -3.767565965652466
    4. ' +' → logprob: -3.892565965652466
    5. '-' → logprob: -5.017566204071045
    6. '       ' → logprob: -5.142566204071045
    7. '+
' → logprob: -6.517566204071045
    8. ' ' → logprob: -6.642566204071045
    9. ' 
' → logprob: -6.767566204071045
    10. ' -' → logprob: -7.517566204071045

Token 120: ' b' (ID: 287)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.25553056597709656
    2. 'score' → logprob: -1.505530595779419
    3. ' num' → logprob: -6.75553035736084
    4. 'num' → logprob: -7.00553035736084
    5. '           ' → logprob: -7.50553035736084
    6. '
' → logprob: -8.00553035736084
    7. '+' → logprob: -9.13053035736084
    8. ' ' → logprob: -9.50553035736084
    9. '       ' → logprob: -9.50553035736084
    10. ',' → logprob: -9.88053035736084

Token 121: '=' (ID: 28)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.03823885694146156
    2. 'reak' → logprob: -3.663238763809204
    3. '_score' → logprob: -6.038239002227783
    4. ' score' → logprob: -6.038239002227783
    5. 'r' → logprob: -6.538239002227783
    6. '+=' → logprob: -7.288239002227783
    7. 'y' → logprob: -7.413239002227783
    8. 'onus' → logprob: -7.538239002227783
    9. '=' → logprob: -7.663239002227783
    10. '	score' → logprob: -8.038238525390625

Token 122: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.08712161332368851
    2. 'bits' → logprob: -3.3371217250823975
    3. ' arr' → logprob: -3.9621217250823975
    4. 'sum' → logprob: -4.837121486663818
    5. '(arr' → logprob: -5.087121486663818
    6. ' bits' → logprob: -6.087121486663818
    7. '1' → logprob: -6.337121486663818
    8. 'score' → logprob: -6.462121486663818
    9. 'tmp' → logprob: -6.962121486663818
    10. '100' → logprob: -7.087121486663818

Token 123: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.3425219549390022e-05
    2. 'n' → logprob: -12.00001335144043
    3. '[' → logprob: -13.25001335144043
    4. '[m' → logprob: -13.62501335144043
    5. '<|end|>' → logprob: -13.75001335144043
    6. '```' → logprob: -14.37501335144043
    7. '[
' → logprob: -14.87501335144043
    8. '[user' → logprob: -15.00001335144043
    9. ' [' → logprob: -15.37501335144043
    10. '<n' → logprob: -15.75001335144043

Token 124: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004548319149762392
    2. '[' → logprob: -5.5045485496521
    3. ']' → logprob: -8.379548072814941
    4. '[n' → logprob: -9.629548072814941
    5. ' ][' → logprob: -9.879548072814941
    6. ')[' → logprob: -10.754548072814941
    7. '][-' → logprob: -11.129548072814941
    8. '])' → logprob: -11.129548072814941
    9. '])[' → logprob: -11.379548072814941
    10. '}[' → logprob: -12.004548072814941

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0298071950674057
    2. '0' → logprob: -3.7798070907592773
    3. '2' → logprob: -5.279807090759277
    4. '3' → logprob: -6.779807090759277
    5. '4' → logprob: -8.904807090759277
    6. '-' → logprob: -10.467307090759277
    7. 'g' → logprob: -10.529807090759277
    8. '5' → logprob: -11.092307090759277
    9. ' ' → logprob: -11.092307090759277
    10. '7' → logprob: -11.217307090759277

Token 126: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13820768892765045
    2. ']*' → logprob: -2.7632076740264893
    3. ']
' → logprob: -2.8882076740264893
    4. ']+' → logprob: -4.763207912445068
    5. ']*(' → logprob: -6.888207912445068
    6. '])' → logprob: -8.38820743560791
    7. ']>' → logprob: -9.13820743560791
    8. ']

' → logprob: -9.76320743560791
    9. ']-' → logprob: -9.88820743560791
    10. ']>=' → logprob: -10.01320743560791

Token 127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11737353354692459
    2. '+' → logprob: -2.992373466491699
    3. '
' → logprob: -2.992373466491699
    4. ' if' → logprob: -5.367373466491699
    5. ',' → logprob: -6.742373466491699
    6. '<|end|>' → logprob: -6.992373466491699
    7. '       ' → logprob: -7.367373466491699
    8. ' +' → logprob: -7.617373466491699
    9. ' 
' → logprob: -7.742373466491699
    10. '            
' → logprob: -7.992373466491699

Token 128: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.8754162192344666
    2. 'score' (adapté à ' score') → logprob: -1.2504162788391113
    3. ' if' → logprob: -1.8754162788391113
    4. 'num' → logprob: -3.5004162788391113
    5. ' num' → logprob: -3.6254162788391113
    6. '
' → logprob: -3.7504162788391113
    7. '           ' → logprob: -3.7504162788391113
    8. 'if' → logprob: -4.000416278839111
    9. ' for' → logprob: -5.375416278839111
    10. '+' → logprob: -5.750416278839111

Token 129: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0063385069370269775
    2. ' +=' → logprob: -5.131338596343994
    3. '+=(' → logprob: -8.506338119506836
    4. '-=' → logprob: -9.131338119506836
    5. '=' → logprob: -10.506338119506836
    6. ']+=' → logprob: -10.756338119506836
    7. '   ' → logprob: -10.881338119506836
    8. ',' → logprob: -11.131338119506836
    9. '+' → logprob: -11.881338119506836
    10. '    ' → logprob: -13.506338119506836

Token 130: 'add' (ID: 964)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.07761050015687943
    2. 'reduce' → logprob: -3.327610492706299
    3. 'add' → logprob: -3.952610492706299
    4. ' score' → logprob: -4.702610492706299
    5. 'max' → logprob: -5.327610492706299
    6. 'tmp' → logprob: -6.202610492706299
    7. ' reduce' → logprob: -6.827610492706299
    8. ' add' → logprob: -7.202610492706299
    9. ' max' → logprob: -7.702610492706299
    10. 'sum' → logprob: -8.077610969543457

Token 131: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.06201529875397682
    2. 'score' → logprob: -2.8120152950286865
    3. ' score' → logprob: -10.062015533447266
    4. '	score' → logprob: -12.812015533447266
    5. '(' → logprob: -13.812015533447266
    6. '   ' → logprob: -14.437015533447266
    7. ' (' → logprob: -15.812015533447266
    8. '(scores' → logprob: -16.062015533447266
    9. 'scores' → logprob: -16.187015533447266
    10. '
' → logprob: -16.187015533447266

Token 132: ',tmp' (ID: 195535)
  Prédit: ',tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',tmp' → logprob: -0.3220174014568329
    2. ',' → logprob: -1.3220174312591553
    3. ',b' → logprob: -5.197017192840576
    4. ' ,' → logprob: -5.947017192840576
    5. ',+' → logprob: -8.197017669677734
    6. '+' → logprob: -9.197017669677734
    7. 'tmp' → logprob: -9.947017669677734
    8. ' tmp' → logprob: -10.322017669677734
    9. ' +' → logprob: -10.447017669677734
    10. ',t' → logprob: -10.572017669677734

Token 133: '+b' (ID: 76609)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05609574168920517
    2. ')' → logprob: -2.931095838546753
    3. '+' → logprob: -7.056095600128174
    4. '           ' → logprob: -8.681096076965332
    5. ')+' → logprob: -10.306096076965332
    6. '+b' → logprob: -10.306096076965332
    7. ')
' → logprob: -10.431096076965332
    8. ' +' → logprob: -10.806096076965332
    9. ',' → logprob: -10.931096076965332
    10. ' )
' → logprob: -11.806096076965332

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18093688786029816
    2. ')
' → logprob: -1.8059369325637817
    3. ' )' → logprob: -7.805936813354492
    4. '<|end|>' → logprob: -8.180936813354492
    5. ' )
' → logprob: -9.055936813354492
    6. '
' → logprob: -9.305936813354492
    7. '   ' → logprob: -9.680936813354492
    8. '           ' → logprob: -10.055936813354492
    9. '       ' → logprob: -10.180936813354492
    10. '+' → logprob: -10.555936813354492

Token 135: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1479182243347168
    2. '           ' → logprob: -1.3979182243347168
    3. '   ' → logprob: -1.7729182243347168
    4. '
' → logprob: -2.022918224334717
    5. ',
' → logprob: -2.772918224334717
    6. '<|end|>' → logprob: -3.397918224334717
    7. ' ' → logprob: -4.522918224334717
    8. '       ' → logprob: -5.397918224334717
    9. '    
' → logprob: -5.772918224334717
    10. ' 
' → logprob: -5.897918224334717

Token 136: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.19153398275375366
    2. ' if' → logprob: -2.8165340423583984
    3. 'num' (adapté à ' num') → logprob: -3.1915340423583984
    4. '           ' → logprob: -3.6915340423583984
    5. ' idx' → logprob: -3.8165340423583984
    6. '       ' → logprob: -5.316534042358398
    7. ' ' → logprob: -5.566534042358398
    8. '   ' → logprob: -5.941534042358398
    9. 'idx' → logprob: -6.066534042358398
    10. '    ' → logprob: -6.191534042358398

Token 137: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005745929665863514
    2. ' +=' → logprob: -5.880745887756348
    3. '=' → logprob: -6.005745887756348
    4. '=num' → logprob: -7.755745887756348
    5. '+=(' → logprob: -11.005745887756348
    6. '+' → logprob: -11.130745887756348
    7. ']+=' → logprob: -11.755745887756348
    8. ' =' → logprob: -13.505745887756348
    9. '++' → logprob: -14.130745887756348
    10. '+='' → logprob: -14.380745887756348

Token 138: 'arr' (ID: 1614)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14364232122898102
    2. 'arr' → logprob: -2.1436424255371094
    3. 'bits' → logprob: -4.518642425537109
    4. '(arr' → logprob: -6.518642425537109
    5. 'tmp' → logprob: -7.018642425537109
    6. ' ' → logprob: -7.018642425537109
    7. 'b' → logprob: -7.518642425537109
    8. '(' → logprob: -7.643642425537109
    9. 'add' → logprob: -7.768642425537109
    10. '100' → logprob: -8.64364242553711

Token 139: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.816093228830141e-06
    2. 'n' → logprob: -13.75000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[[' → logprob: -15.25000286102295
    5. ' [' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.250001907348633
    7. '(n' → logprob: -16.625001907348633
    8. '```' → logprob: -16.750001907348633
    9. '[num' → logprob: -16.875001907348633
    10. '[i' → logprob: -16.875001907348633

Token 140: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07994242757558823
    2. '[n' → logprob: -2.579942464828491
    3. '[' → logprob: -7.704942226409912
    4. 'n' → logprob: -7.954942226409912
    5. ']' → logprob: -9.20494270324707
    6. ' ][' → logprob: -10.07994270324707
    7. '1' → logprob: -10.57994270324707
    8. '   ' → logprob: -11.57994270324707
    9. ' [' → logprob: -11.57994270324707
    10. '(n' → logprob: -11.95494270324707

Token 141: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5580770373344421
    2. '1' → logprob: -0.9330770373344421
    3. '0' → logprob: -3.433077096939087
    4. '3' → logprob: -6.808076858520508
    5. 'n' → logprob: -7.183076858520508
    6. '4' → logprob: -9.183076858520508
    7. ' ' → logprob: -10.558076858520508
    8. '-' → logprob: -11.183076858520508
    9. '5' → logprob: -11.308076858520508
    10. '```' → logprob: -11.683076858520508

Token 142: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010894970037043095
    2. ')
' → logprob: -7.251089572906494
    3. ' )' → logprob: -9.376089096069336
    4. ')]' → logprob: -9.376089096069336
    5. ']' → logprob: -9.626089096069336
    6. '<|end|>' → logprob: -9.751089096069336
    7. '])' → logprob: -10.751089096069336
    8. '*' → logprob: -11.376089096069336
    9. '+' → logprob: -11.501089096069336
    10. ')#' → logprob: -12.001089096069336

Token 143: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1713685244321823
    2. '
' → logprob: -2.9213685989379883
    3. '           ' → logprob: -3.0463685989379883
    4. '<|end|>' → logprob: -3.0463685989379883
    5. '       ' → logprob: -6.046368598937988
    6. '    
' → logprob: -6.671368598937988
    7. '<|end|>' → logprob: -7.046368598937988
    8. ' ' → logprob: -7.046368598937988
    9. ',' → logprob: -7.296368598937988
    10. ')' → logprob: -7.421368598937988

Token 144: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25477272272109985
    2. '
' → logprob: -2.754772663116455
    3. '<|end|>' → logprob: -2.879772663116455
    4. ' ' → logprob: -3.254772663116455
    5. '       ' → logprob: -3.629772663116455
    6. ' if' → logprob: -4.879772663116455
    7. ' else' → logprob: -4.879772663116455
    8. '    
' → logprob: -5.504772663116455
    9. ' 
' → logprob: -6.004772663116455
    10. ')' → logprob: -6.004772663116455

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5605740547180176
    2. ':
' → logprob: -0.9355740547180176
    3. '           ' → logprob: -3.8105740547180176
    4. '       ' → logprob: -4.560574054718018
    5. '   ' → logprob: -6.310574054718018
    6. 'score' → logprob: -7.810574054718018
    7. 'idx' → logprob: -8.06057357788086
    8. ' score' → logprob: -8.18557357788086
    9. ' continue' → logprob: -8.31057357788086
    10. 'continue' → logprob: -8.81057357788086

Token 146: '           ' (ID: 352)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.906135082244873
    2. '       ' → logprob: -1.406135082244873
    3. '           ' → logprob: -1.656135082244873
    4. ' score' → logprob: -2.406135082244873
    5. 'idx' → logprob: -3.781135082244873
    6. ' idx' → logprob: -4.656135082244873
    7. 'tmp' → logprob: -4.781135082244873
    8. '   ' → logprob: -4.906135082244873
    9. 'num' → logprob: -5.156135082244873
    10. 'b' → logprob: -5.406135082244873

Token 147: ' idx' (ID: 14016)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.8840264678001404
    2. 'idx' (adapté à ' idx') → logprob: -1.2590265274047852
    3. 'if' → logprob: -2.384026527404785
    4. 'num' → logprob: -2.509026527404785
    5. 'tmp' → logprob: -2.884026527404785
    6. 'b' → logprob: -3.759026527404785
    7. '           ' → logprob: -4.384026527404785
    8. 'for' → logprob: -4.884026527404785
    9. ' score' → logprob: -5.259026527404785
    10. ' idx' → logprob: -5.259026527404785

Token 148: '=n' (ID: 47985)
  Prédit: '=n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=n' → logprob: -0.3959170877933502
    2. '=' → logprob: -1.2709170579910278
    3. '=None' → logprob: -3.3959171772003174
    4. '=i' → logprob: -5.145916938781738
    5. '=[' → logprob: -5.770916938781738
    6. ' =' → logprob: -6.270916938781738
    7. '=d' → logprob: -7.520916938781738
    8. '=num' → logprob: -8.020916938781738
    9. '=len' → logprob: -8.770916938781738
    10. '=True' → logprob: -8.770916938781738

Token 149: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0256910789757967
    2. '<|end|>' → logprob: -4.400691032409668
    3. ' if' → logprob: -5.650691032409668
    4. '
' → logprob: -6.025691032409668
    5. '    
' → logprob: -6.400691032409668
    6. ',' → logprob: -7.275691032409668
    7. '       ' → logprob: -7.275691032409668
    8. ' ' → logprob: -7.525691032409668
    9. '<|end|>' → logprob: -7.525691032409668
    10. '+' → logprob: -8.025691032409668

Token 150: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6327331066131592
    2. ' idx' → logprob: -0.7577331066131592
    3. ' not' → logprob: -10.757733345031738
    4. '(idx' → logprob: -10.757733345031738
    5. '	idx' → logprob: -11.007733345031738
    6. 'not' → logprob: -11.132733345031738
    7. 'bits' → logprob: -11.257733345031738
    8. ' ' → logprob: -11.882733345031738
    9. ' bits' → logprob: -11.882733345031738
    10. '   ' → logprob: -12.257733345031738

Token 151: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47502824664115906
    2. 'is' → logprob: -0.9750282764434814
    3. '==' → logprob: -7.100028038024902
    4. 'None' → logprob: -9.225028038024902
    5. ' None' → logprob: -10.975028038024902
    6. 'else' → logprob: -12.350028038024902
    7. ' ==' → logprob: -12.975028038024902
    8. ' ' → logprob: -14.975028038024902
    9. 'if' → logprob: -15.225028038024902
    10. '===' → logprob: -15.350028038024902

Token 152: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004307884373702109
    2. ' None' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.250431060791016
    4. '_None' → logprob: -17.750431060791016
    5. '       ' → logprob: -17.875431060791016
    6. '0' → logprob: -18.750431060791016
    7. '  ' → logprob: -18.750431060791016
    8. 'not' → logprob: -19.125431060791016
    9. '=None' → logprob: -19.250431060791016
    10. '(None' → logprob: -19.500431060791016

Token 153: ' or' (ID: 503)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1602276712656021
    2. ' else' → logprob: -1.910227656364441
    3. '        ' → logprob: -13.78522777557373
    4. '           ' → logprob: -14.41022777557373
    5. '       ' → logprob: -14.66022777557373
    6. '          ' → logprob: -15.41022777557373
    7. ' ' → logprob: -15.53522777557373
    8. '         ' → logprob: -15.53522777557373
    9. '    ' → logprob: -15.78522777557373
    10. '            ' → logprob: -16.160226821899414

Token 154: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5141741633415222
    2. 'idx' → logprob: -1.889174222946167
    3. 'bits' → logprob: -2.014174222946167
    4. 'arr' → logprob: -2.389174222946167
    5. ' n' → logprob: -5.389173984527588
    6. '(n' → logprob: -5.514173984527588
    7. ' idx' → logprob: -5.889173984527588
    8. ' bits' → logprob: -6.139173984527588
    9. 'score' → logprob: -6.389173984527588
    10. 'num' → logprob: -6.389173984527588

Token 155: '>' (ID: 29)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14902302622795105
    2. '>' → logprob: -2.0240230560302734
    3. ' <' → logprob: -5.399023056030273
    4. ' >' → logprob: -6.649023056030273
    5. '[idx' → logprob: -8.774023056030273
    6. '<arr' → logprob: -9.149023056030273
    7. 'idx' → logprob: -10.024023056030273
    8. 'else' → logprob: -10.399023056030273
    9. '<len' → logprob: -10.524023056030273
    10. '<ll' → logprob: -10.524023056030273

Token 156: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0010337610729038715
    2. ' idx' → logprob: -6.876033782958984
    3. ' ' → logprob: -15.626033782958984
    4. '	idx' → logprob: -15.751033782958984
    5. 'index' → logprob: -15.876033782958984
    6. '  ' → logprob: -16.501033782958984
    7. '
' → logprob: -16.501033782958984
    8. 'i' → logprob: -16.501033782958984
    9. '   ' → logprob: -16.751033782958984
    10. '(idx' → logprob: -16.876033782958984

Token 157: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018167270347476006
    2. 'else' → logprob: -4.018167495727539
    3. '           ' → logprob: -11.643167495727539
    4. '       ' → logprob: -12.893167495727539
    5. 'idx' → logprob: -13.143167495727539
    6. '   ' → logprob: -13.643167495727539
    7. '        ' → logprob: -14.643167495727539
    8. '	else' → logprob: -14.643167495727539
    9. ' idx' → logprob: -14.893167495727539
    10. '               ' → logprob: -15.018167495727539

Token 158: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00040934275602921844
    2. ' idx' → logprob: -7.875409126281738
    3. 'n' → logprob: -10.500409126281738
    4. '	idx' → logprob: -14.750409126281738
    5. 'index' → logprob: -15.250409126281738
    6. ' ' → logprob: -15.250409126281738
    7. '   ' → logprob: -15.375409126281738
    8. '  ' → logprob: -15.625409126281738
    9. '(idx' → logprob: -16.125410079956055
    10. ' n' → logprob: -16.375410079956055

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24721482396125793
    2. 'print' → logprob: -1.7472147941589355
    3. '
' → logprob: -4.3722147941589355
    4. 'for' → logprob: -5.3722147941589355
    5. '    
' → logprob: -5.8722147941589355
    6. 'num' → logprob: -5.9972147941589355
    7. 'ans' → logprob: -6.1222147941589355
    8. '           ' → logprob: -6.3722147941589355
    9. '       ' → logprob: -6.4972147941589355
    10. ',' → logprob: -6.4972147941589355

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034368958324193954
    2. '    
' → logprob: -4.784368991851807
    3. '
' → logprob: -4.909368991851807
    4. '       ' → logprob: -5.659368991851807
    5. '           ' → logprob: -5.784368991851807
    6. '<|end|>' → logprob: -6.409368991851807
    7. 'print' → logprob: -6.659368991851807
    8. ' 
' → logprob: -6.659368991851807
    9. '  
' → logprob: -6.784368991851807
    10. '            
' → logprob: -7.409368991851807

Token 161: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1587628573179245
    2. ' if' → logprob: -2.1587629318237305
    3. ' for' → logprob: -4.4087629318237305
    4. 'if' → logprob: -5.4087629318237305
    5. '    
' → logprob: -6.2837629318237305
    6. ')' → logprob: -6.2837629318237305
    7. ' while' → logprob: -6.5337629318237305
    8. ' score' → logprob: -7.0337629318237305
    9. '+' → logprob: -7.1587629318237305
    10. 'for' → logprob: -7.1587629318237305

Token 162: ' P' (ID: 398)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.813153088092804
    2. '   ' → logprob: -1.0631530284881592
    3. 'if' → logprob: -1.6881530284881592
    4. ' for' → logprob: -4.563153266906738
    5. ' while' → logprob: -5.063153266906738
    6. 'for' → logprob: -5.938153266906738
    7. 'while' → logprob: -5.938153266906738
    8. ' num' → logprob: -7.813153266906738
    9. 'num' → logprob: -7.813153266906738
    10. '    ' → logprob: -7.938153266906738

Token 163: 'OO' (ID: 21450)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.016717553138733
    2. 'ick' → logprob: -2.2667174339294434
    3. 'lus' → logprob: -2.2667174339294434
    4. 'oss' → logprob: -2.3917174339294434
    5. 'ass' → logprob: -3.0167174339294434
    6. 'if' → logprob: -3.0167174339294434
    7. 'otential' → logprob: -3.0167174339294434
    8. 'score' → logprob: -3.5167174339294434
    9. 'os' → logprob: -3.7667174339294434
    10. 'er' → logprob: -3.8917174339294434

Token 164: '
' (ID: 198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.0237669944763184
    2. 'P' → logprob: -2.2737669944763184
    3. 'S' → logprob: -2.3987669944763184
    4. 'L' → logprob: -2.3987669944763184
    5. 'R' → logprob: -2.5237669944763184
    6. 'r' → logprob: -2.8987669944763184
    7. 'rs' → logprob: -2.8987669944763184
    8. 'ss' → logprob: -3.0237669944763184
    9. 'N' → logprob: -3.3987669944763184
    10. 's' → logprob: -3.7737669944763184

Token 165: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4757922887802124
    2. 'ints' → logprob: -1.6007922887802124
    3. 'if' → logprob: -1.7257922887802124
    4. 'int' → logprob: -1.8507922887802124
    5. 's' → logprob: -2.225792407989502
    6. 'score' → logprob: -3.100792407989502
    7. 'ss' → logprob: -3.350792407989502
    8. '#' → logprob: -4.975792407989502
    9. ' for' → logprob: -4.975792407989502
    10. 'i' → logprob: -5.725792407989502

Token 166: ' class' (ID: 744)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3768533170223236
    2. 'for' → logprob: -1.876853346824646
    3. ' if' → logprob: -2.7518532276153564
    4. ' for' → logprob: -3.6268532276153564
    5. 'score' → logprob: -4.2518534660339355
    6. 'r' → logprob: -4.7518534660339355
    7. '   ' → logprob: -4.7518534660339355
    8. 'sum' → logprob: -5.1268534660339355
    9. 'idx' → logprob: -5.3768534660339355
    10. 'num' → logprob: -5.8768534660339355

Token 167: ' X' (ID: 2127)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -1.7143714427947998
    2. 'Counter' → logprob: -2.5893714427948
    3. ' object' → logprob: -2.9643714427948
    4. ' Priority' → logprob: -2.9643714427948
    5. 'object' → logprob: -3.2143714427948
    6. 'Score' → logprob: -3.4643714427948
    7. ' max' → logprob: -3.7768714427948
    8. ' ' → logprob: -3.9018714427948
    9. ' P' → logprob: -3.9018714427948
    10. 'A' → logprob: -3.9643714427948

Token 168: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007669087033718824
    2. ':
' → logprob: -5.257668972015381
    3. '(object' → logprob: -6.257668972015381
    4. '():' → logprob: -7.882668972015381
    5. '   ' → logprob: -9.757669448852539
    6. '(' → logprob: -11.132669448852539
    7. '():
' → logprob: -11.507669448852539
    8. 'X' → logprob: -12.007669448852539
    9. '(int' → logprob: -12.132669448852539
    10. '(X' → logprob: -12.382669448852539

Token 169: 'pass' (ID: 9948)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3059326112270355
    2. ' pass' → logprob: -2.0559325218200684
    3. '   ' → logprob: -2.6809325218200684
    4. '    ' → logprob: -3.4309325218200684
    5. ' def' → logprob: -4.680932521820068
    6. 'pass' → logprob: -4.930932521820068
    7. '...' → logprob: -5.430932521820068
    8. '<|end|>' → logprob: -5.680932521820068
    9. ' ' → logprob: -5.805932521820068
    10. '     ' → logprob: -7.180932521820068

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1552200317382812
    2. '   ' → logprob: -1.6552200317382812
    3. ' if' → logprob: -2.1552200317382812
    4. 'x' (adapté à ' x') → logprob: -2.5302200317382812
    5. '<|end|>' → logprob: -3.0302200317382812
    6. ' max' → logprob: -3.4052200317382812
    7. ' for' → logprob: -3.7802200317382812
    8. 'idx' → logprob: -4.030220031738281
    9. '    ' → logprob: -4.155220031738281
    10. ' idx' → logprob: -4.530220031738281

Token 173: '=X' (ID: 143117)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028979312628507614
    2. ' =' → logprob: -3.6539793014526367
    3. '=X' → logprob: -6.153979301452637
    4. '=x' → logprob: -7.903979301452637
    5. '.' → logprob: -10.153979301452637
    6. '_=' → logprob: -10.153979301452637
    7. 'x' → logprob: -10.778979301452637
    8. '.=' → logprob: -11.153979301452637
    9. '=None' → logprob: -11.903979301452637
    10. 'X' → logprob: -12.028979301452637

Token 174: '();' (ID: 4177)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24105751514434814
    2. ' x' → logprob: -2.3660573959350586
    3. ' setattr' → logprob: -4.241057395935059
    4. 'idx' → logprob: -4.366057395935059
    5. 'arr' → logprob: -4.741057395935059
    6. 'set' → logprob: -4.991057395935059
    7. 'while' → logprob: -4.991057395935059
    8. 'for' → logprob: -5.116057395935059
    9. 'score' → logprob: -5.116057395935059
    10. ' for' → logprob: -5.491057395935059

Token 176: '.value' (ID: 4683)
  Prédit: '.idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.14305336773395538
    2. '.' → logprob: -3.1430532932281494
    3. 'idx' → logprob: -3.3930532932281494
    4. '.score' → logprob: -4.0180535316467285
    5. 'score' → logprob: -4.5180535316467285
    6. '.x' → logprob: -4.5180535316467285
    7. '.__' → logprob: -5.2680535316467285
    8. '=' → logprob: -6.1430535316467285
    9. '.num' → logprob: -6.3930535316467285
    10. '.g' → logprob: -6.3930535316467285

Token 177: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008035867474973202
    2. '=num' → logprob: -5.258035659790039
    3. '=None' → logprob: -7.008035659790039
    4. ' =' → logprob: -7.883035659790039
    5. '=[]' → logprob: -7.883035659790039
    6. '=[' → logprob: -8.633035659790039
    7. '=max' → logprob: -8.883035659790039
    8. '=x' → logprob: -9.258035659790039
    9. '=int' → logprob: -9.258035659790039
    10. '=d' → logprob: -9.383035659790039

Token 178: 'ans' (ID: 616)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.0693421363830566
    2. '0' → logprob: -1.4443421363830566
    3. 'num' → logprob: -1.5693421363830566
    4. 'ans' → logprob: -2.4443421363830566
    5. 'arr' → logprob: -3.3193421363830566
    6. '1' → logprob: -4.069342136383057
    7. '-' → logprob: -4.694342136383057
    8. 'float' → logprob: -4.819342136383057
    9. 'd' → logprob: -4.819342136383057
    10. '[' → logprob: -4.944342136383057

Token 179: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043185874819755554
    2. '<|end|>' → logprob: -4.043185710906982
    3. ' if' → logprob: -4.168185710906982
    4. '
' → logprob: -6.043185710906982
    5. 'if' → logprob: -6.043185710906982
    6. ' for' → logprob: -6.168185710906982
    7. 'for' → logprob: -7.668185710906982
    8. '    
' → logprob: -7.918185710906982
    9. ' x' → logprob: -8.79318618774414
    10. '<|end|>' → logprob: -8.91818618774414

Token 181: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6224547028541565
    2. ' if' → logprob: -1.7474546432495117
    3. ' for' → logprob: -2.1224546432495117
    4. 'if' (adapté à ' if') → logprob: -2.2474546432495117
    5. 'for' → logprob: -2.9974546432495117
    6. 'while' → logprob: -6.622454643249512
    7. ' while' → logprob: -6.747454643249512
    8. 'def' → logprob: -6.872454643249512
    9. 'idx' → logprob: -7.122454643249512
    10. 'max' → logprob: -7.372454643249512

Token 182: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.825140655040741
    2. 'score' → logprob: -1.2001407146453857
    3. ' num' → logprob: -1.9501407146453857
    4. 'num' → logprob: -2.5751407146453857
    5. ' idx' → logprob: -3.8251407146453857
    6. '(score' → logprob: -4.450140476226807
    7. 'idx' → logprob: -5.325140476226807
    8. ' bits' → logprob: -7.575140476226807
    9. '(num' → logprob: -7.575140476226807
    10. 'bits' → logprob: -7.950140476226807

Token 183: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.637884795665741
    2. '>' → logprob: -1.5128848552703857
    3. ' >=' → logprob: -2.5128848552703857
    4. '<' → logprob: -2.6378848552703857
    5. ' >' → logprob: -2.8878848552703857
    6. '<=' → logprob: -3.8878848552703857
    7. ' <' → logprob: -4.137884616851807
    8. ' <=' → logprob: -5.762884616851807
    9. '==' → logprob: -6.512884616851807
    10. '>d' → logprob: -7.637884616851807

Token 184: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0001410850090906024
    2. 'd' → logprob: -9.625141143798828
    3. ' g' → logprob: -10.625141143798828
    4. 'num' → logprob: -11.125141143798828
    5. '0' → logprob: -11.375141143798828
    6. '100' → logprob: -11.625141143798828
    7. '(g' → logprob: -12.250141143798828
    8. 'arr' → logprob: -13.500141143798828
    9. 'score' → logprob: -13.625141143798828
    10. '   ' → logprob: -14.250141143798828

Token 185: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03424731642007828
    2. 'and' → logprob: -3.659247398376465
    3. ':' → logprob: -5.159247398376465
    4. ':
' → logprob: -6.534247398376465
    5. '   ' → logprob: -7.534247398376465
    6. ' or' → logprob: -9.034247398376465
    7. ' ' → logprob: -10.159247398376465
    8. '       ' → logprob: -11.909247398376465
    9. '  ' → logprob: -12.409247398376465
    10. ' :' → logprob: -13.034247398376465

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13817539811134338
    2. ':' → logprob: -2.7631754875183105
    3. ' and' → logprob: -3.0131754875183105
    4. '   ' → logprob: -4.5131754875183105
    5. ':
' → logprob: -5.3881754875183105
    6. ' if' → logprob: -8.263175010681152
    7. ' num' → logprob: -8.763175010681152
    8. ',' → logprob: -9.013175010681152
    9. ' for' → logprob: -9.513175010681152
    10. ' x' → logprob: -9.638175010681152

Token 187: ' x' (ID: 1215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.151526927947998
    2. ' if' → logprob: -1.401526927947998
    3. ' ans' → logprob: -1.526526927947998
    4. 'if' → logprob: -1.901526927947998
    5. '   ' → logprob: -3.401526927947998
    6. '           ' → logprob: -4.026526927947998
    7. '       ' → logprob: -5.276526927947998
    8. 'num' → logprob: -5.526526927947998
    9. ' num' → logprob: -6.151526927947998
    10. ' continue' → logprob: -6.276526927947998

Token 188: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00015014449309092015
    2. 'value' → logprob: -8.875149726867676
    3. '.' → logprob: -12.500149726867676
    4. 'alue' → logprob: -12.625149726867676
    5. '.x' → logprob: -14.125149726867676
    6. '.score' → logprob: -14.250149726867676
    7. '"value' → logprob: -15.250149726867676
    8. ' .' → logprob: -15.500149726867676
    9. '.val' → logprob: -15.625149726867676
    10. '=' → logprob: -15.875149726867676

Token 189: '=min' (ID: 149377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5408616065979004
    2. '=min' → logprob: -0.9158616065979004
    3. ' =' → logprob: -4.4158616065979
    4. '=max' → logprob: -5.7908616065979
    5. '=num' → logprob: -6.0408616065979
    6. 'min' → logprob: -10.790861129760742
    7. '=x' → logprob: -10.915861129760742
    8. 'x' → logprob: -13.540861129760742
    9. '-=' → logprob: -13.540861129760742
    10. '   ' → logprob: -13.540861129760742

Token 190: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0632133036851883
    2. '(ans' → logprob: -2.813213348388672
    3. '(score' → logprob: -6.813213348388672
    4. 'x' → logprob: -9.438213348388672
    5. '(' → logprob: -10.313213348388672
    6. '(int' → logprob: -11.313213348388672
    7. 'ans' → logprob: -11.438213348388672
    8. 'score' → logprob: -12.438213348388672
    9. '(
' → logprob: -13.938213348388672
    10. '(answer' → logprob: -14.063213348388672

Token 191: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00033320096554234624
    2. 'value' → logprob: -8.125332832336426
    3. ' .' → logprob: -11.125332832336426
    4. '.score' → logprob: -11.750332832336426
    5. ').' → logprob: -12.625332832336426
    6. '.' → logprob: -12.625332832336426
    7. 'score' → logprob: -13.000332832336426
    8. ',value' → logprob: -13.750332832336426
    9. '.x' → logprob: -13.875332832336426
    10. ',' → logprob: -14.000332832336426

Token 192: ',num' (ID: 78576)
  Prédit: ',num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.3134925961494446
    2. ',' → logprob: -1.3134925365447998
    3. ' ,' → logprob: -8.688492774963379
    4. ',min' → logprob: -11.063492774963379
    5. 'score' → logprob: -11.438492774963379
    6. ',int' → logprob: -11.438492774963379
    7. ',(' → logprob: -12.313492774963379
    8. ',sum' → logprob: -12.563492774963379
    9. ',n' → logprob: -13.063492774963379
    10. 'num' → logprob: -13.063492774963379

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015581895131617785
    2. ')
' → logprob: -6.501558303833008
    3. '+' → logprob: -11.126558303833008
    4. ')x' → logprob: -11.376558303833008
    5. '   ' → logprob: -12.126558303833008
    6. ' )' → logprob: -12.376558303833008
    7. ')

' → logprob: -13.126558303833008
    8. '       ' → logprob: -13.251558303833008
    9. ')#' → logprob: -13.251558303833008
    10. ');' → logprob: -13.251558303833008

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0421389639377594
    2. '       ' → logprob: -3.5421390533447266
    3. 'ans' → logprob: -4.917139053344727
    4. 'else' → logprob: -5.792139053344727
    5. ' ans' → logprob: -7.292139053344727
    6. ' else' → logprob: -8.167139053344727
    7. '
' → logprob: -8.792139053344727
    8. 'if' → logprob: -8.917139053344727
    9. ' if' → logprob: -9.042139053344727
    10. '           ' → logprob: -9.042139053344727

Token 195: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23632586002349854
    2. 'ans' → logprob: -1.6113258600234985
    3. ' ans' → logprob: -5.236325740814209
    4. 'else' → logprob: -5.736325740814209
    5. 'if' → logprob: -7.361325740814209
    6. '	ans' → logprob: -7.361325740814209
    7. ' if' → logprob: -8.111326217651367
    8. '       ' → logprob: -9.236326217651367
    9. '(ans' → logprob: -9.236326217651367
    10. ' else' → logprob: -9.236326217651367

Token 196: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.20322655141353607
    2. 'score' → logprob: -2.4532265663146973
    3. 'x' → logprob: -2.9532265663146973
    4. ' idx' → logprob: -3.9532265663146973
    5. 'bits' → logprob: -4.578226566314697
    6. 'ans' → logprob: -5.203226566314697
    7. 'num' → logprob: -5.578226566314697
    8. 'd' → logprob: -6.203226566314697
    9. ' score' → logprob: -6.953226566314697
    10. ' x' → logprob: -7.453226566314697

Token 197: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16022910177707672
    2. 'is' → logprob: -1.9102290868759155
    3. ' ' → logprob: -13.785228729248047
    4. ')' → logprob: -14.160228729248047
    5. '=' → logprob: -14.660228729248047
    6. '==' → logprob: -14.660228729248047
    7. ':' → logprob: -14.910228729248047
    8. 'i' → logprob: -15.285228729248047
    9. '	is' → logprob: -15.285228729248047
    10. 'Is' → logprob: -15.535228729248047

Token 198: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.22810102999210358
    2. 'None' → logprob: -1.6031010150909424
    3. 'd' → logprob: -6.8531012535095215
    4. ' not' → logprob: -6.8531012535095215
    5. '0' → logprob: -7.8531012535095215
    6. ' None' → logprob: -9.478100776672363
    7. 'Not' → logprob: -9.853100776672363
    8. 'n' → logprob: -10.228100776672363
    9. 'none' → logprob: -12.103100776672363
    10. 'False' → logprob: -12.978100776672363

Token 199: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004884536610916257
    2. ' None' → logprob: -7.62548828125
    3. 'none' → logprob: -16.12548828125
    4. '   ' → logprob: -16.25048828125
    5. '0' → logprob: -16.62548828125
    6. 'd' → logprob: -17.00048828125
    7. '(None' → logprob: -17.50048828125
    8. ' ' → logprob: -17.87548828125
    9. 'False' → logprob: -18.00048828125
    10. '-' → logprob: -18.12548828125

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4478817880153656
    2. ':
' → logprob: -1.072881817817688
    3. ' and' → logprob: -4.072881698608398
    4. 'and' → logprob: -6.572881698608398
    5. '   ' → logprob: -8.072881698608398
    6. '       ' → logprob: -8.697881698608398
    7. ':

' → logprob: -10.697881698608398
    8. ':x' → logprob: -11.072881698608398
    9. ':
' → logprob: -11.447881698608398
    10. ' ' → logprob: -12.072881698608398

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36431652307510376
    2. 'for' → logprob: -2.489316463470459
    3. 'x' → logprob: -3.114316463470459
    4. ' for' → logprob: -3.239316463470459
    5. 'score' → logprob: -3.239316463470459
    6. 'tmp' → logprob: -3.364316463470459
    7. '   ' → logprob: -4.239316463470459
    8. 'if' → logprob: -4.864316463470459
    9. 'b' → logprob: -4.989316463470459
    10. 'j' → logprob: -5.364316463470459

Token 202: ' m' (ID: 284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3147263526916504
    2. 'for' → logprob: -1.4397263526916504
    3. 'score' → logprob: -2.1897263526916504
    4. 'tmp' → logprob: -2.3147263526916504
    5. 'need' → logprob: -2.9397263526916504
    6. 'b' → logprob: -3.1897263526916504
    7. 'rem' → logprob: -3.3147263526916504
    8. 'remain' → logprob: -3.9397263526916504
    9. 'rest' → logprob: -4.06472635269165
    10. 'needed' → logprob: -4.31472635269165

Token 203: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7740483283996582
    2. 'ax' → logprob: -0.8990483283996582
    3. 'for' → logprob: -3.524048328399658
    4. '=max' → logprob: -3.524048328399658
    5. 'in' → logprob: -4.274048328399658
    6. 'x' → logprob: -4.649048328399658
    7. '=a' → logprob: -5.524048328399658
    8. '=min' → logprob: -5.649048328399658
    9. '=x' → logprob: -5.774048328399658
    10. 'a' → logprob: -5.774048328399658

Token 204: 'arr' (ID: 1614)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0764727592468262
    2. 'd' → logprob: -1.4514727592468262
    3. 'arr' → logprob: -2.076472759246826
    4. 'idx' → logprob: -2.576472759246826
    5. '(g' → logprob: -3.076472759246826
    6. 'ans' → logprob: -3.451472759246826
    7. '1' → logprob: -3.451472759246826
    8. '0' → logprob: -3.576472759246826
    9. '(d' → logprob: -4.326472759246826
    10. 'min' → logprob: -4.451472759246826

Token 205: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.1080467781284824e-05
    2. 'idx' → logprob: -10.375041007995605
    3. '[x' → logprob: -13.125041007995605
    4. '[' → logprob: -13.500041007995605
    5. '       ' → logprob: -14.375041007995605
    6. ' idx' → logprob: -14.500041007995605
    7. '[i' → logprob: -14.500041007995605
    8. '[arr' → logprob: -14.500041007995605
    9. '(idx' → logprob: -14.750041007995605
    10. '[n' → logprob: -14.875041007995605

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005264949053525925
    2. ']' → logprob: -5.630264759063721
    3. '[' → logprob: -7.380264759063721
    4. ']
' → logprob: -7.630264759063721
    5. ' ][' → logprob: -7.755264759063721
    6. '][-' → logprob: -10.505265235900879
    7. '])' → logprob: -10.880265235900879
    8. '
' → logprob: -11.130265235900879
    9. '-' → logprob: -12.192765235900879
    10. '].' → logprob: -12.317765235900879

Token 207: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4422352910041809
    2. '0' → logprob: -1.0672352313995361
    3. '2' → logprob: -4.317235469818115
    4. '
' → logprob: -9.942234992980957
    5. '```' → logprob: -10.567234992980957
    6. '   ' → logprob: -11.942234992980957
    7. ' ' → logprob: -12.317234992980957
    8. '``' → logprob: -12.629734992980957
    9. '

' → logprob: -13.129734992980957
    10. ']' → logprob: -13.192234992980957

Token 208: ']-' (ID: 27107)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.8833855986595154
    2. ']' → logprob: -1.1333856582641602
    3. ']-' → logprob: -1.3833856582641602
    4. ']+' → logprob: -4.38338565826416
    5. ']*' → logprob: -7.63338565826416
    6. ':]
' → logprob: -8.00838565826416
    7. ']*(' → logprob: -9.00838565826416
    8. '];' → logprob: -9.50838565826416
    9. ']
' → logprob: -9.75838565826416
    10. ':]' → logprob: -10.00838565826416

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05145474895834923
    2. '(g' → logprob: -3.801454782485962
    3. '(' → logprob: -5.301454544067383
    4. '((' → logprob: -5.426454544067383
    5. '(arr' → logprob: -5.551454544067383
    6. 'min' → logprob: -5.676454544067383
    7. 'max' → logprob: -5.676454544067383
    8. 'g' → logprob: -6.301454544067383
    9. '(max' → logprob: -6.926454544067383
    10. '(num' → logprob: -7.051454544067383

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20530439913272858
    2. '
' → logprob: -1.8303043842315674
    3. '<|end|>' → logprob: -5.2053046226501465
    4. ';' → logprob: -5.7053046226501465
    5. 'x' → logprob: -5.8303046226501465
    6. '        
' → logprob: -6.3303046226501465
    7. ' if' → logprob: -6.4553046226501465
    8. 'if' → logprob: -6.4553046226501465
    9. 'while' → logprob: -6.8303046226501465
    10. '+' → logprob: -7.0803046226501465

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048941146582365036
    2. '<|end|>' → logprob: -3.298941135406494
    3. ' if' → logprob: -5.423941135406494
    4. '
' → logprob: -6.298941135406494
    5. '        
' → logprob: -6.548941135406494
    6. ',' → logprob: -6.923941135406494
    7. ')' → logprob: -8.048941612243652
    8. 'if' → logprob: -8.548941612243652
    9. '<|end|>' → logprob: -8.798941612243652
    10. ';' → logprob: -8.923941612243652

Token 212: ' mx' (ID: 28004)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.5858340859413147
    2. 'for' → logprob: -1.71083402633667
    3. 'b' → logprob: -2.71083402633667
    4. '       ' → logprob: -3.08583402633667
    5. 'tmp' → logprob: -3.46083402633667
    6. 'x' → logprob: -3.58583402633667
    7. 'while' → logprob: -4.21083402633667
    8. '           ' → logprob: -5.08583402633667
    9. 'p' → logprob: -5.21083402633667
    10. 'rem' → logprob: -5.33583402633667

Token 213: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3882467448711395
    2. '_value' → logprob: -2.013246774673462
    3. '=max' → logprob: -2.513246774673462
    4. '=value' → logprob: -3.513246774673462
    5. '=m' → logprob: -4.263246536254883
    6. 'x' → logprob: -4.638246536254883
    7. '=x' → logprob: -5.013246536254883
    8. '_val' → logprob: -5.013246536254883
    9. 'value' → logprob: -5.013246536254883
    10. ' =' → logprob: -5.138246536254883

Token 214: 'idx' (ID: 13196)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5813231468200684
    2. 'm' → logprob: -1.7063231468200684
    3. 'score' → logprob: -2.0813231468200684
    4. 'arr' → logprob: -2.8313231468200684
    5. 'idx' → logprob: -3.9563231468200684
    6. 'num' → logprob: -4.456323146820068
    7. '100' → logprob: -4.956323146820068
    8. ' g' → logprob: -5.331323146820068
    9. '(m' → logprob: -5.331323146820068
    10. '(g' → logprob: -5.331323146820068

Token 215: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27632230520248413
    2. ']+' → logprob: -2.026322364807129
    3. ')+' → logprob: -2.901322364807129
    4. '][' → logprob: -3.276322364807129
    5. ' +' → logprob: -5.151322364807129
    6. ')[' → logprob: -6.276322364807129
    7. '[' → logprob: -6.401322364807129
    8. ']' → logprob: -6.401322364807129
    9. ',' → logprob: -6.901322364807129
    10. ')' → logprob: -6.901322364807129

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031091354321688414
    2. ' ' → logprob: -8.250310897827148
    3. '2' → logprob: -10.750310897827148
    4. '100' → logprob: -11.812810897827148
    5. ')' → logprob: -12.562810897827148
    6. '
' → logprob: -12.937810897827148
    7. 'm' → logprob: -13.000310897827148
    8. '   ' → logprob: -13.062810897827148
    9. '```' → logprob: -13.250310897827148
    10. '0' → logprob: -13.625310897827148

Token 217: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.00015741224342491478
    2. ')' → logprob: -9.500157356262207
    3. '+' → logprob: -9.875157356262207
    4. ')*(' → logprob: -11.000157356262207
    5. '*' → logprob: -12.000157356262207
    6. ' )' → logprob: -13.000157356262207
    7. '   ' → logprob: -13.125157356262207
    8. ')+' → logprob: -13.250157356262207
    9. ')**' → logprob: -14.125157356262207
    10. '```' → logprob: -14.750157356262207

Token 218: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0016049596015363932
    2. ' ' → logprob: -6.501605033874512
    3. 'm' → logprob: -9.501605033874512
    4. 'mx' → logprob: -12.251605033874512
    5. ' m' → logprob: -12.376605033874512
    6. '   ' → logprob: -12.626605033874512
    7. '```' → logprob: -12.626605033874512
    8. '1' → logprob: -13.189105033874512
    9. '
' → logprob: -13.251605033874512
    10. '10' → logprob: -13.314105033874512

Token 219: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.11702408641576767
    2. '*(' → logprob: -2.3670241832733154
    3. '*' → logprob: -4.117023944854736
    4. 'm' → logprob: -8.617024421691895
    5. ' *' → logprob: -9.992024421691895
    6. '(m' → logprob: -9.992024421691895
    7. '*((' → logprob: -10.742024421691895
    8. '<|end|>' → logprob: -10.867024421691895
    9. '```' → logprob: -10.992024421691895
    10. '
' → logprob: -10.992024421691895

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3841211795806885
    2. '
' → logprob: -1.5091211795806885
    3. '+' → logprob: -2.5091211795806885
    4. 'b' → logprob: -5.259120941162109
    5. '        
' → logprob: -6.009120941162109
    6. 'score' → logprob: -6.009120941162109
    7. '+b' → logprob: -6.384120941162109
    8. '           ' → logprob: -6.759120941162109
    9. '+x' → logprob: -7.759120941162109
    10. 'if' → logprob: -7.759120941162109

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3253633975982666
    2. 'if' → logprob: -2.4503633975982666
    3. 'score' → logprob: -2.4503633975982666
    4. 'b' → logprob: -3.3253633975982666
    5. 'x' → logprob: -3.9503633975982666
    6. ' if' → logprob: -4.2003631591796875
    7. '+' → logprob: -4.4503631591796875
    8. 'for' → logprob: -5.8253631591796875
    9. 'rest' → logprob: -6.0753631591796875
    10. ' score' → logprob: -6.3253631591796875

Token 222: ' left' (ID: 3561)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9561776518821716
    2. 'if' → logprob: -1.0811777114868164
    3. ' if' → logprob: -2.0811777114868164
    4. ' score' → logprob: -3.0811777114868164
    5. 'for' → logprob: -3.9561777114868164
    6. 'x' → logprob: -4.206177711486816
    7. ' for' → logprob: -4.331177711486816
    8. '       ' → logprob: -4.331177711486816
    9. 'b' → logprob: -4.456177711486816
    10. 'rest' → logprob: -5.706177711486816

Token 223: '=g' (ID: 90890)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10934707522392273
    2. '=(' → logprob: -3.484347105026245
    3. '=g' → logprob: -3.609347105026245
    4. 'over' → logprob: -4.234346866607666
    5. '=max' → logprob: -4.359346866607666
    6. 'score' → logprob: -5.109346866607666
    7. '_score' → logprob: -5.609346866607666
    8. '=int' → logprob: -5.734346866607666
    9. '=m' → logprob: -6.734346866607666
    10. ' =' → logprob: -6.859346866607666

Token 224: '-score' (ID: 165048)
  Prédit: '-score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-score' → logprob: -0.070640929043293
    2. '-' → logprob: -2.820641040802002
    3. '-left' → logprob: -5.445641040802002
    4. ' -' → logprob: -5.820641040802002
    5. '-num' → logprob: -6.945641040802002
    6. '-s' → logprob: -8.695640563964844
    7. '-m' → logprob: -9.070640563964844
    8. '-=' → logprob: -10.695640563964844
    9. '-max' → logprob: -11.070640563964844
    10. '-ms' → logprob: -11.195640563964844

Token 225: '
' (ID: 198)
  Prédit: '-left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.7952656149864197
    2. '-' → logprob: -1.0452656745910645
    3. '       ' → logprob: -2.2952656745910645
    4. '
' → logprob: -2.9202656745910645
    5. '-m' → logprob: -4.0452656745910645
    6. ' -' → logprob: -4.5452656745910645
    7. ' if' → logprob: -5.4202656745910645
    8. '+' → logprob: -6.1702656745910645
    9. '-if' → logprob: -6.7952656745910645
    10. '-num' → logprob: -7.0452656745910645

Token 226: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3363380432128906
    2. '       ' → logprob: -1.4613380432128906
    3. '        ' → logprob: -4.336338043212891
    4. '<|end|>' → logprob: -4.711338043212891
    5. '
' → logprob: -5.086338043212891
    6. '+' → logprob: -5.336338043212891
    7. 'if' → logprob: -5.586338043212891
    8. '-' → logprob: -5.711338043212891
    9. '        
' → logprob: -6.336338043212891
    10. ',' → logprob: -6.461338043212891

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05844299495220184
    2. ' if' → logprob: -3.558443069458008
    3. '       ' → logprob: -4.808443069458008
    4. 'x' → logprob: -5.433443069458008
    5. 'n' → logprob: -5.933443069458008
    6. 'q' → logprob: -6.308443069458008
    7. 'for' → logprob: -6.433443069458008
    8. 'c' → logprob: -6.808443069458008
    9. 't' → logprob: -7.058443069458008
    10. 'k' → logprob: -7.308443069458008

Token 228: ' left' (ID: 3561)
  Prédit: ' mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mx' → logprob: -1.200183391571045
    2. 'mx' → logprob: -1.325183391571045
    3. ' left' → logprob: -1.575183391571045
    4. 'left' → logprob: -1.575183391571045
    5. '(mx' → logprob: -4.825183391571045
    6. 'm' → logprob: -5.575183391571045
    7. '(left' → logprob: -5.825183391571045
    8. ' m' → logprob: -5.950183391571045
    9. '(m' → logprob: -6.825183391571045
    10. ' (' → logprob: -7.950183391571045

Token 229: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5233086943626404
    2. '>' → logprob: -1.2733087539672852
    3. ' <=' → logprob: -2.523308753967285
    4. ' >' → logprob: -3.273308753967285
    5. '>=' → logprob: -5.523308753967285
    6. '/m' → logprob: -6.148308753967285
    7. '%' → logprob: -6.898308753967285
    8. '<m' → logprob: -7.148308753967285
    9. ' >=' → logprob: -8.148308753967285
    10. '<' → logprob: -8.398308753967285

Token 230: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.04506923630833626
    2. ' mx' → logprob: -3.1700692176818848
    3. 'm' → logprob: -6.670069217681885
    4. '(mx' → logprob: -7.545069217681885
    5. ' m' → logprob: -9.295069694519043
    6. '0' → logprob: -9.295069694519043
    7. '(m' → logprob: -10.545069694519043
    8. '(' → logprob: -10.670069694519043
    9. 'max' → logprob: -11.420069694519043
    10. ' ' → logprob: -12.295069694519043

Token 231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38349950313568115
    2. ':' → logprob: -1.2584995031356812
    3. ' and' → logprob: -3.3834996223449707
    4. '           ' → logprob: -8.383499145507812
    5. 'and' → logprob: -8.883499145507812
    6. '       ' → logprob: -9.883499145507812
    7. ':
' → logprob: -10.758499145507812
    8. ':

' → logprob: -10.883499145507812
    9. ' or' → logprob: -11.383499145507812
    10. ',' → logprob: -11.383499145507812

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009818308055400848
    2. ':' → logprob: -5.634818077087402
    3. ':
' → logprob: -6.259818077087402
    4. ' and' → logprob: -7.509818077087402
    5. 'num' → logprob: -7.509818077087402
    6. ' x' → logprob: -7.634818077087402
    7. ' for' → logprob: -7.759818077087402
    8. '               ' → logprob: -7.884818077087402
    9. ' num' → logprob: -8.134818077087402
    10. '       ' → logprob: -8.134818077087402

Token 233: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34728559851646423
    2. 'q' → logprob: -2.972285509109497
    3. 'import' → logprob: -3.222285509109497
    4. '           ' → logprob: -3.347285509109497
    5. '               ' → logprob: -3.597285509109497
    6. 'k' (adapté à ' k') → logprob: -3.597285509109497
    7. 'p' → logprob: -4.347285747528076
    8. 'n' → logprob: -4.347285747528076
    9. 't' → logprob: -4.472285747528076
    10. 'c' → logprob: -4.847285747528076

Token 234: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5945793390274048
    2. '=k' → logprob: -1.3445793390274048
    3. '=(' → logprob: -1.8445793390274048
    4. ' =' → logprob: -4.094579219818115
    5. '=max' → logprob: -4.844579219818115
    6. '=int' → logprob: -6.469579219818115
    7. '=((' → logprob: -6.594579219818115
    8. '=m' → logprob: -7.094579219818115
    9. '=min' → logprob: -8.094579696655273
    10. ',left' → logprob: -8.094579696655273

Token 235: '(-(' (ID: 174232)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.13204315304756165
    2. '(-(' → logprob: -2.3820431232452393
    3. '((-' → logprob: -4.382043361663818
    4. 'left' → logprob: -4.382043361663818
    5. '(' → logprob: -6.382043361663818
    6. '(left' → logprob: -6.507043361663818
    7. ' (-' → logprob: -7.007043361663818
    8. '((' → logprob: -7.007043361663818
    9. '-(' → logprob: -8.00704288482666
    10. ' (' → logprob: -8.13204288482666

Token 236: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00012403888104017824
    2. ' left' → logprob: -9.000123977661133
    3. 'int' → logprob: -15.125123977661133
    4. '   ' → logprob: -16.250123977661133
    5. '(left' → logprob: -16.250123977661133
    6. '[left' → logprob: -16.875123977661133
    7. '	left' → logprob: -17.250123977661133
    8. '
' → logprob: -17.250123977661133
    9. ')' → logprob: -17.625123977661133
    10. 'g' → logprob: -17.875123977661133

Token 237: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5013627409934998
    2. ' //' → logprob: -1.0013628005981445
    3. ' //(' → logprob: -4.1263628005981445
    4. ')//' → logprob: -5.0013628005981445
    5. ')' → logprob: -5.6263628005981445
    6. ' )' → logprob: -8.501362800598145
    7. ' ' → logprob: -9.501362800598145
    8. '           ' → logprob: -10.376362800598145
    9. '/(' → logprob: -10.751362800598145
    10. ' ' → logprob: -11.376362800598145

Token 238: '(' (ID: 7)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0019445802317932248
    2. ' (' → logprob: -6.376944541931152
    3. '(' → logprob: -8.626944541931152
    4. '((' → logprob: -10.001944541931152
    5. 'idx' → logprob: -12.001944541931152
    6. '(index' → logprob: -12.376944541931152
    7. '[idx' → logprob: -12.376944541931152
    8. '(id' → logprob: -14.251944541931152
    9. ' idx' → logprob: -14.751944541931152
    10. '100' → logprob: -14.751944541931152

Token 239: '100' (ID: 1353)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0031108111143112183
    2. '(' → logprob: -6.878110885620117
    3. ' (' → logprob: -6.878110885620117
    4. '100' → logprob: -7.253110885620117
    5. 'idx' → logprob: -8.503110885620117
    6. '((' → logprob: -9.503110885620117
    7. '(index' → logprob: -10.628110885620117
    8. '(id' → logprob: -11.753110885620117
    9. ' idx' → logprob: -12.003110885620117
    10. ' ' → logprob: -12.253110885620117

Token 240: '*(' (ID: 14793)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.28049859404563904
    2. '*(' → logprob: -1.7804986238479614
    3. '(k' → logprob: -2.655498504638672
    4. '(' → logprob: -6.280498504638672
    5. ' (' → logprob: -6.905498504638672
    6. ')' → logprob: -7.405498504638672
    7. '[idx' → logprob: -7.405498504638672
    8. '(n' → logprob: -7.780498504638672
    9. '))' → logprob: -8.155498504638672
    10. '(index' → logprob: -8.155498504638672

Token 241: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0060962350107729435
    2. '(idx' → logprob: -5.131096363067627
    3. ' idx' → logprob: -9.131095886230469
    4. '1' → logprob: -10.006095886230469
    5. 'index' → logprob: -12.756095886230469
    6. '[idx' → logprob: -13.131095886230469
    7. 'k' → logprob: -13.256095886230469
    8. '   ' → logprob: -13.381095886230469
    9. ' (' → logprob: -13.631095886230469
    10. '	idx' → logprob: -13.881095886230469

Token 242: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.347765181795694e-05
    2. ' +' → logprob: -9.875053405761719
    3. ')+' → logprob: -13.375053405761719
    4. '+k' → logprob: -16.00005340576172
    5. '1' → logprob: -16.25005340576172
    6. '+x' → logprob: -16.87505340576172
    7. '+
' → logprob: -17.00005340576172
    8. '()+' → logprob: -17.00005340576172
    9. ']+' → logprob: -17.25005340576172
    10. 'plus' → logprob: -18.12505340576172

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001549089647596702
    2. '+' → logprob: -9.375154495239258
    3. 'm' → logprob: -10.875154495239258
    4. ' ' → logprob: -11.000154495239258
    5. 'k' → logprob: -11.500154495239258
    6. 'idx' → logprob: -11.750154495239258
    7. '100' → logprob: -12.687654495239258
    8. '0' → logprob: -12.875154495239258
    9. '
' → logprob: -13.312654495239258
    10. '```' → logprob: -13.312654495239258

Token 244: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04037848860025406
    2. '))
' → logprob: -3.6653785705566406
    3. ' ))' → logprob: -4.415378570556641
    4. ' ))
' → logprob: -6.540378570556641
    5. ')))' → logprob: -7.915378570556641
    6. ')' → logprob: -10.16537857055664
    7. '))

' → logprob: -11.41537857055664
    8. ' )' → logprob: -11.66537857055664
    9. '))
' → logprob: -12.16537857055664
    10. ')))
' → logprob: -12.29037857055664

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006009306525811553
    2. ' num' → logprob: -8.250600814819336
    3. 'num' → logprob: -8.375600814819336
    4. ' x' → logprob: -9.625600814819336
    5. '       ' → logprob: -11.625600814819336
    6. 'x' → logprob: -11.625600814819336
    7. '               ' → logprob: -12.250600814819336
    8. '
' → logprob: -13.125600814819336
    9. ' ' → logprob: -13.125600814819336
    10. ',' → logprob: -13.250600814819336

Token 246: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.08159051835536957
    2. ' num' → logprob: -2.706590414047241
    3. 'x' → logprob: -5.70659065246582
    4. '           ' → logprob: -6.08159065246582
    5. 'ans' → logprob: -6.33159065246582
    6. 'score' → logprob: -6.58159065246582
    7. ' x' → logprob: -7.33159065246582
    8. 'if' → logprob: -7.45659065246582
    9. ' ans' → logprob: -7.83159065246582
    10. 'k' → logprob: -8.20659065246582

Token 247: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001410850090906024
    2. ' +=' → logprob: -9.250141143798828
    3. '=num' → logprob: -10.375141143798828
    4. '=' → logprob: -12.375141143798828
    5. ']+=' → logprob: -12.375141143798828
    6. '+=(' → logprob: -12.500141143798828
    7. '=max' → logprob: -14.375141143798828
    8. '+' → logprob: -15.250141143798828
    9. ',num' → logprob: -15.750141143798828
    10. '-=' → logprob: -16.125141143798828

Token 248: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.1008713702030946e-06
    2. ' k' → logprob: -13.125001907348633
    3. 'int' → logprob: -18.500001907348633
    4. '   ' → logprob: -20.125001907348633
    5. ' ' → logprob: -20.250001907348633
    6. 'kx' → logprob: -20.250001907348633
    7. '(k' → logprob: -20.875001907348633
    8. '	k' → logprob: -20.875001907348633
    9. '+k' → logprob: -21.125001907348633
    10. '
' → logprob: -21.125001907348633

Token 249: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09046178311109543
    2. 'arr' → logprob: -3.0904617309570312
    3. 'x' → logprob: -4.090461730957031
    4. 'k' → logprob: -5.840461730957031
    5. ' arr' → logprob: -6.215461730957031
    6. '100' → logprob: -6.215461730957031
    7. '            ' → logprob: -6.215461730957031
    8. '*' → logprob: -6.590461730957031
    9. ' x' → logprob: -6.590461730957031
    10. ' ' → logprob: -6.715461730957031

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04216353967785835
    2. 'x' → logprob: -4.417163372039795
    3. ' x' → logprob: -4.542163372039795
    4. 'score' → logprob: -5.292163372039795
    5. ' if' → logprob: -5.417163372039795
    6. 'num' → logprob: -5.917163372039795
    7. 'if' → logprob: -6.292163372039795
    8. '       ' → logprob: -6.417163372039795
    9. ' score' → logprob: -6.792163372039795
    10. ' num' → logprob: -8.292163848876953

Token 251: ' x' (ID: 1215)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.2960589528083801
    2. 'x' (adapté à ' x') → logprob: -1.5460588932037354
    3. ' score' → logprob: -3.6710588932037354
    4. ' x' → logprob: -4.6710591316223145
    5. 'ans' → logprob: -5.5460591316223145
    6. 'k' → logprob: -6.4210591316223145
    7. 'if' → logprob: -7.1710591316223145
    8. 'num' → logprob: -7.4210591316223145
    9. '           ' → logprob: -7.7960591316223145
    10. ' ans' → logprob: -8.046058654785156

Token 252: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00010425841173855588
    2. 'value' → logprob: -9.500103950500488
    3. '.' → logprob: -10.500103950500488
    4. ' .' → logprob: -13.375103950500488
    5. '"value' → logprob: -16.250104904174805
    6. '```' → logprob: -16.750104904174805
    7. ''value' → logprob: -18.000104904174805
    8. '​.' → logprob: -18.000104904174805
    9. ' value' → logprob: -18.125104904174805
    10. '}.' → logprob: -18.625104904174805

Token 253: '=min' (ID: 149377)
  Prédit: '=min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.05396883934736252
    2. '=' → logprob: -3.053968906402588
    3. '.value' → logprob: -5.678968906402588
    4. '.min' → logprob: -6.553968906402588
    5. '.' → logprob: -7.928968906402588
    6. ' =' → logprob: -9.42896842956543
    7. ' .' → logprob: -10.55396842956543
    8. '=max' → logprob: -10.67896842956543
    9. 'min' → logprob: -11.42896842956543
    10. '=value' → logprob: -12.42896842956543

Token 254: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.988221684878226e-06
    2. 'x' → logprob: -12.000006675720215
    3. '(' → logprob: -14.500006675720215
    4. '(num' → logprob: -15.375006675720215
    5. '(ans' → logprob: -17.00000762939453
    6. 'num' → logprob: -17.87500762939453
    7. '(
' → logprob: -18.00000762939453
    8. '   ' → logprob: -18.25000762939453
    9. ' x' → logprob: -18.37500762939453
    10. ' (' → logprob: -18.75000762939453

Token 255: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -5.68153518543113e-05
    2. 'value' → logprob: -10.375057220458984
    3. ' .' → logprob: -11.625057220458984
    4. '.num' → logprob: -11.625057220458984
    5. '.' → logprob: -12.500057220458984
    6. 'num' → logprob: -13.875057220458984
    7. 'alue' → logprob: -14.375057220458984
    8. ').' → logprob: -14.625057220458984
    9. '.x' → logprob: -15.125057220458984
    10. '```' → logprob: -15.250057220458984

Token 256: ',num' (ID: 78576)
  Prédit: ',num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.13439150154590607
    2. 'num' → logprob: -2.1343915462493896
    3. '(num' → logprob: -5.2593913078308105
    4. ',' → logprob: -7.0093913078308105
    5. ',x' → logprob: -7.2593913078308105
    6. 'x' → logprob: -7.6343913078308105
    7. ' num' → logprob: -9.259391784667969
    8. '(x' → logprob: -11.009391784667969
    9. '=num' → logprob: -11.134391784667969
    10. ',k' → logprob: -11.509391784667969

Token 257: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16208022832870483
    2. ')' → logprob: -1.9120802879333496
    3. ')
' → logprob: -6.91208028793335
    4. '<|end|>' → logprob: -7.78708028793335
    5. '       ' → logprob: -8.787079811096191
    6. '
' → logprob: -9.787079811096191
    7. '    
' → logprob: -9.912079811096191
    8. ')return' → logprob: -10.162079811096191
    9. '           ' → logprob: -10.662079811096191
    10. '<|end|>' → logprob: -11.037079811096191

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03230613097548485
    2. ' ans' → logprob: -4.03230619430542
    3. 'ans' → logprob: -4.28230619430542
    4. '	ans' → logprob: -8.657305717468262
    5. '       ' → logprob: -10.782305717468262
    6. '(ans' → logprob: -10.907305717468262
    7. '           ' → logprob: -11.282305717468262
    8. '
' → logprob: -11.907305717468262
    9. '<|end|>' → logprob: -12.657305717468262
    10. '_ans' → logprob: -12.782305717468262

Token 259: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.28454336524009705
    2. ' ans' → logprob: -1.7845433950424194
    3. '   ' → logprob: -2.53454327583313
    4. '	ans' → logprob: -7.784543514251709
    5. '(ans' → logprob: -10.28454303741455
    6. '
' → logprob: -12.28454303741455
    7. ' ' → logprob: -12.65954303741455
    8. '_ans' → logprob: -12.65954303741455
    9. '```' → logprob: -13.40954303741455
    10. '       ' → logprob: -13.40954303741455

Token 260: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.081385038793087
    2. '=min' → logprob: -2.5813851356506348
    3. ' =' → logprob: -6.081385135650635
    4. '=x' → logprob: -9.081384658813477
    5. '=int' → logprob: -9.581384658813477
    6. '=max' → logprob: -10.956384658813477
    7. '=

' → logprob: -13.331384658813477
    8. '=
' → logprob: -13.581384658813477
    9. '=value' → logprob: -14.081384658813477
    10. '=f' → logprob: -14.456384658813477

Token 261: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00010688089241739362
    2. 'value' → logprob: -9.250106811523438
    3. '.' → logprob: -11.500106811523438
    4. 'alue' → logprob: -15.625106811523438
    5. ' value' → logprob: -16.000106811523438
    6. ' .' → logprob: -16.375106811523438
    7. '.values' → logprob: -16.875106811523438
    8. '```' → logprob: -17.500106811523438
    9. '_value' → logprob: -17.625106811523438
    10. ').' → logprob: -18.125106811523438

Token 262: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '(int' (ID: 2742)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.018160710111260414
    2. '(int' → logprob: -4.018160820007324
    3. '(' → logprob: -12.268160820007324
    4. 'ans' → logprob: -12.393160820007324
    5. '(round' → logprob: -14.268160820007324
    6. 'int' → logprob: -15.143160820007324
    7. '(answer' → logprob: -15.143160820007324
    8. '()' → logprob: -15.518160820007324
    9. ' (' → logprob: -16.143159866333008
    10. '(abs' → logprob: -16.268159866333008

Token 265: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.173704271830502e-06
    2. 'ans' → logprob: -12.75000286102295
    3. '(' → logprob: -15.62500286102295
    4. '	ans' → logprob: -17.875003814697266
    5. ' (' → logprob: -18.875003814697266
    6. '(round' → logprob: -19.500003814697266
    7. ' ans' → logprob: -19.500003814697266
    8. '(answer' → logprob: -19.875003814697266
    9. '(
' → logprob: -20.250003814697266
    10. '(abs' → logprob: -20.375003814697266

Token 266: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004080897197127342
    2. '))' → logprob: -5.504080772399902
    3. ' )' → logprob: -13.754080772399902
    4. ')))' → logprob: -14.629080772399902
    5. ')
' → logprob: -15.129080772399902
    6. ')}' → logprob: -15.754080772399902
    7. ')`' → logprob: -15.754080772399902
    8. '())' → logprob: -16.25408172607422
    9. '})' → logprob: -16.25408172607422
    10. '])' → logprob: -16.75408172607422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 264
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 207
Précision stricte (1ère position): 42.80%
Précision adaptée (1ère position): 44.32%
Précision (top 10): 78.41%
================================================================================
