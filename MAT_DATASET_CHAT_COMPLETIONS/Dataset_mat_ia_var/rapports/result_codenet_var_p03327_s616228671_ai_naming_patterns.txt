================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_value = int(input(' '))

def category_label_from_number(number_value):
    if number_value <= 999:
        return 'ABC'
    else:
        return 'ABD'

print(category_label_from_number(user_input_value))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31462135910987854
    2. '[' → logprob: -2.1896214485168457
    3. '.' → logprob: -2.8146214485168457
    4. '=' → logprob: -2.9396214485168457
    5. ')' → logprob: -4.064621448516846
    6. '```' → logprob: -4.689621448516846
    7. ' ' → logprob: -5.064621448516846
    8. ']' → logprob: -5.689621448516846
    9. ' =' → logprob: -5.689621448516846
    10. '+' → logprob: -6.689621448516846

Token 4: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1419508457183838
    2. ' "' → logprob: -1.6419508457183838
    3. ' ' → logprob: -1.7669508457183838
    4. 'input' → logprob: -1.8919508457183838
    5. '"' → logprob: -2.266950845718384
    6. ' '' → logprob: -3.766950845718384
    7. ' ""' → logprob: -4.516950607299805
    8. ''' → logprob: -4.891950607299805
    9. '""' → logprob: -5.016950607299805
    10. ' ''' → logprob: -5.141950607299805

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009724093601107597
    2. '(user' → logprob: -5.384724140167236
    3. 'user' → logprob: -6.134724140167236
    4. '```' → logprob: -6.884724140167236
    5. ''' → logprob: -8.009723663330078
    6. '[' → logprob: -8.134723663330078
    7. '`' → logprob: -8.134723663330078
    8. '_' → logprob: -8.634723663330078
    9. '("("' → logprob: -8.759723663330078
    10. '_user' → logprob: -9.134723663330078

Token 6: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0394771471619606
    2. ')' → logprob: -3.7894771099090576
    3. '()' → logprob: -4.664477348327637
    4. '('' → logprob: -5.914477348327637
    5. '())' → logprob: -6.164477348327637
    6. '("("' → logprob: -7.539477348327637
    7. '(user' → logprob: -7.914477348327637
    8. '(
' → logprob: -8.414477348327637
    9. '(()' → logprob: -9.039477348327637
    10. '(""))' → logprob: -9.039477348327637

Token 7: ' '' (ID: 461)
  Prédit: 'Enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Enter' → logprob: -0.4684004485607147
    2. ''))' → logprob: -1.343400478363037
    3. 'Please' → logprob: -2.343400478363037
    4. '))' → logprob: -4.468400478363037
    5. '>' → logprob: -6.718400478363037
    6. '"))' → logprob: -7.093400478363037
    7. ''' → logprob: -7.093400478363037
    8. ')' → logprob: -7.593400478363037
    9. 'Age' → logprob: -7.718400478363037
    10. 'How' → logprob: -7.968400478363037

Token 8: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03306425362825394
    2. ')' → logprob: -3.533064365386963
    3. ''))' → logprob: -6.783064365386963
    4. '(' → logprob: -7.533064365386963
    5. 'Enter' → logprob: -7.658064365386963
    6. 'Please' → logprob: -7.908064365386963
    7. '>' → logprob: -7.908064365386963
    8. ')))' → logprob: -8.408063888549805
    9. '"))' → logprob: -9.658063888549805
    10. '('' → logprob: -11.033063888549805

Token 9: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18541595339775085
    2. '+' → logprob: -1.8104159832000732
    3. '*' → logprob: -5.310415744781494
    4. '+)' → logprob: -8.310416221618652
    5. '(' → logprob: -9.185416221618652
    6. '#' → logprob: -9.310416221618652
    7. '>' → logprob: -9.310416221618652
    8. ' +' → logprob: -9.685416221618652
    9. '%' → logprob: -10.560416221618652
    10. ' )' → logprob: -11.435416221618652

Token 10: ' category' (ID: 8711)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.6081271171569824
    2. ' calculate' → logprob: -1.7331271171569824
    3. ' factorial' → logprob: -2.6081271171569824
    4. ' user' → logprob: -2.8581271171569824
    5. ' process' → logprob: -2.8581271171569824
    6. ' add' → logprob: -4.108127117156982
    7. ' square' → logprob: -4.358127117156982
    8. ' check' → logprob: -4.358127117156982
    9. ' validate' → logprob: -4.608127117156982
    10. ' space' → logprob: -4.983127117156982

Token 11: '_label' (ID: 13175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5913052558898926
    2. '_' → logprob: -0.8413052558898926
    3. '(user' → logprob: -4.966305255889893
    4. ')' → logprob: -6.091305255889893
    5. '):' → logprob: -6.466305255889893
    6. '_:' → logprob: -6.841305255889893
    7. '('_' → logprob: -6.966305255889893
    8. '(_' → logprob: -7.341305255889893
    9. '_)' → logprob: -7.716305255889893
    10. '_name' → logprob: -7.966305255889893

Token 12: '_from' (ID: 12526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0706745833158493
    2. '_' → logprob: -2.6956746578216553
    3. ':' → logprob: -8.320674896240234
    4. '(user' → logprob: -8.820674896240234
    5. '('_' → logprob: -9.695674896240234
    6. ')' → logprob: -9.820674896240234
    7. '('' → logprob: -10.070674896240234
    8. ' (' → logprob: -10.445674896240234
    9. 's' → logprob: -10.945674896240234
    10. '_:' → logprob: -10.945674896240234

Token 13: '_number' (ID: 11733)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.9804131388664246
    2. ' user' → logprob: -0.9804131388664246
    3. 'value' → logprob: -2.9804131984710693
    4. ' age' → logprob: -3.6054131984710693
    5. '_value' → logprob: -3.7304131984710693
    6. ' value' → logprob: -3.8554131984710693
    7. 'category' → logprob: -3.8554131984710693
    8. 'score' → logprob: -4.10541296005249
    9. 'age' → logprob: -4.23041296005249
    10. '_age' → logprob: -4.60541296005249

Token 14: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020826108753681183
    2. '(number' → logprob: -4.27082633972168
    3. '(num' → logprob: -5.64582633972168
    4. '(user' → logprob: -6.14582633972168
    5. '(n' → logprob: -7.64582633972168
    6. ' (' → logprob: -8.64582633972168
    7. '_number' → logprob: -9.52082633972168
    8. '_' → logprob: -9.64582633972168
    9. '(category' → logprob: -10.14582633972168
    10. '(token' → logprob: -10.52082633972168

Token 15: '_value' (ID: 6734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003636892419308424
    2. ')' → logprob: -5.878636837005615
    3. ':' → logprob: -7.128636837005615
    4. ' ):' → logprob: -11.628637313842773
    5. '):
' → logprob: -12.128637313842773
    6. '   ' → logprob: -12.503637313842773
    7. ':)' → logprob: -13.253637313842773
    8. ''):' → logprob: -13.503637313842773
    9. ' ' → logprob: -13.753637313842773
    10. '_' → logprob: -14.003637313842773

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037237186916172504
    2. ')' → logprob: -5.878723621368408
    3. ':' → logprob: -7.128723621368408
    4. ' ):' → logprob: -9.628724098205566
    5. '):
' → logprob: -10.753724098205566
    6. ''):' → logprob: -11.753724098205566
    7. '   ' → logprob: -12.628724098205566
    8. ':)' → logprob: -12.628724098205566
    9. ' ' → logprob: -12.753724098205566
    10. '>):' → logprob: -13.628724098205566

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36897706985473633
    2. ':' → logprob: -1.2439770698547363
    3. ' ' → logprob: -3.9939770698547363
    4. ' if' → logprob: -7.868977069854736
    5. '  ' → logprob: -8.618976593017578
    6. ')' → logprob: -8.618976593017578
    7. '```' → logprob: -8.868976593017578
    8. ' :' → logprob: -8.993976593017578
    9. ':
' → logprob: -8.993976593017578
    10. ' 
' → logprob: -9.243976593017578

Token 18: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010667053982615471
    2. ' ' → logprob: -5.510666847229004
    3. ' if' → logprob: -5.635666847229004
    4. '    ' → logprob: -7.260666847229004
    5. 'if' (adapté à ' if') → logprob: -7.385666847229004
    6. ' 
' → logprob: -7.885666847229004
    7. '    
' → logprob: -8.510666847229004
    8. ':' → logprob: -8.760666847229004
    9. '  ' → logprob: -8.885666847229004
    10. ')' → logprob: -8.885666847229004

Token 19: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.005983543116599321
    2. 'number' → logprob: -5.130983352661133
    3. ' user' → logprob: -10.380983352661133
    4. ' ' → logprob: -10.880983352661133
    5. '(number' → logprob: -13.505983352661133
    6. '0' → logprob: -13.755983352661133
    7. '	number' → logprob: -14.005983352661133
    8. '   ' → logprob: -14.380983352661133
    9. '_number' → logprob: -15.005983352661133
    10. 'user' → logprob: -15.130983352661133

Token 20: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6483393311500549
    2. ' <' → logprob: -1.6483392715454102
    3. ' <=' → logprob: -2.02333927154541
    4. ' ' → logprob: -3.02333927154541
    5. ' ==' → logprob: -3.14833927154541
    6. '_value' → logprob: -3.52333927154541
    7. ' >=' → logprob: -4.52333927154541
    8. ' _' → logprob: -5.27333927154541
    9. '   ' → logprob: -5.77333927154541
    10. ' >' → logprob: -5.77333927154541

Token 21: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3425445854663849
    2. ' <' → logprob: -1.8425445556640625
    3. ' <=' → logprob: -2.5925445556640625
    4. '==' → logprob: -3.3425445556640625
    5. ' >=' → logprob: -4.5925445556640625
    6. '<' → logprob: -5.4675445556640625
    7. '<=' → logprob: -5.9675445556640625
    8. ' >' → logprob: -6.3425445556640625
    9. ' ' → logprob: -6.5925445556640625
    10. '>' → logprob: -7.8425445556640625

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.424955815076828
    2. '10' → logprob: -1.5499558448791504
    3. '0' → logprob: -2.1749558448791504
    4. '5' → logprob: -5.04995584487915
    5. '9' → logprob: -5.54995584487915
    6. '3' → logprob: -5.67495584487915
    7. '18' → logprob: -6.04995584487915
    8. '1' → logprob: -7.04995584487915
    9. '2' → logprob: -7.42495584487915
    10. '20' → logprob: -7.42495584487915

Token 23: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6808636784553528
    2. '0' → logprob: -1.055863618850708
    3. ' ' → logprob: -2.555863618850708
    4. '5' → logprob: -3.930863618850708
    5. '3' → logprob: -4.055863857269287
    6. '9' → logprob: -4.930863857269287
    7. '18' → logprob: -5.055863857269287
    8. '2' → logprob: -5.680863857269287
    9. '50' → logprob: -5.680863857269287
    10. '20' → logprob: -6.055863857269287

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018983196059707552
    2. ':
' → logprob: -9.875189781188965
    3. ' :' → logprob: -9.875189781188965
    4. ':return' → logprob: -9.875189781188965
    5. '):' → logprob: -10.750189781188965
    6. '9' → logprob: -11.875189781188965
    7. ' and' → logprob: -13.625189781188965
    8. ',' → logprob: -13.875189781188965
    9. '.' → logprob: -13.875189781188965
    10. '0' → logprob: -14.000189781188965

Token 25: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01908661238849163
    2. '       ' → logprob: -5.394086837768555
    3. '   ' → logprob: -5.394086837768555
    4. ' :' → logprob: -5.394086837768555
    5. ':
' → logprob: -6.144086837768555
    6. ':return' → logprob: -6.269086837768555
    7. ' ' → logprob: -8.269086837768555
    8. '    ' → logprob: -8.394086837768555
    9. ' return' → logprob: -8.519086837768555
    10. '):' → logprob: -9.144086837768555

Token 26: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12626472115516663
    2. '   ' → logprob: -3.501264810562134
    3. '       ' → logprob: -3.751264810562134
    4. ' return' → logprob: -3.751264810562134
    5. ' ' → logprob: -4.001264572143555
    6. 'return' (adapté à ' return') → logprob: -4.376264572143555
    7. ' '' → logprob: -5.001264572143555
    8. '"' → logprob: -6.751264572143555
    9. ':return' → logprob: -7.626264572143555
    10. ' 
' → logprob: -8.001264572143555

Token 27: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008076073601841927
    2. '"' → logprob: -5.008076190948486
    3. ' '' → logprob: -6.758076190948486
    4. ''S' → logprob: -9.633075714111328
    5. ''A' → logprob: -10.133075714111328
    6. ' "' → logprob: -11.008075714111328
    7. ''s' → logprob: -11.133075714111328
    8. '1' → logprob: -11.633075714111328
    9. '0' → logprob: -11.758075714111328
    10. ''D' → logprob: -11.883075714111328

Token 28: 'ABC' (ID: 44197)
  Prédit: 'Low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Low' → logprob: -0.5439944863319397
    2. 'low' → logprob: -2.043994426727295
    3. 'Bron' → logprob: -2.043994426727295
    4. 'Basic' → logprob: -2.668994426727295
    5. 'bron' → logprob: -4.043994426727295
    6. 'Budget' → logprob: -4.668994426727295
    7. 'basic' → logprob: -4.918994426727295
    8. 'small' → logprob: -4.918994426727295
    9. 'Small' → logprob: -5.293994426727295
    10. ' low' → logprob: -5.543994426727295

Token 29: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014144349843263626
    2. '1' → logprob: -5.514144420623779
    3. '-' → logprob: -5.639144420623779
    4. '123' → logprob: -5.639144420623779
    5. '')' → logprob: -6.889144420623779
    6. ' '' → logprob: -7.514144420623779
    7. 'D' → logprob: -7.514144420623779
    8. 'A' → logprob: -8.264143943786621
    9. '-A' → logprob: -9.514143943786621
    10. '_' → logprob: -9.889143943786621

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7092480659484863
    2. '   ' → logprob: -0.8342480659484863
    3. ' elif' → logprob: -3.4592480659484863
    4. '<|end|>' → logprob: -4.584248065948486
    5. '
' → logprob: -4.709248065948486
    6. '\n' → logprob: -5.084248065948486
    7. 'else' (adapté à ' else') → logprob: -5.709248065948486
    8. '```' → logprob: -5.834248065948486
    9. '    
' → logprob: -6.084248065948486
    10. '	elif' → logprob: -6.459248065948486

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00175062648486346
    2. ':
' → logprob: -6.751750469207764
    3. ' :' → logprob: -8.126750946044922
    4. '   ' → logprob: -8.626750946044922
    5. '       ' → logprob: -10.251750946044922
    6. ':return' → logprob: -10.751750946044922
    7. ' if' → logprob: -11.126750946044922
    8. 'if' → logprob: -11.751750946044922
    9. '    ' → logprob: -12.376750946044922
    10. ' return' → logprob: -12.501750946044922

Token 33: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5334442853927612
    2. ' '' → logprob: -0.9084442853927612
    3. '       ' → logprob: -5.283444404602051
    4. '   ' → logprob: -6.158444404602051
    5. ' return' → logprob: -6.408444404602051
    6. 'return' → logprob: -7.658444404602051
    7. '    ' → logprob: -8.40844440460205
    8. '"' → logprob: -8.65844440460205
    9. ' ' → logprob: -8.65844440460205
    10. ' None' → logprob: -9.65844440460205

Token 34: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6861760020256042
    2. ' return' → logprob: -1.186176061630249
    3. 'return' (adapté à ' return') → logprob: -2.061176061630249
    4. ' '' → logprob: -2.936176061630249
    5. '   ' → logprob: -4.81117582321167
    6. '       ' → logprob: -6.43617582321167
    7. ' ' → logprob: -7.93617582321167
    8. '    ' → logprob: -9.436176300048828
    9. 'if' → logprob: -9.436176300048828
    10. '  ' → logprob: -9.686176300048828

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0382491834461689
    2. ' '' → logprob: -3.2882492542266846
    3. '"' → logprob: -9.288249015808105
    4. ' None' → logprob: -10.413249015808105
    5. ' ' → logprob: -10.788249015808105
    6. ' ' → logprob: -11.038249015808105
    7. 'None' → logprob: -11.538249015808105
    8. '''' → logprob: -11.663249015808105
    9. ''s' → logprob: -11.788249015808105
    10. ''user' → logprob: -12.538249015808105

Token 36: 'ABD' (ID: 193992)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22465188801288605
    2. 'XYZ' → logprob: -2.09965181350708
    3. 'DEF' → logprob: -2.72465181350708
    4. ''D' → logprob: -4.84965181350708
    5. ' '' → logprob: -6.47465181350708
    6. ' DEF' → logprob: -7.22465181350708
    7. ' XYZ' → logprob: -7.22465181350708
    8. ''C' → logprob: -8.099652290344238
    9. ''M' → logprob: -8.724652290344238
    10. 'def' → logprob: -8.974652290344238

Token 37: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2471589798224159e-05
    2. '')' → logprob: -12.375012397766113
    3. ''''' → logprob: -12.375012397766113
    4. '```' → logprob: -13.875012397766113
    5. ' '' → logprob: -14.250012397766113
    6. '"' → logprob: -14.750012397766113
    7. '<|end|>' → logprob: -14.750012397766113
    8. ''
' → logprob: -14.875012397766113
    9. ''A' → logprob: -15.500012397766113
    10. '''' → logprob: -15.500012397766113

Token 38: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1373933553695679
    2. 'result' → logprob: -1.3873933553695679
    3. 'print' → logprob: -1.8873933553695679
    4. '#' → logprob: -2.1373934745788574
    5. 'category' → logprob: -2.7623934745788574
    6. '
' → logprob: -3.0123934745788574
    7. 'number' → logprob: -4.512393474578857
    8. 'user' → logprob: -4.762393474578857
    9. '```' → logprob: -5.137393474578857
    10. 'n' → logprob: -5.637393474578857

Token 39: '(category' (ID: 52173)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014338145963847637
    2. '(user' → logprob: -4.26433801651001
    3. '(category' → logprob: -9.264338493347168
    4. '('' → logprob: -9.639338493347168
    5. '(print' → logprob: -12.389338493347168
    6. 'user' → logprob: -12.764338493347168
    7. ' (' → logprob: -13.764338493347168
    8. '(use' → logprob: -14.014338493347168
    9. '(input' → logprob: -14.639338493347168
    10. '("("' → logprob: -14.639338493347168

Token 40: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -12.000011444091797
    3. '_l' → logprob: -12.875011444091797
    4. '_labels' → logprob: -13.625011444091797
    5. '_la' → logprob: -14.250011444091797
    6. '_lbl' → logprob: -14.875011444091797
    7. '_lab' → logprob: -15.375011444091797
    8. '_category' → logprob: -15.625011444091797
    9. '_value' → logprob: -15.875011444091797
    10. '_Label' → logprob: -16.250011444091797

Token 41: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0008949052426032722
    2. '_f' → logprob: -7.625895023345947
    3. '_' → logprob: -7.875895023345947
    4. '_fr' → logprob: -11.375894546508789
    5. '_)' → logprob: -12.125894546508789
    6. ')' → logprob: -12.875894546508789
    7. ')_' → logprob: -13.000894546508789
    8. '_form' → logprob: -13.125894546508789
    9. '_(' → logprob: -13.750894546508789
    10. '_for' → logprob: -14.000894546508789

Token 42: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0005605389014817774
    2. 'number' → logprob: -8.000560760498047
    3. '_user' → logprob: -8.875560760498047
    4. '_' → logprob: -9.750560760498047
    5. '_value' → logprob: -11.125560760498047
    6. 'user' → logprob: -12.500560760498047
    7. '_num' → logprob: -12.750560760498047
    8. '_n' → logprob: -13.000560760498047
    9. 'umber' → logprob: -13.625560760498047
    10. '_numbers' → logprob: -13.875560760498047

Token 43: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.005307992920279503
    2. '(' → logprob: -5.255308151245117
    3. 'user' → logprob: -10.630308151245117
    4. '(number' → logprob: -11.255308151245117
    5. '(_' → logprob: -11.380308151245117
    6. ')' → logprob: -11.630308151245117
    7. '_user' → logprob: -12.755308151245117
    8. '(value' → logprob: -13.005308151245117
    9. '(use' → logprob: -13.005308151245117
    10. '(input' → logprob: -13.505308151245117

Token 44: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.301394023466855e-05
    2. '_value' → logprob: -10.125062942504883
    3. '_' → logprob: -10.875062942504883
    4. '_put' → logprob: -13.625062942504883
    5. '_in' → logprob: -14.250062942504883
    6. '_user' → logprob: -14.500062942504883
    7. ' _' → logprob: -14.625062942504883
    8. '_output' → logprob: -14.875062942504883
    9. ')_' → logprob: -15.250062942504883
    10. '_inputs' → logprob: -15.750062942504883

Token 45: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001664717128733173
    2. '_val' → logprob: -9.000166893005371
    3. '_' → logprob: -10.375166893005371
    4. ')_' → logprob: -12.500166893005371
    5. 'value' → logprob: -12.875166893005371
    6. '_v' → logprob: -13.125166893005371
    7. ')' → logprob: -13.125166893005371
    8. '_va' → logprob: -14.750166893005371
    9. ' _' → logprob: -15.125166893005371
    10. '_)' → logprob: -15.375166893005371

Token 46: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10020817816257477
    2. '))' → logprob: -2.350208282470703
    3. ')))' → logprob: -13.725208282470703
    4. ' )' → logprob: -15.225208282470703
    5. ')
' → logprob: -16.975208282470703
    6. ' ))' → logprob: -17.350208282470703
    7. '(' → logprob: -17.475208282470703
    8. '])' → logprob: -17.475208282470703
    9. ')}' → logprob: -17.850208282470703
    10. '})' → logprob: -17.850208282470703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 20.45%
Précision adaptée (1ère position): 20.45%
Précision (top 10): 63.64%
================================================================================
