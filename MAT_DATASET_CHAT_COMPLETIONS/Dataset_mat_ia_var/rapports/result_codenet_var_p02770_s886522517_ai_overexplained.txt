================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la fonction i1 qui lit une entrée utilisateur, la convertit en entier, puis la retourne.
# Cela s'utilise souvent pour récupérer un seul entier à la fois.
def i1():
    # input() lit l'entrée utilisateur sous forme de chaîne de caractères (string).
    # int() convertit cette chaîne de caractères en un entier (integer).
    return int(input())

# Définition de la fonction i2 qui lit une ligne d'entrée,
# divise la chaîne d'entrée en morceaux selon les espaces,
# convertit chaque morceau en entier, puis retourne la liste de ces entiers.
def i2():
    # input() lit la chaîne entrée par l'utilisateur.
    # split() découpe la chaîne en morceaux en utilisant l'espace comme séparateur.
    # La compréhension de liste [int(i) for i in ...] parcourt chaque morceau et le convertit en entier.
    return [int(i) for i in input().split()]

# Appel de la fonction i2 pour récupérer la première ligne d'entrée,
# qui contient deux entiers. L'affectation multiple permet de stocker
# le premier entier dans k et le second dans q.
[k, q] = i2()

# Appel de i2 pour lire la deuxième ligne qui contient probablement 'k' entiers.
# On stocke cette liste dans la variable d.
d = i2()

# Début d'une boucle qui va s'exécuter q fois, où chaque itération traitera une requête.
for i in range(q):
    # À chaque itération, on lit une nouvelle ligne d'entrée contenant trois entiers :
    # n, x, m. On utilise à nouveau i2 et l'affectation multiple.
    [n, x, m] = i2()
    
    # Initialisation d'une liste vide di, qui contiendra le reste de chaque élément de d modulo m.
    di = []
    
    # Initialisation d'une liste vide dz, qui contiendra soit un 1 si l'élément de d est divisible par m,
    # soit un 0 sinon. C'est fait pour compter les éléments multiples de m.
    dz = []
    
    # Boucle qui parcourt chaque élément de d.
    for i in d:
        # Calcul du reste (modulo) de i divisé par m.
        # L'opérateur % donne le reste après division entière.
        di.append(i % m)  # On ajoute ce reste à la liste di.
        
        # On vérifie si i est divisible par m.
        if i % m == 0:
            # Si le reste est zéro, i est divisible par m. On ajoute 1 à la liste dz.
            dz.append(1)
        else:
            # Si ce n'est pas le cas, on ajoute 0 à dz.
            dz.append(0)
    
    # Calcul de la nouvelle valeur de x. 
    # (n-1)//k calcule combien de fois on peut soustraire k de (n-1) sans aller en dessous de zéro.
    # Cela donne le nombre de groupes de taille k dans (n-1) éléments.
    # sum(di[:k]) fait la somme des k premiers éléments dans la liste di.
    # On multiplie cette somme par le nombre de groupes, et on l'ajoute à x modulo m.
    x = ((n - 1) // k) * sum(di[:k]) + x % m
    
    # Si (n-1) % k n'est pas nul (c'est-à-dire qu'il reste quelques éléments après avoir retiré tous les groupes de k),
    # alors on ajoute à x la somme des premiers (n-1)%k éléments de di.
    if (n - 1) % k:
        x += sum(di[:(n - 1) % k])
    
    # Calcul de la réponse : ans.
    # n-1 est le nombre d'éléments moins 1.
    # x//m donne combien de fois x contient m (division entière).
    # ((n-1)//k) * sum(dz[:k]) calcule pour chaque groupe de k éléments,
    # le nombre de divisibles par m dans les k premiers éléments de dz, puis multiplie par le nombre de groupes.
    ans = n - 1 - x // m - ((n - 1) // k) * sum(dz[:k])
    
    # Encore une fois, si il reste des éléments, on enlève aussi à ans le nombre de divisibles par m
    # parmi les premiers éléments restants (n-1)%k éléments.
    if (n - 1) % k:
        ans -= sum(dz[:(n - 1) % k])
    
    # Affichage de la réponse pour la requête courante.
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.2850123345851898
    2. 'inition' → logprob: -1.5350123643875122
    3. 'it' → logprob: -4.535012245178223
    4. 't' → logprob: -4.910012245178223
    5. 'i' → logprob: -5.410012245178223
    6. ' it' → logprob: -5.910012245178223
    7. 'tion' → logprob: -6.410012245178223
    8. ' ```' → logprob: -6.535012245178223
    9. 'ation' → logprob: -7.660012245178223
    10. '```' → logprob: -7.660012245178223

Token 4: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9953344464302063
    2. '_' → logprob: -1.4953343868255615
    3. ':' → logprob: -1.6203343868255615
    4. ' de' → logprob: -2.3703343868255615
    5. ' d' → logprob: -3.1203343868255615
    6. ' :' → logprob: -3.9953343868255615
    7. 's' → logprob: -3.9953343868255615
    8. ' =' → logprob: -4.120334625244141
    9. '=' → logprob: -5.370334625244141
    10. '```' → logprob: -5.870334625244141

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.137817844748497
    2. 'la' → logprob: -2.887817859649658
    3. 'class' → logprob: -4.262817859649658
    4. 'l' → logprob: -4.637817859649658
    5. 'une' → logprob: -4.637817859649658
    6. ' ' → logprob: -4.762817859649658
    7. ' l' → logprob: -5.137817859649658
    8. '```' → logprob: -5.387817859649658
    9. ' class' → logprob: -5.512817859649658
    10. ' ' → logprob: -5.512817859649658

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.36356207728385925
    2. 'classe' → logprob: -1.6135621070861816
    3. 'class' → logprob: -2.7385621070861816
    4. ' ' → logprob: -4.488562107086182
    5. 'f' → logprob: -4.738562107086182
    6. 'function' → logprob: -5.113562107086182
    7. ' fonction' → logprob: -5.363562107086182
    8. ' ' → logprob: -6.238562107086182
    9. ' classe' → logprob: -6.238562107086182
    10. 'fon' → logprob: -6.988562107086182

Token 7: ' i' (ID: 575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7673355937004089
    2. ' ' → logprob: -1.8923356533050537
    3. 'd' → logprob: -2.1423356533050537
    4. 's' → logprob: -2.1423356533050537
    5. ':' → logprob: -3.1423356533050537
    6. ' def' → logprob: -3.7673356533050537
    7. '_' → logprob: -4.017335414886475
    8. '```' → logprob: -4.017335414886475
    9. ' d' → logprob: -4.267335414886475
    10. '(' → logprob: -4.892335414886475

Token 8: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.34736064076423645
    2. 'n' → logprob: -1.347360610961914
    3. 't' → logprob: -4.347360610961914
    4. 'nt' → logprob: -4.972360610961914
    5. 'ndef' → logprob: -5.222360610961914
    6. 'def' → logprob: -6.472360610961914
    7. 'm' → logprob: -6.472360610961914
    8. '(f' → logprob: -6.597360610961914
    9. '_f' → logprob: -7.472360610961914
    10. '_' → logprob: -7.722360610961914

Token 9: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24671979248523712
    2. '(' → logprob: -1.7467198371887207
    3. ':' → logprob: -3.7467198371887207
    4. ' def' → logprob: -4.746719837188721
    5. '_' → logprob: -5.996719837188721
    6. '```' → logprob: -6.246719837188721
    7. ' (' → logprob: -6.496719837188721
    8. '()' → logprob: -6.621719837188721
    9. '():' → logprob: -6.871719837188721
    10. 'd' → logprob: -7.371719837188721

Token 10: ' lit' (ID: 11980)
  Prédit: ' prend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prend' → logprob: -0.1357983946800232
    2. ' calc' → logprob: -2.635798454284668
    3. 's' → logprob: -4.635798454284668
    4. ' prends' → logprob: -4.760798454284668
    5. ' accepte' → logprob: -5.135798454284668
    6. ' prendra' → logprob: -5.385798454284668
    7. ':' → logprob: -5.635798454284668
    8. ' permet' → logprob: -6.010798454284668
    9. '()' → logprob: -6.385798454284668
    10. ' reçoit' → logprob: -6.385798454284668

Token 11: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19181181490421295
    2. '_' → logprob: -1.9418118000030518
    3. ' (' → logprob: -4.316812038421631
    4. 's' → logprob: -6.316812038421631
    5. ':' → logprob: -6.316812038421631
    6. '_l' → logprob: -6.316812038421631
    7. '```' → logprob: -6.566812038421631
    8. ''' → logprob: -6.566812038421631
    9. ' ' → logprob: -6.816812038421631
    10. ' la' → logprob: -7.191812038421631

Token 12: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010321533307433128
    2. '_' → logprob: -5.010321617126465
    3. ' ligne' → logprob: -7.260321617126465
    4. ' ' → logprob: -7.635321617126465
    5. 'ligne' → logprob: -8.135321617126465
    6. ' _' → logprob: -8.510321617126465
    7. 'l' → logprob: -8.510321617126465
    8. ' )' → logprob: -8.635321617126465
    9. 'space' → logprob: -8.635321617126465
    10. 'f' → logprob: -8.760321617126465

Token 13: ' utilisateur' (ID: 115595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3519626557826996
    2. '(' → logprob: -1.351962685585022
    3. ':' → logprob: -4.476962566375732
    4. 'i' → logprob: -4.851962566375732
    5. '```' → logprob: -5.351962566375732
    6. '_' → logprob: -5.976962566375732
    7. '()' → logprob: -5.976962566375732
    8. ' (' → logprob: -6.226962566375732
    9. ' def' → logprob: -6.726962566375732
    10. '():' → logprob: -7.101962566375732

Token 14: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029874287545681
    2. '(' → logprob: -4.529874324798584
    3. ':' → logprob: -4.779874324798584
    4. '```' → logprob: -5.029874324798584
    5. 'd' → logprob: -7.029874324798584
    6. 'i' → logprob: -7.404874324798584
    7. ' def' → logprob: -7.779874324798584
    8. '()' → logprob: -7.904874324798584
    9. '(
' → logprob: -8.154873847961426
    10. '():' → logprob: -8.529873847961426

Token 15: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6369050741195679
    2. 'i' → logprob: -2.1369051933288574
    3. '()' → logprob: -2.7619051933288574
    4. ' :' → logprob: -3.2619051933288574
    5. ' i' → logprob: -3.6369051933288574
    6. 'entrée' → logprob: -3.6369051933288574
    7. ' =' → logprob: -3.8869051933288574
    8. '_' → logprob: -3.8869051933288574
    9. '():' → logprob: -3.8869051933288574
    10. '```' → logprob: -3.8869051933288574

Token 16: ' convert' (ID: 8452)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4463165998458862
    2. ' ' → logprob: -1.5713165998458862
    3. ' return' → logprob: -1.6963165998458862
    4. ' retourne' → logprob: -2.196316719055176
    5. 'n' → logprob: -2.321316719055176
    6. 'return' → logprob: -3.446316719055176
    7. ',' → logprob: -3.571316719055176
    8. 's' → logprob: -4.071316719055176
    9. '=' → logprob: -4.571316719055176
    10. ':' → logprob: -4.696316719055176

Token 17: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8387978672981262
    2. '_' → logprob: -1.0887978076934814
    3. 'e' → logprob: -1.5887978076934814
    4. 'er' → logprob: -5.0887980461120605
    5. 'al' → logprob: -6.0887980461120605
    6. 'a' → logprob: -6.2137980461120605
    7. 'space' → logprob: -6.2137980461120605
    8. 's' → logprob: -6.3387980461120605
    9. 'ale' → logprob: -6.5887980461120605
    10. 'é' → logprob: -6.8387980461120605

Token 18: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.039855580776929855
    2. '_' → logprob: -3.914855480194092
    3. '_en' → logprob: -4.289855480194092
    4. 'en' → logprob: -5.914855480194092
    5. ' ' → logprob: -7.414855480194092
    6. ',' → logprob: -8.03985595703125
    7. '_token' → logprob: -8.16485595703125
    8. '_str' → logprob: -8.78985595703125
    9. ' in' → logprob: -8.91485595703125
    10. 'def' → logprob: -9.03985595703125

Token 19: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.48745018243789673
    2. ' int' → logprob: -1.737450122833252
    3. 'ent' → logprob: -2.362450122833252
    4. ' entier' → logprob: -2.487450122833252
    5. 'nombre' → logprob: -4.362450122833252
    6. ' nombre' → logprob: -4.487450122833252
    7. ' un' → logprob: -5.987450122833252
    8. ' ' → logprob: -6.612450122833252
    9. ' ent' → logprob: -6.987450122833252
    10. '```' → logprob: -7.237450122833252

Token 20: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9485158324241638
    2. ':' → logprob: -1.4485158920288086
    3. 'def' → logprob: -1.5735158920288086
    4. ',' → logprob: -2.5735158920288086
    5. '```' → logprob: -3.4485158920288086
    6. 'i' → logprob: -3.9485158920288086
    7. ' :' → logprob: -4.823515892028809
    8. ')' → logprob: -4.823515892028809
    9. '_' → logprob: -5.573515892028809
    10. '(
' → logprob: -5.698515892028809

Token 21: ' puis' (ID: 18766)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3302205801010132
    2. 'def' → logprob: -1.7052205801010132
    3. ' ' → logprob: -1.8302205801010132
    4. 'et' → logprob: -1.9552205801010132
    5. ' et' → logprob: -1.9552205801010132
    6. ' def' → logprob: -3.9552206993103027
    7. ' puis' → logprob: -4.330220699310303
    8. '   ' → logprob: -4.580220699310303
    9. ' :' → logprob: -4.955220699310303
    10. ':' → logprob: -4.955220699310303

Token 22: ' la' (ID: 557)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.13830839097499847
    2. ' ren' → logprob: -2.76330828666687
    3. 'ren' → logprob: -3.88830828666687
    4. 'ret' → logprob: -4.013308525085449
    5. 'return' → logprob: -5.138308525085449
    6. ' return' → logprob: -5.263308525085449
    7. ' multipl' → logprob: -5.888308525085449
    8. ' effect' → logprob: -6.138308525085449
    9. ' appelle' → logprob: -6.138308525085449
    10. ' la' → logprob: -6.138308525085449

Token 23: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.7003976702690125
    2. ' return' → logprob: -1.0753977298736572
    3. 'return' → logprob: -2.3253977298736572
    4. '+' → logprob: -3.7003977298736572
    5. 'r' → logprob: -4.200397491455078
    6. 's' → logprob: -4.575397491455078
    7. ' retour' → logprob: -6.450397491455078
    8. 'ret' → logprob: -6.825397491455078
    9. '*' → logprob: -7.075397491455078
    10. 'n' → logprob: -7.200397491455078

Token 24: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10678540915250778
    2. 'd' → logprob: -2.481785297393799
    3. '```' → logprob: -4.731785297393799
    4. 'i' → logprob: -4.981785297393799
    5. ':' → logprob: -6.606785297393799
    6. '(' → logprob: -8.231785774230957
    7. '``' → logprob: -9.106785774230957
    8. '\' → logprob: -9.481785774230957
    9. ':def' → logprob: -9.731785774230957
    10. '`' → logprob: -10.106785774230957

Token 25: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.42484331130981445
    2. 'def' → logprob: -1.1748433113098145
    3. 'i' → logprob: -3.4248433113098145
    4. '```' → logprob: -5.5498433113098145
    5. ':' → logprob: -7.9248433113098145
    6. ' 
' → logprob: -8.674842834472656
    7. '\' → logprob: -9.049842834472656
    8. '  
' → logprob: -10.549842834472656
    9. '`' → logprob: -10.799842834472656
    10. '``' → logprob: -11.049842834472656

Token 26: ' Cela' (ID: 44403)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6938124299049377
    2. 'def' → logprob: -0.6938124299049377
    3. 'i' → logprob: -7.568812370300293
    4. ' d' → logprob: -10.318812370300293
    5. 'de' → logprob: -10.318812370300293
    6. ' def' → logprob: -10.443812370300293
    7. '```' → logprob: -10.568812370300293
    8. ' 
' → logprob: -11.193812370300293
    9. ' ' → logprob: -12.193812370300293
    10. '\' → logprob: -13.443812370300293

Token 27: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5798197984695435
    2. ' def' → logprob: -1.7048197984695435
    3. ' ' → logprob: -2.204819679260254
    4. 's' → logprob: -4.079819679260254
    5. ' s' → logprob: -4.079819679260254
    6. ' return' → logprob: -4.079819679260254
    7. ' retourne' → logprob: -4.454819679260254
    8. ' continue' → logprob: -4.954819679260254
    9. ' peut' → logprob: -4.954819679260254
    10. ' ```' → logprob: -4.954819679260254

Token 28: ''util' (ID: 37761)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.529239296913147
    2. 'u' → logprob: -2.2792391777038574
    3. 'e' → logprob: -2.4042391777038574
    4. 'n' → logprob: -2.5292391777038574
    5. ''' → logprob: -2.6542391777038574
    6. 't' → logprob: -2.6542391777038574
    7. 'r' → logprob: -2.9042391777038574
    8. ' '' → logprob: -3.0292391777038574
    9. 'ur' → logprob: -3.1542391777038574
    10. 'nt' → logprob: -3.2792391777038574

Token 29: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5316295027732849
    2. 'se' → logprob: -0.9066295027732849
    3. 't' → logprob: -4.90662956237793
    4. 'sera' → logprob: -8.53162956237793
    5. 'ser' → logprob: -9.03162956237793
    6. 'ses' → logprob: -9.15662956237793
    7. '```' → logprob: -9.15662956237793
    8. '#' → logprob: -9.28162956237793
    9. 'set' → logprob: -9.65662956237793
    10. 'ise' → logprob: -9.90662956237793

Token 30: ' souvent' (ID: 28137)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6083519458770752
    2. ' i' → logprob: -1.6083519458770752
    3. '(' → logprob: -2.608351945877075
    4. '()' → logprob: -3.233351945877075
    5. ' =' → logprob: -3.358351945877075
    6. ' input' → logprob: -3.983351945877075
    7. ' ()' → logprob: -4.483351707458496
    8. '_' → logprob: -4.608351707458496
    9. ' (' → logprob: -4.733351707458496
    10. 'input' → logprob: -4.733351707458496

Token 31: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6397828459739685
    2. ' i' → logprob: -1.5147829055786133
    3. 'i' → logprob: -1.7647829055786133
    4. ' ' → logprob: -3.8897829055786133
    5. 'input' → logprob: -4.139782905578613
    6. '(' → logprob: -4.764782905578613
    7. ' def' → logprob: -5.264782905578613
    8. ':' → logprob: -5.389782905578613
    9. '()' → logprob: -5.639782905578613
    10. '```' → logprob: -5.639782905578613

Token 32: ' récupérer' (ID: 120406)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6633443832397461
    2. 'r' → logprob: -1.913344383239746
    3. 'l' → logprob: -2.038344383239746
    4. ' int' → logprob: -2.663344383239746
    5. ' des' → logprob: -3.788344383239746
    6. ' lire' → logprob: -3.913344383239746
    7. ' demander' → logprob: -4.288344383239746
    8. 's' → logprob: -5.038344383239746
    9. 'dem' → logprob: -5.038344383239746
    10. 'prendre' → logprob: -5.038344383239746

Token 33: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6230342388153076
    2. ' une' → logprob: -1.1230342388153076
    3. ' un' → logprob: -2.8730342388153076
    4. '_' → logprob: -3.8730342388153076
    5. ' la' → logprob: -4.123034477233887
    6. ' des' → logprob: -4.373034477233887
    7. ' ' → logprob: -4.748034477233887
    8. '_l' → logprob: -5.123034477233887
    9. ' input' → logprob: -5.248034477233887
    10. 'l' → logprob: -5.623034477233887

Token 34: ' seul' (ID: 33041)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.9731330871582031
    2. 'nombre' → logprob: -1.5981330871582031
    3. ' nombre' → logprob: -1.8481330871582031
    4. ' entier' → logprob: -2.348133087158203
    5. ' input' → logprob: -2.973133087158203
    6. 'entrée' → logprob: -3.098133087158203
    7. 'input' → logprob: -3.348133087158203
    8. ' choix' → logprob: -4.723133087158203
    9. ' ' → logprob: -5.598133087158203
    10. 'age' → logprob: -5.723133087158203

Token 35: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6439263224601746
    2. 'nombre' → logprob: -1.2689263820648193
    3. ' entier' → logprob: -2.0189263820648193
    4. 'int' → logprob: -3.7689263820648193
    5. ' nombre' → logprob: -4.01892614364624
    6. 'entrée' → logprob: -5.26892614364624
    7. 'mot' → logprob: -5.39392614364624
    8. 'val' → logprob: -6.01892614364624
    9. 'input' → logprob: -6.64392614364624
    10. ' ' → logprob: -6.64392614364624

Token 36: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06466803699731827
    2. 'def' → logprob: -2.8146679401397705
    3. 'i' → logprob: -5.93966817855835
    4. ':' → logprob: -10.939667701721191
    5. '```' → logprob: -11.189667701721191
    6. '\' → logprob: -11.314667701721191
    7. 'de' → logprob: -11.564667701721191
    8. '#' → logprob: -12.689667701721191
    9. 'n' → logprob: -13.564667701721191
    10. ':def' → logprob: -14.064667701721191

Token 37: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.17853815853595734
    2. ' partir' → logprob: -3.3035380840301514
    3. 'la' → logprob: -3.4285380840301514
    4. ' l' → logprob: -3.5535380840301514
    5. 'part' → logprob: -3.5535380840301514
    6. ' lire' → logprob: -5.0535383224487305
    7. ' la' → logprob: -5.3035383224487305
    8. '```' → logprob: -5.4285383224487305
    9. ' saisir' → logprob: -5.4285383224487305
    10. '
' → logprob: -6.0535383224487305

Token 38: ' fois' (ID: 14697)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.49035537242889404
    2. 'fois' → logprob: -2.2403554916381836
    3. 'ligne' → logprob: -2.4903554916381836
    4. 'entrée' → logprob: -2.6153554916381836
    5. ' fois' → logprob: -3.6153554916381836
    6. 'la' → logprob: -4.115355491638184
    7. 'fonction' → logprob: -5.115355491638184
    8. '```' → logprob: -5.240355491638184
    9. 's' → logprob: -5.365355491638184
    10. 'n' → logprob: -5.365355491638184

Token 39: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20458900928497314
    2. 'def' → logprob: -1.8295890092849731
    3. 'i' → logprob: -4.454588890075684
    4. ':' → logprob: -5.329588890075684
    5. 'de' → logprob: -5.454588890075684
    6. '(' → logprob: -5.954588890075684
    7. '```' → logprob: -8.079588890075684
    8. ')' → logprob: -8.204588890075684
    9. 'n' → logprob: -8.454588890075684
    10. ' de' → logprob: -9.079588890075684

Token 40: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013503242284059525
    2. 'i' → logprob: -4.513503074645996
    3. 'def' → logprob: -6.013503074645996
    4. '```' → logprob: -12.263503074645996
    5. 'de' → logprob: -13.763503074645996
    6. '\' → logprob: -15.263503074645996
    7. ':' → logprob: -15.888503074645996
    8. 'n' → logprob: -16.013504028320312
    9. '#' → logprob: -16.013504028320312
    10. 'e' → logprob: -16.388504028320312

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0496801882982254
    2. ' ' → logprob: -3.049680233001709
    3. ' ' → logprob: -7.174680233001709
    4. 'i' → logprob: -8.17467975616455
    5. ' ' → logprob: -11.04967975616455
    6. ' ‌' → logprob: -11.04967975616455
    7. 'space' → logprob: -12.17467975616455
    8. ' space' → logprob: -13.04967975616455
    9. '_' → logprob: -13.54967975616455
    10. '	i' → logprob: -14.17467975616455

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '１' → logprob: -18.375
    4. '_' → logprob: -19.75
    5. '(' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '۱' → logprob: -20.25
    8. '' → logprob: -20.375
    9. '١' → logprob: -20.375
    10. '¹' → logprob: -20.75

Token 43: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31721433997154236
    2. '():' → logprob: -1.3172143697738647
    3. '()' → logprob: -5.567214488983154
    4. '(x' → logprob: -10.192214012145996
    5. '(input' → logprob: -10.442214012145996
    6. '(a' → logprob: -12.192214012145996
    7. ' (' → logprob: -12.192214012145996
    8. '_' → logprob: -12.442214012145996
    9. '(:' → logprob: -12.442214012145996
    10. '(prompt' → logprob: -12.567214012145996

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009943070821464062
    2. ' return' → logprob: -5.509943008422852
    3. '(' → logprob: -6.009943008422852
    4. ':' → logprob: -6.384943008422852
    5. ' ' → logprob: -7.384943008422852
    6. 'return' → logprob: -7.759943008422852
    7. '():' → logprob: -8.759943008422852
    8. '  ' → logprob: -8.884943008422852
    9. ':return' → logprob: -9.259943008422852
    10. '	return' → logprob: -9.759943008422852

Token 45: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07258167117834091
    2. ' return' → logprob: -2.9475817680358887
    3. 'r' → logprob: -4.447581768035889
    4. 'ret' → logprob: -5.947581768035889
    5. '   ' → logprob: -7.072581768035889
    6. 'n' → logprob: -7.072581768035889
    7. 'x' → logprob: -7.822581768035889
    8. ' ' → logprob: -8.07258129119873
    9. 'i' → logprob: -8.32258129119873
    10. 's' → logprob: -9.07258129119873

Token 46: ' input' (ID: 3422)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6349629163742065
    2. 'return' → logprob: -1.0099629163742065
    3. '   ' → logprob: -3.259963035583496
    4. 'r' → logprob: -4.009963035583496
    5. ' ' → logprob: -4.384963035583496
    6. 'n' → logprob: -5.134963035583496
    7. 'ret' → logprob: -5.259963035583496
    8. 'e' → logprob: -5.634963035583496
    9. 'entrée' → logprob: -5.759963035583496
    10. 'x' → logprob: -6.134963035583496

Token 47: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25232282280921936
    2. '(' → logprob: -1.502322793006897
    3. '().' → logprob: -8.877323150634766
    4. ' ()' → logprob: -9.252323150634766
    5. '("")' → logprob: -9.877323150634766
    6. '('' → logprob: -10.252323150634766
    7. '("' → logprob: -11.252323150634766
    8. '(
' → logprob: -11.377323150634766
    9. '()
' → logprob: -11.877323150634766
    10. '（）' → logprob: -12.377323150634766

Token 48: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03447768837213516
    2. '().' → logprob: -3.909477710723877
    3. '(' → logprob: -4.409477710723877
    4. '.' → logprob: -7.159477710723877
    5. ' ()' → logprob: -7.409477710723877
    6. ')' → logprob: -10.034477233886719
    7. '.strip' → logprob: -10.284477233886719
    8. '   ' → logprob: -10.659477233886719
    9. ' ' → logprob: -10.659477233886719
    10. ' .' → logprob: -10.784477233886719

Token 49: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07986285537481308
    2. '(' → logprob: -2.5798628330230713
    3. '("")' → logprob: -7.45486307144165
    4. '('' → logprob: -9.829862594604492
    5. ' ' → logprob: -9.829862594604492
    6. 'user' → logprob: -10.079862594604492
    7. '   ' → logprob: -10.204862594604492
    8. '("' → logprob: -10.204862594604492
    9. ')' → logprob: -10.329862594604492
    10. ' ()' → logprob: -10.829862594604492

Token 50: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6156916618347168
    2. 'a' → logprob: -1.6156916618347168
    3. 'e' → logprob: -1.7406916618347168
    4. ''' → logprob: -2.740691661834717
    5. ''utilisateur' → logprob: -4.365691661834717
    6. ''a' → logprob: -5.865691661834717
    7. ''ent' → logprob: -6.865691661834717
    8. ' '' → logprob: -6.990691661834717
    9. ' a' → logprob: -7.490691661834717
    10. 'entrée' → logprob: -7.615691661834717

Token 51: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014011996798217297
    2. '(' → logprob: -4.764011859893799
    3. '("")' → logprob: -6.014011859893799
    4. 'user' → logprob: -6.889011859893799
    5. ' ()' → logprob: -7.889011859893799
    6. ' ' → logprob: -8.139012336730957
    7. '('' → logprob: -8.639012336730957
    8. '().' → logprob: -8.889012336730957
    9. '   ' → logprob: -9.139012336730957
    10. '("' → logprob: -9.264012336730957

Token 52: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04391879960894585
    2. '(' → logprob: -4.293918609619141
    3. '   ' → logprob: -4.418918609619141
    4. ' ' → logprob: -5.418918609619141
    5. 'return' → logprob: -5.668918609619141
    6. '().' → logprob: -5.918918609619141
    7. '.' → logprob: -6.293918609619141
    8. ')' → logprob: -6.918918609619141
    9. ' return' → logprob: -7.043918609619141
    10. ',' → logprob: -7.293918609619141

Token 53: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.02375468797981739
    2. 'forme' → logprob: -3.773754596710205
    3. 'form' → logprob: -7.898754596710205
    4. 'forma' → logprob: -10.148755073547363
    5. ' form' → logprob: -10.773755073547363
    6. 'ent' → logprob: -10.773755073547363
    7. 'chaine' → logprob: -10.773755073547363
    8. 'une' → logprob: -11.898755073547363
    9. 'la' → logprob: -11.898755073547363
    10. 'format' → logprob: -12.148755073547363

Token 54: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07409287989139557
    2. ' de' → logprob: -2.6990928649902344
    3. 'd' → logprob: -6.449092864990234
    4. '   ' → logprob: -7.324092864990234
    5. 'de' → logprob: -7.824092864990234
    6. '()' → logprob: -7.949092864990234
    7. '  ' → logprob: -8.199092864990234
    8. 'str' → logprob: -8.449092864990234
    9. ')' → logprob: -8.699092864990234
    10. ' str' → logprob: -8.949092864990234

Token 55: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7214165925979614
    2. 'chaine' → logprob: -0.8464165925979614
    3. 'cha' → logprob: -3.096416473388672
    4. 'string' → logprob: -4.221416473388672
    5. ' chaine' → logprob: -4.471416473388672
    6. 'str' → logprob: -4.721416473388672
    7. 'texte' → logprob: -6.096416473388672
    8. ' string' → logprob: -6.596416473388672
    9. 's' → logprob: -8.471416473388672
    10. 'une' → logprob: -8.596416473388672

Token 56: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07624353468418121
    2. '    ' → logprob: -3.5762436389923096
    3. '(' → logprob: -4.7012434005737305
    4. ' ' → logprob: -4.9512434005737305
    5. '()' → logprob: -4.9512434005737305
    6. ')' → logprob: -5.2012434005737305
    7. ',' → logprob: -5.4512434005737305
    8. '       ' → logprob: -5.5762434005737305
    9. ' )' → logprob: -6.2012434005737305
    10. '    
' → logprob: -6.2012434005737305

Token 57: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.402604877948761
    2. ' caractères' → logprob: -1.1526048183441162
    3. 'texte' → logprob: -4.277605056762695
    4. ' caractère' → logprob: -7.152605056762695
    5. 'chaine' → logprob: -8.152605056762695
    6. 'cha' → logprob: -9.152605056762695
    7. 'chars' → logprob: -9.402605056762695
    8. ' caract' → logprob: -9.527605056762695
    9. ' caracteres' → logprob: -9.527605056762695
    10. '#' → logprob: -9.902605056762695

Token 58: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10908843576908112
    2. ')' → logprob: -2.73408842086792
    3. ' ' → logprob: -4.10908842086792
    4. '()' → logprob: -5.10908842086792
    5. '    ' → logprob: -5.10908842086792
    6. ',' → logprob: -5.48408842086792
    7. ' )' → logprob: -6.60908842086792
    8. '(' → logprob: -6.85908842086792
    9. '  ' → logprob: -6.98408842086792
    10. '       ' → logprob: -7.73408842086792

Token 59: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08427432924509048
    2. ' )' → logprob: -2.5842742919921875
    3. '   ' → logprob: -6.4592742919921875
    4. '")' → logprob: -6.8342742919921875
    5. '')' → logprob: -7.0842742919921875
    6. '),' → logprob: -7.4592742919921875
    7. ').' → logprob: -8.209274291992188
    8. ')
' → logprob: -9.209274291992188
    9. ' ),' → logprob: -9.334274291992188
    10. ' ' → logprob: -9.459274291992188

Token 60: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027490039356052876
    2. '   ' → logprob: -6.127748966217041
    3. ' )' → logprob: -7.877748966217041
    4. ')
' → logprob: -9.1277494430542
    5. ').' → logprob: -11.0027494430542
    6. ' ' → logprob: -11.0027494430542
    7. '')' → logprob: -11.2527494430542
    8. '),' → logprob: -11.7527494430542
    9. '()' → logprob: -12.3777494430542
    10. '")' → logprob: -12.7527494430542

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053020622581243515
    2. '    ' → logprob: -6.3803019523620605
    3. '       ' → logprob: -7.1303019523620605
    4. 'return' → logprob: -7.2553019523620605
    5. ' return' → logprob: -7.2553019523620605
    6. 'r' → logprob: -7.6303019523620605
    7. 'n' → logprob: -8.005302429199219
    8. ' ' → logprob: -8.380302429199219
    9. '    
' → logprob: -10.255302429199219
    10. 'v' → logprob: -10.380302429199219

Token 62: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13414739072322845
    2. 'val' → logprob: -3.8841474056243896
    3. 'return' → logprob: -4.2591471672058105
    4. 'n' → logprob: -4.3841471672058105
    5. 'v' → logprob: -4.5091471672058105
    6. 'x' → logprob: -4.7591471672058105
    7. 'r' → logprob: -4.8841471672058105
    8. 'value' → logprob: -4.8841471672058105
    9. ' return' → logprob: -5.1341471672058105
    10. ' ' → logprob: -5.1341471672058105

Token 63: ' int' (ID: 677)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7795332074165344
    2. 's' → logprob: -1.6545331478118896
    3. ' s' → logprob: -2.7795331478118896
    4. 'value' → logprob: -3.0295331478118896
    5. ' val' → logprob: -3.1545331478118896
    6. '   ' → logprob: -3.2795331478118896
    7. 'x' → logprob: -3.6545331478118896
    8. 'ent' → logprob: -3.9045331478118896
    9. 'n' → logprob: -4.154533386230469
    10. 'user' → logprob: -4.529533386230469

Token 64: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006672830786556005
    2. '(input' → logprob: -8.125667572021484
    3. '()' → logprob: -8.250667572021484
    4. '(
' → logprob: -9.375667572021484
    5. '(i' → logprob: -12.000667572021484
    6. '(int' → logprob: -12.375667572021484
    7. '(convert' → logprob: -12.875667572021484
    8. '(

' → logprob: -12.875667572021484
    9. '('' → logprob: -13.000667572021484
    10. '("""' → logprob: -13.500667572021484

Token 65: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007842732593417168
    2. '(convert' → logprob: -6.007842540740967
    3. 'convert' → logprob: -6.007842540740967
    4. ' convert' → logprob: -7.007842540740967
    5. '(
' → logprob: -7.132842540740967
    6. '()' → logprob: -8.132843017578125
    7. '(input' → logprob: -8.507843017578125
    8. '(int' → logprob: -9.007843017578125
    9. ' transforme' → logprob: -9.007843017578125
    10. ' converts' → logprob: -9.257843017578125

Token 66: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.009399627335369587
    2. ' it' → logprob: -4.7593994140625
    3. 'i' → logprob: -7.5093994140625
    4. '   ' → logprob: -10.0093994140625
    5. '()' → logprob: -10.2593994140625
    6. '(it' → logprob: -10.6343994140625
    7. '	it' → logprob: -10.8843994140625
    8. '```' → logprob: -10.8843994140625
    9. '(' → logprob: -11.0093994140625
    10. '_it' → logprob: -11.3843994140625

Token 67: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5531356930732727
    2. '(input' → logprob: -0.9281356930732727
    3. 'input' → logprob: -4.928135871887207
    4. 'l' → logprob: -5.178135871887207
    5. ' la' → logprob: -5.428135871887207
    6. ' ' → logprob: -5.803135871887207
    7. ' l' → logprob: -6.678135871887207
    8. ' (' → logprob: -6.928135871887207
    9. ' input' → logprob: -6.928135871887207
    10. '(str' → logprob: -6.928135871887207

Token 68: ' chaîne' (ID: 89288)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2473328560590744
    2. ' chaîne' → logprob: -1.7473328113555908
    3. ' string' → logprob: -3.997332811355591
    4. ' chaine' → logprob: -5.24733304977417
    5. ' (' → logprob: -5.49733304977417
    6. 'chaine' → logprob: -5.49733304977417
    7. 'entrée' → logprob: -5.74733304977417
    8. ' entrée' → logprob: -6.62233304977417
    9. ' ' → logprob: -6.74733304977417
    10. ' input' → logprob: -6.99733304977417

Token 69: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028844285756349564
    2. '()' → logprob: -4.028844356536865
    3. ' en' → logprob: -5.403844356536865
    4. '   ' → logprob: -6.028844356536865
    5. '(en' → logprob: -7.153844356536865
    6. '(
' → logprob: -7.653844356536865
    7. '(input' → logprob: -8.028843879699707
    8. 'en' → logprob: -8.403843879699707
    9. ')' → logprob: -8.778843879699707
    10. '(ent' → logprob: -8.778843879699707

Token 70: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.2509744167327881
    2. 'car' → logprob: -1.625974416732788
    3. ' car' → logprob: -4.500974655151367
    4. ' caracteres' → logprob: -5.250974655151367
    5. ' caract' → logprob: -5.750974655151367
    6. ' caractère' → logprob: -5.750974655151367
    7. 'chaine' → logprob: -7.625974655151367
    8. 'str' → logprob: -7.875974655151367
    9. 'texte' → logprob: -8.125974655151367
    10. ' string' → logprob: -8.375974655151367

Token 71: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07536260038614273
    2. '()' → logprob: -2.8253626823425293
    3. ' en' → logprob: -5.450362682342529
    4. '(input' → logprob: -6.200362682342529
    5. '(en' → logprob: -6.450362682342529
    6. '   ' → logprob: -6.700362682342529
    7. '(
' → logprob: -7.075362682342529
    8. ')' → logprob: -7.200362682342529
    9. '(str' → logprob: -7.325362682342529
    10. 'en' → logprob: -8.200362205505371

Token 72: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03087405301630497
    2. ' entier' → logprob: -4.280874252319336
    3. ' int' → logprob: -4.655874252319336
    4. ' ' → logprob: -5.280874252319336
    5. 'un' → logprob: -7.405874252319336
    6. 'int' → logprob: -7.780874252319336
    7. ' une' → logprob: -8.030874252319336
    8. 'ent' → logprob: -8.280874252319336
    9. ' integer' → logprob: -8.780874252319336
    10. ' ent' → logprob: -9.530874252319336

Token 73: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.0379340685904026
    2. 'e' → logprob: -3.6629340648651123
    3. 'ent' → logprob: -5.037934303283691
    4. ' ' → logprob: -6.537934303283691
    5. ' ent' → logprob: -7.037934303283691
    6. ' nombre' → logprob: -7.037934303283691
    7. ' int' → logprob: -7.162934303283691
    8. ' e' → logprob: -7.912934303283691
    9. ' enti' → logprob: -8.412934303283691
    10. ' entière' → logprob: -8.662934303283691

Token 74: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0360279344022274
    2. '(' → logprob: -4.161027908325195
    3. '(
' → logprob: -5.286027908325195
    4. ')' → logprob: -5.536027908325195
    5. '    
' → logprob: -5.786027908325195
    6. '()' → logprob: -6.161027908325195
    7. '
' → logprob: -6.161027908325195
    8. '.' → logprob: -7.661027908325195
    9. '    ' → logprob: -7.661027908325195
    10. ' ' → logprob: -7.661027908325195

Token 75: 'integer' (ID: 27378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31551578640937805
    2. 'int' → logprob: -2.0655157566070557
    3. ' int' → logprob: -2.4405157566070557
    4. ' )' → logprob: -3.4405157566070557
    5. ').' → logprob: -4.690515995025635
    6. ' integer' → logprob: -4.815515995025635
    7. 'integer' → logprob: -5.065515995025635
    8. ' entier' → logprob: -7.565515995025635
    9. ' ).' → logprob: -8.690515518188477
    10. 'ent' → logprob: -8.940515518188477

Token 76: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007499480270780623
    2. ').' → logprob: -7.3757500648498535
    3. ' )' → logprob: -9.250749588012695
    4. '   ' → logprob: -11.375749588012695
    5. ')
' → logprob: -12.500749588012695
    6. '')' → logprob: -13.000749588012695
    7. ')`' → logprob: -13.000749588012695
    8. '))' → logprob: -13.125749588012695
    9. ' ' → logprob: -13.500749588012695
    10. '),' → logprob: -14.000749588012695

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008304747752845287
    2. 'return' → logprob: -7.62583065032959
    3. ' return' → logprob: -8.37583065032959
    4. '       ' → logprob: -9.87583065032959
    5. '    ' → logprob: -11.25083065032959
    6. '    
' → logprob: -11.25083065032959
    7. '	return' → logprob: -11.62583065032959
    8. '   ' → logprob: -11.62583065032959
    9. ' ' → logprob: -12.00083065032959
    10. '  ' → logprob: -12.62583065032959

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.531999945640564
    2. '   ' → logprob: -0.906999945640564
    3. ' return' → logprob: -5.1570000648498535
    4. 'r' → logprob: -7.4070000648498535
    5. 'val' → logprob: -7.4070000648498535
    6. 'ret' → logprob: -7.7820000648498535
    7. 'value' → logprob: -8.156999588012695
    8. '       ' → logprob: -8.656999588012695
    9. 're' → logprob: -8.781999588012695
    10. '    ' → logprob: -8.906999588012695

Token 79: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31326788663864136
    2. 'int' → logprob: -1.3132679462432861
    3. '(int' → logprob: -13.313267707824707
    4. '   ' → logprob: -13.438267707824707
    5. ' ' → logprob: -13.938267707824707
    6. 'i' → logprob: -14.688267707824707
    7. ' i' → logprob: -15.063267707824707
    8. '<int' → logprob: -15.313267707824707
    9. '  ' → logprob: -15.438267707824707
    10. ' ' → logprob: -15.438267707824707

Token 80: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048616886138916016
    2. '(input' → logprob: -3.048616886138916
    3. '('' → logprob: -11.798616409301758
    4. '()' → logprob: -11.798616409301758
    5. ' (' → logprob: -12.048616409301758
    6. '(
' → logprob: -12.798616409301758
    7. 'input' → logprob: -13.798616409301758
    8. '("("' → logprob: -14.173616409301758
    9. '(user' → logprob: -14.423616409301758
    10. '((' → logprob: -14.423616409301758

Token 81: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011211452074348927
    2. '()))' → logprob: -4.511211395263672
    3. '()' → logprob: -8.886211395263672
    4. ' ())' → logprob: -10.886211395263672
    5. '(' → logprob: -12.761211395263672
    6. '())
' → logprob: -13.886211395263672
    7. ')' → logprob: -14.261211395263672
    8. '()),' → logprob: -14.636211395263672
    9. '());' → logprob: -15.261211395263672
    10. '()));' → logprob: -15.261211395263672

Token 82: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4753425717353821
    2. '
' → logprob: -1.8503425121307373
    3. '\n' → logprob: -2.6003425121307373
    4. '(
' → logprob: -3.1003425121307373
    5. '()' → logprob: -3.3503425121307373
    6. '<|end|>' → logprob: -3.3503425121307373
    7. ')' → logprob: -4.975342750549316
    8. '```' → logprob: -5.725342750549316
    9. ' ' → logprob: -5.725342750549316
    10. '' → logprob: -5.850342750549316

Token 83: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8069791197776794
    2. '
' → logprob: -1.5569791793823242
    3. '\n' → logprob: -2.306979179382324
    4. '(' → logprob: -2.806979179382324
    5. ' ' → logprob: -2.806979179382324
    6. '[' → logprob: -3.556979179382324
    7. '<|end|>' → logprob: -3.806979179382324
    8. '()' → logprob: -4.181979179382324
    9. '\' → logprob: -4.431979179382324
    10. ')' → logprob: -4.806979179382324

Token 84: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04559815302491188
    2. 'fin' → logprob: -3.170598268508911
    3. 'fi' → logprob: -6.420598030090332
    4. '#' → logprob: -7.170598030090332
    5. ' finition' → logprob: -9.795598030090332
    6. 'fn' → logprob: -10.420598030090332
    7. '```' → logprob: -10.670598030090332
    8. 'ff' → logprob: -11.920598030090332
    9. '' → logprob: -12.045598030090332
    10. '   ' → logprob: -12.170598030090332

Token 85: 'ition' (ID: 868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31501471996307373
    2. 'i' → logprob: -2.9400148391723633
    3. 't' → logprob: -3.0650148391723633
    4. 'f' → logprob: -3.4400148391723633
    5. 'inition' → logprob: -3.4400148391723633
    6. ' i' → logprob: -4.190014839172363
    7. ' def' → logprob: -4.190014839172363
    8. ' f' → logprob: -4.565014839172363
    9. 'ect' → logprob: -4.565014839172363
    10. '   ' → logprob: -4.940014839172363

Token 86: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012453021481633186
    2. '  ' → logprob: -5.512453079223633
    3. '_' → logprob: -6.012453079223633
    4. ' d' → logprob: -6.262453079223633
    5. ' de' → logprob: -6.512453079223633
    6. ' def' → logprob: -7.387453079223633
    7. ' (' → logprob: -7.512453079223633
    8. '(' → logprob: -8.387453079223633
    9. 'def' → logprob: -8.637453079223633
    10. ' ‌' → logprob: -8.762453079223633

Token 87: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34003666043281555
    2. 'i' → logprob: -1.4650366306304932
    3. ' la' → logprob: -4.090036869049072
    4. ' ' → logprob: -4.090036869049072
    5. ' l' → logprob: -4.840036869049072
    6. ' a' → logprob: -5.715036869049072
    7. 'l' → logprob: -5.965036869049072
    8. 'a' → logprob: -6.215036869049072
    9. ' ' → logprob: -6.465036869049072
    10. '()' → logprob: -6.715036869049072

Token 88: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.8011428117752075
    2. ' fonction' → logprob: -0.9261428117752075
    3. 'f' → logprob: -2.426142692565918
    4. ' ' → logprob: -3.551142692565918
    5. ' function' → logprob: -4.301142692565918
    6. ' f' → logprob: -4.801142692565918
    7. 'def' → logprob: -5.301142692565918
    8. '_' → logprob: -6.426142692565918
    9. 'function' → logprob: -6.551142692565918
    10. 'i' → logprob: -6.926142692565918

Token 89: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18132925033569336
    2. 'i' → logprob: -1.9313292503356934
    3. ' s' → logprob: -4.556329250335693
    4. 's' → logprob: -5.181329250335693
    5. ' ' → logprob: -6.431329250335693
    6. '()' → logprob: -7.056329250335693
    7. '2' → logprob: -7.681329250335693
    8. '(' → logprob: -8.431329727172852
    9. 'a' → logprob: -8.556329727172852
    10. ' `' → logprob: -8.681329727172852

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11898336559534073
    2. 'n' → logprob: -2.243983268737793
    3. 'm' → logprob: -6.618983268737793
    4. 'a' → logprob: -6.868983268737793
    5. 's' → logprob: -7.118983268737793
    6. 'l' → logprob: -7.368983268737793
    7. '4' → logprob: -7.618983268737793
    8. 'N' → logprob: -7.618983268737793
    9. '1' → logprob: -8.118983268737793
    10. 'p' → logprob: -8.868983268737793

Token 91: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006753020919859409
    2. '()' → logprob: -5.006752967834473
    3. '():
' → logprob: -11.256752967834473
    4. '(' → logprob: -11.506752967834473
    5. 'def' → logprob: -12.131752967834473
    6. ' ():' → logprob: -12.506752967834473
    7. ' ()' → logprob: -13.756752967834473
    8. '()>' → logprob: -13.881752967834473
    9. '():

' → logprob: -13.881752967834473
    10. '()*' → logprob: -14.131752967834473

Token 92: ' lit' (ID: 11980)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12982070446014404
    2. '()' → logprob: -2.1298208236694336
    3. 'def' → logprob: -7.379820823669434
    4. '():
' → logprob: -7.379820823669434
    5. ' reads' → logprob: -8.254820823669434
    6. '()>' → logprob: -8.379820823669434
    7. '()">' → logprob: -8.504820823669434
    8. 'l' → logprob: -8.754820823669434
    9. 'read' → logprob: -9.004820823669434
    10. ' ()' → logprob: -9.129820823669434

Token 93: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1267378330230713
    2. 'de' → logprob: -2.6267378330230713
    3. 'une' → logprob: -4.876737594604492
    4. ' deux' → logprob: -4.876737594604492
    5. '():' → logprob: -5.626737594604492
    6. ' ()' → logprob: -5.626737594604492
    7. ' une' → logprob: -5.751737594604492
    8. '_two' → logprob: -5.751737594604492
    9. '_' → logprob: -5.876737594604492
    10. 'two' → logprob: -6.126737594604492

Token 94: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6437199711799622
    2. 'l' → logprob: -2.3937199115753174
    3. ' ' → logprob: -2.3937199115753174
    4. '_' → logprob: -2.6437199115753174
    5. 'entrée' → logprob: -2.6437199115753174
    6. ' ()' → logprob: -3.3937199115753174
    7. ' ligne' → logprob: -3.8937199115753174
    8. 'e' → logprob: -4.3937201499938965
    9. '2' → logprob: -4.6437201499938965
    10. '1' → logprob: -4.6437201499938965

Token 95: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036203854251652956
    2. ' ()' → logprob: -6.878620147705078
    3. 's' → logprob: -7.253620147705078
    4. '().' → logprob: -7.878620147705078
    5. 'de' → logprob: -8.003620147705078
    6. '():' → logprob: -8.878620147705078
    7. 'user' → logprob: -9.003620147705078
    8. '_' → logprob: -9.253620147705078
    9. '()[' → logprob: -9.628620147705078
    10. '()>' → logprob: -9.628620147705078

Token 96: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.37101778388023376
    2. 'e' → logprob: -1.3710178136825562
    3. ''' → logprob: -3.9960176944732666
    4. 'entrée' → logprob: -4.246017932891846
    5. ''e' → logprob: -4.621017932891846
    6. ''ent' → logprob: -4.746017932891846
    7. 'es' → logprob: -7.371017932891846
    8. ''é' → logprob: -7.371017932891846
    9. 'input' → logprob: -7.371017932891846
    10. '()' → logprob: -7.746017932891846

Token 97: ',
' (ID: 412)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25055360794067383
    2. '():' → logprob: -1.6255536079406738
    3. ' ()' → logprob: -4.375553607940674
    4. '().' → logprob: -6.000553607940674
    5. '():
' → logprob: -6.250553607940674
    6. 'user' → logprob: -6.500553607940674
    7. ' ():' → logprob: -7.375553607940674
    8. ':' → logprob: -7.500553607940674
    9. ' (' → logprob: -7.625553607940674
    10. 'e' → logprob: -7.875553607940674

Token 98: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9943833947181702
    2. '   ' → logprob: -1.8693833351135254
    3. 'split' → logprob: -2.4943833351135254
    4. ' puis' → logprob: -2.7443833351135254
    5. 'spl' → logprob: -3.1193833351135254
    6. ' la' → logprob: -3.2443833351135254
    7. 'def' → logprob: -3.3693833351135254
    8. ' ' → logprob: -3.3693833351135254
    9. ' et' → logprob: -3.6193833351135254
    10. ')' → logprob: -4.119383335113525

Token 99: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0724871158599854
    2. ')' → logprob: -1.4474871158599854
    3. ' ' → logprob: -1.5724871158599854
    4. '   ' → logprob: -2.9474871158599854
    5. ' return' → logprob: -3.4474871158599854
    6. ' )' → logprob: -3.4474871158599854
    7. ' la' → logprob: -3.9474871158599854
    8. '    ' → logprob: -4.447486877441406
    9. 'def' → logprob: -4.447486877441406
    10. ' une' → logprob: -4.572486877441406

Token 100: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.01828877441585064
    2. 'ide' → logprob: -4.518288612365723
    3. '   ' → logprob: -6.268288612365723
    4. 'ert' → logprob: -6.893288612365723
    5. 'isé' → logprob: -7.518288612365723
    6. '#' → logprob: -7.893288612365723
    7. ' ' → logprob: -8.143288612365723
    8. 'i' → logprob: -8.393288612365723
    9. ' ise' → logprob: -8.393288612365723
    10. 'e' → logprob: -8.518288612365723

Token 101: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08666851371526718
    2. ' l' → logprob: -4.336668491363525
    3. ' input' → logprob: -4.336668491363525
    4. 'input' → logprob: -4.586668491363525
    5. 'l' → logprob: -5.086668491363525
    6. ' la' → logprob: -5.211668491363525
    7. ')' → logprob: -5.336668491363525
    8. '(input' → logprob: -5.461668491363525
    9. ' une' → logprob: -5.711668491363525
    10. ' ' → logprob: -5.836668491363525

Token 102: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.34497928619384766
    2. 'entrée' → logprob: -2.3449792861938477
    3. ' ligne' → logprob: -2.3449792861938477
    4. 'chaine' → logprob: -3.4699792861938477
    5. 'ligne' → logprob: -3.9699792861938477
    6. ' chaine' → logprob: -4.594979286193848
    7. ' entrée' → logprob: -4.844979286193848
    8. ' ' → logprob: -5.469979286193848
    9. ' string' → logprob: -5.719979286193848
    10. 'l' → logprob: -5.844979286193848

Token 103: ' d' (ID: 272)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2190692275762558
    2. ' par' → logprob: -2.594069242477417
    3. ' ' → logprob: -3.469069242477417
    4. 'en' → logprob: -3.969069242477417
    5. ' )' → logprob: -4.094069004058838
    6. ' au' → logprob: -4.094069004058838
    7. 'au' → logprob: -4.219069004058838
    8. '()' → logprob: -4.594069004058838
    9. ')' → logprob: -6.594069004058838
    10. '   ' → logprob: -6.719069004058838

Token 104: ''entrée' (ID: 115820)
  Prédit: ''espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''espace' → logprob: -0.6399369239807129
    2. ''esp' → logprob: -1.389936923980713
    3. ''entrée' → logprob: -2.014936923980713
    4. 'es' → logprob: -2.764936923980713
    5. 'e' → logprob: -4.639936923980713
    6. 'esp' → logprob: -4.889936923980713
    7. ''' → logprob: -6.014936923980713
    8. 'car' → logprob: -6.889936923980713
    9. ''é' → logprob: -7.014936923980713
    10. 'entrée' → logprob: -7.264936923980713

Token 105: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1929365396499634
    2. '()' → logprob: -1.3179365396499634
    3. ' ' → logprob: -1.4429365396499634
    4. ' par' → logprob: -2.192936420440674
    5. ' )' → logprob: -4.442936420440674
    6. ' ()' → logprob: -4.442936420440674
    7. '.' → logprob: -4.442936420440674
    8. ')' → logprob: -4.567936420440674
    9. '   ' → logprob: -5.192936420440674
    10. ' (' → logprob: -5.692936420440674

Token 106: ' morceaux' (ID: 133321)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.33544787764549255
    2. ' tokens' → logprob: -2.3354477882385254
    3. ' une' → logprob: -2.4604477882385254
    4. ' deux' → logprob: -2.9604477882385254
    5. 'tokens' → logprob: -4.460447788238525
    6. ' plusieurs' → logprob: -4.585447788238525
    7. ' un' → logprob: -5.335447788238525
    8. ' espaces' → logprob: -5.335447788238525
    9. 'une' → logprob: -5.460447788238525
    10. 'des' → logprob: -5.585447788238525

Token 107: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.041159480810165405
    2. '   ' → logprob: -4.416159629821777
    3. 'par' → logprob: -4.791159629821777
    4. '().' → logprob: -5.541159629821777
    5. ' par' → logprob: -5.541159629821777
    6. ' ()' → logprob: -6.291159629821777
    7. '[' → logprob: -6.291159629821777
    8. '(' → logprob: -6.791159629821777
    9. ',' → logprob: -6.916159629821777
    10. '.split' → logprob: -7.291159629821777

Token 108: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1283164769411087
    2. ' ' → logprob: -3.2533164024353027
    3. ' les' → logprob: -3.8783164024353027
    4. 'l' → logprob: -4.128316402435303
    5. ''' → logprob: -4.253316402435303
    6. ' la' → logprob: -4.503316402435303
    7. ' des' → logprob: -5.253316402435303
    8. ' espaces' → logprob: -5.878316402435303
    9. ' '' → logprob: -6.003316402435303
    10. '"' → logprob: -6.753316402435303

Token 109: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.07998766005039215
    2. 'esp' → logprob: -2.5799877643585205
    3. 'es' → logprob: -7.954987525939941
    4. ' espace' → logprob: -8.204987525939941
    5. ''esp' → logprob: -8.579987525939941
    6. 'spaces' → logprob: -9.329987525939941
    7. ' ' → logprob: -9.829987525939941
    8. ' esp' → logprob: -10.329987525939941
    9. ' espacios' → logprob: -10.704987525939941
    10. ' spaces' → logprob: -10.829987525939941

Token 110: ',
' (ID: 412)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31887805461883545
    2. '   ' → logprob: -2.568878173828125
    3. 'def' → logprob: -2.693878173828125
    4. '()
' → logprob: -3.068878173828125
    5. '(' → logprob: -3.818878173828125
    6. ',' → logprob: -4.068878173828125
    7. ')' → logprob: -4.193878173828125
    8. ' (' → logprob: -4.943878173828125
    9. '(
' → logprob: -5.193878173828125
    10. '():' → logprob: -5.943878173828125

Token 111: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.408040165901184
    2. ' puis' → logprob: -1.533040165901184
    3. ' convert' → logprob: -1.908040165901184
    4. ' converts' → logprob: -1.908040165901184
    5. ' et' → logprob: -3.0330400466918945
    6. ' les' → logprob: -3.1580400466918945
    7. ',' → logprob: -3.4080400466918945
    8. 'et' → logprob: -3.4080400466918945
    9. 'strip' → logprob: -4.2830400466918945
    10. ' map' → logprob: -4.5330400466918945

Token 112: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.7849279642105103
    2. 'convert' → logprob: -2.0349278450012207
    3. ' map' → logprob: -2.0349278450012207
    4. ' puis' → logprob: -2.1599278450012207
    5. ' converts' → logprob: -3.2849278450012207
    6. 'map' → logprob: -3.4099278450012207
    7. '   ' → logprob: -3.6599278450012207
    8. ' les' → logprob: -3.7849278450012207
    9. ' et' → logprob: -4.534927845001221
    10. 'et' → logprob: -4.534927845001221

Token 113: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.005388972815126181
    2. 'i' → logprob: -5.5053887367248535
    3. ' it' → logprob: -6.8803887367248535
    4. 't' → logprob: -8.505389213562012
    5. 'ie' → logprob: -11.005389213562012
    6. 'is' → logprob: -11.255389213562012
    7. '   ' → logprob: -11.630389213562012
    8. 'issant' → logprob: -11.880389213562012
    9. 'issent' → logprob: -12.380389213562012
    10. 'ies' → logprob: -12.505389213562012

Token 114: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5433468222618103
    2. ' la' → logprob: -1.793346881866455
    3. ' ' → logprob: -2.168346881866455
    4. ' each' → logprob: -3.168346881866455
    5. ' chacun' → logprob: -3.543346881866455
    6. ' les' → logprob: -3.793346881866455
    7. '   ' → logprob: -5.168346881866455
    8. ' ces' → logprob: -5.543346881866455
    9. 'les' → logprob: -5.793346881866455
    10. 'la' → logprob: -5.793346881866455

Token 115: ' morceau' (ID: 160026)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8349779844284058
    2. ' morceau' → logprob: -0.9599779844284058
    3. 'm' → logprob: -1.8349779844284058
    4. ' élément' → logprob: -4.709978103637695
    5. ' ' → logprob: -5.209978103637695
    6. 'mot' → logprob: -5.834978103637695
    7. ' morceaux' → logprob: -6.584978103637695
    8. ' mot' → logprob: -6.709978103637695
    9. ' m' → logprob: -7.209978103637695
    10. ' él' → logprob: -7.334978103637695

Token 116: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.04941042885184288
    2. '(' → logprob: -4.174410343170166
    3. ' ' → logprob: -4.299410343170166
    4. '()' → logprob: -4.424410343170166
    5. ')' → logprob: -6.049410343170166
    6. 's' → logprob: -6.924410343170166
    7. 'en' → logprob: -7.174410343170166
    8. '(en' → logprob: -7.299410343170166
    9. ',' → logprob: -7.424410343170166
    10. '   ' → logprob: -7.799410343170166

Token 117: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.24404482543468475
    2. 'int' → logprob: -2.119044780731201
    3. ' des' → logprob: -2.869044780731201
    4. ' un' → logprob: -4.244044780731201
    5. 'ent' → logprob: -4.994044780731201
    6. ' ' → logprob: -5.119044780731201
    7. ' ent' → logprob: -5.369044780731201
    8. ' integers' → logprob: -5.619044780731201
    9. ' entier' → logprob: -6.494044780731201
    10. 'des' → logprob: -7.119044780731201

Token 118: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02132510393857956
    2. '(' → logprob: -4.14632511138916
    3. ' ()' → logprob: -6.27132511138916
    4. '(),' → logprob: -7.14632511138916
    5. '():' → logprob: -7.39632511138916
    6. ',' → logprob: -7.52132511138916
    7. '   ' → logprob: -7.77132511138916
    8. 'def' → logprob: -8.14632511138916
    9. '()
' → logprob: -8.39632511138916
    10. '(
' → logprob: -9.52132511138916

Token 119: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.8528004884719849
    2. ' map' → logprob: -1.7278004884719849
    3. '   ' → logprob: -1.9778004884719849
    4. ' et' → logprob: -2.1028003692626953
    5. ' return' → logprob: -2.9778003692626953
    6. ' and' → logprob: -3.7278003692626953
    7. ',' → logprob: -4.352800369262695
    8. 'map' → logprob: -5.102800369262695
    9. ' la' → logprob: -5.102800369262695
    10. ' ' → logprob: -5.102800369262695

Token 120: ' retourne' (ID: 178818)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.658499538898468
    2. ' return' → logprob: -1.2834994792938232
    3. ' retourne' → logprob: -1.7834994792938232
    4. 'return' → logprob: -4.283499717712402
    5. ' ' → logprob: -4.533499717712402
    6. ' ren' → logprob: -4.908499717712402
    7. ' retour' → logprob: -6.783499717712402
    8. ' returns' → logprob: -7.408499717712402
    9. 'eturn' → logprob: -7.533499717712402
    10. '   ' → logprob: -8.033499717712402

Token 121: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2679567337036133
    2. ' list' → logprob: -2.0179567337036133
    3. ' ' → logprob: -3.0179567337036133
    4. ' une' → logprob: -4.017956733703613
    5. ' map' → logprob: -4.892956733703613
    6. ' ' → logprob: -4.892956733703613
    7. ' un' → logprob: -5.642956733703613
    8. '[' → logprob: -5.642956733703613
    9. ' l' → logprob: -6.017956733703613
    10. ' les' → logprob: -6.142956733703613

Token 122: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7737143039703369
    2. ' list' → logprob: -1.023714303970337
    3. 's' → logprob: -2.273714303970337
    4. 'list' → logprob: -4.023714065551758
    5. ' tuple' → logprob: -4.148714065551758
    6. 'liste' → logprob: -4.648714065551758
    7. ' ' → logprob: -5.648714065551758
    8. ' map' → logprob: -5.773714065551758
    9. '[]' → logprob: -5.773714065551758
    10. '[' → logprob: -5.898714065551758

Token 123: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20636826753616333
    2. '[' → logprob: -1.9563682079315186
    3. ' (' → logprob: -5.081368446350098
    4. '()' → logprob: -5.081368446350098
    5. 's' → logprob: -5.206368446350098
    6. '(map' → logprob: -5.331368446350098
    7. '[]' → logprob: -5.706368446350098
    8. '[int' → logprob: -5.831368446350098
    9. '[:]' → logprob: -6.081368446350098
    10. ' of' → logprob: -6.456368446350098

Token 124: ' ces' (ID: 10532)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.29674381017684937
    2. ' int' → logprob: -2.546743869781494
    3. ' integers' → logprob: -2.546743869781494
    4. 'ent' → logprob: -3.421743869781494
    5. 'int' → logprob: -3.671743869781494
    6. 'ints' → logprob: -4.546743869781494
    7. 'inte' → logprob: -4.921743869781494
    8. 'ces' → logprob: -5.171743869781494
    9. ' ces' → logprob: -5.296743869781494
    10. 's' → logprob: -6.171743869781494

Token 125: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.10331667214632034
    2. 'ent' → logprob: -3.2283167839050293
    3. ' integers' → logprob: -3.9783167839050293
    4. ' nombres' → logprob: -4.228316783905029
    5. 'inte' → logprob: -5.103316783905029
    6. 'int' → logprob: -5.353316783905029
    7. ' espaces' → logprob: -5.353316783905029
    8. 'ints' → logprob: -6.228316783905029
    9. ' int' → logprob: -6.353316783905029
    10. ' valeurs' → logprob: -7.228316783905029

Token 126: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00017183588352054358
    2. 'i' → logprob: -8.875171661376953
    3. 'ier' → logprob: -11.125171661376953
    4. 'ières' → logprob: -11.125171661376953
    5. 'ière' → logprob: -13.750171661376953
    6. 'ers' → logprob: -14.625171661376953
    7. ' i' → logprob: -15.125171661376953
    8. 'ié' → logprob: -16.125171661376953
    9. 'ires' → logprob: -16.250171661376953
    10. 'eurs' → logprob: -16.500171661376953

Token 127: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9144039154052734
    2. '():' → logprob: -1.0394039154052734
    3. '():
' → logprob: -1.6644039154052734
    4. '()' → logprob: -3.1644039154052734
    5. ':' → logprob: -4.789403915405273
    6. '   ' → logprob: -6.039403915405273
    7. ' def' → logprob: -6.539403915405273
    8. ':
' → logprob: -7.039403915405273
    9. '()
' → logprob: -7.414403915405273
    10. ':def' → logprob: -9.164403915405273

Token 128: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. ' def' → logprob: -16.625
    4. '```' → logprob: -18.125
    5. 'de' → logprob: -18.5
    6. 'd' → logprob: -19.25
    7. 'ndef' → logprob: -19.75
    8. ':def' → logprob: -21.0
    9. '    
' → logprob: -22.125
    10. '	def' → logprob: -22.375

Token 129: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020702460780739784
    2. 'i' → logprob: -3.895702362060547
    3. ' ' → logprob: -9.020702362060547
    4. '	i' → logprob: -11.520702362060547
    5. ' ' → logprob: -11.770702362060547
    6. '  ' → logprob: -11.770702362060547
    7. '2' → logprob: -12.145702362060547
    8. '_i' → logprob: -13.145702362060547
    9. ' ' → logprob: -13.270702362060547
    10. '_' → logprob: -13.645702362060547

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. ' ' → logprob: -10.250041961669922
    3. '_' → logprob: -13.500041961669922
    4. '
' → logprob: -14.125041961669922
    5. '２' → logprob: -14.625041961669922
    6. '1' → logprob: -14.812541961669922
    7. '₂' → logprob: -15.062541961669922
    8. '(' → logprob: -15.125041961669922
    9. '۲' → logprob: -15.125041961669922
    10. '٢' → logprob: -15.250041961669922

Token 131: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03817965090274811
    2. '():
' → logprob: -3.288179636001587
    3. ' ():' → logprob: -9.413179397583008
    4. '()' → logprob: -9.913179397583008
    5. '():
' → logprob: -12.038179397583008
    6. '():

' → logprob: -14.038179397583008
    7. '(' → logprob: -15.663179397583008
    8. ' ()' → logprob: -15.788179397583008
    9. 'def' → logprob: -17.913179397583008
    10. '   ' → logprob: -18.538179397583008

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03868543356657028
    2. 'return' → logprob: -3.7886853218078613
    3. ' return' → logprob: -4.288685321807861
    4. '()' → logprob: -6.788685321807861
    5. '	return' → logprob: -9.03868579864502
    6. ':' → logprob: -9.66368579864502
    7. ' ' → logprob: -9.66368579864502
    8. '
' → logprob: -10.03868579864502
    9. '    
' → logprob: -10.03868579864502
    10. '():' → logprob: -10.03868579864502

Token 133: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18177692592144012
    2. ' return' → logprob: -2.181777000427246
    3. '   ' → logprob: -2.931777000427246
    4. ' ' → logprob: -10.431777000427246
    5. '	return' → logprob: -11.681777000427246
    6. '    
' → logprob: -11.806777000427246
    7. '
' → logprob: -12.306777000427246
    8. '  ' → logprob: -12.431777000427246
    9. '    ' → logprob: -12.806777000427246
    10. 'ret' → logprob: -13.181777000427246

Token 134: ' input' (ID: 3422)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15324579179286957
    2. ' return' → logprob: -2.278245687484741
    3. 'map' → logprob: -4.15324592590332
    4. 'input' → logprob: -4.40324592590332
    5. 'list' → logprob: -5.02824592590332
    6. ' map' → logprob: -5.77824592590332
    7. ' input' → logprob: -7.02824592590332
    8. ' list' → logprob: -7.77824592590332
    9. '   ' → logprob: -7.90324592590332
    10. 'int' → logprob: -8.65324592590332

Token 135: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02975662797689438
    2. '()' → logprob: -3.529756546020508
    3. '(' → logprob: -13.029756546020508
    4. '()
' → logprob: -13.404756546020508
    5. ' ().' → logprob: -14.529756546020508
    6. '()).' → logprob: -14.779756546020508
    7. ')' → logprob: -14.779756546020508
    8. ' ()' → logprob: -15.154756546020508
    9. '())' → logprob: -15.404756546020508
    10. '()

' → logprob: -15.654756546020508

Token 136: ' lit' (ID: 11980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012373719364404678
    2. '()' → logprob: -7.376237392425537
    3. '.split' → logprob: -7.751237392425537
    4. '.' → logprob: -8.876236915588379
    5. ' .' → logprob: -11.001236915588379
    6. '.strip' → logprob: -12.001236915588379
    7. '(' → logprob: -12.501236915588379
    8. '.s' → logprob: -12.876236915588379
    9. 'split' → logprob: -13.001236915588379
    10. 's' → logprob: -13.251236915588379

Token 137: ' la' (ID: 557)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.47538214921951294
    2. '()' → logprob: -0.9753821492195129
    3. '(' → logprob: -7.725382328033447
    4. ' ()' → logprob: -8.475381851196289
    5. ')' → logprob: -8.725381851196289
    6. ' ' → logprob: -9.350381851196289
    7. ' input' → logprob: -9.600381851196289
    8. ' ().' → logprob: -9.725381851196289
    9. 'input' → logprob: -9.850381851196289
    10. '(input' → logprob: -10.350381851196289

Token 138: ' chaîne' (ID: 89288)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.965306282043457
    2. 'ligne' → logprob: -0.965306282043457
    3. ' chaîne' → logprob: -1.840306282043457
    4. 'entrée' → logprob: -3.215306282043457
    5. 'chaine' → logprob: -4.215306282043457
    6. 'l' → logprob: -4.590306282043457
    7. 'input' → logprob: -5.340306282043457
    8. ' input' → logprob: -5.465306282043457
    9. ' entrée' → logprob: -6.465306282043457
    10. ' chaine' → logprob: -6.840306282043457

Token 139: ' entrée' (ID: 95590)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03867131844162941
    2. '()' → logprob: -3.2886712551116943
    3. '.' → logprob: -7.663671493530273
    4. ' .' → logprob: -10.038671493530273
    5. ' ()' → logprob: -10.288671493530273
    6. '(' → logprob: -10.538671493530273
    7. ' ().' → logprob: -10.788671493530273
    8. '.split' → logprob: -11.038671493530273
    9. ' ' → logprob: -12.913671493530273
    10. '   ' → logprob: -13.163671493530273

Token 140: ' par' (ID: 686)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009861977770924568
    2. '()' → logprob: -4.634861946105957
    3. '.' → logprob: -10.259861946105957
    4. ' ().' → logprob: -11.384861946105957
    5. '()
' → logprob: -11.509861946105957
    6. '(' → logprob: -11.634861946105957
    7. '()).' → logprob: -12.259861946105957
    8. ').' → logprob: -12.509861946105957
    9. 's' → logprob: -12.509861946105957
    10. '(),' → logprob: -12.634861946105957

Token 141: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.25563719868659973
    2. 'l' → logprob: -1.5056371688842773
    3. '()' → logprob: -6.255637168884277
    4. ' utilisateur' → logprob: -7.255637168884277
    5. 'user' → logprob: -8.630637168884277
    6. ' input' → logprob: -8.630637168884277
    7. 'input' → logprob: -9.005637168884277
    8. 'util' → logprob: -9.255637168884277
    9. '	l' → logprob: -9.255637168884277
    10. 'la' → logprob: -9.755637168884277

Token 142: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.005614596419036388
    2. '’utilisateur' → logprob: -5.505614757537842
    3. 'util' → logprob: -6.755614757537842
    4. ' utilisateur' → logprob: -8.880614280700684
    5. ''' → logprob: -9.880614280700684
    6. 'user' → logprob: -10.380614280700684
    7. '   ' → logprob: -10.630614280700684
    8. ''util' → logprob: -11.005614280700684
    9. ''user' → logprob: -11.130614280700684
    10. 'e' → logprob: -11.380614280700684

Token 143: '.
' (ID: 558)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002544631715863943
    2. '.' → logprob: -6.627544403076172
    3. '()' → logprob: -7.002544403076172
    4. ').' → logprob: -9.002544403076172
    5. '.split' → logprob: -9.127544403076172
    6. ')' → logprob: -10.752544403076172
    7. ' .' → logprob: -11.252544403076172
    8. '(' → logprob: -11.377544403076172
    9. '   ' → logprob: -11.877544403076172
    10. ',' → logprob: -11.877544403076172

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13154760003089905
    2. 'return' → logprob: -2.256547689437866
    3. ' return' → logprob: -4.131547451019287
    4. '.split' → logprob: -7.256547451019287
    5. 'split' → logprob: -7.881547451019287
    6. '().' → logprob: -8.006547927856445
    7. '    
' → logprob: -8.131547927856445
    8. ' ' → logprob: -8.881547927856445
    9. '()' → logprob: -9.006547927856445
    10. '    ' → logprob: -9.131547927856445

Token 145: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21038419008255005
    2. ' return' → logprob: -1.8353841304779053
    3. '   ' → logprob: -3.5853841304779053
    4. 'split' → logprob: -7.085384368896484
    5. 's' → logprob: -8.085384368896484
    6. '.split' → logprob: -8.335384368896484
    7. '    
' → logprob: -8.335384368896484
    8. ' ' → logprob: -8.710384368896484
    9. ')' → logprob: -8.835384368896484
    10. '    ' → logprob: -8.960384368896484

Token 146: ' split' (ID: 12648)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7044345736503601
    2. 'return' → logprob: -0.7044345736503601
    3. ' map' → logprob: -5.704434394836426
    4. 'map' → logprob: -6.079434394836426
    5. 'split' → logprob: -6.079434394836426
    6. '   ' → logprob: -6.454434394836426
    7. 'input' → logprob: -7.829434394836426
    8. 'list' → logprob: -7.954434394836426
    9. ' split' → logprob: -8.204434394836426
    10. ' list' → logprob: -8.454434394836426

Token 147: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005201471503823996
    2. '(' → logprob: -8.500519752502441
    3. '('' → logprob: -8.875519752502441
    4. '().' → logprob: -9.375519752502441
    5. ' ()' → logprob: -9.500519752502441
    6. '("' → logprob: -11.375519752502441
    7. '（）' → logprob: -13.750519752502441
    8. '()]' → logprob: -14.000519752502441
    9. '("("' → logprob: -14.875519752502441
    10. '()`' → logprob: -14.875519752502441

Token 148: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008172446861863136
    2. '().' → logprob: -4.883172512054443
    3. '(' → logprob: -8.008172035217285
    4. ' ()' → logprob: -8.508172035217285
    5. '('' → logprob: -11.883172035217285
    6. '())' → logprob: -11.883172035217285
    7. '("' → logprob: -13.383172035217285
    8. '()"' → logprob: -13.383172035217285
    9. '()

' → logprob: -13.508172035217285
    10. ')' → logprob: -13.758172035217285

Token 149: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0003430912329349667
    2. 'page' → logprob: -8.875343322753906
    3. 'p' → logprob: -9.250343322753906
    4. '```' → logprob: -10.875343322753906
    5. 'пе' → logprob: -11.125343322753906
    6. 'per' → logprob: -11.500343322753906
    7. ' pe' → logprob: -11.625343322753906
    8. '   ' → logprob: -11.750343322753906
    9. 'pé' → logprob: -11.750343322753906
    10. '    ' → logprob: -12.375343322753906

Token 150: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004394629038870335
    2. '('' → logprob: -6.12939453125
    3. ' la' → logprob: -6.87939453125
    4. ' ()' → logprob: -7.25439453125
    5. ' l' → logprob: -8.62939453125
    6. '(' → logprob: -10.00439453125
    7. 'la' → logprob: -10.25439453125
    8. ' ' → logprob: -10.37939453125
    9. '()[' → logprob: -10.37939453125
    10. '()
' → logprob: -10.87939453125

Token 151: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07167651504278183
    2. 'chaine' → logprob: -3.44667649269104
    3. ' chaine' → logprob: -4.571676731109619
    4. 'string' → logprob: -4.821676731109619
    5. 'cha' → logprob: -5.196676731109619
    6. ' string' → logprob: -5.446676731109619
    7. 'input' → logprob: -6.321676731109619
    8. ' input' → logprob: -6.446676731109619
    9. ' ligne' → logprob: -6.696676731109619
    10. 'entrée' → logprob: -6.696676731109619

Token 152: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018715211190283298
    2. '('' → logprob: -6.626871585845947
    3. ' ()' → logprob: -8.251871109008789
    4. '(' → logprob: -8.876871109008789
    5. '("' → logprob: -9.376871109008789
    6. '()
' → logprob: -10.626871109008789
    7. '().' → logprob: -11.876871109008789
    8. '()

' → logprob: -12.876871109008789
    9. '()[' → logprob: -13.001871109008789
    10. '   ' → logprob: -13.126871109008789

Token 153: ' morceaux' (ID: 133321)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.7074205875396729
    2. ' morceaux' → logprob: -1.2074205875396729
    3. ' une' → logprob: -2.332420587539673
    4. ' des' → logprob: -4.207420349121094
    5. ' parts' → logprob: -4.582420349121094
    6. '['' → logprob: -4.957420349121094
    7. ' un' → logprob: -4.957420349121094
    8. ''' → logprob: -5.082420349121094
    9. ' '' → logprob: -5.332420349121094
    10. ' espace' → logprob: -5.332420349121094

Token 154: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030400342075154185
    2. '(' → logprob: -8.625304222106934
    3. ' ()' → logprob: -10.125304222106934
    4. '('' → logprob: -10.500304222106934
    5. '   ' → logprob: -10.625304222106934
    6. '().' → logprob: -11.625304222106934
    7. '("' → logprob: -12.500304222106934
    8. '()
' → logprob: -12.625304222106934
    9. '(),' → logprob: -12.875304222106934
    10. '()[' → logprob: -12.875304222106934

Token 155: ' utilisant' (ID: 92474)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.36047378182411194
    2. ' utilisant' → logprob: -2.360473871231079
    3. 'fonction' → logprob: -2.985473871231079
    4. ' espaces' → logprob: -3.110473871231079
    5. 's' → logprob: -4.1104736328125
    6. ' '' → logprob: -4.3604736328125
    7. ' suivant' → logprob: -4.6104736328125
    8. ' ' → logprob: -4.8604736328125
    9. ' fonctions' → logprob: -4.9854736328125
    10. ' morceaux' → logprob: -5.2354736328125

Token 156: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.23885232210159302
    2. ' ' → logprob: -2.6138522624969482
    3. ''' → logprob: -2.9888522624969482
    4. 'l' → logprob: -3.6138522624969482
    5. ' les' → logprob: -3.9888522624969482
    6. ' '' → logprob: -4.488852500915527
    7. ' le' → logprob: -4.988852500915527
    8. ' un' → logprob: -4.988852500915527
    9. ' des' → logprob: -5.613852500915527
    10. '()' → logprob: -5.738852500915527

Token 157: ''espace' (ID: 118124)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6412230134010315
    2. ''espace' → logprob: -1.1412229537963867
    3. 'a' → logprob: -2.2662229537963867
    4. ''' → logprob: -3.6412229537963867
    5. ''esp' → logprob: -4.391222953796387
    6. 'e' → logprob: -5.266222953796387
    7. 'esp' → logprob: -5.891222953796387
    8. ''a' → logprob: -7.516222953796387
    9. '’espace' → logprob: -7.516222953796387
    10. ''es' → logprob: -8.016222953796387

Token 158: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1115812137722969
    2. '()' → logprob: -3.111581325531006
    3. ' )' → logprob: -3.486581325531006
    4. 's' → logprob: -3.861581325531006
    5. '())' → logprob: -4.986581325531006
    6. ').' → logprob: -6.861581325531006
    7. '")' → logprob: -8.486580848693848
    8. '')' → logprob: -8.611580848693848
    9. '.' → logprob: -8.861580848693848
    10. '().' → logprob: -9.236580848693848

Token 159: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.026753852143883705
    2. 'delimiter' → logprob: -5.276753902435303
    3. ' le' → logprob: -5.651753902435303
    4. 'le' → logprob: -5.901753902435303
    5. ' delimiter' → logprob: -6.276753902435303
    6. 'dé' → logprob: -6.401753902435303
    7. ' séparation' → logprob: -6.401753902435303
    8. 'sé' → logprob: -6.651753902435303
    9. 's' → logprob: -6.901753902435303
    10. ' dé' → logprob: -6.901753902435303

Token 160: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.0007245833403430879
    2. 'ate' → logprob: -7.375724792480469
    3. 'ateurs' → logprob: -10.125724792480469
    4. 'ator' → logprob: -10.625724792480469
    5. 'a' → logprob: -11.250724792480469
    6. ' at' → logprob: -12.250724792480469
    7. ' ate' → logprob: -13.125724792480469
    8. 'at' → logprob: -13.250724792480469
    9. 'ation' → logprob: -13.250724792480469
    10. ' ' → logprob: -13.500724792480469

Token 161: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003078840672969818
    2. '()
' → logprob: -6.253078937530518
    3. '().' → logprob: -7.753078937530518
    4. '   ' → logprob: -7.878078937530518
    5. ')' → logprob: -8.87807846069336
    6. '())' → logprob: -9.37807846069336
    7. '(' → logprob: -9.62807846069336
    8. ' ()' → logprob: -11.12807846069336
    9. '()

' → logprob: -11.75307846069336
    10. '.' → logprob: -12.25307846069336

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044105302542448044
    2. '()' → logprob: -3.544105291366577
    3. 'return' → logprob: -5.169105529785156
    4. '()
' → logprob: -5.544105529785156
    5. ' return' → logprob: -6.044105529785156
    6. '    
' → logprob: -7.044105529785156
    7. ')' → logprob: -8.169105529785156
    8. '().' → logprob: -8.294105529785156
    9. '    ' → logprob: -9.294105529785156
    10. '   
' → logprob: -9.419105529785156

Token 163: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22961585223674774
    2. 'return' → logprob: -1.9796158075332642
    3. ' return' → logprob: -2.7296159267425537
    4. '    
' → logprob: -6.854615688323975
    5. '    ' → logprob: -8.229616165161133
    6. ' ' → logprob: -9.354616165161133
    7. '  ' → logprob: -9.354616165161133
    8. '	return' → logprob: -9.979616165161133
    9. '   
' → logprob: -9.979616165161133
    10. 'tokens' → logprob: -10.479616165161133

Token 164: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1705724000930786
    2. ' return' → logprob: -1.2955724000930786
    3. ' map' → logprob: -1.5455724000930786
    4. 'map' → logprob: -1.6705724000930786
    5. '   ' → logprob: -4.295572280883789
    6. 'list' → logprob: -7.795572280883789
    7. ' ' → logprob: -8.295572280883789
    8. ' list' → logprob: -8.795572280883789
    9. 'int' → logprob: -8.920572280883789
    10. '  ' → logprob: -9.295572280883789

Token 165: ' compréhension' (ID: 142333)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3963939845561981
    2. 'return' → logprob: -1.1463940143585205
    3. ' liste' → logprob: -5.896393775939941
    4. ' ' → logprob: -6.396393775939941
    5. 'map' → logprob: -6.896393775939941
    6. '   ' → logprob: -7.021393775939941
    7. 'liste' → logprob: -7.396393775939941
    8. ' map' → logprob: -7.646393775939941
    9. 'split' → logprob: -8.396393775939941
    10. ' ligne' → logprob: -8.521393775939941

Token 166: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8432978391647339
    2. '[int' → logprob: -1.0932978391647339
    3. ' [' → logprob: -2.2182979583740234
    4. '[i' → logprob: -3.3432979583740234
    5. ' des' → logprob: -3.8432979583740234
    6. '   ' → logprob: -4.093297958374023
    7. '[num' → logprob: -4.093297958374023
    8. ' de' → logprob: -4.093297958374023
    9. ' ' → logprob: -5.218297958374023
    10. '[n' → logprob: -5.968297958374023

Token 167: ' liste' (ID: 31719)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.073402039706707
    2. '[' → logprob: -2.948401927947998
    3. ' liste' → logprob: -4.948401927947998
    4. '[i' → logprob: -5.573401927947998
    5. 'liste' → logprob: -5.698401927947998
    6. '[x' → logprob: -6.698401927947998
    7. '[n' → logprob: -7.698401927947998
    8. ' [' → logprob: -7.823401927947998
    9. '[l' → logprob: -8.198402404785156
    10. ' la' → logprob: -8.448402404785156

Token 168: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6161132454872131
    2. '[' → logprob: -0.8661132454872131
    3. ' [' → logprob: -3.3661131858825684
    4. '[i' → logprob: -5.616113185882568
    5. ' return' → logprob: -8.616113662719727
    6. ' ' → logprob: -8.866113662719727
    7. 'return' → logprob: -8.991113662719727
    8. '[Int' → logprob: -9.241113662719727
    9. '[j' → logprob: -9.366113662719727
    10. '[in' → logprob: -9.741113662719727

Token 169: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00014358828775584698
    2. ' int' → logprob: -8.875144004821777
    3. '(int' → logprob: -13.750144004821777
    4. 'i' → logprob: -13.875144004821777
    5. '   ' → logprob: -14.375144004821777
    6. '<int' → logprob: -15.250144004821777
    7. ':int' → logprob: -15.500144004821777
    8. '	int' → logprob: -15.625144004821777
    9. ']int' → logprob: -16.12514305114746
    10. '```' → logprob: -16.37514305114746

Token 170: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006678075063973665
    2. '(i' → logprob: -5.756678104400635
    3. '(m' → logprob: -6.506678104400635
    4. '(e' → logprob: -7.131678104400635
    5. '(' → logprob: -7.881678104400635
    6. '(s' → logprob: -8.006677627563477
    7. '(n' → logprob: -9.006677627563477
    8. '(p' → logprob: -9.756677627563477
    9. '(a' → logprob: -9.881677627563477
    10. '(part' → logprob: -10.256677627563477

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013257184764370322
    2. 'for' → logprob: -7.001325607299805
    3. '()' → logprob: -8.751325607299805
    4. ' for' → logprob: -9.001325607299805
    5. 'n' → logprob: -9.876325607299805
    6. 'in' → logprob: -10.501325607299805
    7. ' )' → logprob: -10.876325607299805
    8. 'pour' → logprob: -12.126325607299805
    9. 'e' → logprob: -12.251325607299805
    10. 'or' → logprob: -12.501325607299805

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47422903776168823
    2. 'for' → logprob: -0.9742290377616882
    3. 'pour' → logprob: -9.599228858947754
    4. ' pour' → logprob: -10.349228858947754
    5. '()' → logprob: -10.849228858947754
    6. ' ' → logprob: -10.849228858947754
    7. '	for' → logprob: -12.349228858947754
    8. '   ' → logprob: -12.599228858947754
    9. '```' → logprob: -13.724228858947754
    10. ' f' → logprob: -13.974228858947754

Token 173: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3486955463886261
    2. 'input' → logprob: -1.2236955165863037
    3. ' i' → logprob: -9.723695755004883
    4. 'i' → logprob: -9.848695755004883
    5. ' ' → logprob: -10.598695755004883
    6. '(input' → logprob: -10.723695755004883
    7. '	input' → logprob: -11.098695755004883
    8. 'x' → logprob: -11.598695755004883
    9. 's' → logprob: -11.786195755004883
    10. ']' → logprob: -11.848695755004883

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0830313041806221
    2. 'in' → logprob: -2.833031415939331
    3. ' input' → logprob: -4.458031177520752
    4. 'input' → logprob: -4.708031177520752
    5. ' ' → logprob: -8.83303165435791
    6. '(input' → logprob: -10.45803165435791
    7. ']' → logprob: -11.45803165435791
    8. '  ' → logprob: -11.58303165435791
    9. '=input' → logprob: -11.58303165435791
    10. ',input' → logprob: -12.20803165435791

Token 175: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.055032696574926376
    2. ' input' → logprob: -2.930032730102539
    3. '(input' → logprob: -9.805032730102539
    4. ']' → logprob: -10.680032730102539
    5. ' ' → logprob: -10.805032730102539
    6. 'split' → logprob: -10.930032730102539
    7. '   ' → logprob: -11.680032730102539
    8. ')' → logprob: -12.305032730102539
    9. '<input' → logprob: -13.055032730102539
    10. '  ' → logprob: -13.117532730102539

Token 176: ']' (ID: 60)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.026606105268001556
    2. '(input' → logprob: -4.15160608291626
    3. ' input' → logprob: -4.65160608291626
    4. ']' → logprob: -7.27660608291626
    5. 'split' → logprob: -9.276606559753418
    6. '(' → logprob: -9.901606559753418
    7. ' (' → logprob: -10.401606559753418
    8. '()]' → logprob: -10.776606559753418
    9. 's' → logprob: -11.401606559753418
    10. ')' → logprob: -11.401606559753418

Token 177: ' parc' (ID: 22138)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8193330764770508
    2. ']' → logprob: -1.1943330764770508
    3. ' return' → logprob: -1.5693330764770508
    4. ')' → logprob: -3.819333076477051
    5. ' retourne' → logprob: -4.944333076477051
    6. '   ' → logprob: -5.194333076477051
    7. ' ]' → logprob: -6.194333076477051
    8. ' permet' → logprob: -6.194333076477051
    9. 'convert' → logprob: -6.694333076477051
    10. '[]' → logprob: -6.944333076477051

Token 178: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.030022265389561653
    2. 'ours' → logprob: -3.905022382736206
    3. 'our' → logprob: -6.030022144317627
    4. '[' → logprob: -6.780022144317627
    5. 'ourse' → logprob: -6.780022144317627
    6. 'oure' → logprob: -6.905022144317627
    7. 'e' → logprob: -7.405022144317627
    8. 'orse' → logprob: -7.655022144317627
    9. 'court' → logprob: -7.780022144317627
    10. 'o' → logprob: -8.155022621154785

Token 179: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6371170282363892
    2. 'input' → logprob: -0.7621170282363892
    3. 'split' → logprob: -6.3871169090271
    4. ' la' → logprob: -7.2621169090271
    5. ' l' → logprob: -7.6371169090271
    6. ' ' → logprob: -8.012117385864258
    7. ' split' → logprob: -8.512117385864258
    8. 'l' → logprob: -8.512117385864258
    9. 'la' → logprob: -8.637117385864258
    10. '   ' → logprob: -8.762117385864258

Token 180: ' morceau' (ID: 160026)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.46463701128959656
    2. ' input' → logprob: -1.214637041091919
    3. 'mot' → logprob: -3.839637041091919
    4. ' mot' → logprob: -4.71463680267334
    5. 'element' → logprob: -5.08963680267334
    6. 'word' → logprob: -5.46463680267334
    7. ' element' → logprob: -5.46463680267334
    8. ' morceau' → logprob: -5.71463680267334
    9. 'token' → logprob: -5.83963680267334
    10. 'élé' → logprob: -6.21463680267334

Token 181: ' et' (ID: 859)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.977132260799408
    2. ']' → logprob: -1.3521323204040527
    3. '(input' → logprob: -1.8521323204040527
    4. 'in' → logprob: -2.7271323204040527
    5. ' input' → logprob: -2.7271323204040527
    6. ' in' → logprob: -2.8521323204040527
    7. ' ]' → logprob: -5.227132320404053
    8. '   ' → logprob: -6.352132320404053
    9. ')' → logprob: -6.477132320404053
    10. '()]' → logprob: -6.602132320404053

Token 182: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.0179497003555298
    2. ' int' → logprob: -1.2679497003555298
    3. 'int' → logprob: -1.5179497003555298
    4. ' convert' → logprob: -2.7679495811462402
    5. 'convert' → logprob: -3.3929495811462402
    6. ' les' → logprob: -5.01794958114624
    7. ' converts' → logprob: -5.01794958114624
    8. ' return' → logprob: -5.14294958114624
    9. 'le' → logprob: -5.26794958114624
    10. ' transforme' → logprob: -5.51794958114624

Token 183: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.1452350616455078
    2. 'int' → logprob: -2.395235061645508
    3. ' convert' → logprob: -3.270235061645508
    4. ' int' → logprob: -5.770235061645508
    5. 'con' → logprob: -6.770235061645508
    6. ' transforme' → logprob: -7.020235061645508
    7. ' converts' → logprob: -8.145235061645508
    8. 'transform' → logprob: -9.145235061645508
    9. ' convertir' → logprob: -9.395235061645508
    10. ' conver' → logprob: -10.270235061645508

Token 184: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0008289250545203686
    2. ' it' → logprob: -7.625828742980957
    3. 'i' → logprob: -9.250828742980957
    4. 't' → logprob: -9.375828742980957
    5. '   ' → logprob: -10.250828742980957
    6. '[it' → logprob: -10.750828742980957
    7. '_it' → logprob: -10.875828742980957
    8. '
' → logprob: -11.500828742980957
    9. 'et' → logprob: -11.625828742980957
    10. '(it' → logprob: -11.750828742980957

Token 185: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08041664212942123
    2. 'en' → logprob: -2.580416679382324
    3. ' in' → logprob: -6.955416679382324
    4. ' ' → logprob: -8.955416679382324
    5. 'in' → logprob: -9.205416679382324
    6. 'e' → logprob: -9.955416679382324
    7. 'int' → logprob: -10.080416679382324
    8. ')' → logprob: -10.205416679382324
    9. ' à' → logprob: -10.330416679382324
    10. '()' → logprob: -10.580416679382324

Token 186: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.49770963191986084
    2. 'int' → logprob: -0.9977096319198608
    3. 'ent' → logprob: -4.49770975112915
    4. ' entier' → logprob: -4.87270975112915
    5. ' ent' → logprob: -5.74770975112915
    6. ' integer' → logprob: -7.12270975112915
    7. ' integers' → logprob: -8.372709274291992
    8. 'inte' → logprob: -9.247709274291992
    9. 'integer' → logprob: -9.747709274291992
    10. ' un' → logprob: -9.872709274291992

Token 187: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14690859615802765
    2. '(input' → logprob: -2.7719085216522217
    3. '   ' → logprob: -3.3969085216522217
    4. 'input' → logprob: -3.5219085216522217
    5. ' ]' → logprob: -6.146908760070801
    6. '()]' → logprob: -6.271908760070801
    7. '(' → logprob: -7.021908760070801
    8. ')]' → logprob: -7.021908760070801
    9. '[input' → logprob: -7.021908760070801
    10. ')' → logprob: -7.146908760070801

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10590983927249908
    2. 'return' → logprob: -2.480909824371338
    3. ' return' → logprob: -4.105909824371338
    4. 'def' → logprob: -9.230910301208496
    5. '	return' → logprob: -9.605910301208496
    6. '    
' → logprob: -9.855910301208496
    7. '
' → logprob: -9.980910301208496
    8. '  ' → logprob: -10.855910301208496
    9. '    ' → logprob: -10.855910301208496
    10. ' ' → logprob: -11.230910301208496

Token 189: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005576067604124546
    2. ' return' → logprob: -5.505576133728027
    3. '   ' → logprob: -6.505576133728027
    4. '	return' → logprob: -14.755576133728027
    5. ' ' → logprob: -15.255576133728027
    6. 'def' → logprob: -15.380576133728027
    7. '
' → logprob: -15.755576133728027
    8. '  ' → logprob: -16.00557518005371
    9. '    
' → logprob: -16.00557518005371
    10. '    ' → logprob: -17.25557518005371

Token 190: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.26118165254592896
    2. '[int' → logprob: -1.5111815929412842
    3. '[list' → logprob: -5.011181831359863
    4. ' list' → logprob: -6.136181831359863
    5. '[' → logprob: -8.261181831359863
    6. 'list' → logprob: -9.386181831359863
    7. '[input' → logprob: -11.761181831359863
    8. '[List' → logprob: -11.761181831359863
    9. '[i' → logprob: -11.886181831359863
    10. ' ' → logprob: -11.886181831359863

Token 191: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.045823566731997e-05
    2. ' int' → logprob: -10.875020027160645
    3. 'i' → logprob: -13.750020027160645
    4. '   ' → logprob: -15.500020027160645
    5. '  ' → logprob: -17.25002098083496
    6. ']int' → logprob: -17.25002098083496
    7. '(int' → logprob: -17.37502098083496
    8. ' ' → logprob: -17.50002098083496
    9. '<int' → logprob: -17.50002098083496
    10. '	int' → logprob: -17.75002098083496

Token 192: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00019543453527148813
    2. '(x' → logprob: -9.125195503234863
    3. '(' → logprob: -9.375195503234863
    4. ' (' → logprob: -13.625195503234863
    5. '(s' → logprob: -14.875195503234863
    6. '(a' → logprob: -17.375194549560547
    7. '(
' → logprob: -18.000194549560547
    8. 'i' → logprob: -18.000194549560547
    9. '(o' → logprob: -18.000194549560547
    10. '(k' → logprob: -18.125194549560547

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012032082304358482
    2. 'for' → logprob: -6.7512030601501465
    3. ' for' → logprob: -11.251203536987305
    4. '()' → logprob: -11.376203536987305
    5. ' )' → logprob: -12.126203536987305
    6. 'in' → logprob: -14.001203536987305
    7. 'input' → logprob: -15.001203536987305
    8. '())' → logprob: -15.001203536987305
    9. '")' → logprob: -15.501203536987305
    10. '(input' → logprob: -15.626203536987305

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10020849853754044
    2. ' for' → logprob: -2.3502085208892822
    3. 'in' → logprob: -13.725208282470703
    4. ')' → logprob: -15.475208282470703
    5. ' in' → logprob: -15.725208282470703
    6. '	for' → logprob: -16.225208282470703
    7. 'x' → logprob: -16.850208282470703
    8. 'input' → logprob: -16.975208282470703
    9. ' ' → logprob: -16.975208282470703
    10. '()' → logprob: -17.100208282470703

Token 195: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009760336950421333
    2. 'input' → logprob: -4.63476037979126
    3. ' ' → logprob: -13.009759902954102
    4. '(input' → logprob: -14.384759902954102
    5. '  ' → logprob: -15.134759902954102
    6. '=input' → logprob: -15.259759902954102
    7. ',input' → logprob: -15.509759902954102
    8. ' i' → logprob: -15.509759902954102
    9. '	input' → logprob: -15.759759902954102
    10. ' in' → logprob: -15.759759902954102

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4976964592933655
    2. 'input' → logprob: -1.9976963996887207
    3. 'in' → logprob: -1.9976963996887207
    4. '(input' → logprob: -2.2476963996887207
    5. ' input' → logprob: -4.872696399688721
    6. '(' → logprob: -5.372696399688721
    7. ' (' → logprob: -6.872696399688721
    8. '()' → logprob: -7.497696399688721
    9. 's' → logprob: -7.872696399688721
    10. '=input' → logprob: -8.747696876525879

Token 197: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023296605795621872
    2. ' input' → logprob: -3.773296594619751
    3. '(input' → logprob: -10.023296356201172
    4. ' ' → logprob: -13.023296356201172
    5. '   ' → logprob: -13.023296356201172
    6. '  ' → logprob: -14.898296356201172
    7. '<input' → logprob: -15.148296356201172
    8. 'output' → logprob: -15.273296356201172
    9. '_input' → logprob: -15.648296356201172
    10. 'split' → logprob: -15.648296356201172

Token 198: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.600714161526412e-05
    2. '()' → logprob: -9.500076293945312
    3. ' ().' → logprob: -13.750076293945312
    4. '(' → logprob: -16.875076293945312
    5. '()
' → logprob: -19.250076293945312
    6. '()].' → logprob: -19.625076293945312
    7. ' ()' → logprob: -20.125076293945312
    8. '()]' → logprob: -21.375076293945312
    9. '())' → logprob: -21.375076293945312
    10. '().'' → logprob: -21.375076293945312

Token 199: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.674858301877975e-05
    2. 'strip' → logprob: -9.250096321105957
    3. ' split' → logprob: -14.250096321105957
    4. 'spl' → logprob: -18.500097274780273
    5. 'rstrip' → logprob: -18.875097274780273
    6. '(split' → logprob: -19.000097274780273
    7. '.split' → logprob: -21.625097274780273
    8. ' strip' → logprob: -23.625097274780273
    9. '_split' → logprob: -24.500097274780273
    10. 'sp' → logprob: -25.000097274780273

Token 200: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0011493867496028543
    2. '()' → logprob: -7.2511491775512695
    3. '())' → logprob: -7.7511491775512695
    4. '(' → logprob: -12.00114917755127
    5. '()]
' → logprob: -13.37614917755127
    6. ' ()' → logprob: -14.50114917755127
    7. '()].' → logprob: -15.37614917755127
    8. ')]' → logprob: -15.50114917755127
    9. '()}' → logprob: -16.126150131225586
    10. '()][' → logprob: -16.126150131225586

Token 201: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0074302079156041145
    2. ']' → logprob: -5.007430076599121
    3. ')]' → logprob: -7.257430076599121
    4. ']()' → logprob: -12.132430076599121
    5. '()' → logprob: -13.257430076599121
    6. ' ]' → logprob: -13.382430076599121
    7. '()]
' → logprob: -14.632430076599121
    8. '(' → logprob: -15.257430076599121
    9. '())' → logprob: -16.132431030273438
    10. '])' → logprob: -16.257431030273438

Token 202: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6487184166908264
    2. 'def' → logprob: -0.7737184166908264
    3. '
' → logprob: -4.273718357086182
    4. '

' → logprob: -7.773718357086182
    5. 'd' → logprob: -8.02371883392334
    6. '<|end|>' → logprob: -8.27371883392334
    7. '\' → logprob: -8.77371883392334
    8. 'n' → logprob: -9.02371883392334
    9. '#
' → logprob: -9.39871883392334
    10. '[' → logprob: -9.52371883392334

Token 203: ' App' (ID: 2583)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1048898994922638
    2. '#' → logprob: -2.3548898696899414
    3. 'd' → logprob: -6.104889869689941
    4. 'n' → logprob: -6.604889869689941
    5. 'i' → logprob: -7.354889869689941
    6. 's' → logprob: -8.854889869689941
    7. 'a' → logprob: -9.979889869689941
    8. 'from' → logprob: -9.979889869689941
    9. ' #' → logprob: -10.979889869689941
    10. 'import' → logprob: -10.979889869689941

Token 204: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.049699023365974426
    2. 'lication' → logprob: -3.674699068069458
    3. 'l' → logprob: -4.174698829650879
    4. '#' → logprob: -5.924698829650879
    5. '.py' → logprob: -7.049698829650879
    6. 'eler' → logprob: -7.299698829650879
    7. 'e' → logprob: -7.424698829650879
    8. '()' → logprob: -7.424698829650879
    9. 'le' → logprob: -7.674698829650879
    10. 'elle' → logprob: -8.049698829650879

Token 205: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6479377150535583
    2. 'i' → logprob: -1.3979377746582031
    3. '(' → logprob: -1.5229377746582031
    4. '(i' → logprob: -4.772937774658203
    5. '#' → logprob: -6.897937774658203
    6. '(
' → logprob: -7.022937774658203
    7. 'def' → logprob: -7.522937774658203
    8. '(#' → logprob: -8.272937774658203
    9. ' i' → logprob: -8.647937774658203
    10. 'de' → logprob: -9.022937774658203

Token 206: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009830465540289879
    2. ' i' → logprob: -4.634830474853516
    3. ' la' → logprob: -10.634830474853516
    4. 'print' → logprob: -11.134830474853516
    5. 'la' → logprob: -11.634830474853516
    6. 'l' → logprob: -11.884830474853516
    7. 'def' → logprob: -12.134830474853516
    8. '#' → logprob: -13.259830474853516
    9. 'len' → logprob: -13.384830474853516
    10. 'the' → logprob: -13.509830474853516

Token 207: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.6060933470726013
    2. 'i' → logprob: -1.231093406677246
    3. 'def' → logprob: -2.856093406677246
    4. ' fonction' → logprob: -3.606093406677246
    5. 'main' → logprob: -3.856093406677246
    6. ' i' → logprob: -3.981093406677246
    7. ' main' → logprob: -4.606093406677246
    8. 'function' → logprob: -4.731093406677246
    9. 'suite' → logprob: -5.606093406677246
    10. 'fon' → logprob: -6.106093406677246

Token 208: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5789638757705688
    2. '()' → logprob: -0.8289638757705688
    3. '(' → logprob: -6.328963756561279
    4. '()
' → logprob: -7.203963756561279
    5. ' i' → logprob: -8.703964233398438
    6. '(
' → logprob: -9.078964233398438
    7. 'result' → logprob: -9.578964233398438
    8. '(i' → logprob: -10.453964233398438
    9. '()

' → logprob: -10.828964233398438
    10. 'n' → logprob: -11.328964233398438

Token 209: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009762698784470558
    2. '2' → logprob: -4.634762763977051
    3. '(' → logprob: -12.63476276397705
    4. '3' → logprob: -13.75976276397705
    5. '()' → logprob: -14.25976276397705
    6. ' ' → logprob: -14.88476276397705
    7. 's' → logprob: -15.07226276397705
    8. 'n' → logprob: -15.82226276397705
    9. '１' → logprob: -15.88476276397705
    10. 'u' → logprob: -15.88476276397705

Token 210: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00027694785967469215
    2. '()]' → logprob: -8.250276565551758
    3. '()
' → logprob: -12.625276565551758
    4. '[]' → logprob: -13.125276565551758
    5. '()[' → logprob: -13.125276565551758
    6. '(' → logprob: -13.250276565551758
    7. '();' → logprob: -13.875276565551758
    8. '()

' → logprob: -14.250276565551758
    9. ' ()' → logprob: -14.250276565551758
    10. 'i' → logprob: -14.375276565551758

Token 211: ' récupérer' (ID: 120406)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014050556346774101
    2. 'l' → logprob: -5.389050483703613
    3. ' récupérer' → logprob: -6.264050483703613
    4. 'rec' → logprob: -6.389050483703613
    5. 's' → logprob: -6.639050483703613
    6. ' lire' → logprob: -6.764050483703613
    7. '_' → logprob: -7.514050483703613
    8. '#' → logprob: -7.639050483703613
    9. ' r' → logprob: -8.264050483703613
    10. '()' → logprob: -8.639050483703613

Token 212: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3304183781147003
    2. 'les' → logprob: -2.830418348312378
    3. 'la' → logprob: -2.955418348312378
    4. '()' → logprob: -3.455418348312378
    5. 'a' → logprob: -3.580418348312378
    6. 'numbers' → logprob: -3.580418348312378
    7. 'l' → logprob: -3.830418348312378
    8. 'nums' → logprob: -4.330418586730957
    9. 'data' → logprob: -4.830418586730957
    10. 'values' → logprob: -4.955418586730957

Token 213: ' première' (ID: 23423)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.06865964084863663
    2. 'tail' → logprob: -3.443659543991089
    3. 'val' → logprob: -4.818659782409668
    4. 'n' → logprob: -5.068659782409668
    5. 'suite' → logprob: -5.318659782409668
    6. ' liste' → logprob: -5.443659782409668
    7. 'prem' → logprob: -5.818659782409668
    8. 's' → logprob: -6.568659782409668
    9. 'list' → logprob: -6.568659782409668
    10. 'variable' → logprob: -7.068659782409668

Token 214: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6539778113365173
    2. 'ligne' → logprob: -0.7789778113365173
    3. 'entrée' → logprob: -5.028977870941162
    4. '_' → logprob: -5.653977870941162
    5. 'l' → logprob: -6.028977870941162
    6. '()' → logprob: -6.403977870941162
    7. 'line' → logprob: -6.903977870941162
    8. 's' → logprob: -7.153977870941162
    9. ' ' → logprob: -7.528977870941162
    10. 'liste' → logprob: -7.778977870941162

Token 215: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018009616760537028
    2. '()
' → logprob: -8.126800537109375
    3. 'n' → logprob: -8.501800537109375
    4. 'data' → logprob: -8.751800537109375
    5. 's' → logprob: -8.876800537109375
    6. 'values' → logprob: -9.126800537109375
    7. '[]' → logprob: -9.376800537109375
    8. ',' → logprob: -9.501800537109375
    9. '(' → logprob: -9.626800537109375
    10. 'r' → logprob: -9.751800537109375

Token 216: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.025437530130147934
    2. ''entrée' → logprob: -4.400437355041504
    3. 'input' → logprob: -4.525437355041504
    4. 'ent' → logprob: -6.650437355041504
    5. 'entr' → logprob: -7.900437355041504
    6. ' entrée' → logprob: -9.025437355041504
    7. ''ent' → logprob: -9.400437355041504
    8. ' input' → logprob: -10.525437355041504
    9. '#' → logprob: -10.525437355041504
    10. 'inputs' → logprob: -10.900437355041504

Token 217: ',
' (ID: 412)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007563813705928624
    2. 'data' → logprob: -8.37575626373291
    3. 's' → logprob: -8.50075626373291
    4. '()
' → logprob: -9.37575626373291
    5. '()]' → logprob: -10.12575626373291
    6. '(' → logprob: -10.37575626373291
    7. 'r' → logprob: -10.75075626373291
    8. '()[' → logprob: -11.00075626373291
    9. 'n' → logprob: -11.12575626373291
    10. 'x' → logprob: -11.25075626373291

Token 218: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33337828516960144
    2. 'a' → logprob: -2.583378314971924
    3. '#' → logprob: -2.708378314971924
    4. ' n' → logprob: -3.208378314971924
    5. 'vals' → logprob: -3.708378314971924
    6. 'nums' → logprob: -4.333378314971924
    7. 'lst' → logprob: -4.708378314971924
    8. 'N' → logprob: -5.083378314971924
    9. 'l' → logprob: -5.083378314971924
    10. 't' → logprob: -5.208378314971924

Token 219: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13206884264945984
    2. 'a' → logprob: -3.3820688724517822
    3. ' n' → logprob: -3.5070688724517822
    4. '#' → logprob: -3.8820688724517822
    5. 'N' → logprob: -4.132068634033203
    6. 't' → logprob: -5.382068634033203
    7. 'vals' → logprob: -6.007068634033203
    8. 'l' → logprob: -6.382068634033203
    9. 'x' → logprob: -6.382068634033203
    10. ' a' → logprob: -6.757068634033203

Token 220: ' contient' (ID: 89067)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.3725198209285736
    2. ' contient' → logprob: -1.622519850730896
    3. ' cont' → logprob: -3.1225197315216064
    4. 'don' → logprob: -3.2475197315216064
    5. ' donne' → logprob: -4.7475199699401855
    6. ' fournit' → logprob: -5.4975199699401855
    7. ' correspond' → logprob: -6.1225199699401855
    8. 'conten' → logprob: -6.4975199699401855
    9. 'cor' → logprob: -6.4975199699401855
    10. 'dé' → logprob: -6.4975199699401855

Token 221: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5017921328544617
    2. 'n' → logprob: -2.1267921924591064
    3. ' les' → logprob: -2.2517921924591064
    4. ' la' → logprob: -3.3767921924591064
    5. ' deux' → logprob: -3.3767921924591064
    6. 'les' → logprob: -3.8767921924591064
    7. ' le' → logprob: -4.001791954040527
    8. ' ' → logprob: -4.126791954040527
    9. 'a' → logprob: -4.376791954040527
    10. ' trois' → logprob: -4.501791954040527

Token 222: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.44584837555885315
    2. ' integers' → logprob: -1.4458483457565308
    3. 'ent' → logprob: -2.1958484649658203
    4. ' nombres' → logprob: -5.07084846496582
    5. 'inte' → logprob: -5.44584846496582
    6. ' enti' → logprob: -7.82084846496582
    7. 'n' → logprob: -7.94584846496582
    8. ' entier' → logprob: -8.07084846496582
    9. 's' → logprob: -8.69584846496582
    10. ' numbers' → logprob: -8.69584846496582

Token 223: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0008702484192326665
    2. 't' → logprob: -7.375870227813721
    3. 'ti' → logprob: -9.375870704650879
    4. 'tiers' → logprob: -9.375870704650879
    5. 'ers' → logprob: -10.000870704650879
    6. 'i' → logprob: -11.000870704650879
    7. 'ières' → logprob: -12.000870704650879
    8. 'ties' → logprob: -13.375870704650879
    9. 'itiers' → logprob: -13.625870704650879
    10. 'ants' → logprob: -15.000870704650879

Token 224: '.' (ID: 13)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004395578987896442
    2. 'a' → logprob: -6.879395484924316
    3. ',' → logprob: -7.004395484924316
    4. '(' → logprob: -7.879395484924316
    5. ' ()' → logprob: -7.879395484924316
    6. '(),' → logprob: -8.129395484924316
    7. 'n' → logprob: -8.379395484924316
    8. 's' → logprob: -8.504395484924316
    9. ' =' → logprob: -8.879395484924316
    10. '()]' → logprob: -9.129395484924316

Token 225: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1893196851015091
    2. 'n' → logprob: -1.9393197298049927
    3. 'N' → logprob: -4.439319610595703
    4. 'A' → logprob: -5.189319610595703
    5. 'h' → logprob: -5.939319610595703
    6. '(n' → logprob: -6.189319610595703
    7. '(a' → logprob: -6.314319610595703
    8. 'x' → logprob: -6.564319610595703
    9. 'l' → logprob: -7.314319610595703
    10. ' a' → logprob: -7.439319610595703

Token 226: ''aff' (ID: 53397)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43388864398002625
    2. 'a' → logprob: -1.3088886737823486
    3. ' n' → logprob: -3.3088886737823486
    4. 'N' → logprob: -3.8088886737823486
    5. ' a' → logprob: -4.6838884353637695
    6. 'h' → logprob: -5.8088884353637695
    7. 'm' → logprob: -5.8088884353637695
    8. 'x' → logprob: -6.0588884353637695
    9. ' N' → logprob: -6.8088884353637695
    10. 'H' → logprob: -7.0588884353637695

Token 227: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.22271955013275146
    2. 'ichage' → logprob: -2.097719669342041
    3. 'iche' → logprob: -4.347719669342041
    4. 'ich' → logprob: -4.472719669342041
    5. 'icher' → logprob: -5.097719669342041
    6. 'ects' → logprob: -5.097719669342041
    7. 'irst' → logprob: -5.472719669342041
    8. '1' → logprob: -5.597719669342041
    9. 'a' → logprob: -5.597719669342041
    10. 'ic' → logprob: -5.847719669342041

Token 228: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.11508714407682419
    2. 'er' → logprob: -2.3650870323181152
    3. 'e' → logprob: -4.490087032318115
    4. 'at' → logprob: -7.365087032318115
    5. 'n' → logprob: -7.490087032318115
    6. 'a' → logprob: -7.990087032318115
    7. 'ement' → logprob: -8.115087509155273
    8. ' at' → logprob: -8.115087509155273
    9. 'ant' → logprob: -8.865087509155273
    10. 'nement' → logprob: -8.865087509155273

Token 229: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.345336377620697
    2. ' a' → logprob: -1.3453364372253418
    3. 'n' → logprob: -4.470336437225342
    4. ' n' → logprob: -4.470336437225342
    5. 'A' → logprob: -5.470336437225342
    6. ' A' → logprob: -5.970336437225342
    7. 'N' → logprob: -8.095335960388184
    8. ' des' → logprob: -8.220335960388184
    9. 's' → logprob: -8.470335960388184
    10. ' N' → logprob: -8.595335960388184

Token 230: ' permet' (ID: 11798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03763652965426445
    2. 'n' → logprob: -4.162636756896973
    3. ' a' → logprob: -4.287636756896973
    4. 'A' → logprob: -6.037636756896973
    5. 'x' → logprob: -6.287636756896973
    6. 'N' → logprob: -6.662636756896973
    7. ',' → logprob: -7.662636756896973
    8. ' n' → logprob: -7.787636756896973
    9. '(a' → logprob: -7.912636756896973
    10. ' =' → logprob: -8.412636756896973

Token 231: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6932663917541504
    2. ' d' → logprob: -1.3182663917541504
    3. 'de' → logprob: -1.9432663917541504
    4. 'd' → logprob: -2.6932663917541504
    5. 'a' → logprob: -4.44326639175415
    6. 't' → logprob: -5.94326639175415
    7. ' a' → logprob: -6.56826639175415
    8. ' à' → logprob: -6.94326639175415
    9. '   ' → logprob: -7.44326639175415
    10. ' ' → logprob: -7.44326639175415

Token 232: ' stock' (ID: 6546)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06393115222454071
    2. 'r' → logprob: -3.5639312267303467
    3. 'x' → logprob: -4.063930988311768
    4. ' a' → logprob: -4.688930988311768
    5. 'l' → logprob: -6.813930988311768
    6. 'u' → logprob: -7.313930988311768
    7. 'i' → logprob: -7.313930988311768
    8. ' récupérer' → logprob: -7.313930988311768
    9. 'd' → logprob: -7.688930988311768
    10. 'assign' → logprob: -8.063931465148926

Token 233: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.828512363834307e-05
    2. 'e' → logprob: -9.500088691711426
    3. 'é' → logprob: -11.750088691711426
    4. ' er' → logprob: -12.625088691711426
    5. 'age' → logprob: -14.375088691711426
    6. '   ' → logprob: -15.125088691711426
    7. '­er' → logprob: -15.625088691711426
    8. 'a' → logprob: -15.750088691711426
    9. ' e' → logprob: -15.750088691711426
    10. 'érer' → logprob: -15.875088691711426

Token 234: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8085235357284546
    2. ' n' → logprob: -1.5585235357284546
    3. 'n' → logprob: -1.8085235357284546
    4. ' a' → logprob: -1.8085235357284546
    5. 'x' → logprob: -5.183523654937744
    6. 'N' → logprob: -5.308523654937744
    7. ' N' → logprob: -6.558523654937744
    8. 'A' → logprob: -6.683523654937744
    9. ' x' → logprob: -7.058523654937744
    10. ' A' → logprob: -7.683523654937744

Token 235: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5835288763046265
    2. ' a' → logprob: -0.8335288763046265
    3. 'x' → logprob: -6.208528995513916
    4. ' n' → logprob: -6.333528995513916
    5. 'n' → logprob: -6.708528995513916
    6. ' x' → logprob: -6.958528995513916
    7. ' A' → logprob: -7.083528995513916
    8. 'A' → logprob: -8.458528518676758
    9. ' nombre' → logprob: -8.458528518676758
    10. ' u' → logprob: -9.708528518676758

Token 236: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13240326941013336
    2. ' n' → logprob: -2.8824033737182617
    3. 'a' → logprob: -3.2574033737182617
    4. 'N' → logprob: -3.8824033737182617
    5. 'h' → logprob: -6.257403373718262
    6. ' a' → logprob: -6.507403373718262
    7. 'w' → logprob: -6.632403373718262
    8. 'x' → logprob: -6.757403373718262
    9. ' N' → logprob: -7.007403373718262
    10. 'H' → logprob: -7.632403373718262

Token 237: ' premier' (ID: 15506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19232477247714996
    2. ' n' → logprob: -2.5673248767852783
    3. 'a' → logprob: -2.6923248767852783
    4. 'N' → logprob: -4.192324638366699
    5. ' a' → logprob: -5.067324638366699
    6. ' nombre' → logprob: -5.942324638366699
    7. 'nombre' → logprob: -6.067324638366699
    8. ' N' → logprob: -6.567324638366699
    9. 'x' → logprob: -7.067324638366699
    10. ' nombres' → logprob: -7.442324638366699

Token 238: ' entier' (ID: 80473)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7935539484024048
    2. 'n' → logprob: -0.9185539484024048
    3. ',' → logprob: -2.2935538291931152
    4. ' a' → logprob: -3.9185538291931152
    5. ' n' → logprob: -4.793553829193115
    6. 'nombre' → logprob: -5.668553829193115
    7. 'N' → logprob: -5.918553829193115
    8. ' ,' → logprob: -6.043553829193115
    9. ',n' → logprob: -6.293553829193115
    10. 'x' → logprob: -6.418553829193115

Token 239: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19971400499343872
    2. 'a' → logprob: -2.199713945388794
    3. 'n' → logprob: -3.449713945388794
    4. ' ,' → logprob: -4.449714183807373
    5. ' a' → logprob: -4.824714183807373
    6. 'x' → logprob: -5.074714183807373
    7. ' n' → logprob: -5.199714183807373
    8. ',n' → logprob: -5.949714183807373
    9. 's' → logprob: -6.824714183807373
    10. 'N' → logprob: -7.824714183807373

Token 240: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33012956380844116
    2. ' n' → logprob: -2.205129623413086
    3. 'a' → logprob: -2.330129623413086
    4. 'N' → logprob: -3.080129623413086
    5. ' a' → logprob: -4.830129623413086
    6. 'x' → logprob: -4.955129623413086
    7. ' N' → logprob: -5.205129623413086
    8. 'A' → logprob: -6.830129623413086
    9. 'h' → logprob: -7.080129623413086
    10. ' x' → logprob: -7.330129623413086

Token 241: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.698698704596609e-05
    2. ',k' → logprob: -10.000097274780273
    3. ' ,' → logprob: -10.125097274780273
    4. ',n' → logprob: -12.000097274780273
    5. ',
' → logprob: -13.250097274780273
    6. ',num' → logprob: -15.125097274780273
    7. ',j' → logprob: -15.250097274780273
    8. ',m' → logprob: -15.250097274780273
    9. ',e' → logprob: -15.250097274780273
    10. ',s' → logprob: -15.375097274780273

Token 242: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.021732211112976
    2. ' l' → logprob: -1.146732211112976
    3. ' n' → logprob: -1.271732211112976
    4. 'n' → logprob: -4.896732330322266
    5. ' m' → logprob: -4.896732330322266
    6. ' ' → logprob: -5.271732330322266
    7. 'l' → logprob: -5.521732330322266
    8. 'le' → logprob: -5.521732330322266
    9. ' k' → logprob: -6.146732330322266
    10. ' s' → logprob: -6.521732330322266

Token 243: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.4233870804309845
    2. 'second' → logprob: -1.173387050628662
    3. ' deuxième' → logprob: -4.298387050628662
    4. 'de' → logprob: -5.048387050628662
    5. 'n' → logprob: -5.673387050628662
    6. '_' → logprob: -5.923387050628662
    7. 's' → logprob: -6.048387050628662
    8. 'k' → logprob: -6.173387050628662
    9. ' k' → logprob: -6.798387050628662
    10. ' n' → logprob: -7.173387050628662

Token 244: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3868686854839325
    2. ' n' → logprob: -2.011868715286255
    3. 'dans' → logprob: -2.386868715286255
    4. ' dans' → logprob: -2.511868715286255
    5. ' in' → logprob: -5.136868476867676
    6. ',' → logprob: -5.511868476867676
    7. 'in' → logprob: -7.011868476867676
    8. 'm' → logprob: -7.261868476867676
    9. 'd' → logprob: -7.761868476867676
    10. ' ' → logprob: -8.261868476867676

Token 245: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36532679200172424
    2. ' n' → logprob: -1.7403267621994019
    3. 'l' → logprob: -2.8653268814086914
    4. 's' → logprob: -4.490326881408691
    5. ' l' → logprob: -4.740326881408691
    6. 'm' → logprob: -4.740326881408691
    7. 'p' → logprob: -5.240326881408691
    8. 'N' → logprob: -5.615326881408691
    9. 't' → logprob: -5.615326881408691
    10. 'c' → logprob: -5.615326881408691

Token 246: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3582499027252197
    2. ' =' → logprob: -2.1082499027252197
    3. '(k' → logprob: -2.8582499027252197
    4. ',k' → logprob: -2.9832499027252197
    5. 'k' → logprob: -3.3582499027252197
    6. '=' → logprob: -3.8582499027252197
    7. '=k' → logprob: -4.358249664306641
    8. ' k' → logprob: -6.233249664306641
    9. '(' → logprob: -7.358249664306641
    10. ' ,' → logprob: -9.23324966430664

Token 247: '[k' (ID: 14298)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6405310816480778e-05
    2. '(k' → logprob: -11.625016212463379
    3. ' k' → logprob: -12.000016212463379
    4. '(' → logprob: -14.000016212463379
    5. '
' → logprob: -16.250017166137695
    6. ',' → logprob: -16.500017166137695
    7. '(
' → logprob: -16.750017166137695
    8. ' (' → logprob: -16.875017166137695
    9. ' 
' → logprob: -17.125017166137695
    10. 'к' → logprob: -17.125017166137695

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011004453990608454
    2. ',q' → logprob: -6.876100540161133
    3. ' ,' → logprob: -10.001100540161133
    4. ',
' → logprob: -10.876100540161133
    5. ',k' → logprob: -12.876100540161133
    6. ',

' → logprob: -14.626100540161133
    7. ',\
' → logprob: -16.126100540161133
    8. 'q' → logprob: -16.126100540161133
    9. ',Q' → logprob: -17.876100540161133
    10. ' q' → logprob: -18.126100540161133

Token 249: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03402508422732353
    2. ' q' → logprob: -3.409025192260742
    3. 'n' → logprob: -8.159025192260742
    4. ' n' → logprob: -10.534025192260742
    5. 'r' → logprob: -11.034025192260742
    6. 'm' → logprob: -11.409025192260742
    7. 'p' → logprob: -11.409025192260742
    8. ' ' → logprob: -11.659025192260742
    9. 'x' → logprob: -12.284025192260742
    10. 's' → logprob: -13.159025192260742

Token 250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000286364956991747
    2. ']=' → logprob: -8.250286102294922
    3. ',' → logprob: -11.375286102294922
    4. ' ]' → logprob: -11.500286102294922
    5. '],' → logprob: -13.000286102294922
    6. ')' → logprob: -14.625286102294922
    7. ']
' → logprob: -15.625286102294922
    8. '=' → logprob: -16.000286102294922
    9. ']

' → logprob: -16.250286102294922
    10. ']int' → logprob: -16.750286102294922

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005930813029408455
    2. ' =' → logprob: -5.1309309005737305
    3. ',' → logprob: -13.50593090057373
    4. '=k' → logprob: -14.88093090057373
    5. '=

' → logprob: -15.75593090057373
    6. ']=' → logprob: -15.88093090057373
    7. '=
' → logprob: -16.505929946899414
    8. ']' → logprob: -17.130929946899414
    9. ')=' → logprob: -17.630929946899414
    10. '=q' → logprob: -17.755929946899414

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693104147911072
    2. ' i' → logprob: -2.1269309520721436
    3. '   ' → logprob: -14.126931190490723
    4. ' ' → logprob: -14.251931190490723
    5. '	i' → logprob: -14.501931190490723
    6. '  ' → logprob: -15.001931190490723
    7. ' ' → logprob: -15.751931190490723
    8. '_i' → logprob: -16.001930236816406
    9. '[i' → logprob: -16.001930236816406
    10. '(i' → logprob: -16.001930236816406

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.750004768371582
    3. '()' → logprob: -13.250004768371582
    4. ' ' → logprob: -15.375004768371582
    5. '_' → logprob: -16.7500057220459
    6. '２' → logprob: -18.6250057220459
    7. '۲' → logprob: -18.7500057220459
    8. '()[' → logprob: -19.1250057220459
    9. '()
' → logprob: -19.4375057220459
    10. '₂' → logprob: -19.4375057220459

Token 254: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.245724504580721e-05
    2. '()
' → logprob: -9.625092506408691
    3. '(' → logprob: -10.875092506408691
    4. '()

' → logprob: -13.375092506408691
    5. ')' → logprob: -13.625092506408691
    6. '();' → logprob: -13.750092506408691
    7. '[' → logprob: -14.125092506408691
    8. '()[' → logprob: -14.125092506408691
    9. ' ()' → logprob: -14.500092506408691
    10. '()\' → logprob: -14.750092506408691

Token 255: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2580055594444275
    2. 'for' → logprob: -2.3830056190490723
    3. '[' → logprob: -3.6330056190490723
    4. '#' → logprob: -3.8830056190490723
    5. '\n' → logprob: -4.008005619049072
    6. 'while' → logprob: -4.508005619049072
    7. '  
' → logprob: -5.258005619049072
    8. 'k' → logprob: -5.383005619049072
    9. '
' → logprob: -5.383005619049072
    10. 'n' → logprob: -5.383005619049072

Token 256: ' App' (ID: 2583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1441019773483276
    2. 'r' → logprob: -1.6441019773483276
    3. 'result' → logprob: -2.269102096557617
    4. 'results' → logprob: -2.894102096557617
    5. 'res' → logprob: -2.894102096557617
    6. 'a' → logprob: -3.144102096557617
    7. 's' → logprob: -3.519102096557617
    8. 'p' → logprob: -3.769102096557617
    9. 'answers' → logprob: -3.894102096557617
    10. 'k' → logprob: -4.019102096557617

Token 257: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.025248656049370766
    2. 'l' → logprob: -3.7752487659454346
    3. '[' → logprob: -7.1502485275268555
    4. '#' → logprob: -8.275248527526855
    5. 'lication' → logprob: -8.900248527526855
    6. '```' → logprob: -9.025248527526855
    7. '[]' → logprob: -9.400248527526855
    8. '\' → logprob: -9.525248527526855
    9. '
' → logprob: -10.150248527526855
    10. ']' → logprob: -10.275248527526855

Token 258: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07914920151233673
    2. '(' → logprob: -2.7041492462158203
    3. ' de' → logprob: -5.57914924621582
    4. '(i' → logprob: -6.57914924621582
    5. '[' → logprob: -6.82914924621582
    6. ' (' → logprob: -7.82914924621582
    7. '([' → logprob: -7.95414924621582
    8. '()[' → logprob: -7.95414924621582
    9. 'def' → logprob: -8.07914924621582
    10. '(k' → logprob: -8.32914924621582

Token 259: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026467500254511833
    2. ' i' → logprob: -3.6514675617218018
    3. ' la' → logprob: -9.276467323303223
    4. '()' → logprob: -10.901467323303223
    5. 'la' → logprob: -11.276467323303223
    6. 'def' → logprob: -11.401467323303223
    7. 'range' → logprob: -12.151467323303223
    8. 'l' → logprob: -12.651467323303223
    9. '(i' → logprob: -12.651467323303223
    10. ' def' → logprob: -12.776467323303223

Token 260: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16024190187454224
    2. '2' → logprob: -1.9102418422698975
    3. '()' → logprob: -12.410242080688477
    4. '3' → logprob: -12.847742080688477
    5. '(' → logprob: -12.910242080688477
    6. 'n' → logprob: -13.597742080688477
    7. 'u' → logprob: -13.722742080688477
    8. ' ' → logprob: -13.910242080688477
    9. '4' → logprob: -14.222742080688477
    10. 'l' → logprob: -14.410242080688477

Token 261: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.694766489090398e-05
    2. '()
' → logprob: -9.875066757202148
    3. '()[' → logprob: -11.375066757202148
    4. '()

' → logprob: -13.625066757202148
    5. '#' → logprob: -14.125066757202148
    6. '()]' → logprob: -14.250066757202148
    7. 'for' → logprob: -15.500066757202148
    8. '[' → logprob: -15.625066757202148
    9. ' ()' → logprob: -15.750066757202148
    10. '(' → logprob: -15.750066757202148

Token 262: ' lire' (ID: 46082)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04022081568837166
    2. ' récupérer' → logprob: -3.9152207374572754
    3. '()
' → logprob: -5.540220737457275
    4. '()[' → logprob: -5.665220737457275
    5. '[' → logprob: -6.040220737457275
    6. '#' → logprob: -6.415220737457275
    7. ' lire' → logprob: -6.540220737457275
    8. ' obtenir' → logprob: -7.165220737457275
    9. '[q' → logprob: -7.290220737457275
    10. ' continuer' → logprob: -7.415220737457275

Token 263: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012867357581853867
    2. '()[' → logprob: -5.012867450714111
    3. '[' → logprob: -5.387867450714111
    4. '[]' → logprob: -7.512867450714111
    5. '[q' → logprob: -8.012866973876953
    6. '()
' → logprob: -8.387866973876953
    7. '[k' → logprob: -9.137866973876953
    8. '[l' → logprob: -9.762866973876953
    9. '#' → logprob: -10.387866973876953
    10. 'la' → logprob: -10.512866973876953

Token 264: ' deuxième' (ID: 51664)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.4512985944747925
    2. 'de' → logprob: -1.5762985944747925
    3. 'ligne' → logprob: -1.8262985944747925
    4. '[' → logprob: -1.8262985944747925
    5. ' deuxième' → logprob: -2.576298713684082
    6. 'se' → logprob: -2.951298713684082
    7. ' liste' → logprob: -3.576298713684082
    8. ' seconde' → logprob: -4.201298713684082
    9. '[i' → logprob: -4.576298713684082
    10. ' ligne' → logprob: -5.201298713684082

Token 265: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.18909403681755066
    2. '()' → logprob: -2.064094066619873
    3. ' ligne' → logprob: -3.314094066619873
    4. 'line' → logprob: -5.564094066619873
    5. 'l' → logprob: -6.189094066619873
    6. '[' → logprob: -6.939094066619873
    7. '()[' → logprob: -7.564094066619873
    8. '[]' → logprob: -7.939094066619873
    9. '[l' → logprob: -7.939094066619873
    10. '#' → logprob: -8.064093589782715

Token 266: ' qui' (ID: 2780)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03207146376371384
    2. '()[' → logprob: -4.157071590423584
    3. '[k' → logprob: -5.407071590423584
    4. '[' → logprob: -5.657071590423584
    5. '[q' → logprob: -5.782071590423584
    6. '[]' → logprob: -6.532071590423584
    7. '()
' → logprob: -6.657071590423584
    8. '#' → logprob: -7.032071590423584
    9. '[n' → logprob: -8.157071113586426
    10. '<|end|>' → logprob: -8.657071113586426

Token 267: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.04337092489004135
    2. 'cont' → logprob: -4.293370723724365
    3. '[' → logprob: -5.168370723724365
    4. ' [' → logprob: -5.668370723724365
    5. '[k' → logprob: -5.668370723724365
    6. ' donne' → logprob: -5.793370723724365
    7. ' cont' → logprob: -5.793370723724365
    8. '_cont' → logprob: -6.043370723724365
    9. ' fournit' → logprob: -6.793370723724365
    10. '[n' → logprob: -6.918370723724365

Token 268: ' probablement' (ID: 87740)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[q' → logprob: -1.0432653427124023
    2. 'i' → logprob: -1.7932653427124023
    3. '[k' → logprob: -1.7932653427124023
    4. '[i' → logprob: -2.1682653427124023
    5. 'q' → logprob: -2.6682653427124023
    6. 'k' → logprob: -2.9182653427124023
    7. '[n' → logprob: -3.6682653427124023
    8. '2' → logprob: -4.918265342712402
    9. ' i' → logprob: -4.918265342712402
    10. 'n' → logprob: -5.043265342712402

Token 269: ' '' (ID: 461)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.9192043542861938
    2. '[k' → logprob: -1.6692043542861938
    3. 'k' → logprob: -2.1692042350769043
    4. 'q' → logprob: -2.4192042350769043
    5. '[i' → logprob: -3.1692042350769043
    6. '[' → logprob: -3.2942042350769043
    7. '[n' → logprob: -3.4192042350769043
    8. 'i' → logprob: -3.9192042350769043
    9. '[]' → logprob: -4.044204235076904
    10. 'n' → logprob: -4.044204235076904

Token 270: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8636297583580017
    2. '[k' → logprob: -1.1136298179626465
    3. 'q' → logprob: -2.4886298179626465
    4. '[q' → logprob: -2.7386298179626465
    5. '[n' → logprob: -3.7386298179626465
    6. 'n' → logprob: -3.9886298179626465
    7. '2' → logprob: -4.2386298179626465
    8. '[i' → logprob: -4.8636298179626465
    9. 'm' → logprob: -6.1136298179626465
    10. '[a' → logprob: -6.1761298179626465

Token 271: ''' (ID: 6)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.29120779037475586
    2. '+' → logprob: -2.541207790374756
    3. 'q' → logprob: -2.916207790374756
    4. ',' → logprob: -3.666207790374756
    5. '*q' → logprob: -3.791207790374756
    6. ''' → logprob: -4.166207790374756
    7. '*' → logprob: -4.916207790374756
    8. '[q' → logprob: -5.041207790374756
    9. ' k' → logprob: -5.291207790374756
    10. ' +' → logprob: -5.291207790374756

Token 272: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2600662112236023
    2. ' ent' → logprob: -1.510066270828247
    3. '[' → logprob: -6.760066032409668
    4. ' entier' → logprob: -6.885066032409668
    5. ' nombres' → logprob: -7.010066032409668
    6. 'inte' → logprob: -7.135066032409668
    7. ' integers' → logprob: -7.260066032409668
    8. ''ent' → logprob: -7.510066032409668
    9. 'int' → logprob: -7.760066032409668
    10. 'k' → logprob: -7.885066032409668

Token 273: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0028801187872886658
    2. 't' → logprob: -5.877880096435547
    3. 'ti' → logprob: -10.627880096435547
    4. 'tiers' → logprob: -10.627880096435547
    5. 'tiens' → logprob: -12.002880096435547
    6. '```' → logprob: -12.627880096435547
    7. 'ants' → logprob: -12.627880096435547
    8. 'i' → logprob: -12.877880096435547
    9. 'ières' → logprob: -13.002880096435547
    10. 'eurs' → logprob: -13.002880096435547

Token 274: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0645383596420288
    2. 'p' → logprob: -2.1895384788513184
    3. 'lst' → logprob: -2.5645384788513184
    4. 'k' → logprob: -2.6895384788513184
    5. 'arr' → logprob: -3.1895384788513184
    6. 'l' → logprob: -3.3145384788513184
    7. ' =' → logprob: -3.5645384788513184
    8. '[' → logprob: -3.5645384788513184
    9. '()' → logprob: -3.9395384788513184
    10. 'q' → logprob: -3.9395384788513184

Token 275: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9112083315849304
    2. 'p' → logprob: -2.286208391189575
    3. 'l' → logprob: -2.661208391189575
    4. 'arr' → logprob: -2.786208391189575
    5. 'v' → logprob: -3.161208391189575
    6. 'lst' → logprob: -3.161208391189575
    7. 'vals' → logprob: -3.161208391189575
    8. 'values' → logprob: -3.536208391189575
    9. 'tab' → logprob: -3.911208391189575
    10. 'A' → logprob: -4.036208152770996

Token 276: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2681382894515991
    2. 'l' → logprob: -2.3931384086608887
    3. 'v' → logprob: -2.5181384086608887
    4. 'vals' → logprob: -2.5181384086608887
    5. 'arr' → logprob: -2.5181384086608887
    6. 'p' → logprob: -2.7681384086608887
    7. 'lst' → logprob: -3.1431384086608887
    8. 'values' → logprob: -3.2681384086608887
    9. 'tab' → logprob: -3.2681384086608887
    10. 'val' → logprob: -4.018138408660889

Token 277: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.591509222984314
    2. ' =' → logprob: -1.091509222984314
    3. 's' → logprob: -3.4665093421936035
    4. 'a' → logprob: -3.9665093421936035
    5. 'q' → logprob: -4.3415093421936035
    6. 'k' → logprob: -5.4665093421936035
    7. 'arr' → logprob: -5.5915093421936035
    8. 'n' → logprob: -5.7165093421936035
    9. 'v' → logprob: -5.8415093421936035
    10. 'l' → logprob: -6.0915093421936035

Token 278: 'e' (ID: 68)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.535738468170166
    2. 'e' → logprob: -0.910738468170166
    3. 'r' → logprob: -4.535738468170166
    4. 'ère' → logprob: -8.035737991333008
    5. 'range' → logprob: -8.160737991333008
    6. '[k' → logprob: -8.285737991333008
    7. '[' → logprob: -8.660737991333008
    8. '#' → logprob: -8.785737991333008
    9. 'ra' → logprob: -9.160737991333008
    10. 'er' → logprob: -9.785737991333008

Token 279: ' cette' (ID: 7696)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1213972568511963
    2. 'a' → logprob: -1.4963972568511963
    3. 'la' → logprob: -2.1213972568511963
    4. 'l' → logprob: -2.6213972568511963
    5. 'p' → logprob: -3.2463972568511963
    6. ' la' → logprob: -3.4963972568511963
    7. 'vals' → logprob: -3.7463972568511963
    8. 'arr' → logprob: -3.8713972568511963
    9. 'q' → logprob: -4.246397018432617
    10. ' p' → logprob: -4.371397018432617

Token 280: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.72513747215271
    2. 'a' → logprob: -2.10013747215271
    3. 'q' → logprob: -2.72513747215271
    4. 'lst' → logprob: -3.60013747215271
    5. ' liste' → logprob: -3.72513747215271
    6. ' a' → logprob: -3.85013747215271
    7. 'arr' → logprob: -3.85013747215271
    8. 'p' → logprob: -3.97513747215271
    9. 'val' → logprob: -4.100137710571289
    10. 'l' → logprob: -4.225137710571289

Token 281: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.050990343093872
    2. 'a' → logprob: -1.300990343093872
    3. ' =' → logprob: -1.425990343093872
    4. 'p' → logprob: -3.550990343093872
    5. 'de' → logprob: -3.675990343093872
    6. 'd' → logprob: -4.675990104675293
    7. 's' → logprob: -5.050990104675293
    8. 'A' → logprob: -5.300990104675293
    9. 'des' → logprob: -5.300990104675293
    10. 'arr' → logprob: -5.425990104675293

Token 282: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7354927062988281
    2. 'l' → logprob: -2.360492706298828
    3. 'lst' → logprob: -2.610492706298828
    4. 'p' → logprob: -2.985492706298828
    5. 'arr' → logprob: -3.235492706298828
    6. 'liste' → logprob: -3.485492706298828
    7. 'A' → logprob: -3.610492706298828
    8. 'tab' → logprob: -3.735492706298828
    9. 'v' → logprob: -3.985492706298828
    10. 'vals' → logprob: -3.985492706298828

Token 283: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.0746303796768188
    2. 'a' → logprob: -1.4496303796768188
    3. 'l' → logprob: -2.4496302604675293
    4. 'lst' → logprob: -2.6996302604675293
    5. 'p' → logprob: -3.0746302604675293
    6. 'list' → logprob: -3.5746302604675293
    7. 'A' → logprob: -4.074630260467529
    8. 'tab' → logprob: -4.199630260467529
    9. 'v' → logprob: -4.324630260467529
    10. 'arr' → logprob: -4.324630260467529

Token 284: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1371694803237915
    2. 'l' → logprob: -2.137169361114502
    3. 'p' → logprob: -2.262169361114502
    4. 'v' → logprob: -3.137169361114502
    5. 'lst' → logprob: -3.262169361114502
    6. 'liste' → logprob: -3.387169361114502
    7. 'tab' → logprob: -3.762169361114502
    8. 't' → logprob: -4.137169361114502
    9. 'A' → logprob: -4.262169361114502
    10. 'li' → logprob: -4.262169361114502

Token 285: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3725874423980713
    2. ' =' → logprob: -1.8725874423980713
    3. 'e' → logprob: -1.9975874423980713
    4. 'd' → logprob: -2.3725874423980713
    5. 'ata' → logprob: -2.6225874423980713
    6. '=[]' → logprob: -2.8725874423980713
    7. '=[' → logprob: -3.3725874423980713
    8. 'ef' → logprob: -3.4975874423980713
    9. '=d' → logprob: -3.8725874423980713
    10. '=[]
' → logprob: -4.497587203979492

Token 286: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0280383548888494e-06
    2. ' d' → logprob: -13.875000953674316
    3. '[d' → logprob: -18.250001907348633
    4. '
' → logprob: -19.250001907348633
    5. '[' → logprob: -19.750001907348633
    6. '#' → logprob: -20.375001907348633
    7. '	d' → logprob: -22.500001907348633
    8. '_d' → logprob: -22.625001907348633
    9. '```' → logprob: -23.625001907348633
    10. '.d' → logprob: -23.875001907348633

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023601591587067
    2. ' =' → logprob: -1.9102360010147095
    3. '=[]' → logprob: -12.785236358642578
    4. '=[' → logprob: -13.035236358642578
    5. '[' → logprob: -13.160236358642578
    6. ',' → logprob: -14.035236358642578
    7. 'd' → logprob: -14.410236358642578
    8. '=d' → logprob: -14.410236358642578
    9. ' =[' → logprob: -14.660236358642578
    10. 'e' → logprob: -15.035236358642578

Token 288: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038038729690015316
    2. ' i' → logprob: -7.875380516052246
    3. '[i' → logprob: -15.250380516052246
    4. '	i' → logprob: -17.12537956237793
    5. '   ' → logprob: -18.62537956237793
    6. '(i' → logprob: -19.12537956237793
    7. '[' → logprob: -19.87537956237793
    8. '_i' → logprob: -19.87537956237793
    9. '{i' → logprob: -20.50037956237793
    10. '  ' → logprob: -20.50037956237793

Token 289: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.500001907348633
    3. '(' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.750001907348633
    5. '２' → logprob: -17.500001907348633
    6. '۲' → logprob: -18.125001907348633
    7. '₂' → logprob: -18.250001907348633
    8. '٢' → logprob: -18.625001907348633
    9. '()[' → logprob: -19.562501907348633
    10. '²' → logprob: -19.687501907348633

Token 290: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0280383548888494e-06
    2. '()
' → logprob: -14.625000953674316
    3. '()]' → logprob: -16.000001907348633
    4. '()`' → logprob: -16.125001907348633
    5. ' ()' → logprob: -16.375001907348633
    6. '()

' → logprob: -16.375001907348633
    7. '().' → logprob: -16.500001907348633
    8. '()[' → logprob: -17.000001907348633
    9. '(' → logprob: -17.875001907348633
    10. '()"' → logprob: -18.250001907348633

Token 291: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2311830520629883
    2. '#' → logprob: -1.4811830520629883
    3. 's' → logprob: -1.8561830520629883
    4. 'n' → logprob: -2.7311830520629883
    5. 'sum' → logprob: -3.3561830520629883
    6. '[' → logprob: -3.4811830520629883
    7. 'q' → logprob: -3.6061830520629883
    8. 'for' → logprob: -3.6061830520629883
    9. '
' → logprob: -3.7311830520629883
    10. 'k' → logprob: -3.9811830520629883

Token 292: ' Dé' (ID: 27247)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1801912784576416
    2. 'r' → logprob: -1.3051912784576416
    3. 'for' → logprob: -2.8051912784576416
    4. 'm' → logprob: -3.1801912784576416
    5. 'p' → logprob: -3.1801912784576416
    6. '#' → logprob: -3.3051912784576416
    7. 'result' → logprob: -3.4301912784576416
    8. 'total' → logprob: -3.5551912784576416
    9. 'res' → logprob: -3.6801912784576416
    10. 'd' → logprob: -3.6801912784576416

Token 293: 'but' (ID: 8293)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15169021487236023
    2. 'fin' → logprob: -2.4016902446746826
    3. '#' → logprob: -3.1516902446746826
    4. 'fi' → logprob: -5.7766900062561035
    5. 'but' → logprob: -6.2766900062561035
    6. 'def' → logprob: -7.6516900062561035
    7. 'fic' → logprob: -8.026690483093262
    8. '
' → logprob: -8.151690483093262
    9. 'part' → logprob: -8.151690483093262
    10. 'if' → logprob: -9.026690483093262

Token 294: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37392258644104004
    2. '<|end|>' → logprob: -1.49892258644104
    3. 'for' → logprob: -2.99892258644104
    4. 'n' → logprob: -4.373922348022461
    5. 'def' → logprob: -4.748922348022461
    6. 's' → logprob: -5.248922348022461
    7. 'd' → logprob: -6.248922348022461
    8. ':' → logprob: -6.498922348022461
    9. '
' → logprob: -6.873922348022461
    10. '...' → logprob: -6.873922348022461

Token 295: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0026065718848258257
    2. ' e' → logprob: -6.752606391906738
    3. 'u' → logprob: -7.627606391906738
    4. 'ef' → logprob: -7.877606391906738
    5. '#' → logprob: -8.252606391906738
    6. ' la' → logprob: -9.127606391906738
    7. 'f' → logprob: -9.752606391906738
    8. 'é' → logprob: -10.127606391906738
    9. '_' → logprob: -10.877606391906738
    10. ''une' → logprob: -10.877606391906738

Token 296: ' boucle' (ID: 174211)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23959220945835114
    2. 'for' → logprob: -1.86459219455719
    3. 'def' → logprob: -2.9895923137664795
    4. ' #' → logprob: -5.8645920753479
    5. ' for' → logprob: -6.2395920753479
    6. 'if' → logprob: -6.4895920753479
    7. 'fonction' → logprob: -7.7395920753479
    8. 'import' → logprob: -8.989592552185059
    9. 's' → logprob: -9.114592552185059
    10. 'f' → logprob: -9.239592552185059

Token 297: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005421888781711459
    2. ' for' → logprob: -8.375542640686035
    3. 'f' → logprob: -8.500542640686035
    4. '
' → logprob: -9.250542640686035
    5. 'i' → logprob: -11.625542640686035
    6. ' 
' → logprob: -14.250542640686035
    7. 'fo' → logprob: -14.500542640686035
    8. 'd' → logprob: -15.000542640686035
    9. 'k' → logprob: -15.000542640686035
    10. '' → logprob: -15.250542640686035

Token 298: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012514949776232243
    2. ' for' → logprob: -4.387515068054199
    3. 'range' → logprob: -13.0125150680542
    4. '#' → logprob: -13.6375150680542
    5. 'f' → logprob: -14.0125150680542
    6. 'or' → logprob: -15.7625150680542
    7. '
' → logprob: -15.8875150680542
    8. '_' → logprob: -16.137514114379883
    9. 'r' → logprob: -16.262514114379883
    10. '_for' → logprob: -16.387514114379883

Token 299: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05536411702632904
    2. ' for' → logprob: -2.9303641319274902
    3. 'range' → logprob: -7.80536413192749
    4. ' range' → logprob: -10.180363655090332
    5. '_' → logprob: -11.805363655090332
    6. 'f' → logprob: -12.055363655090332
    7. ' ' → logprob: -12.430363655090332
    8. 'r' → logprob: -12.680363655090332
    9. '
' → logprob: -13.180363655090332
    10. 'forcer' → logprob: -13.180363655090332

Token 300: ''ex' (ID: 23472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5220218300819397
    2. 'u' → logprob: -1.522021770477295
    3. 'earch' → logprob: -2.522021770477295
    4. 'e' → logprob: -3.022021770477295
    5. 'ur' → logprob: -4.147021770477295
    6. 'uper' → logprob: -4.647021770477295
    7. 'i' → logprob: -5.522021770477295
    8. ''assurer' → logprob: -5.772021770477295
    9. 't' → logprob: -5.897021770477295
    10. 'up' → logprob: -6.022021770477295

Token 301: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.13850124180316925
    2. 'ecut' → logprob: -3.6385011672973633
    3. 'plorer' → logprob: -3.6385011672973633
    4. 'ec' → logprob: -3.7635011672973633
    5. 'ecute' → logprob: -4.263501167297363
    6. 'é' → logprob: -4.763501167297363
    7. 'pl' → logprob: -4.763501167297363
    8. 'for' → logprob: -5.013501167297363
    9. 'am' → logprob: -5.263501167297363
    10. 'e' → logprob: -5.388501167297363

Token 302: 'uter' (ID: 23469)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.7474608421325684
    2. 'é' → logprob: -1.9974608421325684
    3. 'urer' → logprob: -2.1224608421325684
    4. 'u' → logprob: -2.6224608421325684
    5. 'éter' → logprob: -2.6224608421325684
    6. 'iter' → logprob: -3.2474608421325684
    7. 'e' → logprob: -3.6224608421325684
    8. 'uter' → logprob: -4.122460842132568
    9. 'ur' → logprob: -4.497460842132568
    10. 'éder' → logprob: -4.872460842132568

Token 303: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31868770718574524
    2. ' for' → logprob: -1.3186876773834229
    3. 'k' → logprob: -5.818687915802002
    4. ' k' → logprob: -6.568687915802002
    5. ' q' → logprob: -8.068687438964844
    6. 'range' → logprob: -8.568687438964844
    7. 'q' → logprob: -8.943687438964844
    8. '_' → logprob: -9.443687438964844
    9. 'i' → logprob: -9.943687438964844
    10. ' i' → logprob: -10.068687438964844

Token 304: ' fois' (ID: 14697)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.18110598623752594
    2. ' in' → logprob: -2.8061060905456543
    3. ' for' → logprob: -3.1811060905456543
    4. 'times' → logprob: -3.6811060905456543
    5. 'for' → logprob: -3.8061060905456543
    6. ' fois' → logprob: -5.306106090545654
    7. 'in' → logprob: -6.181106090545654
    8. '_' → logprob: -6.306106090545654
    9. ' ' → logprob: -6.431106090545654
    10. '>' → logprob: -6.931106090545654

Token 305: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.35706390615087e-05
    2. '
' → logprob: -10.375033378601074
    3. ' for' → logprob: -13.750033378601074
    4. 'while' → logprob: -14.125033378601074
    5. 'f' → logprob: -15.125033378601074
    6. 'fo' → logprob: -15.875033378601074
    7. 'i' → logprob: -17.00003433227539
    8. '\
' → logprob: -17.75003433227539
    9. '' → logprob: -18.37503433227539
    10. '#' → logprob: -19.00003433227539

Token 306: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005597044946625829
    2. ' for' → logprob: -7.5005598068237305
    3. '
' → logprob: -12.00055980682373
    4. 'while' → logprob: -14.87555980682373
    5. ' 
' → logprob: -16.125558853149414
    6. 'range' → logprob: -17.125558853149414
    7. '#' → logprob: -17.875558853149414
    8. 'q' → logprob: -18.375558853149414
    9. '   ' → logprob: -18.750558853149414
    10. 'i' → logprob: -19.125558853149414

Token 307: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003186386078596115
    2. 'for' → logprob: -6.503186225891113
    3. ' _' → logprob: -7.003186225891113
    4. 'range' → logprob: -7.753186225891113
    5. ' for' → logprob: -9.128186225891113
    6. 'i' → logprob: -9.378186225891113
    7. ' range' → logprob: -9.628186225891113
    8. ' i' → logprob: -10.753186225891113
    9. '_=' → logprob: -11.253186225891113
    10. '_for' → logprob: -11.878186225891113

Token 308: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09174365550279617
    2. ' _' → logprob: -2.7167437076568604
    3. 'for' → logprob: -4.716743469238281
    4. ' ' → logprob: -5.466743469238281
    5. ' for' → logprob: -5.716743469238281
    6. ' i' → logprob: -6.591743469238281
    7. '
' → logprob: -7.091743469238281
    8. ' 
' → logprob: -7.716743469238281
    9. ' _
' → logprob: -8.091743469238281
    10. ')' → logprob: -8.341743469238281

Token 309: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.965434730052948
    2. 'ère' → logprob: -1.4654347896575928
    3. 'é' → logprob: -1.5904347896575928
    4. 'er' → logprob: -2.2154347896575928
    5. 'e' → logprob: -2.8404347896575928
    6. 'ér' → logprob: -5.840434551239014
    7. 'u' → logprob: -5.840434551239014
    8. 'éré' → logprob: -6.340434551239014
    9. 'ére' → logprob: -6.340434551239014
    10. 'érer' → logprob: -6.590434551239014

Token 310: ' trait' (ID: 15458)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01250211801379919
    2. 'for' → logprob: -4.887502193450928
    3. ' :' → logprob: -6.887502193450928
    4. ':
' → logprob: -6.887502193450928
    5. ' for' → logprob: -8.01250171661377
    6. '#' → logprob: -8.13750171661377
    7. '=' → logprob: -8.63750171661377
    8. ' comprises' → logprob: -8.88750171661377
    9. ' consiste' → logprob: -9.01250171661377
    10. 'est' → logprob: -9.26250171661377

Token 311: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02288808487355709
    2. 'era' → logprob: -3.89788818359375
    3. 'er' → logprob: -6.14788818359375
    4. 'ant' → logprob: -8.89788818359375
    5. 'ent' → logprob: -10.52288818359375
    6. 'a' → logprob: -10.52288818359375
    7. '#' → logprob: -12.52288818359375
    8. 'é' → logprob: -12.52288818359375
    9. 'ra' → logprob: -12.52288818359375
    10. '[' → logprob: -14.77288818359375

Token 312: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43505701422691345
    2. 'for' → logprob: -2.0600569248199463
    3. 'q' → logprob: -2.5600569248199463
    4. '_q' → logprob: -3.1850569248199463
    5. 'range' → logprob: -3.3100569248199463
    6. ' for' → logprob: -3.8100569248199463
    7. ' q' → logprob: -3.9350569248199463
    8. ' une' → logprob: -4.310057163238525
    9. '_range' → logprob: -5.935057163238525
    10. ' range' → logprob: -6.185057163238525

Token 313: ' requ' (ID: 7028)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.49146604537963867
    2. 'query' → logprob: -1.8664660453796387
    3. 'for' → logprob: -2.6164660453796387
    4. ' for' → logprob: -2.9914660453796387
    5. ' question' → logprob: -3.8664660453796387
    6. 'question' → logprob: -4.116466045379639
    7. '_' → logprob: -4.741466045379639
    8. 'range' → logprob: -4.866466045379639
    9. ' ' → logprob: -5.116466045379639
    10. ' 
' → logprob: -5.241466045379639

Token 314: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.005439489148557186
    2. 'ê' → logprob: -5.255439281463623
    3. 'ete' → logprob: -9.505439758300781
    4. 'êt' → logprob: -9.505439758300781
    5. 'é' → logprob: -11.130439758300781
    6. 'êtes' → logprob: -11.505439758300781
    7. '^' → logprob: -11.880439758300781
    8. 'ę' → logprob: -12.130439758300781
    9. 'e' → logprob: -12.130439758300781
    10. 'ète' → logprob: -12.880439758300781

Token 315: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002374461852014065
    2. ' for' → logprob: -6.127374649047852
    3. '
' → logprob: -8.627374649047852
    4. ' 
' → logprob: -13.377374649047852
    5. '' → logprob: -13.627374649047852
    6. '\n' → logprob: -13.877374649047852
    7. 'f' → logprob: -14.127374649047852
    8. '#' → logprob: -14.627374649047852
    9. '0' → logprob: -14.627374649047852
    10. 'while' → logprob: -14.627374649047852

Token 316: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -14.125001907348633
    3. 'f' → logprob: -14.875001907348633
    4. '
' → logprob: -15.000001907348633
    5. 'fo' → logprob: -16.250001907348633
    6. 'while' → logprob: -17.375001907348633
    7. 'i' → logprob: -18.125001907348633
    8. '#' → logprob: -18.875001907348633
    9. 'q' → logprob: -19.250001907348633
    10. '```' → logprob: -19.750001907348633

Token 317: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20144541561603546
    2. ' _' → logprob: -1.701445460319519
    3. ' i' → logprob: -10.951445579528809
    4. ' ' → logprob: -11.701445579528809
    5. 'i' → logprob: -12.951445579528809
    6. ' ' → logprob: -13.451445579528809
    7. '_i' → logprob: -13.701445579528809
    8. '__' → logprob: -15.076445579528809
    9. '_query' → logprob: -15.576445579528809
    10. '_=' → logprob: -15.951445579528809

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10072384774684906
    2. 'in' → logprob: -2.3507237434387207
    3. 'n' → logprob: -8.225724220275879
    4. ' ' → logprob: -8.600724220275879
    5. '_' → logprob: -11.225724220275879
    6. ' n' → logprob: -11.475724220275879
    7. 's' → logprob: -12.475724220275879
    8. '0' → logprob: -12.475724220275879
    9. '	in' → logprob: -12.475724220275879
    10. '1' → logprob: -12.850724220275879

Token 319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020893067121506
    2. ' range' → logprob: -2.3502089977264404
    3. 'rang' → logprob: -14.47520923614502
    4. ' ' → logprob: -14.60020923614502
    5. '	range' → logprob: -14.72520923614502
    6. '(range' → logprob: -15.10020923614502
    7. '   ' → logprob: -15.35020923614502
    8. 'r' → logprob: -16.600208282470703
    9. 'q' → logprob: -16.725208282470703
    10. '  ' → logprob: -16.975208282470703

Token 320: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0003357006062287837
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -15.875335693359375
    4. ' (' → logprob: -16.375335693359375
    5. '(Q' → logprob: -18.750335693359375
    6. 'q' → logprob: -19.000335693359375
    7. '((' → logprob: -20.875335693359375
    8. '(s' → logprob: -20.875335693359375
    9. '(

' → logprob: -21.000335693359375
    10. '(qu' → logprob: -21.250335693359375

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.7491250875755213e-05
    2. ':' → logprob: -11.125027656555176
    3. '):
' → logprob: -12.000027656555176
    4. '():' → logprob: -12.750027656555176
    5. ')' → logprob: -13.125027656555176
    6. ' ):' → logprob: -13.500027656555176
    7. '):
' → logprob: -16.00002670288086
    8. '+' → logprob: -17.00002670288086
    9. '}:' → logprob: -17.25002670288086
    10. ']:' → logprob: -17.25002670288086

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025725476443767548
    2. '    
' → logprob: -3.7757253646850586
    3. '[' → logprob: -7.275725364685059
    4. ' 
' → logprob: -7.775725364685059
    5. ' #' → logprob: -8.150725364685059
    6. '   
' → logprob: -8.900725364685059
    7. ':' → logprob: -9.525725364685059
    8. '    ' → logprob: -9.525725364685059
    9. '   ' → logprob: -9.650725364685059
    10. '
' → logprob: -9.650725364685059

Token 323: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.59921795129776
    2. '[' → logprob: -2.7242178916931152
    3. '[a' → logprob: -2.7242178916931152
    4. 'x' → logprob: -2.9742178916931152
    5. 'a' → logprob: -3.0992178916931152
    6. '[x' → logprob: -3.2242178916931152
    7. ' x' → logprob: -3.4742178916931152
    8. '[k' → logprob: -3.9742178916931152
    9. ' [' → logprob: -3.9742178916931152
    10. ' a' → logprob: -4.349217891693115

Token 324: ' À' (ID: 27643)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.7872254848480225
    2. 'l' → logprob: -2.0372254848480225
    3. 'x' → logprob: -2.1622254848480225
    4. '[k' → logprob: -2.2872254848480225
    5. '[a' → logprob: -2.4122254848480225
    6. '[x' → logprob: -2.4122254848480225
    7. 'a' → logprob: -3.0372254848480225
    8. '[u' → logprob: -3.4122254848480225
    9. '[L' → logprob: -3.6622254848480225
    10. '[n' → logprob: -3.9122254848480225

Token 325: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3344910144805908
    2. 'l' → logprob: -1.7094910144805908
    3. ' chaque' → logprob: -1.8344910144805908
    4. ' =' → logprob: -2.584491014480591
    5. '=' → logprob: -3.084491014480591
    6. 'faire' → logprob: -3.959491014480591
    7. 'd' → logprob: -4.209490776062012
    8. '1' → logprob: -4.334490776062012
    9. '[' → logprob: -4.334490776062012
    10. 'la' → logprob: -4.459490776062012

Token 326: ' it' (ID: 480)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.2480037212371826
    2. '_' → logprob: -1.7480037212371826
    3. 'requ' → logprob: -1.7480037212371826
    4. ' ' → logprob: -2.6230037212371826
    5. ' ligne' → logprob: -2.6230037212371826
    6. 'l' → logprob: -2.8730037212371826
    7. 'query' → logprob: -3.3730037212371826
    8. '[' → logprob: -3.8730037212371826
    9. ' requ' → logprob: -3.9980037212371826
    10. 're' → logprob: -4.623003959655762

Token 327: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.20109516382217407
    2. 'érieur' → logprob: -2.3260951042175293
    3. 'er' → logprob: -2.7010951042175293
    4. 'érêt' → logprob: -5.451095104217529
    5. '#' → logprob: -5.701095104217529
    6. '   ' → logprob: -5.826095104217529
    7. 'ère' → logprob: -6.826095104217529
    8. 'éra' → logprob: -6.951095104217529
    9. 'é' → logprob: -7.451095104217529
    10. 'érent' → logprob: -7.576095104217529

Token 328: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02136443555355072
    2. ',' → logprob: -4.396364212036133
    3. '    
' → logprob: -5.271364212036133
    4. '    ' → logprob: -6.771364212036133
    5. ':' → logprob: -7.271364212036133
    6. ' ,' → logprob: -7.771364212036133
    7. '[' → logprob: -8.021364212036133
    8. '   
' → logprob: -8.396364212036133
    9. '  ' → logprob: -9.021364212036133
    10. '     
' → logprob: -9.771364212036133

Token 329: ' on' (ID: 402)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.4623839855194092
    2. 'l' → logprob: -1.7123839855194092
    3. '[a' → logprob: -2.212383985519409
    4. '[x' → logprob: -2.462383985519409
    5. 'x' → logprob: -2.587383985519409
    6. '[k' → logprob: -2.712383985519409
    7. '[u' → logprob: -2.962383985519409
    8. 'a' → logprob: -3.212383985519409
    9. '[n' → logprob: -3.587383985519409
    10. '   ' → logprob: -3.837383985519409

Token 330: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.336111307144165
    2. ' [' → logprob: -1.461111307144165
    3. '[k' → logprob: -2.211111307144165
    4. 's' → logprob: -2.836111307144165
    5. '[' → logprob: -2.961111307144165
    6. '[r' → logprob: -3.586111307144165
    7. '[s' → logprob: -3.836111307144165
    8. '[a' → logprob: -3.836111307144165
    9. 't' → logprob: -3.836111307144165
    10. '[q' → logprob: -4.086111068725586

Token 331: ' une' (ID: 2463)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1412956863641739
    2. 'k' → logprob: -2.3912956714630127
    3. 'l' → logprob: -4.641295909881592
    4. '[l' → logprob: -4.891295909881592
    5. '[a' → logprob: -5.391295909881592
    6. '[u' → logprob: -5.641295909881592
    7. 'une' → logprob: -6.016295909881592
    8. 'a' → logprob: -6.266295909881592
    9. '   ' → logprob: -7.016295909881592
    10. '[i' → logprob: -7.016295909881592

Token 332: ' nouvelle' (ID: 24562)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.28969115018844604
    2. 'ligne' → logprob: -1.6646912097930908
    3. 'requ' → logprob: -4.039690971374512
    4. 'nou' → logprob: -4.539690971374512
    5. ' liste' → logprob: -4.539690971374512
    6. '[' → logprob: -4.664690971374512
    7. ' nouvelle' → logprob: -5.914690971374512
    8. 'l' → logprob: -6.039690971374512
    9. ' ligne' → logprob: -6.039690971374512
    10. 'list' → logprob: -7.164690971374512

Token 333: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.18432559072971344
    2. 'liste' → logprob: -2.559325695037842
    3. 'l' → logprob: -3.559325695037842
    4. 'requ' → logprob: -4.059325695037842
    5. ' ligne' → logprob: -4.309325695037842
    6. '[' → logprob: -4.809325695037842
    7. 'i' → logprob: -5.434325695037842
    8. '()' → logprob: -5.684325695037842
    9. ' liste' → logprob: -5.934325695037842
    10. 'commande' → logprob: -6.059325695037842

Token 334: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008358302526175976
    2. '()' → logprob: -5.383358478546143
    3. '[]' → logprob: -6.758358478546143
    4. '[' → logprob: -7.258358478546143
    5. '()[' → logprob: -7.883358478546143
    6. ' =' → logprob: -7.883358478546143
    7. '[q' → logprob: -8.758358001708984
    8. '()
' → logprob: -8.883358001708984
    9. '[i' → logprob: -9.633358001708984
    10. ' [' → logprob: -9.633358001708984

Token 335: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.161706805229187
    2. 'entrée' → logprob: -1.911706805229187
    3. 'input' → logprob: -7.036706924438477
    4. 'e' → logprob: -8.161706924438477
    5. 'entr' → logprob: -8.786706924438477
    6. '’entrée' → logprob: -10.161706924438477
    7. 'i' → logprob: -10.536706924438477
    8. ''ent' → logprob: -10.536706924438477
    9. 'ent' → logprob: -10.661706924438477
    10. 'instruction' → logprob: -11.411706924438477

Token 336: ' contenant' (ID: 131049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05298392102122307
    2. ' =' → logprob: -3.5529839992523193
    3. '()' → logprob: -4.30298376083374
    4. '=' → logprob: -5.55298376083374
    5. ',' → logprob: -6.30298376083374
    6. '[' → logprob: -6.55298376083374
    7. '()
' → logprob: -7.55298376083374
    8. '()[' → logprob: -8.177984237670898
    9. '[]' → logprob: -8.302984237670898
    10. '    ' → logprob: -8.427984237670898

Token 337: ' trois' (ID: 25564)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5753858685493469
    2. '3' → logprob: -1.9503858089447021
    3. 'de' → logprob: -2.325385808944702
    4. 'k' → logprob: -2.700385808944702
    5. 'une' → logprob: -2.950385808944702
    6. 'un' → logprob: -4.200386047363281
    7. ' deux' → logprob: -4.200386047363281
    8. 'two' → logprob: -4.825386047363281
    9. '1' → logprob: -4.950386047363281
    10. 'l' → logprob: -5.325386047363281

Token 338: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.04641271010041237
    2. ' ent' → logprob: -3.171412706375122
    3. 'enti' → logprob: -6.796412944793701
    4. 'inte' → logprob: -6.796412944793701
    5. '[k' → logprob: -8.296412467956543
    6. ' integers' → logprob: -8.421412467956543
    7. '[' → logprob: -8.546412467956543
    8. 'val' → logprob: -9.296412467956543
    9. 'k' → logprob: -9.671412467956543
    10. '[int' → logprob: -9.796412467956543

Token 339: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.36313843727111816
    2. 't' → logprob: -1.2381384372711182
    3. 'tiers' → logprob: -5.738138198852539
    4. 'er' → logprob: -5.988138198852539
    5. 'ti' → logprob: -6.363138198852539
    6. 'ts' → logprob: -6.488138198852539
    7. 'ers' → logprob: -6.738138198852539
    8. 'tes' → logprob: -6.863138198852539
    9. 'ties' → logprob: -7.363138198852539
    10. 'e' → logprob: -7.488138198852539

Token 340: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07878787815570831
    2. '[a' → logprob: -3.3287878036499023
    3. 'a' → logprob: -3.5787878036499023
    4. '[u' → logprob: -5.328787803649902
    5. '[l' → logprob: -6.203787803649902
    6. '[x' → logprob: -6.578787803649902
    7. '[k' → logprob: -7.203787803649902
    8. ' [' → logprob: -7.828787803649902
    9. 'x' → logprob: -7.953787803649902
    10. ' a' → logprob: -8.078787803649902

Token 341: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0751196146011353
    2. 'l' → logprob: -1.3251196146011353
    3. 'x' → logprob: -1.7001196146011353
    4. '[a' → logprob: -3.3251194953918457
    5. '[l' → logprob: -3.5751194953918457
    6. '[x' → logprob: -4.200119495391846
    7. 'c' → logprob: -4.700119495391846
    8. 'k' → logprob: -4.825119495391846
    9. 'u' → logprob: -4.950119495391846
    10. '[k' → logprob: -4.950119495391846

Token 342: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8154004812240601
    2. 'l' → logprob: -1.44040048122406
    3. 'x' → logprob: -1.56540048122406
    4. '[a' → logprob: -4.06540060043335
    5. '[l' → logprob: -4.44040060043335
    6. '[x' → logprob: -4.69040060043335
    7. 's' → logprob: -5.19040060043335
    8. 'L' → logprob: -5.31540060043335
    9. 'k' → logprob: -5.56540060043335
    10. 'u' → logprob: -5.56540060043335

Token 343: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8305000066757202
    2. 'x' → logprob: -1.4555000066757202
    3. 'l' → logprob: -1.5805000066757202
    4. '[a' → logprob: -4.33050012588501
    5. 's' → logprob: -4.83050012588501
    6. '[l' → logprob: -4.95550012588501
    7. '[x' → logprob: -5.08050012588501
    8. 'c' → logprob: -5.20550012588501
    9. 't' → logprob: -5.20550012588501
    10. 'n' → logprob: -5.45550012588501

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011930029839277267
    2. '1' → logprob: -5.511929988861084
    3. 'a' → logprob: -5.886929988861084
    4. ' ,' → logprob: -7.261929988861084
    5. ',a' → logprob: -7.636929988861084
    6. 'u' → logprob: -7.636929988861084
    7. ',l' → logprob: -7.886929988861084
    8. 'w' → logprob: -8.136930465698242
    9. ',u' → logprob: -8.136930465698242
    10. 'l' → logprob: -8.511930465698242

Token 345: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9282878637313843
    2. 'l' → logprob: -1.4282878637313843
    3. 'a' → logprob: -1.6782878637313843
    4. 'm' → logprob: -2.803287982940674
    5. 'p' → logprob: -3.803287982940674
    6. 's' → logprob: -4.428287982940674
    7. 'r' → logprob: -4.428287982940674
    8. 'k' → logprob: -4.928287982940674
    9. 'h' → logprob: -5.178287982940674
    10. 'c' → logprob: -5.178287982940674

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ',y' → logprob: -10.37503719329834
    3. ' ,' → logprob: -12.75003719329834
    4. '   ' → logprob: -14.50003719329834
    5. 'y' → logprob: -14.87503719329834
    6. '[' → logprob: -14.87503719329834
    7. ' =' → logprob: -15.50003719329834
    8. ',
' → logprob: -15.50003719329834
    9. 'n' → logprob: -15.62503719329834
    10. ',n' → logprob: -15.62503719329834

Token 347: ' m' (ID: 284)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.26249608397483826
    2. ' y' → logprob: -1.6374961137771606
    3. 'l' → logprob: -4.887495994567871
    4. 'r' → logprob: -4.887495994567871
    5. 'm' → logprob: -5.387495994567871
    6. ' l' → logprob: -6.137495994567871
    7. 'z' → logprob: -6.262495994567871
    8. 'c' → logprob: -6.637495994567871
    9. ' r' → logprob: -6.637495994567871
    10. 'a' → logprob: -7.012495994567871

Token 348: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23406663537025452
    2. '=' → logprob: -1.6090666055679321
    3. '[n' → logprob: -5.484066486358643
    4. '   ' → logprob: -6.609066486358643
    5. '=[' → logprob: -6.609066486358643
    6. '=n' → logprob: -6.859066486358643
    7. 'n' → logprob: -7.484066486358643
    8. '[' → logprob: -10.4840669631958
    9. ']' → logprob: -11.2340669631958
    10. '[k' → logprob: -11.3590669631958

Token 349: ' On' (ID: 2160)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.06940963119268417
    2. 'n' → logprob: -2.8194096088409424
    3. '   ' → logprob: -4.9444098472595215
    4. ' n' → logprob: -8.569409370422363
    5. ' [' → logprob: -9.694409370422363
    6. '[' → logprob: -10.944409370422363
    7. '(n' → logprob: -11.069409370422363
    8. '
' → logprob: -13.069409370422363
    9. '	n' → logprob: -13.069409370422363
    10. '[i' → logprob: -14.819409370422363

Token 350: ' utilise' (ID: 70283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9707911014556885
    2. '[n' → logprob: -0.9707911014556885
    3. ' =' → logprob: -1.5957911014556885
    4. 'n' → logprob: -3.5957911014556885
    5. '=[' → logprob: -4.845790863037109
    6. '=n' → logprob: -6.345790863037109
    7. '[' → logprob: -6.970790863037109
    8. '[i' → logprob: -7.470790863037109
    9. ' [' → logprob: -8.34579086303711
    10. ',' → logprob: -8.47079086303711

Token 351: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9661445617675781
    2. '[n' → logprob: -0.9661445617675781
    3. 'i' → logprob: -1.5911445617675781
    4. ' n' → logprob: -4.591144561767578
    5. '[i' → logprob: -4.591144561767578
    6. '   ' → logprob: -4.841144561767578
    7. ' i' → logprob: -5.716144561767578
    8. ' =' → logprob: -7.091144561767578
    9. '(n' → logprob: -7.341144561767578
    10. ' [' → logprob: -7.466144561767578

Token 352: ' nouveau' (ID: 23184)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22122745215892792
    2. '[' → logprob: -2.8462274074554443
    3. '1' → logprob: -3.2212274074554443
    4. '[i' → logprob: -3.4712274074554443
    5. '2' → logprob: -4.096227645874023
    6. '[n' → logprob: -4.096227645874023
    7. 'l' → logprob: -5.096227645874023
    8. 'la' → logprob: -5.471227645874023
    9. 'n' → logprob: -5.721227645874023
    10. '   ' → logprob: -6.096227645874023

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12669581174850464
    2. ' i' → logprob: -2.2516958713531494
    3. '[i' → logprob: -5.12669563293457
    4. '   ' → logprob: -5.62669563293457
    5. '[n' → logprob: -6.00169563293457
    6. 'n' → logprob: -8.00169563293457
    7. ' [' → logprob: -8.00169563293457
    8. ' =' → logprob: -8.25169563293457
    9. '[' → logprob: -9.37669563293457
    10. ' n' → logprob: -9.37669563293457

Token 354: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07948584109544754
    2. '3' → logprob: -2.5794858932495117
    3. '1' → logprob: -7.454485893249512
    4. 'n' → logprob: -11.579485893249512
    5. '4' → logprob: -13.204485893249512
    6. 'nt' → logprob: -13.454485893249512
    7. '=' → logprob: -14.391985893249512
    8. 't' → logprob: -15.266985893249512
    9. 'input' → logprob: -15.266985893249512
    10. ' =' → logprob: -15.391985893249512

Token 355: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010843054042197764
    2. '()
' → logprob: -9.50010871887207
    3. '()[' → logprob: -11.12510871887207
    4. '()]' → logprob: -11.62510871887207
    5. '()=>' → logprob: -13.62510871887207
    6. '();' → logprob: -13.75010871887207
    7. ' ()' → logprob: -13.87510871887207
    8. '()

' → logprob: -13.87510871887207
    9. 'def' → logprob: -14.25010871887207
    10. '()<' → logprob: -14.37510871887207

Token 356: ' l' (ID: 305)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.08199574053287506
    2. '()' → logprob: -2.956995725631714
    3. '[k' → logprob: -4.331995964050293
    4. 'n' → logprob: -5.081995964050293
    5. '[]' → logprob: -6.581995964050293
    6. '   ' → logprob: -6.706995964050293
    7. '[i' → logprob: -6.956995964050293
    8. '()[' → logprob: -7.331995964050293
    9. '[l' → logprob: -7.456995964050293
    10. '()
' → logprob: -7.706995964050293

Token 357: ''aff' (ID: 53397)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -1.087981939315796
    2. '()' → logprob: -1.212981939315796
    3. '2' → logprob: -1.837981939315796
    4. '[' → logprob: -2.962981939315796
    5. 'split' → logprob: -3.462981939315796
    6. '3' → logprob: -3.712981939315796
    7. 'strip' → logprob: -3.837981939315796
    8. 'i' → logprob: -4.087982177734375
    9. '#' → logprob: -4.212982177734375
    10. 'e' → logprob: -4.337982177734375

Token 358: 'ect' (ID: 534)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008489756844937801
    2. '[' → logprob: -5.508489608764648
    3. '#' → logprob: -6.383489608764648
    4. 'ect' → logprob: -7.883489608764648
    5. 'er' → logprob: -8.383489608764648
    6. 't' → logprob: -8.383489608764648
    7. '1' → logprob: -8.758489608764648
    8. 'ix' → logprob: -8.758489608764648
    9. 'irm' → logprob: -8.883489608764648
    10. 'r' → logprob: -9.133489608764648

Token 359: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.36541110277175903
    2. '[m' → logprob: -1.9904110431671143
    3. '[k' → logprob: -2.3654110431671143
    4. '[' → logprob: -2.8654110431671143
    5. '[i' → logprob: -4.365411281585693
    6. '[n' → logprob: -7.115411281585693
    7. '_' → logprob: -7.365411281585693
    8. '2' → logprob: -7.365411281585693
    9. 'm' → logprob: -7.490411281585693
    10. 'ration' → logprob: -7.490411281585693

Token 360: ' multiple' (ID: 7598)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.46726980805397034
    2. 'multiple' → logprob: -1.092269778251648
    3. ' multiple' → logprob: -4.0922698974609375
    4. '[m' → logprob: -4.5922698974609375
    5. '[k' → logprob: -5.4672698974609375
    6. 'multip' → logprob: -6.2172698974609375
    7. '[]' → logprob: -6.7172698974609375
    8. 'n' → logprob: -6.9672698974609375
    9. '[' → logprob: -7.0922698974609375
    10. '_multiple' → logprob: -7.9672698974609375

Token 361: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9244955778121948
    2. '[n' → logprob: -0.9244955778121948
    3. '   ' → logprob: -2.7994956970214844
    4. '(n' → logprob: -2.9244956970214844
    5. 'n' → logprob: -3.0494956970214844
    6. ' =' → logprob: -3.9244956970214844
    7. '()
' → logprob: -4.299495697021484
    8. '()[' → logprob: -4.924495697021484
    9. '=' → logprob: -6.299495697021484
    10. '[' → logprob: -7.424495697021484

Token 362: '   ' (ID: 271)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07258199900388718
    2. 'n' → logprob: -2.9475820064544678
    3. '   ' → logprob: -4.072581768035889
    4. '[' → logprob: -8.447582244873047
    5. ' n' → logprob: -8.697582244873047
    6. ' [' → logprob: -9.697582244873047
    7. '(n' → logprob: -10.072582244873047
    8. '	n' → logprob: -11.072582244873047
    9. '
' → logprob: -13.322582244873047
    10. '    
' → logprob: -13.572582244873047

Token 363: ' [' (ID: 723)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38692763447761536
    2. '[n' → logprob: -1.136927604675293
    3. '(n' → logprob: -10.636927604675293
    4. ' n' → logprob: -10.761927604675293
    5. '   ' → logprob: -12.261927604675293
    6. ' [' → logprob: -12.886927604675293
    7. '
' → logprob: -13.136927604675293
    8. '[' (adapté à ' [') → logprob: -14.136927604675293
    9. '	n' → logprob: -14.886927604675293
    10. '[
' → logprob: -15.386927604675293

Token 364: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -12.75000286102295
    3. '	n' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '[n' → logprob: -18.000003814697266
    6. '_n' → logprob: -18.750003814697266
    7. ')n' → logprob: -19.625003814697266
    8. ',n' → logprob: -19.625003814697266
    9. ''n' → logprob: -19.750003814697266
    10. '(n' → logprob: -20.625003814697266

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014573395310435444
    2. ',x' → logprob: -9.12514591217041
    3. ' ,' → logprob: -10.25014591217041
    4. 'x' → logprob: -14.12514591217041
    5. ',
' → logprob: -14.62514591217041
    6. ',n' → logprob: -16.625144958496094
    7. ' x' → logprob: -17.375144958496094
    8. '‌,' → logprob: -17.875144958496094
    9. ' ' → logprob: -18.125144958496094
    10. ',q' → logprob: -18.375144958496094

Token 366: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741780161857605
    2. ' x' → logprob: -0.9741780161857605
    3. ' ' → logprob: -9.349178314208984
    4. '  ' → logprob: -12.224178314208984
    5. ',' → logprob: -12.599178314208984
    6. '	x' → logprob: -13.224178314208984
    7. ',x' → logprob: -13.974178314208984
    8. '   ' → logprob: -13.974178314208984
    9. '    ' → logprob: -14.099178314208984
    10. ' ' → logprob: -14.599178314208984

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ' ,' → logprob: -11.500016212463379
    3. ',m' → logprob: -12.000016212463379
    4. ',q' → logprob: -16.500017166137695
    5. 'm' → logprob: -17.000017166137695
    6. ',
' → logprob: -17.375017166137695
    7. ',y' → logprob: -18.250017166137695
    8. ',user' → logprob: -19.000017166137695
    9. '‌,' → logprob: -19.250017166137695
    10. ',w' → logprob: -19.875017166137695

Token 368: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004079828038811684
    2. ' m' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.629079818725586
    4. ' ' → logprob: -14.879079818725586
    5. '  ' → logprob: -15.254079818725586
    6. '	m' → logprob: -15.254079818725586
    7. '    ' → logprob: -16.129079818725586
    8. ' ' → logprob: -18.004079818725586
    9. ']' → logprob: -18.691579818725586
    10. '
' → logprob: -18.879079818725586

Token 369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.13388703338569e-06
    2. ']=' → logprob: -11.750009536743164
    3. ' ]' → logprob: -13.750009536743164
    4. ']
' → logprob: -16.250009536743164
    5. ',' → logprob: -17.250009536743164
    6. ')' → logprob: -17.625009536743164
    7. '   ' → logprob: -18.000009536743164
    8. '`]' → logprob: -18.125009536743164
    9. ']

' → logprob: -18.250009536743164
    10. '"]' → logprob: -18.375009536743164

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049943044781685
    2. ' =' → logprob: -4.511049747467041
    3. ']=' → logprob: -13.8860502243042
    4. ']' → logprob: -14.0110502243042
    5. ')' → logprob: -15.6360502243042
    6. '=[' → logprob: -16.636049270629883
    7. ')=' → logprob: -16.886049270629883
    8. '   ' → logprob: -17.011049270629883
    9. '=
' → logprob: -17.136049270629883
    10. '=[]' → logprob: -17.636049270629883

Token 371: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34844788908958435
    2. ' i' → logprob: -1.2234479188919067
    3. '   ' → logprob: -13.848447799682617
    4. '[i' → logprob: -14.473447799682617
    5. '	i' → logprob: -14.723447799682617
    6. '_i' → logprob: -14.848447799682617
    7. ' ' → logprob: -15.098447799682617
    8. '(i' → logprob: -15.348447799682617
    9. '  ' → logprob: -16.098447799682617
    10. ' ' → logprob: -16.473447799682617

Token 372: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. '۲' → logprob: -17.0
    4. '[' → logprob: -17.625
    5. ' ' → logprob: -17.625
    6. '```' → logprob: -18.125
    7. '２' → logprob: -18.1875
    8. '₂' → logprob: -18.6875
    9. '٢' → logprob: -18.8125
    10. 't' → logprob: -18.8125

Token 373: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000521577603649348
    2. '    
' → logprob: -8.625521659851074
    3. ')' → logprob: -8.875521659851074
    4. '()' → logprob: -9.125521659851074
    5. ']' → logprob: -10.875521659851074
    6. '
' → logprob: -10.875521659851074
    7. '#' → logprob: -11.250521659851074
    8. '<|end|>' → logprob: -11.375521659851074
    9. 'n' → logprob: -11.875521659851074
    10. '  ' → logprob: -12.500521659851074

Token 374: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029857859015464783
    2. '    
' → logprob: -4.279857635498047
    3. '<|end|>' → logprob: -5.029857635498047
    4. 'n' → logprob: -5.779857635498047
    5. '    ' → logprob: -6.404857635498047
    6. '
' → logprob: -7.154857635498047
    7. '#' → logprob: -7.279857635498047
    8. 'x' → logprob: -7.529857635498047
    9. 'if' → logprob: -7.904857635498047
    10. ' if' → logprob: -8.404857635498047

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01738417148590088
    2. 'if' → logprob: -4.642384052276611
    3. 'sum' → logprob: -6.142384052276611
    4. 's' → logprob: -6.767384052276611
    5. 'min' → logprob: -6.892384052276611
    6. 'result' → logprob: -7.267384052276611
    7. 'x' → logprob: -7.392384052276611
    8. '#' → logprob: -7.767384052276611
    9. 'for' → logprob: -8.01738452911377
    10. '    
' → logprob: -8.64238452911377

Token 376: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.023632287979126
    2. 'if' → logprob: -2.148632287979126
    3. 'result' → logprob: -2.773632287979126
    4. 'y' → logprob: -2.773632287979126
    5. 'min' → logprob: -2.898632287979126
    6. 'sum' → logprob: -2.898632287979126
    7. 'l' → logprob: -3.148632287979126
    8. 'r' → logprob: -3.148632287979126
    9. 'answer' → logprob: -3.148632287979126
    10. 's' → logprob: -3.148632287979126

Token 377: ' Initial' (ID: 9209)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9041706323623657
    2. 'result' → logprob: -2.029170513153076
    3. '#' → logprob: -2.154170513153076
    4. 'res' → logprob: -2.654170513153076
    5. 'for' → logprob: -2.904170513153076
    6. 'r' → logprob: -3.279170513153076
    7. 'pass' → logprob: -3.654170513153076
    8. 'answer' → logprob: -3.654170513153076
    9. 'val' → logprob: -4.529170513153076
    10. 'min' → logprob: -4.529170513153076

Token 378: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.3259613513946533
    2. 'ise' → logprob: -2.2009613513946533
    3. 'al' → logprob: -2.5759613513946533
    4. 'isation' → logprob: -3.8259613513946533
    5. 'sum' → logprob: -4.700961112976074
    6. 'e' → logprob: -4.700961112976074
    7. 'ize' → logprob: -4.950961112976074
    8. 'isé' → logprob: -5.200961112976074
    9. '#' → logprob: -5.325961112976074
    10. 'value' → logprob: -5.575961112976074

Token 379: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03975236788392067
    2. 'de' → logprob: -4.53975248336792
    3. 'min' → logprob: -5.28975248336792
    4. ' de' → logprob: -5.53975248336792
    5. 'of' → logprob: -5.91475248336792
    6. 'res' → logprob: -6.16475248336792
    7. 'result' → logprob: -6.16475248336792
    8. ' of' → logprob: -6.28975248336792
    9. '=' → logprob: -6.53975248336792
    10. 'a' → logprob: -6.66475248336792

Token 380: ''une' (ID: 13337)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -2.0967562198638916
    2. ' la' → logprob: -2.2217562198638916
    3. ' a' → logprob: -2.4717562198638916
    4. ' min' → logprob: -2.4717562198638916
    5. ' l' → logprob: -2.8467562198638916
    6. ' s' → logprob: -2.9717562198638916
    7. ' low' → logprob: -2.9717562198638916
    8. ' ' → logprob: -3.0967562198638916
    9. 'a' → logprob: -3.0967562198638916
    10. '   ' → logprob: -3.3467562198638916

Token 381: ' liste' (ID: 31719)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.6403361558914185
    2. 'a' → logprob: -2.140336036682129
    3. 'val' → logprob: -2.390336036682129
    4. 's' → logprob: -2.390336036682129
    5. 'res' → logprob: -2.640336036682129
    6. 'l' → logprob: -3.015336036682129
    7. 'answer' → logprob: -3.140336036682129
    8. 'v' → logprob: -3.515336036682129
    9. 'result' → logprob: -3.515336036682129
    10. 'ans' → logprob: -3.640336036682129

Token 382: ' vide' (ID: 21835)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02023972198367119
    2. 'a' → logprob: -5.52023983001709
    3. 'dp' → logprob: -6.14523983001709
    4. 's' → logprob: -6.27023983001709
    5. 'res' → logprob: -6.77023983001709
    6. ' =' → logprob: -7.14523983001709
    7. ' s' → logprob: -7.14523983001709
    8. ' ans' → logprob: -7.27023983001709
    9. 'result' → logprob: -7.64523983001709
    10. 'ans' → logprob: -7.77023983001709

Token 383: ' di' (ID: 1320)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017165541648864746
    2. 'ans' → logprob: -5.767165660858154
    3. 'res' → logprob: -6.017165660858154
    4. 's' → logprob: -6.267165660858154
    5. 'result' → logprob: -6.517165660858154
    6. 'answer' → logprob: -6.642165660858154
    7. 'dp' → logprob: -7.017165660858154
    8. 'a' → logprob: -7.142165660858154
    9. 'r' → logprob: -7.642165660858154
    10. 'ranges' → logprob: -7.642165660858154

Token 384: ',' (ID: 11)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.4141566753387451
    2. ' =' → logprob: -1.4141566753387451
    3. 's' → logprob: -2.289156675338745
    4. '=[]
' → logprob: -2.414156675338745
    5. 'stance' → logprob: -2.664156675338745
    6. '=[]' → logprob: -3.164156675338745
    7. 'ff' → logprob: -3.414156675338745
    8. 'f' → logprob: -3.539156675338745
    9. '[]' → logprob: -3.664156675338745
    10. '   ' → logprob: -4.039156913757324

Token 385: ' qui' (ID: 2780)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.8019466996192932
    2. '[]' → logprob: -0.9269466996192932
    3. 'd' → logprob: -2.1769466400146484
    4. '   ' → logprob: -4.051946640014648
    5. ' di' → logprob: -4.676946640014648
    6. ' []' → logprob: -5.551946640014648
    7. '[' → logprob: -6.176946640014648
    8. 'result' → logprob: -6.551946640014648
    9. 'res' → logprob: -6.801946640014648
    10. ' d' → logprob: -6.801946640014648

Token 386: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6261276006698608
    2. 'ra' → logprob: -2.2511277198791504
    3. 's' → logprob: -2.3761277198791504
    4. 'n' → logprob: -3.0011277198791504
    5. '   ' → logprob: -3.2511277198791504
    6. '=[]' → logprob: -3.2511277198791504
    7. ' =' → logprob: -3.6261277198791504
    8. ' sera' → logprob: -4.12612771987915
    9. 'will' → logprob: -4.25112771987915
    10. 'sera' → logprob: -5.12612771987915

Token 387: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.09187274426221848
    2. 'i' → logprob: -2.7168726921081543
    3. 'iend' → logprob: -3.9668726921081543
    4. 'ien' → logprob: -7.091872692108154
    5. 'iennent' → logprob: -7.091872692108154
    6. 'in' → logprob: -7.716872692108154
    7. 'iens' → logprob: -8.466873168945312
    8. 'inue' → logprob: -9.591873168945312
    9. 'ients' → logprob: -9.841873168945312
    10. 'endra' → logprob: -10.466873168945312

Token 388: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8251792788505554
    2. 'ent' → logprob: -1.2001793384552002
    3. 'endra' → logprob: -1.9501793384552002
    4. 'n' → logprob: -2.9501793384552
    5. 'nt' → logprob: -3.5751793384552
    6. 'nent' → logprob: -4.200179100036621
    7. 'ue' → logprob: -5.200179100036621
    8. 'nd' → logprob: -5.325179100036621
    9. 'nera' → logprob: -5.700179100036621
    10. 'ut' → logprob: -5.950179100036621

Token 389: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.33397021889686584
    2. '[]' → logprob: -2.208970308303833
    3. 'la' → logprob: -3.083970308303833
    4. ' les' → logprob: -3.208970308303833
    5. 'des' → logprob: -3.458970308303833
    6. 'd' → logprob: -4.083970069885254
    7. 'the' → logprob: -4.458970069885254
    8. ' la' → logprob: -5.208970069885254
    9. '[' → logprob: -5.333970069885254
    10. ' des' → logprob: -5.458970069885254

Token 390: ' reste' (ID: 26769)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.2309902906417847
    2. 's' → logprob: -1.8559902906417847
    3. ' distances' → logprob: -1.9809902906417847
    4. 'd' → logprob: -2.355990409851074
    5. 'i' → logprob: -2.855990409851074
    6. 'di' → logprob: -2.855990409851074
    7. ' nombres' → logprob: -3.230990409851074
    8. 'diff' → logprob: -4.605990409851074
    9. 'indices' → logprob: -4.605990409851074
    10. ' nouveaux' → logprob: -4.855990409851074

Token 391: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2189832329750061
    2. ' de' → logprob: -2.3439831733703613
    3. 'de' → logprob: -3.3439831733703613
    4. 'des' → logprob: -3.4689831733703613
    5. '   ' → logprob: -4.343983173370361
    6. ' d' → logprob: -4.593983173370361
    7. 'd' → logprob: -5.343983173370361
    8. '_des' → logprob: -6.093983173370361
    9. ' du' → logprob: -7.093983173370361
    10. '[]' → logprob: -7.343983173370361

Token 392: ' chaque' (ID: 21194)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47174519300460815
    2. 'la' → logprob: -1.346745252609253
    3. ' la' → logprob: -2.596745252609253
    4. ' d' → logprob: -4.471745014190674
    5. 'div' → logprob: -4.471745014190674
    6. 'l' → logprob: -5.221745014190674
    7. '[' → logprob: -5.346745014190674
    8. 'les' → logprob: -6.096745014190674
    9. '[]' → logprob: -6.846745014190674
    10. 'n' → logprob: -7.596745014190674

Token 393: ' élément' (ID: 99627)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.715961217880249
    2. '/' → logprob: -2.590961217880249
    3. 'd' → logprob: -2.590961217880249
    4. 'jour' → logprob: -2.840961217880249
    5. 'di' → logprob: -3.465961217880249
    6. 'division' → logprob: -3.715961217880249
    7. 'i' → logprob: -4.090961456298828
    8. ' /' → logprob: -4.090961456298828
    9. 'élé' → logprob: -4.340961456298828
    10. ',' → logprob: -4.465961456298828

Token 394: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7411310076713562
    2. ' de' → logprob: -1.241131067276001
    3. ' d' → logprob: -2.491131067276001
    4. 'de' → logprob: -3.241131067276001
    5. 'd' → logprob: -3.491131067276001
    6. ',' → logprob: -3.866131067276001
    7. ' =' → logprob: -4.491130828857422
    8. '[' → logprob: -5.241130828857422
    9. '[]' → logprob: -5.241130828857422
    10. ' des' → logprob: -5.366130828857422

Token 395: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2957461178302765
    2. ' d' → logprob: -1.795746088027954
    3. 'div' → logprob: -3.295746088027954
    4. 'x' → logprob: -4.170746326446533
    5. ' la' → logprob: -4.795746326446533
    6. 'division' → logprob: -4.795746326446533
    7. ' x' → logprob: -5.545746326446533
    8. 'n' → logprob: -5.670746326446533
    9. 'm' → logprob: -6.170746326446533
    10. ' n' → logprob: -6.545746326446533

Token 396: ' modulo' (ID: 112372)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7322796583175659
    2. '%' → logprob: -1.357279658317566
    3. '[]' → logprob: -2.7322797775268555
    4. ',' → logprob: -3.1072797775268555
    5. 'i' → logprob: -3.2322797775268555
    6. '   ' → logprob: -3.3572797775268555
    7. ' %' → logprob: -3.6072797775268555
    8. '[' → logprob: -4.7322797775268555
    9. ' modulo' → logprob: -4.8572797775268555
    10. '[]
' → logprob: -5.2322797775268555

Token 397: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1133325845003128
    2. ' m' → logprob: -2.238332509994507
    3. 'n' → logprob: -8.488332748413086
    4. ' ' → logprob: -9.113332748413086
    5. ' n' → logprob: -9.238332748413086
    6. '   ' → logprob: -10.363332748413086
    7. '(m' → logprob: -11.988332748413086
    8. '[' → logprob: -12.363332748413086
    9. '  ' → logprob: -12.363332748413086
    10. ' ' → logprob: -12.363332748413086

Token 398: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013002344639971852
    2. '[]' → logprob: -6.75130033493042
    3. 'di' → logprob: -10.376299858093262
    4. ',' → logprob: -10.876299858093262
    5. '    
' → logprob: -11.126299858093262
    6. '    ' → logprob: -11.376299858093262
    7. '[' → logprob: -11.501299858093262
    8. '  ' → logprob: -11.626299858093262
    9. '.' → logprob: -11.751299858093262
    10. ' =' → logprob: -12.001299858093262

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741666316986084
    2. 'di' → logprob: -0.9741666316986084
    3. ' di' → logprob: -9.349166870117188
    4. '    
' → logprob: -13.849166870117188
    5. 'd' → logprob: -13.974166870117188
    6. '
' → logprob: -14.974166870117188
    7. '   ' → logprob: -15.724166870117188
    8. '  ' → logprob: -15.849166870117188
    9. '_di' → logprob: -16.224166870117188
    10. '(di' → logprob: -16.849166870117188

Token 400: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' (adapté à ' di') → logprob: -0.0020086953882128
    2. '   ' → logprob: -6.25200891494751
    3. ' di' → logprob: -9.627008438110352
    4. '[]' → logprob: -12.002008438110352
    5. '[]
' → logprob: -12.127008438110352
    6. 'd' → logprob: -13.627008438110352
    7. '    
' → logprob: -14.127008438110352
    8. '[' → logprob: -15.377008438110352
    9. '  ' → logprob: -16.00200843811035
    10. ' ' → logprob: -16.37700843811035

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05164450779557228
    2. ' =' → logprob: -3.0516445636749268
    3. '=[]' → logprob: -5.801644325256348
    4. '=[]
' → logprob: -10.551644325256348
    5. '=[]
' → logprob: -13.801644325256348
    6. '[]' → logprob: -14.051644325256348
    7. '=[' → logprob: -14.301644325256348
    8. '[:]' → logprob: -14.426644325256348
    9. '   ' → logprob: -16.051645278930664
    10. 'i' → logprob: -16.176645278930664

Token 402: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005006751511245966
    2. '[' → logprob: -6.005006790161133
    3. '[d' → logprob: -6.505006790161133
    4. ' []' → logprob: -7.255006790161133
    5. '[i' → logprob: -8.880006790161133
    6. '[n' → logprob: -9.505006790161133
    7. ' [' → logprob: -10.505006790161133
    8. '[int' → logprob: -10.630006790161133
    9. '[list' → logprob: -11.255006790161133
    10. '[num' → logprob: -11.630006790161133

Token 403: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012266583507880569
    2. '<|end|>' → logprob: -7.626226425170898
    3. ' for' → logprob: -7.751226425170898
    4. 'for' → logprob: -8.751226425170898
    5. '    
' → logprob: -9.251226425170898
    6. '	for' → logprob: -10.376226425170898
    7. '   ' → logprob: -11.751226425170898
    8. '    ' → logprob: -12.001226425170898
    9. '<|end|>' → logprob: -13.001226425170898
    10. '  ' → logprob: -13.126226425170898

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01112351194024086
    2. 'for' → logprob: -4.5111236572265625
    3. ' for' → logprob: -9.511123657226562
    4. '	for' → logprob: -13.511123657226562
    5. '   ' → logprob: -15.511123657226562
    6. '       ' → logprob: -18.511123657226562
    7. '  ' → logprob: -18.511123657226562
    8. '    
' → logprob: -18.886123657226562
    9. '#' → logprob: -19.511123657226562
    10. ' ' → logprob: -19.761123657226562

Token 405: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037313217762857676
    2. '   ' → logprob: -5.7537312507629395
    3. ' for' → logprob: -7.5037312507629395
    4. '	for' → logprob: -13.003731727600098
    5. ' ' → logprob: -16.62873077392578
    6. '  ' → logprob: -16.75373077392578
    7. '    ' → logprob: -18.25373077392578
    8. '    
' → logprob: -19.12873077392578
    9. '   ' → logprob: -19.50373077392578
    10. '[' → logprob: -19.87873077392578

Token 406: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '	for' → logprob: -19.625
    5. '```' → logprob: -20.75
    6. 'pour' → logprob: -21.75
    7. 'fo' → logprob: -22.0
    8. ' ' → logprob: -22.0
    9. '#' → logprob: -22.125
    10. 'range' → logprob: -22.5

Token 407: 'isation' (ID: 6993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38923847675323486
    2. 'isation' → logprob: -1.1392384767532349
    3. 'iser' → logprob: -6.514238357543945
    4. 'ization' → logprob: -7.639238357543945
    5. '#' → logprob: -8.264238357543945
    6. ' for' → logprob: -10.139238357543945
    7. 'i' → logprob: -10.764238357543945
    8. 'is' → logprob: -11.264238357543945
    9. 's' → logprob: -12.014238357543945
    10. '```' → logprob: -12.014238357543945

Token 408: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6038238406181335
    2. ' de' → logprob: -1.4788239002227783
    3. 'd' → logprob: -1.8538239002227783
    4. '   ' → logprob: -3.7288239002227783
    5. 'j' → logprob: -4.228823661804199
    6. 'de' → logprob: -4.603823661804199
    7. ' of' → logprob: -5.103823661804199
    8. ' du' → logprob: -5.228823661804199
    9. ' j' → logprob: -5.728823661804199
    10. '    ' → logprob: -6.603823661804199

Token 409: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27428457140922546
    2. ''une' → logprob: -2.274284601211548
    3. ''un' → logprob: -3.274284601211548
    4. 'e' → logprob: -3.774284601211548
    5. 'i' → logprob: -4.024284362792969
    6. 'j' → logprob: -4.274284362792969
    7. '_' → logprob: -4.899284362792969
    8. 'une' → logprob: -5.024284362792969
    9. ''' → logprob: -5.274284362792969
    10. ' d' → logprob: -5.649284362792969

Token 410: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22584888339042664
    2. 'range' → logprob: -2.100848913192749
    3. 'j' → logprob: -2.975848913192749
    4. ' for' → logprob: -4.97584867477417
    5. 'i' → logprob: -5.22584867477417
    6. 'counter' → logprob: -5.72584867477417
    7. 'sum' → logprob: -6.35084867477417
    8. 's' → logprob: -6.47584867477417
    9. 'variable' → logprob: -6.47584867477417
    10. 'index' → logprob: -6.60084867477417

Token 411: ' vide' (ID: 21835)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1044607162475586
    2. '[]' → logprob: -2.3544607162475586
    3. ' empty' → logprob: -2.6044607162475586
    4. 'd' → logprob: -2.7294607162475586
    5. ' de' → logprob: -2.9794607162475586
    6. ' des' → logprob: -2.9794607162475586
    7. ' res' → logprob: -3.6044607162475586
    8. ' result' → logprob: -3.9794607162475586
    9. '   ' → logprob: -4.104460716247559
    10. '=[]' → logprob: -4.229460716247559

Token 412: ' dz' (ID: 17303)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.422996759414673
    2. ' res' → logprob: -2.422996759414673
    3. 'res' → logprob: -2.547996759414673
    4. 'd' → logprob: -3.172996759414673
    5. 'di' → logprob: -3.172996759414673
    6. ' r' → logprob: -3.297996759414673
    7. '   ' → logprob: -3.672996759414673
    8. ' d' → logprob: -3.672996759414673
    9. 's' → logprob: -3.860496759414673
    10. 'ri' → logprob: -3.860496759414673

Token 413: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06314593553543091
    2. '=' → logprob: -2.938145875930786
    3. '=[]' → logprob: -5.063146114349365
    4. '=[]
' → logprob: -7.188146114349365
    5. 'z' → logprob: -7.938146114349365
    6. 'i' → logprob: -7.938146114349365
    7. '[]' → logprob: -9.563145637512207
    8. '   ' → logprob: -9.563145637512207
    9. 'd' → logprob: -9.563145637512207
    10. ' ' → logprob: -9.563145637512207

Token 414: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.4925746023654938
    2. '   ' → logprob: -1.1175745725631714
    3. ' dz' → logprob: -3.867574691772461
    4. 'z' → logprob: -4.617574691772461
    5. 'qui' → logprob: -5.117574691772461
    6. '#' → logprob: -5.117574691772461
    7. '[]' → logprob: -5.367574691772461
    8. 'dz' → logprob: -5.492574691772461
    9. '    ' → logprob: -5.617574691772461
    10. ' z' → logprob: -6.117574691772461

Token 415: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.7130718231201172
    2. '=[]' → logprob: -1.3380718231201172
    3. '=' → logprob: -1.7130718231201172
    4. '[]' → logprob: -3.963071823120117
    5. 'conten' → logprob: -4.713071823120117
    6. 'will' → logprob: -4.713071823120117
    7. '=[]
' → logprob: -5.213071823120117
    8. ' =' → logprob: -5.338071823120117
    9. 'contain' → logprob: -5.963071823120117
    10. '_cont' → logprob: -6.088071823120117

Token 416: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0260957982391119
    2. 'iend' → logprob: -3.9010958671569824
    3. 'endra' → logprob: -5.401095867156982
    4. 'ient' → logprob: -8.151095390319824
    5. 'ti' → logprob: -8.526095390319824
    6. 'en' → logprob: -9.026095390319824
    7. 'vi' → logprob: -9.901095390319824
    8. 'd' → logprob: -10.151095390319824
    9. 'iennent' → logprob: -10.151095390319824
    10. 'endrá' → logprob: -10.401095390319824

Token 417: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.08129821717739105
    2. 'tera' → logprob: -3.9562981128692627
    3. 'ent' → logprob: -4.081298351287842
    4. 'ont' → logprob: -4.581298351287842
    5. 'entra' → logprob: -5.081298351287842
    6. 't' → logprob: -5.206298351287842
    7. 'tra' → logprob: -5.956298351287842
    8. 'terra' → logprob: -6.206298351287842
    9. 'nd' → logprob: -6.331298351287842
    10. 'cont' → logprob: -6.456298351287842

Token 418: ' soit' (ID: 17293)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8281456828117371
    2. '[' → logprob: -2.078145742416382
    3. '[]' → logprob: -2.203145742416382
    4. 'des' → logprob: -2.203145742416382
    5. '[i' → logprob: -2.453145742416382
    6. 'd' → logprob: -2.953145742416382
    7. 'la' → logprob: -3.203145742416382
    8. ' les' → logprob: -4.578145503997803
    9. 'le' → logprob: -5.453145503997803
    10. '[d' → logprob: -5.453145503997803

Token 419: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.022179365158081
    2. '0' → logprob: -1.397179365158081
    3. '[]' → logprob: -2.022179365158081
    4. 'les' → logprob: -2.272179365158081
    5. 'd' → logprob: -2.772179365158081
    6. '[' → logprob: -3.147179365158081
    7. '[i' → logprob: -4.39717960357666
    8. '[n' → logprob: -5.14717960357666
    9. 'x' → logprob: -5.27217960357666
    10. 'le' → logprob: -5.39717960357666

Token 420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5435954928398132
    2. 'z' → logprob: -2.168595552444458
    3. 'élé' → logprob: -2.418595552444458
    4. 'e' → logprob: -2.668595552444458
    5. 'zero' → logprob: -3.543595552444458
    6. ' ' → logprob: -3.668595552444458
    7. ' z' → logprob: -4.168595314025879
    8. '1' → logprob: -4.168595314025879
    9. ' zéro' → logprob: -4.293595314025879
    10. 'd' → logprob: -4.793595314025879

Token 421: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07446284592151642
    2. 'z' → logprob: -3.074462890625
    3. '1' → logprob: -3.824462890625
    4. 'zero' → logprob: -6.324462890625
    5. 'True' → logprob: -7.949462890625
    6. 'nombre' → logprob: -8.449462890625
    7. 'd' → logprob: -8.949462890625
    8. 'ent' → logprob: -9.199462890625
    9. ' ' → logprob: -9.199462890625
    10. 'None' → logprob: -9.449462890625

Token 422: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015704454854130745
    2. ' soit' → logprob: -7.876570224761963
    3. ' ou' → logprob: -7.876570224761963
    4. 'ou' → logprob: -8.001570701599121
    5. 's' → logprob: -9.126570701599121
    6. '0' → logprob: -9.126570701599121
    7. ' ,' → logprob: -9.376570701599121
    8. 'so' → logprob: -9.501570701599121
    9. '   ' → logprob: -10.376570701599121
    10. ' or' → logprob: -11.626570701599121

Token 423: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12382487207651138
    2. ' d' → logprob: -2.4988248348236084
    3. 'x' → logprob: -4.7488250732421875
    4. 'n' → logprob: -5.3738250732421875
    5. '(d' → logprob: -5.8738250732421875
    6. 'di' → logprob: -5.9988250732421875
    7. ' x' → logprob: -6.3738250732421875
    8. ' n' → logprob: -6.4988250732421875
    9. 'i' → logprob: -6.4988250732421875
    10. 'le' → logprob: -6.6238250732421875

Token 424: ''' (ID: 6)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40441757440567017
    2. 'e' → logprob: -2.0294175148010254
    3. ' d' → logprob: -2.6544175148010254
    4. 'a' → logprob: -3.5294175148010254
    5. 'element' → logprob: -3.9044175148010254
    6. 'élé' → logprob: -3.9044175148010254
    7. ''' → logprob: -4.279417514801025
    8. ' élément' → logprob: -4.529417514801025
    9. 'i' → logprob: -4.904417514801025
    10. ''é' → logprob: -5.779417514801025

Token 425: 'élé' (ID: 15228)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3866210877895355
    2. 'element' → logprob: -2.3866209983825684
    3. 'élé' → logprob: -2.5116209983825684
    4. 'i' → logprob: -3.1366209983825684
    5. 'x' → logprob: -3.2616209983825684
    6. ' d' → logprob: -4.261620998382568
    7. 'di' → logprob: -4.511620998382568
    8. 'n' → logprob: -4.761620998382568
    9. 'elem' → logprob: -4.886620998382568
    10. ' élément' → logprob: -5.511620998382568

Token 426: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0009364743018522859
    2. '   ' → logprob: -7.625936508178711
    3. 'm' → logprob: -8.625936508178711
    4. 'ement' → logprob: -9.375936508178711
    5. 'men' → logprob: -10.625936508178711
    6. 'me' → logprob: -11.000936508178711
    7. 'ments' → logprob: -11.125936508178711
    8. 'e' → logprob: -11.250936508178711
    9. '       ' → logprob: -11.250936508178711
    10. 'd' → logprob: -11.250936508178711

Token 427: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5402647256851196
    2. ' d' → logprob: -1.1652647256851196
    3. 'd' → logprob: -2.54026460647583
    4. '%' → logprob: -4.91526460647583
    5. '   ' → logprob: -5.29026460647583
    6. 'de' → logprob: -5.54026460647583
    7. ' modulo' → logprob: -6.04026460647583
    8. ' ' → logprob: -6.54026460647583
    9. ' %' → logprob: -7.29026460647583
    10. ' in' → logprob: -7.54026460647583

Token 428: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3140568137168884
    2. ' d' → logprob: -1.3140568733215332
    3. ' la' → logprob: -7.689056873321533
    4. ' ' → logprob: -9.189056396484375
    5. 'la' → logprob: -9.939056396484375
    6. 'di' → logprob: -10.064056396484375
    7. ' ' → logprob: -10.501556396484375
    8. 'l' → logprob: -11.126556396484375
    9. '   ' → logprob: -11.251556396484375
    10. '	d' → logprob: -11.564056396484375

Token 429: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9755210876464844
    2. '[i' → logprob: -1.1005210876464844
    3. ' modulo' → logprob: -1.6005210876464844
    4. 'mod' → logprob: -3.7255210876464844
    5. 'est' → logprob: -3.8505210876464844
    6. '[j' → logprob: -4.100521087646484
    7. ' mod' → logprob: -4.850521087646484
    8. ' est' → logprob: -5.100521087646484
    9. ' %' → logprob: -6.350521087646484
    10. '[' → logprob: -6.350521087646484

Token 430: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.13528695702552795
    2. 'div' → logprob: -2.760287046432495
    3. '%' → logprob: -3.385287046432495
    4. '0' → logprob: -4.010286808013916
    5. '%d' → logprob: -6.385286808013916
    6. 'z' → logprob: -6.760286808013916
    7. '   ' → logprob: -6.760286808013916
    8. 'multiple' → logprob: -7.010286808013916
    9. '<div' → logprob: -7.260286808013916
    10. 'd' → logprob: -7.510286808013916

Token 431: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6289558410644531
    2. 'par' → logprob: -1.5039558410644531
    3. '   ' → logprob: -1.7539558410644531
    4. ' par' → logprob: -2.753955841064453
    5. ' ,' → logprob: -6.503955841064453
    6. ' ' → logprob: -6.753955841064453
    7. '  ' → logprob: -7.128955841064453
    8. '[i' → logprob: -7.253955841064453
    9. 'by' → logprob: -7.253955841064453
    10. '    ' → logprob: -7.753955841064453

Token 432: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.38688698410987854
    2. ' m' → logprob: -1.1368869543075562
    3. ' ' → logprob: -11.761886596679688
    4. ' ' → logprob: -12.511886596679688
    5. '	m' → logprob: -12.761886596679688
    6. ' 
' → logprob: -14.761886596679688
    7. '   ' → logprob: -15.511886596679688
    8. '1' → logprob: -16.011886596679688
    9. ' ' → logprob: -16.136886596679688
    10. '    ' → logprob: -16.261886596679688

Token 433: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011637861840426922
    2. '   ' → logprob: -4.5116376876831055
    3. '#' → logprob: -7.7616376876831055
    4. ' ,' → logprob: -9.511637687683105
    5. ',
' → logprob: -9.886637687683105
    6. 'else' → logprob: -12.136637687683105
    7. ',d' → logprob: -12.636637687683105
    8. '  ' → logprob: -12.761637687683105
    9. ',
' → logprob: -12.886637687683105
    10. ';' → logprob: -12.886637687683105

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4787101149559021
    2. '#' → logprob: -0.9787101149559021
    3. ',' → logprob: -5.853710174560547
    4. ' #' → logprob: -6.603710174560547
    5. '    ' → logprob: -8.728710174560547
    6. '  ' → logprob: -9.728710174560547
    7. ' ' → logprob: -9.978710174560547
    8. ' soit' → logprob: -10.103710174560547
    9. 'ou' → logprob: -11.228710174560547
    10. ' ,' → logprob: -11.728710174560547

Token 435: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.019236303865909576
    2. '   ' → logprob: -4.019236087799072
    3. ' #' → logprob: -7.894236087799072
    4. ' soit' → logprob: -7.894236087799072
    5. 'ou' → logprob: -8.89423656463623
    6. ',' → logprob: -9.26923656463623
    7. 'so' → logprob: -10.64423656463623
    8. 'else' → logprob: -10.89423656463623
    9. '  ' → logprob: -11.14423656463623
    10. '    ' → logprob: -11.39423656463623

Token 436: ' soit' (ID: 17293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2511984705924988
    2. '   ' → logprob: -2.5011985301971436
    3. ' soit' → logprob: -2.5011985301971436
    4. '0' → logprob: -3.5011985301971436
    5. 'ou' → logprob: -5.0011982917785645
    6. ' #' → logprob: -5.0011982917785645
    7. ' ' → logprob: -5.2511982917785645
    8. '1' → logprob: -6.0011982917785645
    9. 'so' → logprob: -6.0011982917785645
    10. '  ' → logprob: -6.2511982917785645

Token 437: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005453597754240036
    2. ' ' → logprob: -6.005453586578369
    3. 'un' → logprob: -6.005453586578369
    4. ' un' → logprob: -7.630453586578369
    5. '   ' → logprob: -11.755454063415527
    6. '  ' → logprob: -12.130454063415527
    7. ' ' → logprob: -12.505454063415527
    8. 'z' → logprob: -13.380454063415527
    9. '    ' → logprob: -14.755454063415527
    10. '1' → logprob: -14.755454063415527

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027087211492471397
    2. ' ' → logprob: -8.25027084350586
    3. 'e' → logprob: -12.75027084350586
    4. '1' → logprob: -13.62527084350586
    5. 'z' → logprob: -13.75027084350586
    6. 'o' → logprob: -13.87527084350586
    7. '#' → logprob: -15.00027084350586
    8. '[' → logprob: -15.31277084350586
    9. '```' → logprob: -15.37527084350586
    10. 's' → logprob: -15.43777084350586

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.314625690924004e-05
    2. ' ' → logprob: -9.750073432922363
    3. 'z' → logprob: -12.500073432922363
    4. 'o' → logprob: -12.750073432922363
    5. '1' → logprob: -13.250073432922363
    6. 'd' → logprob: -14.125073432922363
    7. '
' → logprob: -14.500073432922363
    8. '#' → logprob: -14.562573432922363
    9. '`' → logprob: -14.875073432922363
    10. '```' → logprob: -15.000073432922363

Token 440: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03692331537604332
    2. ' si' → logprob: -4.411923408508301
    3. ' if' → logprob: -4.536923408508301
    4. ',' → logprob: -5.661923408508301
    5. 'if' → logprob: -5.911923408508301
    6. '  ' → logprob: -6.411923408508301
    7. ' ' → logprob: -6.661923408508301
    8. '.' → logprob: -6.911923408508301
    9. ' par' → logprob: -6.911923408508301
    10. '    ' → logprob: -7.911923408508301

Token 441: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012370144249871373
    2. 'dz' → logprob: -7.001236915588379
    3. ',' → logprob: -9.001236915588379
    4. ' dz' → logprob: -9.626236915588379
    5. '.' → logprob: -10.126236915588379
    6. '	d' → logprob: -10.376236915588379
    7. '  ' → logprob: -10.501236915588379
    8. '    
' → logprob: -11.501236915588379
    9. ' ' → logprob: -11.751236915588379
    10. 'd' → logprob: -11.876236915588379

Token 442: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007166666444391012
    2. 'dz' → logprob: -5.007166862487793
    3. '    
' → logprob: -8.507166862487793
    4. ' dz' → logprob: -8.757166862487793
    5. '
' → logprob: -10.507166862487793
    6. 'd' → logprob: -11.132166862487793
    7. '	d' → logprob: -11.132166862487793
    8. ' ' → logprob: -11.382166862487793
    9. '  ' → logprob: -11.632166862487793
    10. 'for' → logprob: -12.382166862487793

Token 443: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006740357726812363
    2. 'ont' → logprob: -5.881740570068359
    3. '#' → logprob: -6.506740570068359
    4. 'e' → logprob: -6.631740570068359
    5. ' for' → logprob: -8.00674057006836
    6. '=' → logprob: -8.63174057006836
    7. 'on' → logprob: -9.38174057006836
    8. 'd' → logprob: -9.63174057006836
    9. 'ode' → logprob: -9.88174057006836
    10. 'ar' → logprob: -10.00674057006836

Token 444: ' fait' (ID: 7473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.024427056312561
    2. 'd' → logprob: -1.274427056312561
    3. ' for' → logprob: -2.6494269371032715
    4. '[' → logprob: -2.8994269371032715
    5. ' pour' → logprob: -3.3994269371032715
    6. ' une' → logprob: -3.3994269371032715
    7. ' d' → logprob: -3.5244269371032715
    8. ' la' → logprob: -4.0244269371032715
    9. 'pour' → logprob: -4.2744269371032715
    10. 'une' → logprob: -4.3994269371032715

Token 445: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17851462960243225
    2. ' pour' → logprob: -2.1785147190093994
    3. 'for' → logprob: -3.8035147190093994
    4. ' for' → logprob: -4.42851448059082
    5. 'pour' → logprob: -4.55351448059082
    6. ' par' → logprob: -5.92851448059082
    7. 'par' → logprob: -6.80351448059082
    8. ' à' → logprob: -8.30351448059082
    9. '[' → logprob: -8.30351448059082
    10. '  ' → logprob: -8.67851448059082

Token 446: ' compter' (ID: 81694)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.703668475151062
    2. 'ind' → logprob: -2.5786685943603516
    3. 'fac' → logprob: -2.7036685943603516
    4. ' mar' → logprob: -3.0786685943603516
    5. 'maint' → logprob: -3.0786685943603516
    6. 'calcul' → logprob: -3.3286685943603516
    7. ' d' → logprob: -3.4536685943603516
    8. 'i' → logprob: -3.5786685943603516
    9. ' faciliter' → logprob: -3.5786685943603516
    10. 'élé' → logprob: -3.5786685943603516

Token 447: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6859831809997559
    2. 'div' → logprob: -1.4359831809997559
    3. ' éléments' → logprob: -2.185983180999756
    4. ' multiples' → logprob: -3.310983180999756
    5. 'd' → logprob: -3.685983180999756
    6. ' divisible' → logprob: -3.685983180999756
    7. ' elements' → logprob: -4.435983180999756
    8. ' divis' → logprob: -4.560983180999756
    9. 'multip' → logprob: -4.935983180999756
    10. ' d' → logprob: -5.060983180999756

Token 449: ' multiples' (ID: 70720)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023861313238739967
    2. ' divisible' → logprob: -4.523861408233643
    3. 'div' → logprob: -5.273861408233643
    4. 'd' → logprob: -6.023861408233643
    5. ' divis' → logprob: -7.273861408233643
    6. ' de' → logprob: -7.773861408233643
    7. '	div' → logprob: -7.898861408233643
    8. '    
' → logprob: -8.148860931396484
    9. '    ' → logprob: -8.148860931396484
    10. 'for' → logprob: -8.398860931396484

Token 450: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20336022973060608
    2. ' de' → logprob: -2.0783603191375732
    3. 'de' → logprob: -2.9533603191375732
    4. ' of' → logprob: -6.328360080718994
    5. ' des' → logprob: -6.453360080718994
    6. 'd' → logprob: -6.953360080718994
    7. '  ' → logprob: -7.578360080718994
    8. 'of' → logprob: -7.828360080718994
    9. 'des' → logprob: -7.828360080718994
    10. '    ' → logprob: -8.203360557556152

Token 451: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10030101239681244
    2. 'm' → logprob: -2.3503010272979736
    3. ' ' → logprob: -9.600300788879395
    4. ' ' → logprob: -11.225300788879395
    5. '	m' → logprob: -12.100300788879395
    6. '   ' → logprob: -13.850300788879395
    7. '[m' → logprob: -13.975300788879395
    8. '(m' → logprob: -13.975300788879395
    9. ' м' → logprob: -14.350300788879395
    10. ',m' → logprob: -14.725300788879395

Token 452: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00072851701406762
    2. '.' → logprob: -7.625728607177734
    3. '    
' → logprob: -9.750728607177734
    4. '  ' → logprob: -10.000728607177734
    5. ',' → logprob: -10.375728607177734
    6. ' for' → logprob: -10.625728607177734
    7. ' dans' → logprob: -11.125728607177734
    8. '    ' → logprob: -11.375728607177734
    9. 'dans' → logprob: -11.375728607177734
    10. 'for' → logprob: -11.500728607177734

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003365350130479783
    2. 'for' → logprob: -8.375336647033691
    3. '    
' → logprob: -10.250336647033691
    4. ' for' → logprob: -10.250336647033691
    5. '	for' → logprob: -10.500336647033691
    6. '   ' → logprob: -12.625336647033691
    7. '
' → logprob: -12.875336647033691
    8. '	d' → logprob: -14.750336647033691
    9. '\t' → logprob: -15.250336647033691
    10. '  ' → logprob: -15.375336647033691

Token 454: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' (adapté à ' dz') → logprob: -0.08008646965026855
    2. 'for' → logprob: -2.5800864696502686
    3. '   ' → logprob: -6.830086708068848
    4. ' dz' → logprob: -10.080086708068848
    5. ' for' → logprob: -10.705086708068848
    6. 'di' → logprob: -10.830086708068848
    7. 'd' → logprob: -11.705086708068848
    8. '    
' → logprob: -12.080086708068848
    9. 'dia' → logprob: -12.830086708068848
    10. '
' → logprob: -13.080086708068848

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06216239556670189
    2. ' =' → logprob: -2.812162399291992
    3. '=[]' → logprob: -8.562162399291992
    4. '=[]
' → logprob: -13.437162399291992
    5. '=[' → logprob: -14.187162399291992
    6. '[]' → logprob: -14.687162399291992
    7. ',' → logprob: -15.312162399291992
    8. ' ' → logprob: -15.562162399291992
    9. '=[]
' → logprob: -15.812162399291992
    10. '[:]' → logprob: -15.812162399291992

Token 456: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13006022572517395
    2. ' []' → logprob: -2.1300601959228516
    3. '[' → logprob: -6.255060195922852
    4. ' [' → logprob: -6.755060195922852
    5. '[]
' → logprob: -11.005060195922852
    6. '0' → logprob: -11.380060195922852
    7. ' ' → logprob: -13.005060195922852
    8. '[int' → logprob: -13.380060195922852
    9. '[i' → logprob: -13.505060195922852
    10. '[]}' → logprob: -13.505060195922852

Token 457: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008113444782793522
    2. '    
' → logprob: -5.133113384246826
    3. 'for' → logprob: -6.258113384246826
    4. ' for' → logprob: -8.883113861083984
    5. '
' → logprob: -9.508113861083984
    6. '  
' → logprob: -11.258113861083984
    7. '   ' → logprob: -11.758113861083984
    8. '	for' → logprob: -12.008113861083984
    9. '	
' → logprob: -12.008113861083984
    10. '        
' → logprob: -12.258113861083984

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001100683817639947
    2. 'for' → logprob: -7.001100540161133
    3. ' for' → logprob: -9.001100540161133
    4. '    
' → logprob: -9.876100540161133
    5. '   ' → logprob: -11.876100540161133
    6. '	for' → logprob: -12.001100540161133
    7. '  ' → logprob: -15.251100540161133
    8. '
' → logprob: -15.376100540161133
    9. '    ' → logprob: -15.376100540161133
    10. '       ' → logprob: -15.626100540161133

Token 459: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049150895327329636
    2. 'for' → logprob: -3.0491509437561035
    3. ' for' → logprob: -7.5491509437561035
    4. '    
' → logprob: -10.424150466918945
    5. '	for' → logprob: -12.674150466918945
    6. '
' → logprob: -13.549150466918945
    7. '   ' → logprob: -13.799150466918945
    8. ' ' → logprob: -14.424150466918945
    9. '  ' → logprob: -14.549150466918945
    10. '       ' → logprob: -15.799150466918945

Token 460: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.0
    3. '#' → logprob: -18.125
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -20.125
    6. '	for' → logprob: -20.875
    7. 'pour' → logprob: -21.125
    8. 'from' → logprob: -22.625
    9. 'For' → logprob: -23.0
    10. 'i' → logprob: -23.0

Token 461: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2682403028011322
    2. 'cle' → logprob: -1.7682403326034546
    3. 'r' → logprob: -3.643240213394165
    4. '   ' → logprob: -4.018240451812744
    5. 'for' → logprob: -4.268240451812744
    6. 'cles' → logprob: -5.643240451812744
    7. ' for' → logprob: -7.018240451812744
    8. 'cl' → logprob: -7.143240451812744
    9. 'ch' → logprob: -7.643240451812744
    10. 'k' → logprob: -8.768239974975586

Token 462: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5850422978401184
    2. '   ' → logprob: -0.8350422978401184
    3. 'for' → logprob: -4.710042476654053
    4. '	for' → logprob: -10.585041999816895
    5. '  ' → logprob: -11.710041999816895
    6. ' ' → logprob: -11.710041999816895
    7. '    ' → logprob: -12.085041999816895
    8. ' pour' → logprob: -13.210041999816895
    9. ' in' → logprob: -13.460041999816895
    10. ' over' → logprob: -13.585041999816895

Token 463: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761185884475708
    2. 'for' → logprob: -0.8261185884475708
    3. ' range' → logprob: -9.826118469238281
    4. ' i' → logprob: -9.951118469238281
    5. ' j' → logprob: -10.826118469238281
    6. 'range' → logprob: -11.326118469238281
    7. ' ' → logprob: -11.576118469238281
    8. 's' → logprob: -11.826118469238281
    9. ' in' → logprob: -11.826118469238281
    10. ' s' → logprob: -12.701118469238281

Token 464: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.00020807012333534658
    2. 'ours' → logprob: -9.250207901000977
    3. 'oure' → logprob: -9.625207901000977
    4. 'our' → logprob: -10.250207901000977
    5. 'ourse' → logprob: -12.000207901000977
    6. '#' → logprob: -13.250207901000977
    7. '
' → logprob: -14.000207901000977
    8. 'court' → logprob: -14.875207901000977
    9. '[' → logprob: -15.125207901000977
    10. '**' → logprob: -15.500207901000977

Token 465: ' chaque' (ID: 21194)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18194648623466492
    2. ' d' → logprob: -2.6819465160369873
    3. 'range' → logprob: -2.8069465160369873
    4. ' range' → logprob: -3.3069465160369873
    5. 'e' → logprob: -8.431946754455566
    6. ' la' → logprob: -9.056946754455566
    7. 'j' → logprob: -9.181946754455566
    8. 'la' → logprob: -9.869446754455566
    9. 'r' → logprob: -10.119446754455566
    10. 'k' → logprob: -10.431946754455566

Token 466: ' élément' (ID: 99627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6689451336860657
    2. ' e' → logprob: -1.168945074081421
    3. 'v' → logprob: -3.793945074081421
    4. 'elem' → logprob: -3.793945074081421
    5. 'element' → logprob: -3.793945074081421
    6. ' v' → logprob: -4.0439453125
    7. 'val' → logprob: -4.2939453125
    8. 'j' → logprob: -4.4189453125
    9. ' j' → logprob: -4.6689453125
    10. ' val' → logprob: -4.7939453125

Token 467: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05664661154150963
    2. ' in' → logprob: -3.9316465854644775
    3. '   ' → logprob: -4.556646823883057
    4. 'de' → logprob: -4.806646823883057
    5. ' of' → logprob: -5.181646823883057
    6. ' d' → logprob: -5.306646823883057
    7. 'd' → logprob: -5.931646823883057
    8. 'in' → logprob: -7.431646823883057
    9. ' ' → logprob: -7.556646823883057
    10. ' dans' → logprob: -7.806646823883057

Token 468: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014169031754136086
    2. ' d' → logprob: -4.264169216156006
    3. ' range' → logprob: -13.014168739318848
    4. 'range' → logprob: -13.014168739318848
    5. ' ' → logprob: -14.389168739318848
    6. '   ' → logprob: -15.639168739318848
    7. '  ' → logprob: -15.889168739318848
    8. '[d' → logprob: -16.264169692993164
    9. '	d' → logprob: -17.264169692993164
    10. '[' → logprob: -17.764169692993164

Token 469: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06840817630290985
    2. ':
' → logprob: -2.943408250808716
    3. '   ' → logprob: -4.318408012390137
    4. ' :' → logprob: -9.443408012390137
    5. ' :
' → logprob: -11.568408012390137
    6. 'for' → logprob: -12.193408012390137
    7. ',' → logprob: -12.318408012390137
    8. ':
' → logprob: -12.568408012390137
    9. ' for' → logprob: -13.068408012390137
    10. ':\' → logprob: -13.193408012390137

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019577475264668465
    2. 'for' → logprob: -4.519577503204346
    3. ' for' → logprob: -4.769577503204346
    4. '	for' → logprob: -12.144577026367188
    5. '    
' → logprob: -12.894577026367188
    6. '   ' → logprob: -13.894577026367188
    7. '
' → logprob: -15.519577026367188
    8. ':' → logprob: -15.769577026367188
    9. '       ' → logprob: -16.019577026367188
    10. '   ' → logprob: -16.519577026367188

Token 471: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.41286593675613403
    2. '   ' → logprob: -1.1628658771514893
    3. ' for' → logprob: -3.6628658771514893
    4. '	for' → logprob: -14.41286563873291
    5. '```' → logprob: -15.28786563873291
    6. '    
' → logprob: -15.53786563873291
    7. '   ' → logprob: -17.662866592407227
    8. '       ' → logprob: -18.037866592407227
    9. ' ' → logprob: -18.662866592407227
    10. ':' → logprob: -18.912866592407227

Token 472: ' i' (ID: 575)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0806341171264648
    2. 'val' → logprob: -1.3306341171264648
    3. 'elem' → logprob: -1.9556341171264648
    4. 'e' → logprob: -2.330634117126465
    5. 'v' → logprob: -2.455634117126465
    6. 'el' → logprob: -3.955634117126465
    7. 'element' → logprob: -4.705634117126465
    8. 'num' → logprob: -4.830634117126465
    9. 'dd' → logprob: -4.830634117126465
    10. 'y' → logprob: -5.080634117126465

Token 473: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07060204446315765
    2. 'in' → logprob: -2.6956019401550293
    3. 'd' → logprob: -7.820601940155029
    4. ' ' → logprob: -9.445602416992188
    5. ',' → logprob: -9.695602416992188
    6. '   ' → logprob: -9.820602416992188
    7. 'n' → logprob: -10.945602416992188
    8. '  ' → logprob: -11.320602416992188
    9. 's' → logprob: -11.570602416992188
    10. '	in' → logprob: -11.820602416992188

Token 474: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26432356238365173
    2. 'range' → logprob: -1.8893235921859741
    3. ' range' → logprob: -2.7643234729766846
    4. ' d' → logprob: -4.014323711395264
    5. '   ' → logprob: -11.639323234558105
    6. ' ' → logprob: -12.264323234558105
    7. '  ' → logprob: -13.201823234558105
    8. '	d' → logprob: -13.576823234558105
    9. 'r' → logprob: -13.639323234558105
    10. '	range' → logprob: -13.764323234558105

Token 475: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021938022691756487
    2. ':
' → logprob: -6.127193927764893
    3. '   ' → logprob: -12.252193450927734
    4. ' :' → logprob: -13.127193450927734
    5. ':
' → logprob: -14.127193450927734
    6. '):' → logprob: -14.502193450927734
    7. '       ' → logprob: -16.002193450927734
    8. ':

' → logprob: -16.127193450927734
    9. '[' → logprob: -16.377193450927734
    10. '[:' → logprob: -17.002193450927734

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007591722067445517
    2. '   ' → logprob: -5.507591724395752
    3. ':' → logprob: -6.257591724395752
    4. '        
' → logprob: -8.132591247558594
    5. '    ' → logprob: -8.632591247558594
    6. '    
' → logprob: -8.757591247558594
    7. '	   ' → logprob: -8.882591247558594
    8. ' ' → logprob: -9.132591247558594
    9. '	' → logprob: -9.132591247558594
    10. '<|end|>' → logprob: -9.507591247558594

Token 477: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1339583843946457
    2. 'di' → logprob: -2.883958339691162
    3. ' di' → logprob: -3.383958339691162
    4. ' if' → logprob: -3.758958339691162
    5. 'if' → logprob: -4.633958339691162
    6. '   ' → logprob: -6.633958339691162
    7. 'd' → logprob: -7.883958339691162
    8. '```' → logprob: -9.38395881652832
    9. 'z' → logprob: -9.75895881652832
    10. '      ' → logprob: -10.07145881652832

Token 478: ' Calcul' (ID: 57243)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.10215753316879272
    2. 'r' → logprob: -3.1021575927734375
    3. 'if' → logprob: -4.1021575927734375
    4. 'rem' → logprob: -4.2271575927734375
    5. 're' → logprob: -4.8521575927734375
    6. 'rest' → logprob: -4.9771575927734375
    7. ' di' → logprob: -6.4771575927734375
    8. '   ' → logprob: -6.7271575927734375
    9. 'reste' → logprob: -7.3521575927734375
    10. 'res' → logprob: -7.6021575927734375

Token 479: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1310405731201172
    2. ' =' → logprob: -1.3810405731201172
    3. ' de' → logprob: -1.6310405731201172
    4. ' du' → logprob: -3.006040573120117
    5. ' le' → logprob: -3.006040573120117
    6. ' d' → logprob: -4.006040573120117
    7. '   ' → logprob: -4.006040573120117
    8. '        ' → logprob: -4.381040573120117
    9. '.append' → logprob: -4.506040573120117
    10. 'r' → logprob: -4.881040573120117

Token 480: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.49951672554016113
    2. 'r' → logprob: -1.4995167255401611
    3. 'rest' → logprob: -2.749516725540161
    4. ' reste' → logprob: -3.249516725540161
    5. 'i' → logprob: -3.374516725540161
    6. ' r' → logprob: -4.999516487121582
    7. ' i' → logprob: -4.999516487121582
    8. 'res' → logprob: -5.124516487121582
    9. 're' → logprob: -5.249516487121582
    10. 'd' → logprob: -6.499516487121582

Token 481: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17363989353179932
    2. '=' → logprob: -2.2986397743225098
    3. ' de' → logprob: -3.7986397743225098
    4. '       ' → logprob: -4.04863977432251
    5. '        ' → logprob: -4.42363977432251
    6. ' modulo' → logprob: -6.17363977432251
    7. '           ' → logprob: -6.79863977432251
    8. 'de' → logprob: -7.67363977432251
    9. 'mod' → logprob: -7.67363977432251
    10. ',' → logprob: -7.79863977432251

Token 482: 'mod' (ID: 4847)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20327092707157135
    2. ' i' → logprob: -1.7032709121704102
    3. '   ' → logprob: -6.95327091217041
    4. ')' → logprob: -7.45327091217041
    5. '       ' → logprob: -9.82827091217041
    6. ')i' → logprob: -10.20327091217041
    7. ' =' → logprob: -10.45327091217041
    8. ' )' → logprob: -10.45327091217041
    9. '    ' → logprob: -11.07827091217041
    10. '%' → logprob: -11.07827091217041

Token 483: 'ulo' (ID: 5953)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.37470877170562744
    2. ' i' → logprob: -2.124708652496338
    3. ')' → logprob: -2.999708652496338
    4. 'ulo' → logprob: -3.124708652496338
    5. 'm' → logprob: -3.624708652496338
    6. 'i' → logprob: -3.749708652496338
    7. 'u' → logprob: -4.499708652496338
    8. 'ulaire' → logprob: -4.749708652496338
    9. ' )' → logprob: -5.124708652496338
    10. ' ' → logprob: -5.624708652496338

Token 484: ')' (ID: 8)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6753501296043396
    2. ')' → logprob: -1.0503501892089844
    3. ' i' → logprob: -2.8003501892089844
    4. 'm' → logprob: -3.1753501892089844
    5. ' )' → logprob: -4.175350189208984
    6. ' d' → logprob: -4.675350189208984
    7. ' de' → logprob: -5.800350189208984
    8. '   ' → logprob: -5.925350189208984
    9. 'i' → logprob: -6.050350189208984
    10. ',' → logprob: -6.300350189208984

Token 485: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3348463475704193
    2. '       ' → logprob: -1.7098463773727417
    3. '=' → logprob: -2.959846258163452
    4. ' de' → logprob: -3.334846258163452
    5. '        ' → logprob: -5.459846496582031
    6. '           ' → logprob: -5.709846496582031
    7. '   ' → logprob: -6.459846496582031
    8. ':' → logprob: -6.959846496582031
    9. 'de' → logprob: -7.084846496582031
    10. ' modulo' → logprob: -7.084846496582031

Token 486: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07890333980321884
    2. ' i' → logprob: -2.5789034366607666
    3. '(i' → logprob: -12.203903198242188
    4. '   ' → logprob: -12.328903198242188
    5. ' ' → logprob: -13.578903198242188
    6. 'd' → logprob: -14.078903198242188
    7. ' (' → logprob: -14.203903198242188
    8. '	i' → logprob: -14.828903198242188
    9. '`' → logprob: -15.578903198242188
    10. '[i' → logprob: -15.828903198242188

Token 487: ' div' (ID: 4223)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16743257641792297
    2. '%' → logprob: -2.9174325466156006
    3. '       ' → logprob: -3.4174325466156006
    4. ',' → logprob: -4.29243278503418
    5. '   ' → logprob: -4.79243278503418
    6. ' modulo' → logprob: -4.91743278503418
    7. ')' → logprob: -5.29243278503418
    8. ' de' → logprob: -5.29243278503418
    9. '        ' → logprob: -5.41743278503418
    10. '           ' → logprob: -5.91743278503418

Token 488: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.0037014971021562815
    2. 'm' → logprob: -6.503701686859131
    3. 'ise' → logprob: -7.753701686859131
    4. 'isible' → logprob: -7.753701686859131
    5. 'mod' → logprob: -7.878701686859131
    6. 'isée' → logprob: -8.378701210021973
    7. 'u' → logprob: -8.628701210021973
    8. 'isés' → logprob: -8.878701210021973
    9. '   ' → logprob: -9.003701210021973
    10. 'ision' → logprob: -10.003701210021973

Token 489: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.2561793327331543
    2. 'm' → logprob: -2.0061793327331543
    3. ' par' → logprob: -2.5061793327331543
    4. ' m' → logprob: -5.631179332733154
    5. ' ' → logprob: -5.881179332733154
    6. '   ' → logprob: -6.881179332733154
    7. '%m' → logprob: -7.506179332733154
    8. '%' → logprob: -7.756179332733154
    9. '```' → logprob: -8.506179809570312
    10. '  ' → logprob: -8.631179809570312

Token 490: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.20144452154636383
    2. 'm' → logprob: -1.7014445066452026
    3. ' ' → logprob: -10.576444625854492
    4. ' ' → logprob: -12.701444625854492
    5. '	m' → logprob: -13.826444625854492
    6. '   ' → logprob: -14.951444625854492
    7. ' ' → logprob: -15.201444625854492
    8. '```' → logprob: -15.451444625854492
    9. ',' → logprob: -15.951444625854492
    10. '(m' → logprob: -16.326444625854492

Token 491: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005305619910359383
    2. ',' → logprob: -6.130305767059326
    3. ':' → logprob: -6.130305767059326
    4. ' =' → logprob: -7.880305767059326
    5. '=' → logprob: -8.755305290222168
    6. '   ' → logprob: -9.005305290222168
    7. '           ' → logprob: -10.005305290222168
    8. ':
' → logprob: -10.005305290222168
    9. '.' → logprob: -10.255305290222168
    10. 'd' → logprob: -10.380305290222168

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034032361581921577
    2. 'di' → logprob: -6.628403186798096
    3. ' di' → logprob: -6.753403186798096
    4. '        
' → logprob: -8.503403663635254
    5. 'rest' → logprob: -9.128403663635254
    6. '=' → logprob: -9.628403663635254
    7. ',' → logprob: -9.878403663635254
    8. ':' → logprob: -9.878403663635254
    9. ' =' → logprob: -10.003403663635254
    10. '   ' → logprob: -10.128403663635254

Token 493: ' #' (ID: 1069)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.5725775361061096
    2. 'r' → logprob: -1.1975774765014648
    3. '   ' → logprob: -3.072577476501465
    4. ' di' → logprob: -3.447577476501465
    5. 're' → logprob: -4.072577476501465
    6. 'rest' → logprob: -4.572577476501465
    7. ' r' → logprob: -4.697577476501465
    8. 'rem' → logprob: -4.697577476501465
    9. 'd' → logprob: -6.322577476501465
    10. 'res' → logprob: -6.447577476501465

Token 494: ' L' (ID: 451)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.2846393585205078
    2. 'r' → logprob: -2.034639358520508
    3. 'rem' → logprob: -3.159639358520508
    4. 're' → logprob: -3.534639358520508
    5. ' di' → logprob: -3.909639358520508
    6. 'rest' → logprob: -4.534639358520508
    7. 'reste' → logprob: -5.034639358520508
    8. '   ' → logprob: -6.284639358520508
    9. ' r' → logprob: -6.784639358520508
    10. 'mod' → logprob: -6.909639358520508

Token 495: ''op' (ID: 70747)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.3826393485069275
    2. 'di' → logprob: -1.6326394081115723
    3. 're' → logprob: -3.8826394081115723
    4. 'reste' → logprob: -3.8826394081115723
    5. 'rest' → logprob: -4.257639408111572
    6. ' remainder' → logprob: -4.257639408111572
    7. '   ' → logprob: -4.382639408111572
    8. ' reste' → logprob: -4.632639408111572
    9. 'r' → logprob: -4.757639408111572
    10. ' rest' → logprob: -5.257639408111572

Token 496: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4853629767894745
    2. '=' → logprob: -1.6103630065917969
    3. 'ération' → logprob: -2.235363006591797
    4. 'ér' → logprob: -3.985363006591797
    5. 'érateur' → logprob: -4.610363006591797
    6. 'module' → logprob: -4.860363006591797
    7. 'reste' → logprob: -4.860363006591797
    8. 'é' → logprob: -4.860363006591797
    9. 'd' → logprob: -5.360363006591797
    10. 'code' → logprob: -6.110363006591797

Token 497: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0912574976682663
    2. ' %' → logprob: -2.4662575721740723
    3. '=' → logprob: -7.091257572174072
    4. ' =' → logprob: -7.341257572174072
    5. ' %=' → logprob: -7.716257572174072
    6. 'mod' → logprob: -8.966257095336914
    7. '%=' → logprob: -9.591257095336914
    8. ' ' → logprob: -9.841257095336914
    9. ' modulo' → logprob: -10.091257095336914
    10. ' de' → logprob: -11.091257095336914

Token 498: ' donne' (ID: 30004)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.4218406677246094
    2. ' i' → logprob: -1.7968406677246094
    3. '   ' → logprob: -2.1718406677246094
    4. '%' → logprob: -2.7968406677246094
    5. ')' → logprob: -2.7968406677246094
    6. ' =' → logprob: -3.0468406677246094
    7. '=' → logprob: -3.1718406677246094
    8. ' modulo' → logprob: -3.1718406677246094
    9. '    ' → logprob: -3.2968406677246094
    10. '       ' → logprob: -3.5468406677246094

Token 499: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.10736216604709625
    2. 'le' → logprob: -2.9823622703552246
    3. 'i' → logprob: -3.4823622703552246
    4. ' i' → logprob: -3.9823622703552246
    5. ' la' → logprob: -7.232362270355225
    6. ' ' → logprob: -7.357362270355225
    7. '<|end|>' → logprob: -9.482361793518066
    8. 'la' → logprob: -9.732361793518066
    9. '```' → logprob: -10.232361793518066
    10. '_le' → logprob: -10.482361793518066

Token 500: ' reste' (ID: 26769)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.0670111179351807
    2. 'i' → logprob: -1.4420111179351807
    3. 'reste' → logprob: -1.6920111179351807
    4. ' i' → logprob: -2.5670111179351807
    5. '%' → logprob: -2.6920111179351807
    6. ' reste' → logprob: -3.8170111179351807
    7. 'mod' → logprob: -3.9420111179351807
    8. ' remainder' → logprob: -4.317010879516602
    9. ' rest' → logprob: -4.567010879516602
    10. 'r' → logprob: -4.692010879516602

Token 501: ' après' (ID: 16460)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0884803533554077
    2. ' i' → logprob: -1.0884803533554077
    3. ' modulo' → logprob: -1.5884803533554077
    4. 'i' → logprob: -2.9634804725646973
    5. 'mod' → logprob: -3.7134804725646973
    6. '       ' → logprob: -4.588480472564697
    7. 'de' → logprob: -4.838480472564697
    8. ' mod' → logprob: -5.088480472564697
    9. '   ' → logprob: -5.213480472564697
    10. '(i' → logprob: -5.338480472564697

Token 502: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.3131733238697052
    2. ' division' → logprob: -2.188173294067383
    3. 'div' → logprob: -2.563173294067383
    4. ' la' → logprob: -3.188173294067383
    5. 'la' → logprob: -4.188173294067383
    6. 'l' → logprob: -4.938173294067383
    7. 'm' → logprob: -5.188173294067383
    8. 'mod' → logprob: -5.438173294067383
    9. ' i' → logprob: -5.813173294067383
    10. ' l' → logprob: -7.188173294067383

Token 503: ' entière' (ID: 61583)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5925623178482056
    2. ' i' → logprob: -1.5925623178482056
    3. '   ' → logprob: -1.8425623178482056
    4. '       ' → logprob: -3.092562198638916
    5. ' modulo' → logprob: -4.717562198638916
    6. 'i' → logprob: -4.842562198638916
    7. '           ' → logprob: -5.342562198638916
    8. 'de' → logprob: -5.842562198638916
    9. 'mod' → logprob: -6.217562198638916
    10. ',' → logprob: -6.342562198638916

Token 504: '.
' (ID: 558)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6432644128799438
    2. '   ' → logprob: -1.3932644128799438
    3. ' de' → logprob: -2.2682642936706543
    4. '       ' → logprob: -3.1432642936706543
    5. 'i' → logprob: -3.2682642936706543
    6. '(i' → logprob: -4.018264293670654
    7. ',' → logprob: -5.393264293670654
    8. '.' → logprob: -5.893264293670654
    9. '           ' → logprob: -5.893264293670654
    10. ')' → logprob: -5.893264293670654

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6101052165031433
    2. ' di' → logprob: -1.360105276107788
    3. 'di' → logprob: -1.860105276107788
    4. ' remainder' → logprob: -4.110105037689209
    5. 'rest' → logprob: -4.610105037689209
    6. ' rest' → logprob: -5.485105037689209
    7. 're' → logprob: -5.735105037689209
    8. '   ' → logprob: -6.235105037689209
    9. 'r' → logprob: -6.610105037689209
    10. 'd' → logprob: -6.610105037689209

Token 506: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' (adapté à ' di') → logprob: -0.3215523362159729
    2. '   ' → logprob: -2.321552276611328
    3. 'dz' → logprob: -2.696552276611328
    4. ' di' → logprob: -3.571552276611328
    5. 'rest' → logprob: -3.946552276611328
    6. 're' → logprob: -3.946552276611328
    7. 'r' → logprob: -4.196552276611328
    8. 'rem' → logprob: -4.696552276611328
    9. '       ' → logprob: -5.571552276611328
    10. ' dz' → logprob: -5.696552276611328

Token 507: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006122887134552002
    2. '.' → logprob: -5.131123065948486
    3. '=' → logprob: -8.881122589111328
    4. ' =' → logprob: -10.881122589111328
    5. 'append' → logprob: -11.256122589111328
    6. ' .' → logprob: -11.881122589111328
    7. '.app' → logprob: -12.006122589111328
    8. '.ap' → logprob: -12.381122589111328
    9. '=i' → logprob: -12.756122589111328
    10. '.=' → logprob: -13.506122589111328

Token 508: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.145118848304264e-05
    2. '(' → logprob: -10.125051498413086
    3. 'i' → logprob: -11.500051498413086
    4. ' (' → logprob: -14.000051498413086
    5. ' i' → logprob: -15.000051498413086
    6. '((' → logprob: -17.000051498413086
    7. '(int' → logprob: -19.000051498413086
    8. '[i' → logprob: -19.250051498413086
    9. '{i' → logprob: -19.375051498413086
    10. '(x' → logprob: -19.750051498413086

Token 509: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00431451853364706
    2. '%' → logprob: -5.504314422607422
    3. '%m' → logprob: -8.379314422607422
    4. '%d' → logprob: -12.754314422607422
    5. ' ' → logprob: -13.504314422607422
    6. '%i' → logprob: -13.754314422607422
    7. ')' → logprob: -15.004314422607422
    8. ' ' → logprob: -15.379314422607422
    9. '%c' → logprob: -15.629314422607422
    10. '%n' → logprob: -15.754314422607422

Token 510: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3868745267391205
    2. ' m' → logprob: -1.1368745565414429
    3. ')' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.011874198913574
    5. '	m' → logprob: -15.011874198913574
    6. '   ' → logprob: -15.261874198913574
    7. ')m' → logprob: -15.261874198913574
    8. '  ' → logprob: -16.26187515258789
    9. ' ' → logprob: -16.38687515258789
    10. '(m' → logprob: -16.63687515258789

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ')
' → logprob: -10.87502384185791
    3. ' )' → logprob: -12.37502384185791
    4. '   ' → logprob: -14.62502384185791
    5. ')

' → logprob: -16.625022888183594
    6. '))' → logprob: -17.875022888183594
    7. '),' → logprob: -18.125022888183594
    8. ')#' → logprob: -18.250022888183594
    9. ' ' → logprob: -18.500022888183594
    10. ')
' → logprob: -18.750022888183594

Token 512: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025646928697824478
    2. '        
' → logprob: -4.025647163391113
    3. 'dz' → logprob: -5.400647163391113
    4. 'if' → logprob: -7.150647163391113
    5. '
' → logprob: -7.900647163391113
    6. '    
' → logprob: -8.025647163391113
    7. '       
' → logprob: -8.025647163391113
    8. ' if' → logprob: -8.150647163391113
    9. '   ' → logprob: -8.150647163391113
    10. '           ' → logprob: -9.400647163391113

Token 513: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.118697889149189
    2. '        
' → logprob: -3.3686978816986084
    3. 'dz' → logprob: -3.4936978816986084
    4. '   ' → logprob: -4.3686981201171875
    5. 'if' → logprob: -4.3686981201171875
    6. '    
' → logprob: -4.9936981201171875
    7. '
' → logprob: -4.9936981201171875
    8. ' if' → logprob: -5.8686981201171875
    9. '   
' → logprob: -6.6186981201171875
    10. '       
' → logprob: -6.7436981201171875

Token 514: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2041032314300537
    2. 'dz' → logprob: -2.0791032314300537
    3. 'if' → logprob: -2.9541032314300537
    4. '   ' → logprob: -5.579103469848633
    5. ' if' → logprob: -6.079103469848633
    6. ' dz' → logprob: -6.954103469848633
    7. '        
' → logprob: -9.079103469848633
    8. '           ' → logprob: -9.329103469848633
    9. 'z' → logprob: -10.079103469848633
    10. '0' → logprob: -10.079103469848633

Token 515: ' ajoute' (ID: 91611)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13323183357715607
    2. ' continue' → logprob: -3.0082318782806396
    3. 'contin' → logprob: -3.1332318782806396
    4. '   ' → logprob: -5.0082316398620605
    5. 'aj' → logprob: -5.5082316398620605
    6. 'continu' → logprob: -5.5082316398620605
    7. '#' → logprob: -5.8832316398620605
    8. 's' → logprob: -6.1332316398620605
    9. '    ' → logprob: -6.3832316398620605
    10. '       ' → logprob: -7.0082316398620605

Token 516: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5413169264793396
    2. '(i' → logprob: -1.2913169860839844
    3. '(di' → logprob: -2.0413169860839844
    4. 'di' → logprob: -5.166316986083984
    5. '(
' → logprob: -6.166316986083984
    6. '(d' → logprob: -6.416316986083984
    7. '0' → logprob: -6.916316986083984
    8. ' (' → logprob: -7.166316986083984
    9. ')' → logprob: -8.291316986083984
    10. '(m' → logprob: -8.291316986083984

Token 517: ' reste' (ID: 26769)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0217761993408203
    2. ' espace' → logprob: -1.0217761993408203
    3. ' reste' → logprob: -3.0217761993408203
    4. ' )' → logprob: -3.5217761993408203
    5. 'space' → logprob: -3.6467761993408203
    6. '%' → logprob: -3.8967761993408203
    7. ' modulo' → logprob: -4.02177619934082
    8. ' space' → logprob: -4.02177619934082
    9. 're' → logprob: -4.77177619934082
    10. ')' → logprob: -4.89677619934082

Token 518: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' la' (ID: 557)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.0040831477381289005
    2. 'la' → logprob: -5.504083156585693
    3. ' di' → logprob: -12.379082679748535
    4. ' la' → logprob: -15.379082679748535
    5. 'd' → logprob: -15.879082679748535
    6. 'l' → logprob: -17.00408363342285
    7. 'da' → logprob: -17.25408363342285
    8. 'li' → logprob: -18.25408363342285
    9. '```' → logprob: -18.87908363342285
    10. ' ' → logprob: -19.37908363342285

Token 520: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3881175220012665
    2. 'di' → logprob: -1.1381175518035889
    3. 'list' → logprob: -7.01311731338501
    4. ' liste' → logprob: -8.763117790222168
    5. 'lista' → logprob: -9.763117790222168
    6. 'li' → logprob: -9.763117790222168
    7. 'variable' → logprob: -10.388117790222168
    8. '```' → logprob: -10.888117790222168
    9. ' di' → logprob: -11.263117790222168
    10. 'lis' → logprob: -12.638117790222168

Token 521: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.0370017290115356
    2. '<|end|>' → logprob: -1.2870017290115356
    3. '    
' → logprob: -1.5370017290115356
    4. '   ' → logprob: -2.662001609802246
    5. '.' → logprob: -3.287001609802246
    6. 'dz' → logprob: -4.162001609802246
    7. '  ' → logprob: -5.162001609802246
    8. '    ' → logprob: -5.412001609802246
    9. '        
' → logprob: -5.662001609802246
    10. ')' → logprob: -5.787001609802246

Token 522: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05239402502775192
    2. 'dz' → logprob: -4.177393913269043
    3. '   ' → logprob: -4.302393913269043
    4. 'if' → logprob: -4.927393913269043
    5. ' if' → logprob: -4.927393913269043
    6. '        
' → logprob: -5.427393913269043
    7. '    
' → logprob: -7.052393913269043
    8. '
' → logprob: -7.927393913269043
    9. '```' → logprob: -8.052393913269043
    10. '  
' → logprob: -8.552393913269043

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04330368712544441
    2. 'if' → logprob: -4.293303489685059
    3. 'dz' → logprob: -4.293303489685059
    4. ' if' → logprob: -4.418303489685059
    5. '   ' → logprob: -6.418303489685059
    6. ' dz' → logprob: -7.043303489685059
    7. '```' → logprob: -8.793303489685059
    8. 'z' → logprob: -9.418303489685059
    9. '           ' → logprob: -9.668303489685059
    10. '        
' → logprob: -9.668303489685059

Token 525: ' #' (ID: 1069)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.12759755551815033
    2. 'if' → logprob: -2.1275975704193115
    3. '   ' → logprob: -8.25259780883789
    4. '       ' → logprob: -8.50259780883789
    5. ' if' → logprob: -9.12759780883789
    6. ' dz' → logprob: -9.62759780883789
    7. '```' → logprob: -11.12759780883789
    8. '           ' → logprob: -13.00259780883789
    9. 'Dz' → logprob: -13.12759780883789
    10. 'z' → logprob: -13.75259780883789

Token 526: ' On' (ID: 2160)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.5764924883842468
    2. 'if' → logprob: -0.8264924883842468
    3. 'If' → logprob: -8.701492309570312
    4. '   ' → logprob: -8.826492309570312
    5. ' if' → logprob: -9.951492309570312
    6. '       ' → logprob: -9.951492309570312
    7. ' dz' → logprob: -10.576492309570312
    8. 'Dz' → logprob: -11.326492309570312
    9. '           ' → logprob: -11.826492309570312
    10. '```' → logprob: -11.888992309570312

Token 527: ' vér' (ID: 42524)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11504220217466354
    2. 'append' → logprob: -2.365042209625244
    3. '.' → logprob: -4.490042209625244
    4. 'if' → logprob: -6.240042209625244
    5. ' append' → logprob: -7.490042209625244
    6. ' if' → logprob: -7.615042209625244
    7. '   ' → logprob: -8.865041732788086
    8. 'dz' → logprob: -8.865041732788086
    9. ' .' → logprob: -9.865041732788086
    10. 'z' → logprob: -9.865041732788086

Token 528: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0010657975217327476
    2. 'if' → logprob: -6.876065731048584
    3. 'ifi' → logprob: -11.251066207885742
    4. 'ife' → logprob: -11.751066207885742
    5. 'f' → logprob: -13.501066207885742
    6. 'ifiez' → logprob: -13.501066207885742
    7. 'i' → logprob: -13.626066207885742
    8. 'rif' → logprob: -13.626066207885742
    9. 'a' → logprob: -13.751066207885742
    10. 'ite' → logprob: -14.251066207885742

Token 529: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9699240326881409
    2. 'si' → logprob: -0.9699240326881409
    3. ' si' → logprob: -1.969923973083496
    4. '       ' → logprob: -2.969923973083496
    5. '   ' → logprob: -3.719923973083496
    6. ' if' → logprob: -3.969923973083496
    7. 's' → logprob: -5.219923973083496
    8. '        
' → logprob: -7.594923973083496
    9. '    ' → logprob: -7.969923973083496
    10. ' ' → logprob: -8.219923973083496

Token 530: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06457997858524323
    2. ' i' → logprob: -2.814579963684082
    3. '(i' → logprob: -6.064579963684082
    4. ' (' → logprob: -8.314579963684082
    5. '(' → logprob: -10.564579963684082
    6. 'd' → logprob: -12.564579963684082
    7. ' ' → logprob: -12.814579963684082
    8. '   ' → logprob: -12.814579963684082
    9. ' ' → logprob: -13.939579963684082
    10. 'l' → logprob: -14.189579963684082

Token 531: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25198692083358765
    2. ' %' → logprob: -1.5019869804382324
    3. '%i' → logprob: -10.751986503601074
    4. '%d' → logprob: -11.626986503601074
    5. '%m' → logprob: -12.001986503601074
    6. '%e' → logprob: -12.126986503601074
    7. ' ' → logprob: -12.251986503601074
    8. '%n' → logprob: -12.626986503601074
    9. '%s' → logprob: -12.876986503601074
    10. ' est' → logprob: -13.501986503601074

Token 532: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.14379915595054626
    2. 'div' → logprob: -2.018799066543579
    3. '%' → logprob: -7.643799304962158
    4. '0' → logprob: -8.143798828125
    5. ' div' → logprob: -9.393798828125
    6. '%d' → logprob: -9.768798828125
    7. 'multip' → logprob: -10.018798828125
    8. 'multiple' → logprob: -10.018798828125
    9. ' divis' → logprob: -10.268798828125
    10. ' %' → logprob: -11.143798828125

Token 533: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.06997811794281006
    2. ' par' → logprob: -2.6949782371520996
    3. '(m' → logprob: -11.569977760314941
    4. '_par' → logprob: -11.694977760314941
    5. '(par' → logprob: -11.819977760314941
    6. '	par' → logprob: -12.569977760314941
    7. 'm' → logprob: -12.694977760314941
    8. 'Par' → logprob: -12.819977760314941
    9. ' ' → logprob: -12.944977760314941
    10. ' (' → logprob: -14.694977760314941

Token 534: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889506965875626
    2. ' m' → logprob: -2.578895092010498
    3. ' ' → logprob: -12.70389461517334
    4. ' ' → logprob: -14.20389461517334
    5. '   ' → logprob: -14.70389461517334
    6. '	m' → logprob: -14.95389461517334
    7. '```' → logprob: -15.70389461517334
    8. '(m' → logprob: -15.82889461517334
    9. '  ' → logprob: -16.328895568847656
    10. '`' → logprob: -16.953895568847656

Token 535: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5236536860466003
    2. '   ' → logprob: -2.023653745651245
    3. ':' → logprob: -2.523653745651245
    4. '.' → logprob: -3.023653745651245
    5. ' (' → logprob: -3.023653745651245
    6. ',' → logprob: -3.148653745651245
    7. '           ' → logprob: -3.648653745651245
    8. 'if' → logprob: -4.648653507232666
    9. ' if' → logprob: -5.648653507232666
    10. ' and' → logprob: -5.898653507232666

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7262108325958252
    2. ' if' → logprob: -1.6012108325958252
    3. '   ' → logprob: -2.226210832595825
    4. 'dz' → logprob: -2.351210832595825
    5. 'if' → logprob: -2.726210832595825
    6. ' dz' → logprob: -3.101210832595825
    7. '```' → logprob: -7.851210594177246
    8. ' ' → logprob: -8.851210594177246
    9. '        
' → logprob: -9.476210594177246
    10. '           ' → logprob: -9.851210594177246

Token 537: ' if' (ID: 538)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.7474360466003418
    2. 'if' (adapté à ' if') → logprob: -0.8724360466003418
    3. '       ' → logprob: -2.872436046600342
    4. ' if' → logprob: -3.247436046600342
    5. ' dz' → logprob: -4.997436046600342
    6. '   ' → logprob: -5.122436046600342
    7. '```' → logprob: -9.6224365234375
    8. ' ' → logprob: -9.7474365234375
    9. '           ' → logprob: -10.2474365234375
    10. '  ' → logprob: -10.6224365234375

Token 538: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31332018971443176
    2. 'i' → logprob: -1.3133201599121094
    3. '(i' → logprob: -10.18832015991211
    4. ' (' → logprob: -11.81332015991211
    5. ' ' → logprob: -12.43832015991211
    6. ' ' → logprob: -12.56332015991211
    7. '   ' → logprob: -12.93832015991211
    8. '	i' → logprob: -13.06332015991211
    9. '(' → logprob: -14.56332015991211
    10. 'd' → logprob: -15.81332015991211

Token 539: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2519404888153076
    2. ' %' → logprob: -1.5019404888153076
    3. ' ' → logprob: -12.126940727233887
    4. ' ' → logprob: -13.126940727233887
    5. '%i' → logprob: -13.376940727233887
    6. '%m' → logprob: -14.501940727233887
    7. '%e' → logprob: -14.751940727233887
    8. '%s' → logprob: -14.751940727233887
    9. '%d' → logprob: -14.876940727233887
    10. '%
' → logprob: -15.876940727233887

Token 540: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004625460598617792
    2. ' m' → logprob: -5.37962532043457
    3. ' ' → logprob: -12.62962532043457
    4. '   ' → logprob: -13.75462532043457
    5. '  ' → logprob: -14.87962532043457
    6. '	m' → logprob: -15.62962532043457
    7. '    ' → logprob: -16.12962532043457
    8. '```' → logprob: -16.37962532043457
    9. '0' → logprob: -17.69212532043457
    10. '
' → logprob: -17.75462532043457

Token 541: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029839113354682922
    2. ' ==' → logprob: -3.529839038848877
    3. '=' → logprob: -10.154839515686035
    4. ')==' → logprob: -10.654839515686035
    5. '==
' → logprob: -11.154839515686035
    6. ']==' → logprob: -12.404839515686035
    7. '()==' → logprob: -13.029839515686035
    8. ')' → logprob: -13.404839515686035
    9. '```' → logprob: -13.529839515686035
    10. '===' → logprob: -13.779839515686035

Token 542: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.750036239624023
    4. '  ' → logprob: -20.000036239624023
    5. '۰' → logprob: -20.125036239624023
    6. '=' → logprob: -20.250036239624023
    7. '00' → logprob: -20.375036239624023
    8. '==' → logprob: -20.750036239624023
    9. '```' → logprob: -20.875036239624023
    10. '    ' → logprob: -21.562536239624023

Token 543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.375051498413086
    4. '```' → logprob: -18.250051498413086
    5. '  ' → logprob: -18.625051498413086
    6. '۰' → logprob: -18.812551498413086
    7. '00' → logprob: -18.937551498413086
    8. '  ' → logprob: -20.062551498413086
    9. ' ' → logprob: -20.125051498413086
    10. '    ' → logprob: -20.125051498413086

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029049139469861984
    2. ':
' → logprob: -3.6540491580963135
    3. '       ' → logprob: -6.654048919677734
    4. '):' → logprob: -7.279048919677734
    5. '):
' → logprob: -7.904048919677734
    6. '           ' → logprob: -8.654048919677734
    7. ')' → logprob: -8.654048919677734
    8. '   ' → logprob: -10.529048919677734
    9. ' :' → logprob: -12.279048919677734
    10. ',' → logprob: -12.279048919677734

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09451144933700562
    2. '       ' → logprob: -2.7195115089416504
    3. ' dz' → logprob: -3.8445115089416504
    4. 'dz' → logprob: -6.59451150894165
    5. '   ' → logprob: -7.71951150894165
    6. ' ' → logprob: -8.844511032104492
    7. ':' → logprob: -9.094511032104492
    8. '          ' → logprob: -9.219511032104492
    9. '            
' → logprob: -9.219511032104492
    10. '	       ' → logprob: -9.594511032104492

Token 546: ' #' (ID: 1069)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.01253496203571558
    2. ' dz' → logprob: -4.887535095214844
    3. '           ' → logprob: -5.762535095214844
    4. '   ' → logprob: -6.512535095214844
    5. '               ' → logprob: -9.012535095214844
    6. '       ' → logprob: -9.262535095214844
    7. '1' → logprob: -10.637535095214844
    8. ' ' → logprob: -11.512535095214844
    9. 'Dz' → logprob: -11.887535095214844
    10. '  ' → logprob: -11.887535095214844

Token 547: ' Si' (ID: 7832)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.00252381875179708
    2. '   ' → logprob: -6.627523899078369
    3. ' dz' → logprob: -7.502523899078369
    4. '           ' → logprob: -7.627523899078369
    5. '  ' → logprob: -9.627523422241211
    6. '       ' → logprob: -9.877523422241211
    7. '	d' → logprob: -11.877523422241211
    8. '               ' → logprob: -12.002523422241211
    9. ' ' → logprob: -12.377523422241211
    10. 'd' → logprob: -12.377523422241211

Token 548: ' le' (ID: 505)
  Prédit: ' dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dz' → logprob: -0.017929717898368835
    2. 'dz' → logprob: -4.392929553985596
    3. '1' → logprob: -6.017929553985596
    4. '   ' → logprob: -7.017929553985596
    5. ' True' → logprob: -7.017929553985596
    6. 'True' → logprob: -7.767929553985596
    7. ' ' → logprob: -8.017930030822754
    8. '           ' → logprob: -9.392930030822754
    9. ' ' → logprob: -9.767930030822754
    10. '    ' → logprob: -9.892930030822754

Token 549: ' reste' (ID: 26769)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.0638856366276741
    2. 'di' → logprob: -3.5638856887817383
    3. ' dz' → logprob: -3.5638856887817383
    4. 'd' → logprob: -5.938885688781738
    5. 'i' → logprob: -7.313885688781738
    6. '1' → logprob: -7.438885688781738
    7. ' di' → logprob: -7.688885688781738
    8. '   ' → logprob: -8.813885688781738
    9. ' ' → logprob: -9.063885688781738
    10. '0' → logprob: -9.313885688781738

Token 550: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062188614159822464
    2. '==' → logprob: -2.8121886253356934
    3. 'di' → logprob: -9.812188148498535
    4. ' di' → logprob: -10.437188148498535
    5. '           ' → logprob: -10.687188148498535
    6. '   ' → logprob: -11.062188148498535
    7. '=' → logprob: -11.187188148498535
    8. ' ' → logprob: -11.312188148498535
    9. ')==' → logprob: -11.312188148498535
    10. ' =' → logprob: -11.562188148498535

Token 551: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0619698166847229
    2. ' ' → logprob: -2.811969757080078
    3. '=' → logprob: -14.561969757080078
    4. '  ' → logprob: -14.686969757080078
    5. '==' → logprob: -14.686969757080078
    6. '```' → logprob: -15.561969757080078
    7. ' ==' → logprob: -15.686969757080078
    8. '   ' → logprob: -15.936969757080078
    9. '1' → logprob: -16.061969757080078
    10. '<|end|>' → logprob: -16.311969757080078

Token 552: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07811204344034195
    2. ':' → logprob: -3.0781121253967285
    3. '       ' → logprob: -4.2031121253967285
    4. ',' → logprob: -4.4531121253967285
    5. ':
' → logprob: -6.4531121253967285
    6. '               ' → logprob: -7.5781121253967285
    7. '   ' → logprob: -9.45311164855957
    8. '          ' → logprob: -9.70311164855957
    9. ' :' → logprob: -9.95311164855957
    10. '):' → logprob: -10.07811164855957

Token 553: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13345424830913544
    2. 'dz' → logprob: -2.7584543228149414
    3. '               ' → logprob: -3.3834543228149414
    4. ' dz' → logprob: -3.6334543228149414
    5. '       ' → logprob: -7.133454322814941
    6. '   ' → logprob: -9.633454322814941
    7. '            ' → logprob: -9.758454322814941
    8. '          ' → logprob: -10.008454322814941
    9. ' ' → logprob: -10.258454322814941
    10. '              ' → logprob: -10.383454322814941

Token 554: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3476981818675995
    2. 'dz' → logprob: -2.222698211669922
    3. 'di' → logprob: -2.847698211669922
    4. '       ' → logprob: -3.847698211669922
    5. '   ' → logprob: -3.972698211669922
    6. ' est' → logprob: -4.597698211669922
    7. ' dz' → logprob: -4.722698211669922
    8. ')' → logprob: -4.722698211669922
    9. '.append' → logprob: -4.847698211669922
    10. ',' → logprob: -5.097698211669922

Token 555: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.02604050748050213
    2. 'div' → logprob: -3.776040554046631
    3. 'multiple' → logprob: -6.651040554046631
    4. ' multiple' → logprob: -6.651040554046631
    5. 'multip' → logprob: -9.651040077209473
    6. 'm' → logprob: -10.276040077209473
    7. 'bien' → logprob: -10.776040077209473
    8. ' un' → logprob: -11.151040077209473
    9. ' bien' → logprob: -11.526040077209473
    10. 'd' → logprob: -11.526040077209473

Token 556: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.894985556602478
    2. ' par' → logprob: -1.269985556602478
    3. 'par' → logprob: -1.894985556602478
    4. '       ' → logprob: -2.0199856758117676
    5. '               ' → logprob: -5.019985675811768
    6. ',' → logprob: -5.144985675811768
    7. '   ' → logprob: -5.269985675811768
    8. 'by' → logprob: -5.894985675811768
    9. ' by' → logprob: -6.144985675811768
    10. 'd' → logprob: -6.769985675811768

Token 557: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005234002135694027
    2. ' m' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.255233764648438
    4. ' ' → logprob: -17.880233764648438
    5. '	m' → logprob: -18.255233764648438
    6. '   ' → logprob: -20.630233764648438
    7. '```' → logprob: -21.130233764648438
    8. ' ' → logprob: -21.505233764648438
    9. '  ' → logprob: -21.880233764648438
    10. 'l' → logprob: -22.630233764648438

Token 558: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005439608823508024
    2. '       ' → logprob: -5.880439758300781
    3. ',' → logprob: -6.255439758300781
    4. ':' → logprob: -8.005439758300781
    5. '               ' → logprob: -9.255439758300781
    6. ':
' → logprob: -9.505439758300781
    7. '          ' → logprob: -9.755439758300781
    8. 'dz' → logprob: -10.630439758300781
    9. '            
' → logprob: -11.255439758300781
    10. ')' → logprob: -11.255439758300781

Token 559: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010830741375684738
    2. 'dz' → logprob: -5.385830879211426
    3. '       ' → logprob: -5.510830879211426
    4. ' dz' → logprob: -6.260830879211426
    5. '               ' → logprob: -8.760830879211426
    6. '   ' → logprob: -10.260830879211426
    7. '          ' → logprob: -11.010830879211426
    8. ' ' → logprob: -12.510830879211426
    9. '```' → logprob: -12.635830879211426
    10. '		' → logprob: -12.885830879211426

Token 560: ' ajoute' (ID: 91611)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.2067081332206726
    2. ' dz' → logprob: -1.8317081928253174
    3. '.append' → logprob: -4.456707954406738
    4. '   ' → logprob: -4.456707954406738
    5. 'append' → logprob: -6.706707954406738
    6. ' append' → logprob: -7.581707954406738
    7. '           ' → logprob: -7.956707954406738
    8. 'z' → logprob: -7.956707954406738
    9. '       ' → logprob: -8.081707954406738
    10. '  ' → logprob: -8.706707954406738

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. '   ' → logprob: -11.500018119812012
    3. ' ' → logprob: -11.750018119812012
    4. '(' → logprob: -15.125018119812012
    5. '  ' → logprob: -17.875019073486328
    6. '       ' → logprob: -18.000019073486328
    7. '
' → logprob: -18.375019073486328
    8. '0' → logprob: -18.625019073486328
    9. '    
' → logprob: -18.625019073486328
    10. '```' → logprob: -18.625019073486328

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.500003814697266
    5. 'dz' → logprob: -18.875003814697266
    6. '```' → logprob: -19.125003814697266
    7. '
' → logprob: -19.375003814697266
    8. '  ' → logprob: -20.250003814697266
    9. '0' → logprob: -20.250003814697266
    10. '    
' → logprob: -20.750003814697266

Token 563: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1624383926391602
    2. ')' → logprob: -1.2874383926391602
    3. '       ' → logprob: -1.6624383926391602
    4. '           ' → logprob: -2.03743839263916
    5. ' else' → logprob: -3.78743839263916
    6. ' to' → logprob: -3.78743839263916
    7. ' à' → logprob: -4.41243839263916
    8. 'else' → logprob: -4.41243839263916
    9. ' )' → logprob: -4.66243839263916
    10. '    ' → logprob: -6.03743839263916

Token 564: ' la' (ID: 557)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.0019359003053978086
    2. ' dz' → logprob: -6.251935958862305
    3. 'la' → logprob: -12.501935958862305
    4. '```' → logprob: -14.501935958862305
    5. '   ' → logprob: -14.626935958862305
    6. ' ' → logprob: -14.626935958862305
    7. 'dzi' → logprob: -14.751935958862305
    8. 'z' → logprob: -15.376935958862305
    9. 'dze' → logprob: -15.376935958862305
    10. 'Dz' → logprob: -15.501935958862305

Token 565: ' liste' (ID: 31719)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -2.2200749754119897e-06
    2. ' dz' → logprob: -13.250001907348633
    3. 'z' → logprob: -15.000001907348633
    4. 'd' → logprob: -16.500001907348633
    5. 'dze' → logprob: -17.500001907348633
    6. 'sz' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'Dz' → logprob: -18.375001907348633
    9. 'dez' → logprob: -18.375001907348633
    10. 'nz' → logprob: -19.125001907348633

Token 566: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.12693166732788086
    2. ' dz' → logprob: -2.126931667327881
    3. '   ' → logprob: -13.001932144165039
    4. ' ' → logprob: -14.626932144165039
    5. '       ' → logprob: -15.626932144165039
    6. 'd' → logprob: -16.37693214416504
    7. 'Dz' → logprob: -16.50193214416504
    8. '  ' → logprob: -16.62693214416504
    9. '	d' → logprob: -16.75193214416504
    10. ' ' → logprob: -17.12693214416504

Token 567: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6970883011817932
    2. '           ' → logprob: -0.6970883011817932
    3. ')' → logprob: -6.822088241577148
    4. '.' → logprob: -6.947088241577148
    5. ',' → logprob: -7.822088241577148
    6. ' else' → logprob: -7.947088241577148
    7. '   ' → logprob: -8.072088241577148
    8. 'else' → logprob: -8.572088241577148
    9. '          ' → logprob: -9.197088241577148
    10. '      ' → logprob: -9.697088241577148

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020413640595506877
    2. ' dz' → logprob: -9.625204086303711
    3. 'dz' → logprob: -9.875204086303711
    4. '               ' → logprob: -10.250204086303711
    5. '       ' → logprob: -10.750204086303711
    6. '          ' → logprob: -11.000204086303711
    7. ' ' → logprob: -12.125204086303711
    8. '		' → logprob: -13.250204086303711
    9. '   ' → logprob: -14.125204086303711
    10. '	       ' → logprob: -14.375204086303711

Token 569: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' (adapté à ' dz') → logprob: -0.10543373972177505
    2. '           ' → logprob: -2.605433702468872
    3. ' dz' → logprob: -4.230433940887451
    4. '       ' → logprob: -4.480433940887451
    5. '   ' → logprob: -8.480433464050293
    6. '               ' → logprob: -9.605433464050293
    7. ' ' → logprob: -12.105433464050293
    8. '          ' → logprob: -12.105433464050293
    9. ' ' → logprob: -12.230433464050293
    10. '	d' → logprob: -12.605433464050293

Token 570: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04858805239200592
    2. '.' → logprob: -3.0485880374908447
    3. ' .' → logprob: -14.798587799072266
    4. 'append' → logprob: -15.423587799072266
    5. '.extend' → logprob: -17.173587799072266
    6. '   ' → logprob: -17.423587799072266
    7. '.add' → logprob: -17.673587799072266
    8. '.app' → logprob: -18.298587799072266
    9. '.insert' → logprob: -18.423587799072266
    10. ').' → logprob: -19.048587799072266

Token 571: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04858771339058876
    2. '1' → logprob: -3.0485877990722656
    3. '(
' → logprob: -16.048587799072266
    4. ' ' → logprob: -16.298587799072266
    5. ' (' → logprob: -16.298587799072266
    6. '(True' → logprob: -17.798587799072266
    7. '0' → logprob: -17.923587799072266
    8. '(int' → logprob: -19.298587799072266
    9. '((' → logprob: -20.423587799072266
    10. '()' → logprob: -20.923587799072266

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -20.500001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '```' → logprob: -21.000001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '`' → logprob: -21.875001907348633
    8. '１' → logprob: -22.250001907348633
    9. '' → logprob: -22.500001907348633
    10. ' ' → logprob: -22.750001907348633

Token 573: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008610807126387954
    2. ')
' → logprob: -7.250861167907715
    3. 'else' → logprob: -9.625861167907715
    4. '   ' → logprob: -9.750861167907715
    5. ' )' → logprob: -11.250861167907715
    6. '<|end|>' → logprob: -12.125861167907715
    7. '       ' → logprob: -12.625861167907715
    8. ' else' → logprob: -12.750861167907715
    9. ')
' → logprob: -14.500861167907715
    10. '),' → logprob: -15.125861167907715

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2616726756095886
    2. 'else' → logprob: -1.5116727352142334
    3. ' else' → logprob: -4.636672496795654
    4. '	else' → logprob: -12.636672973632812
    5. '```' → logprob: -13.886672973632812
    6. '	' → logprob: -14.136672973632812
    7. '   ' → logprob: -14.636672973632812
    8. '<|end|>' → logprob: -15.136672973632812
    9. '      ' → logprob: -15.886672973632812
    10. '}else' → logprob: -16.386672973632812

Token 575: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6112982630729675
    2. 'else' (adapté à ' else') → logprob: -0.8612982630729675
    3. ' else' → logprob: -3.3612983226776123
    4. '	else' → logprob: -10.111298561096191
    5. '   ' → logprob: -12.361298561096191
    6. '	' → logprob: -12.611298561096191
    7. '      ' → logprob: -14.861298561096191
    8. '```' → logprob: -14.861298561096191
    9. 'elser' → logprob: -15.361298561096191
    10. ' ' → logprob: -15.611298561096191

Token 576: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014932683669030666
    2. ':' → logprob: -4.639932632446289
    3. ':
' → logprob: -5.889932632446289
    4. '       ' → logprob: -6.389932632446289
    5. '   ' → logprob: -8.764932632446289
    6. '          ' → logprob: -8.889932632446289
    7. '	       ' → logprob: -9.389932632446289
    8. ' ' → logprob: -9.889932632446289
    9. ' ' → logprob: -10.014932632446289
    10. '        ' → logprob: -10.139932632446289

Token 577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013330926187336445
    2. ' dz' → logprob: -4.388330936431885
    3. 'dz' → logprob: -7.388330936431885
    4. '0' → logprob: -9.763330459594727
    5. '       ' → logprob: -10.263330459594727
    6. ' ' → logprob: -10.638330459594727
    7. ' ' → logprob: -10.888330459594727
    8. '          ' → logprob: -11.138330459594727
    9. '	       ' → logprob: -11.138330459594727
    10. '		' → logprob: -11.138330459594727

Token 578: ' #' (ID: 1069)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.3192581534385681
    2. ' dz' → logprob: -2.319258213043213
    3. '       ' → logprob: -2.444258213043213
    4. '0' → logprob: -2.569258213043213
    5. '           ' → logprob: -4.569258213043213
    6. ' ' → logprob: -7.319258213043213
    7. '   ' → logprob: -7.819258213043213
    8. 'Dz' → logprob: -10.569257736206055
    9. '      ' → logprob: -10.944257736206055
    10. '1' → logprob: -11.319257736206055

Token 579: ' Si' (ID: 7832)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.13875238597393036
    2. '           ' → logprob: -2.3887524604797363
    3. ' dz' → logprob: -3.5137524604797363
    4. '       ' → logprob: -4.888752460479736
    5. '   ' → logprob: -7.763752460479736
    6. ' ' → logprob: -10.888751983642578
    7. '0' → logprob: -11.763751983642578
    8. '	d' → logprob: -12.138751983642578
    9. '               ' → logprob: -12.263751983642578
    10. '          ' → logprob: -12.263751983642578

Token 580: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5410280823707581
    2. ' dz' → logprob: -1.1660280227661133
    3. '    ' → logprob: -2.9160280227661133
    4. '0' → logprob: -3.7910280227661133
    5. ' ' → logprob: -3.7910280227661133
    6. '   ' → logprob: -6.041028022766113
    7. ' Dz' → logprob: -6.791028022766113
    8. 'dz' → logprob: -6.916028022766113
    9. '  ' → logprob: -7.666028022766113
    10. '1' → logprob: -7.791028022766113

Token 581: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11462336778640747
    2. 'n' → logprob: -2.3646233081817627
    3. 'else' → logprob: -5.364623546600342
    4. ' else' → logprob: -5.739623546600342
    5. 's' → logprob: -6.364623546600342
    6. 'i' → logprob: -7.114623546600342
    7. '```' → logprob: -7.239623546600342
    8. ' est' → logprob: -7.989623546600342
    9. '%' → logprob: -7.989623546600342
    10. ' ' → logprob: -8.114623069763184

Token 582: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.8206174373626709
    2. ' pas' → logprob: -1.070617437362671
    3. 'est' → logprob: -2.195617437362671
    4. 'pas' → logprob: -2.695617437362671
    5. ' n' → logprob: -4.19561767578125
    6. ' est' → logprob: -4.44561767578125
    7. 'n' → logprob: -5.44561767578125
    8. '’est' → logprob: -5.82061767578125
    9. 'elif' → logprob: -6.94561767578125
    10. '%' → logprob: -7.32061767578125

Token 583: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3134021759033203
    2. 'pas' → logprob: -1.3134021759033203
    3. '_pas' → logprob: -9.06340217590332
    4. 'Pas' → logprob: -11.31340217590332
    5. 'p' → logprob: -11.81340217590332
    6. 't' → logprob: -14.06340217590332
    7. '#' → logprob: -14.06340217590332
    8. 'PAS' → logprob: -14.43840217590332
    9. 's' → logprob: -14.56340217590332
    10. '0' → logprob: -14.56340217590332

Token 584: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0469251349568367
    2. ' pas' → logprob: -3.7969250679016113
    3. 'pas' → logprob: -4.296925067901611
    4. ' ' → logprob: -5.296925067901611
    5. '1' → logprob: -5.421925067901611
    6. 'else' → logprob: -9.04692554473877
    7. '   ' → logprob: -10.29692554473877
    8. 'un' → logprob: -10.54692554473877
    9. 'le' → logprob: -10.67192554473877
    10. '```' → logprob: -10.79692554473877

Token 585: ' cas' (ID: 2108)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033957520499825478
    2. 'pas' → logprob: -5.7533955574035645
    3. '1' → logprob: -9.378396034240723
    4. 'else' → logprob: -10.253396034240723
    5. ' ' → logprob: -10.503396034240723
    6. 'div' → logprob: -10.503396034240723
    7. 'd' → logprob: -11.878396034240723
    8. '   ' → logprob: -12.003396034240723
    9. ' pas' → logprob: -12.003396034240723
    10. '```' → logprob: -12.128396034240723

Token 586: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014911303296685219
    2. ',' → logprob: -5.13991117477417
    3. ':
' → logprob: -5.26491117477417
    4. ':' → logprob: -6.01491117477417
    5. ' dz' → logprob: -7.88991117477417
    6. 'dz' → logprob: -8.139911651611328
    7. '   ' → logprob: -8.514911651611328
    8. '       ' → logprob: -8.514911651611328
    9. '               ' → logprob: -10.139911651611328
    10. ',d' → logprob: -10.139911651611328

Token 587: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2755367159843445
    2. ' dz' → logprob: -1.6505367755889893
    3. 'dz' → logprob: -3.0255367755889893
    4. '       ' → logprob: -8.90053653717041
    5. ' ' → logprob: -10.02553653717041
    6. '   ' → logprob: -10.02553653717041
    7. '          ' → logprob: -10.15053653717041
    8. ' ' → logprob: -10.65053653717041
    9. '            ' → logprob: -11.15053653717041
    10. '0' → logprob: -11.77553653717041

Token 588: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.13000652194023132
    2. 'dz' → logprob: -2.2550065517425537
    3. '.append' → logprob: -4.630006313323975
    4. '           ' → logprob: -5.755006313323975
    5. ' append' → logprob: -5.880006313323975
    6. '   ' → logprob: -7.630006313323975
    7. ' dz' → logprob: -7.755006313323975
    8. '       ' → logprob: -8.255006790161133
    9. '	append' → logprob: -10.380006790161133
    10. 'aj' → logprob: -10.755006790161133

Token 589: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '(' → logprob: -15.125109672546387
    4. '   ' → logprob: -19.00010871887207
    5. ' (' → logprob: -20.75010871887207
    6. 'un' → logprob: -21.00010871887207
    7. ' ' → logprob: -21.87510871887207
    8. '  ' → logprob: -22.00010871887207
    9. ' un' → logprob: -22.00010871887207
    10. '()' → logprob: -22.50010871887207

Token 590: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '00' → logprob: -23.25
    4. '000' → logprob: -23.25
    5. '   ' → logprob: -23.625
    6. '۰' → logprob: -23.75
    7. 'un' → logprob: -23.875
    8. '```' → logprob: -25.0
    9. '٠' → logprob: -25.875
    10. '  ' → logprob: -26.0

Token 591: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021031579002738
    2. ' à' → logprob: -4.396031379699707
    3. '       ' → logprob: -5.896031379699707
    4. '   ' → logprob: -6.021031379699707
    5. ')' → logprob: -6.396031379699707
    6. '0' → logprob: -7.146031379699707
    7. ' to' → logprob: -8.771031379699707
    8. '.' → logprob: -8.896031379699707
    9. 'à' → logprob: -9.021031379699707
    10. ' ' → logprob: -9.396031379699707

Token 592: ' dz' (ID: 17303)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7216461896896362
    2. 'dz' → logprob: -0.7216461896896362
    3. ' dz' → logprob: -4.096646308898926
    4. ' la' → logprob: -4.471646308898926
    5. '   ' → logprob: -11.096646308898926
    6. 'l' → logprob: -11.846646308898926
    7. 'Dz' → logprob: -12.346646308898926
    8. ' ' → logprob: -12.596646308898926
    9. 'z' → logprob: -13.221646308898926
    10. ' Dz' → logprob: -13.221646308898926

Token 593: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012389794923365116
    2. '       ' → logprob: -4.512389659881592
    3. ')' → logprob: -7.137389659881592
    4. '   ' → logprob: -8.38739013671875
    5. '.' → logprob: -8.88739013671875
    6. '          ' → logprob: -10.38739013671875
    7. 'dz' → logprob: -10.51239013671875
    8. '<|end|>' → logprob: -10.76239013671875
    9. '	       ' → logprob: -11.38739013671875
    10. ' dz' → logprob: -11.38739013671875

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.7530574849806726e-05
    2. ' dz' → logprob: -10.250057220458984
    3. 'dz' → logprob: -11.375057220458984
    4. '       ' → logprob: -12.250057220458984
    5. '		' → logprob: -13.125057220458984
    6. '   ' → logprob: -13.375057220458984
    7. '          ' → logprob: -13.750057220458984
    8. '               ' → logprob: -14.875057220458984
    9. '```' → logprob: -14.875057220458984
    10. ' ' → logprob: -15.375057220458984

Token 595: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' (adapté à ' dz') → logprob: -0.3262007236480713
    2. '           ' → logprob: -1.4512007236480713
    3. ' dz' → logprob: -3.8262007236480713
    4. '0' → logprob: -3.8262007236480713
    5. '       ' → logprob: -7.826200485229492
    6. ' ' → logprob: -11.076200485229492
    7. '   ' → logprob: -11.201200485229492
    8. '          ' → logprob: -11.826200485229492
    9. '               ' → logprob: -11.951200485229492
    10. ' ' → logprob: -12.201200485229492

Token 596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005544631858356297
    2. '.' → logprob: -7.50055456161499
    3. 'append' → logprob: -13.875554084777832
    4. '.app' → logprob: -14.500554084777832
    5. '.Append' → logprob: -18.00055503845215
    6. '.extend' → logprob: -18.87555503845215
    7. ' .' → logprob: -19.00055503845215
    8. ' append' → logprob: -19.37555503845215
    9. '.insert' → logprob: -19.87555503845215
    10. 'app' → logprob: -20.50055503845215

Token 597: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.505351095460355e-05
    2. '0' → logprob: -9.500075340270996
    3. ' (' → logprob: -16.62507438659668
    4. ' ' → logprob: -19.50007438659668
    5. '(False' → logprob: -21.25007438659668
    6. '   ' → logprob: -21.75007438659668
    7. '(
' → logprob: -22.87507438659668
    8. '((' → logprob: -23.00007438659668
    9. '	' → logprob: -23.12507438659668
    10. '()' → logprob: -23.50007438659668

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -20.1250057220459
    4. ')' → logprob: -21.3750057220459
    5. '   ' → logprob: -21.3750057220459
    6. '00' → logprob: -21.6875057220459
    7. '０' → logprob: -22.3125057220459
    8. ' ' → logprob: -22.5000057220459
    9. '٠' → logprob: -22.8750057220459
    10. '  ' → logprob: -22.8750057220459

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.657694418914616e-05
    2. '<|end|>' → logprob: -10.500056266784668
    3. '   ' → logprob: -11.375056266784668
    4. ')
' → logprob: -11.500056266784668
    5. ' )' → logprob: -12.125056266784668
    6. ')return' → logprob: -14.125056266784668
    7. '       ' → logprob: -15.750056266784668
    8. ')#' → logprob: -15.750056266784668
    9. '')' → logprob: -16.250057220458984
    10. '```' → logprob: -16.250057220458984

Token 600: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09286846220493317
    2. 'sum' → logprob: -3.2178685665130615
    3. '#' → logprob: -3.9678685665130615
    4. '    
' → logprob: -4.217868328094482
    5. 's' → logprob: -5.092868328094482
    6. 'total' → logprob: -5.467868328094482
    7. 'count' → logprob: -6.842868328094482
    8. 'print' → logprob: -7.092868328094482
    9. '    ' → logprob: -7.092868328094482
    10. '        
' → logprob: -8.34286880493164

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3627665638923645
    2. 'sum' → logprob: -2.2377665042877197
    3. '#' → logprob: -2.6127665042877197
    4. 'print' → logprob: -2.9877665042877197
    5. 's' → logprob: -3.8627665042877197
    6. 'count' → logprob: -4.237766742706299
    7. 'total' → logprob: -4.737766742706299
    8. '    
' → logprob: -4.862766742706299
    9. 'max' → logprob: -4.862766742706299
    10. '    ' → logprob: -5.237766742706299

Token 602: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0779261589050293
    2. 's' → logprob: -1.7029261589050293
    3. '#' (adapté à ' #') → logprob: -2.2029261589050293
    4. 'count' → logprob: -2.3279261589050293
    5. 'total' → logprob: -2.5779261589050293
    6. 'res' → logprob: -3.0779261589050293
    7. 'cnt' → logprob: -3.3279261589050293
    8. 'if' → logprob: -3.9529261589050293
    9. 'result' → logprob: -4.077926158905029
    10. 'print' → logprob: -4.577926158905029

Token 603: ' Calcul' (ID: 57243)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.712760329246521
    2. 's' → logprob: -1.837760329246521
    3. 'count' → logprob: -2.2127604484558105
    4. 'res' → logprob: -2.2127604484558105
    5. 'total' → logprob: -2.3377604484558105
    6. 'result' → logprob: -2.4627604484558105
    7. 'if' → logprob: -2.7127604484558105
    8. 'cnt' → logprob: -3.0877604484558105
    9. '#' → logprob: -3.5877604484558105
    10. 'ans' → logprob: -4.2127604484558105

Token 604: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.26544988155365
    2. '   ' → logprob: -1.51544988155365
    3. ' de' → logprob: -1.89044988155365
    4. 'sum' → logprob: -2.1404500007629395
    5. 'du' → logprob: -2.3904500007629395
    6. ' du' → logprob: -3.3904500007629395
    7. 's' → logprob: -3.6404500007629395
    8. 'total' → logprob: -4.0154500007629395
    9. 'd' → logprob: -4.7654500007629395
    10. ' of' → logprob: -5.0154500007629395

Token 605: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3946373164653778
    2. 'max' → logprob: -2.7696373462677
    3. 'count' → logprob: -2.7696373462677
    4. 's' → logprob: -3.2696373462677
    5. 'res' → logprob: -3.7696373462677
    6. 'total' → logprob: -3.8946373462677
    7. 'dz' → logprob: -4.144637107849121
    8. 'cnt' → logprob: -4.144637107849121
    9. 'le' → logprob: -4.269637107849121
    10. 'la' → logprob: -4.769637107849121

Token 606: ' nouvelle' (ID: 24562)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9901284575462341
    2. 's' → logprob: -1.490128517150879
    3. 'sum' → logprob: -1.990128517150879
    4. 'total' → logprob: -3.115128517150879
    5. 'som' → logprob: -3.115128517150879
    6. 'res' → logprob: -3.240128517150879
    7. 'cnt' → logprob: -3.615128517150879
    8. 'nb' → logprob: -3.865128517150879
    9. 'result' → logprob: -3.990128517150879
    10. 'c' → logprob: -4.365128517150879

Token 607: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4457094669342041
    2. 'x' → logprob: -2.070709466934204
    3. 's' → logprob: -2.695709466934204
    4. 'd' → logprob: -2.820709466934204
    5. 'position' → logprob: -4.320709228515625
    6. '_val' → logprob: -4.445709228515625
    7. 'sum' → logprob: -4.695709228515625
    8. 'result' → logprob: -4.820709228515625
    9. 'pos' → logprob: -4.945709228515625
    10. 'liste' → logprob: -5.070709228515625

Token 608: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6964479684829712
    2. 'de' → logprob: -0.9464479684829712
    3. 'x' → logprob: -3.5714478492736816
    4. ' =' → logprob: -3.8214478492736816
    5. '   ' → logprob: -4.196447849273682
    6. '_de' → logprob: -4.321447849273682
    7. '=' → logprob: -4.571447849273682
    8. 's' → logprob: -5.071447849273682
    9. '_' → logprob: -6.071447849273682
    10. 'du' → logprob: -6.321447849273682

Token 609: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020064231008291245
    2. ' x' → logprob: -4.020064353942871
    3. 'n' → logprob: -6.770064353942871
    4. 'k' → logprob: -8.770064353942871
    5. ' n' → logprob: -9.520064353942871
    6. 'd' → logprob: -9.520064353942871
    7. 'res' → logprob: -9.645064353942871
    8. 'ans' → logprob: -9.895064353942871
    9. 'result' → logprob: -10.582564353942871
    10. 'y' → logprob: -10.645064353942871

Token 610: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7848073244094849
    2. ' =' → logprob: -1.1598073244094849
    3. '%=' → logprob: -2.0348072052001953
    4. ' %=' → logprob: -2.6598072052001953
    5. '+=' → logprob: -4.284807205200195
    6. ' +=' → logprob: -4.659807205200195
    7. '%' → logprob: -5.284807205200195
    8. '*=' → logprob: -7.909807205200195
    9. '   ' → logprob: -8.159807205200195
    10. 'x' → logprob: -8.409807205200195

Token 611: ' 
' (ID: 793)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03338528797030449
    2. ' x' → logprob: -3.6583852767944336
    3. '=' → logprob: -5.658385276794434
    4. '   ' → logprob: -6.408385276794434
    5. ' =' → logprob: -6.408385276794434
    6. '+=' → logprob: -9.158385276794434
    7. ' +=' → logprob: -10.158385276794434
    8. '%=' → logprob: -10.533385276794434
    9. '=x' → logprob: -10.783385276794434
    10. 'new' → logprob: -11.533385276794434

Token 612: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0025025326758623123
    2. ' x' → logprob: -6.50250244140625
    3. '   ' → logprob: -7.12750244140625
    4. 'if' → logprob: -9.50250244140625
    5. '=' → logprob: -10.00250244140625
    6. 'for' → logprob: -10.50250244140625
    7. ' =' → logprob: -11.50250244140625
    8. '```' → logprob: -12.00250244140625
    9. 'sum' → logprob: -12.12750244140625
    10. 's' → logprob: -12.75250244140625

Token 613: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043341092532500625
    2. ' x' → logprob: -8.375432968139648
    3. '=' → logprob: -8.875432968139648
    4. ' =' → logprob: -10.750432968139648
    5. '```' → logprob: -11.500432968139648
    6. 'for' → logprob: -12.375432968139648
    7. '   ' → logprob: -12.500432968139648
    8. 's' → logprob: -12.875432968139648
    9. 'mod' → logprob: -13.000432968139648
    10. 'n' → logprob: -13.125432968139648

Token 614: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01935708522796631
    2. ' x' → logprob: -4.019357204437256
    3. 'for' → logprob: -8.269356727600098
    4. 'new' → logprob: -8.769356727600098
    5. 'res' → logprob: -9.144356727600098
    6. 'r' → logprob: -9.394356727600098
    7. 'mod' → logprob: -9.644356727600098
    8. 'rem' → logprob: -9.644356727600098
    9. 'rest' → logprob: -10.144356727600098
    10. 'val' → logprob: -10.269356727600098

Token 615: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.035268235951662064
    2. '(x' → logprob: -3.6602683067321777
    3. 'sum' → logprob: -5.660268306732178
    4. 'n' → logprob: -6.535268306732178
    5. 'k' → logprob: -6.910268306732178
    6. '(n' → logprob: -7.035268306732178
    7. '(sum' → logprob: -7.910268306732178
    8. ' x' → logprob: -8.16026782989502
    9. '(k' → logprob: -8.16026782989502
    10. 'd' → logprob: -8.66026782989502

Token 616: '-' (ID: 12)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3566487729549408
    2. ' *' → logprob: -1.7316488027572632
    3. '-' → logprob: -2.4816486835479736
    4. '%' → logprob: -4.231648921966553
    5. '+' → logprob: -4.606648921966553
    6. ' -' → logprob: -5.106648921966553
    7. '*x' → logprob: -5.481648921966553
    8. '**' → logprob: -6.606648921966553
    9. ')' → logprob: -6.981648921966553
    10. ' +' → logprob: -7.481648921966553

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029439476784318686
    2. 'x' → logprob: -6.002943992614746
    3. ' ' → logprob: -7.877943992614746
    4. ' x' → logprob: -10.627943992614746
    5. '2' → logprob: -11.315443992614746
    6. 'k' → logprob: -11.315443992614746
    7. 'n' → logprob: -12.315443992614746
    8. '```' → logprob: -12.377943992614746
    9. '[' → logprob: -12.502943992614746
    10. ')' → logprob: -12.565443992614746

Token 618: ')//' (ID: 60375)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14177986979484558
    2. ')' → logprob: -2.516779899597168
    3. ' *' → logprob: -3.266779899597168
    4. ')*' → logprob: -4.891779899597168
    5. '+' → logprob: -5.641779899597168
    6. '-' → logprob: -7.016779899597168
    7. '*x' → logprob: -7.641779899597168
    8. '%' → logprob: -8.141779899597168
    9. '*n' → logprob: -8.641779899597168
    10. '*(' → logprob: -9.266779899597168

Token 619: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17758052051067352
    2. '2' → logprob: -2.5525805950164795
    3. ' m' → logprob: -2.5525805950164795
    4. ' ' → logprob: -6.1775803565979
    5. 'k' → logprob: -6.9275803565979
    6. 'n' → logprob: -7.0525803565979
    7. '(m' → logprob: -7.4275803565979
    8. '1' → logprob: -8.052580833435059
    9. '3' → logprob: -8.177580833435059
    10. '7' → logprob: -8.302580833435059

Token 620: ' calc' (ID: 25691)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7701884508132935
    2. ' *' → logprob: -0.7701884508132935
    3. '*x' → logprob: -4.020188331604004
    4. '%' → logprob: -4.145188331604004
    5. ')' → logprob: -4.645188331604004
    6. '+' → logprob: -4.895188331604004
    7. '*d' → logprob: -5.020188331604004
    8. '*n' → logprob: -5.520188331604004
    9. '*m' → logprob: -6.020188331604004
    10. ')*' → logprob: -6.020188331604004

Token 621: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.801246702671051
    2. ')' → logprob: -1.3012466430664062
    3. '=' → logprob: -1.6762466430664062
    4. '*' → logprob: -3.3012466430664062
    5. '()' → logprob: -3.9262466430664062
    6. 'ulé' → logprob: -5.426246643066406
    7. '(k' → logprob: -5.551246643066406
    8. '(' → logprob: -5.676246643066406
    9. ')=' → logprob: -5.676246643066406
    10. '```' → logprob: -5.801246643066406

Token 622: ' combien' (ID: 106648)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5782085657119751
    2. ' combien' → logprob: -1.578208565711975
    3. '(n' → logprob: -2.2032084465026855
    4. ' l' → logprob: -3.8282084465026855
    5. '((' → logprob: -3.9532084465026855
    6. ' la' → logprob: -4.0782084465026855
    7. 'le' → logprob: -4.3282084465026855
    8. ' (' → logprob: -4.4532084465026855
    9. ' how' → logprob: -4.8282084465026855
    10. ' un' → logprob: -4.9532084465026855

Token 623: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49828019738197327
    2. '(n' → logprob: -1.7482801675796509
    3. ' d' → logprob: -2.3732802867889404
    4. 'de' → logprob: -2.7482802867889404
    5. 'd' → logprob: -3.8732802867889404
    6. '   ' → logprob: -4.373280048370361
    7. '((' → logprob: -4.498280048370361
    8. '[n' → logprob: -5.748280048370361
    9. '[(' → logprob: -6.123280048370361
    10. '  ' → logprob: -6.623280048370361

Token 624: ' fois' (ID: 14697)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28758206963539124
    2. ' k' → logprob: -2.4125821590423584
    3. 'cycles' → logprob: -2.9125821590423584
    4. ' fois' → logprob: -3.4125821590423584
    5. '(k' → logprob: -3.7875821590423584
    6. 'fois' → logprob: -4.287581920623779
    7. ' cycles' → logprob: -4.287581920623779
    8. 'segments' → logprob: -5.662581920623779
    9. ' (' → logprob: -5.787581920623779
    10. ' segments' → logprob: -6.162581920623779

Token 625: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5432008504867554
    2. ' k' → logprob: -1.0432008504867554
    3. ' x' → logprob: -4.418200969696045
    4. 'x' → logprob: -4.668200969696045
    5. 'd' → logprob: -4.918200969696045
    6. ' (' → logprob: -5.043200969696045
    7. '(k' → logprob: -5.043200969696045
    8. ' on' → logprob: -5.543200969696045
    9. ' d' → logprob: -5.668200969696045
    10. 'n' → logprob: -5.793200969696045

Token 626: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.096994161605835
    2. 'k' → logprob: -1.346994161605835
    3. 'div' → logprob: -1.721994161605835
    4. ' peut' → logprob: -2.346994161605835
    5. ' k' → logprob: -3.471994161605835
    6. ' div' → logprob: -4.221994400024414
    7. 'a' → logprob: -4.471994400024414
    8. ' a' → logprob: -4.596994400024414
    9. ' multipl' → logprob: -4.846994400024414
    10. ' ' → logprob: -5.221994400024414

Token 627: ' sou' (ID: 4069)
  Prédit: ' rép'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rép' → logprob: -0.6586356163024902
    2. 'faire' → logprob: -1.0336356163024902
    3. ' faire' → logprob: -3.0336356163024902
    4. ' multiplier' → logprob: -4.03363561630249
    5. ' effectuer' → logprob: -4.15863561630249
    6. 'div' → logprob: -4.28363561630249
    7. 'rep' → logprob: -5.03363561630249
    8. 'ré' → logprob: -5.15863561630249
    9. 'effect' → logprob: -5.53363561630249
    10. ' div' → logprob: -5.53363561630249

Token 628: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.1206236332654953
    2. 'r' → logprob: -2.9956235885620117
    3. 'mettre' → logprob: -3.4956235885620117
    4. 'tra' → logprob: -3.9956235885620117
    5. 'tr' → logprob: -5.245623588562012
    6. 'per' → logprob: -6.495623588562012
    7. 'str' → logprob: -6.495623588562012
    8. 'p' → logprob: -6.620623588562012
    9. 'b' → logprob: -6.745623588562012
    10. 'stract' → logprob: -6.870623588562012

Token 629: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.04616903141140938
    2. 'ct' → logprob: -3.4211690425872803
    3. 're' → logprob: -5.421168804168701
    4. 'it' → logprob: -6.296168804168701
    5. 'ction' → logprob: -7.046168804168701
    6. 'tre' → logprob: -7.296168804168701
    7. 't' → logprob: -7.296168804168701
    8. 'itre' → logprob: -7.421168804168701
    9. 'yer' → logprob: -7.421168804168701
    10. 'yre' → logprob: -7.796168804168701

Token 630: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10552653670310974
    2. ' k' → logprob: -2.3555264472961426
    3. '1' → logprob: -6.230526447296143
    4. '(k' → logprob: -6.605526447296143
    5. ' (' → logprob: -7.355526447296143
    6. 'n' → logprob: -7.855526447296143
    7. '(n' → logprob: -8.2305269241333
    8. ' ' → logprob: -8.3555269241333
    9. ' n' → logprob: -8.3555269241333
    10. 'l' → logprob: -9.9805269241333

Token 631: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4365888237953186
    2. 'from' → logprob: -2.186588764190674
    3. ' from' → logprob: -2.311588764190674
    4. '<|end|>' → logprob: -3.186588764190674
    5. ' )' → logprob: -4.311588764190674
    6. ' de' → logprob: -4.436588764190674
    7. ' x' → logprob: -4.436588764190674
    8. '   ' → logprob: -4.561588764190674
    9. '(n' → logprob: -4.811588764190674
    10. 'de' → logprob: -4.936588764190674

Token 632: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47457560896873474
    2. 'n' → logprob: -1.4745756387710571
    3. ' n' → logprob: -2.0995755195617676
    4. ' (' → logprob: -3.7245755195617676
    5. 'x' → logprob: -6.349575519561768
    6. ' x' → logprob: -7.724575519561768
    7. '(x' → logprob: -8.974575996398926
    8. '(' → logprob: -11.099575996398926
    9. 'l' → logprob: -12.724575996398926
    10. ' ' → logprob: -12.974575996398926

Token 633: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7367780804634094
    2. 'n' → logprob: -1.2367780208587646
    3. ' (' → logprob: -2.1117780208587646
    4. '(n' → logprob: -2.2367780208587646
    5. 'x' → logprob: -6.236778259277344
    6. ' x' → logprob: -6.861778259277344
    7. ')' → logprob: -9.611778259277344
    8. ')n' → logprob: -9.861778259277344
    9. ' ' → logprob: -11.236778259277344
    10. '(x' → logprob: -11.736778259277344

Token 634: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005439727567136288
    2. ' -' → logprob: -5.505439758300781
    3. '1' → logprob: -6.630439758300781
    4. ')' → logprob: -11.130439758300781
    5. 'minus' → logprob: -11.630439758300781
    6. '   ' → logprob: -12.630439758300781
    7. ' ' → logprob: -13.005439758300781
    8. '_minus' → logprob: -13.130439758300781
    9. ' minus' → logprob: -13.505439758300781
    10. 'moins' → logprob: -13.880439758300781

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '```' → logprob: -15.125025749206543
    4. '   ' → logprob: -15.500025749206543
    5. '2' → logprob: -16.000024795532227
    6. 'x' → logprob: -16.125024795532227
    7. ')' → logprob: -16.250024795532227
    8. '  ' → logprob: -17.062524795532227
    9. '[' → logprob: -17.312524795532227
    10. '-' → logprob: -17.437524795532227

Token 636: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007660295814275742
    2. ' )' → logprob: -7.750765800476074
    3. ')+' → logprob: -8.625765800476074
    4. ')*' → logprob: -9.750765800476074
    5. '))' → logprob: -10.625765800476074
    6. '),' → logprob: -11.250765800476074
    7. ')//' → logprob: -11.500765800476074
    8. ')
' → logprob: -11.625765800476074
    9. '   ' → logprob: -11.750765800476074
    10. ')#' → logprob: -12.000765800476074

Token 637: ' sans' (ID: 9828)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25460168719291687
    2. ')' → logprob: -1.8796017169952393
    3. '*' → logprob: -3.0046017169952393
    4. ')*' → logprob: -4.00460147857666
    5. '*x' → logprob: -6.62960147857666
    6. '   ' → logprob: -6.87960147857666
    7. ')*(' → logprob: -7.37960147857666
    8. ' )' → logprob: -8.00460147857666
    9. '),' → logprob: -9.12960147857666
    10. '*n' → logprob: -9.25460147857666

Token 638: ' aller' (ID: 18383)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.49102285504341125
    2. ' dépasser' → logprob: -1.3660228252410889
    3. 'ex' → logprob: -3.491022825241089
    4. 'overflow' → logprob: -4.116023063659668
    5. '1' → logprob: -5.241023063659668
    6. 'r' → logprob: -5.366023063659668
    7. 'error' → logprob: -5.491023063659668
    8. 're' → logprob: -5.616023063659668
    9. ' div' → logprob: -5.741023063659668
    10. 'er' → logprob: -5.741023063659668

Token 639: ' en' (ID: 469)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33176156878471375
    2. 'à' → logprob: -1.5817615985870361
    3. ' dépasser' → logprob: -4.206761360168457
    4. ' à' → logprob: -4.456761360168457
    5. 'plus' → logprob: -4.456761360168457
    6. 'dé' → logprob: -4.706761360168457
    7. ' de' → logprob: -4.831761360168457
    8. '1' → logprob: -5.706761360168457
    9. 'd' → logprob: -5.831761360168457
    10. 'au' → logprob: -6.081761360168457

Token 640: ' dessous' (ID: 120954)
  Prédit: ' dessous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dessous' → logprob: -0.9651697278022766
    2. '-dessous' → logprob: -1.7151696681976318
    3. 'dess' → logprob: -1.8401696681976318
    4. ' dehors' → logprob: -1.8401696681976318
    5. 'de' → logprob: -2.715169668197632
    6. 'moins' → logprob: -3.715169668197632
    7. 'dé' → logprob: -5.715169906616211
    8. 'hors' → logprob: -5.965169906616211
    9. 'd' → logprob: -5.965169906616211
    10. 'out' → logprob: -6.215169906616211

Token 641: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32938897609710693
    2. 'de' → logprob: -1.829388976097107
    3. ')' → logprob: -3.2043890953063965
    4. ' x' → logprob: -3.8293890953063965
    5. 'x' → logprob: -4.3293890953063965
    6. '   ' → logprob: -4.8293890953063965
    7. ',' → logprob: -4.9543890953063965
    8. ' d' → logprob: -4.9543890953063965
    9. 'd' → logprob: -5.0793890953063965
    10. '1' → logprob: -5.5793890953063965

Token 642: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01612492837011814
    2. ' ' → logprob: -4.141124725341797
    3. '1' → logprob: -9.891124725341797
    4. ' zéro' → logprob: -11.141124725341797
    5. 'zero' → logprob: -11.516124725341797
    6. ' zero' → logprob: -11.516124725341797
    7. ' z' → logprob: -13.641124725341797
    8. 'z' → logprob: -13.891124725341797
    9. ' ' → logprob: -14.016124725341797
    10. '   ' → logprob: -14.016124725341797

Token 643: '.
' (ID: 558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.39119425415992737
    2. ')' → logprob: -1.391194224357605
    3. '*' → logprob: -3.0161943435668945
    4. ')*' → logprob: -3.8911943435668945
    5. ' )' → logprob: -6.7661943435668945
    6. '*x' → logprob: -7.1411943435668945
    7. ')*(' → logprob: -7.1411943435668945
    8. '   ' → logprob: -7.1411943435668945
    9. '*(' → logprob: -7.2661943435668945
    10. ']' → logprob: -7.7661943435668945

Token 644: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.563526451587677
    2. '*' → logprob: -1.4385263919830322
    3. ' x' → logprob: -2.6885263919830322
    4. ' +' → logprob: -2.9385263919830322
    5. 'x' → logprob: -3.3135263919830322
    6. '+' → logprob: -4.188526630401611
    7. ' %' → logprob: -5.188526630401611
    8. '   ' → logprob: -5.313526630401611
    9. '%' → logprob: -5.313526630401611
    10. '*x' → logprob: -6.188526630401611

Token 645: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12419227510690689
    2. 'x' → logprob: -2.374192237854004
    3. ' *' → logprob: -4.874192237854004
    4. ' =' → logprob: -5.249192237854004
    5. '*' → logprob: -6.374192237854004
    6. ' ' → logprob: -6.499192237854004
    7. '   ' → logprob: -6.624192237854004
    8. ' +=' → logprob: -6.749192237854004
    9. ' (' → logprob: -6.874192237854004
    10. '    ' → logprob: -6.999192237854004

Token 646: ' Cela' (ID: 44403)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09197180718183517
    2. ' x' → logprob: -2.4669718742370605
    3. '   ' → logprob: -6.8419718742370605
    4. 're' → logprob: -7.5919718742370605
    5. 'r' → logprob: -8.341971397399902
    6. 'res' → logprob: -8.466971397399902
    7. 'rem' → logprob: -8.716971397399902
    8. 'new' → logprob: -8.841971397399902
    9. 'rest' → logprob: -8.841971397399902
    10. 'temp' → logprob: -9.716971397399902

Token 647: ' donne' (ID: 30004)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8147571086883545
    2. '=' → logprob: -1.3147571086883545
    3. '*=' → logprob: -1.9397571086883545
    4. ' =' → logprob: -2.9397571086883545
    5. ' *' → logprob: -3.4397571086883545
    6. ' *=' → logprob: -3.6897571086883545
    7. ')' → logprob: -4.564757347106934
    8. '+=' → logprob: -4.939757347106934
    9. ' multipl' → logprob: -5.814757347106934
    10. '#' → logprob: -5.939757347106934

Token 648: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31402572989463806
    2. 'x' → logprob: -1.9390257596969604
    3. ' (' → logprob: -2.689025640487671
    4. '(x' → logprob: -3.189025640487671
    5. '((' → logprob: -5.31402587890625
    6. '   ' → logprob: -6.31402587890625
    7. ' d' → logprob: -6.43902587890625
    8. ' ((' → logprob: -6.43902587890625
    9. ' k' → logprob: -6.68902587890625
    10. '(k' → logprob: -6.81402587890625

Token 649: ' nombre' (ID: 9733)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6730605363845825
    2. 'x' → logprob: -1.6730605363845825
    3. '(n' → logprob: -2.048060417175293
    4. ' (' → logprob: -2.798060417175293
    5. ' ((' → logprob: -2.923060417175293
    6. ' x' → logprob: -3.798060417175293
    7. '(k' → logprob: -4.923060417175293
    8. '(x' → logprob: -5.048060417175293
    9. 'd' → logprob: -5.548060417175293
    10. '(((' → logprob: -5.673060417175293

Token 650: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22776730358600616
    2. 'de' → logprob: -2.7277672290802
    3. ' of' → logprob: -3.1027672290802
    4. '*' → logprob: -3.6027672290802
    5. ' d' → logprob: -4.102767467498779
    6. 'd' → logprob: -4.852767467498779
    7. ' x' → logprob: -5.227767467498779
    8. '   ' → logprob: -5.477767467498779
    9. 'of' → logprob: -5.477767467498779
    10. '    ' → logprob: -5.602767467498779

Token 651: ' groupes' (ID: 72206)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.128226637840271
    2. ' (' → logprob: -2.2532267570495605
    3. 'k' → logprob: -2.5032267570495605
    4. ' full' → logprob: -2.6282267570495605
    5. ' x' → logprob: -2.7532267570495605
    6. '(k' → logprob: -3.0032267570495605
    7. ' fois' → logprob: -3.0032267570495605
    8. '(n' → logprob: -3.0032267570495605
    9. 'cycles' → logprob: -3.3782267570495605
    10. ' complete' → logprob: -3.7532267570495605

Token 652: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10827862471342087
    2. ' de' → logprob: -2.983278512954712
    3. '*' → logprob: -3.358278512954712
    4. '*(' → logprob: -5.608278751373291
    5. ' x' → logprob: -5.983278751373291
    6. '   ' → logprob: -6.108278751373291
    7. ' d' → logprob: -6.733278751373291
    8. 'de' → logprob: -6.983278751373291
    9. ' +' → logprob: -7.108278751373291
    10. ' ' → logprob: -7.108278751373291

Token 653: ' taille' (ID: 41644)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2811686098575592
    2. 'k' → logprob: -1.4061685800552368
    3. ' ' → logprob: -11.656168937683105
    4. '1' → logprob: -13.281168937683105
    5. ' ' → logprob: -13.281168937683105
    6. '	k' → logprob: -13.781168937683105
    7. ' ' → logprob: -14.468668937683105
    8. ' taille' → logprob: -14.656168937683105
    9. ' n' → logprob: -14.781168937683105
    10. ' (' → logprob: -15.093668937683105

Token 654: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5231555104255676
    2. 'k' → logprob: -0.8981555104255676
    3. ' ' → logprob: -11.773155212402344
    4. '	k' → logprob: -12.273155212402344
    5. ' ' → logprob: -12.398155212402344
    6. '   ' → logprob: -12.773155212402344
    7. '`' → logprob: -12.898155212402344
    8. '=k' → logprob: -13.273155212402344
    9. '_k' → logprob: -13.523155212402344
    10. '1' → logprob: -13.648155212402344

Token 655: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37198078632354736
    2. ' *' → logprob: -1.3719807863235474
    3. '*' → logprob: -3.871980667114258
    4. ')*' → logprob: -4.121980667114258
    5. ' )' → logprob: -4.621980667114258
    6. '   ' → logprob: -4.996980667114258
    7. ')*(' → logprob: -6.371980667114258
    8. '*(' → logprob: -7.871980667114258
    9. '),' → logprob: -8.621980667114258
    10. '    ' → logprob: -8.996980667114258

Token 656: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06414303928613663
    2. ' (' → logprob: -2.814142942428589
    3. 'n' → logprob: -6.814143180847168
    4. ' n' → logprob: -6.939143180847168
    5. 'x' → logprob: -10.189143180847168
    6. '(' → logprob: -10.814143180847168
    7. '[n' → logprob: -11.939143180847168
    8. ' x' → logprob: -12.064143180847168
    9. '(x' → logprob: -12.189143180847168
    10. ' d' → logprob: -12.314143180847168

Token 657: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7817467451095581
    2. ' n' → logprob: -1.281746745109558
    3. ' (' → logprob: -1.906746745109558
    4. '(n' → logprob: -2.1567468643188477
    5. '   ' → logprob: -8.156746864318848
    6. 'x' → logprob: -9.656746864318848
    7. ')n' → logprob: -9.906746864318848
    8. ')' → logprob: -10.031746864318848
    9. '1' → logprob: -10.406746864318848
    10. '(' → logprob: -10.781746864318848

Token 658: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07344932854175568
    2. ' -' → logprob: -2.6984493732452393
    3. ')' → logprob: -5.82344913482666
    4. '   ' → logprob: -8.19844913482666
    5. ' )' → logprob: -9.44844913482666
    6. '-k' → logprob: -10.19844913482666
    7. '1' → logprob: -10.19844913482666
    8. ' ' → logprob: -10.69844913482666
    9. ')//' → logprob: -11.07344913482666
    10. ')#' → logprob: -11.32344913482666

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.764977686339989e-05
    2. ' ' → logprob: -10.375057220458984
    3. ')' → logprob: -11.500057220458984
    4. '   ' → logprob: -11.875057220458984
    5. '-' → logprob: -12.125057220458984
    6. '```' → logprob: -13.625057220458984
    7. '...' → logprob: -14.875057220458984
    8. '
' → logprob: -15.125057220458984
    9. '  ' → logprob: -15.125057220458984
    10. ' ' → logprob: -15.250057220458984

Token 660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008420837111771107
    2. ')//' → logprob: -5.258420944213867
    3. ' )' → logprob: -6.633420944213867
    4. '-' → logprob: -7.508420944213867
    5. '//' → logprob: -7.758420944213867
    6. ' //' → logprob: -8.258420944213867
    7. ' -' → logprob: -8.633420944213867
    8. '   ' → logprob: -8.883420944213867
    9. '+' → logprob: -9.008420944213867
    10. ')#' → logprob: -10.258420944213867

Token 661: ' éléments' (ID: 57375)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25568851828575134
    2. ')' → logprob: -2.255688428878784
    3. '*' → logprob: -2.380688428878784
    4. '   ' → logprob: -4.255688667297363
    5. '*x' → logprob: -5.255688667297363
    6. ' ' → logprob: -5.755688667297363
    7. ' )' → logprob: -7.005688667297363
    8. ')*' → logprob: -7.130688667297363
    9. '+' → logprob: -7.130688667297363
    10. ' x' → logprob: -7.630688667297363

Token 662: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45097705721855164
    2. ' *' → logprob: -1.450977087020874
    3. '*' → logprob: -2.825977087020874
    4. ')' → logprob: -3.325977087020874
    5. ' x' → logprob: -4.575976848602295
    6. '*x' → logprob: -4.950976848602295
    7. 'x' → logprob: -5.200976848602295
    8. '    ' → logprob: -6.200976848602295
    9. ' ' → logprob: -6.450976848602295
    10. ',' → logprob: -6.450976848602295

Token 663: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5566573143005371
    2. ' x' → logprob: -0.9316573143005371
    3. '   ' → logprob: -3.431657314300537
    4. ' =' → logprob: -9.431657791137695
    5. '    ' → logprob: -9.431657791137695
    6. ' ' → logprob: -9.931657791137695
    7. '*' → logprob: -9.931657791137695
    8. '*x' → logprob: -10.056657791137695
    9. '=' → logprob: -10.181657791137695
    10. '	x' → logprob: -10.306657791137695

Token 664: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16814519464969635
    2. ' x' → logprob: -1.9181451797485352
    3. '   ' → logprob: -4.918145179748535
    4. 're' → logprob: -9.043145179748535
    5. ' =' → logprob: -10.293145179748535
    6. '%' → logprob: -10.293145179748535
    7. '```' → logprob: -10.418145179748535
    8. 'mod' → logprob: -10.793145179748535
    9. 'rest' → logprob: -10.918145179748535
    10. '=' → logprob: -10.918145179748535

Token 665: ' sum' (ID: 4215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00683223269879818
    2. 're' → logprob: -6.506832122802734
    3. ' x' → logprob: -6.506832122802734
    4. 'r' → logprob: -6.756832122802734
    5. 'rest' → logprob: -7.256832122802734
    6. 'rem' → logprob: -7.631832122802734
    7. 'res' → logprob: -8.256832122802734
    8. 'reste' → logprob: -9.131832122802734
    9. 'val' → logprob: -9.256832122802734
    10. 'mod' → logprob: -9.506832122802734

Token 666: '(di' (ID: 131744)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03839132934808731
    2. '(di' → logprob: -3.288391351699829
    3. 'dz' → logprob: -8.41339111328125
    4. '(' → logprob: -10.03839111328125
    5. 'di' → logprob: -10.78839111328125
    6. 'd' → logprob: -11.16339111328125
    7. '(dx' → logprob: -11.41339111328125
    8. '([' → logprob: -11.53839111328125
    9. '(z' → logprob: -12.03839111328125
    10. '=' → logprob: -12.53839111328125

Token 667: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010279403068125248
    2. ')*' → logprob: -4.760279178619385
    3. ')+' → logprob: -7.135279178619385
    4. '))' → logprob: -8.385279655456543
    5. '()' → logprob: -9.135279655456543
    6. '())' → logprob: -9.260279655456543
    7. '*' → logprob: -9.260279655456543
    8. '[' → logprob: -9.385279655456543
    9. '[:' → logprob: -10.385279655456543
    10. ' )' → logprob: -10.635279655456543

Token 668: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6774866580963135
    2. '((' → logprob: -1.0524866580963135
    3. '(n' → logprob: -2.6774866580963135
    4. '(k' → logprob: -2.9274866580963135
    5. 'x' → logprob: -4.552486419677734
    6. '(' → logprob: -5.177486419677734
    7. ' (' → logprob: -6.427486419677734
    8. '(x' → logprob: -6.802486419677734
    9. 'q' → logprob: -7.552486419677734
    10. '(q' → logprob: -7.802486419677734

Token 669: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005645881756208837
    2. '])*' → logprob: -8.250564575195312
    3. ']))' → logprob: -9.000564575195312
    4. '])+' → logprob: -9.875564575195312
    5. ']' → logprob: -10.125564575195312
    6. '])
' → logprob: -10.375564575195312
    7. ' ])' → logprob: -11.000564575195312
    8. '])]' → logprob: -11.125564575195312
    9. ')])' → logprob: -11.750564575195312
    10. ')' → logprob: -12.875564575195312

Token 670: ' fait' (ID: 7473)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4796653985977173
    2. '*' → logprob: -2.1046652793884277
    3. '+' → logprob: -2.1046652793884277
    4. ' +' → logprob: -2.4796652793884277
    5. ')' → logprob: -2.9796652793884277
    6. ')*' → logprob: -7.354665279388428
    7. ']' → logprob: -7.854665279388428
    8. '   ' → logprob: -8.229665756225586
    9. ' )' → logprob: -8.979665756225586
    10. '),' → logprob: -9.229665756225586

Token 671: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09739309549331665
    2. '(sum' → logprob: -2.597393035888672
    3. ' sum' → logprob: -5.097393035888672
    4. 's' → logprob: -5.472393035888672
    5. '(' → logprob: -5.722393035888672
    6. ' ' → logprob: -6.347393035888672
    7. 'x' → logprob: -7.222393035888672
    8. 'la' → logprob: -7.472393035888672
    9. ')' → logprob: -7.722393035888672
    10. '(s' → logprob: -8.472393035888672

Token 672: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0014041600516065955
    2. 's' → logprob: -7.001404285430908
    3. ' sum' → logprob: -7.876404285430908
    4. 'som' → logprob: -9.37640380859375
    5. ' somme' → logprob: -10.62640380859375
    6. ' som' → logprob: -13.75140380859375
    7. '(sum' → logprob: -13.75140380859375
    8. '=sum' → logprob: -14.12640380859375
    9. '	sum' → logprob: -15.37640380859375
    10. '```' → logprob: -16.12640380859375

Token 673: ' des' (ID: 731)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.010716227814555168
    2. '(' → logprob: -4.760716438293457
    3. 'di' → logprob: -6.760716438293457
    4. '([' → logprob: -7.635716438293457
    5. '(
' → logprob: -8.385716438293457
    6. ' (' → logprob: -10.010716438293457
    7. '(sum' → logprob: -10.010716438293457
    8. ' di' → logprob: -10.135716438293457
    9. '(d' → logprob: -11.135716438293457
    10. '((' → logprob: -11.385716438293457

Token 674: ' k' (ID: 372)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.029982930049300194
    2. ' di' → logprob: -3.5299830436706543
    3. 'k' → logprob: -9.029982566833496
    4. ' k' → logprob: -10.279982566833496
    5. '(di' → logprob: -10.404982566833496
    6. ']' → logprob: -11.529982566833496
    7. ' elements' → logprob: -11.904982566833496
    8. 'd' → logprob: -11.904982566833496
    9. 'elements' → logprob: -12.529982566833496
    10. ' premiers' → logprob: -12.779982566833496

Token 675: ' premiers' (ID: 59140)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11513644456863403
    2. '])' → logprob: -2.9901363849639893
    3. '[' → logprob: -3.7401363849639893
    4. ']' → logprob: -4.115136623382568
    5. '(' → logprob: -5.365136623382568
    6. ' )' → logprob: -5.865136623382568
    7. 'di' → logprob: -5.865136623382568
    8. ' ' → logprob: -6.365136623382568
    9. '[:' → logprob: -6.865136623382568
    10. ' premiers' → logprob: -6.990136623382568

Token 676: ' éléments' (ID: 57375)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.7142004370689392
    2. 'élé' → logprob: -1.089200496673584
    3. ' éléments' → logprob: -2.339200496673584
    4. 'elements' → logprob: -3.214200496673584
    5. 'di' → logprob: -3.964200496673584
    6. ']' → logprob: -5.589200496673584
    7. ' di' → logprob: -5.589200496673584
    8. ')' → logprob: -5.839200496673584
    9. ' ele' → logprob: -6.214200496673584
    10. ' ' → logprob: -7.089200496673584

Token 677: ' dans' (ID: 2671)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.9071133732795715
    2. ')' → logprob: -1.1571133136749268
    3. ']' → logprob: -2.0321133136749268
    4. '(di' → logprob: -2.9071133136749268
    5. '   ' → logprob: -3.2821133136749268
    6. '+' → logprob: -3.6571133136749268
    7. ' di' → logprob: -5.157113552093506
    8. ' de' → logprob: -5.282113552093506
    9. ' +' → logprob: -5.782113552093506
    10. ')+' → logprob: -5.907113552093506

Token 678: ' la' (ID: 557)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.0032151418272405863
    2. ' di' → logprob: -5.753215312957764
    3. 'd' → logprob: -10.253214836120605
    4. '(di' → logprob: -13.378214836120605
    5. ' d' → logprob: -14.628214836120605
    6. ' ' → logprob: -16.378215789794922
    7. '_di' → logprob: -17.003215789794922
    8. 'die' → logprob: -17.128215789794922
    9. ' ' → logprob: -17.753215789794922
    10. 'la' → logprob: -17.878215789794922

Token 679: ' liste' (ID: 31719)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.0005975929088890553
    2. ' di' → logprob: -8.000597953796387
    3. 'd' → logprob: -8.250597953796387
    4. 'liste' → logprob: -14.500597953796387
    5. 'list' → logprob: -15.750597953796387
    6. ' d' → logprob: -16.00059700012207
    7. ' list' → logprob: -16.75059700012207
    8. 'lista' → logprob: -17.62559700012207
    9. '_di' → logprob: -17.62559700012207
    10. '`' → logprob: -18.00059700012207

Token 680: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.0017002914100885391
    2. ' di' → logprob: -6.626700401306152
    3. 'd' → logprob: -8.001700401306152
    4. '(di' → logprob: -10.751700401306152
    5. '   ' → logprob: -11.751700401306152
    6. '[:' → logprob: -12.876700401306152
    7. '[' → logprob: -13.376700401306152
    8. '```' → logprob: -13.626700401306152
    9. '`' → logprob: -13.751700401306152
    10. '(' → logprob: -14.376700401306152

Token 681: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8626816868782043
    2. ')' → logprob: -1.3626816272735596
    3. '+' → logprob: -1.7376816272735596
    4. '   ' → logprob: -2.2376816272735596
    5. ' *' → logprob: -3.8626816272735596
    6. '*' → logprob: -4.612681865692139
    7. ' )' → logprob: -6.737681865692139
    8. ')+' → logprob: -6.737681865692139
    9. ']' → logprob: -7.112681865692139
    10. '    ' → logprob: -7.112681865692139

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059593603014945984
    2. ' +' → logprob: -3.809593677520752
    3. '+' → logprob: -4.559593677520752
    4. 'x' → logprob: -4.934593677520752
    5. '    
' → logprob: -5.309593677520752
    6. ' *' → logprob: -5.434593677520752
    7. ' x' → logprob: -5.684593677520752
    8. '*' → logprob: -5.934593677520752
    9. '*x' → logprob: -6.934593677520752
    10. '
' → logprob: -7.309593677520752

Token 683: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0873280763626099
    2. ' *' → logprob: -1.3373280763626099
    3. ' +' → logprob: -2.3373279571533203
    4. '*' → logprob: -2.3373279571533203
    5. '   ' → logprob: -2.4623279571533203
    6. ' x' → logprob: -3.0873279571533203
    7. '+' → logprob: -3.2123279571533203
    8. '*x' → logprob: -3.4623279571533203
    9. '
' → logprob: -6.96232795715332
    10. ')' → logprob: -7.08732795715332

Token 684: ' On' (ID: 2160)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0042549311183393
    2. ' x' → logprob: -5.5042548179626465
    3. '   ' → logprob: -8.879255294799805
    4. 'new' → logprob: -10.879255294799805
    5. '
' → logprob: -13.504255294799805
    6. ' ' → logprob: -13.879255294799805
    7. 'if' → logprob: -13.879255294799805
    8. '```' → logprob: -13.879255294799805
    9. '       ' → logprob: -14.129255294799805
    10. '(x' → logprob: -14.254255294799805

Token 685: ' multipl' (ID: 44269)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8753113746643066
    2. 'x' → logprob: -1.0003113746643066
    3. '=' → logprob: -2.6253113746643066
    4. ' +=' → logprob: -2.7503113746643066
    5. '+=' → logprob: -3.2503113746643066
    6. ' =' → logprob: -3.3753113746643066
    7. '#' → logprob: -7.500311374664307
    8. '_x' → logprob: -7.625311374664307
    9. '   ' → logprob: -7.625311374664307
    10. 's' → logprob: -7.625311374664307

Token 686: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.14566032588481903
    2. 'ipl' → logprob: -2.770660400390625
    3. 'ip' → logprob: -3.270660400390625
    4. 'ies' → logprob: -4.270660400390625
    5. 'ique' → logprob: -5.145660400390625
    6. 'ipe' → logprob: -5.895660400390625
    7. 'iez' → logprob: -6.270660400390625
    8. 'e' → logprob: -6.520660400390625
    9. 'ice' → logprob: -6.520660400390625
    10. 'ieu' → logprob: -6.645660400390625

Token 687: ' cette' (ID: 7696)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1880396604537964
    2. ' x' → logprob: -1.3130396604537964
    3. 'x' → logprob: -1.4380396604537964
    4. '(x' → logprob: -2.438039779663086
    5. '((' → logprob: -3.188039779663086
    6. '(' → logprob: -3.438039779663086
    7. ' ((' → logprob: -4.438039779663086
    8. '(sum' → logprob: -5.063039779663086
    9. 'sum' → logprob: -5.813039779663086
    10. ' sum' → logprob: -5.813039779663086

Token 688: ' somme' (ID: 64484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.526930570602417
    2. ' space' → logprob: -1.526930570602417
    3. ' sum' → logprob: -1.651930570602417
    4. ' )' → logprob: -1.901930570602417
    5. ' by' → logprob: -2.901930570602417
    6. ' ' → logprob: -2.901930570602417
    7. ' x' → logprob: -3.526930570602417
    8. ' (' → logprob: -3.901930570602417
    9. ' par' → logprob: -4.526930809020996
    10. ' ' → logprob: -4.901930809020996

Token 689: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8683373332023621
    2. ' *' → logprob: -0.8683373332023621
    3. ')' → logprob: -2.993337392807007
    4. ' di' → logprob: -4.118337154388428
    5. '(sum' → logprob: -4.118337154388428
    6. '(n' → logprob: -4.243337154388428
    7. ' (' → logprob: -4.368337154388428
    8. 'di' → logprob: -4.368337154388428
    9. '*(' → logprob: -4.743337154388428
    10. '(' → logprob: -5.368337154388428

Token 690: ' le' (ID: 505)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.4093600809574127
    2. '((' → logprob: -1.1593600511550903
    3. ' (' → logprob: -3.90936017036438
    4. '(n' → logprob: -6.284359931945801
    5. ' ' → logprob: -8.2843599319458
    6. ' ' → logprob: -10.9093599319458
    7. '(' → logprob: -11.0343599319458
    8. '   ' → logprob: -11.1593599319458
    9. '  ' → logprob: -12.6593599319458
    10. '```' → logprob: -12.6593599319458

Token 691: ' nombre' (ID: 9733)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5915260314941406
    2. ' ((' → logprob: -0.8415260314941406
    3. ' (' → logprob: -4.341526031494141
    4. '(n' → logprob: -6.091526031494141
    5. ' ' → logprob: -8.71652603149414
    6. '   ' → logprob: -11.59152603149414
    7. '(' → logprob: -12.46652603149414
    8. '  ' → logprob: -12.71652603149414
    9. ' ' → logprob: -12.71652603149414
    10. '```' → logprob: -14.09152603149414

Token 692: ' de' (ID: 334)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20922395586967468
    2. ' ((' → logprob: -1.709223985671997
    3. ' (' → logprob: -5.959223747253418
    4. '(n' → logprob: -6.084223747253418
    5. '   ' → logprob: -6.834223747253418
    6. ' //' → logprob: -7.209223747253418
    7. '(' → logprob: -8.459223747253418
    8. '//' → logprob: -8.584223747253418
    9. ' ' → logprob: -8.834223747253418
    10. '  ' → logprob: -9.584223747253418

Token 693: ' groupes' (ID: 72206)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.63270503282547
    2. ' ((' → logprob: -0.75770503282547
    3. '(n' → logprob: -10.257704734802246
    4. ' (' → logprob: -10.257704734802246
    5. ' ' → logprob: -10.632704734802246
    6. ' ' → logprob: -12.882704734802246
    7. '   ' → logprob: -13.632704734802246
    8. '[(' → logprob: -13.757704734802246
    9. '(' → logprob: -13.882704734802246
    10. '```' → logprob: -14.132704734802246

Token 694: ',' (ID: 11)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.3515441417694092
    2. '((' → logprob: -1.2265441417694092
    3. '   ' → logprob: -6.726544380187988
    4. ' (' → logprob: -6.851544380187988
    5. ' *' → logprob: -7.726544380187988
    6. '(n' → logprob: -9.351544380187988
    7. ' ' → logprob: -9.351544380187988
    8. ' ' → logprob: -10.226544380187988
    9. '*((' → logprob: -10.351544380187988
    10. ',' → logprob: -10.476544380187988

Token 695: ' et' (ID: 859)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8632528185844421
    2. '"' → logprob: -1.613252878189087
    3. '    ' → logprob: -2.363252878189087
    4. 'x' → logprob: -2.363252878189087
    5. ' )' → logprob: -2.738252878189087
    6. ' "' → logprob: -3.113252878189087
    7. ')' → logprob: -3.238252878189087
    8. '   ' → logprob: -4.363252639770508
    9. ' ' → logprob: -4.613252639770508
    10. ' '' → logprob: -5.613252639770508

Token 696: ' on' (ID: 402)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.049278002232313156
    2. 'x' → logprob: -3.7992780208587646
    3. '    ' → logprob: -4.4242777824401855
    4. '"' → logprob: -5.0492777824401855
    5. ' add' → logprob: -6.7992777824401855
    6. ' "' → logprob: -6.9242777824401855
    7. ' ' → logprob: -7.2992777824401855
    8. ')' → logprob: -7.2992777824401855
    9. ' d' → logprob: -7.7992777824401855
    10. '   ' → logprob: -7.9242777824401855

Token 697: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9218369722366333
    2. ' ajoute' → logprob: -0.9218369722366333
    3. ' +=' → logprob: -3.4218368530273438
    4. '+' → logprob: -3.6718368530273438
    5. 's' → logprob: -3.7968368530273438
    6. 'contin' → logprob: -4.296836853027344
    7. ' add' → logprob: -4.421836853027344
    8. ' continue' → logprob: -4.671836853027344
    9. ' mod' → logprob: -4.671836853027344
    10. '+=' → logprob: -4.796836853027344

Token 698: ''aj' (ID: 116735)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9661096930503845
    2. '#' → logprob: -1.4661097526550293
    3. ' +=' → logprob: -2.9661097526550293
    4. ' continue' → logprob: -2.9661097526550293
    5. '+' → logprob: -3.2161097526550293
    6. '+=' → logprob: -3.4661097526550293
    7. ' ajoute' → logprob: -3.5911097526550293
    8. ')' → logprob: -3.7161097526550293
    9. ' multipl' → logprob: -4.466109752655029
    10. 'a' → logprob: -4.466109752655029

Token 699: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -1.7432603272027336e-06
    2. 'outes' → logprob: -14.625001907348633
    3. 'o' → logprob: -14.750001907348633
    4. 'outez' → logprob: -15.250001907348633
    5. 'out' → logprob: -15.750001907348633
    6. 'uste' → logprob: -16.125001907348633
    7. 'outer' → logprob: -16.500001907348633
    8. '#' → logprob: -17.500001907348633
    9. 'ou' → logprob: -17.875001907348633
    10. ']' → logprob: -18.125001907348633

Token 700: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17318575084209442
    2. ' x' → logprob: -3.0481858253479004
    3. ' au' → logprob: -3.2981858253479004
    4. ')' → logprob: -3.5481858253479004
    5. ' to' → logprob: -4.2981858253479
    6. '    ' → logprob: -5.0481858253479
    7. 'x' → logprob: -5.2981858253479
    8. '   ' → logprob: -5.6731858253479
    9. ' )' → logprob: -5.7981858253479
    10. ' +=' → logprob: -5.9231858253479

Token 701: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04325014725327492
    2. ' x' → logprob: -3.16825008392334
    3. '(x' → logprob: -8.41825008392334
    4. ' (' → logprob: -10.66825008392334
    5. '   ' → logprob: -12.66825008392334
    6. ' ' → logprob: -14.04325008392334
    7. '(' → logprob: -14.41825008392334
    8. '```' → logprob: -14.54325008392334
    9. '	x' → logprob: -14.79325008392334
    10. 'n' → logprob: -15.29325008392334

Token 702: ' modulo' (ID: 112372)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6664538383483887
    2. '+' → logprob: -0.7914538383483887
    3. ' +=' → logprob: -3.6664538383483887
    4. '+=' → logprob: -5.166453838348389
    5. '   ' → logprob: -7.291453838348389
    6. '+x' → logprob: -7.916453838348389
    7. ' +
' → logprob: -8.041454315185547
    8. '=' → logprob: -8.916454315185547
    9. '    ' → logprob: -9.041454315185547
    10. '+
' → logprob: -9.291454315185547

Token 703: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1800410896539688
    2. 'm' → logprob: -1.8050410747528076
    3. '(m' → logprob: -8.930041313171387
    4. ' (' → logprob: -9.180041313171387
    5. ' ' → logprob: -10.680041313171387
    6. ' ' → logprob: -11.055041313171387
    7. '(' → logprob: -11.805041313171387
    8. '   ' → logprob: -12.305041313171387
    9. ' x' → logprob: -13.680041313171387
    10. '```' → logprob: -13.805041313171387

Token 704: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.763588011264801
    2. '
' → logprob: -1.6385879516601562
    3. '   ' → logprob: -2.0135879516601562
    4. 'x' → logprob: -2.2635879516601562
    5. ' x' → logprob: -3.2635879516601562
    6. '=' → logprob: -3.3885879516601562
    7. '    
' → logprob: -4.013587951660156
    8. '
' → logprob: -5.763587951660156
    9. '(x' → logprob: -6.763587951660156
    10. ',' → logprob: -7.013587951660156

Token 705: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14440883696079254
    2. 'x' → logprob: -2.269408941268921
    3. '
' → logprob: -3.894408941268921
    4. ' x' → logprob: -5.144408702850342
    5. '    
' → logprob: -5.519408702850342
    6. '	x' → logprob: -9.1444091796875
    7. '  
' → logprob: -9.2694091796875
    8. '\n' → logprob: -9.2694091796875
    9. ' 
' → logprob: -9.2694091796875
    10. ' ' → logprob: -9.2694091796875

Token 706: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3513956367969513
    2. ' x' → logprob: -1.226395606994629
    3. '   ' → logprob: -5.851395606994629
    4. ' =' → logprob: -10.351395606994629
    5. ' 
' → logprob: -11.601395606994629
    6. '    
' → logprob: -11.726395606994629
    7. '
' → logprob: -11.976395606994629
    8. '	x' → logprob: -12.476395606994629
    9. '=' → logprob: -12.601395606994629
    10. ' ' → logprob: -12.851395606994629

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18385665118694305
    2. '=' → logprob: -1.8088566064834595
    3. ' %=' → logprob: -5.80885648727417
    4. '%=' → logprob: -7.18385648727417
    5. ' +=' → logprob: -8.433856964111328
    6. '+=' → logprob: -9.183856964111328
    7. ' =(' → logprob: -12.058856964111328
    8. '%' → logprob: -12.183856964111328
    9. '=(' → logprob: -12.558856964111328
    10. ' ' → logprob: -12.683856964111328

Token 708: ' ((' (ID: 3536)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002857416868209839
    2. ' (' → logprob: -5.877857208251953
    3. '(' → logprob: -10.002857208251953
    4. '   ' → logprob: -12.377857208251953
    5. '((' → logprob: -13.127857208251953
    6. ' ' → logprob: -15.377857208251953
    7. '(X' → logprob: -15.877857208251953
    8. '  ' → logprob: -16.127857208251953
    9. '(int' → logprob: -16.377857208251953
    10. '(n' → logprob: -16.502857208251953

Token 709: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01842571049928665
    2. '(n' → logprob: -4.018425941467285
    3. 'x' → logprob: -8.518425941467285
    4. ' n' → logprob: -10.393425941467285
    5. ' (' → logprob: -10.768425941467285
    6. '((' → logprob: -11.518425941467285
    7. '   ' → logprob: -12.018425941467285
    8. '(x' → logprob: -12.393425941467285
    9. '[n' → logprob: -14.143425941467285
    10. '	n' → logprob: -14.143425941467285

Token 710: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036023214925080538
    2. ' -' → logprob: -5.628602504730225
    3. '[' → logprob: -14.128602027893066
    4. '1' → logprob: -14.378602027893066
    5. '   ' → logprob: -14.878602027893066
    6. '-
' → logprob: -15.753602027893066
    7. '```' → logprob: -15.878602027893066
    8. '[-' → logprob: -16.628602981567383
    9. ')' → logprob: -16.753602981567383
    10. ' ' → logprob: -17.066102981567383

Token 711: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.500123977661133
    4. '  ' → logprob: -17.500123977661133
    5. ')' → logprob: -17.750123977661133
    6. '```' → logprob: -18.125123977661133
    7. '<|end|>' → logprob: -18.500123977661133
    8. '[' → logprob: -18.625123977661133
    9. '    ' → logprob: -18.687623977661133
    10. '۱' → logprob: -18.875123977661133

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -18.625
    5. '
' → logprob: -19.125
    6. '2' → logprob: -19.5
    7. ')' → logprob: -19.625
    8. '<|end|>' → logprob: -20.1875
    9. '[' → logprob: -20.4375
    10. 'x' → logprob: -20.875

Token 713: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05230952054262161
    2. ')//' → logprob: -3.052309513092041
    3. '//' → logprob: -5.677309513092041
    4. ' //' → logprob: -8.5523099899292
    5. ' )' → logprob: -9.3023099899292
    6. '   ' → logprob: -13.0523099899292
    7. ')
' → logprob: -13.4273099899292
    8. '-' → logprob: -13.6773099899292
    9. ']' → logprob: -14.3023099899292
    10. ')#' → logprob: -14.6773099899292

Token 714: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.47926706075668335
    2. '//' → logprob: -0.9792670607566833
    3. '%' → logprob: -5.479267120361328
    4. ' %' → logprob: -7.354267120361328
    5. ')' → logprob: -8.604267120361328
    6. '```' → logprob: -9.604267120361328
    7. ')//' → logprob: -10.479267120361328
    8. ' ' → logprob: -11.104267120361328
    9. '`' → logprob: -11.354267120361328
    10. ' //
' → logprob: -11.479267120361328

Token 715: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.696889623621246e-06
    2. ' k' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.625001907348633
    4. '[k' → logprob: -21.000001907348633
    5. '	k' → logprob: -21.250001907348633
    6. ' ' → logprob: -21.625001907348633
    7. '```' → logprob: -21.750001907348633
    8. ')' → logprob: -22.000001907348633
    9. '  ' → logprob: -22.125001907348633
    10. '{k' → logprob: -22.375001907348633

Token 716: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33525386452674866
    2. ' *' → logprob: -1.4602538347244263
    3. ')' → logprob: -3.335253953933716
    4. ')*' → logprob: -4.085253715515137
    5. '*k' → logprob: -8.960253715515137
    6. '*m' → logprob: -10.585253715515137
    7. ' ' → logprob: -10.835253715515137
    8. '*)' → logprob: -11.710253715515137
    9. '   ' → logprob: -11.710253715515137
    10. '+' → logprob: -11.835253715515137

Token 717: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048724640160799026
    2. ' *' → logprob: -3.04872465133667
    3. '%' → logprob: -9.298724174499512
    4. '*x' → logprob: -11.048724174499512
    5. '*m' → logprob: -11.673724174499512
    6. '+' → logprob: -11.923724174499512
    7. ')' → logprob: -12.298724174499512
    8. '*
' → logprob: -12.923724174499512
    9. ' %' → logprob: -13.298724174499512
    10. '*(' → logprob: -13.673724174499512

Token 718: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2035892754793167
    2. '(sum' → logprob: -1.7035893201828003
    3. ' sum' → logprob: -6.20358943939209
    4. ' (' → logprob: -9.45358943939209
    5. '(s' → logprob: -9.57858943939209
    6. '(' → logprob: -13.32858943939209
    7. '((' → logprob: -14.57858943939209
    8. '	sum' → logprob: -14.82858943939209
    9. 's' → logprob: -15.20358943939209
    10. '_sum' → logprob: -15.57858943939209

Token 719: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.002202120842412114
    2. '(' → logprob: -6.127202033996582
    3. ' (' → logprob: -11.502202033996582
    4. 'di' → logprob: -12.127202033996582
    5. ' di' → logprob: -14.752202033996582
    6. '(d' → logprob: -14.877202033996582
    7. '(
' → logprob: -15.502202033996582
    8. '(x' → logprob: -16.2522029876709
    9. '(div' → logprob: -16.3772029876709
    10. '([' → logprob: -17.0022029876709

Token 720: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.173704271830502e-06
    2. ' [:' → logprob: -13.50000286102295
    3. '[' → logprob: -13.75000286102295
    4. '][:' → logprob: -15.12500286102295
    5. '[
' → logprob: -16.250003814697266
    6. ')' → logprob: -16.500003814697266
    7. '
' → logprob: -16.500003814697266
    8. '(:' → logprob: -16.875003814697266
    9. '[:]' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.875003814697266

Token 721: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9623810658231378e-05
    2. ' k' → logprob: -10.875020027160645
    3. '(k' → logprob: -14.875020027160645
    4. '   ' → logprob: -15.125020027160645
    5. ']' → logprob: -17.375019073486328
    6. ' ' → logprob: -18.000019073486328
    7. '	k' → logprob: -18.125019073486328
    8. '  ' → logprob: -18.250019073486328
    9. ')' → logprob: -18.250019073486328
    10. '[k' → logprob: -18.500019073486328

Token 722: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.028497109189629555
    2. ')' → logprob: -3.6534972190856934
    3. '))' → logprob: -6.278497219085693
    4. ']' → logprob: -8.653496742248535
    5. ']))' → logprob: -9.278496742248535
    6. ')])' → logprob: -10.403496742248535
    7. ' ])' → logprob: -12.153496742248535
    8. '})' → logprob: -12.528496742248535
    9. ')%' → logprob: -12.653496742248535
    10. ')]' → logprob: -13.153496742248535

Token 723: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2673952281475067
    2. '%' → logprob: -1.517395257949829
    3. ' +' → logprob: -4.89239501953125
    4. '+' → logprob: -5.89239501953125
    5. ')' → logprob: -6.01739501953125
    6. '%x' → logprob: -6.26739501953125
    7. '<|end|>' → logprob: -9.01739501953125
    8. ')%' → logprob: -9.14239501953125
    9. ' ' → logprob: -9.51739501953125
    10. '   ' → logprob: -9.64239501953125

Token 724: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7175707817077637
    2. 'x' → logprob: -0.8425707817077637
    3. ' x' → logprob: -2.8425707817077637
    4. ' (' → logprob: -3.9675707817077637
    5. '((' → logprob: -5.717570781707764
    6. '(' → logprob: -7.717570781707764
    7. '(n' → logprob: -7.967570781707764
    8. ' ((' → logprob: -9.467571258544922
    9. '   ' → logprob: -9.592571258544922
    10. '[x' → logprob: -11.717571258544922

Token 725: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06381417065858841
    2. '%' → logprob: -2.813814163208008
    3. ')' → logprob: -6.938814163208008
    4. '<|end|>' → logprob: -7.938814163208008
    5. '%x' → logprob: -8.563814163208008
    6. '
' → logprob: -8.938814163208008
    7. ' %=' → logprob: -9.688814163208008
    8. ')%' → logprob: -10.688814163208008
    9. ' %
' → logprob: -10.938814163208008
    10. ' 
' → logprob: -11.063814163208008

Token 726: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01815146580338478
    2. ' m' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.89315128326416
    4. ' ' → logprob: -15.01815128326416
    5. '	m' → logprob: -15.01815128326416
    6. '(m' → logprob: -15.26815128326416
    7. ' (' → logprob: -15.89315128326416
    8. '%m' → logprob: -16.018152236938477
    9. '(' → logprob: -17.643152236938477
    10. ' м' → logprob: -17.768152236938477

Token 727: '
    
' (ID: 15698)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05503765493631363
    2. '<|end|>' → logprob: -3.8050377368927
    3. '%' → logprob: -4.055037498474121
    4. ')' → logprob: -4.430037498474121
    5. ')%' → logprob: -7.430037498474121
    6. ' )' → logprob: -8.055037498474121
    7. ' ' → logprob: -8.555037498474121
    8. ' 
' → logprob: -8.805037498474121
    9. '
' → logprob: -8.805037498474121
    10. '<|end|>' → logprob: -9.055037498474121

Token 728: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04040162265300751
    2. '%' → logprob: -3.5404016971588135
    3. ')' → logprob: -5.415401458740234
    4. '
' → logprob: -6.040401458740234
    5. '<|end|>' → logprob: -6.040401458740234
    6. '%n' → logprob: -8.165401458740234
    7. '%x' → logprob: -8.165401458740234
    8. ' 
' → logprob: -8.665401458740234
    9. ')%' → logprob: -9.040401458740234
    10. ' ' → logprob: -9.165401458740234

Token 729: ' #' (ID: 1069)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.058424562215805054
    2. ')' → logprob: -3.558424472808838
    3. '%' → logprob: -3.683424472808838
    4. '
' → logprob: -7.183424472808838
    5. ' %=' → logprob: -7.558424472808838
    6. ' %
' → logprob: -7.683424472808838
    7. '<|end|>' → logprob: -8.183424949645996
    8. ' )' → logprob: -8.558424949645996
    9. ')%' → logprob: -8.808424949645996
    10. ' x' → logprob: -9.183424949645996

Token 730: ' Si' (ID: 7832)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04342137649655342
    2. 'print' → logprob: -3.2934212684631348
    3. 'if' → logprob: -5.543421268463135
    4. ' x' → logprob: -6.793421268463135
    5. '   ' → logprob: -8.918421745300293
    6. '#' → logprob: -9.418421745300293
    7. ' if' → logprob: -10.418421745300293
    8. 'for' → logprob: -10.543421745300293
    9. ' print' → logprob: -10.793421745300293
    10. 'n' → logprob: -11.793421745300293

Token 731: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08280417323112488
    2. 'x' → logprob: -2.5828042030334473
    3. ' (' → logprob: -6.332804203033447
    4. ' n' → logprob: -7.082804203033447
    5. ' ' → logprob: -7.207804203033447
    6. '(' → logprob: -8.457803726196289
    7. '(x' → logprob: -9.332803726196289
    8. ' ' → logprob: -9.582803726196289
    9. ' m' → logprob: -9.832803726196289
    10. 'n' → logprob: -9.832803726196289

Token 732: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6664398312568665
    2. ' x' → logprob: -1.6664397716522217
    3. ' (' → logprob: -2.1664397716522217
    4. '(n' → logprob: -2.2914397716522217
    5. '((' → logprob: -3.5414397716522217
    6. ' ((' → logprob: -3.9164397716522217
    7. '(x' → logprob: -4.416440010070801
    8. 'n' → logprob: -4.791440010070801
    9. ' n' → logprob: -4.791440010070801
    10. '(' → logprob: -5.916440010070801

Token 733: '-' (ID: 12)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5745680928230286
    2. '%' → logprob: -1.6995680332183838
    3. '-' → logprob: -1.9495680332183838
    4. ' -' → logprob: -2.699568033218384
    5. ' >' → logprob: -3.824568033218384
    6. ' <=' → logprob: -4.824568271636963
    7. '>' → logprob: -5.449568271636963
    8. ')' → logprob: -5.449568271636963
    9. '<=' → logprob: -6.574568271636963
    10. '   ' → logprob: -7.199568271636963

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009824086911976337
    2. ' ' → logprob: -4.634824275970459
    3. '-' → logprob: -10.3848237991333
    4. '   ' → logprob: -11.5723237991333
    5. '2' → logprob: -12.2598237991333
    6. ')' → logprob: -12.3848237991333
    7. '%' → logprob: -12.6973237991333
    8. '  ' → logprob: -12.9473237991333
    9. '#' → logprob: -13.5098237991333
    10. '```' → logprob: -13.5723237991333

Token 735: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02839178778231144
    2. ' )' → logprob: -4.1533918380737305
    3. '-' → logprob: -5.4033918380737305
    4. ' -' → logprob: -5.6533918380737305
    5. ')%' → logprob: -5.7783918380737305
    6. '   ' → logprob: -7.0283918380737305
    7. ')>=' → logprob: -9.90339183807373
    8. ')#' → logprob: -10.27839183807373
    9. ')>' → logprob: -10.90339183807373
    10. '%' → logprob: -10.90339183807373

Token 736: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4367051124572754
    2. '%' → logprob: -1.1867051124572754
    3. '-' → logprob: -3.5617051124572754
    4. '>' → logprob: -5.061705112457275
    5. ' >' → logprob: -5.061705112457275
    6. ' -' → logprob: -5.811705112457275
    7. ' >=' → logprob: -6.561705112457275
    8. '>=' → logprob: -6.811705112457275
    9. ')' → logprob: -7.936705112457275
    10. ' !=' → logprob: -8.186704635620117

Token 737: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12701493501663208
    2. ' k' → logprob: -2.1270148754119873
    3. 'm' → logprob: -10.127015113830566
    4. ' m' → logprob: -10.502015113830566
    5. '(k' → logprob: -11.252015113830566
    6. ' ' → logprob: -12.752015113830566
    7. ' (' → logprob: -13.377015113830566
    8. '(' → logprob: -14.752015113830566
    9. '%' → logprob: -14.877015113830566
    10. 'q' → logprob: -15.252015113830566

Token 738: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6910575032234192
    2. ' ==' → logprob: -0.8160575032234192
    3. '==' → logprob: -3.4410574436187744
    4. '!=' → logprob: -3.8160574436187744
    5. ' >' → logprob: -6.8160576820373535
    6. '>' → logprob: -7.5660576820373535
    7. ')' → logprob: -7.8160576820373535
    8. '   ' → logprob: -7.9410576820373535
    9. ' >=' → logprob: -9.316057205200195
    10. ' <' → logprob: -9.566057205200195

Token 739: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5296809077262878
    2. ' !=' → logprob: -1.1546809673309326
    3. '==' → logprob: -3.1546809673309326
    4. ' ==' → logprob: -4.1546807289123535
    5. '=' → logprob: -4.9046807289123535
    6. '>' → logprob: -5.1546807289123535
    7. ')' → logprob: -5.2796807289123535
    8. 'ot' → logprob: -5.5296807289123535
    9. 'u' → logprob: -6.0296807289123535
    10. '%' → logprob: -6.1546807289123535

Token 740: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4748551547527313
    2. ' not' → logprob: -1.9748551845550537
    3. '0' → logprob: -2.4748551845550537
    4. 'pas' → logprob: -2.8498551845550537
    5. 'not' → logprob: -2.9748551845550537
    6. '=' → logprob: -3.9748551845550537
    7. '>' → logprob: -4.849854946136475
    8. '!=' → logprob: -5.099854946136475
    9. '_pas' → logprob: -5.724854946136475
    10. 'ot' → logprob: -5.974854946136475

Token 741: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004630816401913762
    2. ' ' → logprob: -7.750463008880615
    3. '=' → logprob: -10.375463485717773
    4. '(' → logprob: -14.500463485717773
    5. '==' → logprob: -14.500463485717773
    6. ' =' → logprob: -16.125463485717773
    7. ' (' → logprob: -16.250463485717773
    8. '(k' → logprob: -17.125463485717773
    9. ' zero' → logprob: -17.500463485717773
    10. '>' → logprob: -18.000463485717773

Token 742: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024950411170721054
    2. '!=' → logprob: -6.752494812011719
    3. ' !=' → logprob: -6.877494812011719
    4. ' :' → logprob: -9.502494812011719
    5. ':
' → logprob: -9.627494812011719
    6. '>' → logprob: -9.877494812011719
    7. ',' → logprob: -10.502494812011719
    8. ')' → logprob: -10.752494812011719
    9. '():' → logprob: -11.377494812011719
    10. '):' → logprob: -11.752494812011719

Token 743: 'c' (ID: 66)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27354273200035095
    2. '):' → logprob: -1.6485427618026733
    3. ')' → logprob: -3.898542642593384
    4. ' :' → logprob: -4.273542881011963
    5. '   ' → logprob: -5.773542881011963
    6. '),' → logprob: -5.898542881011963
    7. '):
' → logprob: -6.148542881011963
    8. ',' → logprob: -6.398542881011963
    9. ' and' → logprob: -6.898542881011963
    10. ' ):' → logprob: -6.898542881011963

Token 744: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.326742559671402
    2. '!=' → logprob: -2.826742649078369
    3. ',' → logprob: -3.201742649078369
    4. 'e' → logprob: -3.326742649078369
    5. ')' → logprob: -3.326742649078369
    6. '):' → logprob: -3.951742649078369
    7. ''' → logprob: -4.076742649078369
    8. '),' → logprob: -4.451742649078369
    9. 'u' → logprob: -4.451742649078369
    10. '=' → logprob: -4.826742649078369

Token 745: '-à' (ID: 56297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5393500328063965
    2. ':' → logprob: -2.1643500328063965
    3. '=' → logprob: -2.4143500328063965
    4. ' True' → logprob: -3.2893500328063965
    5. 'True' → logprob: -3.5393500328063965
    6. '>' → logprob: -3.5393500328063965
    7. 'à' → logprob: -4.0393500328063965
    8. '-à' → logprob: -4.0393500328063965
    9. ')' → logprob: -4.4143500328063965
    10. '   ' → logprob: -4.6643500328063965

Token 746: '-dire' (ID: 76064)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8126592193730175e-05
    2. ' ' → logprob: -9.8750581741333
    3. '   ' → logprob: -13.3750581741333
    4. '=' → logprob: -13.7500581741333
    5. 'pas' → logprob: -14.1250581741333
    6. 'zero' → logprob: -14.1250581741333
    7. 'False' → logprob: -14.5000581741333
    8. 'z' → logprob: -14.5000581741333
    9. '1' → logprob: -15.2500581741333
    10. 'o' → logprob: -15.6250581741333

Token 747: ' qu' (ID: 474)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1505720615386963
    2. '>' → logprob: -2.9005720615386963
    3. ' >' → logprob: -4.025571823120117
    4. '(n' → logprob: -4.400571823120117
    5. ' ' → logprob: -4.525571823120117
    6. ' (' → logprob: -4.775571823120117
    7. 'n' → logprob: -4.900571823120117
    8. ')' → logprob: -5.275571823120117
    9. ' !=' → logprob: -5.650571823120117
    10. '
' → logprob: -5.775571823120117

Token 748: ''il' (ID: 14683)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1336770057678223
    2. '>' → logprob: -1.5086770057678223
    3. ')' → logprob: -1.6336770057678223
    4. ' >' → logprob: -1.8836770057678223
    5. ' ((' → logprob: -3.7586770057678223
    6. ' )' → logprob: -4.258677005767822
    7. '   ' → logprob: -4.508677005767822
    8. ' x' → logprob: -4.508677005767822
    9. '(n' → logprob: -5.008677005767822
    10. ' ' → logprob: -5.008677005767822

Token 749: ' reste' (ID: 26769)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10966087877750397
    2. ')' → logprob: -3.3596608638763428
    3. '>' → logprob: -3.6096608638763428
    4. ' %' → logprob: -4.859661102294922
    5. ' a' → logprob: -4.984661102294922
    6. 'n' → logprob: -5.234661102294922
    7. 's' → logprob: -5.984661102294922
    8. 'a' → logprob: -6.109661102294922
    9. '%n' → logprob: -6.359661102294922
    10. '<|end|>' → logprob: -6.484661102294922

Token 750: ' quelques' (ID: 17687)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0129019021987915
    2. '>' → logprob: -1.1379019021987915
    3. ')' → logprob: -2.262901782989502
    4. ' >' → logprob: -2.512901782989502
    5. '0' → logprob: -3.262901782989502
    6. '1' → logprob: -3.762901782989502
    7. '(n' → logprob: -4.637901782989502
    8. '   ' → logprob: -4.762901782989502
    9. ' True' → logprob: -5.012901782989502
    10. ' des' → logprob: -5.262901782989502

Token 751: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.22013863921165466
    2. ' elements' → logprob: -2.0951385498046875
    3. 'élé' → logprob: -2.7201385498046875
    4. 'elements' → logprob: -5.5951385498046875
    5. ' indices' → logprob: -6.7201385498046875
    6. ' ele' → logprob: -7.4701385498046875
    7. ' él' → logprob: -7.5951385498046875
    8. ' elems' → logprob: -8.095138549804688
    9. ')' → logprob: -8.220138549804688
    10. 'indices' → logprob: -8.345138549804688

Token 752: ' après' (ID: 16460)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6279311776161194
    2. '   ' → logprob: -2.0029311180114746
    3. '):' → logprob: -2.8779311180114746
    4. ')' → logprob: -3.1279311180114746
    5. '!=' → logprob: -3.1279311180114746
    6. '%' → logprob: -3.2529311180114746
    7. '>' → logprob: -3.3779311180114746
    8. ' >' → logprob: -3.5029311180114746
    9. ':' → logprob: -3.6279311180114746
    10. ' de' → logprob: -4.502931118011475

Token 753: ' avoir' (ID: 16595)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7768755555152893
    2. ' k' → logprob: -1.1518754959106445
    3. 'k' → logprob: -2.0268754959106445
    4. '(k' → logprob: -3.2768754959106445
    5. ' ((' → logprob: -4.1518754959106445
    6. '(n' → logprob: -4.7768754959106445
    7. '((' → logprob: -4.7768754959106445
    8. ' n' → logprob: -5.0268754959106445
    9. ')' → logprob: -5.0268754959106445
    10. ' la' → logprob: -6.0268754959106445

Token 754: ' retir' (ID: 35638)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.605133056640625
    2. 'div' → logprob: -1.605133056640625
    3. 'g' → logprob: -2.230133056640625
    4. ' traité' → logprob: -2.855133056640625
    5. 'tra' → logprob: -4.355133056640625
    6. ' parcour' → logprob: -4.480133056640625
    7. 'fait' → logprob: -4.605133056640625
    8. 'pris' → logprob: -4.855133056640625
    9. 'process' → logprob: -4.980133056640625
    10. 'par' → logprob: -5.105133056640625

Token 755: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0006516746943816543
    2. 'er' → logprob: -8.000651359558105
    3. 'u' → logprob: -9.250651359558105
    4. 'és' → logprob: -9.500651359558105
    5. '   ' → logprob: -9.875651359558105
    6. 'né' → logprob: -10.750651359558105
    7. '#' → logprob: -11.375651359558105
    8. 'e' → logprob: -11.500651359558105
    9. 'ié' → logprob: -12.000651359558105
    10. 'ée' → logprob: -12.375651359558105

Token 756: ' tous' (ID: 10688)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03856866806745529
    2. '(n' → logprob: -3.4135687351226807
    3. '(k' → logprob: -5.788568496704102
    4. ' ((' → logprob: -7.413568496704102
    5. ' k' → logprob: -8.038568496704102
    6. '((' → logprob: -8.038568496704102
    7. 'k' → logprob: -8.163568496704102
    8. '(' → logprob: -9.413568496704102
    9. ' n' → logprob: -9.913568496704102
    10. ')' → logprob: -9.913568496704102

Token 757: ' les' (ID: 1341)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.3661150932312012
    2. 'les' → logprob: -1.6161150932312012
    3. ')' → logprob: -2.116115093231201
    4. 'k' → logprob: -2.366115093231201
    5. ' les' → logprob: -2.866115093231201
    6. '((' → logprob: -2.866115093231201
    7. 'le' → logprob: -3.241115093231201
    8. ' k' → logprob: -3.241115093231201
    9. ' (' → logprob: -3.366115093231201
    10. '   ' → logprob: -3.991115093231201

Token 758: ' groupes' (ID: 72206)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16999758780002594
    2. 'group' → logprob: -2.4199976921081543
    3. 'groups' → logprob: -4.044997692108154
    4. ' groupes' → logprob: -4.169997692108154
    5. ' k' → logprob: -4.544997692108154
    6. ' group' → logprob: -4.919997692108154
    7. 'ent' → logprob: -5.294997692108154
    8. 'multip' → logprob: -6.419997692108154
    9. 'full' → logprob: -6.544997692108154
    10. ')' → logprob: -6.919997692108154

Token 759: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3500868082046509
    2. '   ' → logprob: -1.4750868082046509
    3. '%' → logprob: -2.1000866889953613
    4. 'rest' → logprob: -2.3500866889953613
    5. '(k' → logprob: -2.6000866889953613
    6. ' rest' → logprob: -2.7250866889953613
    7. '(rest' → logprob: -3.9750866889953613
    8. '(n' → logprob: -4.100086688995361
    9. 'de' → logprob: -4.100086688995361
    10. ')' → logprob: -4.100086688995361

Token 760: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033685352653265
    2. ' k' → logprob: -3.4086854457855225
    3. ' full' → logprob: -12.033685684204102
    4. '```' → logprob: -12.033685684204102
    5. ' ' → logprob: -12.158685684204102
    6. '   ' → logprob: -12.408685684204102
    7. ' ' → logprob: -12.658685684204102
    8. ' la' → logprob: -12.908685684204102
    9. ')' → logprob: -13.158685684204102
    10. ' taille' → logprob: -13.533685684204102

Token 761: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9299253225326538
    2. ')' → logprob: -1.1799253225326538
    3. ' ),' → logprob: -1.6799253225326538
    4. ' )' → logprob: -2.3049254417419434
    5. '):
' → logprob: -5.554925441741943
    6. ' ' → logprob: -6.304925441741943
    7. ' ):
' → logprob: -6.679925441741943
    8. ' elements' → logprob: -6.929925441741943
    9. 'elements' → logprob: -7.429925441741943
    10. '):' → logprob: -7.679925441741943

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00962706096470356
    2. ' x' → logprob: -5.759626865386963
    3. ' if' → logprob: -6.009626865386963
    4. '       ' → logprob: -6.384626865386963
    5. '    ' → logprob: -7.259626865386963
    6. 'if' → logprob: -7.509626865386963
    7. 'x' → logprob: -8.259627342224121
    8. ' n' → logprob: -8.634627342224121
    9. ':' → logprob: -9.259627342224121
    10. ' ' → logprob: -9.634627342224121

Token 763: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05736884847283363
    2. ' x' → logprob: -3.307368755340576
    3. ' if' → logprob: -5.057368755340576
    4. 'x' → logprob: -5.182368755340576
    5. '[' → logprob: -6.557368755340576
    6. ':' → logprob: -6.557368755340576
    7. '       ' → logprob: -6.682368755340576
    8. '    ' → logprob: -7.307368755340576
    9. ' +' → logprob: -7.432368755340576
    10. 'if' → logprob: -7.682368755340576

Token 764: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2907508909702301
    2. ' x' → logprob: -1.6657508611679077
    3. 'x' → logprob: -2.7907509803771973
    4. '       ' → logprob: -6.790750980377197
    5. '    ' → logprob: -8.415750503540039
    6. '	x' → logprob: -8.790750503540039
    7. 'if' → logprob: -9.665750503540039
    8. '+' → logprob: -10.165750503540039
    9. ' ' → logprob: -10.290750503540039
    10. 'n' → logprob: -10.290750503540039

Token 765: ' on' (ID: 402)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2024744302034378
    2. 'x' → logprob: -1.7024744749069214
    3. '   ' → logprob: -6.952474594116211
    4. 'n' → logprob: -10.827474594116211
    5. '	x' → logprob: -10.952474594116211
    6. ' ' → logprob: -11.077474594116211
    7. '```' → logprob: -11.452474594116211
    8. '    ' → logprob: -12.202474594116211
    9. ' ' → logprob: -12.702474594116211
    10. ' n' → logprob: -12.827474594116211

Token 766: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4948064088821411
    2. ' +=' → logprob: -1.2448064088821411
    3. ' %=' → logprob: -2.6198062896728516
    4. '%=' → logprob: -4.244806289672852
    5. ' x' → logprob: -4.869806289672852
    6. 'x' → logprob: -5.369806289672852
    7. '%' → logprob: -6.619806289672852
    8. '=' → logprob: -7.119806289672852
    9. ' %' → logprob: -8.869806289672852
    10. ' =' → logprob: -9.119806289672852

Token 767: ' à' (ID: 1221)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.31840431690216064
    2. 'sum' → logprob: -1.3184043169021606
    3. '(sum' → logprob: -5.318404197692871
    4. '   ' → logprob: -9.318404197692871
    5. ' (' → logprob: -10.443404197692871
    6. '(' → logprob: -10.818404197692871
    7. '	sum' → logprob: -10.818404197692871
    8. ' x' → logprob: -11.193404197692871
    9. '=sum' → logprob: -11.943404197692871
    10. '    ' → logprob: -11.943404197692871

Token 768: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02325642853975296
    2. ' x' → logprob: -3.773256540298462
    3. 'la' → logprob: -12.273256301879883
    4. ' la' → logprob: -12.398256301879883
    5. '   ' → logprob: -14.023256301879883
    6. 'l' → logprob: -15.148256301879883
    7. ' ' → logprob: -15.148256301879883
    8. '```' → logprob: -15.273256301879883
    9. '(x' → logprob: -15.523256301879883
    10. '	x' → logprob: -15.773256301879883

Token 769: ' la' (ID: 557)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -1.1102715730667114
    2. ' (' → logprob: -1.4852715730667114
    3. ' +' → logprob: -2.110271453857422
    4. 'sum' → logprob: -2.235271453857422
    5. '(' → logprob: -3.110271453857422
    6. ' sum' → logprob: -3.235271453857422
    7. '(di' → logprob: -3.485271453857422
    8. ' +=' → logprob: -3.485271453857422
    9. 'di' → logprob: -4.110271453857422
    10. ' di' → logprob: -4.235271453857422

Token 770: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.17987458407878876
    2. ' sum' → logprob: -1.8048745393753052
    3. '(sum' → logprob: -9.304874420166016
    4. '   ' → logprob: -12.054874420166016
    5. ' ' → logprob: -12.304874420166016
    6. '	sum' → logprob: -12.304874420166016
    7. ' ' → logprob: -12.929874420166016
    8. '    ' → logprob: -12.929874420166016
    9. ' x' → logprob: -12.929874420166016
    10. 's' → logprob: -13.054874420166016

Token 771: ' des' (ID: 731)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.14747048914432526
    2. '(' → logprob: -2.022470474243164
    3. '(sum' → logprob: -5.647470474243164
    4. '(
' → logprob: -7.522470474243164
    5. 'di' → logprob: -7.897470474243164
    6. ' (' → logprob: -8.272470474243164
    7. ' di' → logprob: -10.522470474243164
    8. '(d' → logprob: -11.022470474243164
    9. 'sum' → logprob: -11.147470474243164
    10. '([' → logprob: -11.647470474243164

Token 772: ' premiers' (ID: 59140)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.024236176162958145
    2. ' di' → logprob: -3.7742362022399902
    3. '(di' → logprob: -7.02423620223999
    4. 'sum' → logprob: -9.899235725402832
    5. '(' → logprob: -10.149235725402832
    6. 'd' → logprob: -12.524235725402832
    7. ' sum' → logprob: -12.649235725402832
    8. ' (' → logprob: -14.274235725402832
    9. '(sum' → logprob: -14.399235725402832
    10. '(
' → logprob: -14.774235725402832

Token 773: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5866991281509399
    2. '(n' → logprob: -1.21169912815094
    3. ' (' → logprob: -2.0866990089416504
    4. ' ((' → logprob: -4.08669900894165
    5. 'di' → logprob: -6.33669900894165
    6. '[(' → logprob: -6.33669900894165
    7. '(' → logprob: -7.33669900894165
    8. '(d' → logprob: -7.96169900894165
    9. '(di' → logprob: -8.461699485778809
    10. ' di' → logprob: -8.586699485778809

Token 774: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.733698308467865
    2. ' (' → logprob: -0.858698308467865
    3. '((' → logprob: -2.3586983680725098
    4. ' ((' → logprob: -6.98369836807251
    5. '(' → logprob: -7.35869836807251
    6. '(k' → logprob: -11.108697891235352
    7. '(
' → logprob: -11.858697891235352
    8. ' ' → logprob: -11.858697891235352
    9. '(N' → logprob: -12.108697891235352
    10. '(((' → logprob: -12.733697891235352

Token 775: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8144370913505554
    2. ' -' → logprob: -0.8144370913505554
    3. ' %' → logprob: -2.5644371509552
    4. '%' → logprob: -3.6894371509552
    5. '1' → logprob: -4.814436912536621
    6. ')' → logprob: -6.564436912536621
    7. '   ' → logprob: -6.939436912536621
    8. '[' → logprob: -7.564436912536621
    9. ' ' → logprob: -7.814436912536621
    10. '```' → logprob: -9.064436912536621

Token 776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013683637604117393
    2. ' ' → logprob: -4.388683795928955
    3. '%' → logprob: -7.763683795928955
    4. '```' → logprob: -8.263683319091797
    5. '-' → logprob: -9.263683319091797
    6. '`' → logprob: -9.263683319091797
    7. ')' → logprob: -9.888683319091797
    8. ' %' → logprob: -10.013683319091797
    9. '
' → logprob: -10.701183319091797
    10. '   ' → logprob: -10.826183319091797

Token 777: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6143656373023987
    2. ' %' → logprob: -0.9893656373023987
    3. ')' → logprob: -2.739365577697754
    4. '%n' → logprob: -4.364365577697754
    5. ')%' → logprob: -5.864365577697754
    6. '   ' → logprob: -6.239365577697754
    7. '%i' → logprob: -6.489365577697754
    8. '%e' → logprob: -6.614365577697754
    9. '%d' → logprob: -7.489365577697754
    10. '```' → logprob: -8.239365577697754

Token 778: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4750100374221802
    2. ' k' → logprob: -0.9750100374221802
    3. '(k' → logprob: -8.10000991821289
    4. '[k' → logprob: -8.72500991821289
    5. '%' → logprob: -9.10000991821289
    6. '	k' → logprob: -9.60000991821289
    7. '```' → logprob: -9.60000991821289
    8. ' %' → logprob: -9.85000991821289
    9. '_k' → logprob: -9.97500991821289
    10. ')' → logprob: -10.35000991821289

Token 779: ' éléments' (ID: 57375)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.7625748515129089
    2. ' tokens' → logprob: -0.7625748515129089
    3. 'di' → logprob: -3.5125749111175537
    4. ' elements' → logprob: -4.137574672698975
    5. 'tokens' → logprob: -4.137574672698975
    6. ')' → logprob: -6.637574672698975
    7. '```' → logprob: -6.637574672698975
    8. ']' → logprob: -7.387574672698975
    9. ' indices' → logprob: -7.762574672698975
    10. ' ' → logprob: -8.137575149536133

Token 780: ' de' (ID: 334)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.5186357498168945
    2. 'di' → logprob: -1.8936357498168945
    3. ' de' → logprob: -2.3936357498168945
    4. ' di' → logprob: -3.0186357498168945
    5. '(n' → logprob: -3.8936357498168945
    6. ' (' → logprob: -3.8936357498168945
    7. '   ' → logprob: -4.3936357498168945
    8. '(' → logprob: -4.5186357498168945
    9. ' +' → logprob: -4.7686357498168945
    10. ' of' → logprob: -4.7686357498168945

Token 781: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.00016206118743866682
    2. ' di' → logprob: -8.750162124633789
    3. 'd' → logprob: -13.000162124633789
    4. 'la' → logprob: -14.000162124633789
    5. '(di' → logprob: -15.750162124633789
    6. 'die' → logprob: -16.62516212463379
    7. ' ' → logprob: -17.00016212463379
    8. '```' → logprob: -17.25016212463379
    9. ' ' → logprob: -17.37516212463379
    10. ' la' → logprob: -18.12516212463379

Token 782: '.
' (ID: 558)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.008005950599908829
    2. '[' → logprob: -5.5080060958862305
    3. '   ' → logprob: -6.1330060958862305
    4. ' [:' → logprob: -7.3830060958862305
    5. '[(' → logprob: -7.5080060958862305
    6. '[n' → logprob: -8.38300609588623
    7. '[:]' → logprob: -9.25800609588623
    8. 'di' → logprob: -10.00800609588623
    9. '[:-' → logprob: -10.38300609588623
    10. ' di' → logprob: -10.38300609588623

Token 783: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2640858590602875
    2. ' +' → logprob: -1.5140858888626099
    3. ' +=' → logprob: -5.01408576965332
    4. '+=' → logprob: -6.26408576965332
    5. '%' → logprob: -6.51408576965332
    6. '+x' → logprob: -7.63908576965332
    7. 'x' → logprob: -7.76408576965332
    8. '   ' → logprob: -8.13908576965332
    9. '+(' → logprob: -8.63908576965332
    10. ' +
' → logprob: -8.76408576965332

Token 784: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42216965556144714
    2. '   ' → logprob: -1.4221696853637695
    3. ' if' → logprob: -2.9221696853637695
    4. '+' → logprob: -3.9221696853637695
    5. ' +' → logprob: -4.0471696853637695
    6. 'x' → logprob: -5.1721696853637695
    7. ' +=' → logprob: -5.5471696853637695
    8. '+
' → logprob: -7.1721696853637695
    9. '+=' → logprob: -7.6721696853637695
    10. ' +
' → logprob: -7.7971696853637695

Token 785: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.048619385808706284
    2. '(n' → logprob: -3.048619270324707
    3. '(' → logprob: -11.298619270324707
    4. '((' → logprob: -11.673619270324707
    5. '   ' → logprob: -12.798619270324707
    6. ' ((' → logprob: -12.798619270324707
    7. ' ' → logprob: -12.923619270324707
    8. '(N' → logprob: -13.173619270324707
    9. '(m' → logprob: -15.298619270324707
    10. '(x' → logprob: -15.423619270324707

Token 786: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2813890874385834
    2. 'n' → logprob: -1.4063891172409058
    3. ' (' → logprob: -8.406389236450195
    4. ' n' → logprob: -12.031389236450195
    5. '   ' → logprob: -12.781389236450195
    6. '(
' → logprob: -13.156389236450195
    7. '(' → logprob: -13.156389236450195
    8. '((' → logprob: -13.906389236450195
    9. '	n' → logprob: -14.656389236450195
    10. '
' → logprob: -15.156389236450195

Token 787: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14283688366413116
    2. '-' → logprob: -2.017836809158325
    3. '   ' → logprob: -9.392836570739746
    4. '1' → logprob: -10.767836570739746
    5. '[' → logprob: -10.767836570739746
    6. ' ' → logprob: -11.517836570739746
    7. '%' → logprob: -12.142836570739746
    8. ')' → logprob: -12.142836570739746
    9. ' -
' → logprob: -12.392836570739746
    10. '  ' → logprob: -13.017836570739746

Token 788: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.250262260437012
    4. '```' → logprob: -15.750262260437012
    5. ')' → logprob: -15.875262260437012
    6. '
' → logprob: -17.312761306762695
    7. '`' → logprob: -18.437761306762695
    8. '>' → logprob: -18.500261306762695
    9. '۱' → logprob: -18.625261306762695
    10. '-' → logprob: -18.687761306762695

Token 789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.250001907348633
    4. '
' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. ')' → logprob: -18.750001907348633
    7. '۱' → logprob: -19.062501907348633
    8. '`' → logprob: -19.312501907348633
    9. '１' → logprob: -19.375001907348633
    10. '[' → logprob: -19.625001907348633

Token 790: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002775393659248948
    2. ')%' → logprob: -6.252775192260742
    3. '%' → logprob: -7.127775192260742
    4. ' )' → logprob: -10.377775192260742
    5. ' %' → logprob: -11.627775192260742
    6. '   ' → logprob: -13.502775192260742
    7. ')
' → logprob: -14.127775192260742
    8. '```' → logprob: -14.877775192260742
    9. '%)' → logprob: -15.002775192260742
    10. ' ' → logprob: -15.627775192260742

Token 791: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01816960796713829
    2. ' %' → logprob: -4.018169403076172
    3. ')' → logprob: -12.268169403076172
    4. '```' → logprob: -12.393169403076172
    5. '%
' → logprob: -13.018169403076172
    6. '   ' → logprob: -13.018169403076172
    7. '[' → logprob: -13.518169403076172
    8. ')%' → logprob: -13.768169403076172
    9. '
' → logprob: -14.393169403076172
    10. ' ' → logprob: -14.393169403076172

Token 792: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20141343772411346
    2. ' k' → logprob: -1.7014133930206299
    3. '	k' → logprob: -16.826414108276367
    4. '(k' → logprob: -17.201414108276367
    5. '{k' → logprob: -17.951414108276367
    6. ' к' → logprob: -18.451414108276367
    7. '_k' → logprob: -19.451414108276367
    8. ',k' → logprob: -19.451414108276367
    9. '=k' → logprob: -19.826414108276367
    10. ' ' → logprob: -20.076414108276367

Token 793: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4563840925693512
    2. ' !=' → logprob: -1.4563840627670288
    3. '>' → logprob: -2.2063841819763184
    4. ':' → logprob: -4.081384181976318
    5. ' >' → logprob: -5.081384181976318
    6. ':
' → logprob: -9.58138370513916
    7. ')!=' → logprob: -10.58138370513916
    8. ')' → logprob: -10.70638370513916
    9. '   ' → logprob: -11.83138370513916
    10. '!==' → logprob: -12.20638370513916

Token 794: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28517037630081177
    2. ':' → logprob: -1.535170316696167
    3. '   ' → logprob: -3.910170316696167
    4. ':
' → logprob: -5.285170555114746
    5. ' x' → logprob: -5.410170555114746
    6. 'x' → logprob: -7.410170555114746
    7. '+' → logprob: -7.785170555114746
    8. '=' → logprob: -7.785170555114746
    9. ' +=' → logprob: -7.910170555114746
    10. ' +' → logprob: -8.035170555114746

Token 795: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4741190969944
    2. 'x' (adapté à ' x') → logprob: -0.9741190671920776
    3. '   ' → logprob: -10.849119186401367
    4. '	x' → logprob: -11.724119186401367
    5. '       ' → logprob: -11.849119186401367
    6. '+' → logprob: -12.599119186401367
    7. '    ' → logprob: -13.724119186401367
    8. ' ' → logprob: -13.974119186401367
    9. '```' → logprob: -14.849119186401367
    10. ' +' → logprob: -14.849119186401367

Token 796: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008696711622178555
    2. ' +=' → logprob: -4.758696556091309
    3. '=' → logprob: -9.508696556091309
    4. '+=(' → logprob: -12.258696556091309
    5. '+' → logprob: -13.383696556091309
    6. ' =' → logprob: -14.258696556091309
    7. '+='' → logprob: -15.008696556091309
    8. ']+=' → logprob: -15.508696556091309
    9. '+="' → logprob: -15.633696556091309
    10. '%=' → logprob: -16.258697509765625

Token 797: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02975454181432724
    2. ' sum' → logprob: -3.529754638671875
    3. '   ' → logprob: -13.029754638671875
    4. '	sum' → logprob: -14.029754638671875
    5. ' ' → logprob: -14.904754638671875
    6. '(sum' → logprob: -15.029754638671875
    7. '  ' → logprob: -15.529754638671875
    8. ' ' → logprob: -16.779754638671875
    9. '    ' → logprob: -17.029754638671875
    10. '       ' → logprob: -17.779754638671875

Token 798: '(di' (ID: 131744)
  Prédit: '(di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. '(d' → logprob: -17.625001907348633
    4. ' (' → logprob: -18.375001907348633
    5. 'di' → logprob: -18.500001907348633
    6. ' di' → logprob: -19.125001907348633
    7. '(dis' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '(dic' → logprob: -19.500001907348633
    10. '(div' → logprob: -20.250001907348633

Token 799: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.001072823186405003
    2. '(' → logprob: -7.876072883605957
    3. '[(' → logprob: -8.001072883605957
    4. '[' → logprob: -8.376072883605957
    5. '((' → logprob: -9.501072883605957
    6. '(:' → logprob: -10.876072883605957
    7. '()' → logprob: -11.626072883605957
    8. ' [:' → logprob: -12.251072883605957
    9. '[:-' → logprob: -12.251072883605957
    10. '([' → logprob: -12.626072883605957

Token 800: '(' (ID: 7)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5292567610740662
    2. '(n' → logprob: -1.279256820678711
    3. '((' → logprob: -2.029256820678711
    4. '(' → logprob: -7.029256820678711
    5. ' ((' → logprob: -8.529256820678711
    6. '(k' → logprob: -8.654256820678711
    7. '(N' → logprob: -11.529256820678711
    8. ' ' → logprob: -12.529256820678711
    9. '(m' → logprob: -13.154256820678711
    10. '(
' → logprob: -13.529256820678711

Token 801: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006784996949136257
    2. 'n' → logprob: -5.631784915924072
    3. ' (' → logprob: -5.756784915924072
    4. '((' → logprob: -11.50678539276123
    5. '(' → logprob: -11.88178539276123
    6. ' n' → logprob: -14.50678539276123
    7. '(
' → logprob: -14.50678539276123
    8. '   ' → logprob: -15.25678539276123
    9. '{' → logprob: -16.506784439086914
    10. ' ' → logprob: -17.256784439086914

Token 802: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4342487156391144
    2. ' -' → logprob: -1.059248685836792
    3. '1' → logprob: -5.434248924255371
    4. ')' → logprob: -7.559248924255371
    5. ' %' → logprob: -8.934248924255371
    6. '%' → logprob: -8.934248924255371
    7. ')%' → logprob: -9.184248924255371
    8. '[' → logprob: -9.434248924255371
    9. '   ' → logprob: -9.809248924255371
    10. ' ' → logprob: -10.434248924255371

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.00000762939453
    4. '```' → logprob: -16.62500762939453
    5. '-' → logprob: -17.37500762939453
    6. ')' → logprob: -17.50000762939453
    7. '[' → logprob: -18.00000762939453
    8. '
' → logprob: -18.50000762939453
    9. '۱' → logprob: -18.68750762939453
    10. '...' → logprob: -18.68750762939453

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '-' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '```' → logprob: -15.875003814697266
    6. ')' → logprob: -17.437503814697266
    7. '
' → logprob: -17.437503814697266
    8. '{' → logprob: -17.500003814697266
    9. '(' → logprob: -17.750003814697266
    10. '%' → logprob: -17.875003814697266

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18113422393798828
    2. ')%' → logprob: -1.8061342239379883
    3. '%' → logprob: -6.681134223937988
    4. ' )' → logprob: -9.431134223937988
    5. ' %' → logprob: -11.306134223937988
    6. ']%' → logprob: -11.556134223937988
    7. ')]' → logprob: -11.806134223937988
    8. '   ' → logprob: -11.931134223937988
    9. ')#' → logprob: -12.306134223937988
    10. ']' → logprob: -12.556134223937988

Token 806: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0028872599359601736
    2. ' %' → logprob: -5.87788724899292
    3. ')%' → logprob: -10.002887725830078
    4. ')' → logprob: -10.502887725830078
    5. '%x' → logprob: -13.127887725830078
    6. ']%' → logprob: -13.127887725830078
    7. ']' → logprob: -14.127887725830078
    8. '%i' → logprob: -14.377887725830078
    9. '%
' → logprob: -14.502887725830078
    10. '%n' → logprob: -14.502887725830078

Token 807: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004885728703811765
    2. ' k' → logprob: -7.625488758087158
    3. '```' → logprob: -16.12548828125
    4. '   ' → logprob: -16.37548828125
    5. '	k' → logprob: -16.62548828125
    6. ' ' → logprob: -16.87548828125
    7. '{k' → logprob: -17.87548828125
    8. ')' → logprob: -18.12548828125
    9. '(k' → logprob: -18.50048828125
    10. ' ' → logprob: -18.62548828125

Token 808: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00011677479778882116
    2. ' ])' → logprob: -9.625116348266602
    3. '])
' → logprob: -10.250116348266602
    4. ')])' → logprob: -12.250116348266602
    5. ')' → logprob: -12.375116348266602
    6. '])
' → logprob: -13.125116348266602
    7. ']' → logprob: -13.875116348266602
    8. ']))' → logprob: -14.250116348266602
    9. '   ' → logprob: -14.375116348266602
    10. ')]' → logprob: -14.500116348266602

Token 809: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23626890778541565
    2. 'x' → logprob: -1.7362688779830933
    3. ' x' → logprob: -3.611268997192383
    4. '    
' → logprob: -5.736268997192383
    5. 'print' → logprob: -6.486268997192383
    6. '```' → logprob: -6.986268997192383
    7. '
' → logprob: -7.111268997192383
    8. ' print' → logprob: -8.861268997192383
    9. ' 
' → logprob: -8.861268997192383
    10. '#' → logprob: -9.736268997192383

Token 810: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9116688966751099
    2. 'x' → logprob: -1.1616688966751099
    3. '   ' → logprob: -1.2866688966751099
    4. ' x' → logprob: -5.28666877746582
    5. ' print' → logprob: -5.66166877746582
    6. '```' → logprob: -8.03666877746582
    7. '#' → logprob: -10.03666877746582
    8. '    
' → logprob: -10.03666877746582
    9. '
' → logprob: -10.66166877746582
    10. '``' → logprob: -11.53666877746582

Token 811: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00869812723249197
    2. '   ' → logprob: -5.008697986602783
    3. ' x' → logprob: -6.508697986602783
    4. 'print' → logprob: -7.758697986602783
    5. '```' → logprob: -9.883698463439941
    6. 'if' → logprob: -12.383698463439941
    7. '    
' → logprob: -13.383698463439941
    8. ' print' → logprob: -13.383698463439941
    9. '``' → logprob: -13.633698463439941
    10. '#' (adapté à ' #') → logprob: -13.883698463439941

Token 812: ' Calcul' (ID: 57243)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1275019645690918
    2. 'print' → logprob: -2.127501964569092
    3. ' x' → logprob: -8.00250244140625
    4. '   ' → logprob: -9.00250244140625
    5. '#' → logprob: -9.62750244140625
    6. ' print' → logprob: -10.62750244140625
    7. 'if' → logprob: -11.12750244140625
    8. 'result' → logprob: -13.00250244140625
    9. '
' → logprob: -13.25250244140625
    10. '#print' → logprob: -13.50250244140625

Token 813: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2525920867919922
    2. '=' → logprob: -1.3775920867919922
    3. ' %=' → logprob: -1.7525920867919922
    4. ' =' → logprob: -2.127592086791992
    5. '%' → logprob: -2.252592086791992
    6. ' %' → logprob: -3.877592086791992
    7. '%=' → logprob: -3.877592086791992
    8. ' x' → logprob: -4.752592086791992
    9. 'x' → logprob: -4.752592086791992
    10. 'mod' → logprob: -6.252592086791992

Token 814: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12826363742351532
    2. ' x' → logprob: -2.7532637119293213
    3. '(x' → logprob: -3.1282637119293213
    4. ' (' → logprob: -4.628263473510742
    5. '((' → logprob: -7.253263473510742
    6. 'print' → logprob: -7.253263473510742
    7. 'm' → logprob: -7.378263473510742
    8. '(' → logprob: -8.378263473510742
    9. '(m' → logprob: -9.128263473510742
    10. '   ' → logprob: -9.128263473510742

Token 815: ' réponse' (ID: 50332)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04391469061374664
    2. ' x' → logprob: -4.043914794921875
    3. 'if' → logprob: -4.543914794921875
    4. 'print' → logprob: -5.293914794921875
    5. '#' → logprob: -5.668914794921875
    6. 'result' → logprob: -6.668914794921875
    7. 'val' → logprob: -7.043914794921875
    8. ' if' → logprob: -7.168914794921875
    9. ' #' → logprob: -7.918914794921875
    10. '
' → logprob: -8.293914794921875

Token 816: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006150377448648214
    2. 'print' → logprob: -5.131150245666504
    3. 'result' → logprob: -9.756150245666504
    4. 'x' → logprob: -10.131150245666504
    5. ' print' → logprob: -10.381150245666504
    6. 'answer' → logprob: -10.881150245666504
    7. '
' → logprob: -11.131150245666504
    8. '    
' → logprob: -11.256150245666504
    9. 'res' → logprob: -11.506150245666504
    10. 'if' → logprob: -11.506150245666504

Token 817: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11541008204221725
    2. 'x' → logprob: -2.365410089492798
    3. '   ' → logprob: -4.865409851074219
    4. 'res' → logprob: -6.115409851074219
    5. 'ans' → logprob: -6.365409851074219
    6. 'result' → logprob: -6.615409851074219
    7. 'answer' → logprob: -6.865409851074219
    8. '(x' → logprob: -7.740409851074219
    9. ' print' → logprob: -8.365409851074219
    10. 'r' → logprob: -8.990409851074219

Token 818: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022828221321106
    2. '=' → logprob: -1.9102282524108887
    3. ' =
' → logprob: -13.785228729248047
    4. '   ' → logprob: -13.910228729248047
    5. '=
' → logprob: -14.285228729248047
    6. 'x' → logprob: -14.535228729248047
    7. ',' → logprob: -15.660228729248047
    8. 's' → logprob: -15.910228729248047
    9. ' ' → logprob: -15.910228729248047
    10. '=x' → logprob: -16.035228729248047

Token 819: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2882414758205414
    2. ' =' → logprob: -2.413241386413574
    3. ' ans' → logprob: -3.163241386413574
    4. 'x' → logprob: -3.163241386413574
    5. ' x' → logprob: -3.663241386413574
    6. '
' → logprob: -3.788241386413574
    7. '   ' → logprob: -3.913241386413574
    8. '=' → logprob: -5.788241386413574
    9. '    
' → logprob: -6.913241386413574
    10. '  
' → logprob: -7.413241386413574

Token 820: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.026626069098711014
    2. '   ' → logprob: -3.7766261100769043
    3. ' ans' → logprob: -6.526626110076904
    4. 'x' → logprob: -6.526626110076904
    5. 'if' → logprob: -8.651625633239746
    6. ' x' → logprob: -9.651625633239746
    7. '	ans' → logprob: -10.276625633239746
    8. 'm' → logprob: -10.401625633239746
    9. 'answer' → logprob: -10.401625633239746
    10. '(ans' → logprob: -10.776625633239746

Token 821: ' n' (ID: 297)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013206354342401028
    2. '   ' → logprob: -4.388206481933594
    3. ' ans' → logprob: -7.638206481933594
    4. 'x' → logprob: -9.013206481933594
    5. 'answer' → logprob: -10.263206481933594
    6. 'if' → logprob: -10.888206481933594
    7. '	ans' → logprob: -11.388206481933594
    8. '```' → logprob: -11.513206481933594
    9. 'm' → logprob: -12.013206481933594
    10. '(ans' → logprob: -12.513206481933594

Token 822: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1418660879135132
    2. ' =' → logprob: -1.3918660879135132
    3. ' %=' → logprob: -1.5168660879135132
    4. '%' → logprob: -2.0168662071228027
    5. '%=' → logprob: -2.8918662071228027
    6. ' %' → logprob: -4.141866207122803
    7. 'ans' → logprob: -6.641866207122803
    8. '_mod' → logprob: -7.016866207122803
    9. '_ans' → logprob: -7.016866207122803
    10. ' -=' → logprob: -7.141866207122803

Token 823: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01004056166857481
    2. ' ' → logprob: -5.385040760040283
    3. '%' → logprob: -6.010040760040283
    4. 'm' → logprob: -6.635040760040283
    5. 'ans' → logprob: -7.385040760040283
    6. 'x' → logprob: -7.885040760040283
    7. '(ans' → logprob: -9.510040283203125
    8. ' m' → logprob: -9.635040283203125
    9. '(m' → logprob: -9.760040283203125
    10. '#' → logprob: -9.760040283203125

Token 824: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2551639676094055
    2. '+' → logprob: -2.1301639080047607
    3. '#' → logprob: -3.3801639080047607
    4. ')*' → logprob: -4.00516414642334
    5. '*' → logprob: -4.38016414642334
    6. '-' → logprob: -5.25516414642334
    7. '%' → logprob: -5.25516414642334
    8. ' +' → logprob: -5.38016414642334
    9. ')%' → logprob: -5.38016414642334
    10. '=' → logprob: -5.50516414642334

Token 825: ' le' (ID: 505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6459190249443054
    2. ')' → logprob: -2.14591908454895
    3. '#' → logprob: -2.64591908454895
    4. 'n' → logprob: -3.39591908454895
    5. 'div' → logprob: -3.64591908454895
    6. ' multip' → logprob: -3.89591908454895
    7. ' (' → logprob: -3.89591908454895
    8. ' divisible' → logprob: -4.020918846130371
    9. ' #' → logprob: -4.270918846130371
    10. '   ' → logprob: -4.520918846130371

Token 826: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4147757589817047
    2. 'number' → logprob: -1.7897757291793823
    3. '#' → logprob: -3.289775848388672
    4. 'quot' → logprob: -3.539775848388672
    5. 'n' → logprob: -3.539775848388672
    6. 'div' → logprob: -4.289775848388672
    7. '(n' → logprob: -4.289775848388672
    8. ' nombre' → logprob: -4.289775848388672
    9. 'multiple' → logprob: -4.539775848388672
    10. 'total' → logprob: -5.414775848388672

Token 827: ' d' (ID: 272)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3197862505912781
    2. ' %' → logprob: -2.569786310195923
    3. '*' → logprob: -2.694786310195923
    4. ' of' → logprob: -3.444786310195923
    5. ')' → logprob: -3.694786310195923
    6. ' *' → logprob: -4.319786071777344
    7. '-' → logprob: -4.694786071777344
    8. '#' → logprob: -4.944786071777344
    9. '   ' → logprob: -4.944786071777344
    10. '[' → logprob: -5.069786071777344

Token 828: ''' (ID: 6)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6539415717124939
    2. ')' → logprob: -1.6539416313171387
    3. ' %' → logprob: -1.6539416313171387
    4. '
' → logprob: -4.153941631317139
    5. '*' → logprob: -4.403941631317139
    6. '[' → logprob: -4.903941631317139
    7. 'tokens' → logprob: -5.028941631317139
    8. ' tokens' → logprob: -5.153941631317139
    9. ' x' → logprob: -5.278941631317139
    10. ' modulo' → logprob: -5.403941631317139

Token 829: 'élé' (ID: 15228)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.2641419768333435
    2. 'élé' → logprob: -2.3891420364379883
    3. 'fois' → logprob: -2.6391420364379883
    4. 'x' → logprob: -4.264142036437988
    5. 'div' → logprob: -4.264142036437988
    6. 'elements' → logprob: -4.389142036437988
    7. 'm' → logprob: -5.264142036437988
    8. 'ent' → logprob: -5.389142036437988
    9. 'complete' → logprob: -5.514142036437988
    10. 'mult' → logprob: -6.264142036437988

Token 830: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.010733331553637981
    2. 'ents' → logprob: -4.760733127593994
    3. 'ements' → logprob: -6.760733127593994
    4. 'ment' → logprob: -7.010733127593994
    5. '```' → logprob: -10.760733604431152
    6. 'ts' → logprob: -11.760733604431152
    7. 'éments' → logprob: -12.010733604431152
    8. 'e' → logprob: -12.010733604431152
    9. 'nts' → logprob: -12.635733604431152
    10. '#' → logprob: -12.760733604431152

Token 831: ' moins' (ID: 15924)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7219289541244507
    2. ' %' → logprob: -1.4719289541244507
    3. '*' → logprob: -1.9719289541244507
    4. ' *' → logprob: -2.2219290733337402
    5. '-' → logprob: -4.47192907333374
    6. '#' → logprob: -4.84692907333374
    7. ')' → logprob: -5.47192907333374
    8. '   ' → logprob: -5.47192907333374
    9. ' #' → logprob: -6.34692907333374
    10. ' -' → logprob: -6.47192907333374

Token 832: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00296010822057724
    2. 'un' → logprob: -5.877960205078125
    3. 'one' → logprob: -10.502960205078125
    4. ' ' → logprob: -10.502960205078125
    5. ' un' → logprob: -10.627960205078125
    6. 'le' → logprob: -10.877960205078125
    7. 'x' → logprob: -11.252960205078125
    8. '   ' → logprob: -11.752960205078125
    9. '```' → logprob: -11.877960205078125
    10. '=' → logprob: -12.127960205078125

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002776630863081664
    2. 'un' → logprob: -8.375277519226074
    3. ' ' → logprob: -11.250277519226074
    4. 'one' → logprob: -11.375277519226074
    5. 'x' → logprob: -11.500277519226074
    6. '```' → logprob: -12.625277519226074
    7. 'mod' → logprob: -13.000277519226074
    8. ' un' → logprob: -13.125277519226074
    9. ' one' → logprob: -13.625277519226074
    10. 'une' → logprob: -14.250277519226074

Token 834: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3473047018051147
    2. '%' → logprob: -1.9723047018051147
    3. '
' → logprob: -1.9723047018051147
    4. ' =' → logprob: -1.9723047018051147
    5. '+' → logprob: -2.5973048210144043
    6. 'ans' → logprob: -2.7223048210144043
    7. '=' → logprob: -2.7223048210144043
    8. ')' → logprob: -3.5973048210144043
    9. ' %' → logprob: -4.222304821014404
    10. '#' → logprob: -4.347304821014404

Token 835: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16984449326992035
    2. 'x' → logprob: -3.044844388961792
    3. '%' → logprob: -3.544844388961792
    4. ' ans' → logprob: -3.669844388961792
    5. ' =' → logprob: -3.919844388961792
    6. '=' → logprob: -4.794844627380371
    7. '
' → logprob: -5.294844627380371
    8. '   ' → logprob: -5.294844627380371
    9. ' x' → logprob: -5.294844627380371
    10. ' %' → logprob: -6.169844627380371

Token 836: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.498029500246048
    2. ' =' → logprob: -2.1230294704437256
    3. 'x' → logprob: -2.3730294704437256
    4. '%' → logprob: -2.9980294704437256
    5. ' ans' → logprob: -2.9980294704437256
    6. '=' → logprob: -3.3730294704437256
    7. ' x' → logprob: -4.748029708862305
    8. ' %' → logprob: -4.748029708862305
    9. ' %=' → logprob: -5.248029708862305
    10. 'answer' → logprob: -5.373029708862305

Token 837: ' x' (ID: 1215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0069237579591572285
    2. 'if' → logprob: -5.381923675537109
    3. '   ' → logprob: -6.631923675537109
    4. 'answer' → logprob: -8.38192367553711
    5. 'x' → logprob: -8.50692367553711
    6. ' ans' → logprob: -9.13192367553711
    7. 'res' → logprob: -9.63192367553711
    8. 'm' → logprob: -10.00692367553711
    9. 'rest' → logprob: -10.38192367553711
    10. '```' → logprob: -10.50692367553711

Token 838: '//' (ID: 393)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4283270835876465
    2. ' %=' → logprob: -1.1783270835876465
    3. '=' → logprob: -3.5533270835876465
    4. ' =' → logprob: -5.0533270835876465
    5. '%' → logprob: -5.6783270835876465
    6. '*=' → logprob: -7.0533270835876465
    7. '+=' → logprob: -7.1783270835876465
    8. ' *=' → logprob: -8.428327560424805
    9. ' +=' → logprob: -8.553327560424805
    10. ' %' → logprob: -10.178327560424805

Token 839: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01840253546833992
    2. 'k' → logprob: -4.643402576446533
    3. ' m' → logprob: -4.768402576446533
    4. ' k' → logprob: -9.518402099609375
    5. '(m' → logprob: -11.518402099609375
    6. ' ' → logprob: -11.518402099609375
    7. ' (' → logprob: -12.143402099609375
    8. '(' → logprob: -12.393402099609375
    9. 'n' → logprob: -13.143402099609375
    10. 'q' → logprob: -13.393402099609375

Token 840: ' donne' (ID: 30004)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2387756109237671
    2. '*' → logprob: -2.2387757301330566
    3. ' +' → logprob: -3.2387757301330566
    4. '+' → logprob: -3.7387757301330566
    5. ')' → logprob: -4.113775730133057
    6. '   ' → logprob: -4.238775730133057
    7. '<|end|>' → logprob: -6.113775730133057
    8. ' ' → logprob: -6.238775730133057
    9. ' =' → logprob: -6.363775730133057
    10. '#' → logprob: -7.113775730133057

Token 841: ' combien' (ID: 106648)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30375006794929504
    2. '(n' → logprob: -2.1787500381469727
    3. ' (' → logprob: -2.1787500381469727
    4. ' ' → logprob: -4.053750038146973
    5. 'x' → logprob: -5.428750038146973
    6. '((' → logprob: -5.678750038146973
    7. ' x' → logprob: -5.928750038146973
    8. ' the' → logprob: -6.178750038146973
    9. ' ((' → logprob: -6.553750038146973
    10. ' n' → logprob: -6.803750038146973

Token 842: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14324697852134705
    2. ' d' → logprob: -2.89324688911438
    3. ' des' → logprob: -4.018247127532959
    4. '   ' → logprob: -4.143247127532959
    5. ')' → logprob: -4.893247127532959
    6. ' of' → logprob: -4.893247127532959
    7. 'de' → logprob: -5.018247127532959
    8. ' x' → logprob: -5.018247127532959
    9. '    ' → logprob: -5.893247127532959
    10. ' )' → logprob: -6.018247127532959

Token 843: ' fois' (ID: 14697)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7627792358398438
    2. '0' → logprob: -0.8877792358398438
    3. ' (' → logprob: -3.0127792358398438
    4. 'x' → logprob: -3.5127792358398438
    5. ' ' → logprob: -4.387779235839844
    6. '1' → logprob: -4.762779235839844
    7. ' x' → logprob: -5.012779235839844
    8. ' n' → logprob: -5.762779235839844
    9. 'm' → logprob: -6.137779235839844
    10. 'n' → logprob: -6.137779235839844

Token 844: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2621949315071106
    2. 'x' → logprob: -2.137194871902466
    3. ' x' → logprob: -2.637194871902466
    4. '(n' → logprob: -3.887194871902466
    5. '(x' → logprob: -4.637195110321045
    6. '0' → logprob: -5.262195110321045
    7. '(' → logprob: -5.762195110321045
    8. '((' → logprob: -7.262195110321045
    9. ' ((' → logprob: -7.262195110321045
    10. ')' → logprob: -8.137194633483887

Token 845: ' contient' (ID: 89067)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1649877279996872
    2. '//' → logprob: -1.9149876832962036
    3. ')' → logprob: -5.664987564086914
    4. '   ' → logprob: -7.164987564086914
    5. '<|end|>' → logprob: -8.289987564086914
    6. '%' → logprob: -9.539987564086914
    7. '```' → logprob: -10.414987564086914
    8. ')//' → logprob: -10.914987564086914
    9. ' ' → logprob: -11.039987564086914
    10. ' %' → logprob: -11.164987564086914

Token 846: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.9395584464073181
    2. 'm' → logprob: -1.064558506011963
    3. '0' → logprob: -1.564558506011963
    4. '1' → logprob: -3.564558506011963
    5. ' ' → logprob: -3.939558506011963
    6. ' x' → logprob: -5.814558506011963
    7. '   ' → logprob: -6.189558506011963
    8. 'x' → logprob: -6.939558506011963
    9. ' (' → logprob: -7.189558506011963
    10. '  ' → logprob: -9.314558029174805

Token 847: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052648864686489105
    2. ' +' → logprob: -4.302649021148682
    3. '+' → logprob: -4.552649021148682
    4. ')' → logprob: -4.552649021148682
    5. ' *' → logprob: -5.052649021148682
    6. '*' → logprob: -5.802649021148682
    7. '
' → logprob: -6.177649021148682
    8. ' //' → logprob: -7.302649021148682
    9. '+
' → logprob: -7.427649021148682
    10. '#' → logprob: -7.552649021148682

Token 848: 'division' (ID: 50596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06285939365625381
    2. ' )' → logprob: -2.812859296798706
    3. ')+' → logprob: -8.562859535217285
    4. ' x' → logprob: -9.437859535217285
    5. '   ' → logprob: -9.812859535217285
    6. '')' → logprob: -9.937859535217285
    7. ' ' → logprob: -9.937859535217285
    8. ')*' → logprob: -10.062859535217285
    9. ' )
' → logprob: -10.312859535217285
    10. ')
' → logprob: -10.437859535217285

Token 849: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.14073382318019867
    2. ')' → logprob: -3.1407337188720703
    3. ' entier' → logprob: -3.5157337188720703
    4. '   ' → logprob: -3.5157337188720703
    5. ' //' → logprob: -4.76573371887207
    6. 'integer' → logprob: -5.26573371887207
    7. ' inteira' → logprob: -5.39073371887207
    8. 'ent' → logprob: -5.51573371887207
    9. '//' → logprob: -7.39073371887207
    10. ' integer' → logprob: -7.64073371887207

Token 850: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008466352708637714
    2. '   ' → logprob: -5.7584662437438965
    3. '+' → logprob: -6.5084662437438965
    4. ' )' → logprob: -6.5084662437438965
    5. ')+' → logprob: -6.7584662437438965
    6. ')
' → logprob: -7.8834662437438965
    7. ' +' → logprob: -8.383466720581055
    8. '()' → logprob: -9.133466720581055
    9. '```' → logprob: -9.258466720581055
    10. '*' → logprob: -9.508466720581055

Token 851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019581327214837074
    2. '+' → logprob: -6.87695837020874
    3. ' +' → logprob: -8.001957893371582
    4. 'ans' → logprob: -8.876957893371582
    5. '*' → logprob: -9.751957893371582
    6. 'x' → logprob: -9.876957893371582
    7. ' x' → logprob: -10.001957893371582
    8. '  ' → logprob: -10.376957893371582
    9. ' ans' → logprob: -10.376957893371582
    10. '
' → logprob: -10.626957893371582

Token 852: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04254883527755737
    2. 'ans' → logprob: -3.417548894882202
    3. ' ans' → logprob: -6.042548656463623
    4. 'x' → logprob: -6.417548656463623
    5. 'result' → logprob: -6.417548656463623
    6. '+' → logprob: -7.042548656463623
    7. 'answer' → logprob: -7.292548656463623
    8. ' +' → logprob: -7.542548656463623
    9. ' x' → logprob: -8.542549133300781
    10. 'print' → logprob: -8.667549133300781

Token 853: ' ((' (ID: 3536)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07206292450428009
    2. 'ans' → logprob: -4.072062969207764
    3. 'x' → logprob: -4.572062969207764
    4. ' ans' → logprob: -4.572062969207764
    5. ' =' → logprob: -4.697062969207764
    6. ' x' → logprob: -4.822062969207764
    7. '\n' → logprob: -6.197062969207764
    8. ' +' → logprob: -6.322062969207764
    9. 'result' → logprob: -6.447062969207764
    10. '+' → logprob: -6.572062969207764

Token 854: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49736303091049194
    2. 'x' → logprob: -1.1223630905151367
    3. '(n' → logprob: -2.8723630905151367
    4. '(x' → logprob: -5.747363090515137
    5. 'q' → logprob: -6.247363090515137
    6. '((' → logprob: -6.872363090515137
    7. ' n' → logprob: -7.122363090515137
    8. ' (' → logprob: -7.122363090515137
    9. ' x' → logprob: -7.622363090515137
    10. 'k' → logprob: -7.872363090515137

Token 855: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6326808929443359
    2. ' -' → logprob: -0.7576808929443359
    3. '   ' → logprob: -10.257680892944336
    4. '1' → logprob: -11.257680892944336
    5. '[' → logprob: -11.632680892944336
    6. ' ' → logprob: -12.132680892944336
    7. '#' → logprob: -12.257680892944336
    8. ' ' → logprob: -13.382680892944336
    9. ')' → logprob: -13.507680892944336
    10. ' -
' → logprob: -13.570180892944336

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015127197839319706
    2. '-' → logprob: -7.00151252746582
    3. ' ' → logprob: -7.50151252746582
    4. ' -' → logprob: -10.75151252746582
    5. '   ' → logprob: -11.62651252746582
    6. '```' → logprob: -12.00151252746582
    7. '2' → logprob: -12.37651252746582
    8. 'x' → logprob: -13.81401252746582
    9. ')' → logprob: -14.18901252746582
    10. '#' → logprob: -14.31401252746582

Token 857: ')//' (ID: 60375)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6585620045661926
    2. ' -' → logprob: -1.5335619449615479
    3. ')' → logprob: -1.9085619449615479
    4. ' //' → logprob: -3.283561944961548
    5. '*' → logprob: -3.533561944961548
    6. '//' → logprob: -3.658561944961548
    7. ' )' → logprob: -5.158562183380127
    8. ' *' → logprob: -5.158562183380127
    9. '+' → logprob: -5.533562183380127
    10. '#' → logprob: -6.033562183380127

Token 858: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00031508569372817874
    2. ' k' → logprob: -8.375314712524414
    3. 'q' → logprob: -10.125314712524414
    4. '   ' → logprob: -11.250314712524414
    5. '#' → logprob: -11.500314712524414
    6. '[k' → logprob: -12.625314712524414
    7. '```' → logprob: -12.750314712524414
    8. ')' → logprob: -13.125314712524414
    9. '(k' → logprob: -13.125314712524414
    10. '//' → logprob: -13.750314712524414

Token 859: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9132211804389954
    2. '*' → logprob: -1.1632211208343506
    3. ')' → logprob: -1.6632211208343506
    4. ')*' → logprob: -2.5382211208343506
    5. '+' → logprob: -4.78822135925293
    6. ' +' → logprob: -5.53822135925293
    7. ' )' → logprob: -5.91322135925293
    8. '#' → logprob: -7.53822135925293
    9. ' -' → logprob: -7.53822135925293
    10. ' ' → logprob: -7.78822135925293

Token 860: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5239983797073364
    2. ' *' → logprob: -0.8989983797073364
    3. '+' → logprob: -8.273998260498047
    4. ')' → logprob: -8.898998260498047
    5. '*(' → logprob: -9.523998260498047
    6. '*((' → logprob: -9.648998260498047
    7. ')*' → logprob: -9.773998260498047
    8. ' +' → logprob: -9.898998260498047
    9. '#' → logprob: -9.898998260498047
    10. '**' → logprob: -10.148998260498047

Token 861: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09097170829772949
    2. 'dz' → logprob: -2.4659717082977295
    3. ' sum' → logprob: -6.715971946716309
    4. '(sum' → logprob: -8.215971946716309
    5. 'sz' → logprob: -8.465971946716309
    6. 'len' → logprob: -8.715971946716309
    7. ' dz' → logprob: -9.590971946716309
    8. '   ' → logprob: -10.715971946716309
    9. '(' → logprob: -11.340971946716309
    10. '(d' → logprob: -11.840971946716309

Token 862: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10067889839410782
    2. '(di' → logprob: -2.3506789207458496
    3. '(' → logprob: -8.725678443908691
    4. '([' → logprob: -8.850678443908691
    5. 'dz' → logprob: -9.850678443908691
    6. 'di' → logprob: -9.975678443908691
    7. '((' → logprob: -10.725678443908691
    8. '(z' → logprob: -11.475678443908691
    9. '(
' → logprob: -11.475678443908691
    10. '([(' → logprob: -12.100678443908691

Token 863: 'z' (ID: 89)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.07150029391050339
    2. 'di' → logprob: -2.696500301361084
    3. '[:]' → logprob: -7.071500301361084
    4. ')' → logprob: -8.071499824523926
    5. '(di' → logprob: -9.071499824523926
    6. '[i' → logprob: -9.196499824523926
    7. '[' → logprob: -9.321499824523926
    8. ' di' → logprob: -10.321499824523926
    9. 'i' → logprob: -11.196499824523926
    10. '_di' → logprob: -11.446499824523926

Token 864: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.002149546518921852
    2. '[:]' → logprob: -6.75214958190918
    3. '[' → logprob: -7.62714958190918
    4. ')' → logprob: -8.12714958190918
    5. ' [:' → logprob: -9.75214958190918
    6. '[:-' → logprob: -10.12714958190918
    7. ')*' → logprob: -11.00214958190918
    8. '   ' → logprob: -11.25214958190918
    9. '[i' → logprob: -11.50214958190918
    10. '[k' → logprob: -11.62714958190918

Token 865: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2664456789934775e-06
    2. ' k' → logprob: -14.875000953674316
    3. '[k' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.375000953674316
    5. 'q' → logprob: -15.750000953674316
    6. '(k' → logprob: -16.000001907348633
    7. ')' → logprob: -16.625001907348633
    8. ']' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. '  ' → logprob: -17.625001907348633

Token 866: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015692608430981636
    2. ')*' → logprob: -7.2515692710876465
    3. ')+' → logprob: -8.001568794250488
    4. '*' → logprob: -8.251568794250488
    5. ' )' → logprob: -8.876568794250488
    6. '   ' → logprob: -10.376568794250488
    7. '))' → logprob: -10.626568794250488
    8. '+' → logprob: -10.876568794250488
    9. ' *' → logprob: -11.376568794250488
    10. ']' → logprob: -12.251568794250488

Token 867: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7046846151351929
    2. ' +' → logprob: -1.3296846151351929
    3. '+' → logprob: -1.5796846151351929
    4. '*' → logprob: -4.829684734344482
    5. '#' → logprob: -5.204684734344482
    6. ' *' → logprob: -5.329684734344482
    7. 'x' → logprob: -5.579684734344482
    8. ' ' → logprob: -6.579684734344482
    9. ' +
' → logprob: -6.829684734344482
    10. '+
' → logprob: -6.829684734344482

Token 868: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0515982024371624
    2. '=' → logprob: -3.676598310470581
    3. 'ulate' → logprob: -5.551598072052002
    4. '#' → logprob: -5.551598072052002
    5. '+' → logprob: -5.801598072052002
    6. 'cule' → logprob: -5.926598072052002
    7. '(' → logprob: -6.176598072052002
    8. ' =' → logprob: -6.926598072052002
    9. '()' → logprob: -6.926598072052002
    10. 'ules' → logprob: -6.926598072052002

Token 869: ' pour' (ID: 1930)
  Prédit: '((('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(((' → logprob: -0.32076025009155273
    2. '((' → logprob: -1.3207602500915527
    3. ' ((' → logprob: -5.445760250091553
    4. ' (((' → logprob: -6.945760250091553
    5. '(' → logprob: -7.070760250091553
    6. '   ' → logprob: -7.320760250091553
    7. ' (' → logprob: -7.820760250091553
    8. '(x' → logprob: -9.445760726928711
    9. ' ' → logprob: -9.820760726928711
    10. '((((' → logprob: -9.945760726928711

Token 870: ' chaque' (ID: 21194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05117060989141464
    2. ' ((' → logprob: -3.051170587539673
    3. 'i' → logprob: -7.426170825958252
    4. '   ' → logprob: -7.551170825958252
    5. '(((' → logprob: -7.676170825958252
    6. '1' → logprob: -8.551170349121094
    7. '(i' → logprob: -8.801170349121094
    8. '(' → logprob: -9.051170349121094
    9. 'x' → logprob: -9.301170349121094
    10. ' i' → logprob: -9.551170349121094

Token 871: ' groupe' (ID: 29494)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06304419040679932
    2. ' ((' → logprob: -4.18804407119751
    3. 'k' → logprob: -4.31304407119751
    4. 'i' → logprob: -5.06304407119751
    5. ' group' → logprob: -5.31304407119751
    6. 'group' → logprob: -5.31304407119751
    7. '1' → logprob: -5.43804407119751
    8. '(((' → logprob: -6.31304407119751
    9. 'm' → logprob: -6.43804407119751
    10. 'q' → logprob: -6.56304407119751

Token 872: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8222903609275818
    2. '   ' → logprob: -1.1972904205322266
    3. '((' → logprob: -2.3222904205322266
    4. '#' → logprob: -3.0722904205322266
    5. ' *' → logprob: -3.1972904205322266
    6. '(' → logprob: -4.322290420532227
    7. ' de' → logprob: -4.572290420532227
    8. ' des' → logprob: -4.947290420532227
    9. 'des' → logprob: -4.947290420532227
    10. 'of' → logprob: -5.072290420532227

Token 873: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03472226858139038
    2. '1' → logprob: -3.409722328186035
    3. 'size' → logprob: -8.534722328186035
    4. ' k' → logprob: -8.659722328186035
    5. '```' → logprob: -8.659722328186035
    6. 'dz' → logprob: -8.784722328186035
    7. 'q' → logprob: -9.534722328186035
    8. 'z' → logprob: -9.909722328186035
    9. 'sz' → logprob: -10.159722328186035
    10. '[' → logprob: -10.284722328186035

Token 874: ' éléments' (ID: 57375)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9930762052536011
    2. '[:' → logprob: -1.243076205253601
    3. '[:]' → logprob: -1.868076205253601
    4. ' *' → logprob: -2.7430763244628906
    5. ')' → logprob: -3.2430763244628906
    6. 'tokens' → logprob: -3.3680763244628906
    7. '[' → logprob: -4.243076324462891
    8. ' tokens' → logprob: -5.618076324462891
    9. ')*' → logprob: -5.743076324462891
    10. '[i' → logprob: -5.868076324462891

Token 875: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7049915790557861
    2. ' *' → logprob: -1.7049915790557861
    3. ' +' → logprob: -2.079991579055786
    4. '*' → logprob: -2.329991579055786
    5. ')' → logprob: -2.954991579055786
    6. '+' → logprob: -3.204991579055786
    7. '    ' → logprob: -6.579991340637207
    8. '#' → logprob: -6.704991340637207
    9. ')+' → logprob: -6.704991340637207
    10. ' ' → logprob: -6.829991340637207

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36344388127326965
    2. '#' → logprob: -2.1134438514709473
    3. '((' → logprob: -2.4884438514709473
    4. '       ' → logprob: -2.8634438514709473
    5. '(' → logprob: -3.9884438514709473
    6. ' (' → logprob: -4.613443851470947
    7. ' ((' → logprob: -5.613443851470947
    8. '1' → logprob: -5.738443851470947
    9. ' ' → logprob: -6.113443851470947
    10. '           ' → logprob: -6.613443851470947

Token 877: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0682756900787354
    2. '#' (adapté à ' #') → logprob: -1.3182756900787354
    3. '((' → logprob: -1.8182756900787354
    4. '(' → logprob: -2.9432756900787354
    5. '       ' → logprob: -3.0682756900787354
    6. ' (' → logprob: -3.3182756900787354
    7. '1' → logprob: -3.4432756900787354
    8. ' ((' → logprob: -3.6932756900787354
    9. ' ' → logprob: -4.818275451660156
    10. '           ' → logprob: -5.068275451660156

Token 878: ' le' (ID: 505)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20427797734737396
    2. ' ((' → logprob: -2.204277992248535
    3. '1' → logprob: -3.079277992248535
    4. '   ' → logprob: -4.954277992248535
    5. '(' → logprob: -5.454277992248535
    6. ' (' → logprob: -5.454277992248535
    7. '+' → logprob: -5.454277992248535
    8. '(((' → logprob: -6.079277992248535
    9. '0' → logprob: -6.954277992248535
    10. ' dz' → logprob: -7.079277992248535

Token 879: ' nombre' (ID: 9733)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0679597556591034
    2. 'dz' → logprob: -3.692959785461426
    3. ' ((' → logprob: -4.942959785461426
    4. 'sum' → logprob: -4.942959785461426
    5. '(' → logprob: -5.317959785461426
    6. '(((' → logprob: -5.442959785461426
    7. '+' → logprob: -5.567959785461426
    8. '1' → logprob: -5.817959785461426
    9. '#' → logprob: -5.942959785461426
    10. '(n' → logprob: -6.817959785461426

Token 880: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35969069600105286
    2. ' de' → logprob: -1.9846906661987305
    3. '   ' → logprob: -2.7346906661987305
    4. ' of' → logprob: -3.1096906661987305
    5. ' *' → logprob: -3.3596906661987305
    6. 'of' → logprob: -5.4846906661987305
    7. '#' → logprob: -6.1096906661987305
    8. 'de' → logprob: -6.3596906661987305
    9. ' d' → logprob: -6.6096906661987305
    10. 'd' → logprob: -6.6096906661987305

Token 881: ' divis' (ID: 37826)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16061240434646606
    2. 'dz' → logprob: -2.1606123447418213
    3. ' dz' → logprob: -4.1606125831604
    4. '(' → logprob: -5.0356125831604
    5. ' ' → logprob: -5.2856125831604
    6. ' (' → logprob: -5.9106125831604
    7. '0' → logprob: -6.6606125831604
    8. '[' → logprob: -7.7856125831604
    9. '```' → logprob: -7.9106125831604
    10. '(
' → logprob: -8.410612106323242

Token 882: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.003507772693410516
    2. 'ible' → logprob: -6.253507614135742
    3. 'bles' → logprob: -7.003507614135742
    4. 'e' → logprob: -8.253507614135742
    5. 'eurs' → logprob: -9.628507614135742
    6. 'ib' → logprob: -9.878507614135742
    7. 'isible' → logprob: -9.878507614135742
    8. 'is' → logprob: -10.003507614135742
    9. '```' → logprob: -10.003507614135742
    10. 'ables' → logprob: -10.503507614135742

Token 883: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.046667218208313
    2. 'par' → logprob: -1.296667218208313
    3. '   ' → logprob: -2.0466670989990234
    4. 'by' → logprob: -2.9216670989990234
    5. ' de' → logprob: -2.9216670989990234
    6. 'des' → logprob: -3.4216670989990234
    7. ' des' → logprob: -3.6716670989990234
    8. ' by' → logprob: -3.6716670989990234
    9. ')' → logprob: -4.546667098999023
    10. 'de' → logprob: -4.796667098999023

Token 884: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0013300024438649416
    2. ' m' → logprob: -6.6263298988342285
    3. '1' → logprob: -13.001330375671387
    4. ' ' → logprob: -13.876330375671387
    5. 'k' → logprob: -14.751330375671387
    6. ' ' → logprob: -15.501330375671387
    7. '```' → logprob: -16.62632942199707
    8. '	m' → logprob: -16.87632942199707
    9. '`' → logprob: -17.62632942199707
    10. '2' → logprob: -17.87632942199707

Token 885: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15426217019557953
    2. ' +' → logprob: -2.529262065887451
    3. '+' → logprob: -3.529262065887451
    4. ')' → logprob: -4.029262065887451
    5. ' *' → logprob: -5.279262065887451
    6. '*' → logprob: -5.529262065887451
    7. ')+' → logprob: -6.904262065887451
    8. '<|end|>' → logprob: -6.904262065887451
    9. '    ' → logprob: -7.154262065887451
    10. '  ' → logprob: -7.279262065887451

Token 886: ' les' (ID: 1341)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.049873579293489456
    2. ' dz' → logprob: -3.0498735904693604
    3. 'di' → logprob: -7.924873352050781
    4. '   ' → logprob: -8.174873352050781
    5. 'd' → logprob: -8.924873352050781
    6. 'la' → logprob: -9.174873352050781
    7. '```' → logprob: -9.674873352050781
    8. ' la' → logprob: -10.174873352050781
    9. ' ' → logprob: -10.424873352050781
    10. 'dia' → logprob: -10.549873352050781

Token 887: ' k' (ID: 372)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.004361283034086227
    2. ' dz' → logprob: -5.629361152648926
    3. '[:' → logprob: -7.879361152648926
    4. '[' → logprob: -9.129361152648926
    5. '```' → logprob: -9.129361152648926
    6. ' ' → logprob: -10.379361152648926
    7. 'z' → logprob: -10.629361152648926
    8. '[
' → logprob: -10.629361152648926
    9. '0' → logprob: -11.254361152648926
    10. 'di' → logprob: -11.629361152648926

Token 888: ' premiers' (ID: 59140)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0012317767832428217
    2. '[:]' → logprob: -7.251231670379639
    3. '][:' → logprob: -8.501232147216797
    4. ':' → logprob: -9.376232147216797
    5. '[' → logprob: -9.376232147216797
    6. ' [:' → logprob: -9.876232147216797
    7. '   ' → logprob: -10.251232147216797
    8. 'elements' → logprob: -11.251232147216797
    9. ' ' → logprob: -11.876232147216797
    10. '```' → logprob: -12.126232147216797

Token 889: ' éléments' (ID: 57375)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.38854655623435974
    2. 'dz' → logprob: -1.7635465860366821
    3. '   ' → logprob: -2.1385464668273926
    4. '[:]' → logprob: -5.138546466827393
    5. 'di' → logprob: -5.388546466827393
    6. '][:' → logprob: -5.638546466827393
    7. '```' → logprob: -5.763546466827393
    8. ' [:' → logprob: -6.263546466827393
    9. ' dz' → logprob: -6.263546466827393
    10. ')' → logprob: -6.388546466827393

Token 890: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14253374934196472
    2. ' +' → logprob: -2.392533779144287
    3. '+' → logprob: -3.767533779144287
    4. ' *' → logprob: -5.017533779144287
    5. ')' → logprob: -5.642533779144287
    6. '*' → logprob: -5.767533779144287
    7. '  ' → logprob: -7.267533779144287
    8. '#' → logprob: -7.267533779144287
    9. ' ' → logprob: -7.517533779144287
    10. '    ' → logprob: -7.892533779144287

Token 891: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.0001589618914294988
    2. ' dz' → logprob: -9.12515926361084
    3. 'd' → logprob: -10.00015926361084
    4. 'dzi' → logprob: -14.12515926361084
    5. '```' → logprob: -14.12515926361084
    6. '
' → logprob: -14.37515926361084
    7. '	d' → logprob: -15.00015926361084
    8. 'dze' → logprob: -15.12515926361084
    9. '   ' → logprob: -15.37515926361084
    10. '
' → logprob: -15.50015926361084

Token 892: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2070823758840561
    2. ' +' → logprob: -2.0820822715759277
    3. '+' → logprob: -2.9570822715759277
    4. ')' → logprob: -5.832082271575928
    5. '*' → logprob: -5.957082271575928
    6. ' *' → logprob: -5.957082271575928
    7. ')+' → logprob: -7.707082271575928
    8. '  ' → logprob: -7.957082271575928
    9. ' +
' → logprob: -8.082082748413086
    10. '<|end|>' → logprob: -8.207082748413086

Token 893: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04687417671084404
    2. '+' → logprob: -4.046874046325684
    3. ' +' → logprob: -5.046874046325684
    4. '((' → logprob: -5.546874046325684
    5. '#' → logprob: -5.921874046325684
    6. '    ' → logprob: -6.171874046325684
    7. '       ' → logprob: -6.171874046325684
    8. '*' → logprob: -6.296874046325684
    9. ' ((' → logprob: -6.671874046325684
    10. '+
' → logprob: -6.796874046325684

Token 894: ' multipl' (ID: 44269)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.591958224773407
    2. '+' → logprob: -1.8419582843780518
    3. ' ((' → logprob: -1.9669582843780518
    4. '   ' → logprob: -3.0919582843780518
    5. '(((' → logprob: -3.7169582843780518
    6. '       ' → logprob: -3.9669582843780518
    7. '#' → logprob: -4.341958045959473
    8. ' +' → logprob: -4.591958045959473
    9. '+=' → logprob: -5.341958045959473
    10. ' +=' → logprob: -5.466958045959473

Token 895: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.4281889796257019
    2. 'ipl' → logprob: -1.5531890392303467
    3. 'ip' → logprob: -2.8031890392303467
    4. 'lié' → logprob: -3.0531890392303467
    5. 'lie' → logprob: -4.553188800811768
    6. 'ié' → logprob: -5.803188800811768
    7. 'ic' → logprob: -6.053188800811768
    8. 'plied' → logprob: -6.428188800811768
    9. 'ied' → logprob: -6.678188800811768
    10. 'e' → logprob: -6.678188800811768

Token 896: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.2661545276641846
    2. '((' → logprob: -1.3911545276641846
    3. '(((' → logprob: -1.7661545276641846
    4. '   ' → logprob: -1.8911545276641846
    5. ' par' → logprob: -2.6411545276641846
    6. '(' → logprob: -3.3911545276641846
    7. ')' → logprob: -4.1411542892456055
    8. ' ((' → logprob: -4.2661542892456055
    9. '(
' → logprob: -6.3911542892456055
    10. '*' → logprob: -6.6411542892456055

Token 897: ' le' (ID: 505)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.024343566969037056
    2. ' ((' → logprob: -3.774343490600586
    3. '(n' → logprob: -7.274343490600586
    4. ' (' → logprob: -8.024343490600586
    5. '   ' → logprob: -10.524343490600586
    6. ' ' → logprob: -10.649343490600586
    7. '(' → logprob: -12.149343490600586
    8. '```' → logprob: -12.399343490600586
    9. '(((' → logprob: -12.399343490600586
    10. 'x' → logprob: -12.899343490600586

Token 898: ' nombre' (ID: 9733)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004768426530063152
    2. ' ((' → logprob: -5.379768371582031
    3. '(n' → logprob: -9.754768371582031
    4. '```' → logprob: -10.129768371582031
    5. '[(' → logprob: -10.629768371582031
    6. ' (' → logprob: -11.504768371582031
    7. '`' → logprob: -13.129768371582031
    8. '(((' → logprob: -13.129768371582031
    9. '``' → logprob: -13.129768371582031
    10. '1' → logprob: -13.504768371582031

Token 899: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27366793155670166
    2. '((' → logprob: -1.8986679315567017
    3. '(' → logprob: -3.273667812347412
    4. '*' → logprob: -4.523667812347412
    5. '=' → logprob: -4.773667812347412
    6. '(
' → logprob: -5.148667812347412
    7. ' of' → logprob: -5.398667812347412
    8. '(((' → logprob: -5.523667812347412
    9. '    ' → logprob: -5.648667812347412
    10. ' ((' → logprob: -5.898667812347412

Token 900: ' groupes' (ID: 72206)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008062236942350864
    2. ' ((' → logprob: -4.883062362670898
    3. 'groups' → logprob: -8.758062362670898
    4. '(((' → logprob: -9.133062362670898
    5. '(n' → logprob: -9.383062362670898
    6. 'group' → logprob: -9.508062362670898
    7. '(' → logprob: -12.008062362670898
    8. ' groups' → logprob: -12.633062362670898
    9. ' ' → logprob: -12.883062362670898
    10. ' (' → logprob: -12.883062362670898

Token 901: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05972656235098839
    2. '#' → logprob: -3.9347264766693115
    3. ')' → logprob: -4.309726715087891
    4. ' +' → logprob: -5.434726715087891
    5. ' *' → logprob: -5.434726715087891
    6. '*' → logprob: -5.559726715087891
    7. '+' → logprob: -6.434726715087891
    8. ' #' → logprob: -6.559726715087891
    9. '
' → logprob: -6.684726715087891
    10. '  ' → logprob: -6.809726715087891

Token 902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16042771935462952
    2. ' +' → logprob: -3.0354278087615967
    3. '+' → logprob: -3.1604278087615967
    4. '*' → logprob: -4.160427570343018
    5. '+
' → logprob: -4.660427570343018
    6. '((' → logprob: -5.160427570343018
    7. '```' → logprob: -5.285427570343018
    8. ' *' → logprob: -5.785427570343018
    9. '[
' → logprob: -5.785427570343018
    10. 'x' → logprob: -6.285427570343018

Token 903: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08661068975925446
    2. 'ans' (adapté à ' ans') → logprob: -2.586610794067383
    3. 'print' → logprob: -6.211610794067383
    4. 'x' → logprob: -6.211610794067383
    5. ' ans' → logprob: -6.836610794067383
    6. 'answer' → logprob: -6.961610794067383
    7. '    
' → logprob: -7.961610794067383
    8. 'result' → logprob: -7.961610794067383
    9. ' x' → logprob: -8.586610794067383
    10. '\n' → logprob: -9.336610794067383

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969365924596786
    2. '=' → logprob: -2.81196928024292
    3. '   ' → logprob: -14.061969757080078
    4. ' +=' → logprob: -15.811969757080078
    5. '	' → logprob: -15.936969757080078
    6. ' =(' → logprob: -15.936969757080078
    7. ' ' → logprob: -16.186969757080078
    8. ' =
' → logprob: -16.186969757080078
    9. '=int' → logprob: -16.311969757080078
    10. ',' → logprob: -16.311969757080078

Token 905: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5521867871284485
    2. '((' → logprob: -0.9271867871284485
    3. '(x' → logprob: -4.427186965942383
    4. 'x' → logprob: -4.802186965942383
    5. ' (' → logprob: -5.052186965942383
    6. ' ((' → logprob: -6.802186965942383
    7. '(((' → logprob: -7.802186965942383
    8. 'n' → logprob: -7.927186965942383
    9. '(' → logprob: -9.677186965942383
    10. '(d' → logprob: -10.177186965942383

Token 906: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.85996013879776
    2. '-' → logprob: -1.2349600791931152
    3. '   ' → logprob: -1.3599600791931152
    4. ' //' → logprob: -4.984960079193115
    5. '<|end|>' → logprob: -5.234960079193115
    6. '//' → logprob: -5.359960079193115
    7. ' ' → logprob: -6.109960079193115
    8. ' *' → logprob: -6.484960079193115
    9. '*' → logprob: -6.609960079193115
    10. '	' → logprob: -6.859960079193115

Token 907: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038574778591282666
    2. '(' → logprob: -8.000385284423828
    3. ' ' → logprob: -10.375385284423828
    4. '((' → logprob: -11.625385284423828
    5. ' (' → logprob: -13.125385284423828
    6. '   ' → logprob: -13.250385284423828
    7. '(ans' → logprob: -13.375385284423828
    8. '(((' → logprob: -13.750385284423828
    9. '(m' → logprob: -13.875385284423828
    10. '
' → logprob: -14.250385284423828

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.464347173576243e-05
    2. '(' → logprob: -10.37503433227539
    3. ' ' → logprob: -13.00003433227539
    4. '((' → logprob: -14.50003433227539
    5. '(m' → logprob: -16.37503433227539
    6. ' (' → logprob: -16.50003433227539
    7. 'x' → logprob: -16.50003433227539
    8. 'ans' → logprob: -16.75003433227539
    9. '(ans' → logprob: -17.25003433227539
    10. 'm' → logprob: -17.50003433227539

Token 909: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5546889901161194
    2. '+' → logprob: -1.5546889305114746
    3. ' +' → logprob: -2.1796889305114746
    4. '-' → logprob: -2.3046889305114746
    5. '   ' → logprob: -7.179688930511475
    6. '
' → logprob: -7.929688930511475
    7. '+
' → logprob: -9.304689407348633
    8. '#' → logprob: -9.429689407348633
    9. ' ' → logprob: -9.554689407348633
    10. '+x' → logprob: -10.179689407348633

Token 910: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39313945174217224
    2. 'x' → logprob: -1.1431394815444946
    3. '((' → logprob: -5.393139362335205
    4. '(' → logprob: -7.268139362335205
    5. ' (' → logprob: -7.393139362335205
    6. ' x' → logprob: -8.268139839172363
    7. '(n' → logprob: -9.768139839172363
    8. '(((' → logprob: -10.143139839172363
    9. '   ' → logprob: -11.893139839172363
    10. '(
' → logprob: -12.768139839172363

Token 911: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.4000961780548096
    2. ' //' → logprob: -1.4000961780548096
    3. '%' → logprob: -2.1500961780548096
    4. '+' → logprob: -2.1500961780548096
    5. ' +' → logprob: -2.2750961780548096
    6. '<|end|>' → logprob: -3.0250961780548096
    7. ' %' → logprob: -3.2750961780548096
    8. ')' → logprob: -3.6500961780548096
    9. '
' → logprob: -4.0250959396362305
    10. ' ' → logprob: -5.0250959396362305

Token 912: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5048530030981055e-06
    2. ' m' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.875001907348633
    4. ' ' → logprob: -19.125001907348633
    5. '	m' → logprob: -19.250001907348633
    6. '1' → logprob: -20.000001907348633
    7. ' ' → logprob: -20.000001907348633
    8. '`' → logprob: -21.000001907348633
    9. '  ' → logprob: -21.125001907348633
    10. 'м' → logprob: -21.125001907348633

Token 913: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6229470372200012
    2. '+' → logprob: -0.9979470372200012
    3. 'ans' → logprob: -2.6229469776153564
    4. ' +' → logprob: -4.3729472160339355
    5. 'if' → logprob: -5.9979472160339355
    6. 'print' → logprob: -6.4979472160339355
    7. '+
' → logprob: -6.8729472160339355
    8. '
' → logprob: -6.8729472160339355
    9. 'for' → logprob: -7.3729472160339355
    10. '-' → logprob: -7.4979472160339355

Token 914: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03014267235994339
    2. '(((' → logprob: -3.5301427841186523
    3. ' ((' → logprob: -9.030142784118652
    4. '(n' → logprob: -9.030142784118652
    5. '(' → logprob: -9.530142784118652
    6. '((((' → logprob: -10.530142784118652
    7. '   ' → logprob: -11.530142784118652
    8. 'min' → logprob: -12.155142784118652
    9. ' (((' → logprob: -12.155142784118652
    10. 'max' → logprob: -12.655142784118652

Token 915: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11287426948547363
    2. 'n' → logprob: -2.2378742694854736
    3. ' (' → logprob: -9.987874031066895
    4. '((' → logprob: -12.612874031066895
    5. ' n' → logprob: -13.987874031066895
    6. '   ' → logprob: -14.237874031066895
    7. '(' → logprob: -14.487874031066895
    8. '(
' → logprob: -15.862874031066895
    9. '[n' → logprob: -16.48787498474121
    10. '_n' → logprob: -16.61287498474121

Token 916: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3869814872741699
    2. ' -' → logprob: -1.13698148727417
    3. '   ' → logprob: -9.511981964111328
    4. ' ' → logprob: -10.636981964111328
    5. '//' → logprob: -12.511981964111328
    6. '```' → logprob: -13.386981964111328
    7. '  ' → logprob: -13.511981964111328
    8. '[' → logprob: -13.761981964111328
    9. ' //' → logprob: -13.761981964111328
    10. '#' → logprob: -14.136981964111328

Token 917: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.125005722045898
    4. '```' → logprob: -14.500005722045898
    5. '-' → logprob: -14.625005722045898
    6. '`' → logprob: -16.6250057220459
    7. '  ' → logprob: -17.4375057220459
    8. '
' → logprob: -17.4375057220459
    9. '#' → logprob: -17.6250057220459
    10. '       ' → logprob: -17.8125057220459

Token 918: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.000007629394531
    4. '```' → logprob: -15.000007629394531
    5. '-' → logprob: -16.68750762939453
    6. 'k' → logprob: -16.75000762939453
    7. '
' → logprob: -16.87500762939453
    8. '2' → logprob: -17.25000762939453
    9. '``' → logprob: -17.93750762939453
    10. '(' → logprob: -17.93750762939453

Token 919: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04100685566663742
    2. ')//' → logprob: -3.2910068035125732
    3. '//' → logprob: -6.041007041931152
    4. ' //' → logprob: -8.041007041931152
    5. ' )' → logprob: -8.541007041931152
    6. '   ' → logprob: -10.541007041931152
    7. ')#' → logprob: -11.291007041931152
    8. '#' → logprob: -11.291007041931152
    9. ' ' → logprob: -12.541007041931152
    10. ')
' → logprob: -13.291007041931152

Token 920: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.09824968129396439
    2. ' //' → logprob: -2.598249673843384
    3. ')' → logprob: -4.348249912261963
    4. ')//' → logprob: -5.098249912261963
    5. '%' → logprob: -9.598249435424805
    6. ' ' → logprob: -10.848249435424805
    7. '```' → logprob: -10.973249435424805
    8. '#' → logprob: -11.723249435424805
    9. ' ' → logprob: -12.098249435424805
    10. '   ' → logprob: -12.598249435424805

Token 921: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.1008713702030946e-06
    2. ' k' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. 'q' → logprob: -16.875001907348633
    5. '	k' → logprob: -18.250001907348633
    6. '```' → logprob: -18.875001907348633
    7. '
' → logprob: -19.375001907348633
    8. '[k' → logprob: -19.625001907348633
    9. 'к' → logprob: -20.250001907348633
    10. ' к' → logprob: -20.375001907348633

Token 922: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011858227662742138
    2. ')*' → logprob: -6.876185894012451
    3. '*' → logprob: -8.876185417175293
    4. ' )' → logprob: -11.751185417175293
    5. '*)' → logprob: -12.876185417175293
    6. ' *' → logprob: -13.251185417175293
    7. '   ' → logprob: -14.376185417175293
    8. '）' → logprob: -15.876185417175293
    9. ')
' → logprob: -16.00118637084961
    10. '#' → logprob: -16.37618637084961

Token 923: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17976930737495422
    2. ' *' → logprob: -1.8047692775726318
    3. '**' → logprob: -11.554769515991211
    4. ' ' → logprob: -12.554769515991211
    5. ')' → logprob: -12.929769515991211
    6. ' ' → logprob: -13.179769515991211
    7. ')*' → logprob: -13.929769515991211
    8. '   ' → logprob: -14.054769515991211
    9. '*
' → logprob: -14.554769515991211
    10. '+' → logprob: -14.679769515991211

Token 924: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.44443862256594e-05
    2. ' sum' → logprob: -9.750064849853516
    3. '(sum' → logprob: -12.375064849853516
    4. 'dz' → logprob: -13.625064849853516
    5. 'sz' → logprob: -14.625064849853516
    6. 'su' → logprob: -16.875064849853516
    7. 's' → logprob: -17.000064849853516
    8. '0' → logprob: -17.250064849853516
    9. 'max' → logprob: -17.250064849853516
    10. 'count' → logprob: -17.375064849853516

Token 925: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.2994620242971e-06
    2. 'dz' → logprob: -12.375008583068848
    3. '(z' → logprob: -13.250008583068848
    4. '(' → logprob: -13.500008583068848
    5. ' (' → logprob: -15.000008583068848
    6. '(
' → logprob: -15.375008583068848
    7. 'Dz' → logprob: -16.12500762939453
    8. '(sz' → logprob: -16.37500762939453
    9. ' dz' → logprob: -17.50000762939453
    10. '(di' → logprob: -17.75000762939453

Token 926: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -7.44574936106801e-05
    2. '[z' → logprob: -10.12507438659668
    3. '[:' → logprob: -10.75007438659668
    4. 'dz' → logprob: -12.12507438659668
    5. '(z' → logprob: -12.87507438659668
    6. 'zi' → logprob: -13.87507438659668
    7. '[' → logprob: -14.25007438659668
    8. ':z' → logprob: -14.75007438659668
    9. '```' → logprob: -15.00007438659668
    10. '(d' → logprob: -15.12507438659668

Token 927: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.319370302458992e-06
    2. '][:' → logprob: -13.000005722045898
    3. '[:]' → logprob: -13.750005722045898
    4. ' [:' → logprob: -14.000005722045898
    5. '[' → logprob: -14.625005722045898
    6. '[:-' → logprob: -15.375005722045898
    7. '[:,' → logprob: -15.750005722045898
    8. '   ' → logprob: -16.3750057220459
    9. '[
' → logprob: -16.6250057220459
    10. '```' → logprob: -16.6250057220459

Token 928: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -13.875001907348633
    3. 'q' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.000001907348633
    5. ' ' → logprob: -17.375001907348633
    6. 'к' → logprob: -18.375001907348633
    7. '[k' → logprob: -18.500001907348633
    8. '	k' → logprob: -18.500001907348633
    9. ')' → logprob: -19.250001907348633
    10. '```' → logprob: -19.375001907348633

Token 929: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004591872915625572
    2. '])' → logprob: -5.504591941833496
    3. ']' → logprob: -8.504591941833496
    4. ')]' → logprob: -8.754591941833496
    5. ')])' → logprob: -9.754591941833496
    6. '))' → logprob: -10.004591941833496
    7. ' )' → logprob: -10.754591941833496
    8. '[' → logprob: -12.504591941833496
    9. '）' → logprob: -12.629591941833496
    10. '   ' → logprob: -12.754591941833496

Token 930: '    
' (ID: 1944)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3903285562992096
    2. '   ' → logprob: -1.1403285264968872
    3. '
' → logprob: -6.390328407287598
    4. '+' → logprob: -7.515328407287598
    5. ' print' → logprob: -8.015328407287598
    6. '+
' → logprob: -8.015328407287598
    7. '    
' → logprob: -8.140328407287598
    8. '```' → logprob: -9.140328407287598
    9. 'if' → logprob: -10.390328407287598
    10. '	print' → logprob: -10.765328407287598

Token 931: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07900160551071167
    2. '   ' → logprob: -2.5790016651153564
    3. ' print' → logprob: -9.954001426696777
    4. '```' → logprob: -10.079001426696777
    5. '    
' → logprob: -11.454001426696777
    6. '
' → logprob: -11.579001426696777
    7. '	print' → logprob: -13.829001426696777
    8. '``' → logprob: -15.204001426696777
    9. '  
' → logprob: -15.579001426696777
    10. 'for' → logprob: -15.704001426696777

Token 932: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019354235846549273
    2. '   ' → logprob: -6.2519354820251465
    3. ' print' → logprob: -12.251935005187988
    4. 'if' → logprob: -14.501935005187988
    5. 'ans' → logprob: -14.626935005187988
    6. '#' (adapté à ' #') → logprob: -14.751935005187988
    7. '```' → logprob: -15.126935005187988
    8. '    
' → logprob: -15.626935005187988
    9. '#print' → logprob: -16.126935958862305
    10. '
' → logprob: -16.626935958862305

Token 933: ' Encore' (ID: 118329)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.130576806142926e-05
    2. '   ' → logprob: -11.250031471252441
    3. '#' → logprob: -11.875031471252441
    4. 'ans' → logprob: -12.000031471252441
    5. 'if' → logprob: -12.500031471252441
    6. ' print' → logprob: -14.625031471252441
    7. '#print' → logprob: -15.000031471252441
    8. 'answer' → logprob: -15.625031471252441
    9. 'for' → logprob: -15.875031471252441
    10. '
' → logprob: -16.125030517578125

Token 934: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4816735088825226
    2. '   ' → logprob: -0.9816734790802002
    3. ' print' → logprob: -5.981673717498779
    4. 'ans' → logprob: -6.981673717498779
    5. '
' → logprob: -7.106673717498779
    6. '    
' → logprob: -7.106673717498779
    7. '#' → logprob: -8.231673240661621
    8. '+' → logprob: -8.231673240661621
    9. '=' → logprob: -8.481673240661621
    10. '  ' → logprob: -8.731673240661621

Token 935: ' fois' (ID: 14697)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12112825363874435
    2. '
' → logprob: -2.8711283206939697
    3. '   ' → logprob: -3.8711283206939697
    4. '    
' → logprob: -4.121128082275391
    5. ' print' → logprob: -4.371128082275391
    6. ' 
' → logprob: -6.746128082275391
    7. '#' → logprob: -6.746128082275391
    8. '\n' → logprob: -6.871128082275391
    9. 'if' → logprob: -7.871128082275391
    10. '
' → logprob: -7.871128082275391

Token 936: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01987282931804657
    2. 'print' → logprob: -4.019872665405273
    3. ' print' → logprob: -7.019872665405273
    4. '
' → logprob: -7.769872665405273
    5. '    
' → logprob: -8.519872665405273
    6. ',' → logprob: -9.769872665405273
    7. '+' → logprob: -10.394872665405273
    8. ')' → logprob: -10.519872665405273
    9. '[' → logprob: -10.519872665405273
    10. '#' → logprob: -11.144872665405273

Token 937: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6453395485877991
    2. 'if' → logprob: -1.2703394889831543
    3. ' if' → logprob: -1.6453394889831543
    4. 'print' → logprob: -6.395339488983154
    5. ' print' → logprob: -9.395339965820312
    6. '	if' → logprob: -10.645339965820312
    7. ' ' → logprob: -10.895339965820312
    8. '    ' → logprob: -11.020339965820312
    9. '  ' → logprob: -11.270339965820312
    10. '       ' → logprob: -13.270339965820312

Token 938: ' il' (ID: 1793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07890080660581589
    2. '(n' → logprob: -2.5789008140563965
    3. ' ' → logprob: -12.328900337219238
    4. '   ' → logprob: -12.453900337219238
    5. '(N' → logprob: -13.953900337219238
    6. '(' → logprob: -14.203900337219238
    7. '((' → logprob: -14.453900337219238
    8. '
' → logprob: -15.453900337219238
    9. '  ' → logprob: -16.328901290893555
    10. ' ' → logprob: -16.453901290893555

Token 939: ' reste' (ID: 26769)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.013800746761262417
    2. '(n' → logprob: -4.638800621032715
    3. '(' → logprob: -5.513800621032715
    4. '((' → logprob: -12.638800621032715
    5. ' ' → logprob: -13.763800621032715
    6. ' ((' → logprob: -15.013800621032715
    7. '(m' → logprob: -15.138800621032715
    8. '(s' → logprob: -15.263800621032715
    9. 's' → logprob: -16.01380157470703
    10. '   ' → logprob: -16.38880157470703

Token 940: ' des' (ID: 731)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012530720792710781
    2. '(n' → logprob: -4.38753080368042
    3. '((' → logprob: -11.512530326843262
    4. ' ((' → logprob: -12.137530326843262
    5. '(' → logprob: -13.137530326843262
    6. '   ' → logprob: -13.262530326843262
    7. ' ' → logprob: -13.637530326843262
    8. '  ' → logprob: -16.137531280517578
    9. '
' → logprob: -16.137531280517578
    10. ',' → logprob: -16.137531280517578

Token 941: ' éléments' (ID: 57375)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0790352001786232
    2. ' (' → logprob: -2.5790352821350098
    3. '((' → logprob: -9.329034805297852
    4. '(' → logprob: -9.954034805297852
    5. '(N' → logprob: -12.579034805297852
    6. '
' → logprob: -12.704034805297852
    7. '(
' → logprob: -13.829034805297852
    8. '（' → logprob: -14.829034805297852
    9. ' ((' → logprob: -15.329034805297852
    10. ' ' → logprob: -15.454034805297852

Token 942: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2763042449951172
    2. ' à' → logprob: -1.9013042449951172
    3. ' (' → logprob: -2.151304244995117
    4. '%' → logprob: -2.151304244995117
    5. ' if' → logprob: -2.276304244995117
    6. ' %' → logprob: -2.526304244995117
    7. 'if' → logprob: -2.651304244995117
    8. ':' → logprob: -3.276304244995117
    9. '%(' → logprob: -5.026304244995117
    10. '(n' → logprob: -5.526304244995117

Token 943: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7475579380989075
    2. ' if' → logprob: -1.1225578784942627
    3. ' ans' → logprob: -1.8725578784942627
    4. 'if' → logprob: -3.6225578784942627
    5. 'ans' → logprob: -4.122558116912842
    6. '(ans' → logprob: -5.997558116912842
    7. '	ans' → logprob: -7.247558116912842
    8. '       ' → logprob: -8.622557640075684
    9. '  ' → logprob: -8.747557640075684
    10. ' +' → logprob: -8.872557640075684

Token 944: ' enl' (ID: 116494)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018478957936167717
    2. ' ans' → logprob: -4.518478870391846
    3. 'if' → logprob: -5.268478870391846
    4. '	ans' → logprob: -7.643478870391846
    5. 'n' → logprob: -8.143479347229004
    6. '+=' → logprob: -8.268479347229004
    7. '   ' → logprob: -8.643479347229004
    8. '(ans' → logprob: -8.643479347229004
    9. ' if' → logprob: -8.893479347229004
    10. '#' → logprob: -9.143479347229004

Token 945: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.09450484067201614
    2. 'e' → logprob: -2.8445048332214355
    3. 'a' → logprob: -4.9695048332214355
    4. 'ace' → logprob: -5.5945048332214355
    5. 'eve' → logprob: -5.7195048332214355
    6. 'age' → logprob: -5.9695048332214355
    7. '```' → logprob: -6.0945048332214355
    8. 'oue' → logprob: -6.2195048332214355
    9. 'à' → logprob: -6.8445048332214355
    10. 'que' → logprob: -7.0945048332214355

Token 946: ' aussi' (ID: 9894)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4314943253993988
    2. ' sum' → logprob: -1.0564943552017212
    3. ' (' → logprob: -6.931494235992432
    4. '(sum' → logprob: -7.056494235992432
    5. '   ' → logprob: -7.431494235992432
    6. ' x' → logprob: -9.68149471282959
    7. ' ((' → logprob: -10.18149471282959
    8. '(' → logprob: -10.30649471282959
    9. '    ' → logprob: -10.30649471282959
    10. '((' → logprob: -10.43149471282959

Token 947: ' à' (ID: 1221)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19244995713233948
    2. ' sum' → logprob: -1.817449927330017
    3. '   ' → logprob: -5.692450046539307
    4. ' (' → logprob: -5.817450046539307
    5. '(sum' → logprob: -6.192450046539307
    6. ' ((' → logprob: -6.567450046539307
    7. '((' → logprob: -6.567450046539307
    8. ' x' → logprob: -8.192449569702148
    9. '+' → logprob: -8.567449569702148
    10. '(' → logprob: -8.692449569702148

Token 948: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005881795077584684
    2. ' ans' → logprob: -7.500588417053223
    3. 'x' → logprob: -11.000588417053223
    4. '(ans' → logprob: -11.500588417053223
    5. '   ' → logprob: -12.375588417053223
    6. '	ans' → logprob: -13.125588417053223
    7. 'answer' → logprob: -14.500588417053223
    8. ' ' → logprob: -15.125588417053223
    9. 'anst' → logprob: -15.375588417053223
    10. ' x' → logprob: -15.625588417053223

Token 949: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0666663646697998
    2. ' -=' → logprob: -2.0666663646698
    3. 'ans' → logprob: -2.1916663646698
    4. 'sum' → logprob: -2.3166663646698
    5. ' (' → logprob: -2.5666663646698
    6. 'x' → logprob: -3.0666663646698
    7. ' x' → logprob: -3.1916663646698
    8. ' ans' → logprob: -3.3166663646698
    9. '(sum' → logprob: -3.4416663646698
    10. '(ans' → logprob: -3.5666663646698

Token 950: ' nombre' (ID: 9733)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08900457620620728
    2. ' sum' → logprob: -2.4640045166015625
    3. '(sum' → logprob: -10.964004516601562
    4. '   ' → logprob: -11.464004516601562
    5. 'int' → logprob: -12.214004516601562
    6. ' ' → logprob: -12.214004516601562
    7. ' ((' → logprob: -12.464004516601562
    8. '((' → logprob: -12.589004516601562
    9. ' (' → logprob: -12.714004516601562
    10. ' ' → logprob: -12.964004516601562

Token 951: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2176579236984253
    2. ' de' → logprob: -1.8426579236984253
    3. '-' → logprob: -1.9676579236984253
    4. '+' → logprob: -2.217658042907715
    5. 'de' → logprob: -2.717658042907715
    6. '+=' → logprob: -3.092658042907715
    7. 'x' → logprob: -3.467658042907715
    8. '   ' → logprob: -3.592658042907715
    9. 'd' → logprob: -3.592658042907715
    10. 'sum' → logprob: -3.717658042907715

Token 952: ' divis' (ID: 37826)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.06643640249967575
    2. 'sum' → logprob: -2.816436290740967
    3. ' dz' → logprob: -5.691436290740967
    4. ' sum' → logprob: -7.566436290740967
    5. '1' → logprob: -7.941436290740967
    6. '```' → logprob: -9.816436767578125
    7. 'sz' → logprob: -10.191436767578125
    8. '0' → logprob: -10.316436767578125
    9. '
' → logprob: -10.941436767578125
    10. 'z' → logprob: -11.316436767578125

Token 953: 'ibles' (ID: 12234)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.954279899597168
    2. 'sum' → logprob: -2.079279899597168
    3. '[(' → logprob: -2.204279899597168
    4. '[:' → logprob: -2.704279899597168
    5. 'es' → logprob: -3.079279899597168
    6. 'di' → logprob: -3.204279899597168
    7. 'e' → logprob: -3.329279899597168
    8. 'if' → logprob: -3.704279899597168
    9. '[i' → logprob: -3.954279899597168
    10. '(sum' → logprob: -3.954279899597168

Token 954: ' par' (ID: 686)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.17217190563678741
    2. 'par' → logprob: -2.2971718311309814
    3. 'dans' → logprob: -3.1721718311309814
    4. '[' → logprob: -5.7971720695495605
    5. '(d' → logprob: -5.9221720695495605
    6. '   ' → logprob: -6.1721720695495605
    7. '0' → logprob: -6.4221720695495605
    8. '(' → logprob: -7.1721720695495605
    9. ' par' → logprob: -7.1721720695495605
    10. '```' → logprob: -7.2971720695495605

Token 955: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04889744147658348
    2. ' m' → logprob: -3.0488975048065186
    3. ' ' → logprob: -9.673897743225098
    4. '0' → logprob: -10.298897743225098
    5. '1' → logprob: -10.298897743225098
    6. '```' → logprob: -10.423897743225098
    7. 'sum' → logprob: -10.673897743225098
    8. ' ' → logprob: -11.048897743225098
    9. 'z' → logprob: -11.173897743225098
    10. 'dz' → logprob: -11.298897743225098

Token 956: '
' (ID: 198)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.06476032733917236
    2. '   ' → logprob: -3.939760208129883
    3. '[' → logprob: -4.189760208129883
    4. '[:-' → logprob: -4.439760208129883
    5. '```' → logprob: -4.939760208129883
    6. 'dans' → logprob: -5.814760208129883
    7. '[:]' → logprob: -6.939760208129883
    8. 'from' → logprob: -7.189760208129883
    9. 'for' → logprob: -7.439760208129883
    10. '       ' → logprob: -7.439760208129883

Token 957: '   ' (ID: 271)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.012130742892622948
    2. '[' → logprob: -4.8871307373046875
    3. '   ' → logprob: -5.7621307373046875
    4. '```' → logprob: -7.5121307373046875
    5. '[
' → logprob: -8.887130737304688
    6. 'dans' → logprob: -9.137130737304688
    7. '[:]' → logprob: -9.262130737304688
    8. '       ' → logprob: -9.387130737304688
    9. '[:-' → logprob: -9.637130737304688
    10. ' [:' → logprob: -10.012130737304688

Token 958: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7077603340148926
    2. '+' → logprob: -1.7077603340148926
    3. '```' → logprob: -2.5827603340148926
    4. '[' → logprob: -2.7077603340148926
    5. 'if' → logprob: -2.7077603340148926
    6. '[:' → logprob: -2.9577603340148926
    7. ' +' → logprob: -4.207760334014893
    8. ' if' → logprob: -4.707760334014893
    9. '[:-' → logprob: -5.082760334014893
    10. '[-' → logprob: -5.082760334014893

Token 959: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44975608587265015
    2. 'if' → logprob: -1.574756145477295
    3. '```' → logprob: -3.324756145477295
    4. '-' → logprob: -3.449756145477295
    5. 'dans' → logprob: -3.449756145477295
    6. '-d' → logprob: -5.074756145477295
    7. 'ans' → logprob: -5.199756145477295
    8. '       ' → logprob: -5.199756145477295
    9. '[' → logprob: -5.324756145477295
    10. ' -=' → logprob: -5.574756145477295

Token 960: ' les' (ID: 1341)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.034045591950416565
    2. ' dz' → logprob: -3.409045696258545
    3. '   ' → logprob: -8.909045219421387
    4. '(d' → logprob: -9.034045219421387
    5. 'di' → logprob: -10.034045219421387
    6. ' ' → logprob: -10.534045219421387
    7. '  ' → logprob: -10.784045219421387
    8. 'd' → logprob: -11.409045219421387
    9. '       ' → logprob: -12.284045219421387
    10. '	d' → logprob: -12.409045219421387

Token 961: ' premiers' (ID: 59140)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.00012582694762386382
    2. ' dz' → logprob: -9.250125885009766
    3. 'd' → logprob: -11.125125885009766
    4. 'di' → logprob: -11.875125885009766
    5. '
' → logprob: -13.000125885009766
    6. 'z' → logprob: -13.875125885009766
    7. '```' → logprob: -14.250125885009766
    8. '(d' → logprob: -14.375125885009766
    9. 'dzi' → logprob: -14.625125885009766
    10. 'dia' → logprob: -14.625125885009766

Token 962: ' éléments' (ID: 57375)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.08406645059585571
    2. '(n' → logprob: -3.709066390991211
    3. 'di' → logprob: -3.959066390991211
    4. '((' → logprob: -4.334066390991211
    5. ' dz' → logprob: -4.459066390991211
    6. ' (' → logprob: -4.709066390991211
    7. '(d' → logprob: -6.459066390991211
    8. '(' → logprob: -7.209066390991211
    9. '[(' → logprob: -8.459066390991211
    10. '   ' → logprob: -8.709066390991211

Token 963: ' rest' (ID: 2867)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.16310274600982666
    2. '[(' → logprob: -2.038102626800537
    3. 'di' → logprob: -4.038102626800537
    4. '[' → logprob: -7.288102626800537
    5. '```' → logprob: -7.288102626800537
    6. '   ' → logprob: -7.788102626800537
    7. '[:-' → logprob: -7.913102626800537
    8. 'de' → logprob: -9.538103103637695
    9. '[:]' → logprob: -9.663103103637695
    10. ':' → logprob: -9.663103103637695

Token 964: 'ants' (ID: 2027)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.31899720430374146
    2. 'di' → logprob: -1.3189971446990967
    3. 'au' → logprob: -6.818997383117676
    4. '[' → logprob: -7.193997383117676
    5. 'd' → logprob: -7.193997383117676
    6. 'de' → logprob: -7.318997383117676
    7. 'dz' → logprob: -7.568997383117676
    8. '[i' → logprob: -8.443997383117676
    9. '[:-' → logprob: -8.443997383117676
    10. 'if' → logprob: -8.693997383117676

Token 965: ' (' (ID: 350)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.4312334358692169
    2. '[' → logprob: -2.0562334060668945
    3. 'dz' → logprob: -2.0562334060668945
    4. '[:-' → logprob: -3.5562334060668945
    5. 'di' → logprob: -3.9312334060668945
    6. '```' → logprob: -4.3062334060668945
    7. 'if' → logprob: -4.5562334060668945
    8. '   ' → logprob: -4.8062334060668945
    9. '[d' → logprob: -5.6812334060668945
    10. '[
' → logprob: -6.5562334060668945

Token 966: 'n' (ID: 77)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.026428718119859695
    2. ' dz' → logprob: -3.776428699493408
    3. ':' → logprob: -6.651428699493408
    4. ':(' → logprob: -7.026428699493408
    5. '   ' → logprob: -8.776429176330566
    6. '0' → logprob: -8.776429176330566
    7. ' (' → logprob: -8.901429176330566
    8. ' :' → logprob: -9.651429176330566
    9. 'di' → logprob: -10.151429176330566
    10. '(' → logprob: -10.151429176330566

Token 967: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6812889575958252
    2. '-' → logprob: -0.8062889575958252
    3. ' %' → logprob: -3.681288957595825
    4. '%' → logprob: -4.181288719177246
    5. '(' → logprob: -5.681288719177246
    6. ' (' → logprob: -6.306288719177246
    7. '[' → logprob: -7.306288719177246
    8. ')' → logprob: -7.806288719177246
    9. '#' → logprob: -8.806288719177246
    10. ' ' → logprob: -9.306288719177246

Token 968: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010730616049841046
    2. '-' → logprob: -7.376072883605957
    3. ' ' → logprob: -8.251072883605957
    4. '(' → logprob: -9.126072883605957
    5. '```' → logprob: -10.251072883605957
    6. '%' → logprob: -11.501072883605957
    7. ' (' → logprob: -11.876072883605957
    8. '(k' → logprob: -12.251072883605957
    9. ')' → logprob: -12.751072883605957
    10. '   ' → logprob: -13.063572883605957

Token 969: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5234339833259583
    2. '%' → logprob: -1.2734339237213135
    3. ' %' → logprob: -2.7734339237213135
    4. ')%' → logprob: -2.7734339237213135
    5. ']' → logprob: -7.648434162139893
    6. '   ' → logprob: -7.648434162139893
    7. '%n' → logprob: -8.023433685302734
    8. '%d' → logprob: -8.148433685302734
    9. '%i' → logprob: -8.398433685302734
    10. ' ' → logprob: -8.523433685302734

Token 970: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06197217106819153
    2. ' k' → logprob: -2.811972141265869
    3. '_k' → logprob: -13.561972618103027
    4. '(k' → logprob: -14.061972618103027
    5. '```' → logprob: -14.311972618103027
    6. ' (' → logprob: -14.686972618103027
    7. '	k' → logprob: -14.686972618103027
    8. ' ' → logprob: -15.686972618103027
    9. ' ' → logprob: -15.686972618103027
    10. '%' → logprob: -15.936972618103027

Token 971: ' éléments' (ID: 57375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17570143938064575
    2. '-' → logprob: -1.925701379776001
    3. ' -' → logprob: -4.80070161819458
    4. 'ans' → logprob: -5.67570161819458
    5. 'if' → logprob: -5.80070161819458
    6. ' if' → logprob: -8.800701141357422
    7. ' -=' → logprob: -9.050701141357422
    8. '```' → logprob: -9.175701141357422
    9. '  ' → logprob: -10.050701141357422
    10. '-
' → logprob: -10.050701141357422

Token 972: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3822222948074341
    2. '-' → logprob: -1.257222294807434
    3. ' -' → logprob: -3.6322221755981445
    4. '-d' → logprob: -5.6322221755981445
    5. 'if' → logprob: -7.1322221755981445
    6. ' -=' → logprob: -7.3822221755981445
    7. ' ' → logprob: -8.257222175598145
    8. '```' → logprob: -8.257222175598145
    9. '-
' → logprob: -8.507222175598145
    10. '[' → logprob: -8.507222175598145

Token 973: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3562103807926178
    2. '-' → logprob: -1.2312103509902954
    3. 'if' → logprob: -5.981210231781006
    4. ' -' → logprob: -6.106210231781006
    5. 'ans' → logprob: -6.231210231781006
    6. '```' → logprob: -7.731210231781006
    7. ' -=' → logprob: -8.731210708618164
    8. '-=' → logprob: -8.981210708618164
    9. '-d' → logprob: -9.856210708618164
    10. '-
' → logprob: -9.981210708618164

Token 974: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5332008600234985
    2. 'if' (adapté à ' if') → logprob: -0.9082008600234985
    3. ' if' → logprob: -4.658200740814209
    4. '-' → logprob: -8.158201217651367
    5. '    
' → logprob: -9.283201217651367
    6. '```' → logprob: -9.908201217651367
    7. '+' → logprob: -10.658201217651367
    8. ' -' → logprob: -10.658201217651367
    9. '	if' → logprob: -11.158201217651367
    10. 'ans' → logprob: -11.658201217651367

Token 975: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02975558675825596
    2. '(n' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.779755592346191
    4. '   ' → logprob: -14.154755592346191
    5. '(N' → logprob: -14.154755592346191
    6. '  ' → logprob: -14.904755592346191
    7. '(' → logprob: -15.154755592346191
    8. '((' → logprob: -16.654754638671875
    9. ' ' → logprob: -16.779754638671875
    10. '(m' → logprob: -17.779754638671875

Token 976: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6337952017784119
    2. '(n' → logprob: -0.7587952017784119
    3. ' (' → logprob: -6.758795261383057
    4. ' n' → logprob: -10.508794784545898
    5. '   ' → logprob: -12.883794784545898
    6. '(' → logprob: -13.133794784545898
    7. '_n' → logprob: -14.383794784545898
    8. '(
' → logprob: -14.758794784545898
    9. '	n' → logprob: -15.258794784545898
    10. '[n' → logprob: -15.508794784545898

Token 977: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.428728848695755
    2. ' -' → logprob: -1.0537288188934326
    3. ' ' → logprob: -11.178729057312012
    4. ')' → logprob: -11.803729057312012
    5. '1' → logprob: -13.678729057312012
    6. '   ' → logprob: -13.678729057312012
    7. '–' → logprob: -14.178729057312012
    8. '[' → logprob: -14.178729057312012
    9. '```' → logprob: -14.428729057312012
    10. '<|end|>' → logprob: -14.553729057312012

Token 978: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014169861562550068
    2. ' ' → logprob: -4.264169692993164
    3. '```' → logprob: -12.889169692993164
    4. '   ' → logprob: -13.264169692993164
    5. '-' → logprob: -15.014169692993164
    6. '  ' → logprob: -15.389169692993164
    7. '>' → logprob: -15.576669692993164
    8. ')' → logprob: -15.576669692993164
    9. ' ' → logprob: -16.014169692993164
    10. '
' → logprob: -16.326669692993164

Token 979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016480287013109773
    2. ' ' → logprob: -9.000164985656738
    3. 'k' → logprob: -10.125164985656738
    4. '   ' → logprob: -14.500164985656738
    5. '  ' → logprob: -15.250164985656738
    6. '```' → logprob: -15.250164985656738
    7. ' k' → logprob: -15.375164985656738
    8. ')' → logprob: -17.625164031982422
    9. '１' → logprob: -17.812664031982422
    10. '`' → logprob: -18.187664031982422

Token 980: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012127334484830499
    2. ')%' → logprob: -7.0012125968933105
    3. '%' → logprob: -8.376213073730469
    4. ' )' → logprob: -9.751213073730469
    5. ' %' → logprob: -12.001213073730469
    6. '   ' → logprob: -13.126213073730469
    7. '%)' → logprob: -13.626213073730469
    8. ')
' → logprob: -14.001213073730469
    9. ' ' → logprob: -14.501213073730469
    10. ' ' → logprob: -14.626213073730469

Token 981: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20143312215805054
    2. '%' → logprob: -1.7014331817626953
    3. ')' → logprob: -11.326433181762695
    4. ' ' → logprob: -12.951433181762695
    5. '```' → logprob: -13.076433181762695
    6. ' ' → logprob: -13.576433181762695
    7. '   ' → logprob: -14.076433181762695
    8. ' %
' → logprob: -14.826433181762695
    9. ')%' → logprob: -15.326433181762695
    10. ' %)' → logprob: -16.076433181762695

Token 982: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031777136027812958
    2. ' k' → logprob: -5.753177642822266
    3. '	k' → logprob: -17.878177642822266
    4. '```' → logprob: -18.628177642822266
    5. ' к' → logprob: -19.503177642822266
    6. '_k' → logprob: -19.628177642822266
    7. '{k' → logprob: -19.753177642822266
    8. ' ' → logprob: -20.753177642822266
    9. '   ' → logprob: -21.003177642822266
    10. 'kx' → logprob: -21.503177642822266

Token 983: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6199209094047546
    2. ':
' → logprob: -0.8699209094047546
    3. '!=' → logprob: -3.3699209690093994
    4. ' !=' → logprob: -5.24492073059082
    5. '>' → logprob: -5.74492073059082
    6. ':
' → logprob: -10.11992073059082
    7. '   ' → logprob: -10.24492073059082
    8. ' >' → logprob: -10.74492073059082
    9. '):
' → logprob: -10.86992073059082
    10. ':

' → logprob: -11.86992073059082

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39664047956466675
    2. '   ' → logprob: -1.1466405391693115
    3. '-' → logprob: -4.896640300750732
    4. ' -' → logprob: -7.021640300750732
    5. 'ans' → logprob: -7.146640300750732
    6. '```' → logprob: -8.52164077758789
    7. '    ' → logprob: -8.89664077758789
    8. ' ans' → logprob: -9.52164077758789
    9. ' -=' → logprob: -10.27164077758789
    10. '     ' → logprob: -10.52164077758789

Token 985: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0002912486088462174
    2. ' ans' → logprob: -8.500290870666504
    3. '   ' → logprob: -9.375290870666504
    4. '	ans' → logprob: -13.875290870666504
    5. '       ' → logprob: -14.125290870666504
    6. '(ans' → logprob: -14.625290870666504
    7. ' ' → logprob: -15.625290870666504
    8. 'answer' → logprob: -15.625290870666504
    9. '           ' → logprob: -16.12529182434082
    10. '  ' → logprob: -16.25029182434082

Token 986: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.012663976289331913
    2. ' -=' → logprob: -4.762663841247559
    3. '-' → logprob: -5.512663841247559
    4. '   ' → logprob: -12.887663841247559
    5. ' -' → logprob: -13.137663841247559
    6. '+=' → logprob: -14.387663841247559
    7. '=' → logprob: -14.512663841247559
    8. '```' → logprob: -15.387663841247559
    9. '>' → logprob: -17.387664794921875
    10. '    ' → logprob: -17.887664794921875

Token 987: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -5.919942486798391e-05
    2. ' sum' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '(sum' → logprob: -16.125059127807617
    5. 'sz' → logprob: -16.375059127807617
    6. 'dz' → logprob: -16.500059127807617
    7. '	sum' → logprob: -17.500059127807617
    8. ' ' → logprob: -17.875059127807617
    9. '  ' → logprob: -18.000059127807617
    10. 's' → logprob: -18.875059127807617

Token 988: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.125017166137695
    3. 'dz' → logprob: -13.250017166137695
    4. '(
' → logprob: -14.625017166137695
    5. ' (' → logprob: -15.875017166137695
    6. 'd' → logprob: -16.125017166137695
    7. '(z' → logprob: -16.125017166137695
    8. '(dx' → logprob: -17.000017166137695
    9. 'Dz' → logprob: -17.500017166137695
    10. '((' → logprob: -17.625017166137695

Token 989: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0006852717488072813
    2. 'dz' → logprob: -8.750685691833496
    3. 'i' → logprob: -8.875685691833496
    4. '[z' → logprob: -8.875685691833496
    5. 'di' → logprob: -9.250685691833496
    6. 'zi' → logprob: -10.375685691833496
    7. '(di' → logprob: -10.500685691833496
    8. '(z' → logprob: -10.500685691833496
    9. '[:' → logprob: -11.000685691833496
    10. '(d' → logprob: -11.375685691833496

Token 990: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.7120533811976202e-05
    2. '[(' → logprob: -11.625017166137695
    3. '[' → logprob: -11.875017166137695
    4. ' [:' → logprob: -15.125017166137695
    5. '[:-' → logprob: -15.500017166137695
    6. '```' → logprob: -15.500017166137695
    7. '   ' → logprob: -15.750017166137695
    8. '[
' → logprob: -16.500017166137695
    9. '][:' → logprob: -17.375017166137695
    10. '
' → logprob: -17.500017166137695

Token 991: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.22751857340335846
    2. ' (' → logprob: -1.7275185585021973
    3. '((' → logprob: -4.352518558502197
    4. '(' → logprob: -4.352518558502197
    5. '(N' → logprob: -11.352519035339355
    6. '(m' → logprob: -13.727519035339355
    7. ' ((' → logprob: -13.727519035339355
    8. '[(' → logprob: -14.227519035339355
    9. '(k' → logprob: -14.227519035339355
    10. '(x' → logprob: -14.602519035339355

Token 992: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003195774042978883
    2. ' (' → logprob: -5.753195762634277
    3. 'n' → logprob: -11.003195762634277
    4. '(' → logprob: -14.003195762634277
    5. '((' → logprob: -14.753195762634277
    6. '   ' → logprob: -16.253196716308594
    7. ' ' → logprob: -17.378196716308594
    8. '(
' → logprob: -18.128196716308594
    9. ' n' → logprob: -18.753196716308594
    10. ' ' → logprob: -19.628196716308594

Token 993: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2773419916629791
    2. '1' → logprob: -1.9023419618606567
    3. ' -' → logprob: -2.4023420810699463
    4. '(' → logprob: -6.152341842651367
    5. ' (' → logprob: -8.652341842651367
    6. ' ' → logprob: -9.152341842651367
    7. '[' → logprob: -10.277341842651367
    8. '   ' → logprob: -11.277341842651367
    9. ')' → logprob: -11.777341842651367
    10. '```' → logprob: -13.027341842651367

Token 994: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009960101451724768
    2. '-' → logprob: -7.500996112823486
    3. ' ' → logprob: -7.750996112823486
    4. '(' → logprob: -12.875995635986328
    5. ' -' → logprob: -12.875995635986328
    6. '```' → logprob: -13.000995635986328
    7. '   ' → logprob: -13.500995635986328
    8. '  ' → logprob: -13.688495635986328
    9. '%' → logprob: -14.688495635986328
    10. ')' → logprob: -15.188495635986328

Token 995: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007800845778547227
    2. '(' → logprob: -7.50078010559082
    3. '(n' → logprob: -9.50078010559082
    4. ' ' → logprob: -9.62578010559082
    5. '(k' → logprob: -10.25078010559082
    6. 'k' → logprob: -10.50078010559082
    7. ' (' → logprob: -11.37578010559082
    8. '```' → logprob: -12.50078010559082
    9. ')' → logprob: -13.50078010559082
    10. '(m' → logprob: -13.50078010559082

Token 996: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09120559692382812
    2. ')%' → logprob: -2.466205596923828
    3. '%' → logprob: -6.216205596923828
    4. ']' → logprob: -8.966205596923828
    5. ']%' → logprob: -9.591205596923828
    6. ' )' → logprob: -10.466205596923828
    7. ')
' → logprob: -11.216205596923828
    8. ' %' → logprob: -11.966205596923828
    9. ')#' → logprob: -12.091205596923828
    10. ')]' → logprob: -12.591205596923828

Token 997: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.004657137673348188
    2. ' %' → logprob: -5.37965726852417
    3. ')%' → logprob: -11.004656791687012
    4. ')' → logprob: -11.754656791687012
    5. '%n' → logprob: -13.129656791687012
    6. ']%' → logprob: -13.129656791687012
    7. '```' → logprob: -13.629656791687012
    8. '%
' → logprob: -13.754656791687012
    9. ']' → logprob: -13.879656791687012
    10. '%i' → logprob: -14.129656791687012

Token 998: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017044597771018744
    2. ' k' → logprob: -6.376704692840576
    3. ')' → logprob: -14.876704216003418
    4. ' ' → logprob: -15.001704216003418
    5. '   ' → logprob: -15.001704216003418
    6. ' ' → logprob: -15.001704216003418
    7. '_k' → logprob: -15.626704216003418
    8. '	k' → logprob: -15.751704216003418
    9. '```' → logprob: -16.001705169677734
    10. 'q' → logprob: -16.876705169677734

Token 999: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012040425790473819
    2. ')' → logprob: -6.751204013824463
    3. ' ])' → logprob: -11.501204490661621
    4. ')])' → logprob: -11.876204490661621
    5. ')]' → logprob: -12.001204490661621
    6. '])
' → logprob: -12.001204490661621
    7. ']' → logprob: -12.626204490661621
    8. ' )' → logprob: -15.376204490661621
    9. '))' → logprob: -15.376204490661621
    10. '])]' → logprob: -15.626204490661621

Token 1000: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21549004316329956
    2. 'print' → logprob: -1.7154901027679443
    3. '
' → logprob: -4.465489864349365
    4. '    
' → logprob: -6.090489864349365
    5. ' print' → logprob: -9.215490341186523
    6. '  
' → logprob: -10.340490341186523
    7. '```' → logprob: -10.715490341186523
    8. '
' → logprob: -11.215490341186523
    9. '<|end|>' → logprob: -11.215490341186523
    10. '   
' → logprob: -11.840490341186523

Token 1001: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47433027625083923
    2. '   ' → logprob: -0.9743303060531616
    3. '    
' → logprob: -9.474329948425293
    4. ' print' → logprob: -9.474329948425293
    5. '
' → logprob: -9.974329948425293
    6. '```' → logprob: -9.974329948425293
    7. '	print' → logprob: -12.974329948425293
    8. '  
' → logprob: -13.099329948425293
    9. '``' → logprob: -14.349329948425293
    10. '       ' → logprob: -14.849329948425293

Token 1002: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.759734732331708e-05
    2. '   ' → logprob: -11.000017166137695
    3. ' print' → logprob: -14.000017166137695
    4. '```' → logprob: -17.125017166137695
    5. '    
' → logprob: -20.125017166137695
    6. '
' → logprob: -20.375017166137695
    7. '	print' → logprob: -20.875017166137695
    8. '#print' → logprob: -22.000017166137695
    9. '``' → logprob: -22.625017166137695
    10. '#' (adapté à ' #') → logprob: -22.875017166137695

Token 1003: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' print' → logprob: -15.625001907348633
    4. '```' → logprob: -21.625001907348633
    5. '#print' → logprob: -22.375001907348633
    6. '	print' → logprob: -22.500001907348633
    7. '    
' → logprob: -22.750001907348633
    8. '
' → logprob: -22.875001907348633
    9. '#' → logprob: -23.375001907348633
    10. 'printf' → logprob: -23.750001907348633

Token 1004: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.11098010092973709
    2. 'icher' → logprob: -2.9859800338745117
    3. '#' → logprob: -3.3609800338745117
    4. 'ichage' → logprob: -4.360980033874512
    5. '   ' → logprob: -5.860980033874512
    6. 'ich' → logprob: -6.485980033874512
    7. 'ic' → logprob: -6.860980033874512
    8. 'f' → logprob: -7.360980033874512
    9. 'fic' → logprob: -7.860980033874512
    10. '```' → logprob: -8.110980033874512

Token 1005: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.14303600788116455
    2. 'print' → logprob: -2.143035888671875
    3. '(print' → logprob: -4.393035888671875
    4. '(' → logprob: -5.643035888671875
    5. 'ans' → logprob: -10.268035888671875
    6. '   ' → logprob: -10.393035888671875
    7. ' print' → logprob: -12.643035888671875
    8. '(answer' → logprob: -12.893035888671875
    9. '(abs' → logprob: -14.143035888671875
    10. '(
' → logprob: -14.893035888671875

Token 1006: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.47408798336982727
    2. 'ans' → logprob: -0.9740879535675049
    3. ' ans' → logprob: -11.849087715148926
    4. '(' → logprob: -13.349087715148926
    5. '	ans' → logprob: -14.224087715148926
    6. '(x' → logprob: -15.349087715148926
    7. '_ans' → logprob: -15.474087715148926
    8. 'answer' → logprob: -15.599087715148926
    9. 'x' → logprob: -15.724087715148926
    10. 'a' → logprob: -16.099088668823242

Token 1007: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3995007276535034
    2. '(ans' → logprob: -1.1495007276535034
    3. 'print' → logprob: -5.149500846862793
    4. 'answer' → logprob: -5.274500846862793
    5. 'result' → logprob: -6.774500846862793
    6. '(' → logprob: -8.149500846862793
    7. 'r' → logprob: -9.149500846862793
    8. '(answer' → logprob: -10.149500846862793
    9. 'int' → logprob: -11.399500846862793
    10. 'ré' → logprob: -12.024500846862793

Token 1008: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023259920999407768
    2. '   ' → logprob: -3.7732598781585693
    3. ' print' → logprob: -11.273260116577148
    4. '```' → logprob: -13.398260116577148
    5. '	print' → logprob: -15.523260116577148
    6. '``' → logprob: -19.02326011657715
    7. '
' → logprob: -19.39826011657715
    8. '       ' → logprob: -19.77326011657715
    9. '(print' → logprob: -20.02326011657715
    10. '.print' → logprob: -20.77326011657715

Token 1009: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03167552128434181
    2. '(ans' → logprob: -4.406675338745117
    3. ' ans' → logprob: -4.781675338745117
    4. 'each' → logprob: -5.156675338745117
    5. 'ach' → logprob: -6.156675338745117
    6. ' chaque' → logprob: -6.781675338745117
    7. ' each' → logprob: -6.781675338745117
    8. 'l' → logprob: -9.656675338745117
    9. 'a' → logprob: -10.031675338745117
    10. '	ans' → logprob: -10.031675338745117

Token 1010: ' requ' (ID: 7028)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6084168553352356
    2. ' i' → logprob: -2.233416795730591
    3. 'print' → logprob: -2.358416795730591
    4. 'i' → logprob: -2.608416795730591
    5. 'ach' → logprob: -3.483416795730591
    6. '#' → logprob: -3.483416795730591
    7. 'n' → logprob: -3.608416795730591
    8. 'r' → logprob: -4.85841703414917
    9. 'int' → logprob: -5.23341703414917
    10. '...' → logprob: -5.35841703414917

Token 1011: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.106010302901268
    2. 'é' → logprob: -2.9810101985931396
    3. 'êt' → logprob: -3.7310101985931396
    4. 'ée' → logprob: -4.606010437011719
    5. 'ponse' → logprob: -4.981010437011719
    6. 'quête' → logprob: -5.356010437011719
    7. 'érence' → logprob: -6.606010437011719
    8. 'int' → logprob: -7.481010437011719
    9. 'ê' → logprob: -7.606010437011719
    10. 'e' → logprob: -8.106010437011719

Token 1012: ' cour' (ID: 2871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25994962453842163
    2. '   ' → logprob: -1.5099496841430664
    3. ' print' → logprob: -5.384949684143066
    4. '
' → logprob: -6.009949684143066
    5. '(print' → logprob: -7.384949684143066
    6. '()
' → logprob: -8.634949684143066
    7. '(' → logprob: -9.634949684143066
    8. '()' → logprob: -10.259949684143066
    9. '```' → logprob: -11.134949684143066
    10. '	print' → logprob: -11.384949684143066

Token 1013: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.2068537175655365
    2. 'ant' → logprob: -2.4568536281585693
    3. 's' → logprob: -2.8318536281585693
    4. 'e' → logprob: -3.5818536281585693
    5. 're' → logprob: -5.956853866577148
    6. 'é' → logprob: -6.081853866577148
    7. 'r' → logprob: -6.331853866577148
    8. 'ente' → logprob: -6.581853866577148
    9. 'ent' → logprob: -6.831853866577148
    10. 'ance' → logprob: -6.956853866577148

Token 1014: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0043465676717460155
    2. '   ' → logprob: -5.5043463706970215
    3. ' print' → logprob: -8.75434684753418
    4. '
' → logprob: -9.25434684753418
    5. '(print' → logprob: -12.12934684753418
    6. '```' → logprob: -12.12934684753418
    7. '(' → logprob: -13.50434684753418
    8. '()
' → logprob: -13.75434684753418
    9. '	print' → logprob: -14.75434684753418
    10. '    
' → logprob: -14.87934684753418

Token 1015: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034845535992644727
    2. '   ' → logprob: -8.500348091125488
    3. ' print' → logprob: -9.000348091125488
    4. '```' → logprob: -10.750348091125488
    5. '
' → logprob: -16.875349044799805
    6. '``' → logprob: -17.000349044799805
    7. '	print' → logprob: -17.375349044799805
    8. '`' → logprob: -19.750349044799805
    9. '    
' → logprob: -20.750349044799805
    10. '(print' → logprob: -21.000349044799805

Token 1016: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.25
    3. '   ' → logprob: -17.0
    4. '```' → logprob: -17.0
    5. '``' → logprob: -23.5
    6. '	print' → logprob: -23.875
    7. '
' → logprob: -24.5
    8. 'printf' → logprob: -26.25
    9. '`' → logprob: -26.5
    10. '#print' → logprob: -26.75

Token 1017: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012475410767365247
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -14.12512493133545
    4. '()' → logprob: -15.00012493133545
    5. 'ans' → logprob: -16.250123977661133
    6. '(an' → logprob: -17.375123977661133
    7. '(answer' → logprob: -17.750123977661133
    8. '((' → logprob: -18.000123977661133
    9. '(a' → logprob: -18.000123977661133
    10. '(abs' → logprob: -18.125123977661133

Token 1018: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -11.250014305114746
    3. ')
' → logprob: -14.125014305114746
    4. '))' → logprob: -16.62501335144043
    5. ')`' → logprob: -17.25001335144043
    6. '()' → logprob: -17.62501335144043
    7. '`)' → logprob: -17.62501335144043
    8. '')' → logprob: -17.87501335144043
    9. '```' → logprob: -17.87501335144043
    10. '())' → logprob: -18.00001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1016
Tokens correctement prédits (1ère position, stricte): 263
Tokens correctement prédits (1ère position, avec adaptation): 276
Tokens correctement prédits (top 10): 593
Précision stricte (1ère position): 25.89%
Précision adaptée (1ère position): 27.17%
Précision (top 10): 58.37%
================================================================================
