================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N = int(input())
    A = list(map(int, input().split()))
    ans = 0
    for a in A:
        while a % 2 == 0:
            ans += 1
            a //= 2
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38366374373435974
    2. '   ' → logprob: -1.7586637735366821
    3. 'pass' → logprob: -2.5086636543273926
    4. 'p' → logprob: -3.6336636543273926
    5. 'return' → logprob: -4.258663654327393
    6. 'r' → logprob: -4.508663654327393
    7. '#' → logprob: -5.258663654327393
    8. '    ' → logprob: -6.258663654327393
    9. 'a' → logprob: -6.383663654327393
    10. 'n' → logprob: -6.883663654327393

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36959168314933777
    2. '=' → logprob: -1.3695917129516602
    3. ' ' → logprob: -3.99459171295166
    4. '_' → logprob: -4.11959171295166
    5. ')' → logprob: -5.11959171295166
    6. ',' → logprob: -5.36959171295166
    7. '   ' → logprob: -5.86959171295166
    8. '.' → logprob: -6.11959171295166
    9. '  ' → logprob: -6.49459171295166
    10. '    ' → logprob: -7.36959171295166

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1261373609304428
    2. ' ' → logprob: -2.8761372566223145
    3. 'int' → logprob: -2.8761372566223145
    4. '10' → logprob: -5.2511372566223145
    5. '5' → logprob: -8.751137733459473
    6. '20' → logprob: -9.251137733459473
    7. ' input' → logprob: -9.501137733459473
    8. '0' → logprob: -10.251137733459473
    9. 'input' → logprob: -10.501137733459473
    10. '40' → logprob: -10.626137733459473

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002753981971181929
    2. '('' → logprob: -8.375275611877441
    3. ''' → logprob: -11.375275611877441
    4. '(input' → logprob: -11.500275611877441
    5. '(
' → logprob: -11.625275611877441
    6. ' (' → logprob: -12.750275611877441
    7. '()' → logprob: -12.875275611877441
    8. '("' → logprob: -13.125275611877441
    9. '(N' → logprob: -13.250275611877441
    10. '(

' → logprob: -13.875275611877441

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4705694913864136
    2. ')' → logprob: -1.2205694913864136
    3. '()' → logprob: -3.095569610595703
    4. '())' → logprob: -3.720569610595703
    5. '))' → logprob: -5.095569610595703
    6. '('' → logprob: -6.220569610595703
    7. '()))' → logprob: -7.720569610595703
    8. '')' → logprob: -7.720569610595703
    9. '(""))' → logprob: -7.720569610595703
    10. '")' → logprob: -8.345569610595703

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10944143682718277
    2. 'for' → logprob: -3.7344415187835693
    3. '    
' → logprob: -4.23444128036499
    4. '\' → logprob: -4.48444128036499
    5. '\n' → logprob: -4.60944128036499
    6. '```' → logprob: -4.60944128036499
    7. ' for' → logprob: -4.73444128036499
    8. '`' → logprob: -5.10944128036499
    9. ')' → logprob: -5.35944128036499
    10. 'if' → logprob: -6.10944128036499

Token 10: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5883623361587524
    2. 'for' → logprob: -1.7133623361587524
    3. '   ' → logprob: -1.7133623361587524
    4. ' for' → logprob: -2.213362216949463
    5. '\n' → logprob: -3.088362216949463
    6. 'i' → logprob: -3.338362216949463
    7. '    
' → logprob: -3.713362216949463
    8. ')' → logprob: -3.838362216949463
    9. '\' → logprob: -3.838362216949463
    10. ' 
' → logprob: -3.838362216949463

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014872431056573987
    2. '[]' → logprob: -7.0014872550964355
    3. '[:]' → logprob: -8.376486778259277
    4. '[i' → logprob: -9.126486778259277
    5. '=' → logprob: -9.876486778259277
    6. '.' → logprob: -10.001486778259277
    7. ')' → logprob: -10.876486778259277
    8. '[A' → logprob: -11.001486778259277
    9. '[...]' → logprob: -11.126486778259277
    10. '\[' → logprob: -11.376486778259277

Token 12: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.03882315754890442
    2. 'list' → logprob: -3.288823127746582
    3. ' [' → logprob: -7.413823127746582
    4. ' []' → logprob: -9.663823127746582
    5. ' input' → logprob: -9.788823127746582
    6. 'input' → logprob: -10.913823127746582
    7. '[list' → logprob: -11.038823127746582
    8. '[input' → logprob: -11.788823127746582
    9. '[' → logprob: -11.913823127746582
    10. '[]' → logprob: -12.038823127746582

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002184999408200383
    2. '(range' → logprob: -6.502184867858887
    3. '(input' → logprob: -7.502184867858887
    4. '(int' → logprob: -9.877184867858887
    5. '(eval' → logprob: -11.252184867858887
    6. '(
' → logprob: -11.752184867858887
    7. '(

' → logprob: -12.002184867858887
    8. ' (' → logprob: -12.002184867858887
    9. '()' → logprob: -12.127184867858887
    10. '("("' → logprob: -12.877184867858887

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.34814324975013733
    2. '(' → logprob: -1.348143219947815
    3. '(str' → logprob: -3.7231433391571045
    4. '(lambda' → logprob: -4.848143100738525
    5. '(input' → logprob: -6.723143100738525
    6. ')' → logprob: -7.723143100738525
    7. '```' → logprob: -8.973143577575684
    8. 'int' → logprob: -9.098143577575684
    9. '(
' → logprob: -9.473143577575684
    10. '(eval' → logprob: -9.473143577575684

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13058248162269592
    2. ',input' → logprob: -2.630582571029663
    3. ',' → logprob: -3.505582571029663
    4. '))' → logprob: -4.130582332611084
    5. '(' → logprob: -6.380582332611084
    6. 'input' → logprob: -6.630582332611084
    7. ')' → logprob: -7.880582332611084
    8. '=input' → logprob: -8.755582809448242
    9. ' input' → logprob: -9.005582809448242
    10. ')))' → logprob: -9.130582809448242

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6933071613311768
    2. ' input' → logprob: -0.6933071613311768
    3. '(input' → logprob: -8.818306922912598
    4. ',input' → logprob: -11.693306922912598
    5. ')' → logprob: -13.443306922912598
    6. '=input' → logprob: -14.068306922912598
    7. '	input' → logprob: -14.693306922912598
    8. '_input' → logprob: -15.693306922912598
    9. '<input' → logprob: -15.818306922912598
    10. ' ' → logprob: -15.818306922912598

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.664019763469696
    2. '()))' → logprob: -1.2890198230743408
    3. '()' → logprob: -1.6640198230743408
    4. '())' → logprob: -4.039019584655762
    5. '())))' → logprob: -6.289019584655762
    6. '()));' → logprob: -7.539019584655762
    7. '()>' → logprob: -9.414019584655762
    8. '(' → logprob: -9.539019584655762
    9. '))' → logprob: -10.664019584655762
    10. '());' → logprob: -10.664019584655762

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002764710516203195
    2. 'strip' → logprob: -8.250276565551758
    3. ' split' → logprob: -11.750276565551758
    4. 'rstrip' → logprob: -11.875276565551758
    5. '(split' → logprob: -16.375276565551758
    6. 'spl' → logprob: -16.500276565551758
    7. ')' → logprob: -16.500276565551758
    8. ' strip' → logprob: -17.875276565551758
    9. 'sp' → logprob: -18.000276565551758
    10. 's' → logprob: -18.000276565551758

Token 19: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4049028754234314
    2. '))' → logprob: -1.4049029350280762
    3. '()))' → logprob: -3.029902935028076
    4. '())' → logprob: -4.154902935028076
    5. ')))' → logprob: -4.529902935028076
    6. '()' → logprob: -4.779902935028076
    7. '(' → logprob: -5.529902935028076
    8. '())))' → logprob: -7.904902935028076
    9. ''))' → logprob: -12.029902458190918
    10. '(
' → logprob: -12.404902458190918

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16126202046871185
    2. '```' → logprob: -2.911262035369873
    3. ')' → logprob: -3.161262035369873
    4. '    
' → logprob: -4.036262035369873
    5. '
' → logprob: -4.036262035369873
    6. '`' → logprob: -6.036262035369873
    7. 'for' → logprob: -6.161262035369873
    8. ' ' → logprob: -6.536262035369873
    9. ' for' → logprob: -6.661262035369873
    10. '#' → logprob: -6.786262035369873

Token 21: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10993904620409012
    2. 'for' → logprob: -3.9849390983581543
    3. '```' → logprob: -3.9849390983581543
    4. ')' → logprob: -4.234939098358154
    5. 'i' → logprob: -4.609939098358154
    6. '    
' → logprob: -4.984939098358154
    7. ' for' → logprob: -5.109939098358154
    8. 'if' → logprob: -5.234939098358154
    9. '    ' → logprob: -5.484939098358154
    10. ' ' → logprob: -5.734939098358154

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22434847056865692
    2. '=' → logprob: -1.9743484258651733
    3. '_' → logprob: -2.849348545074463
    4. '[' → logprob: -6.224348545074463
    5. ' +=' → logprob: -6.974348545074463
    6. ' ' → logprob: -8.099348068237305
    7. '.' → logprob: -8.599348068237305
    8. ')' → logprob: -8.849348068237305
    9. '[:]' → logprob: -8.849348068237305
    10. '[]' → logprob: -9.099348068237305

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2582966387271881
    2. ' ' → logprob: -1.5082966089248657
    3. ' []' → logprob: -5.633296489715576
    4. ' max' → logprob: -7.133296489715576
    5. 'max' → logprob: -7.508296489715576
    6. '[]' → logprob: -7.883296489715576
    7. '[' → logprob: -8.008296966552734
    8. ' [' → logprob: -8.633296966552734
    9. 'sum' → logprob: -9.008296966552734
    10. '"' → logprob: -9.258296966552734

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01715768873691559
    2. 'max' → logprob: -4.517157554626465
    3. 'sum' → logprob: -5.892157554626465
    4. '[' → logprob: -6.392157554626465
    5. '[]' → logprob: -7.142157554626465
    6. 'A' → logprob: -7.892157554626465
    7. 'float' → logprob: -8.642157554626465
    8. '[max' → logprob: -9.392157554626465
    9. 'len' → logprob: -9.767157554626465
    10. 'min' → logprob: -10.142157554626465

Token 25: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.625617265701294
    2. 'for' → logprob: -1.500617265701294
    3. '   ' → logprob: -2.250617265701294
    4. '
' → logprob: -3.125617265701294
    5. '<|end|>' → logprob: -3.500617265701294
    6. ' ' → logprob: -3.750617265701294
    7. '\' → logprob: -4.500617027282715
    8. '\n' → logprob: -4.625617027282715
    9. '	for' → logprob: -5.500617027282715
    10. '' → logprob: -5.625617027282715

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05271196737885475
    2. ' for' → logprob: -3.8027119636535645
    3. 'for' → logprob: -4.1777119636535645
    4. '
' → logprob: -5.0527119636535645
    5. ' ' → logprob: -5.8027119636535645
    6. '```' → logprob: -6.9277119636535645
    7. '    
' → logprob: -7.3027119636535645
    8. '\n' → logprob: -7.3027119636535645
    9. '' → logprob: -7.8027119636535645
    10. '<|end|>' → logprob: -8.177712440490723

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04916928708553314
    2. ' for' → logprob: -3.7991693019866943
    3. '   ' → logprob: -4.174169063568115
    4. ' ' → logprob: -5.549169063568115
    5. 'f' → logprob: -6.174169063568115
    6. '```' → logprob: -6.549169063568115
    7. '\n' → logprob: -7.299169063568115
    8. '
' → logprob: -8.049169540405273
    9. 'i' → logprob: -8.174169540405273
    10. ')' → logprob: -8.299169540405273

Token 28: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06255070865154266
    2. ' ' → logprob: -2.8125507831573486
    3. 'i' → logprob: -8.31255054473877
    4. '_' → logprob: -8.56255054473877
    5. ' _' → logprob: -9.56255054473877
    6. ' A' → logprob: -11.06255054473877
    7. '  ' → logprob: -11.06255054473877
    8. ' a' → logprob: -11.18755054473877
    9. ' x' → logprob: -11.81255054473877
    10. ' I' → logprob: -11.81255054473877

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07087216526269913
    2. ' ' → logprob: -3.0708720684051514
    3. 'in' → logprob: -4.4458723068237305
    4. 'n' → logprob: -5.1958723068237305
    5. '  ' → logprob: -5.8208723068237305
    6. ' n' → logprob: -7.5708723068237305
    7. '_' → logprob: -8.19587230682373
    8. '[' → logprob: -8.19587230682373
    9. ' i' → logprob: -8.19587230682373
    10. '   ' → logprob: -9.19587230682373

Token 30: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5761405825614929
    2. 'A' → logprob: -0.8261405825614929
    3. ' ' → logprob: -8.576140403747559
    4. ' ' → logprob: -12.951140403747559
    5. '	A' → logprob: -13.076140403747559
    6. ' range' → logprob: -13.326140403747559
    7. '  ' → logprob: -13.576140403747559
    8. 'range' → logprob: -13.701140403747559
    9. 'a' → logprob: -14.201140403747559
    10. '   ' → logprob: -14.326140403747559

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.742448022123426e-05
    2. '):' → logprob: -10.625067710876465
    3. ':
' → logprob: -11.375067710876465
    4. '>' → logprob: -11.375067710876465
    5. '   ' → logprob: -12.500067710876465
    6. ',' → logprob: -12.750067710876465
    7. '       ' → logprob: -12.875067710876465
    8. '>:' → logprob: -12.875067710876465
    9. ':**' → logprob: -13.000067710876465
    10. '+' → logprob: -13.625067710876465

Token 32: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0490269660949707
    2. ' ' → logprob: -1.1740269660949707
    3. '       ' → logprob: -1.4240269660949707
    4. '<|end|>' → logprob: -2.7990269660949707
    5. '   ' → logprob: -4.049026966094971
    6. ''' → logprob: -5.299026966094971
    7. ' 
' → logprob: -5.924026966094971
    8. '     
' → logprob: -6.049026966094971
    9. '        ' → logprob: -6.424026966094971
    10. '  ' → logprob: -6.549026966094971

Token 33: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0569632053375244
    2. ' if' → logprob: -1.5569632053375244
    3. 'if' → logprob: -1.9319632053375244
    4. ' ' → logprob: -2.0569632053375244
    5. '    ' → logprob: -2.4319632053375244
    6. 'ans' → logprob: -3.4319632053375244
    7. 'a' → logprob: -3.9319632053375244
    8. ' ans' → logprob: -4.056962966918945
    9. ' a' → logprob: -6.056962966918945
    10. ' )' → logprob: -6.306962966918945

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1797555834054947
    2. 'a' → logprob: -1.8047555685043335
    3. '	a' → logprob: -12.804755210876465
    4. '(a' → logprob: -13.054755210876465
    5. ' ' → logprob: -13.179755210876465
    6. '_a' → logprob: -13.429755210876465
    7. 'A' → logprob: -14.679755210876465
    8. ' (' → logprob: -14.804755210876465
    9. '>a' → logprob: -14.929755210876465
    10. '(' → logprob: -15.179755210876465

Token 35: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014332264661789
    2. '%' → logprob: -1.7014331817626953
    3. ' ' → logprob: -11.826433181762695
    4. '>' → logprob: -12.076433181762695
    5. ' >' → logprob: -12.451433181762695
    6. '%i' → logprob: -14.076433181762695
    7. ' ' → logprob: -14.201433181762695
    8. '%s' → logprob: -15.201433181762695
    9. '%A' → logprob: -15.326433181762695
    10. '%x' → logprob: -15.451433181762695

Token 36: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018452037125825882
    2. ' ' → logprob: -4.018452167510986
    3. '3' → logprob: -8.518451690673828
    4. '5' → logprob: -10.393451690673828
    5. '10' → logprob: -10.643451690673828
    6. '6' → logprob: -10.643451690673828
    7. '26' → logprob: -11.518451690673828
    8. '4' → logprob: -12.768451690673828
    9. '7' → logprob: -12.768451690673828
    10. '   ' → logprob: -13.518451690673828

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011808603449026123
    2. '3' → logprob: -9.625118255615234
    3. '26' → logprob: -10.125118255615234
    4. ' ' → logprob: -12.375118255615234
    5. '10' → logprob: -13.125118255615234
    6. '   ' → logprob: -13.250118255615234
    7. '6' → logprob: -14.125118255615234
    8. '5' → logprob: -14.125118255615234
    9. '  ' → logprob: -14.625118255615234
    10. '``' → logprob: -15.375118255615234

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42922696471214294
    2. '==' → logprob: -1.0542269945144653
    3. '0' → logprob: -8.179226875305176
    4. '=' → logprob: -8.554226875305176
    5. ' ' → logprob: -10.804226875305176
    6. ' =' → logprob: -11.679226875305176
    7. '===' → logprob: -11.804226875305176
    8. ')==' → logprob: -12.304226875305176
    9. ']==' → logprob: -12.679226875305176
    10. '()==' → logprob: -12.804226875305176

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04299931600689888
    2. ' ' → logprob: -3.167999267578125
    3. '  ' → logprob: -17.667999267578125
    4. ' ' → logprob: -17.667999267578125
    5. '```' → logprob: -17.792999267578125
    6. '   ' → logprob: -18.042999267578125
    7. '==' → logprob: -18.105499267578125
    8. '۰' → logprob: -18.167999267578125
    9. '    ' → logprob: -18.542999267578125
    10. ' ==' → logprob: -18.667999267578125

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '  ' → logprob: -17.439685821533203
    4. '۰' → logprob: -17.564685821533203
    5. '   ' → logprob: -18.564685821533203
    6. '```' → logprob: -18.752185821533203
    7. '०' → logprob: -18.814685821533203
    8. '０' → logprob: -19.002185821533203
    9. '    ' → logprob: -19.189685821533203
    10. '٠' → logprob: -19.189685821533203

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016754455282352865
    2. ':
' → logprob: -8.875167846679688
    3. '):' → logprob: -10.625167846679688
    4. '       ' → logprob: -14.250167846679688
    5. ' and' → logprob: -14.500167846679688
    6. ' :' → logprob: -14.750167846679688
    7. '<|end|>' → logprob: -15.000167846679688
    8. '   ' → logprob: -15.500167846679688
    9. '):
' → logprob: -15.500167846679688
    10. ',' → logprob: -15.500167846679688

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1366240680217743
    2. '       ' → logprob: -2.2616240978240967
    3. ' ' → logprob: -4.886623859405518
    4. ' a' → logprob: -5.386623859405518
    5. 'a' → logprob: -5.886623859405518
    6. '<|end|>' → logprob: -6.261623859405518
    7. '        ' → logprob: -6.386623859405518
    8. ' 
' → logprob: -6.886623859405518
    9. '        
' → logprob: -7.136623859405518
    10. '```' → logprob: -7.261623859405518

Token 43: ' ans' (ID: 3345)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25833457708358765
    2. 'a' → logprob: -2.0083346366882324
    3. '           ' → logprob: -2.8833346366882324
    4. '            ' → logprob: -3.8833346366882324
    5. ' ans' → logprob: -4.883334636688232
    6. '               ' → logprob: -5.008334636688232
    7. 'ans' (adapté à ' ans') → logprob: -7.133334636688232
    8. ' ' → logprob: -8.008334159851074
    9. '```' → logprob: -8.008334159851074
    10. ' 
' → logprob: -8.133334159851074

Token 44: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005245971959084272
    2. '+=' → logprob: -5.255246162414551
    3. '   ' → logprob: -11.75524616241455
    4. '+' → logprob: -13.50524616241455
    5. '    ' → logprob: -13.75524616241455
    6. ' ' → logprob: -14.50524616241455
    7. ']+=' → logprob: -15.25524616241455
    8. ' =' → logprob: -15.50524616241455
    9. ' +' → logprob: -16.005245208740234
    10. '  ' → logprob: -16.255245208740234

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022484004497528
    2. ' ' → logprob: -1.9102247953414917
    3. '           ' → logprob: -15.035224914550781
    4. '   ' → logprob: -15.660224914550781
    5. '    ' → logprob: -16.28522491455078
    6. ' ' → logprob: -17.03522491455078
    7. '2' → logprob: -17.28522491455078
    8. '```' → logprob: -17.34772491455078
    9. '0' → logprob: -17.59772491455078
    10. '       ' → logprob: -17.84772491455078

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '2' → logprob: -19.00002098083496
    5. '```' → logprob: -19.12502098083496
    6. '0' → logprob: -19.25002098083496
    7. '       ' → logprob: -19.50002098083496
    8. '  ' → logprob: -19.68752098083496
    9. '           ' → logprob: -20.12502098083496
    10. '１' → logprob: -20.12502098083496

Token 47: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6507784724235535
    2. 'a' → logprob: -1.0257785320281982
    3. ' a' → logprob: -2.1507785320281982
    4. '       ' → logprob: -5.900778293609619
    5. '   ' → logprob: -8.400778770446777
    6. '```' → logprob: -8.525778770446777
    7. '               ' → logprob: -9.025778770446777
    8. ' ' → logprob: -10.650778770446777
    9. '        
' → logprob: -10.650778770446777
    10. '            
' → logprob: -10.775778770446777

Token 48: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5049530863761902
    2. '           ' → logprob: -1.129953145980835
    3. ' a' → logprob: -2.629953145980835
    4. '       ' → logprob: -7.754952907562256
    5. '               ' → logprob: -7.754952907562256
    6. '```' → logprob: -8.129953384399414
    7. '   ' → logprob: -9.129953384399414
    8. ' ' → logprob: -11.254953384399414
    9. '``' → logprob: -12.004953384399414
    10. '`' → logprob: -12.004953384399414

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01817300356924534
    2. ' a' → logprob: -4.0181732177734375
    3. '           ' → logprob: -10.768173217773438
    4. '               ' → logprob: -13.768173217773438
    5. '   ' → logprob: -15.018173217773438
    6. '```' → logprob: -15.518173217773438
    7. '	a' → logprob: -15.518173217773438
    8. ' ' → logprob: -15.893173217773438
    9. '       ' → logprob: -16.268173217773438
    10. '            ' → logprob: -16.643173217773438

Token 50: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.012879121117293835
    2. ' //' → logprob: -4.762878894805908
    3. '=' → logprob: -5.512878894805908
    4. ' =' → logprob: -9.012879371643066
    5. '//' → logprob: -9.387879371643066
    6. '/=' → logprob: -11.637879371643066
    7. ' /=' → logprob: -12.887879371643066
    8. ' ' → logprob: -13.387879371643066
    9. ' ' → logprob: -13.512879371643066
    10. ' >>=' → logprob: -14.387879371643066

Token 51: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.1008713702030946e-06
    2. '2' → logprob: -13.750001907348633
    3. '=}' → logprob: -14.375001907348633
    4. '=_' → logprob: -15.375001907348633
    5. '=.' → logprob: -16.625001907348633
    6. '='' → logprob: -17.375001907348633
    7. '=*/' → logprob: -17.500001907348633
    8. ' =' → logprob: -18.000001907348633
    9. '==' → logprob: -18.125001907348633
    10. '=

' → logprob: -18.125001907348633

Token 52: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. '```' → logprob: -16.125335693359375
    5. '  ' → logprob: -18.000335693359375
    6. '    ' → logprob: -18.875335693359375
    7. '۲' → logprob: -18.875335693359375
    8. ' ' → logprob: -18.875335693359375
    9. '２' → logprob: -19.000335693359375
    10. '           ' → logprob: -19.187835693359375

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '۲' → logprob: -18.625001907348633
    6. '２' → logprob: -19.125001907348633
    7. '  ' → logprob: -19.375001907348633
    8. '>' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.625001907348633
    10. '२' → logprob: -20.625001907348633

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4226261377334595
    2. '<|end|>' → logprob: -1.2976261377334595
    3. '
' → logprob: -2.92262601852417
    4. '\n' → logprob: -4.42262601852417
    5. '<|end|>' → logprob: -6.42262601852417
    6. '```' → logprob: -6.54762601852417
    7. '    
' → logprob: -7.29762601852417
    8. '       ' → logprob: -7.79762601852417
    9. ' ' → logprob: -8.297626495361328
    10. ')' → logprob: -8.422626495361328

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005384349264204502
    2. '<|end|>' → logprob: -5.50538444519043
    3. '
' → logprob: -7.25538444519043
    4. '\n' → logprob: -8.25538444519043
    5. '    
' → logprob: -9.25538444519043
    6. '```' → logprob: -9.50538444519043
    7. '       ' → logprob: -10.25538444519043
    8. 'print' → logprob: -10.50538444519043
    9. 'return' → logprob: -10.63038444519043
    10. '<|end|>' → logprob: -11.25538444519043

Token 56: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05312285199761391
    2. '   ' → logprob: -3.0531227588653564
    3. 'return' → logprob: -5.4281229972839355
    4. ' print' → logprob: -9.178122520446777
    5. ' return' → logprob: -11.428122520446777
    6. '```' → logprob: -11.928122520446777
    7. '<|end|>' → logprob: -12.303122520446777
    8. '    
' → logprob: -13.178122520446777
    9. '\n' → logprob: -13.303122520446777
    10. 'if' → logprob: -13.928122520446777

Token 57: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024696826934814
    2. '(ans' → logprob: -1.9102469682693481
    3. '()' → logprob: -11.410246849060059
    4. '('' → logprob: -13.160246849060059
    5. '(`' → logprob: -13.285246849060059
    6. '(
' → logprob: -13.535246849060059
    7. '(a' → logprob: -13.535246849060059
    8. ' (' → logprob: -13.535246849060059
    9. '(answer' → logprob: -13.535246849060059
    10. '(abs' → logprob: -14.035246849060059

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -16.25
    4. ')`' → logprob: -17.5
    5. '))' → logprob: -17.625
    6. '`)' → logprob: -18.375
    7. '')' → logprob: -18.875
    8. '）' → logprob: -19.5
    9. '()' → logprob: -19.875
    10. ')}' → logprob: -20.25

Token 59: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0014190420042723417
    2. '__' → logprob: -6.6264190673828125
    3. ' ' → logprob: -9.626419067382812
    4. ' ' → logprob: -11.501419067382812
    5. '_' → logprob: -11.626419067382812
    6. ' _' → logprob: -12.751419067382812
    7. ' ​' → logprob: -12.876419067382812
    8. ' ‌' → logprob: -14.501419067382812
    9. ' ﻿' → logprob: -14.626419067382812
    10. ' True' → logprob: -14.876419067382812

Token 61: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07324440032243729
    2. ' ==' → logprob: -2.823244333267212
    3. ' __' → logprob: -5.323244571685791
    4. '==' → logprob: -5.948244571685791
    5. '.' → logprob: -6.698244571685791
    6. '[' → logprob: -6.948244571685791
    7. '.__' → logprob: -7.573244571685791
    8. ' .' → logprob: -7.698244571685791
    9. '_' → logprob: -9.573244094848633
    10. '__.__' → logprob: -9.573244094848633

Token 62: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001984146365430206
    2. '_' → logprob: -9.000198364257812
    3. '__.__' → logprob: -10.875198364257812
    4. '==' → logprob: -11.000198364257812
    5. '__[' → logprob: -11.250198364257812
    6. '___' → logprob: -12.000198364257812
    7. '__["' → logprob: -12.750198364257812
    8. '__.' → logprob: -12.750198364257812
    9. '__)' → logprob: -13.125198364257812
    10. '[' → logprob: -13.375198364257812

Token 63: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5156868696212769
    2. ' ==' → logprob: -1.3906868696212769
    3. '[' → logprob: -2.6406869888305664
    4. '==' → logprob: -3.2656869888305664
    5. '.' → logprob: -3.7656869888305664
    6. '.__' → logprob: -5.265686988830566
    7. '['' → logprob: -5.390686988830566
    8. '__.__' → logprob: -5.390686988830566
    9. '["' → logprob: -6.515686988830566
    10. '```' → logprob: -7.140686988830566

Token 64: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133560121059418
    2. ''' → logprob: -1.3133560419082642
    3. ' "' → logprob: -9.563356399536133
    4. ' '' → logprob: -10.813356399536133
    5. '__' → logprob: -13.313356399536133
    6. ' "__' → logprob: -14.063356399536133
    7. '"user' → logprob: -14.813356399536133
    8. ' '__' → logprob: -15.313356399536133
    9. ' ' → logprob: -15.563356399536133
    10. ' ' → logprob: -16.188356399536133

Token 65: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.541112427134067e-05
    2. '__' → logprob: -9.625075340270996
    3. 'name' → logprob: -11.875075340270996
    4. '_main' → logprob: -13.250075340270996
    5. ' main' → logprob: -15.125075340270996
    6. 'ma' → logprob: -16.125076293945312
    7. 'built' → logprob: -16.500076293945312
    8. 'm' → logprob: -17.000076293945312
    9. '```' → logprob: -17.250076293945312
    10. 'python' → logprob: -17.625076293945312

Token 66: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1602369248867035
    2. '__":
' → logprob: -1.9102369546890259
    3. '__':
' → logprob: -12.160237312316895
    4. '__:' → logprob: -12.785237312316895
    5. '__["' → logprob: -13.160237312316895
    6. '__.' → logprob: -13.660237312316895
    7. '__",' → logprob: -14.660237312316895
    8. '_' → logprob: -14.910237312316895
    9. '__.__' → logprob: -15.035237312316895
    10. '__("' → logprob: -15.410237312316895

Token 67: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00161555758677423
    2. '   ' → logprob: -6.876615524291992
    3. 'main' → logprob: -7.751615524291992
    4. '	main' → logprob: -8.876615524291992
    5. ' ' → logprob: -12.001615524291992
    6. '(main' → logprob: -12.626615524291992
    7. '_main' → logprob: -13.876615524291992
    8. '    ' → logprob: -14.376615524291992
    9. '   ' → logprob: -15.126615524291992
    10. '    
' → logprob: -15.126615524291992

Token 68: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.061968132853507996
    2. 'main' (adapté à ' main') → logprob: -2.8119680881500244
    3. '	main' → logprob: -14.686967849731445
    4. ' ' → logprob: -18.061967849731445
    5. '(main' → logprob: -19.061967849731445
    6. '_main' → logprob: -19.311967849731445
    7. '   ' → logprob: -19.811967849731445
    8. '.main' → logprob: -20.186967849731445
    9. ' ma' → logprob: -20.311967849731445
    10. ' ' → logprob: -20.561967849731445

Token 69: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.8351892473874614e-05
    2. '(' → logprob: -10.125048637390137
    3. '()`' → logprob: -13.000048637390137
    4. '`()' → logprob: -13.000048637390137
    5. '()
' → logprob: -13.625048637390137
    6. ' ()' → logprob: -14.125048637390137
    7. '```' → logprob: -14.500048637390137
    8. '()\' → logprob: -15.750048637390137
    9. ']()' → logprob: -16.00004768371582
    10. '()

' → logprob: -16.25004768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 43.28%
Précision adaptée (1ère position): 47.76%
Précision (top 10): 82.09%
================================================================================
