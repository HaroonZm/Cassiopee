================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nx = input().split()
l = input().split()

nx = [int(x) for x in nx]
l = [int(n) for n in l]

buf = 0
count = 1

for i in range(nx[0]):
    buf = buf + l[i]
    if nx[1] >= buf:
        count += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nx' (ID: 45103)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005353886168450117
    2. ''' → logprob: -5.880353927612305
    3. '('' → logprob: -7.130353927612305
    4. '"' → logprob: -7.505353927612305
    5. '(
' → logprob: -8.130353927612305
    6. '[' → logprob: -8.505353927612305
    7. '("("' → logprob: -8.880353927612305
    8. '`' → logprob: -9.005353927612305
    9. '.' → logprob: -9.130353927612305
    10. '```' → logprob: -9.255353927612305

Token 4: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.019274897873401642
    2. '+' → logprob: -5.519274711608887
    3. '.strip' → logprob: -5.769274711608887
    4. '\' → logprob: -6.019274711608887
    5. '()' → logprob: -6.019274711608887
    6. '(' → logprob: -6.394274711608887
    7. ')' → logprob: -6.894274711608887
    8. '\n' → logprob: -7.019274711608887
    9. '```' → logprob: -7.269274711608887
    10. '*' → logprob: -7.894274711608887

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023366838693618774
    2. '()' → logprob: -3.773366928100586
    3. '"' → logprob: -10.273366928100586
    4. '('' → logprob: -10.523366928100586
    5. '(
' → logprob: -11.398366928100586
    6. '`' → logprob: -11.773366928100586
    7. '("("' → logprob: -11.898366928100586
    8. '```' → logprob: -12.148366928100586
    9. ''' → logprob: -12.398366928100586
    10. '`()' → logprob: -12.398366928100586

Token 6: 'l' (ID: 75)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47907549142837524
    2. 'for' → logprob: -1.9790754318237305
    3. 'n' → logprob: -2.6040754318237305
    4. '[' → logprob: -3.2290754318237305
    5. 'if' → logprob: -3.4790754318237305
    6. 'a' → logprob: -3.7290754318237305
    7. 'nx' → logprob: -3.8540754318237305
    8. 'num' → logprob: -4.1040754318237305
    9. '```' → logprob: -4.1040754318237305
    10. '`' → logprob: -5.1040754318237305

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2124176025390625
    2. ' =' → logprob: -1.9624176025390625
    3. '[' → logprob: -4.3374176025390625
    4. 'en' → logprob: -4.4624176025390625
    5. 's' → logprob: -5.0874176025390625
    6. 'e' → logprob: -5.3374176025390625
    7. 'i' → logprob: -5.5874176025390625
    8. 'et' → logprob: -5.7124176025390625
    9. 'ist' → logprob: -5.9624176025390625
    10. '.' → logprob: -6.8374176025390625

Token 8: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8155263662338257
    2. '[int' → logprob: -1.9405263662338257
    3. '[]' → logprob: -2.3155264854431152
    4. ' list' → logprob: -2.3155264854431152
    5. '[len' → logprob: -2.6905264854431152
    6. 'len' → logprob: -3.3155264854431152
    7. 'nx' → logprob: -3.4405264854431152
    8. '[list' → logprob: -4.065526485443115
    9. '[' → logprob: -4.315526485443115
    10. ' nx' → logprob: -4.315526485443115

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24852785468101501
    2. '(' → logprob: -1.6235278844833374
    3. '().' → logprob: -3.873527765274048
    4. '())' → logprob: -7.623528003692627
    5. ')' → logprob: -7.873528003692627
    6. '```' → logprob: -8.498527526855469
    7. '.' → logprob: -8.623527526855469
    8. ' ()' → logprob: -9.123527526855469
    9. '`()' → logprob: -9.248527526855469
    10. '()

' → logprob: -9.373527526855469

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015117661096155643
    2. 'strip' → logprob: -6.501511573791504
    3. 'rstrip' → logprob: -12.001511573791504
    4. ' split' → logprob: -13.501511573791504
    5. 'startswith' → logprob: -13.876511573791504
    6. 'replace' → logprob: -15.126511573791504
    7. 'spl' → logprob: -15.376511573791504
    8. 'isdigit' → logprob: -15.626511573791504
    9. 'read' → logprob: -16.62651252746582
    10. '(split' → logprob: -17.00151252746582

Token 11: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0042500621639192104
    2. '(' → logprob: -5.5042500495910645
    3. '`()' → logprob: -9.629250526428223
    4. '()`' → logprob: -10.504250526428223
    5. '```' → logprob: -11.004250526428223
    6. '().' → logprob: -11.254250526428223
    7. '()[' → logprob: -11.254250526428223
    8. ')' → logprob: -12.004250526428223
    9. '()

' → logprob: -12.754250526428223
    10. '())' → logprob: -12.754250526428223

Token 12: 'nx' (ID: 45103)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1492593139410019
    2. 'x' → logprob: -2.899259328842163
    3. 'for' → logprob: -3.024259328842163
    4. 'l' → logprob: -4.899259090423584
    5. 'a' → logprob: -5.024259090423584
    6. 'count' → logprob: -6.024259090423584
    7. 'm' → logprob: -6.024259090423584
    8. 'c' → logprob: -6.149259090423584
    9. 's' → logprob: -6.149259090423584
    10. 'result' → logprob: -6.399259090423584

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006731167086400092
    2. '```' → logprob: -9.000673294067383
    3. '<|end|>' → logprob: -9.125673294067383
    4. '[n' → logprob: -9.250673294067383
    5. '.' → logprob: -9.375673294067383
    6. '[:]' → logprob: -9.625673294067383
    7. '\[' → logprob: -9.625673294067383
    8. '[
' → logprob: -10.375673294067383
    9. '#' → logprob: -11.000673294067383
    10. '[]' → logprob: -11.375673294067383

Token 14: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.30409321188926697
    2. '[list' → logprob: -2.5540931224823
    3. '[int' → logprob: -2.8040931224823
    4. ' list' → logprob: -3.1790931224823
    5. '[n' → logprob: -3.6790931224823
    6. '[' → logprob: -3.6790931224823
    7. ' [' → logprob: -4.554093360900879
    8. '[input' → logprob: -4.804093360900879
    9. '[len' → logprob: -5.429093360900879
    10. 'map' → logprob: -5.554093360900879

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9743012671824545e-05
    2. ' int' → logprob: -11.500020027160645
    3. '(int' → logprob: -12.000020027160645
    4. '[int' → logprob: -13.250020027160645
    5. 'map' → logprob: -14.000020027160645
    6. 'float' → logprob: -14.750020027160645
    7. ''int' → logprob: -16.125019073486328
    8. '   ' → logprob: -16.625019073486328
    9. '```' → logprob: -16.625019073486328
    10. ']int' → logprob: -17.000019073486328

Token 16: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08546404540538788
    2. '(nx' → logprob: -3.2104640007019043
    3. '(i' → logprob: -3.7104640007019043
    4. '(' → logprob: -4.210464000701904
    5. '(n' → logprob: -6.960464000701904
    6. '(item' → logprob: -7.335464000701904
    7. '(token' → logprob: -8.210464477539062
    8. '(_)' → logprob: -9.335464477539062
    9. '(s' → logprob: -9.585464477539062
    10. ']' → logprob: -10.085464477539062

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023512568441219628
    2. ')]' → logprob: -9.250235557556152
    3. '(nx' → logprob: -9.625235557556152
    4. '(x' → logprob: -10.250235557556152
    5. ' )' → logprob: -10.875235557556152
    6. '(n' → logprob: -12.125235557556152
    7. ')])' → logprob: -12.375235557556152
    8. ')x' → logprob: -13.125235557556152
    9. '())' → logprob: -13.500235557556152
    10. ')...' → logprob: -13.875235557556152

Token 18: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010034305974841118
    2. '(x' → logprob: -5.260034084320068
    3. ')]' → logprob: -5.510034084320068
    4. ']' → logprob: -8.385034561157227
    5. '(' → logprob: -8.510034561157227
    6. '(nx' → logprob: -8.510034561157227
    7. '(n' → logprob: -10.260034561157227
    8. ')])' → logprob: -10.510034561157227
    9. '),' → logprob: -11.510034561157227
    10. ')x' → logprob: -11.885034561157227

Token 19: ' x' (ID: 1215)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.0683889240026474
    2. 'nx' → logprob: -2.9433889389038086
    3. '(nx' → logprob: -4.443388938903809
    4. ' x' → logprob: -6.943388938903809
    5. 'x' → logprob: -7.318388938903809
    6. ' ' → logprob: -11.068388938903809
    7. '(x' → logprob: -11.318388938903809
    8. '_' → logprob: -14.068388938903809
    9. ' xn' → logprob: -14.818388938903809
    10. '  ' → logprob: -15.318388938903809

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33403533697128296
    2. 'in' → logprob: -1.4590353965759277
    3. ']' → logprob: -3.5840353965759277
    4. '(nx' → logprob: -4.584035396575928
    5. '[' → logprob: -5.334035396575928
    6. 'nx' → logprob: -5.959035396575928
    7. '[n' → logprob: -6.709035396575928
    8. ' ]' → logprob: -6.709035396575928
    9. 'x' → logprob: -6.834035396575928
    10. ' ' → logprob: -7.334035396575928

Token 21: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.16059210896492004
    2. ' nx' → logprob: -1.9105920791625977
    3. '(nx' → logprob: -7.910592079162598
    4. ' ' → logprob: -14.785592079162598
    5. 'n' → logprob: -15.910592079162598
    6. '[n' → logprob: -16.160593032836914
    7. 'x' → logprob: -16.410593032836914
    8. 'NX' → logprob: -16.410593032836914
    9. 'l' → logprob: -16.910593032836914
    10. 'range' → logprob: -17.160593032836914

Token 22: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003086486831307411
    2. ' ]' → logprob: -8.125308990478516
    3. ']
' → logprob: -11.500308990478516
    4. '']' → logprob: -15.000308990478516
    5. ')]' → logprob: -15.125308990478516
    6. ']

' → logprob: -15.500308990478516
    7. '])' → logprob: -15.500308990478516
    8. ')' → logprob: -15.625308990478516
    9. '`]' → logprob: -15.625308990478516
    10. '],' → logprob: -15.875308990478516

Token 23: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00015478975547011942
    2. ' l' → logprob: -9.250154495239258
    3. 'n' → logprob: -10.500154495239258
    4. 'lst' → logprob: -11.625154495239258
    5. 'a' → logprob: -12.500154495239258
    6. 'x' → logprob: -12.750154495239258
    7. 'm' → logprob: -12.875154495239258
    8. '```' → logprob: -13.125154495239258
    9. 'arr' → logprob: -13.750154495239258
    10. 'ls' → logprob: -13.875154495239258

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28324079513549805
    2. '=' → logprob: -1.408240795135498
    3. '<|end|>' → logprob: -6.533240795135498
    4. '[' → logprob: -8.033241271972656
    5. '=[' → logprob: -9.158241271972656
    6. ')' → logprob: -9.783241271972656
    7. '<|end|>' → logprob: -10.033241271972656
    8. '=[]' → logprob: -10.783241271972656
    9. '[:]' → logprob: -11.533241271972656
    10. '```' → logprob: -11.783241271972656

Token 25: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.475750207901001
    2. '[int' → logprob: -0.975750207901001
    3. '[' → logprob: -6.475749969482422
    4. '[input' → logprob: -9.350749969482422
    5. '[list' → logprob: -10.600749969482422
    6. '[i' → logprob: -12.350749969482422
    7. '[Int' → logprob: -12.725749969482422
    8. '[x' → logprob: -12.725749969482422
    9. ' ' → logprob: -12.975749969482422
    10. '[str' → logprob: -13.100749969482422

Token 26: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.522638169466518e-05
    2. ' int' → logprob: -10.625024795532227
    3. '(int' → logprob: -14.125024795532227
    4. '[int' → logprob: -16.500024795532227
    5. '<int' → logprob: -17.750024795532227
    6. '  ' → logprob: -18.000024795532227
    7. 'x' → logprob: -18.125024795532227
    8. 'str' → logprob: -18.125024795532227
    9. '   ' → logprob: -18.125024795532227
    10. ' ' → logprob: -18.250024795532227

Token 27: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003291480534244329
    2. '(' → logprob: -8.12532901763916
    3. '(l' → logprob: -10.50032901763916
    4. '(i' → logprob: -12.75032901763916
    5. ' (' → logprob: -13.25032901763916
    6. '(y' → logprob: -14.37532901763916
    7. '(s' → logprob: -15.75032901763916
    8. '(a' → logprob: -16.250329971313477
    9. '(v' → logprob: -18.750329971313477
    10. '(li' → logprob: -18.750329971313477

Token 28: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.017648903653025627
    2. 'x' → logprob: -4.142648696899414
    3. 'um' → logprob: -7.392648696899414
    4. ')' → logprob: -7.392648696899414
    5. 'umber' → logprob: -8.517648696899414
    6. ')x' → logprob: -9.267648696899414
    7. '(' → logprob: -10.517648696899414
    8. ' x' → logprob: -11.392648696899414
    9. '(i' → logprob: -11.517648696899414
    10. ' for' → logprob: -11.642648696899414

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.450848251581192
    2. 'for' → logprob: -1.2008482217788696
    3. ' in' → logprob: -3.075848340988159
    4. ')' → logprob: -4.32584810256958
    5. 'in' → logprob: -6.07584810256958
    6. '(n' → logprob: -8.575848579406738
    7. ']' → logprob: -10.700848579406738
    8. 'n' → logprob: -10.950848579406738
    9. '(x' → logprob: -11.200848579406738
    10. '	for' → logprob: -11.575848579406738

Token 30: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.576043963432312
    2. ' l' → logprob: -0.826043963432312
    3. 'n' → logprob: -9.701044082641602
    4. ' n' → logprob: -10.076044082641602
    5. '(n' → logprob: -14.701044082641602
    6. '	l' → logprob: -14.826044082641602
    7. ' ' → logprob: -15.701044082641602
    8. 'x' → logprob: -16.3260440826416
    9. ' ' → logprob: -16.3260440826416
    10. '(l' → logprob: -17.0760440826416

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12140924483537674
    2. 'l' → logprob: -3.1214091777801514
    3. ' l' → logprob: -3.1214091777801514
    4. '(n' → logprob: -4.1214094161987305
    5. 'in' → logprob: -4.9964094161987305
    6. '(l' → logprob: -6.1214094161987305
    7. '(' → logprob: -7.8714094161987305
    8. 'n' → logprob: -8.37140941619873
    9. ' (' → logprob: -8.99640941619873
    10. ' n' → logprob: -9.24640941619873

Token 32: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018150178715586662
    2. ' l' → logprob: -4.018150329589844
    3. '	l' → logprob: -16.518150329589844
    4. ' ' → logprob: -16.643150329589844
    5. 'x' → logprob: -18.018150329589844
    6. '(l' → logprob: -18.143150329589844
    7. '_l' → logprob: -18.643150329589844
    8. '```' → logprob: -18.768150329589844
    9. 'n' → logprob: -19.018150329589844
    10. 'lx' → logprob: -19.268150329589844

Token 33: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013117826310917735
    2. ')]' → logprob: -6.876311779022217
    3. '])' → logprob: -8.251312255859375
    4. ')' → logprob: -11.501312255859375
    5. '])]' → logprob: -12.751312255859375
    6. ']
' → logprob: -13.126312255859375
    7. '']' → logprob: -13.751312255859375
    8. ' ]' → logprob: -14.126312255859375
    9. '`]' → logprob: -14.251312255859375
    10. '()]' → logprob: -15.501312255859375

Token 34: 'buf' (ID: 13119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.455574631690979
    2. 'k' → logprob: -1.830574631690979
    3. 'm' → logprob: -1.955574631690979
    4. 'n' → logprob: -2.3305745124816895
    5. 'for' → logprob: -2.5805745124816895
    6. 'if' → logprob: -3.0805745124816895
    7. 'count' → logprob: -3.0805745124816895
    8. 'i' → logprob: -3.2055745124816895
    9. 'd' → logprob: -3.4555745124816895
    10. 'c' → logprob: -3.5805745124816895

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09856125712394714
    2. 'fer' → logprob: -3.4735612869262695
    3. '=' → logprob: -3.9735612869262695
    4. 'f' → logprob: -3.9735612869262695
    5. '[' → logprob: -4.5985612869262695
    6. '_' → logprob: -5.0985612869262695
    7. '=[]' → logprob: -5.9735612869262695
    8. '[:]' → logprob: -6.0985612869262695
    9. '.' → logprob: -7.0985612869262695
    10. ' ' → logprob: -7.2235612869262695

Token 36: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.29205015301704407
    2. '[]' → logprob: -1.4170501232147217
    3. ' ' → logprob: -5.792050361633301
    4. ' [' → logprob: -6.292050361633301
    5. '""' → logprob: -6.667050361633301
    6. '[' → logprob: -6.792050361633301
    7. ' ""' → logprob: -7.167050361633301
    8. '0' → logprob: -7.417050361633301
    9. ' l' → logprob: -7.542050361633301
    10. '"' → logprob: -8.1670503616333

Token 37: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.025548171252012253
    2. '""' → logprob: -4.525547981262207
    3. '[' → logprob: -5.150547981262207
    4. 'l' → logprob: -5.775547981262207
    5. '0' → logprob: -6.775547981262207
    6. '''' → logprob: -7.025547981262207
    7. 'list' → logprob: -7.150547981262207
    8. '[n' → logprob: -7.400547981262207
    9. '[]
' → logprob: -7.900547981262207
    10. '{}' → logprob: -7.900547981262207

Token 38: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13678045570850372
    2. ' for' → logprob: -2.1367805004119873
    3. '
' → logprob: -5.636780261993408
    4. '\n' → logprob: -5.761780261993408
    5. 'i' → logprob: -7.136780261993408
    6. 'n' → logprob: -7.136780261993408
    7. '' → logprob: -8.136780738830566
    8. ',' → logprob: -8.511780738830566
    9. ' ' → logprob: -8.511780738830566
    10. '\' → logprob: -9.011780738830566

Token 39: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005036763846874237
    2. 'i' → logprob: -6.0050368309021
    3. ' for' → logprob: -6.6300368309021
    4. 'n' → logprob: -7.1300368309021
    5. 'f' → logprob: -8.130036354064941
    6. '\n' → logprob: -10.630036354064941
    7. 'if' → logprob: -10.880036354064941
    8. 'r' → logprob: -11.005036354064941
    9. '' → logprob: -11.380036354064941
    10. 'd' → logprob: -11.630036354064941

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7496272325515747
    2. '=' → logprob: -1.2496272325515747
    3. ' =' → logprob: -1.8746272325515747
    4. '(' → logprob: -3.374627113342285
    5. ' ' → logprob: -3.624627113342285
    6. ' +=' → logprob: -3.999627113342285
    7. '+' → logprob: -6.374627113342285
    8. ')' → logprob: -6.749627113342285
    9. ',' → logprob: -6.999627113342285
    10. '+=' → logprob: -7.499627113342285

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519548535346985
    2. ' ' → logprob: -1.5019547939300537
    3. '1' → logprob: -10.626955032348633
    4. ' ' → logprob: -14.751955032348633
    5. ' buf' → logprob: -15.501955032348633
    6. '  ' → logprob: -16.126955032348633
    7. '2' → logprob: -16.251955032348633
    8. '32' → logprob: -16.251955032348633
    9. 'buf' → logprob: -16.501955032348633
    10. '<|end|>' → logprob: -16.626955032348633

Token 42: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015884159365668893
    2. ' ' → logprob: -6.626588344573975
    3. '1' → logprob: -8.376588821411133
    4. '-' → logprob: -12.001588821411133
    5. '[]' → logprob: -12.001588821411133
    6. 'len' → logprob: -12.251588821411133
    7. 'nx' → logprob: -12.876588821411133
    8. '(nx' → logprob: -13.939088821411133
    9. '[' → logprob: -14.064088821411133
    10. '(' → logprob: -14.126588821411133

Token 43: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05089941993355751
    2. ' for' → logprob: -3.0508995056152344
    3. '\n' → logprob: -7.050899505615234
    4. 'i' → logprob: -7.675899505615234
    5. '
' → logprob: -8.925899505615234
    6. '+' → logprob: -8.925899505615234
    7. ',' → logprob: -9.175899505615234
    8. ' ' → logprob: -9.300899505615234
    9. 'n' → logprob: -9.675899505615234
    10. '```' → logprob: -9.800899505615234

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006787192542105913
    2. ' for' → logprob: -7.500678539276123
    3. 'i' → logprob: -9.500679016113281
    4. 'n' → logprob: -11.250679016113281
    5. 'while' → logprob: -11.250679016113281
    6. 'if' → logprob: -12.375679016113281
    7. 'f' → logprob: -12.375679016113281
    8. '+' → logprob: -12.750679016113281
    9. ':' → logprob: -13.000679016113281
    10. ',' → logprob: -13.250679016113281

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.017723973840475082
    2. ' n' → logprob: -4.89272403717041
    3. ' ' → logprob: -5.51772403717041
    4. ' x' → logprob: -5.76772403717041
    5. ' _' → logprob: -6.14272403717041
    6. '_' → logprob: -8.39272403717041
    7. ' ' → logprob: -8.64272403717041
    8. 'i' → logprob: -8.76772403717041
    9. ' buf' → logprob: -9.39272403717041
    10. '  ' → logprob: -10.64272403717041

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02744222991168499
    2. 'in' → logprob: -3.777442216873169
    3. ' ' → logprob: -5.527442455291748
    4. '  ' → logprob: -9.15244197845459
    5. ')' → logprob: -10.90244197845459
    6. ' i' → logprob: -11.52744197845459
    7. ',' → logprob: -11.90244197845459
    8. ' ,' → logprob: -11.90244197845459
    9. ' )' → logprob: -12.27744197845459
    10. ' ' → logprob: -12.27744197845459

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03807121515274048
    2. 'range' → logprob: -3.2880711555480957
    3. ' l' → logprob: -11.288071632385254
    4. ' ' → logprob: -12.288071632385254
    5. ' nx' → logprob: -12.538071632385254
    6. ' xrange' → logprob: -13.038071632385254
    7. '(range' → logprob: -13.413071632385254
    8. 'nx' → logprob: -13.413071632385254
    9. '	range' → logprob: -13.788071632385254
    10. 'l' → logprob: -14.038071632385254

Token 48: '(nx' (ID: 189861)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021703951060771942
    2. '(len' → logprob: -4.021703720092773
    3. '(nx' → logprob: -5.896703720092773
    4. ' (' → logprob: -7.771703720092773
    5. '(buf' → logprob: -8.146703720092773
    6. '(n' → logprob: -9.521703720092773
    7. '(
' → logprob: -11.896703720092773
    8. '(length' → logprob: -12.646703720092773
    9. '(count' → logprob: -13.896703720092773
    10. '(size' → logprob: -14.646703720092773

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013643606507685035
    2. ')' → logprob: -9.500136375427246
    3. ' [' → logprob: -10.000136375427246
    4. '-' → logprob: -11.875136375427246
    5. ' ' → logprob: -12.375136375427246
    6. ' )' → logprob: -13.625136375427246
    7. ' -' → logprob: -14.000136375427246
    8. '1' → logprob: -14.250136375427246
    9. '):' → logprob: -14.500136375427246
    10. '0' → logprob: -15.000136375427246

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10729289054870605
    2. '1' → logprob: -2.357292890548706
    3. ' ' → logprob: -4.982293128967285
    4. '[' → logprob: -9.482293128967285
    5. ']' → logprob: -9.857293128967285
    6. '-' → logprob: -10.232293128967285
    7. '])' → logprob: -10.732293128967285
    8. '2' → logprob: -11.857293128967285
    9. ')' → logprob: -12.357293128967285
    10. ' -' → logprob: -13.732293128967285

Token 51: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.24600361287593842
    2. '):' → logprob: -2.6210036277770996
    3. ']:' → logprob: -2.7460036277770996
    4. '+' → logprob: -3.3710036277770996
    5. ']' → logprob: -3.9960036277770996
    6. '-' → logprob: -4.7460036277771
    7. ',' → logprob: -5.3710036277771
    8. ' ):' → logprob: -5.4960036277771
    9. ' -' → logprob: -5.8710036277771
    10. ']+' → logprob: -5.9960036277771

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030520254746079445
    2. ':' → logprob: -4.280520439147949
    3. ' if' → logprob: -4.530520439147949
    4. 'if' → logprob: -6.405520439147949
    5. ' for' → logprob: -6.905520439147949
    6. ' buf' → logprob: -7.405520439147949
    7. 'buf' → logprob: -7.655520439147949
    8. '  ' → logprob: -7.780520439147949
    9. '    ' → logprob: -8.15552043914795
    10. ' ' → logprob: -8.65552043914795

Token 53: ' buf' (ID: 13976)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10091698914766312
    2. 'for' → logprob: -3.100917100906372
    3. '   ' → logprob: -3.725917100906372
    4. ' if' → logprob: -4.350916862487793
    5. 'buf' (adapté à ' buf') → logprob: -4.600916862487793
    6. 'count' → logprob: -5.975916862487793
    7. ' for' → logprob: -7.225916862487793
    8. 'l' → logprob: -8.100916862487793
    9. ' ' → logprob: -9.475916862487793
    10. 'print' → logprob: -10.225916862487793

Token 54: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06524771451950073
    2. '+=' → logprob: -2.9402477741241455
    3. ' =' → logprob: -4.815247535705566
    4. '=' → logprob: -6.690247535705566
    5. '+' → logprob: -7.440247535705566
    6. ' -=' → logprob: -9.815247535705566
    7. ' +' → logprob: -10.065247535705566
    8. ' ' → logprob: -10.190247535705566
    9. ' ==' → logprob: -10.315247535705566
    10. ',' → logprob: -10.315247535705566

Token 55: ' buf' (ID: 13976)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05209803953766823
    2. 'buf' → logprob: -3.802098035812378
    3. 'max' → logprob: -4.177098274230957
    4. ' l' → logprob: -4.802098274230957
    5. 'i' → logprob: -6.552098274230957
    6. '0' → logprob: -7.177098274230957
    7. ' max' → logprob: -7.427098274230957
    8. 'abs' → logprob: -7.552098274230957
    9. 'nx' → logprob: -7.552098274230957
    10. ' buf' → logprob: -8.552098274230957

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1476326882839203
    2. ' +' → logprob: -2.022632598876953
    3. '+l' → logprob: -5.397632598876953
    4. '+i' → logprob: -8.397632598876953
    5. '+n' → logprob: -9.397632598876953
    6. '^' → logprob: -10.272632598876953
    7. ' ^' → logprob: -10.897632598876953
    8. '-' → logprob: -11.272632598876953
    9. '+
' → logprob: -12.272632598876953
    10. '|' → logprob: -12.397632598876953

Token 57: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002625119872391224
    2. ' l' → logprob: -6.002624988555908
    3. '1' → logprob: -9.377625465393066
    4. 'i' → logprob: -11.002625465393066
    5. 'int' → logprob: -11.252625465393066
    6. ' ' → logprob: -12.002625465393066
    7. '   ' → logprob: -12.252625465393066
    8. 'abs' → logprob: -12.377625465393066
    9. 'nx' → logprob: -12.752625465393066
    10. 'buf' → logprob: -13.127625465393066

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.026313764974474907
    2. '[' → logprob: -3.6513137817382812
    3. '\[' → logprob: -12.651313781738281
    4. '[x' → logprob: -13.901313781738281
    5. '[l' → logprob: -13.901313781738281
    6. '[count' → logprob: -14.026313781738281
    7. '[
' → logprob: -14.026313781738281
    8. '[I' → logprob: -14.151313781738281
    9. '[u' → logprob: -14.276313781738281
    10. '[n' → logprob: -14.651313781738281

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04294838383793831
    2. ')' → logprob: -3.2929484844207764
    3. ' ]' → logprob: -6.667948246002197
    4. '>' → logprob: -7.542948246002197
    5. '*' → logprob: -7.542948246002197
    6. ']>' → logprob: -7.542948246002197
    7. '])' → logprob: -7.792948246002197
    8. '<|end|>' → logprob: -8.042948722839355
    9. '+' → logprob: -8.167948722839355
    10. ' ' → logprob: -8.792948722839355

Token 60: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1937603950500488
    2. '
' → logprob: -1.4437603950500488
    3. '   ' → logprob: -1.5687603950500488
    4. ' ' → logprob: -2.068760395050049
    5. '<|end|>' → logprob: -3.068760395050049
    6. ' 
' → logprob: -4.068760395050049
    7. 'if' → logprob: -4.693760395050049
    8. '+' → logprob: -4.693760395050049
    9. '  
' → logprob: -4.818760395050049
    10. '  ' → logprob: -5.193760395050049

Token 61: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15149424970149994
    2. ' if' → logprob: -2.151494264602661
    3. '   ' → logprob: -3.776494264602661
    4. ' ' → logprob: -7.401494026184082
    5. 'print' → logprob: -8.151494026184082
    6. '  ' → logprob: -8.401494026184082
    7. '    ' → logprob: -9.651494026184082
    8. '>' → logprob: -9.651494026184082
    9. 'count' → logprob: -10.901494026184082
    10. 'for' → logprob: -11.276494026184082

Token 62: ' nx' (ID: 50118)
  Prédit: ' buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buf' → logprob: -0.014761913567781448
    2. 'buf' → logprob: -4.389761924743652
    3. '(buf' → logprob: -6.889761924743652
    4. ' l' → logprob: -7.264761924743652
    5. ' ' → logprob: -8.889761924743652
    6. ' ' → logprob: -9.264761924743652
    7. ' i' → logprob: -9.764761924743652
    8. '	buf' → logprob: -9.764761924743652
    9. '  ' → logprob: -10.014761924743652
    10. ' (' → logprob: -10.139761924743652

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. ' [' → logprob: -11.750020027160645
    3. '>' → logprob: -12.750020027160645
    4. '[i' → logprob: -13.375020027160645
    5. '```' → logprob: -13.500020027160645
    6. '[]' → logprob: -14.000020027160645
    7. ' ' → logprob: -14.250020027160645
    8. '[
' → logprob: -14.375020027160645
    9. ']' → logprob: -14.375020027160645
    10. '   ' → logprob: -14.687520027160645

Token 64: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326592564582825
    2. '1' → logprob: -0.7576592564582825
    3. '-' → logprob: -10.820158958435059
    4. ' ' → logprob: -11.507658958435059
    5. 'i' → logprob: -11.945158958435059
    6. ']' → logprob: -12.070158958435059
    7. '   ' → logprob: -13.070158958435059
    8. '[' → logprob: -13.132658958435059
    9. '```' → logprob: -13.445158958435059
    10. '2' → logprob: -13.820158958435059

Token 65: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6015105247497559
    2. '>' → logprob: -0.9765105247497559
    3. ' >=' → logprob: -3.101510524749756
    4. '>=' → logprob: -4.226510524749756
    5. ' <=' → logprob: -4.476510524749756
    6. ' ==' → logprob: -6.851510524749756
    7. '<=' → logprob: -6.851510524749756
    8. '==' → logprob: -6.976510524749756
    9. ' ' → logprob: -7.976510524749756
    10. ' <' → logprob: -8.476511001586914

Token 66: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5892680287361145
    2. '>=' → logprob: -1.4642679691314697
    3. ' <=' → logprob: -2.8392679691314697
    4. '>' → logprob: -3.3392679691314697
    5. ' >' → logprob: -3.3392679691314697
    6. ' <' → logprob: -3.3392679691314697
    7. '<' → logprob: -3.9642679691314697
    8. '<=' → logprob: -4.214268207550049
    9. ' ==' → logprob: -4.839268207550049
    10. '==' → logprob: -5.214268207550049

Token 67: ' buf' (ID: 13976)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.14330926537513733
    2. ' buf' → logprob: -2.0183093547821045
    3. ' l' → logprob: -8.143309593200684
    4. 'l' → logprob: -9.393309593200684
    5. ' ' → logprob: -9.518309593200684
    6. '   ' → logprob: -9.643309593200684
    7. '	buf' → logprob: -10.143309593200684
    8. '  ' → logprob: -11.018309593200684
    9. '(buf' → logprob: -11.018309593200684
    10. 'buff' → logprob: -11.143309593200684

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001244516926817596
    2. ' :' → logprob: -6.75124454498291
    3. ':
' → logprob: -9.75124454498291
    4. ' and' → logprob: -11.50124454498291
    5. '   ' → logprob: -13.12624454498291
    6. 'and' → logprob: -13.25124454498291
    7. ' :
' → logprob: -14.25124454498291
    8. ' ' → logprob: -14.87624454498291
    9. '.' → logprob: -15.50124454498291
    10. '  ' → logprob: -15.62624454498291

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032271042466163635
    2. 'count' → logprob: -3.907271146774292
    3. '   ' → logprob: -4.782270908355713
    4. ' count' → logprob: -5.782270908355713
    5. '	count' → logprob: -9.407271385192871
    6. '    ' → logprob: -10.532271385192871
    7. '      ' → logprob: -11.032271385192871
    8. ' ' → logprob: -11.157271385192871
    9. '     ' → logprob: -11.282271385192871
    10. ':' → logprob: -11.282271385192871

Token 70: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.06632239371538162
    2. ' count' → logprob: -2.9413223266601562
    3. '       ' → logprob: -4.566322326660156
    4. '   ' → logprob: -7.066322326660156
    5. '	count' → logprob: -9.566322326660156
    6. ' ' → logprob: -10.816322326660156
    7. 'print' → logprob: -11.941322326660156
    8. '    ' → logprob: -12.066322326660156
    9. '<count' → logprob: -12.191322326660156
    10. '$count' → logprob: -12.566322326660156

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20182065665721893
    2. '+=' → logprob: -1.7018206119537354
    3. ' =' → logprob: -8.451820373535156
    4. '=' → logprob: -8.576820373535156
    5. '+' → logprob: -12.326820373535156
    6. ' ' → logprob: -14.951820373535156
    7. ' +' → logprob: -14.951820373535156
    8. '+="' → logprob: -16.576820373535156
    9. ']+=' → logprob: -16.826820373535156
    10. '+='' → logprob: -16.826820373535156

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -16.255929946899414
    4. '0' → logprob: -16.255929946899414
    5. 'l' → logprob: -16.380929946899414
    6. ' ' → logprob: -17.630929946899414
    7. '+' → logprob: -17.818429946899414
    8. ' l' → logprob: -17.818429946899414
    9. '  ' → logprob: -17.880929946899414
    10. 'i' → logprob: -18.068429946899414

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. 'l' → logprob: -14.750011444091797
    4. '0' → logprob: -18.875011444091797
    5. '   ' → logprob: -19.625011444091797
    6. '１' → logprob: -20.250011444091797
    7. ' l' → logprob: -20.500011444091797
    8. 'i' → logprob: -20.562511444091797
    9. '2' → logprob: -20.625011444091797
    10. 'len' → logprob: -21.000011444091797

Token 74: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08080354332923889
    2. 'else' → logprob: -2.955803632736206
    3. ' else' → logprob: -4.330803394317627
    4. '<|end|>' → logprob: -4.580803394317627
    5. ' print' → logprob: -7.080803394317627
    6. '```' → logprob: -7.455803394317627
    7. ')' → logprob: -8.830803871154785
    8. ' ' → logprob: -8.955803871154785
    9. 'elif' → logprob: -8.955803871154785
    10. '#' → logprob: -9.455803871154785

Token 76: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00625226553529501
    2. '(count' → logprob: -5.631252288818359
    3. '()' → logprob: -6.131252288818359
    4. '("("' → logprob: -8.63125228881836
    5. '('' → logprob: -8.88125228881836
    6. '(buf' → logprob: -9.25625228881836
    7. '(len' → logprob: -10.13125228881836
    8. '(max' → logprob: -12.38125228881836
    9. '((' → logprob: -12.50625228881836
    10. '("' → logprob: -13.00625228881836

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.000000953674316
    3. ')`' → logprob: -17.5
    4. '))' → logprob: -17.75
    5. ')
' → logprob: -18.5
    6. '')' → logprob: -19.5
    7. '(' → logprob: -20.125
    8. '）' → logprob: -20.25
    9. ')}' → logprob: -20.75
    10. '`)' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 36.00%
Précision adaptée (1ère position): 38.67%
Précision (top 10): 76.00%
================================================================================
