================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def check_both_odd(a: int, b: int) -> str:
    """
    Vérifie si les deux entiers fournis sont impairs.

    Args:
        a (int): Le premier entier à vérifier.
        b (int): Le deuxième entier à vérifier.

    Returns:
        str: "Yes" si les deux nombres sont impairs, "No" sinon.
    """
    # Utilisation de l'opérateur modulo (%) pour déterminer l'impairité.
    # Un nombre est impair si la division par 2 donne un reste de 1.
    if a % 2 == 1 and b % 2 == 1:
        return "Yes"
    else:
        return "No"

if __name__ == "__main__":
    # Lecture de l'entrée utilisateur avec input(), séparée par des espaces.
    # map(int, ...) sert à convertir chaque élément en entier.
    a, b = map(int, input().split())

    # Appel de la fonction check_both_odd et affichage du résultat.
    print(check_both_odd(a, b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' check' (ID: 2371)
  → Token d'amorce (pas de prédiction)

Token 2: '_b' (ID: 1535)
  → Token d'amorce (pas de prédiction)

Token 3: 'oth' (ID: 1661)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6955585479736328
    2. '_' → logprob: -0.9455585479736328
    3. 'alance' → logprob: -3.320558547973633
    4. '_a' → logprob: -3.570558547973633
    5. 'al' → logprob: -4.320558547973633
    6. 'e' → logprob: -4.320558547973633
    7. 'r' → logprob: -4.945558547973633
    8. 'u' → logprob: -4.945558547973633
    9. 'o' → logprob: -6.320558547973633
    10. 'ase' → logprob: -6.945558547973633

Token 4: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19194957613945007
    2. '(' → logprob: -1.8169496059417725
    3. '```' → logprob: -5.566949367523193
    4. '(_' → logprob: -5.691949367523193
    5. '_b' → logprob: -6.566949367523193
    6. ' (' → logprob: -7.316949367523193
    7. '()' → logprob: -7.816949367523193
    8. 'def' → logprob: -8.691949844360352
    9. '('_' → logprob: -8.691949844360352
    10. ' _' → logprob: -8.816949844360352

Token 5: 'odd' (ID: 18303)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26058149337768555
    2. 'args' → logprob: -3.2605814933776855
    3. 'ends' → logprob: -3.5105814933776855
    4. 'conditions' → logprob: -3.7605814933776855
    5. 'inputs' → logprob: -3.8855814933776855
    6. 'numbers' → logprob: -4.0105814933776855
    7. 'empty' → logprob: -4.1355814933776855
    8. 'true' → logprob: -4.6355814933776855
    9. 'cases' → logprob: -5.1355814933776855
    10. 'strings' → logprob: -5.5105814933776855

Token 6: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018631666898727417
    2. '(:' → logprob: -4.768631458282471
    3. '():' → logprob: -4.893631458282471
    4. '(_' → logprob: -6.893631458282471
    5. '(_:' → logprob: -7.018631458282471
    6. '_' → logprob: -8.518631935119629
    7. '```' → logprob: -9.143631935119629
    8. '(a' → logprob: -9.768631935119629
    9. ':' → logprob: -9.768631935119629
    10. ' (' → logprob: -10.893631935119629

Token 7: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034948268439620733
    2. ',b' → logprob: -6.628494739532471
    3. '):' → logprob: -6.878494739532471
    4. ')' → logprob: -7.378494739532471
    5. ' ,' → logprob: -8.503495216369629
    6. 's' → logprob: -8.628495216369629
    7. '_,' → logprob: -9.628495216369629
    8. '_' → logprob: -10.503495216369629
    9. ',a' → logprob: -11.503495216369629
    10. ',s' → logprob: -12.503495216369629

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2332405000925064
    2. ' int' → logprob: -1.8582404851913452
    3. ',' → logprob: -3.7332406044006348
    4. ' ,' → logprob: -3.9832406044006348
    5. ')' → logprob: -5.483240604400635
    6. 'a' → logprob: -6.358240604400635
    7. ':int' → logprob: -7.108240604400635
    8. ' )' → logprob: -7.358240604400635
    9. ' ' → logprob: -7.483240604400635
    10. ',int' → logprob: -7.733240604400635

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040517066372558475
    2. ')' → logprob: -8.125405311584473
    3. ',b' → logprob: -9.625405311584473
    4. ' ,' → logprob: -10.500405311584473
    5. '):' → logprob: -12.625405311584473
    6. ',
' → logprob: -12.750405311584473
    7. '```' → logprob: -13.000405311584473
    8. '`,' → logprob: -13.250405311584473
    9. ',a' → logprob: -13.500405311584473
    10. ',

' → logprob: -14.000405311584473

Token 10: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04858884960412979
    2. 'b' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.423588752746582
    4. ' ' → logprob: -14.548588752746582
    5. ')' → logprob: -15.673588752746582
    6. '    ' → logprob: -16.5485897064209
    7. '   ' → logprob: -16.9235897064209
    8. ',b' → logprob: -17.2985897064209
    9. '	b' → logprob: -17.2985897064209
    10. ')b' → logprob: -17.2985897064209

Token 11: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08367258310317993
    2. '):' → logprob: -2.708672523498535
    3. ':' → logprob: -4.333672523498535
    4. '```' → logprob: -8.708672523498535
    5. '`)' → logprob: -9.458672523498535
    6. ',' → logprob: -9.458672523498535
    7. '):
' → logprob: -10.083672523498535
    8. ')>' → logprob: -10.583672523498535
    9. '>' → logprob: -11.083672523498535
    10. ' )' → logprob: -11.458672523498535

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47412458062171936
    2. 'int' → logprob: -0.974124550819397
    3. ':int' → logprob: -10.599124908447266
    4. ')' → logprob: -11.974124908447266
    5. '```' → logprob: -12.474124908447266
    6. '=int' → logprob: -12.724124908447266
    7. '<int' → logprob: -12.974124908447266
    8. '(int' → logprob: -13.349124908447266
    9. ' ' → logprob: -13.349124908447266
    10. ' ' → logprob: -13.724124908447266

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005972352810204029
    2. '):' → logprob: -8.00059700012207
    3. '`)' → logprob: -8.37559700012207
    4. '')' → logprob: -11.50059700012207
    5. ')->' → logprob: -11.62559700012207
    6. '")' → logprob: -12.75059700012207
    7. '):
' → logprob: -12.87559700012207
    8. '   ' → logprob: -13.00059700012207
    9. '```' → logprob: -13.12559700012207
    10. ':' → logprob: -14.00059700012207

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010361451422795653
    2. ':return' → logprob: -7.876036167144775
    3. '   ' → logprob: -8.501035690307617
    4. '):' → logprob: -8.751035690307617
    5. '():' → logprob: -9.001035690307617
    6. '':' → logprob: -9.751035690307617
    7. ':
' → logprob: -10.251035690307617
    8. '```' → logprob: -10.876035690307617
    9. '":' → logprob: -11.751035690307617
    10. '`:' → logprob: -12.126035690307617

Token 15: ' str' (ID: 989)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.010116913355886936
    2. 'bool' → logprob: -4.760117053985596
    3. ' int' → logprob: -6.760117053985596
    4. ' ' → logprob: -8.135116577148438
    5. 'int' → logprob: -10.260116577148438
    6. ' ' → logprob: -11.760116577148438
    7. '<bool' → logprob: -13.260116577148438
    8. ''' → logprob: -14.010116577148438
    9. '"' → logprob: -14.260116577148438
    10. '	bool' → logprob: -14.385116577148438

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005338943563401699
    2. '():' → logprob: -6.1303391456604
    3. '':' → logprob: -6.7553391456604
    4. '(:' → logprob: -7.3803391456604
    5. '":' → logprob: -7.5053391456604
    6. '):' → logprob: -8.880338668823242
    7. '(' → logprob: -9.005338668823242
    8. '(':' → logprob: -9.255338668823242
    9. '(":' → logprob: -9.380338668823242
    10. '":"' → logprob: -9.505338668823242

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03992271050810814
    2. ':' → logprob: -3.2899227142333984
    3. ''' → logprob: -7.664922714233398
    4. '```' → logprob: -7.914922714233398
    5. ' ' → logprob: -8.539922714233398
    6. '    ' → logprob: -8.789922714233398
    7. '"' → logprob: -8.914922714233398
    8. ':
' → logprob: -9.164922714233398
    9. '    
' → logprob: -9.164922714233398
    10. ' if' → logprob: -9.789922714233398

Token 18: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2511928975582123
    2. 'i' → logprob: -2.876192808151245
    3. 'if' → logprob: -3.001192808151245
    4. ' if' → logprob: -3.376192808151245
    5. 'return' → logprob: -3.876192808151245
    6. ' return' → logprob: -4.001193046569824
    7. '```' → logprob: -4.251193046569824
    8. ' i' → logprob: -4.751193046569824
    9. ''' → logprob: -4.876193046569824
    10. ' ' → logprob: -6.001193046569824

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043808016926050186
    2. '"""' → logprob: -3.4188079833984375
    3. 'Returns' → logprob: -6.0438079833984375
    4. 'r' → logprob: -6.0438079833984375
    5. ' ' → logprob: -6.7938079833984375
    6. 'Return' → logprob: -6.9188079833984375
    7. ' """' → logprob: -7.1688079833984375
    8. ''''' → logprob: -7.1688079833984375
    9. 'Check' → logprob: -8.043807983398438
    10. ' Returns' → logprob: -8.793807983398438

Token 20: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5844509601593018
    2. 'Returns' → logprob: -1.9594509601593018
    3. '"""' → logprob: -2.0844509601593018
    4. 'Check' → logprob: -2.5844509601593018
    5. 'Return' → logprob: -2.5844509601593018
    6. 'Checks' → logprob: -4.084450721740723
    7. ''''' → logprob: -5.459450721740723
    8. '```' → logprob: -6.709450721740723
    9. '"""
' → logprob: -7.584450721740723
    10. 'Determine' → logprob: -7.709450721740723

Token 21: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0029819828923791647
    2. 'ifi' → logprob: -6.502982139587402
    3. 'if' → logprob: -6.752982139587402
    4. 'i' → logprob: -8.752982139587402
    5. 'ifier' → logprob: -9.502982139587402
    6. 'ifié' → logprob: -10.377982139587402
    7. 'ifiez' → logprob: -10.502982139587402
    8. '   ' → logprob: -11.502982139587402
    9. 'ifies' → logprob: -12.127982139587402
    10. 'ify' → logprob: -13.627982139587402

Token 22: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.08119435608386993
    2. ' if' → logprob: -3.0811944007873535
    3. ' que' → logprob: -3.9561944007873535
    4. 'si' → logprob: -4.9561944007873535
    5. '   ' → logprob: -5.2061944007873535
    6. ' ' → logprob: -8.831193923950195
    7. 'que' → logprob: -9.081193923950195
    8. 's' → logprob: -9.706193923950195
    9. 'if' → logprob: -9.831193923950195
    10. '```' → logprob: -11.081193923950195

Token 23: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.43621525168418884
    2. ' both' → logprob: -1.8112152814865112
    3. 'a' → logprob: -2.4362151622772217
    4. ' a' → logprob: -2.4362151622772217
    5. 'les' → logprob: -4.561215400695801
    6. ' la' → logprob: -6.436215400695801
    7. 'both' → logprob: -6.436215400695801
    8. ' ' → logprob: -7.686215400695801
    9. ' le' → logprob: -8.4362154006958
    10. 'le' → logprob: -8.9362154006958

Token 24: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07234329730272293
    2. ' deux' → logprob: -2.822343349456787
    3. ' ' → logprob: -5.822343349456787
    4. '   ' → logprob: -5.947343349456787
    5. 'n' → logprob: -6.072343349456787
    6. ' nombres' → logprob: -6.947343349456787
    7. 'a' → logprob: -7.947343349456787
    8. 'nombre' → logprob: -8.197342872619629
    9. '```' → logprob: -8.447342872619629
    10. 'ent' → logprob: -9.509842872619629

Token 25: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05847212299704552
    2. 'n' → logprob: -3.058472156524658
    3. 'nombre' → logprob: -5.558472156524658
    4. ' nombre' → logprob: -6.558472156524658
    5. ' ent' → logprob: -6.683472156524658
    6. ' ' → logprob: -6.808472156524658
    7. '   ' → logprob: -7.058472156524658
    8. 'ent' → logprob: -7.683472156524658
    9. ' n' → logprob: -8.0584716796875
    10. 'a' → logprob: -9.0584716796875

Token 26: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.1316024363040924
    2. 'i' → logprob: -2.1316025257110596
    3. 'ier' → logprob: -6.5066022872924805
    4. '   ' → logprob: -7.0066022872924805
    5. ' i' → logprob: -7.2566022872924805
    6. 'ières' → logprob: -7.5066022872924805
    7. '```' → logprob: -7.8816022872924805
    8. 'ié' → logprob: -9.63160228729248
    9. '       ' → logprob: -9.75660228729248
    10. 'ri' → logprob: -9.75660228729248

Token 27: ' four' (ID: 4242)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.525197446346283
    2. 's' → logprob: -0.900197446346283
    3. ' ' → logprob: -6.775197505950928
    4. '   ' → logprob: -7.400197505950928
    5. 'son' → logprob: -10.15019702911377
    6. ' son' → logprob: -10.27519702911377
    7. ' s' → logprob: -10.27519702911377
    8. ' S' → logprob: -10.40019702911377
    9. '```' → logprob: -10.77519702911377
    10. 'd' → logprob: -11.02519702911377

Token 28: 'nis' (ID: 12113)
  Prédit: 'nis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nis' → logprob: -2.15310683415737e-05
    2. 'ni' → logprob: -11.750021934509277
    3. 'n' → logprob: -12.000021934509277
    4. 'nisse' → logprob: -12.750021934509277
    5. '   ' → logprob: -12.875021934509277
    6. 'nie' → logprob: -14.250021934509277
    7. '```' → logprob: -14.625021934509277
    8. 'nit' → logprob: -15.000021934509277
    9. '     ' → logprob: -15.750021934509277
    10. '</' → logprob: -16.50002098083496

Token 29: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.05437582731246948
    2. 's' → logprob: -3.0543758869171143
    3. ' ' → logprob: -5.679375648498535
    4. '   ' → logprob: -6.304375648498535
    5. ' s' → logprob: -8.929375648498535
    6. '```' → logprob: -9.429375648498535
    7. ' are' → logprob: -9.929375648498535
    8. ' )' → logprob: -10.429375648498535
    9. ' et' → logprob: -11.054375648498535
    10. '  ' → logprob: -11.179375648498535

Token 30: ' imp' (ID: 3282)
  Prédit: ' imp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' imp' → logprob: -0.2702862620353699
    2. 'imp' → logprob: -1.8952863216400146
    3. ' tous' → logprob: -3.1452863216400146
    4. ' des' → logprob: -4.0202860832214355
    5. 't' → logprob: -4.6452860832214355
    6. ' impair' → logprob: -5.3952860832214355
    7. ' ' → logprob: -5.6452860832214355
    8. 'im' → logprob: -6.3952860832214355
    9. '```' → logprob: -6.5202860832214355
    10. ' ' → logprob: -7.3327860832214355

Token 31: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0046258182264864445
    2. 'air' → logprob: -5.6296257972717285
    3. 'a' → logprob: -7.5046257972717285
    4. 'aires' → logprob: -8.754626274108887
    5. '   ' → logprob: -9.629626274108887
    6. 'aire' → logprob: -9.879626274108887
    7. 'pairs' → logprob: -10.379626274108887
    8. ' ' → logprob: -11.004626274108887
    9. 'ais' → logprob: -11.254626274108887
    10. 'are' → logprob: -11.379626274108887

Token 32: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06638642400503159
    2. '\n' → logprob: -3.6913864612579346
    3. '\' → logprob: -4.3163862228393555
    4. '.' → logprob: -4.4413862228393555
    5. '    
' → logprob: -5.6913862228393555
    6. '
' → logprob: -5.9413862228393555
    7. '```' → logprob: -6.6913862228393555
    8. '  ' → logprob: -6.9413862228393555
    9. '.
' → logprob: -7.4413862228393555
    10. '"""
' → logprob: -7.5663862228393555

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017541198758408427
    2. '    
' → logprob: -10.000175476074219
    3. '
' → logprob: -10.625175476074219
    4. '    ' → logprob: -10.750175476074219
    5. '"""' → logprob: -11.000175476074219
    6. '```' → logprob: -11.125175476074219
    7. ' ' → logprob: -11.250175476074219
    8. ' 
' → logprob: -11.625175476074219
    9. '       ' → logprob: -11.875175476074219
    10. ' """' → logprob: -11.875175476074219

Token 34: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008392847958020866
    2. '"""' → logprob: -8.125839233398438
    3. '```' → logprob: -9.000839233398438
    4. ' """' → logprob: -9.250839233398438
    5. ' if' → logprob: -9.250839233398438
    6. '    ' → logprob: -9.750839233398438
    7. 'if' → logprob: -9.875839233398438
    8. 'Returns' → logprob: -10.375839233398438
    9. ' """
' → logprob: -11.375839233398438
    10. ' return' → logprob: -11.625839233398438

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0345641374588013
    2. '   ' → logprob: -1.1595641374588013
    3. ',' → logprob: -2.4095640182495117
    4. ')' → logprob: -2.6595640182495117
    5. ' :' → logprob: -2.7845640182495117
    6. '):' → logprob: -3.0345640182495117
    7. 's' → logprob: -3.6595640182495117
    8. 'a' → logprob: -4.659564018249512
    9. ' ,' → logprob: -5.409564018249512
    10. ' ' → logprob: -5.534564018249512

Token 36: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13934431970119476
    2. ' a' → logprob: -2.6393442153930664
    3. '   ' → logprob: -2.8893442153930664
    4. '<|end|>' → logprob: -6.889344215393066
    5. '<|end|>' → logprob: -7.264344215393066
    6. ' ' → logprob: -7.514344215393066
    7. ')' → logprob: -8.139344215393066
    8. '  ' → logprob: -8.514344215393066
    9. '	a' → logprob: -9.389344215393066
    10. '       ' → logprob: -9.889344215393066

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -5.2166411478538066e-05
    2. '   ' → logprob: -10.000052452087402
    3. ' a' → logprob: -12.000052452087402
    4. '```' → logprob: -14.750052452087402
    5. '       ' → logprob: -15.625052452087402
    6. '  ' → logprob: -17.250051498413086
    7. ' ' → logprob: -17.500051498413086
    8. '`' → logprob: -17.625051498413086
    9. '	a' → logprob: -17.875051498413086
    10. '    
' → logprob: -19.000051498413086

Token 38: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4383926391601562
    2. ' :' → logprob: -1.5633926391601562
    3. ')' → logprob: -1.8133926391601562
    4. '   ' → logprob: -2.4383926391601562
    5. ' ' → logprob: -2.5633926391601562
    6. ' ,' → logprob: -2.8133926391601562
    7. ',' → logprob: -2.9383926391601562
    8. ' )' → logprob: -2.9383926391601562
    9. '    ' → logprob: -4.438392639160156
    10. '  ' → logprob: -4.813392639160156

Token 39: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007135047344490886
    2. ' int' → logprob: -7.250713348388672
    3. '   ' → logprob: -12.625713348388672
    4. '```' → logprob: -15.625713348388672
    5. '[int' → logprob: -17.000713348388672
    6. ':int' → logprob: -17.375713348388672
    7. ')' → logprob: -18.000713348388672
    8. '       ' → logprob: -18.250713348388672
    9. ' ' → logprob: -18.500713348388672
    10. '  ' → logprob: -18.500713348388672

Token 40: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23696807026863098
    2. '):' → logprob: -1.7369680404663086
    3. ',' → logprob: -3.6119680404663086
    4. ' )' → logprob: -5.861968040466309
    5. ' ):' → logprob: -5.986968040466309
    6. '   ' → logprob: -7.236968040466309
    7. '<|end|>' → logprob: -7.486968040466309
    8. '):
' → logprob: -7.486968040466309
    9. '),' → logprob: -7.986968040466309
    10. ' ' → logprob: -9.361968040466309

Token 41: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2396706342697144
    2. '<|end|>' → logprob: -1.8646706342697144
    3. ')' → logprob: -1.9896706342697144
    4. ' The' → logprob: -2.114670753479004
    5. ' Le' → logprob: -2.489670753479004
    6. ' int' → logprob: -3.489670753479004
    7. ' ' → logprob: -3.489670753479004
    8. ' a' → logprob: -3.989670753479004
    9. '    ' → logprob: -4.114670753479004
    10. '   ' → logprob: -4.239670753479004

Token 42: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.6415693163871765
    2. ' premier' → logprob: -0.7665693163871765
    3. ' nombre' → logprob: -5.516569137573242
    4. 'nombre' → logprob: -6.391569137573242
    5. '   ' → logprob: -6.766569137573242
    6. ' ' → logprob: -7.141569137573242
    7. ' first' → logprob: -7.641569137573242
    8. ' deuxième' → logprob: -9.266569137573242
    9. ' premi' → logprob: -9.266569137573242
    10. ' première' → logprob: -9.516569137573242

Token 43: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.45858287811279297
    2. ' ent' → logprob: -1.583582878112793
    3. 'ent' → logprob: -2.083582878112793
    4. ' ' → logprob: -4.458582878112793
    5. ' )' → logprob: -4.833582878112793
    6. ')' → logprob: -5.708582878112793
    7. ' nombre' → logprob: -5.833582878112793
    8. 'nombre' → logprob: -5.833582878112793
    9. ''ent' → logprob: -6.333582878112793
    10. 'élé' → logprob: -6.958582878112793

Token 44: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07096577435731888
    2. '   ' → logprob: -3.3209657669067383
    3. ',' → logprob: -4.070965766906738
    4. ' )' → logprob: -4.445965766906738
    5. '       ' → logprob: -7.570965766906738
    6. ' ,' → logprob: -7.695965766906738
    7. '),' → logprob: -7.820965766906738
    8. ')
' → logprob: -7.945965766906738
    9. '```' → logprob: -7.945965766906738
    10. '<|end|>' → logprob: -7.945965766906738

Token 45: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.29852572083473206
    2. 'v' → logprob: -1.4235256910324097
    3. ' tester' → logprob: -4.173525810241699
    4. 'tester' → logprob: -7.423525810241699
    5. ' checker' → logprob: -8.4235258102417
    6. ' v' → logprob: -8.5485258102417
    7. ' vér' → logprob: -8.7985258102417
    8. ' ' → logprob: -9.2985258102417
    9. 'checker' → logprob: -9.4235258102417
    10. ' examiner' → logprob: -9.4235258102417

Token 46: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09161041676998138
    2. '   ' → logprob: -2.7166104316711426
    3. ',' → logprob: -4.341610431671143
    4. '```' → logprob: -5.841610431671143
    5. ')
' → logprob: -6.466610431671143
    6. ' )' → logprob: -6.716610431671143
    7. '),' → logprob: -7.216610431671143
    8. ')\' → logprob: -8.216609954833984
    9. ' ' → logprob: -8.591609954833984
    10. '<|end|>' → logprob: -8.591609954833984

Token 47: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3627987504005432
    2. '       ' → logprob: -1.9877986907958984
    3. '```' → logprob: -2.8627986907958984
    4. '    ' → logprob: -3.2377986907958984
    5. ',' → logprob: -3.7377986907958984
    6. ')' → logprob: -3.7377986907958984
    7. ' ' → logprob: -5.362798690795898
    8. '    
' → logprob: -5.362798690795898
    9. ' 
' → logprob: -6.237798690795898
    10. ''' → logprob: -6.487798690795898

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.056062716990709305
    2. ' b' → logprob: -3.181062698364258
    3. '   ' → logprob: -4.681062698364258
    4. '       ' → logprob: -6.181062698364258
    5. '```' → logprob: -6.556062698364258
    6. '    ' → logprob: -8.931062698364258
    7. ' ' → logprob: -10.431062698364258
    8. 'a' → logprob: -11.556062698364258
    9. '     ' → logprob: -11.681062698364258
    10. '``' → logprob: -12.056062698364258

Token 49: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0034334040246903896
    2. ')' → logprob: -6.1284332275390625
    3. ':' → logprob: -7.5034332275390625
    4. '(int' → logprob: -7.8784332275390625
    5. '   ' → logprob: -9.003433227539062
    6. ' )' → logprob: -9.503433227539062
    7. ' :' → logprob: -10.003433227539062
    8. ':int' → logprob: -10.503433227539062
    9. '```' → logprob: -11.128433227539062
    10. ' ' → logprob: -11.378433227539062

Token 50: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006721178535372019
    2. ' int' → logprob: -5.006721019744873
    3. ')' → logprob: -13.256721496582031
    4. '[int' → logprob: -14.131721496582031
    5. '```' → logprob: -14.256721496582031
    6. ':int' → logprob: -14.381721496582031
    7. '<int' → logprob: -14.881721496582031
    8. '   ' → logprob: -15.006721496582031
    9. '=int' → logprob: -15.006721496582031
    10. ' ' → logprob: -15.381721496582031

Token 51: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3104231357574463
    2. ':' → logprob: -1.6854231357574463
    3. '):' → logprob: -2.9354231357574463
    4. 'int' → logprob: -4.560422897338867
    5. '[int' → logprob: -4.810422897338867
    6. ':int' → logprob: -5.310422897338867
    7. '(int' → logprob: -5.435422897338867
    8. '<int' → logprob: -8.810422897338867
    9. '   ' → logprob: -9.560422897338867
    10. ' int' → logprob: -9.685422897338867

Token 52: ' Le' (ID: 2018)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.051236413419246674
    2. 'int' → logprob: -3.051236391067505
    3. '(int' → logprob: -6.301236629486084
    4. '   ' → logprob: -7.801236629486084
    5. ' (' → logprob: -8.301236152648926
    6. '[int' → logprob: -10.051236152648926
    7. ' str' → logprob: -10.176236152648926
    8. '    ' → logprob: -11.551236152648926
    9. ' ' → logprob: -11.801236152648926
    10. '       ' → logprob: -11.801236152648926

Token 53: ' deuxième' (ID: 51664)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.11627992242574692
    2. ' deuxième' → logprob: -2.8662798404693604
    3. ' premier' → logprob: -3.3662798404693604
    4. 'second' → logprob: -4.9912800788879395
    5. 'de' → logprob: -5.3662800788879395
    6. 'prem' → logprob: -5.8662800788879395
    7. ' ' → logprob: -6.3662800788879395
    8. ' ' → logprob: -6.4912800788879395
    9. ' deux' → logprob: -8.366279602050781
    10. 's' → logprob: -8.366279602050781

Token 54: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.11015602946281433
    2. 'ent' → logprob: -3.3601560592651367
    3. ' ent' → logprob: -3.7351560592651367
    4. '   ' → logprob: -4.235156059265137
    5. 'int' → logprob: -4.485156059265137
    6. ' int' → logprob: -4.610156059265137
    7. ')' → logprob: -5.985156059265137
    8. ' (' → logprob: -6.110156059265137
    9. ' ' → logprob: -6.610156059265137
    10. '(ent' → logprob: -7.110156059265137

Token 55: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3951760232448578
    2. ')' → logprob: -1.7701760530471802
    3. '   ' → logprob: -2.0201759338378906
    4. ':' → logprob: -4.270175933837891
    5. ' à' → logprob: -5.520175933837891
    6. 'à' → logprob: -6.270175933837891
    7. '  ' → logprob: -7.270175933837891
    8. ' ):' → logprob: -7.270175933837891
    9. ' )' → logprob: -7.520175933837891
    10. ' ' → logprob: -7.645175933837891

Token 56: ' vérifier' (ID: 93671)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3528783917427063
    2. ' vérifier' → logprob: -1.2278783321380615
    3. 'int' → logprob: -5.477878570556641
    4. '```' → logprob: -9.22787857055664
    5. 'ver' → logprob: -9.85287857055664
    6. ' int' → logprob: -10.85287857055664
    7. ' v' → logprob: -10.97787857055664
    8. '   ' → logprob: -11.35287857055664
    9. 'checker' → logprob: -11.72787857055664
    10. ' verifier' → logprob: -11.85287857055664

Token 57: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6166960597038269
    2. '   ' → logprob: -0.8666960597038269
    3. '):' → logprob: -3.2416961193084717
    4. '):
' → logprob: -7.866695880889893
    5. '```' → logprob: -8.36669635772705
    6. ' )' → logprob: -10.11669635772705
    7. ':' → logprob: -10.36669635772705
    8. '"""' → logprob: -10.49169635772705
    9. ')
' → logprob: -10.49169635772705
    10. ' ' → logprob: -10.99169635772705

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006732303183525801
    2. '"""' → logprob: -5.38173246383667
    3. ')' → logprob: -6.75673246383667
    4. '"""
' → logprob: -7.63173246383667
    5. '    ' → logprob: -9.381731986999512
    6. '```' → logprob: -9.506731986999512
    7. ' """
' → logprob: -9.631731986999512
    8. ' """' → logprob: -10.006731986999512
    9. '
' → logprob: -10.131731986999512
    10. 'Returns' → logprob: -10.256731986999512

Token 59: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872772455215454
    2. 'Returns' (adapté à ' Returns') → logprob: -1.2622772455215454
    3. '"""
' → logprob: -3.637277126312256
    4. '"""' → logprob: -5.137277126312256
    5. ' Returns' → logprob: -5.887277126312256
    6. 'Return' → logprob: -6.762277126312256
    7. ' """
' → logprob: -7.012277126312256
    8. '```' → logprob: -8.012277603149414
    9. 'Retour' → logprob: -8.137277603149414
    10. '       ' → logprob: -10.012277603149414

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05745404213666916
    2. ' :' → logprob: -3.4324541091918945
    3. '   ' → logprob: -4.0574541091918945
    4. '"' → logprob: -6.6824541091918945
    5. ')' → logprob: -6.9324541091918945
    6. ''' → logprob: -6.9324541091918945
    7. '):' → logprob: -7.0574541091918945
    8. '":' → logprob: -7.3074541091918945
    9. '```' → logprob: -7.5574541091918945
    10. ':
' → logprob: -8.807454109191895

Token 61: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5720905065536499
    2. '   ' → logprob: -0.9470905065536499
    3. ''' → logprob: -3.8220906257629395
    4. '"' → logprob: -4.1970906257629395
    5. ' '' → logprob: -5.5720906257629395
    6. ' "' → logprob: -5.9470906257629395
    7. 'str' → logprob: -5.9470906257629395
    8. '       ' → logprob: -6.8220906257629395
    9. '    ' → logprob: -7.6970906257629395
    10. ' bool' → logprob: -9.072090148925781

Token 62: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.014510993845760822
    2. ' str' → logprob: -4.2645111083984375
    3. '   ' → logprob: -8.389511108398438
    4. 'bool' → logprob: -9.639511108398438
    5. '"' → logprob: -10.389511108398438
    6. 'True' → logprob: -12.139511108398438
    7. '[str' → logprob: -12.389511108398438
    8. 'return' → logprob: -12.514511108398438
    9. 's' → logprob: -12.764511108398438
    10. '"""' → logprob: -13.514511108398438

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03129652887582779
    2. '":' → logprob: -3.531296491622925
    3. '"' → logprob: -7.531296730041504
    4. '':' → logprob: -7.906296730041504
    5. ' :' → logprob: -8.156296730041504
    6. ':
' → logprob: -9.031296730041504
    7. '   ' → logprob: -9.281296730041504
    8. '":"' → logprob: -9.406296730041504
    9. '"""' → logprob: -11.406296730041504
    10. ' ":' → logprob: -11.531296730041504

Token 64: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6324719786643982
    2. ' "' → logprob: -1.257472038269043
    3. '   ' → logprob: -2.632472038269043
    4. ''' → logprob: -2.882472038269043
    5. ' '' → logprob: -3.007472038269043
    6. '    ' → logprob: -5.632472038269043
    7. 'True' → logprob: -8.007472038269043
    8. ' True' → logprob: -8.007472038269043
    9. '"""' → logprob: -8.007472038269043
    10. 'Un' → logprob: -8.382472038269043

Token 65: 'Yes' (ID: 13022)
  Prédit: 'Les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Les' → logprob: -0.5104532241821289
    2. 'Both' → logprob: -1.510453224182129
    3. 'Oui' → logprob: -2.010453224182129
    4. 'both' → logprob: -3.635453224182129
    5. 'oui' → logprob: -5.260453224182129
    6. 'True' → logprob: -5.385453224182129
    7. 'Im' → logprob: -6.010453224182129
    8. 'les' → logprob: -6.885453224182129
    9. 'Yes' → logprob: -7.010453224182129
    10. 'Tous' → logprob: -7.135453224182129

Token 66: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.1928003813372925e-05
    2. ',' → logprob: -10.125051498413086
    3. ' if' → logprob: -12.875051498413086
    4. '",' → logprob: -13.125051498413086
    5. '"""' → logprob: -13.125051498413086
    6. 'if' → logprob: -13.750051498413086
    7. ' si' → logprob: -13.750051498413086
    8. ' "' → logprob: -14.000051498413086
    9. '""' → logprob: -14.875051498413086
    10. ' ' → logprob: -14.875051498413086

Token 67: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35875633358955383
    2. '   ' → logprob: -2.1087563037872314
    3. '"' → logprob: -2.8587563037872314
    4. 'if' → logprob: -2.9837563037872314
    5. ' si' → logprob: -3.1087563037872314
    6. '"""' → logprob: -4.1087565422058105
    7. '```' → logprob: -5.1087565422058105
    8. '       ' → logprob: -6.7337565422058105
    9. 'si' → logprob: -7.1087565422058105
    10. 'Si' → logprob: -7.6087565422058105

Token 68: ' les' (ID: 1341)
  Prédit: ' both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.13307499885559082
    2. ' les' → logprob: -2.258074998855591
    3. ' a' → logprob: -5.383074760437012
    4. 'Both' → logprob: -5.633074760437012
    5. 'both' → logprob: -5.883074760437012
    6. ' ambos' → logprob: -6.008074760437012
    7. ' ' → logprob: -6.258074760437012
    8. ' beide' → logprob: -6.508074760437012
    9. '   ' → logprob: -7.008074760437012
    10. ' begge' → logprob: -7.633074760437012

Token 69: ' deux' (ID: 10301)
  Prédit: ' both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.2836541533470154
    2. ' deux' → logprob: -1.5336542129516602
    3. ' two' → logprob: -4.40865421295166
    4. ' a' → logprob: -5.15865421295166
    5. 'both' → logprob: -5.15865421295166
    6. ' beide' → logprob: -6.03365421295166
    7. 's' → logprob: -6.40865421295166
    8. ' sont' → logprob: -7.15865421295166
    9. 'a' → logprob: -7.28365421295166
    10. ' b' → logprob: -7.40865421295166

Token 70: ' nombres' (ID: 76205)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.6373109221458435
    2. ' a' → logprob: -1.1373109817504883
    3. 's' → logprob: -2.6373109817504883
    4. ' are' → logprob: -3.0123109817504883
    5. 'a' → logprob: -5.012310981750488
    6. ' tokens' → logprob: -5.012310981750488
    7. ' both' → logprob: -5.262310981750488
    8. ' ' → logprob: -6.387310981750488
    9. '<|end|>' → logprob: -6.512310981750488
    10. ' b' → logprob: -6.762310981750488

Token 71: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.31417784094810486
    2. 's' → logprob: -1.3141778707504272
    3. ' are' → logprob: -7.939177989959717
    4. '   ' → logprob: -8.814177513122559
    5. '<|end|>' → logprob: -9.689177513122559
    6. ' ' → logprob: -9.814177513122559
    7. 'son' → logprob: -10.064177513122559
    8. ' s' → logprob: -10.064177513122559
    9. ' S' → logprob: -10.689177513122559
    10. 'ont' → logprob: -10.689177513122559

Token 72: ' imp' (ID: 3282)
  Prédit: ' imp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' imp' → logprob: -0.049937546253204346
    2. 'imp' → logprob: -3.5499374866485596
    3. ' impair' → logprob: -4.424937725067139
    4. ' odd' → logprob: -5.299937725067139
    5. 'im' → logprob: -6.924937725067139
    6. ' impar' → logprob: -7.174937725067139
    7. 'odd' → logprob: -7.924937725067139
    8. ' odds' → logprob: -8.42493724822998
    9. ' pairs' → logprob: -9.11243724822998
    10. '```' → logprob: -9.42493724822998

Token 73: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.037309277802705765
    2. 'air' → logprob: -3.412309169769287
    3. 'ar' → logprob: -6.287309169769287
    4. 'orts' → logprob: -7.412309169769287
    5. 'aris' → logprob: -8.412309646606445
    6. 'r' → logprob: -8.787309646606445
    7. 'oss' → logprob: -9.037309646606445
    8. 'or' → logprob: -9.662309646606445
    9. 'ars' → logprob: -9.787309646606445
    10. 'os' → logprob: -9.787309646606445

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04564269632101059
    2. '",' → logprob: -3.295642614364624
    3. '   ' → logprob: -5.420642852783203
    4. '"' → logprob: -5.920642852783203
    5. ' ,' → logprob: -8.295642852783203
    6. '```' → logprob: -10.045642852783203
    7. '"",' → logprob: -10.420642852783203
    8. ' ",' → logprob: -10.420642852783203
    9. '.' → logprob: -10.795642852783203
    10. 's' → logprob: -10.795642852783203

Token 75: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.017181601375341415
    2. '   ' → logprob: -4.767181396484375
    3. ' sinon' → logprob: -5.892181396484375
    4. ' "' → logprob: -6.142181396484375
    5. ' else' → logprob: -6.142181396484375
    6. ' otherwise' → logprob: -7.517181396484375
    7. '       ' → logprob: -7.642181396484375
    8. '    ' → logprob: -8.767181396484375
    9. ' autrement' → logprob: -10.142181396484375
    10. '```' → logprob: -10.267181396484375

Token 76: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.000943980470765382
    2. ' No' → logprob: -7.500944137573242
    3. 'Non' → logprob: -8.750944137573242
    4. '"No' → logprob: -9.125944137573242
    5. 'N' → logprob: -10.000944137573242
    6. '"' → logprob: -10.125944137573242
    7. ' ' → logprob: -10.375944137573242
    8. '   ' → logprob: -12.750944137573242
    9. ' "' → logprob: -14.625944137573242
    10. '  ' → logprob: -14.625944137573242

Token 77: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.868328920158092e-05
    2. '```' → logprob: -10.750028610229492
    3. '"""' → logprob: -12.125028610229492
    4. '")' → logprob: -14.125028610229492
    5. '"
' → logprob: -15.875028610229492
    6. '"}' → logprob: -16.125028610229492
    7. 'Otherwise' → logprob: -16.125028610229492
    8. ' "' → logprob: -16.250028610229492
    9. 'otherwise' → logprob: -16.250028610229492
    10. '   ' → logprob: -16.375028610229492

Token 78: ' sinon' (ID: 52915)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06918461620807648
    2. '```' → logprob: -3.5691845417022705
    3. '"""
' → logprob: -4.06918478012085
    4. '"""' → logprob: -4.44418478012085
    5. '   ' → logprob: -5.94418478012085
    6. '"
' → logprob: -5.94418478012085
    7. '
' → logprob: -6.69418478012085
    8. ' else' → logprob: -7.19418478012085
    9. '""' → logprob: -8.194184303283691
    10. '.' → logprob: -8.319184303283691

Token 79: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09796956181526184
    2. '"' → logprob: -2.7229695320129395
    3. '"""' → logprob: -3.8479695320129395
    4. '"""
' → logprob: -5.5979695320129395
    5. '
' → logprob: -6.8479695320129395
    6. '```' → logprob: -7.3479695320129395
    7. '"
' → logprob: -8.097970008850098
    8. '""' → logprob: -8.222970008850098
    9. ')' → logprob: -9.097970008850098
    10. ' """' → logprob: -9.722970008850098

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004919685423374176
    2. '"""' → logprob: -5.879919528961182
    3. '
' → logprob: -6.504919528961182
    4. '    
' → logprob: -8.62992000579834
    5. '```' → logprob: -8.75492000579834
    6. '"' → logprob: -9.25492000579834
    7. '"""
' → logprob: -9.50492000579834
    8. ')' → logprob: -10.62992000579834
    9. '""' → logprob: -11.00492000579834
    10. '    ' → logprob: -11.50492000579834

Token 81: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017617980018258095
    2. '
' → logprob: -4.892618179321289
    3. '"""' → logprob: -5.017618179321289
    4. ')' → logprob: -7.392618179321289
    5. '    
' → logprob: -7.517618179321289
    6. '"' → logprob: -7.767618179321289
    7. '\n' → logprob: -7.892618179321289
    8. ' """' → logprob: -7.892618179321289
    9. '```' → logprob: -8.142618179321289
    10. ' 
' → logprob: -8.767618179321289

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.885492621222511e-05
    2. '    
' → logprob: -10.250068664550781
    3. '
' → logprob: -10.750068664550781
    4. '    ' → logprob: -12.125068664550781
    5. '```' → logprob: -12.750068664550781
    6. '  ' → logprob: -14.500068664550781
    7. '   ' → logprob: -14.500068664550781
    8. ' 
' → logprob: -14.750068664550781
    9. '   
' → logprob: -14.875068664550781
    10. '       ' → logprob: -15.000068664550781

Token 83: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17392733693122864
    2. 'i' → logprob: -2.4239273071289062
    3. 'if' → logprob: -2.9239273071289062
    4. 'r' → logprob: -4.673927307128906
    5. ' if' → logprob: -5.548927307128906
    6. ' i' → logprob: -6.173927307128906
    7. 'return' → logprob: -6.673927307128906
    8. ' ' → logprob: -8.548927307128906
    9. ' return' → logprob: -8.548927307128906
    10. '```' → logprob: -9.048927307128906

Token 84: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27646806836128235
    2. ' i' → logprob: -2.27646803855896
    3. ' if' → logprob: -2.40146803855896
    4. 'i' → logprob: -4.026468276977539
    5. 'if' → logprob: -4.776468276977539
    6. ' ' → logprob: -4.776468276977539
    7. ' a' → logprob: -5.901468276977539
    8. ' return' → logprob: -5.901468276977539
    9. '    ' → logprob: -6.026468276977539
    10. 'r' → logprob: -6.776468276977539

Token 85: 'isation' (ID: 6993)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.038829926401376724
    2. 'iser' → logprob: -3.913830041885376
    3. 'isez' → logprob: -4.413829803466797
    4. 'isation' → logprob: -6.413829803466797
    5. 'is' → logprob: -6.663829803466797
    6. 'ize' → logprob: -7.288829803466797
    7. 'e' → logprob: -7.288829803466797
    8. '   ' → logprob: -7.788829803466797
    9. 'er' → logprob: -7.788829803466797
    10. 'isé' → logprob: -8.663829803466797

Token 86: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32821884751319885
    2. ' de' → logprob: -1.7032188177108765
    3. '    ' → logprob: -3.703218936920166
    4. ' a' → logprob: -3.828218936920166
    5. ' if' → logprob: -3.953218936920166
    6. ' ' → logprob: -3.953218936920166
    7. ' d' → logprob: -5.703218936920166
    8. '  ' → logprob: -6.078218936920166
    9. ' (' → logprob: -6.078218936920166
    10. ' des' → logprob: -6.578218936920166

Token 87: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15786273777484894
    2. 'a' → logprob: -2.657862663269043
    3. ' (' → logprob: -3.657862663269043
    4. ' ' → logprob: -3.907862663269043
    5. ' l' → logprob: -4.407862663269043
    6. ' `' → logprob: -6.282862663269043
    7. ' la' → logprob: -6.407862663269043
    8. 'l' → logprob: -6.407862663269043
    9. 'if' → logprob: -6.532862663269043
    10. ' un' → logprob: -6.532862663269043

Token 88: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7272651791572571
    2. 'a' → logprob: -0.8522651791572571
    3. 'es' → logprob: -3.1022651195526123
    4. ''' → logprob: -3.6022651195526123
    5. ''op' → logprob: -4.977265357971191
    6. '%' → logprob: -6.477265357971191
    7. '`' → logprob: -6.602265357971191
    8. ''a' → logprob: -6.977265357971191
    9. ''é' → logprob: -6.977265357971191
    10. ''ex' → logprob: -7.602265357971191

Token 89: 'érateur' (ID: 108528)
  Prédit: 'ér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -0.8404466509819031
    2. 'érateur' → logprob: -1.4654467105865479
    3. 'é' → logprob: -1.8404467105865479
    4. 'ération' → logprob: -2.090446710586548
    5. 'er' → logprob: -3.715446710586548
    6. '%' → logprob: -4.840446472167969
    7. 'e' → logprob: -5.215446472167969
    8. 'èr' → logprob: -5.215446472167969
    9. 'érations' → logprob: -5.965446472167969
    10. 'éra' → logprob: -6.340446472167969

Token 90: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8362884521484375
    2. '%' → logprob: -1.4612884521484375
    3. 'if' → logprob: -2.2112884521484375
    4. ' if' → logprob: -2.5862884521484375
    5. ' ' → logprob: -2.8362884521484375
    6. '   ' → logprob: -3.4612884521484375
    7. ' `' → logprob: -3.8362884521484375
    8. '`' → logprob: -5.0862884521484375
    9. ' ```' → logprob: -5.3362884521484375
    10. '```' → logprob: -5.3362884521484375

Token 91: ' (%)' (ID: 165352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02514985203742981
    2. '    
' → logprob: -4.775149822235107
    3. ':' → logprob: -5.150149822235107
    4. '    ' → logprob: -5.775149822235107
    5. ' ' → logprob: -6.150149822235107
    6. ' 
' → logprob: -6.900149822235107
    7. '     
' → logprob: -7.150149822235107
    8. '   
' → logprob: -7.400149822235107
    9. ' :' → logprob: -7.775149822235107
    10. '```' → logprob: -8.275150299072266

Token 92: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1284240484237671
    2. '    
' → logprob: -2.7534241676330566
    3. '
' → logprob: -3.0034241676330566
    4. '   
' → logprob: -6.503424167633057
    5. ' 
' → logprob: -6.503424167633057
    6. '  
' → logprob: -6.628424167633057
    7. '\n' → logprob: -6.878424167633057
    8. ':' → logprob: -7.003424167633057
    9. '     
' → logprob: -9.003423690795898
    10. '```' → logprob: -9.253423690795898

Token 93: ' déterminer' (ID: 122024)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.017666583880782127
    2. ' check' → logprob: -4.642666816711426
    3. ' déterminer' → logprob: -6.267666816711426
    4. ' vér' → logprob: -6.642666816711426
    5. ' v' → logprob: -6.767666816711426
    6. 'v' → logprob: -6.892666816711426
    7. ' tester' → logprob: -7.142666816711426
    8. ' détect' → logprob: -7.892666816711426
    9. ' ' → logprob: -8.517666816711426
    10. ' verificar' → logprob: -8.642666816711426

Token 94: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1817529797554016
    2. ' si' → logprob: -1.9317529201507568
    3. ' ' → logprob: -4.431753158569336
    4. 'if' → logprob: -6.306753158569336
    5. 'i' → logprob: -6.556753158569336
    6. 'si' → logprob: -6.556753158569336
    7. '   ' → logprob: -7.056753158569336
    8. ' i' → logprob: -7.306753158569336
    9. 'u' → logprob: -7.431753158569336
    10. 's' → logprob: -7.806753158569336

Token 95: ''imp' (ID: 126880)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6467961668968201
    2. ''' → logprob: -0.8967961668968201
    3. 'a' → logprob: -3.271796226501465
    4. 'es' → logprob: -4.146796226501465
    5. ''e' → logprob: -5.021796226501465
    6. ''é' → logprob: -6.521796226501465
    7. '')' → logprob: -7.396796226501465
    8. ''espace' → logprob: -7.521796226501465
    9. ''état' → logprob: -7.521796226501465
    10. 'o' → logprob: -7.646796226501465

Token 96: 'air' (ID: 1517)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.624229907989502
    2. 'ar' → logprob: -1.749229907989502
    3. '%' → logprob: -1.874229907989502
    4. 'air' → logprob: -2.124229907989502
    5. ' ' → logprob: -2.499229907989502
    6. 'o' → logprob: -2.624229907989502
    7. 'r' → logprob: -2.999229907989502
    8. 'i' → logprob: -3.499229907989502
    9. 'e' → logprob: -3.999229907989502
    10. ')' → logprob: -4.374229907989502

Token 97: 'ité' (ID: 3761)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8446081876754761
    2. ':' → logprob: -1.219608187675476
    3. 'e' → logprob: -1.969608187675476
    4. '   ' → logprob: -2.8446083068847656
    5. ' :' → logprob: -3.2196083068847656
    6. 's' → logprob: -5.094608306884766
    7. ',' → logprob: -5.344608306884766
    8. 'u' → logprob: -5.594608306884766
    9. '  ' → logprob: -5.719608306884766
    10. ' 
' → logprob: -6.094608306884766

Token 98: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1282656341791153
    2. ':' → logprob: -2.378265619277954
    3. '    
' → logprob: -4.503265857696533
    4. '
' → logprob: -4.628265857696533
    5. ':
' → logprob: -6.503265857696533
    6. ',' → logprob: -6.878265857696533
    7. '   
' → logprob: -7.253265857696533
    8. ' :' → logprob: -7.378265857696533
    9. '  
' → logprob: -7.378265857696533
    10. '\n' → logprob: -7.878265857696533

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09870005398988724
    2. '    
' → logprob: -2.7237000465393066
    3. ' 
' → logprob: -4.223700046539307
    4. '
' → logprob: -4.473700046539307
    5. '   
' → logprob: -7.473700046539307
    6. '\n' → logprob: -7.598700046539307
    7. '     
' → logprob: -7.723700046539307
    8. '  
' → logprob: -8.348700523376465
    9. 'n' → logprob: -8.723700523376465
    10. '    ' → logprob: -8.723700523376465

Token 100: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05309572443366051
    2. 'if' → logprob: -3.928095817565918
    3. ' if' → logprob: -3.928095817565918
    4. ' i' → logprob: -5.303095817565918
    5. 'i' → logprob: -5.678095817565918
    6. 'r' → logprob: -6.553095817565918
    7. ' return' → logprob: -6.803095817565918
    8. 'return' → logprob: -7.178095817565918
    9. '    ' → logprob: -8.553095817565918
    10. '    
' → logprob: -8.678095817565918

Token 101: ' Un' (ID: 1367)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31823262572288513
    2. 'if' → logprob: -1.4432326555252075
    3. '   ' → logprob: -3.443232536315918
    4. ' return' → logprob: -6.193232536315918
    5. ' i' → logprob: -6.568232536315918
    6. 'return' → logprob: -7.443232536315918
    7. 'i' → logprob: -8.318232536315918
    8. ' ' → logprob: -10.068232536315918
    9. 'r' → logprob: -10.443232536315918
    10. '```' → logprob: -10.693232536315918

Token 102: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.766018807888031
    2. ' ' → logprob: -1.0160188674926758
    3. ' if' → logprob: -2.141018867492676
    4. 'if' → logprob: -3.766018867492676
    5. 'es' → logprob: -4.266018867492676
    6. ' e' → logprob: -5.141018867492676
    7. ' espace' → logprob: -5.766018867492676
    8. '   ' → logprob: -6.391018867492676
    9. ' return' → logprob: -6.641018867492676
    10. '    ' → logprob: -6.766018867492676

Token 103: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3393450975418091
    2. ' ' → logprob: -2.2143449783325195
    3. ' %' → logprob: -2.3393449783325195
    4. ' n' → logprob: -3.8393449783325195
    5. 'est' → logprob: -4.0893449783325195
    6. '%' → logprob: -4.3393449783325195
    7. 's' → logprob: -4.5893449783325195
    8. '   ' → logprob: -5.0893449783325195
    9. ' a' → logprob: -5.8393449783325195
    10. ' )' → logprob: -5.9643449783325195

Token 104: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.6530289053916931
    2. ' impair' → logprob: -0.9030289053916931
    3. ' imp' → logprob: -3.403028964996338
    4. 'im' → logprob: -3.778028964996338
    5. ' pair' → logprob: -5.278028964996338
    6. '```' → logprob: -5.403028964996338
    7. 'odd' → logprob: -6.653028964996338
    8. 'pair' → logprob: -7.028028964996338
    9. '_imp' → logprob: -7.028028964996338
    10. '

' → logprob: -7.278028964996338

Token 105: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4909570515155792
    2. ' ' → logprob: -1.6159570217132568
    3. ' si' → logprob: -1.9909570217132568
    4. '   ' → logprob: -3.615957021713257
    5. ' s' → logprob: -4.990957260131836
    6. ' i' → logprob: -5.365957260131836
    7. 'if' → logprob: -5.490957260131836
    8. 's' → logprob: -6.240957260131836
    9. '  ' → logprob: -6.365957260131836
    10. '

' → logprob: -6.865957260131836

Token 106: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6113483905792236
    2. ' a' → logprob: -1.7363483905792236
    3. ' number' → logprob: -1.7363483905792236
    4. 'n' → logprob: -3.4863483905792236
    5. ' (' → logprob: -3.6113483905792236
    6. ' nombre' → logprob: -4.1113481521606445
    7. ' num' → logprob: -4.9863481521606445
    8. ' ' → logprob: -5.2363481521606445
    9. ' le' → logprob: -5.6113481521606445
    10. ' x' → logprob: -6.1113481521606445

Token 107: ' division' (ID: 21629)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.635962188243866
    2. 'n' → logprob: -1.8859622478485107
    3. ' a' → logprob: -2.1359622478485107
    4. ' n' → logprob: -2.1359622478485107
    5. ' valeur' → logprob: -3.8859622478485107
    6. ' %' → logprob: -4.260962009429932
    7. '%' → logprob: -4.510962009429932
    8. ' r' → logprob: -5.135962009429932
    9. ' modulo' → logprob: -5.260962009429932
    10. 'a' → logprob: -5.260962009429932

Token 108: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1970247030258179
    2. ' ' → logprob: -1.4470247030258179
    3. ' %' → logprob: -1.9470247030258179
    4. '%' → logprob: -2.3220248222351074
    5. '  ' → logprob: -3.3220248222351074
    6. ')' → logprob: -3.5720248222351074
    7. '    ' → logprob: -3.6970248222351074
    8. ' du' → logprob: -3.6970248222351074
    9. ' de' → logprob: -4.197024822235107
    10. ' par' → logprob: -4.322024822235107

Token 109: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25199005007743835
    2. '2' → logprob: -1.5019900798797607
    3. ' ' → logprob: -11.12699031829834
    4. '  ' → logprob: -11.50199031829834
    5. '```' → logprob: -11.62699031829834
    6. 'de' → logprob: -11.75199031829834
    7. ' deux' → logprob: -12.25199031829834
    8. '<|end|>' → logprob: -12.50199031829834
    9. '   ' → logprob: -12.75199031829834
    10. ' ' → logprob: -13.37699031829834

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024801772087812424
    2. ' ' → logprob: -6.0024800300598145
    3. '```' → logprob: -13.127480506896973
    4. '   ' → logprob: -13.752480506896973
    5. '  ' → logprob: -14.252480506896973
    6. '1' → logprob: -16.252479553222656
    7. ' ' → logprob: -16.377479553222656
    8. ' deux' → logprob: -16.502479553222656
    9. '    ' → logprob: -16.689979553222656
    10. '`' → logprob: -16.814979553222656

Token 111: ' donne' (ID: 30004)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5577679872512817
    2. ' n' → logprob: -2.432767868041992
    3. ' a' → logprob: -2.432767868041992
    4. '%' → logprob: -3.057767868041992
    5. 'n' → logprob: -3.557767868041992
    6. ')' → logprob: -3.557767868041992
    7. ' ne' → logprob: -3.557767868041992
    8. '   ' → logprob: -3.682767868041992
    9. 'reste' → logprob: -3.932767868041992
    10. ' reste' → logprob: -4.182767868041992

Token 112: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06001432612538338
    2. 'un' → logprob: -3.185014247894287
    3. ' ' → logprob: -4.310014247894287
    4. ' remainder' → logprob: -6.435014247894287
    5. '1' → logprob: -7.685014247894287
    6. '   ' → logprob: -7.935014247894287
    7. 're' → logprob: -8.435014724731445
    8. ' une' → logprob: -8.810014724731445
    9. 'r' → logprob: -8.810014724731445
    10. '  ' → logprob: -9.810014724731445

Token 113: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.14755544066429138
    2. ' reste' → logprob: -2.647555351257324
    3. 'rest' → logprob: -2.897555351257324
    4. 'r' → logprob: -5.897555351257324
    5. ' remainder' → logprob: -5.897555351257324
    6. 'rés' → logprob: -6.397555351257324
    7. ' rest' → logprob: -6.647555351257324
    8. ' ' → logprob: -7.272555351257324
    9. ' résultat' → logprob: -8.022555351257324
    10. '1' → logprob: -8.022555351257324

Token 114: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0300084352493286
    2. '1' → logprob: -1.4050084352493286
    3. ' différent' → logprob: -1.4050084352493286
    4. ' different' → logprob: -2.280008316040039
    5. ' égal' → logprob: -4.030008316040039
    6. ' non' → logprob: -4.655008316040039
    7. '   ' → logprob: -5.030008316040039
    8. ' !=' → logprob: -5.280008316040039
    9. 'different' → logprob: -5.655008316040039
    10. 'diff' → logprob: -6.655008316040039

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326111555099487
    2. ' ' → logprob: -0.7576111555099487
    3. '0' → logprob: -13.132611274719238
    4. '```' → logprob: -13.132611274719238
    5. '

' → logprob: -14.070111274719238
    6. ' non' → logprob: -14.195111274719238
    7. ' ' → logprob: -14.320111274719238
    8. ' un' → logprob: -14.382611274719238
    9. '  ' → logprob: -14.882611274719238
    10. 'non' → logprob: -15.007611274719238

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023250321100931615
    2. ' ' → logprob: -8.375232696533203
    3. '0' → logprob: -13.250232696533203
    4. '```' → logprob: -16.375232696533203
    5. '!' → logprob: -16.812732696533203
    6. '' → logprob: -17.625232696533203
    7. 'un' → logprob: -17.750232696533203
    8. '  ' → logprob: -18.250232696533203
    9. 'non' → logprob: -18.437732696533203
    10. 'not' → logprob: -18.562732696533203

Token 117: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29340842366218567
    2. ':' → logprob: -1.9184083938598633
    3. '.' → logprob: -2.7934083938598633
    4. '
' → logprob: -4.293408393859863
    5. '    
' → logprob: -4.543408393859863
    6. ':
' → logprob: -4.918408393859863
    7. ',' → logprob: -5.293408393859863
    8. '.
' → logprob: -6.293408393859863
    9. ')' → logprob: -6.418408393859863
    10. '\' → logprob: -7.043408393859863

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019104309612885118
    2. '    
' → logprob: -6.626910209655762
    3. '
' → logprob: -8.126910209655762
    4. '    ' → logprob: -8.626910209655762
    5. ' 
' → logprob: -9.751910209655762
    6. '     
' → logprob: -11.376910209655762
    7. '   
' → logprob: -11.626910209655762
    8. ' ' → logprob: -12.126910209655762
    9. '  ' → logprob: -12.126910209655762
    10. '  
' → logprob: -12.251910209655762

Token 119: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012401100248098373
    2. '    
' → logprob: -8.001239776611328
    3. ' if' → logprob: -8.376239776611328
    4. '    ' → logprob: -8.751239776611328
    5. ' return' → logprob: -8.751239776611328
    6. ' 
' → logprob: -9.501239776611328
    7. 'r' → logprob: -9.501239776611328
    8. 'if' (adapté à ' if') → logprob: -9.626239776611328
    9. 'return' → logprob: -9.751239776611328
    10. ' ' → logprob: -10.751239776611328

Token 120: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07976632565259933
    2. ' (' → logprob: -2.579766273498535
    3. 'a' → logprob: -7.204766273498535
    4. ' ' → logprob: -9.079766273498535
    5. ' ' → logprob: -11.454766273498535
    6. '(a' → logprob: -11.954766273498535
    7. '(' → logprob: -13.829766273498535
    8. '	a' → logprob: -14.704766273498535
    9. '_a' → logprob: -16.07976722717285
    10. ' (
' → logprob: -16.20476722717285

Token 121: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.054942432790994644
    2. '%' → logprob: -2.9299423694610596
    3. ' ' → logprob: -10.17994213104248
    4. ' ' → logprob: -11.55494213104248
    5. ' %
' → logprob: -12.17994213104248
    6. '1' → logprob: -13.05494213104248
    7. '```' → logprob: -13.67994213104248
    8. 'space' → logprob: -14.42994213104248
    9. '2' → logprob: -14.55494213104248
    10. ' 

' → logprob: -14.55494213104248

Token 122: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12693136930465698
    2. '2' → logprob: -2.1269314289093018
    3. '<|end|>' → logprob: -13.251931190490723
    4. '1' → logprob: -14.751931190490723
    5. ' ' → logprob: -15.001931190490723
    6. '```' → logprob: -15.126931190490723
    7. '  ' → logprob: -15.501931190490723
    8. ')' → logprob: -16.31443214416504
    9. ' ```' → logprob: -16.62693214416504
    10. 's' → logprob: -16.75193214416504

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.750009536743164
    4. '<|end|>' → logprob: -17.625009536743164
    5. '1' → logprob: -18.000009536743164
    6. '

' → logprob: -18.375009536743164
    7. '  ' → logprob: -18.500009536743164
    8. '
' → logprob: -18.750009536743164
    9. '   ' → logprob: -18.875009536743164
    10. '۲' → logprob: -19.000009536743164

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20053169131278992
    2. '==' → logprob: -2.0755317211151123
    3. ' !=' → logprob: -3.5755317211151123
    4. ' and' → logprob: -4.325531482696533
    5. ' ' → logprob: -4.700531482696533
    6. 'and' → logprob: -5.575531482696533
    7. '!=' → logprob: -6.700531482696533
    8. '1' → logprob: -7.450531482696533
    9. '=' → logprob: -8.450531959533691
    10. ' =' → logprob: -10.450531959533691

Token 125: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1602296084165573
    2. '1' → logprob: -1.9102295637130737
    3. '<|end|>' → logprob: -12.535229682922363
    4. '0' → logprob: -14.035229682922363
    5. ' ' → logprob: -14.160229682922363
    6. '```' → logprob: -16.597728729248047
    7. ')' → logprob: -16.785228729248047
    8. '  ' → logprob: -16.910228729248047
    9. ' 
' → logprob: -17.347728729248047
    10. '[' → logprob: -17.660228729248047

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '0' → logprob: -17.375045776367188
    4. '<|end|>' → logprob: -17.625045776367188
    5. '```' → logprob: -17.875045776367188
    6. '

' → logprob: -19.125045776367188
    7. '  ' → logprob: -20.000045776367188
    8. '１' → logprob: -20.312545776367188
    9. '
' → logprob: -20.687545776367188
    10. 'and' → logprob: -20.750045776367188

Token 127: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017142124706879258
    2. 'and' → logprob: -6.37671422958374
    3. ' ' → logprob: -11.876713752746582
    4. ' a' → logprob: -13.376713752746582
    5. '   ' → logprob: -13.376713752746582
    6. '    ' → logprob: -13.501713752746582
    7. ' an' → logprob: -15.876713752746582
    8. ':' → logprob: -15.876713752746582
    9. ' и' → logprob: -16.0017147064209
    10. ' ' → logprob: -16.0017147064209

Token 128: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.00013762809976469725
    2. 'b' → logprob: -9.125137329101562
    3. ' ' → logprob: -10.625137329101562
    4. ' ' → logprob: -12.375137329101562
    5. '	b' → logprob: -16.250137329101562
    6. ' (' → logprob: -16.750137329101562
    7. ' ' → logprob: -17.750137329101562
    8. '  ' → logprob: -17.750137329101562
    9. ' a' → logprob: -17.875137329101562
    10. ' б' → logprob: -18.125137329101562

Token 129: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006072183605283499
    2. '%' → logprob: -5.131072044372559
    3. ' ' → logprob: -8.881072044372559
    4. '<|end|>' → logprob: -12.881072044372559
    5. ' ' → logprob: -14.756072044372559
    6. ')' → logprob: -15.256072044372559
    7. '`' → logprob: -15.381072044372559
    8. '  ' → logprob: -15.631072044372559
    9. ' %
' → logprob: -16.006072998046875
    10. '1' → logprob: -16.193572998046875

Token 130: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043084029108285904
    2. '2' → logprob: -3.168084144592285
    3. '<|end|>' → logprob: -9.418084144592285
    4. ' ' → logprob: -13.668084144592285
    5. '1' → logprob: -14.293084144592285
    6. '<|end|>' → logprob: -14.918084144592285
    7. '  ' → logprob: -15.105584144592285
    8. '```' → logprob: -15.543084144592285
    9. ')' → logprob: -15.855584144592285
    10. ' ```' → logprob: -16.16808319091797

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005587508203461766
    2. ' ' → logprob: -7.500558853149414
    3. '<|end|>' → logprob: -12.250558853149414
    4. '1' → logprob: -15.250558853149414
    5. '```' → logprob: -15.375558853149414
    6. '۲' → logprob: -16.313058853149414
    7. '  ' → logprob: -16.313058853149414
    8. '   ' → logprob: -17.125558853149414
    9. ')' → logprob: -17.188058853149414
    10. '`' → logprob: -17.375558853149414

Token 132: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18052475154399872
    2. '==' → logprob: -1.8055247068405151
    3. ' ' → logprob: -7.305524826049805
    4. '1' → logprob: -10.180524826049805
    5. '=' → logprob: -10.805524826049805
    6. '<|end|>' → logprob: -11.430524826049805
    7. ')' → logprob: -11.680524826049805
    8. ' =' → logprob: -11.805524826049805
    9. ')==' → logprob: -11.930524826049805
    10. ']==' → logprob: -12.180524826049805

Token 133: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132929801940918
    2. '1' → logprob: -1.3132929801940918
    3. '<|end|>' → logprob: -10.43829345703125
    4. '<|end|>' → logprob: -14.87579345703125
    5. ' ' → logprob: -15.00079345703125
    6. '0' → logprob: -15.31329345703125
    7. '  ' → logprob: -15.31329345703125
    8. '۱' → logprob: -16.50079345703125
    9. ')' → logprob: -16.56329345703125
    10. '```' → logprob: -16.75079345703125

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2603901015827432e-05
    2. ' ' → logprob: -10.750022888183594
    3. '<|end|>' → logprob: -13.875022888183594
    4. '0' → logprob: -17.375022888183594
    5. '```' → logprob: -17.500022888183594
    6. '  ' → logprob: -17.875022888183594
    7. '１' → logprob: -18.125022888183594
    8. '۱' → logprob: -18.250022888183594
    9. '   ' → logprob: -18.562522888183594
    10. '<|end|>' → logprob: -18.750022888183594

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019209683523513377
    2. ':
' → logprob: -8.625191688537598
    3. ' :' → logprob: -12.125191688537598
    4. '):' → logprob: -12.500191688537598
    5. ':return' → logprob: -12.750191688537598
    6. '   ' → logprob: -15.750191688537598
    7. ':**' → logprob: -16.875192642211914
    8. ')' → logprob: -16.875192642211914
    9. '():' → logprob: -17.500192642211914
    10. ' :
' → logprob: -17.750192642211914

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018063310533761978
    2. '   ' → logprob: -5.018063545227051
    3. '
' → logprob: -5.518063545227051
    4. '\n' → logprob: -6.268063545227051
    5. ':' → logprob: -6.518063545227051
    6. ' 
' → logprob: -6.893063545227051
    7. ' return' → logprob: -7.268063545227051
    8. ' ' → logprob: -7.268063545227051
    9. '\' → logprob: -8.26806354522705
    10. '        
' → logprob: -8.51806354522705

Token 137: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0977523997426033
    2. 'return' (adapté à ' return') → logprob: -2.472752332687378
    3. ' return' → logprob: -4.847752571105957
    4. '   ' → logprob: -7.597752571105957
    5. '
' → logprob: -8.847752571105957
    6. ' 
' → logprob: -9.222752571105957
    7. ' ' → logprob: -10.472752571105957
    8. '        
' → logprob: -10.472752571105957
    9. '      ' → logprob: -10.972752571105957
    10. '```' → logprob: -10.972752571105957

Token 138: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741334319114685
    2. ' "' → logprob: -0.9741334319114685
    3. ''' → logprob: -10.224133491516113
    4. ' ' → logprob: -11.474133491516113
    5. ' ' → logprob: -12.099133491516113
    6. ' '' → logprob: -12.724133491516113
    7. '"No' → logprob: -14.849133491516113
    8. '"I' → logprob: -15.849133491516113
    9. '`' → logprob: -16.349132537841797
    10. '  ' → logprob: -16.599132537841797

Token 139: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.141186450899113e-05
    2. 'Ye' → logprob: -11.250020980834961
    3. 'Y' → logprob: -11.750020980834961
    4. ' Yes' → logprob: -15.000020980834961
    5. 'No' → logprob: -16.75002098083496
    6. 'Yo' → logprob: -17.50002098083496
    7. 'YES' → logprob: -17.75002098083496
    8. 'Ys' → logprob: -17.87502098083496
    9. 'Yeah' → logprob: -18.50002098083496
    10. 'Oui' → logprob: -18.50002098083496

Token 140: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0001097417771234177
    2. '"
' → logprob: -9.125109672546387
    3. '"
' → logprob: -14.625109672546387
    4. '   ' → logprob: -16.375110626220703
    5. '"

' → logprob: -16.625110626220703
    6. ' "' → logprob: -18.000110626220703
    7. '"""' → logprob: -18.750110626220703
    8. '"\' → logprob: -18.875110626220703
    9. '"<?' → logprob: -19.375110626220703
    10. '"
/' → logprob: -19.625110626220703

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009881574660539627
    2. ' else' → logprob: -5.259881496429443
    3. 'else' → logprob: -6.509881496429443
    4. '
' → logprob: -6.509881496429443
    5. '    
' → logprob: -6.509881496429443
    6. ' 
' → logprob: -9.759881973266602
    7. '   
' → logprob: -9.884881973266602
    8. '  
' → logprob: -11.134881973266602
    9. '	else' → logprob: -11.384881973266602
    10. '  ' → logprob: -11.509881973266602

Token 142: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7185449600219727
    2. ' else' → logprob: -0.7185449600219727
    3. 'else' (adapté à ' else') → logprob: -3.7185449600219727
    4. '    
' → logprob: -7.718544960021973
    5. 'e' → logprob: -9.343544960021973
    6. '
' → logprob: -9.468544960021973
    7. ' ' → logprob: -9.843544960021973
    8. ' 
' → logprob: -9.968544960021973
    9. '	else' → logprob: -10.468544960021973
    10. '   
' → logprob: -10.718544960021973

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015260485233739018
    2. ':
' → logprob: -7.25152587890625
    3. ' :' → logprob: -7.75152587890625
    4. '   ' → logprob: -8.25152587890625
    5. ':return' → logprob: -9.75152587890625
    6. ' :
' → logprob: -10.87652587890625
    7. '       ' → logprob: -11.87652587890625
    8. ' ' → logprob: -11.87652587890625
    9. ' "' → logprob: -11.87652587890625
    10. ' return' → logprob: -11.87652587890625

Token 144: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04538801312446594
    2. '       ' → logprob: -3.2953879833221436
    3. ' "' → logprob: -5.545388221740723
    4. ' return' → logprob: -6.295388221740723
    5. '   ' → logprob: -6.795388221740723
    6. ''' → logprob: -8.920388221740723
    7. '    ' → logprob: -9.045388221740723
    8. 'return' → logprob: -9.045388221740723
    9. ' ' → logprob: -9.795388221740723
    10. '        ' → logprob: -12.045388221740723

Token 145: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004075078293681145
    2. 'return' (adapté à ' return') → logprob: -6.629075050354004
    3. ' "' → logprob: -6.629075050354004
    4. ' return' → logprob: -7.004075050354004
    5. '"No' → logprob: -7.754075050354004
    6. ''' → logprob: -10.004075050354004
    7. '   ' → logprob: -11.254075050354004
    8. '       ' → logprob: -11.379075050354004
    9. 'r' → logprob: -11.629075050354004
    10. ' ' → logprob: -12.879075050354004

Token 146: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0013489264529198408
    2. ' "' → logprob: -6.626348972320557
    3. ''' → logprob: -11.126348495483398
    4. '"No' → logprob: -12.751348495483398
    5. ' ' → logprob: -13.001348495483398
    6. ' ' → logprob: -13.876348495483398
    7. ')' → logprob: -14.001348495483398
    8. '"""' → logprob: -14.501348495483398
    9. '`' → logprob: -15.376348495483398
    10. '```' → logprob: -16.3138484954834

Token 147: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00012023169983876869
    2. '"No' → logprob: -9.125120162963867
    3. 'N' → logprob: -11.500120162963867
    4. '"' → logprob: -14.375120162963867
    5. ' No' → logprob: -14.625120162963867
    6. '"N' → logprob: -17.000120162963867
    7. 'NO' → logprob: -19.000120162963867
    8. '_No' → logprob: -19.250120162963867
    9. 'Nos' → logprob: -19.500120162963867
    10. '@No' → logprob: -19.625120162963867

Token 148: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.5107177862082608e-05
    2. '"
' → logprob: -10.625024795532227
    3. '```' → logprob: -15.250024795532227
    4. ' "' → logprob: -15.750024795532227
    5. '"""' → logprob: -15.875024795532227
    6. '"

' → logprob: -16.000024795532227
    7. ''' → logprob: -16.875024795532227
    8. '"`' → logprob: -17.000024795532227
    9. ''"' → logprob: -17.375024795532227
    10. '"}' → logprob: -17.750024795532227

Token 149: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3122273087501526
    2. ' __' → logprob: -1.4372272491455078
    3. '_' → logprob: -3.937227249145508
    4. ' ' → logprob: -5.062227249145508
    5. ' a' → logprob: -6.562227249145508
    6. '__' → logprob: -6.812227249145508
    7. ' _' → logprob: -7.187227249145508
    8. ' ‌' → logprob: -8.187227249145508
    9. '  ' → logprob: -8.312227249145508
    10. 'a' → logprob: -8.437227249145508

Token 151: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03881467506289482
    2. ' __' → logprob: -3.5388147830963135
    3. '.' → logprob: -5.913814544677734
    4. '.__' → logprob: -6.038814544677734
    5. '<|end|>' → logprob: -6.288814544677734
    6. ' ==' → logprob: -7.788814544677734
    7. '_' → logprob: -7.913814544677734
    8. ' ' → logprob: -8.163814544677734
    9. ' .' → logprob: -8.288814544677734
    10. '<|end|>' → logprob: -8.913814544677734

Token 152: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -13.250006675720215
    3. ' __' → logprob: -13.250006675720215
    4. ' ==' → logprob: -13.875006675720215
    5. '==' → logprob: -14.125006675720215
    6. '__
' → logprob: -14.625006675720215
    7. '__.__' → logprob: -14.875006675720215
    8. '____' → logprob: -15.875006675720215
    9. '__

' → logprob: -15.875006675720215
    10. '___' → logprob: -16.12500762939453

Token 153: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13497652113437653
    2. ' ==' → logprob: -2.134976625442505
    3. '==' → logprob: -5.009976387023926
    4. '=="' → logprob: -7.509976387023926
    5. '_' → logprob: -7.634976387023926
    6. '"' → logprob: -9.009976387023926
    7. ' __' → logprob: -9.259976387023926
    8. '___' → logprob: -9.759976387023926
    9. ' "__' → logprob: -11.634976387023926
    10. ' =' → logprob: -12.009976387023926

Token 154: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002653655596077442
    2. ''' → logprob: -6.5026535987854
    3. ' "__' → logprob: -7.1276535987854
    4. '__' → logprob: -8.002654075622559
    5. '"name' → logprob: -12.127654075622559
    6. '"user' → logprob: -13.002654075622559
    7. '"_' → logprob: -13.127654075622559
    8. ' "' → logprob: -13.627654075622559
    9. '_' → logprob: -13.877654075622559
    10. ' '__' → logprob: -14.627654075622559

Token 155: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.061054359131958e-06
    2. 'name' → logprob: -11.750007629394531
    3. 'ma' → logprob: -16.75000762939453
    4. ' main' → logprob: -17.00000762939453
    5. '"' → logprob: -17.50000762939453
    6. 'm' → logprob: -18.75000762939453
    7. '_main' → logprob: -18.87500762939453
    8. 'mai' → logprob: -18.87500762939453
    9. 'maine' → logprob: -19.62500762939453
    10. '	main' → logprob: -20.12500762939453

Token 156: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0067248414270579815
    2. '__":
' → logprob: -5.006724834442139
    3. '_"' → logprob: -12.631725311279297
    4. '_' → logprob: -12.631725311279297
    5. '"' → logprob: -12.881725311279297
    6. '__["' → logprob: -16.506725311279297
    7. ' __' → logprob: -16.756725311279297
    8. '__:' → logprob: -16.756725311279297
    9. '__("' → logprob: -16.881725311279297
    10. '__",' → logprob: -17.006725311279297

Token 157: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14258718490600586
    2. '   ' → logprob: -2.767587184906006
    3. ':
' → logprob: -3.767587184906006
    4. '\' → logprob: -4.642587184906006
    5. ' ' → logprob: -4.892587184906006
    6. '<|end|>' → logprob: -4.892587184906006
    7. ')' → logprob: -5.142587184906006
    8. ' :' → logprob: -5.142587184906006
    9. ' 
' → logprob: -6.017587184906006
    10. ' :
' → logprob: -6.392587184906006

Token 158: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6942716240882874
    2. ' a' → logprob: -0.6942716240882874
    3. 'n' → logprob: -7.694271564483643
    4. ' 
' → logprob: -8.5692720413208
    5. ' n' → logprob: -8.9442720413208
    6. ' import' → logprob: -9.8192720413208
    7. 'i' → logprob: -9.8192720413208
    8. 'x' → logprob: -10.4442720413208
    9. '   ' → logprob: -10.5692720413208
    10. ' ' → logprob: -10.5692720413208

Token 159: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01529984176158905
    2. ' a' → logprob: -4.2652997970581055
    3. '#' → logprob: -8.015299797058105
    4. 'n' → logprob: -8.390299797058105
    5. 'print' → logprob: -8.890299797058105
    6. ' test' → logprob: -9.890299797058105
    7. 'test' → logprob: -9.890299797058105
    8. ' #' → logprob: -10.015299797058105
    9. 'for' → logprob: -10.015299797058105
    10. 'x' → logprob: -10.140299797058105

Token 160: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7151721119880676
    2. '()' → logprob: -1.0901720523834229
    3. '   ' → logprob: -2.715172052383423
    4. '_' → logprob: -3.465172052383423
    5. ' ' → logprob: -3.590172052383423
    6. 'a' → logprob: -4.590172290802002
    7. ',' → logprob: -4.965172290802002
    8. ' =' → logprob: -5.340172290802002
    9. ' (' → logprob: -5.590172290802002
    10. ':' → logprob: -5.590172290802002

Token 161: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7785941958427429
    2. ' a' → logprob: -1.4035942554473877
    3. 'a' → logprob: -2.5285942554473877
    4. ' ' → logprob: -2.6535942554473877
    5. ' deux' → logprob: -2.6535942554473877
    6. ' two' → logprob: -3.5285942554473877
    7. 'l' → logprob: -4.528594017028809
    8. ' int' → logprob: -4.528594017028809
    9. 's' → logprob: -5.028594017028809
    10. ' la' → logprob: -5.528594017028809

Token 162: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6326981782913208
    2. 'e' → logprob: -0.8826981782913208
    3. 'es' → logprob: -3.3826980590820312
    4. 'put' → logprob: -4.257698059082031
    5. ''entrée' → logprob: -6.507698059082031
    6. 'input' → logprob: -6.757698059082031
    7. '   ' → logprob: -7.132698059082031
    8. ' input' → logprob: -7.257698059082031
    9. ' a' → logprob: -7.632698059082031
    10. ' '' → logprob: -7.882698059082031

Token 163: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2470529079437256
    2. ',' → logprob: -1.3720529079437256
    3. 'a' → logprob: -1.4970529079437256
    4. 's' → logprob: -3.1220529079437256
    5. '   ' → logprob: -3.1220529079437256
    6. ' a' → logprob: -3.1220529079437256
    7. ' =' → logprob: -3.7470529079437256
    8. ':' → logprob: -4.372053146362305
    9. '_a' → logprob: -4.372053146362305
    10. ' ' → logprob: -5.247053146362305

Token 164: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0475674867630005
    2. ',' → logprob: -1.1725674867630005
    3. 'a' → logprob: -1.6725674867630005
    4. ':' → logprob: -2.047567367553711
    5. ' a' → logprob: -5.547567367553711
    6. ')' → logprob: -5.672567367553711
    7. ' =' → logprob: -5.797567367553711
    8. 's' → logprob: -6.297567367553711
    9. 'n' → logprob: -6.297567367553711
    10. ' ,' → logprob: -6.797567367553711

Token 165: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.030647089704871178
    2. 'input' → logprob: -3.530647039413452
    3. ' ' → logprob: -7.405647277832031
    4. ' ' → logprob: -9.030647277832031
    5. '=input' → logprob: -10.030647277832031
    6. ' la' → logprob: -10.405647277832031
    7. ' deux' → logprob: -10.655647277832031
    8. '	input' → logprob: -11.530647277832031
    9. ' espace' → logprob: -11.780647277832031
    10. ' l' → logprob: -12.155647277832031

Token 166: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019056665478274226
    2. '(' → logprob: -7.00190544128418
    3. '().' → logprob: -8.25190544128418
    4. '()
' → logprob: -8.25190544128418
    5. 's' → logprob: -8.62690544128418
    6. '(
' → logprob: -9.12690544128418
    7. ',' → logprob: -10.12690544128418
    8. '("' → logprob: -10.50190544128418
    9. '("")' → logprob: -10.75190544128418
    10. 'a' → logprob: -11.50190544128418

Token 167: ' sépar' (ID: 97160)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0432381629943848
    2. 'a' → logprob: -1.4182381629943848
    3. ' ' → logprob: -2.1682381629943848
    4. ' deux' → logprob: -2.6682381629943848
    5. ' separated' → logprob: -3.1682381629943848
    6. 's' → logprob: -3.4182381629943848
    7. ' sépar' → logprob: -3.7932381629943848
    8. 'split' → logprob: -3.7932381629943848
    9. ' split' → logprob: -4.168238162994385
    10. ' ' → logprob: -4.668238162994385

Token 168: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7994502782821655
    2. 'ée' → logprob: -0.7994502782821655
    3. 'és' → logprob: -3.674450397491455
    4. 'er' → logprob: -3.924450397491455
    5. 'e' → logprob: -4.049450397491455
    6. 'ées' → logprob: -4.049450397491455
    7. '()' → logprob: -4.674450397491455
    8. 'par' → logprob: -5.674450397491455
    9. 'eur' → logprob: -6.549450397491455
    10. 'ateur' → logprob: -6.674450397491455

Token 169: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05934469401836395
    2. ' par' → logprob: -2.93434476852417
    3. 'par' → logprob: -5.68434476852417
    4. '(' → logprob: -7.93434476852417
    5. ' ()' → logprob: -9.559344291687012
    6. '_par' → logprob: -9.559344291687012
    7. 's' → logprob: -9.684344291687012
    8. ',' → logprob: -9.809344291687012
    9. ' ' → logprob: -9.809344291687012
    10. '('' → logprob: -9.934344291687012

Token 170: ' des' (ID: 731)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.1613433361053467
    2. ''' → logprob: -1.9113433361053467
    3. ''espace' → logprob: -2.0363433361053467
    4. 'un' → logprob: -2.5363433361053467
    5. '"' → logprob: -2.5363433361053467
    6. ' ' → logprob: -2.7863433361053467
    7. ' un' → logprob: -2.9113433361053467
    8. ''un' → logprob: -3.1613433361053467
    9. ' espace' → logprob: -3.9113433361053467
    10. '<|end|>' → logprob: -4.411343574523926

Token 171: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.05686117708683014
    2. 'esp' → logprob: -3.431861162185669
    3. 'es' → logprob: -4.056861400604248
    4. ' espace' → logprob: -6.306861400604248
    5. 'space' → logprob: -6.681861400604248
    6. 'spaces' → logprob: -6.931861400604248
    7. ' ' → logprob: -7.556861400604248
    8. ''espace' → logprob: -7.556861400604248
    9. ''esp' → logprob: -8.18186092376709
    10. ' espacios' → logprob: -9.55686092376709

Token 172: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13434794545173645
    2. '.' → logprob: -3.509347915649414
    3. ':' → logprob: -4.009347915649414
    4. ')' → logprob: -4.009347915649414
    5. ' =' → logprob: -4.009347915649414
    6. '   ' → logprob: -4.259347915649414
    7. 's' → logprob: -4.634347915649414
    8. 'a' → logprob: -5.009347915649414
    9. '()' → logprob: -5.509347915649414
    10. '=' → logprob: -6.134347915649414

Token 173: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05381342023611069
    2. ' a' → logprob: -3.0538134574890137
    3. 'n' → logprob: -6.678813457489014
    4. 'i' → logprob: -6.803813457489014
    5. '   ' → logprob: -7.053813457489014
    6. 'x' → logprob: -7.053813457489014
    7. ' 
' → logprob: -8.428812980651855
    8. 's' → logprob: -8.428812980651855
    9. ' ' → logprob: -8.678812980651855
    10. '    
' → logprob: -9.553812980651855

Token 174: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002636183984577656
    2. ' a' → logprob: -6.252635955810547
    3. 'inputs' → logprob: -7.877635955810547
    4. 'values' → logprob: -9.127635955810547
    5. 'user' → logprob: -9.627635955810547
    6. 'numbers' → logprob: -10.002635955810547
    7. 'input' → logprob: -10.627635955810547
    8. ' values' → logprob: -11.002635955810547
    9. ' inputs' → logprob: -11.502635955810547
    10. 'x' → logprob: -11.627635955810547

Token 175: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06169794872403145
    2. 'values' → logprob: -3.6866979598999023
    3. 'inputs' → logprob: -4.311697959899902
    4. 'numbers' → logprob: -4.811697959899902
    5. 'user' → logprob: -5.436697959899902
    6. 'nums' → logprob: -5.436697959899902
    7. 'input' → logprob: -6.686697959899902
    8. ' a' → logprob: -6.936697959899902
    9. ' values' → logprob: -7.436697959899902
    10. 'ent' → logprob: -8.186697959899902

Token 176: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.032161276787519455
    2. '(' → logprob: -3.532161235809326
    3. '(lambda' → logprob: -6.782161235809326
    4. '(str' → logprob: -7.407161235809326
    5. '=int' → logprob: -8.657161712646484
    6. 'int' → logprob: -8.657161712646484
    7. '<int' → logprob: -9.157161712646484
    8. '(
' → logprob: -9.782161712646484
    9. '(list' → logprob: -10.282161712646484
    10. '[int' → logprob: -10.532161712646484

Token 177: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07104682922363281
    2. ',' → logprob: -2.696046829223633
    3. '<|end|>' → logprob: -7.946046829223633
    4. ',input' → logprob: -8.196046829223633
    5. '(input' → logprob: -8.946046829223633
    6. '   ' → logprob: -9.571046829223633
    7. ' )' → logprob: -10.321046829223633
    8. '<|end|>' → logprob: -10.321046829223633
    9. '(' → logprob: -10.571046829223633
    10. 'input' → logprob: -10.571046829223633

Token 178: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23610813915729523
    2. ' input' → logprob: -1.6111081838607788
    3. ')' → logprob: -4.611108303070068
    4. ' )' → logprob: -8.11110782623291
    5. '<|end|>' → logprob: -9.36110782623291
    6. ' ' → logprob: -9.73610782623291
    7. '(input' → logprob: -9.73610782623291
    8. '=input' → logprob: -9.98610782623291
    9. ',input' → logprob: -10.36110782623291
    10. '<input' → logprob: -10.73610782623291

Token 179: ' sert' (ID: 52405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0159512758255005
    2. '(input' → logprob: -1.2659512758255005
    3. 'input' → logprob: -1.8909512758255005
    4. '(' → logprob: -2.140951156616211
    5. '(
' → logprob: -4.265951156616211
    6. 'user' → logprob: -4.765951156616211
    7. ',' → logprob: -4.890951156616211
    8. '   ' → logprob: -4.890951156616211
    9. '<|end|>' → logprob: -4.890951156616211
    10. '(user' → logprob: -5.265951156616211

Token 180: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.025179149582982063
    2. 'à' → logprob: -4.025179386138916
    3. ' ' → logprob: -5.775179386138916
    4. ')' → logprob: -6.400179386138916
    5. ' a' → logprob: -7.025179386138916
    6. ' to' → logprob: -8.150178909301758
    7. ''à' → logprob: -8.150178909301758
    8. ' )' → logprob: -8.275178909301758
    9. '<|end|>' → logprob: -9.025178909301758
    10. 'a' → logprob: -9.275178909301758

Token 181: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.24406546354293823
    2. 'convert' → logprob: -1.869065523147583
    3. ' lire' → logprob: -3.619065523147583
    4. 'transform' → logprob: -4.994065284729004
    5. ' convert' → logprob: -5.119065284729004
    6. ' transformer' → logprob: -5.369065284729004
    7. 'map' → logprob: -5.619065284729004
    8. 'split' → logprob: -5.869065284729004
    9. 'r' → logprob: -6.619065284729004
    10. ' map' → logprob: -6.744065284729004

Token 182: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8570241928100586
    2. '(input' → logprob: -1.3570241928100586
    3. 'l' → logprob: -1.8570241928100586
    4. ' input' → logprob: -2.8570241928100586
    5. ' les' → logprob: -3.3570241928100586
    6. 'les' → logprob: -3.6070241928100586
    7. ' l' → logprob: -3.9820241928100586
    8. ' la' → logprob: -4.732024192810059
    9. '(' → logprob: -5.232024192810059
    10. 'la' → logprob: -5.607024192810059

Token 183: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05379703268408775
    2. ' élément' → logprob: -3.9287970066070557
    3. 'entrée' → logprob: -4.178797245025635
    4. 'input' → logprob: -5.428797245025635
    5. ' valeur' → logprob: -5.553797245025635
    6. 'val' → logprob: -5.803797245025635
    7. ' input' → logprob: -5.928797245025635
    8. 'element' → logprob: -6.678797245025635
    9. ' entrée' → logprob: -7.053797245025635
    10. ' element' → logprob: -7.803797245025635

Token 184: ' en' (ID: 469)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0910618305206299
    2. 'input' → logprob: -1.2160618305206299
    3. ' de' → logprob: -1.9660618305206299
    4. '(input' → logprob: -2.34106183052063
    5. ' en' → logprob: -2.96606183052063
    6. ' ' → logprob: -4.591061592102051
    7. ' des' → logprob: -4.716061592102051
    8. 's' → logprob: -4.966061592102051
    9. '   ' → logprob: -5.091061592102051
    10. ',' → logprob: -5.466061592102051

Token 185: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7484755516052246
    2. 'int' → logprob: -0.9984755516052246
    3. ' un' → logprob: -2.7484755516052246
    4. ' entier' → logprob: -3.1234755516052246
    5. 'ent' → logprob: -3.2484755516052246
    6. ' des' → logprob: -4.748475551605225
    7. ' integer' → logprob: -7.123475551605225
    8. ' ent' → logprob: -7.123475551605225
    9. 'un' → logprob: -7.498475551605225
    10. ' integers' → logprob: -7.998475551605225

Token 186: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06802580505609512
    2. '   ' → logprob: -3.568025827407837
    3. ',' → logprob: -4.318025588989258
    4. ').' → logprob: -4.943025588989258
    5. ' )' → logprob: -5.693025588989258
    6. '):' → logprob: -5.943025588989258
    7. '(input' → logprob: -6.068025588989258
    8. '(
' → logprob: -6.443025588989258
    9. 'input' → logprob: -6.568025588989258
    10. '(' → logprob: -6.693025588989258

Token 187: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4321039319038391
    2. ' a' → logprob: -1.8071038722991943
    3. '   ' → logprob: -3.1821038722991943
    4. 'numbers' → logprob: -3.3071038722991943
    5. ' numbers' → logprob: -3.6821038722991943
    6. 'user' → logprob: -3.9321038722991943
    7. ' user' → logprob: -4.307104110717773
    8. 'values' → logprob: -4.432104110717773
    9. 'inputs' → logprob: -4.682104110717773
    10. ' values' → logprob: -4.807104110717773

Token 188: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05663681402802467
    2. 'values' → logprob: -3.5566368103027344
    3. 'numbers' → logprob: -4.181636810302734
    4. 'inputs' → logprob: -5.181636810302734
    5. 'nums' → logprob: -6.056636810302734
    6. ' a' → logprob: -6.806636810302734
    7. ' numbers' → logprob: -8.056636810302734
    8. 'n' → logprob: -8.056636810302734
    9. 'user' → logprob: -8.181636810302734
    10. ' values' → logprob: -8.181636810302734

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.088138227118179e-05
    2. ',b' → logprob: -9.875070571899414
    3. ' ,' → logprob: -10.875070571899414
    4. 'b' → logprob: -15.125070571899414
    5. ',
' → logprob: -16.625070571899414
    6. 's' → logprob: -16.750070571899414
    7. ',a' → logprob: -17.375070571899414
    8. 'a' → logprob: -17.875070571899414
    9. '‌,' → logprob: -18.000070571899414
    10. '_,' → logprob: -18.375070571899414

Token 190: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.005993967410176992
    2. 'b' → logprob: -5.130993843078613
    3. ' ' → logprob: -10.005993843078613
    4. '<|end|>' → logprob: -10.880993843078613
    5. ' ' → logprob: -13.755993843078613
    6. ' 
' → logprob: -16.00599479675293
    7. '	b' → logprob: -17.38099479675293
    8. ' =' → logprob: -17.50599479675293
    9. ')' → logprob: -17.50599479675293
    10. '    ' → logprob: -17.63099479675293

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860575869679451
    2. '=' → logprob: -3.0486056804656982
    3. ',' → logprob: -11.173605918884277
    4. ' =
' → logprob: -13.173605918884277
    5. '<|end|>' → logprob: -14.298605918884277
    6. ')' → logprob: -14.423605918884277
    7. ' ' → logprob: -15.048605918884277
    8. ' ' → logprob: -15.173605918884277
    9. '=input' → logprob: -16.04860496520996
    10. ' =
' → logprob: -16.17360496520996

Token 192: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03367923945188522
    2. 'map' → logprob: -3.408679246902466
    3. ' ' → logprob: -11.533679008483887
    4. ' list' → logprob: -11.658679008483887
    5. 'm' → logprob: -12.283679008483887
    6. ' ' → logprob: -12.408679008483887
    7. ' m' → logprob: -13.033679008483887
    8. ' ma' → logprob: -13.658679008483887
    9. '	map' → logprob: -13.783679008483887
    10. 'list' → logprob: -14.283679008483887

Token 193: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07003724575042725
    2. '(' → logprob: -2.695037364959717
    3. '(
' → logprob: -10.070036888122559
    4. '<int' → logprob: -10.820036888122559
    5. '(input' → logprob: -11.195036888122559
    6. ' (' → logprob: -12.070036888122559
    7. 'int' → logprob: -12.070036888122559
    8. '(str' → logprob: -12.320036888122559
    9. '(in' → logprob: -12.820036888122559
    10. '[int' → logprob: -13.195036888122559

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7840490341186523
    2. 'input' → logprob: -1.5340490341186523
    3. ',input' → logprob: -1.7840490341186523
    4. '(input' → logprob: -1.9090490341186523
    5. ')' → logprob: -5.034049034118652
    6. '(' → logprob: -5.909049034118652
    7. ' input' → logprob: -6.409049034118652
    8. '=input' → logprob: -8.534049034118652
    9. ' ,' → logprob: -8.784049034118652
    10. '   ' → logprob: -8.909049034118652

Token 195: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002098023891449
    2. ' input' → logprob: -2.3502097129821777
    3. ')' → logprob: -13.225210189819336
    4. ' ' → logprob: -14.600210189819336
    5. '(input' → logprob: -15.600210189819336
    6. '   ' → logprob: -15.850210189819336
    7. ' )' → logprob: -16.100210189819336
    8. '<input' → logprob: -16.225210189819336
    9. '	input' → logprob: -16.350210189819336
    10. '=input' → logprob: -16.475210189819336

Token 196: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006893685553222895
    2. '()' → logprob: -5.006893634796143
    3. '())' → logprob: -8.7568941116333
    4. '()
' → logprob: -11.5068941116333
    5. '(' → logprob: -12.3818941116333
    6. '()).' → logprob: -13.6318941116333
    7. ')' → logprob: -13.8818941116333
    8. ' ().' → logprob: -14.0068941116333
    9. '()>' → logprob: -14.6318941116333
    10. '());' → logprob: -14.6318941116333

Token 197: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011052774265408516
    2. 'strip' → logprob: -4.51105260848999
    3. 'rstrip' → logprob: -12.636053085327148
    4. ' split' → logprob: -13.636053085327148
    5. ')' → logprob: -14.886053085327148
    6. '(split' → logprob: -16.51105308532715
    7. ' ' → logprob: -16.88605308532715
    8. 'plit' → logprob: -18.01105308532715
    9. ' strip' → logprob: -18.13605308532715
    10. '```' → logprob: -18.13605308532715

Token 198: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014546222984790802
    2. '()))' → logprob: -4.5145463943481445
    3. '()' → logprob: -5.7645463943481445
    4. ')' → logprob: -8.139546394348145
    5. '))' → logprob: -10.389546394348145
    6. '(' → logprob: -11.139546394348145
    7. '())
' → logprob: -11.764546394348145
    8. ' ())' → logprob: -12.264546394348145
    9. '()))
' → logprob: -12.389546394348145
    10. '()));' → logprob: -15.014546394348145

Token 199: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3782830137643032e-05
    2. ' print' → logprob: -11.87501335144043
    3. '
' → logprob: -12.50001335144043
    4. '   ' → logprob: -12.87501335144043
    5. '    
' → logprob: -16.12501335144043
    6. 'pr' → logprob: -16.50001335144043
    7. '```' → logprob: -16.50001335144043
    8. 'result' → logprob: -17.12501335144043
    9. '#print' → logprob: -17.37501335144043
    10. '(print' → logprob: -17.37501335144043

Token 200: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.034592388459714e-06
    2. 'result' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.375005722045898
    4. 'pr' → logprob: -14.500005722045898
    5. 'prin' → logprob: -16.2500057220459
    6. 'output' → logprob: -18.6250057220459
    7. 'if' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.7500057220459
    9. 'answer' → logprob: -20.2500057220459
    10. '
' → logprob: -20.8750057220459

Token 201: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010553185129538178
    2. 'result' → logprob: -6.8760552406311035
    3. ' print' → logprob: -10.876055717468262
    4. 'pr' → logprob: -13.501055717468262
    5. 'output' → logprob: -13.626055717468262
    6. 'prin' → logprob: -14.501055717468262
    7. ' result' → logprob: -15.251055717468262
    8. '#' → logprob: -16.001054763793945
    9. 'resultado' → logprob: -17.251054763793945
    10. 'printer' → logprob: -17.626054763793945

Token 202: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.09383107721805573
    2. 'eler' → logprob: -2.4688310623168945
    3. 'ell' → logprob: -7.0938310623168945
    4. 'ly' → logprob: -7.2188310623168945
    5. '   ' → logprob: -7.3438310623168945
    6. 'er' → logprob: -7.3438310623168945
    7. 'elle' → logprob: -7.9688310623168945
    8. 'elé' → logprob: -7.9688310623168945
    9. 'le' → logprob: -8.218831062316895
    10. 'l' → logprob: -8.593831062316895

Token 203: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5424143075942993
    2. '   ' → logprob: -1.5424143075942993
    3. '(check' → logprob: -2.0424141883850098
    4. ' check' → logprob: -3.2924141883850098
    5. 'check' → logprob: -3.6674141883850098
    6. '()' → logprob: -5.54241418838501
    7. ')' → logprob: -5.79241418838501
    8. '(
' → logprob: -6.29241418838501
    9. '_check' → logprob: -7.04241418838501
    10. '_' → logprob: -7.66741418838501

Token 204: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006726856809109449
    2. 'check' → logprob: -5.0067267417907715
    3. ' print' → logprob: -11.63172721862793
    4. '(print' → logprob: -13.38172721862793
    5. ' check' → logprob: -14.00672721862793
    6. '(check' → logprob: -15.13172721862793
    7. 'pr' → logprob: -19.00672721862793
    8. 'prin' → logprob: -19.13172721862793
    9. '(' → logprob: -20.00672721862793
    10. ')' → logprob: -20.25672721862793

Token 205: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038701023906469345
    2. 'check' → logprob: -3.288701057434082
    3. 'result' → logprob: -8.288701057434082
    4. 'function' → logprob: -8.663701057434082
    5. ' print' → logprob: -9.038701057434082
    6. ' check' → logprob: -9.288701057434082
    7. 'def' → logprob: -11.788701057434082
    8. 'fonction' → logprob: -11.788701057434082
    9. ' function' → logprob: -13.288701057434082
    10. 'answer' → logprob: -14.038701057434082

Token 206: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1726478636264801
    2. '   ' → logprob: -2.1726479530334473
    3. ' print' → logprob: -3.1726479530334473
    4. 'result' → logprob: -6.297647953033447
    5. 'check' → logprob: -8.297647476196289
    6. ')' → logprob: -8.297647476196289
    7. ' check' → logprob: -8.672647476196289
    8. '(print' → logprob: -9.547647476196289
    9. ' result' → logprob: -10.047647476196289
    10. '    
' → logprob: -10.172647476196289

Token 207: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. 'both' → logprob: -14.750000953674316
    4. ' both' → logprob: -17.125
    5. 'Both' → logprob: -18.625
    6. '_a' → logprob: -19.0
    7. ' Both' → logprob: -22.25
    8. 'b' → logprob: -22.375
    9. ' ' → logprob: -22.625
    10. '   ' → logprob: -22.75

Token 208: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.0022354244720190763
    2. 'both' → logprob: -6.127235412597656
    3. 'ot' → logprob: -11.377235412597656
    4. '```' → logprob: -11.752235412597656
    5. 'o' → logprob: -12.627235412597656
    6. '   ' → logprob: -12.627235412597656
    7. '_' → logprob: -12.752235412597656
    8. 'Both' → logprob: -12.877235412597656
    9. '_b' → logprob: -12.877235412597656
    10. 'th' → logprob: -13.002235412597656

Token 209: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7432603272027336e-06
    2. '_b' → logprob: -13.750001907348633
    3. '_od' → logprob: -15.250001907348633
    4. '_o' → logprob: -15.500001907348633
    5. '_a' → logprob: -16.625001907348633
    6. 'odd' → logprob: -16.750001907348633
    7. '_out' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '_occ' → logprob: -19.125001907348633
    10. 'a' → logprob: -19.375001907348633

Token 210: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -2.45848218582978e-06
    2. ' odd' → logprob: -13.25000286102295
    3. 'od' → logprob: -15.62500286102295
    4. '_' → logprob: -16.375001907348633
    5. 'Odd' → logprob: -16.375001907348633
    6. 'ood' → logprob: -17.000001907348633
    7. 'a' → logprob: -17.500001907348633
    8. 'oddi' → logprob: -18.125001907348633
    9. '```' → logprob: -18.375001907348633
    10. 'b' → logprob: -18.625001907348633

Token 211: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3711038827896118
    2. '(a' → logprob: -1.3711038827896118
    3. 'print' → logprob: -2.9961037635803223
    4. 'result' → logprob: -5.996103763580322
    5. '(print' → logprob: -6.371103763580322
    6. '(
' → logprob: -7.121103763580322
    7. '   ' → logprob: -8.12110424041748
    8. ',' → logprob: -8.49610424041748
    9. ')' → logprob: -8.74610424041748
    10. '(result' → logprob: -8.87110424041748

Token 212: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023623129352927208
    2. ' print' → logprob: -3.77362322807312
    3. '   ' → logprob: -7.898622989654541
    4. '_print' → logprob: -13.5236234664917
    5. '(print' → logprob: -13.5236234664917
    6. 'prin' → logprob: -14.6486234664917
    7. '	print' → logprob: -14.7736234664917
    8. 'pr' → logprob: -14.8986234664917
    9. ':' → logprob: -15.0236234664917
    10. '    ' → logprob: -15.5236234664917

Token 213: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.9263493418693542
    2. 'print' → logprob: -1.176349401473999
    3. 'er' → logprob: -1.551349401473999
    4. '(' → logprob: -3.676349401473999
    5. '   ' → logprob: -3.801349401473999
    6. '(print' → logprob: -3.801349401473999
    7. 'e' → logprob: -4.67634916305542
    8. '(e' → logprob: -5.92634916305542
    9. ')' → logprob: -7.67634916305542
    10. 'ate' → logprob: -8.176349639892578

Token 214: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3290461599826813
    2. '(check' → logprob: -1.3290461301803589
    3. '(print' → logprob: -4.329046249389648
    4. '(
' → logprob: -6.204046249389648
    5. '()' → logprob: -8.579046249389648
    6. '(

' → logprob: -8.954046249389648
    7. 'print' → logprob: -9.829046249389648
    8. '   ' → logprob: -9.829046249389648
    9. 'check' → logprob: -11.579046249389648
    10. '("' → logprob: -12.454046249389648

Token 215: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004509393125772476
    2. ' résultat' → logprob: -5.879509449005127
    3. ' result' → logprob: -7.129509449005127
    4. ' resultat' → logprob: -7.254509449005127
    5. 'resultado' → logprob: -9.629508972167969
    6. 'rés' → logprob: -9.629508972167969
    7. 'check' → logprob: -10.629508972167969
    8. 'print' → logprob: -11.254508972167969
    9. '(' → logprob: -12.629508972167969
    10. 'r' → logprob: -12.629508972167969

Token 216: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03427058830857277
    2. '   ' → logprob: -4.034270763397217
    3. ' print' → logprob: -5.034270763397217
    4. '(print' → logprob: -5.159270763397217
    5. '(' → logprob: -5.784270763397217
    6. ')' → logprob: -7.909270763397217
    7. '()' → logprob: -9.034270286560059
    8. '(
' → logprob: -9.534270286560059
    9. '
' → logprob: -10.284270286560059
    10. '()
' → logprob: -11.534270286560059

Token 217: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001577236340381205
    2. ' print' → logprob: -6.501577377319336
    3. '   ' → logprob: -9.501577377319336
    4. 'pr' → logprob: -16.251577377319336
    5. '
' → logprob: -17.376577377319336
    6. 'result' → logprob: -17.376577377319336
    7. '```' → logprob: -18.126577377319336
    8. '	print' → logprob: -18.251577377319336
    9. 'prin' → logprob: -18.501577377319336
    10. '    
' → logprob: -19.251577377319336

Token 218: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. 'pr' → logprob: -17.250001907348633
    4. 'prin' → logprob: -17.250001907348633
    5. 'result' → logprob: -19.750001907348633
    6. 'prit' → logprob: -21.500001907348633
    7. 'pri' → logprob: -21.875001907348633
    8. '   ' → logprob: -22.000001907348633
    9. '
' → logprob: -22.875001907348633
    10. 'printf' → logprob: -23.000001907348633

Token 219: '(check' (ID: 40506)
  Prédit: '(check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -16.376171112060547
    4. '(Check' → logprob: -16.876171112060547
    5. '(call' → logprob: -17.501171112060547
    6. '(

' → logprob: -18.001171112060547
    7. '()' → logprob: -18.126171112060547
    8. 'check' → logprob: -18.251171112060547
    9. '((' → logprob: -18.501171112060547
    10. '("("' → logprob: -18.876171112060547

Token 220: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.250000953674316
    3. '_a' → logprob: -19.375
    4. ')_' → logprob: -19.75
    5. 'both' → logprob: -20.125
    6. ' _' → logprob: -20.375
    7. ' both' → logprob: -20.625
    8. '_)' → logprob: -21.375
    9. 'Both' → logprob: -21.625
    10. '__' → logprob: -22.375

Token 221: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.012854420579969883
    2. 'both' → logprob: -4.38785457611084
    3. '_b' → logprob: -8.13785457611084
    4. ' both' → logprob: -10.51285457611084
    5. '_' → logprob: -11.76285457611084
    6. ' oth' → logprob: -12.88785457611084
    7. 'o' → logprob: -13.01285457611084
    8. 'Both' → logprob: -13.13785457611084
    9. 'b' → logprob: -13.26285457611084
    10. 'ot' → logprob: -13.38785457611084

Token 222: '_' (ID: 62)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.011062555946409702
    2. '_' → logprob: -4.5110626220703125
    3. '_a' → logprob: -12.261062622070312
    4. '_o' → logprob: -12.636062622070312
    5. ')_' → logprob: -13.136062622070312
    6. ' _' → logprob: -13.636062622070312
    7. 'both' → logprob: -13.636062622070312
    8. ' both' → logprob: -13.761062622070312
    9. ' ' → logprob: -15.511062622070312
    10. '_od' → logprob: -15.761062622070312

Token 223: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0001097417771234177
    2. 'a' → logprob: -9.250109672546387
    3. ' odd' → logprob: -11.625109672546387
    4. 'b' → logprob: -12.875109672546387
    5. 'od' → logprob: -14.500109672546387
    6. 'ood' → logprob: -14.875109672546387
    7. 'Odd' → logprob: -14.875109672546387
    8. '_' → logprob: -15.500109672546387
    9. 'o' → logprob: -16.250110626220703
    10. ' ' → logprob: -16.375110626220703

Token 224: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011921331752091646
    2. '(' → logprob: -6.751192092895508
    3. ' (' → logprob: -10.751192092895508
    4. ')' → logprob: -15.001192092895508
    5. '(
' → logprob: -15.876192092895508
    6. 'a' → logprob: -17.251192092895508
    7. '(b' → logprob: -18.501192092895508
    8. ' ' → logprob: -18.876192092895508
    9. '(A' → logprob: -18.876192092895508
    10. '((' → logprob: -19.126192092895508

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013715495588257909
    2. ',b' → logprob: -6.626371383666992
    3. ' ,' → logprob: -10.001371383666992
    4. 'b' → logprob: -16.376371383666992
    5. ',
' → logprob: -16.751371383666992
    6. ' ' → logprob: -18.126371383666992
    7. ' b' → logprob: -18.376371383666992
    8. ')' → logprob: -18.626371383666992
    9. ',

' → logprob: -19.626371383666992
    10. '‌,' → logprob: -19.626371383666992

Token 226: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132616877555847
    2. ' b' → logprob: -1.3132617473602295
    3. ' ' → logprob: -18.563261032104492
    4. '	b' → logprob: -19.188261032104492
    5. ')b' → logprob: -19.188261032104492
    6. ' ' → logprob: -19.313261032104492
    7. '_b' → logprob: -20.563261032104492
    8. ' б' → logprob: -20.688261032104492
    9. ')' → logprob: -21.438261032104492
    10. '    ' → logprob: -21.688261032104492

Token 227: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004090985283255577
    2. ')' → logprob: -5.504090785980225
    3. '()))' → logprob: -11.629091262817383
    4. '))
' → logprob: -13.004091262817383
    5. '())' → logprob: -14.379091262817383
    6. ')))' → logprob: -14.504091262817383
    7. ' ))' → logprob: -15.629091262817383
    8. '()' → logprob: -15.879091262817383
    9. ')
' → logprob: -17.754091262817383
    10. '))

' → logprob: -18.254091262817383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 225
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 162
Précision stricte (1ère position): 39.11%
Précision adaptée (1ère position): 41.33%
Précision (top 10): 72.00%
================================================================================
