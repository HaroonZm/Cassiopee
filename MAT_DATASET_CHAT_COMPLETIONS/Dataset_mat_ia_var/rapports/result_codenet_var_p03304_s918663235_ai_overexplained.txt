================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation du module numpy, couramment utilisé pour le calcul numérique et la manipulation de tableaux multidimensionnels, bien que dans ce code il n'est pas utilisé explicitement
import numpy as np

# Importation du module collections avec l'alias 'col'; il s'agit d'un module fournissant des types de données de conteneurs spécialisés.
# Cependant, ici, il n'est pas utilisé non plus, mais reste souvent pratique dans d'autres contextes.
import collections as col

# Importation du module math qui offre des fonctions mathématiques de base telles que sqrt, sin, log, etc.
# Dans ce script, il n'est actuellement pas utilisé, mais il est maintenu pour potentielle utilisation.
import math

# Lecture de trois entiers séparés par des espaces depuis l'entrée standard (input utilisateur).
# La méthode 'input()' lit une ligne de texte; 'split()' sépare cette ligne en une liste de chaînes selon les espaces.
# 'map(int, ...)' convertit chaque chaîne de la liste en un entier.
# Enfin, les trois valeurs sont affectées aux variables n, m et d, respectivement.
n, m, d = map(int, input().split())

# Initialisation de la variable 'ans' avec la valeur flottante 0.0.
# Cela servira à stocker le résultat de calcul, qui sera potentiellement modifié plus loin.
ans = 0.0

# Vérification de la condition selon laquelle d est égal à zéro à l'aide d'une instruction if.
if d == 0:
    # Si 'd' est zéro, alors le résultat 'ans' est calculé comme le quotient du nombre (m - 1) et de n.
    # (m - 1) signifie que l'on considère toutes les valeurs jusqu'à (m - 1) inclus, excluant m.
    # Le résultat est converti en nombre flottant en raison de la division.
    ans = (m - 1)/n
else:
    # Sinon (c'est-à-dire si 'd' n'est pas égal à zéro), on effectue un autre calcul.
    # On multiplie 2.0 (un flottant avec valeur 2), par (n - d), qui représente la différence entre n et d,
    # multiplié par (m - 1), puis on divise le tout par n au carré (n * n).
    # Ce calcul pourrait représenter une probabilité ou un comptage, selon le contexte spécifique du problème.
    ans = 2.0 * (n - d) * (m - 1) / n / n

# Les deux lignes suivantes, précédées de '#', sont des commentaires et donc inactives.
# Elles semblent montrer une variante du calcul selon les valeurs de 'd' mais n'influencent pas l'exécution du code.
# if d == 0:
#     ans = (n - 1)*(m - 1)/n/n
# else:
#     ans = (n - 1)*(m - 1)/n/n/n * 2.0 * (n - d) * (m - 1)

# Affichage sur la sortie standard de la valeur finale calculée et stockée dans 'ans'.
# La fonction 'print()' affiche la valeur et saute à la ligne suivante automatiquement.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07061714679002762
    2. 'import' → logprob: -3.695617198944092
    3. '```' → logprob: -3.820617198944092
    4. '_' → logprob: -4.195617198944092
    5. '`' → logprob: -6.570617198944092
    6. ' ' → logprob: -6.695617198944092
    7. '.' → logprob: -6.820617198944092
    8. '#' → logprob: -7.695617198944092
    9. ',' → logprob: -7.820617198944092
    10. '=' → logprob: -8.195616722106934

Token 4: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06892605870962143
    2. '_' → logprob: -3.4439260959625244
    3. ''' → logprob: -4.068925857543945
    4. '  ' → logprob: -6.068925857543945
    5. '[' → logprob: -6.193925857543945
    6. 's' → logprob: -6.443925857543945
    7. 'import' → logprob: -6.568925857543945
    8. '.' → logprob: -6.818925857543945
    9. '```' → logprob: -7.068925857543945
    10. ''s' → logprob: -7.318925857543945

Token 5: ' numpy' (ID: 19529)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8134440183639526
    2. '```' → logprob: -1.3134440183639526
    3. ' import' → logprob: -2.063444137573242
    4. '`' → logprob: -2.688444137573242
    5. ':' → logprob: -3.063444137573242
    6. 's' → logprob: -4.938444137573242
    7. '.' → logprob: -5.063444137573242
    8. ' ' → logprob: -5.188444137573242
    9. ' :' → logprob: -5.313444137573242
    10. ' `' → logprob: -5.438444137573242

Token 6: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.009451827965676785
    2. '```' → logprob: -4.759451866149902
    3. ' import' → logprob: -7.634451866149902
    4. 'i' → logprob: -8.384451866149902
    5. '`' → logprob: -10.259451866149902
    6. ',' → logprob: -10.884451866149902
    7. ''import' → logprob: -10.884451866149902
    8. '\' → logprob: -11.384451866149902
    9. '``' → logprob: -11.509451866149902
    10. '#' → logprob: -11.884451866149902

Token 7: ' cour' (ID: 2871)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.46558234095573425
    2. ' import' → logprob: -1.2155823707580566
    3. ' ' → logprob: -3.4655823707580566
    4. ',' → logprob: -4.215582370758057
    5. '.' → logprob: -4.465582370758057
    6. '```' → logprob: -4.590582370758057
    7. ' ,' → logprob: -5.965582370758057
    8. '`' → logprob: -7.215582370758057
    9. ' as' → logprob: -7.340582370758057
    10. ':' → logprob: -7.840582370758057

Token 8: 'amment' (ID: 23443)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08000493794679642
    2. 'nt' → logprob: -4.080005168914795
    3. 's' → logprob: -4.080005168914795
    4. 'n' → logprob: -4.705005168914795
    5. '.' → logprob: -5.080005168914795
    6. 'r' → logprob: -5.205005168914795
    7. 'p' → logprob: -5.330005168914795
    8. 'space' → logprob: -5.705005168914795
    9. 'i' → logprob: -6.330005168914795
    10. '  ' → logprob: -6.830005168914795

Token 9: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.06083495169878006
    2. ' import' → logprob: -3.4358348846435547
    3. ' ' → logprob: -4.685834884643555
    4. 'util' → logprob: -4.810834884643555
    5. 'import' → logprob: -5.185834884643555
    6. ' used' → logprob: -6.685834884643555
    7. ' utilisée' → logprob: -7.435834884643555
    8. ' utilis' → logprob: -7.685834884643555
    9. ' util' → logprob: -8.185834884643555
    10. ' utilisés' → logprob: -8.435834884643555

Token 10: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15729860961437225
    2. ' import' → logprob: -2.6572985649108887
    3. '```' → logprob: -3.1572985649108887
    4. '.' → logprob: -4.282298564910889
    5. ' ' → logprob: -4.782298564910889
    6. ' pour' → logprob: -5.282298564910889
    7. ' en' → logprob: -6.407298564910889
    8. 'pour' → logprob: -6.657298564910889
    9. ',' → logprob: -6.907298564910889
    10. '`' → logprob: -8.157299041748047

Token 11: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16148114204406738
    2. ' les' → logprob: -2.4114811420440674
    3. ' la' → logprob: -4.161480903625488
    4. ' le' → logprob: -4.286480903625488
    5. ' ' → logprob: -4.786480903625488
    6. 'l' → logprob: -4.911480903625488
    7. ' ' → logprob: -5.411480903625488
    8. ' manip' → logprob: -5.536480903625488
    9. 'les' → logprob: -6.536480903625488
    10. 'le' → logprob: -6.911480903625488

Token 12: ' calcul' (ID: 7559)
  Prédit: ' traitement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitement' → logprob: -0.4979691207408905
    2. ' calcul' → logprob: -1.372969150543213
    3. 'calcul' → logprob: -2.497969150543213
    4. 'trait' → logprob: -3.747969150543213
    5. 'import' → logprob: -3.997969150543213
    6. 's' → logprob: -5.247969150543213
    7. ' manipulation' → logprob: -6.122969150543213
    8. 'cal' → logprob: -6.622969150543213
    9. '```' → logprob: -6.747969150543213
    10. ' import' → logprob: -7.372969150543213

Token 13: ' numérique' (ID: 73962)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.19017963111400604
    2. ' import' → logprob: -2.4401795864105225
    3. ' ' → logprob: -3.3151795864105225
    4. '```' → logprob: -3.6901795864105225
    5. '_' → logprob: -4.815179824829102
    6. 's' → logprob: -4.940179824829102
    7. ' en' → logprob: -5.690179824829102
    8. ' numpy' → logprob: -6.565179824829102
    9. ',' → logprob: -6.940179824829102
    10. '`' → logprob: -7.190179824829102

Token 14: ' et' (ID: 859)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01452438160777092
    2. '```' → logprob: -4.639524459838867
    3. ' import' → logprob: -5.389524459838867
    4. 'i' → logprob: -9.264524459838867
    5. '`' → logprob: -10.764524459838867
    6. ''import' → logprob: -11.014524459838867
    7. ' ' → logprob: -11.139524459838867
    8. '``' → logprob: -11.889524459838867
    9. ',' → logprob: -11.889524459838867
    10. '	import' → logprob: -12.014524459838867

Token 15: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.42998895049095154
    2. 'l' → logprob: -1.679988980293274
    3. ' scientifique' → logprob: -2.1799888610839844
    4. 'scient' → logprob: -4.304988861083984
    5. 'le' → logprob: -4.554988861083984
    6. 'la' → logprob: -4.679988861083984
    7. ' la' → logprob: -5.179988861083984
    8. ' les' → logprob: -5.929988861083984
    9. 'les' → logprob: -6.304988861083984
    10. ' le' → logprob: -6.304988861083984

Token 16: ' manipulation' (ID: 61519)
  Prédit: ' manipulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manipulation' → logprob: -0.006994543131440878
    2. ' science' → logprob: -5.256994724273682
    3. ' manip' → logprob: -7.131994724273682
    4. ' gestion' → logprob: -8.006994247436523
    5. 'man' → logprob: -8.256994247436523
    6. 'science' → logprob: -9.381994247436523
    7. ' manipul' → logprob: -9.631994247436523
    8. 'import' → logprob: -10.506994247436523
    9. 'scient' → logprob: -10.506994247436523
    10. ' scientific' → logprob: -10.506994247436523

Token 17: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7432217597961426
    2. ' de' → logprob: -1.2432217597961426
    3. ' ' → logprob: -1.8682217597961426
    4. 'import' → logprob: -3.1182217597961426
    5. ' import' → logprob: -3.6182217597961426
    6. 's' → logprob: -5.743221759796143
    7. ' numpy' → logprob: -6.118221759796143
    8. ' d' → logprob: -6.493221759796143
    9. ' en' → logprob: -7.243221759796143
    10. ' du' → logprob: -7.243221759796143

Token 18: ' tableaux' (ID: 176599)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24321140348911285
    2. ' tableaux' → logprob: -1.7432113885879517
    3. ' données' → logprob: -4.243211269378662
    4. ' numpy' → logprob: -4.743211269378662
    5. '  ' → logprob: -5.243211269378662
    6. ' tableau' → logprob: -6.493211269378662
    7. ' espaces' → logprob: -6.493211269378662
    8. ' arrays' → logprob: -6.618211269378662
    9. 'numpy' → logprob: -6.993211269378662
    10. ' matrices' → logprob: -6.993211269378662

Token 19: ' multid' (ID: 60280)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.006160800810903311
    2. ' import' → logprob: -5.381160736083984
    3. '```' → logprob: -6.506160736083984
    4. ',' → logprob: -11.381160736083984
    5. '.' → logprob: -12.131160736083984
    6. ' ' → logprob: -12.381160736083984
    7. '	import' → logprob: -12.506160736083984
    8. 'i' → logprob: -12.631160736083984
    9. ''import' → logprob: -12.881160736083984
    10. '\n' → logprob: -13.131160736083984

Token 20: 'imension' (ID: 48863)
  Prédit: 'imension'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imension' → logprob: -0.0010380487656220794
    2. 'im' → logprob: -7.501038074493408
    3. 'imen' → logprob: -8.87603759765625
    4. 'imes' → logprob: -9.12603759765625
    5. 'imens' → logprob: -9.12603759765625
    6. 'imensional' → logprob: -9.50103759765625
    7. 'iment' → logprob: -10.37603759765625
    8. 'i' → logprob: -11.25103759765625
    9. 'ime' → logprob: -11.87603759765625
    10. 'import' → logprob: -14.50103759765625

Token 21: 'nels' (ID: 24956)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4970099925994873
    2. 'a' → logprob: -1.1220099925994873
    3. 'ales' → logprob: -3.8720099925994873
    4. 'aux' → logprob: -4.247010231018066
    5. 'aires' → logprob: -4.497010231018066
    6. 'al' → logprob: -4.872010231018066
    7. 'es' → logprob: -5.372010231018066
    8. 'au' → logprob: -5.872010231018066
    9. '```' → logprob: -6.997010231018066
    10. 'ale' → logprob: -7.372010231018066

Token 22: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0237310528755188
    2. '```' → logprob: -3.773730993270874
    3. ' import' → logprob: -7.773731231689453
    4. '\n' → logprob: -11.398731231689453
    5. '``' → logprob: -11.523731231689453
    6. '
' → logprob: -11.773731231689453
    7. 'i' → logprob: -12.023731231689453
    8. '\' → logprob: -12.523731231689453
    9. '#' → logprob: -12.648731231689453
    10. ''import' → logprob: -12.773731231689453

Token 23: ' bien' (ID: 5340)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4081392288208008
    2. ' import' → logprob: -1.1581392288208008
    3. ',' → logprob: -4.533139228820801
    4. '.' → logprob: -5.408139228820801
    5. ' ' → logprob: -5.783139228820801
    6. ' ,' → logprob: -6.783139228820801
    7. '```' → logprob: -7.033139228820801
    8. ' en' → logprob: -9.2831392288208
    9. ':' → logprob: -9.5331392288208
    10. ' i' → logprob: -10.0331392288208

Token 24: ' que' (ID: 661)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.560614824295044
    2. ' import' → logprob: -1.560614824295044
    3. ' ' → logprob: -2.310614824295044
    4. 's' → logprob: -2.560614824295044
    5. '```' → logprob: -5.060614585876465
    6. ' des' → logprob: -5.310614585876465
    7. ' space' → logprob: -5.560614585876465
    8. 'space' → logprob: -5.685614585876465
    9. ' souvent' → logprob: -5.935614585876465
    10. ' de' → logprob: -6.310614585876465

Token 25: ' dans' (ID: 2671)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.11468969285488129
    2. ' souvent' → logprob: -3.989689588546753
    3. ' ' → logprob: -4.114689826965332
    4. ' l' → logprob: -4.489689826965332
    5. ' il' → logprob: -4.489689826965332
    6. ' les' → logprob: -4.739689826965332
    7. 'numpy' → logprob: -5.239689826965332
    8. ' le' → logprob: -5.364689826965332
    9. ' rarement' → logprob: -5.614689826965332
    10. ' Num' → logprob: -5.739689826965332

Token 26: ' ce' (ID: 2357)
  Prédit: 'cet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cet' → logprob: -0.9363633394241333
    2. ' ce' → logprob: -1.1863633394241333
    3. 'ce' → logprob: -1.8113633394241333
    4. 'l' → logprob: -2.6863632202148438
    5. 'le' → logprob: -3.5613632202148438
    6. ' cet' → logprob: -4.186363220214844
    7. 'c' → logprob: -4.686363220214844
    8. 'la' → logprob: -5.561363220214844
    9. ' le' → logprob: -6.061363220214844
    10. ' cette' → logprob: -6.061363220214844

Token 27: ' code' (ID: 3490)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.873336672782898
    2. ' code' → logprob: -0.873336672782898
    3. 'code' → logprob: -3.1233367919921875
    4. 'cas' → logprob: -3.6233367919921875
    5. '#' → logprob: -3.9983367919921875
    6. ' contexte' → logprob: -3.9983367919921875
    7. 'ex' → logprob: -4.2483367919921875
    8. '```' → logprob: -4.9983367919921875
    9. '_code' → logprob: -5.3733367919921875
    10. 'con' → logprob: -5.4983367919921875

Token 28: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.180005744099617
    2. ',' → logprob: -2.9300057888031006
    3. ' ,' → logprob: -3.1800057888031006
    4. '<|end|>' → logprob: -3.3050057888031006
    5. 'import' → logprob: -4.0550055503845215
    6. ' import' → logprob: -5.4300055503845215
    7. '.' → logprob: -5.8050055503845215
    8. '  ' → logprob: -6.3050055503845215
    9. '<|end|>' → logprob: -7.0550055503845215
    10. ')' → logprob: -7.3050055503845215

Token 29: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8928185701370239
    2. 'n' → logprob: -1.517818570137024
    3. ' ne' → logprob: -1.517818570137024
    4. ' semble' → logprob: -2.7678184509277344
    5. 'ne' → logprob: -3.7678184509277344
    6. ' soit' → logprob: -3.8928184509277344
    7. 's' → logprob: -4.017818450927734
    8. 'so' → logprob: -4.642818450927734
    9. 'n't' → logprob: -5.267818450927734
    10. ''s' → logprob: -5.767818450927734

Token 30: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04852013662457466
    2. ''a' → logprob: -4.048520088195801
    3. ''y' → logprob: -4.298520088195801
    4. 'e' → logprob: -4.798520088195801
    5. 'a' → logprob: -5.298520088195801
    6. ''#' → logprob: -7.673520088195801
    7. ''ex' → logprob: -8.0485200881958
    8. 'é' → logprob: -8.2985200881958
    9. '’' → logprob: -8.2985200881958
    10. 'y' → logprob: -8.4235200881958

Token 31: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.47627967596054077
    2. ' pas' → logprob: -0.9762796759605408
    3. 'import' → logprob: -7.4762797355651855
    4. ' jamais' → logprob: -7.6012797355651855
    5. ' utilisé' → logprob: -8.351279258728027
    6. 's' → logprob: -8.601279258728027
    7. '_pas' → logprob: -8.976279258728027
    8. 'importe' → logprob: -9.476279258728027
    9. 't' → logprob: -9.601279258728027
    10. 'p' → logprob: -9.976279258728027

Token 32: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.723061740398407
    2. ' utilisé' → logprob: -0.723061740398407
    3. 'import' → logprob: -3.5980618000030518
    4. ' import' → logprob: -7.973061561584473
    5. 'utile' → logprob: -8.598061561584473
    6. '_util' → logprob: -8.723061561584473
    7. ' used' → logprob: -8.723061561584473
    8. ' utilis' → logprob: -8.723061561584473
    9. ' utilisée' → logprob: -8.723061561584473
    10. 'used' → logprob: -8.848061561584473

Token 33: ' explicit' (ID: 23141)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22126136720180511
    2. '#' → logprob: -2.5962612628936768
    3. '
' → logprob: -2.9712612628936768
    4. '```' → logprob: -3.2212612628936768
    5. '\n' → logprob: -4.346261501312256
    6. '<|end|>' → logprob: -4.846261501312256
    7. '\' → logprob: -5.721261501312256
    8. '' → logprob: -6.221261501312256
    9. ' 
' → logprob: -6.846261501312256
    10. 'n' → logprob: -7.096261501312256

Token 34: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.026622118428349495
    2. 'e' → logprob: -3.6516220569610596
    3. 'emen' → logprob: -9.90162181854248
    4. 'em' → logprob: -10.02662181854248
    5. ' e' → logprob: -10.52662181854248
    6. '.' → logprob: -10.52662181854248
    7. 'es' → logprob: -10.52662181854248
    8. 'emment' → logprob: -10.77662181854248
    9. ' ' → logprob: -10.90162181854248
    10. 'ly' → logprob: -10.90162181854248

Token 35: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04205828160047531
    2. '```' → logprob: -3.417058229446411
    3. '#' → logprob: -5.54205846786499
    4. '
' → logprob: -6.41705846786499
    5. '\n' → logprob: -7.29205846786499
    6. ' import' → logprob: -7.91705846786499
    7. '<|end|>' → logprob: -8.292057991027832
    8. 'i' → logprob: -8.542057991027832
    9. 'n' → logprob: -8.542057991027832
    10. '' → logprob: -8.667057991027832

Token 36: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06457718461751938
    2. '```' → logprob: -2.939577102661133
    3. '#' → logprob: -5.439577102661133
    4. '\n' → logprob: -6.189577102661133
    5. '
' → logprob: -7.189577102661133
    6. '<|end|>' → logprob: -7.564577102661133
    7. ' import' → logprob: -8.064577102661133
    8. ' 
' → logprob: -8.189577102661133
    9. '' → logprob: -8.314577102661133
    10. 'n' → logprob: -8.564577102661133

Token 37: ' numpy' (ID: 19529)
  Prédit: ' numpy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.07060326635837555
    2. ' ' → logprob: -2.695603370666504
    3. ' ' → logprob: -7.820603370666504
    4. 'numpy' → logprob: -8.945603370666504
    5. ' space' → logprob: -9.445603370666504
    6. '_numpy' → logprob: -11.695603370666504
    7. '  ' → logprob: -11.945603370666504
    8. ' ‌' → logprob: -12.070603370666504
    9. ' ﻿' → logprob: -12.320603370666504
    10. ' n' → logprob: -12.320603370666504

Token 38: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0031185373663902283
    2. 'as' → logprob: -6.003118515014648
    3. ' ' → logprob: -7.503118515014648
    4. '<|end|>' → logprob: -9.378118515014648
    5. '  ' → logprob: -13.003118515014648
    6. '.' → logprob: -13.253118515014648
    7. '<|end|>' → logprob: -14.503118515014648
    8. '.as' → logprob: -14.753118515014648
    9. 'space' → logprob: -15.003118515014648
    10. '	as' → logprob: -15.503118515014648

Token 39: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0019413690315559506
    2. 'np' → logprob: -6.251941204071045
    3. ' ' → logprob: -11.376941680908203
    4. ' ' → logprob: -13.626941680908203
    5. '_np' → logprob: -16.751941680908203
    6. '=np' → logprob: -16.876941680908203
    7. ' numpy' → logprob: -17.876941680908203
    8. 'import' → logprob: -18.376941680908203
    9. ' ' → logprob: -18.626941680908203
    10. ' pd' → logprob: -18.751941680908203

Token 40: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31406107544898987
    2. '\n' → logprob: -1.6890610456466675
    3. '#' → logprob: -3.064061164855957
    4. '<|end|>' → logprob: -3.939061164855957
    5. '

' → logprob: -4.564061164855957
    6. '' → logprob: -5.564061164855957
    7. '\' → logprob: -5.939061164855957
    8. '<|end|>' → logprob: -7.939061164855957
    9. '  
' → logprob: -8.064061164855957
    10. '```' → logprob: -8.689061164855957

Token 42: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7044429183006287
    2. 'def' → logprob: -0.9544429183006287
    3. 'array' → logprob: -2.8294429779052734
    4. 'import' → logprob: -3.8294429779052734
    5. ' array' → logprob: -4.204442977905273
    6. ' def' → logprob: -4.579442977905273
    7. 'random' → logprob: -5.579442977905273
    8. ' #' → logprob: -5.954442977905273
    9. 'print' → logprob: -6.579442977905273
    10. ' random' → logprob: -7.329442977905273

Token 43: 'ation' (ID: 387)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.011050177738070488
    2. ' matplotlib' → logprob: -5.511050224304199
    3. ' os' → logprob: -5.886050224304199
    4. ' math' → logprob: -6.261050224304199
    5. ' tensorflow' → logprob: -7.386050224304199
    6. ' random' → logprob: -8.3860502243042
    7. ' from' → logprob: -8.6360502243042
    8. ' json' → logprob: -8.7610502243042
    9. ' sklearn' → logprob: -8.7610502243042
    10. ' ' → logprob: -8.7610502243042

Token 44: ' du' (ID: 1462)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.02560359053313732
    2. ' de' → logprob: -5.025603771209717
    3. ' os' → logprob: -5.150603771209717
    4. 'p' → logprob: -5.900603771209717
    5. ' des' → logprob: -6.025603771209717
    6. ' matplotlib' → logprob: -6.150603771209717
    7. ' json' → logprob: -6.400603771209717
    8. 'json' → logprob: -6.650603771209717
    9. ' math' → logprob: -6.650603771209717
    10. 'import' → logprob: -7.525603771209717

Token 45: ' module' (ID: 8827)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.055868618190288544
    2. ' matplotlib' → logprob: -3.430868625640869
    3. ' os' → logprob: -4.930868625640869
    4. 'p' → logprob: -5.305868625640869
    5. ' math' → logprob: -5.430868625640869
    6. ' sys' → logprob: -5.680868625640869
    7. 'mat' → logprob: -6.805868625640869
    8. ' random' → logprob: -7.805868625640869
    9. 'math' → logprob: -8.805868148803711
    10. 'os' → logprob: -9.305868148803711

Token 46: ' collections' (ID: 22690)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.03034483827650547
    2. ' math' → logprob: -4.2803449630737305
    3. ' matplotlib' → logprob: -5.0303449630737305
    4. ' os' → logprob: -5.0303449630737305
    5. ' random' → logprob: -6.2803449630737305
    6. ' sys' → logprob: -7.2803449630737305
    7. 'p' → logprob: -8.40534496307373
    8. ' datetime' → logprob: -10.15534496307373
    9. ' json' → logprob: -10.28034496307373
    10. 'math' → logprob: -10.40534496307373

Token 47: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.43495121598243713
    2. 'from' → logprob: -2.1849513053894043
    3. ' import' → logprob: -2.1849513053894043
    4. ' from' → logprob: -2.4349513053894043
    5. '.' → logprob: -4.309951305389404
    6. ',' → logprob: -4.809951305389404
    7. ' collections' → logprob: -5.684951305389404
    8. '```' → logprob: -5.809951305389404
    9. ' defaultdict' → logprob: -5.934951305389404
    10. '.Counter' → logprob: -6.059951305389404

Token 48: ' l' (ID: 305)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.11393643170595169
    2. ' Counter' → logprob: -2.988936424255371
    3. ' deque' → logprob: -3.738936424255371
    4. 'Counter' → logprob: -3.988936424255371
    5. 'deque' → logprob: -4.988936424255371
    6. 'default' → logprob: -5.238936424255371
    7. ' ' → logprob: -7.988936424255371
    8. ' counter' → logprob: -8.113936424255371
    9. 'named' → logprob: -8.238936424255371
    10. 'Ordered' → logprob: -8.363936424255371

Token 49: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1669602394104004
    2. 'e' → logprob: -1.2919602394104004
    3. 'from' → logprob: -1.7919602394104004
    4. 'i' → logprob: -3.5419602394104004
    5. 'eft' → logprob: -3.6669602394104004
    6. 'azy' → logprob: -4.1669602394104
    7. 'Counter' → logprob: -4.1669602394104
    8. '```' → logprob: -4.2919602394104
    9. ' Counter' → logprob: -4.3544602394104
    10. ' from' → logprob: -4.4794602394104

Token 50: 'alias' (ID: 28171)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.6658709645271301
    2. 'Ordered' → logprob: -1.1658709049224854
    3. 'default' → logprob: -2.4158709049224854
    4. 'import' → logprob: -3.5408709049224854
    5. ' Ordered' → logprob: -4.2908711433410645
    6. ' defaultdict' → logprob: -4.7908711433410645
    7. 'ounter' → logprob: -4.9158711433410645
    8. 'deque' → logprob: -5.0408711433410645
    9. ' Counter' → logprob: -5.1658711433410645
    10. 'ordered' → logprob: -5.6658711433410645

Token 51: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22796407341957092
    2. ' as' → logprob: -1.7279640436172485
    3. ' defaultdict' → logprob: -3.977964162826538
    4. ' from' → logprob: -6.852963924407959
    5. ' import' → logprob: -6.977963924407959
    6. ' c' → logprob: -6.977963924407959
    7. ' Counter' → logprob: -7.352963924407959
    8. ' collections' → logprob: -7.477963924407959
    9. ' de' → logprob: -7.727963924407959
    10. 'as' → logprob: -7.852963924407959

Token 52: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.5703511238098145
    2. 'co' → logprob: -1.4453511238098145
    3. 'collections' → logprob: -2.4453511238098145
    4. ' defaultdict' → logprob: -3.8203511238098145
    5. 'c' → logprob: -3.9453511238098145
    6. ' col' → logprob: -4.4453511238098145
    7. 'default' → logprob: -4.8203511238098145
    8. 'deque' → logprob: -4.9453511238098145
    9. ' co' → logprob: -5.0703511238098145
    10. ' ' → logprob: -5.3203511238098145

Token 53: '';' (ID: 15290)
  Prédit: 'lections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lections' → logprob: -0.006656283978372812
    2. 'ections' → logprob: -5.506656169891357
    3. 'lect' → logprob: -6.756656169891357
    4. 'lection' → logprob: -7.006656169891357
    5. 'le' → logprob: -8.506656646728516
    6. 'collections' → logprob: -9.506656646728516
    7. 'ect' → logprob: -9.631656646728516
    8. 'abc' → logprob: -10.381656646728516
    9. '```' → logprob: -10.631656646728516
    10. 'ection' → logprob: -10.756656646728516

Token 54: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.486880362033844
    2. ' collections' → logprob: -1.7368803024291992
    3. 'collections' → logprob: -2.736880302429199
    4. 'import' → logprob: -2.861880302429199
    5. ' import' → logprob: -2.861880302429199
    6. 'from' → logprob: -4.361880302429199
    7. ' from' → logprob: -5.486880302429199
    8. ' as' → logprob: -6.736880302429199
    9. ' defaultdict' → logprob: -6.924380302429199
    10. ' col' → logprob: -6.986880302429199

Token 55: ' s' (ID: 265)
  Prédit: 'lections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lections' → logprob: -1.2922738790512085
    2. 'lection' → logprob: -1.4172738790512085
    3. 'lect' → logprob: -2.042273998260498
    4. 'e' → logprob: -2.792273998260498
    5. 'es' → logprob: -2.917273998260498
    6. 'ection' → logprob: -3.042273998260498
    7. 'from' → logprob: -3.167273998260498
    8. 'ections' → logprob: -3.417273998260498
    9. 'le' → logprob: -3.667273998260498
    10. 'ect' → logprob: -4.417273998260498

Token 56: ''agit' (ID: 72975)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.006422996520996
    2. 'est' → logprob: -1.631422996520996
    3. 'e' → logprob: -2.006422996520996
    4. ''est' → logprob: -2.256422996520996
    5. 'ont' → logprob: -3.506422996520996
    6. 'a' → logprob: -3.506422996520996
    7. 'em' → logprob: -3.631422996520996
    8. ''agit' → logprob: -3.631422996520996
    9. '#' → logprob: -4.381422996520996
    10. 'n't' → logprob: -4.881422996520996

Token 57: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22110159695148468
    2. ' d' → logprob: -2.3461015224456787
    3. '<|end|>' → logprob: -2.5961015224456787
    4. 'de' → logprob: -4.846101760864258
    5. '  ' → logprob: -5.221101760864258
    6. ' of' → logprob: -5.971101760864258
    7. ' ' → logprob: -6.096101760864258
    8. 'd' → logprob: -6.221101760864258
    9. '<|end|>' → logprob: -6.596101760864258
    10. ' des' → logprob: -6.596101760864258

Token 58: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9397701025009155
    2. ' ' → logprob: -1.4397701025009155
    3. ' collections' → logprob: -1.6897701025009155
    4. 'a' → logprob: -2.564770221710205
    5. ' e' → logprob: -3.564770221710205
    6. ' a' → logprob: -3.564770221710205
    7. ''' → logprob: -4.189770221710205
    8. 'es' → logprob: -4.314770221710205
    9. 'collections' → logprob: -5.064770221710205
    10. ' '' → logprob: -5.314770221710205

Token 59: ' module' (ID: 8827)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.586392879486084
    2. ' module' → logprob: -1.461392879486084
    3. 'collections' → logprob: -3.336392879486084
    4. 'a' → logprob: -3.461392879486084
    5. ' ' → logprob: -3.461392879486084
    6. 'e' → logprob: -3.586392879486084
    7. ' import' → logprob: -4.336392879486084
    8. 'import' → logprob: -4.586392879486084
    9. ' a' → logprob: -4.586392879486084
    10. ' defaultdict' → logprob: -4.961392879486084

Token 60: ' fourn' (ID: 101975)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.856287956237793
    2. 'collections' → logprob: -1.731287956237793
    3. '<|end|>' → logprob: -1.981287956237793
    4. '.' → logprob: -2.356287956237793
    5. ' ' → logprob: -2.856287956237793
    6. 'from' → logprob: -2.981287956237793
    7. '_' → logprob: -4.231287956237793
    8. 'import' → logprob: -4.606287956237793
    9. ' from' → logprob: -4.981287956237793
    10. ' defaultdict' → logprob: -5.481287956237793

Token 61: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.002697759075090289
    2. 'ir' → logprob: -6.502697944641113
    3. 'érant' → logprob: -8.502697944641113
    4. 'ert' → logprob: -8.627697944641113
    5. 'ant' → logprob: -8.627697944641113
    6. 'rant' → logprob: -8.752697944641113
    7. 'it' → logprob: -9.502697944641113
    8. 'is' → logprob: -9.752697944641113
    9. 'isant' → logprob: -10.002697944641113
    10. 'i' → logprob: -10.002697944641113

Token 62: ' des' (ID: 731)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6711252927780151
    2. ' ' → logprob: -0.9211252927780151
    3. 'collections' → logprob: -2.9211254119873047
    4. ' des' → logprob: -3.7961254119873047
    5. 's' → logprob: -5.671125411987305
    6. ' ' → logprob: -5.796125411987305
    7. '  ' → logprob: -6.296125411987305
    8. 'e' → logprob: -7.046125411987305
    9. ' defaultdict' → logprob: -7.046125411987305
    10. ' a' → logprob: -7.546125411987305

Token 63: ' types' (ID: 6009)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.130550354719162
    2. ' collections' → logprob: -2.1305503845214844
    3. 'collections' → logprob: -6.630550384521484
    4. ' a' → logprob: -7.255550384521484
    5. '  ' → logprob: -7.755550384521484
    6. ' defaultdict' → logprob: -8.380550384521484
    7. 'a' → logprob: -8.505550384521484
    8. 'ounter' → logprob: -8.880550384521484
    9. 'ections' → logprob: -9.005550384521484
    10. ' outils' → logprob: -9.380550384521484

Token 64: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46120011806488037
    2. '<|end|>' → logprob: -1.5862001180648804
    3. '_' → logprob: -2.71120023727417
    4. 'collections' → logprob: -3.08620023727417
    5. ' collections' → logprob: -3.46120023727417
    6. 'from' → logprob: -4.83620023727417
    7. ' defaultdict' → logprob: -6.21120023727417
    8. '<|end|>' → logprob: -6.46120023727417
    9. 's' → logprob: -6.58620023727417
    10. '_collection' → logprob: -7.08620023727417

Token 65: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.07080230116844177
    2. ' structures' → logprob: -3.8208022117614746
    3. ' data' → logprob: -4.195802211761475
    4. ' collections' → logprob: -4.320802211761475
    5. 'collections' → logprob: -4.945802211761475
    6. 'a' → logprob: -6.570802211761475
    7. 's' → logprob: -6.570802211761475
    8. '_' → logprob: -6.820802211761475
    9. '```' → logprob: -7.070802211761475
    10. 'onnées' → logprob: -7.320802211761475

Token 66: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38576018810272217
    2. '<|end|>' → logprob: -1.6357601881027222
    3. 'collections' → logprob: -2.8857603073120117
    4. ' collections' → logprob: -3.6357603073120117
    5. 's' → logprob: -4.635760307312012
    6. '  ' → logprob: -5.135760307312012
    7. ' ' → logprob: -5.385760307312012
    8. ' spécialisés' → logprob: -5.885760307312012
    9. '```' → logprob: -6.135760307312012
    10. ' defaultdict' → logprob: -6.385760307312012

Token 67: ' cont' (ID: 836)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.5884217023849487
    2. ' collections' → logprob: -1.8384217023849487
    3. ' data' → logprob: -2.0884218215942383
    4. 'collections' → logprob: -2.2134218215942383
    5. ' ' → logprob: -3.9634218215942383
    6. 'onnées' → logprob: -5.088421821594238
    7. 'data' → logprob: -5.338421821594238
    8. ' structures' → logprob: -5.713421821594238
    9. '```' → logprob: -6.088421821594238
    10. 'd' → logprob: -6.213421821594238

Token 68: 'ene' (ID: 1900)
  Prédit: 'ainers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainers' → logprob: -0.04254152253270149
    2. 'ainer' → logprob: -3.66754150390625
    3. 'aine' → logprob: -4.16754150390625
    4. '```' → logprob: -8.29254150390625
    5. 'a' → logprob: -8.41754150390625
    6. 'ai' → logprob: -10.66754150390625
    7. 'e' → logprob: -10.79254150390625
    8. 'aines' → logprob: -10.91754150390625
    9. 'ene' → logprob: -11.16754150390625
    10. 'eurs' → logprob: -11.41754150390625

Token 69: 'urs' (ID: 1628)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.3081395626068115
    2. 'r' → logprob: -2.0581395626068115
    3. 'urs' → logprob: -2.1831395626068115
    4. 'red' → logprob: -4.183139801025391
    5. 'reurs' → logprob: -5.433139801025391
    6. '```' → logprob: -6.683139801025391
    7. 'ur' → logprob: -6.933139801025391
    8. 'res' → logprob: -7.183139801025391
    9. 'rés' → logprob: -7.683139801025391
    10. 're' → logprob: -7.683139801025391

Token 70: ' spécialisés' (ID: 182840)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3899003267288208
    2. ' spécialisés' → logprob: -1.6399003267288208
    3. 'collections' → logprob: -2.1399002075195312
    4. ' collections' → logprob: -2.6399002075195312
    5. ' ' → logprob: -2.6399002075195312
    6. 'pecial' → logprob: -3.1399002075195312
    7. 's' → logprob: -3.2649002075195312
    8. ',' → logprob: -3.7649002075195312
    9. '<|end|>' → logprob: -3.7649002075195312
    10. 'from' → logprob: -3.8899002075195312

Token 71: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2730145752429962
    2. 'collections' → logprob: -2.273014545440674
    3. ' collections' → logprob: -3.148014545440674
    4. ' import' → logprob: -4.023014545440674
    5. 'col' → logprob: -4.273014545440674
    6. ',' → logprob: -4.273014545440674
    7. '.' → logprob: -4.773014545440674
    8. ' ' → logprob: -4.898014545440674
    9. ' as' → logprob: -5.023014545440674
    10. ' col' → logprob: -5.398014545440674

Token 72: '#' (ID: 2)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.18715345859527588
    2. 'collections' → logprob: -2.0621533393859863
    3. ' ' → logprob: -3.8121533393859863
    4. ' import' → logprob: -4.312153339385986
    5. 'import' → logprob: -5.312153339385986
    6. ' collection' → logprob: -6.937153339385986
    7. ' cole' → logprob: -7.312153339385986
    8. ' col' → logprob: -7.687153339385986
    9. ' from' → logprob: -8.562153816223145
    10. 'col' → logprob: -8.687153816223145

Token 73: ' Cependant' (ID: 74480)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3752189576625824
    2. 'collections' → logprob: -1.2502189874649048
    3. 'from' → logprob: -4.875218868255615
    4. ' from' → logprob: -5.000218868255615
    5. 'import' → logprob: -5.250218868255615
    6. ' import' → logprob: -5.500218868255615
    7. ' col' → logprob: -7.125218868255615
    8. 'col' → logprob: -7.500218868255615
    9. 'Collections' → logprob: -8.250219345092773
    10. ' ' → logprob: -8.250219345092773

Token 74: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6351882219314575
    2. ',' → logprob: -0.7601882219314575
    3. ' collections' → logprob: -6.885188102722168
    4. ' ' → logprob: -6.885188102722168
    5. ' col' → logprob: -8.885188102722168
    6. 'collections' → logprob: -9.760188102722168
    7. ' import' → logprob: -10.010188102722168
    8. ' ' → logprob: -10.385188102722168
    9. ' il' → logprob: -10.385188102722168
    10. 'import' → logprob: -10.510188102722168

Token 75: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7673389911651611
    2. ' collections' → logprob: -0.7673389911651611
    3. 'collections' → logprob: -3.267338991165161
    4. ' il' → logprob: -5.017338752746582
    5. ' col' → logprob: -5.142338752746582
    6. ' #' → logprob: -5.642338752746582
    7. ' ' → logprob: -5.642338752746582
    8. ' le' → logprob: -6.017338752746582
    9. ' ce' → logprob: -6.142338752746582
    10. '<|end|>' → logprob: -6.267338752746582

Token 76: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.955318033695221
    2. ' ,' → logprob: -1.0803179740905762
    3. ',' → logprob: -1.3303179740905762
    4. '<|end|>' → logprob: -5.455317974090576
    5. ' col' → logprob: -5.830317974090576
    6. 'import' → logprob: -7.330317974090576
    7. '  ' → logprob: -7.580317974090576
    8. ' collections' → logprob: -7.580317974090576
    9. ' import' → logprob: -7.830317974090576
    10. ' ' → logprob: -7.955317974090576

Token 77: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016904157819226384
    2. ' collections' → logprob: -6.87669038772583
    3. ' col' → logprob: -8.501690864562988
    4. ' il' → logprob: -9.251690864562988
    5. 'collections' → logprob: -9.376690864562988
    6. ' ' → logprob: -10.501690864562988
    7. ' c' → logprob: -10.751690864562988
    8. '<|end|>' → logprob: -10.876690864562988
    9. ' on' → logprob: -11.001690864562988
    10. ' le' → logprob: -11.001690864562988

Token 78: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10690967738628387
    2. 'n' → logprob: -2.35690975189209
    3. ' ne' → logprob: -6.35690975189209
    4. ' ' → logprob: -6.48190975189209
    5. ''' → logprob: -6.60690975189209
    6. '.' → logprob: -8.10690975189209
    7. 'a' → logprob: -8.23190975189209
    8. ' a' → logprob: -8.35690975189209
    9. 'n't' → logprob: -8.48190975189209
    10. ' '' → logprob: -8.85690975189209

Token 79: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23574517667293549
    2. ''est' → logprob: -2.6107451915740967
    3. 'a' → logprob: -3.3607451915740967
    4. 'n' → logprob: -3.4857451915740967
    5. 'e' → logprob: -3.8607451915740967
    6. '#' → logprob: -4.360744953155518
    7. ''a' → logprob: -4.735744953155518
    8. ''s' → logprob: -4.985744953155518
    9. 'u' → logprob: -5.235744953155518
    10. '<|end|>' → logprob: -5.985744953155518

Token 80: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.595995306968689
    2. 'pas' → logprob: -0.845995306968689
    3. 's' → logprob: -4.2209954261779785
    4. 'import' → logprob: -6.3459954261779785
    5. 'p' → logprob: -7.3459954261779785
    6. '#' → logprob: -7.7209954261779785
    7. 'a' → logprob: -7.7209954261779785
    8. ' ' → logprob: -7.7209954261779785
    9. 't' → logprob: -7.8459954261779785
    10. 'n' → logprob: -8.22099494934082

Token 81: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.2678605318069458
    2. 'util' → logprob: -1.7678605318069458
    3. ' explicit' → logprob: -4.017860412597656
    4. ' used' → logprob: -4.017860412597656
    5. ' ' → logprob: -5.017860412597656
    6. 'explicit' → logprob: -5.142860412597656
    7. ' utilis' → logprob: -5.267860412597656
    8. ' utilisés' → logprob: -6.267860412597656
    9. ' utilized' → logprob: -6.392860412597656
    10. ' utilisée' → logprob: -6.892860412597656

Token 82: ' non' (ID: 2893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.08316810429096222
    2. 'plus' → logprob: -2.9581680297851562
    3. 'explicit' → logprob: -4.833168029785156
    4. ' explicit' → logprob: -5.208168029785156
    5. '<|end|>' → logprob: -5.458168029785156
    6. 'util' → logprob: -6.583168029785156
    7. 'etheless' → logprob: -6.583168029785156
    8. '-' → logprob: -6.583168029785156
    9. 's' → logprob: -7.458168029785156
    10. '+' → logprob: -7.458168029785156

Token 84: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10292722284793854
    2. ' 
' → logprob: -2.4779272079467773
    3. '<|end|>' → logprob: -4.977927207946777
    4. '#' → logprob: -5.852927207946777
    5. '  
' → logprob: -7.102927207946777
    6. ' mais' → logprob: -7.352927207946777
    7. '.' → logprob: -8.102927207946777
    8. ' but' → logprob: -8.352927207946777
    9. ' car' → logprob: -8.352927207946777
    10. ' 

' → logprob: -8.477927207946777

Token 86: ' reste' (ID: 26769)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9959452152252197
    2. ' ' → logprob: -1.7459452152252197
    3. ' il' → logprob: -1.7459452152252197
    4. ' cela' → logprob: -2.3709452152252197
    5. ' peut' → logprob: -3.6209452152252197
    6. ' #' → logprob: -3.7459452152252197
    7. ' ceci' → logprob: -3.8709452152252197
    8. ' le' → logprob: -3.9959452152252197
    9. ' pourrait' → logprob: -4.370944976806641
    10. ' ce' → logprob: -4.370944976806641

Token 87: ' souvent' (ID: 28137)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.815628170967102
    2. 'prés' → logprob: -2.0656280517578125
    3. 'pot' → logprob: -2.8156280517578125
    4. ' en' → logprob: -3.0656280517578125
    5. 'dans' → logprob: -3.0656280517578125
    6. ' import' → logprob: -3.4406280517578125
    7. ' potent' → logprob: -3.4406280517578125
    8. ' présent' → logprob: -3.5656280517578125
    9. ' disponible' → logprob: -3.6906280517578125
    10. 'en' → logprob: -3.8156280517578125

Token 88: ' pratique' (ID: 42780)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5997583270072937
    2. ' utile' → logprob: -1.9747583866119385
    3. 's' → logprob: -2.5997583866119385
    4. ' ' → logprob: -2.9747583866119385
    5. ' import' → logprob: -2.9747583866119385
    6. 'utile' → logprob: -3.2247583866119385
    7. ' utilisé' → logprob: -4.724758148193359
    8. 'util' → logprob: -4.724758148193359
    9. ' un' → logprob: -5.099758148193359
    10. 'e' → logprob: -5.224758148193359

Token 89: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23897501826286316
    2. '<|end|>' → logprob: -1.7389750480651855
    3. '.' → logprob: -3.7389750480651855
    4. 'import' → logprob: -4.8639750480651855
    5. '<|end|>' → logprob: -7.2389750480651855
    6. ',' → logprob: -7.3639750480651855
    7. ' for' → logprob: -7.3639750480651855
    8. ' pour' → logprob: -7.6139750480651855
    9. '  ' → logprob: -7.7389750480651855
    10. ' import' → logprob: -7.8639750480651855

Token 90: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3358910083770752
    2. ' des' → logprob: -1.3358910083770752
    3. ' les' → logprob: -1.5858910083770752
    4. ' le' → logprob: -2.210891008377075
    5. ' certains' → logprob: -2.835891008377075
    6. 'd' → logprob: -3.460891008377075
    7. ' l' → logprob: -3.960891008377075
    8. ' de' → logprob: -4.210890769958496
    9. 'les' → logprob: -5.085890769958496
    10. 'le' → logprob: -5.085890769958496

Token 91: ''autres' (ID: 38753)
  Prédit: 'ivers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivers' → logprob: -0.32561951875686646
    2. 'e' → logprob: -1.8256194591522217
    3. 'es' → logprob: -2.4506194591522217
    4. ''autres' → logprob: -4.325619697570801
    5. 'eux' → logprob: -5.575619697570801
    6. 'iff' → logprob: -5.825619697570801
    7. 'é' → logprob: -5.950619697570801
    8. 'iverse' → logprob: -7.075619697570801
    9. 'iffer' → logprob: -7.075619697570801
    10. '```' → logprob: -7.200619697570801

Token 92: ' context' (ID: 3814)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -1.443524956703186
    2. ' context' → logprob: -1.693524956703186
    3. ' cas' → logprob: -1.943524956703186
    4. ' scripts' → logprob: -2.4435248374938965
    5. 'scripts' → logprob: -2.5685248374938965
    6. 'codes' → logprob: -2.6935248374938965
    7. 'contexts' → logprob: -2.9435248374938965
    8. ' contexts' → logprob: -3.0685248374938965
    9. 'situ' → logprob: -3.4435248374938965
    10. 'cas' → logprob: -4.1935248374938965

Token 93: 'es' (ID: 268)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.20750907063484192
    2. 'ex' → logprob: -1.8325090408325195
    3. 'eurs' → logprob: -4.5825090408325195
    4. 'es' → logprob: -4.5825090408325195
    5. 'e' → logprob: -6.8325090408325195
    6. 'eus' → logprob: -6.8325090408325195
    7. '```' → logprob: -6.9575090408325195
    8. 'ects' → logprob: -7.0825090408325195
    9. 'eux' → logprob: -7.0825090408325195
    10. 'ues' → logprob: -7.7075090408325195

Token 94: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5605288147926331
    2. '<|end|>' → logprob: -0.9355288147926331
    3. 'import' → logprob: -4.435528755187988
    4. '
' → logprob: -4.935528755187988
    5. '```' → logprob: -5.060528755187988
    6. '<|end|>' → logprob: -5.435528755187988
    7. ' ' → logprob: -6.185528755187988
    8. '#' → logprob: -6.435528755187988
    9. ',' → logprob: -7.060528755187988
    10. ' 
' → logprob: -7.685528755187988

Token 95: 'import' (ID: 561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7418696880340576
    2. '<|end|>' → logprob: -1.2418696880340576
    3. 'import' → logprob: -2.3668696880340576
    4. 'collections' → logprob: -3.3668696880340576
    5. ' 
' → logprob: -3.4918696880340576
    6. '#' → logprob: -3.6168696880340576
    7. ' 

' → logprob: -4.241869926452637
    8. 'col' → logprob: -4.616869926452637
    9. 'from' → logprob: -5.116869926452637
    10. '<|end|>' → logprob: -5.241869926452637

Token 96: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0017948969034478068
    2. ' ' → logprob: -6.501794815063477
    3. ' cole' → logprob: -8.876794815063477
    4. ' collection' → logprob: -9.376794815063477
    5. ' space' → logprob: -10.501794815063477
    6. 'collections' → logprob: -11.251794815063477
    7. ' ' → logprob: -11.376794815063477
    8. ' colle' → logprob: -12.001794815063477
    9. ' col' → logprob: -12.126794815063477
    10. ' collect' → logprob: -12.876794815063477

Token 97: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.0005933052161708474
    2. 'col' → logprob: -7.750593185424805
    3. ' ' → logprob: -9.125593185424805
    4. ' co' → logprob: -10.250593185424805
    5. ' ' → logprob: -11.500593185424805
    6. ' cole' → logprob: -12.125593185424805
    7. ' c' → logprob: -13.375593185424805
    8. '	col' → logprob: -14.250593185424805
    9. ' coll' → logprob: -15.625593185424805
    10. ' coli' → logprob: -15.875593185424805

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8529393076896667
    2. '<|end|>' → logprob: -0.9779393076896667
    3. '

' → logprob: -1.7279393672943115
    4. '<|end|>' → logprob: -4.602939128875732
    5. '\n' → logprob: -6.102939128875732
    6. '#' → logprob: -6.352939128875732
    7. ' 

' → logprob: -6.602939128875732
    8. '


' → logprob: -7.227939128875732
    9. ' ' → logprob: -7.352939128875732
    10. '
' → logprob: -7.477939128875732

Token 100: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12820880115032196
    2. '#' → logprob: -3.128208875656128
    3. '<|end|>' → logprob: -3.128208875656128
    4. '

' → logprob: -4.003208637237549
    5. '\n' → logprob: -4.503208637237549
    6. '' → logprob: -6.628208637237549
    7. '
' → logprob: -8.128209114074707
    8. ' ' → logprob: -8.128209114074707
    9. '<|end|>' → logprob: -8.378209114074707
    10. 'n' → logprob: -8.378209114074707

Token 101: ' Import' (ID: 19998)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5354514122009277
    2. 'def' → logprob: -0.9104514122009277
    3. 'import' → logprob: -4.910451412200928
    4. ' ' → logprob: -6.285451412200928
    5. 'd' → logprob: -6.785451412200928
    6. 'from' → logprob: -7.910451412200928
    7. ' def' → logprob: -8.410451889038086
    8. 'data' → logprob: -8.660451889038086
    9. 'class' → logprob: -8.910451889038086
    10. ' #' → logprob: -9.035451889038086

Token 102: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5822287201881409
    2. 'lib' → logprob: -1.832228660583496
    3. ' math' → logprob: -2.332228660583496
    4. 'er' → logprob: -2.707228660583496
    5. ' pandas' → logprob: -3.457228660583496
    6. 'from' → logprob: -4.082228660583496
    7. 'ant' → logprob: -4.582228660583496
    8. ' json' → logprob: -4.707228660583496
    9. ' time' → logprob: -5.082228660583496
    10. ' sys' → logprob: -5.332228660583496

Token 103: ' du' (ID: 1462)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.14985571801662445
    2. ' os' → logprob: -2.149855613708496
    3. ' math' → logprob: -4.524855613708496
    4. ' json' → logprob: -5.274855613708496
    5. ' random' → logprob: -5.649855613708496
    6. ' matplotlib' → logprob: -6.399855613708496
    7. ' sys' → logprob: -7.649855613708496
    8. ' datetime' → logprob: -7.899855613708496
    9. '<|end|>' → logprob: -9.149855613708496
    10. ' csv' → logprob: -9.649855613708496

Token 104: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.49538975954055786
    2. ' os' → logprob: -1.995389699935913
    3. ' sys' → logprob: -2.745389699935913
    4. ' re' → logprob: -2.745389699935913
    5. ' pandas' → logprob: -2.870389699935913
    6. ' random' → logprob: -3.495389699935913
    7. ' json' → logprob: -4.120389938354492
    8. ' matplotlib' → logprob: -4.245389938354492
    9. ' datetime' → logprob: -6.245389938354492
    10. 're' → logprob: -6.495389938354492

Token 105: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.868813693523407
    2. ' math' → logprob: -0.993813693523407
    3. ' pandas' → logprob: -2.7438137531280518
    4. ' re' → logprob: -3.1188137531280518
    5. ' sys' → logprob: -3.2438137531280518
    6. ' random' → logprob: -3.4938137531280518
    7. ' json' → logprob: -3.7438137531280518
    8. ' datetime' → logprob: -5.868813514709473
    9. ' matplotlib' → logprob: -6.243813514709473
    10. ' itertools' → logprob: -6.368813514709473

Token 106: ' qui' (ID: 2780)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' offre' (ID: 32066)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6837023496627808
    2. ' import' → logprob: -1.4337023496627808
    3. ' ' → logprob: -2.9337024688720703
    4. '<|end|>' → logprob: -2.9337024688720703
    5. ' est' → logprob: -3.6837024688720703
    6. ' fournit' → logprob: -3.9337024688720703
    7. ' math' → logprob: -4.05870246887207
    8. ' provides' → logprob: -4.30870246887207
    9. 's' → logprob: -4.30870246887207
    10. ',' → logprob: -4.80870246887207

Token 108: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.027757765725255013
    2. '<|end|>' → logprob: -4.15275764465332
    3. ' ' → logprob: -5.02775764465332
    4. ' les' → logprob: -6.40275764465332
    5. ' math' → logprob: -6.90275764465332
    6. 'des' → logprob: -7.77775764465332
    7. 'import' → logprob: -7.90275764465332
    8. ' diverses' → logprob: -8.02775764465332
    9. '  ' → logprob: -8.27775764465332
    10. 's' → logprob: -8.40275764465332

Token 109: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.3148964047431946
    2. ' functions' → logprob: -1.8148963451385498
    3. ' math' → logprob: -3.43989634513855
    4. ' fonctionnalités' → logprob: -3.56489634513855
    5. ' functionalities' → logprob: -3.68989634513855
    6. '<|end|>' → logprob: -4.439896583557129
    7. 'functions' → logprob: -5.939896583557129
    8. ' funciones' → logprob: -6.814896583557129
    9. ' ' → logprob: -7.314896583557129
    10. 's' → logprob: -7.689896583557129

Token 110: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0079701142385602
    2. 'ématique' → logprob: -4.882970333099365
    3. 'ém' → logprob: -8.382969856262207
    4. 'é' → logprob: -10.132969856262207
    5. 'import' → logprob: -10.257969856262207
    6. 'étiques' → logprob: -10.632969856262207
    7. 'em' → logprob: -11.882969856262207
    8. 'emat' → logprob: -11.882969856262207
    9. 's' → logprob: -12.382969856262207
    10. '<|end|>' → logprob: -12.507969856262207

Token 112: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35283225774765015
    2. '<|end|>' → logprob: -1.352832317352295
    3. '.' → logprob: -4.102832317352295
    4. 'import' → logprob: -4.477832317352295
    5. ',' → logprob: -5.477832317352295
    6. '  ' → logprob: -6.352832317352295
    7. '<|end|>' → logprob: -6.602832317352295
    8. ' ,' → logprob: -6.977832317352295
    9. ' as' → logprob: -6.977832317352295
    10. ' import' → logprob: -7.602832317352295

Token 113: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0339285247027874
    2. ' math' → logprob: -4.158928394317627
    3. 'base' → logprob: -5.283928394317627
    4. ' bases' → logprob: -5.783928394317627
    5. ' ' → logprob: -6.408928394317627
    6. ' bas' → logprob: -6.533928394317627
    7. '<|end|>' → logprob: -6.908928394317627
    8. 's' → logprob: -7.283928394317627
    9. '	base' → logprob: -7.533928394317627
    10. 't' → logprob: -7.658928394317627

Token 114: ' telles' (ID: 83154)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.056434594094753265
    2. 'que' → logprob: -2.9314346313476562
    3. 'import' → logprob: -7.806434631347656
    4. 'qu' → logprob: -7.931434631347656
    5. ' qu' → logprob: -8.056434631347656
    6. '```' → logprob: -8.306434631347656
    7. ' as' → logprob: -9.806434631347656
    8. ' ' → logprob: -9.931434631347656
    9. 'ques' → logprob: -10.681434631347656
    10. 'as' → logprob: -10.681434631347656

Token 116: ' sqrt' (ID: 44237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7451246380805969
    2. ' sqrt' → logprob: -0.8701246380805969
    3. 'sqrt' → logprob: -2.745124578475952
    4. ' math' → logprob: -4.495124816894531
    5. 'cmath' → logprob: -4.870124816894531
    6. 's' → logprob: -5.245124816894531
    7. 'import' → logprob: -5.745124816894531
    8. ',' → logprob: -5.870124816894531
    9. '.sqrt' → logprob: -5.995124816894531
    10. '<|end|>' → logprob: -6.120124816894531

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29779812693595886
    2. '<|end|>' → logprob: -1.4227981567382812
    3. 'import' → logprob: -5.297798156738281
    4. ' ,' → logprob: -5.297798156738281
    5. '<|end|>' → logprob: -5.922798156738281
    6. '.' → logprob: -6.297798156738281
    7. ' ' → logprob: -6.672798156738281
    8. '  ' → logprob: -9.172798156738281
    9. ' and' → logprob: -9.297798156738281
    10. '```' → logprob: -9.547798156738281

Token 118: ' sin' (ID: 2187)
  Prédit: ' sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sin' → logprob: -1.5242902040481567
    2. ' cos' → logprob: -1.5242902040481567
    3. 'sin' → logprob: -2.024290084838867
    4. ' pow' → logprob: -2.274290084838867
    5. ' exp' → logprob: -2.524290084838867
    6. 'cos' → logprob: -3.024290084838867
    7. ' ' → logprob: -3.024290084838867
    8. ' log' → logprob: -3.274290084838867
    9. ' pi' → logprob: -3.774290084838867
    10. 'pow' → logprob: -3.899290084838867

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000678361626341939
    2. ' ,' → logprob: -7.750678539276123
    3. '<|end|>' → logprob: -8.375678062438965
    4. ')' → logprob: -12.250678062438965
    5. ' et' → logprob: -13.375678062438965
    6. ',
' → logprob: -13.500678062438965
    7. 'e' → logprob: -13.750678062438965
    8. '(),' → logprob: -13.875678062438965
    9. ' and' → logprob: -14.000678062438965
    10. 's' → logprob: -14.250678062438965

Token 120: ' log' (ID: 2142)
  Prédit: ' cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cos' → logprob: -0.42900365591049194
    2. 'cos' → logprob: -1.0540037155151367
    3. ' cosine' → logprob: -9.554003715515137
    4. 'log' → logprob: -9.679003715515137
    5. ' ' → logprob: -9.929003715515137
    6. 'import' → logprob: -10.929003715515137
    7. ' log' → logprob: -11.054003715515137
    8. 'atan' → logprob: -11.179003715515137
    9. 'cmath' → logprob: -11.554003715515137
    10. ' pi' → logprob: -12.054003715515137

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045499302446842194
    2. '<|end|>' → logprob: -4.295499324798584
    3. 'import' → logprob: -4.420499324798584
    4. ' ' → logprob: -4.420499324798584
    5. ' ,' → logprob: -6.170499324798584
    6. '.' → logprob: -6.295499324798584
    7. '
' → logprob: -7.545499324798584
    8. 'e' → logprob: -7.920499324798584
    9. '<|end|>' → logprob: -7.920499324798584
    10. 'es' → logprob: -8.045498847961426

Token 122: ' etc' (ID: 5178)
  Prédit: ' cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cos' → logprob: -0.6363046169281006
    2. 'cos' → logprob: -0.7613046169281006
    3. ' exp' → logprob: -6.63630485534668
    4. 'exp' → logprob: -6.63630485534668
    5. ' and' → logprob: -8.76130485534668
    6. 'ceil' → logprob: -9.01130485534668
    7. ',' → logprob: -9.26130485534668
    8. ' ' → logprob: -9.38630485534668
    9. 'cmath' → logprob: -9.51130485534668
    10. ' et' → logprob: -9.88630485534668

Token 123: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0072279698215425014
    2. '
' → logprob: -5.382227897644043
    3. '.' → logprob: -6.882227897644043
    4. ' import' → logprob: -7.507227897644043
    5. '<|end|>' → logprob: -8.007227897644043
    6. ' ' → logprob: -8.257227897644043
    7. ',' → logprob: -8.757227897644043
    8. '' → logprob: -10.132227897644043
    9. '```' → logprob: -10.507227897644043
    10. ' math' → logprob: -10.507227897644043

Token 124: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00015920029545668513
    2. ' import' → logprob: -8.75015926361084
    3. ',' → logprob: -16.000158309936523
    4. '	import' → logprob: -16.250158309936523
    5. ' ' → logprob: -16.750158309936523
    6. '<|end|>' → logprob: -17.000158309936523
    7. 'math' → logprob: -17.125158309936523
    8. 'from' → logprob: -17.250158309936523
    9. ' math' → logprob: -17.375158309936523
    10. ' 
' → logprob: -17.375158309936523

Token 125: ' Dans' (ID: 22082)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.007203590124845505
    2. ' import' → logprob: -5.132203578948975
    3. ' ' → logprob: -7.507203578948975
    4. ' math' → logprob: -8.132204055786133
    5. 'from' → logprob: -8.632204055786133
    6. ' 
' → logprob: -9.382204055786133
    7. 'math' → logprob: -9.882204055786133
    8. '#' → logprob: -10.257204055786133
    9. ' from' → logprob: -11.132204055786133
    10. ' 

' → logprob: -11.507204055786133

Token 126: ' ce' (ID: 2357)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.745297372341156
    2. ' ce' → logprob: -1.2452974319458008
    3. ' this' → logprob: -2.370297431945801
    4. ' le' → logprob: -2.870297431945801
    5. ' ' → logprob: -2.995297431945801
    6. ' la' → logprob: -4.495297431945801
    7. ' cette' → logprob: -4.495297431945801
    8. ' l' → logprob: -5.120297431945801
    9. ' cet' → logprob: -5.620297431945801
    10. ' les' → logprob: -5.995297431945801

Token 127: ' script' (ID: 11713)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.0170024111866951
    2. 'code' → logprob: -4.142002582550049
    3. '#' → logprob: -7.767002582550049
    4. '_code' → logprob: -8.01700210571289
    5. ' cas' → logprob: -10.39200210571289
    6. ' ' → logprob: -11.14200210571289
    7. ' commentaire' → logprob: -11.26700210571289
    8. ' #' → logprob: -11.51700210571289
    9. ' contexte' → logprob: -11.51700210571289
    10. 'cod' → logprob: -11.64200210571289

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12945254147052765
    2. ' ' → logprob: -2.8794524669647217
    3. ' ,' → logprob: -3.0044524669647217
    4. 'import' → logprob: -4.379452705383301
    5. ' import' → logprob: -6.629452705383301
    6. '#' → logprob: -7.504452705383301
    7. '
' → logprob: -7.754452705383301
    8. ' math' → logprob: -8.6294527053833
    9. ' 
' → logprob: -9.0044527053833
    10. '.' → logprob: -9.2544527053833

Token 129: ' il' (ID: 1793)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0938388928771019
    2. 'import' → logprob: -3.093838930130005
    3. 'math' → logprob: -3.593838930130005
    4. ' ' → logprob: -4.968838691711426
    5. ' import' → logprob: -5.218838691711426
    6. ' il' → logprob: -6.093838691711426
    7. ' on' → logprob: -6.593838691711426
    8. ' le' → logprob: -8.843838691711426
    9. ' la' → logprob: -8.968838691711426
    10. 'il' → logprob: -10.093838691711426

Token 130: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.46816739439964294
    2. ' est' → logprob: -1.3431674242019653
    3. ' semble' → logprob: -2.718167304992676
    4. ' sera' → logprob: -3.968167304992676
    5. 'n' → logprob: -4.218167304992676
    6. 'est' → logprob: -5.468167304992676
    7. ' pourrait' → logprob: -6.343167304992676
    8. ' ne' → logprob: -6.468167304992676
    9. 'import' → logprob: -6.968167304992676
    10. ' is' → logprob: -7.093167304992676

Token 131: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6594272255897522
    2. ''est' → logprob: -0.9094272255897522
    3. 'n' → logprob: -3.1594271659851074
    4. ''a' → logprob: -4.159427165985107
    5. 'a' → logprob: -5.409427165985107
    6. ' n' → logprob: -5.784427165985107
    7. '#' → logprob: -6.034427165985107
    8. ''s' → logprob: -6.534427165985107
    9. ''ex' → logprob: -6.534427165985107
    10. 'e' → logprob: -7.034427165985107

Token 132: ' actuellement' (ID: 67741)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.061166130006313324
    2. ' utilisé' → logprob: -3.1861660480499268
    3. 'pas' → logprob: -4.436166286468506
    4. ' ' → logprob: -5.811166286468506
    5. 'import' → logprob: -6.936166286468506
    6. 'util' → logprob: -8.436165809631348
    7. ' import' → logprob: -8.686165809631348
    8. ' jamais' → logprob: -8.936165809631348
    9. ' ' → logprob: -9.061165809631348
    10. ' utilisée' → logprob: -9.186165809631348

Token 133: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.02017780765891075
    2. ' utilisé' → logprob: -4.645177841186523
    3. 'pas' → logprob: -4.770177841186523
    4. 'import' → logprob: -6.645177841186523
    5. ' import' → logprob: -9.020177841186523
    6. 'util' → logprob: -9.395177841186523
    7. ' ' → logprob: -9.395177841186523
    8. ' not' → logprob: -10.020177841186523
    9. ' utilisée' → logprob: -10.645177841186523
    10. '_pas' → logprob: -10.895177841186523

Token 134: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.37091541290283203
    2. 'util' → logprob: -1.245915412902832
    3. 'explicit' → logprob: -4.120915412902832
    4. ' explicit' → logprob: -5.870915412902832
    5. ' used' → logprob: -7.120915412902832
    6. 'import' → logprob: -7.370915412902832
    7. ' utilis' → logprob: -7.745915412902832
    8. ' utilisée' → logprob: -8.120915412902832
    9. ' utilized' → logprob: -8.245915412902832
    10. ' utilisés' → logprob: -8.620915412902832

Token 135: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.2623184621334076
    2. ' but' → logprob: -1.51231849193573
    3. '#' → logprob: -5.8873186111450195
    4. ' ' → logprob: -5.8873186111450195
    5. ' 
' → logprob: -6.7623186111450195
    6. '<|end|>' → logprob: -6.8873186111450195
    7. 'but' → logprob: -7.3873186111450195
    8. ' car' → logprob: -7.6373186111450195
    9. 'mais' → logprob: -7.6373186111450195
    10. 'import' → logprob: -8.88731861114502

Token 137: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.4639894366264343
    2. ' pourrait' → logprob: -1.213989496231079
    3. ' peut' → logprob: -3.963989496231079
    4. ' cela' → logprob: -4.0889892578125
    5. ' on' → logprob: -4.2139892578125
    6. ' ' → logprob: -5.2139892578125
    7. ' c' → logprob: -5.5889892578125
    8. 'il' → logprob: -5.7139892578125
    9. ' ' → logprob: -6.0889892578125
    10. ' pourra' → logprob: -6.4639892578125

Token 138: ' est' (ID: 893)
  Prédit: ' pourrait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pourrait' → logprob: -0.17850475013256073
    2. ' peut' → logprob: -2.178504705429077
    3. ' pourra' → logprob: -3.803504705429077
    4. ' est' → logprob: -4.053504943847656
    5. ' reste' → logprob: -5.428504943847656
    6. ' sera' → logprob: -6.428504943847656
    7. 'est' → logprob: -6.678504943847656
    8. ' could' → logprob: -6.928504943847656
    9. ' might' → logprob: -7.928504943847656
    10. 'pe' → logprob: -8.053504943847656

Token 139: ' maint' (ID: 5425)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.21491298079490662
    2. ' fré' → logprob: -3.3399128913879395
    3. ' possible' → logprob: -3.4649128913879395
    4. ' fréquent' → logprob: -3.9649128913879395
    5. 'cour' → logprob: -3.9649128913879395
    6. 'import' → logprob: -4.5899128913879395
    7. 'possible' → logprob: -4.8399128913879395
    8. ' parfois' → logprob: -4.8399128913879395
    9. ' cour' → logprob: -4.9649128913879395
    10. ' prévu' → logprob: -5.3399128913879395

Token 140: 'enu' (ID: 2323)
  Prédit: 'enu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enu' → logprob: -5.32392441527918e-05
    2. 'enant' → logprob: -11.250053405761719
    3. 'ent' → logprob: -11.375053405761719
    4. 'e' → logprob: -11.500053405761719
    5. 'entu' → logprob: -12.125053405761719
    6. 'enue' → logprob: -12.125053405761719
    7. 'enus' → logprob: -12.625053405761719
    8. 'en' → logprob: -13.250053405761719
    9. 'endu' → logprob: -13.625053405761719
    10. 'ennu' → logprob: -14.875053405761719

Token 141: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' potent' (ID: 35668)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1488442420959473
    2. ' des' → logprob: -1.2738442420959473
    3. 'des' → logprob: -2.1488442420959473
    4. 'pot' → logprob: -2.5238442420959473
    5. 'd' → logprob: -2.7738442420959473
    6. ' une' → logprob: -3.1488442420959473
    7. 'la' → logprob: -4.398844242095947
    8. ' la' → logprob: -4.648844242095947
    9. ' possible' → logprob: -5.023844242095947
    10. 'une' → logprob: -5.023844242095947

Token 143: 'ielle' (ID: 22380)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.467867374420166
    2. 'ial' → logprob: -1.467867374420166
    3. 'iellement' → logprob: -2.592867374420166
    4. 'er' → logprob: -3.342867374420166
    5. 'ient' → logprob: -4.967867374420166
    6. 'ier' → logprob: -5.092867374420166
    7. 'ential' → logprob: -5.842867374420166
    8. 'ière' → logprob: -5.967867374420166
    9. 'ement' → logprob: -5.967867374420166
    10. 'uellement' → logprob: -6.342867374420166

Token 144: ' utilisation' (ID: 80058)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.5968192219734192
    2. ' usage' → logprob: -2.2218191623687744
    3. ' future' → logprob: -2.3468191623687744
    4. 'e' → logprob: -2.4718191623687744
    5. 's' → logprob: -2.8468191623687744
    6. ' utilisation' → logprob: -3.3468191623687744
    7. 'ités' → logprob: -4.0968194007873535
    8. 'l' → logprob: -4.2218194007873535
    9. ' use' → logprob: -4.5968194007873535
    10. 'use' → logprob: -5.5968194007873535

Token 145: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00016027313540689647
    2. ' import' → logprob: -8.750160217285156
    3. '<|end|>' → logprob: -13.500160217285156
    4. '```' → logprob: -15.875160217285156
    5. '	import' → logprob: -16.125160217285156
    6. '#import' → logprob: -16.250160217285156
    7. 'math' → logprob: -17.125160217285156
    8. ''import' → logprob: -17.625160217285156
    9. 'importe' → logprob: -17.875160217285156
    10. '<|end|>' → logprob: -18.125160217285156

Token 147: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.27099974633893e-05
    2. 'math' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.125012397766113
    4. ' ' → logprob: -15.250012397766113
    5. '_math' → logprob: -16.00001335144043
    6. ' maths' → logprob: -16.50001335144043
    7. 'Math' → logprob: -17.00001335144043
    8. ' space' → logprob: -17.25001335144043
    9. ' Math' → logprob: -17.62501335144043
    10. '(math' → logprob: -18.37501335144043

Token 148: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7588040828704834
    2. '<|end|>' → logprob: -1.1338040828704834
    3. '

' → logprob: -1.6338040828704834
    4. '\n' → logprob: -4.7588043212890625
    5. '<|end|>' → logprob: -5.5088043212890625
    6. ' 

' → logprob: -7.8838043212890625
    7. '
' → logprob: -8.133804321289062
    8. '


' → logprob: -8.258804321289062
    9. '```' → logprob: -8.258804321289062
    10. '' → logprob: -8.633804321289062

Token 149: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5057258009910583
    2. '#' → logprob: -1.2557258605957031
    3. '<|end|>' → logprob: -3.005725860595703
    4. '

' → logprob: -3.630725860595703
    5. '\n' → logprob: -4.005725860595703
    6. '\' → logprob: -5.630725860595703
    7. 'def' → logprob: -5.755725860595703
    8. '<|end|>' → logprob: -6.005725860595703
    9. 'n' → logprob: -6.630725860595703
    10. 'import' → logprob: -6.880725860595703

Token 150: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06784425675868988
    2. '#' → logprob: -3.0678441524505615
    3. ' def' → logprob: -4.567844390869141
    4. 'import' → logprob: -5.067844390869141
    5. 'class' → logprob: -7.442844390869141
    6. ' ' → logprob: -7.567844390869141
    7. 'from' → logprob: -7.817844390869141
    8. ' #' → logprob: -8.69284439086914
    9. 'data' → logprob: -8.94284439086914
    10. ' class' → logprob: -9.44284439086914

Token 151: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30425363779067993
    2. '(' → logprob: -1.5542535781860352
    3. ' des' → logprob: -3.929253578186035
    4. '(
' → logprob: -4.804253578186035
    5. ' de' → logprob: -5.179253578186035
    6. ' (' → logprob: -6.054253578186035
    7. ' ' → logprob: -6.054253578186035
    8. 's' → logprob: -6.304253578186035
    9. '("' → logprob: -6.304253578186035
    10. 'des' → logprob: -6.554253578186035

Token 152: ' trois' (ID: 25564)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4313839077949524
    2. ' l' → logprob: -2.0563838481903076
    3. ' les' → logprob: -2.3063838481903076
    4. ' le' → logprob: -2.6813838481903076
    5. ' ' → logprob: -3.9313838481903076
    6. 's' → logprob: -4.556384086608887
    7. ' csv' → logprob: -4.931384086608887
    8. 'l' → logprob: -6.431384086608887
    9. ' data' → logprob: -6.556384086608887
    10. ' une' → logprob: -6.556384086608887

Token 153: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14238114655017853
    2. ' lignes' → logprob: -2.767381191253662
    3. ' espaces' → logprob: -4.142381191253662
    4. ' nombres' → logprob: -4.267381191253662
    5. ' valeurs' → logprob: -4.392381191253662
    6. ' integers' → logprob: -4.767381191253662
    7. '_' → logprob: -5.517381191253662
    8. ' ent' → logprob: -6.017381191253662
    9. ' éléments' → logprob: -6.767381191253662
    10. ' variables' → logprob: -6.892381191253662

Token 154: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.015982527285814285
    2. 'r' → logprob: -4.765982627868652
    3. 'ières' → logprob: -5.140982627868652
    4. 'rees' → logprob: -7.515982627868652
    5. 'ries' → logprob: -8.265982627868652
    6. 'ri' → logprob: -8.390982627868652
    7. 't' → logprob: -9.640982627868652
    8. 'ées' → logprob: -9.765982627868652
    9. 'rée' → logprob: -9.765982627868652
    10. 'êtes' → logprob: -10.015982627868652

Token 155: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3486423194408417
    2. ' a' → logprob: -1.348642349243164
    3. 'n' → logprob: -4.223642349243164
    4. ' n' → logprob: -4.348642349243164
    5. '()' → logprob: -7.098642349243164
    6. 's' → logprob: -7.348642349243164
    7. ' num' → logprob: -7.348642349243164
    8. 'x' → logprob: -7.348642349243164
    9. ' i' → logprob: -7.473642349243164
    10. ' x' → logprob: -7.473642349243164

Token 156: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002002153778448701
    2. 'é' → logprob: -6.377002239227295
    3. 'es' → logprob: -8.252001762390137
    4. 'ès' → logprob: -11.002001762390137
    5. 'ées' → logprob: -11.627001762390137
    6. 'ée' → logprob: -12.377001762390137
    7. 'e' → logprob: -12.502001762390137
    8. 's' → logprob: -13.002001762390137
    9. 'ÉS' → logprob: -13.752001762390137
    10. 'ément' → logprob: -14.377001762390137

Token 157: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.012542732991278172
    2. 's' → logprob: -5.387542724609375
    3. 'par' → logprob: -5.762542724609375
    4. 'es' → logprob: -5.762542724609375
    5. 'e' → logprob: -6.887542724609375
    6. ' ' → logprob: -8.012542724609375
    7. '  ' → logprob: -10.262542724609375
    8. 'és' → logprob: -10.637542724609375
    9. ' espaces' → logprob: -10.637542724609375
    10. 'de' → logprob: -10.762542724609375

Token 158: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0971730947494507
    2. ' des' → logprob: -1.9721730947494507
    3. 'spaces' → logprob: -2.2221732139587402
    4. ' un' → logprob: -2.4721732139587402
    5. ' espace' → logprob: -2.5971732139587402
    6. 'space' → logprob: -2.5971732139587402
    7. 'des' → logprob: -3.0971732139587402
    8. ''espace' → logprob: -3.0971732139587402
    9. ' ' → logprob: -3.4721732139587402
    10. 's' → logprob: -4.47217321395874

Token 159: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.24975576996803284
    2. ' espace' → logprob: -2.749755859375
    3. 'spaces' → logprob: -2.999755859375
    4. ' ' → logprob: -3.249755859375
    5. 'space' → logprob: -3.874755859375
    6. ''espace' → logprob: -3.999755859375
    7. ' des' → logprob: -4.874755859375
    8. 'es' → logprob: -5.249755859375
    9. ' un' → logprob: -5.749755859375
    10. ' spaces' → logprob: -6.249755859375

Token 160: ' depuis' (ID: 16277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07910546660423279
    2. 'n' → logprob: -3.2041053771972656
    3. ' a' → logprob: -3.7041053771972656
    4. 's' → logprob: -5.079105377197266
    5. 'x' → logprob: -7.079105377197266
    6. ' n' → logprob: -7.454105377197266
    7. ' =' → logprob: -7.704105377197266
    8. 'numbers' → logprob: -7.829105377197266
    9. 'user' → logprob: -7.954105377197266
    10. 'ent' → logprob: -8.204105377197266

Token 161: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.44462671875953674
    2. ' l' → logprob: -1.3196266889572144
    3. 'input' → logprob: -2.944626808166504
    4. 'l' → logprob: -4.194626808166504
    5. ' ' → logprob: -4.319626808166504
    6. ' la' → logprob: -4.944626808166504
    7. ' une' → logprob: -6.319626808166504
    8. '=input' → logprob: -7.694626808166504
    9. 'la' → logprob: -8.569626808166504
    10. '	input' → logprob: -8.569626808166504

Token 162: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9687927961349487
    2. ''entrée' → logprob: -1.0937927961349487
    3. ''' → logprob: -1.9687927961349487
    4. 'e' → logprob: -2.7187929153442383
    5. 'input' → logprob: -2.7187929153442383
    6. 'es' → logprob: -5.093792915344238
    7. ''utilisateur' → logprob: -5.718792915344238
    8. ''a' → logprob: -6.593792915344238
    9. 'entrée' → logprob: -7.218792915344238
    10. ' input' → logprob: -7.218792915344238

Token 163: ' standard' (ID: 7024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32328686118125916
    2. ' ' → logprob: -1.5732868909835815
    3. 'a' → logprob: -3.448286771774292
    4. 'n' → logprob: -4.823287010192871
    5. 'r' → logprob: -5.323287010192871
    6. ' a' → logprob: -5.323287010192871
    7. ' =' → logprob: -5.823287010192871
    8. 'e' → logprob: -6.573287010192871
    9. ' n' → logprob: -6.573287010192871
    10. 'm' → logprob: -6.823287010192871

Token 164: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010926486924290657
    2. 'n' → logprob: -5.135926723480225
    3. 'x' → logprob: -5.885926723480225
    4. 'A' → logprob: -6.385926723480225
    5. 'l' → logprob: -8.635926246643066
    6. ' a' → logprob: -8.885926246643066
    7. '3' → logprob: -10.260926246643066
    8. 'abc' → logprob: -10.385926246643066
    9. 's' → logprob: -10.635926246643066
    10. 'L' → logprob: -10.635926246643066

Token 165: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3827475309371948
    2. ')' → logprob: -2.0077476501464844
    3. ' input' → logprob: -2.3827476501464844
    4. 'a' → logprob: -2.8827476501464844
    5. ' )' → logprob: -3.6327476501464844
    6. 'n' → logprob: -6.507747650146484
    7. ' a' → logprob: -7.132747650146484
    8. 's' → logprob: -7.132747650146484
    9. 't' → logprob: -7.257747650146484
    10. ' ' → logprob: -7.507747650146484

Token 166: ' utilisateur' (ID: 115595)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3508540093898773
    2. ' )' → logprob: -1.4758540391921997
    3. '()' → logprob: -2.85085391998291
    4. '())' → logprob: -4.85085391998291
    5. ').' → logprob: -7.60085391998291
    6. '")' → logprob: -8.47585391998291
    7. ')
' → logprob: -8.72585391998291
    8. ' ' → logprob: -9.22585391998291
    9. ' )
' → logprob: -9.22585391998291
    10. 'a' → logprob: -9.35085391998291

Token 167: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055881574749946594
    2. ' )' → logprob: -2.9308815002441406
    3. 'a' → logprob: -8.68088150024414
    4. ',' → logprob: -8.68088150024414
    5. ' ' → logprob: -8.93088150024414
    6. '()' → logprob: -9.05588150024414
    7. '")' → logprob: -9.55588150024414
    8. '')' → logprob: -9.68088150024414
    9. ')
' → logprob: -9.68088150024414
    10. 's' → logprob: -9.93088150024414

Token 168: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00728774257004261
    2. 'A' → logprob: -5.507287979125977
    3. 'x' → logprob: -6.007287979125977
    4. 'n' → logprob: -7.382287979125977
    5. ' a' → logprob: -10.382287979125977
    6. 'l' → logprob: -10.882287979125977
    7. 'abc' → logprob: -11.632287979125977
    8. 'N' → logprob: -11.882287979125977
    9. '```' → logprob: -11.882287979125977
    10. '#' → logprob: -12.257287979125977

Token 169: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006514521315693855
    2. 'x' → logprob: -5.256514549255371
    3. 'A' → logprob: -7.256514549255371
    4. 'n' → logprob: -7.881514549255371
    5. ' a' → logprob: -8.881514549255371
    6. 'l' → logprob: -11.006514549255371
    7. 'X' → logprob: -12.256514549255371
    8. 'N' → logprob: -12.381514549255371
    9. 'L' → logprob: -12.631514549255371
    10. 'k' → logprob: -12.756514549255371

Token 170: ' méthode' (ID: 71490)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40101876854896545
    2. ' a' → logprob: -1.651018738746643
    3. 'n' → logprob: -3.2760188579559326
    4. 's' → logprob: -3.7760188579559326
    5. ' n' → logprob: -4.0260186195373535
    6. ' ligne' → logprob: -4.6510186195373535
    7. 'x' → logprob: -4.9010186195373535
    8. ' valeurs' → logprob: -5.1510186195373535
    9. 'val' → logprob: -5.2760186195373535
    10. 'A' → logprob: -5.2760186195373535

Token 171: ' '' (ID: 461)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2589262127876282
    2. 'input' → logprob: -2.2589261531829834
    3. ' input' → logprob: -2.7589261531829834
    4. ' split' → logprob: -3.6339261531829834
    5. '=input' → logprob: -4.2589263916015625
    6. 's' → logprob: -4.7589263916015625
    7. ' =' → logprob: -5.1339263916015625
    8. 'strip' → logprob: -6.1339263916015625
    9. ' ' → logprob: -7.3839263916015625
    10. '=' → logprob: -7.8839263916015625

Token 172: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.39740416407585144
    2. 'split' → logprob: -1.1474041938781738
    3. 'strip' → logprob: -4.897404193878174
    4. ' input' → logprob: -5.897404193878174
    5. ' split' → logprob: -8.647403717041016
    6. 'rstrip' → logprob: -10.397403717041016
    7. 'map' → logprob: -10.647403717041016
    8. 'spl' → logprob: -11.272403717041016
    9. 's' → logprob: -12.647403717041016
    10. '=input' → logprob: -12.772403717041016

Token 173: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5234076380729675
    2. '().' → logprob: -0.8984076380729675
    3. '()).' → logprob: -9.148407936096191
    4. '').' → logprob: -10.148407936096191
    5. ''' → logprob: -10.398407936096191
    6. '())' → logprob: -10.398407936096191
    7. '().'' → logprob: -10.898407936096191
    8. '('' → logprob: -11.273407936096191
    9. '()"' → logprob: -11.648407936096191
    10. '(' → logprob: -12.023407936096191

Token 174: ''' (ID: 6)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.17996591329574585
    2. '()' → logprob: -1.8049659729003906
    3. '()).' → logprob: -9.92996597290039
    4. '(' → logprob: -10.05496597290039
    5. '())' → logprob: -10.55496597290039
    6. '.split' → logprob: -11.05496597290039
    7. ')' → logprob: -11.17996597290039
    8. 'split' → logprob: -11.17996597290039
    9. ').' → logprob: -11.30496597290039
    10. '()
' → logprob: -11.80496597290039

Token 175: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36194977164268494
    2. '().' → logprob: -1.2369498014450073
    3. 's' → logprob: -5.111949920654297
    4. '.' → logprob: -6.986949920654297
    5. '(' → logprob: -7.236949920654297
    6. 'split' → logprob: -7.236949920654297
    7. ')' → logprob: -7.361949920654297
    8. 'a' → logprob: -8.111949920654297
    9. ',' → logprob: -8.111949920654297
    10. 'data' → logprob: -8.361949920654297

Token 176: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008095468394458294
    2. '().' → logprob: -5.5080952644348145
    3. ' une' → logprob: -6.6330952644348145
    4. ' la' → logprob: -6.7580952644348145
    5. ' l' → logprob: -7.2580952644348145
    6. ' trois' → logprob: -8.633095741271973
    7. '(' → logprob: -8.883095741271973
    8. 'l' → logprob: -9.008095741271973
    9. ' ' → logprob: -9.258095741271973
    10. ' ()' → logprob: -9.633095741271973

Token 177: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.1517789214849472
    2. ' chaîne' → logprob: -2.2767789363861084
    3. 'ligne' → logprob: -4.026778697967529
    4. ' seule' → logprob: -5.026778697967529
    5. 'l' → logprob: -5.776778697967529
    6. ' ' → logprob: -5.901778697967529
    7. ' chaine' → logprob: -6.276778697967529
    8. ' line' → logprob: -6.776778697967529
    9. ' string' → logprob: -6.901778697967529
    10. '()' → logprob: -7.026778697967529

Token 178: ' de' (ID: 334)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3874207139015198
    2. '()' → logprob: -1.137420654296875
    3. '.split' → logprob: -8.762420654296875
    4. ' .' → logprob: -9.512420654296875
    5. 'split' → logprob: -9.637420654296875
    6. 's' → logprob: -10.012420654296875
    7. '(' → logprob: -10.137420654296875
    8. '.' → logprob: -10.387420654296875
    9. '.strip' → logprob: -11.012420654296875
    10. ' ()' → logprob: -11.262420654296875

Token 179: ' texte' (ID: 53492)
  Prédit: ' texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' texte' → logprob: -0.7420206069946289
    2. ' code' → logprob: -1.242020606994629
    3. 'texte' → logprob: -1.742020606994629
    4. 'code' → logprob: -3.117020606994629
    5. ' l' → logprob: -5.492020606994629
    6. ' chaîne' → logprob: -5.992020606994629
    7. 'entrée' → logprob: -6.367020606994629
    8. 's' → logprob: -6.867020606994629
    9. 'chaine' → logprob: -6.867020606994629
    10. 'l' → logprob: -6.867020606994629

Token 180: ';' (ID: 26)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04148433357477188
    2. '()' → logprob: -3.6664843559265137
    3. ' .' → logprob: -5.166484355926514
    4. '.' → logprob: -5.416484355926514
    5. '.split' → logprob: -6.166484355926514
    6. ',' → logprob: -6.916484355926514
    7. 's' → logprob: -7.291484355926514
    8. 'split' → logprob: -7.916484355926514
    9. '.strip' → logprob: -8.916483879089355
    10. ' )' → logprob: -9.666483879089355

Token 181: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21281304955482483
    2. ' a' → logprob: -1.7128130197525024
    3. 'A' → logprob: -5.462812900543213
    4. 'x' → logprob: -5.587812900543213
    5. ' A' → logprob: -6.212812900543213
    6. ' x' → logprob: -7.212812900543213
    7. 'l' → logprob: -9.337813377380371
    8. 'n' → logprob: -9.837813377380371
    9. ' l' → logprob: -9.837813377380371
    10. ' n' → logprob: -10.212813377380371

Token 182: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.031334999948740005
    2. 'map' → logprob: -3.7813351154327393
    3. 'input' → logprob: -5.15633487701416
    4. 'strip' → logprob: -6.28133487701416
    5. ' split' → logprob: -8.53133487701416
    6. ' map' → logprob: -9.53133487701416
    7. 'list' → logprob: -9.78133487701416
    8. ' input' → logprob: -10.15633487701416
    9. '.split' → logprob: -10.40633487701416
    10. 'str' → logprob: -11.53133487701416

Token 183: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018859227420762181
    2. '('' → logprob: -6.376885890960693
    3. ' ()' → logprob: -9.876886367797852
    4. '()`' → logprob: -10.126886367797852
    5. '(' → logprob: -10.251886367797852
    6. '())' → logprob: -11.126886367797852
    7. '().' → logprob: -11.751886367797852
    8. '("' → logprob: -11.876886367797852
    9. '()"' → logprob: -11.876886367797852
    10. '()]' → logprob: -11.876886367797852

Token 184: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008165352046489716
    2. '().' → logprob: -8.250816345214844
    3. '(' → logprob: -8.375816345214844
    4. '('' → logprob: -8.875816345214844
    5. '())' → logprob: -10.000816345214844
    6. ' ()' → logprob: -10.125816345214844
    7. '()`' → logprob: -10.500816345214844
    8. '()
' → logprob: -11.000816345214844
    9. '()

' → logprob: -11.625816345214844
    10. '()]' → logprob: -12.000816345214844

Token 185: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012283235555514693
    2. '(' → logprob: -7.501228332519531
    3. ' ()' → logprob: -8.251228332519531
    4. '().' → logprob: -8.501228332519531
    5. ')' → logprob: -9.876228332519531
    6. '('' → logprob: -10.501228332519531
    7. 'split' → logprob: -10.876228332519531
    8. '())' → logprob: -11.126228332519531
    9. ' )' → logprob: -11.376228332519531
    10. 'spl' → logprob: -11.751228332519531

Token 186: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00027337539358995855
    2. 'par' → logprob: -8.750273704528809
    3. 'p' → logprob: -9.625273704528809
    4. 'para' → logprob: -11.125273704528809
    5. 'parer' → logprob: -11.500273704528809
    6. 'parent' → logprob: -11.625273704528809
    7. 'pa' → logprob: -12.250273704528809
    8. 'paren' → logprob: -12.750273704528809
    9. 'parate' → logprob: -12.875273704528809
    10. 'paration' → logprob: -13.000273704528809

Token 187: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030269217677414417
    2. '('' → logprob: -8.3753023147583
    3. '(' → logprob: -11.2503023147583
    4. ' ()' → logprob: -11.3753023147583
    5. ')' → logprob: -11.5003023147583
    6. 'la' → logprob: -11.6253023147583
    7. '()
' → logprob: -12.2503023147583
    8. '("' → logprob: -12.5003023147583
    9. 'l' → logprob: -12.8753023147583
    10. ' la' → logprob: -13.1253023147583

Token 188: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6592278480529785
    2. ' ligne' → logprob: -1.5342278480529785
    3. 'chaine' → logprob: -2.5342278480529785
    4. ' la' → logprob: -3.1592278480529785
    5. 'ligne' → logprob: -3.4092278480529785
    6. 'la' → logprob: -3.7842278480529785
    7. 's' → logprob: -3.9092278480529785
    8. ' ' → logprob: -4.0342278480529785
    9. ' chaine' → logprob: -4.6592278480529785
    10. '<|end|>' → logprob: -5.1592278480529785

Token 189: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -8.232493564719334e-05
    2. '('' → logprob: -9.750082015991211
    3. '(' → logprob: -11.625082015991211
    4. ' ()' → logprob: -12.250082015991211
    5. '().' → logprob: -12.375082015991211
    6. '("' → logprob: -14.000082015991211
    7. 'par' → logprob: -14.000082015991211
    8. '()
' → logprob: -14.625082015991211
    9. '())' → logprob: -14.875082015991211
    10. '()[' → logprob: -14.875082015991211

Token 190: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4890448749065399
    2. ' une' → logprob: -1.3640449047088623
    3. ' ['' → logprob: -3.1140449047088623
    4. '['' → logprob: -4.239044666290283
    5. ' espaces' → logprob: -4.364044666290283
    6. ' ' → logprob: -4.864044666290283
    7. ' tokens' → logprob: -4.989044666290283
    8. 'des' → logprob: -5.114044666290283
    9. ' trois' → logprob: -5.114044666290283
    10. 'tokens' → logprob: -5.239044666290283

Token 191: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.38649627566337585
    2. 'list' → logprob: -1.8864963054656982
    3. 'liste' → logprob: -1.8864963054656982
    4. ' list' → logprob: -4.761496067047119
    5. 's' → logprob: -5.386496067047119
    6. ' listes' → logprob: -7.011496067047119
    7. 'chaine' → logprob: -7.386496067047119
    8. 'tokens' → logprob: -7.511496067047119
    9. 'str' → logprob: -7.886496067047119
    10. 'lists' → logprob: -8.136496543884277

Token 192: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035119298845529556
    2. '('' → logprob: -6.753511905670166
    3. '<|end|>' → logprob: -7.003511905670166
    4. 'tokens' → logprob: -8.628512382507324
    5. '().' → logprob: -8.878512382507324
    6. '(' → logprob: -9.003512382507324
    7. ')' → logprob: -9.003512382507324
    8. 'des' → logprob: -9.128512382507324
    9. ' ' → logprob: -9.253512382507324
    10. ' des' → logprob: -9.503512382507324

Token 193: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.043256428092718124
    2. 'str' → logprob: -3.7932565212249756
    3. ' strings' → logprob: -5.2932562828063965
    4. 'strings' → logprob: -5.4182562828063965
    5. ' chain' → logprob: -5.7932562828063965
    6. ' tokens' → logprob: -6.5432562828063965
    7. ' chaîne' → logprob: -6.6682562828063965
    8. 'chain' → logprob: -6.9182562828063965
    9. 'chaine' → logprob: -6.9182562828063965
    10. 'tokens' → logprob: -6.9182562828063965

Token 194: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023416096344590187
    2. 'au' → logprob: -5.148416042327881
    3. 's' → logprob: -5.398416042327881
    4. 'de' → logprob: -5.523416042327881
    5. ')' → logprob: -7.148416042327881
    6. ' ()' → logprob: -7.523416042327881
    7. ' )' → logprob: -7.648416042327881
    8. '[]' → logprob: -7.648416042327881
    9. 'tokens' → logprob: -7.773416042327881
    10. 'es' → logprob: -7.773416042327881

Token 195: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.27767086029052734
    2. ' les' → logprob: -2.5276708602905273
    3. ' espaces' → logprob: -2.7776708602905273
    4. ' des' → logprob: -3.4026708602905273
    5. ' ' → logprob: -3.7776708602905273
    6. 'l' → logprob: -4.027670860290527
    7. '<|end|>' → logprob: -4.527670860290527
    8. 'les' → logprob: -5.777670860290527
    9. 'des' → logprob: -6.277670860290527
    10. 'spaces' → logprob: -6.402670860290527

Token 196: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.18311963975429535
    2. 'esp' → logprob: -1.8081196546554565
    3. ''esp' → logprob: -6.183119773864746
    4. 'spaces' → logprob: -6.933119773864746
    5. 'es' → logprob: -9.183119773864746
    6. ''espace' → logprob: -9.433119773864746
    7. ' espacios' → logprob: -9.933119773864746
    8. ' espace' → logprob: -10.683119773864746
    9. '’esp' → logprob: -11.058119773864746
    10. ' spaces' → logprob: -11.058119773864746

Token 197: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3553830683231354
    2. 'user' → logprob: -2.4803831577301025
    3. 'a' → logprob: -2.7303831577301025
    4. '#' → logprob: -3.8553831577301025
    5. ',' → logprob: -3.9803831577301025
    6. 'n' → logprob: -4.230382919311523
    7. 'tokens' → logprob: -4.230382919311523
    8. '()' → logprob: -4.480382919311523
    9. 'input' → logprob: -4.855382919311523
    10. 's' → logprob: -4.980382919311523

Token 198: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0037207419518381357
    2. 'x' → logprob: -6.253720760345459
    3. 'A' → logprob: -6.628720760345459
    4. 'n' → logprob: -7.878720760345459
    5. '```' → logprob: -10.5037202835083
    6. 'l' → logprob: -11.1287202835083
    7. 'r' → logprob: -12.0037202835083
    8. 't' → logprob: -12.1287202835083
    9. 'abc' → logprob: -12.2537202835083
    10. ' a' → logprob: -12.7537202835083

Token 199: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0071320971474051476
    2. 'A' → logprob: -5.757132053375244
    3. 'x' → logprob: -5.882132053375244
    4. 'n' → logprob: -7.382132053375244
    5. 'l' → logprob: -9.257132530212402
    6. ' a' → logprob: -9.382132530212402
    7. 't' → logprob: -10.007132530212402
    8. 'values' → logprob: -10.507132530212402
    9. 'abc' → logprob: -10.632132530212402
    10. 'r' → logprob: -10.632132530212402

Token 200: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06794128566980362
    2. 'a' → logprob: -3.067941188812256
    3. 'list' → logprob: -4.317941188812256
    4. ' map' → logprob: -5.442941188812256
    5. 'int' → logprob: -8.317941665649414
    6. ' a' → logprob: -8.567941665649414
    7. 'input' → logprob: -8.692941665649414
    8. 'ints' → logprob: -8.817941665649414
    9. 'x' → logprob: -8.942941665649414
    10. 'lst' → logprob: -9.192941665649414

Token 201: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007510208524763584
    2. '(' → logprob: -7.25075101852417
    3. 'int' → logprob: -10.500751495361328
    4. '=int' → logprob: -12.750751495361328
    5. '(str' → logprob: -12.875751495361328
    6. '(lambda' → logprob: -13.125751495361328
    7. '[int' → logprob: -13.375751495361328
    8. ']int' → logprob: -13.375751495361328
    9. '<int' → logprob: -13.625751495361328
    10. ' int' → logprob: -14.250751495361328

Token 202: ',' (ID: 11)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.1582850217819214
    2. ',' → logprob: -2.033285140991211
    3. ')' → logprob: -4.408285140991211
    4. ''' → logprob: -6.408285140991211
    5. ','' → logprob: -7.533285140991211
    6. ' )' → logprob: -7.908285140991211
    7. ',input' → logprob: -8.033285140991211
    8. ')`' → logprob: -9.408285140991211
    9. '())' → logprob: -10.158285140991211
    10. '),'' → logprob: -10.283285140991211

Token 203: ' ...' (ID: 2550)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2063017338514328
    2. ' input' → logprob: -1.7063016891479492
    3. ')' → logprob: -5.456301689147949
    4. ' )' → logprob: -8.45630168914795
    5. '(input' → logprob: -8.45630168914795
    6. '...)' → logprob: -9.33130168914795
    7. '[input' → logprob: -10.58130168914795
    8. ' ' → logprob: -11.08130168914795
    9. '...' → logprob: -11.70630168914795
    10. '=input' → logprob: -11.83130168914795

Token 204: ')'' (ID: 45517)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3575458526611328
    2. ')'' → logprob: -1.3575458526611328
    3. '))' → logprob: -4.732545852661133
    4. ')' → logprob: -5.107545852661133
    5. 'input' → logprob: -5.232545852661133
    6. '('' → logprob: -5.357545852661133
    7. ''' → logprob: -5.357545852661133
    8. '(' → logprob: -5.482545852661133
    9. '())' → logprob: -5.607545852661133
    10. '(...' → logprob: -5.732545852661133

Token 205: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.072096087038517
    2. '<|end|>' → logprob: -3.697096109390259
    3. '(' → logprob: -4.19709587097168
    4. ' =' → logprob: -4.82209587097168
    5. ' )' → logprob: -4.94709587097168
    6. '()' → logprob: -5.19709587097168
    7. '(
' → logprob: -6.69709587097168
    8. '<|end|>' → logprob: -7.07209587097168
    9. 'token' → logprob: -7.19709587097168
    10. 's' → logprob: -7.44709587097168

Token 206: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.412296861410141
    2. ')' → logprob: -1.9122968912124634
    3. 'e' → logprob: -2.287296772003174
    4. '(int' → logprob: -3.912296772003174
    5. 'ure' → logprob: -4.537296772003174
    6. '(lambda' → logprob: -4.537296772003174
    7. '()' → logprob: -5.287296772003174
    8. '(
' → logprob: -5.662296772003174
    9. 'eur' → logprob: -5.662296772003174
    10. ' ' → logprob: -5.787296772003174

Token 207: ' chaque' (ID: 21194)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4484984278678894
    2. '(' → logprob: -1.0734984874725342
    3. '(int' → logprob: -4.448498249053955
    4. 'input' → logprob: -6.323498249053955
    5. '(
' → logprob: -6.823498249053955
    6. ')' → logprob: -7.198498249053955
    7. ' input' → logprob: -7.448498249053955
    8. 'l' → logprob: -7.573498249053955
    9. '<|end|>' → logprob: -7.698498249053955
    10. '(lambda' → logprob: -7.948498249053955

Token 208: ' chaîne' (ID: 89288)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19943581521511078
    2. '(' → logprob: -1.949435830116272
    3. ' )' → logprob: -4.074435710906982
    4. '<|end|>' → logprob: -4.699435710906982
    5. ',' → logprob: -5.074435710906982
    6. '(lambda' → logprob: -6.574435710906982
    7. '(int' → logprob: -6.699435710906982
    8. '(
' → logprob: -7.449435710906982
    9. '()' → logprob: -7.699435710906982
    10. 's' → logprob: -7.824435710906982

Token 210: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2810126543045044
    2. ' input' → logprob: -2.156012535095215
    3. 'l' → logprob: -2.281012535095215
    4. 'entrée' → logprob: -4.406012535095215
    5. ' l' → logprob: -5.656012535095215
    6. 'tokens' → logprob: -5.906012535095215
    7. 'la' → logprob: -6.281012535095215
    8. 'str' → logprob: -6.406012535095215
    9. 'split' → logprob: -6.781012535095215
    10. ' la' → logprob: -6.781012535095215

Token 211: ' liste' (ID: 31719)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.46285659074783325
    2. ' input' → logprob: -1.0878565311431885
    3. ' liste' → logprob: -4.212856769561768
    4. 'entrée' → logprob: -4.837856769561768
    5. 'liste' → logprob: -5.712856769561768
    6. ' ligne' → logprob: -6.462856769561768
    7. 'chaine' → logprob: -6.587856769561768
    8. ' entrée' → logprob: -6.587856769561768
    9. ' chaîne' → logprob: -7.212856769561768
    10. 'split' → logprob: -7.337856769561768

Token 212: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20936764776706696
    2. ' en' → logprob: -1.8343676328659058
    3. ' )' → logprob: -4.084367752075195
    4. ',' → logprob: -5.084367752075195
    5. '(input' → logprob: -6.334367752075195
    6. 'en' → logprob: -6.459367752075195
    7. '(' → logprob: -6.834367752075195
    8. 'input' → logprob: -7.584367752075195
    9. '(map' → logprob: -8.709367752075195
    10. ' input' → logprob: -8.709367752075195

Token 213: ' un' (ID: 537)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31476476788520813
    2. 'int' → logprob: -2.0647647380828857
    3. ' des' → logprob: -2.0647647380828857
    4. ' un' → logprob: -4.439764976501465
    5. ' integers' → logprob: -6.439764976501465
    6. ' entier' → logprob: -6.939764976501465
    7. 'ent' → logprob: -7.189764976501465
    8. 'inte' → logprob: -8.439764976501465
    9. ' integer' → logprob: -8.439764976501465
    10. ' ' → logprob: -8.564764976501465

Token 214: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.08901504427194595
    2. 'ent' → logprob: -2.589015007019043
    3. ' ent' → logprob: -5.089015007019043
    4. 'int' → logprob: -6.089015007019043
    5. ' int' → logprob: -7.089015007019043
    6. ' nombre' → logprob: -7.464015007019043
    7. ' integer' → logprob: -9.339015007019043
    8. ' élément' → logprob: -10.464015007019043
    9. ' entière' → logprob: -10.714015007019043
    10. '_ent' → logprob: -10.839015007019043

Token 215: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030155746266245842
    2. '(' → logprob: -4.405155658721924
    3. ' )' → logprob: -5.155155658721924
    4. ',' → logprob: -5.655155658721924
    5. 'tokens' → logprob: -7.030155658721924
    6. '(
' → logprob: -7.280155658721924
    7. '()' → logprob: -7.405155658721924
    8. '(tokens' → logprob: -7.780155658721924
    9. '(x' → logprob: -7.905155658721924
    10. '(a' → logprob: -7.905155658721924

Token 216: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006284848786890507
    2. 'A' → logprob: -5.756284713745117
    3. 'x' → logprob: -6.506284713745117
    4. 'abc' → logprob: -7.256284713745117
    5. ' a' → logprob: -8.381284713745117
    6. 'n' → logprob: -8.881284713745117
    7. 'val' → logprob: -9.006284713745117
    8. 'values' → logprob: -9.506284713745117
    9. 'ABC' → logprob: -10.006284713745117
    10. 't' → logprob: -10.256284713745117

Token 217: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0055835372768342495
    2. 'A' → logprob: -5.505583763122559
    3. 'x' → logprob: -6.630583763122559
    4. ' a' → logprob: -10.130583763122559
    5. 'abc' → logprob: -10.505583763122559
    6. 'X' → logprob: -11.005583763122559
    7. 'n' → logprob: -11.130583763122559
    8. 'l' → logprob: -11.380583763122559
    9. 'T' → logprob: -11.505583763122559
    10. 't' → logprob: -11.630583763122559

Token 218: ',' (ID: 11)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.43726232647895813
    2. 'a' → logprob: -1.1872622966766357
    3. 'x' → logprob: -4.437262535095215
    4. ' x' → logprob: -4.937262535095215
    5. ' A' → logprob: -5.187262535095215
    6. ' nombres' → logprob: -5.562262535095215
    7. ')' → logprob: -5.937262535095215
    8. ',' → logprob: -6.312262535095215
    9. 'A' → logprob: -6.312262535095215
    10. 'values' → logprob: -6.562262535095215

Token 219: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010123406536877155
    2. ' a' → logprob: -4.885123252868652
    3. 'A' → logprob: -6.635123252868652
    4. 'x' → logprob: -7.010123252868652
    5. 't' → logprob: -9.760123252868652
    6. ' A' → logprob: -10.135123252868652
    7. 'abc' → logprob: -10.510123252868652
    8. 'T' → logprob: -10.885123252868652
    9. 'l' → logprob: -10.885123252868652
    10. 'n' → logprob: -11.010123252868652

Token 220: ' trois' (ID: 25564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.053057849407196045
    2. ' a' → logprob: -3.053057909011841
    3. 'x' → logprob: -6.053057670593262
    4. 'A' → logprob: -6.678057670593262
    5. 'ent' → logprob: -8.803057670593262
    6. ' x' → logprob: -8.928057670593262
    7. ' A' → logprob: -8.928057670593262
    8. 'val' → logprob: -9.428057670593262
    9. 'n' → logprob: -9.678057670593262
    10. ' ent' → logprob: -9.928057670593262

Token 221: ' valeurs' (ID: 73668)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6113044619560242
    2. ' a' → logprob: -0.9863044619560242
    3. ' nombres' → logprob: -3.111304521560669
    4. ' integers' → logprob: -4.48630428314209
    5. 'n' → logprob: -4.86130428314209
    6. ' ent' → logprob: -5.48630428314209
    7. 'x' → logprob: -5.73630428314209
    8. ' n' → logprob: -5.98630428314209
    9. 'ent' → logprob: -6.23630428314209
    10. ' valeurs' → logprob: -6.73630428314209

Token 222: ' sont' (ID: 5242)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7053046226501465
    2. ' =' → logprob: -0.9553046226501465
    3. ' a' → logprob: -3.2053046226501465
    4. 'x' → logprob: -3.3303046226501465
    5. 'A' → logprob: -4.7053046226501465
    6. '=' → logprob: -4.7053046226501465
    7. ',' → logprob: -4.8303046226501465
    8. 'n' → logprob: -5.2053046226501465
    9. '=a' → logprob: -5.8303046226501465
    10. 's' → logprob: -6.3303046226501465

Token 223: ' affect' (ID: 7902)
  Prédit: ' unpack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unpack' → logprob: -0.20180857181549072
    2. ' a' → logprob: -2.576808452606201
    3. 'a' → logprob: -3.576808452606201
    4. 'x' → logprob: -3.701808452606201
    5. ' assigned' → logprob: -4.076808452606201
    6. ' x' → logprob: -4.201808452606201
    7. ' assign' → logprob: -5.451808452606201
    8. ' affect' → logprob: -5.576808452606201
    9. ' attrib' → logprob: -5.576808452606201
    10. ' n' → logprob: -5.951808452606201

Token 224: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.48054295778274536
    2. 'u' → logprob: -0.9805429577827454
    3. 'és' → logprob: -5.10554313659668
    4. 'nées' → logprob: -8.98054313659668
    5. 'é' → logprob: -9.23054313659668
    6. 'uée' → logprob: -9.98054313659668
    7. 'ué' → logprob: -10.73054313659668
    8. '=' → logprob: -10.98054313659668
    9. 'ues' → logprob: -11.35554313659668
    10. ' u' → logprob: -11.85554313659668

Token 225: ' aux' (ID: 5850)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14037035405635834
    2. ' ' → logprob: -2.8903703689575195
    3. 'a' → logprob: -3.7653703689575195
    4. ' t' → logprob: -4.5153703689575195
    5. ' i' → logprob: -4.5153703689575195
    6. ' au' → logprob: -4.7653703689575195
    7. ' à' → logprob: -4.8903703689575195
    8. ' x' → logprob: -5.5153703689575195
    9. ' aux' → logprob: -5.7653703689575195
    10. ',' → logprob: -6.5153703689575195

Token 226: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04000529646873474
    2. ' a' → logprob: -3.2900052070617676
    3. 'x' → logprob: -6.790005207061768
    4. 'A' → logprob: -7.290005207061768
    5. ' A' → logprob: -9.665005683898926
    6. ' x' → logprob: -9.665005683898926
    7. ' variables' → logprob: -11.540005683898926
    8. 'variables' → logprob: -12.540005683898926
    9. 'ent' → logprob: -13.165005683898926
    10. 'X' → logprob: -13.290005683898926

Token 227: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12735703587532043
    2. ' a' → logprob: -2.252357006072998
    3. 'x' → logprob: -4.377357006072998
    4. ' x' → logprob: -6.752357006072998
    5. 'n' → logprob: -8.252357482910156
    6. 'A' → logprob: -8.502357482910156
    7. ' n' → logprob: -8.752357482910156
    8. ' A' → logprob: -10.502357482910156
    9. 'i' → logprob: -11.002357482910156
    10. 'X' → logprob: -12.002357482910156

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45517274737358093
    2. '1' → logprob: -1.0801727771759033
    3. ' ,' → logprob: -3.8301727771759033
    4. ' =' → logprob: -6.080172538757324
    5. 'a' → logprob: -8.080172538757324
    6. 'ombre' → logprob: -8.080172538757324
    7. 'um' → logprob: -8.330172538757324
    8. 'b' → logprob: -8.330172538757324
    9. ',n' → logprob: -8.455172538757324
    10. 'umber' → logprob: -8.830172538757324

Token 229: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.38121533393859863
    2. 'a' → logprob: -2.0062153339385986
    3. ' m' → logprob: -2.6312153339385986
    4. 'k' → logprob: -2.8812153339385986
    5. 'x' → logprob: -4.3812150955200195
    6. ' a' → logprob: -4.5062150955200195
    7. 'p' → logprob: -4.5062150955200195
    8. ' k' → logprob: -5.0062150955200195
    9. 'r' → logprob: -5.7562150955200195
    10. ' p' → logprob: -6.2562150955200195

Token 230: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002382249804213643
    2. ' ,' → logprob: -8.875238418579102
    3. ',n' → logprob: -10.375238418579102
    4. 's' → logprob: -10.750238418579102
    5. ',t' → logprob: -12.125238418579102
    6. ',l' → logprob: -12.125238418579102
    7. ',k' → logprob: -12.250238418579102
    8. ',s' → logprob: -12.375238418579102
    9. ',r' → logprob: -12.750238418579102
    10. ',u' → logprob: -12.750238418579102

Token 231: ' d' (ID: 272)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.49094903469085693
    2. 'k' → logprob: -1.240949034690857
    3. ' p' → logprob: -2.6159491539001465
    4. 'p' → logprob: -3.7409491539001465
    5. ' l' → logprob: -7.8659491539001465
    6. ' t' → logprob: -8.365948677062988
    7. ' q' → logprob: -8.365948677062988
    8. ' x' → logprob: -8.615948677062988
    9. 'x' → logprob: -8.865948677062988
    10. 'q' → logprob: -8.990948677062988

Token 232: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3308592736721039
    2. '=' → logprob: -1.4558593034744263
    3. ',' → logprob: -3.7058591842651367
    4. 'e' → logprob: -4.080859184265137
    5. ' ,' → logprob: -5.830859184265137
    6. ' ' → logprob: -6.080859184265137
    7. 'es' → logprob: -8.080859184265137
    8. 'i' → logprob: -8.580859184265137
    9. 'ef' → logprob: -8.705859184265137
    10. '.' → logprob: -9.080859184265137

Token 233: ' respect' (ID: 5618)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.577484130859375
    2. 'n' → logprob: -0.827484130859375
    3. ' ' → logprob: -7.077484130859375
    4. ' =' → logprob: -8.327484130859375
    5. ')' → logprob: -9.327484130859375
    6. '   ' → logprob: -9.452484130859375
    7. ',' → logprob: -10.827484130859375
    8. ' )' → logprob: -10.827484130859375
    9. '  ' → logprob: -10.952484130859375
    10. '=' → logprob: -10.952484130859375

Token 234: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.08589527010917664
    2. 'ant' → logprob: -3.710895299911499
    3. 'ect' → logprob: -3.960895299911499
    4. 'ev' → logprob: -4.33589506149292
    5. 'ent' → logprob: -5.08589506149292
    6. 'vant' → logprob: -5.08589506149292
    7. 'uant' → logprob: -5.96089506149292
    8. 'pect' → logprob: -6.33589506149292
    9. 'ected' → logprob: -6.58589506149292
    10. 'ivant' → logprob: -6.83589506149292

Token 235: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16590915620326996
    2. ' =' → logprob: -2.1659090518951416
    3. '(n' → logprob: -3.6659090518951416
    4. ' n' → logprob: -5.165909290313721
    5. '=' → logprob: -5.540909290313721
    6. ',' → logprob: -6.665909290313721
    7. '=n' → logprob: -7.415909290313721
    8. '[n' → logprob: -8.165908813476562
    9. '(' → logprob: -8.165908813476562
    10. ',n' → logprob: -9.040908813476562

Token 236: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.842555426876061e-06
    2. ' n' → logprob: -12.875004768371582
    3. ' 
' → logprob: -14.500004768371582
    4. '  
' → logprob: -14.625004768371582
    5. '\n' → logprob: -15.000004768371582
    6. '
' → logprob: -15.000004768371582
    7. '```' → logprob: -15.750004768371582
    8. '(n' → logprob: -15.875004768371582
    9. '

' → logprob: -16.2500057220459
    10. ',' → logprob: -16.6250057220459

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ' ,' → logprob: -10.250044822692871
    3. ',m' → logprob: -11.625044822692871
    4. 'm' → logprob: -17.000043869018555
    5. ',
' → logprob: -17.500043869018555
    6. ',d' → logprob: -18.125043869018555
    7. ',n' → logprob: -18.375043869018555
    8. ',

' → logprob: -20.000043869018555
    9. ',b' → logprob: -20.250043869018555
    10. ',\
' → logprob: -20.375043869018555

Token 238: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12692904472351074
    2. 'm' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.00192928314209
    4. ' ' → logprob: -16.001928329467773
    5. ',' → logprob: -17.501928329467773
    6. ' ,' → logprob: -17.751928329467773
    7. '  ' → logprob: -18.126928329467773
    8. ' м' → logprob: -18.376928329467773
    9. ',m' → logprob: -18.501928329467773
    10. '	m' → logprob: -18.876928329467773

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8908587662735954e-05
    2. ',d' → logprob: -11.250019073486328
    3. ' ,' → logprob: -12.375019073486328
    4. 'd' → logprob: -13.625019073486328
    5. '=' → logprob: -15.500019073486328
    6. ' =' → logprob: -15.875019073486328
    7. ' d' → logprob: -19.000019073486328
    8. ',n' → logprob: -19.625019073486328
    9. ',v' → logprob: -19.750019073486328
    10. '_,' → logprob: -19.875019073486328

Token 240: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.575939953327179
    2. ' d' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.700940132141113
    4. '=' → logprob: -16.325939178466797
    5. ' =' → logprob: -16.325939178466797
    6. ' ' → logprob: -16.325939178466797
    7. '_d' → logprob: -17.325939178466797
    8. 's' → logprob: -17.700939178466797
    9. '	d' → logprob: -17.825939178466797
    10. '=d' → logprob: -18.200939178466797

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022798418998718
    2. '=' → logprob: -1.9102280139923096
    3. ',' → logprob: -12.53522777557373
    4. '=input' → logprob: -16.035228729248047
    5. ' =
' → logprob: -16.910228729248047
    6. ')' → logprob: -17.035228729248047
    7. ' ' → logprob: -18.035228729248047
    8. '=

' → logprob: -18.160228729248047
    9. ' ' → logprob: -18.910228729248047
    10. ' =
' → logprob: -18.910228729248047

Token 242: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931473612785339
    2. ' map' → logprob: -0.6931473612785339
    3. '	map' → logprob: -16.318147659301758
    4. '(map' → logprob: -17.693147659301758
    5. 'm' → logprob: -18.068147659301758
    6. ' ' → logprob: -18.068147659301758
    7. ' ' → logprob: -18.693147659301758
    8. 'input' → logprob: -19.068147659301758
    9. '.map' → logprob: -19.193147659301758
    10. 'list' → logprob: -19.568147659301758

Token 243: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02325141802430153
    2. '(' → logprob: -3.773251533508301
    3. '(
' → logprob: -13.3982515335083
    4. ' (' → logprob: -13.7732515335083
    5. '(input' → logprob: -13.8982515335083
    6. 'int' → logprob: -14.0232515335083
    7. '<int' → logprob: -14.2732515335083
    8. '[int' → logprob: -14.7732515335083
    9. '(in' → logprob: -15.3982515335083
    10. '(str' → logprob: -15.6482515335083

Token 244: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.039963483810424805
    2. 'input' → logprob: -3.289963483810425
    3. ',input' → logprob: -6.414963722229004
    4. '(' → logprob: -8.789963722229004
    5. ')' → logprob: -9.664963722229004
    6. ',' → logprob: -10.289963722229004
    7. '=input' → logprob: -10.914963722229004
    8. ' input' → logprob: -11.414963722229004
    9. '<input' → logprob: -13.789963722229004
    10. '(
' → logprob: -14.289963722229004

Token 245: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005530327325686812
    2. ' input' → logprob: -7.500553131103516
    3. '(input' → logprob: -16.500553131103516
    4. '=input' → logprob: -19.250553131103516
    5. ')' → logprob: -19.625553131103516
    6. '<input' → logprob: -20.375553131103516
    7. '	input' → logprob: -21.125553131103516
    8. ',input' → logprob: -21.750553131103516
    9. ' ' → logprob: -22.000553131103516
    10. '.input' → logprob: -22.500553131103516

Token 246: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014406509581021965
    2. '()' → logprob: -8.875144004821777
    3. '())' → logprob: -12.500144004821777
    4. ' ().' → logprob: -15.375144004821777
    5. '(' → logprob: -16.375144958496094
    6. ')' → logprob: -16.500144958496094
    7. '()
' → logprob: -17.125144958496094
    8. '("").' → logprob: -18.375144958496094
    9. '('').' → logprob: -18.375144958496094
    10. '()[' → logprob: -18.625144958496094

Token 247: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020413640595506877
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -15.125204086303711
    4. '(split' → logprob: -15.500204086303711
    5. 'rstrip' → logprob: -15.500204086303711
    6. ')' → logprob: -18.50020408630371
    7. '().' → logprob: -18.62520408630371
    8. 'spl' → logprob: -19.12520408630371
    9. '.split' → logprob: -19.37520408630371
    10. '_split' → logprob: -19.37520408630371

Token 248: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0027861001435667276
    2. '()' → logprob: -6.127786159515381
    3. ')' → logprob: -7.752786159515381
    4. '()))' → logprob: -8.877785682678223
    5. '(' → logprob: -10.752785682678223
    6. ' ())' → logprob: -12.252785682678223
    7. '('' → logprob: -13.252785682678223
    8. '))' → logprob: -13.377785682678223
    9. '())
' → logprob: -14.127785682678223
    10. '());' → logprob: -14.627785682678223

Token 249: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9981946349143982
    2. 'n' → logprob: -1.123194694519043
    3. ' 
' → logprob: -2.498194694519043
    4. 'if' → logprob: -2.998194694519043
    5. '#' → logprob: -3.248194694519043
    6. 'i' → logprob: -3.373194694519043
    7. 'a' → logprob: -3.998194694519043
    8. 'd' → logprob: -4.123194694519043
    9. '\n' → logprob: -4.498194694519043
    10. ' ' → logprob: -4.873194694519043

Token 250: ' Initial' (ID: 9209)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11603932827711105
    2. 'result' → logprob: -3.366039276123047
    3. 'dp' → logprob: -3.991039276123047
    4. 'res' → logprob: -3.991039276123047
    5. 'arr' → logprob: -4.741039276123047
    6. 'a' → logprob: -5.241039276123047
    7. 'count' → logprob: -5.616039276123047
    8. '#' → logprob: -5.866039276123047
    9. 'for' → logprob: -5.991039276123047
    10. 'ans' → logprob: -5.991039276123047

Token 251: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.036147404462099075
    2. 'ization' → logprob: -3.911147356033325
    3. 'iser' → logprob: -4.536147594451904
    4. 'ize' → logprob: -6.036147594451904
    5. 'is' → logprob: -6.786147594451904
    6. '#' → logprob: -8.036147117614746
    7. 'ise' → logprob: -8.286147117614746
    8. 'izing' → logprob: -8.911147117614746
    9. 'er' → logprob: -9.036147117614746
    10. 'izer' → logprob: -9.161147117614746

Token 252: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6526504755020142
    2. ' =' → logprob: -2.0276503562927246
    3. ' d' → logprob: -2.5276503562927246
    4. ')' → logprob: -2.6526503562927246
    5. 'max' → logprob: -2.7776503562927246
    6. '=' → logprob: -2.9026503562927246
    7. ' ' → logprob: -2.9026503562927246
    8. ' de' → logprob: -3.1526503562927246
    9. 's' → logprob: -3.2776503562927246
    10. 'd' → logprob: -3.2776503562927246

Token 253: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.034551739692688
    2. 'res' → logprob: -1.409551739692688
    3. '0' → logprob: -1.784551739692688
    4. 'count' → logprob: -2.9095516204833984
    5. 'ans' → logprob: -3.1595516204833984
    6. 'dp' → logprob: -3.4095516204833984
    7. 'answer' → logprob: -3.5345516204833984
    8. 'max' → logprob: -3.7845516204833984
    9. 'cnt' → logprob: -5.034551620483398
    10. 'total' → logprob: -5.159551620483398

Token 254: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0910890102386475
    2. 'count' → logprob: -1.4660890102386475
    3. 'dp' → logprob: -1.5910890102386475
    4. 'res' → logprob: -2.7160890102386475
    5. 'max' → logprob: -3.5910890102386475
    6. 'distance' → logprob: -4.216089248657227
    7. 'cnt' → logprob: -4.216089248657227
    8. 'comp' → logprob: -4.341089248657227
    9. 'dist' → logprob: -4.591089248657227
    10. 'answer' → logprob: -4.591089248657227

Token 255: ' '' (ID: 461)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.8218680620193481
    2. ' ans' → logprob: -1.8218680620193481
    3. 'result' → logprob: -2.1968679428100586
    4. ' count' → logprob: -2.3218679428100586
    5. 'count' → logprob: -2.8218679428100586
    6. 'res' → logprob: -2.9468679428100586
    7. 'dp' → logprob: -3.1968679428100586
    8. ' dp' → logprob: -3.3218679428100586
    9. ' max' → logprob: -3.5718679428100586
    10. ' cnt' → logprob: -3.6968679428100586

Token 256: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9133759140968323
    2. 'res' → logprob: -1.4133758544921875
    3. 'count' → logprob: -1.9133758544921875
    4. 'ans' → logprob: -3.0383758544921875
    5. 'total' → logprob: -3.0383758544921875
    6. 'dp' → logprob: -4.0383758544921875
    7. 'answer' → logprob: -4.1633758544921875
    8. 'max' → logprob: -4.4133758544921875
    9. 'diff' → logprob: -4.9133758544921875
    10. 'cnt' → logprob: -5.5383758544921875

Token 257: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2786427140235901
    2. ' =' → logprob: -1.5286426544189453
    3. '=' → logprob: -3.6536426544189453
    4. ')' → logprob: -8.653642654418945
    5. ' '' → logprob: -8.903642654418945
    6. ' ='' → logprob: -9.653642654418945
    7. ''=' → logprob: -10.653642654418945
    8. '='' → logprob: -10.903642654418945
    9. ' ' → logprob: -11.903642654418945
    10. 's' → logprob: -12.028642654418945

Token 258: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401321411133
    2. ' =' → logprob: -0.8259401321411133
    3. ',' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.575940132141113
    5. 'ans' → logprob: -16.700939178466797
    6. '0' → logprob: -16.950939178466797
    7. 's' → logprob: -17.075939178466797
    8. '=int' → logprob: -17.575939178466797
    9. ' ' → logprob: -17.700939178466797
    10. ' ans' → logprob: -17.950939178466797

Token 259: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004959304817020893
    2. '1' → logprob: -5.8799591064453125
    3. ' ' → logprob: -7.1299591064453125
    4. 'm' → logprob: -7.8799591064453125
    5. '-' → logprob: -8.004959106445312
    6. 'd' → logprob: -8.254959106445312
    7. 'n' → logprob: -8.629959106445312
    8. '(' → logprob: -10.129959106445312
    9. 'max' → logprob: -10.629959106445312
    10. 'abs' → logprob: -10.629959106445312

Token 260: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11848434805870056
    2. '1' → logprob: -3.3684842586517334
    3. '-' → logprob: -3.6184842586517334
    4. 'd' → logprob: -3.8684842586517334
    5. 'm' → logprob: -4.2434844970703125
    6. 'max' → logprob: -5.2434844970703125
    7. 'abs' → logprob: -6.1184844970703125
    8. 'min' → logprob: -6.2434844970703125
    9. 'n' → logprob: -6.2434844970703125
    10. '100' → logprob: -7.1184844970703125

Token 261: ' flott' (ID: 108700)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.363443523645401
    2. '0' → logprob: -1.2384434938430786
    3. ' =' → logprob: -4.613443374633789
    4. 'd' → logprob: -6.738443374633789
    5. 'n' → logprob: -6.738443374633789
    6. '1' → logprob: -7.363443374633789
    7. '-' → logprob: -7.863443374633789
    8. '=-' → logprob: -7.988443374633789
    9. ' ' → logprob: -8.238443374633789
    10. 'm' → logprob: -8.238443374633789

Token 262: 'ante' (ID: 2116)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.34169653058052063
    2. '-point' → logprob: -2.3416965007781982
    3. ''' → logprob: -2.8416965007781982
    4. '64' → logprob: -3.3416965007781982
    5. '"' → logprob: -3.9666965007781982
    6. 'e' → logprob: -4.216696739196777
    7. '("' → logprob: -4.341696739196777
    8. '(' → logprob: -4.841696739196777
    9. 'inf' → logprob: -4.841696739196777
    10. '0' → logprob: -5.216696739196777

Token 263: ' ' (ID: 220)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3143094778060913
    2. '(' → logprob: -1.4393094778060913
    3. '0' → logprob: -4.439309597015381
    4. '(float' → logprob: -4.814309597015381
    5. '("' → logprob: -5.064309597015381
    6. 'inf' → logprob: -5.564309597015381
    7. '(-' → logprob: -7.189309597015381
    8. ''' → logprob: -7.564309597015381
    9. '('-' → logprob: -7.939309597015381
    10. 'float' → logprob: -8.814309120178223

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15673649311065674
    2. '-' → logprob: -2.781736373901367
    3. 'float' → logprob: -3.156736373901367
    4. '-inf' → logprob: -3.656736373901367
    5. '1' → logprob: -4.531736373901367
    6. 'inf' → logprob: -6.656736373901367
    7. '-f' → logprob: -7.031736373901367
    8. '-m' → logprob: -8.281736373901367
    9. '-n' → logprob: -8.656736373901367
    10. '100' → logprob: -8.656736373901367

Token 265: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001460354425944388
    2. ' ans' → logprob: -7.376460552215576
    3. '0' → logprob: -8.001460075378418
    4. ' ' → logprob: -8.251460075378418
    5. 'ans' → logprob: -8.876460075378418
    6. '=' → logprob: -10.251460075378418
    7. ' =' → logprob: -10.376460075378418
    8. '(ans' → logprob: -11.251460075378418
    9. '.
' → logprob: -12.126460075378418
    10. 'e' → logprob: -12.626460075378418

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5709198117256165
    2. '.' → logprob: -1.0709197521209717
    3. ' ' → logprob: -2.8209197521209717
    4. ' ans' → logprob: -3.4459197521209717
    5. 'ans' → logprob: -7.195919990539551
    6. '(ans' → logprob: -9.94591999053955
    7. ' .' → logprob: -10.19591999053955
    8. '_ans' → logprob: -11.82091999053955
    9. '1' → logprob: -11.94591999053955
    10. '=' → logprob: -12.57091999053955

Token 267: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4660032391548157
    2. ' ans' → logprob: -1.091003179550171
    3. '0' → logprob: -4.21600341796875
    4. ' ' → logprob: -4.34100341796875
    5. 'a' → logprob: -4.84100341796875
    6. '	ans' → logprob: -7.96600341796875
    7. '(ans' → logprob: -9.21600341796875
    8. ' =' → logprob: -9.59100341796875
    9. '=' → logprob: -9.59100341796875
    10. ',' → logprob: -9.59100341796875

Token 268: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.941850526549388e-06
    2. ' ans' → logprob: -12.000007629394531
    3. '0' → logprob: -13.375007629394531
    4. '	ans' → logprob: -16.62500762939453
    5. 'a' → logprob: -16.75000762939453
    6. '(ans' → logprob: -18.00000762939453
    7. '_ans' → logprob: -18.25000762939453
    8. 'answer' → logprob: -18.50000762939453
    9. 'ann' → logprob: -19.37500762939453
    10. 'anst' → logprob: -19.37500762939453

Token 269: ' Cela' (ID: 44403)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00022010602697264403
    2. '0' → logprob: -9.00022029876709
    3. ' ans' → logprob: -9.25022029876709
    4. '	ans' → logprob: -15.25022029876709
    5. 'answer' → logprob: -16.250219345092773
    6. '(ans' → logprob: -16.625219345092773
    7. ' ' → logprob: -17.250219345092773
    8. 'a' → logprob: -17.500219345092773
    9. 'float' → logprob: -17.875219345092773
    10. '_ans' → logprob: -18.000219345092773

Token 270: ' serv' (ID: 2096)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5126963257789612
    2. ' ' → logprob: -1.2626962661743164
    3. ' n' → logprob: -4.012696266174316
    4. 'ans' → logprob: -4.137696266174316
    5. ' =' → logprob: -4.262696266174316
    6. '=' → logprob: -4.262696266174316
    7. 'n' → logprob: -4.262696266174316
    8. '<|end|>' → logprob: -4.512696266174316
    9. '#' → logprob: -5.512696266174316
    10. ' is' → logprob: -5.637696266174316

Token 271: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.046501364558935165
    2. 'ait' → logprob: -3.921501398086548
    3. 'e' → logprob: -4.171501159667969
    4. 'ra' → logprob: -5.296501159667969
    5. 'a' → logprob: -6.171501159667969
    6. 'it' → logprob: -6.546501159667969
    7. 'era' → logprob: -7.421501159667969
    8. 'ant' → logprob: -7.796501159667969
    9. 'ir' → logprob: -8.671501159667969
    10. '#' → logprob: -9.046501159667969

Token 272: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4904053807258606
    2. ' ' → logprob: -1.2404053211212158
    3. ' as' → logprob: -2.490405321121216
    4. ' de' → logprob: -5.490405559539795
    5. ' au' → logprob: -6.115405559539795
    6. ' a' → logprob: -6.740405559539795
    7. ' ' → logprob: -6.740405559539795
    8. 'as' → logprob: -6.865405559539795
    9. ' to' → logprob: -6.990405559539795
    10. ' probablement' → logprob: -7.115405559539795

Token 273: ' stock' (ID: 6546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44306305050849915
    2. 'acc' → logprob: -1.0680630207061768
    3. 'stock' → logprob: -4.693063259124756
    4. ' accum' → logprob: -6.568063259124756
    5. 'calcul' → logprob: -6.818063259124756
    6. 'c' → logprob: -7.693063259124756
    7. 'store' → logprob: -7.943063259124756
    8. '100' → logprob: -8.443062782287598
    9. 'max' → logprob: -8.568062782287598
    10. 's' → logprob: -8.693062782287598

Token 274: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08974192291498184
    2. 'e' → logprob: -2.9647419452667236
    3. ' ' → logprob: -3.7147419452667236
    4. ' =' → logprob: -6.3397417068481445
    5. ' a' → logprob: -6.4647417068481445
    6. '=' → logprob: -6.7147417068481445
    7. 'i' → logprob: -6.8397417068481445
    8. '0' → logprob: -7.3397417068481445
    9. ' e' → logprob: -7.4647417068481445
    10. '  ' → logprob: -7.8397417068481445

Token 275: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4783443510532379
    2. '0' → logprob: -0.9783443212509155
    3. ' la' → logprob: -6.228344440460205
    4. ' ans' → logprob: -7.228344440460205
    5. 'ans' → logprob: -7.728344440460205
    6. ' d' → logprob: -8.853343963623047
    7. ' the' → logprob: -8.853343963623047
    8. ' float' → logprob: -8.978343963623047
    9. ' max' → logprob: -9.353343963623047
    10. ' l' → logprob: -9.478343963623047

Token 276: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0758955478668213
    2. 'max' → logprob: -1.2008955478668213
    3. 'maximum' → logprob: -2.5758955478668213
    4. ' maximum' → logprob: -2.8258955478668213
    5. ' max' → logprob: -2.8258955478668213
    6. 'result' → logprob: -2.8258955478668213
    7. 'answer' → logprob: -3.3258955478668213
    8. '0' → logprob: -3.7008955478668213
    9. ' ans' → logprob: -4.200895309448242
    10. ' result' → logprob: -5.450895309448242

Token 277: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24119089543819427
    2. '<|end|>' → logprob: -2.2411909103393555
    3. ' ans' → logprob: -2.9911909103393555
    4. '.' → logprob: -4.6161909103393555
    5. ',' → logprob: -4.7411909103393555
    6. 'ans' → logprob: -4.8661909103393555
    7. ' =' → logprob: -4.9911909103393555
    8. '=' → logprob: -5.2411909103393555
    9. '0' → logprob: -5.2411909103393555
    10. ' de' → logprob: -5.8661909103393555

Token 278: ' calcul' (ID: 7559)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06440607458353043
    2. ' ' → logprob: -3.564406156539917
    3. 'ans' → logprob: -4.189405918121338
    4. ' la' → logprob: -5.564405918121338
    5. 'max' → logprob: -5.689405918121338
    6. 'd' → logprob: -5.939405918121338
    7. 'float' → logprob: -5.939405918121338
    8. ' d' → logprob: -6.564405918121338
    9. ' max' → logprob: -6.814405918121338
    10. ' ans' → logprob: -7.064405918121338

Token 279: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.051651302725076675
    2. ' ans' → logprob: -4.301651477813721
    3. ' =' → logprob: -4.551651477813721
    4. '  ' → logprob: -4.926651477813721
    5. '=' → logprob: -5.926651477813721
    6. 'a' → logprob: -6.051651477813721
    7. 'e' → logprob: -6.051651477813721
    8. 's' → logprob: -6.176651477813721
    9. '<|end|>' → logprob: -6.301651477813721
    10. ')' → logprob: -6.551651477813721

Token 280: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9166690707206726
    2. ' ans' → logprob: -1.1666691303253174
    3. '0' → logprob: -2.0416691303253174
    4. ')' → logprob: -2.9166691303253174
    5. 'ans' → logprob: -2.9166691303253174
    6. ' )' → logprob: -3.7916691303253174
    7. '<|end|>' → logprob: -5.166668891906738
    8. '=' → logprob: -5.666668891906738
    9. ' #' → logprob: -5.791668891906738
    10. '#' → logprob: -5.791668891906738

Token 281: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8260453939437866
    2. ' =' → logprob: -1.0760453939437866
    3. ' +=' → logprob: -1.9510453939437866
    4. '=' → logprob: -3.451045513153076
    5. ' est' → logprob: -5.076045513153076
    6. ' a' → logprob: -5.201045513153076
    7. ' peut' → logprob: -5.951045513153076
    8. '.' → logprob: -6.201045513153076
    9. ' ' → logprob: -6.201045513153076
    10. ' )' → logprob: -6.201045513153076

Token 282: ' potent' (ID: 35668)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.290515273809433
    2. ' max' → logprob: -2.290515184402466
    3. 'max' → logprob: -2.915515184402466
    4. ' d' → logprob: -3.415515184402466
    5. ' ' → logprob: -3.665515184402466
    6. 'd' → logprob: -4.040515422821045
    7. 'ans' → logprob: -4.540515422821045
    8. ' ans' → logprob: -6.165515422821045
    9. ' float' → logprob: -6.540515422821045
    10. 'float' → logprob: -6.665515422821045

Token 283: 'iellement' (ID: 70958)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.0835268571972847
    2. 'e' → logprob: -3.458526849746704
    3. 'ielle' → logprob: -3.833526849746704
    4. 'al' → logprob: -3.958526849746704
    5. 'ial' → logprob: -6.208527088165283
    6. 'a' → logprob: -6.583527088165283
    7. '=' → logprob: -6.583527088165283
    8. 'iellement' → logprob: -7.208527088165283
    9. 'uel' → logprob: -7.583527088165283
    10. 'i' → logprob: -7.833527088165283

Token 284: ' mod' (ID: 1812)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.5346235036849976
    2. ' accumulated' → logprob: -1.5346235036849976
    3. '0' → logprob: -2.409623622894287
    4. ' ' → logprob: -2.784623622894287
    5. ' accum' → logprob: -2.784623622894287
    6. ' None' → logprob: -3.034623622894287
    7. ' calcul' → logprob: -3.534623622894287
    8. ' max' → logprob: -3.534623622894287
    9. '=' → logprob: -3.659623622894287
    10. ')' → logprob: -3.784623622894287

Token 285: 'ifié' (ID: 49927)
  Prédit: 'ifié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.2021239846944809
    2. 'ifiée' → logprob: -2.0771238803863525
    3. 'if' → logprob: -3.5771238803863525
    4. 'é' → logprob: -4.327124118804932
    5. 'e' → logprob: -5.077124118804932
    6. 'ified' → logprob: -6.077124118804932
    7. 'ifiés' → logprob: -6.577124118804932
    8. 'èle' → logprob: -6.827124118804932
    9. 'ifi' → logprob: -6.952124118804932
    10. 'ifiées' → logprob: -7.077124118804932

Token 286: ' plus' (ID: 2932)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6107166409492493
    2. ' ans' → logprob: -1.7357165813446045
    3. '0' → logprob: -2.2357165813446045
    4. ' ' → logprob: -2.6107165813446045
    5. ',' → logprob: -2.9857165813446045
    6. '.' → logprob: -3.7357165813446045
    7. '(ans' → logprob: -4.985716819763184
    8. '=' → logprob: -5.110716819763184
    9. ' =' → logprob: -5.485716819763184
    10. ')' → logprob: -5.485716819763184

Token 287: ' loin' (ID: 40875)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7606802582740784
    2. 'ans' → logprob: -1.2606801986694336
    3. '.' → logprob: -2.8856801986694336
    4. '=' → logprob: -3.0106801986694336
    5. '_' → logprob: -3.5106801986694336
    6. '<|end|>' → logprob: -4.385680198669434
    7. 'ieurs' → logprob: -4.510680198669434
    8. ' ' → logprob: -4.510680198669434
    9. ' ' → logprob: -4.510680198669434
    10. ')' → logprob: -4.635680198669434

Token 288: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01616140827536583
    2. ')' → logprob: -4.6411614418029785
    3. ' ans' → logprob: -5.6411614418029785
    4. '.' → logprob: -6.7661614418029785
    5. '(ans' → logprob: -7.0161614418029785
    6. '0' → logprob: -7.6411614418029785
    7. '	ans' → logprob: -9.26616096496582
    8. ',' → logprob: -9.51616096496582
    9. '_ans' → logprob: -9.64116096496582
    10. '
' → logprob: -10.51616096496582

Token 289: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.8193366486229934e-05
    2. '0' → logprob: -11.125018119812012
    3. ' ans' → logprob: -12.625018119812012
    4. 'answer' → logprob: -17.625019073486328
    5. '	ans' → logprob: -17.875019073486328
    6. '(ans' → logprob: -18.375019073486328
    7. '_ans' → logprob: -19.375019073486328
    8. 'ann' → logprob: -19.625019073486328
    9. '```' → logprob: -19.625019073486328
    10. 'a' → logprob: -20.375019073486328

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31334564089775085
    2. '=' → logprob: -1.3133456707000732
    3. ' +=' → logprob: -9.688345909118652
    4. ' ' → logprob: -11.938345909118652
    5. '+=' → logprob: -12.188345909118652
    6. ',' → logprob: -12.438345909118652
    7. '.' → logprob: -12.688345909118652
    8. ' ' → logprob: -14.188345909118652
    9. ')' → logprob: -14.563345909118652
    10. '0' → logprob: -15.438345909118652

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005256287753582001
    2. ' ' → logprob: -5.255256175994873
    3. 'float' → logprob: -11.005256652832031
    4. 'd' → logprob: -13.317756652832031
    5. ' float' → logprob: -13.505256652832031
    6. '-' → logprob: -14.505256652832031
    7. '1' → logprob: -14.755256652832031
    8. '.' → logprob: -14.942756652832031
    9. 'n' → logprob: -15.567756652832031
    10. ' -' → logprob: -15.817756652832031

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. 'float' → logprob: -11.250017166137695
    3. ' ' → logprob: -13.250017166137695
    4. 'd' → logprob: -14.500017166137695
    5. '.' → logprob: -15.187517166137695
    6. '-' → logprob: -15.250017166137695
    7. '1' → logprob: -15.500017166137695
    8. 'n' → logprob: -16.000017166137695
    9. 'm' → logprob: -16.625017166137695
    10. '```' → logprob: -16.812517166137695

Token 293: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000396826391806826
    2. '.
' → logprob: -7.875396728515625
    3. '.

' → logprob: -12.125396728515625
    4. '
' → logprob: -12.250396728515625
    5. '0' → logprob: -13.125396728515625
    6. '.
' → logprob: -14.000396728515625
    7. '' → logprob: -14.125396728515625
    8. ' ' → logprob: -15.000396728515625
    9. '.

' → logprob: -15.000396728515625
    10. 'n' → logprob: -15.125396728515625

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006212961161509156
    2. '5' → logprob: -8.00062084197998
    3. '6' → logprob: -8.75062084197998
    4. '1' → logprob: -9.62562084197998
    5. '9' → logprob: -10.37562084197998
    6. '4' → logprob: -11.62562084197998
    7. '2' → logprob: -12.25062084197998
    8. '3' → logprob: -13.00062084197998
    9. '7' → logprob: -13.12562084197998
    10. 'f' → logprob: -13.25062084197998

Token 295: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.396026074886322
    2. 'for' → logprob: -1.5210261344909668
    3. 'i' → logprob: -3.146026134490967
    4. '#' → logprob: -4.021026134490967
    5. ')' → logprob: -4.021026134490967
    6. '<|end|>' → logprob: -4.646026134490967
    7. '.' → logprob: -5.521026134490967
    8. ' if' → logprob: -5.771026134490967
    9. 'n' → logprob: -6.021026134490967
    10. ',' → logprob: -6.396026134490967

Token 296: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27623194456100464
    2. 'for' → logprob: -2.0262320041656494
    3. 'i' → logprob: -2.2762320041656494
    4. '#' → logprob: -6.15123176574707
    5. 'f' → logprob: -6.65123176574707
    6. '
' → logprob: -7.40123176574707
    7. ' if' → logprob: -7.40123176574707
    8. ' ' → logprob: -8.27623176574707
    9. ' for' → logprob: -8.40123176574707
    10. 'n' → logprob: -8.65123176574707

Token 297: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6940951943397522
    2. 'for' → logprob: -0.6940951943397522
    3. 'i' → logprob: -7.319095134735107
    4. '#' → logprob: -8.444095611572266
    5. 'a' → logprob: -11.444095611572266
    6. 'from' → logprob: -11.694095611572266
    7. 'ans' → logprob: -11.944095611572266
    8. 'print' → logprob: -12.569095611572266
    9. 'import' → logprob: -12.569095611572266
    10. 'arr' → logprob: -12.569095611572266

Token 298: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09447620809078217
    2. 'ification' → logprob: -2.4694762229919434
    3. 'ifie' → logprob: -5.344476222991943
    4. 'ifiez' → logprob: -7.844476222991943
    5. 'ifier' → logprob: -9.344475746154785
    6. 'ifi' → logprob: -9.594475746154785
    7. 'ifying' → logprob: -9.969475746154785
    8. 'ify' → logprob: -10.344475746154785
    9. '#' → logprob: -10.844475746154785
    10. 'i' → logprob: -11.094475746154785

Token 299: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12701736390590668
    2. ' if' → logprob: -2.1270172595977783
    3. ' ' → logprob: -10.2520170211792
    4. 'i' → logprob: -11.5020170211792
    5. 'd' → logprob: -11.6270170211792
    6. 'for' → logprob: -11.6270170211792
    7. ',' → logprob: -12.0020170211792
    8. ' d' → logprob: -12.0020170211792
    9. '=' → logprob: -12.8770170211792
    10. ')' → logprob: -13.2520170211792

Token 300: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11887001246213913
    2. 'm' → logprob: -2.4938700199127197
    3. 'n' → logprob: -4.368869781494141
    4. ' d' → logprob: -4.743869781494141
    5. '1' → logprob: -5.993869781494141
    6. '0' → logprob: -5.993869781494141
    7. ' m' → logprob: -6.618869781494141
    8. '(d' → logprob: -7.368869781494141
    9. ' n' → logprob: -7.868869781494141
    10. '(n' → logprob: -8.11886978149414

Token 301: ' condition' (ID: 7060)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015247251838445663
    2. 'm' → logprob: -4.765247344970703
    3. 'n' → logprob: -5.140247344970703
    4. '(d' → logprob: -8.390247344970703
    5. '0' → logprob: -8.765247344970703
    6. 'abs' → logprob: -9.015247344970703
    7. ' d' → logprob: -9.390247344970703
    8. '(n' → logprob: -9.640247344970703
    9. '1' → logprob: -10.140247344970703
    10. '(m' → logprob: -10.515247344970703

Token 302: ' selon' (ID: 27571)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015093892579898238
    2. ' if' → logprob: -6.501509189605713
    3. 'd' → logprob: -12.126509666442871
    4. 'i' → logprob: -14.126509666442871
    5. ':' → logprob: -14.501509666442871
    6. ' d' → logprob: -16.126508712768555
    7. 'n' → logprob: -16.251508712768555
    8. '0' → logprob: -16.501508712768555
    9. ',' → logprob: -16.876508712768555
    10. ' ' → logprob: -17.376508712768555

Token 303: ' laquelle' (ID: 47998)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09412168711423874
    2. ' d' → logprob: -2.4691216945648193
    3. 'n' → logprob: -6.09412145614624
    4. 'm' → logprob: -6.96912145614624
    5. '(d' → logprob: -7.09412145614624
    6. ' n' → logprob: -7.46912145614624
    7. ' m' → logprob: -8.469121932983398
    8. '(n' → logprob: -8.969121932983398
    9. 'if' → logprob: -9.719121932983398
    10. ' la' → logprob: -10.469121932983398

Token 304: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0541544072329998
    2. ' d' → logprob: -3.554154396057129
    3. 'm' → logprob: -4.054154396057129
    4. 'n' → logprob: -5.304154396057129
    5. ' m' → logprob: -6.929154396057129
    6. ' n' → logprob: -7.929154396057129
    7. '0' → logprob: -8.679154396057129
    8. '1' → logprob: -9.179154396057129
    9. '(d' → logprob: -9.929154396057129
    10. ' ' → logprob: -10.054154396057129

Token 305: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9004883766174316
    2. ' >' → logprob: -1.1504883766174316
    3. '>' → logprob: -1.6504883766174316
    4. '!=' → logprob: -2.9004883766174316
    5. ' ==' → logprob: -4.525488376617432
    6. ' <=' → logprob: -5.025488376617432
    7. ' >=' → logprob: -5.525488376617432
    8. '==' → logprob: -6.025488376617432
    9. ' ' → logprob: -6.275488376617432
    10. ' <' → logprob: -6.525488376617432

Token 306: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.717625617980957
    2. 'not' → logprob: -2.092625617980957
    3. ' not' → logprob: -2.217625617980957
    4. '!=' → logprob: -2.717625617980957
    5. ' different' → logprob: -2.842625617980957
    6. ' différent' → logprob: -3.092625617980957
    7. 'different' → logprob: -3.842625617980957
    8. '=' → logprob: -3.842625617980957
    9. ' ' → logprob: -4.092625617980957
    10. '>' → logprob: -4.217625617980957

Token 307: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9014093279838562
    2. '=' → logprob: -1.776409387588501
    3. ' ' → logprob: -1.776409387588501
    4. ' à' → logprob: -1.776409387588501
    5. ' to' → logprob: -3.651409387588501
    6. ' a' → logprob: -4.401409149169922
    7. 'to' → logprob: -4.651409149169922
    8. ')' → logprob: -4.901409149169922
    9. '>' → logprob: -5.151409149169922
    10. '1' → logprob: -5.526409149169922

Token 308: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002593492390587926
    2. '1' → logprob: -6.752593517303467
    3. ' ' → logprob: -6.752593517303467
    4. 'm' → logprob: -8.627593040466309
    5. 'n' → logprob: -9.627593040466309
    6. ' m' → logprob: -13.002593040466309
    7. 'd' → logprob: -13.252593040466309
    8. ' n' → logprob: -13.815093040466309
    9. '-' → logprob: -13.940093040466309
    10. '2' → logprob: -14.377593040466309

Token 309: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11435407400131226
    2. 'if' → logprob: -2.364354133605957
    3. ' if' → logprob: -4.364354133605957
    4. ' :' → logprob: -7.364354133605957
    5. ':
' → logprob: -8.239354133605957
    6. ' ' → logprob: -8.989354133605957
    7. ',' → logprob: -9.364354133605957
    8. 'i' → logprob: -9.739354133605957
    9. '.' → logprob: -9.864354133605957
    10. ')' → logprob: -10.114354133605957

Token 310: ' l' (ID: 305)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16187016665935516
    2. ' :' → logprob: -1.9118701219558716
    3. 'if' → logprob: -7.536870002746582
    4. ' if' → logprob: -7.911870002746582
    5. ' ' → logprob: -7.911870002746582
    6. ')' → logprob: -9.286870002746582
    7. ':
' → logprob: -9.536870002746582
    8. ' :
' → logprob: -9.786870002746582
    9. '.' → logprob: -9.911870002746582
    10. '=' → logprob: -10.786870002746582

Token 311: ''aide' (ID: 75684)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18049529194831848
    2. 'if' → logprob: -2.930495262145996
    3. 'près' → logprob: -3.805495262145996
    4. ')' → logprob: -4.180495262145996
    5. 'fin' → logprob: -4.930495262145996
    6. 'u' → logprob: -5.055495262145996
    7. 'and' → logprob: -5.055495262145996
    8. 'ucune' → logprob: -5.555495262145996
    9. ' ce' → logprob: -5.805495262145996
    10. 'rans' → logprob: -5.805495262145996

Token 312: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8998360633850098
    2. 'if' → logprob: -1.7748360633850098
    3. ' de' → logprob: -1.8998360633850098
    4. ' d' → logprob: -2.3998360633850098
    5. ' if' → logprob: -2.3998360633850098
    6. ' :' → logprob: -3.2748360633850098
    7. ' of' → logprob: -3.6498360633850098
    8. ' ' → logprob: -4.64983606338501
    9. '(' → logprob: -5.39983606338501
    10. ' (' → logprob: -6.02483606338501

Token 313: ''une' (ID: 13337)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8670797348022461
    2. 'une' → logprob: -1.867079734802246
    3. ''une' → logprob: -1.867079734802246
    4. ' une' → logprob: -1.992079734802246
    5. ' if' → logprob: -2.867079734802246
    6. ''un' → logprob: -3.867079734802246
    7. ' an' → logprob: -3.992079734802246
    8. 'n' → logprob: -4.992079734802246
    9. 'e' → logprob: -5.242079734802246
    10. 'a' → logprob: -5.367079734802246

Token 314: ' instruction' (ID: 21179)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09154221415519714
    2. ' if' → logprob: -2.4665422439575195
    3. ':' → logprob: -5.9665422439575195
    4. ' :' → logprob: -11.21654224395752
    5. ' condition' → logprob: -12.46654224395752
    6. '==' → logprob: -12.84154224395752
    7. '=' → logprob: -13.09154224395752
    8. ' ==' → logprob: -13.34154224395752
    9. 'condition' → logprob: -13.46654224395752
    10. '>' → logprob: -13.59154224395752

Token 315: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4741095006465912
    2. ' if' → logprob: -0.9741095304489136
    3. ':' → logprob: -10.349109649658203
    4. ' :' → logprob: -16.099109649658203
    5. 'ifs' → logprob: -16.474109649658203
    6. 'If' → logprob: -16.599109649658203
    7. '.' → logprob: -16.849109649658203
    8. 'iff' → logprob: -17.099109649658203
    9. ' ' → logprob: -17.474109649658203
    10. '(if' → logprob: -17.974109649658203

Token 316: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0045363386161625385
    2. ' :' → logprob: -5.504536151885986
    3. ':
' → logprob: -7.879536151885986
    4. 'if' → logprob: -10.379536628723145
    5. ' :
' → logprob: -10.629536628723145
    6. ' if' → logprob: -11.004536628723145
    7. ' ' → logprob: -13.629536628723145
    8. '.' → logprob: -13.879536628723145
    9. ',' → logprob: -14.004536628723145
    10. '):' → logprob: -14.004536628723145

Token 317: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2502596080303192
    2. 'if' → logprob: -1.6252596378326416
    3. ':
' → logprob: -4.3752593994140625
    4. ' if' → logprob: -4.5002593994140625
    5. ' 
' → logprob: -8.000259399414062
    6. ' :' → logprob: -9.000259399414062
    7. '
' → logprob: -9.125259399414062
    8. '  
' → logprob: -9.250259399414062
    9. '[' → logprob: -9.750259399414062
    10. ' :
' → logprob: -10.000259399414062

Token 318: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.038045283406972885
    2. 'd' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.413044929504395
    4. ' ' → logprob: -13.788044929504395
    5. '(d' → logprob: -14.913044929504395
    6. '	d' → logprob: -14.913044929504395
    7. '_d' → logprob: -15.788044929504395
    8. '0' → logprob: -16.16304588317871
    9. ')d' → logprob: -16.41304588317871
    10. '   ' → logprob: -16.91304588317871

Token 319: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39064520597457886
    2. ' ==' → logprob: -1.1406452655792236
    3. '!=' → logprob: -6.3906450271606445
    4. ' !=' → logprob: -6.6406450271606445
    5. '=' → logprob: -8.015645027160645
    6. '>' → logprob: -8.515645027160645
    7. ':' → logprob: -9.140645027160645
    8. ' ' → logprob: -10.515645027160645
    9. ' >' → logprob: -10.640645027160645
    10. '0' → logprob: -10.765645027160645

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. ' ' → logprob: -18.75037956237793
    4. '  ' → logprob: -18.75037956237793
    5. '=' → logprob: -18.87537956237793
    6. '   ' → logprob: -19.37537956237793
    7. '۰' → logprob: -19.37537956237793
    8. '０' → logprob: -20.12537956237793
    9. '  
' → logprob: -20.31287956237793
    10. '1' → logprob: -20.37537956237793

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -20.625009536743164
    4. '۰' → logprob: -20.875009536743164
    5. '=' → logprob: -21.375009536743164
    6. '  ' → logprob: -21.562509536743164
    7. '０' → logprob: -21.625009536743164
    8. '00' → logprob: -22.187509536743164
    9. '```' → logprob: -22.250009536743164
    10. ' ' → logprob: -22.375009536743164

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0297965370118618
    2. ':
' → logprob: -3.529796600341797
    3. ' :' → logprob: -10.154796600341797
    4. ':
' → logprob: -12.279796600341797
    5. ' :
' → logprob: -13.279796600341797
    6. ':

' → logprob: -14.779796600341797
    7. '):' → logprob: -16.154796600341797
    8. ':#' → logprob: -16.279796600341797
    9. ':\' → logprob: -16.779796600341797
    10. '.' → logprob: -17.154796600341797

Token 323: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010421219281852245
    2. ':
' → logprob: -4.635421276092529
    3. ' :' → logprob: -7.760421276092529
    4. 'print' → logprob: -9.385420799255371
    5. 'ans' → logprob: -9.885420799255371
    6. '   ' → logprob: -10.260420799255371
    7. '):' → logprob: -10.510420799255371
    8. ')' → logprob: -11.385420799255371
    9. ' :
' → logprob: -11.760420799255371
    10. ' print' → logprob: -12.135420799255371

Token 324: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5883617401123047
    2. 'print' → logprob: -0.8383617401123047
    3. '   ' → logprob: -4.713361740112305
    4. ' ans' → logprob: -6.838361740112305
    5. ':' → logprob: -7.088361740112305
    6. ' print' → logprob: -7.588361740112305
    7. '
' → logprob: -7.713361740112305
    8. '(ans' → logprob: -9.213361740112305
    9. ':
' → logprob: -9.588361740112305
    10. '	ans' → logprob: -9.838361740112305

Token 325: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3134526312351227
    2. 'print' → logprob: -1.3134526014328003
    3. 'if' → logprob: -9.06345272064209
    4. '   ' → logprob: -10.56345272064209
    5. 'answer' → logprob: -11.18845272064209
    6. '#' → logprob: -12.31345272064209
    7. 'for' → logprob: -12.43845272064209
    8. ' ans' → logprob: -12.56345272064209
    9. '(ans' → logprob: -12.56345272064209
    10. 'import' → logprob: -13.06345272064209

Token 326: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1202127933502197
    2. ' ans' → logprob: -1.3702127933502197
    3. 'ans' → logprob: -1.4952127933502197
    4. ' print' → logprob: -1.8702127933502197
    5. '   ' → logprob: -3.2452127933502197
    6. '
' → logprob: -6.745212554931641
    7. '	ans' → logprob: -8.12021255493164
    8. '(ans' → logprob: -8.24521255493164
    9. '    
' → logprob: -9.12021255493164
    10. '#' → logprob: -9.49521255493164

Token 327: 'd' (ID: 67)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3558562099933624
    2. 'ans' → logprob: -1.23085618019104
    3. 'n' → logprob: -5.230856418609619
    4. 'm' → logprob: -6.480856418609619
    5. '0' → logprob: -8.855855941772461
    6. ' print' → logprob: -9.230855941772461
    7. ' ans' → logprob: -9.480855941772461
    8. '1' → logprob: -10.105855941772461
    9. '(ans' → logprob: -10.230855941772461
    10. 'answer' → logprob: -10.355855941772461

Token 328: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14218531548976898
    2. '==' → logprob: -2.7671852111816406
    3. ':' → logprob: -2.8921852111816406
    4. ' :' → logprob: -5.142185211181641
    5. '   ' → logprob: -6.267185211181641
    6. '=' → logprob: -6.892185211181641
    7. ' >' → logprob: -7.017185211181641
    8. ' =' → logprob: -7.142185211181641
    9. ')' → logprob: -7.392185211181641
    10. '>' → logprob: -7.392185211181641

Token 329: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.336889386177063
    2. ' =' → logprob: -1.336889386177063
    3. ' ==' → logprob: -1.461889386177063
    4. ':' → logprob: -2.0868892669677734
    5. '==' → logprob: -2.7118892669677734
    6. ' +=' → logprob: -3.5868892669677734
    7. '+=' → logprob: -4.586889266967773
    8. ' :' → logprob: -6.086889266967773
    9. '   ' → logprob: -6.211889266967773
    10. ' ' → logprob: -6.211889266967773

Token 330: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7511821389198303
    2. 'n' → logprob: -1.7511820793151855
    3. 'm' → logprob: -2.2511820793151855
    4. ' n' → logprob: -2.5011820793151855
    5. ' ' → logprob: -3.0011820793151855
    6. '1' → logprob: -3.1261820793151855
    7. ' m' → logprob: -3.3761820793151855
    8. '   ' → logprob: -3.5011820793151855
    9. '=' → logprob: -5.7511820793151855
    10. 'print' → logprob: -7.1261820793151855

Token 331: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14552202820777893
    2. ':
' → logprob: -2.020522117614746
    3. ',' → logprob: -6.520522117614746
    4. '   ' → logprob: -6.895522117614746
    5. ' :' → logprob: -8.645522117614746
    6. ' :
' → logprob: -9.770522117614746
    7. 'ans' → logprob: -9.895522117614746
    8. 'print' → logprob: -10.270522117614746
    9. ',
' → logprob: -12.145522117614746
    10. '.' → logprob: -12.145522117614746

Token 332: ' alors' (ID: 17971)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7535440921783447
    2. '   ' → logprob: -1.0035440921783447
    3. ' ans' → logprob: -2.3785440921783447
    4. 'print' → logprob: -2.7535440921783447
    5. ' print' → logprob: -5.378543853759766
    6. '
' → logprob: -7.253543853759766
    7. '	ans' → logprob: -7.503543853759766
    8. '    
' → logprob: -9.128543853759766
    9. '(ans' → logprob: -9.378543853759766
    10. '  ' → logprob: -9.878543853759766

Token 333: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7233808636665344
    2. 'ans' → logprob: -1.3483808040618896
    3. '   ' → logprob: -1.4733808040618896
    4. ' ans' → logprob: -4.348381042480469
    5. ' print' → logprob: -4.598381042480469
    6. '
' → logprob: -6.223381042480469
    7. '(ans' → logprob: -8.473381042480469
    8. '    
' → logprob: -8.598381042480469
    9. '	ans' → logprob: -8.598381042480469
    10. 'if' → logprob: -9.348381042480469

Token 334: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2255651354789734
    2. 'print' → logprob: -1.6005651950836182
    3. ' ans' → logprob: -10.350564956665039
    4. 'answer' → logprob: -10.725564956665039
    5. 'if' → logprob: -10.975564956665039
    6. '#' → logprob: -10.975564956665039
    7. 'pr' → logprob: -11.475564956665039
    8. ' print' → logprob: -11.600564956665039
    9. '   ' → logprob: -11.850564956665039
    10. '(ans' → logprob: -11.850564956665039

Token 335: ' '' (ID: 461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06207871064543724
    2. ' =' → logprob: -2.8120787143707275
    3. '+=' → logprob: -9.812078475952148
    4. 'ans' → logprob: -10.562078475952148
    5. 'print' → logprob: -11.937078475952148
    6. ' +=' → logprob: -12.312078475952148
    7. '=n' → logprob: -12.937078475952148
    8. 's' → logprob: -12.937078475952148
    9. '=s' → logprob: -13.187078475952148
    10. '.' → logprob: -13.437078475952148

Token 336: 'ans' (ID: 616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7090100049972534
    2. 'ans' → logprob: -0.7090100049972534
    3. 'print' → logprob: -4.209010124206543
    4. ' =' → logprob: -7.459010124206543
    5. '+=' → logprob: -8.959010124206543
    6. '(ans' → logprob: -10.209010124206543
    7. ' ans' → logprob: -11.084010124206543
    8. '_ans' → logprob: -11.459010124206543
    9. '1' → logprob: -11.709010124206543
    10. '	ans' → logprob: -11.959010124206543

Token 337: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34960365295410156
    2. '=' → logprob: -1.2246036529541016
    3. ' +=' → logprob: -7.099603652954102
    4. '+=' → logprob: -8.474603652954102
    5. '=n' → logprob: -9.724603652954102
    6. '   ' → logprob: -10.599603652954102
    7. ')' → logprob: -11.474603652954102
    8. ' ' → logprob: -11.724603652954102
    9. '=s' → logprob: -12.974603652954102
    10. '=num' → logprob: -13.099603652954102

Token 338: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11303164064884186
    2. ' =' → logprob: -2.2380316257476807
    3. '+=' → logprob: -8.738031387329102
    4. ' +=' → logprob: -10.238031387329102
    5. '=n' → logprob: -11.738031387329102
    6. ' ' → logprob: -14.488031387329102
    7. '=int' → logprob: -14.613031387329102
    8. '=num' → logprob: -14.613031387329102
    9. '=s' → logprob: -15.113031387329102
    10. '   ' → logprob: -15.113031387329102

Token 339: ' calcul' (ID: 7559)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3339956998825073
    2. 'n' → logprob: -1.7089956998825073
    3. ' float' → logprob: -1.9589956998825073
    4. 'float' → logprob: -1.9589956998825073
    5. 'm' → logprob: -2.333995819091797
    6. '1' → logprob: -2.833995819091797
    7. '   ' → logprob: -3.458995819091797
    8. ' m' → logprob: -3.458995819091797
    9. ' ' → logprob: -4.083995819091797
    10. '0' → logprob: -4.208995819091797

Token 340: 'é' (ID: 377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1649455726146698
    2. 'é' → logprob: -1.9149456024169922
    3. 'ated' → logprob: -6.164945602416992
    4. 'er' → logprob: -6.539945602416992
    5. ' =' → logprob: -7.789945602416992
    6. 'e' → logprob: -8.289945602416992
    7. '   ' → logprob: -8.539945602416992
    8. 'ée' → logprob: -9.039945602416992
    9. '=(' → logprob: -10.914945602416992
    10. 'ed' → logprob: -11.039945602416992

Token 341: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004107846412807703
    2. ' =' → logprob: -5.50410795211792
    3. '+=' → logprob: -10.879107475280762
    4. '=n' → logprob: -12.754107475280762
    5. '=

' → logprob: -13.379107475280762
    6. '=
' → logprob: -13.629107475280762
    7. '   ' → logprob: -13.754107475280762
    8. '=m' → logprob: -13.879107475280762
    9. 'n' → logprob: -14.129107475280762
    10. ' +=' → logprob: -14.754107475280762

Token 342: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7847659587860107
    2. 'm' → logprob: -1.1597659587860107
    3. 'float' → logprob: -2.0347659587860107
    4. '1' → logprob: -2.9097659587860107
    5. ' n' → logprob: -4.03476619720459
    6. ' float' → logprob: -4.53476619720459
    7. ' m' → logprob: -5.40976619720459
    8. '(float' → logprob: -6.03476619720459
    9. 'pow' → logprob: -6.03476619720459
    10. '(n' → logprob: -6.28476619720459

Token 343: ' quotient' (ID: 169302)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.715006411075592
    2. 'n' → logprob: -0.965006411075592
    3. 'float' → logprob: -2.0900063514709473
    4. ' float' → logprob: -5.590006351470947
    5. '1' → logprob: -6.840006351470947
    6. ' n' → logprob: -7.715006351470947
    7. ' m' → logprob: -8.590006828308105
    8. 'nm' → logprob: -8.840006828308105
    9. 'pow' → logprob: -9.215006828308105
    10. 'f' → logprob: -9.715006828308105

Token 344: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06220731884241104
    2. ' =' → logprob: -3.6872072219848633
    3. 'n' → logprob: -4.062207221984863
    4. 'm' → logprob: -4.187207221984863
    5. '=n' → logprob: -7.187207221984863
    6. ' of' → logprob: -7.312207221984863
    7. ' n' → logprob: -7.937207221984863
    8. 'of' → logprob: -7.937207221984863
    9. ' de' → logprob: -8.062207221984863
    10. '=m' → logprob: -8.562207221984863

Token 345: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25610652565956116
    2. 'm' → logprob: -1.5061064958572388
    3. '(n' → logprob: -6.006106376647949
    4. '1' → logprob: -7.131106376647949
    5. '(m' → logprob: -7.881106376647949
    6. ' n' → logprob: -8.63110637664795
    7. '(' → logprob: -8.75610637664795
    8. 'float' → logprob: -10.00610637664795
    9. '0' → logprob: -10.25610637664795
    10. ' m' → logprob: -10.50610637664795

Token 346: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06891848891973495
    2. ' n' → logprob: -2.818918466567993
    3. ' de' → logprob: -6.193918704986572
    4. 'm' → logprob: -6.193918704986572
    5. '1' → logprob: -6.568918704986572
    6. 'de' → logprob: -7.693918704986572
    7. '0' → logprob: -8.568918228149414
    8. 'total' → logprob: -8.568918228149414
    9. 'of' → logprob: -8.818918228149414
    10. ' of' → logprob: -9.068918228149414

Token 347: 'm' (ID: 76)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0874718502163887
    2. 'm' → logprob: -2.7124719619750977
    3. ' n' → logprob: -4.212471961975098
    4. '(n' → logprob: -6.837471961975098
    5. ' m' → logprob: -7.212471961975098
    6. '1' → logprob: -7.587471961975098
    7. '(' → logprob: -9.712471961975098
    8. '(m' → logprob: -9.837471961975098
    9. ' (' → logprob: -10.212471961975098
    10. ')n' → logprob: -10.962471961975098

Token 348: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2248607873916626
    2. ' -' → logprob: -2.974860668182373
    3. '+' → logprob: -3.099860668182373
    4. ')' → logprob: -3.224860668182373
    5. '*' → logprob: -3.724860668182373
    6. ' *' → logprob: -4.724860668182373
    7. '**' → logprob: -4.849860668182373
    8. ' +' → logprob: -5.099860668182373
    9. '*n' → logprob: -5.474860668182373
    10. 'n' → logprob: -5.849860668182373

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015205761883407831
    2. ' ' → logprob: -7.12652063369751
    3. 'n' → logprob: -7.50152063369751
    4. '2' → logprob: -9.626520156860352
    5. ' n' → logprob: -9.751520156860352
    6. '0' → logprob: -10.376520156860352
    7. 'd' → logprob: -12.501520156860352
    8. 'm' → logprob: -14.189020156860352
    9. 's' → logprob: -14.376520156860352
    10. '(' → logprob: -14.689020156860352

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018203625222668052
    2. 'n' → logprob: -6.3768205642700195
    3. ' ' → logprob: -10.00182056427002
    4. '2' → logprob: -10.37682056427002
    5. '0' → logprob: -10.62682056427002
    6. 'm' → logprob: -11.87682056427002
    7. 'd' → logprob: -12.87682056427002
    8. '(n' → logprob: -12.87682056427002
    9. ' n' → logprob: -13.25182056427002
    10. '(' → logprob: -14.06432056427002

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030036121606826782
    2. ')*' → logprob: -6.6280035972595215
    3. '+' → logprob: -7.1280035972595215
    4. ')**' → logprob: -8.25300407409668
    5. ' )' → logprob: -8.50300407409668
    6. ')/' → logprob: -9.12800407409668
    7. ')*(' → logprob: -9.25300407409668
    8. '*' → logprob: -9.62800407409668
    9. ' +' → logprob: -9.75300407409668
    10. ' *' → logprob: -11.25300407409668

Token 352: ' et' (ID: 859)
  Prédit: '/n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.5175345540046692
    2. '/' → logprob: -1.7675344944000244
    3. ' /' → logprob: -1.8925344944000244
    4. ' *' → logprob: -3.2675344944000244
    5. '*' → logprob: -3.2675344944000244
    6. '*n' → logprob: -5.7675347328186035
    7. '/m' → logprob: -7.0175347328186035
    8. '+' → logprob: -7.2675347328186035
    9. ' n' → logprob: -8.142534255981445
    10. ' ' → logprob: -8.267534255981445

Token 353: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6417717337608337
    2. ' n' → logprob: -0.7667717337608337
    3. '(n' → logprob: -5.7667717933654785
    4. ' (' → logprob: -5.7667717933654785
    5. 'm' → logprob: -6.3917717933654785
    6. ' m' → logprob: -8.01677131652832
    7. '(' → logprob: -8.01677131652832
    8. '2' → logprob: -8.39177131652832
    9. ' float' → logprob: -9.39177131652832
    10. 'float' → logprob: -9.64177131652832

Token 354: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018558766692876816
    2. ' n' → logprob: -4.643558979034424
    3. 'm' → logprob: -5.393558979034424
    4. '2' → logprob: -6.018558979034424
    5. '(n' → logprob: -6.518558979034424
    6. '(' → logprob: -8.643558502197266
    7. ' ' → logprob: -10.143558502197266
    8. ' m' → logprob: -10.393558502197266
    9. '1' → logprob: -10.768558502197266
    10. ' (' → logprob: -11.393558502197266

Token 355: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28184834122657776
    2. '*' → logprob: -2.531848430633545
    3. ',' → logprob: -3.531848430633545
    4. ')' → logprob: -3.781848430633545
    5. '/' → logprob: -3.906848430633545
    6. ' /' → logprob: -4.156848430633545
    7. '**' → logprob: -4.156848430633545
    8. '/n' → logprob: -4.406848430633545
    9. ' *' → logprob: -4.781848430633545
    10. ' .' → logprob: -5.156848430633545

Token 356: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05811428278684616
    2. ' ans' → logprob: -3.8081142902374268
    3. '(ans' → logprob: -4.433114051818848
    4. '   ' → logprob: -4.558114051818848
    5. ')' → logprob: -5.683114051818848
    6. ':' → logprob: -5.933114051818848
    7. '/' → logprob: -6.183114051818848
    8. ' /' → logprob: -7.433114051818848
    9. ' ' → logprob: -7.933114051818848
    10. '.' → logprob: -8.183114051818848

Token 357: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013306818902492523
    2. ' ans' → logprob: -4.763306617736816
    3. '   ' → logprob: -5.388306617736816
    4. '	ans' → logprob: -9.388306617736816
    5. '(ans' → logprob: -11.388306617736816
    6. '
' → logprob: -11.763306617736816
    7. '    
' → logprob: -12.888306617736816
    8. '_ans' → logprob: -13.013306617736816
    9. ' ' → logprob: -13.513306617736816
    10. 'answer' → logprob: -14.513306617736816

Token 358: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005183354951441288
    2. ' ans' → logprob: -5.380183219909668
    3. '   ' → logprob: -7.505183219909668
    4. '	ans' → logprob: -12.005183219909668
    5. '(ans' → logprob: -13.005183219909668
    6. '
' → logprob: -13.005183219909668
    7. 'print' → logprob: -13.755183219909668
    8. 'answer' → logprob: -14.755183219909668
    9. ' ' → logprob: -15.380183219909668
    10. '_ans' → logprob: -15.630183219909668

Token 359: 'm' (ID: 76)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06290271878242493
    2. ' ans' → logprob: -2.8129026889801025
    3. '(ans' → logprob: -7.687902927398682
    4. '   ' → logprob: -7.812902927398682
    5. ')' → logprob: -10.187902450561523
    6. ' (' → logprob: -11.187902450561523
    7. '	ans' → logprob: -11.187902450561523
    8. ')
' → logprob: -13.937902450561523
    9. ' ' → logprob: -14.062902450561523
    10. 'm' → logprob: -14.062902450561523

Token 360: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47449636459350586
    2. '-' → logprob: -0.9744963645935059
    3. ')' → logprob: -7.974496364593506
    4. ' )' → logprob: -10.474496841430664
    5. '-
' → logprob: -11.474496841430664
    6. ' ' → logprob: -12.099496841430664
    7. ' -
' → logprob: -12.099496841430664
    8. '-)' → logprob: -12.474496841430664
    9. '
' → logprob: -12.661996841430664
    10. ' /' → logprob: -12.849496841430664

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0665140375494957
    2. '-' → logprob: -3.691514015197754
    3. 'n' → logprob: -4.316514015197754
    4. ' -' → logprob: -4.566514015197754
    5. ' ' → logprob: -4.691514015197754
    6. ' n' → logprob: -5.441514015197754
    7. ')' → logprob: -6.316514015197754
    8. '(n' → logprob: -8.941514015197754
    9. ')n' → logprob: -8.941514015197754
    10. ' (' → logprob: -10.316514015197754

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006476254784502089
    2. ' ' → logprob: -7.87564754486084
    3. '-' → logprob: -8.25064754486084
    4. ' -' → logprob: -12.75064754486084
    5. '```' → logprob: -13.87564754486084
    6. ')' → logprob: -14.25064754486084
    7. '   ' → logprob: -14.37564754486084
    8. '  ' → logprob: -15.37564754486084
    9. '
' → logprob: -15.43814754486084
    10. '

' → logprob: -15.43814754486084

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. ')/' → logprob: -9.875089645385742
    3. ' )' → logprob: -10.250089645385742
    4. ')
' → logprob: -13.500089645385742
    5. '+' → logprob: -14.750089645385742
    6. ')/(' → logprob: -15.125089645385742
    7. '-' → logprob: -15.250089645385742
    8. ' ' → logprob: -16.000089645385742
    9. ')

' → logprob: -16.000089645385742
    10. '   ' → logprob: -16.500089645385742

Token 364: ' signifie' (ID: 81149)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6352801322937012
    2. ' /' → logprob: -0.7602801322937012
    3. '/n' → logprob: -6.135280132293701
    4. ')' → logprob: -7.760280132293701
    5. '/
' → logprob: -11.13528060913086
    6. '/d' → logprob: -11.13528060913086
    7. '*' → logprob: -11.63528060913086
    8. '
' → logprob: -11.88528060913086
    9. '/an' → logprob: -12.01028060913086
    10. ')/' → logprob: -12.26028060913086

Token 365: ' que' (ID: 661)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.23621967434883118
    2. '(n' → logprob: -2.486219644546509
    3. ' n' → logprob: -2.986219644546509
    4. ' /' → logprob: -3.611219644546509
    5. '(m' → logprob: -3.861219644546509
    6. '/' → logprob: -4.486219882965088
    7. ')' → logprob: -5.486219882965088
    8. 'n' → logprob: -5.611219882965088
    9. ' m' → logprob: -5.736219882965088
    10. '/n' → logprob: -6.236219882965088

Token 366: ' l' (ID: 305)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0412646532058716
    2. ' (' → logprob: -1.1662646532058716
    3. '(n' → logprob: -1.2912646532058716
    4. ' n' → logprob: -3.541264533996582
    5. 'n' → logprob: -3.916264533996582
    6. ')' → logprob: -5.541264533996582
    7. 'm' → logprob: -5.791264533996582
    8. ' m' → logprob: -5.791264533996582
    9. ' )' → logprob: -7.166264533996582
    10. ' ' → logprob: -8.541264533996582

Token 367: ''on' (ID: 25812)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6567327380180359
    2. ')' → logprob: -1.4067327976226807
    3. ' (' → logprob: -2.6567327976226807
    4. '/' → logprob: -2.7817327976226807
    5. ' )' → logprob: -3.2817327976226807
    6. ' m' → logprob: -3.9067327976226807
    7. ' n' → logprob: -4.406732559204102
    8. 'm' → logprob: -4.781732559204102
    9. 'n' → logprob: -4.781732559204102
    10. '(m' → logprob: -5.531732559204102

Token 368: ' considère' (ID: 176437)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4250958263874054
    2. '/' → logprob: -1.925095796585083
    3. ' *' → logprob: -2.925095796585083
    4. ')' → logprob: -2.925095796585083
    5. ' )' → logprob: -3.300095796585083
    6. '*' → logprob: -4.050096035003662
    7. ' (' → logprob: -4.175096035003662
    8. '(n' → logprob: -5.175096035003662
    9. ' ' → logprob: -5.300096035003662
    10. ' n' → logprob: -5.800096035003662

Token 369: ' toutes' (ID: 17502)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.469268262386322
    2. '(m' → logprob: -1.0942683219909668
    3. '(n' → logprob: -3.344268321990967
    4. 'm' → logprob: -6.469268321990967
    5. 'n' → logprob: -6.594268321990967
    6. '(' → logprob: -7.844268321990967
    7. ')' → logprob: -7.969268321990967
    8. ' m' → logprob: -7.969268321990967
    9. ' n' → logprob: -8.469267845153809
    10. ' ' → logprob: -9.969267845153809

Token 370: ' les' (ID: 1341)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9848503470420837
    2. ' (' → logprob: -1.3598504066467285
    3. '(m' → logprob: -1.6098504066467285
    4. ' n' → logprob: -2.3598504066467285
    5. ' m' → logprob: -3.6098504066467285
    6. 'n' → logprob: -4.1098504066467285
    7. ' /' → logprob: -4.4848504066467285
    8. 'm' → logprob: -5.1098504066467285
    9. ')' → logprob: -5.2348504066467285
    10. '(' → logprob: -5.6098504066467285

Token 371: ' valeurs' (ID: 73668)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7016735672950745
    2. 'n' → logprob: -1.2016735076904297
    3. '(m' → logprob: -2.7016735076904297
    4. ' n' → logprob: -2.7016735076904297
    5. ' (' → logprob: -3.2016735076904297
    6. 'm' → logprob: -3.9516735076904297
    7. '(' → logprob: -5.82667350769043
    8. ' m' → logprob: -6.07667350769043
    9. ')' → logprob: -6.70167350769043
    10. ' )' → logprob: -7.95167350769043

Token 372: ' jusqu' (ID: 21961)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.8652363419532776
    2. ' -' → logprob: -1.7402362823486328
    3. ' (' → logprob: -1.9902362823486328
    4. '-' → logprob: -2.365236282348633
    5. ' *' → logprob: -2.490236282348633
    6. '(m' → logprob: -3.365236282348633
    7. '/' → logprob: -4.115236282348633
    8. '*' → logprob: -4.865236282348633
    9. ')' → logprob: -4.865236282348633
    10. '(' → logprob: -4.990236282348633

Token 373: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.5748587250709534
    2. 'à' → logprob: -1.8248586654663086
    3. ' à' → logprob: -1.8248586654663086
    4. 'au' → logprob: -3.1998586654663086
    5. 'a' → logprob: -3.9498586654663086
    6. '’à' → logprob: -4.199858665466309
    7. '(' → logprob: -4.324858665466309
    8. ')' → logprob: -5.199858665466309
    9. '(n' → logprob: -5.324858665466309
    10. ''au' → logprob: -5.449858665466309

Token 374: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23769260942935944
    2. 'n' → logprob: -1.6126925945281982
    3. ' m' → logprob: -4.987692832946777
    4. 'm' → logprob: -5.362692832946777
    5. '(n' → logprob: -7.987692832946777
    6. ' ' → logprob: -8.612692832946777
    7. ' (' → logprob: -9.112692832946777
    8. '(m' → logprob: -10.987692832946777
    9. '	n' → logprob: -11.862692832946777
    10. ' la' → logprob: -12.112692832946777

Token 375: 'm' (ID: 76)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519913613796234
    2. 'n' → logprob: -1.5019913911819458
    3. ')' → logprob: -10.501991271972656
    4. ' ' → logprob: -11.501991271972656
    5. '(n' → logprob: -12.126991271972656
    6. ')n' → logprob: -12.126991271972656
    7. ' ' → logprob: -12.626991271972656
    8. ' )' → logprob: -12.751991271972656
    9. 'm' → logprob: -12.876991271972656
    10. ' m' → logprob: -13.251991271972656

Token 376: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10068127512931824
    2. '-' → logprob: -2.3506813049316406
    3. ')' → logprob: -8.10068130493164
    4. ' ' → logprob: -9.72568130493164
    5. ' )' → logprob: -10.10068130493164
    6. '1' → logprob: -11.10068130493164
    7. 'minus' → logprob: -11.22568130493164
    8. ' minus' → logprob: -11.97568130493164
    9. 'n' → logprob: -12.60068130493164
    10. '   ' → logprob: -12.60068130493164

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31580567359924316
    2. ' ' → logprob: -1.3158056735992432
    3. ')' → logprob: -6.565805435180664
    4. ' n' → logprob: -7.440805435180664
    5. ' )' → logprob: -8.565805435180664
    6. 'n' → logprob: -9.440805435180664
    7. ' m' → logprob: -9.815805435180664
    8. '   ' → logprob: -9.940805435180664
    9. '  ' → logprob: -10.190805435180664
    10. ' -' → logprob: -10.315805435180664

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00151831132825464
    2. ' ' → logprob: -6.501518249511719
    3. ' ' → logprob: -12.126518249511719
    4. '```' → logprob: -12.251518249511719
    5. '   ' → logprob: -12.626518249511719
    6. '  ' → logprob: -14.626518249511719
    7. '`' → logprob: -14.751518249511719
    8. ')' → logprob: -14.751518249511719
    9. 'm' → logprob: -15.251518249511719
    10. ' m' → logprob: -15.501518249511719

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021341985557228327
    2. ' )' → logprob: -6.502134323120117
    3. ')/' → logprob: -7.752134323120117
    4. '+' → logprob: -9.877134323120117
    5. ')/(' → logprob: -10.127134323120117
    6. ')
' → logprob: -11.252134323120117
    7. '),' → logprob: -11.252134323120117
    8. ' /' → logprob: -11.377134323120117
    9. '')' → logprob: -11.627134323120117
    10. '   ' → logprob: -11.627134323120117

Token 380: ' inclus' (ID: 11891)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6751287579536438
    2. '/' → logprob: -1.050128698348999
    3. '   ' → logprob: -2.175128698348999
    4. 'ans' → logprob: -5.050128936767578
    5. ' *' → logprob: -5.175128936767578
    6. ')' → logprob: -5.675128936767578
    7. '*' → logprob: -5.800128936767578
    8. '/n' → logprob: -5.800128936767578
    9. '.' → logprob: -6.425128936767578
    10. ':' → logprob: -6.925128936767578

Token 381: ',' (ID: 11)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.38032418489456177
    2. ' /' → logprob: -1.755324125289917
    3. '   ' → logprob: -2.630324125289917
    4. 'ans' → logprob: -3.255324125289917
    5. ')' → logprob: -4.505324363708496
    6. '/n' → logprob: -5.005324363708496
    7. '*' → logprob: -5.130324363708496
    8. ' *' → logprob: -5.880324363708496
    9. '(ans' → logprob: -6.880324363708496
    10. ' ' → logprob: -6.880324363708496

Token 382: ' excl' (ID: 57282)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1274194717407227
    2. ' /' → logprob: -1.2524194717407227
    3. ' ans' → logprob: -1.6274194717407227
    4. '/' → logprob: -2.7524194717407227
    5. ')' → logprob: -3.2524194717407227
    6. '/n' → logprob: -3.6274194717407227
    7. ' )' → logprob: -3.6274194717407227
    8. ' *' → logprob: -4.627419471740723
    9. '   ' → logprob: -4.752419471740723
    10. '(ans' → logprob: -5.127419471740723

Token 383: 'uant' (ID: 44411)
  Prédit: 'lus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lus' → logprob: -0.4305858612060547
    2. 'u' → logprob: -2.5555858612060547
    3. 'us' → logprob: -2.6805858612060547
    4. 'e' → logprob: -2.6805858612060547
    5. 'uant' → logprob: -3.5555858612060547
    6. 'ent' → logprob: -3.8055858612060547
    7. 'ant' → logprob: -4.055585861206055
    8. 'is' → logprob: -4.555585861206055
    9. 'lu' → logprob: -4.930585861206055
    10. 'uis' → logprob: -4.930585861206055

Token 384: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13036014139652252
    2. 'n' → logprob: -2.1303601264953613
    3. '(n' → logprob: -6.755360126495361
    4. '1' → logprob: -7.505360126495361
    5. ')' → logprob: -7.505360126495361
    6. '0' → logprob: -7.755360126495361
    7. ' ' → logprob: -8.25536060333252
    8. ' (' → logprob: -8.75536060333252
    9. ' )' → logprob: -9.25536060333252
    10. ')n' → logprob: -9.75536060333252

Token 385: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06444329023361206
    2. ' /' → logprob: -3.439443349838257
    3. '/' → logprob: -5.064443111419678
    4. '/n' → logprob: -5.439443111419678
    5. 'ans' → logprob: -5.814443111419678
    6. '.' → logprob: -5.814443111419678
    7. ' )' → logprob: -5.939443111419678
    8. '),' → logprob: -6.314443111419678
    9. '   ' → logprob: -6.439443111419678
    10. 'n' → logprob: -6.564443111419678

Token 386: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0056155347265303135
    2. ' ans' → logprob: -5.630615711212158
    3. '   ' → logprob: -6.255615711212158
    4. '	ans' → logprob: -10.130615234375
    5. '(ans' → logprob: -10.380615234375
    6. ':' → logprob: -11.005615234375
    7. '_ans' → logprob: -12.880615234375
    8. ' ' → logprob: -14.505615234375
    9. 'print' → logprob: -14.755615234375
    10. ' =' → logprob: -14.755615234375

Token 387: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0045282659120857716
    2. ' ans' → logprob: -5.754528045654297
    3. '   ' → logprob: -6.629528045654297
    4. '(ans' → logprob: -10.879528045654297
    5. '	ans' → logprob: -11.754528045654297
    6. 'print' → logprob: -13.629528045654297
    7. '_ans' → logprob: -15.004528045654297
    8. ' ' → logprob: -15.629528045654297
    9. 'Ans' → logprob: -16.254528045654297
    10. '
' → logprob: -16.504528045654297

Token 388: ' Le' (ID: 2018)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000662280130200088
    2. 'print' → logprob: -7.875662326812744
    3. ' ans' → logprob: -8.625661849975586
    4. '   ' → logprob: -9.250661849975586
    5. '
' → logprob: -12.875661849975586
    6. '(ans' → logprob: -13.250661849975586
    7. '	ans' → logprob: -13.375661849975586
    8. 'answer' → logprob: -15.000661849975586
    9. ' print' → logprob: -16.000661849975586
    10. '_ans' → logprob: -16.625661849975586

Token 389: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013345751911401749
    2. ' ans' → logprob: -4.388345718383789
    3. 'print' → logprob: -7.138345718383789
    4. '	ans' → logprob: -11.138345718383789
    5. '(ans' → logprob: -11.763345718383789
    6. ' print' → logprob: -11.763345718383789
    7. 'answer' → logprob: -12.513345718383789
    8. '
' → logprob: -12.888345718383789
    9. '_ans' → logprob: -13.513345718383789
    10. '   ' → logprob: -14.013345718383789

Token 390: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14288948476314545
    2. '=' → logprob: -2.0178894996643066
    3. 'ans' → logprob: -9.142889022827148
    4. ' ans' → logprob: -10.142889022827148
    5. ' +=' → logprob: -10.392889022827148
    6. ' /=' → logprob: -11.017889022827148
    7. ' ' → logprob: -12.142889022827148
    8. '+=' → logprob: -12.767889022827148
    9. ' =
' → logprob: -12.892889022827148
    10. '	ans' → logprob: -13.642889022827148

Token 391: ' convert' (ID: 8452)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1887783408164978
    2. 'ans' → logprob: -2.4387784004211426
    3. ' (' → logprob: -2.9387784004211426
    4. ' m' → logprob: -4.313778400421143
    5. '(ans' → logprob: -4.563778400421143
    6. ' ' → logprob: -6.063778400421143
    7. ' n' → logprob: -6.188778400421143
    8. ' calculated' → logprob: -7.438778400421143
    9. ' equal' → logprob: -8.188777923583984
    10. 'm' → logprob: -8.188777923583984

Token 392: 'i' (ID: 72)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2878170311450958
    2. 'i' → logprob: -1.6628170013427734
    3. '=' → logprob: -3.1628170013427734
    4. ' =' → logprob: -4.662817001342773
    5. 'it' → logprob: -6.037817001342773
    6. ' i' → logprob: -6.162817001342773
    7. 'ie' → logprob: -7.412817001342773
    8. 'u' → logprob: -7.662817001342773
    9. ' float' → logprob: -7.662817001342773
    10. 'ir' → logprob: -7.912817001342773

Token 393: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0020201168954372406
    2. 'en' → logprob: -6.502019882202148
    3. 'float' → logprob: -8.752019882202148
    4. 'ans' → logprob: -9.127019882202148
    5. ' float' → logprob: -9.252019882202148
    6. ' into' → logprob: -11.002019882202148
    7. ' /' → logprob: -11.127019882202148
    8. ' =' → logprob: -11.127019882202148
    9. ' au' → logprob: -11.252019882202148
    10. '/' → logprob: -11.502019882202148

Token 394: ' nombre' (ID: 9733)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2812734544277191
    2. ' float' → logprob: -1.4062734842300415
    3. 'flo' → logprob: -10.78127384185791
    4. '1' → logprob: -10.90627384185791
    5. 'a' → logprob: -11.28127384185791
    6. ' floating' → logprob: -11.65627384185791
    7. '0' → logprob: -11.65627384185791
    8. 'ans' → logprob: -11.65627384185791
    9. ' a' → logprob: -11.90627384185791
    10. 'n' → logprob: -12.03127384185791

Token 395: ' flott' (ID: 108700)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.5947720408439636
    2. 'float' → logprob: -0.9697720408439636
    3. ' flott' → logprob: -2.8447721004486084
    4. 'f' → logprob: -6.219771862030029
    5. ' ' → logprob: -6.469771862030029
    6. '_float' → logprob: -6.719771862030029
    7. ' à' → logprob: -6.719771862030029
    8. ' ' → logprob: -6.719771862030029
    9. '   ' → logprob: -6.969771862030029
    10. 'ans' → logprob: -7.219771862030029

Token 396: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.16882339119911194
    2. 'ante' → logprob: -1.9188233613967896
    3. 'o' → logprob: -5.5438232421875
    4. 'ans' → logprob: -6.0438232421875
    5. 'oint' → logprob: -7.1688232421875
    6. '0' → logprob: -7.4188232421875
    7. '
' → logprob: -8.1688232421875
    8. '   ' → logprob: -8.6688232421875
    9. 'float' → logprob: -9.5438232421875
    10. 'point' → logprob: -10.1688232421875

Token 397: ' en' (ID: 469)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6827626824378967
    2. '   ' → logprob: -0.9327626824378967
    3. ' ans' → logprob: -2.932762622833252
    4. '(ans' → logprob: -3.807762622833252
    5. '.' → logprob: -4.807762622833252
    6. ' =' → logprob: -5.307762622833252
    7. ':' → logprob: -5.432762622833252
    8. '=' → logprob: -6.182762622833252
    9. '/' → logprob: -6.557762622833252
    10. ',' → logprob: -6.807762622833252

Token 398: ' raison' (ID: 34986)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.0631650686264038
    2. ' float' → logprob: -1.4381650686264038
    3. 'ans' → logprob: -1.9381650686264038
    4. '/' → logprob: -2.0631651878356934
    5. 'float' → logprob: -2.5631651878356934
    6. ' ans' → logprob: -3.8131651878356934
    7. ' n' → logprob: -4.188165187835693
    8. 'n' → logprob: -4.938165187835693
    9. ' ' → logprob: -5.313165187835693
    10. '1' → logprob: -6.313165187835693

Token 399: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1639316976070404
    2. 'ans' → logprob: -3.1639316082000732
    3. ' ans' → logprob: -3.2889316082000732
    4. 'de' → logprob: -3.7889316082000732
    5. ')' → logprob: -4.038931846618652
    6. '=' → logprob: -4.913931846618652
    7. '(ans' → logprob: -4.913931846618652
    8. '   ' → logprob: -5.163931846618652
    9. ' d' → logprob: -5.913931846618652
    10. ' du' → logprob: -6.538931846618652

Token 400: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9146005511283875
    2. ' n' → logprob: -1.1646006107330322
    3. ' la' → logprob: -1.6646006107330322
    4. ' l' → logprob: -4.164600372314453
    5. '1' → logprob: -4.289600372314453
    6. 'la' → logprob: -4.539600372314453
    7. ' ' → logprob: -4.914600372314453
    8. '/n' → logprob: -5.039600372314453
    9. 'float' → logprob: -5.164600372314453
    10. 'division' → logprob: -5.164600372314453

Token 401: ' division' (ID: 21629)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.08619792759418488
    2. '/n' → logprob: -3.711197853088379
    3. 'division' → logprob: -4.086197853088379
    4. ' /' → logprob: -4.211197853088379
    5. ' division' → logprob: -4.836197853088379
    6. 'ans' → logprob: -5.086197853088379
    7. 'n' → logprob: -5.336197853088379
    8. '/div' → logprob: -6.086197853088379
    9. '1' → logprob: -6.211197853088379
    10. '.' → logprob: -7.336197853088379

Token 402: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4044402837753296
    2. 'ans' → logprob: -1.4044402837753296
    3. ' =' → logprob: -3.154440402984619
    4. ' ans' → logprob: -4.154440402984619
    5. '=' → logprob: -4.654440402984619
    6. '(ans' → logprob: -5.029440402984619
    7. '	ans' → logprob: -5.654440402984619
    8. ' ' → logprob: -6.154440402984619
    9. ',' → logprob: -6.529440402984619
    10. ':' → logprob: -6.654440402984619

Token 403: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03332671523094177
    2. '   ' → logprob: -3.5333266258239746
    3. ' ans' → logprob: -5.658326625823975
    4. '	ans' → logprob: -9.908327102661133
    5. '(ans' → logprob: -10.658327102661133
    6. ':' → logprob: -12.408327102661133
    7. '_ans' → logprob: -13.158327102661133
    8. ' =' → logprob: -14.658327102661133
    9. ' ' → logprob: -15.033327102661133
    10. '```' → logprob: -15.408327102661133

Token 404: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00641360878944397
    2. '   ' → logprob: -5.256413459777832
    3. ' ans' → logprob: -6.756413459777832
    4. '	ans' → logprob: -11.131413459777832
    5. '(ans' → logprob: -14.006413459777832
    6. ' ' → logprob: -16.13141441345215
    7. '_ans' → logprob: -16.25641441345215
    8. 'Ans' → logprob: -17.38141441345215
    9. '  ' → logprob: -17.63141441345215
    10. '
' → logprob: -17.88141441345215

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04867502674460411
    2. ' =' → logprob: -3.048675060272217
    3. '+=' → logprob: -9.423674583435059
    4. ' +=' → logprob: -12.048674583435059
    5. '=m' → logprob: -14.923674583435059
    6. '=(' → logprob: -15.423674583435059
    7. '.=' → logprob: -15.923674583435059
    8. '=float' → logprob: -16.173675537109375
    9. '=n' → logprob: -16.423675537109375
    10. '＝' → logprob: -16.923675537109375

Token 406: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3137156367301941
    2. ' (' → logprob: -1.3137156963348389
    3. 'float' → logprob: -8.188715934753418
    4. '(float' → logprob: -8.813715934753418
    5. ' float' → logprob: -11.063715934753418
    6. '((' → logprob: -12.563715934753418
    7. ' ' → logprob: -12.813715934753418
    8. '0' → logprob: -13.063715934753418
    9. '   ' → logprob: -14.063715934753418
    10. '(M' → logprob: -14.188715934753418

Token 407: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.53050296427682e-05
    2. '(m' → logprob: -9.37508487701416
    3. ' m' → logprob: -15.25008487701416
    4. '   ' → logprob: -17.375085830688477
    5. ' (' → logprob: -17.625085830688477
    6. 'float' → logprob: -17.750085830688477
    7. '	m' → logprob: -18.500085830688477
    8. ')m' → logprob: -19.500085830688477
    9. '[m' → logprob: -20.625085830688477
    10. ' ' → logprob: -20.625085830688477

Token 408: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11282634735107422
    2. '-' → logprob: -2.237826347351074
    3. ' ' → logprob: -12.612826347351074
    4. ')' → logprob: -15.862826347351074
    5. '1' → logprob: -16.23782730102539
    6. ' ' → logprob: -16.36282730102539
    7. '   ' → logprob: -16.67532730102539
    8. '  ' → logprob: -16.73782730102539
    9. '−' → logprob: -17.61282730102539
    10. '.' → logprob: -17.86282730102539

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023274161503650248
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.125232696533203
    4. '```' → logprob: -16.125232696533203
    5. '  ' → logprob: -17.250232696533203
    6. ')' → logprob: -18.250232696533203
    7. '<|end|>' → logprob: -18.312732696533203
    8. '       ' → logprob: -18.562732696533203
    9. '    ' → logprob: -18.625232696533203
    10. '	' → logprob: -18.875232696533203

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.125011444091797
    4. '
' → logprob: -17.500011444091797
    5. '```' → logprob: -17.625011444091797
    6. '

' → logprob: -18.250011444091797
    7. '  ' → logprob: -19.187511444091797
    8. '0' → logprob: -19.437511444091797
    9. '１' → logprob: -19.500011444091797
    10. '<|end|>' → logprob: -19.500011444091797

Token 411: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025942857610061765
    2. ')/' → logprob: -8.750259399414062
    3. ' )' → logprob: -9.250259399414062
    4. '/' → logprob: -13.000259399414062
    5. ' /' → logprob: -13.250259399414062
    6. '/n' → logprob: -15.250259399414062
    7. ')/(' → logprob: -15.875259399414062
    8. ')
' → logprob: -16.000259399414062
    9. '")' → logprob: -16.250259399414062
    10. ')
/' → logprob: -16.250259399414062

Token 412: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1637164789135568e-05
    2. ' n' → logprob: -11.375011444091797
    3. 'float' → logprob: -16.625011444091797
    4. '	n' → logprob: -19.875011444091797
    5. ' float' → logprob: -22.000011444091797
    6. '(n' → logprob: -22.000011444091797
    7. '1' → logprob: -22.375011444091797
    8. '/n' → logprob: -22.500011444091797
    9. '_n' → logprob: -22.625011444091797
    10. '   ' → logprob: -22.875011444091797

Token 413: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04077902436256409
    2. ' else' → logprob: -4.040779113769531
    3. 'elif' → logprob: -4.040779113769531
    4. ')' → logprob: -6.415779113769531
    5. '
' → logprob: -6.790779113769531
    6. 'print' → logprob: -6.915779113769531
    7. '<|end|>' → logprob: -7.540779113769531
    8. '\n' → logprob: -9.165779113769531
    9. ':' → logprob: -9.540779113769531
    10. ' elif' → logprob: -9.915779113769531

Token 414: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0021643019281327724
    2. 'print' → logprob: -6.627164363861084
    3. 'elif' → logprob: -7.627164363861084
    4. ' else' → logprob: -8.002163887023926
    5. '\n' → logprob: -11.627163887023926
    6. ')' → logprob: -13.252163887023926
    7. ' print' → logprob: -13.377163887023926
    8. '```' → logprob: -13.627163887023926
    9. '[' → logprob: -14.252163887023926
    10. '.' → logprob: -14.502163887023926

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0790058970451355
    2. ':
' → logprob: -2.5790059566497803
    3. ' :' → logprob: -9.32900619506836
    4. ' :
' → logprob: -10.82900619506836
    5. '   ' → logprob: -13.32900619506836
    6. ':
' → logprob: -13.45400619506836
    7. ':

' → logprob: -13.57900619506836
    8. ',' → logprob: -14.32900619506836
    9. '.' → logprob: -14.32900619506836
    10. '[' → logprob: -15.45400619506836

Token 416: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.080523781478405
    2. '   ' → logprob: -2.580523729324341
    3. ' ans' → logprob: -7.20552396774292
    4. 'for' → logprob: -8.455523490905762
    5. 'max' → logprob: -8.580523490905762
    6. '	ans' → logprob: -9.080523490905762
    7. 'if' → logprob: -9.705523490905762
    8. '#' → logprob: -9.955523490905762
    9. '(ans' → logprob: -10.080523490905762
    10. ' ' → logprob: -10.705523490905762

Token 417: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0004309076175559312
    2. '(ans' → logprob: -8.375431060791016
    3. '   ' → logprob: -9.250431060791016
    4. ' ans' → logprob: -10.250431060791016
    5. '#' (adapté à ' #') → logprob: -11.000431060791016
    6. '	ans' → logprob: -11.625431060791016
    7. '0' → logprob: -12.375431060791016
    8. 'max' → logprob: -12.375431060791016
    9. 'from' → logprob: -12.500431060791016
    10. '(' → logprob: -13.000431060791016

Token 418: ' Sinon' (ID: 154924)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0006084367632865906
    2. '#' → logprob: -8.125608444213867
    3. 'if' → logprob: -8.750608444213867
    4. '   ' → logprob: -10.000608444213867
    5. 'max' → logprob: -11.375608444213867
    6. 'd' → logprob: -11.625608444213867
    7. 'from' → logprob: -11.875608444213867
    8. 'for' → logprob: -12.000608444213867
    9. 'p' → logprob: -12.125608444213867
    10. 'a' → logprob: -12.250608444213867

Token 419: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12257027626037598
    2. ':
' → logprob: -2.747570276260376
    3. '   ' → logprob: -3.122570276260376
    4. 'ans' → logprob: -4.997570037841797
    5. ' ans' → logprob: -8.622570037841797
    6. ' :' → logprob: -9.122570037841797
    7. 'if' → logprob: -10.497570037841797
    8. 'else' → logprob: -10.497570037841797
    9. ' :
' → logprob: -10.872570037841797
    10. '	ans' → logprob: -11.122570037841797

Token 420: 'c' (ID: 66)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04857045039534569
    2. '   ' → logprob: -3.173570394515991
    3. ' ans' → logprob: -5.54857063293457
    4. '#' → logprob: -6.92357063293457
    5. '	ans' → logprob: -8.29857063293457
    6. '(ans' → logprob: -9.17357063293457
    7. ' ' → logprob: -9.42357063293457
    8. '
' → logprob: -9.79857063293457
    9. ')' → logprob: -9.79857063293457
    10. '  ' → logprob: -10.54857063293457

Token 421: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3314250409603119
    2. 'e' → logprob: -1.7064250707626343
    3. '#' → logprob: -3.0814249515533447
    4. 'on' → logprob: -4.081425189971924
    5. '  ' → logprob: -4.331425189971924
    6. 'es' → logprob: -5.706425189971924
    7. 'ond' → logprob: -6.081425189971924
    8. '=' → logprob: -6.206425189971924
    9. 'ont' → logprob: -6.206425189971924
    10. 'd' → logprob: -6.331425189971924

Token 422: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4900570809841156
    2. ':' → logprob: -1.740057110786438
    3. ' ans' → logprob: -3.1150569915771484
    4. '    ' → logprob: -3.3650569915771484
    5. ' la' → logprob: -3.4900569915771484
    6. 'd' → logprob: -3.9900569915771484
    7. 'n' → logprob: -4.865056991577148
    8. 'ans' → logprob: -4.865056991577148
    9. ' d' → logprob: -5.115056991577148
    10. ' le' → logprob: -5.240056991577148

Token 423: '-dire' (ID: 76064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8666714429855347
    2. '#' → logprob: -1.8666714429855347
    3. 'n' → logprob: -2.116671562194824
    4. 'l' → logprob: -2.741671562194824
    5. 'une' → logprob: -3.366671562194824
    6. 'd' → logprob: -3.616671562194824
    7. 'à' → logprob: -4.116671562194824
    8. '-à' → logprob: -4.241671562194824
    9. 'if' → logprob: -4.366671562194824
    10. 'a' → logprob: -4.491671562194824

Token 424: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20462174713611603
    2. ':' → logprob: -2.0796217918395996
    3. ' d' → logprob: -3.8296217918395996
    4. 'd' → logprob: -4.3296217918396
    5. ')' → logprob: -4.9546217918396
    6. ' if' → logprob: -5.5796217918396
    7. ' :' → logprob: -5.7046217918396
    8. ' ans' → logprob: -6.2046217918396
    9. 'ans' → logprob: -6.4546217918396
    10. '):' → logprob: -6.5796217918396

Token 425: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.695263683795929
    2. ' d' → logprob: -0.695263683795929
    3. ' ' → logprob: -7.070263862609863
    4. ')' → logprob: -7.945263862609863
    5. '   ' → logprob: -8.945263862609863
    6. 'abs' → logprob: -8.945263862609863
    7. 'n' → logprob: -9.320263862609863
    8. '1' → logprob: -9.320263862609863
    9. ' abs' → logprob: -9.445263862609863
    10. ' n' → logprob: -9.445263862609863

Token 426: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003357489360496402
    2. ' d' → logprob: -6.253357410430908
    3. '0' → logprob: -7.253357410430908
    4. 'abs' → logprob: -7.753357410430908
    5. '1' → logprob: -8.628357887268066
    6. ' ' → logprob: -10.128357887268066
    7. 'n' → logprob: -11.003357887268066
    8. ')' → logprob: -11.378357887268066
    9. 'ans' → logprob: -12.190857887268066
    10. '   ' → logprob: -12.190857887268066

Token 427: ''' (ID: 6)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.461821049451828
    2. '!=' → logprob: -1.4618210792541504
    3. ''' → logprob: -2.4618210792541504
    4. ' >' → logprob: -3.7118210792541504
    5. '>' → logprob: -3.9618210792541504
    6. '!='' → logprob: -5.71182107925415
    7. '')' → logprob: -6.21182107925415
    8. ' '' → logprob: -7.33682107925415
    9. ''>' → logprob: -7.33682107925415
    10. ')' → logprob: -7.46182107925415

Token 428: ' n' (ID: 297)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07344833016395569
    2. '>' → logprob: -3.198448419570923
    3. ' !=' → logprob: -3.573448419570923
    4. ' >' → logprob: -7.323448181152344
    5. '!=-' → logprob: -7.448448181152344
    6. '<' → logprob: -8.198448181152344
    7. ')' → logprob: -8.948448181152344
    8. '>=' → logprob: -9.198448181152344
    9. '%' → logprob: -10.073448181152344
    10. '!' → logprob: -10.448448181152344

Token 429: ''est' (ID: 6616)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4293876886367798
    2. '!=' → logprob: -1.0543876886367798
    3. '>' → logprob: -7.55438756942749
    4. ' >' → logprob: -9.304388046264648
    5. ')' → logprob: -10.804388046264648
    6. ' ' → logprob: -11.429388046264648
    7. ''' → logprob: -11.679388046264648
    8. '0' → logprob: -11.929388046264648
    9. '=' → logprob: -12.554388046264648
    10. '!' → logprob: -12.679388046264648

Token 430: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.16118836402893066
    2. '0' → logprob: -2.2861883640289307
    3. 'pas' → logprob: -3.5361883640289307
    4. '=' → logprob: -4.036188125610352
    5. ' =' → logprob: -9.286188125610352
    6. '!=' → logprob: -9.286188125610352
    7. '>' → logprob: -9.786188125610352
    8. ' not' → logprob: -9.911188125610352
    9. '_pas' → logprob: -10.036188125610352
    10. ' !=' → logprob: -10.161188125610352

Token 431: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027921271976083517
    2. '=' → logprob: -8.500279426574707
    3. ' ' → logprob: -9.625279426574707
    4. ' =' → logprob: -12.250279426574707
    5. 'zero' → logprob: -13.500279426574707
    6. ' zero' → logprob: -13.625279426574707
    7. '==' → logprob: -14.000279426574707
    8. ' zéro' → logprob: -14.375279426574707
    9. ' ==' → logprob: -16.00027847290039
    10. ')' → logprob: -16.00027847290039

Token 432: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3957943320274353
    2. 'à' → logprob: -1.27079439163208
    3. '0' → logprob: -4.64579439163208
    4. ' to' → logprob: -4.64579439163208
    5. '<|end|>' → logprob: -4.77079439163208
    6. ')' → logprob: -5.14579439163208
    7. 'to' → logprob: -5.27079439163208
    8. ' ' → logprob: -5.89579439163208
    9. ' a' → logprob: -6.39579439163208
    10. '=' → logprob: -6.64579439163208

Token 433: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. ')' → logprob: -16.87520408630371
    4. '   ' → logprob: -17.31270408630371
    5. '```' → logprob: -17.87520408630371
    6. '=' → logprob: -18.12520408630371
    7. '۰' → logprob: -18.31270408630371
    8. '０' → logprob: -18.37520408630371
    9. ' ' → logprob: -18.50020408630371
    10. '  ' → logprob: -18.56270408630371

Token 434: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3971540033817291
    2. '):
' → logprob: -1.6471539735794067
    3. ':' → logprob: -2.1471540927886963
    4. ')' → logprob: -4.522153854370117
    5. ':
' → logprob: -5.522153854370117
    6. '   ' → logprob: -6.522153854370117
    7. '),' → logprob: -6.772153854370117
    8. ',' → logprob: -7.272153854370117
    9. ' :' → logprob: -10.272153854370117
    10. '):

' → logprob: -10.397153854370117

Token 435: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006267070304602385
    2. '   ' → logprob: -5.506267070770264
    3. ' ans' → logprob: -6.256267070770264
    4. '#' → logprob: -9.381266593933105
    5. 'if' → logprob: -10.506266593933105
    6. ' ' → logprob: -10.506266593933105
    7. '	ans' → logprob: -10.506266593933105
    8. '(ans' → logprob: -11.006266593933105
    9. '
' → logprob: -11.881266593933105
    10. '  ' → logprob: -12.006266593933105

Token 436: ' effect' (ID: 3159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2835313379764557
    2. 'ans' → logprob: -1.9085313081741333
    3. ' =' → logprob: -2.908531427383423
    4. ' ans' → logprob: -4.158531188964844
    5. '#' → logprob: -4.283531188964844
    6. '+=' → logprob: -5.158531188964844
    7. '   ' → logprob: -6.158531188964844
    8. ' +=' → logprob: -6.533531188964844
    9. ' #' → logprob: -7.033531188964844
    10. ':' → logprob: -7.533531188964844

Token 437: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00013786651834379882
    2. 'u' → logprob: -9.000138282775879
    3. 'uer' → logprob: -11.750138282775879
    4. 'uera' → logprob: -12.375138282775879
    5. 'uent' → logprob: -14.500138282775879
    6. 'ure' → logprob: -14.500138282775879
    7. 'ues' → logprob: -14.750138282775879
    8. 'uate' → logprob: -15.000138282775879
    9. 'ua' → logprob: -15.250138282775879
    10. 'uez' → logprob: -15.500138282775879

Token 438: ' un' (ID: 537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2941012382507324
    2. ' ans' → logprob: -2.0441012382507324
    3. ' ' → logprob: -4.044101238250732
    4. 'n' → logprob: -4.044101238250732
    5. '   ' → logprob: -4.169101238250732
    6. '(ans' → logprob: -4.294101238250732
    7. ' n' → logprob: -4.419101238250732
    8. '#' → logprob: -4.794101238250732
    9. ' a' → logprob: -5.169101238250732
    10. ' une' → logprob: -5.544101238250732

Token 439: ' autre' (ID: 20278)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014079817570745945
    2. '#' → logprob: -5.764080047607422
    3. 'if' → logprob: -6.264080047607422
    4. 'prob' → logprob: -6.514080047607422
    5. 'tmp' → logprob: -6.764080047607422
    6. 'temp' → logprob: -7.514080047607422
    7. '(ans' → logprob: -7.514080047607422
    8. 'for' → logprob: -7.639080047607422
    9. 'res' → logprob: -8.014080047607422
    10. ' ans' → logprob: -8.264080047607422

Token 440: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2866307497024536
    2. '#' → logprob: -2.161630630493164
    3. 'calcul' → logprob: -3.286630630493164
    4. ' calcul' → logprob: -3.911630630493164
    5. ' ans' → logprob: -3.911630630493164
    6. '   ' → logprob: -4.536630630493164
    7. 'cal' → logprob: -4.911630630493164
    8. 'c' → logprob: -5.286630630493164
    9. 'calc' → logprob: -5.286630630493164
    10. 'm' → logprob: -5.536630630493164

Token 441: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11802775412797928
    2. ':' → logprob: -2.368027687072754
    3. 'ans' → logprob: -4.618027687072754
    4. ':
' → logprob: -5.368027687072754
    5. ' =' → logprob: -6.868027687072754
    6. ' ans' → logprob: -7.618027687072754
    7. '=' → logprob: -7.868027687072754
    8. '.' → logprob: -8.243027687072754
    9. '(ans' → logprob: -8.868027687072754
    10. ' :' → logprob: -8.993027687072754

Token 442: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005430000368505716
    2. '   ' → logprob: -5.255430221557617
    3. ' ans' → logprob: -9.880430221557617
    4. '(ans' → logprob: -10.380430221557617
    5. 'p' → logprob: -10.880430221557617
    6. 'prob' → logprob: -11.255430221557617
    7. '#' → logprob: -11.630430221557617
    8. 'a' → logprob: -11.755430221557617
    9. '	ans' → logprob: -11.755430221557617
    10. 'else' → logprob: -12.130430221557617

Token 443: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011692718835547566
    2. '   ' → logprob: -6.876169204711914
    3. ' ans' → logprob: -9.876169204711914
    4. 'if' → logprob: -10.876169204711914
    5. '(ans' → logprob: -11.376169204711914
    6. 'else' → logprob: -11.501169204711914
    7. '#' (adapté à ' #') → logprob: -11.626169204711914
    8. '	ans' → logprob: -12.251169204711914
    9. 'import' → logprob: -12.751169204711914
    10. 'prob' → logprob: -12.876169204711914

Token 444: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007136239437386394
    2. '   ' → logprob: -8.750713348388672
    3. 'prob' → logprob: -9.000713348388672
    4. 'p' → logprob: -9.125713348388672
    5. 'if' → logprob: -10.000713348388672
    6. 'a' → logprob: -10.125713348388672
    7. 'numer' → logprob: -10.375713348388672
    8. 'x' → logprob: -10.375713348388672
    9. 'den' → logprob: -10.875713348388672
    10. 'q' → logprob: -10.875713348388672

Token 445: ' multipl' (ID: 44269)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07611849904060364
    2. '=' → logprob: -2.9511184692382812
    3. ' ans' → logprob: -4.826118469238281
    4. ' =' → logprob: -5.451118469238281
    5. '#' → logprob: -5.701118469238281
    6. '
' → logprob: -6.701118469238281
    7. 's' → logprob: -7.826118469238281
    8. '   ' → logprob: -7.826118469238281
    9. '+=' → logprob: -7.951118469238281
    10. '(ans' → logprob: -8.201118469238281

Token 446: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00876501016318798
    2. 'e' → logprob: -5.00876522064209
    3. ' ans' → logprob: -7.38376522064209
    4. 'ip' → logprob: -7.88376522064209
    5. 'ies' → logprob: -8.38376522064209
    6. 'ise' → logprob: -8.75876522064209
    7. 'ipl' → logprob: -8.75876522064209
    8. 'ans' → logprob: -9.00876522064209
    9. 'lie' → logprob: -9.75876522064209
    10. 'i' → logprob: -9.88376522064209

Token 447: ' ' (ID: 220)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.79730623960495
    2. '2' → logprob: -1.1723062992095947
    3. '(n' → logprob: -2.1723062992095947
    4. '(ans' → logprob: -2.7973062992095947
    5. 'ans' → logprob: -3.6723062992095947
    6. ' (' → logprob: -3.9223062992095947
    7. ' ' → logprob: -5.172306060791016
    8. '(' → logprob: -5.172306060791016
    9. ' ans' → logprob: -6.172306060791016
    10. '((' → logprob: -6.422306060791016

Token 448: '2' (ID: 17)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2803179621696472
    2. '2' → logprob: -2.030318021774292
    3. '(ans' → logprob: -3.280318021774292
    4. '(n' → logprob: -3.530318021774292
    5. 'ans' → logprob: -4.030317783355713
    6. '(' → logprob: -4.155317783355713
    7. '((' → logprob: -5.280317783355713
    8. 'float' → logprob: -5.780317783355713
    9. 'n' → logprob: -6.780317783355713
    10. 'd' → logprob: -6.905317783355713

Token 449: '.' (ID: 13)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.43202412128448486
    2. ' *' → logprob: -1.0570241212844849
    3. '*(' → logprob: -6.057024002075195
    4. '.' → logprob: -7.307024002075195
    5. '   ' → logprob: -9.307024002075195
    6. 'ans' → logprob: -9.557024002075195
    7. '(ans' → logprob: -9.807024002075195
    8. ' ans' → logprob: -10.932024002075195
    9. '*d' → logprob: -10.932024002075195
    10. ' ' → logprob: -11.057024002075195

Token 450: '0' (ID: 15)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.39772266149520874
    2. ' *' → logprob: -1.1477227210998535
    3. '.' → logprob: -5.1477227210998535
    4. '*(' → logprob: -5.3977227210998535
    5. '*m' → logprob: -8.397722244262695
    6. '*d' → logprob: -9.772722244262695
    7. '*((' → logprob: -10.022722244262695
    8. '   ' → logprob: -10.397722244262695
    9. 'ans' → logprob: -10.647722244262695
    10. '(m' → logprob: -10.897722244262695

Token 451: ' (' (ID: 350)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22930540144443512
    2. ' *' → logprob: -1.604305386543274
    3. '*(' → logprob: -5.854305267333984
    4. '*m' → logprob: -7.104305267333984
    5. '   ' → logprob: -9.729305267333984
    6. '*d' → logprob: -10.229305267333984
    7. '*((' → logprob: -10.604305267333984
    8. '.' → logprob: -10.604305267333984
    9. '(m' → logprob: -11.479305267333984
    10. 'ans' → logprob: -11.854305267333984

Token 452: 'un' (ID: 373)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13975438475608826
    2. ' *' → logprob: -2.389754295349121
    3. ')' → logprob: -4.139754295349121
    4. '*m' → logprob: -5.264754295349121
    5. '*d' → logprob: -5.264754295349121
    6. 'd' → logprob: -5.389754295349121
    7. '(m' → logprob: -5.639754295349121
    8. '*(' → logprob: -6.264754295349121
    9. '(d' → logprob: -7.264754295349121
    10. 'm' → logprob: -7.389754295349121

Token 453: ' flott' (ID: 108700)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.45831069350242615
    2. ' *' → logprob: -1.0833107233047485
    3. '(m' → logprob: -4.208310604095459
    4. ' (' → logprob: -4.833310604095459
    5. '*(' → logprob: -5.833310604095459
    6. '.' → logprob: -6.458310604095459
    7. ')' → logprob: -6.958310604095459
    8. '*m' → logprob: -8.333311080932617
    9. '(' → logprob: -8.583311080932617
    10. '(d' → logprob: -9.083311080932617

Token 454: 'ant' (ID: 493)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47596561908721924
    2. ' *' → logprob: -0.9759656190872192
    3. ')' → logprob: -6.85096549987793
    4. '.' → logprob: -8.35096549987793
    5. 'e' → logprob: -8.85096549987793
    6. ' ans' → logprob: -8.97596549987793
    7. '*d' → logprob: -9.35096549987793
    8. 'ans' → logprob: -9.47596549987793
    9. '*(' → logprob: -9.72596549987793
    10. '*m' → logprob: -10.97596549987793

Token 455: ' avec' (ID: 3937)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32592979073524475
    2. ' *' → logprob: -1.3259297609329224
    3. ')' → logprob: -4.700929641723633
    4. '*(' → logprob: -6.075929641723633
    5. '*m' → logprob: -7.325929641723633
    6. '*)' → logprob: -8.075929641723633
    7. ' )' → logprob: -9.700929641723633
    8. '(m' → logprob: -10.075929641723633
    9. ')*' → logprob: -10.200929641723633
    10. '*((' → logprob: -10.950929641723633

Token 456: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2833663523197174
    2. ')' → logprob: -2.1583664417266846
    3. '(m' → logprob: -2.6583664417266846
    4. 'n' → logprob: -3.4083664417266846
    5. '(n' → logprob: -4.6583662033081055
    6. 'd' → logprob: -4.7833662033081055
    7. ' (' → logprob: -5.9083662033081055
    8. 'ans' → logprob: -6.0333662033081055
    9. ')m' → logprob: -6.5333662033081055
    10. ' m' → logprob: -7.1583662033081055

Token 457: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21853379905223846
    2. ' *' → logprob: -1.7185337543487549
    3. '*' → logprob: -4.468533992767334
    4. ' )' → logprob: -5.718533992767334
    5. '(m' → logprob: -7.343533992767334
    6. '*)' → logprob: -7.468533992767334
    7. '*m' → logprob: -7.593533992767334
    8. '*d' → logprob: -9.218533515930176
    9. ' *)' → logprob: -9.468533515930176
    10. '*(' → logprob: -9.468533515930176

Token 458: '2' (ID: 17)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0526539087295532
    2. ')' → logprob: -1.4276539087295532
    3. '*m' → logprob: -1.6776539087295532
    4. '(m' → logprob: -1.9276539087295532
    5. '*d' → logprob: -3.0526537895202637
    6. 'd' → logprob: -4.427653789520264
    7. ' *' → logprob: -4.802653789520264
    8. 'm' → logprob: -5.677653789520264
    9. '*(' → logprob: -6.052653789520264
    10. '(d' → logprob: -6.177653789520264

Token 459: '),' (ID: 936)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23738127946853638
    2. ')' → logprob: -1.6123812198638916
    3. '*' → logprob: -4.612381458282471
    4. ' *' → logprob: -6.737381458282471
    5. '*)' → logprob: -7.987381458282471
    6. ' )' → logprob: -7.987381458282471
    7. ')*' → logprob: -10.612380981445312
    8. '*d' → logprob: -10.737380981445312
    9. '.)' → logprob: -11.987380981445312
    10. ' ' → logprob: -12.237380981445312

Token 460: ' par' (ID: 686)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3689675033092499
    2. ' (' → logprob: -1.6189675331115723
    3. 'ans' → logprob: -3.1189675331115723
    4. 'm' → logprob: -3.9939675331115723
    5. 'd' → logprob: -4.368967533111572
    6. ' ans' → logprob: -4.493967533111572
    7. '(ans' → logprob: -4.993967533111572
    8. '(' → logprob: -6.243967533111572
    9. '(n' → logprob: -6.243967533111572
    10. '(d' → logprob: -6.243967533111572

Token 461: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.07888835668563843
    2. '(n' → logprob: -2.953888416290283
    3. '((' → logprob: -4.203888416290283
    4. 'd' → logprob: -5.328888416290283
    5. '(d' → logprob: -6.828888416290283
    6. ' (' → logprob: -6.828888416290283
    7. '(' → logprob: -7.453888416290283
    8. 'n' → logprob: -7.828888416290283
    9. 'm' → logprob: -8.203887939453125
    10. 'ans' → logprob: -8.453887939453125

Token 462: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1501152217388153
    2. '(n' → logprob: -2.4001152515411377
    3. 'm' → logprob: -3.1501152515411377
    4. '(m' → logprob: -5.275115013122559
    5. 'd' → logprob: -7.650115013122559
    6. ' n' → logprob: -9.275115013122559
    7. '((' → logprob: -9.775115013122559
    8. ' (' → logprob: -9.775115013122559
    9. 'float' → logprob: -11.150115013122559
    10. '(d' → logprob: -11.650115013122559

Token 463: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761951208114624
    2. ' -' → logprob: -0.8261951208114624
    3. '*' → logprob: -9.326194763183594
    4. '-d' → logprob: -9.451194763183594
    5. '+' → logprob: -11.076194763183594
    6. '-m' → logprob: -11.201194763183594
    7. ')' → logprob: -11.201194763183594
    8. ' ' → logprob: -11.451194763183594
    9. '-n' → logprob: -12.076194763183594
    10. 'd' → logprob: -12.201194763183594

Token 464: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0068974741734564304
    2. 'd' → logprob: -5.006897449493408
    3. ' ' → logprob: -8.881897926330566
    4. '2' → logprob: -10.881897926330566
    5. ' d' → logprob: -11.256897926330566
    6. 'abs' → logprob: -12.381897926330566
    7. 'm' → logprob: -13.506897926330566
    8. '(' → logprob: -13.631897926330566
    9. '(d' → logprob: -13.631897926330566
    10. '   ' → logprob: -14.131897926330566

Token 465: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09697727859020233
    2. '),' → logprob: -2.4719772338867188
    3. ')/(' → logprob: -5.971977233886719
    4. ')*(' → logprob: -6.096977233886719
    5. ' )' → logprob: -6.971977233886719
    6. ')/' → logprob: -7.221977233886719
    7. '-' → logprob: -7.471977233886719
    8. ')*' → logprob: -7.846977233886719
    9. ' ),' → logprob: -8.471977233886719
    10. ' -' → logprob: -8.971977233886719

Token 466: ' qui' (ID: 2780)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.463285356760025
    2. ' (' → logprob: -1.8382853269577026
    3. ',' → logprob: -2.838285446166992
    4. 'm' → logprob: -3.088285446166992
    5. ' by' → logprob: -3.838285446166992
    6. 'ans' → logprob: -3.838285446166992
    7. 'by' → logprob: -4.213285446166992
    8. '*' → logprob: -4.713285446166992
    9. 'and' → logprob: -4.963285446166992
    10. '/' → logprob: -5.463285446166992

Token 467: ' représente' (ID: 88912)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2022772580385208
    2. '(m' → logprob: -3.327277183532715
    3. ' is' → logprob: -3.452277183532715
    4. ' (' → logprob: -3.827277183532715
    5. '/m' → logprob: -4.202277183532715
    6. '*(' → logprob: -4.202277183532715
    7. 'm' → logprob: -4.577277183532715
    8. '*' → logprob: -4.702277183532715
    9. ')/(' → logprob: -4.952277183532715
    10. ' represents' → logprob: -5.202277183532715

Token 468: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13281188905239105
    2. 'n' → logprob: -3.8828117847442627
    3. ' (' → logprob: -4.007812023162842
    4. 'la' → logprob: -4.132812023162842
    5. ' la' → logprob: -4.132812023162842
    6. 'le' → logprob: -4.507812023162842
    7. 'l' → logprob: -4.632812023162842
    8. '2' → logprob: -4.632812023162842
    9. '(m' → logprob: -5.132812023162842
    10. ' n' → logprob: -5.132812023162842

Token 469: ' différence' (ID: 79196)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2853376269340515
    2. 'm' → logprob: -1.9103376865386963
    3. '(n' → logprob: -3.2853376865386963
    4. 'float' → logprob: -3.2853376865386963
    5. 'n' → logprob: -4.035337448120117
    6. '2' → logprob: -5.660337448120117
    7. ' (' → logprob: -6.035337448120117
    8. ' float' → logprob: -7.410337448120117
    9. '1' → logprob: -7.660337448120117
    10. '((' → logprob: -8.035337448120117

Token 470: ' entre' (ID: 3853)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.028960943222046
    2. ')' → logprob: -1.528960943222046
    3. ' entre' → logprob: -2.403960943222046
    4. '(n' → logprob: -2.653960943222046
    5. ' between' → logprob: -3.028960943222046
    6. ' n' → logprob: -3.153960943222046
    7. ' des' → logprob: -3.153960943222046
    8. '*' → logprob: -3.778960943222046
    9. ' /' → logprob: -4.028961181640625
    10. ' (' → logprob: -4.278961181640625

Token 471: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031531378626823425
    2. ' n' → logprob: -3.53153133392334
    3. '(n' → logprob: -6.40653133392334
    4. ' (' → logprob: -9.90653133392334
    5. 'm' → logprob: -10.15653133392334
    6. '2' → logprob: -11.15653133392334
    7. ')n' → logprob: -11.90653133392334
    8. '(' → logprob: -12.15653133392334
    9. ' ' → logprob: -12.78153133392334
    10. 'l' → logprob: -13.15653133392334

Token 472: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8569490313529968
    2. ' et' → logprob: -1.7319490909576416
    3. 'et' → logprob: -1.7319490909576416
    4. '-' → logprob: -1.9819490909576416
    5. ')' → logprob: -2.9819490909576416
    6. ' and' → logprob: -4.1069488525390625
    7. 'd' → logprob: -5.2319488525390625
    8. ' ' → logprob: -5.6069488525390625
    9. ' )' → logprob: -5.9819488525390625
    10. 'and' → logprob: -6.4819488525390625

Token 473: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.15441757265944e-05
    2. ' d' → logprob: -10.375031471252441
    3. ' ' → logprob: -16.500032424926758
    4. 'la' → logprob: -16.625032424926758
    5. '	d' → logprob: -17.125032424926758
    6. 'l' → logprob: -17.625032424926758
    7. '<|end|>' → logprob: -17.750032424926758
    8. ' la' → logprob: -18.000032424926758
    9. 'le' → logprob: -18.375032424926758
    10. 'the' → logprob: -19.250032424926758

Token 474: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06896589696407318
    2. '),' → logprob: -3.3189659118652344
    3. ',' → logprob: -3.6939659118652344
    4. ' )' → logprob: -6.568965911865234
    5. ')/' → logprob: -6.693965911865234
    6. ')*' → logprob: -7.068965911865234
    7. '.' → logprob: -7.693965911865234
    8. ')/(' → logprob: -7.693965911865234
    9. '*' → logprob: -8.568965911865234
    10. '<|end|>' → logprob: -8.693965911865234

Token 475: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39075446128845215
    2. ',' → logprob: -2.015754461288452
    3. ' *' → logprob: -2.390754461288452
    4. ' )' → logprob: -3.890754461288452
    5. ' n' → logprob: -4.265754699707031
    6. ' /' → logprob: -4.515754699707031
    7. '2' → logprob: -4.640754699707031
    8. '*' → logprob: -4.890754699707031
    9. ' ,' → logprob: -4.890754699707031
    10. '   ' → logprob: -5.015754699707031

Token 476: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6056378483772278
    2. ')' → logprob: -1.730637788772583
    3. 'ans' → logprob: -1.980637788772583
    4. ',' → logprob: -3.605637788772583
    5. 'n' → logprob: -4.355638027191162
    6. ' par' → logprob: -4.480638027191162
    7. ' by' → logprob: -4.480638027191162
    8. '   ' → logprob: -4.605638027191162
    9. '2' → logprob: -4.980638027191162
    10. 'and' → logprob: -5.105638027191162

Token 477: ' multip' (ID: 17524)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.9379718899726868
    2. 'm' → logprob: -1.062971830368042
    3. ' (' → logprob: -1.812971830368042
    4. ' by' → logprob: -3.562971830368042
    5. 'ans' → logprob: -4.437972068786621
    6. ',' → logprob: -4.687972068786621
    7. ' m' → logprob: -4.687972068786621
    8. '   ' → logprob: -4.937972068786621
    9. '2' → logprob: -5.062972068786621
    10. ')' → logprob: -5.062972068786621

Token 478: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.3843129277229309
    2. 'li' → logprob: -1.8843128681182861
    3. 'ly' → logprob: -2.259312868118286
    4. 'lication' → logprob: -4.009313106536865
    5. 'lie' → logprob: -4.009313106536865
    6. 'lying' → logprob: -4.884313106536865
    7. 'lic' → logprob: -4.884313106536865
    8. 'lique' → logprob: -5.509313106536865
    9. 'le' → logprob: -6.384313106536865
    10. 'l' → logprob: -6.884313106536865

Token 479: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6043082475662231
    2. ' par' → logprob: -0.8543082475662231
    3. '(m' → logprob: -3.9793081283569336
    4. '(' → logprob: -5.354308128356934
    5. 'm' → logprob: -5.979308128356934
    6. 'by' → logprob: -7.604308128356934
    7. ' (' → logprob: -7.729308128356934
    8. '(par' → logprob: -8.229308128356934
    9. ' by' → logprob: -8.854308128356934
    10. '2' → logprob: -8.979308128356934

Token 480: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.05157114565372467
    2. ' (' → logprob: -3.1765711307525635
    3. 'm' → logprob: -5.676571369171143
    4. 'float' → logprob: -5.801571369171143
    5. ' float' → logprob: -7.301571369171143
    6. '(float' → logprob: -7.801571369171143
    7. '(n' → logprob: -7.926571369171143
    8. ' m' → logprob: -8.926570892333984
    9. ' ' → logprob: -8.926570892333984
    10. '2' → logprob: -9.301570892333984

Token 481: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08924282342195511
    2. '(m' → logprob: -2.464242935180664
    3. '((' → logprob: -9.964242935180664
    4. '2' → logprob: -9.964242935180664
    5. 'n' → logprob: -10.089242935180664
    6. ' (' → logprob: -10.464242935180664
    7. ' m' → logprob: -10.464242935180664
    8. '(n' → logprob: -10.589242935180664
    9. 'float' → logprob: -10.589242935180664
    10. '(' → logprob: -10.839242935180664

Token 482: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3484487533569336
    2. ' -' → logprob: -1.2234487533569336
    3. '*' → logprob: -13.723448753356934
    4. ')' → logprob: -13.723448753356934
    5. ' ' → logprob: -14.098448753356934
    6. '1' → logprob: -14.973448753356934
    7. '−' → logprob: -15.473448753356934
    8. '2' → logprob: -16.03594970703125
    9. '```' → logprob: -16.47344970703125
    10. '  ' → logprob: -16.59844970703125

Token 483: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.75001335144043
    3. '2' → logprob: -12.50001335144043
    4. '   ' → logprob: -14.37501335144043
    5. 'd' → logprob: -14.87501335144043
    6. '(' → logprob: -15.37501335144043
    7. '  ' → logprob: -17.00001335144043
    8. '```' → logprob: -17.00001335144043
    9. '１' → logprob: -17.62501335144043
    10. '	' → logprob: -18.00001335144043

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '2' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '   ' → logprob: -14.62501049041748
    5. 'd' → logprob: -15.00001049041748
    6. '(' → logprob: -15.75001049041748
    7. '  ' → logprob: -17.750009536743164
    8. '１' → logprob: -17.750009536743164
    9. '```' → logprob: -17.875009536743164
    10. '	' → logprob: -17.875009536743164

Token 485: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5541930198669434
    2. ')/' → logprob: -0.9291930198669434
    3. ')/(' → logprob: -3.5541930198669434
    4. '/n' → logprob: -7.554193019866943
    5. ' )' → logprob: -7.679193019866943
    6. ')
' → logprob: -8.429193496704102
    7. '),' → logprob: -8.429193496704102
    8. '.' → logprob: -8.554193496704102
    9. ')
/' → logprob: -9.304193496704102
    10. ',' → logprob: -10.054193496704102

Token 486: ' puis' (ID: 18766)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6341723203659058
    2. ')' → logprob: -2.0091724395751953
    3. '/n' → logprob: -2.1341724395751953
    4. ',' → logprob: -3.0091724395751953
    5. 'ans' → logprob: -3.0091724395751953
    6. ' /' → logprob: -3.6341724395751953
    7. '   ' → logprob: -4.009172439575195
    8. '.' → logprob: -4.259172439575195
    9. ' ans' → logprob: -4.509172439575195
    10. ' and' → logprob: -4.634172439575195

Token 487: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6551303267478943
    2. '/n' → logprob: -1.405130386352539
    3. '/' → logprob: -2.530130386352539
    4. ' /' → logprob: -3.155130386352539
    5. 'div' → logprob: -3.655130386352539
    6. ' ans' → logprob: -4.280130386352539
    7. ')' → logprob: -4.405130386352539
    8. '```' → logprob: -4.780130386352539
    9. '(ans' → logprob: -4.905130386352539
    10. ' divided' → logprob: -4.905130386352539

Token 488: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4348377287387848
    2. '/' → logprob: -1.6848376989364624
    3. ' /' → logprob: -2.434837818145752
    4. '/n' → logprob: -3.184837818145752
    5. ' div' → logprob: -3.684837818145752
    6. 'n' → logprob: -5.309837818145752
    7. '/div' → logprob: -5.684837818145752
    8. 'divide' → logprob: -7.309837818145752
    9. '_div' → logprob: -7.559837818145752
    10. '/(' → logprob: -7.559837818145752

Token 489: 'ise' (ID: 1096)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.6327493190765381
    2. 'ise' → logprob: -0.7577493190765381
    3. 'de' → logprob: -10.882749557495117
    4. 'ize' → logprob: -11.007749557495117
    5. 'e' → logprob: -11.257749557495117
    6. '0' → logprob: -11.382749557495117
    7. 'ides' → logprob: -11.382749557495117
    8. 'id' → logprob: -11.507749557495117
    9. 'ue' → logprob: -12.132749557495117
    10. '1' → logprob: -12.257749557495117

Token 490: ' le' (ID: 505)
  Prédit: '/n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.9498989582061768
    2. 'n' → logprob: -1.5748989582061768
    3. 'ans' → logprob: -1.9498989582061768
    4. ')' → logprob: -2.1998989582061768
    5. '/' → logprob: -2.8248989582061768
    6. 'par' → logprob: -3.3248989582061768
    7. ' ans' → logprob: -3.8248989582061768
    8. ')n' → logprob: -4.949898719787598
    9. '(ans' → logprob: -4.949898719787598
    10. ' par' → logprob: -5.199898719787598

Token 491: ' tout' (ID: 5501)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.7016260623931885
    2. 'rés' → logprob: -1.0766260623931885
    3. 'result' → logprob: -2.0766260623931885
    4. 'par' → logprob: -3.9516260623931885
    5. 't' → logprob: -4.576625823974609
    6. ' résultat' → logprob: -5.701625823974609
    7. 'res' → logprob: -6.576625823974609
    8. 'rez' → logprob: -6.951625823974609
    9. ' tout' → logprob: -7.576625823974609
    10. 'Rés' → logprob: -8.07662582397461

Token 492: ' par' (ID: 686)
  Prédit: '/n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.06283364444971085
    2. '/' → logprob: -3.187833547592163
    3. 'par' → logprob: -4.812833786010742
    4. ')' → logprob: -5.437833786010742
    5. '/(' → logprob: -6.312833786010742
    6. 'by' → logprob: -6.687833786010742
    7. ' /' → logprob: -7.062833786010742
    8. ' par' → logprob: -7.312833786010742
    9. 'ans' → logprob: -7.812833786010742
    10. '/par' → logprob: -7.812833786010742

Token 493: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03677407279610634
    2. '(n' → logprob: -3.411774158477783
    3. 'float' → logprob: -6.536774158477783
    4. '(' → logprob: -6.786774158477783
    5. '(float' → logprob: -8.536773681640625
    6. ' n' → logprob: -8.786773681640625
    7. ' (' → logprob: -9.286773681640625
    8. '2' → logprob: -10.036773681640625
    9. '   ' → logprob: -11.036773681640625
    10. '((' → logprob: -11.661773681640625

Token 494: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.636267900466919
    2. ')' → logprob: -1.761267900466919
    3. '```' → logprob: -2.261267900466919
    4. '/n' → logprob: -3.011267900466919
    5. '<|end|>' → logprob: -3.261267900466919
    6. '*' → logprob: -3.511267900466919
    7. ',' → logprob: -4.01126766204834
    8. '   ' → logprob: -4.26126766204834
    9. '*n' → logprob: -4.51126766204834
    10. '/' → logprob: -5.01126766204834

Token 495: ' carré' (ID: 191546)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33426278829574585
    2. '**' → logprob: -1.7092628479003906
    3. '2' → logprob: -2.7092628479003906
    4. '*n' → logprob: -4.209262847900391
    5. 'n' → logprob: -5.459262847900391
    6. ' *' → logprob: -5.959262847900391
    7. '*m' → logprob: -6.084262847900391
    8. '/n' → logprob: -6.209262847900391
    9. ')' → logprob: -6.334262847900391
    10. '²' → logprob: -6.709262847900391

Token 496: ' (' (ID: 350)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5084157586097717
    2. '2' → logprob: -1.758415699005127
    3. '(n' → logprob: -2.508415699005127
    4. '.' → logprob: -3.258415699005127
    5. '   ' → logprob: -3.508415699005127
    6. 'n' → logprob: -3.633415699005127
    7. ',' → logprob: -4.508415699005127
    8. '```' → logprob: -4.508415699005127
    9. '/n' → logprob: -4.883415699005127
    10. '(' → logprob: -5.383415699005127

Token 497: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14264333248138428
    2. '(n' → logprob: -2.142643451690674
    3. ' n' → logprob: -4.517643451690674
    4. ' (' → logprob: -5.892643451690674
    5. ')n' → logprob: -6.642643451690674
    6. ')' → logprob: -7.642643451690674
    7. '(' → logprob: -9.642642974853516
    8. '```' → logprob: -10.767642974853516
    9. '
' → logprob: -11.142642974853516
    10. 'float' → logprob: -11.767642974853516

Token 498: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.008241381496191025
    2. '*n' → logprob: -5.258241176605225
    3. '*' → logprob: -6.008241176605225
    4. ' **' → logprob: -8.008241653442383
    5. ' *' → logprob: -8.508241653442383
    6. 'n' → logprob: -13.008241653442383
    7. '2' → logprob: -13.258241653442383
    8. ')**' → logprob: -13.383241653442383
    9. ')' → logprob: -13.758241653442383
    10. '***' → logprob: -14.133241653442383

Token 499: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014048899174667895
    2. ' n' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.750140190124512
    4. '	n' → logprob: -15.750140190124512
    5. '
' → logprob: -16.125141143798828
    6. ' ' → logprob: -16.250141143798828
    7. ')n' → logprob: -17.125141143798828
    8. '(n' → logprob: -17.250141143798828
    9. '```' → logprob: -17.375141143798828
    10. '  ' → logprob: -18.250141143798828

Token 500: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021057340200059116
    2. ').' → logprob: -9.625210762023926
    3. ' )' → logprob: -10.250210762023926
    4. '   ' → logprob: -10.375210762023926
    5. ')
' → logprob: -10.500210762023926
    6. '*' → logprob: -11.250210762023926
    7. '),' → logprob: -11.875210762023926
    8. ')*' → logprob: -12.000210762023926
    9. '**' → logprob: -12.250210762023926
    10. ')**' → logprob: -12.500210762023926

Token 501: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.37260836362838745
    2. ' ans' → logprob: -1.4976084232330322
    3. '   ' → logprob: -2.6226084232330322
    4. '2' → logprob: -4.747608184814453
    5. ' =' → logprob: -6.372608184814453
    6. '(ans' → logprob: -6.747608184814453
    7. ')' → logprob: -6.872608184814453
    8. '=' → logprob: -6.997608184814453
    9. '	ans' → logprob: -8.372608184814453
    10. '
' → logprob: -8.497608184814453

Token 502: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00027933192905038595
    2. '   ' → logprob: -8.500279426574707
    3. ' ans' → logprob: -9.500279426574707
    4. '	ans' → logprob: -14.750279426574707
    5. '(ans' → logprob: -15.000279426574707
    6. '2' → logprob: -16.12527847290039
    7. '
' → logprob: -16.25027847290039
    8. '_ans' → logprob: -17.87527847290039
    9. 'answer' → logprob: -18.25027847290039
    10. '    
' → logprob: -18.75027847290039

Token 503: ' Ce' (ID: 14228)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0014659387525171041
    2. '   ' → logprob: -7.001465797424316
    3. ' ans' → logprob: -7.501465797424316
    4. '	ans' → logprob: -13.626465797424316
    5. '(ans' → logprob: -14.501465797424316
    6. '
' → logprob: -15.626465797424316
    7. ' ' → logprob: -16.751466751098633
    8. '_ans' → logprob: -16.876466751098633
    9. 'answer' → logprob: -17.626466751098633
    10. '    
' → logprob: -17.626466751098633

Token 504: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2695867717266083
    2. ' ans' → logprob: -1.6445868015289307
    3. ')' → logprob: -3.6445868015289307
    4. ' )' → logprob: -5.394586563110352
    5. ' *' → logprob: -5.894586563110352
    6. '*' → logprob: -6.269586563110352
    7. ' code' → logprob: -6.519586563110352
    8. '.' → logprob: -6.769586563110352
    9. '=' → logprob: -6.894586563110352
    10. ' /' → logprob: -7.144586563110352

Token 505: ' pourrait' (ID: 39622)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46406427025794983
    2. 'ans' → logprob: -1.3390642404556274
    3. ' =' → logprob: -2.339064359664917
    4. ')' → logprob: -5.089064121246338
    5. '   ' → logprob: -6.464064121246338
    6. ' ans' → logprob: -6.589064121246338
    7. ':' → logprob: -6.964064121246338
    8. '*=' → logprob: -7.714064121246338
    9. ' )' → logprob: -8.339064598083496
    10. '	ans' → logprob: -8.464064598083496

Token 506: ' représ' (ID: 31534)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3881204426288605
    2. ' ans' → logprob: -2.013120412826538
    3. ' représ' → logprob: -2.513120412826538
    4. '   ' → logprob: -3.263120412826538
    5. ' calcul' → logprob: -4.638120651245117
    6. 'être' → logprob: -4.763120651245117
    7. ' être' → logprob: -5.138120651245117
    8. '#' → logprob: -5.263120651245117
    9. ' correspond' → logprob: -5.388120651245117
    10. '```' → logprob: -5.388120651245117

Token 507: 'enter' (ID: 3547)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08193732053041458
    2. ')' → logprob: -3.081937313079834
    3. 'ant' → logprob: -3.581937313079834
    4. '2' → logprob: -6.206937313079834
    5. ' ' → logprob: -7.956937313079834
    6. 'érer' → logprob: -8.081937789916992
    7. '   ' → logprob: -8.206937789916992
    8. 'uler' → logprob: -8.331937789916992
    9. 'u' → logprob: -8.456937789916992
    10. 'ent' → logprob: -8.706937789916992

Token 508: ' une' (ID: 2463)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015099423006176949
    2. ' ' → logprob: -4.51509952545166
    3. '(' → logprob: -5.76509952545166
    4. ' (' → logprob: -7.14009952545166
    5. '((' → logprob: -9.51509952545166
    6. 'ans' → logprob: -11.01509952545166
    7. '1' → logprob: -11.39009952545166
    8. '   ' → logprob: -12.51509952545166
    9. ' ((' → logprob: -13.76509952545166
    10. ' ans' → logprob: -13.76509952545166

Token 509: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.03502596542239189
    2. ' prob' → logprob: -4.1600260734558105
    3. ' probabil' → logprob: -5.4100260734558105
    4. ' mesure' → logprob: -6.0350260734558105
    5. ' formule' → logprob: -6.1600260734558105
    6. 'form' → logprob: -6.1600260734558105
    7. 'distance' → logprob: -6.9100260734558105
    8. 'pro' → logprob: -7.1600260734558105
    9. ' probability' → logprob: -7.2850260734558105
    10. ' expression' → logprob: -7.2850260734558105

Token 510: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.01051666121929884
    2. 'abil' → logprob: -5.38551664352417
    3. 'alité' → logprob: -5.63551664352417
    4. 'ilité' → logprob: -6.63551664352417
    5. 'ability' → logprob: -7.63551664352417
    6. 'ility' → logprob: -8.010517120361328
    7. 'ité' → logprob: -9.510517120361328
    8. 'l' → logprob: -11.010517120361328
    9. 'abilidade' → logprob: -11.135517120361328
    10. 'ab' → logprob: -11.760517120361328

Token 511: ' ou' (ID: 2031)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20886017382144928
    2. '*' → logprob: -2.583860158920288
    3. ' ans' → logprob: -3.208860158920288
    4. 'ans' → logprob: -3.208860158920288
    5. '   ' → logprob: -4.333860397338867
    6. '.' → logprob: -5.083860397338867
    7. '(ans' → logprob: -5.458860397338867
    8. ')' → logprob: -5.958860397338867
    9. ' =' → logprob: -6.583860397338867
    10. '	ans' → logprob: -7.083860397338867

Token 512: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3664538264274597
    2. 'une' → logprob: -1.3664538860321045
    3. ' un' → logprob: -4.116453647613525
    4. ' la' → logprob: -4.116453647613525
    5. 'un' → logprob: -4.366453647613525
    6. '2' → logprob: -5.866453647613525
    7. 'la' → logprob: -6.991453647613525
    8. ' ' → logprob: -7.616453647613525
    9. 'prob' → logprob: -8.116454124450684
    10. ')' → logprob: -8.616454124450684

Token 513: ' compt' (ID: 39238)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.8884469270706177
    2. 'mes' → logprob: -2.388446807861328
    3. 'ratio' → logprob: -2.388446807861328
    4. 'score' → logprob: -2.513446807861328
    5. 'stat' → logprob: -2.888446807861328
    6. 'distance' → logprob: -3.263446807861328
    7. 'expect' → logprob: -3.388446807861328
    8. 'float' → logprob: -3.638446807861328
    9. 'esper' → logprob: -3.638446807861328
    10. 'm' → logprob: -4.013446807861328

Token 514: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7043060660362244
    2. 'é' → logprob: -1.2043061256408691
    3. 'eur' → logprob: -2.079306125640869
    4. '=' → logprob: -3.829306125640869
    5. 'u' → logprob: -4.454306125640869
    6. 'ation' → logprob: -4.579306125640869
    7. 'age' → logprob: -5.079306125640869
    8. 'es' → logprob: -5.329306125640869
    9. 'ual' → logprob: -5.829306125640869
    10. 'ent' → logprob: -5.954306125640869

Token 515: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3207416534423828
    2. ')' → logprob: -1.6957416534423828
    3. ' ans' → logprob: -3.945741653442383
    4. '(ans' → logprob: -4.195741653442383
    5. '   ' → logprob: -4.320741653442383
    6. ',' → logprob: -4.570741653442383
    7. '*' → logprob: -5.070741653442383
    8. 'ans' → logprob: -5.570741653442383
    9. '**' → logprob: -5.695741653442383
    10. ' *' → logprob: -5.945741653442383

Token 516: ' selon' (ID: 27571)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.37732526659965515
    2. ' ans' → logprob: -1.7523252964019775
    3. '2' → logprob: -2.1273252964019775
    4. '   ' → logprob: -5.002325057983398
    5. '(ans' → logprob: -5.502325057983398
    6. ')' → logprob: -5.627325057983398
    7. ' ' → logprob: -5.877325057983398
    8. ' (' → logprob: -6.752325057983398
    9. '(' → logprob: -7.377325057983398
    10. ' )' → logprob: -7.502325057983398

Token 517: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1060584783554077
    2. ')' → logprob: -1.4810584783554077
    3. ' n' → logprob: -1.7310584783554077
    4. ' )' → logprob: -1.9810584783554077
    5. ' la' → logprob: -2.9810585975646973
    6. ' m' → logprob: -3.4810585975646973
    7. '2' → logprob: -4.231058597564697
    8. 'n' → logprob: -4.606058597564697
    9. ' ' → logprob: -5.356058597564697
    10. ' l' → logprob: -5.606058597564697

Token 518: ' contexte' (ID: 82673)
  Prédit: ' contexte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contexte' → logprob: -0.3778854012489319
    2. ' code' → logprob: -2.002885341644287
    3. ' context' → logprob: -2.502885341644287
    4. 'context' → logprob: -3.002885341644287
    5. ' )' → logprob: -4.627885341644287
    6. 'code' → logprob: -5.252885341644287
    7. 'd' → logprob: -5.377885341644287
    8. ' m' → logprob: -5.752885341644287
    9. ')' → logprob: -5.877885341644287
    10. 'con' → logprob: -6.002885341644287

Token 519: ' spécifique' (ID: 113170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3040663003921509
    2. ')' → logprob: -2.3040661811828613
    3. 'ans' → logprob: -2.3040661811828613
    4. ':' → logprob: -3.4290661811828613
    5. '*' → logprob: -5.429066181182861
    6. ')
' → logprob: -5.804066181182861
    7. '):' → logprob: -5.929066181182861
    8. '```' → logprob: -5.929066181182861
    9. '(ans' → logprob: -6.054066181182861
    10. '.' → logprob: -6.054066181182861

Token 520: ' du' (ID: 1462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.640004575252533
    2. ':' → logprob: -1.0150046348571777
    3. ')' → logprob: -3.5150046348571777
    4. '(ans' → logprob: -3.6400046348571777
    5. '2' → logprob: -3.7650046348571777
    6. ' ans' → logprob: -4.765004634857178
    7. '*' → logprob: -5.015004634857178
    8. '   ' → logprob: -5.140004634857178
    9. '.' → logprob: -5.390004634857178
    10. '):' → logprob: -6.390004634857178

Token 521: ' problème' (ID: 35630)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.9316914081573486
    2. ' code' → logprob: -0.9316914081573486
    3. ' problème' → logprob: -2.4316914081573486
    4. 'pro' → logprob: -2.6816914081573486
    5. 'programme' → logprob: -3.5566914081573486
    6. 'proble' → logprob: -4.4316911697387695
    7. 'problem' → logprob: -5.0566911697387695
    8. 'script' → logprob: -6.0566911697387695
    9. 'jeu' → logprob: -6.6816911697387695
    10. ' script' → logprob: -7.1816911697387695

Token 522: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6664161682128906
    2. '   ' → logprob: -1.1664161682128906
    3. ')' → logprob: -2.4164161682128906
    4. 'ans' → logprob: -3.0414161682128906
    5. '):' → logprob: -3.6664161682128906
    6. ' ans' → logprob: -5.041416168212891
    7. '(ans' → logprob: -6.666416168212891
    8. ':
' → logprob: -7.416416168212891
    9. ']' → logprob: -7.541416168212891
    10. ')
' → logprob: -7.541416168212891

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012418059632182121
    2. 'ans' → logprob: -4.512418270111084
    3. ' ans' → logprob: -6.637418270111084
    4. '	ans' → logprob: -10.262417793273926
    5. ':' → logprob: -12.012417793273926
    6. '(ans' → logprob: -12.262417793273926
    7. '       ' → logprob: -12.637417793273926
    8. ' ' → logprob: -13.512417793273926
    9. '    
' → logprob: -13.512417793273926
    10. '   ' → logprob: -13.512417793273926

Token 524: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.08224381506443024
    2. '   ' → logprob: -2.5822439193725586
    3. ' ans' → logprob: -5.707243919372559
    4. '	ans' → logprob: -10.707243919372559
    5. '(ans' → logprob: -13.082243919372559
    6. ' ' → logprob: -14.082243919372559
    7. '  ' → logprob: -15.082243919372559
    8. '       ' → logprob: -15.332243919372559
    9. '_ans' → logprob: -15.582243919372559
    10. 'answer' → logprob: -15.832243919372559

Token 525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01818166859447956
    2. '=' → logprob: -4.018181800842285
    3. ' +=' → logprob: -10.393181800842285
    4. '+=' → logprob: -13.768181800842285
    5. ' ' → logprob: -17.51818084716797
    6. ' =(' → logprob: -17.51818084716797
    7. '.=' → logprob: -17.89318084716797
    8. ' *=' → logprob: -17.89318084716797
    9. '＝' → logprob: -19.14318084716797
    10. ' ' → logprob: -19.51818084716797

Token 526: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06357402354478836
    2. ' ' → logprob: -2.8135740756988525
    3. '(' → logprob: -6.563573837280273
    4. ' (' → logprob: -8.563573837280273
    5. '   ' → logprob: -12.938573837280273
    6. 'float' → logprob: -14.813573837280273
    7. '((' → logprob: -15.188573837280273
    8. '  ' → logprob: -16.063573837280273
    9. '(float' → logprob: -16.688573837280273
    10. '```' → logprob: -17.563573837280273

Token 527: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006726499181240797
    2. '(' → logprob: -5.006726264953613
    3. ' ' → logprob: -11.756726264953613
    4. ' (' → logprob: -13.506726264953613
    5. 'float' → logprob: -13.881726264953613
    6. '((' → logprob: -14.506726264953613
    7. '(float' → logprob: -14.631726264953613
    8. '   ' → logprob: -16.88172721862793
    9. '(m' → logprob: -18.63172721862793
    10. '```' → logprob: -18.75672721862793

Token 528: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.36574100604048e-06
    2. '*' → logprob: -12.875004768371582
    3. ' .' → logprob: -13.750004768371582
    4. ' *' → logprob: -15.500004768371582
    5. '*.' → logprob: -15.750004768371582
    6. '.
' → logprob: -15.875004768371582
    7. '.*' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.250003814697266
    9. ' ' → logprob: -17.375003814697266
    10. '```' → logprob: -18.125003814697266

Token 529: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014943843707442284
    2. '(m' → logprob: -6.876494407653809
    3. '.' → logprob: -8.126494407653809
    4. 'float' → logprob: -9.626494407653809
    5. '(' → logprob: -10.251494407653809
    6. '*' → logprob: -10.626494407653809
    7. ' (' → logprob: -11.501494407653809
    8. ' ' → logprob: -11.751494407653809
    9. '(float' → logprob: -11.876494407653809
    10. '*(' → logprob: -12.251494407653809

Token 530: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.474617063999176
    2. ' *' → logprob: -0.974617063999176
    3. '*(' → logprob: -7.599617004394531
    4. '.' → logprob: -10.849617004394531
    5. '*((' → logprob: -10.974617004394531
    6. '   ' → logprob: -13.349617004394531
    7. ' ' → logprob: -14.974617004394531
    8. '*n' → logprob: -15.349617004394531
    9. ' ' → logprob: -15.724617004394531
    10. ' *(' → logprob: -15.724617004394531

Token 531: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03867533802986145
    2. '(n' → logprob: -3.288675308227539
    3. ' (' → logprob: -7.413675308227539
    4. '((' → logprob: -10.413675308227539
    5. '(' → logprob: -14.913675308227539
    6. '   ' → logprob: -15.288675308227539
    7. '*(' → logprob: -17.03867530822754
    8. 'm' → logprob: -17.41367530822754
    9. '（' → logprob: -17.78867530822754
    10. '`' → logprob: -17.91367530822754

Token 532: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.061972059309482574
    2. 'n' → logprob: -2.811972141265869
    3. ' (' → logprob: -12.436971664428711
    4. ' n' → logprob: -16.18697166442871
    5. '(' → logprob: -16.31197166442871
    6. '((' → logprob: -16.43697166442871
    7. '	n' → logprob: -17.06197166442871
    8. '(m' → logprob: -17.31197166442871
    9. '   ' → logprob: -17.93697166442871
    10. 'm' → logprob: -18.06197166442871

Token 533: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25210919976234436
    2. ' -' → logprob: -1.502109169960022
    3. '-d' → logprob: -8.62710952758789
    4. ' ' → logprob: -15.12710952758789
    5. '   ' → logprob: -16.00210952758789
    6. '-D' → logprob: -16.00210952758789
    7. 'd' → logprob: -16.12710952758789
    8. '-m' → logprob: -16.62710952758789
    9. ' ' → logprob: -16.75210952758789
    10. '  ' → logprob: -17.12710952758789

Token 534: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.12502098083496
    4. '	d' → logprob: -19.00002098083496
    5. ' ' → logprob: -21.12502098083496
    6. '
' → logprob: -21.87502098083496
    7. ')d' → logprob: -21.87502098083496
    8. '  ' → logprob: -22.37502098083496
    9. '       ' → logprob: -23.87502098083496
    10. '_d' → logprob: -23.87502098083496

Token 535: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016229959146585315
    2. '*' → logprob: -9.125162124633789
    3. ')*' → logprob: -10.000162124633789
    4. ' )' → logprob: -12.250162124633789
    5. ')*(' → logprob: -13.250162124633789
    6. '*)' → logprob: -14.625162124633789
    7. ' *' → logprob: -14.750162124633789
    8. '*(' → logprob: -16.00016212463379
    9. '),' → logprob: -16.00016212463379
    10. ')
' → logprob: -16.87516212463379

Token 536: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011669192463159561
    2. ' *' → logprob: -4.511669158935547
    3. '*(' → logprob: -7.386669158935547
    4. '   ' → logprob: -14.136669158935547
    5. '*m' → logprob: -14.636669158935547
    6. '*((' → logprob: -15.636669158935547
    7. '(m' → logprob: -15.886669158935547
    8. ' ' → logprob: -16.886669158935547
    9. '```' → logprob: -16.886669158935547
    10. ' *(' → logprob: -17.636669158935547

Token 537: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -8.53050296427682e-05
    2. ' (' → logprob: -9.37508487701416
    3. '((' → logprob: -15.00008487701416
    4. 'float' → logprob: -18.000085830688477
    5. '(M' → logprob: -18.875085830688477
    6. '(' → logprob: -19.500085830688477
    7. '   ' → logprob: -20.375085830688477
    8. '[m' → logprob: -21.000085830688477
    9. 'm' → logprob: -21.375085830688477
    10. ' ' → logprob: -21.500085830688477

Token 538: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00020461321400944144
    2. 'm' → logprob: -8.750205039978027
    3. ' (' → logprob: -10.000205039978027
    4. '((' → logprob: -14.625205039978027
    5. '(' → logprob: -17.25020408630371
    6. '   ' → logprob: -17.62520408630371
    7. ' m' → logprob: -17.62520408630371
    8. '[m' → logprob: -17.75020408630371
    9. '	m' → logprob: -18.12520408630371
    10. 'float' → logprob: -19.00020408630371

Token 539: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4287068545818329
    2. ' -' → logprob: -1.0537068843841553
    3. ' ' → logprob: -12.303707122802734
    4. '   ' → logprob: -15.053707122802734
    5. ')' → logprob: -15.178707122802734
    6. '−' → logprob: -15.428707122802734
    7. '  ' → logprob: -15.803707122802734
    8. '```' → logprob: -15.928707122802734
    9. ' ' → logprob: -16.303707122802734
    10. '.' → logprob: -16.553707122802734

Token 540: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.375011444091797
    4. '```' → logprob: -16.375011444091797
    5. '<|end|>' → logprob: -18.250011444091797
    6. '۱' → logprob: -19.125011444091797
    7. ')' → logprob: -19.250011444091797
    8. '  ' → logprob: -19.250011444091797
    9. '１' → logprob: -20.437511444091797
    10. '১' → logprob: -20.500011444091797

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -15.500001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -17.812501907348633
    6. '۱' → logprob: -18.250001907348633
    7. '１' → logprob: -19.250001907348633
    8. '১' → logprob: -19.312501907348633
    9. ')' → logprob: -19.687501907348633
    10. '[' → logprob: -19.875001907348633

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027922164648771286
    2. ')/(' → logprob: -4.2779221534729
    3. '/' → logprob: -4.4029221534729
    4. ')/' → logprob: -7.4029221534729
    5. '/(' → logprob: -7.7779221534729
    6. ' /' → logprob: -7.9029221534729
    7. '/n' → logprob: -11.527922630310059
    8. ' )' → logprob: -11.652922630310059
    9. '/)' → logprob: -13.027922630310059
    10. '/
' → logprob: -13.652922630310059

Token 543: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.38211148977279663
    2. '/(' → logprob: -1.5071115493774414
    3. '/' → logprob: -2.3821115493774414
    4. '/n' → logprob: -6.257111549377441
    5. ' /(' → logprob: -6.507111549377441
    6. '/
' → logprob: -8.757111549377441
    7. ' /
' → logprob: -9.882111549377441
    8. 'n' → logprob: -10.757111549377441
    9. ')/(' → logprob: -11.507111549377441
    10. '(n' → logprob: -11.507111549377441

Token 544: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001146291324403137
    2. '(' → logprob: -9.375114440917969
    3. ' (' → logprob: -10.875114440917969
    4. 'n' → logprob: -11.500114440917969
    5. '((' → logprob: -14.375114440917969
    6. '(nn' → logprob: -16.25011444091797
    7. '(nx' → logprob: -18.37511444091797
    8. ' n' → logprob: -18.62511444091797
    9. '\(' → logprob: -19.50011444091797
    10. '(np' → logprob: -19.50011444091797

Token 545: ' /' (ID: 820)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.059564512223005295
    2. '*n' → logprob: -3.8095645904541016
    3. '2' → logprob: -3.9345645904541016
    4. '*' → logprob: -4.184564590454102
    5. '```' → logprob: -8.059564590454102
    6. '(n' → logprob: -8.559564590454102
    7. '²' → logprob: -9.434564590454102
    8. ' ' → logprob: -9.684564590454102
    9. '/n' → logprob: -9.809564590454102
    10. 'n' → logprob: -9.934564590454102

Token 546: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.061676347395405e-05
    2. ' n' → logprob: -10.25005054473877
    3. '(n' → logprob: -11.12505054473877
    4. '(' → logprob: -14.87505054473877
    5. '	n' → logprob: -17.375051498413086
    6. ' (' → logprob: -17.500051498413086
    7. ')n' → logprob: -19.500051498413086
    8. ',n' → logprob: -20.000051498413086
    9. '*n' → logprob: -20.500051498413086
    10. ' ' → logprob: -21.000051498413086

Token 547: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03426586464047432
    2. '<|end|>' → logprob: -3.9092657566070557
    3. '\n' → logprob: -4.534265995025635
    4. '
' → logprob: -6.659265995025635
    5. ' print' → logprob: -7.409265995025635
    6. ')' → logprob: -8.159265518188477
    7. '\' → logprob: -8.284265518188477
    8. '[' → logprob: -9.159265518188477
    9. '```' → logprob: -9.159265518188477
    10. '+' → logprob: -9.784265518188477

Token 548: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.77627644513268e-06
    2. ' print' → logprob: -12.000008583068848
    3. ')' → logprob: -13.000008583068848
    4. 'pr' → logprob: -16.625009536743164
    5. '#' → logprob: -16.750009536743164
    6. '.print' → logprob: -16.750009536743164
    7. 'prin' → logprob: -17.750009536743164
    8. '```' → logprob: -18.500009536743164
    9. 'pri' → logprob: -18.625009536743164
    10. '(print' → logprob: -19.375009536743164

Token 549: ' Les' (ID: 7029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.25
    3. 'printf' → logprob: -24.875
    4. '#' → logprob: -25.375
    5. '```' → logprob: -25.375
    6. '#print' → logprob: -25.75
    7. 'Print' → logprob: -27.0
    8. 'import' → logprob: -27.875
    9. 'ans' → logprob: -29.125
    10. '	print' → logprob: -29.5

Token 550: ' deux' (ID: 10301)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. '#' → logprob: -13.00000286102295
    3. ' print' → logprob: -15.25000286102295
    4. 'r' → logprob: -16.000003814697266
    5. 'pr' → logprob: -16.000003814697266
    6. 'prin' → logprob: -16.000003814697266
    7. 'prit' → logprob: -16.125003814697266
    8. '#print' → logprob: -16.250003814697266
    9. 'printf' → logprob: -16.750003814697266
    10. ':' → logprob: -18.000003814697266

Token 551: ' lignes' (ID: 81687)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003630600171163678
    2. ' print' → logprob: -6.128630638122559
    3. '#' → logprob: -6.753630638122559
    4. 'ans' → logprob: -9.378630638122559
    5. ' lignes' → logprob: -10.628630638122559
    6. 'import' → logprob: -10.753630638122559
    7. ':' → logprob: -10.878630638122559
    8. 'prints' → logprob: -11.003630638122559
    9. 'conditions' → logprob: -11.378630638122559
    10. '#print' → logprob: -11.503630638122559

Token 552: ' suivantes' (ID: 106173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006507210782729089
    2. '
' → logprob: -8.000650405883789
    3. '#' → logprob: -8.375650405883789
    4. ' print' → logprob: -10.000650405883789
    5. '#print' → logprob: -11.375650405883789
    6. 'import' → logprob: -11.875650405883789
    7. 'ans' → logprob: -12.375650405883789
    8. '.print' → logprob: -12.625650405883789
    9. '

' → logprob: -12.750650405883789
    10. '=' → logprob: -13.250650405883789

Token 553: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.707997428951785e-05
    2. '
' → logprob: -10.250077247619629
    3. '#' → logprob: -10.750077247619629
    4. '#print' → logprob: -11.375077247619629
    5. ' print' → logprob: -11.875077247619629
    6. '.print' → logprob: -14.375077247619629
    7. '
' → logprob: -15.375077247619629
    8. 'for' → logprob: -15.375077247619629
    9. '

' → logprob: -16.000076293945312
    10. 'import' → logprob: -16.250076293945312

Token 554: ' précéd' (ID: 55435)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4868770196917467e-05
    2. ' print' → logprob: -10.875024795532227
    3. '#' → logprob: -12.750024795532227
    4. '
' → logprob: -13.250024795532227
    5. '#print' → logprob: -13.875024795532227
    6. '```' → logprob: -16.250024795532227
    7. 'pr' → logprob: -16.625024795532227
    8. 'import' → logprob: -17.250024795532227
    9. 'prin' → logprob: -17.375024795532227
    10. '
' → logprob: -17.625024795532227

Token 555: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.16686564683914185
    2. '#' → logprob: -1.916865587234497
    3. 'é' → logprob: -5.916865825653076
    4. 'ent' → logprob: -6.666865825653076
    5. 'entes' → logprob: -7.166865825653076
    6. 'ed' → logprob: -7.166865825653076
    7. 'ée' → logprob: -7.541865825653076
    8. 'és' → logprob: -8.291865348815918
    9. 'ant' → logprob: -8.541865348815918
    10. 'emment' → logprob: -10.541865348815918

Token 556: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12988394498825073
    2. 'print' → logprob: -2.1298840045928955
    3. '#print' → logprob: -7.129883766174316
    4. ' print' → logprob: -7.504883766174316
    5. ' de' → logprob: -7.754883766174316
    6. ' #' → logprob: -9.004883766174316
    7. ' par' → logprob: -9.004883766174316
    8. 'a' → logprob: -9.004883766174316
    9. '#
' → logprob: -9.004883766174316
    10. 'd' → logprob: -9.379883766174316

Token 557: ' '#' (ID: 11284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6361831426620483
    2. '#' → logprob: -0.7611831426620483
    3. 'pr' → logprob: -6.511183261871338
    4. '#print' → logprob: -6.636183261871338
    5. ' #' → logprob: -8.88618278503418
    6. ' print' → logprob: -9.01118278503418
    7. 'la' → logprob: -9.38618278503418
    8. '"#' → logprob: -9.76118278503418
    9. 'comment' → logprob: -10.01118278503418
    10. 'le' → logprob: -10.01118278503418

Token 558: '',' (ID: 787)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014274923130869865
    2. ' print' → logprob: -4.389275074005127
    3. 'pr' → logprob: -6.764275074005127
    4. '#' → logprob: -8.014274597167969
    5. '')' → logprob: -8.889274597167969
    6. 'ans' → logprob: -10.264274597167969
    7. '#print' → logprob: -10.514274597167969
    8. ' #' → logprob: -11.139274597167969
    9. ' ans' → logprob: -11.264274597167969
    10. 'prin' → logprob: -11.639274597167969

Token 559: ' sont' (ID: 5242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12441746145486832
    2. '#print' → logprob: -2.624417543411255
    3. 'print' → logprob: -3.124417543411255
    4. ' #' → logprob: -7.999417304992676
    5. ' print' → logprob: -8.874417304992676
    6. '##' → logprob: -11.624417304992676
    7. '```' → logprob: -11.624417304992676
    8. '#w' → logprob: -11.874417304992676
    9. '
' → logprob: -12.124417304992676
    10. '#set' → logprob: -12.499417304992676

Token 560: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010577763430774212
    2. ' comment' → logprob: -6.01057767868042
    3. ' des' → logprob: -6.13557767868042
    4. 'comment' → logprob: -6.38557767868042
    5. ' #' → logprob: -6.76057767868042
    6. '#print' → logprob: -7.26057767868042
    7. 'des' → logprob: -7.26057767868042
    8. ' une' → logprob: -7.88557767868042
    9. ' utilisées' → logprob: -8.260578155517578
    10. ' commentaires' → logprob: -9.135578155517578

Token 561: ' commentaires' (ID: 67971)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.1207827627658844
    2. ' commentaires' → logprob: -2.7457828521728516
    3. 'print' → logprob: -3.7457828521728516
    4. '#' → logprob: -4.120782852172852
    5. 'comments' → logprob: -5.120782852172852
    6. 'Commentaires' → logprob: -6.370782852172852
    7. 'coment' → logprob: -7.245782852172852
    8. 'instructions' → logprob: -7.495782852172852
    9. 'com' → logprob: -7.870782852172852
    10. '#print' → logprob: -8.995782852172852

Token 562: ' et' (ID: 859)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.07925448566675186
    2. '#' → logprob: -2.579254388809204
    3. 'print' → logprob: -7.954254627227783
    4. '#if' → logprob: -12.079254150390625
    5. '#
' → logprob: -13.204254150390625
    6. '#import' → logprob: -13.704254150390625
    7. '#line' → logprob: -14.329254150390625
    8. '
' → logprob: -14.704254150390625
    9. '#w' → logprob: -14.704254150390625
    10. ''''
' → logprob: -14.829254150390625

Token 563: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.031005578115582466
    2. 'ne' → logprob: -4.156005382537842
    3. 'n' → logprob: -5.406005382537842
    4. 'print' → logprob: -5.531005382537842
    5. '#print' → logprob: -5.531005382537842
    6. ' ne' → logprob: -7.406005382537842
    7. ' #' → logprob: -7.656005382537842
    8. 'non' → logprob: -8.281005859375
    9. ' n' → logprob: -8.406005859375
    10. 's' → logprob: -8.531005859375

Token 564: ' in' (ID: 306)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.025507140904664993
    2. '#print' → logprob: -3.7755072116851807
    3. 'print' → logprob: -7.025506973266602
    4. ' #' → logprob: -8.525506973266602
    5. 'comment' → logprob: -8.775506973266602
    6. ' not' → logprob: -9.275506973266602
    7. 'pass' → logprob: -9.400506973266602
    8. 'à' → logprob: -9.525506973266602
    9. 'not' → logprob: -9.525506973266602
    10. 'pas' → logprob: -9.775506973266602

Token 565: 'act' (ID: 588)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5992439389228821
    2. 'util' → logprob: -1.8492438793182373
    3. 'structions' → logprob: -2.9742438793182373
    4. 'fine' → logprob: -2.9742438793182373
    5. 'comment' → logprob: -3.3492438793182373
    6. 'cap' → logprob: -3.3492438793182373
    7. 'correct' → logprob: -4.474244117736816
    8. 'a' → logprob: -4.599244117736816
    9. '#print' → logprob: -4.599244117736816
    10. '```' → logprob: -4.724244117736816

Token 566: 'ives' (ID: 2264)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01959710754454136
    2. 'ées' → logprob: -4.394597053527832
    3. 'uelles' → logprob: -6.144597053527832
    4. 'és' → logprob: -7.269597053527832
    5. 'iv' → logprob: -7.644597053527832
    6. '#print' → logprob: -7.644597053527832
    7. 'entes' → logprob: -7.769597053527832
    8. '##' → logprob: -7.894597053527832
    9. 'antes' → logprob: -8.144597053527832
    10. 'ives' → logprob: -8.644597053527832

Token 567: '.
' (ID: 558)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.04692695662379265
    2. '#' → logprob: -3.171926975250244
    3. 'print' → logprob: -5.546926975250244
    4. '
' → logprob: -11.671926498413086
    5. '#
' → logprob: -12.671926498413086
    6. '```' → logprob: -13.171926498413086
    7. ''''
' → logprob: -13.671926498413086
    8. '#if' → logprob: -13.921926498413086
    9. '﻿#' → logprob: -14.171926498413086
    10. '#a' → logprob: -14.546926498413086

Token 568: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029721148312091827
    2. '#print' → logprob: -6.00297212600708
    3. '#' → logprob: -7.62797212600708
    4. 'pr' → logprob: -12.002971649169922
    5. 'ans' → logprob: -13.877971649169922
    6. 'prin' → logprob: -14.002971649169922
    7. ' print' → logprob: -14.127971649169922
    8. '```' → logprob: -15.127971649169922
    9. 'prit' → logprob: -15.502971649169922
    10. '
' → logprob: -15.502971649169922

Token 569: ' Elles' (ID: 77713)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.531315314830863e-06
    2. 'pr' → logprob: -13.375003814697266
    3. ' print' → logprob: -14.125003814697266
    4. '#' → logprob: -14.625003814697266
    5. 'ans' → logprob: -15.125003814697266
    6. '#print' → logprob: -15.125003814697266
    7. 'prin' → logprob: -15.750003814697266
    8. 'pri' → logprob: -17.375003814697266
    9. 'prit' → logprob: -18.250003814697266
    10. 'p' → logprob: -18.625003814697266

Token 570: ' semblent' (ID: 139125)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.14591431617736816
    2. '#' → logprob: -2.020914316177368
    3. 'print' → logprob: -5.770914077758789
    4. '
' → logprob: -10.645914077758789
    5. '#do' → logprob: -11.145914077758789
    6. ' #' → logprob: -11.520914077758789
    7. '#if' → logprob: -11.770914077758789
    8. ' print' → logprob: -12.020914077758789
    9. '#w' → logprob: -12.270914077758789
    10. '#a' → logprob: -12.270914077758789

Token 571: ' montrer' (ID: 83696)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07971085608005524
    2. '#print' → logprob: -2.5797109603881836
    3. 'print' → logprob: -7.454710960388184
    4. ' #' → logprob: -9.204710960388184
    5. '#w' → logprob: -10.079710960388184
    6. '#import' → logprob: -11.329710960388184
    7. '#a' → logprob: -11.454710960388184
    8. 'ans' → logprob: -11.704710960388184
    9. ' print' → logprob: -11.704710960388184
    10. '#m' → logprob: -11.829710960388184

Token 572: ' une' (ID: 2463)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22659093141555786
    2. '#print' → logprob: -1.601590871810913
    3. 'print' → logprob: -6.851591110229492
    4. ' #' → logprob: -10.351591110229492
    5. '#a' → logprob: -10.476591110229492
    6. '
' → logprob: -11.226591110229492
    7. '"""
' → logprob: -11.726591110229492
    8. '#w' → logprob: -12.101591110229492
    9. ''''
' → logprob: -12.226591110229492
    10. '#import' → logprob: -12.476591110229492

Token 573: ' variante' (ID: 137790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5781170725822449
    2. '#print' → logprob: -0.9531170725822449
    3. 'print' → logprob: -2.9531171321868896
    4. ' #' → logprob: -8.078117370605469
    5. '
' → logprob: -8.078117370605469
    6. ' print' → logprob: -8.703117370605469
    7. '#m' → logprob: -9.078117370605469
    8. 'pr' → logprob: -9.203117370605469
    9. 'prise' → logprob: -10.328117370605469
    10. '#line' → logprob: -10.828117370605469

Token 574: ' du' (ID: 1462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1008802279829979
    2. '#print' → logprob: -2.3508801460266113
    3. 'print' → logprob: -7.600880146026611
    4. '#if' → logprob: -10.47588062286377
    5. '#import' → logprob: -11.10088062286377
    6. ')' → logprob: -11.35088062286377
    7. '#a' → logprob: -11.35088062286377
    8. '#from' → logprob: -11.47588062286377
    9. '#af' → logprob: -11.72588062286377
    10. 'ans' → logprob: -11.72588062286377

Token 575: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8119428157806396
    2. '#print' → logprob: -1.0619428157806396
    3. '#' → logprob: -1.5619428157806396
    4. 'ans' → logprob: -8.061943054199219
    5. '```' → logprob: -10.061943054199219
    6. '#if' → logprob: -10.936943054199219
    7. 'prin' → logprob: -11.311943054199219
    8. '#a' → logprob: -11.561943054199219
    9. '#w' → logprob: -11.686943054199219
    10. '"""
' → logprob: -11.686943054199219

Token 576: ' selon' (ID: 27571)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.10650317370891571
    2. '#' → logprob: -2.6065032482147217
    3. 'print' → logprob: -3.6065032482147217
    4. '
' → logprob: -10.4815034866333
    5. '#if' → logprob: -10.8565034866333
    6. '```' → logprob: -11.8565034866333
    7. '#
' → logprob: -12.1065034866333
    8. '#import' → logprob: -12.1065034866333
    9. ''''
' → logprob: -12.8565034866333
    10. '#m' → logprob: -13.3565034866333

Token 577: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0018735475605353713
    2. '#print' → logprob: -6.50187349319458
    3. '#m' → logprob: -9.126873970031738
    4. '#a' → logprob: -9.626873970031738
    5. '#if' → logprob: -10.251873970031738
    6. 'la' → logprob: -11.126873970031738
    7. '#w' → logprob: -11.251873970031738
    8. ' #' → logprob: -11.376873970031738
    9. '
' → logprob: -11.376873970031738
    10. '```' → logprob: -11.376873970031738

Token 578: ' valeurs' (ID: 73668)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.021084221079945564
    2. '#print' → logprob: -4.021084308624268
    3. '#m' → logprob: -6.646084308624268
    4. 'ans' → logprob: -7.146084308624268
    5. '#if' → logprob: -8.27108383178711
    6. '
' → logprob: -9.39608383178711
    7. '```' → logprob: -9.64608383178711
    8. '#import' → logprob: -9.64608383178711
    9. 'print' → logprob: -9.89608383178711
    10. '"""
' → logprob: -10.02108383178711

Token 579: ' de' (ID: 334)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.4652124047279358
    2. '#' → logprob: -1.340212345123291
    3. 'print' → logprob: -2.215212345123291
    4. '#if' → logprob: -7.465212345123291
    5. '#m' → logprob: -8.46521282196045
    6. '
' → logprob: -9.96521282196045
    7. 'ans' → logprob: -10.09021282196045
    8. '```' → logprob: -10.71521282196045
    9. '#
' → logprob: -10.84021282196045
    10. ''''
' → logprob: -11.09021282196045

Token 580: ' '' (ID: 461)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16949668526649475
    2. 'd' → logprob: -2.044496774673462
    3. '#m' → logprob: -4.169496536254883
    4. 'n' → logprob: -5.044496536254883
    5. 'ans' → logprob: -5.919496536254883
    6. 'm' → logprob: -7.794496536254883
    7. '#print' → logprob: -8.044496536254883
    8. ' #' → logprob: -8.544496536254883
    9. '#a' → logprob: -8.794496536254883
    10. '#if' → logprob: -8.794496536254883

Token 581: 'd' (ID: 67)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11412374675273895
    2. 'ans' → logprob: -3.114123821258545
    3. 'd' → logprob: -3.614123821258545
    4. '#m' → logprob: -4.114123821258545
    5. 'n' → logprob: -4.239123821258545
    6. '#print' → logprob: -5.864123821258545
    7. 'm' → logprob: -7.364123821258545
    8. ' #' → logprob: -7.739123821258545
    9. ''''
' → logprob: -7.989123821258545
    10. '"""
' → logprob: -8.239123344421387

Token 582: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03540460392832756
    2. ')' → logprob: -4.035404682159424
    3. '#print' → logprob: -4.660404682159424
    4. '#if' → logprob: -5.535404682159424
    5. ')#' → logprob: -6.910404682159424
    6. '
' → logprob: -7.410404682159424
    7. '')' → logprob: -8.160404205322266
    8. '#
' → logprob: -8.160404205322266
    9. 'print' → logprob: -8.660404205322266
    10. ')
' → logprob: -8.785404205322266

Token 583: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5303006172180176
    2. '#print' → logprob: -1.2803006172180176
    3. '#' → logprob: -2.0303006172180176
    4. '
' → logprob: -6.405300617218018
    5. '#
' → logprob: -8.15530014038086
    6. '#if' → logprob: -9.15530014038086
    7. ')
' → logprob: -10.28030014038086
    8. ' print' → logprob: -10.28030014038086
    9. ''''
' → logprob: -10.40530014038086
    10. '"""
' → logprob: -10.78030014038086

Token 584: ' n' (ID: 297)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4118715822696686
    2. 'print' → logprob: -1.7868715524673462
    3. '#print' → logprob: -1.7868715524673462
    4. 'ans' → logprob: -6.661871433258057
    5. ' print' → logprob: -7.661871433258057
    6. ' #' → logprob: -8.286871910095215
    7. 'n' → logprob: -8.536871910095215
    8. '
' → logprob: -9.286871910095215
    9. 'pass' → logprob: -9.911871910095215
    10. ' ans' → logprob: -10.161871910095215

Token 585: ''in' (ID: 17942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07426288723945618
    2. '#print' → logprob: -2.824262857437134
    3. 'ans' → logprob: -4.824263095855713
    4. 'print' → logprob: -6.324263095855713
    5. 'n' → logprob: -7.699263095855713
    6. '#a' → logprob: -8.199262619018555
    7. '
' → logprob: -8.199262619018555
    8. ''ont' → logprob: -8.449262619018555
    9. 'ont' → logprob: -8.574262619018555
    10. ''''
' → logprob: -8.949262619018555

Token 586: 'flu' (ID: 32844)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1940544843673706
    2. 'ans' → logprob: -1.8190544843673706
    3. '#print' → logprob: -5.19405460357666
    4. 'clude' → logprob: -5.81905460357666
    5. 'd' → logprob: -6.06905460357666
    6. 'pas' → logprob: -7.06905460357666
    7. 'print' → logprob: -7.81905460357666
    8. 'ont' → logprob: -7.94405460357666
    9. '```' → logprob: -7.94405460357666
    10. 'e' → logprob: -8.56905460357666

Token 587: 'encent' (ID: 29973)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.10732951015233994
    2. '#' → logprob: -3.3573296070098877
    3. 'encent' → logprob: -3.4823296070098877
    4. 'en' → logprob: -4.607329368591309
    5. 'ant' → logprob: -4.982329368591309
    6. 'er' → logprob: -5.107329368591309
    7. 'e' → logprob: -5.232329368591309
    8. 'enc' → logprob: -6.232329368591309
    9. 'ence' → logprob: -6.607329368591309
    10. '```' → logprob: -7.232329368591309

Token 588: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.39842069149017334
    2. '#' → logprob: -1.1484206914901733
    3. ' pas' → logprob: -4.523420810699463
    4. 'le' → logprob: -7.898420810699463
    5. 'ans' → logprob: -10.023420333862305
    6. '_pas' → logprob: -10.148420333862305
    7. '<|end|>' → logprob: -10.773420333862305
    8. 'the' → logprob: -11.148420333862305
    9. 'plus' → logprob: -11.273420333862305
    10. 'auc' → logprob: -11.398420333862305

Token 589: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45622941851615906
    2. '#' → logprob: -1.5812294483184814
    3. '#print' → logprob: -1.8312294483184814
    4. 'ans' → logprob: -8.831229209899902
    5. ' print' → logprob: -10.081229209899902
    6. '<|end|>' → logprob: -10.206229209899902
    7. '#if' → logprob: -10.331229209899902
    8. '
' → logprob: -10.581229209899902
    9. ' #' → logprob: -11.081229209899902
    10. ')' → logprob: -11.206229209899902

Token 590: ''ex' (ID: 23472)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.39284396171569824
    2. '#' → logprob: -1.7678439617156982
    3. 'a' → logprob: -1.8928439617156982
    4. 'e' → logprob: -7.017844200134277
    5. 'result' → logprob: -7.267844200134277
    6. 'code' → logprob: -7.892844200134277
    7. '#print' → logprob: -8.017844200134277
    8. 'print' → logprob: -8.142844200134277
    9. 'answer' → logprob: -8.392844200134277
    10. ' ans' → logprob: -9.267844200134277

Token 591: 'écution' (ID: 122423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06010514497756958
    2. ')' → logprob: -3.185105085372925
    3. '#' → logprob: -4.685105323791504
    4. '#print' → logprob: -5.935105323791504
    5. 'ans' → logprob: -6.060105323791504
    6. 'pr' → logprob: -7.560105323791504
    7. 'p' → logprob: -7.685105323791504
    8. 'r' → logprob: -8.060105323791504
    9. ' print' → logprob: -8.185105323791504
    10. ')
' → logprob: -8.185105323791504

Token 592: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004827273078262806
    2. '#' → logprob: -5.879827499389648
    3. '#print' → logprob: -6.254827499389648
    4. ')' → logprob: -9.879827499389648
    5. ' print' → logprob: -11.004827499389648
    6. '<|end|>' → logprob: -11.504827499389648
    7. 'if' → logprob: -12.379827499389648
    8. '#if' → logprob: -13.004827499389648
    9. '
' → logprob: -13.629827499389648
    10. 'pr' → logprob: -13.629827499389648

Token 593: ' code' (ID: 3490)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10369672626256943
    2. 'code' → logprob: -3.103696823120117
    3. 'ans' → logprob: -3.478696823120117
    4. '#' → logprob: -3.853696823120117
    5. '#print' → logprob: -7.353696823120117
    6. 'result' → logprob: -7.603696823120117
    7. ' code' → logprob: -9.228696823120117
    8. 'answer' → logprob: -9.728696823120117
    9. 'programme' → logprob: -9.978696823120117
    10. '```' → logprob: -10.103696823120117

Token 594: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032575693912804127
    2. '#print' → logprob: -6.128257751464844
    3. '#' → logprob: -6.878257751464844
    4. ' print' → logprob: -11.003257751464844
    5. ')' → logprob: -11.253257751464844
    6. '
' → logprob: -13.128257751464844
    7. '<|end|>' → logprob: -13.503257751464844
    8. '#
' → logprob: -13.878257751464844
    9. 'pr' → logprob: -14.003257751464844
    10. ')
' → logprob: -14.253257751464844

Token 595: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008851631544530392
    2. '#print' → logprob: -4.758851528167725
    3. '#' → logprob: -8.383852005004883
    4. ' print' → logprob: -11.883852005004883
    5. 'pr' → logprob: -14.758852005004883
    6. 'prin' → logprob: -15.258852005004883
    7. '<|end|>' → logprob: -15.383852005004883
    8. '```' → logprob: -15.508852005004883
    9. '#if' → logprob: -16.133852005004883
    10. '.print' → logprob: -16.133852005004883

Token 596: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.9153885558771435e-06
    2. '#print' → logprob: -12.625005722045898
    3. '#' → logprob: -13.625005722045898
    4. ' print' → logprob: -13.750005722045898
    5. 'pr' → logprob: -15.625005722045898
    6. 'prin' → logprob: -17.1250057220459
    7. 'prit' → logprob: -18.2500057220459
    8. 'pri' → logprob: -18.2500057220459
    9. '
' → logprob: -18.5000057220459
    10. ')' → logprob: -18.5000057220459

Token 597: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6596361994743347
    2. ' d' → logprob: -1.2846362590789795
    3. ' ans' → logprob: -2.2846362590789795
    4. 'ans' → logprob: -2.6596362590789795
    5. ' True' → logprob: -4.5346360206604
    6. 'True' → logprob: -5.2846360206604
    7. '__' → logprob: -5.2846360206604
    8. 'n' → logprob: -5.6596360206604
    9. ' n' → logprob: -6.1596360206604
    10. ' ' → logprob: -6.4096360206604

Token 598: ' ==' (ID: 951)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06877059489488602
    2. ' print' → logprob: -3.56877064704895
    3. '#' → logprob: -4.193770408630371
    4. '==' → logprob: -5.568770408630371
    5. '=' → logprob: -5.943770408630371
    6. '#print' → logprob: -5.943770408630371
    7. '+' → logprob: -6.068770408630371
    8. '>' → logprob: -6.443770408630371
    9. ' ==' → logprob: -6.568770408630371
    10. 'elif' → logprob: -6.818770408630371

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17013825476169586
    2. '#' → logprob: -2.295138359069824
    3. ' ' → logprob: -3.045138359069824
    4. '1' → logprob: -5.170138359069824
    5. ' #' → logprob: -7.420138359069824
    6. '2' → logprob: -7.795138359069824
    7. 'n' → logprob: -8.045138359069824
    8. '=' → logprob: -8.545138359069824
    9. '(n' → logprob: -8.920138359069824
    10. ' n' → logprob: -9.420138359069824

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02614063210785389
    2. '#' → logprob: -4.0261406898498535
    3. '1' → logprob: -5.0261406898498535
    4. 'n' → logprob: -7.7761406898498535
    5. '2' → logprob: -8.276140213012695
    6. 'd' → logprob: -8.401140213012695
    7. ' ' → logprob: -8.651140213012695
    8. 'm' → logprob: -9.026140213012695
    9. '(n' → logprob: -10.276140213012695
    10. '#m' → logprob: -10.526140213012695

Token 601: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017600801947992295
    2. '#' → logprob: -9.375176429748535
    3. ' print' → logprob: -9.875176429748535
    4. ')' → logprob: -10.875176429748535
    5. '#print' → logprob: -11.500176429748535
    6. '
' → logprob: -12.375176429748535
    7. '.print' → logprob: -13.250176429748535
    8. '   ' → logprob: -14.500176429748535
    9. '.' → logprob: -14.625176429748535
    10. 'pri' → logprob: -14.750176429748535

Token 602: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015919883735477924
    2. '#' → logprob: -7.00159215927124
    3. '#print' → logprob: -8.126591682434082
    4. ')' → logprob: -8.876591682434082
    5. ' print' → logprob: -9.001591682434082
    6. '<|end|>' → logprob: -9.126591682434082
    7. '```' → logprob: -12.876591682434082
    8. '.print' → logprob: -13.126591682434082
    9. '.' → logprob: -13.251591682434082
    10. '
' → logprob: -13.251591682434082

Token 603: '    ' (ID: 257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02089918777346611
    2. '#' → logprob: -4.270899295806885
    3. '#print' → logprob: -5.020899295806885
    4. '   ' → logprob: -9.395898818969727
    5. ' print' → logprob: -11.020898818969727
    6. 'ans' → logprob: -12.895898818969727
    7. ' ' → logprob: -13.020898818969727
    8. 'pass' → logprob: -13.645898818969727
    9. 'pr' → logprob: -13.770898818969727
    10. '#elif' → logprob: -14.020898818969727

Token 604: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012948086485266685
    2. '#print' → logprob: -5.012948036193848
    3. '#' → logprob: -5.137948036193848
    4. 'ans' (adapté à ' ans') → logprob: -8.137948036193848
    5. 'pass' → logprob: -10.887948036193848
    6. '   ' → logprob: -11.262948036193848
    7. ' print' → logprob: -11.387948036193848
    8. 'printf' → logprob: -13.887948036193848
    9. 'd' → logprob: -14.387948036193848
    10. '0' → logprob: -14.512948036193848

Token 605: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002994697540998459
    2. '=' → logprob: -6.877994537353516
    3. ' print' → logprob: -7.127994537353516
    4. ' =' → logprob: -7.752994537353516
    5. '#' → logprob: -8.752994537353516
    6. '<|end|>' → logprob: -8.752994537353516
    7. '
' → logprob: -9.252994537353516
    8. ')' → logprob: -9.377994537353516
    9. '#print' → logprob: -10.127994537353516
    10. '.' → logprob: -10.502994537353516

Token 606: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.032929424196481705
    2. '0' → logprob: -4.157929420471191
    3. 'float' → logprob: -4.657929420471191
    4. '1' → logprob: -6.282929420471191
    5. 'm' → logprob: -6.532929420471191
    6. '(' → logprob: -7.282929420471191
    7. '(float' → logprob: -7.407929420471191
    8. ' (' → logprob: -7.532929420471191
    9. '((' → logprob: -7.532929420471191
    10. 'ans' → logprob: -7.657929420471191

Token 607: 'n' (ID: 77)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017233692342415452
    2. 'm' → logprob: -7.001723289489746
    3. 'ans' → logprob: -8.126723289489746
    4. ' print' → logprob: -8.376723289489746
    5. 'n' → logprob: -8.751723289489746
    6. ')' → logprob: -10.501723289489746
    7. 'd' → logprob: -10.626723289489746
    8. 'float' → logprob: -10.626723289489746
    9. 'printf' → logprob: -11.626723289489746
    10. '0' → logprob: -12.126723289489746

Token 608: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19653218984603882
    2. ' -' → logprob: -2.6965322494506836
    3. '-' → logprob: -2.9465322494506836
    4. 'print' → logprob: -3.4465322494506836
    5. ' )' → logprob: -4.821532249450684
    6. ' *' → logprob: -5.821532249450684
    7. '-m' → logprob: -5.946532249450684
    8. '*' → logprob: -6.196532249450684
    9. 'm' → logprob: -6.196532249450684
    10. '#' → logprob: -6.446532249450684

Token 609: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003750433214008808
    2. 'm' → logprob: -5.878750324249268
    3. ' ' → logprob: -7.378750324249268
    4. 'd' → logprob: -9.003750801086426
    5. '(m' → logprob: -9.503750801086426
    6. ' m' → logprob: -10.128750801086426
    7. '0' → logprob: -10.378750801086426
    8. ')' → logprob: -11.628750801086426
    9. '2' → logprob: -11.753750801086426
    10. 'ans' → logprob: -12.378750801086426

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023054813500493765
    2. 'm' → logprob: -6.377305507659912
    3. ' ' → logprob: -8.377305030822754
    4. 'd' → logprob: -8.752305030822754
    5. '2' → logprob: -10.002305030822754
    6. '0' → logprob: -10.127305030822754
    7. '(m' → logprob: -10.127305030822754
    8. 'ans' → logprob: -10.502305030822754
    9. ' m' → logprob: -11.127305030822754
    10. 'n' → logprob: -11.877305030822754

Token 611: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6948004961013794
    2. 'print' → logprob: -0.6948004961013794
    3. '#' → logprob: -7.31980037689209
    4. '<|end|>' → logprob: -7.56980037689209
    5. ' print' → logprob: -8.19480037689209
    6. '#print' → logprob: -9.31980037689209
    7. ')#' → logprob: -10.44480037689209
    8. ' )' → logprob: -11.06980037689209
    9. '.print' → logprob: -11.56980037689209
    10. '   ' → logprob: -11.81980037689209

Token 612: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32735133171081543
    2. '(m' → logprob: -1.3273513317108154
    3. ' m' → logprob: -5.2023515701293945
    4. '1' → logprob: -5.5773515701293945
    5. ' (' → logprob: -5.7023515701293945
    6. ')' → logprob: -7.5773515701293945
    7. ')m' → logprob: -7.8273515701293945
    8. '0' → logprob: -9.327351570129395
    9. 'ans' → logprob: -10.202351570129395
    10. '#' → logprob: -10.202351570129395

Token 613: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5354959964752197
    2. ')' → logprob: -0.9104959964752197
    3. ' print' → logprob: -5.160495758056641
    4. '-' → logprob: -5.535495758056641
    5. ' )' → logprob: -7.160495758056641
    6. '-print' → logprob: -7.285495758056641
    7. '#' → logprob: -8.03549575805664
    8. ' -' → logprob: -8.66049575805664
    9. ')
' → logprob: -9.16049575805664
    10. ' /' → logprob: -9.53549575805664

Token 614: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.960946772480384e-05
    2. ' ' → logprob: -9.250099182128906
    3. '0' → logprob: -13.375099182128906
    4. '2' → logprob: -14.500099182128906
    5. ')' → logprob: -14.750099182128906
    6. '   ' → logprob: -15.375099182128906
    7. 'n' → logprob: -16.000099182128906
    8. 'ans' → logprob: -16.125099182128906
    9. 'm' → logprob: -16.312599182128906
    10. 'import' → logprob: -16.375099182128906

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -11.750020027160645
    3. '2' → logprob: -12.250020027160645
    4. '0' → logprob: -12.500020027160645
    5. 'm' → logprob: -14.250020027160645
    6. '(' → logprob: -14.375020027160645
    7. '(m' → logprob: -14.750020027160645
    8. 'n' → logprob: -14.812520027160645
    9. '(n' → logprob: -15.500020027160645
    10. '１' → logprob: -15.625020027160645

Token 616: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31429511308670044
    2. 'print' → logprob: -1.3142950534820557
    3. '#' → logprob: -7.689295291900635
    4. ')
' → logprob: -8.314294815063477
    5. ')#' → logprob: -8.814294815063477
    6. ' print' → logprob: -9.689294815063477
    7. '#print' → logprob: -10.314294815063477
    8. ' )' → logprob: -10.564294815063477
    9. '))' → logprob: -12.064294815063477
    10. ')

' → logprob: -12.189294815063477

Token 617: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006314247148111463
    2. '2' → logprob: -7.875631332397461
    3. ' n' → logprob: -8.875631332397461
    4. '(n' → logprob: -9.375631332397461
    5. 'm' → logprob: -11.125631332397461
    6. '/n' → logprob: -12.875631332397461
    7. '(' → logprob: -13.250631332397461
    8. '1' → logprob: -13.500631332397461
    9. ')n' → logprob: -13.750631332397461
    10. '/' → logprob: -14.250631332397461

Token 618: '/n' (ID: 18292)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005815077456645668
    2. ')' → logprob: -8.125581741333008
    3. ' print' → logprob: -8.625581741333008
    4. '
' → logprob: -9.500581741333008
    5. '#' → logprob: -11.375581741333008
    6. '.print' → logprob: -11.500581741333008
    7. ')
' → logprob: -12.375581741333008
    8. '
' → logprob: -13.500581741333008
    9. '#print' → logprob: -14.125581741333008
    10. '.' → logprob: -14.375581741333008

Token 619: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.034592388459714e-06
    2. ' print' → logprob: -12.125005722045898
    3. '
' → logprob: -15.250005722045898
    4. '#' → logprob: -16.0000057220459
    5. ')' → logprob: -16.1250057220459
    6. '#print' → logprob: -17.3750057220459
    7. '.print' → logprob: -17.6250057220459
    8. ')
' → logprob: -17.8750057220459
    9. 'pr' → logprob: -19.1250057220459
    10. 'prin' → logprob: -19.2500057220459

Token 620: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.625000953674316
    3. '#' → logprob: -18.500001907348633
    4. ')' → logprob: -18.625001907348633
    5. '
' → logprob: -19.000001907348633
    6. '#print' → logprob: -19.125001907348633
    7. ')
' → logprob: -20.625001907348633
    8. '.print' → logprob: -20.750001907348633
    9. 'pr' → logprob: -20.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 621: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.500004768371582
    3. ')' → logprob: -14.000004768371582
    4. '#' → logprob: -16.2500057220459
    5. '#print' → logprob: -17.1250057220459
    6. 'pr' → logprob: -17.3750057220459
    7. '
' → logprob: -17.6250057220459
    8. ')
' → logprob: -17.8750057220459
    9. '```' → logprob: -18.1250057220459
    10. '.print' → logprob: -18.7500057220459

Token 622: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013369438238441944
    2. ')' → logprob: -10.375133514404297
    3. ' print' → logprob: -10.375133514404297
    4. '#' → logprob: -10.625133514404297
    5. '<|end|>' → logprob: -10.875133514404297
    6. '   ' → logprob: -11.250133514404297
    7. '#print' → logprob: -11.625133514404297
    8. '.print' → logprob: -12.750133514404297
    9. '.' → logprob: -13.875133514404297
    10. '(print' → logprob: -14.750133514404297

Token 623: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. ' print' → logprob: -12.125005722045898
    3. '#' → logprob: -16.7500057220459
    4. '#print' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.6250057220459
    6. 'pr' → logprob: -18.7500057220459
    7. ')' → logprob: -18.8750057220459
    8. '(print' → logprob: -19.7500057220459
    9. '.print' → logprob: -20.7500057220459
    10. '<|end|>' → logprob: -20.7500057220459

Token 624: '    ' (ID: 257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. ' print' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.875003814697266
    4. '#' → logprob: -17.875003814697266
    5. 'ans' → logprob: -18.625003814697266
    6. '#print' → logprob: -19.500003814697266
    7. '
' → logprob: -19.875003814697266
    8. '```' → logprob: -20.250003814697266
    9. 'pass' → logprob: -20.375003814697266
    10. 'printf' → logprob: -20.875003814697266

Token 625: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004038593906443566
    2. 'pass' → logprob: -8.00040340423584
    3. 'ans' (adapté à ' ans') → logprob: -9.75040340423584
    4. '#' → logprob: -11.87540340423584
    5. ' print' → logprob: -13.62540340423584
    6. '   ' → logprob: -14.00040340423584
    7. '#print' → logprob: -15.25040340423584
    8. 'pr' → logprob: -15.25040340423584
    9. '0' → logprob: -15.75040340423584
    10. 'raise' → logprob: -16.000404357910156

Token 626: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7706916332244873
    2. '=' → logprob: -1.5206916332244873
    3. '<|end|>' → logprob: -2.0206916332244873
    4. ')' → logprob: -2.6456916332244873
    5. ' =' → logprob: -3.7706916332244873
    6. ' print' → logprob: -3.8956916332244873
    7. '#' → logprob: -4.645691871643066
    8. '+=' → logprob: -4.770691871643066
    9. '   ' → logprob: -4.895691871643066
    10. '+' → logprob: -5.020691871643066

Token 627: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08314178138971329
    2. '0' → logprob: -3.333141803741455
    3. ' ' → logprob: -3.833141803741455
    4. '(' → logprob: -4.208141803741455
    5. ' (' → logprob: -6.083141803741455
    6. '(n' → logprob: -6.208141803741455
    7. '(m' → logprob: -6.583141803741455
    8. '1' → logprob: -6.958141803741455
    9. '((' → logprob: -8.208141326904297
    10. '(ans' → logprob: -8.958141326904297

Token 628: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17103040218353271
    2. '(n' → logprob: -2.2960305213928223
    3. 'n' → logprob: -3.7960305213928223
    4. 'm' → logprob: -3.9210305213928223
    5. '(m' → logprob: -4.921030521392822
    6. '0' → logprob: -5.796030521392822
    7. '1' → logprob: -6.421030521392822
    8. 'd' → logprob: -6.546030521392822
    9. '(' → logprob: -8.546030044555664
    10. 'float' → logprob: -8.796030044555664

Token 629: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.029154896736145
    2. ' -' → logprob: -1.029154896736145
    3. '-' → logprob: -1.904154896736145
    4. '-n' → logprob: -3.5291547775268555
    5. '<|end|>' → logprob: -3.6541547775268555
    6. '-d' → logprob: -4.1541547775268555
    7. 'print' → logprob: -4.2791547775268555
    8. '-print' → logprob: -4.4041547775268555
    9. ' *' → logprob: -5.0291547775268555
    10. '#' → logprob: -5.2791547775268555

Token 630: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40294283628463745
    2. 'd' → logprob: -1.6529428958892822
    3. '2' → logprob: -2.0279428958892822
    4. 'm' → logprob: -5.777942657470703
    5. ')' → logprob: -6.652942657470703
    6. ' ' → logprob: -6.902942657470703
    7. '(d' → logprob: -7.277942657470703
    8. '(n' → logprob: -7.402942657470703
    9. '(m' → logprob: -8.152942657470703
    10. '-' → logprob: -8.277942657470703

Token 631: '1' (ID: 16)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4567481279373169
    2. '1' → logprob: -1.206748127937317
    3. ')' → logprob: -2.9567480087280273
    4. '2' → logprob: -4.331748008728027
    5. ' print' → logprob: -7.081748008728027
    6. 'n' → logprob: -7.331748008728027
    7. '```' → logprob: -8.831748008728027
    8. 'd' → logprob: -9.081748008728027
    9. 'm' → logprob: -9.206748008728027
    10. '))' → logprob: -9.831748008728027

Token 632: ')*(' (ID: 44406)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003297440707683563
    2. ')' → logprob: -9.000329971313477
    3. ' print' → logprob: -9.000329971313477
    4. ')
' → logprob: -9.875329971313477
    5. '
' → logprob: -10.750329971313477
    6. '.print' → logprob: -12.375329971313477
    7. '#' → logprob: -13.000329971313477
    8. '(print' → logprob: -14.250329971313477
    9. '#print' → logprob: -14.750329971313477
    10. '```' → logprob: -15.250329971313477

Token 633: 'm' (ID: 76)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6530144810676575
    2. 'm' → logprob: -0.7780144810676575
    3. '1' → logprob: -4.903014659881592
    4. 'print' → logprob: -5.278014659881592
    5. ')' → logprob: -6.278014659881592
    6. ' m' → logprob: -6.653014659881592
    7. '2' → logprob: -6.778014659881592
    8. '(m' → logprob: -7.028014659881592
    9. ' d' → logprob: -7.153014659881592
    10. 'n' → logprob: -7.403014659881592

Token 634: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23999598622322083
    2. ')' → logprob: -2.1149959564208984
    3. '-' → logprob: -2.8649959564208984
    4. ' print' → logprob: -3.8649959564208984
    5. '-print' → logprob: -4.614995956420898
    6. '#' → logprob: -6.739995956420898
    7. ')
' → logprob: -6.989995956420898
    8. '.print' → logprob: -7.489995956420898
    9. ' -' → logprob: -7.489995956420898
    10. '   ' → logprob: -8.614995956420898

Token 635: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001158211671281606
    2. '-' → logprob: -9.250115394592285
    3. ')' → logprob: -12.000115394592285
    4. ' ' → logprob: -12.125115394592285
    5. '   ' → logprob: -13.125115394592285
    6. '```' → logprob: -13.125115394592285
    7. '2' → logprob: -13.875115394592285
    8. ' -' → logprob: -14.375115394592285
    9. '#' → logprob: -15.062615394592285
    10. '       ' → logprob: -15.437615394592285

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.861651490908116e-05
    2. '-' → logprob: -10.250068664550781
    3. 'd' → logprob: -11.250068664550781
    4. ' ' → logprob: -11.875068664550781
    5. 'm' → logprob: -12.125068664550781
    6. 'n' → logprob: -13.250068664550781
    7. ')' → logprob: -13.437568664550781
    8. '2' → logprob: -14.187568664550781
    9. '```' → logprob: -14.250068664550781
    10. '(' → logprob: -14.750068664550781

Token 637: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.646757185459137
    2. 'print' → logprob: -0.771757185459137
    3. ')
' → logprob: -5.146757125854492
    4. ')/' → logprob: -5.271757125854492
    5. '#' → logprob: -6.771757125854492
    6. '/' → logprob: -7.271757125854492
    7. ' print' → logprob: -7.896757125854492
    8. ')#' → logprob: -8.146757125854492
    9. '#print' → logprob: -8.271757125854492
    10. ')/(' → logprob: -9.521757125854492

Token 638: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013133322354406118
    2. '(n' → logprob: -6.876313209533691
    3. 'm' → logprob: -9.501313209533691
    4. '2' → logprob: -9.501313209533691
    5. 'd' → logprob: -10.001313209533691
    6. '(' → logprob: -10.001313209533691
    7. ' n' → logprob: -11.376313209533691
    8. 'ans' → logprob: -12.376313209533691
    9. 'float' → logprob: -12.626313209533691
    10. ' (' → logprob: -12.876313209533691

Token 639: '/n' (ID: 18292)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.127333340875339e-06
    2. ' print' → logprob: -12.750003814697266
    3. ')' → logprob: -14.625003814697266
    4. '.print' → logprob: -15.125003814697266
    5. '#' → logprob: -15.625003814697266
    6. '
' → logprob: -15.875003814697266
    7. '#print' → logprob: -17.625003814697266
    8. 'pr' → logprob: -17.625003814697266
    9. 'pri' → logprob: -17.750003814697266
    10. 'prin' → logprob: -17.750003814697266

Token 640: '/n' (ID: 18292)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '
' → logprob: -17.625
    4. '#' → logprob: -18.0
    5. '#print' → logprob: -18.75
    6. '.print' → logprob: -18.875
    7. ')' → logprob: -19.375
    8. 'pr' → logprob: -19.75
    9. ')
' → logprob: -19.75
    10. '-print' → logprob: -20.5

Token 641: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.500001907348633
    3. '#' → logprob: -14.250001907348633
    4. '
' → logprob: -15.875001907348633
    5. ')' → logprob: -17.250001907348633
    6. ')
' → logprob: -17.500001907348633
    7. '#print' → logprob: -17.750001907348633
    8. '.print' → logprob: -18.125001907348633
    9. 'pr' → logprob: -18.125001907348633
    10. 'prin' → logprob: -18.500001907348633

Token 642: ' ' (ID: 220)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7899991273880005
    2. 'd' → logprob: -1.6649991273880005
    3. '2' → logprob: -1.7899991273880005
    4. '(' → logprob: -2.289999008178711
    5. '(d' → logprob: -3.164999008178711
    6. '(m' → logprob: -3.164999008178711
    7. 'abs' → logprob: -6.789999008178711
    8. 'm' → logprob: -7.164999008178711
    9. ' (' → logprob: -7.539999008178711
    10. '(abs' → logprob: -7.789999008178711

Token 643: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0328121185302734
    2. '(n' → logprob: -1.0328121185302734
    3. 'd' → logprob: -2.0328121185302734
    4. '(m' → logprob: -2.7828121185302734
    5. '(' → logprob: -3.1578121185302734
    6. 'abs' → logprob: -3.6578121185302734
    7. 'm' → logprob: -4.782812118530273
    8. '(d' → logprob: -5.032812118530273
    9. '(abs' → logprob: -5.407812118530273
    10. 'n' → logprob: -6.157812118530273

Token 644: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7848862373502925e-05
    2. '
' → logprob: -11.250027656555176
    3. ' print' → logprob: -11.500027656555176
    4. ')' → logprob: -13.375027656555176
    5. '.print' → logprob: -13.750027656555176
    6. '#' → logprob: -14.125027656555176
    7. '.' → logprob: -14.500027656555176
    8. ')
' → logprob: -15.250027656555176
    9. '#print' → logprob: -15.875027656555176
    10. 'pr' → logprob: -16.000028610229492

Token 645: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015745626762509346
    2. ')' → logprob: -4.515745639801025
    3. 'r' → logprob: -5.515745639801025
    4. 'p' → logprob: -8.015745162963867
    5. '#' → logprob: -9.015745162963867
    6. ' print' → logprob: -9.640745162963867
    7. 'n' → logprob: -10.390745162963867
    8. 'pr' → logprob: -10.640745162963867
    9. '2' → logprob: -11.265745162963867
    10. 'f' → logprob: -11.390745162963867

Token 646: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.438573680294212e-06
    2. ' print' → logprob: -12.375005722045898
    3. '#' → logprob: -14.375005722045898
    4. '
' → logprob: -14.875005722045898
    5. ')' → logprob: -15.750005722045898
    6. '.print' → logprob: -16.8750057220459
    7. ')
' → logprob: -17.1250057220459
    8. '#print' → logprob: -17.2500057220459
    9. 'pr' → logprob: -18.0000057220459
    10. 'prin' → logprob: -18.5000057220459

Token 647: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. ' print' → logprob: -13.125003814697266
    3. 'pr' → logprob: -14.375003814697266
    4. '#' → logprob: -14.500003814697266
    5. 'ans' → logprob: -15.375003814697266
    6. ')' → logprob: -15.750003814697266
    7. 'printf' → logprob: -16.375003814697266
    8. '#print' → logprob: -16.750003814697266
    9. 'prin' → logprob: -17.500003814697266
    10. '0' → logprob: -17.625003814697266

Token 648: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20037510991096497
    2. 'd' → logprob: -1.8253750801086426
    3. '(d' → logprob: -4.200375080108643
    4. '(' → logprob: -5.825375080108643
    5. ' (' → logprob: -6.700375080108643
    6. 'abs' → logprob: -8.2003755569458
    7. '(m' → logprob: -8.2003755569458
    8. 'n' → logprob: -8.3253755569458
    9. '(abs' → logprob: -9.2003755569458
    10. 'print' → logprob: -9.7003755569458

Token 649: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0050866990350186825
    2. ')' → logprob: -6.130086898803711
    3. ' print' → logprob: -6.255086898803711
    4. '.print' → logprob: -7.130086898803711
    5. '-print' → logprob: -10.255086898803711
    6. '.' → logprob: -10.380086898803711
    7. ')
' → logprob: -10.630086898803711
    8. '
' → logprob: -11.130086898803711
    9. '_print' → logprob: -11.380086898803711
    10. '#' → logprob: -11.630086898803711

Token 650: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001149867384810932
    2. ' d' → logprob: -9.375115394592285
    3. '1' → logprob: -11.000115394592285
    4. '(d' → logprob: -11.875115394592285
    5. '(' → logprob: -13.250115394592285
    6. 'print' → logprob: -13.500115394592285
    7. '   ' → logprob: -14.375115394592285
    8. '	d' → logprob: -14.500115394592285
    9. 'm' → logprob: -14.625115394592285
    10. 'abs' → logprob: -14.875115394592285

Token 651: ')' (ID: 8)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007769528776407242
    2. ')
' → logprob: -5.257769584655762
    3. ')' → logprob: -6.007769584655762
    4. ' print' → logprob: -9.882769584655762
    5. ')

' → logprob: -11.882769584655762
    6. ')
' → logprob: -12.257769584655762
    7. '.print' → logprob: -12.382769584655762
    8. '#' → logprob: -13.132769584655762
    9. '
' → logprob: -13.632769584655762
    10. '#print' → logprob: -14.632769584655762

Token 652: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.786196975852363e-05
    2. '
' → logprob: -10.875038146972656
    3. ' print' → logprob: -11.375038146972656
    4. '.print' → logprob: -12.250038146972656
    5. ')' → logprob: -13.250038146972656
    6. ')
' → logprob: -15.375038146972656
    7. '#print' → logprob: -15.875038146972656
    8. '.' → logprob: -16.000038146972656
    9. '#' → logprob: -16.625038146972656
    10. '
' → logprob: -17.000038146972656

Token 653: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005725711234845221
    2. ' print' → logprob: -8.000572204589844
    3. 'n' → logprob: -8.875572204589844
    4. 'm' → logprob: -10.000572204589844
    5. 'd' → logprob: -10.625572204589844
    6. '1' → logprob: -11.375572204589844
    7. '(n' → logprob: -12.500572204589844
    8. '100' → logprob: -12.625572204589844
    9. '(' → logprob: -13.250572204589844
    10. 'input' → logprob: -13.750572204589844

Token 654: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14017081260681152
    2. '1' → logprob: -2.7651708126068115
    3. 'm' → logprob: -3.2651708126068115
    4. 'd' → logprob: -3.7651708126068115
    5. 'n' → logprob: -5.890171051025391
    6. '(n' → logprob: -6.765171051025391
    7. '#' → logprob: -7.015171051025391
    8. '(' → logprob: -7.265171051025391
    9. '(m' → logprob: -8.26517105102539
    10. ' ' → logprob: -9.64017105102539

Token 655: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2786617577075958
    2. '.print' → logprob: -2.6536617279052734
    3. 'print' → logprob: -2.7786617279052734
    4. ' print' → logprob: -3.2786617279052734
    5. '-' → logprob: -3.4036617279052734
    6. '-print' → logprob: -3.9036617279052734
    7. ' )' → logprob: -4.528661727905273
    8. ' -' → logprob: -5.153661727905273
    9. ')
' → logprob: -7.528661727905273
    10. '#' → logprob: -7.528661727905273

Token 656: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006380964769050479
    2. ' ' → logprob: -7.375638008117676
    3. '   ' → logprob: -12.250638008117676
    4. '(' → logprob: -12.938138008117676
    5. '```' → logprob: -14.000638008117676
    6. '  ' → logprob: -14.500638008117676
    7. '-' → logprob: -14.750638008117676
    8. 'm' → logprob: -14.813138008117676
    9. '	' → logprob: -15.313138008117676
    10. '１' → logprob: -15.375638008117676

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018280261429026723
    2. ' ' → logprob: -8.62518310546875
    3. ')' → logprob: -13.37518310546875
    4. '   ' → logprob: -14.37518310546875
    5. '-' → logprob: -15.37518310546875
    6. '```' → logprob: -15.50018310546875
    7. '  ' → logprob: -16.25018310546875
    8. '(' → logprob: -16.62518310546875
    9. '１' → logprob: -16.75018310546875
    10. ' ' → logprob: -16.93768310546875

Token 658: ')

' (ID: 1029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00044437398901209235
    2. ')
' → logprob: -8.375444412231445
    3. ')' → logprob: -8.500444412231445
    4. ' print' → logprob: -12.125444412231445
    5. '#' → logprob: -13.000444412231445
    6. ')

' → logprob: -13.625444412231445
    7. '
' → logprob: -14.125444412231445
    8. '#print' → logprob: -15.125444412231445
    9. ')
' → logprob: -15.500444412231445
    10. '.print' → logprob: -17.000444412231445

Token 659: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'pr' → logprob: -16.0
    3. ' print' → logprob: -17.75
    4. 'prin' → logprob: -18.25
    5. 'pri' → logprob: -19.75
    6. 'p' → logprob: -19.75
    7. '```' → logprob: -20.375
    8. '#print' → logprob: -20.375
    9. 'prit' → logprob: -20.875
    10. '#' → logprob: -21.0

Token 660: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'pr' → logprob: -16.625
    3. 'prin' → logprob: -18.625
    4. ' print' → logprob: -19.375
    5. 'pri' → logprob: -21.125
    6. 'printf' → logprob: -21.375
    7. 'p' → logprob: -21.625
    8. 'prit' → logprob: -21.75
    9. '#print' → logprob: -22.0
    10. '#' → logprob: -22.25

Token 661: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.0005574395763687789
    2. '#' → logprob: -7.8755574226379395
    3. 'iche' → logprob: -9.500557899475098
    4. 'ich' → logprob: -9.625557899475098
    5. 'icher' → logprob: -10.500557899475098
    6. 'f' → logprob: -12.125557899475098
    7. 'fic' → logprob: -13.500557899475098
    8. 'ic' → logprob: -14.250557899475098
    9. 'icherung' → logprob: -15.375557899475098
    10. '```' → logprob: -15.375557899475098

Token 662: ' sur' (ID: 1512)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.9804343581199646
    2. '(' → logprob: -1.2304344177246094
    3. '(ans' → logprob: -1.2304344177246094
    4. 'print' → logprob: -3.4804344177246094
    5. '(round' → logprob: -4.730434417724609
    6. '(int' → logprob: -7.855434417724609
    7. '()' → logprob: -8.85543441772461
    8. '("%.' → logprob: -9.60543441772461
    9. 'ans' → logprob: -9.73043441772461
    10. '("{' → logprob: -9.85543441772461

Token 663: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004100958351045847
    2. 'ans' → logprob: -6.254100799560547
    3. 'la' → logprob: -6.629100799560547
    4. '("{' → logprob: -7.629100799560547
    5. '("%.' → logprob: -9.129100799560547
    6. '(ans' → logprob: -10.004100799560547
    7. '(print' → logprob: -10.254100799560547
    8. 'le' → logprob: -10.379100799560547
    9. 'format' → logprob: -10.379100799560547
    10. 'stdout' → logprob: -10.629100799560547

Token 664: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7491250875755213e-05
    2. 'console' → logprob: -12.500027656555176
    3. 'result' → logprob: -12.500027656555176
    4. 'é' → logprob: -12.625027656555176
    5. 'output' → logprob: -12.875027656555176
    6. 'format' → logprob: -13.250027656555176
    7. 'r' → logprob: -13.250027656555176
    8. 'f' → logprob: -13.500027656555176
    9. 'printf' → logprob: -13.875027656555176
    10. 'stdout' → logprob: -14.000027656555176

Token 665: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41131579875946045
    2. '(ans' → logprob: -1.4113157987594604
    3. '(print' → logprob: -2.91131591796875
    4. '(' → logprob: -3.28631591796875
    5. 'ans' → logprob: -7.03631591796875
    6. '(round' → logprob: -7.66131591796875
    7. '()' → logprob: -9.03631591796875
    8. '(float' → logprob: -9.91131591796875
    9. '(format' → logprob: -10.91131591796875
    10. '(int' → logprob: -11.16131591796875

Token 666: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. '(print' → logprob: -18.0
    4. '(' → logprob: -19.875
    5. '```' → logprob: -21.25
    6. 'printf' → logprob: -22.0
    7. '#print' → logprob: -22.625
    8. '.print' → logprob: -23.0
    9. 'for' → logprob: -23.5
    10. 'Print' → logprob: -23.625

Token 667: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003097858279943466
    2. '"{' → logprob: -6.753098011016846
    3. 'f' → logprob: -7.503098011016846
    4. '(ans' → logprob: -7.503098011016846
    5. 'print' → logprob: -8.253097534179688
    6. 'round' → logprob: -8.503097534179688
    7. 'float' → logprob: -8.878097534179688
    8. 'format' → logprob: -8.878097534179688
    9. '("{' → logprob: -10.503097534179688
    10. ''{' → logprob: -11.128097534179688

Token 668: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1912454515695572
    2. 'ans' → logprob: -1.941245436668396
    3. 'format' → logprob: -3.9412455558776855
    4. '(ans' → logprob: -5.3162455558776855
    5. '{' → logprob: -5.8162455558776855
    6. '("%.' → logprob: -6.3162455558776855
    7. '"{' → logprob: -7.4412455558776855
    8. '("{' → logprob: -7.8162455558776855
    9. 'f' → logprob: -8.816245079040527
    10. '(format' → logprob: -9.441245079040527

Token 669: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0694214254617691
    2. 'print' → logprob: -3.0694215297698975
    3. '(' → logprob: -5.069421291351318
    4. '("{' → logprob: -5.194421291351318
    5. '(round' → logprob: -5.944421291351318
    6. '(print' → logprob: -5.944421291351318
    7. '(f' → logprob: -6.819421291351318
    8. 'ans' → logprob: -6.944421291351318
    9. '(format' → logprob: -7.444421291351318
    10. '("%.' → logprob: -7.444421291351318

Token 670: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.64839569455944e-05
    2. '(print' → logprob: -9.500076293945312
    3. '(' → logprob: -14.000076293945312
    4. '(ans' → logprob: -14.625076293945312
    5. 'ans' → logprob: -15.875076293945312
    6. ' print' → logprob: -16.000076293945312
    7. '#print' → logprob: -18.125076293945312
    8. 'printf' → logprob: -18.125076293945312
    9. '```' → logprob: -19.375076293945312
    10. 'prit' → logprob: -19.375076293945312

Token 671: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6417281031608582
    2. 'ée' → logprob: -0.7667281031608582
    3. 'e' → logprob: -5.891727924346924
    4. '(ans' → logprob: -6.016727924346924
    5. 'é' → logprob: -6.141727924346924
    6. 'ation' → logprob: -7.266727924346924
    7. '(' → logprob: -7.766727924346924
    8. 'ans' → logprob: -8.141728401184082
    9. 'ee' → logprob: -9.766728401184082
    10. ' print' → logprob: -10.141728401184082

Token 672: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.125
    3. '(print' → logprob: -18.5
    4. '```' → logprob: -18.5
    5. 'printf' → logprob: -21.0
    6. '.print' → logprob: -22.5
    7. 'pr' → logprob: -22.75
    8. '#print' → logprob: -22.75
    9. '(' → logprob: -23.0
    10. 'println' → logprob: -23.25

Token 673: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24672825634479523
    2. 'format' → logprob: -1.7467283010482788
    3. 'ans' → logprob: -3.3717281818389893
    4. ' print' → logprob: -5.996728420257568
    5. 'f' → logprob: -6.246728420257568
    6. ' format' → logprob: -6.496728420257568
    7. ')' → logprob: -6.746728420257568
    8. '"{' → logprob: -6.996728420257568
    9. ' ans' → logprob: -7.496728420257568
    10. '(ans' → logprob: -7.621728420257568

Token 674: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4368709623813629
    2. 'print' → logprob: -1.1868709325790405
    3. 'é' → logprob: -3.18687105178833
    4. 'e' → logprob: -5.43687105178833
    5. 'ed' → logprob: -6.93687105178833
    6. ')' → logprob: -7.56187105178833
    7. 'ee' → logprob: -8.061870574951172
    8. 'ans' → logprob: -8.311870574951172
    9. 'ées' → logprob: -8.561870574951172
    10. '#print' → logprob: -8.561870574951172

Token 675: ' dans' (ID: 2671)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.09068302065134048
    2. '(print' → logprob: -3.0906829833984375
    3. '(' → logprob: -3.4656829833984375
    4. 'print' → logprob: -5.3406829833984375
    5. '("{' → logprob: -5.9656829833984375
    6. '(round' → logprob: -6.5906829833984375
    7. '(format' → logprob: -7.3406829833984375
    8. '(f' → logprob: -8.590682983398438
    9. '("%.' → logprob: -8.715682983398438
    10. 'ans' → logprob: -8.840682983398438

Token 676: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.23262694478034973
    2. '(ans' → logprob: -1.7326269149780273
    3. 'print' → logprob: -3.4826269149780273
    4. ' ans' → logprob: -13.482626914978027
    5. '	ans' → logprob: -13.732626914978027
    6. '(print' → logprob: -14.607626914978027
    7. '(' → logprob: -14.732626914978027
    8. 'ANS' → logprob: -14.857626914978027
    9. 'answer' → logprob: -15.232626914978027
    10. '_ans' → logprob: -15.607626914978027

Token 677: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -8.2994620242971e-06
    2. 'print' → logprob: -12.375008583068848
    3. '(ans' → logprob: -13.125008583068848
    4. 'f' → logprob: -13.875008583068848
    5. ' ans' → logprob: -14.250008583068848
    6. 'format' → logprob: -15.875008583068848
    7. '	ans' → logprob: -16.37500762939453
    8. '"{' → logprob: -16.50000762939453
    9. 'round' → logprob: -16.62500762939453
    10. '{' → logprob: -16.87500762939453

Token 678: ''.
' (ID: 49980)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08894721418619156
    2. ')' → logprob: -2.838947296142578
    3. ',' → logprob: -3.713947296142578
    4. ')
' → logprob: -6.463947296142578
    5. ' print' → logprob: -7.338947296142578
    6. '.print' → logprob: -11.213947296142578
    7. ')
' → logprob: -12.588947296142578
    8. '(print' → logprob: -12.588947296142578
    9. ',
' → logprob: -12.838947296142578
    10. ' ,' → logprob: -13.213947296142578

Token 679: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -23.25
    3. '```' → logprob: -24.625
    4. 'printf' → logprob: -26.625
    5. '#print' → logprob: -27.625
    6. 'Print' → logprob: -28.625
    7. 'println' → logprob: -29.25
    8. '	print' → logprob: -30.125
    9. 'import' → logprob: -30.5
    10. 'prints' → logprob: -30.875

Token 680: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -24.0
    3. 'printf' → logprob: -25.5
    4. '#print' → logprob: -27.0
    5. '```' → logprob: -27.375
    6. 'pr' → logprob: -27.75
    7. 'prin' → logprob: -28.375
    8. '	print' → logprob: -30.375
    9. 'prit' → logprob: -30.375
    10. 'println' → logprob: -30.375

Token 681: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. 'printf' → logprob: -17.875003814697266
    4. '#print' → logprob: -19.000003814697266
    5. 'pr' → logprob: -20.125003814697266
    6. '```' → logprob: -20.500003814697266
    7. 'prin' → logprob: -21.125003814697266
    8. 'format' → logprob: -22.125003814697266
    9. '#' → logprob: -22.125003814697266
    10. 'Print' → logprob: -22.875003814697266

Token 682: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.615255839889869e-05
    2. ' print' → logprob: -9.250096321105957
    3. 'printf' → logprob: -17.62509536743164
    4. '(print' → logprob: -18.37509536743164
    5. 'pr' → logprob: -21.62509536743164
    6. '#print' → logprob: -21.75009536743164
    7. 'prin' → logprob: -22.00009536743164
    8. 'Print' → logprob: -22.25009536743164
    9. '```' → logprob: -22.62509536743164
    10. '
' → logprob: -23.00009536743164

Token 683: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. 'printf' → logprob: -19.375
    4. 'pr' → logprob: -22.75
    5. 'prin' → logprob: -23.0
    6. 'format' → logprob: -24.25
    7. '#print' → logprob: -24.375
    8. 'round' → logprob: -24.75
    9. '```' → logprob: -24.75
    10. 'float' → logprob: -25.5

Token 684: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6162430047988892
    2. '(ans' → logprob: -0.8662430047988892
    3. '()' → logprob: -3.2412428855895996
    4. '('' → logprob: -8.991243362426758
    5. '(f' → logprob: -9.241243362426758
    6. '(round' → logprob: -9.616243362426758
    7. ' (' → logprob: -10.366243362426758
    8. '("")' → logprob: -10.616243362426758
    9. '("' → logprob: -11.741243362426758
    10. '(`' → logprob: -11.866243362426758

Token 685: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19020061194896698
    2. '(ans' → logprob: -1.8152005672454834
    3. '()' → logprob: -5.0652008056640625
    4. '(print' → logprob: -6.1902008056640625
    5. '(round' → logprob: -6.5652008056640625
    6. '(f' → logprob: -8.065200805664062
    7. ')' → logprob: -9.440200805664062
    8. '("{' → logprob: -9.815200805664062
    9. '("")' → logprob: -10.190200805664062
    10. 'print' → logprob: -10.440200805664062

Token 686: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3044639527797699
    2. '(ans' → logprob: -1.5544639825820923
    3. '(print' → logprob: -3.1794638633728027
    4. '()' → logprob: -4.804463863372803
    5. 'print' → logprob: -6.679463863372803
    6. '(round' → logprob: -10.804464340209961
    7. ')' → logprob: -11.054464340209961
    8. '(f' → logprob: -11.429464340209961
    9. '(answer' → logprob: -11.554464340209961
    10. '(pr' → logprob: -11.679464340209961

Token 687: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.943783253314905e-05
    2. 'ans' → logprob: -10.500059127807617
    3. '("%.' → logprob: -11.250059127807617
    4. '("{' → logprob: -11.750059127807617
    5. '(' → logprob: -12.250059127807617
    6. '(f' → logprob: -12.375059127807617
    7. '(round' → logprob: -13.250059127807617
    8. '(float' → logprob: -16.000059127807617
    9. '(format' → logprob: -16.750059127807617
    10. ' (' → logprob: -17.375059127807617

Token 688: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001930301426909864
    2. 'ans' → logprob: -6.251930236816406
    3. '(round' → logprob: -14.376930236816406
    4. '(' → logprob: -14.626930236816406
    5. '("%.' → logprob: -15.251930236816406
    6. '("{' → logprob: -15.376930236816406
    7. '	ans' → logprob: -16.751930236816406
    8. '(f' → logprob: -16.751930236816406
    9. ' ans' → logprob: -17.001930236816406
    10. '(answer' → logprob: -18.376930236816406

Token 689: ' et' (ID: 859)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015249757561832666
    2. '(' → logprob: -6.501524925231934
    3. '()' → logprob: -11.001524925231934
    4. '(round' → logprob: -12.251524925231934
    5. '(print' → logprob: -15.126524925231934
    6. 'ans' → logprob: -15.126524925231934
    7. '(f' → logprob: -15.376524925231934
    8. ' (' → logprob: -16.37652587890625
    9. '(abs' → logprob: -16.50152587890625
    10. '(int' → logprob: -16.62652587890625

Token 690: ' saute' (ID: 146395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01887243613600731
    2. 'format' → logprob: -4.768872261047363
    3. 'end' → logprob: -4.893872261047363
    4. ')' → logprob: -6.768872261047363
    5. 'ans' → logprob: -7.143872261047363
    6. ' print' → logprob: -8.393872261047363
    7. 'flush' → logprob: -8.893872261047363
    8. 'f' → logprob: -9.018872261047363
    9. '"\' → logprob: -9.518872261047363
    10. ' end' → logprob: -10.143872261047363

Token 691: ' à' (ID: 1221)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -1.6100331544876099
    2. '("\' → logprob: -2.1100330352783203
    3. 'une' → logprob: -2.6100330352783203
    4. '()' → logprob: -2.6100330352783203
    5. 'line' → logprob: -2.6100330352783203
    6. ''\' → logprob: -2.7350330352783203
    7. 'a' → logprob: -2.9850330352783203
    8. '('\' → logprob: -2.9850330352783203
    9. ' une' → logprob: -3.1100330352783203
    10. '\' → logprob: -3.1100330352783203

Token 692: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00026872646412812173
    2. 'une' → logprob: -8.500268936157227
    3. 'l' → logprob: -10.875268936157227
    4. ' la' → logprob: -10.875268936157227
    5. 'a' → logprob: -11.375268936157227
    6. 'ligne' → logprob: -12.125268936157227
    7. '```' → logprob: -12.625268936157227
    8. '\n' → logprob: -13.250268936157227
    9. '_la' → logprob: -13.625268936157227
    10. '\' → logprob: -14.000268936157227

Token 693: ' ligne' (ID: 19583)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43165698647499084
    2. 'ligne' → logprob: -1.3066569566726685
    3. 'newline' → logprob: -2.806657075881958
    4. 'nou' → logprob: -4.681656837463379
    5. 'line' → logprob: -5.681656837463379
    6. 'new' → logprob: -6.806656837463379
    7. 'next' → logprob: -7.056656837463379
    8. '\' → logprob: -7.181656837463379
    9. 'n' → logprob: -7.431656837463379
    10. '```' → logprob: -7.681656837463379

Token 694: ' suivante' (ID: 107439)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06020110473036766
    2. '()' → logprob: -3.5602011680603027
    3. 'print' → logprob: -4.060201168060303
    4. '(' → logprob: -4.560201168060303
    5. '(print' → logprob: -6.435201168060303
    6. 'ans' → logprob: -7.310201168060303
    7. '()
' → logprob: -12.435200691223145
    8. '(round' → logprob: -12.685200691223145
    9. ')' → logprob: -12.935200691223145
    10. '(answer' → logprob: -14.060200691223145

Token 695: ' automatiquement' (ID: 123202)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.500000953674316
    3. '(print' → logprob: -14.750000953674316
    4. '.print' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. '(' → logprob: -19.75
    7. ')' → logprob: -21.375
    8. ')
' → logprob: -21.625
    9. '()
' → logprob: -21.75
    10. '()' → logprob: -21.75

Token 696: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -14.750000953674316
    3. '(print' → logprob: -14.875000953674316
    4. ')
' → logprob: -16.500001907348633
    5. ')' → logprob: -17.250001907348633
    6. '
' → logprob: -18.875001907348633
    7. '(' → logprob: -18.875001907348633
    8. '(ans' → logprob: -19.125001907348633
    9. '()
' → logprob: -19.250001907348633
    10. '.print' → logprob: -19.375001907348633

Token 697: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -23.0
    3. '```' → logprob: -27.25
    4. 'printf' → logprob: -30.125
    5. '	print' → logprob: -30.5
    6. 'Print' → logprob: -30.875
    7. '#print' → logprob: -31.25
    8. '.print' → logprob: -32.375
    9. 'println' → logprob: -32.5
    10. '-print' → logprob: -32.875

Token 698: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.029759978875517845
    2. '(' → logprob: -3.5297598838806152
    3. '()' → logprob: -12.029760360717773
    4. ' (' → logprob: -13.279760360717773
    5. '('' → logprob: -14.529760360717773
    6. '(round' → logprob: -14.779760360717773
    7. '(f' → logprob: -15.029760360717773
    8. 'ans' → logprob: -15.279760360717773
    9. '(
' → logprob: -16.029760360717773
    10. '("("' → logprob: -16.029760360717773

Token 699: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. ')`' → logprob: -16.875
    4. ')
' → logprob: -18.25
    5. '))' → logprob: -19.625
    6. ')#' → logprob: -19.875
    7. '),' → logprob: -20.875
    8. '())' → logprob: -20.875
    9. ')**' → logprob: -21.125
    10. '()' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 697
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 354
Précision stricte (1ère position): 19.66%
Précision adaptée (1ère position): 19.94%
Précision (top 10): 50.79%
================================================================================
