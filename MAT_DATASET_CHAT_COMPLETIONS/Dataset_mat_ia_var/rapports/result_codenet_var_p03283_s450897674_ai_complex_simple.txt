================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, product

class Ruiseki2D:
    """二次元累積和を構築する"""
    def __init__(self, matrix):
        self.h, self.w = len(matrix), len(matrix[0])
        # Accumulation with map/lambda and slicing
        self.ru = [[0]*(self.w) for _ in range(self.h)]
        for i, j in product(range(self.h), range(self.w)):
            self.ru[i][j] = matrix[i][j] + (
                (self.ru[i][j-1] if j-1 >= 0 else 0) +
                (self.ru[i-1][j] if i-1 >= 0 else 0) -
                (self.ru[i-1][j-1] if i-1 >= 0 and j-1 >= 0 else 0)
            )
    def get_sum(self, hl, hr, wl, wr):
        fetch = lambda x, y: self.ru[x][y] if x >= 0 and y >= 0 else 0
        return (
            fetch(hr-1, wr-1) - fetch(hl-1, wr-1) - fetch(hr-1, wl-1) + fetch(hl-1, wl-1)
        )

n, m, q = map(int, input().split())
info = [reduce(lambda a, b: [a[0], b[0]], [tuple(map(int, input().split()))] * 1) for _ in range(m)]
query = [reduce(lambda x, y: list(map(int, x)), [[input().split()]], ['0','0'])[0:2] if False else list(map(int, input().split())) for _ in range(q)]

matrix = reduce(lambda acc, lr: [row[:] if idx != lr[0] else list(map(lambda t: t[1]+(1 if t[0]==lr[1] else 0), enumerate(row))) for idx, row in enumerate(acc)], info, [[0]*(n+2) for _ in range(n+2)])
ru = Ruiseki2D(matrix)

list(map(lambda lr: print((lambda a,b:(ru.get_sum(a,b+1,a,b+1))(*lr)), query)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8675806522369385
    2. 'chain' → logprob: -1.7425806522369385
    3. 'acc' → logprob: -1.8675806522369385
    4. 'count' → logprob: -1.9925806522369385
    5. 'cycle' → logprob: -2.8675806522369385
    6. 'com' → logprob: -3.3675806522369385
    7. 'is' → logprob: -4.992580413818359
    8. 'product' → logprob: -5.367580413818359
    9. ' group' → logprob: -5.492580413818359
    10. 'per' → logprob: -5.867580413818359

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0316426083445549
    2. '\' → logprob: -4.906642436981201
    3. '\n' → logprob: -5.156642436981201
    4. 'def' → logprob: -5.281642436981201
    5. '(
' → logprob: -5.531642436981201
    6. ',' → logprob: -5.781642436981201
    7. '#' → logprob: -6.031642436981201
    8. '.' → logprob: -7.656642436981201
    9. '`' → logprob: -7.656642436981201
    10. '\(' → logprob: -7.906642436981201

Token 10: ' product' (ID: 1888)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.439525306224823
    2. ' group' → logprob: -1.9395253658294678
    3. 'chain' → logprob: -2.4395253658294678
    4. ' chain' → logprob: -3.0645253658294678
    5. 'com' → logprob: -3.6895253658294678
    6. 'count' → logprob: -3.9395253658294678
    7. 'product' → logprob: -4.189525127410889
    8. ' product' → logprob: -5.439525127410889
    9. 'cycle' → logprob: -5.689525127410889
    10. 'per' → logprob: -5.939525127410889

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07377725094556808
    2. '(
' → logprob: -2.823777198791504
    3. '\' → logprob: -5.698777198791504
    4. 'def' → logprob: -5.948777198791504
    5. ',' → logprob: -6.198777198791504
    6. '
' → logprob: -7.073777198791504
    7. '\n' → logprob: -7.198777198791504
    8. '(

' → logprob: -7.573777198791504
    9. 'import' → logprob: -7.823777198791504
    10. '.' → logprob: -8.573777198791504

Token 12: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.040454279631376266
    2. '(
' → logprob: -3.290454387664795
    3. 'def' → logprob: -6.915454387664795
    4. '#' → logprob: -8.165453910827637
    5. '`' → logprob: -8.165453910827637
    6. '\' → logprob: -8.665453910827637
    7. '\(' → logprob: -8.665453910827637
    8. '```' → logprob: -8.915453910827637
    9. ',' → logprob: -9.790453910827637
    10. '(

' → logprob: -10.040453910827637

Token 13: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24518947303295135
    2. ' Factor' → logprob: -2.3701894283294678
    3. ' Product' → logprob: -3.1201894283294678
    4. ' Counter' → logprob: -4.120189666748047
    5. ' My' → logprob: -4.245189666748047
    6. ' Acc' → logprob: -4.245189666748047
    7. ' Mult' → logprob: -5.120189666748047
    8. ' Space' → logprob: -5.495189666748047
    9. ' Calculator' → logprob: -5.620189666748047
    10. ' A' → logprob: -6.120189666748047

Token 14: 'uis' (ID: 4560)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.590358555316925
    2. 'e' → logprob: -1.5903584957122803
    3. 'educ' → logprob: -2.3403584957122803
    4. 'ec' → logprob: -2.7153584957122803
    5. 'unner' → logprob: -4.215358734130859
    6. 'unnable' → logprob: -4.590358734130859
    7. 'educt' → logprob: -4.715358734130859
    8. 'ange' → logprob: -5.090358734130859
    9. 'un' → logprob: -5.340358734130859
    10. 'ender' → logprob: -5.902858734130859

Token 15: 'eki' (ID: 30639)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2571855783462524
    2. 'en' → logprob: -2.507185459136963
    3. 'u' → logprob: -2.632185459136963
    4. 'er' → logprob: -2.882185459136963
    5. 'e' → logprob: -3.132185459136963
    6. 'ei' → logprob: -3.132185459136963
    7. 'heng' → logprob: -3.257185459136963
    8. 'ey' → logprob: -3.632185459136963
    9. 'i' → logprob: -3.757185459136963
    10. 's' → logprob: -3.882185459136963

Token 16: '2' (ID: 17)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3842240571975708
    2. '```' → logprob: -2.2592239379882812
    3. 'K' → logprob: -2.5092239379882812
    4. '_' → logprob: -3.0092239379882812
    5. 'sum' → logprob: -3.7592239379882812
    6. 'Sum' → logprob: -3.7592239379882812
    7. 's' → logprob: -3.7592239379882812
    8. ' ' → logprob: -3.8842239379882812
    9. '_t' → logprob: -4.134223937988281
    10. '_sum' → logprob: -4.259223937988281

Token 17: 'D' (ID: 35)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6017447113990784
    2. ':' → logprob: -0.8517447113990784
    3. '():' → logprob: -4.351744651794434
    4. '(object' → logprob: -5.476744651794434
    5. '(T' → logprob: -5.851744651794434
    6. '(S' → logprob: -7.851744651794434
    7. ' :' → logprob: -7.976744651794434
    8. '(:' → logprob: -8.101744651794434
    9. '[' → logprob: -8.226744651794434
    10. '):' → logprob: -8.476744651794434

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011466870084404945
    2. '(' → logprob: -4.511466979980469
    3. ' :' → logprob: -8.386466979980469
    4. '():' → logprob: -9.136466979980469
    5. '(object' → logprob: -11.011466979980469
    6. '<|end|>' → logprob: -11.511466979980469
    7. ':
' → logprob: -11.761466979980469
    8. ':def' → logprob: -12.011466979980469
    9. '(:' → logprob: -12.136466979980469
    10. '```' → logprob: -12.386466979980469

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.540156364440918
    2. '(' → logprob: -1.165156364440918
    3. '   ' → logprob: -3.290156364440918
    4. '<|end|>' → logprob: -3.290156364440918
    5. ' ' → logprob: -4.415156364440918
    6. '(object' → logprob: -5.040156364440918
    7. ' (' → logprob: -5.165156364440918
    8. '<|end|>' → logprob: -7.040156364440918
    9. '  ' → logprob: -7.165156364440918
    10. '    ' → logprob: -7.540156364440918

Token 20: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3902580440044403
    2. 'def' → logprob: -1.6402580738067627
    3. '   ' → logprob: -2.1402580738067627
    4. '    ' → logprob: -5.515257835388184
    5. '    
' → logprob: -5.890257835388184
    6. 'class' → logprob: -6.765257835388184
    7. '```' → logprob: -6.765257835388184
    8. ' (' → logprob: -7.390257835388184
    9. ' ' → logprob: -7.515257835388184
    10. '(' → logprob: -7.890257835388184

Token 21: '二' (ID: 7779)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.7416262030601501
    2. ' Acc' → logprob: -0.9916262030601501
    3. '"""' → logprob: -2.991626262664795
    4. ' ' → logprob: -4.116626262664795
    5. 'Acc' → logprob: -4.866626262664795
    6. 'A' → logprob: -4.991626262664795
    7. 'C' → logprob: -4.991626262664795
    8. ' A' → logprob: -5.116626262664795
    9. 'Accum' → logprob: -5.116626262664795
    10. 'R' → logprob: -5.366626262664795

Token 22: '次' (ID: 11445)
  Prédit: '次'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '次' → logprob: -0.34874191880226135
    2. '乗' → logprob: -1.348741888999939
    3. '階' → logprob: -3.7237420082092285
    4. '重' → logprob: -4.7237420082092285
    5. '累' → logprob: -7.3487420082092285
    6. '\' → logprob: -8.47374153137207
    7. '変' → logprob: -9.09874153137207
    8. '```' → logprob: -9.22374153137207
    9. '維' → logprob: -9.34874153137207
    10. ' 次' → logprob: -9.72374153137207

Token 23: '元' (ID: 6753)
  Prédit: '元'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '元' → logprob: -0.4113251566886902
    2. '累' → logprob: -1.411325216293335
    3. '積' → logprob: -2.411325216293335
    4. '微' → logprob: -6.786324977874756
    5. '和' → logprob: -7.161324977874756
    6. '累计' → logprob: -8.161325454711914
    7. '积分' → logprob: -8.661325454711914
    8. ' \xe7\xa9' → logprob: -8.911325454711914
    9. '积' → logprob: -9.036325454711914
    10. ' \xe7\xb4' → logprob: -9.161325454711914

Token 24: '累' (ID: 86221)
  Prédit: '累'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '累' → logprob: -0.04992483928799629
    2. ' \xe7\xb4' → logprob: -3.924924850463867
    3. 'prefix' → logprob: -4.549924850463867
    4. 'の' → logprob: -5.549924850463867
    5. '積' → logprob: -5.549924850463867
    6. ' prefix' → logprob: -5.674924850463867
    7. ' ' → logprob: -6.549924850463867
    8. '```' → logprob: -7.424924850463867
    9. '和' → logprob: -7.549924850463867
    10. ' \xe7\xa9' → logprob: -7.799924850463867

Token 25: '積' (ID: 91483)
  Prédit: '積'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '積' → logprob: -1.0206720617134124e-05
    2. '計' → logprob: -12.25001049041748
    3. '乗' → logprob: -12.75001049041748
    4. '积' → logprob: -13.37501049041748
    5. '加' → logprob: -14.12501049041748
    6. '\' → logprob: -16.875009536743164
    7. '算' → logprob: -17.500009536743164
    8. '進' → logprob: -18.375009536743164
    9. '```' → logprob: -18.375009536743164
    10. '次' → logprob: -18.500009536743164

Token 26: '和' (ID: 5884)
  Prédit: '和'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '和' → logprob: -0.0007004032959230244
    2. 'sum' → logprob: -8.125699996948242
    3. ' 和' → logprob: -8.500699996948242
    4. '   ' → logprob: -8.875699996948242
    5. 's' → logprob: -10.500699996948242
    6. '"""' → logprob: -12.250699996948242
    7. '積' → logprob: -12.250699996948242
    8. 'def' → logprob: -12.500699996948242
    9. ' ' → logprob: -12.750699996948242
    10. '```' → logprob: -13.000699996948242

Token 27: 'を' (ID: 7277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4301767945289612
    2. '"""' → logprob: -1.6801767349243164
    3. '\n' → logprob: -2.5551767349243164
    4. '```' → logprob: -3.3051767349243164
    5. ' ' → logprob: -4.180176734924316
    6. 'の' → logprob: -4.680176734924316
    7. 'を' → logprob: -4.680176734924316
    8. '（' → logprob: -5.680176734924316
    9. '"""
' → logprob: -6.555176734924316
    10. ' """' → logprob: -6.680176734924316

Token 28: '構' (ID: 115981)
  Prédit: '作'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '作' → logprob: -0.6183805465698242
    2. '実' → logprob: -1.7433805465698242
    3. '計' → logprob: -1.9933805465698242
    4. '使' → logprob: -2.368380546569824
    5. '構' → logprob: -3.118380546569824
    6. '利用' → logprob: -5.868380546569824
    7. '扱' → logprob: -6.118380546569824
    8. '生成' → logprob: -6.743380546569824
    9. 'つ' → logprob: -6.743380546569824
    10. ' 作' → logprob: -6.743380546569824

Token 29: '築' (ID: 147796)
  Prédit: '築'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '築' → logprob: -0.11285638064146042
    2. '成' → logprob: -2.237856388092041
    3. '```' → logprob: -10.862855911254883
    4. '造' → logprob: -12.112855911254883
    5. '   ' → logprob: -12.487855911254883
    6. '筑' → logprob: -13.612855911254883
    7. '文' → logprob: -14.237855911254883
    8. '__' → logprob: -14.737855911254883
    9. '{' → logprob: -15.112855911254883
    10. '_' → logprob: -15.112855911254883

Token 30: 'する' (ID: 39065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28122270107269287
    2. ' ' → logprob: -2.5312228202819824
    3. 'を' → logprob: -3.1562228202819824
    4. 'の' → logprob: -3.9062228202819824
    5. '```' → logprob: -4.031222820281982
    6. 'します' → logprob: -4.156222820281982
    7. 'する' → logprob: -4.156222820281982
    8. 'して' → logprob: -4.281222820281982
    9. 'し' → logprob: -4.531222820281982
    10. 'で' → logprob: -5.031222820281982

Token 31: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2395151853561401
    2. '"""' → logprob: -1.2395151853561401
    3. '```' → logprob: -1.7395151853561401
    4. ' """' → logprob: -3.2395153045654297
    5. 'ため' → logprob: -3.2395153045654297
    6. 'コード' → logprob: -3.2395153045654297
    7. 'class' → logprob: -3.4895153045654297
    8. '"""
' → logprob: -3.8645153045654297
    9. ' for' → logprob: -4.23951530456543
    10. 'ク' → logprob: -4.23951530456543

Token 32: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028072621673345566
    2. '    
' → logprob: -4.028072834014893
    3. '\n' → logprob: -5.528072834014893
    4. '   ' → logprob: -6.278072834014893
    5. 'def' → logprob: -6.403072834014893
    6. ' 
' → logprob: -7.153072834014893
    7. '  
' → logprob: -7.653072834014893
    8. '   
' → logprob: -7.653072834014893
    9. '```' → logprob: -8.778072357177734
    10. '\' → logprob: -9.403072357177734

Token 33: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7097488641738892
    2. 'def' (adapté à ' def') → logprob: -0.8347488641738892
    3. '    
' → logprob: -3.2097487449645996
    4. ' def' → logprob: -3.9597487449645996
    5. '   ' → logprob: -4.9597487449646
    6. ' 
' → logprob: -5.4597487449646
    7. '\n' → logprob: -6.2097487449646
    8. 'class' → logprob: -7.7097487449646
    9. '   
' → logprob: -7.8347487449646
    10. '```' → logprob: -8.834749221801758

Token 34: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4547228217124939
    2. '__' → logprob: -1.8297228813171387
    3. 'init' → logprob: -1.9547228813171387
    4. '_init' → logprob: -3.0797228813171387
    5. ' init' → logprob: -4.454722881317139
    6. ' ' → logprob: -5.579722881317139
    7. 'def' → logprob: -7.079722881317139
    8. ' def' → logprob: -7.704722881317139
    9. '___' → logprob: -8.70472240447998
    10. ' ' → logprob: -9.20472240447998

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.0
    3. 'i' → logprob: -18.25
    4. 'int' → logprob: -18.5
    5. 'in' → logprob: -18.5
    6. ' init' → logprob: -18.5
    7. '   ' → logprob: -19.375
    8. ' ' → logprob: -19.625
    9. '  ' → logprob: -19.875
    10. '	init' → logprob: -20.875

Token 36: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038240697234869
    2. '__' → logprob: -3.288240671157837
    3. '__(
' → logprob: -8.788240432739258
    4. '__(*' → logprob: -10.913240432739258
    5. '__('' → logprob: -11.663240432739258
    6. '__((' → logprob: -11.788240432739258
    7. '(self' → logprob: -11.913240432739258
    8. '(' → logprob: -12.788240432739258
    9. '___' → logprob: -13.788240432739258
    10. '__[' → logprob: -14.163240432739258

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026319339871406555
    2. ' self' → logprob: -3.6513192653656006
    3. ' ' → logprob: -11.15131950378418
    4. ',self' → logprob: -14.27631950378418
    5. '	self' → logprob: -14.52631950378418
    6. 'space' → logprob: -14.65131950378418
    7. '(self' → logprob: -14.77631950378418
    8. '   ' → logprob: -14.77631950378418
    9. '    ' → logprob: -14.90131950378418
    10. ',' → logprob: -14.90131950378418

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06549996137619019
    2. 'self' → logprob: -3.065500020980835
    3. ' ,' → logprob: -4.940499782562256
    4. ')' → logprob: -5.315499782562256
    5. ' self' → logprob: -6.190499782562256
    6. '<|end|>' → logprob: -7.190499782562256
    7. ',self' → logprob: -7.190499782562256
    8. '(self' → logprob: -7.940499782562256
    9. ' )' → logprob: -8.565500259399414
    10. '<|end|>' → logprob: -8.940500259399414

Token 39: ' matrix' (ID: 12248)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.0508077144622803
    2. 'arr' → logprob: -2.3008077144622803
    3. 'self' → logprob: -2.4258077144622803
    4. 'a' → logprob: -2.4258077144622803
    5. 'matrix' → logprob: -2.4258077144622803
    6. ' h' → logprob: -2.8008077144622803
    7. ' grid' → logprob: -2.8008077144622803
    8. 'array' → logprob: -2.8008077144622803
    9. 'A' → logprob: -3.1758077144622803
    10. ' self' → logprob: -3.3008077144622803

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09954645484685898
    2. ',' → logprob: -2.474546432495117
    3. '       ' → logprob: -5.474546432495117
    4. '):
' → logprob: -5.849546432495117
    5. '   ' → logprob: -6.349546432495117
    6. ':' → logprob: -7.099546432495117
    7. ')' → logprob: -8.474546432495117
    8. ' ):' → logprob: -9.099546432495117
    9. '<|end|>' → logprob: -9.349546432495117
    10. '=None' → logprob: -9.474546432495117

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01221999991685152
    2. '        ' → logprob: -5.2622199058532715
    3. '    ' → logprob: -5.8872199058532715
    4. '   ' → logprob: -6.6372199058532715
    5. 'self' → logprob: -7.7622199058532715
    6. ',' → logprob: -7.8872199058532715
    7. '      ' → logprob: -7.8872199058532715
    8. '<|end|>' → logprob: -8.01222038269043
    9. '        
' → logprob: -8.26222038269043
    10. ' ' → logprob: -8.38722038269043

Token 42: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0238276720046997
    2. '        ' → logprob: -1.2738276720046997
    3. ' self' → logprob: -1.5238276720046997
    4. 'self' (adapté à ' self') → logprob: -2.14882755279541
    5. '\' → logprob: -4.39882755279541
    6. '\n' → logprob: -6.02382755279541
    7. '```' → logprob: -6.14882755279541
    8. '
' → logprob: -6.64882755279541
    9. ' ' → logprob: -6.89882755279541
    10. '        
' → logprob: -7.02382755279541

Token 43: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004075078293681145
    2. '.matrix' → logprob: -6.004075050354004
    3. ' .' → logprob: -6.504075050354004
    4. 'matrix' → logprob: -11.129075050354004
    5. '.=' → logprob: -11.504075050354004
    6. ' ' → logprob: -11.629075050354004
    7. '.data' → logprob: -11.879075050354004
    8. ' =' → logprob: -11.879075050354004
    9. '._' → logprob: -12.504075050354004
    10. '.Matrix' → logprob: -12.754075050354004

Token 44: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29319220781326294
    2. ',' → logprob: -1.4181921482086182
    3. '=' → logprob: -5.293192386627197
    4. ' ,' → logprob: -6.168192386627197
    5. '       ' → logprob: -6.168192386627197
    6. '   ' → logprob: -6.168192386627197
    7. ' ' → logprob: -7.793192386627197
    8. '    ' → logprob: -9.918191909790039
    9. 'ight' → logprob: -10.043191909790039
    10. '=int' → logprob: -10.668191909790039

Token 45: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3879191279411316
    2. ' self' → logprob: -1.1379191875457764
    3. ' =' → logprob: -8.012919425964355
    4. ',self' → logprob: -8.637919425964355
    5. '       ' → logprob: -8.887919425964355
    6. '        ' → logprob: -9.137919425964355
    7. '=self' → logprob: -9.637919425964355
    8. 'len' → logprob: -9.637919425964355
    9. ' ' → logprob: -10.137919425964355
    10. '    ' → logprob: -10.387919425964355

Token 46: '.w' (ID: 2234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6281306147575378
    2. '=' → logprob: -0.8781306147575378
    3. ',' → logprob: -3.0031306743621826
    4. 'w' → logprob: -8.253130912780762
    5. '.' → logprob: -8.378130912780762
    6. ' ' → logprob: -8.753130912780762
    7. 's' → logprob: -9.878130912780762
    8. '_' → logprob: -10.128130912780762
    9. ' ,' → logprob: -10.128130912780762
    10. '   ' → logprob: -10.128130912780762

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693534791469574
    2. '=' → logprob: -2.1269352436065674
    3. '＝' → logprob: -13.376935005187988
    4. ' ' → logprob: -13.501935005187988
    5. '=len' → logprob: -13.501935005187988
    6. ',' → logprob: -13.751935005187988
    7. '    ' → logprob: -14.751935005187988
    8. '   ' → logprob: -15.501935005187988
    9. '  ' → logprob: -15.626935005187988
    10. '        ' → logprob: -15.751935005187988

Token 48: ' len' (ID: 4631)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.110857293009758
    2. ' len' → logprob: -2.8608572483062744
    3. 'matrix' → logprob: -3.1108572483062744
    4. ' map' → logprob: -6.6108574867248535
    5. 'len' → logprob: -6.7358574867248535
    6. ' ' → logprob: -8.235857009887695
    7. 'map' → logprob: -8.610857009887695
    8. '	matrix' → logprob: -9.485857009887695
    9. ' ' → logprob: -10.860857009887695
    10. '(matrix' → logprob: -11.110857009887695

Token 49: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.00012475410767365247
    2. '(' → logprob: -9.00012493133545
    3. 'matrix' → logprob: -13.75012493133545
    4. '	matrix' → logprob: -15.75012493133545
    5. ' matrix' → logprob: -16.500123977661133
    6. '(m' → logprob: -17.625123977661133
    7. '(Matrix' → logprob: -18.000123977661133
    8. '(
' → logprob: -18.000123977661133
    9. '_matrix' → logprob: -18.125123977661133
    10. ' (' → logprob: -19.375123977661133

Token 50: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009755438077263534
    2. ' ),' → logprob: -7.000975608825684
    3. '       ' → logprob: -10.250975608825684
    4. ')' → logprob: -11.250975608825684
    5. '[' → logprob: -12.500975608825684
    6. ',' → logprob: -12.625975608825684
    7. '   ' → logprob: -13.250975608825684
    8. '        ' → logprob: -13.625975608825684
    9. ' ' → logprob: -14.250975608825684
    10. '),
' → logprob: -14.250975608825684

Token 51: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029751179739832878
    2. 'len' → logprob: -3.5297510623931885
    3. '(len' → logprob: -14.77975082397461
    4. '	len' → logprob: -15.77975082397461
    5. ' ' → logprob: -16.40475082397461
    6. '=len' → logprob: -16.52975082397461
    7. '    ' → logprob: -17.27975082397461
    8. '[len' → logprob: -17.52975082397461
    9. ' max' → logprob: -18.02975082397461
    10. '<len' → logprob: -18.15475082397461

Token 52: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.125007629394531
    3. 'matrix' → logprob: -13.250007629394531
    4. ' matrix' → logprob: -15.750007629394531
    5. ' (' → logprob: -16.12500762939453
    6. '	matrix' → logprob: -16.50000762939453
    7. ')' → logprob: -19.62500762939453
    8. '(
' → logprob: -20.75000762939453
    9. '_matrix' → logprob: -20.87500762939453
    10. ' ' → logprob: -20.87500762939453

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.375001907348633
    4. ' [' → logprob: -17.250001907348633
    5. ' and' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.625001907348633
    7. 'and' → logprob: -19.125001907348633
    8. '```' → logprob: -19.125001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '),' → logprob: -20.125001907348633

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3596853831550106e-05
    2. '[' → logprob: -10.000053405761719
    3. ' ' → logprob: -11.875053405761719
    4. '   ' → logprob: -14.125053405761719
    5. ')' → logprob: -15.875053405761719
    6. '０' → logprob: -16.12505340576172
    7. '```' → logprob: -16.62505340576172
    8. '(' → logprob: -16.87505340576172
    9. '-' → logprob: -17.12505340576172
    10. '  ' → logprob: -17.37505340576172

Token 55: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18110111355781555
    2. ')' → logprob: -1.8061010837554932
    3. ')])' → logprob: -7.306101322174072
    4. ' ])' → logprob: -8.681100845336914
    5. '])]' → logprob: -9.056100845336914
    6. ' )' → logprob: -9.306100845336914
    7. ''])' → logprob: -9.556100845336914
    8. '）' → logprob: -9.931100845336914
    9. ']' → logprob: -10.556100845336914
    10. ')]' → logprob: -10.556100845336914

Token 56: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21056820452213287
    2. '       ' → logprob: -1.7105681896209717
    3. '        
' → logprob: -5.460568428039551
    4. '<|end|>' → logprob: -5.710568428039551
    5. 'self' → logprob: -7.585568428039551
    6. ' 
' → logprob: -8.21056842803955
    7. '  
' → logprob: -8.46056842803955
    8. '        ' → logprob: -8.83556842803955
    9. '    
' → logprob: -9.46056842803955
    10. '<|end|>' → logprob: -9.58556842803955

Token 57: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5777105093002319
    2. '       ' → logprob: -0.9527105093002319
    3. ' self' → logprob: -2.9527106285095215
    4. '   ' → logprob: -8.202710151672363
    5. '
' → logprob: -8.327710151672363
    6. '        
' → logprob: -8.827710151672363
    7. 's' → logprob: -9.827710151672363
    8. '	self' → logprob: -10.202710151672363
    9. ' ' → logprob: -10.827710151672363
    10. '      ' → logprob: -11.452710151672363

Token 58: ' Acc' (ID: 6278)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48217153549194336
    2. ' self' → logprob: -0.9821715354919434
    3. '       ' → logprob: -4.982171535491943
    4. '   ' → logprob: -8.107172012329102
    5. 's' → logprob: -8.857172012329102
    6. ' ' → logprob: -9.482172012329102
    7. 'dp' → logprob: -9.607172012329102
    8. ' s' → logprob: -9.732172012329102
    9. '	self' → logprob: -9.857172012329102
    10. 'import' → logprob: -9.982172012329102

Token 59: 'um' (ID: 394)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.010153976269066334
    2. 'um' → logprob: -4.885153770446777
    3. 'umulator' → logprob: -6.885153770446777
    4. 'umulative' → logprob: -7.385153770446777
    5. '   ' → logprob: -7.885153770446777
    6. 'umul' → logprob: -8.135153770446777
    7. 'umu' → logprob: -9.135153770446777
    8. '=' → logprob: -10.760153770446777
    9. '       ' → logprob: -10.760153770446777
    10. '```' → logprob: -10.760153770446777

Token 60: 'ulation' (ID: 4672)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.019997401162981987
    2. 'umulate' → logprob: -4.144997596740723
    3. 'ulated' → logprob: -6.144997596740723
    4. 'um' → logprob: -7.894997596740723
    5. 'ul' → logprob: -8.269997596740723
    6. 'late' → logprob: -8.644997596740723
    7. 'elate' → logprob: -9.019997596740723
    8. 'ulating' → logprob: -9.019997596740723
    9. 'm' → logprob: -9.144997596740723
    10. 'al' → logprob: -9.269997596740723

Token 61: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13182951509952545
    2. 's' → logprob: -2.7568295001983643
    3. '=' → logprob: -3.3818295001983643
    4. '_matrix' → logprob: -4.506829738616943
    5. '_row' → logprob: -5.756829738616943
    6. 'matrix' → logprob: -6.131829738616943
    7. '_rows' → logprob: -6.131829738616943
    8. ' ' → logprob: -6.506829738616943
    9. '_' → logprob: -6.506829738616943
    10. 'row' → logprob: -7.381829738616943

Token 62: ' map' (ID: 4014)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.5029770731925964
    2. '0' → logprob: -2.502977132797241
    3. 'out' → logprob: -2.627977132797241
    4. ' zero' → logprob: -2.752977132797241
    5. '[' → logprob: -3.252977132797241
    6. ' padding' → logprob: -3.502977132797241
    7. ' [' → logprob: -4.252976894378662
    8. 'zeros' → logprob: -4.627976894378662
    9. ' product' → logprob: -5.002976894378662
    10. ' lambda' → logprob: -5.002976894378662

Token 63: '/l' (ID: 16347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5969279408454895
    2. '(lambda' → logprob: -1.3469278812408447
    3. 'list' → logprob: -2.4719278812408447
    4. '(re' → logprob: -2.9719278812408447
    5. 's' → logprob: -4.346928119659424
    6. '(
' → logprob: -4.846928119659424
    7. 'map' → logprob: -5.221928119659424
    8. '(self' → logprob: -5.721928119659424
    9. '(list' → logprob: -5.846928119659424
    10. ')' → logprob: -5.846928119659424

Token 64: 'ambda' (ID: 12104)
  Prédit: 'ambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.03134667128324509
    2. 'ist' → logprob: -3.531346559524536
    3. 'amb' → logprob: -6.906346797943115
    4. 'en' → logprob: -9.031346321105957
    5. 'e' → logprob: -9.156346321105957
    6. 'am' → logprob: -9.531346321105957
    7. '   ' → logprob: -10.031346321105957
    8. 'a' → logprob: -10.281346321105957
    9. 'ength' → logprob: -10.406346321105957
    10. 'eft' → logprob: -10.656346321105957

Token 65: ' and' (ID: 326)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7685394883155823
    2. '(' → logprob: -1.1435394287109375
    3. '(self' → logprob: -2.0185394287109375
    4. 's' → logprob: -3.2685394287109375
    5. '(
' → logprob: -3.8935394287109375
    6. 'self' → logprob: -5.1435394287109375
    7. '       ' → logprob: -5.1435394287109375
    8. 'list' → logprob: -5.5185394287109375
    9. '(s' → logprob: -6.2685394287109375
    10. ',' → logprob: -6.8935394287109375

Token 66: ' slicing' (ID: 161002)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6643304228782654
    2. ' accumulate' → logprob: -1.7893304824829102
    3. ' reduce' → logprob: -2.16433048248291
    4. 'list' → logprob: -2.41433048248291
    5. 'reduce' → logprob: -3.53933048248291
    6. ' sum' → logprob: -4.03933048248291
    7. ' product' → logprob: -4.53933048248291
    8. ' map' → logprob: -4.66433048248291
    9. ')' → logprob: -5.03933048248291
    10. ' itertools' → logprob: -5.03933048248291

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03222060203552246
    2. 'self' → logprob: -4.282220840454102
    3. '(' → logprob: -4.782220840454102
    4. ' self' → logprob: -5.407220840454102
    5. '(self' → logprob: -6.407220840454102
    6. ',' → logprob: -7.532220840454102
    7. '        ' → logprob: -7.782220840454102
    8. 's' → logprob: -8.032220840454102
    9. '   ' → logprob: -8.157220840454102
    10. ' (' → logprob: -8.407220840454102

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4642723798751831
    2. 'self' → logprob: -1.464272379875183
    3. ' self' → logprob: -2.5892724990844727
    4. '
' → logprob: -4.089272499084473
    5. '   ' → logprob: -4.964272499084473
    6. 'rows' → logprob: -5.089272499084473
    7. ',' → logprob: -5.214272499084473
    8. ')' → logprob: -5.714272499084473
    9. '```' → logprob: -5.714272499084473
    10. ' rows' → logprob: -5.964272499084473

Token 69: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.534076452255249
    2. 'self' (adapté à ' self') → logprob: -1.284076452255249
    3. '       ' → logprob: -2.034076452255249
    4. ' matrix' → logprob: -6.659076690673828
    5. 'matrix' → logprob: -6.659076690673828
    6. ' rows' → logprob: -7.284076690673828
    7. 'rows' → logprob: -7.534076690673828
    8. '[' → logprob: -8.409076690673828
    9. '   ' → logprob: -8.534076690673828
    10. '        ' → logprob: -8.784076690673828

Token 70: '.ru' (ID: 25924)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0719047784805298
    2. '_acc' → logprob: -2.0719046592712402
    3. 'acc' → logprob: -2.3219046592712402
    4. ' =' → logprob: -2.6969046592712402
    5. '_s' → logprob: -2.9469046592712402
    6. '_matrix' → logprob: -3.1969046592712402
    7. 'mat' → logprob: -3.1969046592712402
    8. '_sum' → logprob: -3.3219046592712402
    9. 'matrix' → logprob: -3.3219046592712402
    10. '_rows' → logprob: -3.5719046592712402

Token 71: ' =' (ID: 314)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0003647826088126749
    2. 'isek' → logprob: -8.375365257263184
    3. 'iseksi' → logprob: -9.500365257263184
    4. ' is' → logprob: -11.375365257263184
    5. 'iski' → logprob: -11.750365257263184
    6. 'iseks' → logprob: -11.750365257263184
    7. '(is' → logprob: -12.125365257263184
    8. '.is' → logprob: -12.250365257263184
    9. '_is' → logprob: -12.750365257263184
    10. 'ise' → logprob: -12.750365257263184

Token 72: ' [[' (ID: 9237)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.9397149085998535
    2. ' [' → logprob: -1.3147149085998535
    3. 'list' → logprob: -1.9397149085998535
    4. '[' → logprob: -2.3147149085998535
    5. ' list' → logprob: -2.4397149085998535
    6. '[[' → logprob: -5.4397149085998535
    7. ' [[' → logprob: -6.8147149085998535
    8. '[self' → logprob: -7.0647149085998535
    9. '[
' → logprob: -7.5647149085998535
    10. '(list' → logprob: -7.5647149085998535

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006942047039046884
    2. 'sum' → logprob: -8.750694274902344
    3. 'matrix' → logprob: -8.875694274902344
    4. 'next' → logprob: -9.250694274902344
    5. ' ' → logprob: -9.750694274902344
    6. '(' → logprob: -9.875694274902344
    7. '*' → logprob: -10.250694274902344
    8. 'x' → logprob: -10.250694274902344
    9. 'reduce' → logprob: -10.625694274902344
    10. 'None' → logprob: -11.000694274902344

Token 74: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31938454508781433
    2. ']*(' → logprob: -1.6943845748901367
    3. ' for' → logprob: -2.8193845748901367
    4. ']+' → logprob: -4.194384574890137
    5. 'for' → logprob: -4.444384574890137
    6. ']*' → logprob: -6.694384574890137
    7. ' ' → logprob: -7.944384574890137
    8. '+' → logprob: -8.444384574890137
    9. '0' → logprob: -8.444384574890137
    10. '  ' → logprob: -8.694384574890137

Token 75: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005717403837479651
    2. ' self' → logprob: -8.125572204589844
    3. '(self' → logprob: -8.375572204589844
    4. '   ' → logprob: -10.625572204589844
    5. '1' → logprob: -12.125572204589844
    6. '       ' → logprob: -13.000572204589844
    7. ' ' → logprob: -13.125572204589844
    8. 'w' → logprob: -13.500572204589844
    9. '+' → logprob: -13.625572204589844
    10. '  ' → logprob: -13.875572204589844

Token 76: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0006147435633465648
    2. 'w' → logprob: -7.500614643096924
    3. '.' → logprob: -10.125615119934082
    4. '	w' → logprob: -12.500615119934082
    5. '   ' → logprob: -12.750615119934082
    6. '[' → logprob: -12.875615119934082
    7. ' .' → logprob: -13.375615119934082
    8. '<w' → logprob: -13.875615119934082
    9. '+' → logprob: -14.125615119934082
    10. '+w' → logprob: -14.125615119934082

Token 77: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011050531640648842
    2. ' +' → logprob: -4.511050701141357
    3. '＋' → logprob: -14.0110502243042
    4. '+)' → logprob: -14.6360502243042
    5. ')' → logprob: -14.7610502243042
    6. ')+' → logprob: -15.1360502243042
    7. '+
' → logprob: -15.5110502243042
    8. ' ' → logprob: -16.011051177978516
    9. '()+' → logprob: -16.011051177978516
    10. ' plus' → logprob: -16.886051177978516

Token 78: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.714187741279602
    2. '+' → logprob: -0.964187741279602
    3. ')' → logprob: -2.7141876220703125
    4. 'for' → logprob: -3.3391876220703125
    5. ' +' → logprob: -3.9641876220703125
    6. ')]' → logprob: -5.2141876220703125
    7. ']' → logprob: -6.7141876220703125
    8. ' )' → logprob: -7.4641876220703125
    9. ' ' → logprob: -7.5891876220703125
    10. '+[' → logprob: -8.964187622070312

Token 79: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014915294013917446
    2. ' _' → logprob: -5.264915466308594
    3. ' range' → logprob: -5.264915466308594
    4. '_range' → logprob: -5.889915466308594
    5. 'range' → logprob: -6.764915466308594
    6. '_i' → logprob: -8.139915466308594
    7. '_s' → logprob: -10.014915466308594
    8. ' ' → logprob: -10.389915466308594
    9. '<|end|>' → logprob: -10.639915466308594
    10. ' in' → logprob: -11.014915466308594

Token 80: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003700165543705225
    2. ' range' → logprob: -8.125370025634766
    3. '(range' → logprob: -10.750370025634766
    4. 'ange' → logprob: -11.125370025634766
    5. '[' → logprob: -11.375370025634766
    6. 'in' → logprob: -11.625370025634766
    7. 'row' → logprob: -12.500370025634766
    8. 'ran' → logprob: -12.750370025634766
    9. '	range' → logprob: -13.000370025634766
    10. '_range' → logprob: -13.250370025634766

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017626441549509764
    2. ' range' → logprob: -6.376762866973877
    3. '[' → logprob: -9.876762390136719
    4. '(range' → logprob: -11.751762390136719
    5. '	range' → logprob: -14.376762390136719
    6. '(' → logprob: -15.501762390136719
    7. ' xrange' → logprob: -15.751762390136719
    8. '_range' → logprob: -16.00176239013672
    9. '.range' → logprob: -16.50176239013672
    10. '0' → logprob: -17.37676239013672

Token 82: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004088609013706446
    2. '(' → logprob: -5.504088401794434
    3. ' (' → logprob: -12.129088401794434
    4. '(s' → logprob: -13.379088401794434
    5. '<|end|>' → logprob: -13.504088401794434
    6. 'self' → logprob: -14.629088401794434
    7. '<|end|>' → logprob: -15.129088401794434
    8. '(
' → logprob: -15.129088401794434
    9. ')(' → logprob: -15.629088401794434
    10. ' self' → logprob: -15.754088401794434

Token 83: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.00010080150241265073
    2. '.' → logprob: -9.250101089477539
    3. ').' → logprob: -13.625101089477539
    4. '+' → logprob: -13.875101089477539
    5. ')' → logprob: -14.250101089477539
    6. ' .' → logprob: -14.250101089477539
    7. 'h' → logprob: -14.875101089477539
    8. '+.' → logprob: -15.250101089477539
    9. '	h' → logprob: -16.87510108947754
    10. '
' → logprob: -17.12510108947754

Token 84: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02655978687107563
    2. '+' → logprob: -3.651559829711914
    3. ' +' → logprob: -9.026559829711914
    4. ')' → logprob: -9.401559829711914
    5. ' )' → logprob: -10.151559829711914
    6. ')],' → logprob: -12.151559829711914
    7. ')])' → logprob: -12.776559829711914
    8. '))' → logprob: -13.151559829711914
    9. ']' → logprob: -13.151559829711914
    10. ')]
' → logprob: -13.776559829711914

Token 85: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31756845116615295
    2. '       ' → logprob: -2.69256854057312
    3. '[' → logprob: -2.81756854057312
    4. ' for' → logprob: -2.81756854057312
    5. ')' → logprob: -3.31756854057312
    6. '   ' → logprob: -4.567568302154541
    7. ']' → logprob: -4.692568302154541
    8. ' ' → logprob: -4.942568302154541
    9. '```' → logprob: -5.817568302154541
    10. '0' → logprob: -5.942568302154541

Token 87: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0001347672223346308
    2. 'i' → logprob: -9.125134468078613
    3. ' ' → logprob: -11.375134468078613
    4. ' r' → logprob: -11.750134468078613
    5. ' y' → logprob: -12.750134468078613
    6. '	i' → logprob: -13.625134468078613
    7. ' _' → logprob: -14.250134468078613
    8. ' x' → logprob: -14.500134468078613
    9. ' row' → logprob: -14.625134468078613
    10. '_i' → logprob: -15.625134468078613

Token 88: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004990151152014732
    2. 'in' → logprob: -5.379990100860596
    3. ' ' → logprob: -8.254990577697754
    4. '<|end|>' → logprob: -10.004990577697754
    5. '	in' → logprob: -10.129990577697754
    6. ',' → logprob: -12.004990577697754
    7. '_' → logprob: -12.629990577697754
    8. ' i' → logprob: -12.879990577697754
    9. ' ,' → logprob: -13.254990577697754
    10. '0' → logprob: -13.254990577697754

Token 89: ' j' (ID: 441)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.08963850140571594
    2. 'row' → logprob: -2.4646384716033936
    3. ' ' → logprob: -8.339638710021973
    4. 'r' → logprob: -9.339638710021973
    5. '	row' → logprob: -9.714638710021973
    6. ' arr' → logprob: -9.964638710021973
    7. 'arr' → logprob: -10.214638710021973
    8. ' line' → logprob: -10.339638710021973
    9. ')' → logprob: -10.839638710021973
    10. '  ' → logprob: -11.089638710021973

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25203126668930054
    2. 'in' → logprob: -1.5020313262939453
    3. ' ' → logprob: -10.127031326293945
    4. '  ' → logprob: -11.252031326293945
    5. ',' → logprob: -11.377031326293945
    6. ')' → logprob: -11.502031326293945
    7. '	in' → logprob: -12.127031326293945
    8. 'import' → logprob: -12.252031326293945
    9. ' i' → logprob: -12.627031326293945
    10. '   ' → logprob: -13.252031326293945

Token 91: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.012569578364491463
    2. 'product' → logprob: -4.387569427490234
    3. '(product' → logprob: -10.637569427490234
    4. ' range' → logprob: -11.262569427490234
    5. '	product' → logprob: -11.512569427490234
    6. ' enumerate' → logprob: -12.637569427490234
    7. 'Product' → logprob: -13.262569427490234
    8. 'range' → logprob: -13.262569427490234
    9. ' ' → logprob: -13.262569427490234
    10. '.product' → logprob: -14.012569427490234

Token 92: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.362307223957032e-05
    2. '(' → logprob: -9.625073432922363
    3. '((' → logprob: -12.750073432922363
    4. ' range' → logprob: -13.500073432922363
    5. '	range' → logprob: -14.250073432922363
    6. 'range' → logprob: -14.250073432922363
    7. '<|end|>' → logprob: -14.250073432922363
    8. '(
' → logprob: -14.625073432922363
    9. ' (' → logprob: -15.125073432922363
    10. '([' → logprob: -15.375073432922363

Token 93: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06269515305757523
    2. '(' → logprob: -2.812695264816284
    3. '(s' → logprob: -8.187695503234863
    4. '(len' → logprob: -8.687695503234863
    5. '<|end|>' → logprob: -8.812695503234863
    6. ')(' → logprob: -9.687695503234863
    7. '(i' → logprob: -10.562695503234863
    8. ')' → logprob: -11.687695503234863
    9. '(n' → logprob: -11.812695503234863
    10. '(
' → logprob: -11.812695503234863

Token 94: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.06197485327720642
    2. '.w' → logprob: -2.8119747638702393
    3. '.' → logprob: -12.56197452545166
    4. ' .' → logprob: -13.68697452545166
    5. 'w' → logprob: -13.93697452545166
    6. ').' → logprob: -14.18697452545166
    7. 'h' → logprob: -14.81197452545166
    8. '.i' → logprob: -16.186975479125977
    9. '	w' → logprob: -16.811975479125977
    10. ')' → logprob: -16.811975479125977

Token 95: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001553428708575666
    2. ',' → logprob: -6.626553535461426
    3. ' ),' → logprob: -8.626553535461426
    4. '),(' → logprob: -10.626553535461426
    5. ' ,' → logprob: -11.376553535461426
    6. ')' → logprob: -12.126553535461426
    7. ',),' → logprob: -12.501553535461426
    8. '),
' → logprob: -13.626553535461426
    9. 'range' → logprob: -15.126553535461426
    10. ' ' → logprob: -15.376553535461426

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2811681628227234
    2. 'range' → logprob: -1.4061682224273682
    3. ' ' → logprob: -11.781167984008789
    4. '(range' → logprob: -12.656167984008789
    5. '	range' → logprob: -12.656167984008789
    6. '    ' → logprob: -13.281167984008789
    7. '   ' → logprob: -15.031167984008789
    8. '        ' → logprob: -15.156167984008789
    9. ')' → logprob: -15.531167984008789
    10. 'Range' → logprob: -15.906167984008789

Token 97: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003180094063282013
    2. '(' → logprob: -5.753180027008057
    3. 'self' → logprob: -13.253180503845215
    4. ' (' → logprob: -15.503180503845215
    5. '(len' → logprob: -16.6281795501709
    6. '(
' → logprob: -16.7531795501709
    7. ')(' → logprob: -17.0031795501709
    8. '1' → logprob: -17.2531795501709
    9. ')' → logprob: -17.2531795501709
    10. ' self' → logprob: -17.6281795501709

Token 98: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.011057134717702866
    2. 'w' → logprob: -4.511056900024414
    3. '	w' → logprob: -12.386056900024414
    4. '.' → logprob: -13.011056900024414
    5. '   ' → logprob: -14.386056900024414
    6. ' w' → logprob: -15.011056900024414
    7. ':w' → logprob: -15.261056900024414
    8. '_w' → logprob: -15.261056900024414
    9. '[w' → logprob: -15.761056900024414
    10. '(w' → logprob: -15.886056900024414

Token 99: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032366468803957105
    2. ')' → logprob: -9.125323295593262
    3. ' ):' → logprob: -9.375323295593262
    4. '):
' → logprob: -9.750323295593262
    5. ':' → logprob: -9.875323295593262
    6. ')):' → logprob: -11.625323295593262
    7. ')：' → logprob: -12.625323295593262
    8. ',' → logprob: -13.875323295593262
    9. ']:' → logprob: -14.000323295593262
    10. ']):' → logprob: -14.375323295593262

Token 100: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12127640843391418
    2. '           ' → logprob: -2.746276378631592
    3. '):' → logprob: -3.871276378631592
    4. ',' → logprob: -5.246276378631592
    5. ' :' → logprob: -5.246276378631592
    6. '               ' → logprob: -5.496276378631592
    7. '            ' → logprob: -5.621276378631592
    8. '<|end|>' → logprob: -5.746276378631592
    9. ' ' → logprob: -6.371276378631592
    10. ')' → logprob: -6.621276378631592

Token 101: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5313680171966553
    2. '           ' → logprob: -2.0313680171966553
    3. '               ' → logprob: -2.0313680171966553
    4. 'self' (adapté à ' self') → logprob: -2.1563680171966553
    5. ' ' → logprob: -4.156368255615234
    6. '            ' → logprob: -5.031368255615234
    7. ' if' → logprob: -5.406368255615234
    8. ')' → logprob: -6.531368255615234
    9. '                ' → logprob: -6.781368255615234
    10. '0' → logprob: -7.656368255615234

Token 102: '.ru' (ID: 25924)
  Prédit: '.ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ru' → logprob: -0.002049028407782316
    2. '.' → logprob: -6.627048969268799
    3. ' .' → logprob: -8.627049446105957
    4. '.rl' → logprob: -9.002049446105957
    5. '.ro' → logprob: -9.252049446105957
    6. 'ru' → logprob: -9.877049446105957
    7. '```' → logprob: -10.377049446105957
    8. '_ru' → logprob: -10.502049446105957
    9. '.py' → logprob: -10.752049446105957
    10. '].' → logprob: -10.877049446105957

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002137882256647572
    2. '[j' → logprob: -9.000213623046875
    3. '[' → logprob: -9.875213623046875
    4. '[I' → logprob: -10.750213623046875
    5. '][' → logprob: -12.250213623046875
    6. ' [' → logprob: -12.875213623046875
    7. ')[' → logprob: -13.250213623046875
    8. '\[' → logprob: -13.250213623046875
    9. '[ii' → logprob: -13.375213623046875
    10. '```' → logprob: -14.000213623046875

Token 104: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012458281125873327
    2. ' ][' → logprob: -7.376245975494385
    3. ']' → logprob: -8.251245498657227
    4. '[j' → logprob: -9.251245498657227
    5. ')][' → logprob: -9.626245498657227
    6. '[i' → logprob: -9.626245498657227
    7. '[' → logprob: -10.376245498657227
    8. ')[' → logprob: -10.501245498657227
    9. ' ' → logprob: -11.251245498657227
    10. ']][' → logprob: -11.501245498657227

Token 105: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -13.750000953674316
    3. '[j' → logprob: -16.500001907348633
    4. '	j' → logprob: -17.125001907348633
    5. ']' → logprob: -17.250001907348633
    6. ')' → logprob: -17.375001907348633
    7. '0' → logprob: -17.375001907348633
    8. '_j' → logprob: -18.250001907348633
    9. ':j' → logprob: -18.250001907348633
    10. '   ' → logprob: -19.000001907348633

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051126331090927124
    2. ']=' → logprob: -3.80112624168396
    3. '=' → logprob: -4.176126480102539
    4. ' ]' → logprob: -5.301126480102539
    5. ']+=' → logprob: -5.676126480102539
    6. ' =' → logprob: -5.926126480102539
    7. ')' → logprob: -7.176126480102539
    8. ' )' → logprob: -9.426126480102539
    9. '+=' → logprob: -9.426126480102539
    10. ')=' → logprob: -9.801126480102539

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06440607458353043
    2. ' =' → logprob: -3.189406156539917
    3. '+=' → logprob: -3.939406156539917
    4. ' +=' → logprob: -6.439405918121338
    5. '=lambda' → logprob: -10.689406394958496
    6. '=sum' → logprob: -10.689406394958496
    7. '<|end|>' → logprob: -10.939406394958496
    8. '=int' → logprob: -11.314406394958496
    9. '+' → logprob: -11.814406394958496
    10. '+=(' → logprob: -12.939406394958496

Token 108: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.1709643006324768
    2. ' matrix' → logprob: -2.045964241027832
    3. '(matrix' → logprob: -3.670964241027832
    4. ' (' → logprob: -6.170964241027832
    5. '(' → logprob: -9.295964241027832
    6. '	matrix' → logprob: -9.420964241027832
    7. '(m' → logprob: -10.545964241027832
    8. '(
' → logprob: -11.233464241027832
    9. 'mat' → logprob: -11.295964241027832
    10. '   ' → logprob: -11.483464241027832

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038539018714800477
    2. '[' → logprob: -8.250385284423828
    3. 'i' → logprob: -10.125385284423828
    4. ' [' → logprob: -10.500385284423828
    5. '<|end|>' → logprob: -10.875385284423828
    6. '[j' → logprob: -11.125385284423828
    7. '[I' → logprob: -11.375385284423828
    8. ' i' → logprob: -13.125385284423828
    9. ')' → logprob: -14.000385284423828
    10. ' ' → logprob: -14.000385284423828

Token 110: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005427849246188998
    2. '[j' → logprob: -8.250542640686035
    3. ']' → logprob: -8.625542640686035
    4. '[' → logprob: -9.375542640686035
    5. ' ][' → logprob: -11.625542640686035
    6. ')[' → logprob: -13.125542640686035
    7. '[i' → logprob: -13.375542640686035
    8. ')' → logprob: -14.125542640686035
    9. '"][' → logprob: -14.250542640686035
    10. ''][' → logprob: -14.375542640686035

Token 111: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.44574936106801e-05
    2. ' j' → logprob: -9.62507438659668
    3. '0' → logprob: -11.87507438659668
    4. ' ' → logprob: -14.75007438659668
    5. '	j' → logprob: -15.25007438659668
    6. ':j' → logprob: -15.37507438659668
    7. '   ' → logprob: -15.87507438659668
    8. '[j' → logprob: -16.12507438659668
    9. '_j' → logprob: -17.12507438659668
    10. '7' → logprob: -17.25007438659668

Token 112: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04093854874372482
    2. ' )' → logprob: -4.165938377380371
    3. '+' → logprob: -4.290938377380371
    4. ' +' → logprob: -4.790938377380371
    5. ')+' → logprob: -6.665938377380371
    6. '<|end|>' → logprob: -7.415938377380371
    7. ' if' → logprob: -9.040938377380371
    8. ' ' → logprob: -9.415938377380371
    9. ' +
' → logprob: -9.665938377380371
    10. '        ' → logprob: -9.665938377380371

Token 113: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6895174384117126
    2. '+' → logprob: -1.3145174980163574
    3. '<|end|>' → logprob: -1.6895174980163574
    4. ' if' → logprob: -4.189517498016357
    5. '           ' → logprob: -4.439517498016357
    6. ' ' → logprob: -5.064517498016357
    7. '
' → logprob: -5.939517498016357
    8. '<|end|>' → logprob: -6.314517498016357
    9. '       ' → logprob: -6.439517498016357
    10. '            ' → logprob: -6.439517498016357

Token 114: ' (
' (ID: 4112)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.231399804353714
    2. ' (' → logprob: -1.6063997745513916
    3. '(' → logprob: -5.981400012969971
    4. '(i' → logprob: -6.856400012969971
    5. '((' → logprob: -7.356400012969971
    6. ' ((' → logprob: -7.731400012969971
    7. '(j' → logprob: -8.356399536132812
    8. '(prev' → logprob: -8.481399536132812
    9. '(acc' → logprob: -8.606399536132812
    10. '(row' → logprob: -9.231399536132812

Token 115: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05079507455229759
    2. '(self' → logprob: -3.800795078277588
    3. ' self' → logprob: -3.800795078277588
    4. ' (' → logprob: -5.425795078277588
    5. '           ' → logprob: -8.55079460144043
    6. '0' → logprob: -8.92579460144043
    7. '   ' → logprob: -10.92579460144043
    8. '(' → logprob: -11.17579460144043
    9. '               ' → logprob: -11.30079460144043
    10. ' ' → logprob: -11.67579460144043

Token 116: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04928254708647728
    2. ' self' → logprob: -3.7992825508117676
    3. '(self' → logprob: -3.9242825508117676
    4. ' (' → logprob: -5.299282550811768
    5. '               ' → logprob: -7.924282550811768
    6. '0' → logprob: -7.924282550811768
    7. '                   ' → logprob: -9.04928207397461
    8. '(' (adapté à ' (') → logprob: -9.92428207397461
    9. ' ' → logprob: -11.67428207397461
    10. '   ' → logprob: -11.79928207397461

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011153311934322119
    2. ' self' → logprob: -6.876115322113037
    3. '(self' → logprob: -9.751115798950195
    4. '0' → logprob: -11.001115798950195
    5. '   ' → logprob: -12.751115798950195
    6. ' ' → logprob: -13.751115798950195
    7. '           ' → logprob: -14.251115798950195
    8. ' (' → logprob: -14.501115798950195
    9. '(' → logprob: -14.626115798950195
    10. '  ' → logprob: -15.001115798950195

Token 118: '.ru' (ID: 25924)
  Prédit: '.ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ru' → logprob: -0.0003135360311716795
    2. 'ru' → logprob: -8.375313758850098
    3. '[i' → logprob: -10.000313758850098
    4. ' .' → logprob: -11.250313758850098
    5. '.' → logprob: -12.125313758850098
    6. '_ru' → logprob: -12.500313758850098
    7. 'RU' → logprob: -13.000313758850098
    8. 'self' → logprob: -13.125313758850098
    9. '.ro' → logprob: -13.375313758850098
    10. 'Ru' → logprob: -13.500313758850098

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. 'i' → logprob: -12.375004768371582
    3. '[j' → logprob: -14.750004768371582
    4. '```' → logprob: -16.3750057220459
    5. '   ' → logprob: -17.6250057220459
    6. '
' → logprob: -18.1250057220459
    7. '[max' → logprob: -18.2500057220459
    8. '

' → logprob: -18.7500057220459
    9. '(i' → logprob: -18.7500057220459
    10. 'a' → logprob: -19.0000057220459

Token 120: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7769187092781067
    2. '-' → logprob: -1.026918649673462
    3. '][' → logprob: -2.026918649673462
    4. '[j' → logprob: -3.026918649673462
    5. '   ' → logprob: -7.151918888092041
    6. ' -' → logprob: -7.276918888092041
    7. 'i' → logprob: -9.526918411254883
    8. '[' → logprob: -9.901918411254883
    9. ')[' → logprob: -10.401918411254883
    10. '[max' → logprob: -10.401918411254883

Token 121: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.209963900502771e-05
    2. '   ' → logprob: -10.000092506408691
    3. '-' → logprob: -10.500092506408691
    4. ' j' → logprob: -11.500092506408691
    5. '[j' → logprob: -12.625092506408691
    6. '(j' → logprob: -13.125092506408691
    7. ' ' → logprob: -13.875092506408691
    8. '       ' → logprob: -14.625092506408691
    9. '    ' → logprob: -14.875092506408691
    10. '  ' → logprob: -15.125092506408691

Token 122: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010926496179308742
    2. ' -' → logprob: -9.125109672546387
    3. '   ' → logprob: -16.37510871887207
    4. '1' → logprob: -16.50010871887207
    5. '−' → logprob: -17.00010871887207
    6. '-
' → logprob: -18.00010871887207
    7. ' ' → logprob: -18.25010871887207
    8. '```' → logprob: -18.37510871887207
    9. '[j' → logprob: -18.87510871887207
    10. '           ' → logprob: -19.12510871887207

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.125006675720215
    3. '-' → logprob: -14.375006675720215
    4. '   ' → logprob: -15.000006675720215
    5. '
' → logprob: -16.50000762939453
    6. ']' → logprob: -16.62500762939453
    7. '```' → logprob: -16.62500762939453
    8. '１' → logprob: -17.12500762939453
    9. '  ' → logprob: -17.56250762939453
    10. '

' → logprob: -18.00000762939453

Token 124: ']' (ID: 60)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2521670162677765
    2. ' if' → logprob: -1.502166986465454
    3. ']' → logprob: -8.877166748046875
    4. ' ' → logprob: -9.877166748046875
    5. '   ' → logprob: -10.502166748046875
    6. '    ' → logprob: -12.627166748046875
    7. '       ' → logprob: -12.752166748046875
    8. '           ' → logprob: -12.877166748046875
    9. '  ' → logprob: -13.252166748046875
    10. '[i' → logprob: -13.377166748046875

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16030576825141907
    2. 'if' → logprob: -1.9103057384490967
    3. '   ' → logprob: -10.410305976867676
    4. ' ' → logprob: -10.910305976867676
    5. '       ' → logprob: -11.785305976867676
    6. '    ' → logprob: -11.785305976867676
    7. '           ' → logprob: -12.160305976867676
    8. '  ' → logprob: -12.910305976867676
    9. '[i' → logprob: -13.035305976867676
    10. '     ' → logprob: -13.285305976867676

Token 126: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197485327720642
    2. ' j' → logprob: -2.8119747638702393
    3. '   ' → logprob: -13.06197452545166
    4. '	j' → logprob: -13.56197452545166
    5. '(j' → logprob: -13.81197452545166
    6. ' ' → logprob: -13.93697452545166
    7. '           ' → logprob: -14.68697452545166
    8. '                   ' → logprob: -15.06197452545166
    9. '               ' → logprob: -15.31197452545166
    10. '0' → logprob: -15.43697452545166

Token 127: '-' (ID: 12)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011234678328037262
    2. 'else' → logprob: -5.136234760284424
    3. ' >' → logprob: -5.761234760284424
    4. '-' → logprob: -6.386234760284424
    5. ' else' → logprob: -8.011234283447266
    6. '>=' → logprob: -9.386234283447266
    7. '0' → logprob: -11.261234283447266
    8. ')' → logprob: -11.511234283447266
    9. 'j' → logprob: -12.386234283447266
    10. '!=' → logprob: -12.511234283447266

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02051958627998829
    2. '0' → logprob: -4.020519733428955
    3. ' ' → logprob: -6.270519733428955
    4. '>' → logprob: -7.770519733428955
    5. '-' → logprob: -10.645519256591797
    6. '   ' → logprob: -12.020519256591797
    7. '```' → logprob: -12.020519256591797
    8. 'else' → logprob: -13.208019256591797
    9. ' >' → logprob: -13.770519256591797
    10. '[' → logprob: -13.895519256591797

Token 129: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.000264315924141556
    2. ' >=' → logprob: -8.250264167785645
    3. '>' → logprob: -13.875264167785645
    4. 'else' → logprob: -14.250264167785645
    5. ')>=' → logprob: -14.750264167785645
    6. '!=' → logprob: -15.375264167785645
    7. ']>=' → logprob: -15.375264167785645
    8. '≥' → logprob: -15.500264167785645
    9. '>-' → logprob: -16.25026512145996
    10. '!=-' → logprob: -16.62526512145996

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003601974807679653
    2. ' ' → logprob: -5.628602027893066
    3. '   ' → logprob: -13.503602027893066
    4. '    ' → logprob: -15.628602027893066
    5. '  ' → logprob: -16.50360107421875
    6. '
' → logprob: -17.12860107421875
    7. '           ' → logprob: -17.12860107421875
    8. '       ' → logprob: -17.25360107421875
    9. '                   ' → logprob: -17.62860107421875
    10. 'else' → logprob: -17.69110107421875

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751326560974121
    4. '
' → logprob: -16.126325607299805
    5. '  ' → logprob: -18.251325607299805
    6. '           ' → logprob: -19.001325607299805
    7. '```' → logprob: -19.126325607299805
    8. '    ' → logprob: -19.376325607299805
    9. 'else' → logprob: -19.376325607299805
    10. '۰' → logprob: -19.626325607299805

Token 132: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.003179855877533555
    2. 'else' → logprob: -5.753180027008057
    3. '            ' → logprob: -14.503179550170898
    4. ' and' → logprob: -14.628179550170898
    5. ' ' → logprob: -14.753179550170898
    6. '        ' → logprob: -15.253179550170898
    7. ')' → logprob: -15.253179550170898
    8. '           ' → logprob: -16.3781795501709
    9. '          ' → logprob: -16.5031795501709
    10. 'and' → logprob: -16.8781795501709

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06995632499456406
    2. ' ' → logprob: -2.6949563026428223
    3. '               ' → logprob: -12.06995677947998
    4. '   ' → logprob: -12.44495677947998
    5. '                   ' → logprob: -12.69495677947998
    6. '  ' → logprob: -13.69495677947998
    7. '           ' → logprob: -13.81995677947998
    8. '                ' → logprob: -14.31995677947998
    9. '                 ' → logprob: -14.50745677947998
    10. '                       ' → logprob: -14.50745677947998

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019357812125235796
    2. ' ' → logprob: -6.251935958862305
    3. '               ' → logprob: -13.001935958862305
    4. '                   ' → logprob: -13.251935958862305
    5. '   ' → logprob: -13.626935958862305
    6. '           ' → logprob: -14.501935958862305
    7. '                       ' → logprob: -15.251935958862305
    8. '  ' → logprob: -15.501935958862305
    9. ')' → logprob: -15.626935958862305
    10. '                 ' → logprob: -16.126935958862305

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006657334160991013
    2. ')+' → logprob: -7.625665664672852
    3. ' )' → logprob: -9.500665664672852
    4. ')
' → logprob: -9.750665664672852
    5. ')+(' → logprob: -10.125665664672852
    6. '               ' → logprob: -13.250665664672852
    7. '           ' → logprob: -13.750665664672852
    8. ')

' → logprob: -14.500665664672852
    9. '）' → logprob: -15.500665664672852
    10. '+' → logprob: -15.625665664672852

Token 136: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1720282882452011
    2. ')' → logprob: -2.6720283031463623
    3. ' +' → logprob: -2.7970283031463623
    4. ')+' → logprob: -3.6720283031463623
    5. ')+(' → logprob: -6.422028064727783
    6. '+
' → logprob: -7.922028064727783
    7. '           ' → logprob: -8.672028541564941
    8. ' +
' → logprob: -9.172028541564941
    9. '               ' → logprob: -9.297028541564941
    10. '+self' → logprob: -10.047028541564941

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16182120144367218
    2. '(self' → logprob: -2.036821126937866
    3. ' (' → logprob: -4.036821365356445
    4. '                ' → logprob: -7.411821365356445
    5. ' self' → logprob: -8.036821365356445
    6. 'self' → logprob: -8.286821365356445
    7. '              ' → logprob: -9.286821365356445
    8. '(s' → logprob: -10.661821365356445
    9. '                   ' → logprob: -12.161821365356445
    10. '                  ' → logprob: -13.036821365356445

Token 138: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01108625903725624
    2. ' (' → logprob: -4.761086463928223
    3. '               ' → logprob: -6.011086463928223
    4. 'self' → logprob: -11.386086463928223
    5. '                   ' → logprob: -13.261086463928223
    6. '              ' → logprob: -13.636086463928223
    7. '                ' → logprob: -14.011086463928223
    8. ' self' → logprob: -14.511086463928223
    9. '(this' → logprob: -15.386086463928223
    10. '(' (adapté à ' (') → logprob: -15.386086463928223

Token 139: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03822566568851471
    2. ' self' → logprob: -3.2882256507873535
    3. '(self' → logprob: -8.913226127624512
    4. '               ' → logprob: -10.038226127624512
    5. '                   ' → logprob: -13.038226127624512
    6. '           ' → logprob: -14.288226127624512
    7. ' (' → logprob: -14.413226127624512
    8. '              ' → logprob: -14.663226127624512
    9. '[self' → logprob: -15.038226127624512
    10. ' ' → logprob: -15.038226127624512

Token 140: '.ru' (ID: 25924)
  Prédit: '.ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ru' → logprob: -0.25741928815841675
    2. 'ru' → logprob: -1.5074193477630615
    3. '[i' → logprob: -6.007419109344482
    4. 'self' → logprob: -6.507419109344482
    5. '_ru' → logprob: -7.132419109344482
    6. '[self' → logprob: -8.38241958618164
    7. ' ru' → logprob: -8.88241958618164
    8. 'Ru' → logprob: -9.13241958618164
    9. 'RU' → logprob: -9.50741958618164
    10. '.' → logprob: -10.38241958618164

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -13.625001907348633
    3. ' [' → logprob: -16.375001907348633
    4. '[' → logprob: -16.750001907348633
    5. '[
' → logprob: -17.375001907348633
    6. '(i' → logprob: -17.750001907348633
    7. ' i' → logprob: -17.750001907348633
    8. '           ' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.375001907348633

Token 142: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012661388143897057
    2. 'i' → logprob: -4.637661457061768
    3. '-' → logprob: -6.012661457061768
    4. '[' → logprob: -8.38766098022461
    5. '[max' → logprob: -9.01266098022461
    6. '][' → logprob: -10.26266098022461
    7. 'max' → logprob: -11.26266098022461
    8. '[j' → logprob: -11.63766098022461
    9. '   ' → logprob: -12.38766098022461
    10. '[-' → logprob: -12.51266098022461

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. 'j' → logprob: -12.250005722045898
    3. ' ' → logprob: -14.750005722045898
    4. '][' → logprob: -14.875005722045898
    5. '１' → logprob: -16.2500057220459
    6. ']' → logprob: -16.7500057220459
    7. '   ' → logprob: -17.5000057220459
    8. '```' → logprob: -17.5000057220459
    9. '[' → logprob: -17.7500057220459
    10. '<|end|>' → logprob: -18.7500057220459

Token 144: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05705687776207924
    2. '[j' → logprob: -2.9320569038391113
    3. '[' → logprob: -6.557056903839111
    4. ')[' → logprob: -8.432056427001953
    5. '[i' → logprob: -9.182056427001953
    6. ' [' → logprob: -9.307056427001953
    7. '}[' → logprob: -9.307056427001953
    8. ' ][' → logprob: -9.307056427001953
    9. ']' → logprob: -9.807056427001953
    10. '>[' → logprob: -10.557056427001953

Token 145: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015041481237858534
    2. ' j' → logprob: -6.501503944396973
    3. '[j' → logprob: -13.626503944396973
    4. '
' → logprob: -15.876503944396973
    5. '0' → logprob: -16.25150489807129
    6. '	j' → logprob: -16.37650489807129
    7. '   ' → logprob: -16.87650489807129
    8. '           ' → logprob: -17.12650489807129
    9. '][' → logprob: -17.12650489807129
    10. ' ' → logprob: -17.25150489807129

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.684157026233152e-05
    2. ' ]' → logprob: -10.125077247619629
    3. 'if' → logprob: -10.250077247619629
    4. ' if' → logprob: -14.000077247619629
    5. '])' → logprob: -15.250077247619629
    6. '-' → logprob: -16.250076293945312
    7. '0' → logprob: -17.125076293945312
    8. ']>' → logprob: -17.250076293945312
    9. ']
' → logprob: -17.375076293945312
    10. '   ' → logprob: -17.750076293945312

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.043936826288700104
    2. 'if' → logprob: -3.1689367294311523
    3. ' -' → logprob: -7.168936729431152
    4. '-' → logprob: -9.168936729431152
    5. ')' → logprob: -10.168936729431152
    6. ' ' → logprob: -11.293936729431152
    7. '           ' → logprob: -12.793936729431152
    8. '            ' → logprob: -13.418936729431152
    9. 'If' → logprob: -14.043936729431152
    10. '               ' → logprob: -14.043936729431152

Token 148: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31373247504234314
    2. ' i' → logprob: -1.3137325048446655
    3. '0' → logprob: -7.813732624053955
    4. ' ' → logprob: -10.563732147216797
    5. '   ' → logprob: -11.188732147216797
    6. '(i' → logprob: -11.688732147216797
    7. ' (' → logprob: -12.188732147216797
    8. '           ' → logprob: -12.313732147216797
    9. '       ' → logprob: -12.938732147216797
    10. '	i' → logprob: -13.688732147216797

Token 149: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00019007037917617708
    2. ' -' → logprob: -8.750189781188965
    3. '>' → logprob: -10.625189781188965
    4. '0' → logprob: -12.750189781188965
    5. ' >' → logprob: -12.750189781188965
    6. '1' → logprob: -13.750189781188965
    7. ' ' → logprob: -15.500189781188965
    8. '>-' → logprob: -16.25019073486328
    9. '<|end|>' → logprob: -17.12519073486328
    10. '<|end|>' → logprob: -18.00019073486328

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04315538704395294
    2. '0' → logprob: -3.2931554317474365
    3. ' ' → logprob: -5.293155193328857
    4. '-' → logprob: -9.918155670166016
    5. '   ' → logprob: -11.668155670166016
    6. '>' → logprob: -11.793155670166016
    7. '
' → logprob: -12.543155670166016
    8. '```' → logprob: -12.793155670166016
    9. ' -' → logprob: -14.855655670166016
    10. '[' → logprob: -14.855655670166016

Token 151: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14312465488910675
    2. '>=' → logprob: -2.018124580383301
    3. ']>=' → logprob: -8.3931245803833
    4. '0' → logprob: -8.8931245803833
    5. ')>=' → logprob: -10.1431245803833
    6. ' ' → logprob: -10.7681245803833
    7. ' else' → logprob: -11.8931245803833
    8. ')' → logprob: -12.1431245803833
    9. 'else' → logprob: -12.6431245803833
    10. '>' → logprob: -13.7681245803833

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542239770293236
    2. ' ' → logprob: -3.8955421447753906
    3. '   ' → logprob: -15.64554214477539
    4. '  ' → logprob: -16.14554214477539
    5. '<|end|>' → logprob: -16.64554214477539
    6. '
' → logprob: -17.02054214477539
    7. '    ' → logprob: -17.14554214477539
    8. '```' → logprob: -17.89554214477539
    9. ' ' → logprob: -18.02054214477539
    10. ')' → logprob: -18.52054214477539

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067204674705863
    2. ' ' → logprob: -5.006720542907715
    3. '
' → logprob: -13.006720542907715
    4. '   ' → logprob: -13.881720542907715
    5. '<|end|>' → logprob: -14.631720542907715
    6. '  ' → logprob: -15.069220542907715
    7. '```' → logprob: -15.881720542907715
    8. '    ' → logprob: -16.0067195892334
    9. ' 
' → logprob: -16.3192195892334
    10. ')' → logprob: -16.3817195892334

Token 154: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0067167943343520164
    2. 'else' → logprob: -5.006716728210449
    3. ')' → logprob: -14.50671672821045
    4. '            ' → logprob: -14.75671672821045
    5. '                ' → logprob: -15.63171672821045
    6. '               ' → logprob: -16.131717681884766
    7. '           ' → logprob: -16.256717681884766
    8. '        ' → logprob: -16.756717681884766
    9. ' ' → logprob: -17.006717681884766
    10. ' and' → logprob: -17.631717681884766

Token 155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. ')' → logprob: -16.62520408630371
    4. ' ' → logprob: -18.25020408630371
    5. '               ' → logprob: -18.25020408630371
    6. '   ' → logprob: -18.62520408630371
    7. '           ' → logprob: -19.12520408630371
    8. '                   ' → logprob: -19.50020408630371
    9. '۰' → logprob: -19.93770408630371
    10. '  ' → logprob: -20.75020408630371

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.625553131103516
    4. '
' → logprob: -17.750553131103516
    5. ')' → logprob: -17.875553131103516
    6. '               ' → logprob: -18.250553131103516
    7. '           ' → logprob: -18.500553131103516
    8. '<|end|>' → logprob: -18.875553131103516
    9. '  ' → logprob: -19.000553131103516
    10. '۰' → logprob: -19.375553131103516

Token 157: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5796195268630981
    2. ' -' → logprob: -1.2046195268630981
    3. ')' → logprob: -2.0796194076538086
    4. '               ' → logprob: -4.329619407653809
    5. ' -
' → logprob: -7.204619407653809
    6. '-
' → logprob: -7.454619407653809
    7. ' )' → logprob: -8.329619407653809
    8. '           ' → logprob: -8.704619407653809
    9. ')-' → logprob: -9.579619407653809
    10. ')-(' → logprob: -9.954619407653809

Token 158: ' -
' (ID: 27418)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06050444766879082
    2. ' -' → logprob: -2.93550443649292
    3. '-
' → logprob: -5.31050443649292
    4. ' -
' → logprob: -8.060504913330078
    5. '               ' → logprob: -8.685504913330078
    6. ')' → logprob: -9.060504913330078
    7. '-self' → logprob: -11.185504913330078
    8. '           ' → logprob: -11.435504913330078
    9. '-ex' → logprob: -12.185504913330078
    10. '-
' → logprob: -12.685504913330078

Token 159: '               ' (ID: 506)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13631092011928558
    2. '               ' → logprob: -2.6363108158111572
    3. ' (' → logprob: -2.8863108158111572
    4. '              ' → logprob: -12.511310577392578
    5. '                   ' → logprob: -12.636310577392578
    6. '(this' → logprob: -12.886310577392578
    7. '                ' → logprob: -12.886310577392578
    8. '(' → logprob: -13.261310577392578
    9. '(
' → logprob: -13.511310577392578
    10. '           ' → logprob: -13.511310577392578

Token 160: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015476031228899956
    2. ' (' → logprob: -4.265476226806641
    3. '               ' → logprob: -6.640476226806641
    4. '(this' → logprob: -13.39047622680664
    5. 'self' → logprob: -14.01547622680664
    6. '((' → logprob: -14.39047622680664
    7. '(' (adapté à ' (') → logprob: -14.76547622680664
    8. '0' → logprob: -14.89047622680664
    9. '                   ' → logprob: -15.01547622680664
    10. ' ' → logprob: -15.14047622680664

Token 161: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016349162615370005
    2. ' self' → logprob: -8.750163078308105
    3. '               ' → logprob: -12.500163078308105
    4. '(self' → logprob: -13.875163078308105
    5. '           ' → logprob: -15.375163078308105
    6. '                   ' → logprob: -16.000164031982422
    7. '[self' → logprob: -17.375164031982422
    8. '	self' → logprob: -18.375164031982422
    9. '0' → logprob: -18.625164031982422
    10. '                       ' → logprob: -18.625164031982422

Token 162: '.ru' (ID: 25924)
  Prédit: '.ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ru' → logprob: -0.0001907855912577361
    2. ' .' → logprob: -9.000190734863281
    3. 'ru' → logprob: -10.250190734863281
    4. '.' → logprob: -11.750190734863281
    5. '_ru' → logprob: -11.750190734863281
    6. '```' → logprob: -12.750190734863281
    7. '.ro' → logprob: -12.875190734863281
    8. 'self' → logprob: -13.000190734863281
    9. '.r' → logprob: -13.375190734863281
    10. '
' → logprob: -13.500190734863281

Token 163: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. 'i' → logprob: -12.000006675720215
    3. '[' → logprob: -15.500006675720215
    4. '   ' → logprob: -17.0000057220459
    5. '(i' → logprob: -17.7500057220459
    6. ' i' → logprob: -17.8750057220459
    7. '[I' → logprob: -18.2500057220459
    8. '           ' → logprob: -18.7500057220459
    9. '	i' → logprob: -19.2500057220459
    10. '{i' → logprob: -19.6250057220459

Token 164: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0040887282229959965
    2. 'i' → logprob: -5.504088878631592
    3. '][' → logprob: -11.879088401794434
    4. '[' → logprob: -13.129088401794434
    5. ' i' → logprob: -15.129088401794434
    6. '[I' → logprob: -15.254088401794434
    7. '   ' → logprob: -15.379088401794434
    8. '(i' → logprob: -15.879088401794434
    9. '{i' → logprob: -16.00408935546875
    10. '	i' → logprob: -16.00408935546875

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.625
    4. '   ' → logprob: -16.75
    5. '-' → logprob: -16.9375
    6. 'from' → logprob: -17.125
    7. '[' → logprob: -17.6875
    8. '
' → logprob: -17.75
    9. '11' → logprob: -17.875
    10. '۱' → logprob: -18.125

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018271461594849825
    2. '[j' → logprob: -6.501827239990234
    3. '[' → logprob: -8.501827239990234
    4. '[i' → logprob: -9.751827239990234
    5. ']' → logprob: -10.876827239990234
    6. ')[' → logprob: -11.376827239990234
    7. '<|end|>' → logprob: -11.751827239990234
    8. ' ][' → logprob: -11.876827239990234
    9. '}[' → logprob: -12.001827239990234
    10. '"][' → logprob: -12.126827239990234

Token 167: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3663626305060461e-05
    2. ' j' → logprob: -11.87501335144043
    3. '[j' → logprob: -12.12501335144043
    4. '][' → logprob: -13.87501335144043
    5. '   ' → logprob: -15.62501335144043
    6. ']' → logprob: -17.25001335144043
    7. '	j' → logprob: -17.37501335144043
    8. ':j' → logprob: -17.62501335144043
    9. '
' → logprob: -17.75001335144043
    10. ')' → logprob: -18.12501335144043

Token 168: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. ' -' → logprob: -11.25001335144043
    3. '1' → logprob: -17.75001335144043
    4. '[' → logprob: -19.37501335144043
    5. '−' → logprob: -19.37501335144043
    6. ']' → logprob: -20.75001335144043
    7. ' ' → logprob: -20.87501335144043
    8. '   ' → logprob: -21.12501335144043
    9. '-
' → logprob: -21.12501335144043
    10. '```' → logprob: -21.37501335144043

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '-' → logprob: -19.0
    4. ']' → logprob: -20.125
    5. '   ' → logprob: -20.375
    6. '```' → logprob: -21.625
    7. '
' → logprob: -22.25
    8. '  ' → logprob: -23.0
    9. '１' → logprob: -24.125
    10. '	' → logprob: -24.25

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001239196863025427
    2. 'if' → logprob: -9.250123977661133
    3. ' if' → logprob: -11.250123977661133
    4. ' ]' → logprob: -11.750123977661133
    5. '][' → logprob: -12.250123977661133
    6. 'If' → logprob: -14.375123977661133
    7. '```' → logprob: -15.000123977661133
    8. '[' → logprob: -15.250123977661133
    9. '[j' → logprob: -15.250123977661133
    10. ']
' → logprob: -15.250123977661133

Token 171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.033809252083301544
    2. 'if' → logprob: -3.408809185028076
    3. ')' → logprob: -8.908809661865234
    4. '               ' → logprob: -11.658809661865234
    5. ']' → logprob: -12.283809661865234
    6. '[' → logprob: -13.033809661865234
    7. '           ' → logprob: -13.033809661865234
    8. 'If' → logprob: -13.033809661865234
    9. '[i' → logprob: -13.283809661865234
    10. '[j' → logprob: -14.033809661865234

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012046637013554573
    2. ' i' → logprob: -4.512046813964844
    3. '(i' → logprob: -7.012046813964844
    4. ' (' → logprob: -9.262046813964844
    5. '0' → logprob: -13.387046813964844
    6. '(' → logprob: -15.387046813964844
    7. '[i' → logprob: -15.512046813964844
    8. 'j' → logprob: -15.762046813964844
    9. ' ' → logprob: -15.887046813964844
    10. '   ' → logprob: -16.262046813964844

Token 173: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011224505578866228
    2. ' -' → logprob: -9.125112533569336
    3. '>' → logprob: -13.000112533569336
    4. '1' → logprob: -15.000112533569336
    5. '>-' → logprob: -15.375112533569336
    6. ' >' → logprob: -15.500112533569336
    7. '0' → logprob: -16.750112533569336
    8. '   ' → logprob: -17.375112533569336
    9. ' ' → logprob: -18.000112533569336
    10. '```' → logprob: -18.250112533569336

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002810007717926055
    2. '0' → logprob: -8.87528133392334
    3. ' ' → logprob: -8.87528133392334
    4. '>' → logprob: -15.12528133392334
    5. '-' → logprob: -15.18778133392334
    6. '```' → logprob: -15.18778133392334
    7. '   ' → logprob: -15.93778133392334
    8. '<|end|>' → logprob: -16.500280380249023
    9. '
' → logprob: -16.562780380249023
    10. '>=' → logprob: -17.937780380249023

Token 175: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5231850147247314
    2. ' >=' → logprob: -0.8981850147247314
    3. ']>=' → logprob: -10.773184776306152
    4. ')>=' → logprob: -11.023184776306152
    5. '>' → logprob: -11.898184776306152
    6. '-' → logprob: -12.023184776306152
    7. ' ' → logprob: -12.648184776306152
    8. '<|end|>' → logprob: -13.148184776306152
    9. '0' → logprob: -13.273184776306152
    10. 'and' → logprob: -13.398184776306152

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020741820335388
    2. ' ' → logprob: -2.3502073287963867
    3. '   ' → logprob: -15.225207328796387
    4. '
' → logprob: -15.600207328796387
    5. '  ' → logprob: -16.037708282470703
    6. ' ' → logprob: -16.787708282470703
    7. '    ' → logprob: -17.162708282470703
    8. 'and' → logprob: -17.225208282470703
    9. '０' → logprob: -17.475208282470703
    10. ' 
' → logprob: -17.787708282470703

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '1' → logprob: -18.18853187561035
    4. '۰' → logprob: -18.31353187561035
    5. '
' → logprob: -18.68853187561035
    6. '   ' → logprob: -18.75103187561035
    7. '０' → logprob: -18.87603187561035
    8. '<|end|>' → logprob: -19.12603187561035
    9. '  ' → logprob: -19.56353187561035
    10. '```' → logprob: -20.18853187561035

Token 178: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5760213136672974
    2. ' and' → logprob: -0.8260213136672974
    3. ' else' → logprob: -10.076021194458008
    4. 'else' → logprob: -11.201021194458008
    5. '][' → logprob: -11.701021194458008
    6. ' ' → logprob: -12.451021194458008
    7. '           ' → logprob: -13.076021194458008
    8. ',' → logprob: -13.201021194458008
    9. ' j' → logprob: -13.326021194458008
    10. '               ' → logprob: -13.451021194458008

Token 179: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004885728703811765
    2. ' j' → logprob: -7.625488758087158
    3. '   ' → logprob: -15.12548828125
    4. '	j' → logprob: -15.50048828125
    5. '           ' → logprob: -16.75048828125
    6. ' ' → logprob: -17.87548828125
    7. '0' → logprob: -18.12548828125
    8. '$j' → logprob: -18.37548828125
    9. '  ' → logprob: -18.50048828125
    10. '    ' → logprob: -18.50048828125

Token 180: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7120533811976202e-05
    2. ' -' → logprob: -11.125017166137695
    3. '>' → logprob: -13.250017166137695
    4. '1' → logprob: -15.000017166137695
    5. '>-' → logprob: -16.500017166137695
    6. '[' → logprob: -17.500017166137695
    7. '0' → logprob: -17.625017166137695
    8. '```' → logprob: -17.750017166137695
    9. ' >' → logprob: -17.875017166137695
    10. ' ' → logprob: -18.000017166137695

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2603901015827432e-05
    2. ' ' → logprob: -10.750022888183594
    3. '-' → logprob: -14.125022888183594
    4. '<|end|>' → logprob: -15.500022888183594
    5. '```' → logprob: -16.000022888183594
    6. '   ' → logprob: -17.375022888183594
    7. '<|end|>' → logprob: -17.437522888183594
    8. '
' → logprob: -17.562522888183594
    9. '>' → logprob: -17.625022888183594
    10. '0' → logprob: -18.250022888183594

Token 182: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12708695232868195
    2. ' >=' → logprob: -2.127086877822876
    3. ']>=' → logprob: -9.002086639404297
    4. ')>=' → logprob: -10.752086639404297
    5. '0' → logprob: -11.377086639404297
    6. ')' → logprob: -13.377086639404297
    7. ']' → logprob: -14.752086639404297
    8. ' ' → logprob: -14.752086639404297
    9. '≥' → logprob: -16.127086639404297
    10. '<|end|>' → logprob: -16.252086639404297

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03364719823002815
    2. ' ' → logprob: -3.408647298812866
    3. '1' → logprob: -14.533647537231445
    4. '   ' → logprob: -14.783647537231445
    5. '
' → logprob: -16.283647537231445
    6. '```' → logprob: -16.283647537231445
    7. '۰' → logprob: -16.971147537231445
    8. ' ' → logprob: -17.096147537231445
    9. '<|end|>' → logprob: -17.096147537231445
    10. '>' → logprob: -17.283647537231445

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.125911712646484
    4. '1' → logprob: -17.375911712646484
    5. '   ' → logprob: -17.875911712646484
    6. '
' → logprob: -17.875911712646484
    7. '```' → logprob: -18.625911712646484
    8. '۰' → logprob: -19.000911712646484
    9. '  ' → logprob: -19.063411712646484
    10. '０' → logprob: -19.313411712646484

Token 185: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03835759684443474
    2. 'else' → logprob: -3.2883574962615967
    3. ']' → logprob: -8.163357734680176
    4. ')' → logprob: -10.663357734680176
    5. '               ' → logprob: -12.163357734680176
    6. '           ' → logprob: -13.538357734680176
    7. '])' → logprob: -14.413357734680176
    8. '                   ' → logprob: -15.663357734680176
    9. '	else' → logprob: -15.913357734680176
    10. ' ]' → logprob: -15.913357734680176

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '               ' → logprob: -18.0000057220459
    4. '           ' → logprob: -18.3750057220459
    5. '   ' → logprob: -19.1250057220459
    6. '                   ' → logprob: -19.2500057220459
    7. '                       ' → logprob: -19.8750057220459
    8. '۰' → logprob: -20.5000057220459
    9. '       ' → logprob: -20.7500057220459
    10. '０' → logprob: -20.8750057220459

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -18.125030517578125
    4. '           ' → logprob: -18.500030517578125
    5. '               ' → logprob: -18.625030517578125
    6. '                   ' → logprob: -20.000030517578125
    7. '  ' → logprob: -20.125030517578125
    8. '۰' → logprob: -20.625030517578125
    9. '０' → logprob: -20.875030517578125
    10. '       ' → logprob: -21.000030517578125

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003728774609044194
    2. '))' → logprob: -8.125372886657715
    3. ')
' → logprob: -10.250372886657715
    4. ' )' → logprob: -10.500372886657715
    5. '       ' → logprob: -12.625372886657715
    6. ')))' → logprob: -12.875372886657715
    7. '           ' → logprob: -13.000372886657715
    8. '）' → logprob: -13.125372886657715
    9. ')}' → logprob: -13.125372886657715
    10. '               ' → logprob: -14.250372886657715

Token 189: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002880337997339666
    2. ')
' → logprob: -9.000288009643555
    3. '       ' → logprob: -9.500288009643555
    4. ' )' → logprob: -9.500288009643555
    5. '           ' → logprob: -11.625288009643555
    6. '               ' → logprob: -13.250288009643555
    7. '))' → logprob: -13.875288009643555
    8. '）' → logprob: -14.000288009643555
    9. ')}' → logprob: -14.500288009643555
    10. '   ' → logprob: -14.500288009643555

Token 190: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036846695002168417
    2. '       ' → logprob: -8.625368118286133
    3. ')
' (adapté à ' )
') → logprob: -8.875368118286133
    4. ' )' → logprob: -10.125368118286133
    5. ')}' → logprob: -12.750368118286133
    6. '))' → logprob: -13.375368118286133
    7. ')return' → logprob: -13.875368118286133
    8. '）' → logprob: -14.250368118286133
    9. ')

' → logprob: -14.750368118286133
    10. ')}}' → logprob: -14.750368118286133

Token 191: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' get' (ID: 717)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2582526206970215
    2. 'query' → logprob: -1.3832526206970215
    3. ' query' → logprob: -1.5082526206970215
    4. ' sum' → logprob: -2.1332526206970215
    5. ' get' → logprob: -2.8832526206970215
    6. 'get' → logprob: -2.8832526206970215
    7. '_sum' → logprob: -5.8832526206970215
    8. ' accumulate' → logprob: -6.2582526206970215
    9. ' area' → logprob: -6.3832526206970215
    10. 'acc' → logprob: -6.3832526206970215

Token 194: '_sum' (ID: 29859)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.035856809467077255
    2. '_sum' → logprob: -3.6608567237854004
    3. 'sum' → logprob: -5.4108567237854
    4. '(' → logprob: -6.1608567237854
    5. '<|end|>' → logprob: -7.0358567237854
    6. 'self' → logprob: -7.2858567237854
    7. '_' → logprob: -7.9108567237854
    8. '_area' → logprob: -7.9108567237854
    9. '_rectangle' → logprob: -8.535857200622559
    10. '_sub' → logprob: -9.910857200622559

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0042937383987009525
    2. '(' → logprob: -5.879293918609619
    3. '<|end|>' → logprob: -6.629293918609619
    4. '(s' → logprob: -9.129293441772461
    5. '(
' → logprob: -10.754293441772461
    6. '(sel' → logprob: -11.254293441772461
    7. 'self' → logprob: -11.504293441772461
    8. '<|end|>' → logprob: -12.254293441772461
    9. ' (' → logprob: -13.504293441772461
    10. ' self' → logprob: -13.879293441772461

Token 196: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23556962609291077
    2. 'self' → logprob: -2.235569715499878
    3. ',' → logprob: -2.485569715499878
    4. '(' → logprob: -4.610569477081299
    5. '   ' → logprob: -6.235569477081299
    6. ',self' → logprob: -6.235569477081299
    7. ')(' → logprob: -6.360569477081299
    8. ')' → logprob: -6.735569477081299
    9. '<|end|>' → logprob: -7.110569477081299
    10. ')(
' → logprob: -7.735569477081299

Token 197: ' hl' (ID: 16256)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029271669685840607
    2. 'x' → logprob: -4.404271602630615
    3. ' self' → logprob: -5.154271602630615
    4. 'r' → logprob: -5.404271602630615
    5. '   ' → logprob: -6.654271602630615
    6. 'top' → logprob: -6.654271602630615
    7. '(self' → logprob: -7.029271602630615
    8. 'i' → logprob: -7.154271602630615
    9. 'y' → logprob: -7.154271602630615
    10. 's' → logprob: -7.654271602630615

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001195467310026288
    2. 'f' → logprob: -7.126195430755615
    3. '   ' → logprob: -8.876195907592773
    4. ' ,' → logprob: -9.876195907592773
    5. '1' → logprob: -10.001195907592773
    6. '):' → logprob: -10.626195907592773
    7. 'eft' → logprob: -10.751195907592773
    8. 'ow' → logprob: -11.251195907592773
    9. ',r' → logprob: -11.376195907592773
    10. '       ' → logprob: -11.751195907592773

Token 199: ' hr' (ID: 19636)
  Prédit: 'hr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.13778887689113617
    2. 'wl' → logprob: -2.262788772583008
    3. 'hw' → logprob: -4.262788772583008
    4. 'wc' → logprob: -5.137788772583008
    5. 'wr' → logprob: -6.137788772583008
    6. 'hc' → logprob: -6.762788772583008
    7. 'vl' → logprob: -7.762788772583008
    8. 'hl' → logprob: -8.387788772583008
    9. 'ht' → logprob: -8.762788772583008
    10. ' hr' → logprob: -9.137788772583008

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030042731668800116
    2. ' ,' → logprob: -8.250300407409668
    3. ',j' → logprob: -10.625300407409668
    4. ',l' → logprob: -12.125300407409668
    5. '):' → logprob: -12.500300407409668
    6. ',i' → logprob: -13.500300407409668
    7. ',
' → logprob: -13.875300407409668
    8. ',k' → logprob: -14.250300407409668
    9. ',int' → logprob: -14.750300407409668
    10. '   ' → logprob: -15.375300407409668

Token 201: ' wl' (ID: 98585)
  Prédit: 'wl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wl' → logprob: -0.00010914575977949426
    2. ' wl' → logprob: -9.37510871887207
    3. 'wc' → logprob: -10.87510871887207
    4. 'vl' → logprob: -13.25010871887207
    5. 'cl' → logprob: -13.50010871887207
    6. ' ' → logprob: -14.25010871887207
    7. '   ' → logprob: -14.37510871887207
    8. 'w' → logprob: -15.25010871887207
    9. '
' → logprob: -16.00010871887207
    10. '  ' → logprob: -16.00010871887207

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01637439802289009
    2. '):' → logprob: -4.141374588012695
    3. ' ,' → logprob: -8.891374588012695
    4. '):
' → logprob: -8.891374588012695
    5. 'l' → logprob: -10.891374588012695
    6. '   ' → logprob: -11.266374588012695
    7. ' ):' → logprob: -11.891374588012695
    8. ',
' → logprob: -13.141374588012695
    9. ')' → logprob: -13.141374588012695
    10. 'w' → logprob: -13.266374588012695

Token 203: ' wr' (ID: 5899)
  Prédit: 'wr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -4.370294846012257e-05
    2. ' wr' → logprob: -10.125043869018555
    3. 'wh' → logprob: -12.875043869018555
    4. '   ' → logprob: -15.000043869018555
    5. ' ' → logprob: -15.750043869018555
    6. 'war' → logprob: -15.875043869018555
    7. 'wrap' → logprob: -16.250043869018555
    8. 'w' → logprob: -16.500043869018555
    9. 'wrk' → logprob: -16.750043869018555
    10. 'hr' → logprob: -17.125043869018555

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002892258344218135
    2. '):
' → logprob: -8.750288963317871
    3. ')' → logprob: -9.000288963317871
    4. ' ):' → logprob: -12.125288963317871
    5. '):
' → logprob: -14.500288963317871
    6. '   ' → logprob: -14.750288963317871
    7. ')：' → logprob: -14.875288963317871
    8. '）：' → logprob: -15.625288963317871
    9. '):

' → logprob: -16.375289916992188
    10. ':' → logprob: -16.500289916992188

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04931839555501938
    2. '<|end|>' → logprob: -3.299318313598633
    3. ':' → logprob: -5.549318313598633
    4. ' ' → logprob: -6.174318313598633
    5. ')' → logprob: -6.299318313598633
    6. '   ' → logprob: -7.174318313598633
    7. '    ' → logprob: -7.674318313598633
    8. ' return' → logprob: -7.924318313598633
    9. ',' → logprob: -8.299318313598633
    10. ':return' → logprob: -8.549318313598633

Token 206: ' fetch' (ID: 12011)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36697596311569214
    2. 'return' → logprob: -1.241976022720337
    3. ' return' → logprob: -4.366975784301758
    4. 'res' → logprob: -6.116975784301758
    5. 's' → logprob: -6.366975784301758
    6. ' s' → logprob: -7.241975784301758
    7. 'if' → logprob: -8.116975784301758
    8. 'a' → logprob: -8.866975784301758
    9. ' res' → logprob: -9.116975784301758
    10. 'sum' → logprob: -9.491975784301758

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7095204591751099
    2. ' =' → logprob: -0.7095204591751099
    3. '1' → logprob: -4.83452033996582
    4. '_' → logprob: -6.45952033996582
    5. '0' → logprob: -6.95952033996582
    6. '_val' → logprob: -7.20952033996582
    7. '   ' → logprob: -7.33452033996582
    8. 'd' → logprob: -7.58452033996582
    9. '=self' → logprob: -7.58452033996582
    10. 'self' → logprob: -7.58452033996582

Token 208: ' lambda' (ID: 27871)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49093878269195557
    2. 'lambda' → logprob: -1.2409387826919556
    3. ' lambda' → logprob: -2.740938663482666
    4. ' self' → logprob: -3.740938663482666
    5. '(lambda' → logprob: -4.990938663482666
    6. '0' → logprob: -6.865938663482666
    7. '           ' → logprob: -6.990938663482666
    8. '   ' → logprob: -7.490938663482666
    9. '(self' → logprob: -7.490938663482666
    10. '(
' → logprob: -7.865938663482666

Token 209: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7342007160186768
    2. 'x' → logprob: -1.1092007160186768
    3. 'r' → logprob: -2.1092007160186768
    4. ' i' → logprob: -4.109200477600098
    5. ' x' → logprob: -4.359200477600098
    6. 'idx' → logprob: -4.484200477600098
    7. 'a' → logprob: -5.109200477600098
    8. 'arr' → logprob: -5.234200477600098
    9. ' r' → logprob: -5.609200477600098
    10. 'y' → logprob: -5.609200477600098

Token 210: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13214676082134247
    2. ',' → logprob: -2.1321468353271484
    3. ' :' → logprob: -5.882146835327148
    4. ',i' → logprob: -6.257146835327148
    5. ',x' → logprob: -8.882146835327148
    6. ':i' → logprob: -9.882146835327148
    7. ',y' → logprob: -9.882146835327148
    8. ':x' → logprob: -10.257146835327148
    9. ':self' → logprob: -10.507146835327148
    10. ':[' → logprob: -10.632146835327148

Token 211: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031781906727701426
    2. ' y' → logprob: -5.753178119659424
    3. 'x' → logprob: -16.003177642822266
    4. '   ' → logprob: -16.378177642822266
    5. '    ' → logprob: -16.753177642822266
    6. '     ' → logprob: -16.753177642822266
    7. '      ' → logprob: -17.003177642822266
    8. '       ' → logprob: -17.253177642822266
    9. '  ' → logprob: -17.503177642822266
    10. ' ' → logprob: -17.628177642822266

Token 212: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015169414109550416
    2. ' :' → logprob: -9.500151634216309
    3. ':self' → logprob: -9.625151634216309
    4. '       ' → logprob: -12.625151634216309
    5. ',' → logprob: -12.750151634216309
    6. 'self' → logprob: -14.000151634216309
    7. '           ' → logprob: -14.000151634216309
    8. '=' → logprob: -14.250151634216309
    9. '   ' → logprob: -14.500151634216309
    10. '        ' → logprob: -15.125151634216309

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03029523976147175
    2. ' self' → logprob: -3.6552951335906982
    3. '0' → logprob: -5.530295372009277
    4. '(self' → logprob: -11.405295372009277
    5. ' ' → logprob: -11.530295372009277
    6. '   ' → logprob: -14.780295372009277
    7. '	self' → logprob: -15.530295372009277
    8. '           ' → logprob: -15.905295372009277
    9. '       ' → logprob: -16.28029441833496
    10. '(' → logprob: -16.40529441833496

Token 214: '.ru' (ID: 25924)
  Prédit: '.ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ru' → logprob: -7.874882430769503e-05
    2. ' .' → logprob: -10.000079154968262
    3. '.ro' → logprob: -10.375079154968262
    4. '.ra' → logprob: -14.250079154968262
    5. '.' → logprob: -14.625079154968262
    6. '.rl' → logprob: -16.125078201293945
    7. '.rv' → logprob: -16.125078201293945
    8. '\.' → logprob: -16.250078201293945
    9. 'ru' → logprob: -16.250078201293945
    10. '.rs' → logprob: -16.500078201293945

Token 215: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004392967559397221
    2. 'x' → logprob: -5.754393100738525
    3. '[y' → logprob: -6.879393100738525
    4. '[min' → logprob: -8.629392623901367
    5. '[' → logprob: -12.879392623901367
    6. '[max' → logprob: -13.504392623901367
    7. 'y' → logprob: -13.754392623901367
    8. 'min' → logprob: -13.879392623901367
    9. ' x' → logprob: -14.504392623901367
    10. '(x' → logprob: -15.629392623901367

Token 216: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015860427811276168
    2. '-' → logprob: -9.125158309936523
    3. '[y' → logprob: -10.750158309936523
    4. ']' → logprob: -11.000158309936523
    5. ' ][' → logprob: -12.125158309936523
    6. 'y' → logprob: -12.875158309936523
    7. ' -' → logprob: -13.875158309936523
    8. '[' → logprob: -14.375158309936523
    9. '   ' → logprob: -14.375158309936523
    10. '       ' → logprob: -15.125158309936523

Token 217: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.848420551046729e-05
    2. ' y' → logprob: -9.7500581741333
    3. ' ' → logprob: -15.8750581741333
    4. '   ' → logprob: -18.000059127807617
    5. '  ' → logprob: -18.125059127807617
    6. '    ' → logprob: -18.500059127807617
    7. '	y' → logprob: -18.875059127807617
    8. ']' → logprob: -19.125059127807617
    9. '<|end|>' → logprob: -20.125059127807617
    10. '
' → logprob: -20.125059127807617

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010068230039905757
    2. ' ]' → logprob: -10.125101089477539
    3. ']
' → logprob: -10.500101089477539
    4. ' if' → logprob: -10.750101089477539
    5. 'if' → logprob: -12.125101089477539
    6. ']-' → logprob: -13.500101089477539
    7. ' -' → logprob: -13.875101089477539
    8. '-' → logprob: -14.125101089477539
    9. ']+' → logprob: -14.250101089477539
    10. '       ' → logprob: -14.500101089477539

Token 219: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10342556238174438
    2. ' if' → logprob: -3.4784255027770996
    3. 'return' → logprob: -3.9784255027770996
    4. '
' → logprob: -3.9784255027770996
    5. '+' → logprob: -4.2284255027771
    6. '        
' → logprob: -4.8534255027771
    7. 'if' → logprob: -5.6034255027771
    8. ' +' → logprob: -7.1034255027771
    9. ' 
' → logprob: -7.3534255027771
    10. '+
' → logprob: -7.4784255027771

Token 220: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10106644034385681
    2. 'x' → logprob: -2.3510663509368896
    3. '(x' → logprob: -7.726066589355469
    4. '(' → logprob: -8.226066589355469
    5. ' x' → logprob: -9.226066589355469
    6. ' ' → logprob: -9.976066589355469
    7. ' (' → logprob: -12.351066589355469
    8. '   ' → logprob: -14.226066589355469
    9. '-' → logprob: -15.226066589355469
    10. '	x' → logprob: -16.22606658935547

Token 221: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0046827648766338825
    2. ' >=' → logprob: -5.379682540893555
    3. '>' → logprob: -10.004682540893555
    4. ']>=' → logprob: -11.629682540893555
    5. 'and' → logprob: -13.254682540893555
    6. '!=' → logprob: -13.379682540893555
    7. ')>=' → logprob: -13.379682540893555
    8. '!=-' → logprob: -14.254682540893555
    9. '0' → logprob: -14.629682540893555
    10. '[' → logprob: -15.004682540893555

Token 222: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.37548828125
    4. '1' → logprob: -18.25048828125
    5. 'and' → logprob: -19.00048828125
    6. '00' → logprob: -19.37548828125
    7. '
' → logprob: -19.37548828125
    8. '  ' → logprob: -19.75048828125
    9. '۰' → logprob: -19.87548828125
    10. ' and' → logprob: -20.12548828125

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.62507438659668
    4. '1' → logprob: -17.75007438659668
    5. 'and' → logprob: -18.00007438659668
    6. '
' → logprob: -19.00007438659668
    7. '00' → logprob: -19.37507438659668
    8. '۰' → logprob: -19.37507438659668
    9. ' and' → logprob: -19.68757438659668
    10. '  ' → logprob: -20.43757438659668

Token 224: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22665110230445862
    2. 'and' → logprob: -1.7266510725021362
    3. ' else' → logprob: -3.976651191711426
    4. 'else' → logprob: -5.101651191711426
    5. '        ' → logprob: -9.601651191711426
    6. ' ' → logprob: -12.351651191711426
    7. '           ' → logprob: -12.476651191711426
    8. '    ' → logprob: -12.726651191711426
    9. '            ' → logprob: -12.976651191711426
    10. '       ' → logprob: -13.101651191711426

Token 225: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0012795224320143461
    2. ' y' → logprob: -6.751279354095459
    3. '0' → logprob: -9.126279830932617
    4. '   ' → logprob: -15.626279830932617
    5. ' ' → logprob: -15.876279830932617
    6. '    ' → logprob: -16.376279830932617
    7. '	y' → logprob: -16.751279830932617
    8. '  ' → logprob: -17.251279830932617
    9. '           ' → logprob: -17.876279830932617
    10. '          ' → logprob: -18.376279830932617

Token 226: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5234265923500061
    2. '>=' → logprob: -0.8984265923500061
    3. ']>=' → logprob: -8.64842700958252
    4. '0' → logprob: -9.14842700958252
    5. ')>=' → logprob: -11.77342700958252
    6. '[' → logprob: -12.39842700958252
    7. ' ' → logprob: -12.39842700958252
    8. '<|end|>' → logprob: -13.39842700958252
    9. '   ' → logprob: -13.77342700958252
    10. '>' → logprob: -14.64842700958252

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.376502990722656
    4. '  ' → logprob: -18.876502990722656
    5. '
' → logprob: -19.126502990722656
    6. '۰' → logprob: -19.126502990722656
    7. '```' → logprob: -19.626502990722656
    8. '<|end|>' → logprob: -19.626502990722656
    9. '00' → logprob: -20.189002990722656
    10. ' ' → logprob: -20.314002990722656

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -19.50002098083496
    4. '<|end|>' → logprob: -19.87502098083496
    5. '   ' → logprob: -20.50002098083496
    6. '```' → logprob: -21.12502098083496
    7. '1' → logprob: -21.12502098083496
    8. '  ' → logprob: -21.37502098083496
    9. '０' → logprob: -21.62502098083496
    10. '
' → logprob: -21.87502098083496

Token 229: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0013289296766743064
    2. 'else' → logprob: -6.626328945159912
    3. '        ' → logprob: -13.001328468322754
    4. '       ' → logprob: -14.751328468322754
    5. ' ' → logprob: -15.876328468322754
    6. '	else' → logprob: -16.25132942199707
    7. ' ' → logprob: -17.12632942199707
    8. ' and' → logprob: -17.87632942199707
    9. '    ' → logprob: -17.87632942199707
    10. '            ' → logprob: -18.00132942199707

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. '           ' → logprob: -20.000261306762695
    5. '       ' → logprob: -20.500261306762695
    6. ' ' → logprob: -20.500261306762695
    7. '０' → logprob: -21.375261306762695
    8. '  ' → logprob: -21.375261306762695
    9. '۰' → logprob: -21.375261306762695
    10. '
' → logprob: -21.750261306762695

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -21.125003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '00' → logprob: -21.375003814697266
    6. '０' → logprob: -21.500003814697266
    7. '000' → logprob: -22.125003814697266
    8. '  ' → logprob: -23.625003814697266
    9. 'zero' → logprob: -23.875003814697266
    10. '           ' → logprob: -24.250003814697266

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013161993585526943
    2. '
' → logprob: -5.263162136077881
    3. '        
' → logprob: -5.763162136077881
    4. ' return' → logprob: -7.013162136077881
    5. ',' → logprob: -7.138162136077881
    6. ')' → logprob: -7.138162136077881
    7. 'return' → logprob: -7.638162136077881
    8. ' 
' → logprob: -8.388161659240723
    9. '  
' → logprob: -8.513161659240723
    10. '   ' → logprob: -8.638161659240723

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014683201909065247
    2. 'return' → logprob: -4.764683246612549
    3. ' return' → logprob: -5.889683246612549
    4. '
' → logprob: -7.264683246612549
    5. '        
' → logprob: -7.764683246612549
    6. '+' → logprob: -8.13968276977539
    7. ')' → logprob: -8.26468276977539
    8. '	' → logprob: -8.26468276977539
    9. ',' → logprob: -8.38968276977539
    10. '[' → logprob: -9.13968276977539

Token 234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.061048723757267
    2. 'res' → logprob: -3.436048746109009
    3. '       ' → logprob: -3.686048746109009
    4. 'result' → logprob: -7.31104850769043
    5. 'ret' → logprob: -7.68604850769043
    6. 's' → logprob: -8.18604850769043
    7. ' return' → logprob: -8.68604850769043
    8. 'ans' → logprob: -8.93604850769043
    9. 'total' → logprob: -9.18604850769043
    10. 'sum' → logprob: -9.81104850769043

Token 235: ' (
' (ID: 4112)
  Prédit: ' fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fetch' → logprob: -0.25198283791542053
    2. 'fetch' → logprob: -1.5019828081130981
    3. '(fetch' → logprob: -9.876982688903809
    4. '   ' → logprob: -13.876982688903809
    5. '    ' → logprob: -14.126982688903809
    6. ' ' → logprob: -16.001983642578125
    7. '        ' → logprob: -16.251983642578125
    8. ' (' → logprob: -16.501983642578125
    9. ' self' → logprob: -16.876983642578125
    10. 'self' → logprob: -17.126983642578125

Token 236: '           ' (ID: 352)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.029770394787192345
    2. ' fetch' → logprob: -3.5297703742980957
    3. '(fetch' → logprob: -11.529770851135254
    4. '           ' → logprob: -12.279770851135254
    5. '       ' → logprob: -12.654770851135254
    6. '         ' → logprob: -14.529770851135254
    7. '   ' → logprob: -14.779770851135254
    8. '        ' → logprob: -14.779770851135254
    9. '_fetch' → logprob: -15.529770851135254
    10. '-fetch' → logprob: -15.654770851135254

Token 237: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' (adapté à ' fetch') → logprob: -0.001704102149233222
    2. ' fetch' → logprob: -6.376704216003418
    3. '   ' → logprob: -14.251704216003418
    4. '           ' → logprob: -14.501704216003418
    5. '(fetch' → logprob: -15.126704216003418
    6. '       ' → logprob: -15.626704216003418
    7. '         ' → logprob: -15.626704216003418
    8. '    ' → logprob: -16.7517032623291
    9. '     ' → logprob: -16.8767032623291
    10. '        ' → logprob: -17.1267032623291

Token 238: '(hr' (ID: 99892)
  Prédit: '(hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hr' → logprob: -3.726595241460018e-05
    2. 'hr' → logprob: -11.12503719329834
    3. '(' → logprob: -11.37503719329834
    4. ' (' → logprob: -12.50003719329834
    5. '(h' → logprob: -13.12503719329834
    6. '<hr' → logprob: -13.87503719329834
    7. '   ' → logprob: -13.87503719329834
    8. '(H' → logprob: -14.75003719329834
    9. '((' → logprob: -15.00003719329834
    10. ')(' → logprob: -15.00003719329834

Token 239: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04939204454421997
    2. ',w' → logprob: -3.049391984939575
    3. ' ,' → logprob: -7.424392223358154
    4. '-' → logprob: -8.799391746520996
    5. '   ' → logprob: -10.674391746520996
    6. ' -' → logprob: -11.299391746520996
    7. '       ' → logprob: -11.549391746520996
    8. '           ' → logprob: -12.549391746520996
    9. ',y' → logprob: -13.174391746520996
    10. ',
' → logprob: -13.674391746520996

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.500001907348633
    4. ')' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -18.750001907348633
    6. '       ' → logprob: -18.875001907348633
    7. '           ' → logprob: -19.125001907348633
    8. ',' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -20.750001907348633
    10. '                   ' → logprob: -20.750001907348633

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033999193692579865
    2. ' ,' → logprob: -8.000340461730957
    3. ',
' → logprob: -13.000340461730957
    4. '   ' → logprob: -13.500340461730957
    5. '       ' → logprob: -14.750340461730957
    6. '           ' → logprob: -15.375340461730957
    7. ',w' → logprob: -15.500340461730957
    8. '
' → logprob: -17.25033950805664
    9. '               ' → logprob: -17.62533950805664
    10. '    ' → logprob: -18.12533950805664

Token 242: ' wr' (ID: 5899)
  Prédit: 'wr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -9.849109119386412e-06
    2. ' wr' → logprob: -11.875009536743164
    3. '   ' → logprob: -12.875009536743164
    4. ' ' → logprob: -16.000009536743164
    5. '  ' → logprob: -16.500009536743164
    6. '       ' → logprob: -17.125009536743164
    7. '    ' → logprob: -17.625009536743164
    8. '
' → logprob: -17.750009536743164
    9. '_wr' → logprob: -18.875009536743164
    10. '

' → logprob: -19.250009536743164

Token 243: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.553032628493384e-05
    2. ' -' → logprob: -9.500075340270996
    3. ')' → logprob: -15.250075340270996
    4. '1' → logprob: -15.875075340270996
    5. '<|end|>' → logprob: -15.875075340270996
    6. ')-' → logprob: -16.250076293945312
    7. '<|end|>' → logprob: -18.500076293945312
    8. '–' → logprob: -18.500076293945312
    9. '−' → logprob: -19.000076293945312
    10. '...' → logprob: -19.625076293945312

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '-' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.875
    6. ')' → logprob: -18.0
    7. '۱' → logprob: -18.375
    8. '2' → logprob: -18.4375
    9. '           ' → logprob: -19.625
    10. '...' → logprob: -19.8125

Token 245: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029232146334834397
    2. ')
' → logprob: -8.625292778015137
    3. '           ' → logprob: -9.875292778015137
    4. ' )' → logprob: -10.375292778015137
    5. '       ' → logprob: -11.625292778015137
    6. '          ' → logprob: -12.000292778015137
    7. ')-' → logprob: -12.625292778015137
    8. '            ' → logprob: -12.875292778015137
    9. '               ' → logprob: -12.875292778015137
    10. '        ' → logprob: -13.125292778015137

Token 246: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008292333222925663
    2. '-' → logprob: -4.883292198181152
    3. ')' → logprob: -7.883292198181152
    4. ' -
' → logprob: -9.133292198181152
    5. '           ' → logprob: -9.258292198181152
    6. '          ' → logprob: -10.258292198181152
    7. '-
' → logprob: -11.258292198181152
    8. '<|end|>' → logprob: -11.383292198181152
    9. ')-' → logprob: -12.133292198181152
    10. ' )' → logprob: -12.133292198181152

Token 247: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.07904643565416336
    2. ' fetch' → logprob: -2.5790464878082275
    3. '           ' → logprob: -8.829046249389648
    4. '(fetch' → logprob: -11.954046249389648
    5. '          ' → logprob: -13.579046249389648
    6. '            ' → logprob: -14.454046249389648
    7. '       ' → logprob: -15.079046249389648
    8. '               ' → logprob: -15.079046249389648
    9. '         ' → logprob: -15.454046249389648
    10. '
' → logprob: -15.579046249389648

Token 248: '(' (ID: 7)
  Prédit: '(hr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hr' → logprob: -0.3868880271911621
    2. '(' → logprob: -1.136888027191162
    3. 'hl' → logprob: -11.76188850402832
    4. '(h' → logprob: -12.01188850402832
    5. 'hr' → logprob: -14.01188850402832
    6. '(H' → logprob: -14.38688850402832
    7. '<hr' → logprob: -14.38688850402832
    8. '   ' → logprob: -14.88688850402832
    9. '(hw' → logprob: -15.38688850402832
    10. '(ht' → logprob: -15.63688850402832

Token 249: 'hl' (ID: 6300)
  Prédit: 'hl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hl' → logprob: -0.38687586784362793
    2. 'hr' → logprob: -1.136875867843628
    3. '(hr' → logprob: -12.761876106262207
    4. ' hl' → logprob: -13.761876106262207
    5. ' hr' → logprob: -15.386876106262207
    6. '   ' → logprob: -16.01187515258789
    7. 'hi' → logprob: -16.26187515258789
    8. 'HL' → logprob: -16.88687515258789
    9. 'hol' → logprob: -16.88687515258789
    10. '<hr' → logprob: -16.88687515258789

Token 250: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020663968462031335
    2. ' -' → logprob: -9.00020694732666
    3. ',' → logprob: -9.50020694732666
    4. '           ' → logprob: -12.37520694732666
    5. ' ,' → logprob: -13.37520694732666
    6. '   ' → logprob: -14.37520694732666
    7. '       ' → logprob: -14.50020694732666
    8. '<|end|>' → logprob: -15.00020694732666
    9. ')-' → logprob: -15.62520694732666
    10. ')' → logprob: -15.87520694732666

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. '2' → logprob: -10.87502384185791
    3. '   ' → logprob: -12.75002384185791
    4. ' ' → logprob: -14.25002384185791
    5. '-' → logprob: -14.87502384185791
    6. '       ' → logprob: -15.00002384185791
    7. '           ' → logprob: -15.87502384185791
    8. '
' → logprob: -16.625022888183594
    9. '```' → logprob: -16.687522888183594
    10. '  ' → logprob: -18.062522888183594

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.431207682704553e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',w' → logprob: -13.125054359436035
    4. '<|end|>' → logprob: -15.250054359436035
    5. ',
' → logprob: -15.500054359436035
    6. ')' → logprob: -16.12505340576172
    7. '‌,' → logprob: -16.25005340576172
    8. '           ' → logprob: -16.62505340576172
    9. '       ' → logprob: -17.00005340576172
    10. '),' → logprob: -18.00005340576172

Token 253: ' wr' (ID: 5899)
  Prédit: 'wr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.0007104054093360901
    2. ' wr' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.500710487365723
    4. '_wr' → logprob: -15.500710487365723
    5. '       ' → logprob: -17.750709533691406
    6. '    ' → logprob: -18.875709533691406
    7. ' ' → logprob: -19.250709533691406
    8. '
' → logprob: -19.625709533691406
    9. '           ' → logprob: -19.750709533691406
    10. 'Wr' → logprob: -20.125709533691406

Token 254: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. ' -' → logprob: -14.125000953674316
    3. ')' → logprob: -17.5
    4. '1' → logprob: -17.625
    5. '<|end|>' → logprob: -19.25
    6. ' ' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. ')-' → logprob: -20.125
    10. '<|end|>' → logprob: -21.0

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '```' → logprob: -17.125
    5. '   ' → logprob: -17.5
    6. '۱' → logprob: -19.8125
    7. '１' → logprob: -20.0
    8. '2' → logprob: -20.25
    9. ')' → logprob: -20.3125
    10. '
' → logprob: -20.5625

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.229872087715194e-05
    2. ' )' → logprob: -10.000061988830566
    3. ')
' → logprob: -12.250061988830566
    4. '           ' → logprob: -12.500061988830566
    5. ')-' → logprob: -12.500061988830566
    6. '       ' → logprob: -13.000061988830566
    7. ')+' → logprob: -14.500061988830566
    8. '-)' → logprob: -15.125061988830566
    9. '          ' → logprob: -15.375061988830566
    10. '-' → logprob: -15.375061988830566

Token 257: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011487729847431183
    2. '-' → logprob: -4.51148796081543
    3. '           ' → logprob: -8.13648796081543
    4. ')' → logprob: -9.88648796081543
    5. ' -
' → logprob: -10.01148796081543
    6. '          ' → logprob: -11.26148796081543
    7. '       ' → logprob: -11.63648796081543
    8. ' ' → logprob: -11.88648796081543
    9. '-fetch' → logprob: -11.88648796081543
    10. '            ' → logprob: -13.26148796081543

Token 258: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.126982182264328
    2. ' fetch' → logprob: -2.1269822120666504
    3. '(fetch' → logprob: -9.876981735229492
    4. '.fetch' → logprob: -14.001981735229492
    5. '           ' → logprob: -14.376981735229492
    6. '_fetch' → logprob: -14.626981735229492
    7. '   ' → logprob: -15.376981735229492
    8. '       ' → logprob: -15.751981735229492
    9. '-fetch' → logprob: -16.001981735229492
    10. '
' → logprob: -16.126981735229492

Token 259: '(hr' (ID: 99892)
  Prédit: '(hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hr' → logprob: -0.0009134899592027068
    2. '(' → logprob: -7.000913619995117
    3. 'hr' → logprob: -14.500913619995117
    4. ' (' → logprob: -14.875913619995117
    5. '(h' → logprob: -15.000913619995117
    6. '   ' → logprob: -15.500913619995117
    7. '<hr' → logprob: -15.875913619995117
    8. '(
' → logprob: -15.875913619995117
    9. '(ht' → logprob: -15.875913619995117
    10. '       ' → logprob: -16.500913619995117

Token 260: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133162558078766
    2. '1' → logprob: -1.3133162260055542
    3. ' -' → logprob: -9.938316345214844
    4. ' ' → logprob: -12.563316345214844
    5. '   ' → logprob: -14.188316345214844
    6. ',' → logprob: -14.438316345214844
    7. '[' → logprob: -14.938316345214844
    8. '```' → logprob: -15.063316345214844
    9. '           ' → logprob: -15.313316345214844
    10. '       ' → logprob: -15.688316345214844

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '-' → logprob: -15.875003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '```' → logprob: -17.125003814697266
    6. '１' → logprob: -18.062503814697266
    7. '  ' → logprob: -18.062503814697266
    8. '
' → logprob: -18.750003814697266
    9. '۱' → logprob: -18.937503814697266
    10. ',' → logprob: -19.000003814697266

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.686778503237292e-05
    2. ' ,' → logprob: -9.250097274780273
    3. ',
' → logprob: -15.125097274780273
    4. 'wl' → logprob: -15.500097274780273
    5. 'hl' → logprob: -16.625097274780273
    6. 'w' → logprob: -17.750097274780273
    7. '   ' → logprob: -18.375097274780273
    8. ',

' → logprob: -19.500097274780273
    9. '           ' → logprob: -19.625097274780273
    10. ')' → logprob: -20.000097274780273

Token 263: ' wl' (ID: 98585)
  Prédit: 'wl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wl' → logprob: -0.0002043748099822551
    2. ' wl' → logprob: -8.625204086303711
    3. 'hl' → logprob: -11.250204086303711
    4. '   ' → logprob: -11.750204086303711
    5. 'w' → logprob: -13.375204086303711
    6. '       ' → logprob: -14.375204086303711
    7. ' ' → logprob: -14.500204086303711
    8. '           ' → logprob: -14.625204086303711
    9. '  ' → logprob: -15.500204086303711
    10. '    ' → logprob: -16.00020408630371

Token 264: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.963691804325208e-05
    2. ' -' → logprob: -11.500029563903809
    3. ')' → logprob: -11.750029563903809
    4. '<|end|>' → logprob: -12.375029563903809
    5. '1' → logprob: -12.750029563903809
    6. '2' → logprob: -13.125029563903809
    7. '[' → logprob: -14.250029563903809
    8. ' ' → logprob: -14.500029563903809
    9. '```' → logprob: -14.500029563903809
    10. '<|end|>' → logprob: -15.000029563903809

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.000001907348633
    4. '```' → logprob: -18.125001907348633
    5. ')' → logprob: -18.687501907348633
    6. '2' → logprob: -18.875001907348633
    7. '-' → logprob: -19.000001907348633
    8. '
' → logprob: -19.500001907348633
    9. '۱' → logprob: -19.500001907348633
    10. '  ' → logprob: -20.375001907348633

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.7689099018462e-05
    2. ')+' → logprob: -9.50008773803711
    3. ' )' → logprob: -11.37508773803711
    4. '+' → logprob: -14.87508773803711
    5. ')
' → logprob: -15.37508773803711
    6. '       ' → logprob: -15.50008773803711
    7. '           ' → logprob: -15.62508773803711
    8. '）' → logprob: -16.12508773803711
    9. '+)' → logprob: -16.12508773803711
    10. '   ' → logprob: -17.62508773803711

Token 267: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408169507980347
    2. ' +' → logprob: -0.9740816950798035
    3. '+
' → logprob: -13.224081993103027
    4. '           ' → logprob: -13.724081993103027
    5. ' +
' → logprob: -13.724081993103027
    6. ')' → logprob: -15.474081993103027
    7. '＋' → logprob: -15.849081993103027
    8. ' ' → logprob: -16.59908103942871
    9. '   ' → logprob: -16.59908103942871
    10. '       ' → logprob: -16.72408103942871

Token 268: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.029807081446051598
    2. ' fetch' → logprob: -3.5298070907592773
    3. '(fetch' → logprob: -9.779807090759277
    4. '.fetch' → logprob: -17.65480613708496
    5. '   ' → logprob: -17.90480613708496
    6. '_fetch' → logprob: -18.52980613708496
    7. '           ' → logprob: -18.52980613708496
    8. '(' → logprob: -18.52980613708496
    9. '```' → logprob: -18.65480613708496
    10. '       ' → logprob: -19.15480613708496

Token 269: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.008129963040119e-06
    2. 'hl' → logprob: -13.000003814697266
    3. ' (' → logprob: -13.875003814697266
    4. '(
' → logprob: -14.500003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '.hl' → logprob: -16.875003814697266
    7. '```' → logprob: -17.125003814697266
    8. '(ll' → logprob: -17.250003814697266
    9. ')(' → logprob: -18.375003814697266
    10. '((' → logprob: -18.500003814697266

Token 270: 'hl' (ID: 6300)
  Prédit: 'hl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hl' → logprob: -0.0001761272142175585
    2. '(' → logprob: -8.750176429748535
    3. ' hl' → logprob: -11.250176429748535
    4. '   ' → logprob: -12.625176429748535
    5. '.hl' → logprob: -14.625176429748535
    6. '           ' → logprob: -15.625176429748535
    7. ')' → logprob: -15.625176429748535
    8. 'hi' → logprob: -16.75017547607422
    9. 'hlt' → logprob: -16.75017547607422
    10. 'hdl' → logprob: -16.75017547607422

Token 271: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.5252596464706585e-05
    2. ' -' → logprob: -10.500044822692871
    3. '<|end|>' → logprob: -11.000044822692871
    4. '<|end|>' → logprob: -14.625044822692871
    5. ',' → logprob: -15.750044822692871
    6. '   ' → logprob: -16.125045776367188
    7. ' ' → logprob: -16.375045776367188
    8. '−' → logprob: -17.500045776367188
    9. '...' → logprob: -17.500045776367188
    10. ')' → logprob: -17.750045776367188

Token 272: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006092322990298271
    2. '1' → logprob: -5.131092548370361
    3. ' ' → logprob: -9.006092071533203
    4. ' -' → logprob: -10.256092071533203
    5. '   ' → logprob: -13.506092071533203
    6. ',' → logprob: -13.631092071533203
    7. '```' → logprob: -13.881092071533203
    8. '
' → logprob: -14.256092071533203
    9. '0' → logprob: -14.256092071533203
    10. ')' → logprob: -15.131092071533203

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012154294381616637
    2. ' ,' → logprob: -9.250121116638184
    3. ',w' → logprob: -10.625121116638184
    4. ',
' → logprob: -13.875121116638184
    5. '<|end|>' → logprob: -16.6251220703125
    6. '(w' → logprob: -17.3751220703125
    7. ',\
' → logprob: -18.1251220703125
    8. ')' → logprob: -18.1251220703125
    9. ' wl' → logprob: -18.3751220703125
    10. '           ' → logprob: -18.7501220703125

Token 274: ' wl' (ID: 98585)
  Prédit: 'wl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wl' → logprob: -0.3132627606391907
    2. ' wl' → logprob: -1.313262701034546
    3. 'w' → logprob: -15.188262939453125
    4. '   ' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.438262939453125
    6. 'wr' → logprob: -16.688262939453125
    7. '           ' → logprob: -16.813262939453125
    8. 'vl' → logprob: -17.063262939453125
    9. '(w' → logprob: -17.313262939453125
    10. '       ' → logprob: -17.688262939453125

Token 275: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.034592388459714e-06
    2. ' -' → logprob: -12.125005722045898
    3. '1' → logprob: -15.625005722045898
    4. '```' → logprob: -15.625005722045898
    5. ')' → logprob: -17.0000057220459
    6. '−' → logprob: -17.7500057220459
    7. '   ' → logprob: -17.7500057220459
    8. ' ' → logprob: -18.1250057220459
    9. '<|end|>' → logprob: -18.5000057220459
    10. '[' → logprob: -19.0000057220459

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7292167184641585e-05
    2. '-' → logprob: -9.875057220458984
    3. ' ' → logprob: -12.250057220458984
    4. '```' → logprob: -14.375057220458984
    5. '   ' → logprob: -14.875057220458984
    6. '
' → logprob: -17.125057220458984
    7. ')' → logprob: -17.125057220458984
    8. ' -' → logprob: -17.437557220458984
    9. '  ' → logprob: -17.500057220458984
    10. '2' → logprob: -17.500057220458984

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005541055579669774
    2. '       ' → logprob: -7.625554084777832
    3. '))' → logprob: -10.250554084777832
    4. ')
' → logprob: -10.750554084777832
    5. ' )' → logprob: -12.500554084777832
    6. '   ' → logprob: -12.500554084777832
    7. ')))' → logprob: -14.375554084777832
    8. ' ' → logprob: -15.625554084777832
    9. ')return' → logprob: -15.625554084777832
    10. '           ' → logprob: -15.750554084777832

Token 278: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00162221840582788
    2. '       ' → logprob: -6.501622200012207
    3. ')
' → logprob: -9.251622200012207
    4. '   ' → logprob: -11.626622200012207
    5. '<|end|>' → logprob: -12.001622200012207
    6. ' )' → logprob: -12.251622200012207
    7. ')return' → logprob: -13.001622200012207
    8. '))' → logprob: -15.126622200012207
    9. '
' → logprob: -15.251622200012207
    10. ' ' → logprob: -15.626622200012207

Token 279: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.069664333248511e-05
    2. ')
' → logprob: -11.500020980834961
    3. '   ' → logprob: -12.500020980834961
    4. '<|end|>' → logprob: -12.875020980834961
    5. ' )' → logprob: -13.250020980834961
    6. ')return' → logprob: -13.500020980834961
    7. '       ' → logprob: -15.375020980834961
    8. ')#' → logprob: -15.875020980834961
    9. '))' → logprob: -16.25002098083496
    10. ')}}' → logprob: -16.50002098083496

Token 280: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5707582831382751
    2. ',' → logprob: -0.9457582831382751
    3. '=' → logprob: -3.19575834274292
    4. ' ,' → logprob: -5.57075834274292
    5. ' ' → logprob: -7.07075834274292
    6. '<|end|>' → logprob: -8.320757865905762
    7. '.' → logprob: -8.820757865905762
    8. ',n' → logprob: -8.820757865905762
    9. ')' → logprob: -9.570757865905762
    10. '  ' → logprob: -9.820757865905762

Token 282: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04503641277551651
    2. 'k' → logprob: -3.7950363159179688
    3. ' m' → logprob: -3.9200363159179688
    4. ' k' → logprob: -7.170036315917969
    5. 'w' → logprob: -8.045036315917969
    6. '=' → logprob: -8.670036315917969
    7. 'n' → logprob: -8.670036315917969
    8. ' =' → logprob: -9.295036315917969
    9. 'q' → logprob: -9.920036315917969
    10. 'matrix' → logprob: -10.670036315917969

Token 283: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28163284063339233
    2. ' =' → logprob: -1.531632900238037
    3. ',' → logprob: -3.531632900238037
    4. ' ,' → logprob: -12.656632423400879
    5. ',n' → logprob: -14.031632423400879
    6. '=n' → logprob: -14.031632423400879
    7. 'n' → logprob: -14.156632423400879
    8. '=input' → logprob: -14.406632423400879
    9. ' =
' → logprob: -14.531632423400879
    10. '=int' → logprob: -14.781632423400879

Token 284: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07275836169719696
    2. 'k' → logprob: -2.947758436203003
    3. 'Q' → logprob: -4.322758197784424
    4. ' q' → logprob: -6.572758197784424
    5. 'x' → logprob: -6.947758197784424
    6. 'l' → logprob: -7.822758197784424
    7. '_' → logprob: -8.197758674621582
    8. 'K' → logprob: -8.447758674621582
    9. '_,' → logprob: -8.572758674621582
    10. 'a' → logprob: -8.572758674621582

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05524568632245064
    2. ' =' → logprob: -2.9302456378936768
    3. ',' → logprob: -7.930245876312256
    4. '=input' → logprob: -13.055245399475098
    5. 'n' → logprob: -14.430245399475098
    6. '=n' → logprob: -15.055245399475098
    7. '=int' → logprob: -15.555245399475098
    8. ' n' → logprob: -16.430246353149414
    9. '=
' → logprob: -16.680246353149414
    10. '＝' → logprob: -17.055246353149414

Token 286: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4750365614891052
    2. ' map' → logprob: -0.9750365614891052
    3. '5' → logprob: -7.72503662109375
    4. '3' → logprob: -8.47503662109375
    5. ' ' → logprob: -8.47503662109375
    6. '10' → logprob: -10.22503662109375
    7. 'list' → logprob: -11.10003662109375
    8. '[' → logprob: -11.35003662109375
    9. '	map' → logprob: -11.85003662109375
    10. '20' → logprob: -12.47503662109375

Token 287: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038058020174503326
    2. 'int' → logprob: -3.288058042526245
    3. '[int' → logprob: -11.913058280944824
    4. '(' → logprob: -12.913058280944824
    5. '<int' → logprob: -13.038058280944824
    6. ' int' → logprob: -13.663058280944824
    7. '=int' → logprob: -13.663058280944824
    8. 'input' → logprob: -13.663058280944824
    9. ',int' → logprob: -13.788058280944824
    10. '```' → logprob: -15.163058280944824

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5995447635650635
    2. ',int' → logprob: -1.5995447635650635
    3. ',input' → logprob: -1.5995447635650635
    4. '(int' → logprob: -3.3495447635650635
    5. 'input' → logprob: -4.724544525146484
    6. 'int' → logprob: -6.724544525146484
    7. '(input' → logprob: -7.724544525146484
    8. '(' → logprob: -8.099544525146484
    9. '(),' → logprob: -8.599544525146484
    10. ' ,' → logprob: -8.849544525146484

Token 289: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011232550255954266
    2. ' input' → logprob: -4.511232376098633
    3. 'map' → logprob: -8.761232376098633
    4. 'int' → logprob: -11.136232376098633
    5. 'lambda' → logprob: -11.886232376098633
    6. ' map' → logprob: -12.386232376098633
    7. 'str' → logprob: -14.136232376098633
    8. 'open' → logprob: -14.511232376098633
    9. 'list' → logprob: -14.636232376098633
    10. ' ' → logprob: -15.011232376098633

Token 290: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -15.875001907348633
    4. '(' → logprob: -17.375001907348633
    5. '()[' → logprob: -17.875001907348633
    6. '().__' → logprob: -18.375001907348633
    7. 'split' → logprob: -18.750001907348633
    8. '(),' → logprob: -18.750001907348633
    9. '.split' → logprob: -19.250001907348633
    10. '())' → logprob: -20.000001907348633

Token 291: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.723973582556937e-05
    2. 'strip' → logprob: -11.000017166137695
    3. ' split' → logprob: -15.375017166137695
    4. 'rstrip' → logprob: -15.875017166137695
    5. '(split' → logprob: -16.250017166137695
    6. 'spl' → logprob: -17.125017166137695
    7. '().' → logprob: -18.000017166137695
    8. 's' → logprob: -19.125017166137695
    9. ')' → logprob: -20.500017166137695
    10. '.split' → logprob: -20.625017166137695

Token 292: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7082349061965942
    2. '())' → logprob: -0.7082349061965942
    3. '()' → logprob: -4.208234786987305
    4. '(),' → logprob: -9.708234786987305
    5. '(' → logprob: -10.708234786987305
    6. ',' → logprob: -12.708234786987305
    7. '))' → logprob: -12.958234786987305
    8. '(','' → logprob: -13.208234786987305
    9. '())
' → logprob: -13.333234786987305
    10. '),' → logprob: -13.333234786987305

Token 293: 'info' (ID: 5789)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.002423814032226801
    2. 'a' → logprob: -7.1274237632751465
    3. 'A' → logprob: -7.6274237632751465
    4. 'grid' → logprob: -7.7524237632751465
    5. 'mat' → logprob: -8.127424240112305
    6. 'data' → logprob: -9.002424240112305
    7. 's' → logprob: -9.627424240112305
    8. 'board' → logprob: -9.877424240112305
    9. 'graph' → logprob: -10.002424240112305
    10. 'arr' → logprob: -10.627424240112305

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6615484952926636
    2. ' =' → logprob: -0.9115484952926636
    3. 's' → logprob: -2.536548614501953
    4. '=[]' → logprob: -6.786548614501953
    5. '_list' → logprob: -7.786548614501953
    6. '_matrix' → logprob: -7.786548614501953
    7. '_' → logprob: -7.786548614501953
    8. ',' → logprob: -9.411548614501953
    9. '_lines' → logprob: -9.411548614501953
    10. '=[]
' → logprob: -9.661548614501953

Token 295: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30037257075309753
    2. '[list' → logprob: -2.05037260055542
    3. '[n' → logprob: -2.30037260055542
    4. ' [' → logprob: -4.05037260055542
    5. '[input' → logprob: -4.80037260055542
    6. '[int' → logprob: -6.17537260055542
    7. '[array' → logprob: -6.55037260055542
    8. '[List' → logprob: -7.80037260055542
    9. '[m' → logprob: -8.925372123718262
    10. '[class' → logprob: -9.050372123718262

Token 296: 'reduce' (ID: 49119)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005289019085466862
    2. 'tuple' → logprob: -5.255289077758789
    3. ' list' → logprob: -9.880289077758789
    4. ' tuple' → logprob: -12.755289077758789
    5. '(list' → logprob: -15.005289077758789
    6. ']' → logprob: -15.255289077758789
    7. '[list' → logprob: -15.505289077758789
    8. '(tuple' → logprob: -16.13028907775879
    9. '   ' → logprob: -16.50528907775879
    10. '	list' → logprob: -16.50528907775879

Token 297: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.014265761710703373
    2. '(' → logprob: -4.889265537261963
    3. '(
' → logprob: -5.139265537261963
    4. '(operator' → logprob: -7.514265537261963
    5. '(str' → logprob: -9.514266014099121
    6. ' (' → logprob: -9.639266014099121
    7. '(list' → logprob: -10.514266014099121
    8. '   ' → logprob: -10.764266014099121
    9. '(int' → logprob: -11.264266014099121
    10. '(

' → logprob: -11.889266014099121

Token 298: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.38725313544273376
    2. ' lambda' → logprob: -1.2622531652450562
    3. ' acc' → logprob: -5.012253284454346
    4. 'a' → logprob: -5.262253284454346
    5. ' a' → logprob: -5.262253284454346
    6. 'x' → logprob: -5.262253284454346
    7. '(lambda' → logprob: -5.387253284454346
    8. ' x' → logprob: -5.512253284454346
    9. '   ' → logprob: -5.637253284454346
    10. ' ' → logprob: -6.762253284454346

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007939008995890617
    2. ',x' → logprob: -5.507938861846924
    3. ' x' → logprob: -7.007938861846924
    4. ' ,' → logprob: -7.007938861846924
    5. ',a' → logprob: -7.132938861846924
    6. ' lambda' → logprob: -8.257939338684082
    7. 'lambda' → logprob: -8.632939338684082
    8. ',l' → logprob: -8.632939338684082
    9. ',n' → logprob: -9.132939338684082
    10. '=lambda' → logprob: -9.132939338684082

Token 300: ' b' (ID: 287)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.031616732478141785
    2. ' lambda' → logprob: -3.781616687774658
    3. 'x' → logprob: -5.906616687774658
    4. '   ' → logprob: -6.281616687774658
    5. '(lambda' → logprob: -6.656616687774658
    6. 'a' → logprob: -7.406616687774658
    7. '    ' → logprob: -7.906616687774658
    8. ' ' → logprob: -8.031617164611816
    9. '  ' → logprob: -8.656617164611816
    10. '_' → logprob: -8.656617164611816

Token 301: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002959631150588393
    2. ':' → logprob: -6.752959728240967
    3. ',a' → logprob: -7.127959728240967
    4. ',b' → logprob: -8.252959251403809
    5. ',int' → logprob: -8.627959251403809
    6. ' ,' → logprob: -8.752959251403809
    7. 'a' → logprob: -9.502959251403809
    8. '=lambda' → logprob: -10.002959251403809
    9. ',f' → logprob: -10.252959251403809
    10. ' :' → logprob: -10.252959251403809

Token 302: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1460401862859726
    2. 'lambda' → logprob: -2.271040201187134
    3. ' lambda' → logprob: -4.271039962768555
    4. ' a' → logprob: -4.271039962768555
    5. 'int' → logprob: -6.021039962768555
    6. '(lambda' → logprob: -6.646039962768555
    7. ' int' → logprob: -7.771039962768555
    8. 'list' → logprob: -8.896039962768555
    9. '   ' → logprob: -8.896039962768555
    10. '[int' → logprob: -9.396039962768555

Token 303: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00957309827208519
    2. '*a' → logprob: -4.759572982788086
    3. '*' → logprob: -7.759572982788086
    4. 'int' → logprob: -8.009572982788086
    5. ' a' → logprob: -9.509572982788086
    6. '   ' → logprob: -9.884572982788086
    7. 'lambda' → logprob: -10.884572982788086
    8. 'x' → logprob: -11.759572982788086
    9. 'max' → logprob: -12.009572982788086
    10. '(a' → logprob: -12.259572982788086

Token 304: '[' (ID: 58)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.4686644673347473
    2. 'b' → logprob: -1.9686644077301025
    3. 'i' → logprob: -2.7186644077301025
    4. '+' → logprob: -2.7186644077301025
    5. 'a' → logprob: -3.2186644077301025
    6. '0' → logprob: -4.718664646148682
    7. 'x' → logprob: -4.718664646148682
    8. ' +' → logprob: -4.843664646148682
    9. '   ' → logprob: -5.468664646148682
    10. '*b' → logprob: -5.593664646148682

Token 305: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15256020426750183
    2. '0' → logprob: -3.277560234069824
    3. 'i' → logprob: -3.652560234069824
    4. 'x' → logprob: -3.902560234069824
    5. '*a' → logprob: -3.902560234069824
    6. 'b' → logprob: -4.527560234069824
    7. '*b' → logprob: -4.652560234069824
    8. '*' → logprob: -5.402560234069824
    9. 'int' → logprob: -5.402560234069824
    10. '+b' → logprob: -6.152560234069824

Token 306: '],' (ID: 2155)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2923075556755066
    2. ']' → logprob: -1.4173076152801514
    3. '],' → logprob: -5.417307376861572
    4. '+b' → logprob: -5.667307376861572
    5. '+' → logprob: -6.292307376861572
    6. '0' → logprob: -7.917307376861572
    7. 'a' → logprob: -8.16730785369873
    8. '[' → logprob: -8.29230785369873
    9. ']*' → logprob: -9.16730785369873
    10. '][' → logprob: -9.79230785369873

Token 307: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004837001906707883
    2. ' a' → logprob: -7.875483512878418
    3. 'max' → logprob: -9.750483512878418
    4. '0' → logprob: -11.250483512878418
    5. '   ' → logprob: -11.625483512878418
    6. 'min' → logprob: -12.125483512878418
    7. ' ' → logprob: -13.250483512878418
    8. '(a' → logprob: -13.250483512878418
    9. '    ' → logprob: -13.375483512878418
    10. '  ' → logprob: -13.375483512878418

Token 308: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6891179084777832
    2. '],' → logprob: -1.1891179084777832
    3. ',' → logprob: -2.439117908477783
    4. '+' → logprob: -2.814117908477783
    5. ']),' → logprob: -4.939117908477783
    6. '+a' → logprob: -5.314117908477783
    7. ' if' → logprob: -5.439117908477783
    8. ' +' → logprob: -5.439117908477783
    9. ']],' → logprob: -5.689117908477783
    10. ']' → logprob: -5.814117908477783

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0727962777018547
    2. '1' → logprob: -3.69779634475708
    3. '[' → logprob: -3.94779634475708
    4. ']' → logprob: -4.69779634475708
    5. '],' → logprob: -5.19779634475708
    6. ']+' → logprob: -6.07279634475708
    7. 'a' → logprob: -6.19779634475708
    8. ']),' → logprob: -6.32279634475708
    9. ']],' → logprob: -6.69779634475708
    10. '-' → logprob: -7.32279634475708

Token 310: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.9405195116996765
    2. ',' → logprob: -1.8155195713043213
    3. '+b' → logprob: -2.0655195713043213
    4. ' +' → logprob: -2.1905195713043213
    5. '+' → logprob: -2.4405195713043213
    6. '+a' → logprob: -3.0655195713043213
    7. ']],' → logprob: -3.3155195713043213
    8. ']' → logprob: -3.6905195713043213
    9. ']),' → logprob: -5.565519332885742
    10. '+n' → logprob: -6.315519332885742

Token 311: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17942816019058228
    2. '[input' → logprob: -1.9294281005859375
    3. '(range' → logprob: -4.6794281005859375
    4. '(map' → logprob: -6.3044281005859375
    5. '(product' → logprob: -6.4294281005859375
    6. 'map' → logprob: -6.6794281005859375
    7. '(input' → logprob: -6.9294281005859375
    8. 'range' → logprob: -7.3044281005859375
    9. '[list' → logprob: -7.3044281005859375
    10. ' [' → logprob: -7.4294281005859375

Token 312: 'tuple' (ID: 52834)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.23337145149707794
    2. 'list' → logprob: -1.9833714962005615
    3. 'input' → logprob: -3.7333714962005615
    4. 'tuple' → logprob: -4.233371257781982
    5. '(map' → logprob: -4.358371257781982
    6. 'enumer' → logprob: -4.733371257781982
    7. '*' → logprob: -4.983371257781982
    8. 'div' → logprob: -7.108371257781982
    9. 'range' → logprob: -7.608371257781982
    10. '(*' → logprob: -7.858371257781982

Token 313: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001463299704482779
    2. 'map' → logprob: -9.12514591217041
    3. '(' → logprob: -11.12514591217041
    4. '(input' → logprob: -11.25014591217041
    5. '(int' → logprob: -13.12514591217041
    6. '
' → logprob: -13.12514591217041
    7. '(
' → logprob: -13.50014591217041
    8. ' map' → logprob: -14.12514591217041
    9. '(sorted' → logprob: -14.37514591217041
    10. '(m' → logprob: -14.75014591217041

Token 314: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07339173555374146
    2. 'int' → logprob: -2.9483916759490967
    3. '(map' → logprob: -4.073391914367676
    4. 'map' → logprob: -6.823391914367676
    5. '(lambda' → logprob: -9.198391914367676
    6. '[int' → logprob: -10.073391914367676
    7. 'input' → logprob: -10.573391914367676
    8. 'lambda' → logprob: -11.448391914367676
    9. '(' → logprob: -11.698391914367676
    10. '(
' → logprob: -11.823391914367676

Token 315: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6135483980178833
    2. ',' → logprob: -0.8635483980178833
    3. '(input' → logprob: -3.3635482788085938
    4. ',map' → logprob: -6.863548278808594
    5. 'input' → logprob: -6.988548278808594
    6. '(map' → logprob: -8.363548278808594
    7. ' ,' → logprob: -10.738548278808594
    8. '(' → logprob: -11.113548278808594
    9. 'map' → logprob: -11.113548278808594
    10. '   ' → logprob: -11.613548278808594

Token 316: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0026328498497605324
    2. ' input' → logprob: -6.0026326179504395
    3. 'map' → logprob: -9.002633094787598
    4. '(input' → logprob: -11.502633094787598
    5. ' ' → logprob: -11.627633094787598
    6. '   ' → logprob: -12.252633094787598
    7. ')' → logprob: -13.127633094787598
    8. ' map' → logprob: -13.377633094787598
    9. '
' → logprob: -13.627633094787598
    10. '  ' → logprob: -13.752633094787598

Token 317: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5928495486150496e-05
    2. '()' → logprob: -11.125016212463379
    3. '.split' → logprob: -14.750016212463379
    4. '   ' → logprob: -15.750016212463379
    5. 'split' → logprob: -15.750016212463379
    6. ' ().' → logprob: -16.250015258789062
    7. '())' → logprob: -16.750015258789062
    8. '()[' → logprob: -16.875015258789062
    9. '()),' → logprob: -16.875015258789062
    10. ')' → logprob: -17.125015258789062

Token 318: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003254357958212495
    2. '().' → logprob: -5.753254413604736
    3. 'strip' → logprob: -9.753253936767578
    4. 'str' → logprob: -11.628253936767578
    5. ' split' → logprob: -12.628253936767578
    6. 'read' → logprob: -13.003253936767578
    7. '.split' → logprob: -13.503253936767578
    8. 'rstrip' → logprob: -13.503253936767578
    9. '(split' → logprob: -14.378253936767578
    10. '.readline' → logprob: -15.753253936767578

Token 319: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07822427153587341
    2. '))' → logprob: -2.7032241821289062
    3. '()' → logprob: -4.828224182128906
    4. ')),' → logprob: -9.578224182128906
    5. '()),' → logprob: -10.203224182128906
    6. '()))
' → logprob: -10.328224182128906
    7. '().' → logprob: -10.328224182128906
    8. '(' → logprob: -10.828224182128906
    9. '(','' → logprob: -11.078224182128906
    10. '())' → logprob: -11.453224182128906

Token 320: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05806569382548332
    2. 'for' → logprob: -3.30806565284729
    3. ')' → logprob: -4.433065891265869
    4. ',' → logprob: -5.308065891265869
    5. ']' → logprob: -6.808065891265869
    6. ')]' → logprob: -7.683065891265869
    7. '   ' → logprob: -7.933065891265869
    8. '),' → logprob: -8.433065414428711
    9. ')],' → logprob: -8.433065414428711
    10. '(n' → logprob: -9.308065414428711

Token 321: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18019072711467743
    2. 'for' → logprob: -1.8051906824111938
    3. ',' → logprob: -8.680191040039062
    4. '   ' → logprob: -9.055191040039062
    5. ')' → logprob: -9.305191040039062
    6. '           ' → logprob: -11.430191040039062
    7. '       ' → logprob: -11.430191040039062
    8. '    ' → logprob: -11.680191040039062
    9. '	for' → logprob: -12.055191040039062
    10. ' ' → logprob: -12.305191040039062

Token 322: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4772590398788452
    2. 'q' → logprob: -1.4772590398788452
    3. 'n' → logprob: -2.7272591590881348
    4. '2' → logprob: -2.8522591590881348
    5. '(m' → logprob: -4.352259159088135
    6. '(q' → logprob: -5.227259159088135
    7. '(n' → logprob: -5.477259159088135
    8. '(' → logprob: -5.727259159088135
    9. '3' → logprob: -6.477259159088135
    10. '4' → logprob: -8.102258682250977

Token 323: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10238364338874817
    2. '2' → logprob: -2.727383613586426
    3. 'm' → logprob: -4.602383613586426
    4. '(q' → logprob: -4.602383613586426
    5. 'n' → logprob: -4.727383613586426
    6. '(' → logprob: -6.852383613586426
    7. '(n' → logprob: -6.977383613586426
    8. '(m' → logprob: -7.977383613586426
    9. '1' → logprob: -8.102383613586426
    10. '3' → logprob: -8.977383613586426

Token 324: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36089441180229187
    2. ',' → logprob: -1.7358944416046143
    3. 'for' → logprob: -2.1108944416046143
    4. ')' → logprob: -6.485894203186035
    5. '],' → logprob: -6.860894203186035
    6. ']' → logprob: -7.110894203186035
    7. '])' → logprob: -7.360894203186035
    8. '0' → logprob: -8.485894203186035
    9. ' ' → logprob: -8.610894203186035
    10. ' ,' → logprob: -8.610894203186035

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18085740506649017
    2. ',' → logprob: -2.3058574199676514
    3. 'for' → logprob: -3.0558574199676514
    4. ')' → logprob: -4.305857181549072
    5. '[' → logprob: -6.180857181549072
    6. ' ,' → logprob: -6.930857181549072
    7. ')]' → logprob: -7.180857181549072
    8. ']' → logprob: -7.680857181549072
    9. '(lambda' → logprob: -9.18085765838623
    10. '(n' → logprob: -9.30585765838623

Token 326: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022026201710104942
    2. 'range' → logprob: -4.522026062011719
    3. '_range' → logprob: -4.772026062011719
    4. ' range' → logprob: -6.022026062011719
    5. '_in' → logprob: -11.022026062011719
    6. '_i' → logprob: -11.897026062011719
    7. ' _' → logprob: -13.147026062011719
    8. '_
' → logprob: -13.272026062011719
    9. 'i' → logprob: -14.147026062011719
    10. '
' → logprob: -14.397026062011719

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3496056795120239
    2. 'in' → logprob: -1.224605679512024
    3. '_' → logprob: -7.474605560302734
    4. 'range' → logprob: -7.724605560302734
    5. 'n' → logprob: -9.349605560302734
    6. ' ' → logprob: -10.974605560302734
    7. ' _' → logprob: -11.724605560302734
    8. 'i' → logprob: -11.849605560302734
    9. 's' → logprob: -12.224605560302734
    10. '_in' → logprob: -12.349605560302734

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1517960956552997e-05
    2. ' range' → logprob: -11.375011444091797
    3. '[' → logprob: -17.000011444091797
    4. '(range' → logprob: -17.000011444091797
    5. 'r' → logprob: -19.625011444091797
    6. ' ' → logprob: -20.000011444091797
    7. '	range' → logprob: -20.125011444091797
    8. 'ran' → logprob: -20.375011444091797
    9. '   ' → logprob: -20.500011444091797
    10. '
' → logprob: -20.500011444091797

Token 329: '(m' (ID: 2145)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.163246750831604
    2. '(q' → logprob: -1.913246750831604
    3. '(n' → logprob: -6.2882466316223145
    4. 'n' → logprob: -6.9132466316223145
    5. ' q' → logprob: -8.788247108459473
    6. '(' → logprob: -12.163247108459473
    7. ' (' → logprob: -12.913247108459473
    8. ' n' → logprob: -13.038247108459473
    9. '	q' → logprob: -14.163247108459473
    10. '   ' → logprob: -14.288247108459473

Token 330: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.2113979209971149e-05
    2. ')' → logprob: -11.750012397766113
    3. ']' → logprob: -13.250012397766113
    4. ')],' → logprob: -14.625012397766113
    5. ')])' → logprob: -14.750012397766113
    6. ')]
' → logprob: -14.875012397766113
    7. '])]' → logprob: -14.875012397766113
    8. ' )' → logprob: -15.000012397766113
    9. '])' → logprob: -15.375012397766113
    10. '))' → logprob: -16.125011444091797

Token 331: 'query' (ID: 2975)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2227238416671753
    2. ']' → logprob: -1.3477238416671753
    3. '<|end|>' → logprob: -1.7227238416671753
    4. ')' → logprob: -2.472723960876465
    5. 'info' → logprob: -3.222723960876465
    6. '[]' → logprob: -3.472723960876465
    7. ',' → logprob: -3.472723960876465
    8. '[n' → logprob: -3.972723960876465
    9. 'n' → logprob: -4.222723960876465
    10. '(info' → logprob: -4.472723960876465

Token 332: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07975785434246063
    2. ' =' → logprob: -2.7047579288482666
    3. '=' → logprob: -4.7047576904296875
    4. 'es' → logprob: -7.5797576904296875
    5. '=[]' → logprob: -8.829757690429688
    6. '_' → logprob: -10.579757690429688
    7. '[]' → logprob: -10.829757690429688
    8. '=[]
' → logprob: -12.704757690429688
    9. 'ts' → logprob: -13.079757690429688
    10. '_s' → logprob: -13.454757690429688

Token 333: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007833030540496111
    2. '[t' → logprob: -8.37578296661377
    3. '[int' → logprob: -8.50078296661377
    4. ' [' → logprob: -8.75078296661377
    5. '[input' → logprob: -9.75078296661377
    6. '[list' → logprob: -10.00078296661377
    7. '[tmp' → logprob: -11.25078296661377
    8. '[temp' → logprob: -11.87578296661377
    9. '[type' → logprob: -12.00078296661377
    10. '[np' → logprob: -12.00078296661377

Token 334: 'reduce' (ID: 49119)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -8.537868779967539e-06
    2. ' tuple' → logprob: -11.750008583068848
    3. '(tuple' → logprob: -15.000008583068848
    4. 'list' → logprob: -15.250008583068848
    5. 'map' → logprob: -19.12500762939453
    6. 'tu' → logprob: -20.87500762939453
    7. ']' → logprob: -21.00000762939453
    8. '   ' → logprob: -21.00000762939453
    9. 'lambda' → logprob: -21.00000762939453
    10. '[' → logprob: -21.25000762939453

Token 335: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -13.000005722045898
    3. 'lambda' → logprob: -13.000005722045898
    4. '=lambda' → logprob: -14.500005722045898
    5. ' (' → logprob: -15.250005722045898
    6. '(
' → logprob: -15.750005722045898
    7. '(tuple' → logprob: -15.750005722045898
    8. ' lambda' → logprob: -17.2500057220459
    9. '(int' → logprob: -17.5000057220459
    10. '```' → logprob: -17.7500057220459

Token 336: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.08960015326738358
    2. 'lambda' → logprob: -2.464600086212158
    3. 'list' → logprob: -8.464600563049316
    4. '(int' → logprob: -8.714600563049316
    5. ' lambda' → logprob: -9.214600563049316
    6. 'a' → logprob: -9.339600563049316
    7. '(' → logprob: -10.589600563049316
    8. '=lambda' → logprob: -10.714600563049316
    9. '(None' → logprob: -11.339600563049316
    10. 'tuple' → logprob: -11.714600563049316

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6871211528778076
    2. 'lambda' → logprob: -1.1871211528778076
    3. '(lambda' → logprob: -1.8121211528778076
    4. ' lambda' → logprob: -4.187121391296387
    5. '=lambda' → logprob: -4.687121391296387
    6. ' ,' → logprob: -5.562121391296387
    7. 'ambda' → logprob: -9.812121391296387
    8. ' (' → logprob: -9.937121391296387
    9. '(' → logprob: -10.437121391296387
    10. '_,' → logprob: -10.437121391296387

Token 338: ' y' (ID: 342)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2650526165962219
    2. 'y' → logprob: -1.8900525569915771
    3. 'lambda' → logprob: -3.265052556991577
    4. ' y' → logprob: -3.765052556991577
    5. ' b' → logprob: -4.265052795410156
    6. ' lambda' → logprob: -5.765052795410156
    7. 'a' → logprob: -6.390052795410156
    8. '_' → logprob: -7.765052795410156
    9. 'list' → logprob: -8.265052795410156
    10. '(lambda' → logprob: -8.390052795410156

Token 339: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000612359493970871
    2. ' :' → logprob: -7.875612258911133
    3. ',' → logprob: -8.375612258911133
    4. '=lambda' → logprob: -15.250612258911133
    5. ':list' → logprob: -15.750612258911133
    6. ':[' → logprob: -15.875612258911133
    7. ' ,' → logprob: -15.875612258911133
    8. 'lambda' → logprob: -15.875612258911133
    9. 'a' → logprob: -16.000612258911133
    10. '(lambda' → logprob: -16.125612258911133

Token 340: ' list' (ID: 1562)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.45717936754226685
    2. '[' → logprob: -2.207179307937622
    3. 'list' → logprob: -2.457179307937622
    4. '[int' → logprob: -2.957179307937622
    5. '[x' → logprob: -3.082179307937622
    6. ' tuple' → logprob: -3.457179307937622
    7. 'x' → logprob: -4.207179546356201
    8. '(tuple' → logprob: -4.582179546356201
    9. ' [' → logprob: -5.332179546356201
    10. '[list' → logprob: -5.707179546356201

Token 341: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01730158179998398
    2. '(x' → logprob: -4.142301559448242
    3. '(range' → logprob: -7.017301559448242
    4. 'map' → logprob: -9.017301559448242
    5. '(zip' → logprob: -9.892301559448242
    6. '(tuple' → logprob: -9.892301559448242
    7. '(' → logprob: -10.142301559448242
    8. 'x' → logprob: -10.267301559448242
    9. '(y' → logprob: -10.517301559448242
    10. '(int' → logprob: -11.517301559448242

Token 342: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004859903361648321
    2. '(lambda' → logprob: -5.379859924316406
    3. 'int' → logprob: -9.004859924316406
    4. '(operator' → logprob: -9.379859924316406
    5. 'lambda' → logprob: -11.754859924316406
    6. '(' → logprob: -11.879859924316406
    7. '(sum' → logprob: -12.504859924316406
    8. ',int' → logprob: -12.504859924316406
    9. ' int' → logprob: -13.379859924316406
    10. ')' → logprob: -13.629859924316406

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2523255944252014
    2. ',input' → logprob: -1.5023255348205566
    3. '(input' → logprob: -8.377326011657715
    4. 'input' → logprob: -8.877326011657715
    5. ' ,' → logprob: -11.377326011657715
    6. ',x' → logprob: -12.002326011657715
    7. '(),' → logprob: -12.502326011657715
    8. '(' → logprob: -13.127326011657715
    9. ' input' → logprob: -13.502326011657715
    10. ',int' → logprob: -14.502326011657715

Token 344: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002481127390637994
    2. ' input' → logprob: -6.002480983734131
    3. 'x' → logprob: -12.252481460571289
    4. ',input' → logprob: -14.752481460571289
    5. '(input' → logprob: -15.377481460571289
    6. 'lambda' → logprob: -17.37748146057129
    7. 'y' → logprob: -17.62748146057129
    8. '_input' → logprob: -18.37748146057129
    9. '=input' → logprob: -18.75248146057129
    10. ' x' → logprob: -19.00248146057129

Token 345: ')),' (ID: 12098)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6194438934326172
    2. ',' → logprob: -1.2444438934326172
    3. 'input' → logprob: -1.8694438934326172
    4. '.split' → logprob: -4.869443893432617
    5. 'split' → logprob: -5.244443893432617
    6. '(input' → logprob: -5.619443893432617
    7. '().' → logprob: -6.869443893432617
    8. ' input' → logprob: -6.994443893432617
    9. '   ' → logprob: -8.244443893432617
    10. '=input' → logprob: -8.619443893432617

Token 346: ' [[' (ID: 9237)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.07550321519374847
    2. '[' → logprob: -3.32550311088562
    3. ' [' → logprob: -3.32550311088562
    4. '[int' → logprob: -8.4505033493042
    5. '[x' → logprob: -9.0755033493042
    6. '[item' → logprob: -9.4505033493042
    7. '[list' → logprob: -9.4505033493042
    8. 'input' → logprob: -9.7005033493042
    9. '[i' → logprob: -10.2005033493042
    10. '[token' → logprob: -10.4505033493042

Token 347: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4747472107410431
    2. '*' → logprob: -0.9747471809387207
    3. ' input' → logprob: -8.849747657775879
    4. '*i' → logprob: -9.099747657775879
    5. 'int' → logprob: -9.724747657775879
    6. ']' → logprob: -9.724747657775879
    7. '*[' → logprob: -9.974747657775879
    8. ']*' → logprob: -10.099747657775879
    9. '*x' → logprob: -10.349747657775879
    10. ' *' → logprob: -10.349747657775879

Token 348: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004570511635392904
    2. '()' → logprob: -5.504570484161377
    3. '()]' → logprob: -7.629570484161377
    4. '()[' → logprob: -13.004570960998535
    5. '.split' → logprob: -13.129570960998535
    6. '()],' → logprob: -14.629570960998535
    7. 'split' → logprob: -15.254570960998535
    8. '()
' → logprob: -15.754570960998535
    9. '()].' → logprob: -15.754570960998535
    10. ' ().' → logprob: -15.879570960998535

Token 349: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12980197370052338
    2. '().' → logprob: -2.1298019886016846
    3. 'strip' → logprob: -6.3798017501831055
    4. '.split' → logprob: -7.2548017501831055
    5. '()' → logprob: -7.8798017501831055
    6. '()]' → logprob: -9.879801750183105
    7. ' split' → logprob: -11.379801750183105
    8. ']' → logprob: -12.004801750183105
    9. 'rstrip' → logprob: -12.004801750183105
    10. '.strip' → logprob: -12.879801750183105

Token 350: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.25247055292129517
    2. '()' → logprob: -1.5024704933166504
    3. ']' → logprob: -8.627470970153809
    4. '()[' → logprob: -8.877470970153809
    5. '(),' → logprob: -9.377470970153809
    6. '()],' → logprob: -10.002470970153809
    7. ']]' → logprob: -10.127470970153809
    8. '())' → logprob: -10.752470970153809
    9. ' ()' → logprob: -11.627470970153809
    10. '()]
' → logprob: -12.002470970153809

Token 351: ']],' (ID: 37171)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7973713278770447
    2. '()' → logprob: -1.2973713874816895
    3. '()]' → logprob: -1.9223713874816895
    4. ' for' → logprob: -2.4223713874816895
    5. 'for' → logprob: -3.6723713874816895
    6. ']]' → logprob: -4.6723713874816895
    7. ']])' → logprob: -5.6723713874816895
    8. '])]' → logprob: -7.6723713874816895
    9. ']*' → logprob: -7.7973713874816895
    10. ']]]' → logprob: -7.9223713874816895

Token 352: ' ['' (ID: 5140)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7484539747238159
    2. '1' → logprob: -0.9984539747238159
    3. ')]' → logprob: -2.8734540939331055
    4. 'range' → logprob: -3.7484540939331055
    5. ' for' → logprob: -3.8734540939331055
    6. ' range' → logprob: -3.8734540939331055
    7. 'for' → logprob: -4.7484540939331055
    8. '0' → logprob: -4.9984540939331055
    9. ' ' → logprob: -5.2484540939331055
    10. ' len' → logprob: -5.6234540939331055

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19438236951828003
    2. '']' → logprob: -1.9443824291229248
    3. ''])' → logprob: -3.944382429122925
    4. '1' → logprob: -6.069382190704346
    5. ''' → logprob: -6.194382190704346
    6. 'int' → logprob: -6.319382190704346
    7. '']]' → logprob: -6.319382190704346
    8. '']))' → logprob: -6.569382190704346
    9. 'q' → logprob: -6.569382190704346
    10. 'query' → logprob: -7.819382190704346

Token 354: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.07082484662532806
    2. ''])' → logprob: -3.4458248615264893
    3. '',' → logprob: -4.32082462310791
    4. ''' → logprob: -4.82082462310791
    5. ''*' → logprob: -5.44582462310791
    6. ',' → logprob: -5.82082462310791
    7. '','' → logprob: -6.19582462310791
    8. '0' → logprob: -6.69582462310791
    9. '']))' → logprob: -6.69582462310791
    10. ' ' → logprob: -7.57082462310791

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06407159566879272
    2. '']' → logprob: -3.4390716552734375
    3. '1' → logprob: -3.6890716552734375
    4. ''' → logprob: -6.0640716552734375
    5. ''])' → logprob: -6.5640716552734375
    6. '2' → logprob: -8.689071655273438
    7. '10' → logprob: -8.939071655273438
    8. ''*' → logprob: -8.939071655273438
    9. '']))' → logprob: -9.064071655273438
    10. '100' → logprob: -9.439071655273438

Token 356: ''])[' (ID: 145951)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.6428515315055847
    2. ','' → logprob: -1.1428515911102295
    3. ',' → logprob: -2.8928515911102295
    4. '])]' → logprob: -3.7678515911102295
    5. '']))' → logprob: -3.8928515911102295
    6. ''' → logprob: -3.8928515911102295
    7. ']))' → logprob: -4.64285135269165
    8. ''])' → logprob: -4.76785135269165
    9. '',' → logprob: -4.89285135269165
    10. '])' → logprob: -5.64285135269165

Token 357: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1673237085342407
    2. ')]' → logprob: -1.7923237085342407
    3. '])' → logprob: -1.9173237085342407
    4. ')' → logprob: -1.9173237085342407
    5. ' for' → logprob: -2.042323589324951
    6. 'for' → logprob: -3.042323589324951
    7. '0' → logprob: -3.667323589324951
    8. '])]' → logprob: -4.417323589324951
    9. ',' → logprob: -5.292323589324951
    10. ')])' → logprob: -6.167323589324951

Token 358: ':' (ID: 25)
  Prédit: '])]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.43465033173561096
    2. '])' → logprob: -1.1846503019332886
    3. ']' → logprob: -3.184650421142578
    4. ',' → logprob: -6.559650421142578
    5. '][' → logprob: -6.684650421142578
    6. ')]' → logprob: -7.309650421142578
    7. ']])' → logprob: -7.559650421142578
    8. ')' → logprob: -8.059650421142578
    9. ']]' → logprob: -8.309650421142578
    10. ' ])' → logprob: -8.934650421142578

Token 359: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.026576850563287735
    2. 'q' → logprob: -4.151576995849609
    3. '2' → logprob: -5.901576995849609
    4. ']' → logprob: -6.276576995849609
    5. '])' → logprob: -6.776576995849609
    6. ' ' → logprob: -6.776576995849609
    7. ']))' → logprob: -6.776576995849609
    8. ',' → logprob: -7.526576995849609
    9. '])]' → logprob: -8.15157699584961
    10. '3' → logprob: -8.52657699584961

Token 360: ']' (ID: 60)
  Prédit: '])]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.33426928520202637
    2. ']' → logprob: -1.9592692852020264
    3. '])' → logprob: -2.0842692852020264
    4. ')]' → logprob: -4.0842695236206055
    5. ']]' → logprob: -7.0842695236206055
    6. ']])' → logprob: -8.459269523620605
    7. ')' → logprob: -8.459269523620605
    8. ')])' → logprob: -8.459269523620605
    9. ',' → logprob: -8.834269523620605
    10. '],' → logprob: -9.459269523620605

Token 361: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04267152398824692
    2. ')]' → logprob: -3.4176714420318604
    3. ')' → logprob: -5.0426716804504395
    4. '<|end|>' → logprob: -7.1676716804504395
    5. ' ]' → logprob: -7.5426716804504395
    6. '()]' → logprob: -7.5426716804504395
    7. '])' → logprob: -8.417671203613281
    8. '']' → logprob: -9.417671203613281
    9. '])]' → logprob: -9.542671203613281
    10. '[' → logprob: -10.292671203613281

Token 362: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.19167689979076385
    2. ' False' → logprob: -1.9416768550872803
    3. 'len' → logprob: -4.691677093505859
    4. 'True' → logprob: -5.191677093505859
    5. '0' → logprob: -5.316677093505859
    6. 'q' → logprob: -5.941677093505859
    7. ' len' → logprob: -6.191677093505859
    8. 'i' → logprob: -6.316677093505859
    9. ' True' → logprob: -6.566677093505859
    10. ' q' → logprob: -6.941677093505859

Token 363: ' else' (ID: 1203)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11541072279214859
    2. '<|end|>' → logprob: -2.615410804748535
    3. ')' → logprob: -3.990410804748535
    4. ' ]' → logprob: -5.115410804748535
    5. '<|end|>' → logprob: -5.865410804748535
    6. ')]' → logprob: -5.990410804748535
    7. ' ' → logprob: -6.490410804748535
    8. '[' → logprob: -6.615410804748535
    9. ':' → logprob: -6.865410804748535
    10. ',' → logprob: -7.115410804748535

Token 364: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -1.000890851020813
    2. 'list' → logprob: -1.125890851020813
    3. '[' → logprob: -1.875890851020813
    4. '[input' → logprob: -2.1258907318115234
    5. '[int' → logprob: -3.7508907318115234
    6. ' [' → logprob: -5.500890731811523
    7. ' list' → logprob: -5.750890731811523
    8. 'tuple' → logprob: -6.125890731811523
    9. '[]' → logprob: -6.625890731811523
    10. 'input' → logprob: -7.250890731811523

Token 365: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003119863977190107
    2. 'map' → logprob: -8.125311851501465
    3. '(' → logprob: -11.875311851501465
    4. '(range' → logprob: -12.000311851501465
    5. '(input' → logprob: -14.125311851501465
    6. '(int' → logprob: -14.250311851501465
    7. '()' → logprob: -14.250311851501465
    8. '(
' → logprob: -14.875311851501465
    9. ' map' → logprob: -15.750311851501465
    10. '	map' → logprob: -17.25031280517578

Token 366: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00676107918843627
    2. 'int' → logprob: -5.006761074066162
    3. '(str' → logprob: -10.63176155090332
    4. ' int' → logprob: -12.25676155090332
    5. ',int' → logprob: -12.38176155090332
    6. '(' → logprob: -12.50676155090332
    7. '[int' → logprob: -12.75676155090332
    8. '<int' → logprob: -13.50676155090332
    9. '(lambda' → logprob: -13.50676155090332
    10. 'str' → logprob: -13.63176155090332

Token 367: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.22937989234924316
    2. ',' → logprob: -1.7293798923492432
    3. '(input' → logprob: -3.604379892349243
    4. 'input' → logprob: -8.479379653930664
    5. '(' → logprob: -8.854379653930664
    6. '(),' → logprob: -11.104379653930664
    7. ' input' → logprob: -13.104379653930664
    8. ',x' → logprob: -13.604379653930664
    9. ' ,' → logprob: -13.729379653930664
    10. ',(' → logprob: -13.979379653930664

Token 368: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002639582962729037
    2. ' input' → logprob: -8.250264167785645
    3. '(input' → logprob: -13.000264167785645
    4. ',input' → logprob: -15.500264167785645
    5. ' ' → logprob: -16.375263214111328
    6. '   ' → logprob: -17.875263214111328
    7. '[input' → logprob: -18.000263214111328
    8. '
' → logprob: -18.000263214111328
    9. '<input' → logprob: -18.125263214111328
    10. '=input' → logprob: -18.125263214111328

Token 369: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.625003814697266
    3. '()))' → logprob: -14.875003814697266
    4. '())))' → logprob: -17.750003814697266
    5. ' ().' → logprob: -18.000003814697266
    6. '.split' → logprob: -18.375003814697266
    7. '()
' → logprob: -18.750003814697266
    8. '(' → logprob: -19.250003814697266
    9. '()[' → logprob: -19.375003814697266
    10. '()));' → logprob: -19.625003814697266

Token 370: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -16.875
    3. 'strip' → logprob: -17.125
    4. ' split' → logprob: -17.125
    5. '.split' → logprob: -17.5
    6. 'spl' → logprob: -18.25
    7. ')' → logprob: -18.75
    8. '().' → logprob: -19.0
    9. 'input' → logprob: -19.25
    10. '()' → logprob: -19.875

Token 371: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04746992513537407
    2. '))' → logprob: -3.1724698543548584
    3. '()' → logprob: -5.5474700927734375
    4. '())' → logprob: -8.297470092773438
    5. '()))
' → logprob: -8.422470092773438
    6. '(' → logprob: -10.672470092773438
    7. '()));' → logprob: -10.797470092773438
    8. '())).' → logprob: -11.047470092773438
    9. '())))' → logprob: -11.422470092773438
    10. '()))
' → logprob: -12.047470092773438

Token 372: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6053577661514282
    2. ']' → logprob: -1.4803577661514282
    3. ')' → logprob: -2.1053576469421387
    4. '()]' → logprob: -2.6053576469421387
    5. ' for' → logprob: -4.105357646942139
    6. 'for' → logprob: -4.980357646942139
    7. '()' → logprob: -5.480357646942139
    8. '])' → logprob: -7.105357646942139
    9. '])]' → logprob: -7.355357646942139
    10. '[' → logprob: -7.855357646942139

Token 373: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5515277981758118
    2. '_' → logprob: -1.551527738571167
    3. 'range' → logprob: -1.551527738571167
    4. '_range' → logprob: -9.801527976989746
    5. ' in' → logprob: -11.051527976989746
    6. ' _' → logprob: -11.676527976989746
    7. 'in' → logprob: -13.551527976989746
    8. '(range' → logprob: -13.926527976989746
    9. '_in' → logprob: -14.926527976989746
    10. '_q' → logprob: -15.176527976989746

Token 374: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0033004588913172483
    2. 'in' → logprob: -6.253300666809082
    3. ' range' → logprob: -6.753300666809082
    4. ' in' → logprob: -8.503300666809082
    5. '(range' → logprob: -14.003300666809082
    6. ' ' → logprob: -15.753300666809082
    7. 'q' → logprob: -16.753299713134766
    8. '	range' → logprob: -17.628299713134766
    9. '  ' → logprob: -17.878299713134766
    10. '_' → logprob: -17.878299713134766

Token 375: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.674858301877975e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -14.375096321105957
    4. 'q' → logprob: -17.375097274780273
    5. 'query' → logprob: -19.000097274780273
    6. 'r' → logprob: -19.375097274780273
    7. '[' → logprob: -19.750097274780273
    8. ' ' → logprob: -19.875097274780273
    9. '
' → logprob: -20.250097274780273
    10. '	range' → logprob: -20.750097274780273

Token 376: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008062947308644652
    2. '(q' → logprob: -7.2508063316345215
    3. ' q' → logprob: -9.250805854797363
    4. '(' → logprob: -16.37580680847168
    5. '	q' → logprob: -16.50080680847168
    6. ' (' → logprob: -17.62580680847168
    7. ',q' → logprob: -18.75080680847168
    8. ' ' → logprob: -18.87580680847168
    9. '   ' → logprob: -18.87580680847168
    10. '_q' → logprob: -19.00080680847168

Token 377: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.56233171664644e-05
    2. ']' → logprob: -9.875055313110352
    3. ')' → logprob: -12.625055313110352
    4. '])]' → logprob: -15.250055313110352
    5. '])' → logprob: -15.875055313110352
    6. ')]
' → logprob: -16.00005531311035
    7. ')])' → logprob: -16.25005531311035
    8. '()]' → logprob: -16.25005531311035
    9. ')],' → logprob: -17.12505531311035
    10. '')]' → logprob: -17.37505531311035

Token 378: 'matrix' (ID: 37307)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742152988910675
    2. '=' → logprob: -0.9742152690887451
    3. '=[[' → logprob: -9.474215507507324
    4. '=[' → logprob: -10.599215507507324
    5. '=[]' → logprob: -10.599215507507324
    6. '[' → logprob: -12.724215507507324
    7. '<|end|>' → logprob: -13.599215507507324
    8. ' =[' → logprob: -13.724215507507324
    9. ',' → logprob: -14.099215507507324
    10. ' ' → logprob: -14.099215507507324

Token 380: ' reduce' (ID: 10389)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0052813077345490456
    2. ' [[' → logprob: -5.255281448364258
    3. '[' → logprob: -10.005281448364258
    4. ' [' → logprob: -13.755281448364258
    5. '[n' → logprob: -13.755281448364258
    6. '[
' → logprob: -15.755281448364258
    7. '([[' → logprob: -16.755281448364258
    8. '[]' → logprob: -16.755281448364258
    9. '[(' → logprob: -18.505281448364258
    10. '0' → logprob: -18.755281448364258

Token 381: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0009542173356749117
    2. '(' → logprob: -7.0009541511535645
    3. '(
' → logprob: -10.875954627990723
    4. '(list' → logprob: -11.500954627990723
    5. '(int' → logprob: -12.000954627990723
    6. ' (' → logprob: -12.125954627990723
    7. '   ' → logprob: -14.375954627990723
    8. 'lambda' → logprob: -14.500954627990723
    9. '(operator' → logprob: -15.250954627990723
    10. '(range' → logprob: -15.375954627990723

Token 382: ' acc' (ID: 1259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5331102013587952
    2. ' a' → logprob: -0.9081102013587952
    3. ' lambda' → logprob: -5.03311014175415
    4. 'lambda' → logprob: -6.15811014175415
    5. ' acc' → logprob: -7.90811014175415
    6. 'x' → logprob: -8.408110618591309
    7. ' x' → logprob: -8.658110618591309
    8. ' ' → logprob: -8.908110618591309
    9. 'acc' → logprob: -9.408110618591309
    10. '_' → logprob: -9.783110618591309

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13092534244060516
    2. '(lambda' → logprob: -2.255925416946411
    3. 'lambda' → logprob: -4.755925178527832
    4. '=lambda' → logprob: -5.005925178527832
    5. ' lambda' → logprob: -6.255925178527832
    6. ' ,' → logprob: -7.255925178527832
    7. '   ' → logprob: -13.005925178527832
    8. ' (' → logprob: -13.505925178527832
    9. '=' → logprob: -13.505925178527832
    10. ':' → logprob: -13.755925178527832

Token 384: ' lr' (ID: 58770)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.7833447456359863
    2. 'x' → logprob: -1.6583447456359863
    3. 'acc' → logprob: -2.2833447456359863
    4. ' x' → logprob: -2.2833447456359863
    5. 'a' → logprob: -2.6583447456359863
    6. ' lambda' → logprob: -3.6583447456359863
    7. 'lambda' → logprob: -3.7833447456359863
    8. ' a' → logprob: -4.158344745635986
    9. ' _:' → logprob: -5.908344745635986
    10. 'info' → logprob: -6.033344745635986

Token 385: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08631952852010727
    2. ',' → logprob: -2.5863194465637207
    3. ' :' → logprob: -4.961319446563721
    4. ':[' → logprob: -9.086319923400879
    5. ',:' → logprob: -9.336319923400879
    6. ' ,' → logprob: -9.586319923400879
    7. ':[[' → logprob: -10.336319923400879
    8. '=' → logprob: -10.586319923400879
    9. ':
' → logprob: -11.211319923400879
    10. ',[' → logprob: -11.711319923400879

Token 386: ' [' (ID: 723)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.06270544975996017
    2. '[' → logprob: -3.4377055168151855
    3. ' acc' → logprob: -4.3127055168151855
    4. '[
' → logprob: -4.9377055168151855
    5. '[[' → logprob: -5.0627055168151855
    6. ' [' → logprob: -7.6877055168151855
    7. '   ' → logprob: -7.9377055168151855
    8. '(acc' → logprob: -8.062705039978027
    9. 'lambda' → logprob: -8.312705039978027
    10. ' [[' → logprob: -9.437705039978027

Token 387: 'row' (ID: 843)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7486168146133423
    2. 'acc' → logprob: -0.7486168146133423
    3. '[
' → logprob: -3.9986166954040527
    4. '[(' → logprob: -4.248616695404053
    5. '[a' → logprob: -4.623616695404053
    6. '[x' → logprob: -5.373616695404053
    7. 'list' → logprob: -6.623616695404053
    8. ' [' → logprob: -6.873616695404053
    9. '(acc' → logprob: -6.998616695404053
    10. 'a' → logprob: -7.248616695404053

Token 388: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5514669418334961
    2. '[:' → logprob: -1.551466941833496
    3. '+' → logprob: -2.426466941833496
    4. '+[' → logprob: -2.801466941833496
    5. ' for' → logprob: -4.051466941833496
    6. ' +' → logprob: -4.426466941833496
    7. '[' → logprob: -4.551466941833496
    8. 'for' → logprob: -4.926466941833496
    9. ' if' → logprob: -5.926466941833496
    10. '.copy' → logprob: -6.051466941833496

Token 389: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49012985825538635
    2. 'for' → logprob: -0.990129828453064
    3. '+' → logprob: -4.4901299476623535
    4. ' +' → logprob: -5.8651299476623535
    5. ' if' → logprob: -7.1151299476623535
    6. 'if' → logprob: -7.7401299476623535
    7. '   ' → logprob: -8.990129470825195
    8. ' ' → logprob: -9.615129470825195
    9. '+[' → logprob: -9.865129470825195
    10. '[' → logprob: -9.990129470825195

Token 390: ' idx' (ID: 14016)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2960145473480225
    2. 'True' → logprob: -1.2960145473480225
    3. 'row' → logprob: -1.5460145473480225
    4. 'i' → logprob: -1.7960145473480225
    5. 'idx' → logprob: -3.5460145473480225
    6. '0' → logprob: -4.421014785766602
    7. ' True' → logprob: -4.546014785766602
    8. '1' → logprob: -5.546014785766602
    9. ' len' → logprob: -5.546014785766602
    10. ' i' → logprob: -5.921014785766602

Token 391: ' !=' (ID: 1666)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.5790576934814453
    2. ' for' → logprob: -1.9540576934814453
    3. 'for' → logprob: -2.2040576934814453
    4. '<' → logprob: -2.5790576934814453
    5. ' <' → logprob: -3.2040576934814453
    6. ' not' → logprob: -3.4540576934814453
    7. 'not' → logprob: -3.9540576934814453
    8. '<n' → logprob: -5.079057693481445
    9. '<num' → logprob: -5.454057693481445
    10. '!=' → logprob: -6.454057693481445

Token 392: ' lr' (ID: 58770)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.5517106056213379
    2. '0' → logprob: -0.9267106056213379
    3. ' lr' → logprob: -4.301710605621338
    4. ' ' → logprob: -5.801710605621338
    5. 'idx' → logprob: -6.051710605621338
    6. '   ' → logprob: -6.176710605621338
    7. 'l' → logprob: -6.926710605621338
    8. 'n' → logprob: -7.426710605621338
    9. 'i' → logprob: -7.551710605621338
    10. 'range' → logprob: -7.551710605621338

Token 393: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15188626945018768
    2. '[' → logprob: -2.401886224746704
    3. '<' → logprob: -4.276886463165283
    4. 'else' → logprob: -4.526886463165283
    5. '!=' → logprob: -5.526886463165283
    6. 'not' → logprob: -5.651886463165283
    7. ' else' → logprob: -6.276886463165283
    8. '1' → logprob: -6.276886463165283
    9. '   ' → logprob: -6.401886463165283
    10. '==' → logprob: -6.526886463165283

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005460117012262344
    2. '1' → logprob: -5.255460262298584
    3. ' ' → logprob: -9.755459785461426
    4. '[' → logprob: -10.130459785461426
    5. ']' → logprob: -10.880459785461426
    6. 'i' → logprob: -11.255459785461426
    7. '   ' → logprob: -11.442959785461426
    8. 'x' → logprob: -11.442959785461426
    9. 'idx' → logprob: -11.442959785461426
    10. '][' → logprob: -12.067959785461426

Token 395: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5871910452842712
    2. 'else' → logprob: -0.8371910452842712
    3. ']' → logprob: -4.587191104888916
    4. '   ' → logprob: -8.212190628051758
    5. ' ' → logprob: -8.962190628051758
    6. '    ' → logprob: -9.587190628051758
    7. ' or' → logprob: -9.587190628051758
    8. '
' → logprob: -9.712190628051758
    9. '][' → logprob: -9.712190628051758
    10. '```' → logprob: -9.962190628051758

Token 396: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07213757187128067
    2. ' else' → logprob: -2.6971375942230225
    3. '!=' → logprob: -6.822137355804443
    4. '==' → logprob: -7.572137355804443
    5. ' ' → logprob: -9.322137832641602
    6. '<len' → logprob: -9.322137832641602
    7. 'not' → logprob: -9.822137832641602
    8. ' !=' → logprob: -10.072137832641602
    9. '```' → logprob: -10.072137832641602
    10. 'or' → logprob: -10.447137832641602

Token 397: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14640919864177704
    2. '[row' → logprob: -2.271409273147583
    3. 'acc' → logprob: -4.896409034729004
    4. '[
' → logprob: -5.021409034729004
    5. 'row' → logprob: -5.271409034729004
    6. '[(' → logprob: -5.396409034729004
    7. '[m' → logprob: -6.021409034729004
    8. '[r' → logprob: -6.521409034729004
    9. '[len' → logprob: -7.146409034729004
    10. '[n' → logprob: -7.396409034729004

Token 398: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.9474285840988159
    2. '(map' → logprob: -1.447428584098816
    3. 'acc' → logprob: -1.572428584098816
    4. '(range' → logprob: -2.6974287033081055
    5. 'map' → logprob: -3.1974287033081055
    6. 'range' → logprob: -3.9474287033081055
    7. '(row' → logprob: -3.9474287033081055
    8. 'row' → logprob: -4.3224287033081055
    9. '(' → logprob: -4.9474287033081055
    10. '(
' → logprob: -7.8224287033081055

Token 399: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.060303352773189545
    2. '(lambda' → logprob: -2.9353034496307373
    3. 'int' → logprob: -5.310303211212158
    4. '(
' → logprob: -8.810303688049316
    5. '(' → logprob: -8.935303688049316
    6. 'lambda' → logprob: -9.310303688049316
    7. '<int' → logprob: -10.435303688049316
    8. '[int' → logprob: -10.685303688049316
    9. ',int' → logprob: -11.185303688049316
    10. ' int' → logprob: -12.185303688049316

Token 400: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8815105557441711
    2. 'int' → logprob: -1.1315104961395264
    3. '(lambda' → logprob: -1.7565104961395264
    4. '(int' → logprob: -3.2565104961395264
    5. 'x' → logprob: -4.0065107345581055
    6. '_,' → logprob: -4.0065107345581055
    7. ' int' → logprob: -5.6315107345581055
    8. '   ' → logprob: -5.7565107345581055
    9. ' lambda' → logprob: -5.7565107345581055
    10. ',' → logprob: -7.3815107345581055

Token 401: ':' (ID: 25)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8829545974731445
    2. '(lambda' → logprob: -0.8829545974731445
    3. 'int' → logprob: -2.3829545974731445
    4. 'lambda' → logprob: -3.2579545974731445
    5. ',' → logprob: -3.3829545974731445
    6. ',int' → logprob: -6.2579545974731445
    7. '=lambda' → logprob: -6.6329545974731445
    8. '(' → logprob: -6.6329545974731445
    9. '   ' → logprob: -6.7579545974731445
    10. '<int' → logprob: -7.8829545974731445

Token 402: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5311148762702942
    2. 'lambda' → logprob: -1.1561148166656494
    3. 'int' → logprob: -2.9061148166656494
    4. ' lambda' → logprob: -4.5311150550842285
    5. 'acc' → logprob: -4.7811150550842285
    6. '(lambda' → logprob: -5.1561150550842285
    7. '0' → logprob: -5.1561150550842285
    8. ' t' → logprob: -5.4061150550842285
    9. 'max' → logprob: -6.5311150550842285
    10. '(t' → logprob: -6.7811150550842285

Token 403: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2851734161376953
    2. ' +' → logprob: -2.0351734161376953
    3. ':' → logprob: -2.9101734161376953
    4. 'lambda' → logprob: -4.160173416137695
    5. '(lambda' → logprob: -4.410173416137695
    6. ',' → logprob: -4.785173416137695
    7. '-' → logprob: -5.035173416137695
    8. ' lambda' → logprob: -5.535173416137695
    9. '[' → logprob: -5.660173416137695
    10. '+:' → logprob: -5.660173416137695

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2492059469223022
    2. 'lambda' → logprob: -1.6242059469223022
    3. '0' → logprob: -1.9992059469223022
    4. 't' → logprob: -2.249206066131592
    5. '+' → logprob: -2.749206066131592
    6. 'x' → logprob: -2.999206066131592
    7. 'int' → logprob: -3.124206066131592
    8. 'l' → logprob: -3.999206066131592
    9. ' lambda' → logprob: -4.249206066131592
    10. 'r' → logprob: -4.624206066131592

Token 405: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06223229318857193
    2. '+' → logprob: -4.062232494354248
    3. ' if' → logprob: -4.437232494354248
    4. ' +' → logprob: -4.687232494354248
    5. ' ,' → logprob: -4.812232494354248
    6. ':' → logprob: -5.687232494354248
    7. '+,' → logprob: -6.062232494354248
    8. '[' → logprob: -6.812232494354248
    9. 'if' → logprob: -6.937232494354248
    10. ' -' → logprob: -7.187232494354248

Token 406: '(' (ID: 7)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5248620510101318
    2. ' t' → logprob: -1.3998620510101318
    3. 'lambda' → logprob: -3.399862051010132
    4. '-' → logprob: -3.899862051010132
    5. 'lr' → logprob: -3.899862051010132
    6. ' lambda' → logprob: -4.149862289428711
    7. 'int' → logprob: -4.524862289428711
    8. '0' → logprob: -4.524862289428711
    9. ' lr' → logprob: -5.024862289428711
    10. '(t' → logprob: -5.274862289428711

Token 407: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25929850339889526
    2. ' t' → logprob: -1.88429856300354
    3. '0' → logprob: -3.75929856300354
    4. '-' → logprob: -3.88429856300354
    5. 'lr' → logprob: -4.259298324584961
    6. 'lambda' → logprob: -5.634298324584961
    7. ' -' → logprob: -6.009298324584961
    8. '1' → logprob: -6.134298324584961
    9. '-l' → logprob: -6.634298324584961
    10. 'matrix' → logprob: -6.884298324584961

Token 408: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5437694191932678
    2. ' if' → logprob: -1.168769359588623
    3. '),' → logprob: -2.543769359588623
    4. ' ,' → logprob: -4.668769359588623
    5. ',),' → logprob: -5.043769359588623
    6. ' for' → logprob: -6.168769359588623
    7. ',t' → logprob: -6.418769359588623
    8. '   ' → logprob: -6.543769359588623
    9. 'if' → logprob: -6.668769359588623
    10. ' ),' → logprob: -6.668769359588623

Token 409: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25486835837364197
    2. 'lr' → logprob: -2.129868268966675
    3. ' t' → logprob: -3.254868268966675
    4. 'idx' → logprob: -3.504868268966675
    5. ' lr' → logprob: -4.629868507385254
    6. 'x' → logprob: -5.004868507385254
    7. ' idx' → logprob: -6.379868507385254
    8. '0' → logprob: -6.504868507385254
    9. 'l' → logprob: -6.504868507385254
    10. 'tl' → logprob: -6.629868507385254

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4633496403694153
    2. '==' → logprob: -1.7133495807647705
    3. ' ==' → logprob: -1.9633495807647705
    4. ' if' → logprob: -4.96334981918335
    5. ' <=' → logprob: -4.96334981918335
    6. '<=' → logprob: -5.21334981918335
    7. ' >=' → logprob: -5.33834981918335
    8. '>=' → logprob: -5.71334981918335
    9. '0' → logprob: -5.83834981918335
    10. ' else' → logprob: -5.96334981918335

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018652142956852913
    2. '1' → logprob: -4.018651962280273
    3. ' ' → logprob: -8.768651962280273
    4. '[' → logprob: -8.893651962280273
    5. '==' → logprob: -9.643651962280273
    6. '
' → logprob: -10.143651962280273
    7. 'idx' → logprob: -11.268651962280273
    8. ' ==' → logprob: -11.393651962280273
    9. '   ' → logprob: -11.456151962280273
    10. '2' → logprob: -11.518651962280273

Token 412: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34996533393859863
    2. ' ==' → logprob: -1.2249653339385986
    3. ']==' → logprob: -7.2249650955200195
    4. '[' → logprob: -8.47496509552002
    5. ')==' → logprob: -8.72496509552002
    6. ')' → logprob: -9.09996509552002
    7. '<=' → logprob: -10.09996509552002
    8. ',' → logprob: -10.34996509552002
    9. '>=' → logprob: -10.34996509552002
    10. '==(' → logprob: -10.47496509552002

Token 413: 'lr' (ID: 35878)
  Prédit: 'lr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.014958404004573822
    2. ' lr' → logprob: -4.264958381652832
    3. '0' → logprob: -7.514958381652832
    4. '1' → logprob: -9.764958381652832
    5. '   ' → logprob: -10.014958381652832
    6. 'rl' → logprob: -10.389958381652832
    7. ' ' → logprob: -10.514958381652832
    8. 'idx' → logprob: -10.889958381652832
    9. '  ' → logprob: -11.389958381652832
    10. 'l' → logprob: -11.639958381652832

Token 414: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008200235664844513
    2. 'x' → logprob: -5.633200168609619
    3. '0' → logprob: -6.133200168609619
    4. '[idx' → logprob: -7.008200168609619
    5. 'idx' → logprob: -7.508200168609619
    6. '==' → logprob: -8.883200645446777
    7. 'r' → logprob: -9.508200645446777
    8. ' ==' → logprob: -9.508200645446777
    9. '][' → logprob: -9.633200645446777
    10. ' ' → logprob: -9.758200645446777

Token 415: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023724766448140144
    2. '1' → logprob: -3.8987247943878174
    3. '[' → logprob: -6.273724555969238
    4. ' ' → logprob: -7.898724555969238
    5. 'idx' → logprob: -8.461224555969238
    6. ']' → logprob: -8.961224555969238
    7. '
' → logprob: -9.336224555969238
    8. 'r' → logprob: -10.086224555969238
    9. '-' → logprob: -10.211224555969238
    10. ')' → logprob: -10.336224555969238

Token 416: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3693402409553528
    2. ',' → logprob: -1.744340181350708
    3. ']' → logprob: -2.869340181350708
    4. 'else' → logprob: -3.744340181350708
    5. '][' → logprob: -4.119340419769287
    6. ']==' → logprob: -4.119340419769287
    7. '==' → logprob: -5.369340419769287
    8. ' ,' → logprob: -5.369340419769287
    9. ')' → logprob: -5.619340419769287
    10. '],' → logprob: -5.744340419769287

Token 417: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03419950604438782
    2. 'else' → logprob: -3.6591994762420654
    3. ',' → logprob: -5.5341997146606445
    4. '==' → logprob: -6.5341997146606445
    5. ')' → logprob: -7.0341997146606445
    6. ' ==' → logprob: -7.7841997146606445
    7. ' ' → logprob: -8.034199714660645
    8. '[' → logprob: -8.659199714660645
    9. ' ,' → logprob: -8.909199714660645
    10. '   ' → logprob: -9.409199714660645

Token 418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1790422946214676
    2. '1' → logprob: -2.429042339324951
    3. ' ' → logprob: -2.804042339324951
    4. 'lr' → logprob: -5.179042339324951
    5. '-' → logprob: -5.554042339324951
    6. 'idx' → logprob: -6.679042339324951
    7. ' lr' → logprob: -7.054042339324951
    8. ' -' → logprob: -7.304042339324951
    9. 't' → logprob: -7.429042339324951
    10. 'row' → logprob: -7.804042339324951

Token 419: '0' (ID: 15)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.06140495091676712
    2. '0' → logprob: -3.0614049434661865
    3. ' lr' → logprob: -5.686405181884766
    4. 't' → logprob: -5.811405181884766
    5. '1' → logprob: -6.061405181884766
    6. 'idx' → logprob: -6.686405181884766
    7. '-' → logprob: -6.686405181884766
    8. 'l' → logprob: -8.061405181884766
    9. ' ' → logprob: -8.186405181884766
    10. 'r' → logprob: -8.936405181884766

Token 420: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5349423289299011
    2. ' for' → logprob: -1.159942388534546
    3. '),' → logprob: -3.159942388534546
    4. 'enumer' → logprob: -3.784942388534546
    5. ' ,' → logprob: -3.909942388534546
    6. ' in' → logprob: -5.784942150115967
    7. ' ),' → logprob: -6.159942150115967
    8. 'for' → logprob: -6.284942150115967
    9. ')),' → logprob: -6.284942150115967
    10. ' enumerate' → logprob: -6.784942150115967

Token 421: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.11409684270620346
    2. ' enumerate' → logprob: -2.2390968799591064
    3. 'range' → logprob: -6.739096641540527
    4. ' range' → logprob: -10.739096641540527
    5. '
' → logprob: -10.864096641540527
    6. 'lambda' → logprob: -11.239096641540527
    7. 'acc' → logprob: -11.864096641540527
    8. '   ' → logprob: -12.114096641540527
    9. ' ' → logprob: -12.239096641540527
    10. 'en' → logprob: -12.489096641540527

Token 422: '(row' (ID: 15945)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.040145814418792725
    2. '(row' → logprob: -3.2901458740234375
    3. 'acc' → logprob: -6.7901458740234375
    4. '(matrix' → logprob: -7.4151458740234375
    5. '(' → logprob: -8.665145874023438
    6. 'row' → logprob: -9.665145874023438
    7. '(rows' → logprob: -10.040145874023438
    8. 'matrix' → logprob: -10.540145874023438
    9. ' acc' → logprob: -10.665145874023438
    10. '(ac' → logprob: -11.165145874023438

Token 423: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.7892394661903381
    2. '))' → logprob: -0.9142394661903381
    3. ')),' → logprob: -2.4142394065856934
    4. '),' → logprob: -3.2892394065856934
    5. ',' → logprob: -4.789239406585693
    6. '))),' → logprob: -5.164239406585693
    7. ' ' → logprob: -6.539239406585693
    8. ')' → logprob: -7.164239406585693
    9. '))))' → logprob: -7.539239406585693
    10. ' ))' → logprob: -8.164239883422852

Token 424: ' for' (ID: 395)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.9939358234405518
    2. ' for' → logprob: -1.1189358234405518
    3. 'for' → logprob: -1.8689358234405518
    4. ',' → logprob: -2.2439358234405518
    5. '(matrix' → logprob: -4.243935585021973
    6. ' in' → logprob: -4.368935585021973
    7. 'acc' → logprob: -5.618935585021973
    8. 'matrix' → logprob: -6.118935585021973
    9. '(range' → logprob: -6.243935585021973
    10. '(' → logprob: -6.618935585021973

Token 425: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0052360063418745995
    2. ' idx' → logprob: -5.2552361488342285
    3. 'range' → logprob: -13.38023567199707
    4. '	idx' → logprob: -15.38023567199707
    5. '(idx' → logprob: -16.63023567199707
    6. ',' → logprob: -16.88023567199707
    7. 'i' → logprob: -16.88023567199707
    8. ' ' → logprob: -17.00523567199707
    9. '  ' → logprob: -17.00523567199707
    10. 'index' → logprob: -17.13023567199707

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03629962354898453
    2. ',row' → logprob: -3.536299705505371
    3. 'in' → logprob: -5.411299705505371
    4. ' in' → logprob: -6.286299705505371
    5. 'row' → logprob: -9.161299705505371
    6. ' ,' → logprob: -9.536299705505371
    7. '(row' → logprob: -11.411299705505371
    8. 'range' → logprob: -12.161299705505371
    9. ' row' → logprob: -13.786299705505371
    10. '=row' → logprob: -13.911299705505371

Token 427: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.038653664290905
    2. ' row' → logprob: -3.288653612136841
    3. '(row' → logprob: -7.41365385055542
    4. '(' → logprob: -12.413653373718262
    5. ' (' → logprob: -12.663653373718262
    6. ' ' → logprob: -14.038653373718262
    7. '	row' → logprob: -14.913653373718262
    8. '_row' → logprob: -15.413653373718262
    9. ',row' → logprob: -16.163654327392578
    10. 'matrix' → logprob: -16.538654327392578

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20849958062171936
    2. 'in' → logprob: -1.708499550819397
    3. ',' → logprob: -4.958499431610107
    4. 'enumer' → logprob: -10.833499908447266
    5. ' ,' → logprob: -12.333499908447266
    6. ' ' → logprob: -12.458499908447266
    7. ')' → logprob: -13.083499908447266
    8. '(matrix' → logprob: -13.708499908447266
    9. ' enumerate' → logprob: -13.833499908447266
    10. '(' → logprob: -14.333499908447266

Token 429: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.023323511704802513
    2. ' enumerate' → logprob: -3.7733235359191895
    3. 'acc' → logprob: -10.523323059082031
    4. 'range' → logprob: -10.523323059082031
    5. '```' → logprob: -12.023323059082031
    6. 'en' → logprob: -12.023323059082031
    7. '(en' → logprob: -12.398323059082031
    8. ',' → logprob: -13.773323059082031
    9. '   ' → logprob: -13.773323059082031
    10. 'in' → logprob: -14.023323059082031

Token 430: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.23429593443870544
    2. 'acc' → logprob: -2.2342958450317383
    3. 'matrix' → logprob: -2.6092958450317383
    4. '(matrix' → logprob: -3.6092958450317383
    5. ' acc' → logprob: -7.109295845031738
    6. ' matrix' → logprob: -8.734295845031738
    7. '(' → logprob: -9.359295845031738
    8. ' (' → logprob: -10.609295845031738
    9. '(range' → logprob: -10.859295845031738
    10. 'range' → logprob: -11.109295845031738

Token 431: ')],' (ID: 60559)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5108945965766907
    2. ')],' → logprob: -1.135894536972046
    3. '])' → logprob: -3.010894536972046
    4. ')])' → logprob: -4.510894775390625
    5. ')]' → logprob: -5.385894775390625
    6. '])]' → logprob: -5.385894775390625
    7. ']),' → logprob: -5.635894775390625
    8. ']' → logprob: -6.010894775390625
    9. '),' → logprob: -7.010894775390625
    10. ')' → logprob: -7.385894775390625

Token 432: ' info' (ID: 5377)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5811759233474731
    2. 'info' → logprob: -0.9561759233474731
    3. 'matrix' → logprob: -3.7061758041381836
    4. ' info' → logprob: -4.081175804138184
    5. ' range' → logprob: -4.456175804138184
    6. '[' → logprob: -6.581175804138184
    7. '[[' → logprob: -7.081175804138184
    8. '[(' → logprob: -7.581175804138184
    9. ' matrix' → logprob: -7.956175804138184
    10. ' [[' → logprob: -9.581175804138184

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019090480054728687
    2. ',m' → logprob: -8.875190734863281
    3. ')' → logprob: -10.625190734863281
    4. ' ,' → logprob: -10.750190734863281
    5. ',[' → logprob: -12.750190734863281
    6. ',n' → logprob: -14.375190734863281
    7. ',
' → logprob: -14.500190734863281
    8. ',)' → logprob: -15.625190734863281
    9. '[' → logprob: -16.12519073486328
    10. ',module' → logprob: -16.50019073486328

Token 434: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0004306692280806601
    2. ' [[' → logprob: -7.750430583953857
    3. '[' → logprob: -18.000431060791016
    4. '   ' → logprob: -19.500431060791016
    5. ' ' → logprob: -20.000431060791016
    6. '([[' → logprob: -20.125431060791016
    7. '=[[' → logprob: -21.375431060791016
    8. '0' → logprob: -21.750431060791016
    9. '  ' → logprob: -22.375431060791016
    10. '[
' → logprob: -22.500431060791016

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '[' → logprob: -15.750041007995605
    4. '   ' → logprob: -16.50004005432129
    5. '00' → logprob: -16.81254005432129
    6. '  ' → logprob: -17.06254005432129
    7. '1' → logprob: -17.50004005432129
    8. '
' → logprob: -17.50004005432129
    9. 'False' → logprob: -17.81254005432129
    10. '    ' → logprob: -17.87504005432129

Token 436: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0002913678181357682
    2. ']' → logprob: -8.75029182434082
    3. ']*(' → logprob: -9.12529182434082
    4. ' for' → logprob: -10.75029182434082
    5. 'for' → logprob: -13.62529182434082
    6. ']+' → logprob: -14.25029182434082
    7. '0' → logprob: -14.62529182434082
    8. ' ' → logprob: -16.37529182434082
    9. ' ]' → logprob: -16.75029182434082
    10. '   ' → logprob: -17.87529182434082

Token 437: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.984787902794778e-05
    2. 'm' → logprob: -10.250100135803223
    3. ' n' → logprob: -10.250100135803223
    4. ' ' → logprob: -11.750100135803223
    5. '   ' → logprob: -12.000100135803223
    6. '  ' → logprob: -12.500100135803223
    7. '(n' → logprob: -12.625100135803223
    8. '    ' → logprob: -13.375100135803223
    9. '100' → logprob: -13.750100135803223
    10. '     ' → logprob: -14.125100135803223

Token 438: '+' (ID: 10)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003890854713972658
    2. ')' → logprob: -8.000389099121094
    3. ' n' → logprob: -10.875389099121094
    4. '   ' → logprob: -11.500389099121094
    5. ')n' → logprob: -11.500389099121094
    6. '+' → logprob: -12.500389099121094
    7. '  ' → logprob: -13.500389099121094
    8. ')]' → logprob: -13.500389099121094
    9. ' ' → logprob: -14.000389099121094
    10. '0' → logprob: -14.250389099121094

Token 439: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031825865153223276
    2. '1' → logprob: -5.878182411193848
    3. ' n' → logprob: -8.128182411193848
    4. ' ' → logprob: -10.628182411193848
    5. '2' → logprob: -11.128182411193848
    6. '10' → logprob: -11.128182411193848
    7. '100' → logprob: -11.378182411193848
    8. '5' → logprob: -12.378182411193848
    9. '0' → logprob: -12.753182411193848
    10. '   ' → logprob: -13.378182411193848

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009589854744262993
    2. ')]' → logprob: -7.7509589195251465
    3. ' )' → logprob: -8.750959396362305
    4. '+' → logprob: -8.875959396362305
    5. ')])' → logprob: -9.375959396362305
    6. 'for' → logprob: -9.375959396362305
    7. ' for' → logprob: -10.250959396362305
    8. ' ' → logprob: -12.375959396362305
    9. '[' → logprob: -12.500959396362305
    10. '+[' → logprob: -13.250959396362305

Token 441: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2536230683326721
    2. 'for' → logprob: -1.5036230087280273
    3. ']' → logprob: -7.003623008728027
    4. ')' → logprob: -7.628623008728027
    5. '   ' → logprob: -9.128623008728027
    6. ' ' → logprob: -9.628623008728027
    7. ']*(' → logprob: -10.628623008728027
    8. '	for' → logprob: -11.253623008728027
    9. '+' → logprob: -11.378623008728027
    10. ')]' → logprob: -11.503623008728027

Token 442: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0038352326955646276
    2. ' range' → logprob: -6.003835201263428
    3. 'range' → logprob: -7.003835201263428
    4. ' _' → logprob: -8.003835678100586
    5. '_range' → logprob: -10.253835678100586
    6. '_n' → logprob: -10.378835678100586
    7. ' in' → logprob: -11.003835678100586
    8. 'n' → logprob: -11.128835678100586
    9. '_i' → logprob: -12.003835678100586
    10. '_
' → logprob: -12.378835678100586

Token 443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002036595979006961
    2. 'in' → logprob: -8.875204086303711
    3. 'range' → logprob: -10.000204086303711
    4. '_' → logprob: -12.000204086303711
    5. ' ' → logprob: -12.750204086303711
    6. ' _' → logprob: -13.000204086303711
    7. 'i' → logprob: -13.000204086303711
    8. ' range' → logprob: -13.000204086303711
    9. 'n' → logprob: -13.500204086303711
    10. '0' → logprob: -15.000204086303711

Token 444: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028150975704193115
    2. ' range' → logprob: -5.877815246582031
    3. '(range' → logprob: -11.877815246582031
    4. 'n' → logprob: -13.252815246582031
    5. '   ' → logprob: -14.377815246582031
    6. '(n' → logprob: -15.002815246582031
    7. '
' → logprob: -15.627815246582031
    8. ' ' → logprob: -15.627815246582031
    9. '  ' → logprob: -16.75281524658203
    10. '	range' → logprob: -16.75281524658203

Token 445: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7563937902450562
    2. '(n' → logprob: -0.7563937902450562
    3. 'range' → logprob: -2.8813939094543457
    4. ' (' → logprob: -6.506393909454346
    5. '(range' → logprob: -6.881393909454346
    6. ' range' → logprob: -7.006393909454346
    7. '   ' → logprob: -7.256393909454346
    8. ' n' → logprob: -7.631393909454346
    9. '(' → logprob: -8.256393432617188
    10. '0' → logprob: -9.131393432617188

Token 446: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002028251619776711
    2. ')])' → logprob: -8.625203132629395
    3. ')]' → logprob: -10.875203132629395
    4. ' +' → logprob: -14.000203132629395
    5. ')])
' → logprob: -14.250203132629395
    6. ')' → logprob: -14.250203132629395
    7. '+
' → logprob: -14.500203132629395
    8. '2' → logprob: -14.875203132629395
    9. ')])

' → logprob: -15.125203132629395
    10. '```' → logprob: -15.875203132629395

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.933173426659778e-05
    2. ' ' → logprob: -9.750069618225098
    3. '1' → logprob: -12.250069618225098
    4. '3' → logprob: -12.875069618225098
    5. ')' → logprob: -14.562569618225098
    6. 'n' → logprob: -14.875069618225098
    7. '```' → logprob: -14.937569618225098
    8. '   ' → logprob: -15.062569618225098
    9. '+' → logprob: -15.125069618225098
    10. '۲' → logprob: -15.375069618225098

Token 448: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006905130576342344
    2. ')])' → logprob: -7.500690460205078
    3. ')]' → logprob: -9.500690460205078
    4. '])]' → logprob: -10.375690460205078
    5. ')' → logprob: -11.000690460205078
    6. '])
' → logprob: -12.000690460205078
    7. ']])' → logprob: -12.625690460205078
    8. ']))' → logprob: -13.250690460205078
    9. ' ])' → logprob: -13.250690460205078
    10. ']' → logprob: -13.625690460205078

Token 449: 'ru' (ID: 1942)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00856552179902792
    2. '<|end|>' → logprob: -5.508565425872803
    3. ' ' → logprob: -6.883565425872803
    4. '#' → logprob: -7.133565425872803
    5. '[' → logprob: -7.383565425872803
    6. 'matrix' → logprob: -7.633565425872803
    7. ' )' → logprob: -7.758565425872803
    8. ' matrix' → logprob: -7.883565425872803
    9. '(' → logprob: -8.508565902709961
    10. '+' → logprob: -9.258565902709961

Token 450: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.387935072183609
    2. '.get' → logprob: -1.1379350423812866
    3. '.ru' → logprob: -8.387934684753418
    4. '<|end|>' → logprob: -8.637934684753418
    5. ' .' → logprob: -9.512934684753418
    6. ')' → logprob: -9.637934684753418
    7. '.mainloop' → logprob: -9.887934684753418
    8. ').' → logprob: -9.887934684753418
    9. 'get' → logprob: -10.262934684753418
    10. '.
' → logprob: -10.512934684753418

Token 451: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.014164921827614307
    2. ' R' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.389164924621582
    4. '   ' → logprob: -15.139164924621582
    5. '	R' → logprob: -15.264164924621582
    6. '  ' → logprob: -16.389163970947266
    7. 'ru' → logprob: -16.639163970947266
    8. '_R' → logprob: -17.264163970947266
    9. '<R' → logprob: -17.764163970947266
    10. 'RU' → logprob: -17.826663970947266

Token 452: 'uis' (ID: 4560)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0028448181692510843
    2. 'iseksi' → logprob: -6.62784481048584
    3. 'uis' → logprob: -6.75284481048584
    4. 'isek' → logprob: -8.50284481048584
    5. 'iseks' → logprob: -10.12784481048584
    6. 'se' → logprob: -10.75284481048584
    7. '2' → logprob: -11.25284481048584
    8. '```' → logprob: -11.87784481048584
    9. ' =' → logprob: -12.12784481048584
    10. '(is' → logprob: -12.25284481048584

Token 453: 'eki' (ID: 30639)
  Prédit: 'eki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eki' → logprob: -0.07149507850408554
    2. 'se' → logprob: -2.6964950561523438
    3. '2' → logprob: -6.946495056152344
    4. 'sei' → logprob: -8.696495056152344
    5. 'sek' → logprob: -8.946495056152344
    6. 'eku' → logprob: -9.571495056152344
    7. 'eksi' → logprob: -9.946495056152344
    8. 'ek' → logprob: -10.196495056152344
    9. 'k' → logprob: -10.696495056152344
    10. 'e' → logprob: -10.946495056152344

Token 454: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '２' → logprob: -19.75
    4. '   ' → logprob: -19.75
    5. '[' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. '二维' → logprob: -20.625
    8. '...' → logprob: -21.125
    9. '  ' → logprob: -21.5
    10. '²' → logprob: -21.75

Token 455: 'D' (ID: 35)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14267845451831818
    2. 'D' → logprob: -2.0176784992218018
    3. '二维' → logprob: -14.392678260803223
    4. '[' → logprob: -14.517678260803223
    5. ' ' → logprob: -15.017678260803223
    6. 'd' → logprob: -15.267678260803223
    7. '```' → logprob: -15.517678260803223
    8. '`' → logprob: -15.580178260803223
    9. ' D' → logprob: -15.892678260803223
    10. '_' → logprob: -16.20517921447754

Token 456: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -5.44312788406387e-05
    2. 'matrix' → logprob: -9.875054359436035
    3. '(' → logprob: -12.875054359436035
    4. ' matrix' → logprob: -15.375054359436035
    5. ' (' → logprob: -16.75005531311035
    6. '	matrix' → logprob: -16.87505531311035
    7. '(
' → logprob: -17.12505531311035
    8. '(m' → logprob: -17.25005531311035
    9. '(Matrix' → logprob: -18.25005531311035
    10. '_matrix' → logprob: -18.62505531311035

Token 457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -14.500012397766113
    4. ').' → logprob: -14.625012397766113
    5. ')`' → logprob: -15.000012397766113
    6. ');' → logprob: -15.125012397766113
    7. '),' → logprob: -15.625012397766113
    8. ')#' → logprob: -15.750012397766113
    9. ')

' → logprob: -15.875012397766113
    10. ')
' → logprob: -16.50001335144043

Token 458: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5690089639974758e-05
    2. ' for' → logprob: -11.875015258789062
    3. '[' → logprob: -12.750015258789062
    4. 'f' → logprob: -13.500015258789062
    5. 'results' → logprob: -13.750015258789062
    6. '_' → logprob: -14.250015258789062
    7. '   ' → logprob: -14.750015258789062
    8. '<|end|>' → logprob: -14.875015258789062
    9. 'i' → logprob: -15.250015258789062
    10. '_for' → logprob: -15.500015258789062

Token 459: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2806153893470764
    2. '[' → logprob: -2.1556153297424316
    3. '(range' → logprob: -2.9056153297424316
    4. '(map' → logprob: -4.155615329742432
    5. ' comprehension' → logprob: -4.155615329742432
    6. '<|end|>' → logprob: -5.030615329742432
    7. '_' → logprob: -5.030615329742432
    8. '(
' → logprob: -5.405615329742432
    9. '_comp' → logprob: -5.530615329742432
    10. '_com' → logprob: -5.780615329742432

Token 460: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.005712035112082958
    2. '(' → logprob: -5.380712032318115
    3. '(print' → logprob: -7.255712032318115
    4. '(
' → logprob: -8.255712509155273
    5. '(int' → logprob: -9.630712509155273
    6. ')' → logprob: -10.880712509155273
    7. '((' → logprob: -11.005712509155273
    8. 'print' → logprob: -11.880712509155273
    9. '(func' → logprob: -12.505712509155273
    10. ' (' → logprob: -13.130712509155273

Token 461: ' lr' (ID: 58770)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.025221824645996
    2. 'lambda' → logprob: -1.025221824645996
    3. '(lambda' → logprob: -1.275221824645996
    4. '   ' → logprob: -6.775221824645996
    5. ' query' → logprob: -7.900221824645996
    6. 'query' → logprob: -8.025221824645996
    7. ' (' → logprob: -8.150221824645996
    8. 'int' → logprob: -8.150221824645996
    9. 'q' → logprob: -8.525221824645996
    10. ' q' → logprob: -8.900221824645996

Token 462: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7237270474433899
    2. ':' → logprob: -0.7237270474433899
    3. '=lambda' → logprob: -4.598727226257324
    4. 'lambda' → logprob: -4.848727226257324
    5. ' ,' → logprob: -5.348727226257324
    6. ' :' → logprob: -5.723727226257324
    7. ' lambda' → logprob: -6.223727226257324
    8. '(lambda' → logprob: -7.348727226257324
    9. 'ambda' → logprob: -7.598727226257324
    10. 'query' → logprob: -8.473727226257324

Token 463: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014976836740970612
    2. 'ru' → logprob: -4.389976978302002
    3. ' print' → logprob: -6.389976978302002
    4. '   ' → logprob: -7.389976978302002
    5. 'lambda' → logprob: -9.514976501464844
    6. ' ru' → logprob: -10.139976501464844
    7. ' ' → logprob: -11.139976501464844
    8. '  ' → logprob: -11.764976501464844
    9. '[' → logprob: -11.889976501464844
    10. '(print' → logprob: -12.014976501464844

Token 464: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0048741307109594345
    2. '(
' → logprob: -5.379874229431152
    3. '(*' → logprob: -8.629874229431152
    4. '(l' → logprob: -9.879874229431152
    5. '((' → logprob: -11.504874229431152
    6. '(

' → logprob: -12.504874229431152
    7. '(lambda' → logprob: -12.754874229431152
    8. '(r' → logprob: -13.379874229431152
    9. 'ru' → logprob: -13.379874229431152
    10. '   ' → logprob: -13.754874229431152

Token 465: 'lambda' (ID: 35280)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0049194470047950745
    2. ' ru' → logprob: -5.504919528961182
    3. '   ' → logprob: -7.629919528961182
    4. 'lr' → logprob: -10.004919052124023
    5. '0' → logprob: -10.129919052124023
    6. 'lu' → logprob: -10.129919052124023
    7. ' ' → logprob: -10.254919052124023
    8. 'rl' → logprob: -10.879919052124023
    9. '
' → logprob: -11.004919052124023
    10. '  ' → logprob: -11.254919052124023

Token 466: ' a' (ID: 261)
  Prédit: 'hl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hl' → logprob: -0.40257003903388977
    2. 'ru' → logprob: -2.2775700092315674
    3. 'l' → logprob: -3.0275700092315674
    4. ' hl' → logprob: -3.0275700092315674
    5. 'hr' → logprob: -3.1525700092315674
    6. 'x' → logprob: -3.4025700092315674
    7. ' ru' → logprob: -4.6525702476501465
    8. 'a' → logprob: -5.0275702476501465
    9. 'lambda' → logprob: -5.1525702476501465
    10. 'r' → logprob: -5.5275702476501465

Token 467: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40432628989219666
    2. 'hl' → logprob: -2.7793262004852295
    3. 'lr' → logprob: -2.9043262004852295
    4. ':' → logprob: -2.9043262004852295
    5. 'hr' → logprob: -3.2793262004852295
    6. '(*' → logprob: -3.6543262004852295
    7. 'wl' → logprob: -4.404326438903809
    8. ' :' → logprob: -4.779326438903809
    9. ' hl' → logprob: -4.779326438903809
    10. ' ,' → logprob: -4.779326438903809

Token 468: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6569838523864746
    2. ',' → logprob: -0.7819838523864746
    3. ' :' → logprob: -4.656983852386475
    4. 'a' → logprob: -5.656983852386475
    5. ',a' → logprob: -5.781983852386475
    6. ':(' → logprob: -6.406983852386475
    7. ',b' → logprob: -7.031983852386475
    8. '(a' → logprob: -7.156983852386475
    9. ',l' → logprob: -7.531983852386475
    10. '   ' → logprob: -7.781983852386475

Token 469: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.009928320534527302
    2. ' ru' → logprob: -4.884928226470947
    3. 'a' → logprob: -6.634928226470947
    4. 'b' → logprob: -8.384928703308105
    5. '   ' → logprob: -8.509928703308105
    6. 'lambda' → logprob: -9.134928703308105
    7. '0' → logprob: -9.634928703308105
    8. '(' → logprob: -9.884928703308105
    9. '
' → logprob: -9.884928703308105
    10. 'lr' → logprob: -10.384928703308105

Token 470: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0009012157097458839
    2. 'get' → logprob: -7.250901222229004
    3. '.' → logprob: -9.000901222229004
    4. ' .' → logprob: -10.500901222229004
    5. '   ' → logprob: -11.500901222229004
    6. ').' → logprob: -11.625901222229004
    7. ' get' → logprob: -12.375901222229004
    8. ' ' → logprob: -12.500901222229004
    9. '  ' → logprob: -13.000901222229004
    10. ')get' → logprob: -13.125901222229004

Token 471: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.7050120234489441
    2. '(a' → logprob: -1.3300120830535889
    3. '(l' → logprob: -1.8300120830535889
    4. 'sum' → logprob: -2.830012083053589
    5. '(*' → logprob: -4.83001184463501
    6. '(' → logprob: -5.45501184463501
    7. '(b' → logprob: -5.45501184463501
    8. 'a' → logprob: -6.95501184463501
    9. '   ' → logprob: -7.20501184463501
    10. '
' → logprob: -7.45501184463501

Token 472: '(a' (ID: 6271)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07793871313333511
    2. '(*' → logprob: -2.8279387950897217
    3. '(a' → logprob: -4.452938556671143
    4. '(b' → logprob: -6.327938556671143
    5. '(' → logprob: -6.702938556671143
    6. ')(' → logprob: -7.577938556671143
    7. '(*(' → logprob: -8.4529390335083
    8. '(
' → logprob: -8.7029390335083
    9. '((' → logprob: -9.5779390335083
    10. '   ' → logprob: -9.9529390335083

Token 473: ',b' (ID: 17568)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.8534550070762634
    2. '[' → logprob: -1.1034550666809082
    3. '(' → logprob: -2.103455066680908
    4. '0' → logprob: -3.103455066680908
    5. 'lr' → logprob: -3.228455066680908
    6. ',' → logprob: -3.728455066680908
    7. ',l' → logprob: -6.478455066680908
    8. '(r' → logprob: -6.603455066680908
    9. '   ' → logprob: -6.978455066680908
    10. ')' → logprob: -6.978455066680908

Token 474: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46733996272087097
    2. ',' → logprob: -1.3423399925231934
    3. '(' → logprob: -2.4673399925231934
    4. '(l' → logprob: -4.342339992523193
    5. ',l' → logprob: -5.467339992523193
    6. '0' → logprob: -6.092339992523193
    7. ')(' → logprob: -6.467339992523193
    8. ' ,' → logprob: -6.967339992523193
    9. ')' → logprob: -7.092339992523193
    10. '(*' → logprob: -7.467339992523193

Token 475: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4645167887210846
    2. '1' → logprob: -1.0895167589187622
    3. 'lr' → logprob: -3.9645168781280518
    4. ' ' → logprob: -5.214516639709473
    5. '[' → logprob: -5.714516639709473
    6. '-' → logprob: -6.589516639709473
    7. '   ' → logprob: -6.839516639709473
    8. ',' → logprob: -6.839516639709473
    9. '  ' → logprob: -7.589516639709473
    10. 'l' → logprob: -7.589516639709473

Token 476: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006641956511884928
    2. '[' → logprob: -6.006641864776611
    3. ' ,' → logprob: -6.381641864776611
    4. ',l' → logprob: -7.006641864776611
    5. '   ' → logprob: -8.88164234161377
    6. ',ll' → logprob: -9.00664234161377
    7. ')' → logprob: -9.13164234161377
    8. '           ' → logprob: -9.25664234161377
    9. ',a' → logprob: -9.38164234161377
    10. '),' → logprob: -9.50664234161377

Token 477: ',b' (ID: 17568)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008819840848445892
    2. '1' → logprob: -5.883820056915283
    3. ',' → logprob: -6.383820056915283
    4. 'lr' → logprob: -7.133820056915283
    5. '0' → logprob: -7.508820056915283
    6. '(' → logprob: -7.508820056915283
    7. '[l' → logprob: -7.758820056915283
    8. '-' → logprob: -7.883820056915283
    9. 'r' → logprob: -7.883820056915283
    10. ',l' → logprob: -7.883820056915283

Token 478: '+' (ID: 10)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04931227117776871
    2. '+' → logprob: -3.5493123531341553
    3. ')))' → logprob: -4.674312114715576
    4. '))' → logprob: -5.924312114715576
    5. ')),' → logprob: -6.424312114715576
    6. ')' → logprob: -6.799312114715576
    7. ')[' → logprob: -6.924312114715576
    8. '1' → logprob: -7.299312114715576
    9. '0' → logprob: -7.674312114715576
    10. '))),' → logprob: -7.674312114715576

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035445974208414555
    2. '[' → logprob: -6.503544807434082
    3. '0' → logprob: -6.753544807434082
    4. '2' → logprob: -8.378544807434082
    5. 'n' → logprob: -8.753544807434082
    6. ' ' → logprob: -9.128544807434082
    7. ')' → logprob: -9.753544807434082
    8. ')[' → logprob: -9.753544807434082
    9. 'len' → logprob: -10.253544807434082
    10. 'm' → logprob: -10.316044807434082

Token 480: '))' (ID: 915)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27889204025268555
    2. ')))' → logprob: -2.4038920402526855
    3. ',' → logprob: -2.9038920402526855
    4. '))' → logprob: -3.4038920402526855
    5. ')[' → logprob: -4.2788920402526855
    6. ')' → logprob: -4.2788920402526855
    7. '))))' → logprob: -4.4038920402526855
    8. '))[' → logprob: -5.0288920402526855
    9. ')),' → logprob: -5.4038920402526855
    10. '))),' → logprob: -5.6538920402526855

Token 481: '(*' (ID: 9000)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.32705259323120117
    2. '[' → logprob: -1.8270525932312012
    3. '(*' → logprob: -3.077052593231201
    4. '(' → logprob: -3.202052593231201
    5. ')(' → logprob: -4.202052593231201
    6. ')' → logprob: -5.452052593231201
    7. '(
' → logprob: -5.827052593231201
    8. ',' → logprob: -6.077052593231201
    9. ',l' → logprob: -7.077052593231201
    10. ')(
' → logprob: -7.327052593231201

Token 482: 'lr' (ID: 35878)
  Prédit: 'lr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.000169332604855299
    2. '(l' → logprob: -9.87516975402832
    3. '(*' → logprob: -10.12516975402832
    4. 'tuple' → logprob: -10.25016975402832
    5. ' lr' → logprob: -10.87516975402832
    6. '   ' → logprob: -11.37516975402832
    7. '*' → logprob: -12.50016975402832
    8. '(' → logprob: -13.37516975402832
    9. 'map' → logprob: -14.00016975402832
    10. '  ' → logprob: -14.25016975402832

Token 483: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.4010387063026428
    2. ')))' → logprob: -1.526038646697998
    3. '))),' → logprob: -3.151038646697998
    4. '))' → logprob: -3.526038646697998
    5. '))))' → logprob: -4.026038646697998
    6. ')' → logprob: -4.651038646697998
    7. ')))),' → logprob: -4.901038646697998
    8. '),' → logprob: -5.276038646697998
    9. '   ' → logprob: -8.401039123535156
    10. ' ' → logprob: -9.151039123535156

Token 484: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.40031784772872925
    2. 'range' → logprob: -1.650317907333374
    3. 'info' → logprob: -2.150317907333374
    4. ' query' → logprob: -4.525317668914795
    5. ' info' → logprob: -5.900317668914795
    6. ')' → logprob: -6.400317668914795
    7. 'list' → logprob: -6.525317668914795
    8. '))' → logprob: -6.650317668914795
    9. 'input' → logprob: -6.900317668914795
    10. ' range' → logprob: -7.025317668914795

Token 485: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015878688544034958
    2. ')))' → logprob: -4.265878677368164
    3. ')' → logprob: -6.390878677368164
    4. '))
' → logprob: -10.890878677368164
    5. '[' → logprob: -12.140878677368164
    6. '))))' → logprob: -12.390878677368164
    7. ']))' → logprob: -13.640878677368164
    8. '   ' → logprob: -13.640878677368164
    9. ' ))' → logprob: -13.765878677368164
    10. '),' → logprob: -13.890878677368164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 483
Tokens correctement prédits (1ère position, stricte): 206
Tokens correctement prédits (1ère position, avec adaptation): 209
Tokens correctement prédits (top 10): 397
Précision stricte (1ère position): 42.65%
Précision adaptée (1ère position): 43.27%
Précision (top 10): 82.19%
================================================================================
