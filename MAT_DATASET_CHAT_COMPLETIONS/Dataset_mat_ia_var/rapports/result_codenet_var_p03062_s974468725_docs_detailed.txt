================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_max_sum_with_sign_adjustment():
    """
    Reads the size and elements of an integer list from standard input, then calculates the maximum possible
    sum of absolute values of the elements. If any number is zero or the count of negative numbers is even,
    the absolute sum is the answer. If the count of negative numbers is odd and there is no zero in the 
    list, the sum is reduced by twice the smallest absolute value.

    This adjustment handles the case where signs can be flipped to maximize the sum, optimally flipping the
    sign of the smallest absolute value in case of an odd count of negatives and absence of zeros.

    No parameters or return. Result is printed directly.
    """
    # Read the number of elements in the list
    n = int(input())
    # Read the list of integers
    a = list(map(int, input().split()))
    
    # Initialize the accumulator for the absolute sum
    ans = 0
    # Counter for the number of negative numbers
    c = 0
    # Track the smallest absolute value in the list
    tmp_m = 10**9
    # Flag to mark if zero exists in the list
    zero = False

    # Iterate through each element to gather necessary information
    for i in range(n):
        # If the number is negative, increment the counter
        if a[i] < 0:
            c += 1
        # If the number is zero, turn on the zero flag
        elif a[i] == 0:
            zero = True
        # Take the absolute value of the current element
        tmp = abs(a[i])
        # Add the absolute value to the running total
        ans += tmp
        # Update the minimum absolute value found so far
        tmp_m = min(tmp_m, tmp)
    
    # If there's any zero in the list, the total sum is already maximal
    if zero:
        print(ans)
    else:
        # If the count of negative numbers is even, the total sum is already maximal
        if c % 2 == 0:
            print(ans)
        else:
            # If the count of negative numbers is odd, subtract twice the smallest absolute value
            # to flip its sign and maximize the sum
            print(ans - tmp_m * 2)

# Call the function to execute the logic
calculate_max_sum_with_sign_adjustment()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_max' (ID: 13731)
  → Token d'amorce (pas de prédiction)

Token 3: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004167297447565943
    2. '```' → logprob: -9.25041675567627
    3. '_value' → logprob: -9.37541675567627
    4. '_length' → logprob: -10.12541675567627
    5. '_max' → logprob: -10.37541675567627
    6. '(_' → logprob: -10.37541675567627
    7. 'imum' → logprob: -11.12541675567627
    8. ' _' → logprob: -11.12541675567627
    9. '_return' → logprob: -11.37541675567627
    10. '\' → logprob: -11.75041675567627

Token 4: '_with' (ID: 14161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11372803151607513
    2. '_' → logprob: -2.2387280464172363
    3. ' (' → logprob: -8.113727569580078
    4. '(_' → logprob: -8.363727569580078
    5. '```' → logprob: -9.113727569580078
    6. '__' → logprob: -10.363727569580078
    7. '<|end|>' → logprob: -10.863727569580078
    8. '[' → logprob: -10.988727569580078
    9. '(user' → logprob: -11.363727569580078
    10. '(_:' → logprob: -11.363727569580078

Token 5: '_sign' (ID: 24730)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7202557325363159
    2. '_sub' → logprob: -1.345255732536316
    3. '_' → logprob: -3.0952558517456055
    4. '_suffix' → logprob: -3.2202558517456055
    5. 'in' → logprob: -3.4702558517456055
    6. '_subset' → logprob: -3.9702558517456055
    7. '_k' → logprob: -4.2202558517456055
    8. '_constraints' → logprob: -4.3452558517456055
    9. '_two' → logprob: -4.7202558517456055
    10. '_cont' → logprob: -4.8452558517456055

Token 6: '_adjust' (ID: 109618)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7696678638458252
    2. 's' → logprob: -0.7696678638458252
    3. '_' → logprob: -3.269667863845825
    4. 'ificant' → logprob: -4.269667625427246
    5. 'ature' → logprob: -4.769667625427246
    6. 'atures' → logprob: -5.644667625427246
    7. '_s' → logprob: -6.019667625427246
    8. 'ificance' → logprob: -6.644667625427246
    9. '```' → logprob: -6.644667625427246
    10. '(_' → logprob: -7.269667625427246

Token 7: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.7198376059532166
    2. '(' → logprob: -1.5948376655578613
    3. '_' → logprob: -1.5948376655578613
    4. 'ation' → logprob: -3.0948376655578613
    5. 'ments' → logprob: -4.344837665557861
    6. '```' → logprob: -4.469837665557861
    7. 'def' → logprob: -5.719837665557861
    8. '(_' → logprob: -5.719837665557861
    9. '_(' → logprob: -5.719837665557861
    10. '(a' → logprob: -5.969837665557861

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003914899658411741
    2. '_' → logprob: -5.878914833068848
    3. '(:' → logprob: -8.128914833068848
    4. '(_:' → logprob: -8.253914833068848
    5. '():' → logprob: -8.878914833068848
    6. '(_' → logprob: -9.003914833068848
    7. '```' → logprob: -9.253914833068848
    8. '_:' → logprob: -9.628914833068848
    9. '_(' → logprob: -10.753914833068848
    10. ' (' → logprob: -10.878914833068848

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.682817816734314
    2. '\' → logprob: -1.682817816734314
    3. '```' → logprob: -2.3078179359436035
    4. ':' → logprob: -2.4328179359436035
    5. '\n' → logprob: -3.3078179359436035
    6. '(' → logprob: -3.6828179359436035
    7. '    
' → logprob: -3.8078179359436035
    8. '
' → logprob: -5.1828179359436035
    9. ' 
' → logprob: -5.1828179359436035
    10. ':
' → logprob: -5.3078179359436035

Token 10: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.016273856163025
    2. '   ' → logprob: -1.266273856163025
    3. '```' → logprob: -2.3912739753723145
    4. '_' → logprob: -2.5162739753723145
    5. '    ' → logprob: -3.2662739753723145
    6. '\' → logprob: -3.5162739753723145
    7. 'n' → logprob: -3.6412739753723145
    8. 'a' → logprob: -4.1412739753723145
    9. 'i' → logprob: -4.6412739753723145
    10. ' 
' → logprob: -4.7662739753723145

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7259917259216309
    2. 'Calculate' → logprob: -0.8509917259216309
    3. '   ' → logprob: -3.600991725921631
    4. 'Calcul' → logprob: -3.975991725921631
    5. ' """' → logprob: -4.725991725921631
    6. ' Calculate' → logprob: -4.975991725921631
    7. ''''' → logprob: -5.225991725921631
    8. 'Returns' → logprob: -5.475991725921631
    9. '""' → logprob: -5.600991725921631
    10. 'Find' → logprob: -5.975991725921631

Token 12: ' Reads' (ID: 88839)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.25291648507118225
    2. '"""' → logprob: -1.8779164552688599
    3. 'Calcul' → logprob: -3.3779165744781494
    4. 'Find' → logprob: -3.8779165744781494
    5. 'Returns' → logprob: -5.50291633605957
    6. '   ' → logprob: -6.00291633605957
    7. 'Determine' → logprob: -6.62791633605957
    8. 'Return' → logprob: -6.87791633605957
    9. 'Optimize' → logprob: -7.00291633605957
    10. ' Calculate' → logprob: -7.00291633605957

Token 13: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1951651573181152
    2. ' a' → logprob: -1.3201651573181152
    3. ' the' → logprob: -1.8201651573181152
    4. ' lines' → logprob: -2.8201651573181152
    5. '   ' → logprob: -3.1951651573181152
    6. ' an' → logprob: -3.4451651573181152
    7. ' )' → logprob: -3.4451651573181152
    8. 'input' → logprob: -3.6951651573181152
    9. ' data' → logprob: -3.9451651573181152
    10. 's' → logprob: -4.820165157318115

Token 14: ' size' (ID: 2349)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.470071941614151
    2. ' matrix' → logprob: -2.220072031021118
    3. ' numbers' → logprob: -2.720072031021118
    4. ' input' → logprob: -2.970072031021118
    5. 'array' → logprob: -3.095072031021118
    6. ' list' → logprob: -3.345072031021118
    7. ' values' → logprob: -4.845071792602539
    8. 'numbers' → logprob: -4.845071792602539
    9. 'input' → logprob: -5.345071792602539
    10. ' sequence' → logprob: -5.470071792602539

Token 15: ' and' (ID: 326)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.28041186928749084
    2. '   ' → logprob: -1.7804118394851685
    3. '_' → logprob: -4.155411720275879
    4. '(' → logprob: -4.280411720275879
    5. ' ' → logprob: -4.780411720275879
    6. '```' → logprob: -4.905411720275879
    7. ' and' → logprob: -5.030411720275879
    8. '    ' → logprob: -5.280411720275879
    9. 'of' → logprob: -5.280411720275879
    10. '_of' → logprob: -6.030411720275879

Token 16: ' elements' (ID: 8632)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.2630545496940613
    2. ' the' → logprob: -2.388054609298706
    3. ' list' → logprob: -3.263054609298706
    4. ' values' → logprob: -3.388054609298706
    5. 'array' → logprob: -3.888054609298706
    6. ' elements' → logprob: -4.263054370880127
    7. ' lists' → logprob: -5.263054370880127
    8. ' sequence' → logprob: -5.263054370880127
    9. ' numbers' → logprob: -5.263054370880127
    10. 'the' → logprob: -5.763054370880127

Token 17: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12426556646823883
    2. '```' → logprob: -2.874265670776367
    3. '   ' → logprob: -2.999265670776367
    4. '    ' → logprob: -6.499265670776367
    5. ' ' → logprob: -6.499265670776367
    6. '\' → logprob: -6.749265670776367
    7. '\n' → logprob: -6.999265670776367
    8. '`' → logprob: -7.124265670776367
    9. ')' → logprob: -7.374265670776367
    10. 's' → logprob: -7.874265670776367

Token 18: ' an' (ID: 448)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2813636064529419
    2. ' a' → logprob: -2.2813634872436523
    3. 'the' → logprob: -2.7813634872436523
    4. ' an' → logprob: -2.9063634872436523
    5. 'a' → logprob: -3.7813634872436523
    6. 'an' → logprob: -6.281363487243652
    7. '   ' → logprob: -6.656363487243652
    8. ' array' → logprob: -8.531363487243652
    9. ' list' → logprob: -9.406363487243652
    10. 'array' → logprob: -9.406363487243652

Token 19: ' integer' (ID: 16336)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.16582360863685608
    2. 'array' → logprob: -1.9158235788345337
    3. ' integer' → logprob: -5.790823459625244
    4. ' list' → logprob: -6.415823459625244
    5. 'integer' → logprob: -7.665823459625244
    6. 'list' → logprob: -8.665823936462402
    7. '   ' → logprob: -9.040823936462402
    8. ' input' → logprob: -10.415823936462402
    9. ' ' → logprob: -10.665823936462402
    10. 'arr' → logprob: -11.040823936462402

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20451536774635315
    2. ' array' → logprob: -1.7045153379440308
    3. 'array' → logprob: -6.70451545715332
    4. '_list' → logprob: -7.32951545715332
    5. 'list' → logprob: -7.45451545715332
    6. 's' → logprob: -8.45451545715332
    7. '   ' → logprob: -8.45451545715332
    8. ' sequence' → logprob: -8.95451545715332
    9. '```' → logprob: -10.95451545715332
    10. ' ' → logprob: -11.20451545715332

Token 21: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3552262783050537
    2. ',' → logprob: -2.2302262783050537
    3. '\n' → logprob: -3.2302262783050537
    4. '```' → logprob: -3.2302262783050537
    5. '    
' → logprob: -3.9802262783050537
    6. ' from' → logprob: -3.9802262783050537
    7. ')' → logprob: -3.9802262783050537
    8. '
' → logprob: -3.9802262783050537
    9. ' and' → logprob: -4.355226516723633
    10. '<|end|>' → logprob: -5.730226516723633

Token 22: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11285052448511124
    2. ' the' → logprob: -2.3628504276275635
    3. 'input' → logprob: -4.612850666046143
    4. 'the' → logprob: -6.362850666046143
    5. ' a' → logprob: -7.612850666046143
    6. ' user' → logprob: -7.987850666046143
    7. ' standard' → logprob: -10.987850189208984
    8. ' an' → logprob: -11.237850189208984
    9. ' stdin' → logprob: -11.237850189208984
    10. 'stdin' → logprob: -11.362850189208984

Token 23: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0013276183744892478
    2. 'input' → logprob: -6.6263275146484375
    3. '_input' → logprob: -13.501327514648438
    4. '```' → logprob: -16.001327514648438
    5. '=input' → logprob: -16.626327514648438
    6. '(input' → logprob: -17.751327514648438
    7. '-input' → logprob: -17.876327514648438
    8. ' inputs' → logprob: -18.376327514648438
    9. '_' → logprob: -18.501327514648438
    10. ')' → logprob: -18.501327514648438

Token 24: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06209854409098625
    2. ',' → logprob: -2.937098503112793
    3. '    
' → logprob: -5.687098503112793
    4. '```' → logprob: -7.062098503112793
    5. '\n' → logprob: -7.187098503112793
    6. '
' → logprob: -7.812098503112793
    7. '.' → logprob: -7.937098503112793
    8. ',
' → logprob: -8.062098503112793
    9. ' and' → logprob: -8.062098503112793
    10. ' ,' → logprob: -8.187098503112793

Token 25: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21712970733642578
    2. ' and' → logprob: -2.342129707336426
    3. ' then' → logprob: -2.467129707336426
    4. '    ' → logprob: -5.092129707336426
    5. ' returns' → logprob: -6.592129707336426
    6. ' ' → logprob: -6.842129707336426
    7. ' calculates' → logprob: -6.967129707336426
    8. ' processes' → logprob: -7.217129707336426
    9. ' a' → logprob: -7.342129707336426
    10. ',' → logprob: -7.717129707336426

Token 26: ' calculates' (ID: 101920)
  Prédit: ' calculates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.16569048166275024
    2. ' finds' → logprob: -2.6656904220581055
    3. ' computes' → logprob: -3.5406904220581055
    4. ' processes' → logprob: -4.0406904220581055
    5. '   ' → logprob: -4.0406904220581055
    6. ' returns' → logprob: -4.1656904220581055
    7. ' adjusts' → logprob: -7.4156904220581055
    8. ' continues' → logprob: -7.7906904220581055
    9. ' maxim' → logprob: -8.165690422058105
    10. ' applies' → logprob: -8.415690422058105

Token 27: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03957431763410568
    2. 'the' → logprob: -3.539574384689331
    3. '```' → logprob: -5.164574146270752
    4. '   ' → logprob: -6.664574146270752
    5. '_' → logprob: -7.414574146270752
    6. '<|end|>' → logprob: -7.789574146270752
    7. ' and' → logprob: -7.914574146270752
    8. '`' → logprob: -8.16457462310791
    9. ' a' → logprob: -8.41457462310791
    10. ' ' → logprob: -8.66457462310791

Token 28: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.04841531068086624
    2. ' maximal' → logprob: -3.548415422439575
    3. 'maximum' → logprob: -4.673415184020996
    4. ' max' → logprob: -5.798415184020996
    5. ' total' → logprob: -6.423415184020996
    6. 'max' → logprob: -6.548415184020996
    7. ' largest' → logprob: -6.798415184020996
    8. ' sum' → logprob: -7.673415184020996
    9. ' possible' → logprob: -7.923415184020996
    10. ' ' → logprob: -8.173415184020996

Token 29: ' possible' (ID: 4149)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28789523243904114
    2. ' ' → logprob: -1.7878952026367188
    3. ' possible' → logprob: -3.4128952026367188
    4. ' _' → logprob: -4.037895202636719
    5. 'possible' → logprob: -4.287895202636719
    6. '_possible' → logprob: -4.287895202636719
    7. ' )' → logprob: -7.037895202636719
    8. ')' → logprob: -7.287895202636719
    9. '_sum' → logprob: -7.787895202636719
    10. ' sum' → logprob: -8.037895202636719

Token 30: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25101742148399353
    2. ' ' → logprob: -1.626017451286316
    3. ' sum' → logprob: -4.2510175704956055
    4. '_sum' → logprob: -5.2510175704956055
    5. ' _' → logprob: -5.5010175704956055
    6. 'sum' → logprob: -8.251017570495605
    7. ' value' → logprob: -8.376017570495605
    8. ' return' → logprob: -8.876017570495605
    9. ' result' → logprob: -8.876017570495605
    10. '  ' → logprob: -9.126017570495605

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9170655608177185
    2. ' sum' → logprob: -1.6670656204223633
    3. '_' → logprob: -2.4170656204223633
    4. ' def' → logprob: -2.9170656204223633
    5. ' possible' → logprob: -3.0420656204223633
    6. ' value' → logprob: -3.4170656204223633
    7. '<|end|>' → logprob: -3.4170656204223633
    8. ' return' → logprob: -3.6670656204223633
    9. 'def' → logprob: -4.042065620422363
    10. ' )' → logprob: -4.167065620422363

Token 32: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.050236426293849945
    2. ' result' → logprob: -4.175236225128174
    3. ' value' → logprob: -4.425236225128174
    4. ' total' → logprob: -5.175236225128174
    5. ' return' → logprob: -5.425236225128174
    6. ' possible' → logprob: -5.675236225128174
    7. ' ' → logprob: -6.300236225128174
    8. 'sum' (adapté à ' sum') → logprob: -6.425236225128174
    9. ' number' → logprob: -6.550236225128174
    10. '_sum' → logprob: -7.175236225128174

Token 33: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42898085713386536
    2. ' by' → logprob: -1.928980827331543
    3. ' of' → logprob: -2.803980827331543
    4. ' that' → logprob: -2.928980827331543
    5. '```' → logprob: -3.553980827331543
    6. '_possible' → logprob: -4.428980827331543
    7. ' with' → logprob: -4.803980827331543
    8. '_' → logprob: -4.928980827331543
    9. ' possible' → logprob: -5.053980827331543
    10. '()' → logprob: -5.428980827331543

Token 34: ' absolute' (ID: 17786)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10402794182300568
    2. 'the' → logprob: -2.3540279865264893
    3. ' elements' → logprob: -5.97902774810791
    4. ' list' → logprob: -7.85402774810791
    5. ' a' → logprob: -8.35402774810791
    6. '```' → logprob: -8.85402774810791
    7. 'elements' → logprob: -8.97902774810791
    8. 'a' → logprob: -9.10402774810791
    9. ' all' → logprob: -9.22902774810791
    10. ' array' → logprob: -10.72902774810791

Token 35: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.1870621144771576
    2. '_' → logprob: -2.4370620250701904
    3. ' value' → logprob: -3.4370620250701904
    4. '_value' → logprob: -3.8120620250701904
    5. 'values' → logprob: -4.4370622634887695
    6. '_values' → logprob: -5.3120622634887695
    7. 'value' → logprob: -5.3120622634887695
    8. '(' → logprob: -6.0620622634887695
    9. 's' → logprob: -6.1870622634887695
    10. ' _' → logprob: -6.6870622634887695

Token 36: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.326947420835495
    2. ' that' → logprob: -2.5769474506378174
    3. ' by' → logprob: -2.9519474506378174
    4. ' after' → logprob: -2.9519474506378174
    5. '_' → logprob: -3.5769474506378174
    6. ')' → logprob: -4.326947212219238
    7. '(' → logprob: -4.326947212219238
    8. ' with' → logprob: -5.076947212219238
    9. '()' → logprob: -5.201947212219238
    10. ' ' → logprob: -5.201947212219238

Token 37: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10479909181594849
    2. 'the' → logprob: -2.4797990322113037
    3. ' elements' → logprob: -4.479799270629883
    4. ' all' → logprob: -6.479799270629883
    5. 'elements' → logprob: -6.979799270629883
    6. ' list' → logprob: -7.604799270629883
    7. ' each' → logprob: -7.729799270629883
    8. 'all' → logprob: -8.229799270629883
    9. '```' → logprob: -9.229799270629883
    10. 'a' → logprob: -9.229799270629883

Token 38: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.5325886011123657
    2. ' list' → logprob: -1.7825886011123657
    3. ' given' → logprob: -2.407588481903076
    4. 'elements' → logprob: -2.782588481903076
    5. ' numbers' → logprob: -3.282588481903076
    6. ' array' → logprob: -3.657588481903076
    7. ' integers' → logprob: -4.782588481903076
    8. 'numbers' → logprob: -5.157588481903076
    9. 'list' → logprob: -5.532588481903076
    10. ' input' → logprob: -5.782588481903076

Token 39: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0921541377902031
    2. '```' → logprob: -3.342154026031494
    3. ',' → logprob: -3.842154026031494
    4. 'def' → logprob: -4.342154026031494
    5. '\n' → logprob: -4.967154026031494
    6. '
' → logprob: -5.842154026031494
    7. '    
' → logprob: -6.342154026031494
    8. '_' → logprob: -6.592154026031494
    9. ':' → logprob: -6.717154026031494
    10. '\' → logprob: -6.717154026031494

Token 40: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28861725330352783
    2. '\n' → logprob: -2.0386171340942383
    3. '```' → logprob: -2.2886171340942383
    4. '"""
' → logprob: -5.038617134094238
    5. '    
' → logprob: -5.538617134094238
    6. '
' → logprob: -5.663617134094238
    7. '\' → logprob: -5.788617134094238
    8. '``' → logprob: -7.913617134094238
    9. '"""' → logprob: -7.913617134094238
    10. '`' → logprob: -8.038617134094238

Token 41: ' any' (ID: 1062)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5155900716781616
    2. ' there' → logprob: -1.3905900716781616
    3. ' any' → logprob: -2.265590190887451
    4. ' the' → logprob: -3.140590190887451
    5. ' a' → logprob: -6.265590190887451
    6. 'there' → logprob: -6.515590190887451
    7. 'all' → logprob: -7.265590190887451
    8. 'the' → logprob: -7.765590190887451
    9. ' len' → logprob: -7.765590190887451
    10. ' there's' → logprob: -8.015589714050293

Token 42: ' number' (ID: 2086)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.05389609932899475
    2. 'element' → logprob: -3.803896188735962
    3. ' of' → logprob: -4.678895950317383
    4. ' negative' → logprob: -4.928895950317383
    5. ' number' → logprob: -5.053895950317383
    6. ' elements' → logprob: -6.428895950317383
    7. 'negative' → logprob: -6.428895950317383
    8. ' ' → logprob: -7.303895950317383
    9. ' space' → logprob: -7.928895950317383
    10. ' integer' → logprob: -8.178895950317383

Token 43: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.044511619955301285
    2. ' in' → logprob: -3.294511556625366
    3. ' remains' → logprob: -6.169511795043945
    4. 'is' → logprob: -6.544511795043945
    5. ' has' → logprob: -7.044511795043945
    6. 's' → logprob: -7.794511795043945
    7. '```' → logprob: -8.044511795043945
    8. 'in' → logprob: -8.044511795043945
    9. ' with' → logprob: -8.169511795043945
    10. '   ' → logprob: -8.794511795043945

Token 44: ' zero' (ID: 12421)
  Prédit: ' negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -0.26590707898139954
    2. 'negative' → logprob: -1.5159070491790771
    3. ' zero' → logprob: -4.640907287597656
    4. '_negative' → logprob: -6.640907287597656
    5. '0' → logprob: -7.515907287597656
    6. '<|end|>' → logprob: -7.640907287597656
    7. 'zero' → logprob: -7.765907287597656
    8. '```' → logprob: -8.265907287597656
    9. '-negative' → logprob: -8.515907287597656
    10. ' positive' → logprob: -8.640907287597656

Token 45: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10255298763513565
    2. ' or' → logprob: -2.352552890777588
    3. ' ,' → logprob: -6.727552890777588
    4. '   ' → logprob: -7.477552890777588
    5. 'or' → logprob: -8.102553367614746
    6. ':' → logprob: -9.602553367614746
    7. ',
' → logprob: -9.727553367614746
    8. '```' → logprob: -10.477553367614746
    9. ',\' → logprob: -10.727553367614746
    10. '\n' → logprob: -11.602553367614746

Token 46: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.24508947134017944
    2. ' if' → logprob: -1.9950895309448242
    3. ' positive' → logprob: -3.370089530944824
    4. 'all' → logprob: -4.495089530944824
    5. ' there' → logprob: -4.495089530944824
    6. ' the' → logprob: -5.495089530944824
    7. 'if' → logprob: -5.620089530944824
    8. ' any' → logprob: -5.745089530944824
    9. 'positive' → logprob: -5.745089530944824
    10. ' no' → logprob: -5.995089530944824

Token 47: ' count' (ID: 3605)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.48398932814598083
    2. ' entire' → logprob: -2.2339892387390137
    3. ' sum' → logprob: -2.8589892387390137
    4. ' input' → logprob: -3.1089892387390137
    5. ' numbers' → logprob: -3.8589892387390137
    6. ' rest' → logprob: -3.9839892387390137
    7. ' number' → logprob: -3.9839892387390137
    8. 're' → logprob: -4.483989238739014
    9. ' elements' → logprob: -4.483989238739014
    10. ' array' → logprob: -4.733989238739014

Token 48: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0845470279455185
    2. ' ' → logprob: -2.9595470428466797
    3. '<|end|>' → logprob: -4.58454704284668
    4. 'of' → logprob: -5.45954704284668
    5. '    ' → logprob: -5.45954704284668
    6. '   ' → logprob: -5.95954704284668
    7. '  ' → logprob: -6.45954704284668
    8. ')' → logprob: -6.45954704284668
    9. '_of' → logprob: -7.45954704284668
    10. '<|end|>' → logprob: -7.45954704284668

Token 49: ' negative' (ID: 12626)
  Prédit: ' negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -0.04513975605368614
    2. 'negative' → logprob: -3.170139789581299
    3. ' negatives' → logprob: -7.045139789581299
    4. '-' → logprob: -7.795139789581299
    5. '-negative' → logprob: -8.54513931274414
    6. ' positive' → logprob: -8.67013931274414
    7. ' the' → logprob: -9.17013931274414
    8. '_negative' → logprob: -9.42013931274414
    9. 'neg' → logprob: -9.54513931274414
    10. '```' → logprob: -9.67013931274414

Token 50: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.3660268187522888
    2. '<|end|>' → logprob: -1.8660268783569336
    3. 's' → logprob: -2.7410268783569336
    4. 'numbers' → logprob: -2.8660268783569336
    5. '<|end|>' → logprob: -4.241026878356934
    6. ' ' → logprob: -5.491026878356934
    7. '_numbers' → logprob: -5.491026878356934
    8. ' elements' → logprob: -5.991026878356934
    9. '_' → logprob: -7.366026878356934
    10. ' integers' → logprob: -7.616026878356934

Token 51: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0005099030095152557
    2. '<|end|>' → logprob: -8.500510215759277
    3. 'is' → logprob: -8.625510215759277
    4. ' in' → logprob: -10.625510215759277
    5. ' exceeds' → logprob: -10.625510215759277
    6. '<|end|>' → logprob: -10.875510215759277
    7. ' remains' → logprob: -11.500510215759277
    8. ')' → logprob: -11.625510215759277
    9. ' continues' → logprob: -11.875510215759277
    10. ' does' → logprob: -12.000510215759277

Token 52: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.2559907138347626
    2. 'even' → logprob: -1.505990743637085
    3. ' odd' → logprob: -5.630990505218506
    4. 'odd' → logprob: -8.005990982055664
    5. '_even' → logprob: -9.630990982055664
    6. ' an' → logprob: -10.130990982055664
    7. 'Even' → logprob: -11.755990982055664
    8. ' ' → logprob: -12.005990982055664
    9. '<|end|>' → logprob: -12.755990982055664
    10. 'an' → logprob: -12.755990982055664

Token 53: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041055820882320404
    2. ' ,' → logprob: -3.291055917739868
    3. ':' → logprob: -6.416055679321289
    4. ',
' → logprob: -7.791055679321289
    5. '   ' → logprob: -7.916055679321289
    6. ' :' → logprob: -8.041055679321289
    7. '```' → logprob: -9.041055679321289
    8. '<|end|>' → logprob: -9.916055679321289
    9. ',:' → logprob: -11.041055679321289
    10. '.' → logprob: -11.291055679321289

Token 54: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7124402523040771
    2. '   ' → logprob: -0.8374402523040771
    3. ' ' → logprob: -2.962440252304077
    4. '       ' → logprob: -4.962440490722656
    5. '     ' → logprob: -5.587440490722656
    6. ':' → logprob: -5.712440490722656
    7. ',' → logprob: -6.462440490722656
    8. ')' → logprob: -6.587440490722656
    9. ' ,' → logprob: -6.837440490722656
    10. '```' → logprob: -6.837440490722656

Token 55: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10705149918794632
    2. '    ' → logprob: -2.4820516109466553
    3. '       ' → logprob: -4.482051372528076
    4. ' return' → logprob: -5.732051372528076
    5. ' ' → logprob: -6.732051372528076
    6. '     ' → logprob: -8.232051849365234
    7. '```' → logprob: -8.232051849365234
    8. '  ' → logprob: -8.482051849365234
    9. ' returns' → logprob: -8.482051849365234
    10. ':' → logprob: -8.607051849365234

Token 56: ' absolute' (ID: 17786)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.23417511582374573
    2. ' maximum' → logprob: -2.484175205230713
    3. ' ' → logprob: -3.484175205230713
    4. 'n' → logprob: -4.109175205230713
    5. ' return' → logprob: -4.484175205230713
    6. ' n' → logprob: -4.609175205230713
    7. ' max' → logprob: -4.609175205230713
    8. ' sum' → logprob: -4.609175205230713
    9. ' next' → logprob: -4.984175205230713
    10. ' function' → logprob: -5.359175205230713

Token 57: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0091794729232788
    2. ' value' → logprob: -1.1341794729232788
    3. ' ' → logprob: -1.6341794729232788
    4. '_value' → logprob: -3.5091795921325684
    5. ' _' → logprob: -3.6341795921325684
    6. ' values' → logprob: -4.009179592132568
    7. 'value' → logprob: -4.009179592132568
    8. '   ' → logprob: -4.884179592132568
    9. '<|end|>' → logprob: -5.509179592132568
    10. 's' → logprob: -5.634179592132568

Token 58: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.22546504437923431
    2. '   ' → logprob: -1.9754650592803955
    3. ' is' → logprob: -3.4754650592803955
    4. ' ' → logprob: -4.225464820861816
    5. ' will' → logprob: -5.725464820861816
    6. ' remains' → logprob: -5.850464820861816
    7. ' could' → logprob: -6.475464820861816
    8. 'can' → logprob: -6.600464820861816
    9. '```' → logprob: -7.100464820861816
    10. '<|end|>' → logprob: -7.100464820861816

Token 59: ' the' (ID: 290)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.685556948184967
    2. ' returned' → logprob: -1.1855568885803223
    3. '   ' → logprob: -2.4355568885803223
    4. ' ' → logprob: -2.8105568885803223
    5. ' return' → logprob: -3.9355568885803223
    6. ' equal' → logprob: -5.435556888580322
    7. ' possible' → logprob: -5.435556888580322
    8. ' taken' → logprob: -5.935556888580322
    9. '     ' → logprob: -6.310556888580322
    10. ' guaranteed' → logprob: -6.310556888580322

Token 60: ' answer' (ID: 6052)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.24292072653770447
    2. ' entire' → logprob: -1.7429207563400269
    3. ' whole' → logprob: -4.367920875549316
    4. ' sum' → logprob: -4.617920875549316
    5. ' full' → logprob: -5.242920875549316
    6. ' ' → logprob: -5.492920875549316
    7. 'same' → logprob: -5.617920875549316
    8. ' total' → logprob: -6.242920875549316
    9. ' complete' → logprob: -6.992920875549316
    10. ' current' → logprob: -7.492920875549316

Token 61: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024630308151245117
    2. ':' → logprob: -4.274630546569824
    3. '.' → logprob: -5.524630546569824
    4. '```' → logprob: -6.024630546569824
    5. '
' → logprob: -6.399630546569824
    6. '\n' → logprob: -7.274630546569824
    7. ',' → logprob: -7.774630546569824
    8. '    
' → logprob: -8.399630546569824
    9. ':
' → logprob: -8.649630546569824
    10. 'def' → logprob: -8.899630546569824

Token 62: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012976066500414163
    2. 'def' → logprob: -9.625129699707031
    3. '```' → logprob: -10.375129699707031
    4. '       ' → logprob: -11.125129699707031
    5. '"""' → logprob: -12.250129699707031
    6. '    
' → logprob: -12.625129699707031
    7. 'Otherwise' → logprob: -12.625129699707031
    8. '    ' → logprob: -13.625129699707031
    9. 'If' → logprob: -13.625129699707031
    10. '
' → logprob: -14.000129699707031

Token 63: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06777141243219376
    2. 'the' → logprob: -2.9427714347839355
    3. ' there' → logprob: -4.4427714347839355
    4. '   ' → logprob: -7.5677714347839355
    5. 'there' → logprob: -8.192770957946777
    6. ' all' → logprob: -9.067770957946777
    7. ' there's' → logprob: -9.817770957946777
    8. '    ' → logprob: -10.942770957946777
    9. ' ' → logprob: -11.192770957946777
    10. '  ' → logprob: -11.817770957946777

Token 64: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.49162954092025757
    2. 'count' → logprob: -0.9916295409202576
    3. ' number' → logprob: -4.491629600524902
    4. '   ' → logprob: -5.616629600524902
    5. 'number' → logprob: -6.241629600524902
    6. ' ' → logprob: -8.366629600524902
    7. '  ' → logprob: -9.366629600524902
    8. 'n' → logprob: -9.741629600524902
    9. '	count' → logprob: -10.491629600524902
    10. 'negative' → logprob: -10.491629600524902

Token 65: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.041787467896938324
    2. '   ' → logprob: -3.5417873859405518
    3. 'of' → logprob: -4.541787624359131
    4. '	of' → logprob: -7.916787624359131
    5. '    ' → logprob: -8.291787147521973
    6. '_of' → logprob: -8.791787147521973
    7. '  ' → logprob: -9.416787147521973
    8. '_' → logprob: -9.541787147521973
    9. '<|end|>' → logprob: -9.666787147521973
    10. ' is' → logprob: -9.791787147521973

Token 66: ' negative' (ID: 12626)
  Prédit: ' negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -0.22671610116958618
    2. 'negative' → logprob: -1.6017160415649414
    3. ' negatives' → logprob: -7.851716041564941
    4. ' the' → logprob: -8.101716041564941
    5. '_negative' → logprob: -8.351716041564941
    6. 'the' → logprob: -8.601716041564941
    7. '-negative' → logprob: -9.726716041564941
    8. 'neg' → logprob: -10.226716041564941
    9. ' ' → logprob: -10.351716041564941
    10. ' negativos' → logprob: -11.476716041564941

Token 67: ' numbers' (ID: 8663)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6454113721847534
    2. ' numbers' → logprob: -0.8954113721847534
    3. ' ' → logprob: -4.145411491394043
    4. '<|end|>' → logprob: -4.145411491394043
    5. '_numbers' → logprob: -4.520411491394043
    6. ' s' → logprob: -4.520411491394043
    7. 'numbers' → logprob: -5.020411491394043
    8. '_' → logprob: -6.770411491394043
    9. '_negative' → logprob: -7.395411491394043
    10. '<|end|>' → logprob: -7.520411491394043

Token 68: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011155818589031696
    2. 'is' → logprob: -4.511155605316162
    3. '>' → logprob: -10.26115608215332
    4. '<|end|>' → logprob: -10.76115608215332
    5. ' ' → logprob: -11.01115608215332
    6. '   ' → logprob: -11.01115608215332
    7. '```' → logprob: -12.01115608215332
    8. '_is' → logprob: -12.63615608215332
    9. ')' → logprob: -13.38615608215332
    10. ' >' → logprob: -13.51115608215332

Token 69: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.6931657195091248
    2. 'odd' → logprob: -0.6931657195091248
    3. ' ' → logprob: -11.44316577911377
    4. '<|end|>' → logprob: -13.31816577911377
    5. 'an' → logprob: -13.69316577911377
    6. ' an' → logprob: -13.81816577911377
    7. '   ' → logprob: -14.06816577911377
    8. 'even' → logprob: -14.06816577911377
    9. '1' → logprob: -14.19316577911377
    10. '```' → logprob: -15.31816577911377

Token 70: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018558766692876816
    2. ' ,' → logprob: -4.018558979034424
    3. '   ' → logprob: -8.143558502197266
    4. ',
' → logprob: -9.518558502197266
    5. ':' → logprob: -11.768558502197266
    6. '```' → logprob: -12.393558502197266
    7. ' and' → logprob: -12.518558502197266
    8. '  ' → logprob: -12.893558502197266
    9. '<|end|>' → logprob: -13.018558502197266
    10. '    ' → logprob: -13.268558502197266

Token 71: ' there' (ID: 1354)
  Prédit: ' there'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.4849461317062378
    2. ' no' → logprob: -1.8599461317062378
    3. ' all' → logprob: -2.1099462509155273
    4. ' the' → logprob: -2.6099462509155273
    5. ' none' → logprob: -4.609946250915527
    6. ' there's' → logprob: -4.734946250915527
    7. 'there' → logprob: -4.734946250915527
    8. '   ' → logprob: -6.734946250915527
    9. 'the' → logprob: -6.734946250915527
    10. ' at' → logprob: -6.984946250915527

Token 72: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11109691858291626
    2. 'is' → logprob: -2.7360968589782715
    3. ''s' → logprob: -3.8610968589782715
    4. ' are' → logprob: -4.3610968589782715
    5. '   ' → logprob: -5.4860968589782715
    6. 'are' → logprob: -6.7360968589782715
    7. ' exists' → logprob: -7.6110968589782715
    8. '```' → logprob: -8.61109733581543
    9. ' isn't' → logprob: -8.73609733581543
    10. ' ' → logprob: -8.73609733581543

Token 73: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.002641890896484256
    2. ' at' → logprob: -6.627641677856445
    3. ' a' → logprob: -6.877641677856445
    4. 'no' → logprob: -8.252641677856445
    5. 'a' → logprob: -11.502641677856445
    6. ' an' → logprob: -11.877641677856445
    7. '	no' → logprob: -12.627641677856445
    8. ' more' → logprob: -13.877641677856445
    9. ' none' → logprob: -14.627641677856445
    10. ' only' → logprob: -14.627641677856445

Token 74: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.01148054376244545
    2. 'zero' → logprob: -4.761480331420898
    3. '0' → logprob: -6.011480331420898
    4. ' ' → logprob: -8.636480331420898
    5. '```' → logprob: -9.511480331420898
    6. '   ' → logprob: -9.761480331420898
    7. ' zeros' → logprob: -10.761480331420898
    8. ' ' → logprob: -11.261480331420898
    9. ' space' → logprob: -11.511480331420898
    10. '_zero' → logprob: -11.511480331420898

Token 75: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07306845486164093
    2. ' element' → logprob: -3.948068380355835
    3. '   ' → logprob: -4.198068618774414
    4. '```' → logprob: -4.823068618774414
    5. ':' → logprob: -5.073068618774414
    6. ' ' → logprob: -5.323068618774414
    7. ' ,' → logprob: -5.823068618774414
    8. 'element' → logprob: -5.948068618774414
    9. ' value' → logprob: -6.448068618774414
    10. ':
' → logprob: -6.698068618774414

Token 76: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03808830678462982
    2. 'the' → logprob: -3.288088321685791
    3. '```' → logprob: -10.288087844848633
    4. '   ' → logprob: -12.663087844848633
    5. ' numbers' → logprob: -13.163087844848633
    6. ' any' → logprob: -13.288087844848633
    7. ' input' → logprob: -13.663087844848633
    8. ' a' → logprob: -13.788087844848633
    9. ' elements' → logprob: -14.413087844848633
    10. 'a' → logprob: -14.413087844848633

Token 77: ' 
' (ID: 793)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6535047888755798
    2. 'list' → logprob: -0.7785047888755798
    3. 'array' → logprob: -4.653504848480225
    4. ' array' → logprob: -5.528504848480225
    5. 'input' → logprob: -5.653504848480225
    6. '   ' → logprob: -7.278504848480225
    7. 'lst' → logprob: -7.278504848480225
    8. ' input' → logprob: -7.403504848480225
    9. 'numbers' → logprob: -7.403504848480225
    10. 'arr' → logprob: -8.028504371643066

Token 78: '   ' (ID: 271)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15677869319915771
    2. 'list' → logprob: -2.0317788124084473
    3. ' rest' → logprob: -5.906778812408447
    4. ' input' → logprob: -6.031778812408447
    5. 'rest' → logprob: -6.156778812408447
    6. 'input' → logprob: -6.156778812408447
    7. '   ' → logprob: -6.656778812408447
    8. ' array' → logprob: -7.281778812408447
    9. ' remainder' → logprob: -7.406778812408447
    10. 'remaining' → logprob: -7.406778812408447

Token 79: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16345733404159546
    2. 'list' (adapté à ' list') → logprob: -1.9134573936462402
    3. ' array' → logprob: -7.28845739364624
    4. 'array' → logprob: -7.41345739364624
    5. ' input' → logprob: -7.66345739364624
    6. ' rest' → logprob: -7.66345739364624
    7. 'input' → logprob: -7.78845739364624
    8. '   ' → logprob: -8.788456916809082
    9. 'rest' → logprob: -8.788456916809082
    10. '```' → logprob: -9.413456916809082

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015716375783085823
    2. ',
' → logprob: -7.0015716552734375
    3. ' ,' → logprob: -7.6265716552734375
    4. ',the' → logprob: -9.751571655273438
    5. '`,' → logprob: -10.751571655273438
    6. '","' → logprob: -11.501571655273438
    7. '",' → logprob: -11.626571655273438
    8. ',a' → logprob: -11.626571655273438
    9. '   ' → logprob: -11.876571655273438
    10. '```' → logprob: -11.876571655273438

Token 81: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5459704995155334
    2. '    ' → logprob: -2.1709704399108887
    3. ' the' → logprob: -2.1709704399108887
    4. ' we' → logprob: -2.5459704399108887
    5. ' it' → logprob: -3.2959704399108887
    6. ' ' → logprob: -3.7959704399108887
    7. ' returns' → logprob: -4.170970439910889
    8. ' you' → logprob: -4.545970439910889
    9. ' a' → logprob: -5.295970439910889
    10. ' there' → logprob: -5.295970439910889

Token 82: ' sum' (ID: 4215)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.40372443199157715
    2. ' smallest' → logprob: -1.4037244319915771
    3. 'result' → logprob: -3.403724431991577
    4. ' code' → logprob: -4.278724670410156
    5. ' answer' → logprob: -4.528724670410156
    6. ' next' → logprob: -5.153724670410156
    7. ' minimum' → logprob: -5.403724670410156
    8. ' function' → logprob: -5.528724670410156
    9. 'minimum' → logprob: -5.653724670410156
    10. ' maximum' → logprob: -5.903724670410156

Token 83: ' is' (ID: 382)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' will' → logprob: -1.2738505601882935
    2. ' is' → logprob: -1.6488505601882935
    3. ' should' → logprob: -1.8988505601882935
    4. ' of' → logprob: -1.8988505601882935
    5. '   ' → logprob: -2.773850440979004
    6. ' can' → logprob: -3.023850440979004
    7. ' ' → logprob: -3.398850440979004
    8. '-' → logprob: -4.023850440979004
    9. ' would' → logprob: -4.148850440979004
    10. ' needs' → logprob: -4.273850440979004

Token 84: ' reduced' (ID: 17255)
  Prédit: ' reduced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduced' → logprob: -0.2086399793624878
    2. ' decreased' → logprob: -2.0836400985717773
    3. ' adjusted' → logprob: -2.8336400985717773
    4. ' ' → logprob: -6.208640098571777
    5. ' the' → logprob: -6.708640098571777
    6. '   ' → logprob: -7.583640098571777
    7. ' minus' → logprob: -8.333640098571777
    8. ' increased' → logprob: -8.583640098571777
    9. ' sub' → logprob: -9.333640098571777
    10. ' lowered' → logprob: -9.458640098571777

Token 85: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.026580682024359703
    2. 'by' → logprob: -3.651580572128296
    3. '   ' → logprob: -8.526580810546875
    4. ' ' → logprob: -10.276580810546875
    5. '    ' → logprob: -11.276580810546875
    6. ' of' → logprob: -11.401580810546875
    7. '```' → logprob: -12.026580810546875
    8. '_' → logprob: -12.276580810546875
    9. '<|end|>' → logprob: -12.401580810546875
    10. '  ' → logprob: -13.151580810546875

Token 86: ' twice' (ID: 18370)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12470551580190659
    2. '2' → logprob: -2.6247055530548096
    3. ' the' → logprob: -3.7497055530548096
    4. '"' → logprob: -4.9997053146362305
    5. '```' → logprob: -5.7497053146362305
    6. '`' → logprob: -6.2497053146362305
    7. 'the' → logprob: -6.3747053146362305
    8. '1' → logprob: -6.3747053146362305
    9. 'min' → logprob: -6.8747053146362305
    10. ' min' → logprob: -7.1247053146362305

Token 87: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03881673514842987
    2. 'the' → logprob: -3.2888166904449463
    3. ' ' → logprob: -7.788816928863525
    4. '<|end|>' → logprob: -8.788816452026367
    5. ' a' → logprob: -9.038816452026367
    6. '```' → logprob: -10.038816452026367
    7. ' of' → logprob: -11.538816452026367
    8. ' smallest' → logprob: -12.038816452026367
    9. '  ' → logprob: -12.038816452026367
    10. '<|end|>' → logprob: -12.788816452026367

Token 88: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.10378861427307129
    2. ' minimum' → logprob: -2.6037886142730713
    3. 'minimum' → logprob: -4.103788375854492
    4. ' minimal' → logprob: -5.103788375854492
    5. 'small' → logprob: -7.103788375854492
    6. ' absolute' → logprob: -7.978788375854492
    7. ' abs' → logprob: -7.978788375854492
    8. ' value' → logprob: -8.603788375854492
    9. 'abs' → logprob: -9.228788375854492
    10. 'minimal' → logprob: -9.478788375854492

Token 89: ' absolute' (ID: 17786)
  Prédit: ' absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absolute' → logprob: -0.690276563167572
    2. '_abs' → logprob: -1.9402766227722168
    3. ' ' → logprob: -2.315276622772217
    4. '_' → logprob: -2.315276622772217
    5. 'abs' → logprob: -3.190276622772217
    6. ' abs' → logprob: -3.565276622772217
    7. 'absolute' → logprob: -3.690276622772217
    8. '_absolute' → logprob: -3.940276622772217
    9. '```' → logprob: -4.065276622772217
    10. ' _' → logprob: -4.690276622772217

Token 90: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.2971389591693878
    2. '_value' → logprob: -2.2971389293670654
    3. '_' → logprob: -2.5471389293670654
    4. ' ' → logprob: -3.1721389293670654
    5. 'value' → logprob: -3.4221389293670654
    6. ' _' → logprob: -5.9221391677856445
    7. '(' → logprob: -7.6721391677856445
    8. '```' → logprob: -9.172139167785645
    9. '_val' → logprob: -9.547139167785645
    10. '-value' → logprob: -10.547139167785645

Token 91: '.

' (ID: 364)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8932594060897827
    2. '   ' → logprob: -1.2682594060897827
    3. '
' → logprob: -1.8932594060897827
    4. '\' → logprob: -2.2682595252990723
    5. ':' → logprob: -3.7682595252990723
    6. '```' → logprob: -5.143259525299072
    7. '    
' → logprob: -5.518259525299072
    8. '"\' → logprob: -5.768259525299072
    9. '    ' → logprob: -6.143259525299072
    10. ' 
' → logprob: -6.268259525299072

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19895534217357635
    2. '\n' → logprob: -2.9489552974700928
    3. '```' → logprob: -3.3239552974700928
    4. '\' → logprob: -3.5739552974700928
    5. '"' → logprob: -3.5739552974700928
    6. ' 
' → logprob: -4.698955535888672
    7. ' ' → logprob: -4.823955535888672
    8. '`' → logprob: -5.823955535888672
    9. '"""' → logprob: -5.823955535888672
    10. ')' → logprob: -6.073955535888672

Token 93: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025774970650672913
    2. '"""' → logprob: -3.9007749557495117
    3. '```' → logprob: -6.275774955749512
    4. '"' → logprob: -6.525774955749512
    5. '    ' → logprob: -7.650774955749512
    6. '"""
' → logprob: -8.025774955749512
    7. '    
' → logprob: -8.275774955749512
    8. ' """' → logprob: -8.525774955749512
    9. ')' → logprob: -8.775774955749512
    10. '
' → logprob: -8.775774955749512

Token 94: ' adjustment' (ID: 44079)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.65688955783844
    2. ' ' → logprob: -1.78188955783844
    3. 'def' → logprob: -1.90688955783844
    4. ' function' → logprob: -2.4068894386291504
    5. ' \' → logprob: -2.6568894386291504
    6. '\n' → logprob: -2.9068894386291504
    7. ' 
' → logprob: -3.0318894386291504
    8. '
' → logprob: -3.4068894386291504
    9. '   ' → logprob: -3.4068894386291504
    10. ' is' → logprob: -3.4068894386291504

Token 95: ' handles' (ID: 25640)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03158128261566162
    2. '    ' → logprob: -3.906581401824951
    3. '   ' → logprob: -5.156581401824951
    4. ' is' → logprob: -6.656581401824951
    5. '  ' → logprob: -7.031581401824951
    6. ' can' → logprob: -8.031580924987793
    7. ' 
' → logprob: -8.156580924987793
    8. ' continues' → logprob: -8.156580924987793
    9. ' to' → logprob: -8.656580924987793
    10. ' \' → logprob: -8.656580924987793

Token 96: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2196243703365326
    2. ' negative' → logprob: -2.4696242809295654
    3. ' cases' → logprob: -2.5946242809295654
    4. ' an' → logprob: -5.2196245193481445
    5. ' a' → logprob: -5.3446245193481445
    6. ' sign' → logprob: -5.5946245193481445
    7. ' scenarios' → logprob: -5.7196245193481445
    8. ' flipping' → logprob: -5.8446245193481445
    9. 'the' → logprob: -5.9696245193481445
    10. ' situations' → logprob: -5.9696245193481445

Token 97: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.46130651235580444
    2. ' sign' → logprob: -1.9613065719604492
    3. ' possibility' → logprob: -2.836306571960449
    4. 'case' → logprob: -3.086306571960449
    5. ' situation' → logprob: -3.836306571960449
    6. 'sign' → logprob: -3.961306571960449
    7. ' scenario' → logprob: -4.086306571960449
    8. ' edge' → logprob: -4.586306571960449
    9. ' corner' → logprob: -4.586306571960449
    10. ' negative' → logprob: -4.836306571960449

Token 98: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.23241059482097626
    2. ' of' → logprob: -1.6074105501174927
    3. ' when' → logprob: -5.482410430908203
    4. '   ' → logprob: -6.232410430908203
    5. ' to' → logprob: -8.482410430908203
    6. 'where' → logprob: -8.607410430908203
    7. ' ' → logprob: -9.357410430908203
    8. ' in' → logprob: -9.482410430908203
    9. ' that' → logprob: -9.982410430908203
    10. '  ' → logprob: -9.982410430908203

Token 99: ' signs' (ID: 17424)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5118825435638428
    2. ' a' → logprob: -1.7618825435638428
    3. ' we' → logprob: -2.5118825435638428
    4. 'the' → logprob: -3.2618825435638428
    5. 'a' → logprob: -3.3868825435638428
    6. 'we' → logprob: -3.7618825435638428
    7. ' flipping' → logprob: -4.261882781982422
    8. ' an' → logprob: -4.761882781982422
    9. ' there' → logprob: -4.761882781982422
    10. ' you' → logprob: -5.136882781982422

Token 100: ' can' (ID: 665)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6678160429000854
    2. ' can' → logprob: -1.5428160429000854
    3. ' of' → logprob: -2.542816162109375
    4. ' are' → logprob: -2.917816162109375
    5. ' cannot' → logprob: -2.917816162109375
    6. '   ' → logprob: -3.417816162109375
    7. ' must' → logprob: -4.167816162109375
    8. ' have' → logprob: -4.792816162109375
    9. 'can' → logprob: -5.042816162109375
    10. ' can't' → logprob: -5.542816162109375

Token 101: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.020753370597958565
    2. 'be' → logprob: -3.8957533836364746
    3. ' only' → logprob: -9.770752906799316
    4. '   ' → logprob: -10.145752906799316
    5. '	be' → logprob: -10.520752906799316
    6. ' not' → logprob: -10.645752906799316
    7. '```' → logprob: -11.145752906799316
    8. ' change' → logprob: -11.395752906799316
    9. 'not' → logprob: -12.020752906799316
    10. 'e' → logprob: -12.395752906799316

Token 102: ' flipped' (ID: 96664)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.4965548515319824
    2. ' flipped' → logprob: -0.9965548515319824
    3. ' changed' → logprob: -5.246554851531982
    4. 'changed' → logprob: -5.371554851531982
    5. '   ' → logprob: -5.496554851531982
    6. '```' → logprob: -5.996554851531982
    7. 'adjust' → logprob: -6.371554851531982
    8. ' adjusted' → logprob: -6.371554851531982
    9. ' inverted' → logprob: -7.996554851531982
    10. ' togg' → logprob: -8.62155532836914

Token 103: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1859389990568161
    2. ' to' → logprob: -1.8109389543533325
    3. ' for' → logprob: -5.435938835144043
    4. ' by' → logprob: -8.185938835144043
    5. 'def' → logprob: -8.185938835144043
    6. 'to' → logprob: -8.435938835144043
    7. ' of' → logprob: -8.435938835144043
    8. '```' → logprob: -9.310938835144043
    9. ',' → logprob: -9.435938835144043
    10. ' in' → logprob: -9.435938835144043

Token 104: ' maximize' (ID: 44207)
  Prédit: ' maximize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximize' → logprob: -0.35149097442626953
    2. 'maximize' → logprob: -1.4764909744262695
    3. ' minimize' → logprob: -3.4764909744262695
    4. ' achieve' → logprob: -3.7264909744262695
    5. ' optimize' → logprob: -5.2264909744262695
    6. ' avoid' → logprob: -6.2264909744262695
    7. ' make' → logprob: -6.9764909744262695
    8. ' ensure' → logprob: -7.6014909744262695
    9. ' balance' → logprob: -7.7264909744262695
    10. ' maintain' → logprob: -7.8514909744262695

Token 105: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.002500748261809349
    2. 'the' → logprob: -6.002500534057617
    3. '_' → logprob: -12.377500534057617
    4. '<|end|>' → logprob: -12.502500534057617
    5. '_the' → logprob: -12.752500534057617
    6. ' space' → logprob: -13.127500534057617
    7. ' positive' → logprob: -13.502500534057617
    8. ' sum' → logprob: -13.877500534057617
    9. ' each' → logprob: -14.002500534057617
    10. ' value' → logprob: -14.127500534057617

Token 106: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.13644728064537048
    2. ' total' → logprob: -2.7614471912384033
    3. 'sum' → logprob: -3.7614471912384033
    4. ' result' → logprob: -3.8864471912384033
    5. ' overall' → logprob: -4.636447429656982
    6. ' absolute' → logprob: -5.136447429656982
    7. ' final' → logprob: -6.136447429656982
    8. ' value' → logprob: -7.136447429656982
    9. 'total' → logprob: -7.386447429656982
    10. 'absolute' → logprob: -8.136446952819824

Token 107: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00794030912220478
    2. ':' → logprob: -5.507940292358398
    3. '    
' → logprob: -6.757940292358398
    4. '
' → logprob: -7.257940292358398
    5. '\n' → logprob: -7.382940292358398
    6. '):' → logprob: -8.757940292358398
    7. '.' → logprob: -8.757940292358398
    8. ',' → logprob: -8.757940292358398
    9. '   
' → logprob: -8.757940292358398
    10. '    ' → logprob: -8.882940292358398

Token 108: ' optim' (ID: 9367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013750305399298668
    2. '    ' → logprob: -4.638750076293945
    3. ' but' → logprob: -6.138750076293945
    4. ' ' → logprob: -8.013750076293945
    5. '    
' → logprob: -8.263750076293945
    6. '       ' → logprob: -8.513750076293945
    7. ' 
' → logprob: -8.763750076293945
    8. ' allowing' → logprob: -9.138750076293945
    9. '  ' → logprob: -9.263750076293945
    10. ' and' → logprob: -9.638750076293945

Token 109: 'ally' (ID: 2146)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.7692299485206604
    2. 'ized' → logprob: -0.7692299485206604
    3. '   ' → logprob: -3.6442298889160156
    4. 'izing' → logprob: -4.269229888916016
    5. 'e' → logprob: -5.019229888916016
    6. 'al' → logprob: -5.269229888916016
    7. '```' → logprob: -5.394229888916016
    8. ' ' → logprob: -5.519229888916016
    9. 'i' → logprob: -5.894229888916016
    10. 'a' → logprob: -6.144229888916016

Token 110: ' flipping' (ID: 110780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02546832710504532
    2. 'def' → logprob: -4.525468349456787
    3. ' adjusting' → logprob: -5.775468349456787
    4. ' def' → logprob: -6.775468349456787
    5. '
' → logprob: -6.775468349456787
    6. ' avoiding' → logprob: -7.025468349456787
    7. '"""
' → logprob: -7.025468349456787
    8. ' flipping' → logprob: -7.025468349456787
    9. ' adjust' → logprob: -7.275468349456787
    10. 'adjust' → logprob: -7.275468349456787

Token 111: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03420907258987427
    2. ' one' → logprob: -4.034209251403809
    3. ' a' → logprob: -4.659209251403809
    4. 'the' → logprob: -5.284209251403809
    5. ' any' → logprob: -7.659209251403809
    6. ' negative' → logprob: -7.909209251403809
    7. '   ' → logprob: -8.784209251403809
    8. 'a' → logprob: -9.659209251403809
    9. ' at' → logprob: -9.659209251403809
    10. ' signs' → logprob: -9.909209251403809

Token 112: '
' (ID: 198)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.6071621179580688
    2. ' sign' → logprob: -0.9821621179580688
    3. ' signs' → logprob: -3.8571619987487793
    4. 'sign' → logprob: -3.9821619987487793
    5. ' minimal' → logprob: -4.232161998748779
    6. ' ' → logprob: -4.857161998748779
    7. ' value' → logprob: -5.232161998748779
    8. ' space' → logprob: -6.232161998748779
    9. ' most' → logprob: -6.482161998748779
    10. ' remaining' → logprob: -6.482161998748779

Token 113: '   ' (ID: 271)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -1.5009357929229736
    2. ' sign' → logprob: -1.8759357929229736
    3. ' signs' → logprob: -1.8759357929229736
    4. ' remaining' → logprob: -2.0009357929229736
    5. ' first' → logprob: -2.3759357929229736
    6. ' last' → logprob: -3.0009357929229736
    7. '   ' → logprob: -3.3759357929229736
    8. ' ' → logprob: -3.6259357929229736
    9. ' minimal' → logprob: -3.7509357929229736
    10. ' negative' → logprob: -3.8759357929229736

Token 114: ' sign' (ID: 2232)
  Prédit: ' signs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signs' → logprob: -0.48331984877586365
    2. ' elements' → logprob: -2.7333197593688965
    3. ' smallest' → logprob: -2.8583197593688965
    4. ' sign' → logprob: -2.9833197593688965
    5. ' last' → logprob: -3.4833197593688965
    6. ' numbers' → logprob: -3.6083197593688965
    7. ' remaining' → logprob: -3.8583197593688965
    8. ' first' → logprob: -3.9833197593688965
    9. ' values' → logprob: -3.9833197593688965
    10. 'sign' (adapté à ' sign') → logprob: -4.3583197593688965

Token 115: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7727852463722229
    2. ' of' → logprob: -0.7727852463722229
    3. '   ' → logprob: -2.772785186767578
    4. ' to' → logprob: -4.522785186767578
    5. ' s' → logprob: -7.022785186767578
    6. ' for' → logprob: -7.022785186767578
    7. 'of' → logprob: -7.897785186767578
    8. 'def' → logprob: -8.647785186767578
    9. '(s' → logprob: -8.897785186767578
    10. 'es' → logprob: -9.397785186767578

Token 116: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2682265341281891
    2. ' one' → logprob: -1.5182265043258667
    3. 'the' → logprob: -4.268226623535156
    4. ' a' → logprob: -6.893226623535156
    5. 'one' → logprob: -7.393226623535156
    6. ' exactly' → logprob: -8.893226623535156
    7. ' just' → logprob: -9.018226623535156
    8. ' only' → logprob: -9.393226623535156
    9. ' an' → logprob: -9.893226623535156
    10. ' any' → logprob: -10.143226623535156

Token 117: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.40899553894996643
    2. ' element' → logprob: -1.908995509147644
    3. 'element' → logprob: -2.2839956283569336
    4. 'small' → logprob: -2.5339956283569336
    5. 'number' → logprob: -6.408995628356934
    6. ' number' → logprob: -6.533995628356934
    7. 'minimum' → logprob: -6.533995628356934
    8. ' small' → logprob: -7.158995628356934
    9. '```' → logprob: -8.033995628356934
    10. 'minimal' → logprob: -8.533995628356934

Token 118: ' absolute' (ID: 17786)
  Prédit: ' absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absolute' → logprob: -0.034489892423152924
    2. 'absolute' → logprob: -3.909489870071411
    3. ' element' → logprob: -5.65949010848999
    4. 'abs' → logprob: -6.03449010848999
    5. '_abs' → logprob: -6.03449010848999
    6. '_absolute' → logprob: -6.15949010848999
    7. ' abs' → logprob: -7.53449010848999
    8. ' positive' → logprob: -7.65949010848999
    9. ' value' → logprob: -7.65949010848999
    10. '```' → logprob: -7.78449010848999

Token 119: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.10545852780342102
    2. ' ' → logprob: -2.9804584980010986
    3. '_' → logprob: -4.105458736419678
    4. 'value' → logprob: -4.230458736419678
    5. '_value' → logprob: -5.105458736419678
    6. ' _' → logprob: -5.230458736419678
    7. ')' → logprob: -5.730458736419678
    8. '   ' → logprob: -6.480458736419678
    9. ' )' → logprob: -7.355458736419678
    10. '```' → logprob: -8.23045825958252

Token 120: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017837917432188988
    2. '):' → logprob: -5.392838001251221
    3. 'def' → logprob: -5.642838001251221
    4. ',' → logprob: -6.267838001251221
    5. ':' → logprob: -6.392838001251221
    6. '  ' → logprob: -7.142838001251221
    7. ')' → logprob: -7.142838001251221
    8. '    ' → logprob: -7.142838001251221
    9. ' ' → logprob: -7.267838001251221
    10. '
' → logprob: -7.517838001251221

Token 121: ' case' (ID: 1890)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.025464607402682304
    2. 'the' → logprob: -3.7754645347595215
    3. ' a' → logprob: -7.0254645347595215
    4. ' order' → logprob: -7.4004645347595215
    5. ' absolute' → logprob: -8.27546501159668
    6. 'a' → logprob: -8.52546501159668
    7. ' numbers' → logprob: -9.77546501159668
    8. '```' → logprob: -10.27546501159668
    9. ' negative' → logprob: -10.40046501159668
    10. ' an' → logprob: -10.77546501159668

Token 122: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.18447458744049072
    2. ' the' → logprob: -2.059474468231201
    3. 'of' → logprob: -3.934474468231201
    4. ' where' → logprob: -4.934474468231201
    5. ' to' → logprob: -5.184474468231201
    6. 'the' → logprob: -5.934474468231201
    7. ' there' → logprob: -6.434474468231201
    8. ' a' → logprob: -6.434474468231201
    9. ' when' → logprob: -7.684474468231201
    10. 'def' → logprob: -7.809474468231201

Token 123: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.0959487110376358
    2. ' negative' → logprob: -3.3459486961364746
    3. ' a' → logprob: -3.4709486961364746
    4. ' the' → logprob: -5.220948696136475
    5. 'an' → logprob: -5.220948696136475
    6. ' odd' → logprob: -5.970948696136475
    7. ' having' → logprob: -6.095948696136475
    8. ' flipping' → logprob: -6.345948696136475
    9. 'a' → logprob: -6.470948696136475
    10. 'negative' → logprob: -6.970948696136475

Token 124: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.26167038083076477
    2. 'odd' → logprob: -1.5116703510284424
    3. ' negative' → logprob: -5.8866705894470215
    4. 'negative' → logprob: -5.8866705894470215
    5. '   ' → logprob: -6.7616705894470215
    6. ' ' → logprob: -7.6366705894470215
    7. ' array' → logprob: -7.8866705894470215
    8. ' even' → logprob: -8.261670112609863
    9. ' list' → logprob: -8.261670112609863
    10. 'even' → logprob: -8.386670112609863

Token 125: ' count' (ID: 3605)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.13160933554172516
    2. ' count' → logprob: -3.3816094398498535
    3. ' negative' → logprob: -3.3816094398498535
    4. '   ' → logprob: -3.5066094398498535
    5. 'number' → logprob: -4.3816094398498535
    6. 'negative' → logprob: -4.8816094398498535
    7. 'count' → logprob: -6.1316094398498535
    8. ' ' → logprob: -7.2566094398498535
    9. '_negative' → logprob: -7.5066094398498535
    10. 'neg' → logprob: -7.7566094398498535

Token 126: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47874510288238525
    2. ' of' → logprob: -0.9787451028823853
    3. '    ' → logprob: -6.478744983673096
    4. '  ' → logprob: -7.603744983673096
    5. ')' → logprob: -7.978744983673096
    6. 'def' → logprob: -7.978744983673096
    7. 'of' → logprob: -8.103745460510254
    8. '_' → logprob: -8.103745460510254
    9. ' ' → logprob: -8.353745460510254
    10. ',' → logprob: -8.353745460510254

Token 127: ' negatives' (ID: 128140)
  Prédit: ' negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' negative' → logprob: -0.47008469700813293
    2. ' negatives' → logprob: -1.3450846672058105
    3. 'negative' → logprob: -2.2200846672058105
    4. 'neg' → logprob: -5.2200846672058105
    5. ' negativity' → logprob: -8.845085144042969
    6. ' negativ' → logprob: -9.345085144042969
    7. ' negativos' → logprob: -9.845085144042969
    8. '-negative' → logprob: -9.845085144042969
    9. '_negative' → logprob: -9.970085144042969
    10. '   ' → logprob: -10.345085144042969

Token 128: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03615936264395714
    2. '.' → logprob: -4.036159515380859
    3. ':' → logprob: -4.911159515380859
    4. 'def' → logprob: -5.161159515380859
    5. ',' → logprob: -6.411159515380859
    6. ' to' → logprob: -7.286159515380859
    7. '):' → logprob: -7.786159515380859
    8. '
' → logprob: -7.911159515380859
    9. '  ' → logprob: -8.41115951538086
    10. ')' → logprob: -8.53615951538086

Token 129: ' absence' (ID: 31880)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.7769099473953247
    2. ' no' → logprob: -1.7769099473953247
    3. ' the' → logprob: -2.026909828186035
    4. ' a' → logprob: -2.776909828186035
    5. ' positive' → logprob: -2.776909828186035
    6. ' zero' → logprob: -3.526909828186035
    7. ' flipping' → logprob: -4.276909828186035
    8. ' an' → logprob: -4.651909828186035
    9. '   ' → logprob: -4.901909828186035
    10. 'zeros' → logprob: -5.401909828186035

Token 130: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.023391641676425934
    2. '   ' → logprob: -3.8983917236328125
    3. 'of' → logprob: -6.0233917236328125
    4. ' ' → logprob: -8.273391723632812
    5. '  ' → logprob: -9.398391723632812
    6. '	of' → logprob: -10.523391723632812
    7. '_of' → logprob: -11.023391723632812
    8. '_' → logprob: -11.023391723632812
    9. '    ' → logprob: -11.648391723632812
    10. ' ' → logprob: -12.023391723632812

Token 131: ' zeros' (ID: 42274)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.23936618864536285
    2. ' zeros' → logprob: -1.9893661737442017
    3. 'zero' → logprob: -2.614366292953491
    4. 'zeros' → logprob: -6.114366054534912
    5. ' a' → logprob: -8.11436653137207
    6. '0' → logprob: -8.23936653137207
    7. ' ' → logprob: -9.86436653137207
    8. 'a' → logprob: -10.48936653137207
    9. '   ' → logprob: -12.11436653137207
    10. ' any' → logprob: -12.36436653137207

Token 132: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10851886868476868
    2. ':' → logprob: -2.8585188388824463
    3. '
' → logprob: -4.108519077301025
    4. '):' → logprob: -4.858519077301025
    5. '.' → logprob: -4.983519077301025
    6. '\n' → logprob: -5.858519077301025
    7. ':
' → logprob: -5.858519077301025
    8. '"""' → logprob: -6.483519077301025
    9. '):
' → logprob: -6.733519077301025
    10. '    
' → logprob: -6.733519077301025

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008412208408117294
    2. '"""' → logprob: -5.0084123611450195
    3. '"""
' → logprob: -7.6334123611450195
    4. '    ' → logprob: -8.13341236114502
    5. '"' → logprob: -8.25841236114502
    6. ' """
' → logprob: -8.38341236114502
    7. ' """' → logprob: -8.50841236114502
    8. 'def' → logprob: -9.75841236114502
    9. ')' → logprob: -9.75841236114502
    10. '
' → logprob: -10.25841236114502

Token 134: ' No' (ID: 3004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08139163255691528
    2. '"""' → logprob: -2.5813915729522705
    3. '"""
' → logprob: -6.08139181137085
    4. 'def' → logprob: -10.081391334533691
    5. '    ' → logprob: -10.081391334533691
    6. '""' → logprob: -10.331391334533691
    7. '```' → logprob: -10.581391334533691
    8. ')' → logprob: -10.581391334533691
    9. '"' → logprob: -10.706391334533691
    10. ' """' → logprob: -11.456391334533691

Token 135: ' parameters' (ID: 9621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47806134819984436
    2. '   ' → logprob: -1.228061318397522
    3. ':' → logprob: -3.4780614376068115
    4. ' ' → logprob: -3.7280614376068115
    5. ' def' → logprob: -4.728061199188232
    6. '_' → logprob: -5.228061199188232
    7. '    ' → logprob: -5.853061199188232
    8. ' :' → logprob: -6.103061199188232
    9. '
' → logprob: -6.353061199188232
    10. '  ' → logprob: -6.728061199188232

Token 136: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4813809394836426
    2. ':' → logprob: -1.8563809394836426
    3. '):' → logprob: -2.3563809394836426
    4. '
' → logprob: -2.7313809394836426
    5. '):
' → logprob: -3.8563809394836426
    6. ')' → logprob: -3.9813809394836426
    7. ':
' → logprob: -4.356380939483643
    8. '```' → logprob: -5.981380939483643
    9. '    
' → logprob: -6.231380939483643
    10. 'def' → logprob: -6.231380939483643

Token 137: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20542652904987335
    2. 'return' → logprob: -1.955426573753357
    3. ' returns' → logprob: -3.7054264545440674
    4. 'returns' → logprob: -4.0804266929626465
    5. '   ' → logprob: -6.4554266929626465
    6. '
' → logprob: -7.2054266929626465
    7. '    ' → logprob: -9.580426216125488
    8. '@return' → logprob: -9.580426216125488
    9. 'Returns' → logprob: -9.580426216125488
    10. ':return' → logprob: -10.205426216125488

Token 138: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2166073322296143
    2. '
' → logprob: -1.7166073322296143
    3. '\n' → logprob: -2.2166073322296143
    4. '  
' → logprob: -2.8416073322296143
    5. ' value' → logprob: -2.9666073322296143
    6. '    
' → logprob: -2.9666073322296143
    7. ':
' → logprob: -3.0916073322296143
    8. ':' → logprob: -3.0916073322296143
    9. ' 
' → logprob: -3.0916073322296143
    10. '```' → logprob: -3.3416073322296143

Token 139: ' Result' (ID: 9112)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10781766474246979
    2. '"""
' → logprob: -3.4828176498413086
    3. '"""' → logprob: -3.8578176498413086
    4. '\n' → logprob: -3.9828176498413086
    5. '
' → logprob: -3.9828176498413086
    6. '    
' → logprob: -4.732817649841309
    7. '"' → logprob: -6.357817649841309
    8. '```' → logprob: -7.357817649841309
    9. '  
' → logprob: -7.857817649841309
    10. '"\' → logprob: -8.357817649841309

Token 140: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08520178496837616
    2. '   ' → logprob: -3.4602017402648926
    3. '=' → logprob: -3.7102017402648926
    4. ' ' → logprob: -4.335201740264893
    5. 's' → logprob: -5.960201740264893
    6. '  ' → logprob: -6.085201740264893
    7. '    ' → logprob: -6.835201740264893
    8. ' is' → logprob: -7.085201740264893
    9. ':' → logprob: -7.210201740264893
    10. ' =
' → logprob: -7.210201740264893

Token 141: ' printed' (ID: 22774)
  Prédit: ' printed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' printed' → logprob: -0.004593418911099434
    2. '   ' → logprob: -6.004593372344971
    3. '    ' → logprob: -6.879593372344971
    4. ' print' → logprob: -7.004593372344971
    5. ' ' → logprob: -9.629593849182129
    6. 'print' → logprob: -10.504593849182129
    7. 'printed' → logprob: -10.629593849182129
    8. ' displayed' → logprob: -11.004593849182129
    9. ' computed' → logprob: -11.254593849182129
    10. '  ' → logprob: -11.879593849182129

Token 142: ' directly' (ID: 8516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28435179591178894
    2. ':' → logprob: -1.9093518257141113
    3. '\n' → logprob: -3.2843518257141113
    4. ':
' → logprob: -3.6593518257141113
    5. '
' → logprob: -3.6593518257141113
    6. '\' → logprob: -5.659351825714111
    7. '    
' → logprob: -5.784351825714111
    8. '```' → logprob: -6.909351825714111
    9. '   
' → logprob: -7.034351825714111
    10. '  
' → logprob: -8.034351348876953

Token 143: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07415099442005157
    2. ':' → logprob: -3.324151039123535
    3. '\n' → logprob: -4.824151039123535
    4. ':
' → logprob: -4.949151039123535
    5. '
' → logprob: -5.199151039123535
    6. '    
' → logprob: -5.449151039123535
    7. '.' → logprob: -5.449151039123535
    8. '```' → logprob: -6.199151039123535
    9. '.
' → logprob: -6.699151039123535
    10. '):
' → logprob: -7.074151039123535

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00804935023188591
    2. '"""' → logprob: -5.133049488067627
    3. '"""
' → logprob: -6.383049488067627
    4. '\n' → logprob: -9.258049011230469
    5. '```' → logprob: -9.258049011230469
    6. 'def' → logprob: -9.883049011230469
    7. '    
' → logprob: -9.883049011230469
    8. '
' → logprob: -10.383049011230469
    9. ' """
' → logprob: -10.383049011230469
    10. ' """' → logprob: -10.758049011230469

Token 145: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1376761794090271
    2. '"""' → logprob: -2.137676239013672
    3. '"""
' (adapté à ' """
') → logprob: -5.012676239013672
    4. '```' → logprob: -6.762676239013672
    5. 'def' → logprob: -7.387676239013672
    6. '
' → logprob: -7.512676239013672
    7. '    
' → logprob: -7.762676239013672
    8. '""' → logprob: -8.012676239013672
    9. '\n' → logprob: -8.137676239013672
    10. '"' → logprob: -8.512676239013672

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07329912483692169
    2. 'n' → logprob: -3.5732991695404053
    3. '
' → logprob: -3.8232991695404053
    4. '    
' → logprob: -4.073298931121826
    5. '    ' → logprob: -6.323298931121826
    6. 'def' → logprob: -7.448298931121826
    7. ' n' → logprob: -7.698298931121826
    8. '     
' → logprob: -8.323299407958984
    9. '\' → logprob: -8.573299407958984
    10. '\n' → logprob: -8.698299407958984

Token 147: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4259813129901886
    2. '   ' → logprob: -1.1759812831878662
    3. ' n' → logprob: -3.300981283187866
    4. 'import' → logprob: -6.675981521606445
    5. '
' → logprob: -9.425981521606445
    6. '    
' → logprob: -9.675981521606445
    7. ' import' → logprob: -10.425981521606445
    8. 'input' → logprob: -11.050981521606445
    9. '```' → logprob: -11.675981521606445
    10. '#' (adapté à ' #') → logprob: -11.800981521606445

Token 148: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2171061933040619
    2. ' n' → logprob: -1.7171062231063843
    3. '   ' → logprob: -4.217106342315674
    4. 'input' → logprob: -8.092105865478516
    5. 'import' → logprob: -8.717105865478516
    6. ' input' → logprob: -8.842105865478516
    7. ' size' → logprob: -10.217105865478516
    8. 'def' → logprob: -10.467105865478516
    9. 'size' → logprob: -10.467105865478516
    10. ' ' → logprob: -10.467105865478516

Token 149: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023405270650982857
    2. 'n' → logprob: -3.7734053134918213
    3. '   ' → logprob: -8.898405075073242
    4. ' size' → logprob: -11.023405075073242
    5. ' ' → logprob: -13.148405075073242
    6. '    ' → logprob: -13.523405075073242
    7. ' input' → logprob: -13.648405075073242
    8. '	n' → logprob: -14.148405075073242
    9. 'size' → logprob: -14.273405075073242
    10. ' the' → logprob: -15.523405075073242

Token 150: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08105992525815964
    2. 'size' → logprob: -3.0810599327087402
    3. ' size' → logprob: -4.08105993270874
    4. ' n' → logprob: -4.33105993270874
    5. 'number' → logprob: -7.08105993270874
    6. ' number' → logprob: -7.20605993270874
    7. '   ' → logprob: -9.081059455871582
    8. 'num' → logprob: -9.456059455871582
    9. 'def' → logprob: -10.081059455871582
    10. 't' → logprob: -10.706059455871582

Token 151: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.149189293384552
    2. ' =' → logprob: -2.6491892337799072
    3. '   ' → logprob: -3.0241892337799072
    4. ' of' → logprob: -4.899189472198486
    5. '_' → logprob: -5.274189472198486
    6. '=' → logprob: -6.399189472198486
    7. ' ' → logprob: -6.524189472198486
    8. 's' → logprob: -6.774189472198486
    9. '  ' → logprob: -7.149189472198486
    10. '_size' → logprob: -7.274189472198486

Token 152: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.08892921358346939
    2. 'elements' → logprob: -2.7139291763305664
    3. ' integers' → logprob: -4.088929176330566
    4. '_elements' → logprob: -6.838929176330566
    5. ' ' → logprob: -7.588929176330566
    6. 'inte' → logprob: -8.838929176330566
    7. ' numbers' → logprob: -9.338929176330566
    8. ' items' → logprob: -9.588929176330566
    9. 'items' → logprob: -10.463929176330566
    10. 'numbers' → logprob: -10.713929176330566

Token 153: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.049676790833473206
    2. '   ' → logprob: -3.1746768951416016
    3. ' n' → logprob: -5.049676895141602
    4. '
' → logprob: -8.549676895141602
    5. '    
' → logprob: -10.674676895141602
    6. '\n' → logprob: -11.424676895141602
    7. '	n' → logprob: -11.799676895141602
    8. '(n' → logprob: -13.174676895141602
    9. ' 
' → logprob: -13.174676895141602
    10. '```' → logprob: -13.674676895141602

Token 154: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3400455713272095
    2. ' n' → logprob: -1.4650455713272095
    3. 'n' → logprob: -3.46504545211792
    4. ' input' → logprob: -4.71504545211792
    5. 'the' → logprob: -5.46504545211792
    6. ' a' → logprob: -5.46504545211792
    7. ' array' → logprob: -5.71504545211792
    8. ' list' → logprob: -6.34004545211792
    9. ' lst' → logprob: -7.21504545211792
    10. ' ' → logprob: -7.34004545211792

Token 155: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05933447182178497
    2. 'array' → logprob: -3.3093345165252686
    3. ' list' → logprob: -4.5593342781066895
    4. 'lst' → logprob: -5.5593342781066895
    5. 'input' → logprob: -5.9343342781066895
    6. ' array' → logprob: -6.0593342781066895
    7. 'arr' → logprob: -6.4343342781066895
    8. 'sequence' → logprob: -9.809334754943848
    9. 'int' → logprob: -10.684334754943848
    10. 'n' → logprob: -10.809334754943848

Token 156: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39478182792663574
    2. ' n' → logprob: -1.6447818279266357
    3. '   ' → logprob: -2.0197818279266357
    4. '
' → logprob: -8.144782066345215
    5. '    
' → logprob: -9.644782066345215
    6. '	n' → logprob: -10.144782066345215
    7. '\n' → logprob: -11.394782066345215
    8. '    ' → logprob: -12.269782066345215
    9. ' 
' → logprob: -12.394782066345215
    10. '```' → logprob: -12.894782066345215

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5853001475334167
    2. 'n' → logprob: -0.8353001475334167
    3. ' n' → logprob: -4.710299968719482
    4. '    
' → logprob: -8.33530044555664
    5. '
' → logprob: -10.21030044555664
    6. '	n' → logprob: -11.83530044555664
    7. '\n' → logprob: -12.08530044555664
    8. ' 
' → logprob: -12.08530044555664
    9. '    ' → logprob: -12.21030044555664
    10. '   
' → logprob: -12.46030044555664

Token 158: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4951755106449127
    2. ' n' → logprob: -0.9951754808425903
    3. '   ' → logprob: -3.87017560005188
    4. '```' → logprob: -11.7451753616333
    5. '	n' → logprob: -11.9951753616333
    6. 'num' → logprob: -13.4951753616333
    7. ' ' → logprob: -13.6201753616333
    8. '
' → logprob: -13.7451753616333
    9. '    
' → logprob: -13.8701753616333
    10. '`' → logprob: -14.1201753616333

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04862438142299652
    2. '=' → logprob: -3.048624277114868
    3. '=int' → logprob: -11.423624038696289
    4. ',' → logprob: -11.423624038696289
    5. '   ' → logprob: -11.923624038696289
    6. ' =
' → logprob: -12.798624038696289
    7. '=input' → logprob: -12.798624038696289
    8. ' ' → logprob: -13.173624038696289
    9. ' ' → logprob: -14.923624038696289
    10. ')' → logprob: -15.048624038696289

Token 160: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020667314529419
    2. ' int' → logprob: -2.3502066135406494
    3. '[int' → logprob: -17.97520637512207
    4. '=int' → logprob: -18.10020637512207
    5. ' ' → logprob: -18.47520637512207
    6. '   ' → logprob: -19.22520637512207
    7. '	int' → logprob: -19.35020637512207
    8. '(int' → logprob: -19.47520637512207
    9. '  ' → logprob: -20.22520637512207
    10. '<int' → logprob: -20.35020637512207

Token 161: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006838868372142315
    2. '(' → logprob: -5.006838798522949
    3. 'input' → logprob: -9.00683879852295
    4. ' input' → logprob: -14.38183879852295
    5. '()' → logprob: -15.38183879852295
    6. '(
' → logprob: -16.506839752197266
    7. ' (' → logprob: -16.756839752197266
    8. '=input' → logprob: -17.881839752197266
    9. ',input' → logprob: -19.381839752197266
    10. '(int' → logprob: -19.506839752197266

Token 162: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019751458894461393
    2. '()' → logprob: -6.251975059509277
    3. '())
' → logprob: -10.876975059509277
    4. '().' → logprob: -11.251975059509277
    5. ')' → logprob: -11.626975059509277
    6. '()))' → logprob: -13.001975059509277
    7. ' ())' → logprob: -13.501975059509277
    8. '(' → logprob: -14.126975059509277
    9. '())

' → logprob: -14.251975059509277
    10. '();)' → logprob: -15.126975059509277

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009791151620447636
    2. '    
' → logprob: -6.134791374206543
    3. 'numbers' → logprob: -6.384791374206543
    4. '
' → logprob: -6.509791374206543
    5. 'elements' → logprob: -6.884791374206543
    6. 'values' → logprob: -7.134791374206543
    7. ' numbers' → logprob: -7.384791374206543
    8. 'arr' → logprob: -8.009791374206543
    9. 'lst' → logprob: -8.134791374206543
    10. '    ' → logprob: -8.634791374206543

Token 164: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24121563136577606
    2. 'arr' → logprob: -2.991215705871582
    3. ' numbers' → logprob: -3.116215705871582
    4. ' lst' → logprob: -3.616215705871582
    5. 'numbers' → logprob: -3.991215705871582
    6. ' arr' → logprob: -4.491215705871582
    7. 'lst' → logprob: -4.491215705871582
    8. 'a' → logprob: -4.741215705871582
    9. '    
' → logprob: -4.866215705871582
    10. ' elements' → logprob: -4.991215705871582

Token 165: ' Read' (ID: 5405)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.12712538242340088
    2. 'numbers' → logprob: -2.8771252632141113
    3. 'elements' → logprob: -3.7521252632141113
    4. 'nums' → logprob: -4.377125263214111
    5. 'values' → logprob: -4.752125263214111
    6. 'lst' → logprob: -5.002125263214111
    7. '#' → logprob: -5.002125263214111
    8. ' arr' → logprob: -6.502125263214111
    9. 'a' → logprob: -7.127125263214111
    10. ' numbers' → logprob: -7.127125263214111

Token 166: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7958669066429138
    2. ' arr' → logprob: -1.2958669662475586
    3. ' numbers' → logprob: -1.9208669662475586
    4. ' lst' → logprob: -3.0458669662475586
    5. 'arr' → logprob: -3.7958669662475586
    6. ' elements' → logprob: -3.7958669662475586
    7. ' values' → logprob: -3.9208669662475586
    8. ' a' → logprob: -5.545866966247559
    9. ' nums' → logprob: -6.045866966247559
    10. 'numbers' → logprob: -6.045866966247559

Token 167: ' list' (ID: 1562)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.653790295124054
    2. 'numbers' → logprob: -1.1537902355194092
    3. 'elements' → logprob: -3.028790235519409
    4. ' numbers' → logprob: -3.028790235519409
    5. ' elements' → logprob: -3.153790235519409
    6. 'lst' → logprob: -4.403790473937988
    7. ' arr' → logprob: -5.278790473937988
    8. 'values' → logprob: -5.778790473937988
    9. 'nums' → logprob: -5.778790473937988
    10. ' lst' → logprob: -6.778790473937988

Token 168: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5750787854194641
    2. '()' → logprob: -1.5750787258148193
    3. 'arr' → logprob: -2.4500787258148193
    4. 'numbers' → logprob: -3.5750787258148193
    5. '_values' → logprob: -3.9500787258148193
    6. ' numbers' → logprob: -4.450078964233398
    7. 'a' → logprob: -4.450078964233398
    8. 'values' → logprob: -4.575078964233398
    9. 's' → logprob: -4.700078964233398
    10. ' of' → logprob: -4.825078964233398

Token 169: ' integers' (ID: 54912)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.7725174427032471
    2. 'numbers' → logprob: -0.7725174427032471
    3. ' integers' → logprob: -3.522517442703247
    4. 'arr' → logprob: -3.772517442703247
    5. ' elements' → logprob: -4.647517204284668
    6. 'elements' → logprob: -5.272517204284668
    7. 'nums' → logprob: -5.522517204284668
    8. 'inte' → logprob: -6.522517204284668
    9. 'ints' → logprob: -7.022517204284668
    10. 'values' → logprob: -7.022517204284668

Token 170: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3680623769760132
    2. ' arr' → logprob: -2.3680624961853027
    3. ' numbers' → logprob: -2.7430624961853027
    4. ' lst' → logprob: -2.9930624961853027
    5. 'arr' → logprob: -3.2430624961853027
    6. ' a' → logprob: -3.4930624961853027
    7. ' elements' → logprob: -4.493062496185303
    8. 'a' → logprob: -4.993062496185303
    9. ' values' → logprob: -5.493062496185303
    10. 'numbers' → logprob: -6.118062496185303

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007417303277179599
    2. ' elements' → logprob: -8.250741958618164
    3. 'arr' → logprob: -9.000741958618164
    4. 'elements' → logprob: -9.125741958618164
    5. ' numbers' → logprob: -10.000741958618164
    6. ' lst' → logprob: -10.000741958618164
    7. '    
' → logprob: -10.375741958618164
    8. 'a' → logprob: -10.875741958618164
    9. 'numbers' → logprob: -10.875741958618164
    10. '    ' → logprob: -11.250741958618164

Token 172: ' a' (ID: 261)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9343193769454956
    2. ' numbers' → logprob: -1.1843193769454956
    3. ' arr' → logprob: -1.4343193769454956
    4. 'numbers' → logprob: -3.059319496154785
    5. 'nums' → logprob: -4.809319496154785
    6. ' nums' → logprob: -5.559319496154785
    7. ' values' → logprob: -6.934319496154785
    8. ' elements' → logprob: -7.184319496154785
    9. 'lst' → logprob: -7.309319496154785
    10. ' lst' → logprob: -7.309319496154785

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020839422941208
    2. '=' → logprob: -2.350208282470703
    3. 's' → logprob: -14.600208282470703
    4. ' =[' → logprob: -14.600208282470703
    5. '[' → logprob: -15.350208282470703
    6. ' ' → logprob: -16.100208282470703
    7. '_' → logprob: -16.350208282470703
    8. ' ' → logprob: -16.600208282470703
    9. ' =
' → logprob: -16.850208282470703
    10. '=[]' → logprob: -17.100208282470703

Token 174: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10020752996206284
    2. 'list' → logprob: -2.350207567214966
    3. '[list' → logprob: -14.600207328796387
    4. ' [' → logprob: -15.225207328796387
    5. '[' → logprob: -15.475207328796387
    6. '	list' → logprob: -16.975208282470703
    7. ' ' → logprob: -17.350208282470703
    8. '=list' → logprob: -18.350208282470703
    9. '(list' → logprob: -19.600208282470703
    10. 'List' → logprob: -19.725208282470703

Token 175: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014178085140883923
    2. '(' → logprob: -4.264178276062012
    3. '(int' → logprob: -11.639178276062012
    4. '(input' → logprob: -12.389178276062012
    5. 'map' → logprob: -14.514178276062012
    6. '()' → logprob: -14.889178276062012
    7. '(
' → logprob: -15.514178276062012
    8. '(eval' → logprob: -15.514178276062012
    9. ' map' → logprob: -16.014177322387695
    10. '(

' → logprob: -16.764177322387695

Token 176: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006075267679989338
    2. '(' → logprob: -5.131075382232666
    3. 'int' → logprob: -9.006074905395508
    4. '(
' → logprob: -11.256074905395508
    5. '(input' → logprob: -13.006074905395508
    6. ' int' → logprob: -13.006074905395508
    7. '<int' → logprob: -13.506074905395508
    8. ' (' → logprob: -13.631074905395508
    9. '[int' → logprob: -13.756074905395508
    10. '=int' → logprob: -14.256074905395508

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6929841041564941
    2. ',input' → logprob: -0.8179841041564941
    3. 'input' → logprob: -3.067984104156494
    4. '(input' → logprob: -4.442984104156494
    5. ' ,' → logprob: -9.192983627319336
    6. ' input' → logprob: -9.317983627319336
    7. '   ' → logprob: -9.692983627319336
    8. '(' → logprob: -10.317983627319336
    9. '	input' → logprob: -11.942983627319336
    10. '<input' → logprob: -12.067983627319336

Token 178: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008618000894784927
    2. ' input' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.508618354797363
    4. ' ' → logprob: -13.758618354797363
    5. ',input' → logprob: -15.383618354797363
    6. '    ' → logprob: -15.508618354797363
    7. '  ' → logprob: -15.883618354797363
    8. '(input' → logprob: -16.008617401123047
    9. '<input' → logprob: -16.383617401123047
    10. '	input' → logprob: -16.508617401123047

Token 179: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8074162653647363e-05
    2. '()' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.875018119812012
    4. '.split' → logprob: -15.375018119812012
    5. ' ().' → logprob: -15.500018119812012
    6. ')' → logprob: -16.250017166137695
    7. '(' → logprob: -16.375017166137695
    8. ' .' → logprob: -16.500017166137695
    9. 'split' → logprob: -16.875017166137695
    10. '()))' → logprob: -16.875017166137695

Token 180: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011709370883181691
    2. 'strip' → logprob: -6.751171112060547
    3. 'rstrip' → logprob: -14.251171112060547
    4. ' split' → logprob: -17.001171112060547
    5. '(split' → logprob: -17.751171112060547
    6. 'spl' → logprob: -18.251171112060547
    7. '_split' → logprob: -21.501171112060547
    8. '.split' → logprob: -22.126171112060547
    9. ' strip' → logprob: -22.376171112060547
    10. 'read' → logprob: -22.751171112060547

Token 181: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03318234533071518
    2. '()' → logprob: -3.533182382583618
    3. '))' → logprob: -5.908182144165039
    4. '())' → logprob: -7.408182144165039
    5. '(' → logprob: -9.533182144165039
    6. '()))
' → logprob: -11.408182144165039
    7. '())))' → logprob: -11.658182144165039
    8. ')' → logprob: -12.658182144165039
    9. '()));' → logprob: -12.658182144165039
    10. '(),' → logprob: -13.908182144165039

Token 182: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1186491996049881
    2. '
' → logprob: -2.7436492443084717
    3. '    
' → logprob: -3.1186492443084717
    4. '    ' → logprob: -6.993649005889893
    5. '   
' → logprob: -7.118649005889893
    6. '     
' → logprob: -7.618649005889893
    7. 'sum' → logprob: -8.11864948272705
    8. ' 
' → logprob: -8.61864948272705
    9. '  
' → logprob: -9.11864948272705
    10. '```' → logprob: -9.24364948272705

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3535038232803345
    2. 'abs' → logprob: -1.3535038232803345
    3. 'total' → logprob: -3.853503704071045
    4. 'sum' → logprob: -4.978503704071045
    5. 'neg' → logprob: -4.978503704071045
    6. 'absolute' → logprob: -6.228503704071045
    7. 'count' → logprob: -6.853503704071045
    8. 'negative' → logprob: -6.978503704071045
    9. 'cnt' → logprob: -8.978504180908203
    10. 'positive' → logprob: -9.353504180908203

Token 184: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.062633991241455
    2. 'neg' → logprob: -1.437633991241455
    3. 'negative' → logprob: -1.437633991241455
    4. 'count' → logprob: -2.187633991241455
    5. 'sum' → logprob: -3.937633991241455
    6. 'cnt' → logprob: -4.187633991241455
    7. 'zero' → logprob: -4.312633991241455
    8. 'total' → logprob: -4.437633991241455
    9. 'absolute' → logprob: -6.062633991241455
    10. 'num' → logprob: -6.312633991241455

Token 185: ' Initialize' (ID: 19496)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.09185284376144409
    2. 'negative' → logprob: -3.716852903366089
    3. 'count' → logprob: -3.966852903366089
    4. 'neg' → logprob: -4.09185266494751
    5. 'zero' → logprob: -4.84185266494751
    6. 'total' → logprob: -4.96685266494751
    7. 'absolute' → logprob: -5.09185266494751
    8. 'sum' → logprob: -5.34185266494751
    9. 'cnt' → logprob: -7.09185266494751
    10. '#' → logprob: -7.96685266494751

Token 186: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20818550884723663
    2. 'neg' → logprob: -2.4581854343414307
    3. 'negative' → logprob: -3.2081854343414307
    4. 'total' → logprob: -3.5831854343414307
    5. 'sum' → logprob: -4.33318567276001
    6. 'count' → logprob: -4.45818567276001
    7. 'max' → logprob: -5.58318567276001
    8. ' abs' → logprob: -6.20818567276001
    9. 'absolute' → logprob: -6.58318567276001
    10. 'zero' → logprob: -7.45818567276001

Token 187: ' accumulator' (ID: 118458)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.43834009766578674
    2. 'sum' → logprob: -2.063340187072754
    3. 'count' → logprob: -2.438340187072754
    4. 'total' → logprob: -2.688340187072754
    5. 'negative' → logprob: -3.563340187072754
    6. 'neg' → logprob: -3.688340187072754
    7. 'absolute' → logprob: -4.813340187072754
    8. 'max' → logprob: -5.063340187072754
    9. 'cnt' → logprob: -6.188340187072754
    10. 'sign' → logprob: -7.063340187072754

Token 188: ' for' (ID: 395)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7088109254837036
    2. 'total' → logprob: -1.4588109254837036
    3. 'sum' → logprob: -1.7088109254837036
    4. 'max' → logprob: -3.333810806274414
    5. 'ans' → logprob: -4.083810806274414
    6. '   ' → logprob: -4.208810806274414
    7. ' total' → logprob: -4.833810806274414
    8. ' sum' → logprob: -5.958810806274414
    9. ' abs' → logprob: -5.958810806274414
    10. 'absolute' → logprob: -5.958810806274414

Token 189: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08292718231678009
    2. 'total' → logprob: -3.2079272270202637
    3. 'absolute' → logprob: -3.3329272270202637
    4. 'sum' → logprob: -5.832927227020264
    5. 'max' → logprob: -7.957927227020264
    6. ' abs' → logprob: -9.582926750183105
    7. 'ans' → logprob: -10.457926750183105
    8. ' total' → logprob: -10.707926750183105
    9. ' absolute' → logprob: -10.832926750183105
    10. 'answer' → logprob: -11.957926750183105

Token 190: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3666875660419464
    2. 'total' → logprob: -1.366687536239624
    3. 'absolute' → logprob: -3.116687536239624
    4. 'sum' → logprob: -5.241687774658203
    5. 'max' → logprob: -6.866687774658203
    6. 'result' → logprob: -7.491687774658203
    7. 'ans' → logprob: -7.616687774658203
    8. 'answer' → logprob: -8.366687774658203
    9. 'res' → logprob: -9.741687774658203
    10. 'sign' → logprob: -11.491687774658203

Token 191: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5552867650985718
    2. '_sum' → logprob: -1.0552867650985718
    3. ' sum' → logprob: -3.0552868843078613
    4. 'values' → logprob: -3.9302868843078613
    5. '_values' → logprob: -5.180286884307861
    6. ' values' → logprob: -5.430286884307861
    7. 'value' → logprob: -7.305286884307861
    8. '_value' → logprob: -8.430286407470703
    9. '   ' → logprob: -9.180286407470703
    10. 's' → logprob: -9.180286407470703

Token 192: '
' (ID: 198)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.560790479183197
    2. '   ' → logprob: -1.9357905387878418
    3. 'total' → logprob: -1.9357905387878418
    4. 'sum' → logprob: -2.560790538787842
    5. ' total' → logprob: -3.810790538787842
    6. ' abs' → logprob: -4.310790538787842
    7. 'max' → logprob: -4.810790538787842
    8. 'ans' → logprob: -5.060790538787842
    9. ' sum' → logprob: -5.435790538787842
    10. ' ans' → logprob: -5.935790538787842

Token 193: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.35475465655326843
    2. 'total' → logprob: -1.4797546863555908
    3. 'max' → logprob: -3.854754686355591
    4. '   ' → logprob: -4.104754447937012
    5. ' total' → logprob: -4.604754447937012
    6. 'sum' → logprob: -4.854754447937012
    7. 'ans' → logprob: -5.229754447937012
    8. 'absolute' → logprob: -5.604754447937012
    9. ' abs' → logprob: -5.979754447937012
    10. 'result' → logprob: -6.604754447937012

Token 194: ' ans' (ID: 3345)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2493574023246765
    2. 'total' → logprob: -1.6243574619293213
    3. 'absolute' → logprob: -4.374357223510742
    4. 'max' → logprob: -5.749357223510742
    5. 'sum' → logprob: -5.749357223510742
    6. 'ans' (adapté à ' ans') → logprob: -5.874357223510742
    7. 'result' → logprob: -7.624357223510742
    8. 'answer' → logprob: -7.749357223510742
    9. 'acc' → logprob: -8.374357223510742
    10. ' total' → logprob: -8.499357223510742

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197037547826767
    2. '=' → logprob: -2.8119704723358154
    3. ' +=' → logprob: -13.686970710754395
    4. '_' → logprob: -14.311970710754395
    5. ' ' → logprob: -15.061970710754395
    6. ',' → logprob: -15.061970710754395
    7. '   ' → logprob: -15.936970710754395
    8. '  ' → logprob: -16.561969757080078
    9. ' ' → logprob: -16.686969757080078
    10. '+=' → logprob: -18.061969757080078

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05492347106337547
    2. ' ' → logprob: -2.9299235343933105
    3. 'sum' → logprob: -10.429923057556152
    4. ' sum' → logprob: -11.679923057556152
    5. '   ' → logprob: -13.304923057556152
    6. ' ' → logprob: -14.054923057556152
    7. 'abs' → logprob: -14.929923057556152
    8. '  ' → logprob: -15.179923057556152
    9. ' abs' → logprob: -17.05492401123047
    10. '    ' → logprob: -17.86742401123047

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.947715832618997e-05
    2. 'sum' → logprob: -9.375089645385742
    3. ' ' → logprob: -12.500089645385742
    4. 'abs' → logprob: -14.125089645385742
    5. '   ' → logprob: -17.250089645385742
    6. ' sum' → logprob: -17.375089645385742
    7. '```' → logprob: -18.500089645385742
    8. '۰' → logprob: -18.875089645385742
    9. 's' → logprob: -18.875089645385742
    10. 'max' → logprob: -19.062589645385742

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07634272426366806
    2. '
' → logprob: -2.951342821121216
    3. '    
' → logprob: -3.951342821121216
    4. 'neg' → logprob: -6.951342582702637
    5. ',' → logprob: -8.201342582702637
    6. 'negative' → logprob: -8.701342582702637
    7. '   
' → logprob: -8.826342582702637
    8. '\n' → logprob: -8.826342582702637
    9. '  
' → logprob: -10.076342582702637
    10. 'n' → logprob: -10.201342582702637

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00479310704395175
    2. 'neg' → logprob: -5.754793167114258
    3. '
' → logprob: -7.504793167114258
    4. '    
' → logprob: -8.004793167114258
    5. 'negative' → logprob: -8.129793167114258
    6. 'n' → logprob: -8.754793167114258
    7. 'count' → logprob: -9.504793167114258
    8. ',' → logprob: -9.504793167114258
    9. ' neg' → logprob: -11.129793167114258
    10. '    ' → logprob: -11.504793167114258

Token 200: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9371848106384277
    2. 'neg' → logprob: -1.0621848106384277
    3. 'negative' → logprob: -1.9371848106384277
    4. 'min' → logprob: -2.9371848106384277
    5. 'count' → logprob: -3.5621848106384277
    6. 'cnt' → logprob: -3.5621848106384277
    7. 'num' → logprob: -6.437184810638428
    8. 'abs' → logprob: -6.937184810638428
    9. '#' (adapté à ' #') → logprob: -7.062184810638428
    10. ' negative' → logprob: -7.437184810638428

Token 201: ' Counter' (ID: 32251)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.7341076731681824
    2. 'neg' → logprob: -0.9841076731681824
    3. 'count' → logprob: -2.484107732772827
    4. 'min' → logprob: -3.484107732772827
    5. 'cnt' → logprob: -3.859107732772827
    6. 'has' → logprob: -5.609107494354248
    7. 'zero' → logprob: -6.109107494354248
    8. 'num' → logprob: -6.484107494354248
    9. 'abs' → logprob: -6.859107494354248
    10. 'max' → logprob: -7.484107494354248

Token 202: ' for' (ID: 395)
  Prédit: '_neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.6035475134849548
    2. '_negative' → logprob: -1.4785475730895996
    3. '_' → logprob: -2.2285475730895996
    4. ' =' → logprob: -2.6035475730895996
    5. '   ' → logprob: -4.1035475730896
    6. '_for' → logprob: -4.9785475730896
    7. ' for' → logprob: -5.1035475730896
    8. '=' → logprob: -5.6035475730896
    9. 'neg' → logprob: -5.8535475730896
    10. 'negative' → logprob: -6.2285475730896

Token 203: ' the' (ID: 290)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.3491384983062744
    2. ' negative' → logprob: -1.7241384983062744
    3. 'neg' → logprob: -2.3491384983062744
    4. ' negatives' → logprob: -4.724138259887695
    5. ' neg' → logprob: -5.974138259887695
    6. ' the' → logprob: -6.474138259887695
    7. ' cnt' → logprob: -6.474138259887695
    8. 'count' → logprob: -6.599138259887695
    9. 'cnt' → logprob: -6.849138259887695
    10. 'zero' → logprob: -7.724138259887695

Token 204: ' number' (ID: 2086)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.2751958966255188
    2. 'neg' → logprob: -1.525195837020874
    3. 'count' → logprob: -4.025196075439453
    4. 'cnt' → logprob: -5.775196075439453
    5. 'zero' → logprob: -7.400196075439453
    6. 'num' → logprob: -7.650196075439453
    7. ' negative' → logprob: -7.775196075439453
    8. '```' → logprob: -8.900196075439453
    9. 'abs' → logprob: -10.150196075439453
    10. 'sign' → logprob: -10.275196075439453

Token 205: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7450548410415649
    2. 'of' → logprob: -0.7450548410415649
    3. '_of' → logprob: -3.1200547218322754
    4. '_negative' → logprob: -6.245054721832275
    5. 'negative' → logprob: -6.370054721832275
    6. 'neg' → logprob: -6.745054721832275
    7. '_neg' → logprob: -6.870054721832275
    8. ' ' → logprob: -8.495055198669434
    9. '   ' → logprob: -9.245055198669434
    10. 's' → logprob: -10.120055198669434

Token 206: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.11082570999860764
    2. 'neg' → logprob: -2.860825777053833
    3. ' negative' → logprob: -3.110825777053833
    4. ' negatives' → logprob: -5.860825538635254
    5. '_negative' → logprob: -9.735825538635254
    6. '-negative' → logprob: -9.985825538635254
    7. '   ' → logprob: -10.610825538635254
    8. ' negativos' → logprob: -10.735825538635254
    9. ' ' → logprob: -11.360825538635254
    10. '_neg' → logprob: -11.360825538635254

Token 207: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.1563664823770523
    2. ' numbers' → logprob: -2.7813665866851807
    3. 's' → logprob: -3.2813665866851807
    4. 'values' → logprob: -3.5313665866851807
    5. '_numbers' → logprob: -5.156366348266602
    6. 'sign' → logprob: -6.156366348266602
    7. 'elements' → logprob: -6.156366348266602
    8. ' elements' → logprob: -6.156366348266602
    9. ' values' → logprob: -6.281366348266602
    10. 'a' → logprob: -7.531366348266602

Token 208: '
' (ID: 198)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.3713507056236267
    2. 'negative' → logprob: -1.9963507652282715
    3. ' negative' → logprob: -2.7463507652282715
    4. ' neg' → logprob: -3.1213507652282715
    5. '   ' → logprob: -3.4963507652282715
    6. ' negatives' → logprob: -4.1213507652282715
    7. 'cnt' → logprob: -5.1213507652282715
    8. ' cnt' → logprob: -5.2463507652282715
    9. 'count' → logprob: -6.2463507652282715
    10. ',' → logprob: -6.8713507652282715

Token 209: '   ' (ID: 271)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.30657872557640076
    2. '   ' → logprob: -2.0565786361694336
    3. 'negative' → logprob: -2.6815786361694336
    4. ' neg' → logprob: -3.6815786361694336
    5. ' negative' → logprob: -3.8065786361694336
    6. ' negatives' → logprob: -4.181578636169434
    7. 'cnt' → logprob: -6.181578636169434
    8. ' cnt' → logprob: -6.806578636169434
    9. 'count' → logprob: -7.681578636169434
    10. ',' → logprob: -7.931578636169434

Token 210: ' c' (ID: 274)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.7297883033752441
    2. 'negative' → logprob: -0.7297883033752441
    3. 'count' → logprob: -4.104788303375244
    4. 'cnt' → logprob: -4.104788303375244
    5. 'minus' → logprob: -7.104788303375244
    6. 'num' → logprob: -7.854788303375244
    7. ' negative' → logprob: -7.854788303375244
    8. 'c' (adapté à ' c') → logprob: -8.479787826538086
    9. 'nega' → logprob: -8.729787826538086
    10. ' neg' → logprob: -8.854787826538086

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9036389589309692
    2. '_neg' → logprob: -1.2786389589309692
    3. '_' → logprob: -1.5286389589309692
    4. 'ount' → logprob: -3.5286388397216797
    5. '_negative' → logprob: -3.5286388397216797
    6. '=' → logprob: -3.9036388397216797
    7. 'nt' → logprob: -4.65363883972168
    8. 'neg' → logprob: -5.02863883972168
    9. 'ounter' → logprob: -6.65363883972168
    10. '_n' → logprob: -6.90363883972168

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541594505310059
    2. ' ' → logprob: -1.6004159450531006
    3. '   ' → logprob: -13.60041618347168
    4. ' ' → logprob: -14.85041618347168
    5. 'a' → logprob: -15.03791618347168
    6. '1' → logprob: -15.16291618347168
    7. '  ' → logprob: -15.22541618347168
    8. 'c' → logprob: -15.72541618347168
    9. '=' → logprob: -16.28791618347168
    10. 'int' → logprob: -16.60041618347168

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. 'a' → logprob: -15.375008583068848
    4. '1' → logprob: -16.68750762939453
    5. 'c' → logprob: -16.75000762939453
    6. 'sum' → logprob: -16.81250762939453
    7. 'int' → logprob: -16.87500762939453
    8. '=' → logprob: -17.50000762939453
    9. '```' → logprob: -18.50000762939453
    10. '   ' → logprob: -18.56250762939453

Token 214: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00880211777985096
    2. '
' → logprob: -5.0088019371032715
    3. '    
' → logprob: -6.5088019371032715
    4. '#' → logprob: -9.38380241394043
    5. '  ' → logprob: -9.50880241394043
    6. ',' → logprob: -9.88380241394043
    7. 'min' → logprob: -9.88380241394043
    8. ' ' → logprob: -9.88380241394043
    9. ' smallest' → logprob: -9.88380241394043
    10. '  
' → logprob: -10.00880241394043

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009236044250428677
    2. 'min' → logprob: -5.009235858917236
    3. '#' → logprob: -7.134235858917236
    4. ' min' → logprob: -7.259235858917236
    5. '```' → logprob: -8.259236335754395
    6. '
' → logprob: -8.634236335754395
    7. ' smallest' → logprob: -8.884236335754395
    8. '    
' → logprob: -9.009236335754395
    9. 'small' → logprob: -9.259236335754395
    10. 'm' → logprob: -10.634236335754395

Token 216: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.46859464049339294
    2. '   ' → logprob: -1.2185946702957153
    3. '#' (adapté à ' #') → logprob: -3.593594551086426
    4. 'mn' → logprob: -3.718594551086426
    5. 'm' → logprob: -4.593594551086426
    6. 'small' → logprob: -5.343594551086426
    7. 'mi' → logprob: -5.593594551086426
    8. 'mini' → logprob: -6.468594551086426
    9. ' min' → logprob: -6.718594551086426
    10. 'minimum' → logprob: -7.218594551086426

Token 217: ' Track' (ID: 30844)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0906791090965271
    2. 'mn' → logprob: -3.090679168701172
    3. 'mi' → logprob: -4.465679168701172
    4. 'small' → logprob: -4.715679168701172
    5. 'mini' → logprob: -4.965679168701172
    6. 'm' → logprob: -6.090679168701172
    7. 'minimal' → logprob: -6.465679168701172
    8. 'minimum' → logprob: -6.715679168701172
    9. 'mx' → logprob: -7.090679168701172
    10. '#' → logprob: -7.090679168701172

Token 218: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.140776515007019
    2. ' the' → logprob: -1.390776515007019
    3. 'min' → logprob: -1.390776515007019
    4. ' minimal' → logprob: -2.8907766342163086
    5. ' smallest' → logprob: -3.2657766342163086
    6. 'the' → logprob: -3.3907766342163086
    7. ' min' → logprob: -3.5157766342163086
    8. 'minimal' → logprob: -4.765776634216309
    9. 'minimum' → logprob: -5.140776634216309
    10. ' minimum' → logprob: -5.890776634216309

Token 219: ' smallest' (ID: 42173)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.15489980578422546
    2. 'small' → logprob: -2.404899835586548
    3. 'min' → logprob: -3.154899835586548
    4. 'minimal' → logprob: -4.654899597167969
    5. ' smallest' → logprob: -7.154899597167969
    6. ' minimum' → logprob: -9.279899597167969
    7. 'abs' → logprob: -9.779899597167969
    8. 'absolute' → logprob: -10.404899597167969
    9. 'lowest' → logprob: -10.779899597167969
    10. ' minimal' → logprob: -11.154899597167969

Token 220: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.11500947177410126
    2. '_abs' → logprob: -2.3650095462799072
    3. ' abs' → logprob: -4.365009307861328
    4. ' absolute' → logprob: -7.615009307861328
    5. '_absolute' → logprob: -7.615009307861328
    6. 'absolute' → logprob: -7.865009307861328
    7. '(abs' → logprob: -8.115009307861328
    8. '_' → logprob: -8.865009307861328
    9. 'ab' → logprob: -9.865009307861328
    10. '.abs' → logprob: -10.740009307861328

Token 221: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5760606527328491
    2. ' value' → logprob: -0.8260606527328491
    3. '_value' → logprob: -9.45106029510498
    4. ' ' → logprob: -10.70106029510498
    5. '   ' → logprob: -11.32606029510498
    6. 'abs' → logprob: -12.82606029510498
    7. ' abs' → logprob: -13.20106029510498
    8. 'val' → logprob: -13.57606029510498
    9. '  ' → logprob: -14.45106029510498
    10. '    ' → logprob: -14.57606029510498

Token 222: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9966073036193848
    2. 'min' → logprob: -0.9966073036193848
    3. 'abs' → logprob: -1.8716073036193848
    4. ' min' → logprob: -2.7466073036193848
    5. ' abs' → logprob: -5.121607303619385
    6. 'm' → logprob: -5.246607303619385
    7. 'val' → logprob: -5.496607303619385
    8. ' smallest' → logprob: -5.621607303619385
    9. ' =' → logprob: -5.746607303619385
    10. 's' → logprob: -5.746607303619385

Token 223: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11104432493448257
    2. ' the' → logprob: -2.736044406890869
    3. 'the' → logprob: -3.736044406890869
    4. ' a' → logprob: -4.111044406890869
    5. '   ' → logprob: -10.611043930053711
    6. 'abs' → logprob: -12.861043930053711
    7. 'all' → logprob: -13.986043930053711
    8. ' ' → logprob: -14.111043930053711
    9. 's' → logprob: -14.236043930053711
    10. '```' → logprob: -14.361043930053711

Token 224: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18958333134651184
    2. 'a' → logprob: -2.0645833015441895
    3. ' list' → logprob: -3.1895833015441895
    4. 'array' → logprob: -5.4395833015441895
    5. ' a' → logprob: -9.189583778381348
    6. ' array' → logprob: -9.564583778381348
    7. 'input' → logprob: -9.939583778381348
    8. '   ' → logprob: -10.064583778381348
    9. 'sequence' → logprob: -11.814583778381348
    10. 'arr' → logprob: -11.814583778381348

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3074917495250702
    2. 'min' → logprob: -2.0574917793273926
    3. ' min' → logprob: -2.4324917793273926
    4. ' mn' → logprob: -3.8074917793273926
    5. ' smallest' → logprob: -4.682491779327393
    6. 'm' → logprob: -5.557491779327393
    7. ' minn' → logprob: -5.807491779327393
    8. 'mi' → logprob: -6.307491779327393
    9. 'mn' → logprob: -6.682491779327393
    10. ' m' → logprob: -7.182491779327393

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0961543619632721
    2. 'min' → logprob: -2.8461544513702393
    3. ' min' → logprob: -3.8461544513702393
    4. ' mn' → logprob: -5.47115421295166
    5. ' smallest' → logprob: -6.47115421295166
    6. 'm' → logprob: -6.59615421295166
    7. 'mn' → logprob: -6.84615421295166
    8. 'mi' → logprob: -6.97115421295166
    9. 'small' → logprob: -7.22115421295166
    10. ' minn' → logprob: -7.97115421295166

Token 227: ' tmp' (ID: 8919)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22764360904693604
    2. 'mn' → logprob: -2.3526434898376465
    3. 'm' → logprob: -3.2276434898376465
    4. 'mi' → logprob: -3.4776434898376465
    5. 'mini' → logprob: -4.2276434898376465
    6. 'small' → logprob: -4.9776434898376465
    7. '   ' → logprob: -6.2276434898376465
    8. 'mx' → logprob: -6.3526434898376465
    9. 'mind' → logprob: -6.7276434898376465
    10. ' min' → logprob: -6.8526434898376465

Token 228: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0651361420750618
    2. '=' → logprob: -2.815136194229126
    3. '_abs' → logprob: -6.065135955810547
    4. '_min' → logprob: -8.190135955810547
    5. '_val' → logprob: -8.565135955810547
    6. '_' → logprob: -8.565135955810547
    7. 'abs' → logprob: -9.315135955810547
    8. 'a' → logprob: -10.565135955810547
    9. '   ' → logprob: -10.815135955810547
    10. ' ' → logprob: -11.440135955810547

Token 229: ' =' (ID: 314)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20514902472496033
    2. ' =' → logprob: -1.9551490545272827
    3. '=' → logprob: -3.205148935317993
    4. 'a' → logprob: -6.455149173736572
    5. 'i' → logprob: -7.330149173736572
    6. 'ax' → logprob: -7.955149173736572
    7. '   ' → logprob: -8.080148696899414
    8. 'abs' → logprob: -8.580148696899414
    9. '  ' → logprob: -9.705148696899414
    10. '
' → logprob: -10.455148696899414

Token 230: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38869279623031616
    2. 'float' → logprob: -1.138692855834961
    3. 'int' → logprob: -6.638692855834961
    4. '100' → logprob: -7.763692855834961
    5. 'abs' → logprob: -10.138692855834961
    6. 'max' → logprob: -11.513692855834961
    7. '1' → logprob: -11.638692855834961
    8. ' float' → logprob: -11.638692855834961
    9. '101' → logprob: -12.138692855834961
    10. 'None' → logprob: -12.138692855834961

Token 231: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6944170594215393
    2. 'float' → logprob: -0.6944170594215393
    3. 'int' → logprob: -6.8194169998168945
    4. '100' → logprob: -8.944416999816895
    5. ' float' → logprob: -11.569416999816895
    6. 'abs' → logprob: -11.694416999816895
    7. '1' → logprob: -11.819416999816895
    8. 'max' → logprob: -11.819416999816895
    9. 'None' → logprob: -12.069416999816895
    10. '101' → logprob: -12.944416999816895

Token 232: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07087726891040802
    2. '10' → logprob: -3.3208773136138916
    3. '7' → logprob: -4.3208770751953125
    4. '6' → logprob: -4.5708770751953125
    5. '8' → logprob: -5.3208770751953125
    6. '0' → logprob: -6.3208770751953125
    7. '000' → logprob: -7.9458770751953125
    8. '00' → logprob: -8.195877075195312
    9. '18' → logprob: -8.195877075195312
    10. '**' → logprob: -8.320877075195312

Token 233: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.24185970425605774
    2. '10' → logprob: -1.6168596744537354
    3. '18' → logprob: -4.7418599128723145
    4. '15' → logprob: -5.2418599128723145
    5. '6' → logprob: -7.2418599128723145
    6. '12' → logprob: -7.6168599128723145
    7. '5' → logprob: -7.8668599128723145
    8. '11' → logprob: -8.616859436035156
    9. '7' → logprob: -8.741859436035156
    10. '19' → logprob: -9.366859436035156

Token 234: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6858053207397461
    2. '   ' → logprob: -1.310805320739746
    3. ' 
' → logprob: -2.435805320739746
    4. '    
' → logprob: -2.810805320739746
    5. ' for' → logprob: -3.685805320739746
    6. '\n' → logprob: -4.060805320739746
    7. '  
' → logprob: -4.560805320739746
    8. 'for' → logprob: -5.185805320739746
    9. ' ' → logprob: -5.310805320739746
    10. '	
' → logprob: -5.435805320739746

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03732098639011383
    2. ' for' → logprob: -3.662321090698242
    3. 'for' → logprob: -5.162321090698242
    4. '
' → logprob: -5.787321090698242
    5. '    
' → logprob: -6.412321090698242
    6. '	for' → logprob: -8.787321090698242
    7. '  
' → logprob: -8.912321090698242
    8. '\n' → logprob: -9.537321090698242
    9. '  ' → logprob: -10.287321090698242
    10. ' 
' → logprob: -10.412321090698242

Token 236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030335934832692146
    2. ' for' → logprob: -3.9053359031677246
    3. 'for' → logprob: -4.905335903167725
    4. '    
' → logprob: -6.280335903167725
    5. '
' → logprob: -7.905335903167725
    6. '	for' → logprob: -9.905336380004883
    7. '\n' → logprob: -11.655336380004883
    8. '  
' → logprob: -11.780336380004883
    9. ' 
' → logprob: -12.030336380004883
    10. '   
' → logprob: -12.155336380004883

Token 237: ' Flag' (ID: 40343)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03814396262168884
    2. 'has' → logprob: -4.038144111633301
    3. 'zero' → logprob: -4.163144111633301
    4. '   ' → logprob: -7.413144111633301
    5. 'found' → logprob: -7.413144111633301
    6. 'min' → logprob: -7.538144111633301
    7. 'contains' → logprob: -7.913144111633301
    8. ' for' → logprob: -8.0381441116333
    9. 'have' → logprob: -8.1631441116333
    10. 'z' → logprob: -8.2881441116333

Token 238: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35060301423072815
    2. '_' → logprob: -1.9756029844284058
    3. '=' → logprob: -2.3506031036376953
    4. '_zero' → logprob: -3.2256031036376953
    5. '_has' → logprob: -4.975603103637695
    6. '   ' → logprob: -5.225603103637695
    7. ' _' → logprob: -6.100603103637695
    8. ' for' → logprob: -6.600603103637695
    9. '_for' → logprob: -6.725603103637695
    10. ' ' → logprob: -7.100603103637695

Token 239: ' mark' (ID: 1983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01252813171595335
    2. ' False' → logprob: -4.387527942657471
    3. '(False' → logprob: -11.637528419494629
    4. '0' → logprob: -12.137528419494629
    5. '=False' → logprob: -13.262528419494629
    6. 'F' → logprob: -14.012528419494629
    7. '_false' → logprob: -14.637528419494629
    8. 'True' → logprob: -14.762528419494629
    9. ' ' → logprob: -15.387528419494629
    10. 'detect' → logprob: -15.512528419494629

Token 240: ' if' (ID: 538)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.8027377128601074
    2. ' if' → logprob: -1.6777377128601074
    3. ' presence' → logprob: -1.6777377128601074
    4. 'False' → logprob: -2.1777377128601074
    5. ' True' → logprob: -3.9277377128601074
    6. ' the' → logprob: -4.052737712860107
    7. ' any' → logprob: -4.927737712860107
    8. ' ' → logprob: -5.552737712860107
    9. ' a' → logprob: -5.802737712860107
    10. '0' → logprob: -5.927737712860107

Token 241: ' zero' (ID: 12421)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48233503103256226
    2. '0' → logprob: -0.9823350310325623
    3. ' any' → logprob: -5.107335090637207
    4. ' False' → logprob: -7.107335090637207
    5. ' zero' → logprob: -7.607335090637207
    6. 'False' → logprob: -8.107335090637207
    7. ' a' → logprob: -8.732335090637207
    8. ' True' → logprob: -8.982335090637207
    9. 'any' → logprob: -9.107335090637207
    10. 'zero' → logprob: -10.357335090637207

Token 242: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40659889578819275
    2. ' is' → logprob: -1.4065989255905151
    3. 'in' → logprob: -2.7815988063812256
    4. 'is' → logprob: -4.406599044799805
    5. ' exists' → logprob: -5.031599044799805
    6. 'exists' → logprob: -5.531599044799805
    7. ' has' → logprob: -6.781599044799805
    8. ' ' → logprob: -7.406599044799805
    9. ' was' → logprob: -7.656599044799805
    10. ' present' → logprob: -7.656599044799805

Token 243: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30769672989845276
    2. '   ' → logprob: -1.5576967000961304
    3. '=' → logprob: -3.05769681930542
    4. 'zero' → logprob: -6.30769681930542
    5. '=False' → logprob: -6.68269681930542
    6. ' zero' → logprob: -7.30769681930542
    7. 'found' → logprob: -7.43269681930542
    8. ' ' → logprob: -8.307696342468262
    9. '_' → logprob: -8.307696342468262
    10. 'exists' → logprob: -8.432696342468262

Token 244: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13028670847415924
    2. ' a' → logprob: -2.130286693572998
    3. ' the' → logprob: -5.880286693572998
    4. 'the' → logprob: -7.505286693572998
    5. '   ' → logprob: -12.380287170410156
    6. ' ' → logprob: -14.255287170410156
    7. '0' → logprob: -14.505287170410156
    8. 'False' → logprob: -14.505287170410156
    9. '	a' → logprob: -14.630287170410156
    10. '```' → logprob: -15.755287170410156

Token 245: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5338419675827026
    2. 'list' → logprob: -1.0338419675827026
    3. ' list' → logprob: -2.908842086791992
    4. ' a' → logprob: -6.408842086791992
    5. 'array' → logprob: -6.658842086791992
    6. 'input' → logprob: -8.033842086791992
    7. ' array' → logprob: -8.908842086791992
    8. 'lst' → logprob: -10.408842086791992
    9. ' input' → logprob: -10.658842086791992
    10. '   ' → logprob: -11.658842086791992

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08965310454368591
    2. ' zero' → logprob: -3.3396530151367188
    3. 'zero' → logprob: -4.214653015136719
    4. ' =' → logprob: -4.464653015136719
    5. ' has' → logprob: -4.589653015136719
    6. '
' → logprob: -5.339653015136719
    7. 'z' → logprob: -6.714653015136719
    8. 'has' → logprob: -6.714653015136719
    9. '=' → logprob: -7.214653015136719
    10. ',' → logprob: -7.214653015136719

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10244917869567871
    2. ' has' → logprob: -2.9774491786956787
    3. ' zero' → logprob: -3.9774491786956787
    4. 'zero' → logprob: -4.477449417114258
    5. 'z' → logprob: -4.977449417114258
    6. 'has' → logprob: -5.727449417114258
    7. '0' → logprob: -6.727449417114258
    8. ' is' → logprob: -6.977449417114258
    9. ' z' → logprob: -7.352449417114258
    10. '    
' → logprob: -7.852449417114258

Token 248: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' (adapté à ' zero') → logprob: -1.0416254997253418
    2. 'f' → logprob: -1.5416254997253418
    3. ' zero' → logprob: -2.166625499725342
    4. 'has' → logprob: -2.666625499725342
    5. 'flag' → logprob: -3.041625499725342
    6. ' f' → logprob: -3.041625499725342
    7. ' has' → logprob: -3.416625499725342
    8. 'z' → logprob: -3.541625499725342
    9. 'have' → logprob: -4.541625499725342
    10. 'fl' → logprob: -4.666625499725342

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6706175208091736
    2. '_' → logprob: -1.4206175804138184
    3. '_found' → logprob: -2.2956175804138184
    4. '_present' → logprob: -2.6706175804138184
    5. ' =' → logprob: -3.1706175804138184
    6. '_exists' → logprob: -3.4206175804138184
    7. '_exist' → logprob: -7.045617580413818
    8. '_ex' → logprob: -7.170617580413818
    9. '_flag' → logprob: -8.29561710357666
    10. '_presence' → logprob: -8.79561710357666

Token 250: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04860791191458702
    2. ' False' → logprob: -3.04860782623291
    3. '0' → logprob: -10.79860782623291
    4. ' ' → logprob: -17.173608779907227
    5. 'True' → logprob: -17.673608779907227
    6. '=False' → logprob: -17.673608779907227
    7. '(False' → logprob: -17.798608779907227
    8. '   ' → logprob: -17.923608779907227
    9. 'F' → logprob: -18.173608779907227
    10. 'false' → logprob: -19.798608779907227

Token 251: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01404468435794115
    2. '    
' → logprob: -4.764044761657715
    3. '
' → logprob: -5.639044761657715
    4. ' for' → logprob: -6.514044761657715
    5. 'for' → logprob: -8.139044761657715
    6. '	for' → logprob: -10.764044761657715
    7. '  
' → logprob: -11.014044761657715
    8. '	
' → logprob: -11.139044761657715
    9. ' 
' → logprob: -11.764044761657715
    10. '   
' → logprob: -11.889044761657715

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019543254747986794
    2. '    
' → logprob: -7.001954555511475
    3. ' for' → logprob: -7.501954555511475
    4. '
' → logprob: -8.001954078674316
    5. 'for' → logprob: -8.876954078674316
    6. '	for' → logprob: -11.626954078674316
    7. '```' → logprob: -13.501954078674316
    8. '    ' → logprob: -13.751954078674316
    9. '	
' → logprob: -13.876954078674316
    10. ' 
' → logprob: -14.001954078674316

Token 253: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012956916354596615
    2. '   ' → logprob: -4.5129570960998535
    3. ' for' → logprob: -6.2629570960998535
    4. '	for' → logprob: -13.637956619262695
    5. '    
' → logprob: -15.262956619262695
    6. '
' → logprob: -15.262956619262695
    7. ' ' → logprob: -17.012956619262695
    8. '```' → logprob: -17.262956619262695
    9. '  ' → logprob: -17.887956619262695
    10. 'i' → logprob: -19.137956619262695

Token 254: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004088493529707193
    2. ' for' → logprob: -5.504088401794434
    3. '   ' → logprob: -11.504088401794434
    4. ' ' → logprob: -18.12908935546875
    5. 'For' → logprob: -18.12908935546875
    6. '	for' → logprob: -19.00408935546875
    7. '  ' → logprob: -19.62908935546875
    8. '```' → logprob: -21.25408935546875
    9. '    
' → logprob: -21.37908935546875
    10. '    ' → logprob: -21.37908935546875

Token 255: ' through' (ID: 1819)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35854047536849976
    2. ' over' → logprob: -1.6085405349731445
    3. ' through' → logprob: -2.8585405349731445
    4. ' for' → logprob: -3.2335405349731445
    5. '    ' → logprob: -5.7335405349731445
    6. ' a' → logprob: -7.8585405349731445
    7. '       ' → logprob: -8.483540534973145
    8. ' ' → logprob: -8.608540534973145
    9. 'for' → logprob: -8.608540534973145
    10. '  ' → logprob: -9.733540534973145

Token 256: ' each' (ID: 2454)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3133273422718048
    2. 'a' → logprob: -1.3133273124694824
    3. '   ' → logprob: -9.81332778930664
    4. ' ' → logprob: -12.31332778930664
    5. ' the' → logprob: -12.93832778930664
    6. ' range' → logprob: -13.43832778930664
    7. '	a' → logprob: -13.93832778930664
    8. '  ' → logprob: -14.06332778930664
    9. '    ' → logprob: -14.81332778930664
    10. 'range' → logprob: -15.18832778930664

Token 257: ' element' (ID: 3577)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.40230005979537964
    2. ' element' → logprob: -1.7773001194000244
    3. 'a' → logprob: -2.6523001194000244
    4. ' number' → logprob: -3.7773001194000244
    5. ' x' → logprob: -3.7773001194000244
    6. ' ' → logprob: -4.402299880981445
    7. '   ' → logprob: -4.652299880981445
    8. ' num' → logprob: -5.027299880981445
    9. ' i' → logprob: -5.652299880981445
    10. 'element' → logprob: -5.652299880981445

Token 258: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052035123109817505
    2. ':' → logprob: -3.677035093307495
    3. ' for' → logprob: -3.802035093307495
    4. ' in' → logprob: -6.052035331726074
    5. 'for' → logprob: -8.302035331726074
    6. '    
' → logprob: -8.677035331726074
    7. '    ' → logprob: -9.052035331726074
    8. ':
' → logprob: -9.677035331726074
    9. ',' → logprob: -10.302035331726074
    10. '  ' → logprob: -11.302035331726074

Token 259: ' gather' (ID: 13660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5285240411758423
    2. ' calculate' → logprob: -1.0285240411758423
    3. 'calculate' → logprob: -4.278523921966553
    4. ' process' → logprob: -4.903523921966553
    5. '    ' → logprob: -5.278523921966553
    6. ' ' → logprob: -5.278523921966553
    7. ' compute' → logprob: -5.278523921966553
    8. 'abs' → logprob: -5.403523921966553
    9. '  ' → logprob: -5.528523921966553
    10. ' abs' → logprob: -6.403523921966553

Token 260: ' necessary' (ID: 8155)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39255186915397644
    2. ' a' → logprob: -2.017551898956299
    3. ' the' → logprob: -2.767551898956299
    4. 'a' → logprob: -3.267551898956299
    5. ' abs' → logprob: -3.517551898956299
    6. 'abs' → logprob: -3.892551898956299
    7. ' data' → logprob: -4.892551898956299
    8. ' information' → logprob: -5.017551898956299
    9. ' values' → logprob: -5.392551898956299
    10. '    ' → logprob: -5.517551898956299

Token 261: ' information' (ID: 2164)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.6109047532081604
    2. '   ' → logprob: -0.9859047532081604
    3. ' information' → logprob: -2.8609046936035156
    4. ' a' → logprob: -4.985904693603516
    5. ' for' → logprob: -5.235904693603516
    6. 'data' → logprob: -5.235904693603516
    7. ' info' → logprob: -5.860904693603516
    8. '    ' → logprob: -6.610904693603516
    9. ' elements' → logprob: -6.985904693603516
    10. '  ' → logprob: -7.485904693603516

Token 262: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012035101652145386
    2. ' for' → logprob: -4.762034893035889
    3. 'for' → logprob: -5.887034893035889
    4. '    
' → logprob: -8.137035369873047
    5. ':' → logprob: -8.262035369873047
    6. '    ' → logprob: -10.887035369873047
    7. '
' → logprob: -11.137035369873047
    8. '  
' → logprob: -11.387035369873047
    9. ',' → logprob: -11.637035369873047
    10. '  ' → logprob: -11.887035369873047

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003865873673930764
    2. ' for' → logprob: -6.128865718841553
    3. '    
' → logprob: -6.753865718841553
    4. 'for' → logprob: -8.003866195678711
    5. '    ' → logprob: -9.253866195678711
    6. '
' → logprob: -10.878866195678711
    7. ':' → logprob: -11.253866195678711
    8. '       ' → logprob: -11.628866195678711
    9. '   
' → logprob: -11.753866195678711
    10. '  
' → logprob: -12.003866195678711

Token 264: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06681157648563385
    2. '   ' → logprob: -3.3168115615844727
    3. 'for' (adapté à ' for') → logprob: -3.5668115615844727
    4. '    
' → logprob: -9.316811561584473
    5. ' 
' → logprob: -11.566811561584473
    6. '    ' → logprob: -12.066811561584473
    7. ' ' → logprob: -12.691811561584473
    8. '
' → logprob: -13.691811561584473
    9. '	for' → logprob: -14.066811561584473
    10. '   
' → logprob: -14.191811561584473

Token 265: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4841243028640747
    2. ' x' → logprob: -1.6091243028640747
    3. 'num' → logprob: -2.609124183654785
    4. ' num' → logprob: -3.109124183654785
    5. 'i' → logprob: -3.234124183654785
    6. ' i' → logprob: -4.109124183654785
    7. 'v' → logprob: -5.484124183654785
    8. ' v' → logprob: -6.109124183654785
    9. 'value' → logprob: -6.984124183654785
    10. 'val' → logprob: -7.609124183654785

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.160588338971138
    2. 'in' → logprob: -1.9105883836746216
    3. ' ' → logprob: -9.160588264465332
    4. '   ' → logprob: -9.160588264465332
    5. ',' → logprob: -9.910588264465332
    6. '_' → logprob: -10.785588264465332
    7. ')' → logprob: -10.785588264465332
    8. '  ' → logprob: -11.160588264465332
    9. '    ' → logprob: -11.285588264465332
    10. '	in' → logprob: -11.410588264465332

Token 267: ' range' (ID: 3352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3716695308685303
    2. 'range' → logprob: -1.7466695308685303
    3. ' range' → logprob: -2.2466695308685303
    4. ' a' → logprob: -3.4966695308685303
    5. ' ' → logprob: -12.12166976928711
    6. '   ' → logprob: -12.87166976928711
    7. '  ' → logprob: -13.37166976928711
    8. '    ' → logprob: -14.24666976928711
    9. '	range' → logprob: -14.49666976928711
    10. '	a' → logprob: -14.55916976928711

Token 268: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002002153778448701
    2. '(' → logprob: -6.377002239227295
    3. '(len' → logprob: -8.127001762390137
    4. 'n' → logprob: -13.127001762390137
    5. ' (' → logprob: -13.252001762390137
    6. '   ' → logprob: -14.877001762390137
    7. '(
' → logprob: -15.127001762390137
    8. ' n' → logprob: -16.502002716064453
    9. 'len' → logprob: -16.502002716064453
    10. ')' → logprob: -17.877002716064453

Token 269: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006047892849892378
    2. '):
' → logprob: -5.13104772567749
    3. ' ):' → logprob: -9.881048202514648
    4. ':' → logprob: -10.381048202514648
    5. ')' → logprob: -10.881048202514648
    6. '   ' → logprob: -11.006048202514648
    7. '):
' → logprob: -14.381048202514648
    8. ' ):
' → logprob: -15.381048202514648
    9. '):

' → logprob: -15.631048202514648
    10. '+' → logprob: -15.881048202514648

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023846877738833427
    2. '   ' → logprob: -6.377384662628174
    3. '        
' → logprob: -8.377385139465332
    4. '    ' → logprob: -8.752385139465332
    5. '    
' → logprob: -9.502385139465332
    6. ' ' → logprob: -10.002385139465332
    7. ' 
' → logprob: -10.752385139465332
    8. '```' → logprob: -10.752385139465332
    9. ',' → logprob: -10.877385139465332
    10. '     ' → logprob: -11.127385139465332

Token 271: ' #' (ID: 1069)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.297955185174942
    2. 'val' → logprob: -2.547955274581909
    3. '   ' → logprob: -3.047955274581909
    4. ' x' → logprob: -3.047955274581909
    5. 'abs' → logprob: -3.922955274581909
    6. '       ' → logprob: -4.17295503616333
    7. ' if' → logprob: -4.29795503616333
    8. ' abs' → logprob: -4.42295503616333
    9. 'x' → logprob: -4.92295503616333
    10. 'v' → logprob: -5.54795503616333

Token 272: ' If' (ID: 1843)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.795732319355011
    2. ' val' → logprob: -0.795732319355011
    3. 'abs' → logprob: -2.920732259750366
    4. 'x' → logprob: -4.420732498168945
    5. ' x' → logprob: -4.795732498168945
    6. 'value' → logprob: -5.045732498168945
    7. 'v' → logprob: -5.170732498168945
    8. ' abs' → logprob: -6.170732498168945
    9. 'num' → logprob: -6.295732498168945
    10. 'if' → logprob: -6.545732498168945

Token 273: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6326569318771362
    2. 'a' → logprob: -0.7576569318771362
    3. '   ' → logprob: -10.382657051086426
    4. ' ' → logprob: -11.007657051086426
    5. '	a' → logprob: -12.507657051086426
    6. '    ' → logprob: -12.882657051086426
    7. '  ' → logprob: -13.632657051086426
    8. ' ' → logprob: -14.507657051086426
    9. '(a' → logprob: -14.882657051086426
    10. '_a' → logprob: -15.007657051086426

Token 274: ' number' (ID: 2086)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009148012613877654
    2. ' a' → logprob: -7.000914573669434
    3. '   ' → logprob: -14.000914573669434
    4. 'zero' → logprob: -14.375914573669434
    5. ' ' → logprob: -14.625914573669434
    6. '	a' → logprob: -15.500914573669434
    7. '
' → logprob: -15.750914573669434
    8. 'ai' → logprob: -15.750914573669434
    9. '_a' → logprob: -15.875914573669434
    10. '[a' → logprob: -16.12591552734375

Token 275: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9686557650566101
    2. '<' → logprob: -1.0936558246612549
    3. '[i' → logprob: -1.5936558246612549
    4. 'a' → logprob: -3.218655824661255
    5. '[a' → logprob: -3.343655824661255
    6. '[' → logprob: -5.468655586242676
    7. '   ' → logprob: -6.593655586242676
    8. '<a' → logprob: -7.843655586242676
    9. ' a' → logprob: -8.093655586242676
    10. 's' → logprob: -8.843655586242676

Token 276: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -1.083849549293518
    2. '0' → logprob: -1.333849549293518
    3. '<' → logprob: -1.583849549293518
    4. ' negative' → logprob: -2.2088494300842285
    5. 'zero' → logprob: -3.5838494300842285
    6. ' zero' → logprob: -4.2088494300842285
    7. 'less' → logprob: -4.3338494300842285
    8. ' <' → logprob: -4.4588494300842285
    9. ' less' → logprob: -4.4588494300842285
    10. ' ' → logprob: -5.5838494300842285

Token 277: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5346271395683289
    2. '       ' → logprob: -1.2846271991729736
    3. ',' → logprob: -2.7846271991729736
    4. ' and' → logprob: -3.4096271991729736
    5. ':
' → logprob: -3.6596271991729736
    6. '           ' → logprob: -4.4096269607543945
    7. ' or' → logprob: -6.1596269607543945
    8. 'and' → logprob: -6.7846269607543945
    9. '   ' → logprob: -7.6596269607543945
    10. '<|end|>' → logprob: -8.159626960754395

Token 278: ' increment' (ID: 24032)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02824600599706173
    2. 'c' → logprob: -3.7782459259033203
    3. '   ' → logprob: -5.65324592590332
    4. '       ' → logprob: -6.90324592590332
    5. '	c' → logprob: -7.90324592590332
    6. ' ' → logprob: -10.27824592590332
    7. '    ' → logprob: -10.52824592590332
    8. '           ' → logprob: -11.15324592590332
    9. ' ' → logprob: -11.52824592590332
    10. '<|end|>' → logprob: -12.77824592590332

Token 279: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10021205991506577
    2. ' c' → logprob: -2.3502120971679688
    3. '   ' → logprob: -12.975212097167969
    4. '	c' → logprob: -13.350212097167969
    5. ' ' → logprob: -14.475212097167969
    6. ' the' → logprob: -15.225212097167969
    7. '       ' → logprob: -15.725212097167969
    8. '1' → logprob: -16.22521209716797
    9. ')c' → logprob: -16.60021209716797
    10. ' ' → logprob: -16.72521209716797

Token 280: ' counter' (ID: 9446)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016370875760912895
    2. ' c' → logprob: -4.14137077331543
    3. 'count' → logprob: -8.39137077331543
    4. 'counter' → logprob: -10.01637077331543
    5. '   ' → logprob: -10.51637077331543
    6. ' count' → logprob: -10.76637077331543
    7. ' counter' → logprob: -11.76637077331543
    8. ' ' → logprob: -12.64137077331543
    9. '	c' → logprob: -13.76637077331543
    10. 'negative' → logprob: -13.76637077331543

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010128596797585487
    2. ':' → logprob: -5.260128498077393
    3. '           ' → logprob: -6.135128498077393
    4. '   ' → logprob: -6.885128498077393
    5. ' and' → logprob: -7.510128498077393
    6. ':
' → logprob: -7.760128498077393
    7. ',' → logprob: -8.38512897491455
    8. ' if' → logprob: -8.51012897491455
    9. ' c' → logprob: -9.01012897491455
    10. 'c' → logprob: -10.63512897491455

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002917214762419462
    2. ' c' → logprob: -6.002917289733887
    3. ' if' → logprob: -8.252917289733887
    4. ',' → logprob: -9.752917289733887
    5. '           ' → logprob: -10.002917289733887
    6. '   ' → logprob: -10.502917289733887
    7. 'c' → logprob: -10.627917289733887
    8. ',c' → logprob: -12.252917289733887
    9. '(c' → logprob: -12.502917289733887
    10. '      ' → logprob: -13.002917289733887

Token 283: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.553335428237915
    2. 'if' (adapté à ' if') → logprob: -1.303335428237915
    3. ' c' → logprob: -2.053335428237915
    4. 'c' → logprob: -3.928335428237915
    5. '       ' → logprob: -5.303335189819336
    6. '   ' → logprob: -7.928335189819336
    7. '           ' → logprob: -11.303335189819336
    8. '    ' → logprob: -11.928335189819336
    9. ' ' → logprob: -12.928335189819336
    10. '```' → logprob: -13.303335189819336

Token 284: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931586861610413
    2. ' a' → logprob: -0.6931586861610413
    3. '   ' → logprob: -11.943159103393555
    4. '	a' → logprob: -13.068159103393555
    5. ' ' → logprob: -13.318159103393555
    6. '    ' → logprob: -14.693159103393555
    7. '(a' → logprob: -14.943159103393555
    8. '  ' → logprob: -16.193159103393555
    9. ' ' → logprob: -16.193159103393555
    10. '_a' → logprob: -16.693159103393555

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004090747330337763
    2. '[' → logprob: -5.504090785980225
    3. '[a' → logprob: -12.254090309143066
    4. '[
' → logprob: -12.879090309143066
    5. ' [' → logprob: -13.004090309143066
    6. '[I' → logprob: -13.879090309143066
    7. '\[' → logprob: -14.629090309143066
    8. '```' → logprob: -15.004090309143066
    9. 'i' → logprob: -15.129090309143066
    10. '   ' → logprob: -15.754090309143066

Token 286: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25573354959487915
    2. '<' → logprob: -1.5057334899902344
    3. '[' → logprob: -6.130733489990234
    4. ')' → logprob: -6.755733489990234
    5. ']' → logprob: -8.630733489990234
    6. ' ' → logprob: -8.880733489990234
    7. '   ' → logprob: -10.255733489990234
    8. ')<' → logprob: -10.380733489990234
    9. ' )' → logprob: -11.255733489990234
    10. '  ' → logprob: -11.255733489990234

Token 287: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3869890868663788
    2. ' <' → logprob: -1.1369891166687012
    3. ' ' → logprob: -9.761988639831543
    4. '[' → logprob: -10.011988639831543
    5. '   ' → logprob: -12.386988639831543
    6. '  ' → logprob: -13.261988639831543
    7. '{' → logprob: -13.386988639831543
    8. ')' → logprob: -13.636988639831543
    9. 's' → logprob: -14.011988639831543
    10. '.' → logprob: -14.261988639831543

Token 288: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '  ' → logprob: -17.628599166870117
    4. '   ' → logprob: -17.878599166870117
    5. '=' → logprob: -18.378599166870117
    6. ' ' → logprob: -19.003599166870117
    7. '    ' → logprob: -20.003599166870117
    8. '۰' → logprob: -20.253599166870117
    9. 'zero' → logprob: -20.378599166870117
    10. '```' → logprob: -20.378599166870117

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. '   ' → logprob: -15.000805854797363
    4. 'zero' → logprob: -15.000805854797363
    5. '  ' → logprob: -16.000804901123047
    6. '
' → logprob: -16.125804901123047
    7. '=' → logprob: -16.500804901123047
    8. '

' → logprob: -16.938304901123047
    9. ' zero' → logprob: -17.063304901123047
    10. '۰' → logprob: -17.500804901123047

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6339573860168457
    2. ':
' → logprob: -0.7589573860168457
    3. '       ' → logprob: -7.258957386016846
    4. '           ' → logprob: -8.133956909179688
    5. '):
' → logprob: -8.133956909179688
    6. '):' → logprob: -10.383956909179688
    7. ':
' → logprob: -11.258956909179688
    8. ',' → logprob: -12.133956909179688
    9. '   ' → logprob: -12.508956909179688
    10. ' :
' → logprob: -12.758956909179688

Token 291: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35150447487831116
    2. '           ' → logprob: -1.3515044450759888
    3. ' c' → logprob: -3.6015045642852783
    4. '	       ' → logprob: -5.351504325866699
    5. 'c' → logprob: -5.726504325866699
    6. '	c' → logprob: -6.476504325866699
    7. '	   ' → logprob: -9.1015043258667
    8. '	' → logprob: -9.2265043258667
    9. '   ' → logprob: -9.6015043258667
    10. ' ' → logprob: -9.7265043258667

Token 292: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47526872158050537
    2. 'c' (adapté à ' c') → logprob: -0.9752687215805054
    3. '           ' → logprob: -7.475268840789795
    4. '       ' → logprob: -8.100268363952637
    5. '	c' → logprob: -8.475268363952637
    6. '   ' → logprob: -9.350268363952637
    7. '               ' → logprob: -10.975268363952637
    8. ' ' → logprob: -12.850268363952637
    9. ',c' → logprob: -13.850268363952637
    10. ')c' → logprob: -13.975268363952637

Token 293: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061979785561561584
    2. ' +=' → logprob: -2.8119797706604004
    3. '=' → logprob: -12.061980247497559
    4. '   ' → logprob: -12.936980247497559
    5. '       ' → logprob: -13.561980247497559
    6. ']+=' → logprob: -13.686980247497559
    7. '           ' → logprob: -14.061980247497559
    8. '+' → logprob: -14.436980247497559
    9. '```' → logprob: -17.186979293823242
    10. ' =' → logprob: -17.186979293823242

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.501171112060547
    4. '  ' → logprob: -18.751171112060547
    5. '```' → logprob: -18.876171112060547
    6. ' ' → logprob: -20.376171112060547
    7. '0' → logprob: -20.751171112060547
    8. '2' → logprob: -20.813671112060547
    9. '<|end|>' → logprob: -20.938671112060547
    10. '+' → logprob: -21.563671112060547

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.5
    5. '2' → logprob: -21.6875
    6. 's' → logprob: -21.8125
    7. '-' → logprob: -22.125
    8. '
' → logprob: -22.25
    9. '0' → logprob: -22.4375
    10. '۱' → logprob: -22.5

Token 296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18690074980258942
    2. '<|end|>' → logprob: -2.0619008541107178
    3. '
' → logprob: -3.3119008541107178
    4. '        
' → logprob: -6.061900615692139
    5. '  
' → logprob: -6.686900615692139
    6. '    
' → logprob: -7.311900615692139
    7. '<|end|>' → logprob: -7.311900615692139
    8. ' 
' → logprob: -7.561900615692139
    9. '   ' → logprob: -8.061901092529297
    10. '\n' → logprob: -8.311901092529297

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016247263178229332
    2. '   ' → logprob: -4.516247272491455
    3. '<|end|>' → logprob: -5.641247272491455
    4. ' ' → logprob: -7.641247272491455
    5. '        
' → logprob: -8.516246795654297
    6. ')' → logprob: -8.891246795654297
    7. '
' → logprob: -9.266246795654297
    8. '           ' → logprob: -9.391246795654297
    9. '     ' → logprob: -9.391246795654297
    10. '```' → logprob: -9.516246795654297

Token 298: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28438273072242737
    2. '   ' → logprob: -2.1593828201293945
    3. 'tmp' → logprob: -2.4093828201293945
    4. ' tmp' → logprob: -3.6593828201293945
    5. 'abs' → logprob: -5.1593828201293945
    6. 'ans' → logprob: -5.5343828201293945
    7. ' abs' → logprob: -6.4093828201293945
    8. 'val' → logprob: -6.5343828201293945
    9. ' val' → logprob: -6.9093828201293945
    10. ' ans' → logprob: -7.4093828201293945

Token 299: ' If' (ID: 1843)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.537555456161499
    2. 'ans' → logprob: -1.162555456161499
    3. 'val' → logprob: -2.662555456161499
    4. 'tmp' → logprob: -3.787555456161499
    5. ' abs' → logprob: -6.037555694580078
    6. ' ans' → logprob: -6.037555694580078
    7. ' val' → logprob: -6.162555694580078
    8. '   ' → logprob: -6.787555694580078
    9. 'if' → logprob: -7.037555694580078
    10. 'value' → logprob: -7.912555694580078

Token 300: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02975604310631752
    2. ' a' → logprob: -3.5297560691833496
    3. '   ' → logprob: -13.404755592346191
    4. 'abs' → logprob: -13.529755592346191
    5. ' ' → logprob: -14.529755592346191
    6. '	a' → logprob: -14.654755592346191
    7. 'not' → logprob: -14.904755592346191
    8. ' ' → logprob: -15.279755592346191
    9. ' not' → logprob: -15.404755592346191
    10. '(a' → logprob: -15.529755592346191

Token 301: ' number' (ID: 2086)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01673246920108795
    2. ' a' → logprob: -4.141732692718506
    3. 'abs' → logprob: -7.516732692718506
    4. ' abs' → logprob: -8.891732215881348
    5. ' ' → logprob: -11.766732215881348
    6. '0' → logprob: -14.016732215881348
    7. 'zero' → logprob: -14.141732215881348
    8. '   ' → logprob: -14.266732215881348
    9. ' is' → logprob: -14.579232215881348
    10. ' zero' → logprob: -14.829232215881348

Token 302: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3877238631248474
    2. ' ==' → logprob: -1.1377239227294922
    3. '[i' → logprob: -7.137723922729492
    4. ' ' → logprob: -11.137723922729492
    5. '=' → logprob: -11.262723922729492
    6. '[' → logprob: -11.762723922729492
    7. 'a' → logprob: -11.887723922729492
    8. ' is' → logprob: -12.637723922729492
    9. ']==' → logprob: -12.762723922729492
    10. '[]' → logprob: -13.262723922729492

Token 303: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.000125885009766
    3. 'zero' → logprob: -13.500125885009766
    4. ' zero' → logprob: -13.875125885009766
    5. '==' → logprob: -15.375125885009766
    6. '=' → logprob: -16.125125885009766
    7. '```' → logprob: -18.000125885009766
    8. ' ==' → logprob: -18.500125885009766
    9. 'equal' → logprob: -19.500125885009766
    10. 'exact' → logprob: -19.500125885009766

Token 304: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46867120265960693
    2. '       ' → logprob: -1.343671202659607
    3. ':
' → logprob: -2.5936713218688965
    4. '           ' → logprob: -3.7186713218688965
    5. '==' → logprob: -5.0936713218688965
    6. ' ==' → logprob: -5.7186713218688965
    7. '<|end|>' → logprob: -6.5936713218688965
    8. ' and' → logprob: -6.8436713218688965
    9. ' or' → logprob: -7.0936713218688965
    10. ',' → logprob: -7.7186713218688965

Token 305: ' turn' (ID: 3716)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.06296013295650482
    2. '       ' → logprob: -3.562960147857666
    3. 'zero' → logprob: -3.812960147857666
    4. '           ' → logprob: -4.562960147857666
    5. '   ' → logprob: -9.687959671020508
    6. '0' → logprob: -11.312959671020508
    7. '
' → logprob: -11.437959671020508
    8. '               ' → logprob: -11.437959671020508
    9. '.zero' → logprob: -11.437959671020508
    10. '        ' → logprob: -11.812959671020508

Token 306: ' on' (ID: 402)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.5241203308105469
    2. 'zero' → logprob: -0.8991203308105469
    3. '   ' → logprob: -7.149120330810547
    4. ' ' → logprob: -9.899120330810547
    5. ' True' → logprob: -10.399120330810547
    6. 'True' → logprob: -10.399120330810547
    7. 's' → logprob: -11.024120330810547
    8. 'z' → logprob: -11.274120330810547
    9. '_zero' → logprob: -11.274120330810547
    10. '  ' → logprob: -11.649120330810547

Token 307: ' the' (ID: 290)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.42900869250297546
    2. ' zero' → logprob: -1.0540087223052979
    3. 'True' → logprob: -8.929008483886719
    4. '   ' → logprob: -9.429008483886719
    5. ' True' → logprob: -9.804008483886719
    6. '
' → logprob: -11.179008483886719
    7. 'true' → logprob: -11.429008483886719
    8. '       ' → logprob: -12.179008483886719
    9. ' true' → logprob: -13.179008483886719
    10. ' ' → logprob: -13.554008483886719

Token 308: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.009771197102963924
    2. ' zero' → logprob: -4.634771347045898
    3. 'True' → logprob: -12.009771347045898
    4. 'true' → logprob: -12.759771347045898
    5. 'flag' → logprob: -13.134771347045898
    6. '   ' → logprob: -13.884771347045898
    7. '1' → logprob: -14.384771347045898
    8. '
' → logprob: -14.634771347045898
    9. '`' → logprob: -15.009771347045898
    10. '0' → logprob: -15.134771347045898

Token 309: ' flag' (ID: 9641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09477335214614868
    2. '=' → logprob: -2.594773292541504
    3. '=True' → logprob: -4.969773292541504
    4. 'flag' → logprob: -5.594773292541504
    5. '_flag' → logprob: -6.094773292541504
    6. ' flag' → logprob: -6.594773292541504
    7. '   ' → logprob: -7.594773292541504
    8. ')' → logprob: -8.469773292541504
    9. ' ' → logprob: -8.719773292541504
    10. '=False' → logprob: -8.844773292541504

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010283772833645344
    2. '           ' → logprob: -5.260283946990967
    3. ' zero' → logprob: -5.510283946990967
    4. 'zero' → logprob: -7.510283946990967
    5. ' if' → logprob: -8.385283470153809
    6. '
' → logprob: -9.760283470153809
    7. '   ' → logprob: -9.885283470153809
    8. ',' → logprob: -10.385283470153809
    9. '        
' → logprob: -10.635283470153809
    10. '```' → logprob: -11.510283470153809

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074088010005652905
    2. ' if' → logprob: -5.632408618927002
    3. '           ' → logprob: -6.382408618927002
    4. ' zero' → logprob: -6.632408618927002
    5. 'zero' → logprob: -7.757408618927002
    6. 'if' → logprob: -8.50740909576416
    7. '   ' → logprob: -9.63240909576416
    8. '```' → logprob: -10.13240909576416
    9. '        
' → logprob: -10.88240909576416
    10. '
' → logprob: -11.88240909576416

Token 312: ' elif' (ID: 9497)
  Prédit: ' zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.36635640263557434
    2. '       ' → logprob: -1.616356372833252
    3. 'zero' → logprob: -2.616356372833252
    4. ' if' → logprob: -3.616356372833252
    5. '           ' → logprob: -5.366356372833252
    6. 'if' → logprob: -5.866356372833252
    7. '   ' → logprob: -7.491356372833252
    8. '```' → logprob: -10.24135684967041
    9. ' ' → logprob: -10.99135684967041
    10. '               ' → logprob: -11.49135684967041

Token 313: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14268165826797485
    2. ' a' → logprob: -2.01768159866333
    3. '0' → logprob: -13.392682075500488
    4. 'zero' → logprob: -13.642682075500488
    5. '	a' → logprob: -13.767682075500488
    6. ' ' → logprob: -14.142682075500488
    7. '   ' → logprob: -14.517682075500488
    8. '(a' → logprob: -14.642682075500488
    9. ' ' → logprob: -14.767682075500488
    10. ' zero' → logprob: -16.267681121826172

Token 314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. ' [' → logprob: -15.250000953674316
    4. 'i' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '[I' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.500001907348633
    9. 'a' → logprob: -17.875001907348633
    10. '==' → logprob: -18.125001907348633

Token 315: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34981924295425415
    2. ' ==' → logprob: -1.2248191833496094
    3. '[' → logprob: -7.599819183349609
    4. '[i' → logprob: -7.724819183349609
    5. ']==' → logprob: -8.59981918334961
    6. ']' → logprob: -9.22481918334961
    7. '=' → logprob: -9.72481918334961
    8. ' ' → logprob: -10.22481918334961
    9. '[]' → logprob: -10.34981918334961
    10. ')' → logprob: -12.22481918334961

Token 316: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3870999813079834
    2. ' ==' → logprob: -1.1370999813079834
    3. '0' → logprob: -8.762100219726562
    4. '=' → logprob: -10.012100219726562
    5. ' ' → logprob: -10.887100219726562
    6. ' =' → logprob: -13.137100219726562
    7. '==
' → logprob: -13.637100219726562
    8. '```' → logprob: -13.637100219726562
    9. '[' → logprob: -13.762100219726562
    10. ']==' → logprob: -14.637100219726562

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.000804901123047
    4. '```' → logprob: -20.125804901123047
    5. '  ' → logprob: -20.625804901123047
    6. '۰' → logprob: -21.000804901123047
    7. ')' → logprob: -21.250804901123047
    8. '    ' → logprob: -21.500804901123047
    9. '
' → logprob: -21.500804901123047
    10. ' ' → logprob: -21.875804901123047

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.000015258789062
    4. 'True' → logprob: -19.500015258789062
    5. '```' → logprob: -20.500015258789062
    6. '  ' → logprob: -21.125015258789062
    7. '
' → logprob: -21.250015258789062
    8. '=' → logprob: -21.375015258789062
    9. '۰' → logprob: -21.375015258789062
    10. ')' → logprob: -21.375015258789062

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031208952888846397
    2. ':
' → logprob: -3.7812089920043945
    3. '       ' → logprob: -4.9062089920043945
    4. '           ' → logprob: -8.406208992004395
    5. '   ' → logprob: -8.656208992004395
    6. '):' → logprob: -9.906208992004395
    7. ')' → logprob: -10.156208992004395
    8. '):
' → logprob: -11.281208992004395
    9. '=' → logprob: -11.906208992004395
    10. ',' → logprob: -12.031208992004395

Token 320: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04040917754173279
    2. ' zero' → logprob: -3.7904090881347656
    3. '           ' → logprob: -4.415409088134766
    4. 'zero' → logprob: -5.415409088134766
    5. '   ' → logprob: -7.790409088134766
    6. '	   ' → logprob: -10.415409088134766
    7. '	' → logprob: -11.290409088134766
    8. '	       ' → logprob: -12.040409088134766
    9. '               ' → logprob: -12.415409088134766
    10. '		' → logprob: -13.040409088134766

Token 321: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' (adapté à ' zero') → logprob: -0.31962475180625916
    2. ' zero' → logprob: -1.3196247816085815
    3. '   ' → logprob: -5.694624900817871
    4. '           ' → logprob: -6.069624900817871
    5. '       ' → logprob: -7.444624900817871
    6. '               ' → logprob: -9.819624900817871
    7. ' ' → logprob: -11.569624900817871
    8. '	' → logprob: -12.194624900817871
    9. '		' → logprob: -13.319624900817871
    10. '.zero' → logprob: -13.569624900817871

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326377391815186
    2. ' =' → logprob: -1.3132637739181519
    3. '=True' → logprob: -13.188263893127441
    4. ' ' → logprob: -16.688262939453125
    5. '   ' → logprob: -18.563262939453125
    6. 'True' → logprob: -18.938262939453125
    7. ' True' → logprob: -20.313262939453125
    8. '[' → logprob: -20.938262939453125
    9. '	' → logprob: -21.063262939453125
    10. '＝' → logprob: -21.063262939453125

Token 323: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '(True' → logprob: -19.375431060791016
    4. '   ' → logprob: -19.750431060791016
    5. '1' → logprob: -20.250431060791016
    6. '=True' → logprob: -21.375431060791016
    7. ' ' → logprob: -21.375431060791016
    8. 'False' → logprob: -22.500431060791016
    9. 'true' → logprob: -22.750431060791016
    10. 'TRUE' → logprob: -23.875431060791016

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022855104878544807
    2. '        
' → logprob: -4.522855281829834
    3. '
' → logprob: -4.647855281829834
    4. '    
' → logprob: -6.897855281829834
    5. ' 
' → logprob: -7.522855281829834
    6. '<|end|>' → logprob: -8.647854804992676
    7. '  
' → logprob: -9.147854804992676
    8. '   ' → logprob: -9.522854804992676
    9. '            
' → logprob: -9.772854804992676
    10. '       
' → logprob: -10.022854804992676

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6375629901885986
    2. '   ' → logprob: -0.7625629901885986
    3. '    
' → logprob: -6.2625627517700195
    4. '
' → logprob: -6.6375627517700195
    5. '        
' → logprob: -6.8875627517700195
    6. '  
' → logprob: -8.88756275177002
    7. '    ' → logprob: -9.51256275177002
    8. ' ' → logprob: -9.63756275177002
    9. '  ' → logprob: -9.88756275177002
    10. '   
' → logprob: -10.01256275177002

Token 326: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11115462332963943
    2. '       ' → logprob: -2.361154556274414
    3. ' tmp' → logprob: -5.236154556274414
    4. ' ans' → logprob: -6.236154556274414
    5. '    
' → logprob: -6.486154556274414
    6. 'tmp' → logprob: -6.861154556274414
    7. '        
' → logprob: -7.736154556274414
    8. '
' → logprob: -9.236154556274414
    9. '```' → logprob: -9.736154556274414
    10. ' 
' → logprob: -9.736154556274414

Token 327: ' Take' (ID: 14166)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7130091786384583
    2. 'tmp' → logprob: -1.7130091190338135
    3. '   ' → logprob: -2.2130091190338135
    4. ' abs' → logprob: -2.4630091190338135
    5. ' val' → logprob: -3.0880091190338135
    6. 'val' → logprob: -3.0880091190338135
    7. ' tmp' → logprob: -3.8380091190338135
    8. '       ' → logprob: -4.963009357452393
    9. 'ans' → logprob: -5.838009357452393
    10. ' current' → logprob: -6.338009357452393

Token 328: ' the' (ID: 290)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5340060591697693
    2. ' ans' → logprob: -1.534006118774414
    3. ' abs' → logprob: -2.034006118774414
    4. 'ans' → logprob: -3.034006118774414
    5. ' the' → logprob: -4.784006118774414
    6. '   ' → logprob: -5.159006118774414
    7. 'tmp' → logprob: -5.909006118774414
    8. ' tmp' → logprob: -7.409006118774414
    9. 'the' → logprob: -8.034006118774414
    10. ' ' → logprob: -8.409006118774414

Token 329: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.046488042920827866
    2. 'tmp' → logprob: -3.921488046646118
    3. 'min' → logprob: -4.421487808227539
    4. ' abs' → logprob: -4.796487808227539
    5. 'absolute' → logprob: -6.921487808227539
    6. ' min' → logprob: -6.921487808227539
    7. ' tmp' → logprob: -7.046487808227539
    8. 'm' → logprob: -7.671487808227539
    9. 'val' → logprob: -8.046487808227539
    10. '
' → logprob: -8.046487808227539

Token 330: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.255411833524704
    2. ' value' → logprob: -2.2554118633270264
    3. '(' → logprob: -3.0054118633270264
    4. '(a' → logprob: -3.3804118633270264
    5. 'a' → logprob: -3.5054118633270264
    6. '_value' → logprob: -5.880411624908447
    7. '   ' → logprob: -6.755411624908447
    8. ' ' → logprob: -7.005411624908447
    9. ' (' → logprob: -7.630411624908447
    10. ')' → logprob: -7.755411624908447

Token 331: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015917876735329628
    2. 'a' → logprob: -4.890917778015137
    3. ' a' → logprob: -5.890917778015137
    4. ' of' → logprob: -6.265917778015137
    5. ' ans' → logprob: -6.765917778015137
    6. '   ' → logprob: -7.140917778015137
    7. ',' → logprob: -7.515917778015137
    8. 'ans' → logprob: -8.890917778015137
    9. 'tmp' → logprob: -8.890917778015137
    10. 'value' → logprob: -9.015917778015137

Token 332: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08428605645895004
    2. ' a' → logprob: -2.5842859745025635
    3. ' the' → logprob: -5.584286212921143
    4. 'the' → logprob: -6.459286212921143
    5. '   ' → logprob: -10.709285736083984
    6. ' ' → logprob: -11.709285736083984
    7. 'tmp' → logprob: -12.334285736083984
    8. 'each' → logprob: -12.959285736083984
    9. ' each' → logprob: -13.209285736083984
    10. '       ' → logprob: -13.334285736083984

Token 333: ' current' (ID: 2208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008534434251487255
    2. ' a' → logprob: -5.1335344314575195
    3. 'i' → logprob: -6.7585344314575195
    4. '   ' → logprob: -7.8835344314575195
    5. ' current' → logprob: -8.25853443145752
    6. 'current' → logprob: -8.63353443145752
    7. 'number' → logprob: -8.88353443145752
    8. 'element' → logprob: -9.25853443145752
    9. ' ' → logprob: -9.63353443145752
    10. ' number' → logprob: -9.88353443145752

Token 334: ' element' (ID: 3577)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07370814681053162
    2. ' value' → logprob: -3.5737080574035645
    3. ' a' → logprob: -3.6987080574035645
    4. 'value' → logprob: -4.1987080574035645
    5. ' number' → logprob: -7.1987080574035645
    6. 'element' → logprob: -7.3237080574035645
    7. '   ' → logprob: -7.8237080574035645
    8. ' element' → logprob: -7.9487080574035645
    9. 'i' → logprob: -7.9487080574035645
    10. 'number' → logprob: -8.198708534240723

Token 335: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16552846133708954
    2. '   ' → logprob: -2.6655285358428955
    3. 'tmp' → logprob: -3.0405285358428955
    4. ' tmp' → logprob: -4.165528297424316
    5. 'abs' → logprob: -5.665528297424316
    6. ' ans' → logprob: -5.790528297424316
    7. 'a' → logprob: -6.665528297424316
    8. ' abs' → logprob: -6.665528297424316
    9. '           ' → logprob: -6.790528297424316
    10. '
' → logprob: -6.915528297424316

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011367622064426541
    2. ',' → logprob: -7.376136779785156
    3. '   ' → logprob: -8.876136779785156
    4. ' ans' → logprob: -9.376136779785156
    5. '        
' → logprob: -9.626136779785156
    6. ' a' → logprob: -10.376136779785156
    7. ':' → logprob: -10.626136779785156
    8. ')' → logprob: -11.126136779785156
    9. 'a' → logprob: -11.251136779785156
    10. ' =' → logprob: -11.376136779785156

Token 337: ' tmp' (ID: 8919)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9288085699081421
    2. 'val' → logprob: -1.178808569908142
    3. 'abs' → logprob: -1.803808569908142
    4. ' abs' → logprob: -3.4288086891174316
    5. 'tmp' (adapté à ' tmp') → logprob: -3.4288086891174316
    6. '       ' → logprob: -4.428808689117432
    7. '   ' → logprob: -4.553808689117432
    8. 'v' → logprob: -4.803808689117432
    9. ' tmp' → logprob: -4.803808689117432
    10. ' x' → logprob: -5.178808689117432

Token 338: ' =' (ID: 314)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.10390020161867142
    2. '_val' → logprob: -2.728900194168091
    3. '=' → logprob: -3.978900194168091
    4. ' =' → logprob: -4.85390043258667
    5. '_value' → logprob: -5.85390043258667
    6. '_' → logprob: -6.47890043258667
    7. '_i' → logprob: -7.35390043258667
    8. '_a' → logprob: -7.72890043258667
    9. 'val' → logprob: -8.228899955749512
    10. '_=' → logprob: -8.478899955749512

Token 339: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.4740934669971466
    2. 'abs' → logprob: -0.9740934371948242
    3. '   ' → logprob: -11.474093437194824
    4. '(abs' → logprob: -12.224093437194824
    5. ' ' → logprob: -14.474093437194824
    6. '    ' → logprob: -15.349093437194824
    7. '.abs' → logprob: -15.974093437194824
    8. '_abs' → logprob: -16.22409439086914
    9. '  ' → logprob: -16.59909439086914
    10. 'a' → logprob: -16.84909439086914

Token 340: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.960946772480384e-05
    2. 'a' → logprob: -9.625099182128906
    3. '(' → logprob: -10.375099182128906
    4. '(
' → logprob: -13.375099182128906
    5. '(i' → logprob: -15.500099182128906
    6. '   ' → logprob: -15.750099182128906
    7. ' (' → logprob: -16.000099182128906
    8. ' a' → logprob: -16.750099182128906
    9. '(ai' → logprob: -16.750099182128906
    10. ')' → logprob: -18.000099182128906

Token 341: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.840432565193623e-05
    2. '[' → logprob: -10.375088691711426
    3. ')' → logprob: -10.625088691711426
    4. ')[' → logprob: -11.000088691711426
    5. ' [' → logprob: -11.750088691711426
    6. '[a' → logprob: -12.875088691711426
    7. '   ' → logprob: -13.125088691711426
    8. '[I' → logprob: -13.750088691711426
    9. '[
' → logprob: -14.000088691711426
    10. ')i' → logprob: -14.625088691711426

Token 342: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03473758324980736
    2. ')
' → logprob: -3.4097375869750977
    3. '))' → logprob: -7.534737586975098
    4. '])' → logprob: -8.034737586975098
    5. '       ' → logprob: -9.284737586975098
    6. ' )' → logprob: -9.909737586975098
    7. '))
' → logprob: -10.659737586975098
    8. '   ' → logprob: -11.284737586975098
    9. '])
' → logprob: -11.409737586975098
    10. ')

' → logprob: -11.784737586975098

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3230801224708557
    2. '   ' → logprob: -1.448080062866211
    3. '
' → logprob: -3.698080062866211
    4. '<|end|>' → logprob: -4.573080062866211
    5. ')' → logprob: -6.073080062866211
    6. ' ans' → logprob: -6.698080062866211
    7. '    
' → logprob: -7.698080062866211
    8. '        
' → logprob: -7.698080062866211
    9. '<|end|>' → logprob: -7.823080062866211
    10. 'ans' → logprob: -8.448080062866211

Token 344: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11498662829399109
    2. '   ' → logprob: -2.6149866580963135
    3. '
' → logprob: -4.364986419677734
    4. ' if' → logprob: -4.864986419677734
    5. '        
' → logprob: -4.989986419677734
    6. '    
' → logprob: -5.614986419677734
    7. '  
' → logprob: -6.614986419677734
    8. ' 
' → logprob: -6.989986419677734
    9. '<|end|>' → logprob: -7.364986419677734
    10. ' ' → logprob: -7.614986419677734

Token 345: ' Add' (ID: 4063)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029334304854273796
    2. 'if' → logprob: -4.27933406829834
    3. '   ' → logprob: -4.90433406829834
    4. ' ans' → logprob: -5.02933406829834
    5. ' if' → logprob: -7.02933406829834
    6. '       ' → logprob: -8.90433406829834
    7. '	ans' → logprob: -10.65433406829834
    8. '
' → logprob: -11.15433406829834
    9. ' ' → logprob: -11.52933406829834
    10. '(ans' → logprob: -11.77933406829834

Token 346: ' the' (ID: 290)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.02991073951125145
    2. 'tmp' → logprob: -3.5299108028411865
    3. '(tmp' → logprob: -8.779911041259766
    4. ' ans' → logprob: -12.779911041259766
    5. '	tmp' → logprob: -13.279911041259766
    6. '[tmp' → logprob: -14.029911041259766
    7. '_tmp' → logprob: -15.404911041259766
    8. '$tmp' → logprob: -15.779911041259766
    9. '/tmp' → logprob: -15.904911041259766
    10. '    ' → logprob: -16.029911041259766

Token 347: ' absolute' (ID: 17786)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2014511525630951
    2. ' tmp' → logprob: -1.7014511823654175
    3. '(tmp' → logprob: -11.826451301574707
    4. '	tmp' → logprob: -12.326451301574707
    5. '[tmp' → logprob: -12.451451301574707
    6. '_tmp' → logprob: -12.701451301574707
    7. 'token' → logprob: -13.076451301574707
    8. '   ' → logprob: -13.076451301574707
    9. '/tmp' → logprob: -13.076451301574707
    10. 'abs' → logprob: -13.201451301574707

Token 348: ' value' (ID: 1432)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.18196189403533936
    2. 'tmp' → logprob: -2.681962013244629
    3. 'value' → logprob: -3.431962013244629
    4. ' value' → logprob: -4.056962013244629
    5. '(' → logprob: -4.306962013244629
    6. ' tmp' → logprob: -4.681962013244629
    7. '   ' → logprob: -4.681962013244629
    8. ' (' → logprob: -5.181962013244629
    9. '(ans' → logprob: -5.681962013244629
    10. '_value' → logprob: -5.931962013244629

Token 349: ' to' (ID: 316)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.45537084341049194
    2. ' to' → logprob: -1.8303709030151367
    3. '(ans' → logprob: -1.8303709030151367
    4. '       ' → logprob: -3.9553709030151367
    5. '   ' → logprob: -4.205370903015137
    6. 'ans' → logprob: -5.580370903015137
    7. 'to' → logprob: -5.955370903015137
    8. '	ans' → logprob: -6.205370903015137
    9. '(tmp' → logprob: -6.330370903015137
    10. ' tmp' → logprob: -8.455370903015137

Token 350: ' the' (ID: 290)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07897516340017319
    2. 'ans' → logprob: -2.578975200653076
    3. '(ans' → logprob: -9.578974723815918
    4. '	ans' → logprob: -11.203974723815918
    5. ' the' → logprob: -14.578974723815918
    6. 'tmp' → logprob: -14.703974723815918
    7. '_ans' → logprob: -14.828974723815918
    8. '   ' → logprob: -14.953974723815918
    9. '       ' → logprob: -15.328974723815918
    10. '
' → logprob: -15.703974723815918

Token 351: ' running' (ID: 6788)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31328731775283813
    2. ' ans' → logprob: -1.3132872581481934
    3. '(ans' → logprob: -11.313287734985352
    4. '	ans' → logprob: -11.813287734985352
    5. '   ' → logprob: -13.063287734985352
    6. 'answer' → logprob: -13.563287734985352
    7. '       ' → logprob: -14.813287734985352
    8. ' ' → logprob: -14.813287734985352
    9. '_ans' → logprob: -14.938287734985352
    10. '    ' → logprob: -15.313287734985352

Token 352: ' total' (ID: 3609)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07923334091901779
    2. 'ans' → logprob: -2.579233407974243
    3. '+' → logprob: -9.329233169555664
    4. '   ' → logprob: -9.954233169555664
    5. '	ans' → logprob: -10.204233169555664
    6. 'sum' → logprob: -10.329233169555664
    7. ' +' → logprob: -10.329233169555664
    8. ' sum' → logprob: -10.329233169555664
    9. '(ans' → logprob: -10.829233169555664
    10. ' ' → logprob: -11.329233169555664

Token 353: '
' (ID: 198)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.08967817574739456
    2. 'ans' → logprob: -2.8396782875061035
    3. '   ' → logprob: -3.9646782875061035
    4. '(ans' → logprob: -5.5896782875061035
    5. '	ans' → logprob: -5.9646782875061035
    6. '       ' → logprob: -7.0896782875061035
    7. '
' → logprob: -7.8396782875061035
    8. ' +=' → logprob: -8.089677810668945
    9. '+' → logprob: -8.589677810668945
    10. '+=' → logprob: -9.214677810668945

Token 354: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06944788992404938
    2. 'ans' → logprob: -2.8194479942321777
    3. '   ' → logprob: -5.069447994232178
    4. '(ans' → logprob: -7.319447994232178
    5. '       ' → logprob: -8.06944751739502
    6. '	ans' → logprob: -8.94444751739502
    7. '+' → logprob: -10.94444751739502
    8. '    ' → logprob: -11.19444751739502
    9. ' +' → logprob: -12.19444751739502
    10. ' +=' → logprob: -12.56944751739502

Token 355: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2520093321800232
    2. ' ans' → logprob: -1.502009391784668
    3. '(ans' → logprob: -10.127009391784668
    4. '   ' → logprob: -10.627009391784668
    5. '	ans' → logprob: -11.377009391784668
    6. '       ' → logprob: -12.877009391784668
    7. '_ans' → logprob: -14.127009391784668
    8. 'Ans' → logprob: -15.127009391784668
    9. '```' → logprob: -15.877009391784668
    10. '    ' → logprob: -15.877009391784668

Token 356: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759528279304504
    2. '+=' → logprob: -0.8259528279304504
    3. '+' → logprob: -11.700952529907227
    4. '=' → logprob: -12.950952529907227
    5. '   ' → logprob: -13.950952529907227
    6. ']+=' → logprob: -14.325952529907227
    7. ' +' → logprob: -15.200952529907227
    8. '+=(' → logprob: -15.575952529907227
    9. ' =' → logprob: -15.700952529907227
    10. '+='' → logprob: -16.075952529907227

Token 357: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.126929372549057
    2. ' tmp' → logprob: -2.12692928314209
    3. '(tmp' → logprob: -14.75192928314209
    4. '	tmp' → logprob: -15.12692928314209
    5. '/tmp' → logprob: -15.37692928314209
    6. '$tmp' → logprob: -16.001930236816406
    7. '_tmp' → logprob: -16.251930236816406
    8. '[tmp' → logprob: -16.501930236816406
    9. 'temp' → logprob: -16.626930236816406
    10. ',tmp' → logprob: -18.751930236816406

Token 358: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14683139324188232
    2. '   ' → logprob: -2.646831512451172
    3. '
' → logprob: -2.771831512451172
    4. ' if' → logprob: -6.021831512451172
    5. '    
' → logprob: -8.021831512451172
    6. '        
' → logprob: -9.271831512451172
    7. 'if' → logprob: -9.896831512451172
    8. ',' → logprob: -9.896831512451172
    9. '
' → logprob: -10.146831512451172
    10. '  
' → logprob: -10.146831512451172

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26454421877861023
    2. '   ' → logprob: -1.7645442485809326
    3. '
' → logprob: -3.3895442485809326
    4. ' if' → logprob: -3.8895442485809326
    5. 'if' → logprob: -5.3895440101623535
    6. '    
' → logprob: -6.8895440101623535
    7. '        
' → logprob: -7.5145440101623535
    8. '  
' → logprob: -8.014544486999512
    9. '```' → logprob: -8.139544486999512
    10. '
' → logprob: -9.764544486999512

Token 360: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20843878388404846
    2. '   ' → logprob: -2.3334388732910156
    3. ' if' → logprob: -2.8334388732910156
    4. 'if' → logprob: -3.4584388732910156
    5. '
' → logprob: -7.708438873291016
    6. '        
' → logprob: -9.333438873291016
    7. '    
' → logprob: -9.458438873291016
    8. ' ' → logprob: -9.833438873291016
    9. '	if' → logprob: -10.083438873291016
    10. '           ' → logprob: -10.333438873291016

Token 361: ' Update' (ID: 9152)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4788275361061096
    2. 'tmp' → logprob: -0.9788275361061096
    3. ' if' → logprob: -6.228827476501465
    4. '   ' → logprob: -6.603827476501465
    5. '       ' → logprob: -7.103827476501465
    6. ' tmp' → logprob: -7.603827476501465
    7. '           ' → logprob: -10.603827476501465
    8. ' ' → logprob: -11.103827476501465
    9. 'If' → logprob: -11.353827476501465
    10. '#' → logprob: -11.728827476501465

Token 362: ' the' (ID: 290)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.8951610326766968
    2. 'tmp' → logprob: -1.5201610326766968
    3. 'if' → logprob: -1.6451610326766968
    4. ' if' → logprob: -1.7701610326766968
    5. '   ' → logprob: -5.145161151885986
    6. '       ' → logprob: -5.770161151885986
    7. '(tmp' → logprob: -7.895161151885986
    8. '           ' → logprob: -10.020160675048828
    9. ' the' → logprob: -10.520160675048828
    10. 'min' → logprob: -11.145160675048828

Token 363: ' minimum' (ID: 11085)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06187838315963745
    2. 'if' → logprob: -3.4368784427642822
    3. 'min' → logprob: -3.6868784427642822
    4. ' tmp' → logprob: -6.061878204345703
    5. ' if' → logprob: -8.186878204345703
    6. ' min' → logprob: -9.436878204345703
    7. '(tmp' → logprob: -10.436878204345703
    8. '   ' → logprob: -10.811878204345703
    9. '/tmp' → logprob: -11.311878204345703
    10. '[tmp' → logprob: -11.686878204345703

Token 364: ' absolute' (ID: 17786)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.6293662786483765
    2. 'if' → logprob: -1.3793662786483765
    3. '(tmp' → logprob: -2.129366397857666
    4. '(' → logprob: -3.254366397857666
    5. ' if' → logprob: -3.504366397857666
    6. ' tmp' → logprob: -3.754366397857666
    7. '(
' → logprob: -7.129366397857666
    8. '_tmp' → logprob: -7.379366397857666
    9. 'abs' → logprob: -7.629366397857666
    10. 'ans' → logprob: -7.879366397857666

Token 365: ' value' (ID: 1432)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7829482555389404
    2. 'value' → logprob: -1.0329482555389404
    3. '_value' → logprob: -1.9079482555389404
    4. 'tmp' → logprob: -3.5329482555389404
    5. 'val' → logprob: -4.9079484939575195
    6. ' value' → logprob: -7.6579484939575195
    7. '_val' → logprob: -7.7829484939575195
    8. 'm' → logprob: -8.28294849395752
    9. ' if' → logprob: -8.40794849395752
    10. '_tmp' → logprob: -8.65794849395752

Token 366: ' found' (ID: 2491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6062775254249573
    2. '=' → logprob: -0.8562775254249573
    3. 'if' → logprob: -3.8562774658203125
    4. ' if' → logprob: -4.8562774658203125
    5. '       ' → logprob: -8.356277465820312
    6. '   ' → logprob: -8.481277465820312
    7. '=min' → logprob: -8.481277465820312
    8. 'tmp' → logprob: -9.231277465820312
    9. '
' → logprob: -9.606277465820312
    10. ',' → logprob: -9.981277465820312

Token 367: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24097836017608643
    2. ' if' → logprob: -1.7409783601760864
    3. 'if' → logprob: -3.615978240966797
    4. '   ' → logprob: -4.740978240966797
    5. ' =' → logprob: -7.115978240966797
    6. 'tmp' → logprob: -7.365978240966797
    7. ',' → logprob: -7.490978240966797
    8. ' tmp' → logprob: -7.990978240966797
    9. '           ' → logprob: -8.490978240966797
    10. '(tmp' → logprob: -8.490978240966797

Token 368: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -5.383526149671525e-05
    2. ' far' → logprob: -10.625053405761719
    3. '_far' → logprob: -11.000053405761719
    4. 'Far' → logprob: -11.875053405761719
    5. 'min' → logprob: -12.750053405761719
    6. '   ' → logprob: -13.500053405761719
    7. 'tmp' → logprob: -14.500053405761719
    8. 'fare' → logprob: -14.625053405761719
    9. '       ' → logprob: -15.500053405761719
    10. 'fast' → logprob: -16.87505340576172

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016874393913894892
    2. ' if' → logprob: -6.751687526702881
    3. '   ' → logprob: -8.501687049865723
    4. 'if' → logprob: -8.876687049865723
    5. '
' → logprob: -9.501687049865723
    6. '<|end|>' → logprob: -10.251687049865723
    7. '           ' → logprob: -11.251687049865723
    8. ' =' → logprob: -11.501687049865723
    9. '        
' → logprob: -11.876687049865723
    10. ',' → logprob: -12.001687049865723

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003477359190583229
    2. ' if' → logprob: -5.878477573394775
    3. '   ' → logprob: -7.753477573394775
    4. 'if' → logprob: -8.878477096557617
    5. '<|end|>' → logprob: -10.253477096557617
    6. '
' → logprob: -11.003477096557617
    7. '        
' → logprob: -11.378477096557617
    8. ' =' → logprob: -11.503477096557617
    9. ',' → logprob: -12.128477096557617
    10. '    
' → logprob: -12.253477096557617

Token 371: ' tmp' (ID: 8919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6241570711135864
    2. ' if' → logprob: -1.4991570711135864
    3. 'tmp' (adapté à ' tmp') → logprob: -2.124156951904297
    4. '       ' → logprob: -2.374156951904297
    5. ' tmp' → logprob: -3.749156951904297
    6. '   ' → logprob: -5.374156951904297
    7. '           ' → logprob: -9.624156951904297
    8. ' ' → logprob: -10.874156951904297
    9. '	tmp' → logprob: -10.999156951904297
    10. '/tmp' → logprob: -11.249156951904297

Token 372: '_m' (ID: 1285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07265050709247589
    2. '_m' → logprob: -2.82265043258667
    3. ' =' → logprob: -4.57265043258667
    4. '=min' → logprob: -8.822650909423828
    5. 'm' → logprob: -9.697650909423828
    6. '_=' → logprob: -10.072650909423828
    7. '_' → logprob: -10.822650909423828
    8. 'if' → logprob: -11.572650909423828
    9. '```' → logprob: -12.947650909423828
    10. '=m' → logprob: -12.947650909423828

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741332530975342
    2. '=' → logprob: -0.9741332530975342
    3. '=min' → logprob: -9.849133491516113
    4. '   ' → logprob: -12.849133491516113
    5. 'min' → logprob: -14.474133491516113
    6. '>' → logprob: -16.724132537841797
    7. ' min' → logprob: -17.099132537841797
    8. '=max' → logprob: -17.474132537841797
    9. '    ' → logprob: -17.599132537841797
    10. '	' → logprob: -17.724132537841797

Token 374: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10020699352025986
    2. ' min' → logprob: -2.3502070903778076
    3. 'tmp' → logprob: -14.975207328796387
    4. '	min' → logprob: -17.47520637512207
    5. '(min' → logprob: -17.72520637512207
    6. ' tmp' → logprob: -17.72520637512207
    7. '   ' → logprob: -18.72520637512207
    8. 'mini' → logprob: -18.85020637512207
    9. ' ' → logprob: -19.47520637512207
    10. '[min' → logprob: -19.97520637512207

Token 375: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -4.842555426876061e-06
    2. 'tmp' → logprob: -12.750004768371582
    3. '(' → logprob: -13.250004768371582
    4. '[tmp' → logprob: -16.6250057220459
    5. '/tmp' → logprob: -17.3750057220459
    6. '$tmp' → logprob: -17.6250057220459
    7. ',tmp' → logprob: -17.8750057220459
    8. '(
' → logprob: -18.1250057220459
    9. '	tmp' → logprob: -18.2500057220459
    10. ' tmp' → logprob: -18.3750057220459

Token 376: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009191995486617088
    2. ' ,' → logprob: -5.259191989898682
    3. ',tmp' → logprob: -6.134191989898682
    4. '_m' → logprob: -6.509191989898682
    5. '_,' → logprob: -8.88419246673584
    6. ',_' → logprob: -10.13419246673584
    7. ')' → logprob: -10.25919246673584
    8. ',m' → logprob: -11.13419246673584
    9. ',
' → logprob: -11.25919246673584
    10. 'tmp' → logprob: -11.38419246673584

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017815368482843041
    2. ',tmp' → logprob: -8.750178337097168
    3. ' ,' → logprob: -10.875178337097168
    4. ',
' → logprob: -14.250178337097168
    5. 'tmp' → logprob: -16.87517738342285
    6. ',t' → logprob: -17.12517738342285
    7. '(tmp' → logprob: -18.75017738342285
    8. ',temp' → logprob: -18.87517738342285
    9. '   ' → logprob: -19.37517738342285
    10. '[tmp' → logprob: -19.62517738342285

Token 378: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04858850687742233
    2. ' tmp' → logprob: -3.048588514328003
    3. '	tmp' → logprob: -15.173588752746582
    4. '   ' → logprob: -15.423588752746582
    5. '/tmp' → logprob: -15.548588752746582
    6. '[tmp' → logprob: -15.548588752746582
    7. '(tmp' → logprob: -15.798588752746582
    8. ' ' → logprob: -16.548587799072266
    9. '$tmp' → logprob: -16.673587799072266
    10. '_tmp' → logprob: -16.798587799072266

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ')
' → logprob: -10.250045776367188
    3. '       ' → logprob: -12.375045776367188
    4. '   ' → logprob: -12.625045776367188
    5. ' )' → logprob: -12.875045776367188
    6. ')return' → logprob: -16.250045776367188
    7. ')

' → logprob: -16.250045776367188
    8. ')}' → logprob: -17.000045776367188
    9. '<|end|>' → logprob: -17.000045776367188
    10. '))' → logprob: -17.375045776367188

Token 380: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10159382969141006
    2. '   ' → logprob: -2.7265937328338623
    3. '    
' → logprob: -3.8515937328338623
    4. '<|end|>' → logprob: -5.851593971252441
    5. '```' → logprob: -6.101593971252441
    6. '  
' → logprob: -6.226593971252441
    7. '\n' → logprob: -6.601593971252441
    8. ' 
' → logprob: -7.476593971252441
    9. ' if' → logprob: -8.226593971252441
    10. 'if' → logprob: -8.601593971252441

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04487596079707146
    2. 'if' → logprob: -3.2948758602142334
    3. ' if' → logprob: -5.1698760986328125
    4. '    
' → logprob: -7.6698760986328125
    5. '
' → logprob: -7.7948760986328125
    6. '```' → logprob: -8.419876098632812
    7. '#' → logprob: -10.669876098632812
    8. '        
' → logprob: -14.294876098632812
    9. '    
    
' → logprob: -14.544876098632812
    10. ' 
' → logprob: -14.669876098632812

Token 382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.390636146068573
    2. 'if' → logprob: -1.1406362056732178
    3. ' if' → logprob: -6.015635967254639
    4. '```' → logprob: -6.890635967254639
    5. '
' → logprob: -8.265636444091797
    6. '    
' → logprob: -10.265636444091797
    7. '#' (adapté à ' #') → logprob: -12.390636444091797
    8. '	if' → logprob: -13.015636444091797
    9. '``' → logprob: -13.515636444091797
    10. 'If' → logprob: -15.515636444091797

Token 383: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015252856246661395
    2. ' if' → logprob: -9.125152587890625
    3. '   ' → logprob: -10.250152587890625
    4. '#' → logprob: -11.750152587890625
    5. '```' → logprob: -15.625152587890625
    6. 'return' → logprob: -16.625152587890625
    7. '
' → logprob: -17.375152587890625
    8. 'If' → logprob: -17.750152587890625
    9. 'print' → logprob: -17.875152587890625
    10. '    
' → logprob: -19.250152587890625

Token 384: ' there's' (ID: 15333)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2630373239517212
    2. 'c' → logprob: -1.5130373239517212
    3. ' not' → logprob: -4.763037204742432
    4. 'not' → logprob: -6.263037204742432
    5. ' zero' → logprob: -8.01303768157959
    6. 'zero' → logprob: -8.26303768157959
    7. '(c' → logprob: -12.26303768157959
    8. '   ' → logprob: -12.76303768157959
    9. ' ' → logprob: -12.88803768157959
    10. '(not' → logprob: -14.26303768157959

Token 385: ' any' (ID: 1062)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4957633316516876
    2. ' not' → logprob: -1.3707633018493652
    3. 'c' → logprob: -2.3707633018493652
    4. ' no' → logprob: -3.7457633018493652
    5. 'not' → logprob: -4.120763301849365
    6. ' an' → logprob: -5.745763301849365
    7. 'no' → logprob: -7.870763301849365
    8. ' a' → logprob: -9.870763778686523
    9. 'an' → logprob: -10.120763778686523
    10. ' ' → logprob: -10.745763778686523

Token 386: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.12726961076259613
    2. 'zero' → logprob: -2.1272695064544678
    3. ' not' → logprob: -8.627269744873047
    4. ' c' → logprob: -10.002269744873047
    5. 'not' → logprob: -10.252269744873047
    6. '0' → logprob: -10.252269744873047
    7. ' negative' → logprob: -11.127269744873047
    8. 'c' → logprob: -11.252269744873047
    9. ' ' → logprob: -12.252269744873047
    10. 'negative' → logprob: -12.377269744873047

Token 387: ' in' (ID: 306)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005438420455902815
    2. 'or' → logprob: -5.255438327789307
    3. ':' → logprob: -8.630438804626465
    4. '   ' → logprob: -10.630438804626465
    5. ' ' → logprob: -14.380438804626465
    6. ':
' → logprob: -14.880438804626465
    7. '	or' → logprob: -14.880438804626465
    8. '    ' → logprob: -15.130438804626465
    9. '  ' → logprob: -16.25543785095215
    10. ',' → logprob: -16.25543785095215

Token 388: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08955372869968414
    2. 'the' → logprob: -2.5895538330078125
    3. 'a' → logprob: -4.7145538330078125
    4. ' a' → logprob: -6.5895538330078125
    5. ' zero' → logprob: -8.464553833007812
    6. 'zero' → logprob: -9.839553833007812
    7. '   ' → logprob: -12.714553833007812
    8. ' ' → logprob: -13.964553833007812
    9. ' or' → logprob: -15.339553833007812
    10. '```' → logprob: -15.714553833007812

Token 389: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11949421465396881
    2. ' list' → logprob: -2.3694941997528076
    3. 'a' → logprob: -3.9944941997528076
    4. 'array' → logprob: -7.744494438171387
    5. 'input' → logprob: -8.869494438171387
    6. ' array' → logprob: -10.494494438171387
    7. ' a' → logprob: -10.494494438171387
    8. 'zero' → logprob: -10.994494438171387
    9. 'numbers' → logprob: -11.119494438171387
    10. 'lst' → logprob: -11.994494438171387

Token 390: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.019675543531775475
    2. '   ' → logprob: -4.1446757316589355
    3. 'or' → logprob: -5.8946757316589355
    4. ':' → logprob: -7.1446757316589355
    5. ':
' → logprob: -10.019675254821777
    6. '       ' → logprob: -10.144675254821777
    7. ',' → logprob: -13.144675254821777
    8. '	or' → logprob: -13.269675254821777
    9. '```' → logprob: -13.769675254821777
    10. ' ' → logprob: -13.769675254821777

Token 391: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7180464267730713
    2. ' print' → logprob: -1.3430464267730713
    3. ' pass' → logprob: -1.5930464267730713
    4. 'print' → logprob: -3.5930464267730713
    5. 'pass' → logprob: -4.343046188354492
    6. ' return' → logprob: -5.468046188354492
    7. ' if' → logprob: -6.593046188354492
    8. '       ' → logprob: -7.718046188354492
    9. '#' → logprob: -7.843046188354492
    10. 'return' → logprob: -7.968046188354492

Token 392: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16210314631462097
    2. ' print' → logprob: -2.4121031761169434
    3. '   ' → logprob: -3.5371031761169434
    4. 'pass' → logprob: -3.9121031761169434
    5. ' pass' → logprob: -5.037103176116943
    6. 'return' → logprob: -5.912103176116943
    7. ' return' → logprob: -6.787103176116943
    8. 'if' → logprob: -9.162102699279785
    9. '#' → logprob: -9.162102699279785
    10. '       ' → logprob: -9.787102699279785

Token 393: ' sum' (ID: 4215)
  Prédit: ' remains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remains' → logprob: -0.7011340856552124
    2. ' is' → logprob: -1.5761340856552124
    3. '   ' → logprob: -2.326134204864502
    4. ' can' → logprob: -3.201134204864502
    5. 'print' → logprob: -3.201134204864502
    6. ' print' → logprob: -3.451134204864502
    7. ' ans' → logprob: -3.826134204864502
    8. '#' → logprob: -4.951134204864502
    9. 'is' → logprob: -5.201134204864502
    10. ' return' → logprob: -5.451134204864502

Token 394: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9436782598495483
    2. ' remains' → logprob: -0.9436782598495483
    3. '   ' → logprob: -2.443678379058838
    4. ' -=' → logprob: -3.443678379058838
    5. '<|end|>' → logprob: -3.693678379058838
    6. '    ' → logprob: -4.068678379058838
    7. 'print' → logprob: -4.318678379058838
    8. '#' → logprob: -4.818678379058838
    9. ' print' → logprob: -5.443678379058838
    10. ' can' → logprob: -5.568678379058838

Token 395: ' already' (ID: 4279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05116324499249458
    2. '   ' → logprob: -3.6761631965637207
    3. 'print' → logprob: -3.8011631965637207
    4. ' ans' → logprob: -6.426163196563721
    5. '(ans' → logprob: -8.176163673400879
    6. 'printed' → logprob: -8.926163673400879
    7. '	ans' → logprob: -9.926163673400879
    8. ' print' → logprob: -10.176163673400879
    9. 'already' → logprob: -10.801163673400879
    10. '    ' → logprob: -10.801163673400879

Token 396: ' maximal' (ID: 65414)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.5038406848907471
    2. 'print' → logprob: -1.628840684890747
    3. 'optimal' → logprob: -2.878840684890747
    4. '   ' → logprob: -3.128840684890747
    5. 'ans' → logprob: -3.503840684890747
    6. 'printed' → logprob: -3.753840684890747
    7. 'max' → logprob: -3.878840684890747
    8. 'returned' → logprob: -5.128840446472168
    9. ' correct' → logprob: -5.503840446472168
    10. 'complete' → logprob: -5.753840446472168

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01854659430682659
    2. ' or' → logprob: -5.0185465812683105
    3. ':' → logprob: -5.3935465812683105
    4. 'else' → logprob: -5.8935465812683105
    5. ',' → logprob: -6.2685465812683105
    6. '    
' → logprob: -6.3935465812683105
    7. ' else' → logprob: -8.393547058105469
    8. '.' → logprob: -8.393547058105469
    9. 'elif' → logprob: -9.143547058105469
    10. ':
' → logprob: -9.268547058105469

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001478796184528619
    2. 'elif' → logprob: -10.125147819519043
    3. '    
' → logprob: -10.375147819519043
    4. 'else' → logprob: -10.500147819519043
    5. '```' → logprob: -11.125147819519043
    6. ' else' → logprob: -11.875147819519043
    7. ' elif' → logprob: -12.000147819519043
    8. '
' → logprob: -12.500147819519043
    9. ' or' → logprob: -12.500147819519043
    10. ':' → logprob: -12.750147819519043

Token 399: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21326737105846405
    2. 'if' (adapté à ' if') → logprob: -1.9632673263549805
    3. ' if' → logprob: -2.9632673263549805
    4. 'elif' → logprob: -12.46326732635498
    5. '    
' → logprob: -12.71326732635498
    6. '    ' → logprob: -13.96326732635498
    7. 'else' → logprob: -14.08826732635498
    8. ' elif' → logprob: -14.33826732635498
    9. '
' → logprob: -15.21326732635498
    10. '```' → logprob: -15.21326732635498

Token 400: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.023299286141991615
    2. 'zero' → logprob: -3.773299217224121
    3. ' not' → logprob: -9.898299217224121
    4. 'not' → logprob: -12.648299217224121
    5. '   ' → logprob: -15.523299217224121
    6. ' ' → logprob: -16.023300170898438
    7. ' ' → logprob: -17.398300170898438
    8. '_zero' → logprob: -18.773300170898438
    9. '.zero' → logprob: -18.898300170898438
    10. '零' → logprob: -19.523300170898438

Token 401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02074403502047062
    2. ':
' → logprob: -4.1457438468933105
    3. ' or' → logprob: -5.8957438468933105
    4. '   ' → logprob: -6.3957438468933105
    5. ':return' → logprob: -8.520744323730469
    6. '       ' → logprob: -10.395744323730469
    7. '==' → logprob: -10.395744323730469
    8. ' ==' → logprob: -12.145744323730469
    9. ' :' → logprob: -12.520744323730469
    10. 'or' → logprob: -12.895744323730469

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005573456175625324
    2. '   ' → logprob: -5.255573272705078
    3. ':' → logprob: -8.505573272705078
    4. 'print' → logprob: -9.880573272705078
    5. ':
' → logprob: -10.380573272705078
    6. 'return' → logprob: -10.755573272705078
    7. '```' → logprob: -11.380573272705078
    8. ' print' → logprob: -11.630573272705078
    9. ' return' → logprob: -11.755573272705078
    10. ':return' → logprob: -12.505573272705078

Token 403: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2846314609050751
    2. ' print' → logprob: -1.7846314907073975
    3. '   ' → logprob: -2.5346314907073975
    4. '       ' → logprob: -8.159631729125977
    5. '```' → logprob: -8.409631729125977
    6. ' pass' → logprob: -10.409631729125977
    7. 'pass' → logprob: -11.409631729125977
    8. '``' → logprob: -13.034631729125977
    9. '	print' → logprob: -13.159631729125977
    10. ' return' → logprob: -13.659631729125977

Token 404: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.0020742492051795e-05
    2. '(' → logprob: -10.625049591064453
    3. 'ans' → logprob: -10.625049591064453
    4. ' (' → logprob: -14.125049591064453
    5. ' ans' → logprob: -15.750049591064453
    6. '(int' → logprob: -16.125049591064453
    7. '(f' → logprob: -16.250049591064453
    8. '(abs' → logprob: -16.375049591064453
    9. '	ans' → logprob: -16.750049591064453
    10. '('' → logprob: -16.875049591064453

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005805541295558214
    2. ')
' → logprob: -7.500580787658691
    3. '   ' → logprob: -11.000580787658691
    4. ')return' → logprob: -11.875580787658691
    5. ' )' → logprob: -13.500580787658691
    6. '       ' → logprob: -13.875580787658691
    7. '")' → logprob: -15.375580787658691
    8. '')' → logprob: -15.500580787658691
    9. '<|end|>' → logprob: -15.625580787658691
    10. '`)' → logprob: -15.750580787658691

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037859921576455235
    2. 'else' → logprob: -8.375378608703613
    3. '       ' → logprob: -9.000378608703613
    4. ' else' → logprob: -11.750378608703613
    5. 'elif' → logprob: -12.000378608703613
    6. '    
' → logprob: -12.625378608703613
    7. 'return' → logprob: -12.875378608703613
    8. '```' → logprob: -13.000378608703613
    9. '[' → logprob: -14.250378608703613
    10. '	return' → logprob: -15.125378608703613

Token 407: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1654047966003418
    2. '   ' → logprob: -2.415404796600342
    3. ' else' → logprob: -3.165404796600342
    4. 'elif' → logprob: -3.915404796600342
    5. ' elif' → logprob: -7.040404796600342
    6. '```' → logprob: -9.2904052734375
    7. '    
' → logprob: -11.9154052734375
    8. '	else' → logprob: -12.4154052734375
    9. '_else' → logprob: -13.2904052734375
    10. '	elif' → logprob: -13.4154052734375

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029927976429462433
    2. ':
' → logprob: -5.877992630004883
    3. ' if' → logprob: -9.002992630004883
    4. 'if' → logprob: -10.752992630004883
    5. ' :' → logprob: -11.002992630004883
    6. '   ' → logprob: -11.127992630004883
    7. '       ' → logprob: -12.627992630004883
    8. '<|end|>' → logprob: -13.252992630004883
    9. '    ' → logprob: -13.502992630004883
    10. 'If' → logprob: -13.752992630004883

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23368367552757263
    2. '   ' → logprob: -1.733683705329895
    3. ' if' → logprob: -4.1086835861206055
    4. ':' → logprob: -4.6086835861206055
    5. 'if' → logprob: -5.4836835861206055
    6. '    ' → logprob: -6.9836835861206055
    7. ':
' → logprob: -8.733683586120605
    8. 'If' → logprob: -10.483683586120605
    9. '     ' → logprob: -10.858683586120605
    10. '[' → logprob: -11.108683586120605

Token 410: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6383260488510132
    2. 'if' → logprob: -0.8883260488510132
    3. '   ' → logprob: -3.0133261680603027
    4. 'print' → logprob: -4.638326168060303
    5. ' print' → logprob: -6.513326168060303
    6. '       ' → logprob: -8.638325691223145
    7. '    ' → logprob: -11.888325691223145
    8. '```' → logprob: -12.263325691223145
    9. '[' → logprob: -12.638325691223145
    10. 'If' → logprob: -14.263325691223145

Token 411: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000442351185483858
    2. ' if' → logprob: -7.7504425048828125
    3. '   ' → logprob: -11.500442504882812
    4. 'print' → logprob: -13.625442504882812
    5. '#' → logprob: -15.000442504882812
    6. '```' → logprob: -18.750442504882812
    7. 'If' → logprob: -19.250442504882812
    8. '       ' → logprob: -20.000442504882812
    9. ' ' → logprob: -20.125442504882812
    10. '
' → logprob: -20.375442504882812

Token 412: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2522237002849579
    2. ' c' → logprob: -1.5022237300872803
    3. '(c' → logprob: -8.37722396850586
    4. '   ' → logprob: -10.12722396850586
    5. '	c' → logprob: -11.75222396850586
    6. ' ' → logprob: -12.25222396850586
    7. '(' → logprob: -13.12722396850586
    8. ' (' → logprob: -13.25222396850586
    9. '#' → logprob: -13.37722396850586
    10. '
' → logprob: -13.87722396850586

Token 413: ' count' (ID: 3605)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009887460619211197
    2. ' c' → logprob: -7.000988960266113
    3. 'count' → logprob: -9.500988960266113
    4. 'cnt' → logprob: -13.875988960266113
    5. '   ' → logprob: -14.625988960266113
    6. '(c' → logprob: -15.250988960266113
    7. ' ' → logprob: -15.500988960266113
    8. '	c' → logprob: -15.875988960266113
    9. ' count' → logprob: -16.125988006591797
    10. 'code' → logprob: -16.250988006591797

Token 414: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.05699089914560318
    2. ' of' → logprob: -2.9319908618927
    3. '   ' → logprob: -6.931991100311279
    4. '_of' → logprob: -7.806991100311279
    5. '(c' → logprob: -8.181990623474121
    6. '%' → logprob: -8.181990623474121
    7. '       ' → logprob: -9.431990623474121
    8. 'c' → logprob: -10.306990623474121
    9. '	of' → logprob: -11.306990623474121
    10. '(of' → logprob: -11.681990623474121

Token 415: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.08013048768043518
    2. 'c' → logprob: -2.5801305770874023
    3. 'neg' → logprob: -7.080130577087402
    4. '-negative' → logprob: -8.330130577087402
    5. ' negative' → logprob: -9.080130577087402
    6. 'a' → logprob: -11.705130577087402
    7. '_negative' → logprob: -11.830130577087402
    8. ' c' → logprob: -12.080130577087402
    9. '-' → logprob: -12.080130577087402
    10. '
' → logprob: -12.955130577087402

Token 416: ' numbers' (ID: 8663)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.542597234249115
    2. 'numbers' → logprob: -1.7925972938537598
    3. '_numbers' → logprob: -2.0425972938537598
    4. ' %' → logprob: -2.5425972938537598
    5. ' numbers' → logprob: -3.2925972938537598
    6. 's' → logprob: -5.41759729385376
    7. '_' → logprob: -6.79259729385376
    8. ' ' → logprob: -8.667596817016602
    9. '%c' → logprob: -8.667596817016602
    10. ')' → logprob: -8.667596817016602

Token 417: ' is' (ID: 382)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25193390250205994
    2. ' %' → logprob: -1.5019339323043823
    3. ' is' → logprob: -13.626934051513672
    4. ' ' → logprob: -13.751934051513672
    5. ' ' → logprob: -13.751934051513672
    6. '   ' → logprob: -14.501934051513672
    7. '```' → logprob: -14.876934051513672
    8. '&' → logprob: -15.751934051513672
    9. ' &' → logprob: -16.251934051513672
    10. 'is' → logprob: -16.376934051513672

Token 418: ' even' (ID: 1952)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.3237689733505249
    2. 'even' → logprob: -1.323768973350525
    3. '%' → logprob: -5.3237690925598145
    4. ' even' → logprob: -5.4487690925598145
    5. ' odd' → logprob: -6.6987690925598145
    6. '_even' → logprob: -10.948768615722656
    7. ' %' → logprob: -11.573768615722656
    8. 'Even' → logprob: -11.823768615722656
    9. '   ' → logprob: -12.823768615722656
    10. 'Odd' → logprob: -13.948768615722656

Token 419: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051227468997240067
    2. ' or' → logprob: -3.301227569580078
    3. '       ' → logprob: -5.176227569580078
    4. ':
' → logprob: -5.801227569580078
    5. ' and' → logprob: -6.301227569580078
    6. '==' → logprob: -7.051227569580078
    7. ',' → logprob: -7.176227569580078
    8. ' ==' → logprob: -7.801227569580078
    9. '   ' → logprob: -8.801227569580078
    10. '           ' → logprob: -8.926227569580078

Token 420: ' the' (ID: 290)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3913651406764984
    2. '       ' → logprob: -1.6413651704788208
    3. 'print' → logprob: -2.1413650512695312
    4. ' if' → logprob: -4.641365051269531
    5. '           ' → logprob: -6.016365051269531
    6. '        ' → logprob: -8.391365051269531
    7. 'if' → logprob: -9.016365051269531
    8. '   ' → logprob: -9.516365051269531
    9. '```' → logprob: -9.766365051269531
    10. '[' → logprob: -11.141365051269531

Token 421: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11933669447898865
    2. ' print' → logprob: -2.3693366050720215
    3. 'if' → logprob: -4.6193366050720215
    4. '   ' → logprob: -5.1193366050720215
    5. ' if' → logprob: -5.9943366050720215
    6. 'count' → logprob: -8.11933708190918
    7. '       ' → logprob: -9.11933708190918
    8. ' ' → logprob: -10.24433708190918
    9. ' count' → logprob: -10.36933708190918
    10. '```' → logprob: -10.49433708190918

Token 422: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4935246407985687
    2. 'sum' → logprob: -1.3685246706008911
    3. 'print' → logprob: -2.8685245513916016
    4. '   ' → logprob: -3.1185245513916016
    5. ' print' → logprob: -4.118524551391602
    6. '_sum' → logprob: -4.368524551391602
    7. '       ' → logprob: -6.118524551391602
    8. ' is' → logprob: -6.618524551391602
    9. 'ans' → logprob: -8.243524551391602
    10. ' ans' → logprob: -8.993524551391602

Token 423: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9662880301475525
    2. ' is' → logprob: -1.5912880897521973
    3. ' =' → logprob: -2.2162880897521973
    4. '           ' → logprob: -2.4662880897521973
    5. '=' → logprob: -2.5912880897521973
    6. ' +=' → logprob: -3.0912880897521973
    7. 'print' → logprob: -3.0912880897521973
    8. ' print' → logprob: -4.216288089752197
    9. ')' → logprob: -4.341288089752197
    10. '+=' → logprob: -4.841288089752197

Token 424: ' already' (ID: 4279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10775686800479889
    2. ' print' → logprob: -2.8577568531036377
    3. '       ' → logprob: -3.4827568531036377
    4. '   ' → logprob: -5.607757091522217
    5. '           ' → logprob: -6.357757091522217
    6. '(ans' → logprob: -6.357757091522217
    7. '.print' → logprob: -6.857757091522217
    8. ')' → logprob: -7.357757091522217
    9. 'printed' → logprob: -7.357757091522217
    10. 'ans' → logprob: -7.482757091522217

Token 425: ' maximal' (ID: 65414)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22535237669944763
    2. 'max' → logprob: -2.2253522872924805
    3. ' print' → logprob: -3.1003522872924805
    4. ' maximal' → logprob: -3.3503522872924805
    5. '   ' → logprob: -5.7253522872924805
    6. 'ans' → logprob: -5.8503522872924805
    7. 'optimal' → logprob: -5.9753522872924805
    8. ' optimal' → logprob: -6.4753522872924805
    9. ' max' → logprob: -6.7253522872924805
    10. ' correct' → logprob: -7.1003522872924805

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001136881415732205
    2. ':' → logprob: -8.251136779785156
    3. 'print' → logprob: -8.251136779785156
    4. '   ' → logprob: -8.501136779785156
    5. ' or' → logprob: -8.501136779785156
    6. 'elif' → logprob: -9.251136779785156
    7. '           ' → logprob: -10.376136779785156
    8. 'else' → logprob: -10.501136779785156
    9. ',' → logprob: -10.626136779785156
    10. ' elif' → logprob: -12.126136779785156

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012068998767063022
    2. '   ' → logprob: -7.376206874847412
    3. ' or' → logprob: -8.87620735168457
    4. ':' → logprob: -9.00120735168457
    5. 'elif' → logprob: -9.00120735168457
    6. 'else' → logprob: -10.25120735168457
    7. ' elif' → logprob: -10.25120735168457
    8. 'print' → logprob: -10.37620735168457
    9. ',' → logprob: -10.62620735168457
    10. ' else' → logprob: -10.62620735168457

Token 428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2276977300643921
    2. ' if' → logprob: -1.727697730064392
    3. '       ' → logprob: -3.7276978492736816
    4. 'elif' → logprob: -6.352697849273682
    5. ' elif' → logprob: -9.102697372436523
    6. '   ' → logprob: -10.352697372436523
    7. 'else' → logprob: -12.602697372436523
    8. '```' → logprob: -13.227697372436523
    9. '	if' → logprob: -13.852697372436523
    10. '    ' → logprob: -14.852697372436523

Token 429: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00409371592104435
    2. ' c' → logprob: -5.504093647003174
    3. '(c' → logprob: -11.379094123840332
    4. '   ' → logprob: -12.629094123840332
    5. '	c' → logprob: -14.754094123840332
    6. ' ' → logprob: -16.504093170166016
    7. '_c' → logprob: -17.629093170166016
    8. ' ' → logprob: -17.879093170166016
    9. '       ' → logprob: -18.004093170166016
    10. '$c' → logprob: -18.504093170166016

Token 430: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02324652671813965
    2. '%' → logprob: -3.7732465267181396
    3. ' ' → logprob: -13.898246765136719
    4. ' ' → logprob: -16.52324676513672
    5. '   ' → logprob: -18.77324676513672
    6. ' %
' → logprob: -18.77324676513672
    7. '```' → logprob: -18.89824676513672
    8. ' %)' → logprob: -20.27324676513672
    9. ')' → logprob: -20.39824676513672
    10. ' `%' → logprob: -20.64824676513672

Token 431: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.627185821533203
    4. '```' → logprob: -16.752185821533203
    5. '  ' → logprob: -17.752185821533203
    6. '=' → logprob: -18.502185821533203
    7. '
' → logprob: -19.127185821533203
    8. '==' → logprob: -19.502185821533203
    9. '    ' → logprob: -19.877185821533203
    10. '       ' → logprob: -20.252185821533203

Token 432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -14.12501049041748
    4. '   ' → logprob: -14.25001049041748
    5. '
' → logprob: -17.000011444091797
    6. '  ' → logprob: -17.750011444091797
    7. '=' → logprob: -17.750011444091797
    8. '[' → logprob: -18.125011444091797
    9. '۲' → logprob: -18.187511444091797
    10. '       ' → logprob: -18.187511444091797

Token 433: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029794352129101753
    2. ' ==' → logprob: -3.529794454574585
    3. '=' → logprob: -10.529794692993164
    4. '!=' → logprob: -11.529794692993164
    5. '0' → logprob: -13.279794692993164
    6. ' !=' → logprob: -13.529794692993164
    7. ')==' → logprob: -13.529794692993164
    8. ')' → logprob: -13.904794692993164
    9. '2' → logprob: -14.029794692993164
    10. '==
' → logprob: -14.904794692993164

Token 434: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '2' → logprob: -17.125036239624023
    5. '
' → logprob: -17.125036239624023
    6. '```' → logprob: -17.125036239624023
    7. '=' → logprob: -18.250036239624023
    8. '1' → logprob: -18.875036239624023
    9. '==' → logprob: -19.375036239624023
    10. '۰' → logprob: -19.625036239624023

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -9.750061988830566
    3. '2' → logprob: -12.625061988830566
    4. '   ' → logprob: -15.250061988830566
    5. '```' → logprob: -15.875061988830566
    6. '1' → logprob: -16.687562942504883
    7. '
' → logprob: -17.125062942504883
    8. '۰' → logprob: -17.875062942504883
    9. '4' → logprob: -18.125062942504883
    10. '	' → logprob: -18.187562942504883

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10036905854940414
    2. ':
' → logprob: -2.3503689765930176
    3. '           ' → logprob: -9.225369453430176
    4. '):
' → logprob: -10.600369453430176
    5. '):' → logprob: -10.725369453430176
    6. '       ' → logprob: -11.475369453430176
    7. ')' → logprob: -12.975369453430176
    8. ':

' → logprob: -13.725369453430176
    9. ':
' → logprob: -13.725369453430176
    10. '():
' → logprob: -14.225369453430176

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0878617912530899
    2. 'print' → logprob: -3.5878617763519287
    3. ':
' → logprob: -3.9628617763519287
    4. '       ' → logprob: -3.9628617763519287
    5. ':' → logprob: -4.087862014770508
    6. ' print' → logprob: -6.462862014770508
    7. '```' → logprob: -10.587862014770508
    8. '):
' → logprob: -11.087862014770508
    9. '               ' → logprob: -11.462862014770508
    10. '.print' → logprob: -11.837862014770508

Token 438: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.189097598195076
    2. 'print' (adapté à ' print') → logprob: -1.9390976428985596
    3. '           ' → logprob: -3.5640976428985596
    4. '               ' → logprob: -9.43909740447998
    5. '       ' → logprob: -10.06409740447998
    6. '            ' → logprob: -12.31409740447998
    7. '   ' → logprob: -12.31409740447998
    8. '```' → logprob: -13.43909740447998
    9. '	print' → logprob: -13.68909740447998
    10. '    ' → logprob: -14.06409740447998

Token 439: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.8624639324116288e-06
    2. 'ans' → logprob: -13.250001907348633
    3. '(' → logprob: -18.000001907348633
    4. ' (' → logprob: -18.500001907348633
    5. '	ans' → logprob: -19.375001907348633
    6. ' ans' → logprob: -19.625001907348633
    7. 'Ans' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.375001907348633
    9. '(answer' → logprob: -22.125001907348633
    10. 'ANS' → logprob: -22.250001907348633

Token 440: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06214626133441925
    2. ')
' → logprob: -2.8121461868286133
    3. '       ' → logprob: -9.812146186828613
    4. '           ' → logprob: -10.062146186828613
    5. ' )' → logprob: -10.437146186828613
    6. '   ' → logprob: -11.312146186828613
    7. '-' → logprob: -11.437146186828613
    8. ')
' → logprob: -11.562146186828613
    9. ' )
' → logprob: -11.687146186828613
    10. ' -' → logprob: -12.687146186828613

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04210055619478226
    2. 'else' → logprob: -3.292100667953491
    3. ' else' → logprob: -5.542100429534912
    4. '   ' → logprob: -9.16710090637207
    5. '```' → logprob: -11.54210090637207
    6. '<|end|>' → logprob: -11.54210090637207
    7. '	else' → logprob: -12.41710090637207
    8. ')' → logprob: -13.16710090637207
    9. 'elif' → logprob: -14.16710090637207
    10. '[' → logprob: -15.16710090637207

Token 442: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15319719910621643
    2. 'else' (adapté à ' else') → logprob: -2.1531972885131836
    3. ' else' → logprob: -3.6531972885131836
    4. '	else' → logprob: -11.778197288513184
    5. '   ' → logprob: -12.028197288513184
    6. '	' → logprob: -12.403197288513184
    7. '```' → logprob: -13.903197288513184
    8. 'elif' → logprob: -16.653196334838867
    9. '           ' → logprob: -16.778196334838867
    10. '_else' → logprob: -16.903196334838867

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2414150983095169
    2. ':
' → logprob: -2.116415023803711
    3. '           ' → logprob: -2.366415023803711
    4. '       ' → logprob: -9.116415023803711
    5. '   ' → logprob: -10.616415023803711
    6. '          ' → logprob: -11.366415023803711
    7. '[' → logprob: -11.491415023803711
    8. '               ' → logprob: -11.741415023803711
    9. ':
' → logprob: -12.241415023803711
    10. ',' → logprob: -12.241415023803711

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3804978132247925
    2. 'print' → logprob: -1.5054978132247925
    3. ' print' → logprob: -2.380497932434082
    4. '   ' → logprob: -6.380497932434082
    5. '       ' → logprob: -8.130497932434082
    6. ' ' → logprob: -10.505497932434082
    7. '```' → logprob: -11.005497932434082
    8. '               ' → logprob: -11.505497932434082
    9. '	print' → logprob: -11.880497932434082
    10. ' ans' → logprob: -12.380497932434082

Token 445: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015240294160321355
    2. ' print' → logprob: -6.501523971557617
    3. '           ' → logprob: -10.751523971557617
    4. '   ' → logprob: -15.876523971557617
    5. '```' → logprob: -17.001523971557617
    6. '	print' → logprob: -17.626523971557617
    7. '               ' → logprob: -18.001523971557617
    8. '-print' → logprob: -18.251523971557617
    9. '       ' → logprob: -18.626523971557617
    10. '``' → logprob: -19.626523971557617

Token 446: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7729658540920354e-05
    2. ' print' → logprob: -10.750027656555176
    3. '           ' → logprob: -12.000027656555176
    4. '   ' → logprob: -16.375028610229492
    5. '       ' → logprob: -19.125028610229492
    6. '               ' → logprob: -20.375028610229492
    7. '	print' → logprob: -21.125028610229492
    8. '```' → logprob: -21.125028610229492
    9. ' ' → logprob: -21.750028610229492
    10. '  ' → logprob: -21.750028610229492

Token 447: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07436979562044144
    2. 'ans' → logprob: -3.4493699073791504
    3. ' ans' → logprob: -3.8243699073791504
    4. ' print' → logprob: -4.44936990737915
    5. '(ans' → logprob: -5.57436990737915
    6. '           ' → logprob: -6.19936990737915
    7. '   ' → logprob: -8.199369430541992
    8. 'tmp' → logprob: -8.324369430541992
    9. ' tmp' → logprob: -11.449369430541992
    10. '       ' → logprob: -12.199369430541992

Token 448: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021108495071530342
    2. 'ans' → logprob: -3.896108388900757
    3. ' print' → logprob: -8.771108627319336
    4. '   ' → logprob: -9.021108627319336
    5. 'tmp' → logprob: -9.271108627319336
    6. ' ans' → logprob: -10.396108627319336
    7. '           ' → logprob: -10.396108627319336
    8. 'answer' → logprob: -10.521108627319336
    9. 'abs' → logprob: -11.146108627319336
    10. 'code' → logprob: -11.396108627319336

Token 449: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04345950484275818
    2. ' of' → logprob: -3.418459415435791
    3. 'of' → logprob: -4.918459415435791
    4. '(ans' → logprob: -6.793459415435791
    5. '   ' → logprob: -7.918459415435791
    6. 'ans' → logprob: -8.04345989227295
    7. ' ans' → logprob: -8.66845989227295
    8. '          ' → logprob: -8.79345989227295
    9. '               ' → logprob: -8.91845989227295
    10. '            ' → logprob: -9.79345989227295

Token 450: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.014470689930021763
    2. ' negative' → logprob: -4.26447057723999
    3. 'neg' → logprob: -8.264471054077148
    4. '-negative' → logprob: -10.514471054077148
    5. ' negatives' → logprob: -11.639471054077148
    6. '-' → logprob: -11.889471054077148
    7. '_negative' → logprob: -13.389471054077148
    8. 'c' → logprob: -13.639471054077148
    9. '   ' → logprob: -14.389471054077148
    10. ' negativo' → logprob: -14.764471054077148

Token 451: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.06689553707838058
    2. ' numbers' → logprob: -2.9418954849243164
    3. '_numbers' → logprob: -4.691895484924316
    4. '   ' → logprob: -6.566895484924316
    5. '           ' → logprob: -7.316895484924316
    6. '#' → logprob: -7.816895484924316
    7. '2' → logprob: -9.566895484924316
    8. 'ans' → logprob: -10.191895484924316
    9. '```' → logprob: -10.441895484924316
    10. '       ' → logprob: -10.441895484924316

Token 452: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07540792971849442
    2. 'is' → logprob: -3.0754079818725586
    3. '           ' → logprob: -4.200407981872559
    4. ' ==' → logprob: -5.825407981872559
    5. '%' → logprob: -5.950407981872559
    6. '==' → logprob: -6.075407981872559
    7. ' %' → logprob: -6.700407981872559
    8. '   ' → logprob: -7.200407981872559
    9. '```' → logprob: -7.700407981872559
    10. '=' → logprob: -8.325407981872559

Token 453: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.02342599257826805
    2. ' odd' → logprob: -3.773426055908203
    3. '1' → logprob: -9.023426055908203
    4. '   ' → logprob: -11.023426055908203
    5. '>' → logprob: -11.273426055908203
    6. '```' → logprob: -11.273426055908203
    7. ' ' → logprob: -12.148426055908203
    8. ' c' → logprob: -13.023426055908203
    9. '
' → logprob: -13.148426055908203
    10. 'c' → logprob: -13.648426055908203

Token 454: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23644545674324036
    2. '               ' → logprob: -2.361445426940918
    3. ':' → logprob: -2.736445426940918
    4. ':
' → logprob: -3.486445426940918
    5. '-' → logprob: -4.736445426940918
    6. '   ' → logprob: -5.111445426940918
    7. ' -' → logprob: -5.736445426940918
    8. ',' → logprob: -6.986445426940918
    9. '       ' → logprob: -8.111445426940918
    10. 'print' → logprob: -8.236445426940918

Token 455: ' subtract' (ID: 71973)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.050846852362155914
    2. 'print' → logprob: -3.050846815109253
    3. '           ' → logprob: -6.175847053527832
    4. '               ' → logprob: -8.800847053527832
    5. '   ' → logprob: -10.800847053527832
    6. ' ans' → logprob: -13.050847053527832
    7. '            ' → logprob: -14.175847053527832
    8. '\n' → logprob: -14.175847053527832
    9. '       ' → logprob: -14.425847053527832
    10. '                   ' → logprob: -14.675847053527832

Token 456: ' twice' (ID: 18370)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03929446265101433
    2. 'tmp' → logprob: -3.789294481277466
    3. ' ' → logprob: -4.289294242858887
    4. '(' → logprob: -7.164294242858887
    5. ' tmp' → logprob: -7.164294242858887
    6. '(tmp' → logprob: -7.664294242858887
    7. ' (' → logprob: -9.289294242858887
    8. '   ' → logprob: -10.414294242858887
    9. 'ans' → logprob: -10.539294242858887
    10. '0' → logprob: -12.039294242858887

Token 457: ' the' (ID: 290)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.15038222074508667
    2. 'tmp' → logprob: -2.5253822803497314
    3. '*' → logprob: -3.0253822803497314
    4. '(' → logprob: -4.775382041931152
    5. ' tmp' → logprob: -7.275382041931152
    6. '[tmp' → logprob: -7.650382041931152
    7. ' (' → logprob: -7.775382041931152
    8. ' *' → logprob: -7.900382041931152
    9. '   ' → logprob: -9.025382041931152
    10. '$tmp' → logprob: -9.275382041931152

Token 458: ' smallest' (ID: 42173)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -2.8206473871250637e-05
    2. ' tmp' → logprob: -10.500028610229492
    3. '(tmp' → logprob: -14.500028610229492
    4. 'temp' → logprob: -16.625028610229492
    5. '/tmp' → logprob: -17.625028610229492
    6. 'min' → logprob: -17.625028610229492
    7. '$tmp' → logprob: -17.750028610229492
    8. '_tmp' → logprob: -18.250028610229492
    9. 'tm' → logprob: -19.000028610229492
    10. '[tmp' → logprob: -19.000028610229492

Token 459: ' absolute' (ID: 17786)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -1.0879461765289307
    2. 'tmp' → logprob: -1.0879461765289307
    3. '(tmp' → logprob: -1.2129461765289307
    4. '_tmp' → logprob: -4.587945938110352
    5. ' _' → logprob: -4.962945938110352
    6. ' ' → logprob: -5.837945938110352
    7. '_' → logprob: -5.962945938110352
    8. ' *' → logprob: -6.462945938110352
    9. ' )' → logprob: -6.587945938110352
    10. '[tmp' → logprob: -6.962945938110352

Token 460: ' value' (ID: 1432)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2651457190513611
    2. 'value' → logprob: -2.140145778656006
    3. ' value' → logprob: -3.015145778656006
    4. '_' → logprob: -3.265145778656006
    5. ' _' → logprob: -4.140145778656006
    6. ' tmp' → logprob: -5.515145778656006
    7. 'tmp' → logprob: -5.765145778656006
    8. ')' → logprob: -6.765145778656006
    9. '_m' → logprob: -6.890145778656006
    10. ' ' → logprob: -7.390145778656006

Token 461: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017834756523370743
    2. '(ans' → logprob: -4.642834663391113
    3. '-' → logprob: -5.517834663391113
    4. ' from' → logprob: -6.517834663391113
    5. ' ans' → logprob: -7.517834663391113
    6. 'from' → logprob: -7.767834663391113
    7. ' -' → logprob: -7.767834663391113
    8. 'print' → logprob: -8.017834663391113
    9. '   ' → logprob: -8.017834663391113
    10. '               ' → logprob: -9.267834663391113

Token 462: '           ' (ID: 352)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7534268498420715
    2. '(' → logprob: -0.8784268498420715
    3. '(
' → logprob: -2.3784267902374268
    4. '           ' → logprob: -4.253427028656006
    5. '-' → logprob: -6.003427028656006
    6. '   ' → logprob: -6.003427028656006
    7. '(-' → logprob: -8.003426551818848
    8. 'from' → logprob: -8.378426551818848
    9. '(tmp' → logprob: -8.878426551818848
    10. '       ' → logprob: -8.878426551818848

Token 463: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006061719032004476
    2. ' print' → logprob: -7.750606060028076
    3. '           ' → logprob: -9.000606536865234
    4. 'ans' → logprob: -10.500606536865234
    5. '(ans' → logprob: -10.750606536865234
    6. ' ans' → logprob: -12.875606536865234
    7. '   ' → logprob: -15.125606536865234
    8. '```' → logprob: -16.125606536865234
    9. '(print' → logprob: -16.375606536865234
    10. 'answer' → logprob: -17.750606536865234

Token 464: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25239747762680054
    2. ' print' → logprob: -1.7523975372314453
    3. '           ' → logprob: -3.0023975372314453
    4. '   ' → logprob: -10.502397537231445
    5. '```' → logprob: -12.252397537231445
    6. ' ans' → logprob: -13.502397537231445
    7. '       ' → logprob: -13.502397537231445
    8. '-' → logprob: -13.502397537231445
    9. '               ' → logprob: -14.252397537231445
    10. ' ' → logprob: -15.252397537231445

Token 465: ' flip' (ID: 29130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04530508443713188
    2. 'maximize' → logprob: -3.170305013656616
    3. ' print' → logprob: -6.920305252075195
    4. ' maximize' → logprob: -7.420305252075195
    5. 'opt' → logprob: -8.295305252075195
    6. 'handle' → logprob: -9.045305252075195
    7. 'final' → logprob: -9.545305252075195
    8. 'adjust' → logprob: -10.045305252075195
    9. 'correct' → logprob: -10.170305252075195
    10. 'ach' → logprob: -10.420305252075195

Token 466: ' its' (ID: 1617)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.07352166622877121
    2. 'tmp' → logprob: -3.198521614074707
    3. '(' → logprob: -3.698521614074707
    4. ' (' → logprob: -6.323521614074707
    5. ' tmp' → logprob: -6.823521614074707
    6. 'the' → logprob: -7.448521614074707
    7. '   ' → logprob: -7.823521614074707
    8. '(ans' → logprob: -7.823521614074707
    9. '(min' → logprob: -8.698521614074707
    10. ' the' → logprob: -8.698521614074707

Token 467: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.0340711735188961
    2. ' sign' → logprob: -3.409071207046509
    3. ')' → logprob: -9.28407096862793
    4. 'print' → logprob: -9.28407096862793
    5. '_sign' → logprob: -9.28407096862793
    6. 'value' → logprob: -10.53407096862793
    7. ' value' → logprob: -10.65907096862793
    8. '```' → logprob: -10.65907096862793
    9. '-sign' → logprob: -11.03407096862793
    10. '2' → logprob: -11.90907096862793

Token 468: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004023069050163031
    2. '(ans' → logprob: -6.12902307510376
    3. ' ans' → logprob: -7.62902307510376
    4. 'print' → logprob: -7.87902307510376
    5. '   ' → logprob: -8.004022598266602
    6. '-' → logprob: -8.379022598266602
    7. 'ans' → logprob: -9.129022598266602
    8. '       ' → logprob: -9.629022598266602
    9. ' from' → logprob: -10.254022598266602
    10. '
' → logprob: -10.379022598266602

Token 469: ' maximize' (ID: 44207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3369777500629425
    2. 'maximize' → logprob: -1.3369777202606201
    3. ' print' → logprob: -4.336977958679199
    4. ' maximize' → logprob: -4.836977958679199
    5. 'max' → logprob: -6.711977958679199
    6. 'ach' → logprob: -7.961977958679199
    7. 'increase' → logprob: -8.3369779586792
    8. 'adjust' → logprob: -8.4619779586792
    9. '```' → logprob: -8.8369779586792
    10. ' achieve' → logprob: -9.8369779586792

Token 470: ' the' (ID: 290)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02181324176490307
    2. '(tmp' → logprob: -4.14681339263916
    3. 'ans' → logprob: -5.39681339263916
    4. '(' → logprob: -7.14681339263916
    5. ' ans' → logprob: -8.77181339263916
    6. 'tmp' → logprob: -8.89681339263916
    7. ' (' → logprob: -9.14681339263916
    8. '   ' → logprob: -10.77181339263916
    9. ' tmp' → logprob: -12.02181339263916
    10. '1' → logprob: -12.27181339263916

Token 471: ' sum' (ID: 4215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08684885501861572
    2. 'sum' → logprob: -2.586848735809326
    3. 'result' → logprob: -5.711848735809326
    4. 'answer' → logprob: -5.961848735809326
    5. 'print' → logprob: -6.836848735809326
    6. ' ans' → logprob: -8.086849212646484
    7. 'output' → logprob: -8.961849212646484
    8. ' sum' → logprob: -9.086849212646484
    9. 'total' → logprob: -9.086849212646484
    10. 'max' → logprob: -9.211849212646484

Token 472: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020435955375432968
    2. 'print' → logprob: -4.520435810089111
    3. '-' → logprob: -4.770435810089111
    4. '(ans' → logprob: -8.02043628692627
    5. ' print' → logprob: -8.89543628692627
    6. ' ans' → logprob: -8.89543628692627
    7. '   ' → logprob: -9.64543628692627
    8. ' -' → logprob: -9.77043628692627
    9. 'ans' → logprob: -10.27043628692627
    10. '       ' → logprob: -10.77043628692627

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028072621673345566
    2. 'print' → logprob: -3.6530725955963135
    3. ' print' → logprob: -6.403072834014893
    4. '
' → logprob: -10.528072357177734
    5. '\n' → logprob: -10.528072357177734
    6. '```' → logprob: -10.528072357177734
    7. '   ' → logprob: -11.153072357177734
    8. '       ' → logprob: -11.528072357177734
    9. '               ' → logprob: -12.653072357177734
    10. '            
' → logprob: -12.903072357177734

Token 474: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012159519828855991
    2. ' print' → logprob: -6.751215934753418
    3. '           ' → logprob: -10.001215934753418
    4. '   ' → logprob: -15.126215934753418
    5. '```' → logprob: -16.001216888427734
    6. '       ' → logprob: -17.376216888427734
    7. '	print' → logprob: -19.001216888427734
    8. '``' → logprob: -19.126216888427734
    9. '               ' → logprob: -19.251216888427734
    10. '-' → logprob: -19.376216888427734

Token 475: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -17.000003814697266
    4. 'ans' → logprob: -17.375003814697266
    5. '(abs' → logprob: -19.000003814697266
    6. '(
' → logprob: -19.375003814697266
    7. ' ans' → logprob: -19.625003814697266
    8. '	ans' → logprob: -19.875003814697266
    9. '((' → logprob: -20.250003814697266
    10. '(answer' → logprob: -20.375003814697266

Token 476: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002805940806865692
    2. '-' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.627805709838867
    4. ')' → logprob: -15.377805709838867
    5. ' ' → logprob: -15.377805709838867
    6. '   ' → logprob: -15.502805709838867
    7. ',' → logprob: -18.127805709838867
    8. '  ' → logprob: -18.502805709838867
    9. '    ' → logprob: -18.752805709838867
    10. '-p' → logprob: -18.877805709838867

Token 477: ' tmp' (ID: 8919)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019185843120794743
    2. 'tmp' → logprob: -8.625191688537598
    3. ' ' → logprob: -11.500191688537598
    4. '(' → logprob: -13.625191688537598
    5. '(tmp' → logprob: -14.625191688537598
    6. '   ' → logprob: -15.125191688537598
    7. ' tmp' → logprob: -16.875192642211914
    8. '```' → logprob: -17.125192642211914
    9. '/tmp' → logprob: -17.125192642211914
    10. 'temp' → logprob: -17.625192642211914

Token 478: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '*_' → logprob: -16.25
    4. ' _' → logprob: -17.25
    5. '```' → logprob: -19.0
    6. '*' → logprob: -19.5
    7. '\' → logprob: -19.625
    8. '2' → logprob: -19.875
    9. '_mul' → logprob: -20.75
    10. '_ml' → logprob: -20.875

Token 479: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.018151231110095978
    2. ' *' → logprob: -4.01815128326416
    3. ')' → logprob: -13.64315128326416
    4. ' ' → logprob: -16.643150329589844
    5. ')*' → logprob: -17.268150329589844
    6. '**' → logprob: -17.893150329589844
    7. '2' → logprob: -17.893150329589844
    8. ' ' → logprob: -18.018150329589844
    9. '   ' → logprob: -18.768150329589844
    10. '"' → logprob: -20.018150329589844

Token 480: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '```' → logprob: -19.50001335144043
    5. '۲' → logprob: -20.25001335144043
    6. '２' → logprob: -20.37501335144043
    7. '  ' → logprob: -21.75001335144043
    8. '२' → logprob: -22.37501335144043
    9. '
' → logprob: -22.37501335144043
    10. '٢' → logprob: -22.50001335144043

Token 481: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.125
    4. '```' → logprob: -19.875
    5. '２' → logprob: -20.875
    6. '۲' → logprob: -21.5
    7. '
' → logprob: -22.125
    8. '  ' → logprob: -22.5
    9. '

' → logprob: -23.0625
    10. '٢' → logprob: -23.0625

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -17.250001907348633
    6. ')}' → logprob: -18.125001907348633
    7. '),' → logprob: -19.125001907348633
    8. '}' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '')' → logprob: -19.500001907348633

Token 483: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' Call' (ID: 9238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' the' (ID: 290)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0003357006062287837
    2. ' calculate' → logprob: -8.000335693359375
    3. '```' → logprob: -16.375335693359375
    4. 'def' → logprob: -16.625335693359375
    5. '.calculate' → logprob: -16.750335693359375
    6. 'alculate' → logprob: -16.875335693359375
    7. 'c' → logprob: -18.125335693359375
    8. 'calc' → logprob: -19.250335693359375
    9. 'Calculate' → logprob: -19.375335693359375
    10. 'compute' → logprob: -20.000335693359375

Token 486: ' function' (ID: 1114)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -7.896309739408025e-07
    2. 'def' → logprob: -14.750000953674316
    3. ' calculate' → logprob: -15.000000953674316
    4. 'define' → logprob: -19.5
    5. 'Calculate' → logprob: -20.625
    6. '.calculate' → logprob: -21.125
    7. '```' → logprob: -22.125
    8. 'alculate' → logprob: -22.25
    9. 'compute' → logprob: -22.375
    10. 'c' → logprob: -22.625

Token 487: ' to' (ID: 316)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -4.596781946020201e-05
    2. '()
' → logprob: -11.000045776367188
    3. '```' → logprob: -11.500045776367188
    4. '
' → logprob: -12.125045776367188
    5. ' calculate' → logprob: -12.500045776367188
    6. '()' → logprob: -12.500045776367188
    7. 'def' → logprob: -13.000045776367188
    8. '\' → logprob: -14.000045776367188
    9. '.calculate' → logprob: -14.500045776367188
    10. '(
' → logprob: -14.500045776367188

Token 488: ' execute' (ID: 15792)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -9.610702363715973e-06
    2. ' calculate' → logprob: -12.250009536743164
    3. 'execute' → logprob: -13.750009536743164
    4. 'cal' → logprob: -13.875009536743164
    5. 'run' → logprob: -14.500009536743164
    6. '```' → logprob: -14.625009536743164
    7. 'alculate' → logprob: -15.000009536743164
    8. 'solve' → logprob: -15.250009536743164
    9. '#' → logprob: -15.375009536743164
    10. '.calculate' → logprob: -15.500009536743164

Token 489: ' the' (ID: 290)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.03454495221376419
    2. '()
' → logprob: -3.5345449447631836
    3. '
' → logprob: -6.534544944763184
    4. '()' → logprob: -6.659544944763184
    5. '(
' → logprob: -6.909544944763184
    6. 'def' → logprob: -7.659544944763184
    7. '\' → logprob: -8.909544944763184
    8. ' calculate' → logprob: -8.909544944763184
    9. '\n' → logprob: -9.409544944763184
    10. '(c' → logprob: -9.909544944763184

Token 490: ' logic' (ID: 18485)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0018926990451291203
    2. 'code' → logprob: -6.751892566680908
    3. 'cal' → logprob: -7.251892566680908
    4. 'function' → logprob: -12.376893043518066
    5. ' calculation' → logprob: -12.751893043518066
    6. 'calculator' → logprob: -12.876893043518066
    7. 'program' → logprob: -13.376893043518066
    8. 'def' → logprob: -14.376893043518066
    9. 'calcul' → logprob: -14.501893043518066
    10. ' calculate' → logprob: -15.126893043518066

Token 491: '
' (ID: 198)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0342719741165638
    2. '
' → logprob: -3.9092719554901123
    3. '()
' → logprob: -4.909272193908691
    4. '()' → logprob: -5.659272193908691
    5. '\n' → logprob: -6.909272193908691
    6. '\' → logprob: -7.284272193908691
    7. '```' → logprob: -7.659272193908691
    8. '(
' → logprob: -8.159272193908691
    9. ' calculate' → logprob: -8.784272193908691
    10. '.calculate' → logprob: -10.659272193908691

Token 492: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: 0.0
    2. ' calculate' → logprob: -18.0
    3. '```' → logprob: -21.25
    4. 'def' → logprob: -22.0
    5. '.calculate' → logprob: -22.25
    6. 'c' → logprob: -22.75
    7. 'compute' → logprob: -23.125
    8. 'calc' → logprob: -23.25
    9. 'calcul' → logprob: -23.5
    10. 'calculator' → logprob: -24.25

Token 493: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0005556552205234766
    2. '_' → logprob: -7.500555515289307
    3. 'max' → logprob: -13.250555992126465
    4. '_MAX' → logprob: -15.375555992126465
    5. '_
' → logprob: -16.25055503845215
    6. '_sum' → logprob: -16.25055503845215
    7. '_m' → logprob: -16.37555503845215
    8. 'Max' → logprob: -16.50055503845215
    9. '_Max' → logprob: -16.50055503845215
    10. '_min' → logprob: -17.12555503845215

Token 494: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.7610454708337784e-05
    2. '_max' → logprob: -10.625027656555176
    3. '_' → logprob: -13.375027656555176
    4. 'sum' → logprob: -13.750027656555176
    5. '__' → logprob: -15.625027656555176
    6. '```' → logprob: -16.00002670288086
    7. ' _' → logprob: -16.50002670288086
    8. '\' → logprob: -16.87502670288086
    9. ')' → logprob: -17.00002670288086
    10. '_val' → logprob: -17.50002670288086

Token 495: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -6.749814019713085e-06
    2. '_sum' → logprob: -12.125006675720215
    3. '_' → logprob: -13.750006675720215
    4. 'with' → logprob: -16.87500762939453
    5. '_WITH' → logprob: -17.12500762939453
    6. '_for' → logprob: -17.75000762939453
    7. '_value' → logprob: -18.25000762939453
    8. ' _' → logprob: -18.25000762939453
    9. '_to' → logprob: -18.25000762939453
    10. '```' → logprob: -18.25000762939453

Token 496: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.0031830633524805307
    2. 'sign' → logprob: -5.753182888031006
    3. 'ign' → logprob: -12.378183364868164
    4. 'adjust' → logprob: -14.378183364868164
    5. '_adjust' → logprob: -14.503183364868164
    6. '```' → logprob: -17.378183364868164
    7. '(sign' → logprob: -17.628183364868164
    8. 'gn' → logprob: -17.878183364868164
    9. 'in' → logprob: -17.878183364868164
    10. '	sign' → logprob: -18.128183364868164

Token 497: '_adjust' (ID: 109618)
  Prédit: '_adjust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adjust' → logprob: -3.666993507067673e-05
    2. 'adjust' → logprob: -11.000036239624023
    3. '_' → logprob: -11.625036239624023
    4. '_adj' → logprob: -12.000036239624023
    5. '_ad' → logprob: -12.625036239624023
    6. ' adjustment' → logprob: -14.125036239624023
    7. '_Adjust' → logprob: -15.500036239624023
    8. ' _' → logprob: -15.625036239624023
    9. '_assignment' → logprob: -15.875036239624023
    10. 'Adjustment' → logprob: -16.750036239624023

Token 498: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0001979378139367327
    2. 'ent' → logprob: -8.625198364257812
    3. 't' → logprob: -11.250198364257812
    4. 'ement' → logprob: -12.875198364257812
    5. '_' → logprob: -14.500198364257812
    6. 'm' → logprob: -14.750198364257812
    7. 'ments' → logprob: -15.250198364257812
    8. ' ment' → logprob: -15.375198364257812
    9. 'n' → logprob: -15.875198364257812
    10. ')' → logprob: -16.000198364257812

Token 499: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 497
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 344
Précision stricte (1ère position): 30.18%
Précision adaptée (1ère position): 31.79%
Précision (top 10): 69.22%
================================================================================
