================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier, stocke la valeur dans la variable l
l = int(input())

# Boucle for pour trouver le plus petit entier n tel que 2^n > l
# La plage est de 0 à 20 inclus (car range(21) s'arrête avant 21)
for i in range(21):
    # Calculer 2 exposant i (i.e., 2^i)
    if 2 ** i > l:
        # Si 2^i est strictement supérieur à l, on a trouvé notre n minimal
        n = i     # On sauvegarde la valeur de i dans n
        break     # On sort immédiatement de la boucle car la condition est satisfaite

# On calcule la valeur de m, qui est le double de n-1
m = (n - 1) * 2

# On calcule s, la différence entre l et 2^(n-1)
s = l - 2 ** (n - 1)

# On initialise value avec la puissance de 2 maximale qui ne dépasse pas l
value = 2 ** (n - 1)

# On crée une liste path_add de taille n-1 remplie de zéros
# Cette liste indiquera pour chaque rang si un chemin alternatif doit être ajouté (1) ou non (0)
path_add = [0 for i in range(n - 1)]

# On crée une liste path_add_value de taille n-1 remplie de zéros
# Cette liste contiendra les valeurs à ajouter aux chemins alternatifs correspondants
path_add_value = [0 for i in range(n - 1)]

# Boucle sur chaque indice i de 0 à n-2 inclus (les étapes du chemin)
for i in range(n - 1):
    # On regarde si s est supérieur ou égal à 2^(n-2-i)
    if s >= 2 ** (n - 2 - i):
        # On retire 2^(n-2-i) à s
        s -= 2 ** (n - 2 - i)
        # On marque que pour ce rang, il y aura un chemin supplémentaire
        path_add[-(i + 1)] = 1   # On utilise -(i + 1) pour remplir la liste à l'envers (à partir de la fin)
        # On sauvegarde la valeur actuelle à utiliser pour ce nouveau chemin
        path_add_value[-(i + 1)] = value
        # On augmente 'value' de 2^(n-2-i) pour le prochain potentiel ajout
        value += 2 ** (n - 2 - i)

# Les lignes suivantes étaient commentées dans le code d'origine, donc inutiles ici, on ne les décommente pas.

# Affichage du résultat :
# Premier print : affiche deux entiers séparés par un espace
# 'n' correspond au nombre total de sommets,
# 'm' au nombre total d'arêtes de base,
# puis on ajoute à 'm' la somme des 1 dans la liste path_add (nombre de chemins alternatifs à ajouter)
print(n, m + sum(path_add))

# Deuxième boucle pour afficher les arêtes de base
# Jusqu'à n-1 car il existe toujours n-1 arêtes entre les sommets consécutifs dans le chemin principal
for i in range(n - 1):
    # Affiche une arête du sommet i+1 au sommet i+2 avec un poids de 0
    print(i + 1, i + 2, 0)
    # Affiche une arête du sommet i+1 au sommet i+2 avec un poids de 2^i
    print(i + 1, i + 2, 2 ** i)

# Troisième boucle pour afficher les chemins alternatifs s'il y en a
for i in range(n - 1):
    # Si pour ce rang il faut ajouter un chemin alternatif alors path_add[i]==1
    if path_add[i] == 1:
        # Affiche une arête partant du sommet i+1 vers le dernier sommet n avec le poids associé
        print(i + 1, n, path_add_value[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01054497342556715
    2. ' l' → logprob: -4.635544776916504
    3. 'user' → logprob: -8.135544776916504
    4. '#' → logprob: -8.885544776916504
    5. 'util' → logprob: -9.010544776916504
    6. '`' → logprob: -10.385544776916504
    7. '```' → logprob: -10.385544776916504
    8. ''' → logprob: -10.635544776916504
    9. 'la' → logprob: -11.010544776916504
    10. '	l' → logprob: -11.510544776916504

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02879609726369381
    2. 'entr' → logprob: -4.153796195983887
    3. ' saisir' → logprob: -5.153796195983887
    4. '```' → logprob: -6.028796195983887
    5. 'r' → logprob: -6.153796195983887
    6. 'sa' → logprob: -7.903796195983887
    7. 'don' → logprob: -8.153796195983887
    8. 'entrée' → logprob: -8.403796195983887
    9. '#' → logprob: -8.403796195983887
    10. ' entrer' → logprob: -8.653796195983887

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028100790455937386
    2. ' un' → logprob: -4.403100967407227
    3. ' une' → logprob: -5.528100967407227
    4. ''' → logprob: -5.778100967407227
    5. '_' → logprob: -6.153100967407227
    6. 's' → logprob: -6.403100967407227
    7. ' ' → logprob: -7.028100967407227
    8. ' :' → logprob: -7.153100967407227
    9. 'u' → logprob: -7.528100967407227
    10. ' u' → logprob: -7.653100967407227

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7890444993972778
    2. ' espace' → logprob: -1.2890444993972778
    3. 'e' → logprob: -2.7890443801879883
    4. 'nombre' → logprob: -3.1640443801879883
    5. ' nombre' → logprob: -3.2890443801879883
    6. 'a' → logprob: -3.7890443801879883
    7. ' nom' → logprob: -4.289044380187988
    8. 'é' → logprob: -4.539044380187988
    9. 'es' → logprob: -4.539044380187988
    10. '_' → logprob: -4.664044380187988

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03961040452122688
    2. 'x' → logprob: -4.164610385894775
    3. 'i' → logprob: -4.414610385894775
    4. 'e' → logprob: -5.664610385894775
    5. 'ent' → logprob: -5.914610385894775
    6. 'nombre' → logprob: -7.289610385894775
    7. '_' → logprob: -7.414610385894775
    8. 's' → logprob: -7.664610385894775
    9. '```' → logprob: -7.664610385894775
    10. '\' → logprob: -7.789610385894775

Token 11: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16483792662620544
    2. 'n' → logprob: -2.4148378372192383
    3. 's' → logprob: -4.414837837219238
    4. 'i' → logprob: -4.789837837219238
    5. 'a' → logprob: -5.039837837219238
    6. 'x' → logprob: -5.539837837219238
    7. ''' → logprob: -5.539837837219238
    8. 'input' → logprob: -5.539837837219238
    9. 'e' → logprob: -5.789837837219238
    10. ',' → logprob: -5.914837837219238

Token 12: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.039717771112918854
    2. ' ' → logprob: -3.539717674255371
    3. 'e' → logprob: -5.664717674255371
    4. 'r' → logprob: -5.664717674255371
    5. ' _' → logprob: -6.789717674255371
    6. 'a' → logprob: -7.289717674255371
    7. 'u' → logprob: -8.164717674255371
    8. 'er' → logprob: -8.789717674255371
    9. ' =' → logprob: -9.039717674255371
    10. 'i' → logprob: -9.414717674255371

Token 13: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47969505190849304
    2. '_' → logprob: -0.9796950817108154
    3. 's' → logprob: -5.479694843292236
    4. ' _' → logprob: -7.604694843292236
    5. ' ' → logprob: -9.104695320129395
    6. '_l' → logprob: -9.479695320129395
    7. 'r' → logprob: -9.729695320129395
    8. 'l' → logprob: -9.729695320129395
    9. '  ' → logprob: -9.854695320129395
    10. '```' → logprob: -9.854695320129395

Token 14: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0243550855666399
    2. '_' → logprob: -4.274354934692383
    3. 'n' → logprob: -6.149354934692383
    4. ' entier' → logprob: -6.274354934692383
    5. 'ent' → logprob: -6.649354934692383
    6. ' ' → logprob: -7.149354934692383
    7. 's' → logprob: -7.274354934692383
    8. ' nombre' → logprob: -7.524354934692383
    9. ' _' → logprob: -7.774354934692383
    10. ' n' → logprob: -7.774354934692383

Token 15: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2312452793121338
    2. 'x' → logprob: -1.2312452793121338
    3. '_' → logprob: -1.7312452793121338
    4. ' ' → logprob: -2.606245279312134
    5. 'i' → logprob: -3.231245279312134
    6. 's' → logprob: -3.231245279312134
    7. 'e' → logprob: -3.731245279312134
    8. 'ent' → logprob: -3.856245279312134
    9. '```' → logprob: -4.856245040893555
    10. 'a' → logprob: -5.606245040893555

Token 16: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0982798337936401
    2. 'la' → logprob: -1.2232798337936401
    3. ' la' → logprob: -1.4732798337936401
    4. ' une' → logprob: -2.7232799530029297
    5. 'variable' → logprob: -3.0982799530029297
    6. ' variable' → logprob: -4.47327995300293
    7. '`' → logprob: -5.47327995300293
    8. 'n' → logprob: -5.97327995300293
    9. 'a' → logprob: -6.22327995300293
    10. 'le' → logprob: -6.47327995300293

Token 17: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.01779915764927864
    2. 'var' → logprob: -5.142799377441406
    3. 'nombre' → logprob: -5.392799377441406
    4. 'ent' → logprob: -5.892799377441406
    5. ' variable' → logprob: -6.017799377441406
    6. 'x' → logprob: -7.517799377441406
    7. 'val' → logprob: -7.767799377441406
    8. 'n' → logprob: -7.892799377441406
    9. '```' → logprob: -8.767799377441406
    10. '`' → logprob: -9.142799377441406

Token 18: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5980201363563538
    2. ' ' → logprob: -1.848020076751709
    3. 'x' → logprob: -2.848020076751709
    4. 's' → logprob: -2.848020076751709
    5. '_' → logprob: -3.098020076751709
    6. 'ent' → logprob: -3.473020076751709
    7. 'i' → logprob: -3.848020076751709
    8. 'a' → logprob: -4.223020076751709
    9. 'e' → logprob: -4.348020076751709
    10. '`' → logprob: -4.723020076751709

Token 19: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2364121675491333
    2. 'a' → logprob: -1.3614121675491333
    3. 'e' → logprob: -2.1114120483398438
    4. 'i' → logprob: -2.1114120483398438
    5. 'igne' → logprob: -2.2364120483398438
    6. '```' → logprob: -3.3614120483398438
    7. ' =' → logprob: -4.361412048339844
    8. '=' → logprob: -4.486412048339844
    9. 'ine' → logprob: -4.736412048339844
    10. '   ' → logprob: -4.986412048339844

Token 20: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3271082639694214
    2. 'n' → logprob: -2.327108383178711
    3. 'i' → logprob: -2.452108383178711
    4. '```' → logprob: -3.327108383178711
    5. 'u' → logprob: -4.077108383178711
    6. 'a' → logprob: -4.577108383178711
    7. 's' → logprob: -4.827108383178711
    8. 'e' → logprob: -5.577108383178711
    9. '`' → logprob: -5.577108383178711
    10. '_' → logprob: -5.827108383178711

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20210382342338562
    2. '=' → logprob: -1.702103853225708
    3. ' ' → logprob: -7.702103614807129
    4. '=input' → logprob: -8.952103614807129
    5. 'e' → logprob: -10.327103614807129
    6. '=int' → logprob: -11.077103614807129
    7. 'i' → logprob: -11.577103614807129
    8. ',' → logprob: -11.702103614807129
    9. 's' → logprob: -11.827103614807129
    10. '.' → logprob: -11.952103614807129

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5808372497558594
    2. ' int' → logprob: -0.8308372497558594
    3. 'input' → logprob: -5.955837249755859
    4. ' input' → logprob: -6.080837249755859
    5. ' ' → logprob: -12.33083724975586
    6. '=int' → logprob: -12.70583724975586
    7. ' ' → logprob: -14.83083724975586
    8. '[int' → logprob: -15.45583724975586
    9. '<int' → logprob: -15.58083724975586
    10. '0' → logprob: -15.83083724975586

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01819208264350891
    2. '(input' → logprob: -4.018192291259766
    3. '('' → logprob: -11.768192291259766
    4. ' (' → logprob: -11.768192291259766
    5. '(
' → logprob: -11.768192291259766
    6. 'input' → logprob: -11.893192291259766
    7. '()' → logprob: -12.393192291259766
    8. '(user' → logprob: -12.643192291259766
    9. '(l' → logprob: -13.393192291259766
    10. '(

' → logprob: -14.268192291259766

Token 24: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2358866184949875
    2. '("("' → logprob: -2.110886573791504
    3. '('' → logprob: -2.485886573791504
    4. '("' → logprob: -6.110886573791504
    5. '("")' → logprob: -6.610886573791504
    6. '()' → logprob: -6.610886573791504
    7. '(""))' → logprob: -7.735886573791504
    8. '(">' → logprob: -8.860886573791504
    9. '(""' → logprob: -9.735886573791504
    10. '("(' → logprob: -10.110886573791504

Token 25: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1632496863603592
    2. '+' → logprob: -2.1632497310638428
    3. ')' → logprob: -3.6632497310638428
    4. '*' → logprob: -6.288249492645264
    5. 'if' → logprob: -6.288249492645264
    6. ',' → logprob: -6.538249492645264
    7. '#' → logprob: -7.163249492645264
    8. ' +' → logprob: -7.288249492645264
    9. 'i' → logprob: -7.538249492645264
    10. ' ' → logprob: -7.663249492645264

Token 26: ' Bou' (ID: 33816)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44317930936813354
    2. ' if' → logprob: -1.0681793689727783
    3. '#' → logprob: -5.443179130554199
    4. 'print' → logprob: -5.943179130554199
    5. 's' → logprob: -6.193179130554199
    6. ' #' → logprob: -6.568179130554199
    7. 'n' → logprob: -6.818179130554199
    8. 'r' → logprob: -7.943179130554199
    9. ' ' → logprob: -8.0681791305542
    10. ' n' → logprob: -8.1931791305542

Token 27: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.28098970651626587
    2. 'c' → logprob: -1.905989646911621
    3. 't' → logprob: -3.030989646911621
    4. 'clé' → logprob: -3.905989646911621
    5. 'cl' → logprob: -4.280989646911621
    6. 'cles' → logprob: -5.030989646911621
    7. '#' → logprob: -6.280989646911621
    8. 'n' → logprob: -6.530989646911621
    9. 'oc' → logprob: -7.530989646911621
    10. '```' → logprob: -7.655989646911621

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29886946082115173
    2. 'for' → logprob: -1.9238694906234741
    3. ' while' → logprob: -2.9238693714141846
    4. ' ' → logprob: -3.0488693714141846
    5. 'while' → logprob: -4.923869609832764
    6. ':' → logprob: -6.923869609832764
    7. ' l' → logprob: -7.673869609832764
    8. ' (' → logprob: -8.048869132995605
    9. ' :' → logprob: -8.673869132995605
    10. ' )' → logprob: -8.673869132995605

Token 29: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7442933917045593
    2. ' ' → logprob: -1.369293451309204
    3. ' range' → logprob: -2.119293451309204
    4. ' for' → logprob: -2.119293451309204
    5. 'range' → logprob: -4.244293212890625
    6. 'for' → logprob: -5.119293212890625
    7. '(range' → logprob: -6.369293212890625
    8. ' l' → logprob: -6.369293212890625
    9. ' ' → logprob: -6.619293212890625
    10. ' (' → logprob: -6.994293212890625

Token 30: ' trouver' (ID: 23195)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002864900976419449
    2. ' ' → logprob: -6.502864837646484
    3. 'i' → logprob: -7.252864837646484
    4. ' range' → logprob: -8.377864837646484
    5. ' _' → logprob: -8.377864837646484
    6. ' iter' → logprob: -9.877864837646484
    7. '_' → logprob: -10.002864837646484
    8. ' ' → logprob: -10.377864837646484
    9. ' parcour' → logprob: -10.877864837646484
    10. 'r' → logprob: -12.252864837646484

Token 31: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11787690222263336
    2. ' i' → logprob: -2.4928770065307617
    3. ' l' → logprob: -4.867877006530762
    4. 'i' → logprob: -4.867877006530762
    5. ' la' → logprob: -5.742877006530762
    6. ' le' → logprob: -6.117877006530762
    7. ' ' → logprob: -6.492877006530762
    8. ' les' → logprob: -6.617877006530762
    9. '<|end|>' → logprob: -7.367877006530762
    10. ' a' → logprob: -7.492877006530762

Token 32: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7457216382026672
    2. ' premier' → logprob: -1.9957215785980225
    3. ' facteur' → logprob: -2.1207215785980225
    4. ' nombre' → logprob: -2.8707215785980225
    5. ' prochain' → logprob: -2.9957215785980225
    6. ' ' → logprob: -2.9957215785980225
    7. 's' → logprob: -3.7457215785980225
    8. 'plus' → logprob: -3.7457215785980225
    9. ' i' → logprob: -4.995721817016602
    10. 'prem' → logprob: -5.120721817016602

Token 33: ' petit' (ID: 20577)
  Prédit: ' grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.11544046550989151
    2. 'grand' → logprob: -2.2404403686523438
    3. ' ' → logprob: -6.615440368652344
    4. ' petit' → logprob: -7.240440368652344
    5. '```' → logprob: -8.365440368652344
    6. '_' → logprob: -9.740440368652344
    7. ' ```' → logprob: -9.740440368652344
    8. ' plus' → logprob: -10.240440368652344
    9. ' long' → logprob: -10.240440368652344
    10. ' _' → logprob: -10.615440368652344

Token 34: ' entier' (ID: 80473)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8555912375450134
    2. ' ' → logprob: -0.9805912375450134
    3. '_' → logprob: -3.105591297149658
    4. '_div' → logprob: -3.105591297149658
    5. ' div' → logprob: -3.230591297149658
    6. ' multiple' → logprob: -3.730591297149658
    7. '```' → logprob: -4.730591297149658
    8. ' facteur' → logprob: -4.730591297149658
    9. ' divisible' → logprob: -4.855591297149658
    10. ' nombre' → logprob: -5.230591297149658

Token 35: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8552576899528503
    2. ' i' → logprob: -0.8552576899528503
    3. ' non' → logprob: -3.355257749557495
    4. ' qui' → logprob: -3.855257749557495
    5. ' divisible' → logprob: -4.480257511138916
    6. 'i' → logprob: -4.605257511138916
    7. ' ' → logprob: -5.105257511138916
    8. ' not' → logprob: -5.230257511138916
    9. ' n' → logprob: -5.230257511138916
    10. '   ' → logprob: -5.480257511138916

Token 36: ' tel' (ID: 10716)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05300132557749748
    2. ' such' → logprob: -3.9280014038085938
    3. ' t' → logprob: -4.178001403808594
    4. ' tel' → logprob: -5.178001403808594
    5. ' i' → logprob: -6.178001403808594
    6. ' n' → logprob: -6.303001403808594
    7. ' for' → logprob: -6.303001403808594
    8. ' telle' → logprob: -7.053001403808594
    9. '>' → logprob: -7.803001403808594
    10. ' ' → logprob: -8.428001403808594

Token 37: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.020626675337553024
    2. ' que' → logprob: -4.020626544952393
    3. '#' → logprob: -7.270626544952393
    4. 'qu' → logprob: -7.645626544952393
    5. 'q' → logprob: -8.14562702178955
    6. ' that' → logprob: -8.39562702178955
    7. '```' → logprob: -8.52062702178955
    8. '   ' → logprob: -9.52062702178955
    9. ' qu' → logprob: -9.52062702178955
    10. 'quel' → logprob: -9.77062702178955

Token 38: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.022666335105895996
    2. 'n' → logprob: -3.8976664543151855
    3. ' ' → logprob: -6.2726664543151855
    4. ' l' → logprob: -9.272665977478027
    5. '(n' → logprob: -9.897665977478027
    6. ' (' → logprob: -11.022665977478027
    7. ' la' → logprob: -11.022665977478027
    8. 'l' → logprob: -11.397665977478027
    9. '  ' → logprob: -12.147665977478027
    10. '```' → logprob: -12.522665977478027

Token 39: '2' (ID: 17)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6368861794471741
    2. 'n' → logprob: -0.7618861794471741
    3. ' ' → logprob: -6.886886119842529
    4. '2' → logprob: -7.011886119842529
    5. 'l' → logprob: -7.136886119842529
    6. '(n' → logprob: -7.886886119842529
    7. ' la' → logprob: -8.011886596679688
    8. ' l' → logprob: -8.261886596679688
    9. '```' → logprob: -9.011886596679688
    10. ' (' → logprob: -9.136886596679688

Token 40: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.023423897102475166
    2. ' **' → logprob: -3.773423910140991
    3. 'n' → logprob: -9.27342414855957
    4. '*' → logprob: -10.77342414855957
    5. '^' → logprob: -10.77342414855957
    6. '*n' → logprob: -11.27342414855957
    7. ' n' → logprob: -12.39842414855957
    8. ' ' → logprob: -12.39842414855957
    9. '```' → logprob: -12.52342414855957
    10. '<n' → logprob: -13.02342414855957

Token 41: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005309910629875958
    2. ' n' → logprob: -7.750531196594238
    3. '**' → logprob: -9.625531196594238
    4. '^' → logprob: -11.375531196594238
    5. ' ' → logprob: -11.625531196594238
    6. 'l' → logprob: -12.875531196594238
    7. '```' → logprob: -12.875531196594238
    8. '*n' → logprob: -13.375531196594238
    9. 'n't' → logprob: -14.125531196594238
    10. '	n' → logprob: -14.125531196594238

Token 42: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07786791771650314
    2. '>=' → logprob: -2.7028679847717285
    3. ' >' → logprob: -5.2028679847717285
    4. '>' → logprob: -6.7028679847717285
    5. ' ' → logprob: -6.8278679847717285
    6. ' <=' → logprob: -11.45286750793457
    7. 'l' → logprob: -11.57786750793457
    8. '2' → logprob: -11.95286750793457
    9. '```' → logprob: -12.07786750793457
    10. '  ' → logprob: -12.32786750793457

Token 43: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.314598023891449
    2. 'l' → logprob: -1.3145980834960938
    3. ' ' → logprob: -6.689598083496094
    4. ' ' → logprob: -9.564598083496094
    5. '  ' → logprob: -12.439598083496094
    6. ' ' → logprob: -13.189598083496094
    7. '	l' → logprob: -13.314598083496094
    8. '```' → logprob: -13.502098083496094
    9. '   ' → logprob: -13.752098083496094
    10. '2' → logprob: -14.002098083496094

Token 44: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021651291754096746
    2. ' n' → logprob: -6.8771653175354
    3. ' for' → logprob: -7.6271653175354
    4. 'for' → logprob: -7.6271653175354
    5. '```' → logprob: -10.252164840698242
    6. 'i' → logprob: -10.377164840698242
    7. ':' → logprob: -10.752164840698242
    8. '=' → logprob: -10.877164840698242
    9. '\n' → logprob: -11.127164840698242
    10. '
' → logprob: -11.877164840698242

Token 45: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010952902026474476
    2. 'for' → logprob: -5.260952949523926
    3. ' for' → logprob: -5.385952949523926
    4. ' n' → logprob: -7.635952949523926
    5. ' 
' → logprob: -9.010952949523926
    6. '```' → logprob: -9.510952949523926
    7. 'i' → logprob: -9.510952949523926
    8. '
' → logprob: -9.760952949523926
    9. '\n' → logprob: -9.760952949523926
    10. ' ' → logprob: -9.885952949523926

Token 46: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03496139124035835
    2. 'for' → logprob: -3.409961462020874
    3. ' for' → logprob: -6.784961223602295
    4. '```' → logprob: -9.159961700439453
    5. ' n' → logprob: -10.159961700439453
    6. 'i' → logprob: -11.159961700439453
    7. 'f' → logprob: -11.534961700439453
    8. '2' → logprob: -12.034961700439453
    9. 'l' → logprob: -13.784961700439453
    10. ' ' → logprob: -13.909961700439453

Token 47: ' plage' (ID: 78241)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.053262896835803986
    2. ' n' → logprob: -3.303262948989868
    3. ' for' → logprob: -4.303262710571289
    4. 'i' → logprob: -7.303262710571289
    5. 'for' → logprob: -8.053262710571289
    6. ' i' → logprob: -8.928262710571289
    7. '```' → logprob: -9.553262710571289
    8. ' ' → logprob: -9.553262710571289
    9. '#' → logprob: -9.803262710571289
    10. ' #' → logprob: -10.178262710571289

Token 48: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25296708941459656
    2. '(range' → logprob: -2.627967119216919
    3. ' range' → logprob: -2.877967119216919
    4. ' (' → logprob: -3.252967119216919
    5. 'range' → logprob: -3.877967119216919
    6. ':' → logprob: -4.37796688079834
    7. ' =' → logprob: -4.37796688079834
    8. '=' → logprob: -5.25296688079834
    9. ' for' → logprob: -6.37796688079834
    10. '(n' → logprob: -7.00296688079834

Token 49: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31501448154449463
    2. 'range' → logprob: -1.3150144815444946
    3. '(range' → logprob: -6.690014362335205
    4. '(' → logprob: -7.815014362335205
    5. '	range' → logprob: -10.565014839172363
    6. ' (' → logprob: -10.690014839172363
    7. ' ' → logprob: -10.690014839172363
    8. '1' → logprob: -11.565014839172363
    9. '```' → logprob: -12.565014839172363
    10. '0' → logprob: -12.940014839172363

Token 50: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39759835600852966
    2. ' range' → logprob: -1.272598385810852
    3. '1' → logprob: -3.5225982666015625
    4. ' ' → logprob: -4.7725982666015625
    5. '0' → logprob: -5.0225982666015625
    6. '(range' → logprob: -7.0225982666015625
    7. '10' → logprob: -7.2725982666015625
    8. 'n' → logprob: -7.6475982666015625
    9. '(' → logprob: -8.522598266601562
    10. '100' → logprob: -8.772598266601562

Token 51: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9340712428092957
    2. '0' → logprob: -1.1840713024139404
    3. 'range' → logprob: -1.3090713024139404
    4. 'l' → logprob: -4.934071063995361
    5. '100' → logprob: -5.309071063995361
    6. ' range' → logprob: -5.684071063995361
    7. '2' → logprob: -6.059071063995361
    8. '31' → logprob: -6.184071063995361
    9. '(' → logprob: -6.309071063995361
    10. 'n' → logprob: -6.309071063995361

Token 52: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002297397702932358
    2. ' ,' → logprob: -6.877297401428223
    3. '(' → logprob: -7.877297401428223
    4. '1' → logprob: -8.252297401428223
    5. ' ' → logprob: -9.377297401428223
    6. '0' → logprob: -9.377297401428223
    7. ')' → logprob: -9.502297401428223
    8. '10' → logprob: -9.627297401428223
    9. '100' → logprob: -10.127297401428223
    10. 'range' → logprob: -10.502297401428223

Token 53: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10564976930618286
    2. 'l' → logprob: -2.980649709701538
    3. ' ' → logprob: -3.105649709701538
    4. '100' → logprob: -5.480649948120117
    5. '50' → logprob: -9.105649948120117
    6. '20' → logprob: -9.230649948120117
    7. '10' → logprob: -9.855649948120117
    8. '1' → logprob: -10.230649948120117
    9. '64' → logprob: -10.355649948120117
    10. '30' → logprob: -10.355649948120117

Token 54: '20' (ID: 455)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15249747037887573
    2. '100' → logprob: -2.0274975299835205
    3. ' l' → logprob: -6.027497291564941
    4. '31' → logprob: -6.152497291564941
    5. '50' → logprob: -6.652497291564941
    6. ' ' → logprob: -6.902497291564941
    7. '30' → logprob: -7.777497291564941
    8. '101' → logprob: -7.777497291564941
    9. '20' → logprob: -7.902497291564941
    10. '64' → logprob: -8.027497291564941

Token 55: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3069061040878296
    2. 'for' → logprob: -1.4319061040878296
    3. ' for' → logprob: -3.931906223297119
    4. ' :' → logprob: -5.681906223297119
    5. ':
' → logprob: -6.431906223297119
    6. ')' → logprob: -8.556905746459961
    7. '):' → logprob: -9.181905746459961
    8. '
' → logprob: -9.181905746459961
    9. ' ' → logprob: -9.306905746459961
    10. ' :
' → logprob: -9.431905746459961

Token 56: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4942384362220764
    2. 'for' → logprob: -1.3692383766174316
    3. ' for' → logprob: -2.3692383766174316
    4. ' :' → logprob: -3.4942383766174316
    5. ':
' → logprob: -5.994238376617432
    6. ' :
' → logprob: -5.994238376617432
    7. ' ' → logprob: -6.119238376617432
    8. 'n' → logprob: -6.744238376617432
    9. '(range' → logprob: -6.994238376617432
    10. '(' → logprob: -7.369238376617432

Token 57: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10820566117763519
    2. '20' → logprob: -3.108205556869507
    3. '):' → logprob: -3.858205556869507
    4. ' )' → logprob: -4.108205795288086
    5. '21' → logprob: -4.233205795288086
    6. ' ' → logprob: -6.358205795288086
    7. 'range' → logprob: -6.608205795288086
    8. '1' → logprob: -7.483205795288086
    9. ' ):' → logprob: -7.983205795288086
    10. ' range' → logprob: -8.233205795288086

Token 58: ' range' (ID: 3352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3753233850002289
    2. ' range' → logprob: -1.5003234148025513
    3. ' on' → logprob: -2.7503232955932617
    4. '20' → logprob: -4.500323295593262
    5. 'range' → logprob: -4.625323295593262
    6. ' n' → logprob: -6.875323295593262
    7. '2' → logprob: -6.875323295593262
    8. ' la' → logprob: -7.125323295593262
    9. '21' → logprob: -7.250323295593262
    10. ' for' → logprob: -8.500323295593262

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.4272752852994017e-05
    2. ')' → logprob: -11.25002384185791
    3. '20' → logprob: -12.00002384185791
    4. ' (' → logprob: -13.12502384185791
    5. '(
' → logprob: -13.62502384185791
    6. '```' → logprob: -14.25002384185791
    7. '0' → logprob: -15.12502384185791
    8. ' ' → logprob: -15.50002384185791
    9. ',' → logprob: -15.87502384185791
    10. '21' → logprob: -16.375024795532227

Token 60: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0006691903108730912
    2. '(' → logprob: -8.250669479370117
    3. ' ' → logprob: -8.375669479370117
    4. ',' → logprob: -8.875669479370117
    5. ')' → logprob: -11.125669479370117
    6. '0' → logprob: -11.250669479370117
    7. '1' → logprob: -12.125669479370117
    8. '22' → logprob: -13.625669479370117
    9. '```' → logprob: -13.625669479370117
    10. '2' → logprob: -14.375669479370117

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31522709131240845
    2. '):' → logprob: -1.3152270317077637
    3. '))' → logprob: -7.065227031707764
    4. ')):' → logprob: -7.315227031707764
    5. ':' → logprob: -8.440227508544922
    6. ' )' → logprob: -9.815227508544922
    7. ' ):' → logprob: -9.815227508544922
    8. ',' → logprob: -10.190227508544922
    9. '):
' → logprob: -10.690227508544922
    10. ' ' → logprob: -11.940227508544922

Token 62: ' s' (ID: 265)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.359404981136322
    2. ')' → logprob: -1.2344050407409668
    3. ' ):' → logprob: -4.859405040740967
    4. ' )' → logprob: -5.984405040740967
    5. '):
' → logprob: -7.859405040740967
    6. ':' → logprob: -9.359404563903809
    7. 'for' → logprob: -9.859404563903809
    8. ' for' → logprob: -10.984404563903809
    9. ')
' → logprob: -11.109404563903809
    10. ' ):
' → logprob: -11.234404563903809

Token 63: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0663004145026207
    2. ')' → logprob: -4.316300392150879
    3. 'er' → logprob: -4.566300392150879
    4. 'era' → logprob: -4.816300392150879
    5. 'earch' → logprob: -5.816300392150879
    6. 'et' → logprob: -6.191300392150879
    7. '=' → logprob: -6.316300392150879
    8. 'yntax' → logprob: -6.316300392150879
    9. 'range' → logprob: -6.566300392150879
    10. 'uff' → logprob: -6.566300392150879

Token 64: 'ête' (ID: 16808)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5015720129013062
    2. 'et' → logprob: -1.3765720129013062
    3. 'e' → logprob: -2.5015721321105957
    4. 'eit' → logprob: -3.7515721321105957
    5. 'eat' → logprob: -5.126572132110596
    6. 'tit' → logprob: -5.376572132110596
    7. 'ech' → logprob: -5.376572132110596
    8. 'etit' → logprob: -5.501572132110596
    9. 't' → logprob: -5.751572132110596
    10. 'ec' → logprob: -6.001572132110596

Token 65: ' avant' (ID: 13339)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.72563636302948
    2. ')' → logprob: -1.60063636302948
    3. 'au' → logprob: -1.85063636302948
    4. ' à' → logprob: -2.1006364822387695
    5. ' avant' → logprob: -4.1006364822387695
    6. 'à' → logprob: -4.7256364822387695
    7. 'avant' → logprob: -5.4756364822387695
    8. ' juste' → logprob: -6.4756364822387695
    9. '```' → logprob: -7.1006364822387695
    10. '),' → logprob: -7.9756364822387695

Token 66: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.5034871697425842
    2. ')' → logprob: -1.0034871101379395
    3. ' ' → logprob: -3.6284871101379395
    4. ' )' → logprob: -7.1284871101379395
    5. '):' → logprob: -7.8784871101379395
    6. '),' → logprob: -8.128487586975098
    7. ' la' → logprob: -8.503487586975098
    8. '```' → logprob: -8.878487586975098
    9. ',' → logprob: -9.003487586975098
    10. '<|end|>' → logprob: -9.128487586975098

Token 67: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.00017195509281009436
    2. ')' → logprob: -9.250171661376953
    3. ' ' → logprob: -9.625171661376953
    4. '22' → logprob: -12.500171661376953
    5. '```' → logprob: -13.000171661376953
    6. '),' → logprob: -14.125171661376953
    7. '20' → logprob: -14.250171661376953
    8. '  ' → logprob: -14.500171661376953
    9. '   ' → logprob: -14.625171661376953
    10. ' )' → logprob: -15.250171661376953

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009024077444337308
    2. '):' → logprob: -7.37590217590332
    3. '))' → logprob: -9.12590217590332
    4. ' )' → logprob: -9.75090217590332
    5. ')
' → logprob: -10.00090217590332
    6. ':' → logprob: -11.50090217590332
    7. '```' → logprob: -11.62590217590332
    8. ' ' → logprob: -11.75090217590332
    9. ',' → logprob: -11.87590217590332
    10. '),' → logprob: -12.37590217590332

Token 69: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19250984489917755
    2. 'n' → logprob: -2.192509889602661
    3. ' for' → logprob: -3.067509889602661
    4. ':' → logprob: -4.567509651184082
    5. '```' → logprob: -5.442509651184082
    6. '
' → logprob: -6.692509651184082
    7. ':
' → logprob: -7.692509651184082
    8. ' n' → logprob: -9.317509651184082
    9. '``' → logprob: -9.317509651184082
    10. ')' → logprob: -9.317509651184082

Token 70: ' i' (ID: 575)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006118032615631819
    2. ' i' → logprob: -5.506117820739746
    3. 'n' → logprob: -6.381117820739746
    4. ' ' → logprob: -8.006117820739746
    5. 'i' → logprob: -11.756117820739746
    6. ' in' → logprob: -14.256117820739746
    7. '	n' → logprob: -14.506117820739746
    8. '```' → logprob: -14.506117820739746
    9. ' ' → logprob: -14.881117820739746
    10. '  ' → logprob: -14.881117820739746

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005989351309835911
    2. 'in' → logprob: -5.1309895515441895
    3. ' ' → logprob: -10.005989074707031
    4. 'n' → logprob: -12.130989074707031
    5. '  ' → logprob: -13.255989074707031
    6. ' i' → logprob: -13.380989074707031
    7. '   ' → logprob: -13.630989074707031
    8. 's' → logprob: -14.443489074707031
    9. '```' → logprob: -14.443489074707031
    10. '	in' → logprob: -14.568489074707031

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012533433735370636
    2. 'range' → logprob: -4.387533664703369
    3. '20' → logprob: -11.262533187866211
    4. ' ' → logprob: -12.262533187866211
    5. '(range' → logprob: -13.012533187866211
    6. '	range' → logprob: -13.762533187866211
    7. '10' → logprob: -14.637533187866211
    8. '0' → logprob: -14.887533187866211
    9. '1' → logprob: -15.012533187866211
    10. '```' → logprob: -15.262533187866211

Token 73: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.125
    3. '21' → logprob: -16.875
    4. '(
' → logprob: -17.0
    5. '((' → logprob: -17.875
    6. '(i' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. ')(' → logprob: -18.375
    9. ')' → logprob: -20.125
    10. '(len' → logprob: -20.375

Token 74: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -11.12502670288086
    3. '0' → logprob: -11.87502670288086
    4. '2' → logprob: -13.37502670288086
    5. ')' → logprob: -13.37502670288086
    6. '20' → logprob: -14.37502670288086
    7. '(' → logprob: -14.62502670288086
    8. '1' → logprob: -15.50002670288086
    9. '22' → logprob: -15.87502670288086
    10. '```' → logprob: -17.00002670288086

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001279045594856143
    2. ':' → logprob: -6.876278877258301
    3. ')' → logprob: -8.6262788772583
    4. '):
' → logprob: -9.8762788772583
    5. ' ):' → logprob: -11.3762788772583
    6. '   ' → logprob: -13.8762788772583
    7. '+' → logprob: -14.5012788772583
    8. '():' → logprob: -15.2512788772583
    9. '>:' → logprob: -15.3762788772583
    10. ':)' → logprob: -15.5012788772583

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10907550156116486
    2. '   ' → logprob: -2.3590755462646484
    3. ' :' → logprob: -5.359075546264648
    4. ' if' → logprob: -6.359075546264648
    5. ':
' → logprob: -6.609075546264648
    6. ' ' → logprob: -7.484075546264648
    7. ' :
' → logprob: -8.984075546264648
    8. '  ' → logprob: -9.359075546264648
    9. '<|end|>' → logprob: -9.359075546264648
    10. 'if' → logprob: -9.609075546264648

Token 77: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13475869596004486
    2. 'if' → logprob: -2.384758710861206
    3. '   ' → logprob: -3.384758710861206
    4. ' ' → logprob: -10.134758949279785
    5. '    ' → logprob: -11.134758949279785
    6. '  ' → logprob: -11.759758949279785
    7. '   ' → logprob: -13.009758949279785
    8. '<|end|>' → logprob: -13.009758949279785
    9. '```' → logprob: -13.009758949279785
    10. ' ' → logprob: -13.384758949279785

Token 78: ' Calcul' (ID: 57243)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07099498063325882
    2. 'if' → logprob: -2.6959950923919678
    3. '   ' → logprob: -7.070994853973389
    4. '2' → logprob: -9.070995330810547
    5. ' ' → logprob: -9.820995330810547
    6. ' si' → logprob: -10.820995330810547
    7. '```' → logprob: -12.070995330810547
    8. ' ' → logprob: -12.820995330810547
    9. ' i' → logprob: -13.070995330810547
    10. '    ' → logprob: -13.695995330810547

Token 79: 'er' (ID: 259)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8253688812255859
    2. '   ' → logprob: -1.075368881225586
    3. ' if' → logprob: -2.450368881225586
    4. '    ' → logprob: -2.825368881225586
    5. ' ' → logprob: -3.325368881225586
    6. '2' → logprob: -3.825368881225586
    7. 'if' → logprob: -5.200368881225586
    8. 'de' → logprob: -5.575368881225586
    9. '  ' → logprob: -6.075368881225586
    10. ' of' → logprob: -7.200368881225586

Token 80: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25537607073783875
    2. '2' → logprob: -1.8803761005401611
    3. ' if' → logprob: -3.255376100540161
    4. '   ' → logprob: -3.630376100540161
    5. ' la' → logprob: -6.130375862121582
    6. '    ' → logprob: -6.380375862121582
    7. ' le' → logprob: -7.130375862121582
    8. 'if' → logprob: -7.130375862121582
    9. '  ' → logprob: -7.755375862121582
    10. ' (' → logprob: -7.755375862121582

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03001265972852707
    2. ' ' → logprob: -3.780012607574463
    3. '   ' → logprob: -5.655012607574463
    4. 'if' → logprob: -6.405012607574463
    5. ' if' → logprob: -6.780012607574463
    6. '  ' → logprob: -9.030013084411621
    7. ' le' → logprob: -9.780013084411621
    8. 'le' → logprob: -10.030013084411621
    9. 'pow' → logprob: -10.030013084411621
    10. '```' → logprob: -10.155013084411621

Token 82: ' expos' (ID: 10300)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04300444945693016
    2. ' **' → logprob: -3.1680045127868652
    3. '^' → logprob: -12.793004035949707
    4. '*' → logprob: -14.418004035949707
    5. ' ' → logprob: -14.918004035949707
    6. '**)' → logprob: -14.918004035949707
    7. ' ' → logprob: -15.043004035949707
    8. ' **)' → logprob: -15.293004035949707
    9. '```' → logprob: -15.293004035949707
    10. '   ' → logprob: -16.168004989624023

Token 83: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.033177733421325684
    2. '**' → logprob: -3.7831778526306152
    3. 'e' → logprob: -6.283177852630615
    4. 'enti' → logprob: -6.658177852630615
    5. 'nt' → logprob: -6.783177852630615
    6. 'n' → logprob: -6.783177852630615
    7. 'ponent' → logprob: -7.033177852630615
    8. 'i' → logprob: -7.283177852630615
    9. '   ' → logprob: -7.533177852630615
    10. 'ents' → logprob: -7.783177852630615

Token 84: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015136697329580784
    2. ' i' → logprob: -6.501513481140137
    3. '   ' → logprob: -12.876513481140137
    4. '```' → logprob: -13.001513481140137
    5. ' ' → logprob: -13.126513481140137
    6. '	i' → logprob: -13.251513481140137
    7. '  ' → logprob: -13.376513481140137
    8. '`' → logprob: -15.251513481140137
    9. ' ' → logprob: -15.626513481140137
    10. '_i' → logprob: -15.751513481140137

Token 85: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2141815423965454
    2. ' if' → logprob: -1.8391815423965454
    3. 'if' → logprob: -3.839181423187256
    4. ':' → logprob: -4.964181423187256
    5. '    ' → logprob: -6.214181423187256
    6. '2' → logprob: -7.214181423187256
    7. ' ' → logprob: -7.339181423187256
    8. '       ' → logprob: -7.714181423187256
    9. ' :' → logprob: -8.214181900024414
    10. '  ' → logprob: -8.214181900024414

Token 86: 'i' (ID: 72)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24756452441215515
    2. ')' → logprob: -1.9975645542144775
    3. ' ' → logprob: -2.8725645542144775
    4. '   ' → logprob: -3.8725645542144775
    5. ' )' → logprob: -5.747564315795898
    6. '):' → logprob: -6.872564315795898
    7. ')**' → logprob: -7.997564315795898
    8. '):
' → logprob: -8.122564315795898
    9. '    ' → logprob: -8.247564315795898
    10. '  ' → logprob: -8.622564315795898

Token 87: '.e' (ID: 2560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17329111695289612
    2. '**' → logprob: -1.9232910871505737
    3. '>' → logprob: -5.173291206359863
    4. ')**' → logprob: -5.798291206359863
    5. '**)' → logprob: -6.923291206359863
    6. ' **' → logprob: -6.923291206359863
    7. '2' → logprob: -7.548291206359863
    8. ')>' → logprob: -7.798291206359863
    9. ' )' → logprob: -8.923291206359863
    10. '   ' → logprob: -9.048291206359863

Token 88: '.,' (ID: 4213)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5403762459754944
    2. '**' → logprob: -1.1653761863708496
    3. ')' → logprob: -2.9153761863708496
    4. '**)' → logprob: -4.29037618637085
    5. 'n' → logprob: -4.91537618637085
    6. ' **)' → logprob: -5.29037618637085
    7. ' )' → logprob: -5.54037618637085
    8. '=' → logprob: -5.66537618637085
    9. ' i' → logprob: -5.91537618637085
    10. '2' → logprob: -6.41537618637085

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1605299711227417
    2. ' ' → logprob: -1.9105299711227417
    3. ')' → logprob: -8.785530090332031
    4. '   ' → logprob: -9.285530090332031
    5. '1' → logprob: -10.660530090332031
    6. '    ' → logprob: -11.785530090332031
    7. '```' → logprob: -11.785530090332031
    8. '`' → logprob: -12.285530090332031
    9. '  ' → logprob: -12.535530090332031
    10. ' )' → logprob: -12.785530090332031

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014406509581021965
    2. ' ' → logprob: -9.250144004821777
    3. ')' → logprob: -11.000144004821777
    4. '```' → logprob: -11.375144004821777
    5. 'pow' → logprob: -11.875144004821777
    6. '`' → logprob: -12.375144004821777
    7. '1' → logprob: -12.625144004821777
    8. '   ' → logprob: -13.250144004821777
    9. '**' → logprob: -13.875144004821777
    10. '`)' → logprob: -14.125144004821777

Token 91: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.030194386839866638
    2. ' **' → logprob: -3.5301942825317383
    3. '**)' → logprob: -8.155194282531738
    4. ')' → logprob: -9.280194282531738
    5. ' **)' → logprob: -10.530194282531738
    6. ')**' → logprob: -10.655194282531738
    7. ' ' → logprob: -12.280194282531738
    8. '^' → logprob: -12.780194282531738
    9. '**
' → logprob: -13.280194282531738
    10. '*' → logprob: -13.530194282531738

Token 92: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.868328920158092e-05
    2. ' i' → logprob: -10.625028610229492
    3. ')' → logprob: -12.375028610229492
    4. ')i' → logprob: -16.625028610229492
    5. ' ' → logprob: -17.625028610229492
    6. '```' → logprob: -18.000028610229492
    7. '   ' → logprob: -18.250028610229492
    8. '  ' → logprob: -18.750028610229492
    9. '	i' → logprob: -19.000028610229492
    10. '*i' → logprob: -19.375028610229492

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013703149743378162
    2. ' )' → logprob: -4.763703346252441
    3. '   ' → logprob: -5.388703346252441
    4. ')
' → logprob: -8.388703346252441
    5. '>' → logprob: -10.013703346252441
    6. '):' → logprob: -10.138703346252441
    7. ')>' → logprob: -10.263703346252441
    8. ' >' → logprob: -10.888703346252441
    9. 'if' → logprob: -10.888703346252441
    10. ' ' → logprob: -11.138703346252441

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004319860599935055
    2. ' if' → logprob: -5.879319667816162
    3. 'if' → logprob: -6.754319667816162
    4. ':' → logprob: -8.37932014465332
    5. '  ' → logprob: -9.75432014465332
    6. '    ' → logprob: -11.00432014465332
    7. ' ' → logprob: -11.25432014465332
    8. '    
' → logprob: -11.87932014465332
    9. '   ' → logprob: -12.37932014465332
    10. ')' → logprob: -12.50432014465332

Token 95: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6439334750175476
    2. 'if' (adapté à ' if') → logprob: -1.2689335346221924
    3. '   ' → logprob: -1.6439335346221924
    4. ' ' → logprob: -8.643933296203613
    5. '    ' → logprob: -9.768933296203613
    6. '  ' → logprob: -10.143933296203613
    7. '2' → logprob: -10.518933296203613
    8. '   ' → logprob: -10.518933296203613
    9. '    
' → logprob: -11.018933296203613
    10. ')' → logprob: -11.143933296203613

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02125706523656845
    2. '2' → logprob: -3.896257162094116
    3. ' (' → logprob: -7.271256923675537
    4. '(' → logprob: -11.396257400512695
    5. ' ' → logprob: -12.271257400512695
    6. '   ' → logprob: -13.021257400512695
    7. '  ' → logprob: -14.646257400512695
    8. 'pow' → logprob: -14.771257400512695
    9. ' pow' → logprob: -15.021257400512695
    10. '    ' → logprob: -15.396257400512695

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020573579240590334
    2. ' ' → logprob: -6.6270575523376465
    3. '(' → logprob: -7.3770575523376465
    4. '   ' → logprob: -9.627057075500488
    5. ' (' → logprob: -10.252057075500488
    6. 'pow' → logprob: -13.127057075500488
    7. '  ' → logprob: -13.627057075500488
    8. '    ' → logprob: -14.877057075500488
    9. '1' → logprob: -15.377057075500488
    10. '(pow' → logprob: -15.502057075500488

Token 98: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002010837197303772
    2. ' **' → logprob: -6.627010822296143
    3. '^' → logprob: -7.377010822296143
    4. '[i' → logprob: -10.0020112991333
    5. '>' → logprob: -12.2520112991333
    6. ' ' → logprob: -12.8770112991333
    7. '```' → logprob: -13.6270112991333
    8. '*i' → logprob: -13.8770112991333
    9. '   ' → logprob: -13.8770112991333
    10. '[' → logprob: -14.1270112991333

Token 99: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007105246186256409
    2. ' i' → logprob: -7.250710487365723
    3. ' ' → logprob: -14.625710487365723
    4. '   ' → logprob: -16.37571144104004
    5. '	i' → logprob: -17.75071144104004
    6. '  ' → logprob: -18.75071144104004
    7. '```' → logprob: -19.37571144104004
    8. '<|end|>' → logprob: -19.37571144104004
    9. '>' → logprob: -20.37571144104004
    10. ')' → logprob: -20.37571144104004

Token 100: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6326545476913452
    2. ' >' → logprob: -0.7576545476913452
    3. '">' → logprob: -10.882654190063477
    4. ' ' → logprob: -11.257654190063477
    5. ')' → logprob: -12.007654190063477
    6. '   ' → logprob: -12.007654190063477
    7. ')>' → logprob: -13.132654190063477
    8. '<|end|>' → logprob: -13.507654190063477
    9. '()>' → logprob: -13.882654190063477
    10. ' ' → logprob: -14.132654190063477

Token 101: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.012521898373961449
    2. 'l' → logprob: -4.387521743774414
    3. ' ' → logprob: -11.512521743774414
    4. ' ' → logprob: -13.387521743774414
    5. '	l' → logprob: -14.637521743774414
    6. ')' → logprob: -16.012521743774414
    7. '"' → logprob: -16.762521743774414
    8. '  ' → logprob: -17.012521743774414
    9. '   ' → logprob: -17.012521743774414
    10. ''' → logprob: -17.262521743774414

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014597235713154078
    2. ':
' → logprob: -9.00014591217041
    3. ' :' → logprob: -11.00014591217041
    4. '):' → logprob: -12.62514591217041
    5. ':return' → logprob: -13.50014591217041
    6. '   ' → logprob: -14.12514591217041
    7. ':**' → logprob: -16.250146865844727
    8. '):
' → logprob: -16.750146865844727
    9. ' :
' → logprob: -17.375146865844727
    10. ')' → logprob: -17.625146865844727

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006715670460835099
    2. ':' → logprob: -7.87567138671875
    3. '   ' → logprob: -8.50067138671875
    4. '
' → logprob: -10.50067138671875
    5. '<|end|>' → logprob: -11.12567138671875
    6. 'print' → logprob: -11.25067138671875
    7. 'n' → logprob: -11.87567138671875
    8. '        
' → logprob: -12.12567138671875
    9. ' print' → logprob: -12.62567138671875
    10. ':
' → logprob: -12.62567138671875

Token 104: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022592904046177864
    2. 'print' → logprob: -4.272593021392822
    3. ' print' → logprob: -4.897593021392822
    4. 'n' → logprob: -7.272593021392822
    5. '   ' → logprob: -9.772592544555664
    6. ' n' → logprob: -9.897592544555664
    7. ' break' → logprob: -10.147592544555664
    8. '
' → logprob: -10.272592544555664
    9. 'break' → logprob: -11.022592544555664
    10. '        
' → logprob: -11.522592544555664

Token 105: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4782136380672455
    2. ' print' → logprob: -0.9782136678695679
    3. '       ' → logprob: -5.728213787078857
    4. '   ' → logprob: -7.103213787078857
    5. ' break' → logprob: -10.8532133102417
    6. 'break' → logprob: -10.9782133102417
    7. '    ' → logprob: -12.2282133102417
    8. '```' → logprob: -12.7282133102417
    9. '	print' → logprob: -13.1032133102417
    10. ' ' → logprob: -13.3532133102417

Token 106: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3254221677780151
    2. 'print' → logprob: -1.3254221677780151
    3. ' i' → logprob: -1.4504221677780151
    4. ' print' → logprob: -1.7004221677780151
    5. '        ' → logprob: -4.075422286987305
    6. 'i' → logprob: -4.325422286987305
    7. '   ' → logprob: -4.825422286987305
    8. 'n' → logprob: -5.950422286987305
    9. ' n' → logprob: -5.950422286987305
    10. '    ' → logprob: -6.075422286987305

Token 107: '2' (ID: 17)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.11310850828886032
    2. '2' → logprob: -3.1131083965301514
    3. ' True' → logprob: -3.2381083965301514
    4. 'i' → logprob: -4.1131086349487305
    5. 'true' → logprob: -5.8631086349487305
    6. 'l' → logprob: -5.9881086349487305
    7. '   ' → logprob: -7.9881086349487305
    8. '(True' → logprob: -8.11310863494873
    9. ' i' → logprob: -8.36310863494873
    10. ' ' → logprob: -8.48810863494873

Token 108: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.2606807053089142
    2. '**' → logprob: -1.6356806755065918
    3. ' ==' → logprob: -4.385680675506592
    4. '^' → logprob: -5.635680675506592
    5. '   ' → logprob: -5.760680675506592
    6. '.' → logprob: -5.760680675506592
    7. ' ' → logprob: -6.135680675506592
    8. ' >' → logprob: -6.260680675506592
    9. ':' → logprob: -6.510680675506592
    10. '==' → logprob: -6.885680675506592

Token 109: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07692327350378036
    2. ' i' → logprob: -2.701923370361328
    3. ' ' → logprob: -5.826923370361328
    4. '   ' → logprob: -6.451923370361328
    5. ' >' → logprob: -7.076923370361328
    6. '>' → logprob: -7.201923370361328
    7. '  ' → logprob: -7.826923370361328
    8. 'n' → logprob: -9.201923370361328
    9. '<|end|>' → logprob: -9.826923370361328
    10. '    ' → logprob: -9.951923370361328

Token 110: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43268799781799316
    2. ' >' → logprob: -1.6826879978179932
    3. '>' → logprob: -2.682687997817993
    4. ' ==' → logprob: -2.932687997817993
    5. '==' → logprob: -3.932687997817993
    6. '   ' → logprob: -5.432687759399414
    7. '       ' → logprob: -5.557687759399414
    8. '=' → logprob: -5.932687759399414
    9. ' >=' → logprob: -5.932687759399414
    10. ' :' → logprob: -6.307687759399414

Token 111: ' strict' (ID: 12035)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.4428994953632355
    2. 'strict' → logprob: -1.817899465560913
    3. ' >' → logprob: -3.192899465560913
    4. '   ' → logprob: -3.442899465560913
    5. '>' → logprob: -3.692899465560913
    6. ' strict' → logprob: -3.942899465560913
    7. ' strictly' → logprob: -4.192899703979492
    8. ' sup' → logprob: -4.192899703979492
    9. ' greater' → logprob: -4.817899703979492
    10. 'sup' → logprob: -4.817899703979492

Token 112: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -9.400689305039123e-05
    2. 'lement' → logprob: -10.000094413757324
    3. '>' → logprob: -10.875094413757324
    4. 'ly' → logprob: -11.625094413757324
    5. 'ment' → logprob: -12.375094413757324
    6. 'e' → logprob: -12.375094413757324
    7. 'ément' → logprob: -13.000094413757324
    8. '   ' → logprob: -13.375094413757324
    9. 'ements' → logprob: -13.375094413757324
    10. 'emment' → logprob: -13.500094413757324

Token 113: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.17718027532100677
    2. 'sup' → logprob: -2.052180290222168
    3. '>' → logprob: -3.927180290222168
    4. 'plus' → logprob: -5.302180290222168
    5. 'super' → logprob: -5.552180290222168
    6. 'greater' → logprob: -6.052180290222168
    7. ' sup' → logprob: -6.552180290222168
    8. ' plus' → logprob: -7.302180290222168
    9. ' >' → logprob: -8.427180290222168
    10. ' greater' → logprob: -8.427180290222168

Token 114: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03498741239309311
    2. '       ' → logprob: -3.909987449645996
    3. ' :' → logprob: -4.659987449645996
    4. ',' → logprob: -5.534987449645996
    5. ' à' → logprob: -8.034987449645996
    6. '           ' → logprob: -8.534987449645996
    7. ':
' → logprob: -8.784987449645996
    8. ' to' → logprob: -9.409987449645996
    9. '   ' → logprob: -9.659987449645996
    10. ' ,' → logprob: -11.284987449645996

Token 115: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47408169507980347
    2. 'l' → logprob: -0.9740816950798035
    3. ' ' → logprob: -12.849081993103027
    4. '	l' → logprob: -13.599081993103027
    5. ' ' → logprob: -14.599081993103027
    6. '   ' → logprob: -16.59908103942871
    7. ' la' → logprob: -16.72408103942871
    8. '_l' → logprob: -16.72408103942871
    9. '```' → logprob: -16.97408103942871
    10. ' л' → logprob: -17.59908103942871

Token 116: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0461433120071888
    2. ':
' → logprob: -3.5461432933807373
    3. '       ' → logprob: -4.171143531799316
    4. 'print' → logprob: -8.421143531799316
    5. '
' → logprob: -8.671143531799316
    6. ' :' → logprob: -8.796143531799316
    7. '           ' → logprob: -9.171143531799316
    8. ' :
' → logprob: -10.171143531799316
    9. '):
' → logprob: -10.421143531799316
    10. ' print' → logprob: -10.671143531799316

Token 117: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013112573884427547
    2. 'print' → logprob: -4.763112545013428
    3. ' print' → logprob: -5.763112545013428
    4. '
' → logprob: -8.013113021850586
    5. ':' → logprob: -8.263113021850586
    6. '           ' → logprob: -8.263113021850586
    7. ':
' → logprob: -8.763113021850586
    8. 'n' → logprob: -9.138113021850586
    9. '        
' → logprob: -9.263113021850586
    10. ' break' → logprob: -10.888113021850586

Token 118: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6747751235961914
    2. 'print' → logprob: -1.5497751235961914
    3. ' print' → logprob: -1.5497751235961914
    4. '   ' → logprob: -2.9247751235961914
    5. ' break' → logprob: -6.174775123596191
    6. ' continue' → logprob: -6.299775123596191
    7. ' affiche' → logprob: -6.299775123596191
    8. 'break' → logprob: -6.424775123596191
    9. 'continue' → logprob: -6.924775123596191
    10. '    ' → logprob: -7.799775123596191

Token 119: ' trouvé' (ID: 60081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7164118885993958
    2. ' print' → logprob: -1.716411828994751
    3. 'n' → logprob: -2.216411828994751
    4. '   ' → logprob: -2.466411828994751
    5. 'print' → logprob: -2.466411828994751
    6. ' n' → logprob: -4.34141206741333
    7. ' trouvé' → logprob: -4.71641206741333
    8. '        
' → logprob: -5.21641206741333
    9. '    
' → logprob: -5.46641206741333
    10. ' found' → logprob: -5.71641206741333

Token 120: ' notre' (ID: 12092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3417024612426758
    2. ' i' → logprob: -1.4667024612426758
    3. 'i' → logprob: -3.091702461242676
    4. ':' → logprob: -5.466702461242676
    5. 'n' → logprob: -5.591702461242676
    6. ' :' → logprob: -6.341702461242676
    7. '           ' → logprob: -6.716702461242676
    8. '   ' → logprob: -6.716702461242676
    9. ' n' → logprob: -7.591702461242676
    10. ' ' → logprob: -8.841702461242676

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45465341210365295
    2. ':' → logprob: -1.8296533823013306
    3. ' n' → logprob: -2.07965350151062
    4. ' ' → logprob: -3.07965350151062
    5. '   ' → logprob: -4.454653263092041
    6. 'i' → logprob: -5.079653263092041
    7. ' i' → logprob: -6.079653263092041
    8. ' :' → logprob: -6.079653263092041
    9. '    
' → logprob: -6.204653263092041
    10. '
' → logprob: -6.454653263092041

Token 122: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4153793156147003
    2. ':' → logprob: -1.790379285812378
    3. '
' → logprob: -2.165379285812378
    4. ':
' → logprob: -2.915379285812378
    5. ' :
' → logprob: -6.790379524230957
    6. ' :' → logprob: -7.165379524230957
    7. '   ' → logprob: -7.290379524230957
    8. '        
' → logprob: -7.915379524230957
    9. 'n' → logprob: -8.165379524230957
    10. '):
' → logprob: -8.165379524230957

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15804484486579895
    2. ':' → logprob: -2.2830448150634766
    3. '
' → logprob: -3.5330448150634766
    4. ':
' → logprob: -4.283044815063477
    5. '   ' → logprob: -8.408044815063477
    6. 'n' → logprob: -8.658044815063477
    7. '        
' → logprob: -8.783044815063477
    8. ' :' → logprob: -8.783044815063477
    9. ' :
' → logprob: -8.908044815063477
    10. '):
' → logprob: -9.283044815063477

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011534435179783031
    2. 'print' → logprob: -9.750115394592285
    3. '
' → logprob: -11.000115394592285
    4. ':' → logprob: -11.500115394592285
    5. ' print' → logprob: -11.625115394592285
    6. '        
' → logprob: -11.625115394592285
    7. ':
' → logprob: -12.750115394592285
    8. '           ' → logprob: -12.875115394592285
    9. 'n' → logprob: -12.875115394592285
    10. '```' → logprob: -13.500115394592285

Token 125: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09063991159200668
    2. 'print' → logprob: -3.09063982963562
    3. ' print' → logprob: -3.21563982963562
    4. '   ' → logprob: -7.465640068054199
    5. 'n' (adapté à ' n') → logprob: -7.965640068054199
    6. ' n' → logprob: -10.0906400680542
    7. '
' → logprob: -10.3406400680542
    8. ' break' → logprob: -11.0906400680542
    9. 'break' → logprob: -11.5906400680542
    10. '```' → logprob: -11.5906400680542

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268352091312408
    2. '=' → logprob: -2.017683506011963
    3. ' =
' → logprob: -12.142683982849121
    4. ' ' → logprob: -13.892683982849121
    5. 's' → logprob: -14.392683982849121
    6. '=
' → logprob: -15.392683982849121
    7. ',' → logprob: -15.767683982849121
    8. '.' → logprob: -15.892683982849121
    9. ')' → logprob: -15.892683982849121
    10. ' ' → logprob: -16.017683029174805

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25192928314208984
    2. ' i' → logprob: -1.5019292831420898
    3. '	i' → logprob: -15.50192928314209
    4. '   ' → logprob: -18.376930236816406
    5. ' ' → logprob: -19.501930236816406
    6. '=i' → logprob: -19.751930236816406
    7. ' ' → logprob: -19.876930236816406
    8. '_i' → logprob: -20.251930236816406
    9. ',i' → logprob: -20.501930236816406
    10. ')i' → logprob: -20.626930236816406

Token 128: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003743548411875963
    2. '
' → logprob: -5.628743648529053
    3. '   ' → logprob: -9.378743171691895
    4. '        
' → logprob: -10.253743171691895
    5. '<|end|>' → logprob: -12.128743171691895
    6. '
' → logprob: -12.378743171691895
    7. '    
' → logprob: -12.628743171691895
    8. '  
' → logprob: -13.378743171691895
    9. 'n' → logprob: -13.753743171691895
    10. ',' → logprob: -13.878743171691895

Token 129: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05268516391515732
    2. '
' → logprob: -3.052685260772705
    3. '   ' → logprob: -5.802685260772705
    4. 'break' → logprob: -7.927685260772705
    5. '        
' → logprob: -8.177684783935547
    6. '    
' → logprob: -8.302684783935547
    7. '
' → logprob: -9.677684783935547
    8. ' break' → logprob: -10.177684783935547
    9. '  
' → logprob: -10.677684783935547
    10. '<|end|>' → logprob: -11.302684783935547

Token 130: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031580932438373566
    2. 'break' → logprob: -3.531580924987793
    3. '
' → logprob: -7.156580924987793
    4. '   ' → logprob: -7.281580924987793
    5. ' break' → logprob: -8.156580924987793
    6. '        
' → logprob: -10.406580924987793
    7. '
' → logprob: -10.906580924987793
    8. '	break' → logprob: -11.531580924987793
    9. '    
' → logprob: -12.406580924987793
    10. '```' → logprob: -12.781580924987793

Token 131: ' sauveg' (ID: 133494)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.08184285461902618
    2. ' break' → logprob: -3.2068428993225098
    3. '       ' → logprob: -3.5818428993225098
    4. '   ' → logprob: -4.83184289932251
    5. '    ' → logprob: -7.08184289932251
    6. ' ' → logprob: -8.581842422485352
    7. '  ' → logprob: -8.706842422485352
    8. '        ' → logprob: -9.081842422485352
    9. 'continue' → logprob: -9.081842422485352
    10. '      ' → logprob: -9.456842422485352

Token 132: 'arde' (ID: 11236)
  Prédit: 'arde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arde' → logprob: -0.003196727717295289
    2. 'arder' → logprob: -7.503196716308594
    3. 'r' → logprob: -8.128196716308594
    4. '#' → logprob: -8.128196716308594
    5. '   ' → logprob: -8.878196716308594
    6. 'ard' → logprob: -9.003196716308594
    7. '[' → logprob: -9.440696716308594
    8. '       ' → logprob: -9.503196716308594
    9. '\' → logprob: -9.565696716308594
    10. '_' → logprob: -9.628196716308594

Token 133: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0759077072143555
    2. '
' → logprob: -1.2009077072143555
    3. '       ' → logprob: -2.2009077072143555
    4. ' n' → logprob: -3.0759077072143555
    5. 'le' → logprob: -3.3259077072143555
    6. '        
' → logprob: -3.4509077072143555
    7. ' 
' → logprob: -3.7009077072143555
    8. ' ' → logprob: -4.2009077072143555
    9. '    
' → logprob: -4.3259077072143555
    10. ' la' → logprob: -4.3259077072143555

Token 134: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00232426798902452
    2. ' valeur' → logprob: -6.502324104309082
    3. 'plus' → logprob: -8.002324104309082
    4. 'n' → logprob: -8.252324104309082
    5. 'vale' → logprob: -10.377324104309082
    6. 'value' → logprob: -10.502324104309082
    7. '   ' → logprob: -10.752324104309082
    8. 'ré' → logprob: -10.877324104309082
    9. 'va' → logprob: -11.002324104309082
    10. 'Vale' → logprob: -11.127324104309082

Token 135: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027158339507877827
    2. '<|end|>' → logprob: -6.127716064453125
    3. '
' → logprob: -8.252716064453125
    4. '        
' → logprob: -9.002716064453125
    5. '<|end|>' → logprob: -10.127716064453125
    6. '   ' → logprob: -10.252716064453125
    7. ' et' → logprob: -11.502716064453125
    8. ' and' → logprob: -11.877716064453125
    9. '        ' → logprob: -12.377716064453125
    10. ' ' → logprob: -12.502716064453125

Token 136: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1247011199593544
    2. 'i' → logprob: -2.6247010231018066
    3. ' n' → logprob: -3.2497010231018066
    4. ' i' → logprob: -5.124701023101807
    5. ' ' → logprob: -10.874701499938965
    6. 'l' → logprob: -10.999701499938965
    7. '	n' → logprob: -12.874701499938965
    8. '```' → logprob: -13.624701499938965
    9. ' l' → logprob: -13.999701499938965
    10. '  ' → logprob: -14.624701499938965

Token 137: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013629741733893752
    2. '
' → logprob: -6.7513628005981445
    3. '<|end|>' → logprob: -9.126362800598145
    4. '        
' → logprob: -10.001362800598145
    5. '   ' → logprob: -11.126362800598145
    6. '
' → logprob: -12.126362800598145
    7. '<|end|>' → logprob: -12.626362800598145
    8. 'break' → logprob: -13.251362800598145
    9. ',' → logprob: -13.751362800598145
    10. '  
' → logprob: -13.876362800598145

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.035031262785196304
    2. ' n' → logprob: -3.410031318664551
    3. ' la' → logprob: -7.035031318664551
    4. 'la' → logprob: -7.785031318664551
    5. ' ' → logprob: -9.91003131866455
    6. '`' → logprob: -10.78503131866455
    7. 'une' → logprob: -12.03503131866455
    8. '```' → logprob: -12.91003131866455
    9. '  ' → logprob: -13.16003131866455
    10. 'variable' → logprob: -13.66003131866455

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010671088239178061
    2. '
' → logprob: -7.001067161560059
    3. '        
' → logprob: -9.626067161560059
    4. '<|end|>' → logprob: -9.626067161560059
    5. '   ' → logprob: -11.376067161560059
    6. '
' → logprob: -12.751067161560059
    7. '<|end|>' → logprob: -13.251067161560059
    8. '    
' → logprob: -13.876067161560059
    9. '  
' → logprob: -14.001067161560059
    10. 'n' → logprob: -14.251067161560059

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.3596853831550106e-05
    2. '
' → logprob: -10.250053405761719
    3. '        
' → logprob: -11.625053405761719
    4. 'break' → logprob: -12.375053405761719
    5. '   ' → logprob: -12.625053405761719
    6. '```' → logprob: -15.125053405761719
    7. ' break' → logprob: -15.250053405761719
    8. '<|end|>' → logprob: -15.375053405761719
    9. '    
' → logprob: -15.500053405761719
    10. '	' → logprob: -16.12505340576172

Token 141: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003556039300747216
    2. 'break' (adapté à ' break') → logprob: -8.00035572052002
    3. ' break' → logprob: -11.12535572052002
    4. '   ' → logprob: -12.75035572052002
    5. '        
' → logprob: -13.37535572052002
    6. '	break' → logprob: -15.12535572052002
    7. '      ' → logprob: -15.62535572052002
    8. '```' → logprob: -15.75035572052002
    9. '
' → logprob: -16.125354766845703
    10. '

' → logprob: -17.250354766845703

Token 142: '    ' (ID: 257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07047250866889954
    2. '<|end|>' → logprob: -3.320472478866577
    3. 'n' → logprob: -4.070472717285156
    4. '
' → logprob: -4.945472717285156
    5. '#' → logprob: -5.195472717285156
    6. ')' → logprob: -7.070472717285156
    7. '#print' → logprob: -8.070472717285156
    8. '\n' → logprob: -8.570472717285156
    9. '```' → logprob: -8.695472717285156
    10. ' ' → logprob: -8.820472717285156

Token 143: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47131964564323425
    2. '
' → logprob: -1.5963196754455566
    3. '<|end|>' → logprob: -1.9713196754455566
    4. '#' (adapté à ' #') → logprob: -4.096319675445557
    5. 'n' → logprob: -5.096319675445557
    6. ')' → logprob: -5.721319675445557
    7. '\n' → logprob: -6.221319675445557
    8. '```' → logprob: -6.846319675445557
    9. 'else' → logprob: -6.971319675445557
    10. ' ' → logprob: -7.221319675445557

Token 144: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6383805871009827
    2. 'stop' → logprob: -2.138380527496338
    3. 'sort' → logprob: -2.138380527496338
    4. '<|end|>' → logprob: -2.388380527496338
    5. ' sortir' → logprob: -3.388380527496338
    6. ' ' → logprob: -3.763380527496338
    7. 'exit' → logprob: -4.013380527496338
    8. '```' → logprob: -4.888380527496338
    9. '  ' → logprob: -5.013380527496338
    10. 'print' → logprob: -5.013380527496338

Token 145: ' sort' (ID: 4506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9477829933166504
    2. ' stop' → logprob: -1.8227829933166504
    3. ' continue' → logprob: -2.0727829933166504
    4. ' quitte' → logprob: -2.1977829933166504
    5. '   ' → logprob: -2.6977829933166504
    6. 'stop' → logprob: -3.0727829933166504
    7. 'continue' → logprob: -3.4477829933166504
    8. ' ' → logprob: -4.57278299331665
    9. ' sort' → logprob: -4.94778299331665
    10. 'arr' → logprob: -5.32278299331665

Token 146: ' immédiatement' (ID: 100743)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7039492726325989
    2. 'la' → logprob: -0.7039492726325989
    3. 'the' → logprob: -5.328949451446533
    4. ' the' → logprob: -5.453949451446533
    5. 'for' → logprob: -6.828949451446533
    6. ' loop' → logprob: -9.078948974609375
    7. 'loop' → logprob: -9.203948974609375
    8. 'range' → logprob: -9.203948974609375
    9. 'le' → logprob: -9.703948974609375
    10. ' boucle' → logprob: -9.828948974609375

Token 149: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9339757561683655
    2. ' boucle' → logprob: -1.0589756965637207
    3. 'bou' → logprob: -1.5589756965637207
    4. 'loop' → logprob: -3.0589756965637207
    5. ' loop' → logprob: -6.683975696563721
    6. ' for' → logprob: -6.683975696563721
    7. ' bou' → logprob: -8.183976173400879
    8. 'b' → logprob: -9.683976173400879
    9. ' ' → logprob: -11.058976173400879
    10. '```' → logprob: -11.183976173400879

Token 150: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034735627472400665
    2. '<|end|>' → logprob: -4.409735679626465
    3. '
' → logprob: -4.534735679626465
    4. 'n' → logprob: -4.909735679626465
    5. '#' → logprob: -5.909735679626465
    6. ' print' → logprob: -8.534735679626465
    7. ')' → logprob: -8.534735679626465
    8. '```' → logprob: -8.909735679626465
    9. '\n' → logprob: -9.034735679626465
    10. '#print' → logprob: -9.034735679626465

Token 151: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2248971462249756
    2. 'la' → logprob: -1.3498971462249756
    3. ' on' → logprob: -1.9748971462249756
    4. 'on' → logprob: -2.0998971462249756
    5. 'n' → logprob: -2.8498971462249756
    6. 'le' → logprob: -3.3498971462249756
    7. 'nous' → logprob: -3.5998971462249756
    8. ' le' → logprob: -3.7248971462249756
    9. ' nous' → logprob: -4.224897384643555
    10. ' n' → logprob: -4.849897384643555

Token 152: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.31551527976989746
    2. ' condition' → logprob: -1.4405152797698975
    3. 'plus' → logprob: -4.315515518188477
    4. ' plus' → logprob: -5.315515518188477
    5. 'solution' → logprob: -5.440515518188477
    6. 'cond' → logprob: -5.565515518188477
    7. ' recherche' → logprob: -6.190515518188477
    8. ' solution' → logprob: -6.315515518188477
    9. 'n' → logprob: -6.815515518188477
    10. 're' → logprob: -7.315515518188477

Token 153: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5958361625671387
    2. ' est' → logprob: -0.9708361625671387
    3. 's' → logprob: -2.8458361625671387
    4. 'a' → logprob: -4.845836162567139
    5. ' ' → logprob: -6.470836162567139
    6. ' a' → logprob: -6.845836162567139
    7. 'n' → logprob: -7.470836162567139
    8. ' satisfait' → logprob: -7.970836162567139
    9. ' is' → logprob: -8.470836639404297
    10. '#' → logprob: -9.095836639404297

Token 154: ' satis' (ID: 56317)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01287923939526081
    2. 'v' → logprob: -5.137879371643066
    3. ' rempl' → logprob: -5.512879371643066
    4. ' satis' → logprob: -6.887879371643066
    5. 'rem' → logprob: -7.887879371643066
    6. 'ré' → logprob: -8.012879371643066
    7. ' vér' → logprob: -8.387879371643066
    8. 'ac' → logprob: -9.012879371643066
    9. 'respect' → logprob: -9.012879371643066
    10. 'atte' → logprob: -9.887879371643066

Token 155: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.0004348413785919547
    2. 'f' → logprob: -8.500434875488281
    3. 'fa' → logprob: -8.750434875488281
    4. 'fait' → logprob: -10.625434875488281
    5. 'ite' → logprob: -10.875434875488281
    6. 'a' → logprob: -11.500434875488281
    7. 'ait' → logprob: -11.625434875488281
    8. 'faire' → logprob: -12.375434875488281
    9. 'e' → logprob: -13.250434875488281
    10. 'fi' → logprob: -14.125434875488281

Token 156: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002733666682615876
    2. 'n' → logprob: -6.7527337074279785
    3. '<|end|>' → logprob: -7.1277337074279785
    4. '#' → logprob: -8.00273323059082
    5. ' print' → logprob: -9.00273323059082
    6. '
' → logprob: -9.12773323059082
    7. '#print' → logprob: -9.87773323059082
    8. '```' → logprob: -10.12773323059082
    9. ')' → logprob: -10.87773323059082
    10. '        
' → logprob: -11.12773323059082

Token 157: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8444881536415778e-05
    2. '#' → logprob: -11.625028610229492
    3. 'n' → logprob: -11.875028610229492
    4. 'else' → logprob: -12.125028610229492
    5. ' print' → logprob: -12.125028610229492
    6. '#print' → logprob: -13.750028610229492
    7. '```' → logprob: -14.750028610229492
    8. '   ' → logprob: -17.000028610229492
    9. 'for' → logprob: -17.750028610229492
    10. 'pr' → logprob: -18.125028610229492

Token 158: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000513952283654362
    2. ' print' → logprob: -8.250514030456543
    3. '#' → logprob: -8.500514030456543
    4. '#print' → logprob: -11.375514030456543
    5. 'Afficher' → logprob: -11.625514030456543
    6. 'aff' → logprob: -11.750514030456543
    7. 'Aff' → logprob: -12.125514030456543
    8. 'n' → logprob: -12.250514030456543
    9. 'Print' → logprob: -12.250514030456543
    10. 'if' → logprob: -12.750514030456543

Token 159: ' calc' (ID: 25691)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013195761479437351
    2. ' print' → logprob: -4.388195991516113
    3. ' imprime' → logprob: -8.638195991516113
    4. '#' → logprob: -8.763195991516113
    5. ' affiche' → logprob: -9.013195991516113
    6. 'aff' → logprob: -9.513195991516113
    7. 'p' → logprob: -10.763195991516113
    8. 'n' → logprob: -11.013195991516113
    9. 'pr' → logprob: -11.013195991516113
    10. 'im' → logprob: -11.638195991516113

Token 160: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0063616083934903145
    2. 'ul' → logprob: -5.131361484527588
    3. 'cule' → logprob: -8.506361961364746
    4. '#' → logprob: -9.506361961364746
    5. 'e' → logprob: -9.756361961364746
    6. 'ulé' → logprob: -10.756361961364746
    7. 'u' → logprob: -11.006361961364746
    8. 'le' → logprob: -11.256361961364746
    9. 'uler' → logprob: -11.506361961364746
    10. 'ue' → logprob: -11.631361961364746

Token 161: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17152680456638336
    2. ' ' → logprob: -2.5465269088745117
    3. ' la' → logprob: -3.7965269088745117
    4. 'le' → logprob: -4.171526908874512
    5. ' le' → logprob: -4.171526908874512
    6. 'result' → logprob: -4.921526908874512
    7. 'et' → logprob: -5.296526908874512
    8. 'la' → logprob: -5.546526908874512
    9. 'print' → logprob: -5.921526908874512
    10. ' et' → logprob: -6.296526908874512

Token 162: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3079877495765686
    2. 'pu' → logprob: -1.8079876899719238
    3. '2' → logprob: -3.432987689971924
    4. 's' → logprob: -4.057987689971924
    5. ' valeur' → logprob: -4.307987689971924
    6. 'diff' → logprob: -4.557987689971924
    7. ' puissance' → logprob: -5.182987689971924
    8. 'result' → logprob: -5.807987689971924
    9. 'value' → logprob: -5.807987689971924
    10. 'v' → logprob: -5.932987689971924

Token 163: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4761911928653717
    2. ' de' → logprob: -1.3511911630630493
    3. '2' → logprob: -2.351191282272339
    4. 'n' → logprob: -5.35119104385376
    5. 'result' → logprob: -5.35119104385376
    6. 'print' → logprob: -5.47619104385376
    7. ' ' → logprob: -5.60119104385376
    8. 'du' → logprob: -6.72619104385376
    9. ' suivante' → logprob: -6.85119104385376
    10. 'final' → logprob: -7.60119104385376

Token 164: ' m' (ID: 284)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021787580102682114
    2. ' ' → logprob: -3.896787643432617
    3. 'n' → logprob: -6.896787643432617
    4. ' n' → logprob: -9.021787643432617
    5. 'pow' → logprob: -9.896787643432617
    6. 'print' → logprob: -10.521787643432617
    7. '1' → logprob: -11.896787643432617
    8. '  ' → logprob: -12.021787643432617
    9. '```' → logprob: -12.396787643432617
    10. '(' → logprob: -12.521787643432617

Token 165: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05107342451810837
    2. '=' → logprob: -3.0510733127593994
    3. 'm' → logprob: -6.0510735511779785
    4. ' m' → logprob: -9.55107307434082
    5. 'n' → logprob: -10.17607307434082
    6. '=m' → logprob: -11.92607307434082
    7. 's' → logprob: -12.30107307434082
    8. ',' → logprob: -13.05107307434082
    9. ' ' → logprob: -13.80107307434082
    10. '_m' → logprob: -14.05107307434082

Token 166: ' qui' (ID: 2780)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29794254899024963
    2. ' ' → logprob: -1.5479425191879272
    3. 'n' → logprob: -4.047942638397217
    4. ' n' → logprob: -4.422942638397217
    5. 'm' → logprob: -4.672942638397217
    6. ' m' → logprob: -6.172942638397217
    7. 'l' → logprob: -6.172942638397217
    8. ' l' → logprob: -7.297942638397217
    9. '   ' → logprob: -8.297942161560059
    10. '  ' → logprob: -8.422942161560059

Token 167: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.29224348068237305
    2. ' est' → logprob: -2.292243480682373
    3. '=' → logprob: -2.542243480682373
    4. '2' → logprob: -4.042243480682373
    5. ' =' → logprob: -4.292243480682373
    6. ' vaut' → logprob: -4.667243480682373
    7. 's' → logprob: -4.792243480682373
    8. 'sera' → logprob: -5.417243480682373
    9. 'n' → logprob: -5.667243480682373
    10. ' sera' → logprob: -5.917243480682373

Token 168: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07901713252067566
    2. ' ' → logprob: -3.329017162322998
    3. 'n' → logprob: -3.454017162322998
    4. ' n' → logprob: -5.079017162322998
    5. 'l' → logprob: -6.704017162322998
    6. '(' → logprob: -8.20401668548584
    7. ' la' → logprob: -8.32901668548584
    8. ' l' → logprob: -8.95401668548584
    9. 'le' → logprob: -9.32901668548584
    10. ' (' → logprob: -9.82901668548584

Token 169: ' double' (ID: 3503)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04854149371385574
    2. 'n' → logprob: -3.42354154586792
    3. ' ' → logprob: -4.79854154586792
    4. 'plus' → logprob: -6.42354154586792
    5. 'nombre' → logprob: -6.54854154586792
    6. ' n' → logprob: -6.79854154586792
    7. '(' → logprob: -7.42354154586792
    8. '1' → logprob: -8.298541069030762
    9. 'max' → logprob: -9.048541069030762
    10. '(n' → logprob: -9.173541069030762

Token 170: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2602942883968353
    2. ' de' → logprob: -1.6352943181991577
    3. 'n' → logprob: -3.385294198989868
    4. '#' → logprob: -8.885293960571289
    5. ' n' → logprob: -9.260293960571289
    6. '(n' → logprob: -9.385293960571289
    7. 'm' → logprob: -9.885293960571289
    8. ' ' → logprob: -11.510293960571289
    9. '  ' → logprob: -11.635293960571289
    10. ' of' → logprob: -12.135293960571289

Token 171: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010163593105971813
    2. 'l' → logprob: -9.625102043151855
    3. ' n' → logprob: -10.250102043151855
    4. '(n' → logprob: -16.50010108947754
    5. '2' → logprob: -17.37510108947754
    6. '```' → logprob: -17.50010108947754
    7. '	n' → logprob: -17.50010108947754
    8. ' ' → logprob: -18.12510108947754
    9. ' ' → logprob: -18.25010108947754
    10. 'm' → logprob: -19.12510108947754

Token 172: '-' (ID: 12)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.305326966568828e-05
    2. ' m' → logprob: -9.375093460083008
    3. ' =' → logprob: -12.250093460083008
    4. '=' → logprob: -13.125093460083008
    5. '
' → logprob: -13.875093460083008
    6. '```' → logprob: -16.375093460083008
    7. 'n' → logprob: -16.625093460083008
    8. ',' → logprob: -16.625093460083008
    9. ' 
' → logprob: -16.750093460083008
    10. '*' → logprob: -17.125093460083008

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4156225025653839
    2. 'n' → logprob: -1.2906224727630615
    3. 'l' → logprob: -3.5406224727630615
    4. ' n' → logprob: -4.290622711181641
    5. '2' → logprob: -4.540622711181641
    6. ' ' → logprob: -4.790622711181641
    7. 'm' → logprob: -6.415622711181641
    8. ' l' → logprob: -7.790622711181641
    9. '(' → logprob: -8.41562271118164
    10. ' (' → logprob: -8.41562271118164

Token 174: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.008129963040119e-06
    2. ' m' → logprob: -13.125003814697266
    3. '=' → logprob: -13.750003814697266
    4. ' =' → logprob: -14.125003814697266
    5. '```' → logprob: -16.000003814697266
    6. ':' → logprob: -17.750003814697266
    7. '
' → logprob: -17.875003814697266
    8. ',' → logprob: -18.125003814697266
    9. '_m' → logprob: -18.750003814697266
    10. '' → logprob: -19.250003814697266

Token 175: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. ' m' → logprob: -15.5
    3. '```' → logprob: -17.25
    4. '
' → logprob: -17.875
    5. 'n' → logprob: -18.25
    6. '#' → logprob: -18.375
    7. '=' → logprob: -18.625
    8. ',' → logprob: -19.875
    9. '

' → logprob: -20.0
    10. ' =' → logprob: -20.5

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141489803791046
    2. ' =' → logprob: -1.701414942741394
    3. '_' → logprob: -14.451415061950684
    4. '=

' → logprob: -14.951415061950684
    5. ' ' → logprob: -15.076415061950684
    6. '=int' → logprob: -15.451415061950684
    7. 's' → logprob: -16.076414108276367
    8. ' ' → logprob: -16.076414108276367
    9. '＝' → logprob: -17.201414108276367
    10. ',' → logprob: -17.201414108276367

Token 177: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12791723012924194
    2. '(n' → logprob: -2.2529172897338867
    3. ' (' → logprob: -4.877917289733887
    4. ' ' → logprob: -5.002917289733887
    5. '(' → logprob: -7.377917289733887
    6. 'n' → logprob: -10.877917289733887
    7. '   ' → logprob: -13.002917289733887
    8. '  ' → logprob: -14.002917289733887
    9. ' n' → logprob: -14.002917289733887
    10. '(s' → logprob: -14.377917289733887

Token 178: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.0219828002154827e-05
    2. ' n' → logprob: -10.875020027160645
    3. '(n' → logprob: -14.250020027160645
    4. '2' → logprob: -14.500020027160645
    5. '   ' → logprob: -17.12502098083496
    6. '	n' → logprob: -17.75002098083496
    7. '_n' → logprob: -17.87502098083496
    8. ' ' → logprob: -18.12502098083496
    9. ')n' → logprob: -18.37502098083496
    10. ')' → logprob: -19.37502098083496

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269499510526657
    2. '-' → logprob: -2.1269500255584717
    3. ' ' → logprob: -11.62695026397705
    4. '*' → logprob: -11.87695026397705
    5. ')' → logprob: -13.00195026397705
    6. ' *' → logprob: -13.00195026397705
    7. ' ' → logprob: -14.12695026397705
    8. '1' → logprob: -15.62695026397705
    9. '2' → logprob: -16.001949310302734
    10. '   ' → logprob: -16.439449310302734

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.3751802444458
    4. ')' → logprob: -16.875179290771484
    5. '2' → logprob: -17.875179290771484
    6. '  ' → logprob: -18.000179290771484
    7. '１' → logprob: -18.625179290771484
    8. ' ' → logprob: -18.687679290771484
    9. '	' → logprob: -19.062679290771484
    10. '```' → logprob: -19.250179290771484

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.25000762939453
    4. '2' → logprob: -17.37500762939453
    5. ')' → logprob: -18.25000762939453
    6. '```' → logprob: -18.25000762939453
    7. '  ' → logprob: -18.68750762939453
    8. '１' → logprob: -19.75000762939453
    9. '۱' → logprob: -20.43750762939453
    10. ' ' → logprob: -20.43750762939453

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004752367385663092
    2. ' )' → logprob: -8.00047492980957
    3. ')*' → logprob: -9.25047492980957
    4. '*' → logprob: -10.12547492980957
    5. ' *' → logprob: -12.75047492980957
    6. '*)' → logprob: -14.62547492980957
    7. ' ' → logprob: -15.87547492980957
    8. ' ' → logprob: -16.37547492980957
    9. '）' → logprob: -17.12547492980957
    10. '2' → logprob: -17.25047492980957

Token 183: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008617881685495377
    2. ' *' → logprob: -4.758617877960205
    3. '2' → logprob: -13.008618354797363
    4. '**' → logprob: -14.008618354797363
    5. ' ' → logprob: -16.258617401123047
    6. ' ' → logprob: -16.633617401123047
    7. '*
' → logprob: -17.383617401123047
    8. '0' → logprob: -17.508617401123047
    9. '1' → logprob: -17.758617401123047
    10. '#' → logprob: -18.633617401123047

Token 184: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.500709533691406
    4. '```' → logprob: -18.250709533691406
    5. '  ' → logprob: -18.625709533691406
    6. '۲' → logprob: -19.000709533691406
    7. ' ' → logprob: -19.250709533691406
    8. '２' → logprob: -19.625709533691406
    9. '	' → logprob: -19.875709533691406
    10. '
' → logprob: -20.500709533691406

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.37500762939453
    4. '２' → logprob: -18.62500762939453
    5. '۲' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.25000762939453
    7. '	' → logprob: -20.62500762939453
    8. '²' → logprob: -20.68750762939453
    9. '٢' → logprob: -20.68750762939453
    10. '२' → logprob: -20.93750762939453

Token 186: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04804101586341858
    2. '
' → logprob: -3.4230411052703857
    3. '#' → logprob: -4.798040866851807
    4. '<|end|>' → logprob: -5.298040866851807
    5. ')' → logprob: -8.173041343688965
    6. ' print' → logprob: -8.548041343688965
    7. '#print' → logprob: -9.048041343688965
    8. '\n' → logprob: -9.423041343688965
    9. '  
' → logprob: -9.673041343688965
    10. 'n' → logprob: -9.673041343688965

Token 187: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008333832956850529
    2. '#' → logprob: -5.508333683013916
    3. '<|end|>' → logprob: -5.508333683013916
    4. '#print' → logprob: -9.383334159851074
    5. '```' → logprob: -10.383334159851074
    6. '
' → logprob: -10.633334159851074
    7. 'n' → logprob: -11.383334159851074
    8. ' print' → logprob: -11.383334159851074
    9. ')' → logprob: -11.383334159851074
    10. '<|end|>' → logprob: -12.508334159851074

Token 188: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026336227892898023
    2. '#' → logprob: -8.750263214111328
    3. 'for' → logprob: -9.875263214111328
    4. 'result' → logprob: -10.750263214111328
    5. ' print' → logprob: -11.000263214111328
    6. 'if' → logprob: -11.625263214111328
    7. '#print' → logprob: -12.750263214111328
    8. 'import' → logprob: -14.125263214111328
    9. 'while' → logprob: -14.375263214111328
    10. 'prin' → logprob: -14.750263214111328

Token 189: ' calc' (ID: 25691)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004790512612089515
    2. ' print' → logprob: -8.750478744506836
    3. 'for' → logprob: -8.875478744506836
    4. 'pr' → logprob: -9.250478744506836
    5. '#' → logprob: -9.500478744506836
    6. '#print' → logprob: -12.875478744506836
    7. ' for' → logprob: -13.250478744506836
    8. 'if' → logprob: -13.250478744506836
    9. 'prin' → logprob: -14.000478744506836
    10. 'p' → logprob: -14.125478744506836

Token 190: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00012047011114191264
    2. 'cule' → logprob: -9.750120162963867
    3. 'ul' → logprob: -10.375120162963867
    4. 'ulate' → logprob: -11.500120162963867
    5. '#' → logprob: -11.625120162963867
    6. 'ulte' → logprob: -12.750120162963867
    7. 'uler' → logprob: -13.500120162963867
    8. 'ulé' → logprob: -13.625120162963867
    9. 'уле' → logprob: -14.500120162963867
    10. 'le' → logprob: -14.500120162963867

Token 191: ' s' (ID: 265)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4605829119682312
    2. '2' → logprob: -2.085582971572876
    3. ' le' → logprob: -2.460582971572876
    4. 'le' → logprob: -2.835582971572876
    5. 'la' → logprob: -3.210582971572876
    6. ' ' → logprob: -3.585582971572876
    7. 'l' → logprob: -4.085582733154297
    8. ' l' → logprob: -5.460582733154297
    9. 'result' → logprob: -5.460582733154297
    10. 'm' → logprob: -6.835582733154297

Token 192: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2257259041070938
    2. '=' → logprob: -1.6007258892059326
    3. 'um' → logprob: -8.850726127624512
    4. '=m' → logprob: -10.725726127624512
    5. '=s' → logprob: -10.975726127624512
    6. 'm' → logprob: -11.100726127624512
    7. '_' → logprob: -11.100726127624512
    8. 'qrt' → logprob: -11.350726127624512
    9. ' ' → logprob: -11.475726127624512
    10. 'q' → logprob: -11.600726127624512

Token 193: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05660346522927284
    2. '2' → logprob: -4.43160343170166
    3. ' s' → logprob: -4.43160343170166
    4. 'la' → logprob: -5.18160343170166
    5. 'l' → logprob: -5.30660343170166
    6. 'sum' → logprob: -5.43160343170166
    7. '=' → logprob: -5.93160343170166
    8. ' la' → logprob: -6.18160343170166
    9. 'n' → logprob: -6.18160343170166
    10. '0' → logprob: -6.30660343170166

Token 194: ' différence' (ID: 79196)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10467564314603806
    2. ' somme' → logprob: -2.604675531387329
    3. 'omme' → logprob: -4.854675769805908
    4. '2' → logprob: -5.104675769805908
    5. 'som' → logprob: -5.229675769805908
    6. 'sum' → logprob: -6.229675769805908
    7. 'n' → logprob: -6.979675769805908
    8. '(' → logprob: -7.854675769805908
    9. '0' → logprob: -7.979675769805908
    10. ' ' → logprob: -8.10467529296875

Token 195: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937159299850464
    2. ' =' → logprob: -0.6937159299850464
    3. 's' → logprob: -7.818716049194336
    4. ' between' → logprob: -9.818716049194336
    5. 'between' → logprob: -10.318716049194336
    6. ' ' → logprob: -10.568716049194336
    7. ' entre' → logprob: -10.818716049194336
    8. 'entre' → logprob: -11.068716049194336
    9. ' s' → logprob: -12.068716049194336
    10. '=s' → logprob: -12.443716049194336

Token 196: ' l' (ID: 305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006894512567669153
    2. 'l' → logprob: -5.381894588470459
    3. 'n' → logprob: -7.006894588470459
    4. 'm' → logprob: -7.381894588470459
    5. '(' → logprob: -7.506894588470459
    6. ' ' → logprob: -9.0068941116333
    7. '(n' → logprob: -10.6318941116333
    8. ' l' → logprob: -11.6318941116333
    9. '1' → logprob: -11.7568941116333
    10. ' (' → logprob: -11.8818941116333

Token 197: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.1394689530134201
    2. ' et' → logprob: -2.1394689083099365
    3. ' and' → logprob: -5.139469146728516
    4. 'and' → logprob: -6.514469146728516
    5. 'l' → logprob: -6.764469146728516
    6. '2' → logprob: -6.764469146728516
    7. 'm' → logprob: -6.889469146728516
    8. '+' → logprob: -7.264469146728516
    9. 'n' → logprob: -7.639469146728516
    10. '(' → logprob: -9.014469146728516

Token 198: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031381507869809866
    2. '(' → logprob: -6.128138065338135
    3. ' ' → logprob: -7.128138065338135
    4. ' (' → logprob: -9.378138542175293
    5. '0' → logprob: -10.753138542175293
    6. 'n' → logprob: -11.253138542175293
    7. 'm' → logprob: -11.253138542175293
    8. '1' → logprob: -12.128138542175293
    9. '(n' → logprob: -12.378138542175293
    10. 'l' → logprob: -13.128138542175293

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005457747727632523
    2. '(' → logprob: -5.255457878112793
    3. ' ' → logprob: -8.755457878112793
    4. ' (' → logprob: -10.755457878112793
    5. 'm' → logprob: -10.880457878112793
    6. 'n' → logprob: -12.255457878112793
    7. '1' → logprob: -12.380457878112793
    8. '0' → logprob: -12.380457878112793
    9. '(n' → logprob: -12.380457878112793
    10. '(m' → logprob: -12.755457878112793

Token 200: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31526562571525574
    2. ' **' → logprob: -1.3152656555175781
    3. 'm' → logprob: -6.315265655517578
    4. ' m' → logprob: -9.565265655517578
    5. 's' → logprob: -10.940265655517578
    6. ' ' → logprob: -10.940265655517578
    7. ' ' → logprob: -11.190265655517578
    8. '^' → logprob: -11.565265655517578
    9. '(m' → logprob: -11.815265655517578
    10. 'l' → logprob: -11.940265655517578

Token 201: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007157784420996904
    2. '(n' → logprob: -5.507157802581787
    3. '(m' → logprob: -6.257157802581787
    4. 'n' → logprob: -6.882157802581787
    5. ' m' → logprob: -9.757157325744629
    6. '(' → logprob: -10.257157325744629
    7. ' (' → logprob: -10.507157325744629
    8. '{' → logprob: -13.132157325744629
    9. '```' → logprob: -13.132157325744629
    10. 'l' → logprob: -14.132157325744629

Token 202: '-' (ID: 12)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19774186611175537
    2. '(n' → logprob: -2.072741985321045
    3. '(m' → logprob: -3.697741985321045
    4. ' (' → logprob: -4.447741985321045
    5. '**' → logprob: -5.197741985321045
    6. 'n' → logprob: -5.572741985321045
    7. '-' → logprob: -5.822741985321045
    8. ' m' → logprob: -5.947741985321045
    9. ')' → logprob: -6.822741985321045
    10. '(' → logprob: -8.572741508483887

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13512836396694183
    2. '(n' → logprob: -2.6351282596588135
    3. '(m' → logprob: -3.3851282596588135
    4. 'm' → logprob: -4.010128498077393
    5. ' (' → logprob: -6.510128498077393
    6. '2' → logprob: -7.510128498077393
    7. '(' → logprob: -7.760128498077393
    8. 'n' → logprob: -9.760128021240234
    9. '-' → logprob: -10.510128021240234
    10. ')' → logprob: -10.760128021240234

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007923588855192065
    2. ')
' → logprob: -7.500792503356934
    3. '))' → logprob: -9.625792503356934
    4. ')**' → logprob: -9.750792503356934
    5. '-' → logprob: -10.500792503356934
    6. ')
' → logprob: -10.875792503356934
    7. ')`' → logprob: -11.375792503356934
    8. ')+' → logprob: -11.375792503356934
    9. ')

' → logprob: -11.875792503356934
    10. ' )' → logprob: -11.875792503356934

Token 205: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.034592388459714e-06
    2. ' s' → logprob: -13.375005722045898
    3. 'l' → logprob: -13.500005722045898
    4. '=' → logprob: -14.000005722045898
    5. '
' → logprob: -14.250005722045898
    6. '```' → logprob: -14.250005722045898
    7. ' =' → logprob: -15.250005722045898
    8. '2' → logprob: -15.750005722045898
    9. '#' → logprob: -15.875005722045898
    10. '=
' → logprob: -16.6250057220459

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.349077224731445
    4. ' ' → logprob: -17.099077224731445
    5. 's' → logprob: -17.224077224731445
    6. '＝' → logprob: -18.599077224731445
    7. '-' → logprob: -18.724077224731445
    8. '=s' → logprob: -18.849077224731445
    9. '=

' → logprob: -18.974077224731445
    10. '=int' → logprob: -19.099077224731445

Token 207: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00671584764495492
    2. ' l' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.131715774536133
    4. '	l' → logprob: -15.631715774536133
    5. '(l' → logprob: -16.756715774536133
    6. ' ' → logprob: -16.881715774536133
    7. '```' → logprob: -18.131715774536133
    8. ' ' → logprob: -18.881715774536133
    9. '  ' → logprob: -19.131715774536133
    10. '_l' → logprob: -19.631715774536133

Token 208: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014150768518448
    2. ' -' → logprob: -1.7014150619506836
    3. '-
' → logprob: -14.576415061950684
    4. ' ' → logprob: -14.701415061950684
    5. 's' → logprob: -15.451415061950684
    6. '   ' → logprob: -15.826415061950684
    7. '```' → logprob: -15.826415061950684
    8. '-s' → logprob: -16.076416015625
    9. '-(' → logprob: -16.326416015625
    10. ' ' → logprob: -16.451416015625

Token 209: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011093211360275745
    2. '(' → logprob: -4.5110931396484375
    3. ' ' → logprob: -10.261093139648438
    4. ' (' → logprob: -11.511093139648438
    5. '   ' → logprob: -15.636093139648438
    6. '```' → logprob: -15.636093139648438
    7. 'pow' → logprob: -17.761093139648438
    8. '  ' → logprob: -18.761093139648438
    9. '[' → logprob: -19.511093139648438
    10. '`' → logprob: -19.761093139648438

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005239683669060469
    2. '(' → logprob: -5.255239486694336
    3. ' ' → logprob: -12.255239486694336
    4. ' (' → logprob: -14.130239486694336
    5. '```' → logprob: -15.255239486694336
    6. '   ' → logprob: -16.630239486694336
    7. 'pow' → logprob: -18.130239486694336
    8. '[' → logprob: -18.630239486694336
    9. '۲' → logprob: -19.130239486694336
    10. '`' → logprob: -19.130239486694336

Token 211: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00011439072113716975
    2. ' **' → logprob: -9.250114440917969
    3. '(n' → logprob: -11.125114440917969
    4. '[n' → logprob: -13.375114440917969
    5. '*' → logprob: -13.875114440917969
    6. '```' → logprob: -14.750114440917969
    7. '^(' → logprob: -14.875114440917969
    8. '**
' → logprob: -16.62511444091797
    9. '^{' → logprob: -17.00011444091797
    10. ' ' → logprob: -17.37511444091797

Token 212: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3902033970225602e-05
    2. ' (' → logprob: -11.500014305114746
    3. '(' → logprob: -13.000014305114746
    4. '(m' → logprob: -13.625014305114746
    5. 'n' → logprob: -16.00001335144043
    6. '((' → logprob: -16.62501335144043
    7. 'm' → logprob: -16.75001335144043
    8. '(
' → logprob: -18.25001335144043
    9. '[n' → logprob: -18.50001335144043
    10. '{' → logprob: -19.50001335144043

Token 213: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032422395888715982
    2. 'n' → logprob: -5.753242015838623
    3. ' (' → logprob: -9.878242492675781
    4. '(' → logprob: -11.378242492675781
    5. 'm' → logprob: -14.128242492675781
    6. '(m' → logprob: -14.628242492675781
    7. ' n' → logprob: -14.753242492675781
    8. '[n' → logprob: -16.37824249267578
    9. '(
' → logprob: -16.62824249267578
    10. '   ' → logprob: -17.50324249267578

Token 214: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001368807745166123
    2. '(n' → logprob: -6.751368999481201
    3. ' -' → logprob: -9.251368522644043
    4. '(' → logprob: -9.251368522644043
    5. ' (' → logprob: -13.001368522644043
    6. ' ' → logprob: -13.626368522644043
    7. '(-' → logprob: -13.876368522644043
    8. '1' → logprob: -14.001368522644043
    9. 'n' → logprob: -15.001368522644043
    10. '   ' → logprob: -15.001368522644043

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. ')' → logprob: -20.375001907348633
    7. '۱' → logprob: -20.375001907348633
    8. '１' → logprob: -20.687501907348633
    9. '2' → logprob: -20.875001907348633
    10. '  ' → logprob: -20.937501907348633

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -16.875
    4. '１' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. '۱' → logprob: -20.125
    7. '<|end|>' → logprob: -20.125
    8. '2' → logprob: -20.25
    9. ')' → logprob: -20.6875
    10. '১' → logprob: -21.0625

Token 217: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ' )' → logprob: -12.625007629394531
    3. '))' → logprob: -13.125007629394531
    4. ')
' → logprob: -13.500007629394531
    5. ')

' → logprob: -15.875007629394531
    6. '),' → logprob: -16.25000762939453
    7. ')`' → logprob: -16.50000762939453
    8. '}' → logprob: -16.50000762939453
    9. ')}' → logprob: -17.00000762939453
    10. ')#' → logprob: -17.12500762939453

Token 218: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2715343236923218
    2. '#' → logprob: -1.7715343236923218
    3. '<|end|>' → logprob: -3.6465344429016113
    4. 'p' → logprob: -4.521534442901611
    5. 't' → logprob: -4.646534442901611
    6. 'result' → logprob: -5.021534442901611
    7. 'n' → logprob: -5.521534442901611
    8. 'r' → logprob: -6.021534442901611
    9. 'for' → logprob: -6.396534442901611
    10. 'm' → logprob: -6.896534442901611

Token 219: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07607419788837433
    2. 'if' → logprob: -3.5760741233825684
    3. 'result' → logprob: -3.8260741233825684
    4. '#' → logprob: -5.076074123382568
    5. 'for' → logprob: -5.201074123382568
    6. 't' → logprob: -5.576074123382568
    7. 'p' → logprob: -5.701074123382568
    8. 'binary' → logprob: -7.326074123382568
    9. 'r' → logprob: -7.451074123382568
    10. 'b' → logprob: -7.951074123382568

Token 220: ' initialise' (ID: 145250)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005399053916335106
    2. 'for' → logprob: -5.630399227142334
    3. 'if' → logprob: -6.755399227142334
    4. '#' → logprob: -7.630399227142334
    5. ' print' → logprob: -9.380398750305176
    6. '#print' → logprob: -10.630398750305176
    7. ' for' → logprob: -11.255398750305176
    8. ' if' → logprob: -12.505398750305176
    9. '=' → logprob: -12.755398750305176
    10. 'while' → logprob: -13.005398750305176

Token 221: ' value' (ID: 1432)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0229942798614502
    2. 't' → logprob: -1.7729942798614502
    3. 'n' → logprob: -2.27299427986145
    4. 'r' → logprob: -2.77299427986145
    5. 'a' → logprob: -2.77299427986145
    6. ' result' → logprob: -3.02299427986145
    7. 'i' → logprob: -3.77299427986145
    8. 'x' → logprob: -4.022994041442871
    9. 'res' → logprob: -4.147994041442871
    10. 's' → logprob: -4.147994041442871

Token 222: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15911297500133514
    2. 's' → logprob: -2.0341129302978516
    3. '=' → logprob: -4.159112930297852
    4. 'value' → logprob: -8.409112930297852
    5. '_value' → logprob: -8.909112930297852
    6. '_' → logprob: -9.284112930297852
    7. ' ' → logprob: -9.909112930297852
    8. 'd' → logprob: -10.034112930297852
    9. '=value' → logprob: -10.659112930297852
    10. 'e' → logprob: -11.034112930297852

Token 223: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02267274633049965
    2. '2' → logprob: -4.772672653198242
    3. 's' → logprob: -5.022672653198242
    4. '1' → logprob: -5.147672653198242
    5. 'm' → logprob: -7.022672653198242
    6. '(' → logprob: -8.022672653198242
    7. 'n' → logprob: -8.897672653198242
    8. ' ' → logprob: -9.647672653198242
    9. 'value' → logprob: -9.772672653198242
    10. '(s' → logprob: -10.272672653198242

Token 224: ' puissance' (ID: 63494)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1717928797006607
    2. 's' → logprob: -2.546792984008789
    3. '1' → logprob: -2.921792984008789
    4. '2' → logprob: -4.046792984008789
    5. 'n' → logprob: -6.171792984008789
    6. 'm' → logprob: -6.421792984008789
    7. '[' → logprob: -6.421792984008789
    8. '[s' → logprob: -7.046792984008789
    9. '(' → logprob: -7.421792984008789
    10. '(s' → logprob: -8.046792984008789

Token 225: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7172681093215942
    2. '(' → logprob: -1.7172681093215942
    3. ' =' → logprob: -2.5922679901123047
    4. 'de' → logprob: -2.5922679901123047
    5. '=' → logprob: -3.2172679901123047
    6. 's' → logprob: -3.3422679901123047
    7. ' de' → logprob: -3.4672679901123047
    8. 'value' → logprob: -3.7172679901123047
    9. '_value' → logprob: -4.217267990112305
    10. 'n' → logprob: -5.092267990112305

Token 226: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009309518150985241
    2. 's' → logprob: -5.6343092918396
    3. '0' → logprob: -6.2593092918396
    4. '3' → logprob: -6.7593092918396
    5. 'm' → logprob: -7.3843092918396
    6. '1' → logprob: -7.6343092918396
    7. '-' → logprob: -7.7593092918396
    8. '(' → logprob: -8.134309768676758
    9. 'n' → logprob: -8.509309768676758
    10. '4' → logprob: -8.634309768676758

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014222737401723862
    2. '3' → logprob: -4.639222621917725
    3. 's' → logprob: -5.764222621917725
    4. '-' → logprob: -7.764222621917725
    5. 'm' → logprob: -7.889222621917725
    6. '4' → logprob: -8.889223098754883
    7. 'n' → logprob: -9.639223098754883
    8. 'l' → logprob: -9.639223098754883
    9. '0' → logprob: -9.889223098754883
    10. '10' → logprob: -9.889223098754883

Token 228: ' maximale' (ID: 76380)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.43816640973091125
    2. 'value' → logprob: -2.063166379928589
    3. '(' → logprob: -2.938166379928589
    4. 's' → logprob: -2.938166379928589
    5. 'm' → logprob: -3.063166379928589
    6. ' **' → logprob: -3.688166379928589
    7. '(n' → logprob: -3.938166379928589
    8. '(m' → logprob: -4.688166618347168
    9. 'n' → logprob: -4.938166618347168
    10. '(value' → logprob: -5.188166618347168

Token 229: ' qui' (ID: 2780)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.013508533127605915
    2. ' value' → logprob: -4.763508319854736
    3. '**' → logprob: -6.638508319854736
    4. '2' → logprob: -6.763508319854736
    5. 'n' → logprob: -7.513508319854736
    6. 's' → logprob: -7.638508319854736
    7. '(' → logprob: -7.638508319854736
    8. '(value' → logprob: -8.888508796691895
    9. 'current' → logprob: -8.888508796691895
    10. ' (' → logprob: -9.513508796691895

Token 230: ' ne' (ID: 453)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -1.5259486436843872
    2. ' vaut' → logprob: -1.9009486436843872
    3. 'n' → logprob: -2.0259485244750977
    4. 'est' → logprob: -2.1509485244750977
    5. 'val' → logprob: -2.4009485244750977
    6. ' est' → logprob: -2.6509485244750977
    7. 's' → logprob: -2.9009485244750977
    8. 'a' → logprob: -3.5259485244750977
    9. '```' → logprob: -4.275948524475098
    10. 'm' → logprob: -4.400948524475098

Token 231: ' dépasse' (ID: 165701)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0045724110677838326
    2. 'dé' → logprob: -5.62957239151001
    3. ' dépasse' → logprob: -7.25457239151001
    4. '```' → logprob: -8.754572868347168
    5. 'exc' → logprob: -11.004572868347168
    6. ' ' → logprob: -11.129572868347168
    7. '...' → logprob: -11.379572868347168
    8. '_d' → logprob: -11.629572868347168
    9. '>' → logprob: -11.754572868347168
    10. 'ex' → logprob: -12.379572868347168

Token 232: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.7173424363136292
    2. ' l' → logprob: -1.5923423767089844
    3. 's' → logprob: -1.9673423767089844
    4. 'l' → logprob: -2.9673423767089844
    5. ' s' → logprob: -3.2173423767089844
    6. 'm' → logprob: -3.8423423767089844
    7. ' ' → logprob: -4.217342376708984
    8. 'pas' → logprob: -4.217342376708984
    9. ' n' → logprob: -4.717342376708984
    10. ' m' → logprob: -5.217342376708984

Token 233: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.039973258972168
    2. 's' → logprob: -1.289973258972168
    3. '2' → logprob: -1.664973258972168
    4. ' s' → logprob: -2.414973258972168
    5. ' l' → logprob: -2.664973258972168
    6. ' ' → logprob: -4.539973258972168
    7. 'm' → logprob: -5.539973258972168
    8. 'n' → logprob: -5.539973258972168
    9. ' n' → logprob: -6.039973258972168
    10. ' m' → logprob: -7.664973258972168

Token 234: '
' (ID: 198)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0013814250705763698
    2. ' value' → logprob: -7.6263813972473145
    3. '2' → logprob: -8.001381874084473
    4. 'v' → logprob: -8.126381874084473
    5. '=' → logprob: -9.626381874084473
    6. 'val' → logprob: -9.876381874084473
    7. 'result' → logprob: -10.001381874084473
    8. 's' → logprob: -10.126381874084473
    9. ' =' → logprob: -11.001381874084473
    10. 'current' → logprob: -11.751381874084473

Token 235: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -5.319370302458992e-06
    2. ' value' → logprob: -13.000005722045898
    3. 'v' → logprob: -13.500005722045898
    4. 's' → logprob: -14.500005722045898
    5. 'val' → logprob: -14.625005722045898
    6. '2' → logprob: -15.625005722045898
    7. '```' → logprob: -15.875005722045898
    8. 'values' → logprob: -16.7500057220459
    9. 'm' → logprob: -16.8750057220459
    10. '
' → logprob: -17.2500057220459

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141547918319702
    2. '=' → logprob: -1.7014155387878418
    3. 's' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.451415061950684
    5. ',' → logprob: -15.201415061950684
    6. '_' → logprob: -15.326415061950684
    7. ' ' → logprob: -15.451415061950684
    8. ')' → logprob: -16.326416015625
    9. '   ' → logprob: -17.451416015625
    10. '.' → logprob: -17.451416015625

Token 237: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008096250821836293
    2. ' ' → logprob: -7.125809669494629
    3. '1' → logprob: -13.000809669494629
    4. '   ' → logprob: -13.125809669494629
    5. '  ' → logprob: -14.375809669494629
    6. '(' → logprob: -15.875809669494629
    7. '0' → logprob: -16.750808715820312
    8. 'n' → logprob: -17.875808715820312
    9. 'pow' → logprob: -18.000808715820312
    10. '```' → logprob: -18.750808715820312

Token 238: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013572083844337612
    2. ' ' → logprob: -9.00013542175293
    3. 'n' → logprob: -12.37513542175293
    4. '1' → logprob: -12.37513542175293
    5. 's' → logprob: -13.75013542175293
    6. '   ' → logprob: -14.00013542175293
    7. '  ' → logprob: -14.37513542175293
    8. 'l' → logprob: -14.87513542175293
    9. '(' → logprob: -15.12513542175293
    10. 'm' → logprob: -15.25013542175293

Token 239: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.026800282299518585
    2. ' **' → logprob: -3.6518003940582275
    3. '(n' → logprob: -7.901800155639648
    4. 'm' → logprob: -10.026800155639648
    5. '(m' → logprob: -10.151800155639648
    6. '[n' → logprob: -11.276800155639648
    7. '*' → logprob: -11.776800155639648
    8. '^(' → logprob: -12.026800155639648
    9. '[m' → logprob: -12.526800155639648
    10. '(' → logprob: -12.901800155639648

Token 240: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007215422578155994
    2. 'm' → logprob: -5.75721549987793
    3. '(m' → logprob: -5.75721549987793
    4. ' (' → logprob: -7.25721549987793
    5. '(' → logprob: -8.88221549987793
    6. 'n' → logprob: -10.63221549987793
    7. ' m' → logprob: -14.88221549987793
    8. '(
' → logprob: -15.50721549987793
    9. '{' → logprob: -15.75721549987793
    10. '[n' → logprob: -15.75721549987793

Token 241: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18505868315696716
    2. '(n' → logprob: -2.31005859375
    3. 'n' → logprob: -2.93505859375
    4. '(m' → logprob: -4.18505859375
    5. ' (' → logprob: -6.93505859375
    6. ' m' → logprob: -8.56005859375
    7. '(' → logprob: -9.06005859375
    8. ' n' → logprob: -10.06005859375
    9. '   ' → logprob: -12.43505859375
    10. ' ' → logprob: -12.81005859375

Token 242: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014196648262441158
    2. ' -' → logprob: -4.264196872711182
    3. ' ' → logprob: -11.639196395874023
    4. ')' → logprob: -11.639196395874023
    5. '1' → logprob: -11.764196395874023
    6. '   ' → logprob: -12.014196395874023
    7. ')-' → logprob: -15.264196395874023
    8. '  ' → logprob: -15.264196395874023
    9. '```' → logprob: -15.764196395874023
    10. '0' → logprob: -15.889196395874023

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. '2' → logprob: -10.875029563903809
    3. ' ' → logprob: -11.625029563903809
    4. '   ' → logprob: -13.750029563903809
    5. ')' → logprob: -15.875029563903809
    6. '  ' → logprob: -16.750028610229492
    7. '```' → logprob: -16.750028610229492
    8. '    ' → logprob: -18.187528610229492
    9. '...' → logprob: -18.250028610229492
    10. '       ' → logprob: -18.312528610229492

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. '2' → logprob: -10.250036239624023
    3. ' ' → logprob: -13.875036239624023
    4. ')' → logprob: -16.250036239624023
    5. '```' → logprob: -16.500036239624023
    6. '   ' → logprob: -16.687536239624023
    7. '１' → logprob: -17.687536239624023
    8. '۱' → logprob: -17.812536239624023
    9. '<|end|>' → logprob: -18.250036239624023
    10. 'm' → logprob: -18.812536239624023

Token 245: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004931025905534625
    2. ' )' → logprob: -8.125493049621582
    3. ')
' → logprob: -9.250493049621582
    4. ')+' → logprob: -9.750493049621582
    5. '+' → logprob: -10.875493049621582
    6. '#' → logprob: -11.875493049621582
    7. ')#' → logprob: -12.375493049621582
    8. '))' → logprob: -12.625493049621582
    9. ')

' → logprob: -13.750493049621582
    10. '-' → logprob: -14.000493049621582

Token 246: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3174511194229126
    2. 'result' → logprob: -1.3174511194229126
    3. 'res' → logprob: -6.817451000213623
    4. 'while' → logprob: -6.817451000213623
    5. 'r' → logprob: -7.817451000213623
    6. 'output' → logprob: -8.192451477050781
    7. 'print' → logprob: -8.317451477050781
    8. '#' → logprob: -8.317451477050781
    9. 'b' → logprob: -8.817451477050781
    10. 'value' → logprob: -8.942451477050781

Token 247: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12688106298446655
    2. 'result' → logprob: -2.2518811225891113
    3. 'while' → logprob: -4.501881122589111
    4. '#' → logprob: -6.751881122589111
    5. 'res' → logprob: -7.626881122589111
    6. 'binary' → logprob: -8.126880645751953
    7. 'b' → logprob: -8.876880645751953
    8. 'f' → logprob: -9.001880645751953
    9. 'output' → logprob: -9.251880645751953
    10. 'r' → logprob: -9.251880645751953

Token 248: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03375404700636864
    2. ' for' → logprob: -3.4087541103363037
    3. 'range' → logprob: -10.533754348754883
    4. 'r' → logprob: -11.033754348754883
    5. 'while' → logprob: -11.033754348754883
    6. ' =' → logprob: -11.158754348754883
    7. 'or' → logprob: -11.908754348754883
    8. '#' → logprob: -12.033754348754883
    9. '=' → logprob: -12.033754348754883
    10. 'print' → logprob: -12.658754348754883

Token 249: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21414372324943542
    2. 'une' → logprob: -1.8391437530517578
    3. ' un' → logprob: -4.214143753051758
    4. 'a' → logprob: -5.589143753051758
    5. 'result' → logprob: -5.714143753051758
    6. 'un' → logprob: -5.964143753051758
    7. '#' → logprob: -5.964143753051758
    8. 'value' → logprob: -6.839143753051758
    9. ' la' → logprob: -6.964143753051758
    10. 's' → logprob: -7.214143753051758

Token 250: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28106746077537537
    2. 'liste' → logprob: -1.6560674905776978
    3. 'chaine' → logprob: -3.406067371368408
    4. 'list' → logprob: -4.781067371368408
    5. 'range' → logprob: -5.531067371368408
    6. ' for' → logprob: -6.531067371368408
    7. 'while' → logprob: -6.781067371368408
    8. 'variable' → logprob: -6.906067371368408
    9. ' liste' → logprob: -7.031067371368408
    10. 'string' → logprob: -7.406067371368408

Token 251: ' path' (ID: 3104)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.1753329038619995
    2. 'bits' → logprob: -1.3003329038619995
    3. 'result' → logprob: -1.9253329038619995
    4. 'b' → logprob: -2.675333023071289
    5. ' result' → logprob: -3.550333023071289
    6. ' bits' → logprob: -3.550333023071289
    7. ' values' → logprob: -4.050333023071289
    8. 'liste' → logprob: -4.050333023071289
    9. 'lst' → logprob: -4.050333023071289
    10. 'bit' → logprob: -4.425333023071289

Token 252: '_add' (ID: 8390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10480037331581116
    2. '=' → logprob: -2.4798004627227783
    3. 'path' → logprob: -4.229800224304199
    4. '=[]' → logprob: -7.104800224304199
    5. '=[]
' → logprob: -9.3548002243042
    6. ' path' → logprob: -9.3548002243042
    7. '[]' → logprob: -9.6048002243042
    8. '_path' → logprob: -9.9798002243042
    9. '=[' → logprob: -10.9798002243042
    10. ',' → logprob: -11.1048002243042

Token 253: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2653639018535614
    2. '=' → logprob: -1.5153639316558838
    3. '=[]' → logprob: -5.015363693237305
    4. '=[]
' → logprob: -5.765363693237305
    5. 'ed' → logprob: -6.015363693237305
    6. 'ition' → logprob: -7.640363693237305
    7. '[]' → logprob: -8.265363693237305
    8. 'itions' → logprob: -8.390363693237305
    9. '=[]
' → logprob: -9.640363693237305
    10. 's' → logprob: -10.515363693237305

Token 254: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5752425789833069
    2. '[n' → logprob: -1.575242519378662
    3. '[]' → logprob: -1.700242519378662
    4. 'n' → logprob: -3.950242519378662
    5. '[m' → logprob: -4.700242519378662
    6. '20' → logprob: -5.325242519378662
    7. 'length' → logprob: -6.075242519378662
    8. 'size' → logprob: -6.450242519378662
    9. 'bool' → logprob: -6.450242519378662
    10. 'm' → logprob: -6.575242519378662

Token 255: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005557335913181305
    2. ' m' → logprob: -5.755557537078857
    3. 'n' → logprob: -6.130557537078857
    4. '(m' → logprob: -8.8805570602417
    5. ' n' → logprob: -10.2555570602417
    6. '(n' → logprob: -11.1305570602417
    7. '[m' → logprob: -12.3805570602417
    8. ' (' → logprob: -13.1305570602417
    9. '(' → logprob: -13.5055570602417
    10. '0' → logprob: -13.7555570602417

Token 256: '-' (ID: 12)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.054704874753952026
    2. ' =' → logprob: -3.0547049045562744
    3. '=' → logprob: -5.804704666137695
    4. ' path' → logprob: -6.054704666137695
    5. '
' → logprob: -8.429704666137695
    6. '(path' → logprob: -9.179704666137695
    7. ']' → logprob: -9.179704666137695
    8. '[' → logprob: -9.304704666137695
    9. '[path' → logprob: -9.554704666137695
    10. '=[' → logprob: -10.304704666137695

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014567136764526367
    2. 'n' → logprob: -4.2645673751831055
    3. 'm' → logprob: -8.514567375183105
    4. '(n' → logprob: -10.139567375183105
    5. '0' → logprob: -10.514567375183105
    6. '20' → logprob: -10.639567375183105
    7. '(' → logprob: -10.889567375183105
    8. ' ' → logprob: -10.889567375183105
    9. '21' → logprob: -11.264567375183105
    10. '2' → logprob: -11.389567375183105

Token 258: ' rempl' (ID: 66326)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.03690998628735542
    2. ' =' → logprob: -3.911910057067871
    3. ' path' → logprob: -4.661910057067871
    4. '=' → logprob: -5.661910057067871
    5. '[' → logprob: -6.411910057067871
    6. '[path' → logprob: -7.536910057067871
    7. ']' → logprob: -7.911910057067871
    8. '
' → logprob: -8.411910057067871
    9. ',' → logprob: -8.661910057067871
    10. '=[' → logprob: -9.286910057067871

Token 259: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.008973329328000546
    2. 'uée' → logprob: -6.258973121643066
    3. 'ue' → logprob: -6.508973121643066
    4. 'ee' → logprob: -6.633973121643066
    5. 'é' → logprob: -6.758973121643066
    6. 'ancée' → logprob: -7.258973121643066
    7. 'with' → logprob: -7.383973121643066
    8. 'e' → logprob: -7.633973121643066
    9. 'urée' → logprob: -7.758973121643066
    10. '[' → logprob: -8.508973121643066

Token 260: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6077715158462524
    2. ' de' → logprob: -1.1077715158462524
    3. 'avec' → logprob: -3.232771396636963
    4. 'with' → logprob: -3.732771396636963
    5. ' with' → logprob: -3.982771396636963
    6. '[' → logprob: -4.357771396636963
    7. '([' → logprob: -4.482771396636963
    8. ' avec' → logprob: -4.732771396636963
    9. '(' → logprob: -5.232771396636963
    10. 'd' → logprob: -6.232771396636963

Token 261: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10557051002979279
    2. 'False' → logprob: -2.3555705547332764
    3. '"' → logprob: -6.480570316314697
    4. '[' → logprob: -7.105570316314697
    5. ''' → logprob: -7.355570316314697
    6. 'True' → logprob: -7.480570316314697
    7. 'zeros' → logprob: -7.480570316314697
    8. '1' → logprob: -8.230570793151855
    9. 'None' → logprob: -8.355570793151855
    10. ' ' → logprob: -9.105570793151855

Token 262: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.5320264101028442
    2. 'ero' → logprob: -1.0320264101028442
    3. 'éros' → logprob: -3.2820262908935547
    4. 'e' → logprob: -4.157026290893555
    5. 'éro' → logprob: -6.157026290893555
    6. 'er' → logprob: -8.907026290893555
    7. '"' → logprob: -9.032026290893555
    8. ''' → logprob: -9.282026290893555
    9. '[' → logprob: -9.407026290893555
    10. '{' → logprob: -9.532026290893555

Token 263: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00033403540146537125
    2. '
' → logprob: -8.750333786010742
    3. ' path' → logprob: -8.750333786010742
    4. '```' → logprob: -12.500333786010742
    5. '(path' → logprob: -12.750333786010742
    6. ' =' → logprob: -12.875333786010742
    7. '[path' → logprob: -12.875333786010742
    8. '[' → logprob: -14.250333786010742
    9. '#' → logprob: -14.250333786010742
    10. ',' → logprob: -14.250333786010742

Token 264: '#' (ID: 2)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00022725824965164065
    2. ' path' → logprob: -9.000226974487305
    3. '[' → logprob: -9.375226974487305
    4. '[path' → logprob: -11.125226974487305
    5. '
' → logprob: -13.000226974487305
    6. '```' → logprob: -14.125226974487305
    7. 'p' → logprob: -15.500226974487305
    8. '_path' → logprob: -15.875226974487305
    9. '"path' → logprob: -16.000226974487305
    10. '[]
' → logprob: -16.125226974487305

Token 265: ' Cette' (ID: 27383)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.2664456789934775e-06
    2. ' path' → logprob: -14.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[path' → logprob: -16.625001907348633
    5. '#' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. '
' → logprob: -17.875001907348633
    8. 'p' → logprob: -19.125001907348633
    9. '"path' → logprob: -19.625001907348633
    10. '	path' → logprob: -19.875001907348633

Token 266: ' liste' (ID: 31719)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5224887132644653
    2. 'liste' → logprob: -1.3974887132644653
    3. 'list' → logprob: -2.147488594055176
    4. 'for' → logprob: -4.397488594055176
    5. ' path' → logprob: -4.772488594055176
    6. '[' → logprob: -5.147488594055176
    7. ' liste' → logprob: -5.772488594055176
    8. '#' → logprob: -5.772488594055176
    9. 'lst' → logprob: -6.647488594055176
    10. 'l' → logprob: -6.647488594055176

Token 267: ' indiqu' (ID: 100773)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138071894645691
    2. '=' → logprob: -1.3138072490692139
    3. 'path' → logprob: -8.313807487487793
    4. '[' → logprob: -9.688807487487793
    5. ' est' → logprob: -9.938807487487793
    6. ' path' → logprob: -10.188807487487793
    7. ' représente' → logprob: -10.688807487487793
    8. ' ' → logprob: -10.938807487487793
    9. '=[' → logprob: -11.063807487487793
    10. '#' → logprob: -11.063807487487793

Token 268: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0033831533510237932
    2. 'ant' → logprob: -5.753383159637451
    3. 'era' → logprob: -8.753382682800293
    4. 'ent' → logprob: -10.378382682800293
    5. '#' → logprob: -11.628382682800293
    6. 'er' → logprob: -12.128382682800293
    7. ' e' → logprob: -14.378382682800293
    8. 'a' → logprob: -14.878382682800293
    9. '   ' → logprob: -15.378382682800293
    10. 'ue' → logprob: -16.00338363647461

Token 269: ' pour' (ID: 1930)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.12861444056034088
    2. ' les' → logprob: -2.3786144256591797
    3. 'le' → logprob: -4.25361442565918
    4. ' quelles' → logprob: -5.00361442565918
    5. ' le' → logprob: -6.50361442565918
    6. 'pour' → logprob: -6.75361442565918
    7. ' quels' → logprob: -7.00361442565918
    8. ',' → logprob: -7.12861442565918
    9. 'la' → logprob: -7.75361442565918
    10. 'où' → logprob: -8.12861442565918

Token 270: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025768229737877846
    2. ' i' → logprob: -4.275768280029297
    3. '_' → logprob: -4.775768280029297
    4. 'j' → logprob: -7.025768280029297
    5. ' chaque' → logprob: -7.150768280029297
    6. 'each' → logprob: -7.775768280029297
    7. '_i' → logprob: -8.025768280029297
    8. 'k' → logprob: -8.400768280029297
    9. ' ' → logprob: -9.650768280029297
    10. 'index' → logprob: -9.900768280029297

Token 271: ' rang' (ID: 32287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0437750406563282
    2. '_' → logprob: -3.9187750816345215
    3. ' i' → logprob: -4.4187750816345215
    4. 'index' → logprob: -4.7937750816345215
    5. '_i' → logprob: -7.1687750816345215
    6. 'indice' → logprob: -7.5437750816345215
    7. 'position' → logprob: -8.168774604797363
    8. ' index' → logprob: -8.543774604797363
    9. '0' → logprob: -8.668774604797363
    10. 'j' → logprob: -9.043774604797363

Token 272: ' si' (ID: 1784)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.019537603482604027
    2. 'e' → logprob: -4.269537448883057
    3. ' i' → logprob: -5.519537448883057
    4. ' ' → logprob: -7.644537448883057
    5. ' e' → logprob: -7.894537448883057
    6. 'é' → logprob: -8.644537925720215
    7. 'i' → logprob: -9.894537925720215
    8. '   ' → logprob: -9.894537925720215
    9. 'ee' → logprob: -10.144537925720215
    10. '  ' → logprob: -10.269537925720215

Token 273: ' un' (ID: 537)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.1289408951997757
    2. ' path' → logprob: -3.5039408206939697
    3. 'l' → logprob: -3.7539408206939697
    4. 'on' → logprob: -3.7539408206939697
    5. 'value' → logprob: -4.628941059112549
    6. ' on' → logprob: -4.628941059112549
    7. 'i' → logprob: -4.878941059112549
    8. '0' → logprob: -5.628941059112549
    9. 'le' → logprob: -6.253941059112549
    10. 's' → logprob: -6.253941059112549

Token 274: ' chemin' (ID: 45035)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8545921444892883
    2. '1' → logprob: -1.3545920848846436
    3. 'aj' → logprob: -1.6045920848846436
    4. 'pas' → logprob: -3.2295920848846436
    5. 'élé' → logprob: -4.229592323303223
    6. ' pas' → logprob: -4.479592323303223
    7. ' ' → logprob: -4.479592323303223
    8. 'add' → logprob: -4.854592323303223
    9. 'bit' → logprob: -5.229592323303223
    10. ' ajout' → logprob: -5.729592323303223

Token 275: ' alternatif' (ID: 144363)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.5006427764892578
    2. ' est' → logprob: -2.500642776489258
    3. '   ' → logprob: -2.750642776489258
    4. '[' → logprob: -2.750642776489258
    5. ' ' → logprob: -2.750642776489258
    6. ' '' → logprob: -3.125642776489258
    7. ' "' → logprob: -3.125642776489258
    8. ' =' → logprob: -3.250642776489258
    9. ' à' → logprob: -3.500642776489258
    10. '_' → logprob: -3.625642776489258

Token 276: ' doit' (ID: 21822)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9499419927597046
    2. ' est' → logprob: -1.0749419927597046
    3. 'a' → logprob: -1.8249419927597046
    4. 'est' → logprob: -3.699942111968994
    5. ' à' → logprob: -4.074942111968994
    6. ' was' → logprob: -4.574942111968994
    7. '[' → logprob: -4.699942111968994
    8. ' ou' → logprob: -5.074942111968994
    9. ' était' → logprob: -5.199942111968994
    10. '#' → logprob: -5.324942111968994

Token 277: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.3969176113605499
    2. 'être' → logprob: -1.1469175815582275
    3. ' etre' → logprob: -6.146917819976807
    4. ' be' → logprob: -6.271917819976807
    5. 'etre' → logprob: -7.021917819976807
    6. 'êtres' → logprob: -7.146917819976807
    7. ' ' → logprob: -7.271917819976807
    8. 's' → logprob: -7.271917819976807
    9. 'ê' → logprob: -7.396917819976807
    10. ''être' → logprob: -8.146917343139648

Token 278: ' ajouté' (ID: 127784)
  Prédit: ' pris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pris' → logprob: -1.0773999691009521
    2. ' empr' → logprob: -1.5773999691009521
    3. 'pris' → logprob: -1.5773999691009521
    4. 'taken' → logprob: -2.577399969100952
    5. ' taken' → logprob: -2.952399969100952
    6. ' ajouté' → logprob: -3.327399969100952
    7. '[]' → logprob: -3.827399969100952
    8. 'aj' → logprob: -4.202400207519531
    9. '1' → logprob: -4.952400207519531
    10. 'True' → logprob: -4.952400207519531

Token 279: ' (' (ID: 350)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.01043243333697319
    2. ' path' → logprob: -4.635432243347168
    3. '
' → logprob: -7.510432243347168
    4. '[' → logprob: -10.385432243347168
    5. ',' → logprob: -11.135432243347168
    6. '_path' → logprob: -11.135432243347168
    7. '[path' → logprob: -11.260432243347168
    8. '#' → logprob: -11.760432243347168
    9. '```' → logprob: -12.260432243347168
    10. '(path' → logprob: -12.385432243347168

Token 280: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5258364081382751
    2. '0' → logprob: -1.40083646774292
    3. ' )' → logprob: -2.27583646774292
    4. '1' → logprob: -3.27583646774292
    5. ' ' → logprob: -4.02583646774292
    6. ',' → logprob: -6.52583646774292
    7. '[' → logprob: -7.40083646774292
    8. 'True' → logprob: -8.025835990905762
    9. ' )
' → logprob: -8.275835990905762
    10. 'False' → logprob: -8.275835990905762

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18345744907855988
    2. ',' → logprob: -2.183457374572754
    3. ' else' → logprob: -3.308457374572754
    4. ' or' → logprob: -4.558457374572754
    5. 'else' → logprob: -5.433457374572754
    6. ')
' → logprob: -6.933457374572754
    7. ' )' → logprob: -7.058457374572754
    8. ' if' → logprob: -8.308457374572754
    9. ' ' → logprob: -8.308457374572754
    10. ':' → logprob: -8.933457374572754

Token 282: ' ou' (ID: 2031)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.12859326601028442
    2. ' path' → logprob: -2.7535932064056396
    3. ',' → logprob: -3.2535932064056396
    4. ',path' → logprob: -5.378593444824219
    5. '[' → logprob: -5.628593444824219
    6. '
' → logprob: -5.878593444824219
    7. '[path' → logprob: -6.003593444824219
    8. '_path' → logprob: -6.753593444824219
    9. ']' → logprob: -7.378593444824219
    10. '#' → logprob: -7.753593444824219

Token 283: ' non' (ID: 2893)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2660813331604004
    2. ' not' → logprob: -2.1410813331604004
    3. 'not' → logprob: -2.8910813331604004
    4. 'non' → logprob: -4.0160813331604
    5. ' non' → logprob: -4.3910813331604
    6. 'pas' → logprob: -4.5160813331604
    7. ' pas' → logprob: -4.6410813331604
    8. ' ' → logprob: -4.8910813331604
    9. '#' → logprob: -6.7660813331604
    10. 'rest' → logprob: -8.016080856323242

Token 284: ' (' (ID: 350)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0001757696009008214
    2. ' path' → logprob: -9.000175476074219
    3. '
' → logprob: -10.000175476074219
    4. '#' → logprob: -13.250175476074219
    5. '(path' → logprob: -13.625175476074219
    6. '```' → logprob: -14.125175476074219
    7. '_path' → logprob: -14.375175476074219
    8. ',' → logprob: -14.875175476074219
    9. ',path' → logprob: -15.250175476074219
    10. 'pat' → logprob: -15.375175476074219

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031901898328214884
    2. ' ' → logprob: -6.003190040588379
    3. ')' → logprob: -7.253190040588379
    4. ' )' → logprob: -12.503190040588379
    5. ')
' → logprob: -13.503190040588379
    6. ',' → logprob: -13.878190040588379
    7. '   ' → logprob: -15.878190040588379
    8. ' )
' → logprob: -16.128190994262695
    9. '
' → logprob: -17.253190994262695
    10. '  ' → logprob: -17.753190994262695

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11309477686882019
    2. ')
' → logprob: -2.2380948066711426
    3. ' )' → logprob: -9.488094329833984
    4. '#' → logprob: -9.988094329833984
    5. ')
' → logprob: -9.988094329833984
    6. ' )
' → logprob: -10.238094329833984
    7. ')

' → logprob: -10.613094329833984
    8. ').' → logprob: -11.363094329833984
    9. ')#' → logprob: -11.738094329833984
    10. '):
' → logprob: -12.363094329833984

Token 287: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -5.512236498361744e-07
    2. ' path' → logprob: -14.500000953674316
    3. '#' → logprob: -18.5
    4. '```' → logprob: -19.125
    5. '_path' → logprob: -19.25
    6. 'Path' → logprob: -19.375
    7. '"path' → logprob: -19.875
    8. '
' → logprob: -19.875
    9. '(path' → logprob: -20.75
    10. '	path' → logprob: -21.0

Token 288: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.3856492842023727e-06
    2. '_ad' → logprob: -14.625000953674316
    3. '_' → logprob: -14.875000953674316
    4. ' _' → logprob: -15.250000953674316
    5. '_added' → logprob: -16.250001907348633
    6. '_append' → logprob: -16.625001907348633
    7. '=_' → logprob: -18.250001907348633
    8. '_a' → logprob: -18.375001907348633
    9. '_path' → logprob: -18.375001907348633
    10. ')_' → logprob: -18.750001907348633

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687393069267273
    2. '=' → logprob: -1.1368739604949951
    3. ' ' → logprob: -14.136874198913574
    4. '[' → logprob: -14.136874198913574
    5. 's' → logprob: -15.261874198913574
    6. ')' → logprob: -15.511874198913574
    7. ']' → logprob: -15.511874198913574
    8. '=[' → logprob: -15.636874198913574
    9. '=[]' → logprob: -15.761874198913574
    10. '_' → logprob: -15.761874198913574

Token 290: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602250337600708
    2. ' [' → logprob: -1.9102250337600708
    3. '[n' → logprob: -14.035224914550781
    4. '[m' → logprob: -16.28522491455078
    5. '0' → logprob: -17.91022491455078
    6. ' ' → logprob: -18.16022491455078
    7. ' ' → logprob: -18.66022491455078
    8. '   ' → logprob: -19.66022491455078
    9. '([' → logprob: -19.66022491455078
    10. '[i' → logprob: -21.03522491455078

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -21.5
    4. '۰' → logprob: -23.125
    5. '00' → logprob: -23.25
    6. '000' → logprob: -24.0
    7. '  ' → logprob: -24.75
    8. '```' → logprob: -25.0
    9. '０' → logprob: -25.125
    10. ']' → logprob: -25.625

Token 292: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018157173180952668
    2. ' ]' → logprob: -7.1268157958984375
    3. ' for' → logprob: -7.3768157958984375
    4. ']*' → logprob: -8.001815795898438
    5. 'for' → logprob: -10.626815795898438
    6. ']*(' → logprob: -10.876815795898438
    7. ')' → logprob: -12.376815795898438
    8. ')]' → logprob: -13.001815795898438
    9. '}' → logprob: -15.501815795898438
    10. ']+' → logprob: -15.876815795898438

Token 293: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00046928023220971227
    2. ' _' → logprob: -7.750469207763672
    3. '_range' → logprob: -10.625469207763672
    4. '_i' → logprob: -12.000469207763672
    5. 'i' → logprob: -12.500469207763672
    6. ' i' → logprob: -13.125469207763672
    7. ' range' → logprob: -13.625469207763672
    8. '_j' → logprob: -14.625469207763672
    9. 'range' → logprob: -14.750469207763672
    10. '_=' → logprob: -16.125469207763672

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10036421567201614
    2. 'in' → logprob: -2.3503642082214355
    3. 'range' → logprob: -9.100364685058594
    4. '(range' → logprob: -11.100364685058594
    5. ' ' → logprob: -11.475364685058594
    6. ' range' → logprob: -11.600364685058594
    7. ')' → logprob: -12.225364685058594
    8. '(' → logprob: -13.225364685058594
    9. '_' → logprob: -14.475364685058594
    10. ']' → logprob: -14.600364685058594

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858805239200592
    2. ' range' → logprob: -3.0485880374908447
    3. '(range' → logprob: -14.923587799072266
    4. ' ' → logprob: -15.673587799072266
    5. '	range' → logprob: -16.048587799072266
    6. 'rang' → logprob: -16.798587799072266
    7. ']' → logprob: -17.173587799072266
    8. ')' → logprob: -18.048587799072266
    9. '  ' → logprob: -18.173587799072266
    10. '   ' → logprob: -18.423587799072266

Token 296: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012803568970412016
    2. '(range' → logprob: -7.376280307769775
    3. '(m' → logprob: -7.751280307769775
    4. '(' → logprob: -8.626280784606934
    5. 'range' → logprob: -10.376280784606934
    6. ' range' → logprob: -12.126280784606934
    7. ' (' → logprob: -12.376280784606934
    8. '((' → logprob: -12.751280784606934
    9. 'Range' → logprob: -16.376279830932617
    10. '(s' → logprob: -17.126279830932617

Token 297: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09209053963422775
    2. ' -' → logprob: -2.717090606689453
    3. ')]' → logprob: -3.842090606689453
    4. '1' → logprob: -7.842090606689453
    5. ')' → logprob: -10.342090606689453
    6. '   ' → logprob: -11.842090606689453
    7. ' )' → logprob: -11.967090606689453
    8. ')])' → logprob: -12.467090606689453
    9. '()-' → logprob: -12.592090606689453
    10. '(' → logprob: -12.592090606689453

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. ')' → logprob: -16.25020408630371
    5. '```' → logprob: -16.62520408630371
    6. '  ' → logprob: -17.93770408630371
    7. '-' → logprob: -18.06270408630371
    8. '１' → logprob: -18.31270408630371
    9. '2' → logprob: -18.62520408630371
    10. '(' → logprob: -18.75020408630371

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -15.875041007995605
    4. '2' → logprob: -16.12504005432129
    5. '   ' → logprob: -16.12504005432129
    6. '```' → logprob: -16.93754005432129
    7. '１' → logprob: -17.25004005432129
    8. '۱' → logprob: -17.50004005432129
    9. ')]' → logprob: -17.62504005432129
    10. '0' → logprob: -17.68754005432129

Token 300: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007176732178777456
    2. ']' → logprob: -7.250717639923096
    3. ' ]' → logprob: -12.000718116760254
    4. '}]' → logprob: -14.375718116760254
    5. ')' → logprob: -15.375718116760254
    6. '])]' → logprob: -15.500718116760254
    7. '()]' → logprob: -16.125717163085938
    8. '])' → logprob: -16.250717163085938
    9. ' }]' → logprob: -16.500717163085938
    10. '>]' → logprob: -16.625717163085938

Token 301: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19933132827281952
    2. 'i' → logprob: -2.074331283569336
    3. '#' → logprob: -3.824331283569336
    4. ' for' → logprob: -4.449331283569336
    5. '<|end|>' → logprob: -4.574331283569336
    6. 'f' → logprob: -5.574331283569336
    7. '
' → logprob: -5.949331283569336
    8. 'n' → logprob: -6.199331283569336
    9. ' ' → logprob: -7.574331283569336
    10. 's' → logprob: -7.824331283569336

Token 302: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000983508420176804
    2. 'if' → logprob: -8.000983238220215
    3. 'i' → logprob: -8.500983238220215
    4. 'while' → logprob: -8.500983238220215
    5. 'def' → logprob: -9.500983238220215
    6. '#' → logprob: -9.500983238220215
    7. 'print' → logprob: -10.500983238220215
    8. 's' → logprob: -10.750983238220215
    9. 'j' → logprob: -11.500983238220215
    10. 'index' → logprob: -11.625983238220215

Token 303: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16082678735256195
    2. ' for' → logprob: -1.9108268022537231
    3. ' =' → logprob: -8.785826683044434
    4. '=' → logprob: -9.535826683044434
    5. 's' → logprob: -9.535826683044434
    6. '#' → logprob: -9.785826683044434
    7. 'range' → logprob: -10.410826683044434
    8. 'def' → logprob: -10.410826683044434
    9. 'r' → logprob: -10.660826683044434
    10. 'f' → logprob: -10.910826683044434

Token 304: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5573477149009705
    2. ' une' → logprob: -0.9323477149009705
    3. ' la' → logprob: -4.807347774505615
    4. 'la' → logprob: -5.057347774505615
    5. 'a' → logprob: -5.182347774505615
    6. ' un' → logprob: -5.557347774505615
    7. 'path' → logprob: -5.682347774505615
    8. 'un' → logprob: -6.057347774505615
    9. '[]' → logprob: -6.807347774505615
    10. '[' → logprob: -6.807347774505615

Token 305: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8895958065986633
    2. 'path' → logprob: -1.7645957469940186
    3. 'list' → logprob: -2.0145957469940186
    4. 'range' → logprob: -2.5145957469940186
    5. 'def' → logprob: -2.6395957469940186
    6. ' for' → logprob: -3.2645957469940186
    7. 'liste' → logprob: -3.5145957469940186
    8. 'queue' → logprob: -5.014595985412598
    9. ' path' → logprob: -5.014595985412598
    10. 'new' → logprob: -5.264595985412598

Token 306: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3136393427848816
    2. ' path' → logprob: -1.5636394023895264
    3. 'steps' → logprob: -3.5636394023895264
    4. ' steps' → logprob: -5.438639163970947
    5. 'result' → logprob: -5.563639163970947
    6. 'value' → logprob: -5.938639163970947
    7. 'distance' → logprob: -6.438639163970947
    8. 's' → logprob: -6.688639163970947
    9. 'paths' → logprob: -6.688639163970947
    10. 'range' → logprob: -6.688639163970947

Token 307: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.33892711997032166
    2. '_bits' → logprob: -3.3389270305633545
    3. '_remove' → logprob: -3.4639270305633545
    4. '_len' → logprob: -3.4639270305633545
    5. '_path' → logprob: -3.9639270305633545
    6. '_length' → logprob: -4.213927268981934
    7. '_value' → logprob: -4.338927268981934
    8. '_sub' → logprob: -4.963927268981934
    9. '_val' → logprob: -5.088927268981934
    10. '_mult' → logprob: -5.088927268981934

Token 308: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07053638994693756
    2. '2' → logprob: -3.4455363750457764
    3. '=' → logprob: -3.5705363750457764
    4. '[' → logprob: -6.1955366134643555
    5. 'for' → logprob: -7.3205366134643555
    6. '_path' → logprob: -7.9455366134643555
    7. '.append' → logprob: -8.070536613464355
    8. '_' → logprob: -8.070536613464355
    9. '_values' → logprob: -8.070536613464355
    10. '=[' → logprob: -8.320536613464355

Token 309: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04866287484765053
    2. '=' → logprob: -3.0486629009246826
    3. '=[' → logprob: -9.923663139343262
    4. '[' → logprob: -11.048663139343262
    5. '=[]' → logprob: -11.923663139343262
    6. ' =[' → logprob: -12.798663139343262
    7. ' [' → logprob: -14.798663139343262
    8. '=[]
' → logprob: -15.423663139343262
    9. ' ' → logprob: -15.548663139343262
    10. '[]' → logprob: -16.048662185668945

Token 310: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33224284648895264
    2. '[n' → logprob: -1.4572428464889526
    3. '[m' → logprob: -3.207242965698242
    4. ' [' → logprob: -4.707242965698242
    5. '[i' → logprob: -9.457242965698242
    6. '0' → logprob: -9.582242965698242
    7. '[size' → logprob: -10.207242965698242
    8. '[-' → logprob: -10.332242965698242
    9. '[len' → logprob: -10.707242965698242
    10. 'm' → logprob: -11.332242965698242

Token 311: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8377395272254944
    2. '(n' → logprob: -1.2127394676208496
    3. ' n' → logprob: -1.4627394676208496
    4. ' (' → logprob: -3.8377394676208496
    5. 'm' → logprob: -4.21273946762085
    6. ' m' → logprob: -6.71273946762085
    7. '(m' → logprob: -8.212739944458008
    8. '(' → logprob: -8.337739944458008
    9. '0' → logprob: -8.962739944458008
    10. ' ' → logprob: -10.212739944458008

Token 312: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006754324771463871
    2. ' -' → logprob: -5.131754398345947
    3. '[' → logprob: -7.381754398345947
    4. 'for' → logprob: -9.131753921508789
    5. ' for' → logprob: -10.006753921508789
    6. ' [' → logprob: -10.756753921508789
    7. 'n' → logprob: -11.881753921508789
    8. 'm' → logprob: -12.006753921508789
    9. '[n' → logprob: -12.381753921508789
    10. ' ' → logprob: -13.006753921508789

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010807292710524052
    2. ' ' → logprob: -9.375107765197754
    3. '2' → logprob: -11.125107765197754
    4. '(' → logprob: -13.125107765197754
    5. '```' → logprob: -13.375107765197754
    6. '<|end|>' → logprob: -13.500107765197754
    7. '   ' → logprob: -13.875107765197754
    8. '-' → logprob: -14.625107765197754
    9. '[' → logprob: -15.000107765197754
    10. 'for' → logprob: -15.500107765197754

Token 314: ' rempl' (ID: 66326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3357487916946411
    2. '[' → logprob: -1.8357487916946411
    3. '=' → logprob: -2.0857486724853516
    4. '=[' → logprob: -6.710748672485352
    5. '[path' → logprob: -9.585748672485352
    6. ' [' → logprob: -9.710748672485352
    7. 'for' → logprob: -9.835748672485352
    8. '[value' → logprob: -10.335748672485352
    9. ' for' → logprob: -11.710748672485352
    10. ' =[' → logprob: -12.335748672485352

Token 315: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -5.3358446166384965e-05
    2. ' ie' → logprob: -11.125053405761719
    3. 'lie' → logprob: -11.875053405761719
    4. 'i' → logprob: -12.000053405761719
    5. 'ée' → logprob: -12.250053405761719
    6. 'cie' → logprob: -12.625053405761719
    7. 'ue' → logprob: -12.750053405761719
    8. 'die' → logprob: -12.875053405761719
    9. 'ied' → logprob: -13.500053405761719
    10. 'ies' → logprob: -13.625053405761719

Token 316: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3746202290058136
    2. '(' → logprob: -1.8746201992034912
    3. 'de' → logprob: -1.9996201992034912
    4. '[' → logprob: -4.24962043762207
    5. '(n' → logprob: -4.99962043762207
    6. '[n' → logprob: -7.24962043762207
    7. ' of' → logprob: -7.62462043762207
    8. 'of' → logprob: -7.87462043762207
    9. 'd' → logprob: -8.12462043762207
    10. 'import' → logprob: -8.74962043762207

Token 317: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04003209248185158
    2. '[' → logprob: -3.290032148361206
    3. ' ' → logprob: -7.040031909942627
    4. 'zeros' → logprob: -7.165031909942627
    5. ' [' → logprob: -8.665032386779785
    6. ' zeros' → logprob: -8.915032386779785
    7. '(' → logprob: -11.790032386779785
    8. 's' → logprob: -12.040032386779785
    9. 'n' → logprob: -13.165032386779785
    10. '[n' → logprob: -13.415032386779785

Token 318: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.002041533123701811
    2. 'eros' → logprob: -6.252041339874268
    3. 'é' → logprob: -9.627041816711426
    4. 'éro' → logprob: -11.252041816711426
    5. '[' → logprob: -11.502041816711426
    6. '0' → logprob: -11.877041816711426
    7. 'ros' → logprob: -12.502041816711426
    8. '(' → logprob: -12.877041816711426
    9. '#' → logprob: -13.002041816711426
    10. 'ér' → logprob: -13.502041816711426

Token 319: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18339097499847412
    2. '=' → logprob: -2.0583910942077637
    3. 'for' → logprob: -3.4333910942077637
    4. ' for' → logprob: -5.808391094207764
    5. 'path' → logprob: -5.933391094207764
    6. '[' → logprob: -6.683391094207764
    7. '=[' → logprob: -7.433391094207764
    8. '[path' → logprob: -9.933390617370605
    9. '
' → logprob: -10.933390617370605
    10. ' ' → logprob: -11.433390617370605

Token 320: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6967995166778564
    2. 'path' → logprob: -1.4467995166778564
    3. 'for' → logprob: -1.9467995166778564
    4. ' for' → logprob: -2.3217995166778564
    5. ' =' → logprob: -4.321799278259277
    6. '[path' → logprob: -5.071799278259277
    7. '=' → logprob: -6.071799278259277
    8. ' path' → logprob: -6.571799278259277
    9. '=[' → logprob: -7.196799278259277
    10. '#' → logprob: -7.696799278259277

Token 321: ' Cette' (ID: 27383)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0001673061487963423
    2. ' path' → logprob: -9.000166893005371
    3. '[' → logprob: -10.500166893005371
    4. '[path' → logprob: -11.625166893005371
    5. 'for' → logprob: -12.125166893005371
    6. '
' → logprob: -15.000166893005371
    7. 's' → logprob: -15.125166893005371
    8. ' for' → logprob: -15.250166893005371
    9. '[i' → logprob: -15.250166893005371
    10. '#' → logprob: -15.250166893005371

Token 322: ' liste' (ID: 31719)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.012932672165334225
    2. ' path' → logprob: -5.137932777404785
    3. 'for' → logprob: -5.637932777404785
    4. '[' → logprob: -6.387932777404785
    5. 'value' → logprob: -7.262932777404785
    6. '[path' → logprob: -7.637932777404785
    7. ' for' → logprob: -8.387932777404785
    8. '_path' → logprob: -9.012932777404785
    9. '#' → logprob: -9.762932777404785
    10. '0' → logprob: -10.387932777404785

Token 323: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.127378448843956
    2. ' =' → logprob: -2.127378463745117
    3. 'for' → logprob: -8.377378463745117
    4. ' for' → logprob: -9.377378463745117
    5. '<|end|>' → logprob: -9.502378463745117
    6. '[' → logprob: -10.752378463745117
    7. '=[' → logprob: -10.752378463745117
    8. '=[]' → logprob: -12.252378463745117
    9. ' =[' → logprob: -13.127378463745117
    10. '#' → logprob: -13.252378463745117

Token 324: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9981510043144226
    2. 'in' → logprob: -1.3731510639190674
    3. 'ient' → logprob: -1.3731510639190674
    4. 'inue' → logprob: -3.3731510639190674
    5. '[' → logprob: -3.7481510639190674
    6. 'ent' → logprob: -3.7481510639190674
    7. '=[' → logprob: -4.248150825500488
    8. 'i' → logprob: -4.498150825500488
    9. '#' → logprob: -5.248150825500488
    10. 'ine' → logprob: -5.373150825500488

Token 325: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07579122483730316
    2. 'nu' → logprob: -3.575791120529175
    3. 'ent' → logprob: -4.200791358947754
    4. 'nent' → logprob: -4.325791358947754
    5. '[n' → logprob: -5.325791358947754
    6. '[' → logprob: -5.450791358947754
    7. 'nt' → logprob: -6.575791358947754
    8. 'ue' → logprob: -7.075791358947754
    9. 't' → logprob: -7.200791358947754
    10. '#' → logprob: -7.325791358947754

Token 326: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00219273311085999
    2. ' [' → logprob: -6.377192497253418
    3. '0' → logprob: -8.002192497253418
    4. '[i' → logprob: -10.127192497253418
    5. 's' → logprob: -10.627192497253418
    6. '[n' → logprob: -10.752192497253418
    7. '[m' → logprob: -11.002192497253418
    8. '[s' → logprob: -11.127192497253418
    9. 'value' → logprob: -11.627192497253418
    10. '[value' → logprob: -11.752192497253418

Token 327: ' valeurs' (ID: 73668)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3032713234424591
    2. 'val' → logprob: -1.9282712936401367
    3. 'values' → logprob: -3.1782712936401367
    4. 'path' → logprob: -3.9282712936401367
    5. '[val' → logprob: -4.178271293640137
    6. '[path' → logprob: -4.678271293640137
    7. '0' → logprob: -4.928271293640137
    8. '[i' → logprob: -5.053271293640137
    9. ' [' → logprob: -5.428271293640137
    10. ' valeurs' → logprob: -5.928271293640137

Token 328: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03536766767501831
    2. 'for' → logprob: -4.035367488861084
    3. 'path' → logprob: -4.910367488861084
    4. '0' → logprob: -5.285367488861084
    5. 'pour' → logprob: -6.785367488861084
    6. '[path' → logprob: -6.785367488861084
    7. ' for' → logprob: -7.035367488861084
    8. ' [' → logprob: -7.535367488861084
    9. '[i' → logprob: -8.160367965698242
    10. ' path' → logprob: -8.285367965698242

Token 329: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.01463751308619976
    2. '0' → logprob: -4.639637470245361
    3. 'add' → logprob: -6.139637470245361
    4. '[' → logprob: -7.014637470245361
    5. ' ajouter' → logprob: -7.014637470245361
    6. 'Ajouter' → logprob: -7.389637470245361
    7. 'addition' → logprob: -9.63963794708252
    8. ' ' → logprob: -10.38963794708252
    9. '   ' → logprob: -10.38963794708252
    10. 'aff' → logprob: -10.51463794708252

Token 330: ' aux' (ID: 5850)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0632721558213234
    2. ' for' → logprob: -3.31327223777771
    3. '[' → logprob: -4.313271999359131
    4. 'path' → logprob: -5.438271999359131
    5. ' =' → logprob: -5.813271999359131
    6. '
' → logprob: -6.188271999359131
    7. '[path' → logprob: -6.938271999359131
    8. ' pour' → logprob: -8.563272476196289
    9. ' [' → logprob: -8.813272476196289
    10. '=' → logprob: -9.313272476196289

Token 331: ' chemins' (ID: 192063)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.029571007937192917
    2. ' path' → logprob: -3.779571056365967
    3. '[' → logprob: -6.279571056365967
    4. '0' → logprob: -6.529571056365967
    5. '[path' → logprob: -6.529571056365967
    6. '[i' → logprob: -8.404570579528809
    7. ' ' → logprob: -8.529570579528809
    8. '1' → logprob: -9.029570579528809
    9. 's' → logprob: -9.029570579528809
    10. 'i' → logprob: -9.279570579528809

Token 332: ' altern' (ID: 7310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3193727433681488
    2. '
' → logprob: -2.5693726539611816
    3. ' =' → logprob: -2.5693726539611816
    4. ' for' → logprob: -2.6943726539611816
    5. '[' → logprob: -3.5693726539611816
    6. '.' → logprob: -5.444372653961182
    7. '=' → logprob: -5.444372653961182
    8. 'path' → logprob: -5.569372653961182
    9. '#' → logprob: -6.069372653961182
    10. '<|end|>' → logprob: -6.444372653961182

Token 333: 'atifs' (ID: 66205)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3824220597743988
    2. 'es' → logprob: -1.8824220895767212
    3. 'e' → logprob: -2.6324219703674316
    4. 'for' → logprob: -3.2574219703674316
    5. '=' → logprob: -4.007421970367432
    6. '   ' → logprob: -4.757421970367432
    7. '_' → logprob: -4.882421970367432
    8. '#' → logprob: -5.757421970367432
    9. '[i' → logprob: -5.757421970367432
    10. ']' → logprob: -5.882421970367432

Token 334: ' correspond' (ID: 11095)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4980766177177429
    2. ' =' → logprob: -1.2480766773223877
    3. '
' → logprob: -2.9980766773223877
    4. '=' → logprob: -3.9980766773223877
    5. '[path' → logprob: -4.123076438903809
    6. '[' → logprob: -4.248076438903809
    7. 'for' → logprob: -6.373076438903809
    8. ' path' → logprob: -6.998076438903809
    9. '#' → logprob: -7.123076438903809
    10. '_path' → logprob: -7.373076438903809

Token 335: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.45708930492401123
    2. 'ant' → logprob: -1.2070893049240112
    3. 'ent' → logprob: -3.707089424133301
    4. '[' → logprob: -4.207089424133301
    5. 'ants' → logprob: -4.457089424133301
    6. '0' → logprob: -5.207089424133301
    7. 'aux' → logprob: -5.957089424133301
    8. '   ' → logprob: -6.457089424133301
    9. '=' → logprob: -6.707089424133301
    10. 'ing' → logprob: -6.957089424133301

Token 336: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.002296801656484604
    2. ' =' → logprob: -6.6272969245910645
    3. '=' → logprob: -7.8772969245910645
    4. '
' → logprob: -8.002296447753906
    5. '[path' → logprob: -9.127296447753906
    6. 'for' → logprob: -9.502296447753906
    7. ' path' → logprob: -10.502296447753906
    8. '[' → logprob: -10.627296447753906
    9. '(path' → logprob: -12.502296447753906
    10. '_path' → logprob: -12.752296447753906

Token 337: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -9.93710636976175e-05
    2. ' path' → logprob: -9.625099182128906
    3. '
' → logprob: -10.750099182128906
    4. '[path' → logprob: -12.500099182128906
    5. '[' → logprob: -12.750099182128906
    6. '_path' → logprob: -13.625099182128906
    7. 'for' → logprob: -14.000099182128906
    8. 's' → logprob: -14.500099182128906
    9. 'pat' → logprob: -14.750099182128906
    10. '```' → logprob: -14.875099182128906

Token 338: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -2.45848218582978e-06
    2. '_append' → logprob: -13.75000286102295
    3. '_' → logprob: -14.25000286102295
    4. '_ad' → logprob: -15.50000286102295
    5. '_Add' → logprob: -16.125001907348633
    6. '_added' → logprob: -16.625001907348633
    7. '_write' → logprob: -17.000001907348633
    8. ' _' → logprob: -17.250001907348633
    9. '_insert' → logprob: -17.625001907348633
    10. '_ADD' → logprob: -18.000001907348633

Token 339: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.01510506309568882
    2. '_' → logprob: -4.765105247497559
    3. '=' → logprob: -5.890105247497559
    4. '_val' → logprob: -6.515105247497559
    5. '_values' → logprob: -6.640105247497559
    6. ' =' → logprob: -7.015105247497559
    7. '_=' → logprob: -11.765105247497559
    8. '_Value' → logprob: -13.015105247497559
    9. '=[' → logprob: -13.140105247497559
    10. '=_' → logprob: -13.515105247497559

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740968942642212
    2. '=' → logprob: -0.9740968942642212
    3. '=[' → logprob: -10.97409725189209
    4. ' =[' → logprob: -13.47409725189209
    5. '[' → logprob: -14.09909725189209
    6. ' ' → logprob: -14.97409725189209
    7. '=[]' → logprob: -15.34909725189209
    8. '＝' → logprob: -17.099096298217773
    9. '=[]
' → logprob: -18.099096298217773
    10. '   ' → logprob: -18.474096298217773

Token 341: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1269291490316391
    2. ' [' → logprob: -2.1269290447235107
    3. '[n' → logprob: -15.00192928314209
    4. ' ' → logprob: -15.25192928314209
    5. '[m' → logprob: -15.62692928314209
    6. '[s' → logprob: -16.001928329467773
    7. ' ' → logprob: -16.751928329467773
    8. '   ' → logprob: -16.876928329467773
    9. '0' → logprob: -17.001928329467773
    10. '[i' → logprob: -17.126928329467773

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. 's' → logprob: -15.125017166137695
    4. '   ' → logprob: -16.250017166137695
    5. '00' → logprob: -17.125017166137695
    6. '  ' → logprob: -17.125017166137695
    7. 'for' → logprob: -17.437517166137695
    8. ')' → logprob: -17.500017166137695
    9. '۰' → logprob: -17.562517166137695
    10. '1' → logprob: -17.562517166137695

Token 343: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04860009253025055
    2. 'for' → logprob: -3.048600196838379
    3. '	for' → logprob: -12.048600196838379
    4. ' ' → logprob: -12.173600196838379
    5. ']' → logprob: -13.673600196838379
    6. ')' → logprob: -15.048600196838379
    7. '   ' → logprob: -15.798600196838379
    8. '  ' → logprob: -17.548599243164062
    9. ' ' → logprob: -17.923599243164062
    10. '0' → logprob: -18.048599243164062

Token 344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015109176747500896
    2. ' i' → logprob: -4.390109062194824
    3. 'range' → logprob: -6.640109062194824
    4. ' range' → logprob: -7.140109062194824
    5. '_' → logprob: -7.765109062194824
    6. ' _' → logprob: -10.265109062194824
    7. '_i' → logprob: -11.390109062194824
    8. '   ' → logprob: -11.515109062194824
    9. ' ' → logprob: -12.015109062194824
    10. '  ' → logprob: -13.390109062194824

Token 345: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3484826385974884
    2. 'in' → logprob: -1.223482608795166
    3. '(n' → logprob: -10.973483085632324
    4. 'range' → logprob: -11.598483085632324
    5. ' ' → logprob: -12.723483085632324
    6. 'i' → logprob: -13.723483085632324
    7. '(' → logprob: -14.098483085632324
    8. ' i' → logprob: -14.098483085632324
    9. '(i' → logprob: -14.098483085632324
    10. ')' → logprob: -14.098483085632324

Token 346: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164221473038197
    2. ' range' → logprob: -4.264164447784424
    3. '(range' → logprob: -14.764163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '   ' → logprob: -16.389163970947266
    6. '  ' → logprob: -17.639163970947266
    7. 'rang' → logprob: -17.764163970947266
    8. 'path' → logprob: -17.889163970947266
    9. '	range' → logprob: -18.014163970947266
    10. 'ran' → logprob: -19.014163970947266

Token 347: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004144642036408186
    2. ' (' → logprob: -5.504144668579102
    3. '(' → logprob: -10.254144668579102
    4. 'n' → logprob: -10.629144668579102
    5. ' n' → logprob: -12.129144668579102
    6. '   ' → logprob: -14.879144668579102
    7. ' ' → logprob: -15.379144668579102
    8. '(len' → logprob: -15.629144668579102
    9. 'range' → logprob: -15.629144668579102
    10. 'm' → logprob: -16.3791446685791

Token 348: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28159958124160767
    2. '-' → logprob: -1.406599521636963
    3. ')' → logprob: -8.906599998474121
    4. ' ' → logprob: -9.031599998474121
    5. '   ' → logprob: -9.281599998474121
    6. ')]' → logprob: -9.531599998474121
    7. ')])' → logprob: -11.781599998474121
    8. '  ' → logprob: -12.406599998474121
    9. '(' → logprob: -12.781599998474121
    10. ' )' → logprob: -13.031599998474121

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044258590787649155
    2. ' ' → logprob: -7.7504425048828125
    3. '<|end|>' → logprob: -12.000442504882812
    4. '   ' → logprob: -12.875442504882812
    5. ')' → logprob: -13.375442504882812
    6. '<|end|>' → logprob: -14.875442504882812
    7. '-' → logprob: -15.562942504882812
    8. '...' → logprob: -15.750442504882812
    9. '2' → logprob: -15.750442504882812
    10. '```' → logprob: -15.875442504882812

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. '-' → logprob: -15.1251802444458
    4. '   ' → logprob: -15.2501802444458
    5. ')' → logprob: -15.5001802444458
    6. '(' → logprob: -15.8751802444458
    7. '```' → logprob: -16.937681198120117
    8. ' -' → logprob: -17.437681198120117
    9. '  ' → logprob: -17.625181198120117
    10. '<|end|>' → logprob: -17.812681198120117

Token 351: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07893595099449158
    2. ']' → logprob: -2.5789358615875244
    3. ')' → logprob: -10.453935623168945
    4. '])' → logprob: -12.328935623168945
    5. ' ]' → logprob: -12.453935623168945
    6. ']
' → logprob: -12.703935623168945
    7. '}]' → logprob: -13.453935623168945
    8. '])]' → logprob: -13.578935623168945
    9. ')]
' → logprob: -13.703935623168945
    10. '()]' → logprob: -14.078935623168945

Token 352: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13422943651676178
    2. ' for' → logprob: -2.2592294216156006
    3. '
' → logprob: -4.00922966003418
    4. 'i' → logprob: -6.50922966003418
    5. '<|end|>' → logprob: -7.25922966003418
    6. 's' → logprob: -8.13422966003418
    7. 'if' → logprob: -8.63422966003418
    8. '#' → logprob: -9.13422966003418
    9. ' 
' → logprob: -9.63422966003418
    10. 'n' → logprob: -9.75922966003418

Token 353: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031228174921125174
    2. 'if' → logprob: -6.503122806549072
    3. '#' → logprob: -7.003122806549072
    4. 'i' → logprob: -8.25312328338623
    5. 'remaining' → logprob: -8.62812328338623
    6. 'def' → logprob: -8.87812328338623
    7. 'rest' → logprob: -11.37812328338623
    8. 'index' → logprob: -11.50312328338623
    9. ' for' → logprob: -11.62812328338623
    10. 'rem' → logprob: -11.62812328338623

Token 354: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.16069117188453674
    2. 'for' → logprob: -1.9106911420822144
    3. 'r' → logprob: -8.410691261291504
    4. '#' → logprob: -9.785691261291504
    5. 'che' → logprob: -9.910691261291504
    6. 'cles' → logprob: -10.535691261291504
    7. 'e' → logprob: -10.660691261291504
    8. 'cl' → logprob: -10.660691261291504
    9. 'c' → logprob: -10.660691261291504
    10. 'i' → logprob: -11.535691261291504

Token 355: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01815134845674038
    2. ' for' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.26815128326416
    4. '
' → logprob: -15.39315128326416
    5. '	for' → logprob: -15.39315128326416
    6. 'i' → logprob: -15.76815128326416
    7. 'range' → logprob: -16.643152236938477
    8. '#' → logprob: -17.018152236938477
    9. 's' → logprob: -17.643152236938477
    10. ' ' → logprob: -17.768152236938477

Token 356: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01423320360481739
    2. ' range' → logprob: -4.389233112335205
    3. 'i' → logprob: -6.389233112335205
    4. ' i' → logprob: -11.139233589172363
    5. '(range' → logprob: -12.139233589172363
    6. 's' → logprob: -12.514233589172363
    7. 'rang' → logprob: -12.514233589172363
    8. '_' → logprob: -12.764233589172363
    9. 'm' → logprob: -13.014233589172363
    10. 'n' → logprob: -13.389233589172363

Token 357: ' indice' (ID: 90848)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02347455359995365
    2. ' i' → logprob: -3.7734744548797607
    3. 'range' → logprob: -8.89847469329834
    4. ' range' → logprob: -9.52347469329834
    5. 'j' → logprob: -11.89847469329834
    6. 'index' → logprob: -12.52347469329834
    7. '_' → logprob: -13.39847469329834
    8. 'k' → logprob: -13.77347469329834
    9. '_i' → logprob: -14.14847469329834
    10. ' j' → logprob: -14.39847469329834

Token 358: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4661989212036133
    2. 'in' → logprob: -1.8411989212036133
    3. ' for' → logprob: -2.2161989212036133
    4. 'for' → logprob: -2.5911989212036133
    5. ' i' → logprob: -3.9661989212036133
    6. 'i' → logprob: -4.966198921203613
    7. 'range' → logprob: -5.966198921203613
    8. ' range' → logprob: -6.841198921203613
    9. ' en' → logprob: -8.966198921203613
    10. 'en' → logprob: -9.466198921203613

Token 359: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6510900259017944
    2. 'in' → logprob: -0.7760900259017944
    3. 'for' → logprob: -4.151090145111084
    4. ' for' → logprob: -6.151090145111084
    5. 'range' → logprob: -8.026089668273926
    6. ' range' → logprob: -10.401089668273926
    7. ':' → logprob: -11.151089668273926
    8. '(range' → logprob: -11.276089668273926
    9. ',' → logprob: -11.526089668273926
    10. 'dans' → logprob: -11.526089668273926

Token 360: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0205531008541584
    2. ' range' → logprob: -3.8955531120300293
    3. 'path' → logprob: -11.645552635192871
    4. '   ' → logprob: -14.395552635192871
    5. ' ' → logprob: -14.895552635192871
    6. 're' → logprob: -15.020552635192871
    7. '(range' → logprob: -15.020552635192871
    8. ' path' → logprob: -15.520552635192871
    9. '	range' → logprob: -15.770552635192871
    10. '```' → logprob: -16.020553588867188

Token 361: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.350386295001954e-05
    2. ' range' → logprob: -10.000073432922363
    3. 'path' → logprob: -10.500073432922363
    4. 're' → logprob: -15.625073432922363
    5. '(range' → logprob: -16.00007438659668
    6. '   ' → logprob: -17.25007438659668
    7. 'rang' → logprob: -18.12507438659668
    8. 'r' → logprob: -18.25007438659668
    9. '	range' → logprob: -18.25007438659668
    10. ' ' → logprob: -18.75007438659668

Token 362: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3234921097755432
    2. 'in' → logprob: -2.0734920501708984
    3. ',' → logprob: -2.4484920501708984
    4. 'range' → logprob: -4.073492050170898
    5. '..' → logprob: -4.573492050170898
    6. ',n' → logprob: -4.948492050170898
    7. 'for' → logprob: -5.573492050170898
    8. ' for' → logprob: -5.573492050170898
    9. ' ' → logprob: -5.573492050170898
    10. '   ' → logprob: -5.948492050170898

Token 363: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04909290000796318
    2. ' n' → logprob: -3.049093008041382
    3. '(n' → logprob: -7.674092769622803
    4. ' (' → logprob: -10.174093246459961
    5. 'm' → logprob: -13.549093246459961
    6. '(' → logprob: -14.549093246459961
    7. ' ' → logprob: -15.299093246459961
    8. '   ' → logprob: -16.04909324645996
    9. '	n' → logprob: -16.17409324645996
    10. '```' → logprob: -16.17409324645996

Token 364: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6326382160186768
    2. ' -' → logprob: -0.7576382160186768
    3. '   ' → logprob: -10.882637977600098
    4. ' ' → logprob: -12.507637977600098
    5. '
' → logprob: -12.632637977600098
    6. '-
' → logprob: -12.632637977600098
    7. ' -
' → logprob: -13.132637977600098
    8. '1' → logprob: -13.257637977600098
    9. '(' → logprob: -14.257637977600098
    10. '(n' → logprob: -14.382637977600098

Token 365: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004834276624023914
    2. '1' → logprob: -5.379834175109863
    3. ' ' → logprob: -8.504834175109863
    4. '```' → logprob: -12.004834175109863
    5. '-' → logprob: -13.129834175109863
    6. '   ' → logprob: -13.629834175109863
    7. 'n' → logprob: -14.629834175109863
    8. '`' → logprob: -14.879834175109863
    9. ' -' → logprob: -15.567334175109863
    10. '(' → logprob: -15.879834175109863

Token 366: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04983093589544296
    2. ' for' → logprob: -3.299830913543701
    3. ':' → logprob: -4.674830913543701
    4. ':
' → logprob: -6.049830913543701
    5. '   ' → logprob: -11.04983139038086
    6. 'range' → logprob: -11.92483139038086
    7. '
' → logprob: -12.54983139038086
    8. '(range' → logprob: -13.04983139038086
    9. '(' → logprob: -13.17483139038086
    10. 'in' → logprob: -13.79983139038086

Token 367: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08085125684738159
    2. ':' → logprob: -2.8308513164520264
    3. ' for' → logprob: -4.455851078033447
    4. ':
' → logprob: -4.955851078033447
    5. '   ' → logprob: -11.080851554870605
    6. '(' → logprob: -11.330851554870605
    7. '(range' → logprob: -11.830851554870605
    8. 'range' → logprob: -12.330851554870605
    9. '
' → logprob: -12.705851554870605
    10. 'in' → logprob: -13.455851554870605

Token 368: 'les' (ID: 1032)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9060137867927551
    2. 'n' → logprob: -1.0310137271881104
    3. ' range' → logprob: -1.9060137271881104
    4. 'range' → logprob: -2.5310137271881104
    5. ' for' → logprob: -5.1560139656066895
    6. 'for' → logprob: -5.9060139656066895
    7. ')' → logprob: -6.4060139656066895
    8. '   ' → logprob: -8.656013488769531
    9. '(n' → logprob: -8.906013488769531
    10. '
' → logprob: -9.406013488769531

Token 369: ' étapes' (ID: 96583)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13097438216209412
    2. 'n' → logprob: -2.130974292755127
    3. ' range' → logprob: -6.255974292755127
    4. '(n' → logprob: -7.255974292755127
    5. 'i' → logprob: -7.630974292755127
    6. ' i' → logprob: -8.255974769592285
    7. 'range' → logprob: -8.380974769592285
    8. ' ' → logprob: -8.630974769592285
    9. ')' → logprob: -9.880974769592285
    10. '
' → logprob: -10.005974769592285

Token 370: ' du' (ID: 1462)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6486122012138367
    2. ')' → logprob: -2.3986122608184814
    3. ' for' → logprob: -2.5236122608184814
    4. ' in' → logprob: -2.6486122608184814
    5. '):
' → logprob: -3.1486122608184814
    6. ':' → logprob: -3.2736122608184814
    7. 'for' → logprob: -3.5236122608184814
    8. ' ):' → logprob: -3.6486122608184814
    9. '   ' → logprob: -3.8986122608184814
    10. 'in' → logprob: -4.273612022399902

Token 371: ' chemin' (ID: 45035)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1674396991729736
    2. 'n' → logprob: -1.4174396991729736
    3. ' range' → logprob: -1.7924396991729736
    4. ' for' → logprob: -2.2924396991729736
    5. 'for' → logprob: -2.5424396991729736
    6. ' n' → logprob: -3.2924396991729736
    7. 'path' → logprob: -3.5424396991729736
    8. ' path' → logprob: -4.2924394607543945
    9. ' chemin' → logprob: -4.6674394607543945
    10. 'i' → logprob: -5.9174394607543945

Token 372: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6439177989959717
    2. '):' → logprob: -1.0189177989959717
    3. ')' → logprob: -2.8939177989959717
    4. 'for' → logprob: -3.2689177989959717
    5. ' for' → logprob: -4.893918037414551
    6. ':' → logprob: -5.393918037414551
    7. '   ' → logprob: -5.768918037414551
    8. ' ):
' → logprob: -6.768918037414551
    9. ' pour' → logprob: -6.893918037414551
    10. ')
' → logprob: -7.393918037414551

Token 373: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013290488859638572
    2. ' for' → logprob: -6.626328945159912
    3. '
' → logprob: -13.12632942199707
    4. 'range' → logprob: -14.37632942199707
    5. ':' → logprob: -15.12632942199707
    6. 'n' → logprob: -16.00132942199707
    7. '```' → logprob: -16.75132942199707
    8. 'i' → logprob: -17.12632942199707
    9. '(range' → logprob: -17.12632942199707
    10. ':
' → logprob: -17.62632942199707

Token 374: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07890686392784119
    2. 'i' → logprob: -2.578906774520874
    3. ' ' → logprob: -11.328907012939453
    4. '	i' → logprob: -13.328907012939453
    5. ' ' → logprob: -14.078907012939453
    6. ' in' → logprob: -14.203907012939453
    7. '```' → logprob: -14.703907012939453
    8. '   ' → logprob: -14.828907012939453
    9. ' range' → logprob: -15.578907012939453
    10. '`' → logprob: -16.016407012939453

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014180085621774197
    2. 'in' → logprob: -4.2641801834106445
    3. ' ' → logprob: -11.264180183410645
    4. '	in' → logprob: -13.764180183410645
    5. 'range' → logprob: -14.639180183410645
    6. '  ' → logprob: -14.764180183410645
    7. ')' → logprob: -15.264180183410645
    8. 'In' → logprob: -15.389180183410645
    9. ',' → logprob: -15.889180183410645
    10. '```' → logprob: -15.889180183410645

Token 376: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0788925439119339
    2. 'range' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.953892707824707
    4. ' in' → logprob: -13.953892707824707
    5. '(range' → logprob: -14.578892707824707
    6. '   ' → logprob: -15.328892707824707
    7. 'in' → logprob: -15.453892707824707
    8. '	range' → logprob: -16.95389175415039
    9. '0' → logprob: -17.45389175415039
    10. ' ' → logprob: -17.45389175415039

Token 377: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002146226615877822
    2. ' (' → logprob: -8.750214576721191
    3. '(' → logprob: -9.875214576721191
    4. 'n' → logprob: -13.000214576721191
    5. ' n' → logprob: -13.125214576721191
    6. '(
' → logprob: -15.625214576721191
    7. '   ' → logprob: -16.500215530395508
    8. '(m' → logprob: -17.250215530395508
    9. '1' → logprob: -17.375215530395508
    10. '(len' → logprob: -17.500215530395508

Token 378: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07892768830060959
    2. '-' → logprob: -2.578927755355835
    3. '   ' → logprob: -10.953927993774414
    4. '1' → logprob: -11.453927993774414
    5. '):
' → logprob: -12.078927993774414
    6. '):' → logprob: -13.828927993774414
    7. ' ' → logprob: -13.828927993774414
    8. ' -
' → logprob: -13.953927993774414
    9. ')' → logprob: -14.953927993774414
    10. '-
' → logprob: -15.328927993774414

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008097442332655191
    2. ' ' → logprob: -7.125809669494629
    3. '2' → logprob: -12.875809669494629
    4. '   ' → logprob: -13.250809669494629
    5. '-' → logprob: -15.375809669494629
    6. '```' → logprob: -15.938309669494629
    7. '۱' → logprob: -16.500810623168945
    8. '１' → logprob: -16.625810623168945
    9. '  ' → logprob: -16.688310623168945
    10. '१' → logprob: -17.313310623168945

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.93710636976175e-05
    2. ' ' → logprob: -9.250099182128906
    3. '   ' → logprob: -13.250099182128906
    4. '2' → logprob: -14.375099182128906
    5. '```' → logprob: -15.437599182128906
    6. '-' → logprob: -15.562599182128906
    7. '  ' → logprob: -16.750099182128906
    8. '       ' → logprob: -17.125099182128906
    9. '１' → logprob: -17.125099182128906
    10. '           ' → logprob: -17.187599182128906

Token 381: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0059620994143188
    2. '):
' → logprob: -5.130961894989014
    3. ':' → logprob: -11.130962371826172
    4. '):
' → logprob: -11.755962371826172
    5. ' ):' → logprob: -11.880962371826172
    6. '   ' → logprob: -12.755962371826172
    7. ')' → logprob: -14.380962371826172
    8. '):

' → logprob: -15.505962371826172
    9. '():' → logprob: -16.005962371826172
    10. '}:' → logprob: -16.255962371826172

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006653206888586283
    2. ':' → logprob: -5.131653308868408
    3. ' if' → logprob: -8.00665283203125
    4. ' :' → logprob: -8.63165283203125
    5. '    
' → logprob: -9.75665283203125
    6. '<|end|>' → logprob: -10.25665283203125
    7. '    ' → logprob: -11.00665283203125
    8. ',' → logprob: -11.00665283203125
    9. ':
' → logprob: -11.00665283203125
    10. 'if' → logprob: -11.50665283203125

Token 383: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026271149516105652
    2. ' if' → logprob: -3.901271104812622
    3. 'if' → logprob: -5.276271343231201
    4. '    
' → logprob: -8.276270866394043
    5. '    ' → logprob: -8.776270866394043
    6. ' ' → logprob: -10.026270866394043
    7. '  ' → logprob: -10.401270866394043
    8. ' 
' → logprob: -11.151270866394043
    9. '   
' → logprob: -11.276270866394043
    10. '   ' → logprob: -11.276270866394043

Token 384: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006894989404827356
    2. '   ' → logprob: -6.506895065307617
    3. 'power' → logprob: -6.756895065307617
    4. ' if' → logprob: -7.006895065307617
    5. 'val' → logprob: -7.506895065307617
    6. 'bit' → logprob: -7.631895065307617
    7. 'diff' → logprob: -7.631895065307617
    8. 'path' → logprob: -7.756895065307617
    9. 'pow' → logprob: -7.756895065307617
    10. 'threshold' → logprob: -8.381895065307617

Token 385: ' regarde' (ID: 115760)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19885139167308807
    2. 'if' → logprob: -2.1988513469696045
    3. '   ' → logprob: -3.3238513469696045
    4. ' value' → logprob: -3.8238513469696045
    5. 'value' → logprob: -5.323851585388184
    6. ' ' → logprob: -6.198851585388184
    7. ' val' → logprob: -6.823851585388184
    8. 'val' → logprob: -7.698851585388184
    9. ' s' → logprob: -7.823851585388184
    10. '    ' → logprob: -8.323851585388184

Token 386: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16705700755119324
    2. '   ' → logprob: -2.1670570373535156
    3. 'if' → logprob: -3.4170570373535156
    4. '    ' → logprob: -5.167057037353516
    5. ' s' → logprob: -8.292057037353516
    6. ' ' → logprob: -8.917057037353516
    7. '	if' → logprob: -9.167057037353516
    8. '  ' → logprob: -9.417057037353516
    9. ' si' → logprob: -9.792057037353516
    10. ' whether' → logprob: -10.542057037353516

Token 387: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1598854660987854
    2. 's' → logprob: -2.4098854064941406
    3. ' (' → logprob: -3.1598854064941406
    4. '(s' → logprob: -4.284885406494141
    5. '(' → logprob: -7.034885406494141
    6. ' ' → logprob: -8.28488540649414
    7. ' value' → logprob: -8.90988540649414
    8. '2' → logprob: -9.03488540649414
    9. '((' → logprob: -9.53488540649414
    10. ' l' → logprob: -9.78488540649414

Token 388: ' est' (ID: 893)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.037588998675346375
    2. ' >=' → logprob: -3.6625890731811523
    3. '&' → logprob: -5.037589073181152
    4. '>=' → logprob: -5.537589073181152
    5. ' ' → logprob: -7.662589073181152
    6. '>' → logprob: -8.912589073181152
    7. '   ' → logprob: -9.537589073181152
    8. ' >' → logprob: -10.537589073181152
    9. ' >>' → logprob: -10.787589073181152
    10. '    ' → logprob: -10.787589073181152

Token 389: ' supérieur' (ID: 98491)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6490468382835388
    2. ' >=' → logprob: -1.2740468978881836
    3. ' supérieur' → logprob: -1.7740468978881836
    4. '>' → logprob: -5.274046897888184
    5. 'sup' → logprob: -5.774046897888184
    6. ' greater' → logprob: -5.774046897888184
    7. 'greater' → logprob: -5.774046897888184
    8. ' sup' → logprob: -6.149046897888184
    9. ' supérieure' → logprob: -6.149046897888184
    10. 'au' → logprob: -6.274046897888184

Token 390: ' ou' (ID: 2031)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6802598237991333
    2. '=' → logprob: -1.8052598237991333
    3. ' à' → logprob: -1.9302598237991333
    4. '>=' → logprob: -2.1802597045898438
    5. '   ' → logprob: -3.4302597045898438
    6. ' =' → logprob: -4.305259704589844
    7. ' ' → logprob: -5.430259704589844
    8. '    ' → logprob: -5.555259704589844
    9. 'à' → logprob: -5.805259704589844
    10. ' or' → logprob: -6.180259704589844

Token 391: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13505493104457855
    2. ' ' → logprob: -3.01005482673645
    3. '0' → logprob: -3.51005482673645
    4. ' (' → logprob: -3.76005482673645
    5. '2' → logprob: -4.010055065155029
    6. ' =' → logprob: -6.885055065155029
    7. ' i' → logprob: -6.885055065155029
    8. '1' → logprob: -7.510055065155029
    9. ' égal' → logprob: -7.760055065155029
    10. '(' → logprob: -7.885055065155029

Token 392: ' à' (ID: 1221)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5224431157112122
    2. '(' → logprob: -1.8974430561065674
    3. ' (' → logprob: -2.2724430561065674
    4. '   ' → logprob: -2.6474430561065674
    5. ' to' → logprob: -3.1474430561065674
    6. ' à' → logprob: -4.1474432945251465
    7. ' ' → logprob: -4.3974432945251465
    8. 'to' → logprob: -5.0224432945251465
    9. ' value' → logprob: -6.3974432945251465
    10. 'value' → logprob: -7.1474432945251465

Token 393: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014695892110466957
    2. 'value' → logprob: -5.01469612121582
    3. ' ' → logprob: -5.26469612121582
    4. '   ' → logprob: -6.51469612121582
    5. '(' → logprob: -7.13969612121582
    6. ' value' → logprob: -7.88969612121582
    7. ' (' → logprob: -9.63969612121582
    8. '  ' → logprob: -10.38969612121582
    9. '```' → logprob: -11.63969612121582
    10. 'pow' → logprob: -12.13969612121582

Token 394: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004579649772495031
    2. 'value' → logprob: -5.754579544067383
    3. ' ' → logprob: -6.754579544067383
    4. '(' → logprob: -9.129579544067383
    5. '   ' → logprob: -9.629579544067383
    6. ' value' → logprob: -10.129579544067383
    7. '  ' → logprob: -12.254579544067383
    8. ' (' → logprob: -12.504579544067383
    9. 'pow' → logprob: -13.254579544067383
    10. '1' → logprob: -13.379579544067383

Token 395: '^(' (ID: 32612)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.06209787353873253
    2. '**' → logprob: -2.8120977878570557
    3. ' ' → logprob: -10.062097549438477
    4. ' ' → logprob: -10.187097549438477
    5. '   ' → logprob: -10.437097549438477
    6. ' *' → logprob: -11.562097549438477
    7. '```' → logprob: -12.937097549438477
    8. '[i' → logprob: -13.187097549438477
    9. ' **
' → logprob: -13.812097549438477
    10. '*' → logprob: -13.937097549438477

Token 396: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05120096728205681
    2. 'n' → logprob: -3.1762008666992188
    3. ' (' → logprob: -5.176200866699219
    4. 'i' → logprob: -6.426200866699219
    5. '(' → logprob: -8.301200866699219
    6. '((' → logprob: -8.426200866699219
    7. ' n' → logprob: -8.676200866699219
    8. 'm' → logprob: -9.301200866699219
    9. '   ' → logprob: -9.551200866699219
    10. '(i' → logprob: -10.551200866699219

Token 397: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6335021257400513
    2. ' -' → logprob: -0.7585021257400513
    3. '   ' → logprob: -7.633502006530762
    4. '-i' → logprob: -8.633502006530762
    5. ' ' → logprob: -9.883502006530762
    6. '(n' → logprob: -10.008502006530762
    7. '```' → logprob: -10.633502006530762
    8. '1' → logprob: -10.883502006530762
    9. '-(' → logprob: -11.133502006530762
    10. 'i' → logprob: -11.133502006530762

Token 398: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1571003794670105
    2. 'i' → logprob: -2.2821004390716553
    3. '2' → logprob: -3.5321004390716553
    4. ' ' → logprob: -5.657100200653076
    5. '-' → logprob: -5.907100200653076
    6. '(' → logprob: -6.157100200653076
    7. '(i' → logprob: -6.157100200653076
    8. '   ' → logprob: -6.532100200653076
    9. ' i' → logprob: -6.782100200653076
    10. ' (' → logprob: -8.282100677490234

Token 399: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04876824468374252
    2. '-' → logprob: -3.0487682819366455
    3. '-i' → logprob: -8.923768043518066
    4. ' ' → logprob: -10.548768043518066
    5. '   ' → logprob: -10.923768043518066
    6. ')' → logprob: -13.173768043518066
    7. ' ' → logprob: -14.173768043518066
    8. '  ' → logprob: -14.923768043518066
    9. '```' → logprob: -16.298768997192383
    10. ' minus' → logprob: -16.548768997192383

Token 400: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7539176940917969
    2. ' -' → logprob: -1.3789176940917969
    3. '):
' → logprob: -2.003917694091797
    4. ')' → logprob: -2.503917694091797
    5. ' ):' → logprob: -3.878917694091797
    6. '-' → logprob: -4.128917694091797
    7. ' ):
' → logprob: -5.253917694091797
    8. ' ' → logprob: -5.378917694091797
    9. '+' → logprob: -5.503917694091797
    10. '   ' → logprob: -5.628917694091797

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006564033217728138
    2. ':' → logprob: -5.256564140319824
    3. ' :' → logprob: -7.131564140319824
    4. ' if' → logprob: -8.506564140319824
    5. ' and' → logprob: -9.006564140319824
    6. 'if' → logprob: -10.131564140319824
    7. '       ' → logprob: -10.256564140319824
    8. ',' → logprob: -10.756564140319824
    9. '    ' → logprob: -11.006564140319824
    10. ':
' → logprob: -11.006564140319824

Token 402: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06932398676872253
    2. ' if' → logprob: -3.194324016571045
    3. 'if' (adapté à ' if') → logprob: -3.694324016571045
    4. '2' → logprob: -7.694324016571045
    5. ' ' → logprob: -8.069323539733887
    6. '       ' → logprob: -9.069323539733887
    7. '1' → logprob: -9.444323539733887
    8. '    
' → logprob: -10.319323539733887
    9. '    ' → logprob: -10.944323539733887
    10. '  ' → logprob: -10.944323539733887

Token 403: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31329044699668884
    2. 's' → logprob: -1.3132904767990112
    3. '   ' → logprob: -10.8132905960083
    4. '2' → logprob: -12.6882905960083
    5. ' ' → logprob: -12.9382905960083
    6. '(s' → logprob: -13.4382905960083
    7. '	s' → logprob: -14.4382905960083
    8. ' ' → logprob: -14.5632905960083
    9. ' (' → logprob: -15.1882905960083
    10. '  ' → logprob: -15.9382905960083

Token 404: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07000312209129333
    2. '>=' → logprob: -2.695003032684326
    3. ' ' → logprob: -10.820003509521484
    4. '   ' → logprob: -10.945003509521484
    5. ')>=' → logprob: -11.945003509521484
    6. ' ' → logprob: -12.195003509521484
    7. '[' → logprob: -12.445003509521484
    8. ')' → logprob: -12.945003509521484
    9. ']>=' → logprob: -12.945003509521484
    10. '>' → logprob: -13.070003509521484

Token 405: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25196215510368347
    2. ' ' → logprob: -1.5019621849060059
    3. '   ' → logprob: -10.501961708068848
    4. ' (' → logprob: -12.751961708068848
    5. '(' → logprob: -13.376961708068848
    6. '  ' → logprob: -14.001961708068848
    7. '    ' → logprob: -15.126961708068848
    8. '       ' → logprob: -17.251962661743164
    9. '     ' → logprob: -17.626962661743164
    10. 'pow' → logprob: -18.126962661743164

Token 406: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.250204086303711
    4. '(' → logprob: -17.00020408630371
    5. '  ' → logprob: -18.12520408630371
    6. '```' → logprob: -20.25020408630371
    7. 'pow' → logprob: -20.75020408630371
    8. '    ' → logprob: -21.25020408630371
    9. '       ' → logprob: -21.25020408630371
    10. '     ' → logprob: -21.50020408630371

Token 407: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31387409567832947
    2. ' **' → logprob: -1.3138741254806519
    3. '(n' → logprob: -7.438874244689941
    4. '[n' → logprob: -10.813874244689941
    5. ' *' → logprob: -13.688874244689941
    6. '^(' → logprob: -14.313874244689941
    7. '[(' → logprob: -14.438874244689941
    8. '*' → logprob: -14.688874244689941
    9. ' (' → logprob: -15.063874244689941
    10. ' ' → logprob: -15.188874244689941

Token 408: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012151175178587437
    2. '((' → logprob: -7.376214981079102
    3. ' (' → logprob: -7.501214981079102
    4. '(' → logprob: -10.251214981079102
    5. '   ' → logprob: -15.376214981079102
    6. '(
' → logprob: -15.876214981079102
    7. ' ((' → logprob: -16.5012149810791
    8. 'n' → logprob: -17.3762149810791
    9. '{' → logprob: -17.7512149810791
    10. ' ' → logprob: -17.7512149810791

Token 409: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.019964562729001045
    2. 'n' → logprob: -4.019964694976807
    3. ' (' → logprob: -6.644964694976807
    4. '((' → logprob: -8.019964218139648
    5. ' n' → logprob: -9.269964218139648
    6. '(' → logprob: -9.519964218139648
    7. '   ' → logprob: -11.644964218139648
    8. ' ' → logprob: -12.644964218139648
    9. '(
' → logprob: -13.894964218139648
    10. '  ' → logprob: -14.269964218139648

Token 410: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05518680065870285
    2. ' -' → logprob: -2.9301867485046387
    3. '   ' → logprob: -8.555187225341797
    4. '2' → logprob: -9.680187225341797
    5. ' ' → logprob: -10.430187225341797
    6. '       ' → logprob: -12.180187225341797
    7. '  ' → logprob: -12.555187225341797
    8. '           ' → logprob: -12.680187225341797
    9. '1' → logprob: -12.805187225341797
    10. '    ' → logprob: -13.680187225341797

Token 411: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005478964187204838
    2. ' ' → logprob: -5.255478858947754
    3. '   ' → logprob: -8.505478858947754
    4. '1' → logprob: -11.505478858947754
    5. '  ' → logprob: -11.505478858947754
    6. '-' → logprob: -12.380478858947754
    7. '(' → logprob: -12.505478858947754
    8. '```' → logprob: -13.005478858947754
    9. ' -' → logprob: -13.130478858947754
    10. '    ' → logprob: -13.255478858947754

Token 412: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9650025428272784e-05
    2. 'i' → logprob: -10.625040054321289
    3. ' ' → logprob: -12.375040054321289
    4. '   ' → logprob: -12.500040054321289
    5. '(i' → logprob: -12.625040054321289
    6. '1' → logprob: -13.500040054321289
    7. '(' → logprob: -13.750040054321289
    8. '
' → logprob: -14.375040054321289
    9. '-' → logprob: -14.625040054321289
    10. '3' → logprob: -15.750040054321289

Token 413: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16032932698726654
    2. ' -' → logprob: -1.9103293418884277
    3. '-i' → logprob: -9.41032886505127
    4. ' ' → logprob: -11.16032886505127
    5. '   ' → logprob: -11.78532886505127
    6. ')' → logprob: -14.53532886505127
    7. '  ' → logprob: -14.91032886505127
    8. '-
' → logprob: -15.03532886505127
    9. '	' → logprob: -16.410329818725586
    10. ' ' → logprob: -16.535329818725586

Token 414: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020446251146495342
    2. ' i' → logprob: -6.252044677734375
    3. '   ' → logprob: -9.127044677734375
    4. '	i' → logprob: -12.752044677734375
    5. ' ' → logprob: -13.002044677734375
    6. '  ' → logprob: -13.877044677734375
    7. '       ' → logprob: -15.002044677734375
    8. ')' → logprob: -15.127044677734375
    9. '    ' → logprob: -15.127044677734375
    10. ')i' → logprob: -15.752044677734375

Token 415: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38854140043258667
    2. '):' → logprob: -1.1385414600372314
    3. '):
' → logprob: -6.888541221618652
    4. ' ):
' → logprob: -8.513541221618652
    5. '   ' → logprob: -8.638541221618652
    6. ' ):' → logprob: -9.138541221618652
    7. ')' → logprob: -9.138541221618652
    8. '):

' → logprob: -10.638541221618652
    9. '       ' → logprob: -10.888541221618652
    10. ':' → logprob: -12.013541221618652

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027579188346862793
    2. '   ' → logprob: -4.152579307556152
    3. ':' → logprob: -4.652579307556152
    4. ':
' → logprob: -7.027579307556152
    5. ' :' → logprob: -8.527579307556152
    6. ' :
' → logprob: -8.777579307556152
    7. '):' → logprob: -9.027579307556152
    8. '        
' → logprob: -9.027579307556152
    9. '):
' → logprob: -9.152579307556152
    10. ')' → logprob: -9.652579307556152

Token 417: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3602185547351837
    2. '   ' → logprob: -1.3602185249328613
    3. ' path' → logprob: -3.2352185249328613
    4. 'path' → logprob: -5.235218524932861
    5. '
' → logprob: -8.23521900177002
    6. '        
' → logprob: -8.61021900177002
    7. ' s' → logprob: -8.73521900177002
    8. '           ' → logprob: -9.23521900177002
    9. ' 
' → logprob: -9.36021900177002
    10. 'space' → logprob: -9.86021900177002

Token 418: ' On' (ID: 2160)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.08932143449783325
    2. 's' → logprob: -3.3393213748931885
    3. '   ' → logprob: -3.4643213748931885
    4. ' path' → logprob: -4.589321613311768
    5. '       ' → logprob: -4.964321613311768
    6. ' s' → logprob: -6.589321613311768
    7. '           ' → logprob: -9.83932113647461
    8. ' ' → logprob: -10.33932113647461
    9. '  ' → logprob: -10.46432113647461
    10. '	path' → logprob: -11.08932113647461

Token 419: ' retire' (ID: 48410)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5441088080406189
    2. ' path' → logprob: -0.9191088080406189
    3. '   ' → logprob: -4.794108867645264
    4. 's' → logprob: -5.544108867645264
    5. ' s' → logprob: -5.919108867645264
    6. '    ' → logprob: -6.044108867645264
    7. ' ' → logprob: -6.544108867645264
    8. '       ' → logprob: -7.669108867645264
    9. '
' → logprob: -8.544108390808105
    10. '#' → logprob: -8.794108390808105

Token 420: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07091602683067322
    2. ' ' → logprob: -2.695915937423706
    3. '       ' → logprob: -7.320916175842285
    4. '   ' → logprob: -8.570916175842285
    5. '           ' → logprob: -9.570916175842285
    6. '        ' → logprob: -10.695916175842285
    7. '    ' → logprob: -10.945916175842285
    8. '(' → logprob: -12.445916175842285
    9. '  ' → logprob: -12.820916175842285
    10. ' (' → logprob: -12.945916175842285

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002496706321835518
    2. ' ' → logprob: -6.002496719360352
    3. '   ' → logprob: -11.502496719360352
    4. '       ' → logprob: -12.502496719360352
    5. '(' → logprob: -12.877496719360352
    6. '```' → logprob: -13.252496719360352
    7. '           ' → logprob: -13.627496719360352
    8. '  ' → logprob: -14.627496719360352
    9. '    ' → logprob: -14.877496719360352
    10. ' (' → logprob: -15.127496719360352

Token 422: '^(' (ID: 32612)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.0160507932305336
    2. '**' → logprob: -4.141050815582275
    3. ' ' → logprob: -11.391050338745117
    4. ' ' → logprob: -13.266050338745117
    5. '```' → logprob: -13.766050338745117
    6. '^(' → logprob: -14.516050338745117
    7. ' *' → logprob: -14.641050338745117
    8. ' ^' → logprob: -15.266050338745117
    9. ' (' → logprob: -15.266050338745117
    10. '*' → logprob: -15.766050338745117

Token 423: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1348792165517807
    2. 'n' → logprob: -2.1348791122436523
    3. ' (' → logprob: -4.884879112243652
    4. '(' → logprob: -8.259879112243652
    5. ' n' → logprob: -9.259879112243652
    6. '(
' → logprob: -13.634879112243652
    7. '
' → logprob: -13.759879112243652
    8. ' ' → logprob: -14.259879112243652
    9. '<n' → logprob: -14.259879112243652
    10. '{' → logprob: -14.634879112243652

Token 424: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34877219796180725
    2. '-' → logprob: -1.2237721681594849
    3. ' (' → logprob: -8.973772048950195
    4. '(' → logprob: -9.098772048950195
    5. '(n' → logprob: -10.223772048950195
    6. '2' → logprob: -11.348772048950195
    7. '(i' → logprob: -11.598772048950195
    8. ' ' → logprob: -11.598772048950195
    9. '```' → logprob: -12.473772048950195
    10. '-i' → logprob: -12.598772048950195

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000610690622124821
    2. ' ' → logprob: -7.625610828399658
    3. '1' → logprob: -9.7506103515625
    4. '(' → logprob: -10.0006103515625
    5. '   ' → logprob: -11.3756103515625
    6. '       ' → logprob: -13.6256103515625
    7. '-' → logprob: -14.1256103515625
    8. '           ' → logprob: -14.1256103515625
    9. ' (' → logprob: -14.1256103515625
    10. '
' → logprob: -14.2506103515625

Token 426: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05543845519423485
    2. '-' → logprob: -3.55543851852417
    3. '-i' → logprob: -3.68043851852417
    4. ' (' → logprob: -9.555438041687012
    5. ' ' → logprob: -10.680438041687012
    6. '(' → logprob: -11.055438041687012
    7. 'i' → logprob: -11.430438041687012
    8. ' ' → logprob: -12.055438041687012
    9. '(i' → logprob: -12.180438041687012
    10. '   ' → logprob: -12.180438041687012

Token 427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006467144470661879
    2. 'from' → logprob: -6.131467342376709
    3. ' )' → logprob: -6.131467342376709
    4. ' ' → logprob: -8.00646686553955
    5. ' from' → logprob: -8.00646686553955
    6. ' **' → logprob: -8.00646686553955
    7. '**' → logprob: -8.63146686553955
    8. '   ' → logprob: -9.00646686553955
    9. ' (' → logprob: -9.00646686553955
    10. '[i' → logprob: -9.13146686553955

Token 428: ' à' (ID: 1221)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.35576122999191284
    2. 'from' → logprob: -1.6057612895965576
    3. '       ' → logprob: -2.4807612895965576
    4. '           ' → logprob: -4.6057610511779785
    5. ' ' → logprob: -6.8557610511779785
    6. ')' → logprob: -6.9807610511779785
    7. '=' → logprob: -7.3557610511779785
    8. ' de' → logprob: -7.8557610511779785
    9. '	from' → logprob: -8.480761528015137
    10. '```' → logprob: -8.480761528015137

Token 429: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038044363260269165
    2. ' s' → logprob: -3.2880444526672363
    3. '       ' → logprob: -12.913043975830078
    4. '   ' → logprob: -15.538043975830078
    5. 'path' → logprob: -15.788043975830078
    6. '           ' → logprob: -16.913043975830078
    7. ' ' → logprob: -17.163043975830078
    8. '    ' → logprob: -17.663043975830078
    9. '	s' → logprob: -17.663043975830078
    10. '
' → logprob: -17.788043975830078

Token 430: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19345183670520782
    2. ' -=' → logprob: -2.4434518814086914
    3. '           ' → logprob: -2.9434518814086914
    4. 's' → logprob: -4.568451881408691
    5. '=' → logprob: -4.693451881408691
    6. '-' → logprob: -5.943451881408691
    7. ' =' → logprob: -5.943451881408691
    8. ' s' → logprob: -6.193451881408691
    9. '               ' → logprob: -6.568451881408691
    10. ':
' → logprob: -6.818451881408691

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008383841253817081
    2. 's' → logprob: -5.133383750915527
    3. ' s' → logprob: -6.633383750915527
    4. '           ' → logprob: -7.383383750915527
    5. '        
' → logprob: -9.383383750915527
    6. '=' → logprob: -9.508383750915527
    7. ':
' → logprob: -9.758383750915527
    8. ' :
' → logprob: -10.008383750915527
    9. '   ' → logprob: -10.133383750915527
    10. ' =' → logprob: -10.383383750915527

Token 432: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.02474335953593254
    2. ' s' → logprob: -3.7747433185577393
    3. '       ' → logprob: -6.524743556976318
    4. '   ' → logprob: -10.77474308013916
    5. '           ' → logprob: -11.77474308013916
    6. ' ' → logprob: -14.14974308013916
    7. '               ' → logprob: -15.89974308013916
    8. '	s' → logprob: -16.024744033813477
    9. '        
' → logprob: -16.399744033813477
    10. '  ' → logprob: -16.399744033813477

Token 433: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10048539936542511
    2. '-=' → logprob: -2.350485324859619
    3. '=' → logprob: -8.850485801696777
    4. '-' → logprob: -8.975485801696777
    5. '   ' → logprob: -12.850485801696777
    6. ' -' → logprob: -12.850485801696777
    7. ' =' → logprob: -13.475485801696777
    8. '	' → logprob: -14.100485801696777
    9. ' ' → logprob: -14.725485801696777
    10. '    ' → logprob: -15.350485801696777

Token 434: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759417414665222
    2. '2' → logprob: -0.8259417414665222
    3. '   ' → logprob: -14.200942039489746
    4. ' (' → logprob: -14.200942039489746
    5. '(' → logprob: -14.575942039489746
    6. '  ' → logprob: -15.825942039489746
    7. '    ' → logprob: -15.950942039489746
    8. '```' → logprob: -17.20094108581543
    9. '1' → logprob: -17.32594108581543
    10. '       ' → logprob: -17.57594108581543

Token 435: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. '(' → logprob: -16.750158309936523
    5. '  ' → logprob: -18.000158309936523
    6. '```' → logprob: -19.875158309936523
    7. ' (' → logprob: -20.375158309936523
    8. '1' → logprob: -20.375158309936523
    9. '۲' → logprob: -20.500158309936523
    10. '２' → logprob: -21.250158309936523

Token 436: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.14272765815258026
    2. '**' → logprob: -2.0177276134490967
    3. ' ' → logprob: -10.142727851867676
    4. ' *' → logprob: -12.642727851867676
    5. '*' → logprob: -12.892727851867676
    6. ' ' → logprob: -13.142727851867676
    7. '^' → logprob: -13.642727851867676
    8. ' ^' → logprob: -13.642727851867676
    9. '(n' → logprob: -14.517727851867676
    10. '"' → logprob: -14.517727851867676

Token 437: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03821476548910141
    2. ' (' → logprob: -3.288214683532715
    3. '(' → logprob: -8.663214683532715
    4. 'n' → logprob: -15.163214683532715
    5. ' ' → logprob: -16.53821563720703
    6. '(
' → logprob: -16.91321563720703
    7. '  ' → logprob: -17.41321563720703
    8. '((' → logprob: -18.03821563720703
    9. '   ' → logprob: -18.16321563720703
    10. ' n' → logprob: -18.66321563720703

Token 438: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020828094333410263
    2. 'n' → logprob: -3.8958280086517334
    3. ' (' → logprob: -8.770828247070312
    4. '(' → logprob: -9.020828247070312
    5. ' n' → logprob: -11.645828247070312
    6. '(
' → logprob: -14.520828247070312
    7. '   ' → logprob: -15.520828247070312
    8. '{' → logprob: -16.020828247070312
    9. '<n' → logprob: -16.520828247070312
    10. '[n' → logprob: -16.645828247070312

Token 439: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9690163731575012
    2. '-' → logprob: -1.0940163135528564
    3. '(' → logprob: -1.7190163135528564
    4. ' (' → logprob: -2.8440163135528564
    5. '(n' → logprob: -3.0940163135528564
    6. '   ' → logprob: -6.9690165519714355
    7. ' ' → logprob: -7.4690165519714355
    8. '-i' → logprob: -7.9690165519714355
    9. '-n' → logprob: -7.9690165519714355
    10. '-(' → logprob: -8.844016075134277

Token 440: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007517361082136631
    2. ' ' → logprob: -7.250751972198486
    3. '   ' → logprob: -10.625751495361328
    4. 'i' → logprob: -11.625751495361328
    5. '1' → logprob: -12.375751495361328
    6. '(' → logprob: -13.625751495361328
    7. '  ' → logprob: -14.125751495361328
    8. '       ' → logprob: -14.625751495361328
    9. '     ' → logprob: -14.875751495361328
    10. ' i' → logprob: -15.000751495361328

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004142264660913497
    2. ' ' → logprob: -8.00041389465332
    3. 'i' → logprob: -9.75041389465332
    4. '   ' → logprob: -11.87541389465332
    5. '(' → logprob: -12.37541389465332
    6. ' i' → logprob: -12.62541389465332
    7. '1' → logprob: -13.00041389465332
    8. '(i' → logprob: -13.12541389465332
    9. '-' → logprob: -14.87541389465332
    10. '  ' → logprob: -15.25041389465332

Token 442: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47734230756759644
    2. '-' → logprob: -0.9773423075675964
    3. '-i' → logprob: -5.727342128753662
    4. ' ' → logprob: -12.97734260559082
    5. '   ' → logprob: -13.47734260559082
    6. '  ' → logprob: -15.60234260559082
    7. ' ' → logprob: -16.60234260559082
    8. '	' → logprob: -16.72734260559082
    9. '       ' → logprob: -17.10234260559082
    10. '     ' → logprob: -17.35234260559082

Token 443: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05516570433974266
    2. ' i' → logprob: -2.9301657676696777
    3. '   ' → logprob: -8.43016529083252
    4. ' ' → logprob: -10.55516529083252
    5. '	i' → logprob: -10.80516529083252
    6. '       ' → logprob: -11.80516529083252
    7. '  ' → logprob: -12.68016529083252
    8. '    ' → logprob: -13.05516529083252
    9. '     ' → logprob: -13.55516529083252
    10. '```' → logprob: -13.68016529083252

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005208624061197042
    2. ')
' → logprob: -7.625520706176758
    3. ' )' → logprob: -10.875520706176758
    4. '       ' → logprob: -12.125520706176758
    5. '   ' → logprob: -12.125520706176758
    6. ')

' → logprob: -13.625520706176758
    7. ')
' → logprob: -13.750520706176758
    8. ')#' → logprob: -16.125520706176758
    9. '))' → logprob: -16.250520706176758
    10. ' )
' → logprob: -16.375520706176758

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007402998744510114
    2. '   ' → logprob: -8.000740051269531
    3. '
' → logprob: -8.875740051269531
    4. '        
' → logprob: -9.625740051269531
    5. '```' → logprob: -9.875740051269531
    6. '  
' → logprob: -10.375740051269531
    7. '<|end|>' → logprob: -10.500740051269531
    8. 'path' → logprob: -10.625740051269531
    9. ',' → logprob: -10.875740051269531
    10. ')' → logprob: -11.750740051269531

Token 446: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4233815371990204
    2. 'path' → logprob: -1.2983815670013428
    3. '   ' → logprob: -2.9233815670013428
    4. ' path' → logprob: -4.173381328582764
    5. '
' → logprob: -7.048381328582764
    6. '```' → logprob: -7.173381328582764
    7. '	path' → logprob: -8.548381805419922
    8. 'space' → logprob: -8.673381805419922
    9. ' ' → logprob: -9.048381805419922
    10. '           ' → logprob: -9.048381805419922

Token 447: ' On' (ID: 2160)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0009168167016468942
    2. ' path' → logprob: -7.375916957855225
    3. '       ' → logprob: -8.625916481018066
    4. 'value' → logprob: -9.500916481018066
    5. '   ' → logprob: -10.500916481018066
    6. '#' → logprob: -11.875916481018066
    7. '	path' → logprob: -15.250916481018066
    8. '           ' → logprob: -15.375916481018066
    9. ' value' → logprob: -15.500916481018066
    10. ' ' → logprob: -15.875916481018066

Token 448: ' marque' (ID: 38644)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.017776088789105415
    2. 'value' → logprob: -4.142776012420654
    3. ' path' → logprob: -6.642776012420654
    4. '#' → logprob: -9.017776489257812
    5. '   ' → logprob: -9.392776489257812
    6. '[path' → logprob: -9.392776489257812
    7. ' value' → logprob: -9.642776489257812
    8. '_path' → logprob: -10.642776489257812
    9. '       ' → logprob: -11.392776489257812
    10. '[' → logprob: -12.267776489257812

Token 449: ' que' (ID: 661)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2015504539012909
    2. ' path' → logprob: -1.7015504837036133
    3. '	path' → logprob: -9.951550483703613
    4. '   ' → logprob: -10.326550483703613
    5. '[path' → logprob: -11.076550483703613
    6. '(path' → logprob: -11.451550483703613
    7. 'space' → logprob: -11.826550483703613
    8. '_path' → logprob: -11.951550483703613
    9. ' ' → logprob: -12.076550483703613
    10. ' ' → logprob: -12.201550483703613

Token 450: ' pour' (ID: 1930)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.03804757073521614
    2. ' path' → logprob: -3.2880475521087646
    3. '   ' → logprob: -12.663047790527344
    4. '	path' → logprob: -13.788047790527344
    5. '(path' → logprob: -14.288047790527344
    6. '[path' → logprob: -14.663047790527344
    7. ' ' → logprob: -15.038047790527344
    8. 'space' → logprob: -15.913047790527344
    9. '_path' → logprob: -15.913047790527344
    10. ',path' → logprob: -16.413047790527344

Token 451: ' ce' (ID: 2357)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05933356657624245
    2. 'i' → logprob: -3.059333562850952
    3. ' path' → logprob: -4.684333801269531
    4. ' i' → logprob: -6.559333801269531
    5. '[i' → logprob: -10.809333801269531
    6. '[path' → logprob: -12.309333801269531
    7. ' ' → logprob: -13.309333801269531
    8. '```' → logprob: -13.434333801269531
    9. '   ' → logprob: -14.059333801269531
    10. 'l' → logprob: -14.309333801269531

Token 452: ' rang' (ID: 32287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012532375752925873
    2. ' i' → logprob: -4.3875322341918945
    3. '[i' → logprob: -11.762532234191895
    4. ' ' → logprob: -11.762532234191895
    5. '	i' → logprob: -12.137532234191895
    6. ' chemin' → logprob: -15.137532234191895
    7. ' ' → logprob: -15.262532234191895
    8. 'indice' → logprob: -15.387532234191895
    9. '(i' → logprob: -15.512532234191895
    10. '_i' → logprob: -15.512532234191895

Token 453: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6916396021842957
    2. '[i' → logprob: -1.1916396617889404
    3. ' path' → logprob: -2.3166396617889404
    4. 'i' → logprob: -3.0666396617889404
    5. 'path' → logprob: -3.6916396617889404
    6. ',' → logprob: -4.316639423370361
    7. '[' → logprob: -4.691639423370361
    8. ' ,' → logprob: -7.191639423370361
    9. '(i' → logprob: -7.441639423370361
    10. ' [' → logprob: -7.816639423370361

Token 454: ' il' (ID: 1793)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2519298195838928
    2. ' path' → logprob: -1.501929759979248
    3. '	path' → logprob: -15.251930236816406
    4. '_path' → logprob: -16.001930236816406
    5. ' ' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.501930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '"path' → logprob: -17.501930236816406
    9. '(path' → logprob: -17.626930236816406
    10. '1' → logprob: -17.751930236816406

Token 455: ' y' (ID: 342)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5496529936790466
    2. ' faut' → logprob: -0.9246529936790466
    3. 'y' → logprob: -4.049653053283691
    4. ' faudra' → logprob: -5.549653053283691
    5. 'fa' → logprob: -7.049653053283691
    6. ' y' → logprob: -7.299653053283691
    7. '   ' → logprob: -7.424653053283691
    8. 'fail' → logprob: -7.549653053283691
    9. '=' → logprob: -7.674653053283691
    10. 'path' → logprob: -7.799653053283691

Token 456: ' aura' (ID: 33008)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09917128086090088
    2. ' a' → logprob: -2.5991711616516113
    3. 'f' → logprob: -4.224171161651611
    4. ' faut' → logprob: -6.349171161651611
    5. '   ' → logprob: -6.474171161651611
    6. ' ' → logprob: -7.849171161651611
    7. ' faudra' → logprob: -8.09917163848877
    8. ''a' → logprob: -8.22417163848877
    9. 'u' → logprob: -9.09917163848877
    10. '=' → logprob: -9.22417163848877

Token 457: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0741117000579834
    2. 'un' → logprob: -2.6991117000579834
    3. ' une' → logprob: -6.3241119384765625
    4. ' path' → logprob: -7.4491119384765625
    5. '1' → logprob: -7.5741119384765625
    6. 'path' → logprob: -7.6991119384765625
    7. 'une' → logprob: -7.9491119384765625
    8. ' ' → logprob: -8.324111938476562
    9. ' a' → logprob: -8.824111938476562
    10. '   ' → logprob: -10.324111938476562

Token 458: ' chemin' (ID: 45035)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7332095503807068
    2. 'path' → logprob: -0.7332095503807068
    3. ' path' → logprob: -3.3582096099853516
    4. ' chemin' → logprob: -6.108209609985352
    5. ' ' → logprob: -6.483209609985352
    6. 'che' → logprob: -7.733209609985352
    7. 'space' → logprob: -9.858209609985352
    8. ' espace' → logprob: -10.233209609985352
    9. '   ' → logprob: -10.358209609985352
    10. '```' → logprob: -10.858209609985352

Token 459: ' supplémentaire' (ID: 111252)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.8495132327079773
    2. ' alternatif' → logprob: -1.099513292312622
    3. ' alternative' → logprob: -2.099513292312622
    4. '_add' → logprob: -2.474513292312622
    5. 'altern' → logprob: -4.349513053894043
    6. ' altern' → logprob: -5.224513053894043
    7. 'alternative' → logprob: -5.224513053894043
    8. '_alt' → logprob: -6.099513053894043
    9. ' alternativ' → logprob: -6.349513053894043
    10. '   ' → logprob: -6.599513053894043

Token 460: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8200621008872986
    2. '       ' → logprob: -1.0700621604919434
    3. ' path' → logprob: -1.9450621604919434
    4. '   ' → logprob: -3.3200621604919434
    5. '[path' → logprob: -4.195062160491943
    6. '
' → logprob: -4.570062160491943
    7. '           ' → logprob: -5.820062160491943
    8. '[' → logprob: -5.945062160491943
    9. '=' → logprob: -6.570062160491943
    10. ' =' → logprob: -6.695062160491943

Token 461: '       ' (ID: 309)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06954652816057205
    2. ' path' → logprob: -2.9445464611053467
    3. '   ' → logprob: -4.944546699523926
    4. '[path' → logprob: -5.194546699523926
    5. '[' → logprob: -7.694546699523926
    6. '=' → logprob: -7.944546699523926
    7. ' =' → logprob: -8.569546699523926
    8. '
' → logprob: -8.819546699523926
    9. '	path' → logprob: -8.819546699523926
    10. '<|end|>' → logprob: -8.819546699523926

Token 462: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.0002614550176076591
    2. ' path' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. '       ' → logprob: -19.250261306762695
    5. '	path' → logprob: -20.250261306762695
    6. ' ' → logprob: -20.875261306762695
    7. '_path' → logprob: -21.000261306762695
    8. '[path' → logprob: -21.625261306762695
    9. '(path' → logprob: -21.625261306762695
    10. '  ' → logprob: -21.875261306762695

Token 463: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. '_Add' → logprob: -17.125
    4. '_append' → logprob: -17.5
    5. 'Add' → logprob: -18.375
    6. '_added' → logprob: -18.5
    7. '_ad' → logprob: -18.625
    8. '_ADD' → logprob: -18.75
    9. ' _' → logprob: -19.375
    10. 'add' → logprob: -19.5

Token 464: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006310671451501548
    2. '[' → logprob: -7.375630855560303
    3. ' [' → logprob: -12.875631332397461
    4. '_add' → logprob: -14.625631332397461
    5. '```' → logprob: -14.625631332397461
    6. '[I' → logprob: -15.000631332397461
    7. '\[' → logprob: -15.750631332397461
    8. '   ' → logprob: -16.50063133239746
    9. ')[' → logprob: -16.87563133239746
    10. '[j' → logprob: -17.25063133239746

Token 465: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.29553350806236267
    2. '(' → logprob: -1.795533537864685
    3. '(n' → logprob: -2.9205334186553955
    4. 'i' → logprob: -3.7955334186553955
    5. '1' → logprob: -4.545533657073975
    6. ' (' → logprob: -5.920533657073975
    7. ' i' → logprob: -9.670533180236816
    8. 'n' → logprob: -10.795533180236816
    9. ' ' → logprob: -10.920533180236816
    10. '{i' → logprob: -11.045533180236816

Token 466: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.113854318857193
    2. '(i' → logprob: -2.36385440826416
    3. '(' → logprob: -4.36385440826416
    4. '1' → logprob: -7.36385440826416
    5. '(n' → logprob: -9.23885440826416
    6. ' i' → logprob: -9.86385440826416
    7. ' (' → logprob: -10.23885440826416
    8. '{i' → logprob: -12.36385440826416
    9. '-i' → logprob: -14.36385440826416
    10. ' ' → logprob: -14.48885440826416

Token 467: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6218716502189636
    2. '+' → logprob: -0.9968716502189636
    3. ']' → logprob: -3.1218717098236084
    4. ')' → logprob: -3.4968717098236084
    5. 'i' → logprob: -4.871871471405029
    6. ']-' → logprob: -5.371871471405029
    7. ')-' → logprob: -5.621871471405029
    8. '[i' → logprob: -6.996871471405029
    9. ' +' → logprob: -7.246871471405029
    10. '[' → logprob: -7.621871471405029

Token 468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '2' → logprob: -13.500007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '
' → logprob: -16.12500762939453
    6. '

' → logprob: -16.87500762939453
    7. '  ' → logprob: -17.75000762939453
    8. ')' → logprob: -18.00000762939453
    9. '```' → logprob: -18.37500762939453
    10. '{' → logprob: -18.87500762939453

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. '2' → logprob: -11.125018119812012
    3. ' ' → logprob: -12.875018119812012
    4. '   ' → logprob: -15.000018119812012
    5. '```' → logprob: -16.375017166137695
    6. '
' → logprob: -16.875017166137695
    7. '

' → logprob: -18.000017166137695
    8. '  ' → logprob: -18.187517166137695
    9. '``' → logprob: -18.687517166137695
    10. '１' → logprob: -19.187517166137695

Token 470: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002214488573372364
    2. ']' → logprob: -6.127214431762695
    3. ']]' → logprob: -10.627214431762695
    4. ' ]' → logprob: -13.127214431762695
    5. '])' → logprob: -14.002214431762695
    6. ')' → logprob: -14.002214431762695
    7. ' )' → logprob: -14.502214431762695
    8. ']=' → logprob: -15.377214431762695
    9. '   ' → logprob: -15.502214431762695
    10. '")]' → logprob: -16.377214431762695

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001966104842722416
    2. ' =' → logprob: -6.3769659996032715
    3. ']' → logprob: -8.62696647644043
    4. ']=' → logprob: -9.37696647644043
    5. ']+=' → logprob: -16.87696647644043
    6. ')=' → logprob: -17.00196647644043
    7. '[' → logprob: -17.62696647644043
    8. '+=' → logprob: -17.87696647644043
    9. '<|end|>' → logprob: -18.00196647644043
    10. ')' → logprob: -18.12696647644043

Token 472: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.5000057220459
    4. '0' → logprob: -19.6250057220459
    5. '  ' → logprob: -20.1250057220459
    6. '```' → logprob: -21.6250057220459
    7. '[' → logprob: -22.0625057220459
    8. '۱' → logprob: -22.3125057220459
    9. '	' → logprob: -22.5625057220459
    10. '' → logprob: -22.6250057220459

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.625
    4. '0' → logprob: -19.3125
    5. '[' → logprob: -19.9375
    6. '```' → logprob: -19.9375
    7. '  ' → logprob: -20.25
    8. '=' → logprob: -20.5625
    9. '۱' → logprob: -20.5625
    10. '１' → logprob: -20.75

Token 474: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' utilise' (ID: 70283)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5334558486938477
    2. ')' → logprob: -2.5334558486938477
    3. ' ]' → logprob: -2.6584558486938477
    4. ']' → logprob: -3.0334558486938477
    5. '=' → logprob: -3.1584558486938477
    6. ' ' → logprob: -3.4084558486938477
    7. ' #' → logprob: -3.4084558486938477
    8. ' )' → logprob: -3.9084558486938477
    9. 'replace' → logprob: -4.783455848693848
    10. 'reverse' → logprob: -4.908455848693848

Token 478: ' -(' (ID: 66319)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.8802499771118164
    2. 'i' → logprob: -1.7552499771118164
    3. ' i' → logprob: -1.8802499771118164
    4. ' -(' → logprob: -2.5052499771118164
    5. '-i' → logprob: -2.7552499771118164
    6. ' -' → logprob: -3.2552499771118164
    7. 'n' → logprob: -3.7552499771118164
    8. ' n' → logprob: -3.8802499771118164
    9. '-' → logprob: -4.505249977111816
    10. '-n' → logprob: -4.755249977111816

Token 479: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4293450117111206
    2. '(i' → logprob: -1.0543450117111206
    3. '(' → logprob: -8.55434513092041
    4. '1' → logprob: -8.80434513092041
    5. ' (' → logprob: -8.80434513092041
    6. ' i' → logprob: -9.30434513092041
    7. ')' → logprob: -11.17934513092041
    8. ')i' → logprob: -11.42934513092041
    9. '{i' → logprob: -11.55434513092041
    10. '   ' → logprob: -11.67934513092041

Token 480: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0182053092867136
    2. ' +' → logprob: -4.018205165863037
    3. '-' → logprob: -10.768205642700195
    4. '1' → logprob: -11.018205642700195
    5. ')' → logprob: -11.893205642700195
    6. ' -' → logprob: -12.393205642700195
    7. '+i' → logprob: -13.643205642700195
    8. '   ' → logprob: -13.768205642700195
    9. 'i' → logprob: -13.893205642700195
    10. ')-' → logprob: -14.018205642700195

Token 481: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. '2' → logprob: -10.625036239624023
    3. ' ' → logprob: -11.500036239624023
    4. '   ' → logprob: -14.250036239624023
    5. '
' → logprob: -15.250036239624023
    6. ')' → logprob: -15.500036239624023
    7. '3' → logprob: -15.625036239624023
    8. '```' → logprob: -15.750036239624023
    9. '0' → logprob: -16.187536239624023
    10. '

' → logprob: -16.375036239624023

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. '2' → logprob: -11.125035285949707
    3. ' ' → logprob: -11.250035285949707
    4. '   ' → logprob: -13.375035285949707
    5. ')' → logprob: -13.500035285949707
    6. '
' → logprob: -13.625035285949707
    7. '```' → logprob: -14.625035285949707
    8. '

' → logprob: -15.000035285949707
    9. '0' → logprob: -15.312535285949707
    10. '3' → logprob: -15.437535285949707

Token 483: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0056123388931155205
    2. ')]' → logprob: -5.255612373352051
    3. ']' → logprob: -8.38061237335205
    4. ' )' → logprob: -9.38061237335205
    5. ')])' → logprob: -10.00561237335205
    6. '])' → logprob: -11.63061237335205
    7. ')
' → logprob: -12.25561237335205
    8. ')#' → logprob: -13.63061237335205
    9. ')

' → logprob: -14.25561237335205
    10. ')...' → logprob: -14.50561237335205

Token 484: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' remplir' (ID: 113625)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3790834844112396
    2. ' accéder' → logprob: -1.879083514213562
    3. 'acc' → logprob: -2.1290833950042725
    4. 'comp' → logprob: -3.6290833950042725
    5. ' index' → logprob: -4.754083633422852
    6. 'modifier' → logprob: -6.504083633422852
    7. 'ré' → logprob: -6.629083633422852
    8. ' parcour' → logprob: -6.879083633422852
    9. ' acc' → logprob: -7.004083633422852
    10. 'assign' → logprob: -7.629083633422852

Token 486: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6405118703842163
    2. 'la' → logprob: -1.0155118703842163
    3. 'path' → logprob: -3.765511989593506
    4. ' path' → logprob: -3.890511989593506
    5. 'l' → logprob: -4.140511989593506
    6. 'le' → logprob: -4.390511989593506
    7. ' les' → logprob: -5.140511989593506
    8. 'the' → logprob: -5.140511989593506
    9. 'les' → logprob: -5.140511989593506
    10. ' the' → logprob: -5.265511989593506

Token 487: ' liste' (ID: 31719)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0298302173614502
    2. 'path' → logprob: -2.02983021736145
    3. 'liste' → logprob: -2.27983021736145
    4. 'n' → logprob: -2.52983021736145
    5. '```' → logprob: -2.90483021736145
    6. 'index' → logprob: -3.27983021736145
    7. '-i' → logprob: -3.40483021736145
    8. ' path' → logprob: -3.90483021736145
    9. 'list' → logprob: -3.90483021736145
    10. ' i' → logprob: -4.154829978942871

Token 488: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5556961894035339
    2. '0' → logprob: -2.1806962490081787
    3. 'l' → logprob: -2.8056962490081787
    4. '-i' → logprob: -2.8056962490081787
    5. ' i' → logprob: -3.3056962490081787
    6. 'index' → logprob: -3.3056962490081787
    7. '-l' → logprob: -3.9306962490081787
    8. ' la' → logprob: -4.0556960105896
    9. 'the' → logprob: -4.3056960105896
    10. '-' → logprob: -4.3056960105896

Token 490: ''en' (ID: 16740)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.9636125564575195
    2. 'en' → logprob: -2.0886125564575195
    3. 'indice' → logprob: -2.0886125564575195
    4. 'index' → logprob: -2.2136125564575195
    5. 'a' → logprob: -2.4636125564575195
    6. ''en' → logprob: -2.7136125564575195
    7. 'fin' → logprob: -3.3386125564575195
    8. ''end' → logprob: -3.9636125564575195
    9. '-' → logprob: -4.9636125564575195
    10. '`' → logprob: -4.9636125564575195

Token 491: 'vers' (ID: 3674)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3154498040676117
    2. 'vers' → logprob: -1.315449833869934
    3. 'nd' → logprob: -7.4404497146606445
    4. 'ds' → logprob: -8.065449714660645
    5. 'de' → logprob: -8.315449714660645
    6. 'dl' → logprob: -8.690449714660645
    7. 'dos' → logprob: -8.690449714660645
    8. 'do' → logprob: -9.565449714660645
    9. 'dro' → logprob: -9.565449714660645
    10. 'dor' → logprob: -9.565449714660645

Token 492: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03978788107633591
    2. '-i' → logprob: -4.414787769317627
    3. ')])' → logprob: -4.914787769317627
    4. '-' → logprob: -5.164787769317627
    5. 'i' → logprob: -5.914787769317627
    6. ')i' → logprob: -6.164787769317627
    7. ' )' → logprob: -6.289787769317627
    8. '-n' → logprob: -6.289787769317627
    9. '])' → logprob: -6.664787769317627
    10. ' -' → logprob: -7.039787769317627

Token 494: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4686046838760376
    2. '-l' → logprob: -1.5936046838760376
    3. 'la' → logprob: -1.8436046838760376
    4. 'index' → logprob: -2.093604564666748
    5. 'i' → logprob: -2.468604564666748
    6. 'len' → logprob: -3.093604564666748
    7. ')' → logprob: -3.468604564666748
    8. ' partir' → logprob: -3.593604564666748
    9. 'n' → logprob: -4.093604564666748
    10. '-' → logprob: -4.843604564666748

Token 495: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6804777383804321
    2. 'du' → logprob: -1.9304777383804321
    3. ' de' → logprob: -2.1804776191711426
    4. ')' → logprob: -2.4304776191711426
    5. ']' → logprob: -3.1804776191711426
    6. ' du' → logprob: -3.4304776191711426
    7. '1' → logprob: -3.9304776191711426
    8. 'from' → logprob: -3.9304776191711426
    9. 'd' → logprob: -5.430477619171143
    10. '   ' → logprob: -5.555477619171143

Token 496: ' la' (ID: 557)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23997431993484497
    2. '-n' → logprob: -2.4899742603302
    3. ' -' → logprob: -2.8649742603302
    4. '-i' → logprob: -2.9899742603302
    5. '-l' → logprob: -4.489974498748779
    6. '1' → logprob: -5.739974498748779
    7. '-end' → logprob: -5.864974498748779
    8. 'n' → logprob: -6.239974498748779
    9. ')' → logprob: -6.489974498748779
    10. 'i' → logprob: -7.114974498748779

Token 497: ' fin' (ID: 2131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1877589374780655
    2. 'fin' → logprob: -2.0627589225769043
    3. ' end' → logprob: -4.312758922576904
    4. '1' → logprob: -4.312758922576904
    5. '-end' → logprob: -5.062758922576904
    6. 'last' → logprob: -5.687758922576904
    7. '-fin' → logprob: -6.312758922576904
    8. '-' → logprob: -6.437758922576904
    9. ' fin' → logprob: -6.437758922576904
    10. 'dern' → logprob: -6.687758922576904

Token 498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001875671005109325
    2. ' )' → logprob: -8.750187873840332
    3. ')
' → logprob: -10.875187873840332
    4. ')]' → logprob: -12.125187873840332
    5. '   ' → logprob: -14.125187873840332
    6. ']' → logprob: -14.125187873840332
    7. '))' → logprob: -14.500187873840332
    8. '<|end|>' → logprob: -14.500187873840332
    9. ')#' → logprob: -14.875187873840332
    10. ')])' → logprob: -14.875187873840332

Token 499: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' On' (ID: 2160)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0006721630343236029
    2. 'value' → logprob: -7.375672340393066
    3. '       ' → logprob: -10.875672340393066
    4. '   ' → logprob: -10.875672340393066
    5. ' path' → logprob: -12.750672340393066
    6. '```' → logprob: -13.125672340393066
    7. '#' → logprob: -13.500672340393066
    8. '           ' → logprob: -15.500672340393066
    9. 'for' → logprob: -15.625672340393066
    10. '
' → logprob: -15.875672340393066

Token 502: ' sauveg' (ID: 133494)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.046613432466983795
    2. 'value' → logprob: -3.1716134548187256
    3. ' path' → logprob: -5.9216132164001465
    4. ' value' → logprob: -8.671613693237305
    5. '#' → logprob: -8.921613693237305
    6. 'code' → logprob: -9.171613693237305
    7. 'add' → logprob: -9.671613693237305
    8. '<|end|>' → logprob: -10.296613693237305
    9. 'space' → logprob: -10.421613693237305
    10. 's' → logprob: -10.421613693237305

Token 503: 'arde' (ID: 11236)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.6829147934913635
    2. 'value' → logprob: -1.9329147338867188
    3. '       ' → logprob: -2.1829147338867188
    4. 'te' → logprob: -3.1829147338867188
    5. 'e' → logprob: -3.3079147338867188
    6. 'de' → logprob: -3.5579147338867188
    7. 'le' → logprob: -3.6829147338867188
    8. 'age' → logprob: -3.9329147338867188
    9. 'path' → logprob: -4.057914733886719
    10. 'ise' → logprob: -4.057914733886719

Token 504: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.063392773270607
    2. ' ' → logprob: -3.8133928775787354
    3. 'value' → logprob: -3.8133928775787354
    4. ' value' → logprob: -4.688392639160156
    5. '   ' → logprob: -5.813392639160156
    6. 'path' → logprob: -5.813392639160156
    7. '(' → logprob: -6.813392639160156
    8. ' path' → logprob: -8.688392639160156
    9. '       ' → logprob: -8.688392639160156
    10. ' (' → logprob: -8.938392639160156

Token 505: ' valeur' (ID: 41664)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26448068022727966
    2. 'value' → logprob: -1.764480710029602
    3. 'val' → logprob: -3.3894805908203125
    4. ' value' → logprob: -3.8894805908203125
    5. ' ' → logprob: -5.7644805908203125
    6. '(' → logprob: -6.7644805908203125
    7. '   ' → logprob: -7.0144805908203125
    8. 'current' → logprob: -7.8894805908203125
    9. ' valeur' → logprob: -8.389480590820312
    10. ' (' → logprob: -8.889480590820312

Token 506: ' actuelle' (ID: 104951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7613745331764221
    2. 'path' → logprob: -1.7613744735717773
    3. '[' → logprob: -2.0113744735717773
    4. ' =' → logprob: -2.8863744735717773
    5. '   ' → logprob: -3.0113744735717773
    6. '[i' → logprob: -3.1363744735717773
    7. '2' → logprob: -4.136374473571777
    8. ' +=' → logprob: -4.761374473571777
    9. ' de' → logprob: -5.136374473571777
    10. 'de' → logprob: -5.136374473571777

Token 507: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3605653047561646
    2. '=' → logprob: -1.6105653047561646
    3. '[' → logprob: -1.7355653047561646
    4. '(' → logprob: -2.235565185546875
    5. ' =' → logprob: -2.360565185546875
    6. 'value' → logprob: -2.860565185546875
    7. 's' → logprob: -3.735565185546875
    8. '   ' → logprob: -4.360565185546875
    9. ' (' → logprob: -4.735565185546875
    10. '(value' → logprob: -4.735565185546875

Token 508: ' utiliser' (ID: 43227)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.06246470287442207
    2. 'i' → logprob: -3.062464714050293
    3. 'path' → logprob: -5.437464714050293
    4. 'aj' → logprob: -5.562464714050293
    5. ' value' → logprob: -5.687464714050293
    6. 'add' → logprob: -8.062464714050293
    7. ' ' → logprob: -8.062464714050293
    8. 'val' → logprob: -8.187464714050293
    9. ' i' → logprob: -8.562464714050293
    10. 'n' → logprob: -8.937464714050293

Token 509: ' pour' (ID: 1930)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.15312018990516663
    2. '=' → logprob: -3.028120279312134
    3. '[value' → logprob: -3.028120279312134
    4. '[i' → logprob: -3.653120279312134
    5. ' value' → logprob: -4.653120040893555
    6. ' =' → logprob: -5.528120040893555
    7. '=value' → logprob: -6.153120040893555
    8. '(value' → logprob: -7.528120040893555
    9. 'for' → logprob: -7.528120040893555
    10. 'in' → logprob: -7.778120040893555

Token 510: ' ce' (ID: 2357)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.029840858653187752
    2. 'value' → logprob: -3.5298409461975098
    3. ' path' → logprob: -10.029840469360352
    4. 'm' → logprob: -11.154840469360352
    5. ' value' → logprob: -11.279840469360352
    6. 'l' → logprob: -12.404840469360352
    7. 'i' → logprob: -13.029840469360352
    8. ' ' → logprob: -13.279840469360352
    9. '```' → logprob: -13.529840469360352
    10. '#' → logprob: -13.779840469360352

Token 511: ' nouveau' (ID: 23184)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17471975088119507
    2. 'path' → logprob: -2.79971981048584
    3. '-(' → logprob: -3.42471981048584
    4. 'rang' → logprob: -3.79971981048584
    5. ' i' → logprob: -4.17471981048584
    6. '[-' → logprob: -4.42471981048584
    7. '[i' → logprob: -5.54971981048584
    8. '[' → logprob: -6.17471981048584
    9. '   ' → logprob: -6.42471981048584
    10. 'range' → logprob: -6.54971981048584

Token 512: ' chemin' (ID: 45035)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1717126369476318
    2. 'path' → logprob: -1.2967126369476318
    3. 'che' → logprob: -1.6717126369476318
    4. 'rang' → logprob: -1.6717126369476318
    5. '   ' → logprob: -4.796712875366211
    6. 'range' → logprob: -4.921712875366211
    7. '[i' → logprob: -4.921712875366211
    8. '(i' → logprob: -5.671712875366211
    9. 'niveau' → logprob: -6.671712875366211
    10. '```' → logprob: -6.671712875366211

Token 513: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.022138496860861778
    2. '       ' → logprob: -4.397138595581055
    3. '[i' → logprob: -5.772138595581055
    4. ' path' → logprob: -5.897138595581055
    5. '[path' → logprob: -6.647138595581055
    6. 'value' → logprob: -7.647138595581055
    7. '   ' → logprob: -7.897138595581055
    8. '[' → logprob: -7.897138595581055
    9. '
' → logprob: -8.147138595581055
    10. '=' → logprob: -8.272138595581055

Token 514: '       ' (ID: 309)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005689630284905434
    2. '[-' → logprob: -5.38068962097168
    3. '[' → logprob: -7.50568962097168
    4. 'value' → logprob: -8.25568962097168
    5. '=' → logprob: -9.50568962097168
    6. '[(' → logprob: -9.63068962097168
    7. ' [' → logprob: -10.50568962097168
    8. ' =' → logprob: -10.63068962097168
    9. 'path' → logprob: -10.75568962097168
    10. '[n' → logprob: -11.25568962097168

Token 515: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.018163170665502548
    2. 'value' → logprob: -4.018163204193115
    3. ' path' → logprob: -11.768162727355957
    4. '   ' → logprob: -13.268162727355957
    5. ' value' → logprob: -13.393162727355957
    6. '       ' → logprob: -13.893162727355957
    7. '           ' → logprob: -14.143162727355957
    8. '
' → logprob: -15.893162727355957
    9. '```' → logprob: -15.893162727355957
    10. ' ' → logprob: -16.143163681030273

Token 516: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.5048530030981055e-06
    2. 'add' → logprob: -14.000001907348633
    3. 'Add' → logprob: -15.000001907348633
    4. '_ad' → logprob: -16.625001907348633
    5. '_added' → logprob: -17.000001907348633
    6. '_value' → logprob: -17.125001907348633
    7. '_Add' → logprob: -17.125001907348633
    8. '=' → logprob: -17.250001907348633
    9. '_' → logprob: -17.375001907348633
    10. 's' → logprob: -18.000001907348633

Token 517: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.729906196298543e-06
    2. '_values' → logprob: -12.500009536743164
    3. '_val' → logprob: -13.125009536743164
    4. '[-' → logprob: -13.625009536743164
    5. '-value' → logprob: -14.125009536743164
    6. '[_' → logprob: -15.000009536743164
    7. '_VALUE' → logprob: -15.250009536743164
    8. '_Value' → logprob: -15.375009536743164
    9. '```' → logprob: -15.500009536743164
    10. '_' → logprob: -15.750009536743164

Token 518: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002334568416699767
    2. '[i' → logprob: -9.12523365020752
    3. '[' → logprob: -9.50023365020752
    4. '[n' → logprob: -10.12523365020752
    5. '=' → logprob: -12.37523365020752
    6. '.append' → logprob: -13.37523365020752
    7. '[(' → logprob: -13.50023365020752
    8. '   ' → logprob: -14.37523365020752
    9. '[m' → logprob: -14.87523365020752
    10. ' [' → logprob: -15.00023365020752

Token 519: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0019646743312478065
    2. '(' → logprob: -6.251964569091797
    3. ' (' → logprob: -10.751964569091797
    4. '1' → logprob: -12.251964569091797
    5. 'i' → logprob: -13.001964569091797
    6. '[i' → logprob: -13.626964569091797
    7. '(I' → logprob: -13.626964569091797
    8. '((' → logprob: -13.626964569091797
    9. '(n' → logprob: -14.126964569091797
    10. '-(' → logprob: -14.376964569091797

Token 520: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001381901791319251
    2. '(i' → logprob: -6.626381874084473
    3. '1' → logprob: -10.251381874084473
    4. ' i' → logprob: -11.001381874084473
    5. '{i' → logprob: -13.751381874084473
    6. '(' → logprob: -14.001381874084473
    7. '   ' → logprob: -14.001381874084473
    8. ' (' → logprob: -14.626381874084473
    9. '[i' → logprob: -15.876381874084473
    10. ')i' → logprob: -16.50138282775879

Token 521: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3038106858730316
    2. ' +' → logprob: -1.428810715675354
    3. '1' → logprob: -3.8038105964660645
    4. ' ' → logprob: -9.803811073303223
    5. '(' → logprob: -10.803811073303223
    6. '   ' → logprob: -10.803811073303223
    7. '[' → logprob: -11.178811073303223
    8. ')' → logprob: -13.178811073303223
    9. '```' → logprob: -13.303811073303223
    10. '_' → logprob: -13.803811073303223

Token 522: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -14.00009822845459
    4. '```' → logprob: -15.12509822845459
    5. '2' → logprob: -15.25009822845459
    6. '
' → logprob: -15.75009822845459
    7. '

' → logprob: -17.125097274780273
    8. ')' → logprob: -17.500097274780273
    9. '``' → logprob: -17.500097274780273
    10. '１' → logprob: -17.812597274780273

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.125019073486328
    3. '2' → logprob: -13.500019073486328
    4. '   ' → logprob: -13.625019073486328
    5. '```' → logprob: -14.812519073486328
    6. 'i' → logprob: -15.375019073486328
    7. '
' → logprob: -15.500019073486328
    8. '(' → logprob: -16.250019073486328
    9. '

' → logprob: -16.687519073486328
    10. '(i' → logprob: -16.750019073486328

Token 524: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02148730866611004
    2. ')]' → logprob: -3.896487236022949
    3. ')' → logprob: -7.146487236022949
    4. ']=' → logprob: -9.14648723602295
    5. '])' → logprob: -10.14648723602295
    6. ' ]' → logprob: -11.77148723602295
    7. ']
' → logprob: -13.77148723602295
    8. '   ' → logprob: -14.52148723602295
    9. '=' → logprob: -14.77148723602295
    10. ']]' → logprob: -14.77148723602295

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.8325677703833207e-05
    2. ' =' → logprob: -10.500028610229492
    3. ']=' → logprob: -15.125028610229492
    4. '+=' → logprob: -16.000028610229492
    5. ')=' → logprob: -16.375028610229492
    6. '=value' → logprob: -16.500028610229492
    7. '=

' → logprob: -16.500028610229492
    8. ']' → logprob: -17.000028610229492
    9. ')' → logprob: -17.500028610229492
    10. 'value' → logprob: -17.875028610229492

Token 526: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4951973855495453
    2. '2' → logprob: -1.1201974153518677
    3. ' value' → logprob: -2.870197296142578
    4. ' ' → logprob: -5.120197296142578
    5. '  ' → logprob: -7.620197296142578
    6. '   ' → logprob: -7.745197296142578
    7. '(value' → logprob: -8.245197296142578
    8. '(' → logprob: -8.495197296142578
    9. ' (' → logprob: -10.245197296142578
    10. '    ' → logprob: -10.495197296142578

Token 527: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3217986524105072
    2. '+=' → logprob: -2.07179856300354
    3. ' +' → logprob: -2.57179856300354
    4. ' +=' → logprob: -2.69679856300354
    5. '-' → logprob: -6.196798801422119
    6. '=' → logprob: -6.946798801422119
    7. '   ' → logprob: -7.196798801422119
    8. ' -' → logprob: -7.321798801422119
    9. ' -=' → logprob: -7.571798801422119
    10. '    ' → logprob: -8.446798324584961

Token 528: '       ' (ID: 309)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.1505650281906128
    2. '
' → logprob: -1.2755650281906128
    3. '<|end|>' → logprob: -2.0255651473999023
    4. ' 
' → logprob: -2.4005651473999023
    5. ' value' → logprob: -3.0255651473999023
    6. '   ' → logprob: -3.6505651473999023
    7. '\n' → logprob: -3.7755651473999023
    8. '    
' → logprob: -4.025565147399902
    9. '  
' → logprob: -4.150565147399902
    10. ' ' → logprob: -4.150565147399902

Token 529: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0864578485488892
    2. 'value' → logprob: -1.0864578485488892
    3. '+=' → logprob: -1.8364578485488892
    4. '       ' → logprob: -2.0864577293395996
    5. ' +=' → logprob: -3.4614577293395996
    6. '+
' → logprob: -5.5864577293396
    7. ' value' → logprob: -5.8364577293396
    8. ' +' → logprob: -6.3364577293396
    9. '   ' → logprob: -6.8364577293396
    10. '=' → logprob: -7.4614577293396

Token 530: ' On' (ID: 2160)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -5.9153885558771435e-06
    2. ' value' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.750005722045898
    4. '```' → logprob: -17.6250057220459
    5. '#' → logprob: -18.5000057220459
    6. '       ' → logprob: -18.7500057220459
    7. '	value' → logprob: -19.0000057220459
    8. 'val' → logprob: -19.8750057220459
    9. '
' → logprob: -20.1250057220459
    10. '"value' → logprob: -20.1250057220459

Token 531: ' augmente' (ID: 150199)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4107469618320465
    2. 'value' → logprob: -1.1607469320297241
    3. '*=' → logprob: -4.785747051239014
    4. ' +=' → logprob: -5.035747051239014
    5. ' value' → logprob: -5.285747051239014
    6. '=' → logprob: -5.660747051239014
    7. ' *=' → logprob: -9.160746574401855
    8. '_value' → logprob: -10.785746574401855
    9. '   ' → logprob: -11.035746574401855
    10. '=value' → logprob: -11.410746574401855

Token 532: ' '' (ID: 461)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5760279893875122
    2. 'value' → logprob: -0.8260279893875122
    3. '(value' → logprob: -10.076027870178223
    4. ' ' → logprob: -11.076027870178223
    5. '   ' → logprob: -11.701027870178223
    6. ' +=' → logprob: -12.201027870178223
    7. ')' → logprob: -12.701027870178223
    8. '	value' → logprob: -12.951027870178223
    9. '=' → logprob: -13.201027870178223
    10. ')value' → logprob: -13.576027870178223

Token 533: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -2.7848862373502925e-05
    2. ' value' → logprob: -10.500027656555176
    3. 'alue' → logprob: -17.125028610229492
    4. '
' → logprob: -17.750028610229492
    5. '   ' → logprob: -17.875028610229492
    6. '"value' → logprob: -17.875028610229492
    7. '(value' → logprob: -18.000028610229492
    8. '	value' → logprob: -18.125028610229492
    9. '```' → logprob: -18.500028610229492
    10. ')value' → logprob: -18.500028610229492

Token 534: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1530299186706543
    2. ' *=' → logprob: -1.4030299186706543
    3. '+=' → logprob: -1.5280299186706543
    4. '*=' → logprob: -1.7780299186706543
    5. '=' → logprob: -3.4030299186706543
    6. ' <<=' → logprob: -4.153029918670654
    7. '*' → logprob: -6.528029918670654
    8. ' =' → logprob: -6.653029918670654
    9. '<<' → logprob: -8.153030395507812
    10. '   ' → logprob: -8.403030395507812

Token 535: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5594955086708069
    2. '*=' → logprob: -1.434495449066162
    3. ' +=' → logprob: -2.184495449066162
    4. ' *=' → logprob: -2.684495449066162
    5. '=' → logprob: -4.809495449066162
    6. ' <<=' → logprob: -7.184495449066162
    7. ' =' → logprob: -7.809495449066162
    8. '*' → logprob: -9.05949592590332
    9. '+' → logprob: -11.43449592590332
    10. '   ' → logprob: -11.55949592590332

Token 536: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9080860018730164
    2. ' value' → logprob: -1.0330860614776611
    3. 'value' → logprob: -1.6580860614776611
    4. ' ' → logprob: -3.158086061477661
    5. '1' → logprob: -5.283085823059082
    6. ' (' → logprob: -6.408085823059082
    7. '(' → logprob: -8.033085823059082
    8. 'path' → logprob: -8.283085823059082
    9. '(value' → logprob: -9.158085823059082
    10. '   ' → logprob: -9.283085823059082

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012513887137174606
    2. 'value' → logprob: -4.887514114379883
    3. ' ' → logprob: -6.137514114379883
    4. 'path' → logprob: -6.887514114379883
    5. '(' → logprob: -7.262514114379883
    6. ' value' → logprob: -7.512514114379883
    7. '1' → logprob: -8.262514114379883
    8. '**' → logprob: -9.512514114379883
    9. ' (' → logprob: -10.012514114379883
    10. ' path' → logprob: -11.137514114379883

Token 538: '^(' (ID: 32612)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.11333471536636353
    2. '**' → logprob: -2.2383346557617188
    3. ' *' → logprob: -8.113334655761719
    4. '*' → logprob: -8.488334655761719
    5. ' ' → logprob: -12.488334655761719
    6. ' ' → logprob: -14.363334655761719
    7. '(value' → logprob: -14.738334655761719
    8. ' **)' → logprob: -14.738334655761719
    9. '[value' → logprob: -15.488334655761719
    10. ' **
' → logprob: -15.613334655761719

Token 539: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.23073236644268036
    2. 'i' → logprob: -1.9807323217391968
    3. 'n' → logprob: -3.1057324409484863
    4. ' (' → logprob: -4.105732440948486
    5. '(i' → logprob: -5.980732440948486
    6. ' i' → logprob: -6.355732440948486
    7. ' n' → logprob: -7.480732440948486
    8. '1' → logprob: -7.605732440948486
    9. 'm' → logprob: -7.855732440948486
    10. '(' → logprob: -7.855732440948486

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43294718861579895
    2. ' -' → logprob: -1.0579471588134766
    3. '(i' → logprob: -6.557947158813477
    4. '-i' → logprob: -7.057947158813477
    5. ' (' → logprob: -7.557947158813477
    6. '-(' → logprob: -7.807947158813477
    7. '(' → logprob: -8.057947158813477
    8. '   ' → logprob: -8.807947158813477
    9. '(n' → logprob: -9.432947158813477
    10. ' -(' → logprob: -9.432947158813477

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48864632844924927
    2. '1' → logprob: -0.9886463284492493
    3. 'i' → logprob: -4.863646507263184
    4. '(i' → logprob: -5.863646507263184
    5. ' ' → logprob: -6.488646507263184
    6. '(' → logprob: -6.613646507263184
    7. '   ' → logprob: -7.738646507263184
    8. '-' → logprob: -8.488646507263184
    9. ' i' → logprob: -8.988646507263184
    10. ' (' → logprob: -9.863646507263184

Token 542: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03300509229302406
    2. '-' → logprob: -3.7830049991607666
    3. '-i' → logprob: -4.658005237579346
    4. ')' → logprob: -9.408004760742188
    5. '-(' → logprob: -9.908004760742188
    6. ' -(' → logprob: -10.283004760742188
    7. ' ' → logprob: -11.033004760742188
    8. '   ' → logprob: -11.533004760742188
    9. '(i' → logprob: -12.283004760742188
    10. '**' → logprob: -12.408004760742188

Token 543: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2283879667520523
    2. ')' → logprob: -1.8533879518508911
    3. '+' → logprob: -3.3533880710601807
    4. '   ' → logprob: -4.853387832641602
    5. ')+' → logprob: -6.228387832641602
    6. ' )' → logprob: -6.853387832641602
    7. '       ' → logprob: -7.853387832641602
    8. ' ' → logprob: -7.978387832641602
    9. ' +
' → logprob: -8.353387832641602
    10. ' +=' → logprob: -9.103387832641602

Token 544: ' pour' (ID: 1930)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22108325362205505
    2. ' +' → logprob: -1.9710832834243774
    3. '+' → logprob: -3.471083164215088
    4. '+=' → logprob: -3.596083164215088
    5. 'value' → logprob: -8.971083641052246
    6. '   ' → logprob: -9.096083641052246
    7. '<|end|>' → logprob: -9.096083641052246
    8. ' +
' → logprob: -9.596083641052246
    9. '=' → logprob: -10.471083641052246
    10. ' =' → logprob: -10.846083641052246

Token 545: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06761977821588516
    2. '**' → logprob: -3.817619800567627
    3. '+' → logprob: -4.567619800567627
    4. '(' → logprob: -4.817619800567627
    5. ')' → logprob: -5.567619800567627
    6. ' (' → logprob: -5.692619800567627
    7. ' ' → logprob: -5.817619800567627
    8. '   ' → logprob: -5.817619800567627
    9. ' +=' → logprob: -5.942619800567627
    10. ' +' → logprob: -6.192619800567627

Token 546: ' prochain' (ID: 52413)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11848127841949463
    2. '+=' → logprob: -2.243481159210205
    3. ' +=' → logprob: -5.618481159210205
    4. ')' → logprob: -7.618481159210205
    5. ' +' → logprob: -7.743481159210205
    6. 'value' → logprob: -8.243481636047363
    7. 'plus' → logprob: -8.493481636047363
    8. '+
' → logprob: -9.118481636047363
    9. '+)' → logprob: -9.368481636047363
    10. '=' → logprob: -9.618481636047363

Token 547: ' potentiel' (ID: 113761)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47492465376853943
    2. ' +' → logprob: -0.9749246835708618
    3. ' +=' → logprob: -8.59992504119873
    4. ')' → logprob: -8.97492504119873
    5. ' ' → logprob: -9.22492504119873
    6. ' +
' → logprob: -9.34992504119873
    7. '   ' → logprob: -9.59992504119873
    8. '+=' → logprob: -9.72492504119873
    9. '+
' → logprob: -10.47492504119873
    10. 'value' → logprob: -10.47492504119873

Token 548: ' ajout' (ID: 64605)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1194874495267868
    2. ' +' → logprob: -2.4944875240325928
    3. '(' → logprob: -3.6194875240325928
    4. '+=' → logprob: -7.244487285614014
    5. '   ' → logprob: -7.494487285614014
    6. '+
' → logprob: -7.619487285614014
    7. ')' → logprob: -7.869487285614014
    8. ' +=' → logprob: -8.744487762451172
    9. ' (' → logprob: -8.869487762451172
    10. '+(' → logprob: -8.994487762451172

Token 549: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7022954225540161
    2. ' +' → logprob: -1.0772954225540161
    3. '+' → logprob: -1.9522954225540161
    4. '+=' → logprob: -3.8272953033447266
    5. '=' → logprob: -8.702295303344727
    6. ' +
' → logprob: -9.702295303344727
    7. ' =' → logprob: -9.952295303344727
    8. '   ' → logprob: -11.077295303344727
    9. '+
' → logprob: -11.327295303344727
    10. '<|end|>' → logprob: -12.702295303344727

Token 550: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12250447273254395
    2. '+' → logprob: -2.497504472732544
    3. ' +=' → logprob: -3.497504472732544
    4. '+=' → logprob: -6.122504234313965
    5. '   ' → logprob: -8.122504234313965
    6. ' +
' → logprob: -9.247504234313965
    7. '=' → logprob: -9.497504234313965
    8. ' =' → logprob: -10.747504234313965
    9. ' ' → logprob: -11.497504234313965
    10. '+
' → logprob: -11.872504234313965

Token 551: ' value' (ID: 1432)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08991517871618271
    2. 'value' (adapté à ' value') → logprob: -3.2149152755737305
    3. ' +=' → logprob: -3.4649152755737305
    4. '+' → logprob: -4.4649152755737305
    5. '=' → logprob: -6.4649152755737305
    6. ' value' → logprob: -6.5899152755737305
    7. ' +' → logprob: -9.71491527557373
    8. '2' → logprob: -10.46491527557373
    9. '(value' → logprob: -11.83991527557373
    10. ' ' → logprob: -11.83991527557373

Token 552: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.051081012934446335
    2. ' +=' → logprob: -3.0510809421539307
    3. '=' → logprob: -6.17608118057251
    4. '+' → logprob: -7.80108118057251
    5. ' =' → logprob: -13.176080703735352
    6. ' +' → logprob: -15.426080703735352
    7. '+=(' → logprob: -15.551080703735352
    8. '+='' → logprob: -15.801080703735352
    9. '+="' → logprob: -16.92608070373535
    10. ']+=' → logprob: -17.05108070373535

Token 553: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25192946195602417
    2. ' ' → logprob: -1.501929521560669
    3. '  ' → logprob: -16.376930236816406
    4. ' (' → logprob: -16.626930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '(' → logprob: -16.751930236816406
    7. ' ' → logprob: -16.751930236816406
    8. '1' → logprob: -17.126930236816406
    9. ' two' → logprob: -19.251930236816406
    10. '`' → logprob: -19.251930236816406

Token 554: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.25048828125
    4. '(' → logprob: -16.00048828125
    5. '  ' → logprob: -16.62548828125
    6. '```' → logprob: -17.00048828125
    7. '1' → logprob: -17.62548828125
    8. '`' → logprob: -18.62548828125
    9. 'pow' → logprob: -19.00048828125
    10. '    ' → logprob: -19.31298828125

Token 555: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.0011545089073479176
    2. '**' → logprob: -6.87615442276001
    3. ' *' → logprob: -10.001154899597168
    4. ' ' → logprob: -10.001154899597168
    5. ' ^' → logprob: -12.251154899597168
    6. '<|end|>' → logprob: -12.251154899597168
    7. ' ' → logprob: -12.626154899597168
    8. ' **)' → logprob: -13.001154899597168
    9. '^(' → logprob: -13.251154899597168
    10. ')' → logprob: -13.376154899597168

Token 556: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015182080678641796
    2. ' (' → logprob: -4.265182018280029
    3. '(' → logprob: -6.890182018280029
    4. 'n' → logprob: -14.890182495117188
    5. '[n' → logprob: -18.140182495117188
    6. '(nn' → logprob: -18.265182495117188
    7. '(
' → logprob: -19.015182495117188
    8. '(N' → logprob: -19.140182495117188
    9. ' n' → logprob: -19.265182495117188
    10. '((' → logprob: -19.265182495117188

Token 557: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005905449856072664
    2. 'n' → logprob: -5.255905628204346
    3. '(' → logprob: -7.755905628204346
    4. ' (' → logprob: -8.380905151367188
    5. ' n' → logprob: -11.630905151367188
    6. '(
' → logprob: -13.505905151367188
    7. '[n' → logprob: -14.255905151367188
    8. '{' → logprob: -14.380905151367188
    9. '   ' → logprob: -14.505905151367188
    10. '((' → logprob: -14.755905151367188

Token 558: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1608206033706665
    2. ' -' → logprob: -1.9108206033706665
    3. '(' → logprob: -8.035820960998535
    4. '   ' → logprob: -9.410820960998535
    5. ' (' → logprob: -9.535820960998535
    6. '-(' → logprob: -9.910820960998535
    7. ' ' → logprob: -10.910820960998535
    8. '(n' → logprob: -11.285820960998535
    9. '-n' → logprob: -11.285820960998535
    10. '(-' → logprob: -12.160820960998535

Token 559: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016743489541113377
    2. ' ' → logprob: -6.626674175262451
    3. '1' → logprob: -8.25167465209961
    4. '(' → logprob: -9.62667465209961
    5. '   ' → logprob: -11.12667465209961
    6. ' (' → logprob: -13.50167465209961
    7. '(n' → logprob: -13.62667465209961
    8. '(i' → logprob: -13.75167465209961
    9. '  ' → logprob: -14.25167465209961
    10. '       ' → logprob: -14.75167465209961

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005877026706002653
    2. ' ' → logprob: -8.000587463378906
    3. '1' → logprob: -8.375587463378906
    4. '(' → logprob: -11.250587463378906
    5. '   ' → logprob: -12.875587463378906
    6. '(i' → logprob: -12.875587463378906
    7. 'i' → logprob: -13.375587463378906
    8. '(n' → logprob: -14.000587463378906
    9. ' (' → logprob: -14.625587463378906
    10. '(m' → logprob: -15.875587463378906

Token 561: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11622792482376099
    2. '-' → logprob: -2.491227865219116
    3. '-i' → logprob: -3.616227865219116
    4. '   ' → logprob: -10.741228103637695
    5. ' ' → logprob: -11.866228103637695
    6. '  ' → logprob: -13.116228103637695
    7. '	' → logprob: -13.116228103637695
    8. '    ' → logprob: -14.241228103637695
    9. '     ' → logprob: -14.866228103637695
    10. '       ' → logprob: -14.991228103637695

Token 562: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009773917496204376
    2. ' i' → logprob: -4.6347737312316895
    3. '   ' → logprob: -11.509774208068848
    4. '	i' → logprob: -12.759774208068848
    5. ' ' → logprob: -13.259774208068848
    6. '       ' → logprob: -14.134774208068848
    7. '```' → logprob: -14.759774208068848
    8. ')' → logprob: -15.134774208068848
    9. '_i' → logprob: -15.197274208068848
    10. '           ' → logprob: -15.322274208068848

Token 563: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020461321400944144
    2. ' )' → logprob: -8.875205039978027
    3. ')
' → logprob: -9.750205039978027
    4. '   ' → logprob: -12.250205039978027
    5. '))' → logprob: -15.125205039978027
    6. ')#' → logprob: -15.500205039978027
    7. ')
' → logprob: -15.875205039978027
    8. '')' → logprob: -16.00020408630371
    9. ')

' → logprob: -16.00020408630371
    10. ')}' → logprob: -16.25020408630371

Token 564: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1279299259185791
    2. '#' → logprob: -2.627929925918579
    3. '<|end|>' → logprob: -3.377929925918579
    4. 'for' → logprob: -5.5029296875
    5. 'n' → logprob: -5.5029296875
    6. '```' → logprob: -6.2529296875
    7. 'value' → logprob: -7.1279296875
    8. 'm' → logprob: -7.3779296875
    9. ')' → logprob: -7.7529296875
    10. 'result' → logprob: -8.1279296875

Token 565: ' Les' (ID: 7029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5138382315635681
    2. 'for' → logprob: -2.013838291168213
    3. 'graph' → logprob: -2.138838291168213
    4. '#' → logprob: -3.013838291168213
    5. 'result' → logprob: -3.138838291168213
    6. 'path' → logprob: -4.263838291168213
    7. 'm' → logprob: -4.513838291168213
    8. 'g' → logprob: -5.013838291168213
    9. 'adj' → logprob: -5.388838291168213
    10. 'n' → logprob: -5.388838291168213

Token 566: ' lignes' (ID: 81687)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26178213953971863
    2. 'print' → logprob: -2.886782169342041
    3. ' chemins' → logprob: -3.011782169342041
    4. ' #' → logprob: -3.386782169342041
    5. 'for' → logprob: -3.761782169342041
    6. ' for' → logprob: -4.136782169342041
    7. ' print' → logprob: -4.886782169342041
    8. ' path' → logprob: -5.011782169342041
    9. 'path' → logprob: -5.261782169342041
    10. ' chemin' → logprob: -5.511782169342041

Token 567: ' suivantes' (ID: 106173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09768742322921753
    2. 'for' → logprob: -3.0976874828338623
    3. 'print' → logprob: -4.347687244415283
    4. ' suivantes' → logprob: -4.597687244415283
    5. '...' → logprob: -4.847687244415283
    6. '=' → logprob: -5.472687244415283
    7. 'pour' → logprob: -6.097687244415283
    8. 'n' → logprob: -6.472687244415283
    9. ' =' → logprob: -7.347687244415283
    10. 'import' → logprob: -7.347687244415283

Token 568: ' étaient' (ID: 40979)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42208173871040344
    2. '#' → logprob: -1.672081708908081
    3. 'for' → logprob: -1.922081708908081
    4. ' for' → logprob: -5.04708194732666
    5. ':' → logprob: -7.29708194732666
    6. '#print' → logprob: -7.42208194732666
    7. ' print' → logprob: -8.04708194732666
    8. 'if' → logprob: -8.17208194732666
    9. 'result' → logprob: -8.17208194732666
    10. 'n' → logprob: -8.17208194732666

Token 569: ' comment' (ID: 5375)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1461455523967743
    2. '...' → logprob: -2.2711455821990967
    3. '```' → logprob: -4.896145343780518
    4. ':' → logprob: -5.271145343780518
    5. 'for' → logprob: -5.646145343780518
    6. 'n' → logprob: -6.146145343780518
    7. '<|end|>' → logprob: -6.646145343780518
    8. ' for' → logprob: -6.646145343780518
    9. 's' → logprob: -6.771145343780518
    10. ' #' → logprob: -6.896145343780518

Token 570: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.2819325029850006
    2. '#' → logprob: -1.4069324731826782
    3. 'é' → logprob: -7.656932353973389
    4. 'és' → logprob: -8.781932830810547
    5. 'ée' → logprob: -9.156932830810547
    6. 'nées' → logprob: -10.281932830810547
    7. '##' → logprob: -12.656932830810547
    8. 'è' → logprob: -12.781932830810547
    9. '```' → logprob: -13.406932830810547
    10. ' #' → logprob: -13.656932830810547

Token 571: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0032220338471233845
    2. '<|end|>' → logprob: -5.8782219886779785
    3. '#
' → logprob: -8.878222465515137
    4. '#print' → logprob: -9.753222465515137
    5. '```' → logprob: -9.753222465515137
    6. '
' → logprob: -10.128222465515137
    7. 'for' → logprob: -10.628222465515137
    8. '#if' → logprob: -11.378222465515137
    9. ' #' → logprob: -11.628222465515137
    10. '﻿#' → logprob: -11.628222465515137

Token 572: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.22865183651447296
    2. '#' → logprob: -1.7286518812179565
    3. 'la' → logprob: -4.728652000427246
    4. ' le' → logprob: -5.228652000427246
    5. 'l' → logprob: -5.728652000427246
    6. ' votre' → logprob: -5.978652000427246
    7. 'code' → logprob: -6.353652000427246
    8. 'Code' → logprob: -6.478652000427246
    9. 'v' → logprob: -7.228652000427246
    10. 'les' → logprob: -8.228652000427246

Token 573: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.1301104575395584
    2. '#' → logprob: -2.130110502243042
    3. ' code' → logprob: -6.380110263824463
    4. 'Code' → logprob: -8.005110740661621
    5. 'dern' → logprob: -8.130110740661621
    6. 'original' → logprob: -9.005110740661621
    7. 'ex' → logprob: -9.130110740661621
    8. 'der' → logprob: -10.005110740661621
    9. 'comment' → logprob: -10.005110740661621
    10. 'provided' → logprob: -10.005110740661621

Token 574: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00104150187689811
    2. '#print' → logprob: -7.251041412353516
    3. '#if' → logprob: -9.876041412353516
    4. '<|end|>' → logprob: -9.876041412353516
    5. '#index' → logprob: -10.001041412353516
    6. '#
' → logprob: -10.001041412353516
    7. 'for' → logprob: -10.751041412353516
    8. 'n' → logprob: -11.126041412353516
    9. '﻿#' → logprob: -11.376041412353516
    10. '
' → logprob: -11.376041412353516

Token 575: ''origine' (ID: 89355)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23931467533111572
    2. 'u' → logprob: -2.364314556121826
    3. 'e' → logprob: -2.739314556121826
    4. ''#' → logprob: -4.489314556121826
    5. ''origine' → logprob: -4.614314556121826
    6. '```' → logprob: -4.739314556121826
    7. 'ans' → logprob: -5.614314556121826
    8. '#print' → logprob: -5.864314556121826
    9. 'es' → logprob: -5.989314556121826
    10. 'i' → logprob: -6.989314556121826

Token 576: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0035583775024861097
    2. '#print' → logprob: -5.753558158874512
    3. '#index' → logprob: -9.253558158874512
    4. '#
' → logprob: -9.628558158874512
    5. '#if' → logprob: -10.253558158874512
    6. '
' → logprob: -10.378558158874512
    7. ''''
' → logprob: -10.628558158874512
    8. '"""
' → logprob: -10.753558158874512
    9. '```' → logprob: -10.878558158874512
    10. '#m' → logprob: -10.878558158874512

Token 577: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010157985612750053
    2. '#print' → logprob: -4.760158061981201
    3. '#if' → logprob: -7.885158061981201
    4. '#index' → logprob: -8.135157585144043
    5. '"""
' → logprob: -8.510157585144043
    6. ''''
' → logprob: -8.635157585144043
    7. '#
' → logprob: -9.010157585144043
    8. '```' → logprob: -9.260157585144043
    9. '#m' → logprob: -9.885157585144043
    10. '#line' → logprob: -10.260157585144043

Token 578: ' inutil' (ID: 154055)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.027358131483197212
    2. 'pass' → logprob: -4.277358055114746
    3. '#print' → logprob: -4.527358055114746
    4. 'for' → logprob: -6.902358055114746
    5. 'print' → logprob: -7.777358055114746
    6. '```' → logprob: -8.402358055114746
    7. '"""
' → logprob: -8.902358055114746
    8. '
' → logprob: -9.527358055114746
    9. ''''
' → logprob: -9.777358055114746
    10. '#if' → logprob: -10.152358055114746

Token 579: 'es' (ID: 268)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26094016432762146
    2. 'ées' → logprob: -1.7609401941299438
    3. 'for' → logprob: -3.3859400749206543
    4. 'é' → logprob: -5.135940074920654
    5. 'isées' → logprob: -5.760940074920654
    6. 'és' → logprob: -6.010940074920654
    7. '<|end|>' → logprob: -6.260940074920654
    8. 'érées' → logprob: -6.385940074920654
    9. 'es' → logprob: -6.635940074920654
    10. 'i' → logprob: -7.010940074920654

Token 580: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0008597695268690586
    2. '<|end|>' → logprob: -7.87585973739624
    3. '```' → logprob: -9.000860214233398
    4. '#print' → logprob: -9.125860214233398
    5. '#index' → logprob: -10.000860214233398
    6. '
' → logprob: -10.250860214233398
    7. '#
' → logprob: -10.500860214233398
    8. '#if' → logprob: -10.750860214233398
    9. ''''
' → logprob: -10.875860214233398
    10. '﻿#' → logprob: -11.000860214233398

Token 581: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.014309702441096306
    2. '<|end|>' → logprob: -4.389309883117676
    3. '```' → logprob: -7.514309883117676
    4. '#print' → logprob: -7.639309883117676
    5. '#index' → logprob: -8.639309883117676
    6. 'pass' → logprob: -9.389309883117676
    7. '
' → logprob: -9.514309883117676
    8. '   ' → logprob: -9.764309883117676
    9. '#if' → logprob: -10.014309883117676
    10. '﻿#' → logprob: -10.139309883117676

Token 583: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13727430999279022
    2. 'continue' → logprob: -2.5122742652893066
    3. 'pass' → logprob: -4.137274265289307
    4. 'n' → logprob: -5.262274265289307
    5. 'print' → logprob: -5.387274265289307
    6. '#print' → logprob: -5.387274265289307
    7. ' continue' → logprob: -5.637274265289307
    8. 'for' → logprob: -6.012274265289307
    9. 'contin' → logprob: -6.137274265289307
    10. 'stop' → logprob: -6.762274265289307

Token 584: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0946762561798096
    2. 'continue' → logprob: -1.2196762561798096
    3. '#' → logprob: -1.5946762561798096
    4. 'pas' → logprob: -2.9696762561798096
    5. 'pass' → logprob: -3.0946762561798096
    6. 'contin' → logprob: -4.0946760177612305
    7. ' continue' → logprob: -4.7196760177612305
    8. 's' → logprob: -4.9696760177612305
    9. 'for' → logprob: -5.2196760177612305
    10. 'sort' → logprob: -5.3446760177612305

Token 585: ' dé' (ID: 2393)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04262137785553932
    2. 'pas' → logprob: -3.917621374130249
    3. 'continue' → logprob: -4.542621612548828
    4. 'pass' → logprob: -5.417621612548828
    5. 'replace' → logprob: -6.917621612548828
    6. 'paste' → logprob: -7.667621612548828
    7. '#print' → logprob: -7.667621612548828
    8. ' #' → logprob: -7.792621612548828
    9. 'rem' → logprob: -7.792621612548828
    10. 'contin' → logprob: -7.917621612548828

Token 586: 'com' (ID: 639)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05304405093193054
    2. 'fin' → logprob: -3.178044080734253
    3. '#' → logprob: -4.928043842315674
    4. 'fine' → logprob: -6.553043842315674
    5. 'clare' → logprob: -8.053044319152832
    6. 'comment' → logprob: -8.053044319152832
    7. 'com' → logprob: -8.428044319152832
    8. 'lete' → logprob: -9.803044319152832
    9. 'fait' → logprob: -10.178044319152832
    10. '```' → logprob: -10.178044319152832

Token 587: 'mente' (ID: 4186)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.047168493270874
    2. 'onte' → logprob: -1.672168493270874
    3. 'om' → logprob: -1.797168493270874
    4. 'omme' → logprob: -2.297168493270874
    5. '#' → logprob: -2.797168493270874
    6. 'omp' → logprob: -3.672168493270874
    7. 'clare' → logprob: -4.172168731689453
    8. 'onde' → logprob: -4.172168731689453
    9. 'oment' → logprob: -4.672168731689453
    10. 'comment' → logprob: -4.922168731689453

Token 588: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.006846207659691572
    2. '<|end|>' → logprob: -5.1318464279174805
    3. '#print' → logprob: -7.7568464279174805
    4. '```' → logprob: -9.13184642791748
    5. '   ' → logprob: -10.13184642791748
    6. '.' → logprob: -10.25684642791748
    7. '...' → logprob: -10.50684642791748
    8. '
' → logprob: -10.63184642791748
    9. ')' → logprob: -10.63184642791748
    10. '#
' → logprob: -10.75684642791748

Token 589: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23464320600032806
    2. '#' → logprob: -1.7346432209014893
    3. 'for' → logprob: -3.9846432209014893
    4. '<|end|>' → logprob: -4.85964298248291
    5. '#print' → logprob: -5.85964298248291
    6. '```' → logprob: -6.73464298248291
    7. 'result' → logprob: -7.23464298248291
    8. 'n' → logprob: -7.23464298248291
    9. 'pass' → logprob: -7.98464298248291
    10. ' for' → logprob: -9.35964298248291

Token 591: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20635052025318146
    2. '#' → logprob: -1.831350564956665
    3. 'for' → logprob: -4.331350326538086
    4. '<|end|>' → logprob: -5.081350326538086
    5. 'pass' → logprob: -6.331350326538086
    6. '#print' → logprob: -6.456350326538086
    7. '```' → logprob: -6.456350326538086
    8. 'result' → logprob: -6.956350326538086
    9. 'n' → logprob: -8.081350326538086
    10. ')' → logprob: -8.206350326538086

Token 592: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.3167986273765564
    2. 'ich' → logprob: -2.316798686981201
    3. '#' → logprob: -2.816798686981201
    4. 'iche' → logprob: -2.941798686981201
    5. 'ichage' → logprob: -2.941798686981201
    6. 'print' → logprob: -4.941798686981201
    7. '   ' → logprob: -8.691798210144043
    8. 'ic' → logprob: -9.316798210144043
    9. '```' → logprob: -9.566798210144043
    10. 'ichier' → logprob: -10.191798210144043

Token 593: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006757648196071386
    2. 'for' → logprob: -5.006757736206055
    3. 'n' → logprob: -10.756757736206055
    4. '(' → logprob: -11.881757736206055
    5. ')' → logprob: -12.506757736206055
    6. '#' → logprob: -13.006757736206055
    7. '(
' → logprob: -13.256757736206055
    8. '(print' → logprob: -13.381757736206055
    9. '```' → logprob: -14.131757736206055
    10. 'pr' → logprob: -14.131757736206055

Token 594: ' résultat' (ID: 62556)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8807150721549988
    2. 'result' → logprob: -1.2557151317596436
    3. 'm' → logprob: -2.1307151317596436
    4. 'che' → logprob: -2.5057151317596436
    5. 'graph' → logprob: -2.8807151317596436
    6. 'print' → logprob: -3.8807151317596436
    7. 'path' → logprob: -4.6307148933410645
    8. '#' → logprob: -6.2557148933410645
    9. 'nombre' → logprob: -6.5057148933410645
    10. ' résultat' → logprob: -6.7557148933410645

Token 595: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5358694731257856e-05
    2. 'for' → logprob: -10.375035285949707
    3. '```' → logprob: -13.000035285949707
    4. ' print' → logprob: -13.500035285949707
    5. 'n' → logprob: -15.500035285949707
    6. '#print' → logprob: -15.625035285949707
    7. '#' → logprob: -17.500036239624023
    8. 'pr' → logprob: -17.750036239624023
    9. '``' → logprob: -17.875036239624023
    10. '
' → logprob: -18.125036239624023

Token 596: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.318681188422488e-05
    2. 'for' → logprob: -11.37501335144043
    3. 'n' → logprob: -14.50001335144043
    4. '```' → logprob: -14.75001335144043
    5. ' print' → logprob: -14.87501335144043
    6. 'result' → logprob: -15.37501335144043
    7. 'p' → logprob: -17.00001335144043
    8. 'prin' → logprob: -17.25001335144043
    9. 'pr' → logprob: -17.62501335144043
    10. '#print' → logprob: -17.75001335144043

Token 597: ' Premier' (ID: 27686)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.198043699143454e-05
    2. 'for' → logprob: -9.375091552734375
    3. 'result' → logprob: -12.375091552734375
    4. 'n' → logprob: -13.125091552734375
    5. '```' → logprob: -15.250091552734375
    6. 'path' → logprob: -15.750091552734375
    7. '#' → logprob: -16.000091552734375
    8. ' print' → logprob: -16.375091552734375
    9. '#print' → logprob: -16.750091552734375
    10. 'total' → logprob: -16.750091552734375

Token 598: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015426859259605408
    2. 'che' → logprob: -6.0154266357421875
    3. ' print' → logprob: -6.0154266357421875
    4. ')' → logprob: -6.1404266357421875
    5. 'for' → logprob: -6.3904266357421875
    6. 'path' → logprob: -6.8904266357421875
    7. 'n' → logprob: -6.8904266357421875
    8. ':' → logprob: -7.6404266357421875
    9. '#' → logprob: -7.6404266357421875
    10. ' chemin' → logprob: -7.7654266357421875

Token 599: ' :' (ID: 712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9255566596984863
    2. 'print' → logprob: -1.1755566596984863
    3. '(n' → logprob: -1.5505566596984863
    4. '(print' → logprob: -2.8005566596984863
    5. '(f' → logprob: -4.425556659698486
    6. '("' → logprob: -4.925556659698486
    7. '()' → logprob: -6.050556659698486
    8. '(p' → logprob: -8.925556182861328
    9. '('' → logprob: -9.300556182861328
    10. '(pr' → logprob: -9.550556182861328

Token 600: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011441295966506004
    2. 'n' → logprob: -4.511441230773926
    3. 'm' → logprob: -8.886441230773926
    4. '0' → logprob: -9.761441230773926
    5. '2' → logprob: -10.386441230773926
    6. '(n' → logprob: -10.636441230773926
    7. 'for' → logprob: -10.636441230773926
    8. '1' → logprob: -11.011441230773926
    9. 'path' → logprob: -11.011441230773926
    10. '"' → logprob: -11.136441230773926

Token 601: ' deux' (ID: 10301)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03370598703622818
    2. '("' → logprob: -4.283706188201904
    3. '(m' → logprob: -4.408706188201904
    4. 'n' → logprob: -6.158706188201904
    5. '(' → logprob: -6.408706188201904
    6. '(f' → logprob: -6.783706188201904
    7. '(l' → logprob: -6.908706188201904
    8. '(path' → logprob: -7.658706188201904
    9. 'm' → logprob: -8.408705711364746
    10. '(value' → logprob: -8.408705711364746

Token 602: ' ent' (ID: 1121)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004720018710941076
    2. ' ' → logprob: -5.879720211029053
    3. '(' → logprob: -6.504720211029053
    4. '"' → logprob: -8.004719734191895
    5. 'print' → logprob: -11.129719734191895
    6. '0' → logprob: -11.504719734191895
    7. ' (' → logprob: -12.129719734191895
    8. 'n' → logprob: -12.254719734191895
    9. ''' → logprob: -12.379719734191895
    10. '("' → logprob: -12.379719734191895

Token 603: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.47770199179649353
    2. 't' → logprob: -0.9777020215988159
    3. 'tiers' → logprob: -6.6027021408081055
    4. 'ts' → logprob: -6.7277021408081055
    5. 'ier' → logprob: -7.8527021408081055
    6. 'ers' → logprob: -8.977702140808105
    7. 'ti' → logprob: -9.102702140808105
    8. 'tries' → logprob: -9.477702140808105
    9. 'ties' → logprob: -9.602702140808105
    10. 'r' → logprob: -9.852702140808105

Token 604: ' sépar' (ID: 97160)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.37553268671035767
    2. 'n' → logprob: -1.625532627105713
    3. 'print' → logprob: -2.375532627105713
    4. 'm' → logprob: -4.375532627105713
    5. '(m' → logprob: -4.875532627105713
    6. '(' → logprob: -6.250532627105713
    7. '0' → logprob: -7.750532627105713
    8. ' n' → logprob: -8.000533103942871
    9. 'l' → logprob: -9.375533103942871
    10. ' print' → logprob: -9.500533103942871

Token 605: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10540015995502472
    2. ' par' → logprob: -2.6054000854492188
    3. 'es' → logprob: -3.9804000854492188
    4. 'é' → logprob: -5.980400085449219
    5. 'par' → logprob: -6.480400085449219
    6. ''' → logprob: -6.730400085449219
    7. 'space' → logprob: -7.855400085449219
    8. ''espace' → logprob: -7.855400085449219
    9. 'ure' → logprob: -8.480400085449219
    10. 'de' → logprob: -8.480400085449219

Token 606: ' par' (ID: 686)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5724227428436279
    2. 'n' → logprob: -1.322422742843628
    3. 'm' → logprob: -2.322422742843628
    4. 'print' → logprob: -3.572422742843628
    5. '(m' → logprob: -3.822422742843628
    6. '(' → logprob: -4.572422981262207
    7. '0' → logprob: -5.322422981262207
    8. 'par' → logprob: -6.197422981262207
    9. 'l' → logprob: -6.447422981262207
    10. 'end' → logprob: -8.197422981262207

Token 607: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3914288878440857
    2. '"' → logprob: -1.2664289474487305
    3. ''un' → logprob: -4.1414289474487305
    4. 'es' → logprob: -4.6414289474487305
    5. ''espace' → logprob: -4.8914289474487305
    6. 'un' → logprob: -5.6414289474487305
    7. 'space' → logprob: -6.1414289474487305
    8. 'a' → logprob: -6.8914289474487305
    9. 'f' → logprob: -7.6414289474487305
    10. ''une' → logprob: -7.8914289474487305

Token 608: ' espace' (ID: 66004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47527915239334106
    2. '"' → logprob: -0.9752791523933411
    3. 'space' → logprob: -7.350279331207275
    4. 'f' → logprob: -8.725278854370117
    5. ' ' → logprob: -8.725278854370117
    6. 'print' → logprob: -9.850278854370117
    7. '`' → logprob: -10.225278854370117
    8. '(' → logprob: -10.350278854370117
    9. ')' → logprob: -10.725278854370117
    10. ''espace' → logprob: -11.100278854370117

Token 609: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39757615327835083
    2. 'm' → logprob: -1.397576093673706
    3. 'n' → logprob: -2.522576093673706
    4. '2' → logprob: -8.522576332092285
    5. '0' → logprob: -9.147576332092285
    6. '1' → logprob: -9.397576332092285
    7. '(m' → logprob: -9.647576332092285
    8. '(n' → logprob: -9.897576332092285
    9. ' print' → logprob: -10.272576332092285
    10. '20' → logprob: -11.522576332092285

Token 610: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07215243577957153
    2. 'n' → logprob: -2.9471523761749268
    3. 'm' → logprob: -4.072152614593506
    4. ' print' → logprob: -10.197152137756348
    5. '```' → logprob: -11.572152137756348
    6. '2' → logprob: -11.697152137756348
    7. '0' → logprob: -12.322152137756348
    8. ' n' → logprob: -12.572152137756348
    9. '1' → logprob: -12.572152137756348
    10. '(n' → logprob: -12.822152137756348

Token 611: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003056854009628296
    2. 'm' → logprob: -6.00305700302124
    3. 'n' → logprob: -7.50305700302124
    4. '```' → logprob: -11.253056526184082
    5. '2' → logprob: -12.003056526184082
    6. '1' → logprob: -12.878056526184082
    7. '0' → logprob: -13.128056526184082
    8. ' print' → logprob: -13.503056526184082
    9. '``' → logprob: -14.128056526184082
    10. 'l' → logprob: -14.378056526184082

Token 612: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.15502437949180603
    2. 'n' → logprob: -2.030024290084839
    3. 'print' → logprob: -4.405024528503418
    4. '2' → logprob: -11.280024528503418
    5. '(m' → logprob: -11.530024528503418
    6. '(n' → logprob: -11.655024528503418
    7. ' m' → logprob: -12.155024528503418
    8. '0' → logprob: -12.155024528503418
    9. '1' → logprob: -13.030024528503418
    10. ' n' → logprob: -13.030024528503418

Token 613: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00632359366863966
    2. ' ,' → logprob: -5.75632381439209
    3. 'print' → logprob: -6.13132381439209
    4. ' print' → logprob: -7.75632381439209
    5. ' m' → logprob: -8.13132381439209
    6. ',m' → logprob: -8.88132381439209
    7. 'm' → logprob: -9.75632381439209
    8. ' n' → logprob: -10.75632381439209
    9. ',n' → logprob: -11.50632381439209
    10. '   ' → logprob: -12.00632381439209

Token 614: ' correspond' (ID: 11095)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32102835178375244
    2. 'print' → logprob: -1.3210283517837524
    3. ',n' → logprob: -5.446028232574463
    4. ' ,' → logprob: -6.321028232574463
    5. 'n' → logprob: -6.696028232574463
    6. ' print' → logprob: -8.321028709411621
    7. ' n' → logprob: -9.446028709411621
    8. ',m' → logprob: -11.071028709411621
    9. ',p' → logprob: -11.446028709411621
    10. ')' → logprob: -11.696028709411621

Token 615: ' au' (ID: 2791)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27124905586242676
    2. 'à' → logprob: -2.1462490558624268
    3. 'au' → logprob: -3.0212490558624268
    4. 'm' → logprob: -3.3962490558624268
    5. ' à' → logprob: -4.146248817443848
    6. '(n' → logprob: -4.896248817443848
    7. 'print' → logprob: -5.271248817443848
    8. ',' → logprob: -5.646248817443848
    9. 'to' → logprob: -6.021248817443848
    10. ' n' → logprob: -6.896248817443848

Token 616: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.56233171664644e-05
    2. ' n' → logprob: -10.000055313110352
    3. 'm' → logprob: -11.750055313110352
    4. 'nombre' → logprob: -14.500055313110352
    5. '(n' → logprob: -14.750055313110352
    6. 'l' → logprob: -14.750055313110352
    7. '2' → logprob: -15.500055313110352
    8. 'print' → logprob: -15.625055313110352
    9. '```' → logprob: -15.875055313110352
    10. 'value' → logprob: -16.12505531311035

Token 617: ' total' (ID: 3609)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08851437270641327
    2. 'n' → logprob: -2.7135143280029297
    3. 'print' → logprob: -5.08851432800293
    4. ',' → logprob: -5.96351432800293
    5. ' de' → logprob: -6.08851432800293
    6. ' m' → logprob: -6.46351432800293
    7. ' print' → logprob: -6.46351432800293
    8. ' ,' → logprob: -7.33851432800293
    9. 'de' → logprob: -7.33851432800293
    10. ' ' → logprob: -7.58851432800293

Token 618: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35991066694259644
    2. ' n' → logprob: -1.2349107265472412
    3. '(n' → logprob: -4.734910488128662
    4. ' of' → logprob: -7.359910488128662
    5. 'print' → logprob: -7.609910488128662
    6. ' de' → logprob: -7.984910488128662
    7. 'de' → logprob: -7.984910488128662
    8. ' ' → logprob: -8.85991096496582
    9. ',' → logprob: -9.48491096496582
    10. '   ' → logprob: -9.60991096496582

Token 619: ' somm' (ID: 44830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6571958661079407
    2. 'm' → logprob: -2.032195806503296
    3. 'che' → logprob: -2.657195806503296
    4. 'nodes' → logprob: -2.907195806503296
    5. 'points' → logprob: -2.907195806503296
    6. 'steps' → logprob: -3.032195806503296
    7. 's' → logprob: -3.657195806503296
    8. ' n' → logprob: -4.157196044921875
    9. 'no' → logprob: -4.157196044921875
    10. 'et' → logprob: -4.782196044921875

Token 620: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0037406987976282835
    2. 'es' → logprob: -5.6287407875061035
    3. 'et' → logprob: -8.878740310668945
    4. 'etes' → logprob: -15.003740310668945
    5. 'e' → logprob: -15.503740310668945
    6. 'its' → logprob: -15.753740310668945
    7. 'ètes' → logprob: -16.378740310668945
    8. 'êts' → logprob: -16.503740310668945
    9. 'ats' → logprob: -16.753740310668945
    10. '#' → logprob: -17.003740310668945

Token 621: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02077486366033554
    2. ' print' → logprob: -4.520774841308594
    3. 'n' → logprob: -4.770774841308594
    4. ' n' → logprob: -6.770774841308594
    5. ',' → logprob: -10.270774841308594
    6. '```' → logprob: -10.895774841308594
    7. 'm' → logprob: -13.895774841308594
    8. ',n' → logprob: -13.895774841308594
    9. ' ,' → logprob: -14.145774841308594
    10. ')' → logprob: -14.145774841308594

Token 622: '#' (ID: 2)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6398190855979919
    2. 'n' → logprob: -0.7648190855979919
    3. '2' → logprob: -5.639819145202637
    4. ' n' → logprob: -6.514819145202637
    5. ' m' → logprob: -6.889819145202637
    6. 'print' → logprob: -7.514819145202637
    7. 'str' → logprob: -8.264819145202637
    8. 'end' → logprob: -8.889819145202637
    9. '20' → logprob: -9.764819145202637
    10. '0' → logprob: -10.764819145202637

Token 623: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013793922029435635
    2. 'n' → logprob: -5.1387939453125
    3. 'print' → logprob: -5.1387939453125
    4. '2' → logprob: -6.6387939453125
    5. '20' → logprob: -8.2637939453125
    6. ' m' → logprob: -8.3887939453125
    7. 'str' → logprob: -10.0137939453125
    8. '(m' → logprob: -10.3887939453125
    9. '1' → logprob: -10.6387939453125
    10. '0' → logprob: -11.1387939453125

Token 624: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01347101666033268
    2. '2' → logprob: -4.6384711265563965
    3. 'n' → logprob: -5.7634711265563965
    4. '(m' → logprob: -8.138470649719238
    5. '(n' → logprob: -9.513470649719238
    6. '(' → logprob: -9.638470649719238
    7. '1' → logprob: -9.638470649719238
    8. '20' → logprob: -10.638470649719238
    9. ' m' → logprob: -10.763470649719238
    10. '21' → logprob: -11.888470649719238

Token 625: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45664557814598083
    2. ',' → logprob: -1.3316456079483032
    3. '+' → logprob: -3.2066454887390137
    4. ' )' → logprob: -3.5816454887390137
    5. ' +' → logprob: -3.8316454887390137
    6. 'print' → logprob: -5.331645488739014
    7. ' ,' → logprob: -5.331645488739014
    8. ',n' → logprob: -7.331645488739014
    9. '}' → logprob: -7.706645488739014
    10. ' n' → logprob: -8.581645965576172

Token 626: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5054249167442322
    2. ')' → logprob: -1.380424976348877
    3. 'print' → logprob: -2.130424976348877
    4. '=' → logprob: -4.630424976348877
    5. ' =' → logprob: -4.880424976348877
    6. ' ,' → logprob: -5.755424976348877
    7. ' )' → logprob: -5.755424976348877
    8. ' print' → logprob: -6.630424976348877
    9. '   ' → logprob: -8.255424499511719
    10. ',n' → logprob: -8.380424499511719

Token 627: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04447798803448677
    2. ' n' → logprob: -3.169477939605713
    3. '(n' → logprob: -7.419477939605713
    4. '2' → logprob: -7.794477939605713
    5. ' ' → logprob: -9.169478416442871
    6. 'm' → logprob: -9.419478416442871
    7. ')' → logprob: -9.669478416442871
    8. ' (' → logprob: -10.294478416442871
    9. '{' → logprob: -10.419478416442871
    10. 'print' → logprob: -10.794478416442871

Token 628: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3115524351596832
    2. ' ' → logprob: -2.5615525245666504
    3. ')' → logprob: -2.6865525245666504
    4. '<|end|>' → logprob: -4.18655252456665
    5. 'print' → logprob: -4.56155252456665
    6. 'des' → logprob: -4.56155252456665
    7. 'of' → logprob: -4.56155252456665
    8. '2' → logprob: -4.81155252456665
    9. 'n' → logprob: -4.93655252456665
    10. '=n' → logprob: -5.06155252456665

Token 629: ' d' (ID: 272)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.432452917098999
    2. ' d' → logprob: -2.182452917098999
    3. 'd' → logprob: -2.432452917098999
    4. ' des' → logprob: -2.557452917098999
    5. 'de' → logprob: -2.932452917098999
    6. ' de' → logprob: -5.182453155517578
    7. 'edges' → logprob: -5.182453155517578
    8. ' ' → logprob: -5.307453155517578
    9. '<|end|>' → logprob: -6.807453155517578
    10. '_edges' → logprob: -7.557453155517578

Token 630: ''ar' (ID: 54307)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.6397218704223633
    2. 'ar' → logprob: -1.0147218704223633
    3. 's' → logprob: -3.5147218704223633
    4. ' ' → logprob: -4.014721870422363
    5. 'edges' → logprob: -4.139721870422363
    6. ' edges' → logprob: -4.264721870422363
    7. 'arest' → logprob: -5.014721870422363
    8. '_edges' → logprob: -5.389721870422363
    9. ' arcs' → logprob: -5.764721870422363
    10. 'es' → logprob: -5.764721870422363

Token 631: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.7667583227157593
    2. 'tes' → logprob: -2.016758441925049
    3. 'etes' → logprob: -2.391758441925049
    4. 'cs' → logprob: -2.516758441925049
    5. '�' → logprob: -2.516758441925049
    6. 'c' → logprob: -2.641758441925049
    7. '\' → logprob: -3.766758441925049
    8. '^' → logprob: -3.891758441925049
    9. '?' → logprob: -5.891758441925049
    10. '#' → logprob: -5.891758441925049

Token 632: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.75
    3. ' print' → logprob: -17.0
    4. '```' → logprob: -17.25
    5. '``' → logprob: -21.0
    6. '#print' → logprob: -21.375
    7. '.print' → logprob: -21.375
    8. ')
' → logprob: -21.5
    9. 'n' → logprob: -21.625
    10. '#' → logprob: -22.0

Token 633: ' base' (ID: 3611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5932567715644836
    2. 's' → logprob: -2.468256711959839
    3. 'l' → logprob: -2.593256711959839
    4. '2' → logprob: -3.093256711959839
    5. 'edges' → logprob: -3.093256711959839
    6. ' n' → logprob: -3.218256711959839
    7. ' edges' → logprob: -3.718256711959839
    8. 'the' → logprob: -3.843256711959839
    9. ' la' → logprob: -4.468256950378418
    10. 'es' → logprob: -4.593256950378418

Token 634: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018732868193183094
    2. '
' → logprob: -8.625186920166016
    3. ' print' → logprob: -12.125186920166016
    4. '
' → logprob: -14.250186920166016
    5. '```' → logprob: -14.625186920166016
    6. ')
' → logprob: -15.125186920166016
    7. 'n' → logprob: -15.125186920166016
    8. ')' → logprob: -15.625186920166016
    9. '#print' → logprob: -15.625186920166016
    10. '\n' → logprob: -15.750186920166016

Token 635: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.968312951968983e-06
    2. 'n' → logprob: -11.750009536743164
    3. ' print' → logprob: -13.125009536743164
    4. ')' → logprob: -17.875009536743164
    5. '#print' → logprob: -18.250009536743164
    6. '```' → logprob: -18.250009536743164
    7. '
' → logprob: -19.125009536743164
    8. 'pr' → logprob: -19.875009536743164
    9. '2' → logprob: -20.000009536743164
    10. ',' → logprob: -20.000009536743164

Token 636: ' puis' (ID: 18766)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.868328920158092e-05
    2. 'n' → logprob: -10.750028610229492
    3. ' print' → logprob: -11.875028610229492
    4. '```' → logprob: -16.375028610229492
    5. '
' → logprob: -17.125028610229492
    6. '#print' → logprob: -17.500028610229492
    7. '2' → logprob: -19.125028610229492
    8. '{' → logprob: -19.125028610229492
    9. ' n' → logprob: -19.375028610229492
    10. ' 
' → logprob: -19.625028610229492

Token 637: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005401903297752142
    2. ' print' → logprob: -6.005402088165283
    3. 'n' → logprob: -6.130402088165283
    4. ' n' → logprob: -8.255401611328125
    5. 'end' → logprob: -9.380401611328125
    6. '
' → logprob: -9.505401611328125
    7. 'for' → logprob: -9.755401611328125
    8. '0' → logprob: -9.755401611328125
    9. '\n' → logprob: -10.130401611328125
    10. '1' → logprob: -10.630401611328125

Token 638: ' ajoute' (ID: 91611)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08313047885894775
    2. ' print' → logprob: -2.583130359649658
    3. '.print' → logprob: -6.333130359649658
    4. ')' → logprob: -7.458130359649658
    5. 'n' → logprob: -7.833130359649658
    6. ',' → logprob: -8.208130836486816
    7. ' n' → logprob: -8.333130836486816
    8. ' ' → logprob: -8.708130836486816
    9. 'for' → logprob: -8.833130836486816
    10. '#' → logprob: -9.458130836486816

Token 639: ' à' (ID: 1221)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.29328733682632446
    2. ' f' → logprob: -2.6682872772216797
    3. 'f' → logprob: -3.4182872772216797
    4. ''' → logprob: -3.4182872772216797
    5. ' "' → logprob: -3.6682872772216797
    6. '1' → logprob: -4.04328727722168
    7. ' n' → logprob: -4.29328727722168
    8. ' ' → logprob: -4.54328727722168
    9. 'n' → logprob: -4.66828727722168
    10. ' '' → logprob: -5.04328727722168

Token 640: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28470876812934875
    2. 'm' → logprob: -1.7847087383270264
    3. 'path' → logprob: -3.0347087383270264
    4. '"' → logprob: -4.2847089767456055
    5. ' print' → logprob: -5.0347089767456055
    6. ' m' → logprob: -5.5347089767456055
    7. 'f' → logprob: -5.9097089767456055
    8. ' path' → logprob: -6.9097089767456055
    9. ')' → logprob: -7.6597089767456055
    10. ''' → logprob: -7.6597089767456055

Token 641: 'm' (ID: 76)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4312085509300232
    2. 'n' → logprob: -1.681208610534668
    3. 'print' → logprob: -3.306208610534668
    4. ' path' → logprob: -3.431208610534668
    5. '"' → logprob: -3.806208610534668
    6. ' n' → logprob: -4.056208610534668
    7. 'm' → logprob: -4.181208610534668
    8. 'value' → logprob: -4.806208610534668
    9. '1' → logprob: -5.181208610534668
    10. '"path' → logprob: -5.681208610534668

Token 642: ''' (ID: 6)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26504138112068176
    2. '+' → logprob: -1.5150413513183594
    3. ' +=' → logprob: -5.015041351318359
    4. ' ' → logprob: -6.265041351318359
    5. ' plus' → logprob: -6.640041351318359
    6. ' path' → logprob: -7.890041351318359
    7. '    ' → logprob: -7.890041351318359
    8. ',' → logprob: -7.890041351318359
    9. '   ' → logprob: -8.39004135131836
    10. '  ' → logprob: -8.39004135131836

Token 643: ' la' (ID: 557)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2021070420742035
    2. '+' → logprob: -1.7021070718765259
    3. ' ' → logprob: -8.327107429504395
    4. ' +=' → logprob: -8.827107429504395
    5. ' plus' → logprob: -9.077107429504395
    6. ' +
' → logprob: -9.577107429504395
    7. ' path' → logprob: -9.702107429504395
    8. ' )' → logprob: -11.577107429504395
    9. ' +

' → logprob: -11.702107429504395
    10. ')' → logprob: -12.077107429504395

Token 644: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.39325764775276184
    2. ' sum' → logprob: -1.1432576179504395
    3. '"' → logprob: -5.1432576179504395
    4. ''' → logprob: -8.768258094787598
    5. '(sum' → logprob: -8.893258094787598
    6. ' path' → logprob: -9.643258094787598
    7. 'path' → logprob: -10.268258094787598
    8. ' "' → logprob: -10.393258094787598
    9. 's' → logprob: -10.643258094787598
    10. '=sum' → logprob: -10.893258094787598

Token 645: ' des' (ID: 731)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.1211802214384079
    2. 'path' → logprob: -2.621180295944214
    3. '(' → logprob: -3.496180295944214
    4. '(sum' → logprob: -5.121180057525635
    5. ' path' → logprob: -6.496180057525635
    6. '+' → logprob: -6.496180057525635
    7. ' (' → logprob: -7.371180057525635
    8. '(
' → logprob: -7.496180057525635
    9. 'sum' → logprob: -7.996180057525635
    10. ' +' → logprob: -8.121180534362793

Token 646: ' ' (ID: 220)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -2.2127087504486553e-05
    2. ' path' → logprob: -10.750021934509277
    3. '[path' → logprob: -14.625021934509277
    4. '[' → logprob: -15.875021934509277
    5. '(path' → logprob: -17.000022888183594
    6. '   ' → logprob: -18.375022888183594
    7. '	path' → logprob: -20.375022888183594
    8. '[i' → logprob: -20.750022888183594
    9. 'paths' → logprob: -20.750022888183594
    10. ' [' → logprob: -20.875022888183594

Token 647: '1' (ID: 16)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -3.619311974034645e-05
    2. ' path' → logprob: -10.250036239624023
    3. '[path' → logprob: -14.750036239624023
    4. '(path' → logprob: -14.875036239624023
    5. '[' → logprob: -16.875036239624023
    6. '	path' → logprob: -20.250036239624023
    7. ',path' → logprob: -20.500036239624023
    8. '   ' → logprob: -20.625036239624023
    9. '"path' → logprob: -20.625036239624023
    10. ')' → logprob: -20.750036239624023

Token 648: ' dans' (ID: 2671)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.1098181009292603
    2. '(' → logprob: -1.3598181009292603
    3. ' +' → logprob: -1.4848181009292603
    4. 'path' → logprob: -2.3598179817199707
    5. 'sum' → logprob: -3.6098179817199707
    6. '(sum' → logprob: -3.9848179817199707
    7. '+' → logprob: -4.109817981719971
    8. ' path' → logprob: -5.109817981719971
    9. ')' → logprob: -5.609817981719971
    10. '(
' → logprob: -5.609817981719971

Token 649: ' la' (ID: 557)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0021876145619899035
    2. ' path' → logprob: -6.127187728881836
    3. '(path' → logprob: -13.127187728881836
    4. '[path' → logprob: -14.752187728881836
    5. ',path' → logprob: -17.002187728881836
    6. '   ' → logprob: -17.377187728881836
    7. '"path' → logprob: -17.502187728881836
    8. '	path' → logprob: -17.502187728881836
    9. '.path' → logprob: -18.002187728881836
    10. ')' → logprob: -18.252187728881836

Token 650: ' liste' (ID: 31719)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00043233807082287967
    2. ' path' → logprob: -7.75043249130249
    3. '[path' → logprob: -14.125432014465332
    4. '(path' → logprob: -14.750432014465332
    5. '[' → logprob: -16.00043296813965
    6. '+' → logprob: -16.62543296813965
    7. '```' → logprob: -16.75043296813965
    8. '	path' → logprob: -16.87543296813965
    9. '`' → logprob: -17.12543296813965
    10. ')' → logprob: -17.25043296813965

Token 651: ' path' (ID: 3104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10381650179624557
    2. ' print' → logprob: -2.353816509246826
    3. ' n' → logprob: -6.603816509246826
    4. 'n' → logprob: -7.103816509246826
    5. '
' → logprob: -7.728816509246826
    6. ',' → logprob: -8.353816032409668
    7. '+' → logprob: -8.478816032409668
    8. ' 
' → logprob: -9.353816032409668
    9. ' +' → logprob: -9.353816032409668
    10. '```' → logprob: -9.603816032409668

Token 652: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.00018768629524856806
    2. '_' → logprob: -9.250187873840332
    3. 'add' → logprob: -10.500187873840332
    4. '_sum' → logprob: -10.875187873840332
    5. '_ad' → logprob: -11.625187873840332
    6. ')' → logprob: -12.250187873840332
    7. ' _' → logprob: -12.500187873840332
    8. '_added' → logprob: -12.750187873840332
    9. 'Add' → logprob: -13.250187873840332
    10. '_count' → logprob: -13.875187873840332

Token 653: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016444525681436062
    2. '
' → logprob: -8.750164031982422
    3. ' print' → logprob: -13.000164031982422
    4. '
' → logprob: -13.250164031982422
    5. '```' → logprob: -13.875164031982422
    6. ')
' → logprob: -14.375164031982422
    7. '#print' → logprob: -15.500164031982422
    8. 'n' → logprob: -16.875164031982422
    9. ')' → logprob: -17.125164031982422
    10. '.print' → logprob: -17.125164031982422

Token 654: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7751398682594299
    2. ',' → logprob: -1.6501398086547852
    3. 'print' → logprob: -2.150139808654785
    4. '+' → logprob: -2.525139808654785
    5. ' +' → logprob: -2.650139808654785
    6. ')
' → logprob: -3.400139808654785
    7. ' print' → logprob: -4.275139808654785
    8. ' )' → logprob: -4.525139808654785
    9. ' ,' → logprob: -5.650139808654785
    10. ' )
' → logprob: -5.650139808654785

Token 655: ' de' (ID: 334)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.48252809047698975
    2. '(' → logprob: -1.1075280904769897
    3. '+' → logprob: -3.2325282096862793
    4. '(
' → logprob: -5.857528209686279
    5. '(sum' → logprob: -5.857528209686279
    6. ' (' → logprob: -6.232528209686279
    7. ' +' → logprob: -6.607528209686279
    8. ')' → logprob: -6.732528209686279
    9. 'path' → logprob: -6.857528209686279
    10. ' path' → logprob: -8.482527732849121

Token 656: ' chemins' (ID: 192063)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.03058338351547718
    2. 'path' → logprob: -3.530583381652832
    3. '(path' → logprob: -7.530583381652832
    4. ' ' → logprob: -9.030583381652832
    5. ')' → logprob: -9.280583381652832
    6. ' )' → logprob: -10.405583381652832
    7. ' chemin' → logprob: -11.405583381652832
    8. '	path' → logprob: -12.030583381652832
    9. '"path' → logprob: -12.405583381652832
    10. ' paths' → logprob: -12.405583381652832

Token 657: ' altern' (ID: 7310)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.18291185796260834
    2. '_' → logprob: -2.6829118728637695
    3. ')' → logprob: -3.6829118728637695
    4. '_al' → logprob: -3.9329118728637695
    5. ' supplémentaires' → logprob: -3.9329118728637695
    6. '   ' → logprob: -5.1829118728637695
    7. 'altern' → logprob: -5.1829118728637695
    8. '_extra' → logprob: -5.3079118728637695
    9. '_alt' → logprob: -6.0579118728637695
    10. '_added' → logprob: -6.3079118728637695

Token 658: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.3578277826309204
    2. 'és' → logprob: -2.232827663421631
    3. 'aires' → logprob: -2.857827663421631
    4. 'atives' → logprob: -3.232827663421631
    5. '_' → logprob: -3.732827663421631
    6. '+' → logprob: -4.482827663421631
    7. 'atif' → logprob: -4.607827663421631
    8. '_add' → logprob: -5.107827663421631
    9. ')' → logprob: -5.107827663421631
    10. 'es' → logprob: -5.357827663421631

Token 659: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1130404844880104
    2. ' +' → logprob: -3.1130404472351074
    3. '+' → logprob: -3.6130404472351074
    4. ' )' → logprob: -3.8630404472351074
    5. ')+' → logprob: -5.113040447235107
    6. ')
' → logprob: -5.738040447235107
    7. 'print' → logprob: -5.988040447235107
    8. ',' → logprob: -6.863040447235107
    9. ' )
' → logprob: -7.738040447235107
    10. ' +
' → logprob: -8.238040924072266

Token 660: ' ajouter' (ID: 78457)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7120537161827087
    2. 'sum' → logprob: -1.5870537757873535
    3. ' ajouter' → logprob: -1.9620537757873535
    4. ')' → logprob: -2.4620537757873535
    5. ' sum' → logprob: -3.9620537757873535
    6. '+' → logprob: -4.5870537757873535
    7. 'aj' → logprob: -4.7120537757873535
    8. ' ' → logprob: -4.9620537757873535
    9. 'add' → logprob: -4.9620537757873535
    10. 'Ajouter' → logprob: -5.0870537757873535

Token 661: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19732458889484406
    2. ',' → logprob: -2.822324514389038
    3. ' +' → logprob: -3.322324514389038
    4. '+' → logprob: -3.572324514389038
    5. ' )' → logprob: -4.072324752807617
    6. 'print' → logprob: -4.197324752807617
    7. ')
' → logprob: -4.322324752807617
    8. ' ,' → logprob: -5.447324752807617
    9. ' )
' → logprob: -6.197324752807617
    10. '),' → logprob: -6.572324752807617

Token 662: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -12.875003814697266
    3. '
' → logprob: -14.625003814697266
    4. ' print' → logprob: -15.250003814697266
    5. '``' → logprob: -18.250003814697266
    6. 'n' → logprob: -18.625003814697266
    7. '#print' → logprob: -18.875003814697266
    8. '
' → logprob: -19.125003814697266
    9. '.print' → logprob: -20.750003814697266
    10. '	print' → logprob: -21.125003814697266

Token 663: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002892258344218135
    2. '(' → logprob: -8.625288963317871
    3. '(f' → logprob: -9.125288963317871
    4. 'n' → logprob: -15.375288963317871
    5. ' (' → logprob: -15.750288963317871
    6. '((' → logprob: -16.375289916992188
    7. '()' → logprob: -17.000289916992188
    8. '("' → logprob: -17.000289916992188
    9. '('' → logprob: -17.250289916992188
    10. '(
' → logprob: -17.750289916992188

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031949623371474445
    2. ' ,' → logprob: -8.250319480895996
    3. ',m' → logprob: -10.000319480895996
    4. ',"' → logprob: -12.500319480895996
    5. ',end' → logprob: -12.500319480895996
    6. '```' → logprob: -14.125319480895996
    7. ')' → logprob: -14.125319480895996
    8. ',n' → logprob: -14.625319480895996
    9. ',p' → logprob: -14.750319480895996
    10. '"' → logprob: -14.875319480895996

Token 665: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005236479919403791
    2. ' m' → logprob: -5.255236625671387
    3. '(m' → logprob: -13.755236625671387
    4. '"' → logprob: -14.005236625671387
    5. '2' → logprob: -15.755236625671387
    6. '   ' → logprob: -16.00523567199707
    7. ' ' → logprob: -16.13023567199707
    8. '1' → logprob: -16.25523567199707
    9. '    ' → logprob: -16.38023567199707
    10. '(' → logprob: -16.50523567199707

Token 666: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20943744480609894
    2. ' +' → logprob: -1.7094374895095825
    3. ',' → logprob: -4.834437370300293
    4. ' ,' → logprob: -10.834437370300293
    5. ')' → logprob: -11.959437370300293
    6. '+,' → logprob: -12.209437370300293
    7. ' plus' → logprob: -12.334437370300293
    8. '   ' → logprob: -13.084437370300293
    9. ',end' → logprob: -14.084437370300293
    10. '```' → logprob: -14.709437370300293

Token 667: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003168737457599491
    2. 'path' → logprob: -8.750316619873047
    3. ' sum' → logprob: -8.750316619873047
    4. ' path' → logprob: -17.375316619873047
    5. '(sum' → logprob: -17.750316619873047
    6. 'len' → logprob: -18.000316619873047
    7. '	sum' → logprob: -18.000316619873047
    8. '   ' → logprob: -18.250316619873047
    9. '=sum' → logprob: -18.500316619873047
    10. ' ' → logprob: -19.250316619873047

Token 668: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. 'path' → logprob: -15.500075340270996
    4. ')' → logprob: -17.00007438659668
    5. ' (' → logprob: -17.50007438659668
    6. '(
' → logprob: -18.12507438659668
    7. '_path' → logprob: -18.75007438659668
    8. ',path' → logprob: -18.75007438659668
    9. ' path' → logprob: -19.75007438659668
    10. '[path' → logprob: -20.12507438659668

Token 669: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -2.816093228830141e-06
    2. 'add' → logprob: -13.12500286102295
    3. 'Add' → logprob: -14.62500286102295
    4. ')' → logprob: -16.500001907348633
    5. '_Add' → logprob: -17.250001907348633
    6. '_added' → logprob: -17.500001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '​' → logprob: -18.375001907348633
    9. 'd' → logprob: -18.375001907348633
    10. '_' → logprob: -18.500001907348633

Token 670: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004020713677164167
    2. ',' → logprob: -8.000402450561523
    3. ' )' → logprob: -10.375402450561523
    4. '))' → logprob: -10.500402450561523
    5. ')
' → logprob: -13.125402450561523
    6. '())' → logprob: -13.625402450561523
    7. ',)' → logprob: -14.250402450561523
    8. ')")' → logprob: -14.625402450561523
    9. ')`' → logprob: -14.750402450561523
    10. ',end' → logprob: -14.875402450561523

Token 671: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09782256186008453
    2. '#' → logprob: -2.722822666168213
    3. '<|end|>' → logprob: -4.847822666168213
    4. 'print' → logprob: -4.972822666168213
    5. '0' → logprob: -5.097822666168213
    6. ' for' → logprob: -5.847822666168213
    7. ')' → logprob: -6.472822666168213
    8. '1' → logprob: -7.847822666168213
    9. '
' → logprob: -8.347822189331055
    10. 'if' → logprob: -8.472822189331055

Token 672: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007027934771031141
    2. '0' → logprob: -5.257028102874756
    3. 'edges' → logprob: -7.632028102874756
    4. '#' → logprob: -7.632028102874756
    5. '1' → logprob: -8.382027626037598
    6. 'print' → logprob: -8.507027626037598
    7. ' for' → logprob: -8.757027626037598
    8. '2' → logprob: -10.132027626037598
    9. '<|end|>' → logprob: -10.132027626037598
    10. 'graph' → logprob: -10.257027626037598

Token 673: 'ième' (ID: 41126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12602458894252777
    2. 'print' → logprob: -2.2510244846343994
    3. '#' → logprob: -4.7510247230529785
    4. ' for' → logprob: -6.8760247230529785
    5. 'i' → logprob: -7.1260247230529785
    6. 'lines' → logprob: -7.8760247230529785
    7. 'ième' → logprob: -8.00102424621582
    8. '(' → logprob: -8.00102424621582
    9. 'e' → logprob: -8.25102424621582
    10. '.' → logprob: -9.00102424621582

Token 674: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001438266917830333
    2. '(print' → logprob: -9.625144004821777
    3. 'for' → logprob: -9.875144004821777
    4. ' print' → logprob: -11.250144004821777
    5. '(' → logprob: -11.750144004821777
    6. '(
' → logprob: -12.375144004821777
    7. 'line' → logprob: -15.000144004821777
    8. '_print' → logprob: -15.500144004821777
    9. '()' → logprob: -15.875144004821777
    10. 'pr' → logprob: -16.00014305114746

Token 675: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.688212614681106e-05
    2. ' for' → logprob: -11.000017166137695
    3. '
' → logprob: -15.625017166137695
    4. '```' → logprob: -19.625017166137695
    5. 'range' → logprob: -20.000017166137695
    6. 'or' → logprob: -20.000017166137695
    7. 'print' → logprob: -20.500017166137695
    8. '	for' → logprob: -21.625017166137695
    9. '#' → logprob: -21.875017166137695
    10. '(' → logprob: -22.125017166137695

Token 676: ' afficher' (ID: 146524)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039640769362449646
    2. 'range' → logprob: -3.7896406650543213
    3. 'for' → logprob: -4.7896409034729
    4. ' i' → logprob: -5.0396409034729
    5. ' range' → logprob: -7.0396409034729
    6. 'print' → logprob: -8.039640426635742
    7. ' for' → logprob: -8.664640426635742
    8. '_' → logprob: -9.414640426635742
    9. '_i' → logprob: -12.539640426635742
    10. '(i' → logprob: -12.789640426635742

Token 677: ' les' (ID: 1341)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1761350631713867
    2. '(i' → logprob: -1.6761350631713867
    3. 'for' → logprob: -1.8011350631713867
    4. 'range' → logprob: -2.1761350631713867
    5. 'i' → logprob: -2.3011350631713867
    6. '(' → logprob: -3.3011350631713867
    7. '(m' → logprob: -3.8011350631713867
    8. 'n' → logprob: -3.9261350631713867
    9. 'm' → logprob: -4.176135063171387
    10. 'edges' → logprob: -4.176135063171387

Token 678: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4350639581680298
    2. 'i' → logprob: -1.9350639581680298
    3. '0' → logprob: -2.0600638389587402
    4. 'range' → logprob: -3.4350638389587402
    5. 'edges' → logprob: -3.9350638389587402
    6. '1' → logprob: -4.06006383895874
    7. '(i' → logprob: -5.56006383895874
    8. '#' → logprob: -6.43506383895874
    9. 'n' → logprob: -6.81006383895874
    10. 'ar' → logprob: -7.06006383895874

Token 679: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.002247438533231616
    2. 'cs' → logprob: -6.377247333526611
    3. 'ètes' → logprob: -8.62724781036377
    4. '#' → logprob: -9.12724781036377
    5. 'ènes' → logprob: -9.75224781036377
    6. 'c' → logprob: -10.25224781036377
    7. 'êts' → logprob: -10.37724781036377
    8. 'edges' → logprob: -10.62724781036377
    9. 'tes' → logprob: -10.87724781036377
    10. 'r' → logprob: -11.12724781036377

Token 680: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.153795766294934e-06
    2. ' for' → logprob: -12.125005722045898
    3. '#' → logprob: -15.500005722045898
    4. 'n' → logprob: -15.500005722045898
    5. '
' → logprob: -15.625005722045898
    6. 'current' → logprob: -17.3750057220459
    7. ')' → logprob: -17.6250057220459
    8. 'i' → logprob: -18.5000057220459
    9. '```' → logprob: -18.7500057220459
    10. '0' → logprob: -19.0000057220459

Token 681: ' base' (ID: 3611)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011600980535149574
    2. '0' → logprob: -5.386600971221924
    3. ' range' → logprob: -6.136600971221924
    4. 'for' → logprob: -6.636600971221924
    5. 'la' → logprob: -6.761600971221924
    6. '1' → logprob: -6.886600971221924
    7. 'l' → logprob: -8.261601448059082
    8. 'i' → logprob: -8.261601448059082
    9. 's' → logprob: -8.386601448059082
    10. '#' → logprob: -8.386601448059082

Token 682: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.250004768371582
    3. '
' → logprob: -17.8750057220459
    4. '```' → logprob: -19.5000057220459
    5. '#' → logprob: -20.1250057220459
    6. 'print' → logprob: -21.6250057220459
    7. ')' → logprob: -21.7500057220459
    8. 'n' → logprob: -21.7500057220459
    9. '	for' → logprob: -22.0000057220459
    10. ':' → logprob: -22.5000057220459

Token 683: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.0
    3. '#' → logprob: -19.125
    4. 'n' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '
' → logprob: -21.25
    7. 'i' → logprob: -21.75
    8. 'print' → logprob: -22.5
    9. '	for' → logprob: -22.875
    10. 'current' → logprob: -23.125

Token 684: ' Jusqu' (ID: 193136)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.319370302458992e-06
    2. 'current' → logprob: -12.500005722045898
    3. ' for' → logprob: -14.875005722045898
    4. 'start' → logprob: -15.000005722045898
    5. 'value' → logprob: -15.250005722045898
    6. '#' → logprob: -15.500005722045898
    7. 'prev' → logprob: -16.0000057220459
    8. 'last' → logprob: -16.6250057220459
    9. 'edge' → logprob: -17.2500057220459
    10. 'print' → logprob: -17.3750057220459

Token 685: ''à' (ID: 33688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11700776219367981
    2. 'or' → logprob: -3.2420077323913574
    3. 'i' → logprob: -3.3670077323913574
    4. ' for' → logprob: -4.617007732391357
    5. 'range' → logprob: -4.992007732391357
    6. 'à' → logprob: -5.367007732391357
    7. 'n' → logprob: -5.367007732391357
    8. 'o' → logprob: -6.242007732391357
    9. '#' → logprob: -6.617007732391357
    10. '=' → logprob: -6.742007732391357

Token 686: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04327400401234627
    2. 'for' → logprob: -3.41827392578125
    3. 'range' → logprob: -5.29327392578125
    4. '1' → logprob: -6.16827392578125
    5. 'i' → logprob: -6.29327392578125
    6. '(n' → logprob: -8.54327392578125
    7. 'm' → logprob: -8.79327392578125
    8. 'print' → logprob: -9.29327392578125
    9. ' n' → logprob: -9.54327392578125
    10. '2' → logprob: -10.66827392578125

Token 687: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02068447880446911
    2. '-' → logprob: -4.270684242248535
    3. ')' → logprob: -5.395684242248535
    4. ' for' → logprob: -6.520684242248535
    5. ' -' → logprob: -8.770684242248535
    6. '   ' → logprob: -9.395684242248535
    7. 'range' → logprob: -9.770684242248535
    8. '):' → logprob: -10.020684242248535
    9. ':' → logprob: -10.520684242248535
    10. '1' → logprob: -10.520684242248535

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020570380613207817
    2. '2' → logprob: -3.8955702781677246
    3. 'm' → logprob: -11.395570755004883
    4. 'for' → logprob: -11.645570755004883
    5. ' ' → logprob: -12.020570755004883
    6. 'n' → logprob: -14.395570755004883
    7. '   ' → logprob: -15.270570755004883
    8. 'print' → logprob: -15.270570755004883
    9. '```' → logprob: -15.895570755004883
    10. 'i' → logprob: -15.895570755004883

Token 689: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.541112427134067e-05
    2. ' for' → logprob: -9.500075340270996
    3. '
' → logprob: -15.125075340270996
    4. ':' → logprob: -16.625076293945312
    5. 'range' → logprob: -16.625076293945312
    6. 'print' → logprob: -18.250076293945312
    7. ':
' → logprob: -18.250076293945312
    8. '   ' → logprob: -19.000076293945312
    9. '	for' → logprob: -19.000076293945312
    10. '+' → logprob: -19.000076293945312

Token 690: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002077336423099041
    2. ' for' → logprob: -6.502077102661133
    3. 'n' → logprob: -8.127077102661133
    4. 'print' → logprob: -8.627077102661133
    5. 'range' → logprob: -9.252077102661133
    6. 'i' → logprob: -13.627077102661133
    7. '
' → logprob: -13.752077102661133
    8. ' n' → logprob: -14.377077102661133
    9. '   ' → logprob: -14.377077102661133
    10. ' range' → logprob: -14.627077102661133

Token 691: ' existe' (ID: 19498)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8849278092384338
    2. 'for' → logprob: -0.8849278092384338
    3. ')' → logprob: -3.259927749633789
    4. ' n' → logprob: -3.634927749633789
    5. '-' → logprob: -4.134927749633789
    6. 'n' → logprob: -4.259927749633789
    7. 's' → logprob: -4.384927749633789
    8. ' is' → logprob: -4.384927749633789
    9. '>' → logprob: -4.634927749633789
    10. '<|end|>' → logprob: -5.134927749633789

Token 692: ' toujours' (ID: 16867)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12729333341121674
    2. 'for' → logprob: -2.752293348312378
    3. '(n' → logprob: -3.752293348312378
    4. ' for' → logprob: -4.252293109893799
    5. ' n' → logprob: -4.502293109893799
    6. '<n' → logprob: -6.252293109893799
    7. 'range' → logprob: -6.252293109893799
    8. ' ' → logprob: -7.002293109893799
    9. '0' → logprob: -7.502293109893799
    10. '  ' → logprob: -7.752293109893799

Token 693: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7326722741127014
    2. 'n' → logprob: -0.9826722741127014
    3. '(n' → logprob: -2.3576722145080566
    4. 'range' → logprob: -3.6076722145080566
    5. ' for' → logprob: -3.8576722145080566
    6. ' range' → logprob: -7.232672214508057
    7. ' n' → logprob: -7.482672214508057
    8. '(' → logprob: -8.107672691345215
    9. 'i' → logprob: -8.107672691345215
    10. 'print' → logprob: -9.982672691345215

Token 694: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022417718544602394
    2. 'for' → logprob: -4.2724175453186035
    3. ' -' → logprob: -4.8974175453186035
    4. ' for' → logprob: -7.6474175453186035
    5. '   ' → logprob: -9.147418022155762
    6. ')' → logprob: -9.397418022155762
    7. 's' → logprob: -10.897418022155762
    8. '=' → logprob: -11.897418022155762
    9. '-for' → logprob: -11.897418022155762
    10. '```' → logprob: -11.897418022155762

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002382249804213643
    2. '2' → logprob: -8.875238418579102
    3. ' ' → logprob: -9.375238418579102
    4. 'n' → logprob: -11.625238418579102
    5. '```' → logprob: -12.625238418579102
    6. 'for' → logprob: -14.875238418579102
    7. 'm' → logprob: -15.375238418579102
    8. 'range' → logprob: -15.875238418579102
    9. '   ' → logprob: -16.1252384185791
    10. 's' → logprob: -16.7502384185791

Token 696: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9703336358070374
    2. 'edges' → logprob: -1.5953335762023926
    3. ' edges' → logprob: -1.7203335762023926
    4. ')' → logprob: -2.4703335762023926
    5. ' for' → logprob: -3.3453335762023926
    6. '):' → logprob: -3.4703335762023926
    7. ':' → logprob: -3.5953335762023926
    8. 'print' → logprob: -3.9703335762023926
    9. 'range' → logprob: -4.720333576202393
    10. '   ' → logprob: -5.345333576202393

Token 697: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.33345088362693787
    2. 'ange' → logprob: -2.0834507942199707
    3. 'anges' → logprob: -3.0834507942199707
    4. 'r' → logprob: -3.3334507942199707
    5. 'edges' → logprob: -3.5834507942199707
    6. 'ges' → logprob: -3.7084507942199707
    7. 'c' → logprob: -5.333450794219971
    8. 'ge' → logprob: -5.458450794219971
    9. 'êtes' → logprob: -5.708450794219971
    10. 'e' → logprob: -5.833450794219971

Token 698: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024739265791140497
    2. ' for' → logprob: -8.50024700164795
    3. ':' → logprob: -11.00024700164795
    4. '
' → logprob: -11.75024700164795
    5. ':
' → logprob: -11.75024700164795
    6. 'range' → logprob: -12.12524700164795
    7. '   ' → logprob: -13.37524700164795
    8. 'from' → logprob: -13.50024700164795
    9. 'in' → logprob: -13.75024700164795
    10. 'print' → logprob: -14.75024700164795

Token 699: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2635953426361084
    2. 'n' → logprob: -2.0135953426361084
    3. 'for' → logprob: -2.6385953426361084
    4. 'i' → logprob: -4.5135955810546875
    5. '1' → logprob: -4.5135955810546875
    6. '(n' → logprob: -6.2635955810546875
    7. '0' → logprob: -6.2635955810546875
    8. ' range' → logprob: -7.5135955810546875
    9. '(i' → logprob: -9.263595581054688
    10. '(range' → logprob: -9.388595581054688

Token 700: ' somm' (ID: 44830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33059242367744446
    2. 'for' → logprob: -2.080592393875122
    3. 'range' → logprob: -2.955592393875122
    4. '0' → logprob: -3.580592393875122
    5. 'i' → logprob: -3.955592393875122
    6. 'print' → logprob: -4.080592632293701
    7. 's' → logprob: -4.455592632293701
    8. 'nodes' → logprob: -4.580592632293701
    9. '1' → logprob: -4.830592632293701
    10. 'vertices' → logprob: -5.080592632293701

Token 701: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.007304779719561338
    2. 'es' → logprob: -5.257304668426514
    3. 'ts' → logprob: -7.007304668426514
    4. 'êts' → logprob: -7.132304668426514
    5. 'ètes' → logprob: -9.007305145263672
    6. 'et' → logprob: -10.507305145263672
    7. 't' → logprob: -10.632305145263672
    8. 'tes' → logprob: -10.757305145263672
    9. 'pts' → logprob: -10.882305145263672
    10. 'ètres' → logprob: -11.257305145263672

Token 702: ' cons' (ID: 1473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2246291337069124e-05
    2. ' for' → logprob: -11.125021934509277
    3. 'range' → logprob: -12.000021934509277
    4. ':' → logprob: -14.500021934509277
    5. '   ' → logprob: -15.000021934509277
    6. '1' → logprob: -15.750021934509277
    7. 'in' → logprob: -16.875022888183594
    8. 'print' → logprob: -16.875022888183594
    9. '```' → logprob: -17.000022888183594
    10. '(range' → logprob: -17.375022888183594

Token 703: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.03712596744298935
    2. '#' → logprob: -4.912126064300537
    3. 'ecut' → logprob: -4.912126064300537
    4. 'cut' → logprob: -5.037126064300537
    5. 'id' → logprob: -5.787126064300537
    6. 'quent' → logprob: -6.162126064300537
    7. 'qu' → logprob: -6.412126064300537
    8. 't' → logprob: -6.787126064300537
    9. 'icut' → logprob: -6.912126064300537
    10. 'um' → logprob: -6.912126064300537

Token 704: 'ifs' (ID: 14119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08245119452476501
    2. 'range' → logprob: -2.707451105117798
    3. 'print' → logprob: -5.082451343536377
    4. 's' → logprob: -6.457451343536377
    5. '   ' → logprob: -7.457451343536377
    6. '1' → logprob: -7.582451343536377
    7. 'n' → logprob: -7.707451343536377
    8. ' for' → logprob: -7.707451343536377
    9. 't' → logprob: -8.207450866699219
    10. ' range' → logprob: -8.207450866699219

Token 705: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.246537173457909e-06
    2. ' for' → logprob: -12.375003814697266
    3. '```' → logprob: -19.375003814697266
    4. 'print' → logprob: -20.375003814697266
    5. '
' → logprob: -20.625003814697266
    6. '1' → logprob: -21.375003814697266
    7. '	for' → logprob: -21.500003814697266
    8. 'range' → logprob: -22.125003814697266
    9. '#' → logprob: -22.250003814697266
    10. 'from' → logprob: -22.250003814697266

Token 706: ' le' (ID: 505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007843324914574623
    2. 'for' → logprob: -4.882843494415283
    3. 'print' → logprob: -9.257843017578125
    4. 'la' → logprob: -9.382843017578125
    5. 'n' → logprob: -10.507843017578125
    6. ' range' → logprob: -11.007843017578125
    7. '(range' → logprob: -12.757843017578125
    8. '1' → logprob: -13.132843017578125
    9. '
' → logprob: -13.257843017578125
    10. '```' → logprob: -13.382843017578125

Token 707: ' chemin' (ID: 45035)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2580167055130005
    2. 'for' → logprob: -1.5080167055130005
    3. 'graph' → logprob: -5.758016586303711
    4. 'n' → logprob: -6.258016586303711
    5. '```' → logprob: -7.758016586303711
    6. 'print' → logprob: -8.508016586303711
    7. '
' → logprob: -9.258016586303711
    8. ' range' → logprob: -9.758016586303711
    9. ' for' → logprob: -10.508016586303711
    10. 'rang' → logprob: -10.758016586303711

Token 708: ' principal' (ID: 10589)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.250001907348633
    3. '```' → logprob: -18.000001907348633
    4. '
' → logprob: -20.375001907348633
    5. 'print' → logprob: -20.750001907348633
    6. '	for' → logprob: -21.375001907348633
    7. ')' → logprob: -21.875001907348633
    8. 'n' → logprob: -22.250001907348633
    9. 'i' → logprob: -22.500001907348633
    10. '1' → logprob: -22.500001907348633

Token 709: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -13.875000953674316
    3. '
' → logprob: -17.125001907348633
    4. '```' → logprob: -19.250001907348633
    5. 'print' → logprob: -19.875001907348633
    6. '1' → logprob: -20.250001907348633
    7. 'i' → logprob: -20.875001907348633
    8. '#' → logprob: -21.125001907348633
    9. '	for' → logprob: -21.375001907348633
    10. '0' → logprob: -21.375001907348633

Token 710: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.5
    3. '```' → logprob: -15.875
    4. '	for' → logprob: -21.5
    5. 'print' → logprob: -22.25
    6. '``' → logprob: -22.75
    7. '
' → logprob: -23.0
    8. 'i' → logprob: -23.25
    9. 'from' → logprob: -23.875
    10. 'range' → logprob: -23.875

Token 711: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003979854751378298
    2. ' i' → logprob: -5.753979682922363
    3. 'u' → logprob: -7.753979682922363
    4. 'j' → logprob: -8.378979682922363
    5. '_' → logprob: -9.628979682922363
    6. '_i' → logprob: -10.628979682922363
    7. '```' → logprob: -11.128979682922363
    8. 'x' → logprob: -11.378979682922363
    9. ' j' → logprob: -12.378979682922363
    10. ' u' → logprob: -12.628979682922363

Token 712: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02063613571226597
    2. 'in' → logprob: -3.8956360816955566
    3. ' ' → logprob: -9.770636558532715
    4. '+' → logprob: -11.020636558532715
    5. '1' → logprob: -12.020636558532715
    6. '	in' → logprob: -13.020636558532715
    7. ',' → logprob: -13.520636558532715
    8. '   ' → logprob: -13.520636558532715
    9. '_' → logprob: -13.770636558532715
    10. '0' → logprob: -13.895636558532715

Token 713: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048627790063619614
    2. ' range' → logprob: -3.0486278533935547
    3. '(range' → logprob: -10.798627853393555
    4. 'in' → logprob: -11.548627853393555
    5. ' in' → logprob: -12.673627853393555
    6. '(' → logprob: -12.798627853393555
    7. ' ' → logprob: -12.798627853393555
    8. '1' → logprob: -14.798627853393555
    9. '   ' → logprob: -14.923627853393555
    10. '  ' → logprob: -15.048627853393555

Token 714: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12699614465236664
    2. '(n' → logprob: -2.1269960403442383
    3. '1' → logprob: -9.626996040344238
    4. 'range' → logprob: -13.876996040344238
    5. 'n' → logprob: -14.751996040344238
    6. '(
' → logprob: -14.751996040344238
    7. '(range' → logprob: -15.001996040344238
    8. ' (' → logprob: -16.876996994018555
    9. '((' → logprob: -17.751996994018555
    10. 'in' → logprob: -18.126996994018555

Token 715: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16050419211387634
    2. '-' → logprob: -1.9105042219161987
    3. '   ' → logprob: -8.660504341125488
    4. '):
' → logprob: -9.910504341125488
    5. '):' → logprob: -10.660504341125488
    6. '1' → logprob: -10.910504341125488
    7. ' ' → logprob: -11.785504341125488
    8. '()-' → logprob: -13.910504341125488
    9. 'n' → logprob: -14.035504341125488
    10. '  ' → logprob: -14.160504341125488

Token 716: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003821716527454555
    2. ' ' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.750382423400879
    4. ')' → logprob: -14.250382423400879
    5. '2' → logprob: -16.500381469726562
    6. '-' → logprob: -16.875381469726562
    7. ' -' → logprob: -17.125381469726562
    8. '  ' → logprob: -17.312881469726562
    9. '<|end|>' → logprob: -17.437881469726562
    10. '(' → logprob: -17.687881469726562

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -17.1250057220459
    4. ')' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.8750057220459
    6. '１' → logprob: -18.6875057220459
    7. '۱' → logprob: -19.1875057220459
    8. 'm' → logprob: -19.6250057220459
    9. '-' → logprob: -19.6250057220459
    10. '१' → logprob: -19.6875057220459

Token 718: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06294289231300354
    2. '):' → logprob: -2.8129429817199707
    3. ' ):
' → logprob: -7.937942981719971
    4. ':
' → logprob: -8.562942504882812
    5. ':' → logprob: -8.812942504882812
    6. '   ' → logprob: -9.187942504882812
    7. '):
' → logprob: -9.437942504882812
    8. ')' → logprob: -10.312942504882812
    9. ' ):' → logprob: -10.437942504882812
    10. '():
' → logprob: -10.687942504882812

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005816571414470673
    2. 'print' → logprob: -5.630816459655762
    3. ' print' → logprob: -6.130816459655762
    4. '	print' → logprob: -10.505816459655762
    5. '   ' → logprob: -12.380816459655762
    6. ':' → logprob: -13.255816459655762
    7. ' ' → logprob: -13.880816459655762
    8. '    ' → logprob: -14.130816459655762
    9. '       ' → logprob: -14.255816459655762
    10. '  ' → logprob: -14.380816459655762

Token 720: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003943304473068565
    2. '   ' → logprob: -8.000393867492676
    3. ' print' → logprob: -9.750393867492676
    4. '	print' → logprob: -14.375393867492676
    5. '#print' → logprob: -18.375394821166992
    6. 'printf' → logprob: -19.125394821166992
    7. 'Print' → logprob: -19.500394821166992
    8. '    
' → logprob: -20.250394821166992
    9. '```' → logprob: -20.250394821166992
    10. '_print' → logprob: -21.000394821166992

Token 721: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.13388703338569e-06
    2. ' print' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.625009536743164
    4. '	print' → logprob: -19.625009536743164
    5. 'printf' → logprob: -21.125009536743164
    6. '#print' → logprob: -21.375009536743164
    7. ' ' → logprob: -22.125009536743164
    8. '```' → logprob: -22.375009536743164
    9. 'Print' → logprob: -22.500009536743164
    10. '  ' → logprob: -22.750009536743164

Token 722: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1934223175048828
    2. 'iche' → logprob: -1.1934223175048828
    3. 'ichage' → logprob: -1.9434223175048828
    4. 'icher' → logprob: -2.568422317504883
    5. '   ' → logprob: -2.693422317504883
    6. 'ich' → logprob: -3.068422317504883
    7. '#' → logprob: -4.318422317504883
    8. '(' → logprob: -4.943422317504883
    9. '(i' → logprob: -5.068422317504883
    10. 'ect' → logprob: -5.193422317504883

Token 723: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04873111844062805
    2. '(i' → logprob: -3.0487310886383057
    3. ' i' → logprob: -8.923730850219727
    4. '{i' → logprob: -11.798730850219727
    5. '   ' → logprob: -13.923730850219727
    6. '(' → logprob: -13.923730850219727
    7. '1' → logprob: -14.673730850219727
    8. 'print' → logprob: -15.048730850219727
    9. 'f' → logprob: -16.423730850219727
    10. 'a' → logprob: -16.423730850219727

Token 724: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05261266604065895
    2. ' i' → logprob: -3.802612781524658
    3. '(i' → logprob: -4.177612781524658
    4. '{}' → logprob: -5.177612781524658
    5. '{i' → logprob: -5.802612781524658
    6. 'print' → logprob: -6.052612781524658
    7. 'n' → logprob: -7.177612781524658
    8. ' (' → logprob: -8.5526123046875
    9. '{' → logprob: -8.5526123046875
    10. '0' → logprob: -8.6776123046875

Token 725: 'ête' (ID: 16808)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.007616444956511259
    2. '(i' → logprob: -5.2576165199279785
    3. 'r' → logprob: -7.1326165199279785
    4. 'nge' → logprob: -7.7576165199279785
    5. 't' → logprob: -8.00761604309082
    6. 'dge' → logprob: -8.50761604309082
    7. 'e' → logprob: -9.25761604309082
    8. 'ête' → logprob: -9.63261604309082
    9. '(' → logprob: -9.75761604309082
    10. 'ch' → logprob: -10.00761604309082

Token 726: ' du' (ID: 1462)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7403597235679626
    2. '(i' → logprob: -0.7403597235679626
    3. ' i' → logprob: -3.3653597831726074
    4. '{i' → logprob: -4.740359783172607
    5. 'print' → logprob: -6.490359783172607
    6. '{}' → logprob: -7.615359783172607
    7. ' (' → logprob: -8.36535930633545
    8. ',' → logprob: -9.11535930633545
    9. '{' → logprob: -9.36535930633545
    10. ' ,' → logprob: -9.86535930633545

Token 727: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010788989020511508
    2. '(i' → logprob: -7.376079082489014
    3. ' i' → logprob: -8.751078605651855
    4. '{i' → logprob: -8.876078605651855
    5. 'print' → logprob: -9.251078605651855
    6. '{}' → logprob: -10.251078605651855
    7. '{' → logprob: -12.501078605651855
    8. ')' → logprob: -12.501078605651855
    9. 'che' → logprob: -13.126078605651855
    10. '[i' → logprob: -13.626078605651855

Token 728: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03399017080664635
    2. ' i' → logprob: -3.6589901447296143
    3. '{i' → logprob: -5.408990383148193
    4. '(i' → logprob: -5.908990383148193
    5. '{}' → logprob: -8.408989906311035
    6. '   ' → logprob: -9.533989906311035
    7. '{' → logprob: -9.783989906311035
    8. ' (' → logprob: -10.158989906311035
    9. ',' → logprob: -10.283989906311035
    10. ' {' → logprob: -11.908989906311035

Token 729: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19671395421028137
    2. ' i' → logprob: -1.946713924407959
    3. ' ,' → logprob: -3.696713924407959
    4. 'i' → logprob: -5.571713924407959
    5. ',i' → logprob: -5.696713924407959
    6. '   ' → logprob: -6.196713924407959
    7. ' print' → logprob: -7.196713924407959
    8. 'print' → logprob: -7.821713924407959
    9. '(i' → logprob: -8.321714401245117
    10. '{i' → logprob: -8.446714401245117

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002562137378845364
    2. 'i' → logprob: -8.625256538391113
    3. ' ' → logprob: -10.125256538391113
    4. ' i' → logprob: -10.375256538391113
    5. '(i' → logprob: -12.625256538391113
    6. '```' → logprob: -14.500256538391113
    7. '2' → logprob: -15.125256538391113
    8. 'n' → logprob: -15.500256538391113
    9. ' )' → logprob: -15.625256538391113
    10. ' (' → logprob: -16.125255584716797

Token 731: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3037780225276947
    2. ' ,' → logprob: -2.5537779331207275
    3. ',i' → logprob: -2.8037779331207275
    4. ' i' → logprob: -3.0537779331207275
    5. '   ' → logprob: -3.1787779331207275
    6. ' print' → logprob: -4.053778171539307
    7. 'print' → logprob: -4.178778171539307
    8. 'i' → logprob: -7.053778171539307
    9. '(i' → logprob: -7.178778171539307
    10. '1' → logprob: -9.303777694702148

Token 732: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009775333106517792
    2. ' i' → logprob: -4.634775161743164
    3. '(i' → logprob: -11.259775161743164
    4. ' (' → logprob: -13.384775161743164
    5. ' ' → logprob: -13.759775161743164
    6. '{i' → logprob: -13.759775161743164
    7. '```' → logprob: -13.884775161743164
    8. '   ' → logprob: -14.134775161743164
    9. '	i' → logprob: -15.259775161743164
    10. '  ' → logprob: -15.759775161743164

Token 733: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01112834457308054
    2. ' i' → logprob: -4.5111284255981445
    3. '(i' → logprob: -10.261128425598145
    4. '   ' → logprob: -10.761128425598145
    5. '{i' → logprob: -11.636128425598145
    6. '```' → logprob: -11.886128425598145
    7. ' (' → logprob: -13.136128425598145
    8. ' ' → logprob: -13.511128425598145
    9. '1' → logprob: -13.886128425598145
    10. '  ' → logprob: -14.511128425598145

Token 734: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5235928893089294
    2. ' +' → logprob: -0.8985928893089294
    3. '   ' → logprob: -8.148592948913574
    4. '```' → logprob: -9.773592948913574
    5. '+i' → logprob: -10.023592948913574
    6. ' i' → logprob: -10.773592948913574
    7. 'i' → logprob: -10.773592948913574
    8. '1' → logprob: -11.023592948913574
    9. ' ' → logprob: -12.148592948913574
    10. ' +
' → logprob: -13.023592948913574

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003640692448243499
    2. '1' → logprob: -5.628640651702881
    3. ' ' → logprob: -10.253641128540039
    4. 'i' → logprob: -13.003641128540039
    5. '```' → logprob: -13.503641128540039
    6. '   ' → logprob: -14.503641128540039
    7. '+' → logprob: -14.753641128540039
    8. '0' → logprob: -15.378641128540039
    9. ' i' → logprob: -15.503641128540039
    10. 's' → logprob: -16.00364112854004

Token 736: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7036601305007935
    2. 'print' → logprob: -1.0786601305007935
    3. ' print' → logprob: -1.8286601305007935
    4. ',' → logprob: -5.453660011291504
    5. ' ,' → logprob: -9.078660011291504
    6. '```' → logprob: -9.578660011291504
    7. '	print' → logprob: -10.453660011291504
    8. '    
' → logprob: -11.328660011291504
    9. ':' → logprob: -11.453660011291504
    10. '    ' → logprob: -12.078660011291504

Token 737: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014612370170652866
    2. '2' → logprob: -4.389612197875977
    3. '0' → logprob: -6.764612197875977
    4. 'i' → logprob: -7.264612197875977
    5. ' ' → logprob: -8.764612197875977
    6. 'print' → logprob: -10.014612197875977
    7. '(i' → logprob: -11.264612197875977
    8. ' i' → logprob: -11.389612197875977
    9. '   ' → logprob: -12.639612197875977
    10. 'a' → logprob: -12.764612197875977

Token 738: ' poids' (ID: 56058)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5422343015670776
    2. '1' → logprob: -0.9172343015670776
    3. 'space' → logprob: -4.417234420776367
    4. '2' → logprob: -6.417234420776367
    5. ' space' → logprob: -6.917234420776367
    6. '0' → logprob: -7.292234420776367
    7. '"' → logprob: -7.667234420776367
    8. '<|end|>' → logprob: -7.917234420776367
    9. '```' → logprob: -8.042234420776367
    10. 'value' → logprob: -8.292234420776367

Token 739: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9103435277938843
    2. '(i' → logprob: -1.2853435277938843
    3. ' i' → logprob: -1.9103435277938843
    4. ' ' → logprob: -3.035343647003174
    5. ' (' → logprob: -3.535343647003174
    6. '(' → logprob: -3.785343647003174
    7. ' =' → logprob: -4.285343647003174
    8. 'i' → logprob: -4.410343647003174
    9. '=' → logprob: -4.785343647003174
    10. '{i' → logprob: -5.035343647003174

Token 740: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008364312816411257
    2. '0' → logprob: -7.875836372375488
    3. 'i' → logprob: -8.500836372375488
    4. '2' → logprob: -8.625836372375488
    5. 'value' → logprob: -10.000836372375488
    6. '100' → logprob: -11.875836372375488
    7. 'pow' → logprob: -12.375836372375488
    8. '`' → logprob: -13.125836372375488
    9. '```' → logprob: -13.375836372375488
    10. ' ' → logprob: -13.500836372375488

Token 741: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018354683415964246
    2. '2' → logprob: -7.001835346221924
    3. '0' → logprob: -8.126835823059082
    4. 'value' → logprob: -8.251835823059082
    5. 'i' → logprob: -8.376835823059082
    6. '"' → logprob: -10.126835823059082
    7. 'pow' → logprob: -10.626835823059082
    8. '100' → logprob: -11.001835823059082
    9. '(' → logprob: -11.251835823059082
    10. 'str' → logprob: -12.001835823059082

Token 742: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004703653044998646
    2. '   ' → logprob: -5.629703521728516
    3. ' print' → logprob: -6.879703521728516
    4. ',' → logprob: -10.629703521728516
    5. '	print' → logprob: -11.254703521728516
    6. '    
' → logprob: -11.629703521728516
    7. '```' → logprob: -11.754703521728516
    8. '{' → logprob: -12.129703521728516
    9. '
' → logprob: -12.504703521728516
    10. '.print' → logprob: -13.504703521728516

Token 743: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049857817590236664
    2. '   ' → logprob: -3.0498578548431396
    3. ' print' → logprob: -6.6748576164245605
    4. '	print' → logprob: -12.299858093261719
    5. '```' → logprob: -13.424858093261719
    6. '    
' → logprob: -14.924858093261719
    7. '(' → logprob: -15.674858093261719
    8. '(print' → logprob: -15.799858093261719
    9. ',' → logprob: -16.04985809326172
    10. '       ' → logprob: -16.29985809326172

Token 744: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.641841820150148e-05
    2. ' print' → logprob: -10.75002670288086
    3. '   ' → logprob: -12.25002670288086
    4. '	print' → logprob: -16.37502670288086
    5. '```' → logprob: -20.25002670288086
    6. 'printf' → logprob: -21.75002670288086
    7. 'for' → logprob: -22.25002670288086
    8. '#print' → logprob: -22.62502670288086
    9. ' ' → logprob: -23.12502670288086
    10. '.print' → logprob: -23.12502670288086

Token 745: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.251091377227567e-05
    2. '(' → logprob: -10.125042915344238
    3. 'i' → logprob: -13.000042915344238
    4. ' (' → logprob: -16.625041961669922
    5. '((' → logprob: -17.500041961669922
    6. '(
' → logprob: -18.250041961669922
    7. '(f' → logprob: -18.375041961669922
    8. '   ' → logprob: -19.000041961669922
    9. ' i' → logprob: -19.750041961669922
    10. '('' → logprob: -20.125041961669922

Token 746: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0430179201066494
    2. ' +' → logprob: -3.168017864227295
    3. '1' → logprob: -11.668018341064453
    4. ',' → logprob: -12.418018341064453
    5. '+,' → logprob: -13.043018341064453
    6. '   ' → logprob: -13.918018341064453
    7. '+i' → logprob: -13.918018341064453
    8. ' ,' → logprob: -14.418018341064453
    9. '+
' → logprob: -14.918018341064453
    10. '()+' → logprob: -15.168018341064453

Token 747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -15.625017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '  ' → logprob: -17.000017166137695
    6. '    ' → logprob: -18.750017166137695
    7. '```' → logprob: -18.750017166137695
    8. '۱' → logprob: -19.000017166137695
    9. '१' → logprob: -19.687517166137695
    10. '0' → logprob: -19.687517166137695

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '2' → logprob: -16.875
    4. '   ' → logprob: -17.5625
    5. '0' → logprob: -18.875
    6. '  ' → logprob: -19.3125
    7. '۱' → logprob: -19.5
    8. '
' → logprob: -19.5625
    9. '```' → logprob: -19.75
    10. '१' → logprob: -19.875

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004599111154675484
    2. ' ,' → logprob: -5.879599094390869
    3. '+' → logprob: -6.504599094390869
    4. ',i' → logprob: -8.629599571228027
    5. '   ' → logprob: -10.129599571228027
    6. 'i' → logprob: -10.504599571228027
    7. '(i' → logprob: -11.379599571228027
    8. '+,' → logprob: -11.379599571228027
    9. ',
' → logprob: -11.504599571228027
    10. ' i' → logprob: -12.379599571228027

Token 750: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.703443770878948e-06
    2. ' i' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.125007629394531
    4. '  ' → logprob: -18.50000762939453
    5. '	i' → logprob: -18.50000762939453
    6. ' ' → logprob: -18.87500762939453
    7. '    ' → logprob: -19.62500762939453
    8. '(i' → logprob: -20.62500762939453
    9. '2' → logprob: -21.37500762939453
    10. '0' → logprob: -21.50000762939453

Token 751: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07906318455934525
    2. ' +' → logprob: -2.5790631771087646
    3. '2' → logprob: -8.704063415527344
    4. '1' → logprob: -13.329063415527344
    5. '   ' → logprob: -13.829063415527344
    6. ' plus' → logprob: -14.204063415527344
    7. ' ' → logprob: -14.204063415527344
    8. '+
' → logprob: -14.329063415527344
    9. '```' → logprob: -14.579063415527344
    10. ' +
' → logprob: -14.829063415527344

Token 752: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.250336647033691
    3. '1' → logprob: -9.500336647033691
    4. '```' → logprob: -16.000337600708008
    5. '  ' → logprob: -16.187837600708008
    6. '<|end|>' → logprob: -16.375337600708008
    7. '   ' → logprob: -16.437837600708008
    8. '0' → logprob: -17.312837600708008
    9. '۲' → logprob: -17.812837600708008
    10. '
' → logprob: -18.000337600708008

Token 753: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -16.00000762939453
    4. '+' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.25000762939453
    6. '```' → logprob: -18.00000762939453
    7. '۲' → logprob: -18.37500762939453
    8. '  ' → logprob: -18.56250762939453
    9. 'i' → logprob: -19.18750762939453
    10. '২' → logprob: -19.75000762939453

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02913597784936428
    2. '0' → logprob: -3.6541359424591064
    3. ' ,' → logprob: -6.0291361808776855
    4. ' ' → logprob: -7.7791361808776855
    5. '   ' → logprob: -12.654135704040527
    6. ')' → logprob: -13.029135704040527
    7. '    ' → logprob: -15.779135704040527
    8. '  ' → logprob: -16.904136657714844
    9. '1' → logprob: -17.154136657714844
    10. ',
' → logprob: -17.529136657714844

Token 755: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -16.75
    4. '1' → logprob: -18.625
    5. '   ' → logprob: -20.0
    6. '2' → logprob: -20.875
    7. '`' → logprob: -21.0
    8. '```' → logprob: -21.25
    9. '"' → logprob: -21.625
    10. 'end' → logprob: -21.875

Token 756: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -16.375
    4. '1' → logprob: -17.25
    5. '"' → logprob: -18.375
    6. '   ' → logprob: -19.3125
    7. '`' → logprob: -19.4375
    8. '2' → logprob: -19.625
    9. '00' → logprob: -19.6875
    10. ''' → logprob: -20.0625

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.875029563903809
    4. '<|end|>' → logprob: -14.250029563903809
    5. '),' → logprob: -15.875029563903809
    6. '   ' → logprob: -17.000028610229492
    7. '')' → logprob: -17.500028610229492
    8. ')}' → logprob: -17.750028610229492
    9. ')
' → logprob: -17.875028610229492
    10. ')

' → logprob: -17.875028610229492

Token 758: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012964447028934956
    2. ' for' → logprob: -4.637964248657227
    3. '<|end|>' → logprob: -5.762964248657227
    4. '
' → logprob: -10.762964248657227
    5. '```' → logprob: -11.637964248657227
    6. '<|end|>' → logprob: -11.762964248657227
    7. 'i' → logprob: -12.012964248657227
    8. '  
' → logprob: -12.637964248657227
    9. ')' → logprob: -13.012964248657227
    10. '	for' → logprob: -13.137964248657227

Token 759: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3775140643119812
    2. 'if' → logprob: -1.377514123916626
    3. 'print' → logprob: -3.502514123916626
    4. '#' → logprob: -3.752514123916626
    5. '<|end|>' → logprob: -4.877513885498047
    6. ' for' → logprob: -8.127513885498047
    7. '```' → logprob: -8.627513885498047
    8. ' if' → logprob: -9.377513885498047
    9. '   ' → logprob: -9.502513885498047
    10. '<|end|>' → logprob: -9.752513885498047

Token 761: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47206124663352966
    2. '   ' → logprob: -1.597061276435852
    3. ' print' → logprob: -2.5970611572265625
    4. 'ix' → logprob: -3.0970611572265625
    5. '#' → logprob: -4.4720611572265625
    6. '```' → logprob: -4.7220611572265625
    7. 'ect' → logprob: -5.7220611572265625
    8. 'for' → logprob: -5.7220611572265625
    9. '  ' → logprob: -5.8470611572265625
    10. '(print' → logprob: -5.9720611572265625

Token 762: ' une' (ID: 2463)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01919175311923027
    2. 'i' → logprob: -4.019191741943359
    3. '(' → logprob: -7.769191741943359
    4. 'path' → logprob: -8.01919174194336
    5. '(n' → logprob: -9.76919174194336
    6. ' i' → logprob: -10.14419174194336
    7. '()' → logprob: -10.39419174194336
    8. '(-' → logprob: -10.64419174194336
    9. '(path' → logprob: -10.64419174194336
    10. 'value' → logprob: -10.89419174194336

Token 763: ' ar' (ID: 646)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09970615059137344
    2. 'i' → logprob: -2.5997061729431152
    3. 'path' → logprob: -5.099706172943115
    4. '(' → logprob: -5.099706172943115
    5. 'print' → logprob: -5.099706172943115
    6. 'if' → logprob: -7.849706172943115
    7. ' (' → logprob: -7.974706172943115
    8. 'end' → logprob: -8.224705696105957
    9. ' i' → logprob: -9.099705696105957
    10. '(n' → logprob: -9.224705696105957

Token 764: 'ête' (ID: 16808)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.37059879302978516
    2. '+' → logprob: -1.8705987930297852
    3. 'ête' → logprob: -1.9955987930297852
    4. ' i' → logprob: -5.120598793029785
    5. '+i' → logprob: -5.745598793029785
    6. ' +' → logprob: -5.870598793029785
    7. '(' → logprob: -5.995598793029785
    8. '+(' → logprob: -6.870598793029785
    9. '   ' → logprob: -7.120598793029785
    10. '[i' → logprob: -7.245598793029785

Token 765: ' du' (ID: 1462)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0020265427883714437
    2. '(' → logprob: -6.627026557922363
    3. '(value' → logprob: -7.752026557922363
    4. '(path' → logprob: -9.002026557922363
    5. ' (' → logprob: -9.627026557922363
    6. '   ' → logprob: -10.377026557922363
    7. 'i' → logprob: -11.377026557922363
    8. 'path' → logprob: -11.627026557922363
    9. 'value' → logprob: -11.752026557922363
    10. '(n' → logprob: -12.002026557922363

Token 766: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014551167842000723
    2. ' i' → logprob: -6.751455307006836
    3. 'n' → logprob: -9.376455307006836
    4. '(i' → logprob: -9.626455307006836
    5. '2' → logprob: -9.876455307006836
    6. 'path' → logprob: -10.626455307006836
    7. '1' → logprob: -10.751455307006836
    8. '   ' → logprob: -11.251455307006836
    9. 'value' → logprob: -11.876455307006836
    10. ' ' → logprob: -13.126455307006836

Token 767: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.70306795835495
    2. ' i' → logprob: -0.70306795835495
    3. '+' → logprob: -5.578067779541016
    4. '   ' → logprob: -6.078067779541016
    5. '(i' → logprob: -6.203067779541016
    6. ' (' → logprob: -7.703067779541016
    7. '1' → logprob: -8.328067779541016
    8. ' ' → logprob: -8.328067779541016
    9. ' +' → logprob: -8.453067779541016
    10. '2' → logprob: -8.453067779541016

Token 768: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519674599170685
    2. ' +' → logprob: -1.501967430114746
    3. '   ' → logprob: -10.751967430114746
    4. ',' → logprob: -11.751967430114746
    5. ' ' → logprob: -12.626967430114746
    6. '    ' → logprob: -13.876967430114746
    7. '1' → logprob: -14.001967430114746
    8. ' ,' → logprob: -14.001967430114746
    9. '+i' → logprob: -14.251967430114746
    10. ' i' → logprob: -14.626967430114746

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001405232702381909
    2. '2' → logprob: -6.626405239105225
    3. ' ' → logprob: -10.001404762268066
    4. '3' → logprob: -10.376404762268066
    5. '   ' → logprob: -14.313904762268066
    6. '0' → logprob: -14.876404762268066
    7. 'i' → logprob: -15.063904762268066
    8. '4' → logprob: -15.563904762268066
    9. '```' → logprob: -15.626404762268066
    10. '+' → logprob: -15.688904762268066

Token 770: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013014101423323154
    2. ' ,' → logprob: -4.513014316558838
    3. ',i' → logprob: -7.013014316558838
    4. '+' → logprob: -7.388014316558838
    5. ' +' → logprob: -8.63801383972168
    6. ' i' → logprob: -8.88801383972168
    7. '   ' → logprob: -10.01301383972168
    8. '(i' → logprob: -10.63801383972168
    9. 'i' → logprob: -10.76301383972168
    10. '+,' → logprob: -11.01301383972168

Token 771: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2732284665107727
    2. 'n' → logprob: -1.773228406906128
    3. 'value' → logprob: -4.023228645324707
    4. '(i' → logprob: -4.023228645324707
    5. 'path' → logprob: -4.773228645324707
    6. '(n' → logprob: -4.773228645324707
    7. ' i' → logprob: -4.898228645324707
    8. ' n' → logprob: -5.398228645324707
    9. '2' → logprob: -6.773228645324707
    10. ' value' → logprob: -6.773228645324707

Token 772: ' i' (ID: 575)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41884249448776245
    2. '3' → logprob: -1.7938425540924072
    3. 'i' → logprob: -2.7938425540924072
    4. '   ' → logprob: -3.1688425540924072
    5. ' +' → logprob: -3.7938425540924072
    6. ' i' → logprob: -3.9188425540924072
    7. '2' → logprob: -3.9188425540924072
    8. ' ' → logprob: -5.543842315673828
    9. '+i' → logprob: -5.793842315673828
    10. '  ' → logprob: -7.293842315673828

Token 773: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0075892298482358456
    2. ' +' → logprob: -5.007589340209961
    3. '2' → logprob: -7.757589340209961
    4. '   ' → logprob: -7.882589340209961
    5. '+i' → logprob: -10.132589340209961
    6. 'i' → logprob: -11.757589340209961
    7. ' i' → logprob: -12.132589340209961
    8. '(' → logprob: -12.507589340209961
    9. '+
' → logprob: -13.132589340209961
    10. '```' → logprob: -13.507589340209961

Token 774: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03866857290267944
    2. '1' → logprob: -3.288668632507324
    3. '2' → logprob: -7.413668632507324
    4. '4' → logprob: -11.288668632507324
    5. ' ' → logprob: -12.976168632507324
    6. 'i' → logprob: -13.538668632507324
    7. 'value' → logprob: -13.851168632507324
    8. '```' → logprob: -13.851168632507324
    9. '
' → logprob: -14.163668632507324
    10. 'm' → logprob: -14.476168632507324

Token 775: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026685848832130432
    2. ' ,' → logprob: -3.651685953140259
    3. '0' → logprob: -8.77668571472168
    4. '1' → logprob: -9.77668571472168
    5. ' ' → logprob: -9.90168571472168
    6. ',i' → logprob: -10.15168571472168
    7. '   ' → logprob: -10.27668571472168
    8. '+' → logprob: -11.52668571472168
    9. '3' → logprob: -11.52668571472168
    10. ' i' → logprob: -12.52668571472168

Token 776: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008983612060546875
    2. ' ' → logprob: -5.008983612060547
    3. '0' → logprob: -6.508983612060547
    4. '2' → logprob: -7.258983612060547
    5. ' i' → logprob: -10.633983612060547
    6. 'i' → logprob: -10.758983612060547
    7. 'value' → logprob: -12.133983612060547
    8. 'weight' → logprob: -12.258983612060547
    9. ' (' → logprob: -12.633983612060547
    10. '(i' → logprob: -13.133983612060547

Token 777: ' poids' (ID: 56058)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017879487946629524
    2. '2' → logprob: -4.267879486083984
    3. '0' → logprob: -5.892879486083984
    4. 'i' → logprob: -7.892879486083984
    5. ' ' → logprob: -8.892879486083984
    6. 'print' → logprob: -9.017879486083984
    7. 'weight' → logprob: -9.267879486083984
    8. '3' → logprob: -10.142879486083984
    9. 'value' → logprob: -10.142879486083984
    10. '-' → logprob: -10.267879486083984

Token 778: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16790810227394104
    2. ',' → logprob: -2.167908191680908
    3. ' ,' → logprob: -3.917908191680908
    4. ' ' → logprob: -4.167908191680908
    5. '   ' → logprob: -6.292908191680908
    6. '=' → logprob: -6.667908191680908
    7. '0' → logprob: -7.792908191680908
    8. ' =' → logprob: -7.917908191680908
    9. '(' → logprob: -8.04290771484375
    10. '+' → logprob: -8.41790771484375

Token 779: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10614882409572601
    2. '2' → logprob: -2.3561487197875977
    3. 'i' → logprob: -5.981148719787598
    4. '(' → logprob: -6.731148719787598
    5. '(i' → logprob: -6.856148719787598
    6. 'path' → logprob: -7.981148719787598
    7. 'value' → logprob: -8.481148719787598
    8. ' ' → logprob: -8.731148719787598
    9. 'pow' → logprob: -8.856148719787598
    10. '0' → logprob: -8.981148719787598

Token 780: '2' (ID: 17)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.10555153340101242
    2. '1' → logprob: -2.3555514812469482
    3. '2' → logprob: -5.855551719665527
    4. 'value' → logprob: -6.730551719665527
    5. 'pow' → logprob: -7.730551719665527
    6. '(path' → logprob: -8.355551719665527
    7. ' path' → logprob: -8.730551719665527
    8. 'power' → logprob: -9.105551719665527
    9. 'i' → logprob: -9.105551719665527
    10. '(' → logprob: -9.230551719665527

Token 781: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9283259510993958
    2. ',' → logprob: -1.928325891494751
    3. '1' → logprob: -2.303325891494751
    4. '+' → logprob: -2.303325891494751
    5. ')' → logprob: -2.553325891494751
    6. ' +' → logprob: -3.053325891494751
    7. '2' → logprob: -3.553325891494751
    8. ' ' → logprob: -3.678325891494751
    9. 'print' → logprob: -3.803325891494751
    10. ' ,' → logprob: -4.30332612991333

Token 782: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2751311957836151
    2. '(n' → logprob: -1.6501312255859375
    3. 'i' → logprob: -3.1501312255859375
    4. '(' → logprob: -5.4001312255859375
    5. ' (' → logprob: -7.1501312255859375
    6. '0' → logprob: -8.400131225585938
    7. ' i' → logprob: -10.400131225585938
    8. '(m' → logprob: -10.525131225585938
    9. '{i' → logprob: -11.025131225585938
    10. '((' → logprob: -11.150131225585938

Token 783: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04597972333431244
    2. ',' → logprob: -3.2959797382354736
    3. 'print' → logprob: -5.4209794998168945
    4. ' print' → logprob: -6.1709794998168945
    5. ' ,' → logprob: -7.9209794998168945
    6. '(i' → logprob: -8.170979499816895
    7. '```' → logprob: -8.795979499816895
    8. '    
' → logprob: -8.920979499816895
    9. ',i' → logprob: -9.170979499816895
    10. '[i' → logprob: -9.795979499816895

Token 784: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1617727279663086
    2. '   ' → logprob: -1.9117727279663086
    3. ' print' → logprob: -7.536772727966309
    4. '```' → logprob: -7.786772727966309
    5. ',' → logprob: -8.411772727966309
    6. '(i' → logprob: -8.911772727966309
    7. '(print' → logprob: -9.911772727966309
    8. '``' → logprob: -10.036772727966309
    9. 'for' → logprob: -10.286772727966309
    10. '[i' → logprob: -10.786772727966309

Token 785: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013405199570115656
    2. ' print' → logprob: -9.125134468078613
    3. '   ' → logprob: -10.875134468078613
    4. ',' → logprob: -12.500134468078613
    5. '```' → logprob: -13.375134468078613
    6. '(i' → logprob: -15.750134468078613
    7. '(print' → logprob: -15.750134468078613
    8. '    
' → logprob: -16.125133514404297
    9. ',i' → logprob: -16.250133514404297
    10. 'for' → logprob: -16.250133514404297

Token 786: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.500001907348633
    3. 'i' → logprob: -13.875001907348633
    4. ' i' → logprob: -17.375001907348633
    5. '(
' → logprob: -18.875001907348633
    6. ' (' → logprob: -19.250001907348633
    7. '1' → logprob: -20.125001907348633
    8. '0' → logprob: -20.375001907348633
    9. '((' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.750001907348633

Token 787: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0620025210082531
    2. '+' → logprob: -2.812002420425415
    3. '1' → logprob: -11.062002182006836
    4. '   ' → logprob: -12.062002182006836
    5. ' ' → logprob: -12.187002182006836
    6. ' ,' → logprob: -13.562002182006836
    7. ',' → logprob: -13.812002182006836
    8. '+i' → logprob: -14.062002182006836
    9. '2' → logprob: -14.187002182006836
    10. 'i' → logprob: -14.312002182006836

Token 788: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. ' ' → logprob: -9.375120162963867
    3. '2' → logprob: -10.875120162963867
    4. '+' → logprob: -11.500120162963867
    5. 'i' → logprob: -12.750120162963867
    6. ' i' → logprob: -14.375120162963867
    7. '(i' → logprob: -14.875120162963867
    8. '0' → logprob: -15.250120162963867
    9. '   ' → logprob: -15.562620162963867
    10. '12' → logprob: -15.562620162963867

Token 789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.750043869018555
    3. '2' → logprob: -11.500043869018555
    4. '+' → logprob: -12.375043869018555
    5. 'i' → logprob: -12.375043869018555
    6. '(i' → logprob: -14.187543869018555
    7. '0' → logprob: -14.250043869018555
    8. ' i' → logprob: -14.687543869018555
    9. '   ' → logprob: -15.000043869018555
    10. '10' → logprob: -15.312543869018555

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045783669338561594
    2. ' ,' → logprob: -7.875457763671875
    3. ',i' → logprob: -9.500457763671875
    4. '+' → logprob: -13.375457763671875
    5. '(i' → logprob: -15.125457763671875
    6. '+,' → logprob: -15.375457763671875
    7. ',
' → logprob: -15.625457763671875
    8. 'i' → logprob: -15.750457763671875
    9. '   ' → logprob: -16.000457763671875
    10. '‌,' → logprob: -16.125457763671875

Token 791: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007105246186256409
    2. ' i' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.625710487365723
    4. '   ' → logprob: -15.750710487365723
    5. '2' → logprob: -16.75071144104004
    6. '  ' → logprob: -17.25071144104004
    7. '0' → logprob: -17.62571144104004
    8. '(i' → logprob: -18.00071144104004
    9. '1' → logprob: -18.25071144104004
    10. '{i' → logprob: -18.25071144104004

Token 792: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01580207049846649
    2. '2' → logprob: -4.890801906585693
    3. ',' → logprob: -5.765801906585693
    4. ' +' → logprob: -5.765801906585693
    5. '+,' → logprob: -6.640801906585693
    6. ' ,' → logprob: -8.015802383422852
    7. ' ' → logprob: -8.515802383422852
    8. '   ' → logprob: -10.890802383422852
    9. '  ' → logprob: -11.265802383422852
    10. '+i' → logprob: -11.640802383422852

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18028050661087036
    2. '2' → logprob: -1.8052804470062256
    3. ' ' → logprob: -7.555280685424805
    4. '0' → logprob: -12.180280685424805
    5. 'i' → logprob: -12.805280685424805
    6. '3' → logprob: -13.930280685424805
    7. '(i' → logprob: -13.930280685424805
    8. '   ' → logprob: -14.930280685424805
    9. '+' → logprob: -15.055280685424805
    10. ' i' → logprob: -15.180280685424805

Token 794: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -11.125028610229492
    3. '1' → logprob: -11.625028610229492
    4. 'i' → logprob: -13.125028610229492
    5. '20' → logprob: -14.125028610229492
    6. '+' → logprob: -14.875028610229492
    7. '22' → logprob: -15.250028610229492
    8. '(i' → logprob: -15.375028610229492
    9. '24' → logprob: -15.812528610229492
    10. '3' → logprob: -15.875028610229492

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002346488763578236
    2. ' ,' → logprob: -8.375234603881836
    3. '',' → logprob: -14.000234603881836
    4. '   ' → logprob: -14.000234603881836
    5. '2' → logprob: -14.500234603881836
    6. '",' → logprob: -15.125234603881836
    7. '`,' → logprob: -15.500234603881836
    8. ',
' → logprob: -15.625234603881836
    9. ',i' → logprob: -15.750234603881836
    10. ' ' → logprob: -16.000234603881836

Token 796: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -9.500076293945312
    3. '1' → logprob: -14.000076293945312
    4. '   ' → logprob: -16.500076293945312
    5. '`' → logprob: -16.875076293945312
    6. '10' → logprob: -17.875076293945312
    7. '```' → logprob: -18.250076293945312
    8. '0' → logprob: -19.125076293945312
    9. '(' → logprob: -19.250076293945312
    10. '{' → logprob: -19.625076293945312

Token 797: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. ' ' → logprob: -16.125001907348633
    4. '1' → logprob: -17.250001907348633
    5. '`' → logprob: -18.250001907348633
    6. 'pow' → logprob: -18.250001907348633
    7. '**' → logprob: -18.375001907348633
    8. '```' → logprob: -18.500001907348633
    9. '(i' → logprob: -18.875001907348633
    10. 'i' → logprob: -19.000001907348633

Token 798: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4453650116920471
    2. ' **' → logprob: -1.1953649520874023
    3. '^' → logprob: -2.9453649520874023
    4. 'i' → logprob: -6.195364952087402
    5. ' ^' → logprob: -7.195364952087402
    6. ' i' → logprob: -7.570364952087402
    7. '[i' → logprob: -7.695364952087402
    8. '*i' → logprob: -8.695364952087402
    9. ' ' → logprob: -9.445364952087402
    10. '(i' → logprob: -9.820364952087402

Token 799: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -14.000000953674316
    3. '(' → logprob: -16.500001907348633
    4. '(i' → logprob: -17.125001907348633
    5. '	i' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. ' ' → logprob: -20.750001907348633
    8. '```' → logprob: -21.250001907348633
    9. '<|end|>' → logprob: -21.500001907348633
    10. '  ' → logprob: -22.000001907348633

Token 800: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.726595241460018e-05
    2. ')
' → logprob: -10.37503719329834
    3. '<|end|>' → logprob: -12.87503719329834
    4. '   ' → logprob: -13.50003719329834
    5. ' )' → logprob: -14.00003719329834
    6. '())' → logprob: -14.75003719329834
    7. '()' → logprob: -15.37503719329834
    8. '')' → logprob: -16.250038146972656
    9. '```' → logprob: -16.375038146972656
    10. '),' → logprob: -16.375038146972656

Token 801: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020497082732617855
    2. '```' → logprob: -8.625205039978027
    3. 'i' → logprob: -11.750205039978027
    4. ' for' → logprob: -11.875205039978027
    5. '#' → logprob: -12.000205039978027
    6. 'if' → logprob: -12.500205039978027
    7. '``' → logprob: -15.375205039978027
    8. '   ' → logprob: -15.375205039978027
    9. '    
' → logprob: -16.75020408630371
    10. 'print' → logprob: -17.00020408630371

Token 802: ' Tro' (ID: 29037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. '#' → logprob: -15.5
    3. ' for' → logprob: -18.75
    4. '```' → logprob: -20.75
    5. 'i' → logprob: -22.375
    6. 'if' → logprob: -23.25
    7. 'print' → logprob: -23.75
    8. 'from' → logprob: -24.75
    9. 'range' → logprob: -24.75
    10. '0' → logprob: -24.75

Token 803: 'isième' (ID: 70717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012869019992649555
    2. 'p' → logprob: -7.25128698348999
    3. '#' → logprob: -8.376286506652832
    4. 't' → logprob: -8.751286506652832
    5. ' for' → logprob: -9.751286506652832
    6. 'i' → logprob: -9.876286506652832
    7. 'r' → logprob: -10.501286506652832
    8. 'd' → logprob: -11.001286506652832
    9. 'ti' → logprob: -11.876286506652832
    10. 'ple' → logprob: -12.376286506652832

Token 804: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.6696149840718135e-05
    2. ' for' → logprob: -10.500056266784668
    3. 'range' → logprob: -10.875056266784668
    4. '
' → logprob: -12.250056266784668
    5. '```' → logprob: -12.625056266784668
    6. '#' → logprob: -13.625056266784668
    7. 'loop' → logprob: -14.250056266784668
    8. 'line' → logprob: -16.625057220458984
    9. '``' → logprob: -17.125057220458984
    10. '	for' → logprob: -17.250057220458984

Token 805: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.125
    3. '```' → logprob: -19.0
    4. '#' → logprob: -19.25
    5. '
' → logprob: -20.375
    6. 'range' → logprob: -21.25
    7. 'i' → logprob: -22.75
    8. '``' → logprob: -23.25
    9. 'from' → logprob: -23.25
    10. 'n' → logprob: -23.25

Token 806: ' afficher' (ID: 146524)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03173268586397171
    2. 'i' → logprob: -3.5317327976226807
    3. ' range' → logprob: -6.281732559204102
    4. 'for' → logprob: -9.156732559204102
    5. ' i' → logprob: -12.656732559204102
    6. '[i' → logprob: -14.531732559204102
    7. 'enumer' → logprob: -15.406732559204102
    8. '(range' → logprob: -15.531732559204102
    9. '(i' → logprob: -15.531732559204102
    10. ' ' → logprob: -16.7817325592041

Token 807: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.43574732542037964
    2. 'i' → logprob: -1.1857473850250244
    3. 'for' → logprob: -3.4357473850250244
    4. 'range' → logprob: -4.185747146606445
    5. ' i' → logprob: -9.060747146606445
    6. '(range' → logprob: -9.060747146606445
    7. ' range' → logprob: -10.310747146606445
    8. '(n' → logprob: -11.435747146606445
    9. ' for' → logprob: -12.185747146606445
    10. '(' → logprob: -12.810747146606445

Token 808: ' chemins' (ID: 192063)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03386755660176277
    2. 'range' → logprob: -3.533867597579956
    3. 'for' → logprob: -5.658867359161377
    4. ' i' → logprob: -8.158867835998535
    5. ' range' → logprob: -8.158867835998535
    6. '(i' → logprob: -10.283867835998535
    7. ' for' → logprob: -11.783867835998535
    8. '[i' → logprob: -12.783867835998535
    9. 'enumer' → logprob: -13.408867835998535
    10. '(range' → logprob: -13.658867835998535

Token 809: ' altern' (ID: 7310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014420190127566457
    2. ' for' → logprob: -6.876441955566406
    3. '_add' → logprob: -8.126441955566406
    4. '(i' → logprob: -10.626441955566406
    5. 'i' → logprob: -10.876441955566406
    6. '_for' → logprob: -11.251441955566406
    7. 'pour' → logprob: -11.501441955566406
    8. 'range' → logprob: -11.876441955566406
    9. '```' → logprob: -12.001441955566406
    10. '_' → logprob: -12.126441955566406

Token 810: 'atifs' (ID: 66205)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00032283025211654603
    2. ' for' → logprob: -8.250323295593262
    3. 'range' → logprob: -11.000323295593262
    4. '   ' → logprob: -11.375323295593262
    5. '_for' → logprob: -12.125323295593262
    6. 'ar' → logprob: -12.125323295593262
    7. '```' → logprob: -12.375323295593262
    8. 'ange' → logprob: -12.500323295593262
    9. '(for' → logprob: -12.875323295593262
    10. '#' → logprob: -13.000323295593262

Token 811: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.125
    3. '```' → logprob: -20.375
    4. '
' → logprob: -20.625
    5. 'i' → logprob: -23.5
    6. '	for' → logprob: -23.625
    7. '   ' → logprob: -24.375
    8. 'from' → logprob: -24.5
    9. '(' → logprob: -24.5
    10. '#' → logprob: -25.125

Token 812: ''il' (ID: 14683)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.522638169466518e-05
    2. 'range' → logprob: -10.875024795532227
    3. ' for' → logprob: -12.500024795532227
    4. 'or' → logprob: -13.500024795532227
    5. 'in' → logprob: -14.375024795532227
    6. 'i' → logprob: -15.625024795532227
    7. '#' → logprob: -15.750024795532227
    8. '(range' → logprob: -16.000024795532227
    9. '```' → logprob: -16.625024795532227
    10. '   ' → logprob: -17.500024795532227

Token 813: ' y' (ID: 342)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.07788114994764328
    2. 'um' → logprob: -2.702881097793579
    3. 'em' → logprob: -5.827881336212158
    4. 't' → logprob: -6.577881336212158
    5. 'u' → logprob: -6.702881336212158
    6. 'e' → logprob: -6.827881336212158
    7. '#' → logprob: -9.202880859375
    8. 'x' → logprob: -9.327880859375
    9. '[i' → logprob: -9.452880859375
    10. 'sum' → logprob: -9.452880859375

Token 814: ' en' (ID: 469)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.2216729074716568
    2. 'a' → logprob: -1.8466728925704956
    3. '#' → logprob: -4.346673011779785
    4. 'avait' → logprob: -4.346673011779785
    5. 'aient' → logprob: -6.096673011779785
    6. 'à' → logprob: -6.346673011779785
    7. '1' → logprob: -6.471673011779785
    8. 'ex' → logprob: -6.471673011779785
    9. 'avaient' → logprob: -6.596673011779785
    10. ' a' → logprob: -6.721673011779785

Token 815: ' a' (ID: 261)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1217566505074501
    2. 'range' → logprob: -2.3717565536499023
    3. ' in' → logprob: -3.9967565536499023
    4. 'for' → logprob: -6.621756553649902
    5. 'ange' → logprob: -6.996756553649902
    6. 'en' → logprob: -8.371756553649902
    7. ' range' → logprob: -8.746756553649902
    8. '   ' → logprob: -9.121756553649902
    9. 'dans' → logprob: -10.246756553649902
    10. 'i' → logprob: -10.746756553649902

Token 816: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.125
    3. '```' → logprob: -19.625
    4. 'i' → logprob: -21.5
    5. '
' → logprob: -22.125
    6. 'if' → logprob: -23.0
    7. '   ' → logprob: -24.375
    8. '``' → logprob: -24.75
    9. '	for' → logprob: -24.875
    10. '    
' → logprob: -25.0

Token 817: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -19.125
    3. '```' → logprob: -20.625
    4. '	for' → logprob: -24.25
    5. 'i' → logprob: -25.75
    6. 'from' → logprob: -26.5
    7. 'For' → logprob: -26.75
    8. '``' → logprob: -26.875
    9. 'fora' → logprob: -27.125
    10. '   ' → logprob: -27.625

Token 818: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0032057580538094044
    2. ' i' → logprob: -5.7532057762146
    3. 'j' → logprob: -10.878205299377441
    4. 'idx' → logprob: -12.253205299377441
    5. '	i' → logprob: -14.003205299377441
    6. '(i' → logprob: -14.003205299377441
    7. '   ' → logprob: -14.378205299377441
    8. 'index' → logprob: -14.503205299377441
    9. ' ' → logprob: -14.878205299377441
    10. 'k' → logprob: -14.878205299377441

Token 819: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023246178403496742
    2. ' in' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.898245811462402
    4. '   ' → logprob: -15.898245811462402
    5. ',' → logprob: -16.14824676513672
    6. '	in' → logprob: -16.64824676513672
    7. '  ' → logprob: -17.64824676513672
    8. 'range' → logprob: -17.77324676513672
    9. 'import' → logprob: -18.27324676513672
    10. '(' → logprob: -18.39824676513672

Token 820: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005537479883059859
    2. ' range' → logprob: -7.500553607940674
    3. 'path' → logprob: -14.500554084777832
    4. '(range' → logprob: -16.000553131103516
    5. ' ' → logprob: -16.750553131103516
    6. '	range' → logprob: -16.750553131103516
    7. 'enumer' → logprob: -17.875553131103516
    8. '   ' → logprob: -17.875553131103516
    9. 're' → logprob: -18.125553131103516
    10. '  ' → logprob: -18.250553131103516

Token 821: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.64970643306151e-05
    2. '(len' → logprob: -9.500086784362793
    3. '(' → logprob: -12.125086784362793
    4. 'n' → logprob: -12.125086784362793
    5. 'len' → logprob: -14.125086784362793
    6. ' (' → logprob: -17.375085830688477
    7. 'range' → logprob: -17.500085830688477
    8. '((' → logprob: -18.500085830688477
    9. '(-' → logprob: -18.625085830688477
    10. ' n' → logprob: -20.250085830688477

Token 822: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42871472239494324
    2. '-' → logprob: -1.0537147521972656
    3. '   ' → logprob: -12.303714752197266
    4. ')' → logprob: -13.178714752197266
    5. '(' → logprob: -13.303714752197266
    6. '1' → logprob: -13.553714752197266
    7. ' ' → logprob: -13.553714752197266
    8. '()-' → logprob: -13.928714752197266
    9. '):
' → logprob: -14.053714752197266
    10. '-
' → logprob: -14.928714752197266

Token 823: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019626895664259791
    2. ' ' → logprob: -8.87519645690918
    3. '2' → logprob: -10.25019645690918
    4. '-' → logprob: -11.00019645690918
    5. '   ' → logprob: -13.25019645690918
    6. 'range' → logprob: -14.00019645690918
    7. ' -' → logprob: -14.43769645690918
    8. '(' → logprob: -15.50019645690918
    9. '```' → logprob: -15.75019645690918
    10. '  ' → logprob: -15.93769645690918

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.933173426659778e-05
    2. '-' → logprob: -10.375069618225098
    3. ' ' → logprob: -10.500069618225098
    4. '2' → logprob: -11.625069618225098
    5. ' -' → logprob: -14.500069618225098
    6. '   ' → logprob: -14.875069618225098
    7. 'range' → logprob: -15.937569618225098
    8. '```' → logprob: -16.56256866455078
    9. '(' → logprob: -16.68756866455078
    10. '  ' → logprob: -16.93756866455078

Token 825: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1975456178188324
    2. ':' → logprob: -2.1975455284118652
    3. '):
' → logprob: -2.6975455284118652
    4. '():
' → logprob: -8.197546005249023
    5. '):' → logprob: -8.822546005249023
    6. '   ' → logprob: -8.947546005249023
    7. 'if' → logprob: -9.697546005249023
    8. ' :
' → logprob: -9.822546005249023
    9. ':
' → logprob: -9.947546005249023
    10. '):
' → logprob: -10.822546005249023

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002920830447692424
    2. 'if' → logprob: -8.50029182434082
    3. ' if' → logprob: -9.37529182434082
    4. '	if' → logprob: -12.62529182434082
    5. '   ' → logprob: -14.87529182434082
    6. '       ' → logprob: -16.50029182434082
    7. ' ' → logprob: -17.75029182434082
    8. '  ' → logprob: -18.25029182434082
    9. '```' → logprob: -18.62529182434082
    10. '   ' → logprob: -19.25029182434082

Token 827: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2162810117006302
    2. '   ' → logprob: -1.7162810564041138
    3. ' if' → logprob: -4.216280937194824
    4. '	if' → logprob: -12.466280937194824
    5. '       ' → logprob: -16.09128189086914
    6. '```' → logprob: -16.34128189086914
    7. 'If' → logprob: -16.59128189086914
    8. 'path' → logprob: -16.84128189086914
    9. 'print' → logprob: -17.09128189086914
    10. ' ' → logprob: -18.09128189086914

Token 828: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' if' → logprob: -16.25
    4. '	if' → logprob: -19.75
    5. 'If' → logprob: -23.5
    6. '#' → logprob: -23.75
    7. ' ' → logprob: -24.5
    8. '
' → logprob: -24.5
    9. '```' → logprob: -25.25
    10. '    
' → logprob: -25.5

Token 829: ' pour' (ID: 1930)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0036313117016106844
    2. ' path' → logprob: -5.628631114959717
    3. '   ' → logprob: -10.503631591796875
    4. '(path' → logprob: -12.628631591796875
    5. '	path' → logprob: -15.753631591796875
    6. '[path' → logprob: -16.003631591796875
    7. ' ' → logprob: -16.128631591796875
    8. 'pat' → logprob: -16.628631591796875
    9. '  ' → logprob: -17.378631591796875
    10. ' ' → logprob: -18.628631591796875

Token 830: ' ce' (ID: 2357)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.10522141307592392
    2. 'i' → logprob: -2.3552215099334717
    3. ' path' → logprob: -5.480221271514893
    4. ' i' → logprob: -7.105221271514893
    5. '(path' → logprob: -12.35522174835205
    6. '   ' → logprob: -13.35522174835205
    7. '(i' → logprob: -13.98022174835205
    8. '[path' → logprob: -14.23022174835205
    9. '[i' → logprob: -14.35522174835205
    10. ' ' → logprob: -14.35522174835205

Token 831: ' rang' (ID: 32287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017126628663390875
    2. ' i' → logprob: -6.376712799072266
    3. '[i' → logprob: -12.376712799072266
    4. 'path' → logprob: -12.501712799072266
    5. '```' → logprob: -13.376712799072266
    6. '   ' → logprob: -15.126712799072266
    7. '(i' → logprob: -15.751712799072266
    8. ' path' → logprob: -15.876712799072266
    9. ' ' → logprob: -16.001712799072266
    10. '	i' → logprob: -16.251712799072266

Token 832: ' il' (ID: 1793)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.06208532303571701
    2. ' path' → logprob: -2.8120853900909424
    3. '(path' → logprob: -9.312085151672363
    4. '[path' → logprob: -11.187085151672363
    5. '   ' → logprob: -11.312085151672363
    6. '	path' → logprob: -15.062085151672363
    7. ':path' → logprob: -15.062085151672363
    8. ',path' → logprob: -15.187085151672363
    9. '.path' → logprob: -16.68708610534668
    10. '"path' → logprob: -16.68708610534668

Token 833: ' faut' (ID: 17821)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3650985956192017
    2. '==' → logprob: -1.4900985956192017
    3. ']==' → logprob: -1.8650985956192017
    4. ' ==' → logprob: -1.9900985956192017
    5. '[' → logprob: -2.490098476409912
    6. '[path' → logprob: -3.240098476409912
    7. ' in' → logprob: -3.990098476409912
    8. ' path' → logprob: -4.240098476409912
    9. 'path' → logprob: -4.240098476409912
    10. '<|end|>' → logprob: -4.740098476409912

Token 834: ' ajouter' (ID: 78457)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0015045057516545057
    2. ' path' → logprob: -6.501504421234131
    3. '(path' → logprob: -13.126504898071289
    4. '   ' → logprob: -16.62650489807129
    5. 'if' → logprob: -18.12650489807129
    6. '[path' → logprob: -18.37650489807129
    7. '_path' → logprob: -18.62650489807129
    8. '	path' → logprob: -18.62650489807129
    9. '1' → logprob: -18.75150489807129
    10. '#' → logprob: -18.87650489807129

Token 835: ' un' (ID: 537)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.005239683669060469
    2. ' path' → logprob: -5.255239486694336
    3. '   ' → logprob: -12.255239486694336
    4. '(path' → logprob: -13.755239486694336
    5. '	path' → logprob: -17.505239486694336
    6. '1' → logprob: -18.255239486694336
    7. ' ' → logprob: -18.255239486694336
    8. '[path' → logprob: -18.755239486694336
    9. '  ' → logprob: -19.380239486694336
    10. 'paths' → logprob: -19.380239486694336

Token 836: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.43091583251953125
    2. 'path' → logprob: -1.5559158325195312
    3. '1' → logprob: -2.0559158325195312
    4. ' chemin' → logprob: -4.805915832519531
    5. ' path' → logprob: -7.430915832519531
    6. 'print' → logprob: -7.555915832519531
    7. ' ' → logprob: -7.805915832519531
    8. '   ' → logprob: -8.055915832519531
    9. 'alternative' → logprob: -8.305915832519531
    10. ' alternative' → logprob: -8.805915832519531

Token 837: ' alternatif' (ID: 144363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026591476052999496
    2. 'if' → logprob: -4.1515913009643555
    3. '[i' → logprob: -5.7765913009643555
    4. ' if' → logprob: -6.5265913009643555
    5. '(i' → logprob: -6.7765913009643555
    6. ':
' → logprob: -6.7765913009643555
    7. '_add' → logprob: -7.1515913009643555
    8. ':' → logprob: -7.1515913009643555
    9. '```' → logprob: -7.4015913009643555
    10. ' (' → logprob: -8.276591300964355

Token 838: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.750493049621582
    2. ' if' → logprob: -0.750493049621582
    3. 'if' → logprob: -3.000493049621582
    4. ' path' → logprob: -6.250493049621582
    5. ':' → logprob: -6.625493049621582
    6. ':
' → logprob: -7.000493049621582
    7. ' and' → logprob: -7.500493049621582
    8. '(path' → logprob: -7.750493049621582
    9. 'path' → logprob: -8.625493049621582
    10. ',' → logprob: -9.250493049621582

Token 839: ' path' (ID: 3104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4560129642486572
    2. '   ' → logprob: -1.2060129642486572
    3. ' if' → logprob: -2.7060129642486572
    4. '	if' → logprob: -13.081012725830078
    5. '       ' → logprob: -14.831012725830078
    6. ' ' → logprob: -14.956012725830078
    7. '```' → logprob: -15.081012725830078
    8. '  ' → logprob: -16.206012725830078
    9. '   ' → logprob: -17.456012725830078
    10. 'If' → logprob: -17.456012725830078

Token 840: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.981667537620524e-06
    2. 'add' → logprob: -13.375001907348633
    3. 'Add' → logprob: -15.250001907348633
    4. '_Add' → logprob: -17.125001907348633
    5. '_' → logprob: -17.500001907348633
    6. '_added' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '_ADD' → logprob: -18.000001907348633
    9. '```' → logprob: -18.750001907348633
    10. '_ad' → logprob: -19.125001907348633

Token 841: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6060808522743173e-05
    2. '[' → logprob: -11.375025749206543
    3. '[-' → logprob: -11.500025749206543
    4. ' [' → logprob: -12.875025749206543
    5. '```' → logprob: -14.625025749206543
    6. '[I' → logprob: -15.375025749206543
    7. '   ' → logprob: -15.500025749206543
    8. '[ind' → logprob: -15.875025749206543
    9. ')[' → logprob: -16.12502670288086
    10. '\[' → logprob: -16.37502670288086

Token 842: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5851210951805115
    2. ']==' → logprob: -1.5851211547851562
    3. ']' → logprob: -1.9601211547851562
    4. ' ==' → logprob: -2.3351211547851562
    5. ']:
' → logprob: -9.335121154785156
    6. ']:' → logprob: -9.710121154785156
    7. ' ]' → logprob: -9.710121154785156
    8. '']==' → logprob: -10.085121154785156
    9. ')==' → logprob: -10.210121154785156
    10. ':' → logprob: -10.585121154785156

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -20.875
    5. '=' → logprob: -23.0
    6. '>' → logprob: -23.375
    7. '
' → logprob: -23.875
    8. '  ' → logprob: -24.0
    9. '' → logprob: -24.625
    10. '0' → logprob: -24.625

Token 844: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2469930499792099
    2. ':' → logprob: -2.121993064880371
    3. ' and' → logprob: -3.121993064880371
    4. ' if' → logprob: -3.496993064880371
    5. ':
' → logprob: -4.871993064880371
    6. '       ' → logprob: -4.871993064880371
    7. 'if' → logprob: -5.246993064880371
    8. 'and' → logprob: -6.496993064880371
    9. '<|end|>' → logprob: -7.121993064880371
    10. '```' → logprob: -7.621993064880371

Token 845: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12502233684062958
    2. ':' → logprob: -3.0000224113464355
    3. ' if' → logprob: -3.2500224113464355
    4. 'if' → logprob: -3.8750224113464355
    5. '```' → logprob: -5.5000224113464355
    6. ' :' → logprob: -6.8750224113464355
    7. ':
' → logprob: -6.8750224113464355
    8. '       ' → logprob: -7.2500224113464355
    9. '    
' → logprob: -7.8750224113464355
    10. '    ' → logprob: -8.375021934509277

Token 846: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011778175830841064
    2. '   ' → logprob: -4.761778354644775
    3. ' if' → logprob: -5.761778354644775
    4. '```' → logprob: -11.636777877807617
    5. '	if' → logprob: -12.511777877807617
    6. 'If' → logprob: -14.761777877807617
    7. '  ' → logprob: -16.011777877807617
    8. ' ' → logprob: -17.136777877807617
    9. '       ' → logprob: -17.511777877807617
    10. '    ' → logprob: -17.636777877807617

Token 847: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.126930832862854
    2. ' path' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.251931190490723
    4. '(path' → logprob: -14.001931190490723
    5. '	path' → logprob: -16.251930236816406
    6. ' ' → logprob: -17.626930236816406
    7. '[path' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.876930236816406
    9. 'paths' → logprob: -19.251930236816406
    10. ',path' → logprob: -19.251930236816406

Token 848: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -3.173704271830502e-06
    2. 'add' → logprob: -13.00000286102295
    3. 'Add' → logprob: -15.12500286102295
    4. '_' → logprob: -16.000003814697266
    5. '[i' → logprob: -16.125003814697266
    6. '_Add' → logprob: -16.375003814697266
    7. '```' → logprob: -16.625003814697266
    8. '_ADD' → logprob: -16.750003814697266
    9. '_added' → logprob: -16.875003814697266
    10. '[' → logprob: -17.000003814697266

Token 849: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8074162653647363e-05
    2. '[' → logprob: -11.000018119812012
    3. ' [' → logprob: -13.875018119812012
    4. '```' → logprob: -16.375017166137695
    5. '[
' → logprob: -16.500017166137695
    6. '[I' → logprob: -16.500017166137695
    7. '\[' → logprob: -17.875017166137695
    8. 'i' → logprob: -18.250017166137695
    9. '   ' → logprob: -18.250017166137695
    10. '[idx' → logprob: -18.750017166137695

Token 850: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4751516580581665
    2. ' ==' → logprob: -0.9751516580581665
    3. ':' → logprob: -7.350151538848877
    4. ':
' → logprob: -8.225152015686035
    5. ']==' → logprob: -9.350152015686035
    6. ')==' → logprob: -10.350152015686035
    7. '):
' → logprob: -11.350152015686035
    8. '==
' → logprob: -11.725152015686035
    9. '=' → logprob: -11.975152015686035
    10. '()==' → logprob: -12.850152015686035

Token 851: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00954593438655138
    2. ' ==' → logprob: -4.759545803070068
    3. ':' → logprob: -7.134545803070068
    4. '=' → logprob: -9.009546279907227
    5. '==
' → logprob: -12.759546279907227
    6. ']==' → logprob: -13.009546279907227
    7. ':
' → logprob: -13.634546279907227
    8. ')==' → logprob: -13.759546279907227
    9. '===' → logprob: -14.009546279907227
    10. '()==' → logprob: -14.009546279907227

Token 852: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -21.625
    5. '0' → logprob: -21.75
    6. '۱' → logprob: -24.5
    7. '>' → logprob: -24.75
    8. '' → logprob: -25.25
    9. '１' → logprob: -25.375
    10. '  ' → logprob: -25.5

Token 853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -20.25
    4. '0' → logprob: -21.125
    5. '   ' → logprob: -22.0
    6. '' → logprob: -23.25
    7. '۱' → logprob: -24.375
    8. '  ' → logprob: -24.875
    9. '>' → logprob: -24.875
    10. '１' → logprob: -25.0

Token 854: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23205646872520447
    2. ':' → logprob: -1.6070564985275269
    3. '   ' → logprob: -5.482056617736816
    4. ',' → logprob: -7.107056617736816
    5. ' :
' → logprob: -7.107056617736816
    6. ' print' → logprob: -7.982056617736816
    7. '       ' → logprob: -9.107056617736816
    8. ' :' → logprob: -9.357056617736816
    9. '():
' → logprob: -9.357056617736816
    10. '):
' → logprob: -9.607056617736816

Token 855: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5717660784721375
    2. ' print' → logprob: -0.9467660784721375
    3. '   ' → logprob: -3.0717661380767822
    4. '       ' → logprob: -7.446765899658203
    5. '```' → logprob: -8.071765899658203
    6. '	print' → logprob: -9.446765899658203
    7. ',' → logprob: -9.946765899658203
    8. '.print' → logprob: -11.071765899658203
    9. '<|end|>' → logprob: -11.196765899658203
    10. '``' → logprob: -11.446765899658203

Token 856: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '   ' → logprob: -18.0
    4. '1' → logprob: -19.875
    5. '```' → logprob: -21.125
    6. '	print' → logprob: -23.5
    7. '0' → logprob: -24.0
    8. 'printf' → logprob: -24.375
    9. 'i' → logprob: -24.75
    10. '       ' → logprob: -25.0

Token 857: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.75
    3. ' print' → logprob: -16.0
    4. 'u' → logprob: -19.75
    5. 'a' → logprob: -20.75
    6. '1' → logprob: -21.125
    7. '#' → logprob: -21.625
    8. 'printf' → logprob: -21.875
    9. '    
' → logprob: -22.125
    10. 'start' → logprob: -22.375

Token 858: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3772345781326294
    2. '(i' → logprob: -2.25223445892334
    3. 'ach' → logprob: -2.50223445892334
    4. 'ect' → logprob: -3.62723445892334
    5. 'int' → logprob: -3.75223445892334
    6. 'ch' → logprob: -4.12723445892334
    7. '   ' → logprob: -4.25223445892334
    8. '       ' → logprob: -4.50223445892334
    9. 'ort' → logprob: -5.00223445892334
    10. 'atch' → logprob: -5.62723445892334

Token 859: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02570386603474617
    2. '1' → logprob: -4.1507039070129395
    3. '(i' → logprob: -4.9007039070129395
    4. ' i' → logprob: -6.7757039070129395
    5. '(' → logprob: -7.7757039070129395
    6. 'print' → logprob: -8.275703430175781
    7. 'n' → logprob: -8.775703430175781
    8. 'path' → logprob: -9.775703430175781
    9. '(n' → logprob: -9.775703430175781
    10. '{i' → logprob: -10.025703430175781

Token 860: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10119065642356873
    2. 'print' → logprob: -2.7261905670166016
    3. '(i' → logprob: -3.6011905670166016
    4. ' i' → logprob: -6.351190567016602
    5. '(n' → logprob: -7.226190567016602
    6. '1' → logprob: -7.976190567016602
    7. '{i' → logprob: -8.226190567016602
    8. 'n' → logprob: -8.976190567016602
    9. '(' → logprob: -8.976190567016602
    10. ' print' → logprob: -9.976190567016602

Token 861: 'ête' (ID: 16808)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.050350356847047806
    2. 'i' → logprob: -3.8003504276275635
    3. '1' → logprob: -5.050350189208984
    4. ' i' → logprob: -5.300350189208984
    5. ' (' → logprob: -5.425350189208984
    6. 'dd' → logprob: -5.550350189208984
    7. '(' → logprob: -5.675350189208984
    8. ' ' → logprob: -6.550350189208984
    9. '   ' → logprob: -7.050350189208984
    10. ' +' → logprob: -8.050350189208984

Token 862: ' part' (ID: 997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07630439847707748
    2. '(n' → logprob: -3.0763044357299805
    3. '(' → logprob: -4.0763044357299805
    4. 'i' → logprob: -4.9513044357299805
    5. '1' → logprob: -6.5763044357299805
    6. ' i' → logprob: -6.5763044357299805
    7. ' (' → logprob: -9.07630443572998
    8. 'n' → logprob: -9.20130443572998
    9. 'path' → logprob: -9.70130443572998
    10. 'print' → logprob: -9.82630443572998

Token 863: 'ant' (ID: 493)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014621175825595856
    2. 'i' → logprob: -4.514621257781982
    3. '       ' → logprob: -6.389621257781982
    4. '(' → logprob: -7.889621257781982
    5. ' (' → logprob: -8.139620780944824
    6. 'de' → logprob: -8.889620780944824
    7. ' de' → logprob: -8.889620780944824
    8. '{i' → logprob: -9.389620780944824
    9. ' i' → logprob: -9.514620780944824
    10. 'icipant' → logprob: -9.514620780944824

Token 864: ' du' (ID: 1462)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03695077821612358
    2. 'i' → logprob: -3.6619508266448975
    3. '(n' → logprob: -5.286950588226318
    4. ' i' → logprob: -5.411950588226318
    5. '(' → logprob: -7.036950588226318
    6. ' (' → logprob: -9.036951065063477
    7. 'from' → logprob: -10.786951065063477
    8. '1' → logprob: -11.536951065063477
    9. '{i' → logprob: -11.786951065063477
    10. '((' → logprob: -12.161951065063477

Token 865: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010477961972355843
    2. '1' → logprob: -4.6354780197143555
    3. 'n' → logprob: -8.010478019714355
    4. ' i' → logprob: -8.385478019714355
    5. '2' → logprob: -9.260478019714355
    6. '(i' → logprob: -10.760478019714355
    7. 'path' → logprob: -11.010478019714355
    8. '(' → logprob: -12.510478019714355
    9. '(n' → logprob: -12.635478019714355
    10. ' ' → logprob: -12.760478019714355

Token 866: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012400864623486996
    2. '1' → logprob: -4.7624006271362305
    3. ' i' → logprob: -5.7624006271362305
    4. 'n' → logprob: -7.6374006271362305
    5. '2' → logprob: -9.38740062713623
    6. ' ' → logprob: -10.76240062713623
    7. '(i' → logprob: -11.51240062713623
    8. 'path' → logprob: -11.51240062713623
    9. ' n' → logprob: -12.13740062713623
    10. '(' → logprob: -12.76240062713623

Token 867: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740970730781555
    2. ' +' → logprob: -0.9740970730781555
    3. '+i' → logprob: -11.84909725189209
    4. '1' → logprob: -11.84909725189209
    5. ' ' → logprob: -13.22409725189209
    6. ' i' → logprob: -13.47409725189209
    7. 'i' → logprob: -13.84909725189209
    8. '   ' → logprob: -14.84909725189209
    9. '2' → logprob: -15.47409725189209
    10. '＋' → logprob: -15.72409725189209

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011076947674155235
    2. '2' → logprob: -4.511076927185059
    3. ' ' → logprob: -10.761076927185059
    4. '3' → logprob: -12.011076927185059
    5. '+' → logprob: -13.636076927185059
    6. 'i' → logprob: -15.011076927185059
    7. ' i' → logprob: -16.198577880859375
    8. '(' → logprob: -17.573577880859375
    9. ' +' → logprob: -17.636077880859375
    10. '   ' → logprob: -17.886077880859375

Token 869: ' vers' (ID: 3640)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5817527174949646
    2. ',' → logprob: -1.2067527770996094
    3. ' ,' → logprob: -2.0817527770996094
    4. 'i' → logprob: -4.581752777099609
    5. ',i' → logprob: -5.581752777099609
    6. '(i' → logprob: -6.456752777099609
    7. '{i' → logprob: -7.206752777099609
    8. ' ' → logprob: -7.831752777099609
    9. '1' → logprob: -8.45675277709961
    10. ' (' → logprob: -9.20675277709961

Token 870: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3910484313964844
    2. 'i' → logprob: -1.2660484313964844
    3. 'path' → logprob: -3.5160484313964844
    4. 'm' → logprob: -5.141048431396484
    5. '2' → logprob: -6.016048431396484
    6. ' n' → logprob: -6.641048431396484
    7. ' i' → logprob: -7.141048431396484
    8. '1' → logprob: -7.516048431396484
    9. 'int' → logprob: -8.391048431396484
    10. 'value' → logprob: -8.641048431396484

Token 871: ' dernier' (ID: 27982)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3558603823184967
    2. 'n' → logprob: -1.2308603525161743
    3. 'm' → logprob: -5.605860233306885
    4. 'path' → logprob: -6.105860233306885
    5. ' i' → logprob: -7.980860233306885
    6. '2' → logprob: -7.980860233306885
    7. ' n' → logprob: -8.105860710144043
    8. '1' → logprob: -8.855860710144043
    9. '   ' → logprob: -9.605860710144043
    10. '(n' → logprob: -10.105860710144043

Token 872: ' sommet' (ID: 130502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16838790476322174
    2. '(n' → logprob: -2.6683878898620605
    3. ' n' → logprob: -3.5433878898620605
    4. '+' → logprob: -3.6683878898620605
    5. 'i' → logprob: -4.2933878898620605
    6. ',' → logprob: -5.1683878898620605
    7. '```' → logprob: -6.1683878898620605
    8. ' +' → logprob: -6.2933878898620605
    9. '2' → logprob: -6.4183878898620605
    10. '(i' → logprob: -6.7933878898620605

Token 873: ' n' (ID: 297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7934615612030029
    2. ' i' → logprob: -1.418461561203003
    3. 'i' → logprob: -2.293461561203003
    4. '(i' → logprob: -2.418461561203003
    5. ' ,' → logprob: -3.168461561203003
    6. '(n' → logprob: -3.293461561203003
    7. ' n' → logprob: -4.168461799621582
    8. ' (' → logprob: -4.793461799621582
    9. 'n' → logprob: -4.918461799621582
    10. ',i' → logprob: -6.418461799621582

Token 874: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6477497220039368
    2. '(i' → logprob: -1.397749662399292
    3. ' ,' → logprob: -2.022749662399292
    4. ' i' → logprob: -3.147749662399292
    5. ' print' → logprob: -3.272749662399292
    6. 'print' → logprob: -5.147749900817871
    7. ',i' → logprob: -5.897749900817871
    8. ' (' → logprob: -6.272749900817871
    9. '(' → logprob: -6.397749900817871
    10. '(n' → logprob: -6.647749900817871

Token 875: ' le' (ID: 505)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05566184222698212
    2. ' path' → logprob: -3.555661916732788
    3. 'i' → logprob: -5.180661678314209
    4. '2' → logprob: -5.305661678314209
    5. 'weight' → logprob: -5.430661678314209
    6. ' i' → logprob: -5.680661678314209
    7. '1' → logprob: -6.180661678314209
    8. '0' → logprob: -6.305661678314209
    9. 'value' → logprob: -6.680661678314209
    10. 'n' → logprob: -7.680661678314209

Token 876: ' poids' (ID: 56058)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.022629862651228905
    2. ' path' → logprob: -4.272629737854004
    3. 'weight' → logprob: -5.897629737854004
    4. '0' → logprob: -6.647629737854004
    5. 'print' → logprob: -6.647629737854004
    6. '1' → logprob: -7.022629737854004
    7. 'space' → logprob: -7.522629737854004
    8. '2' → logprob: -7.647629737854004
    9. ',' → logprob: -7.897629737854004
    10. '3' → logprob: -8.147629737854004

Token 877: ' associé' (ID: 152099)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05841151252388954
    2. 'print' → logprob: -2.9334115982055664
    3. '(path' → logprob: -6.183411598205566
    4. ' path' → logprob: -6.808411598205566
    5. ',' → logprob: -8.308411598205566
    6. ' print' → logprob: -11.058411598205566
    7. '+' → logprob: -11.183411598205566
    8. ',path' → logprob: -11.183411598205566
    9. '   ' → logprob: -11.308411598205566
    10. '1' → logprob: -11.308411598205566

Token 878: '
' (ID: 198)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0035677615087479353
    2. 'print' → logprob: -6.378567695617676
    3. ' (' → logprob: -7.253567695617676
    4. ' i' → logprob: -7.378567695617676
    5. '(' → logprob: -8.753567695617676
    6. '{i' → logprob: -9.003567695617676
    7. 'i' → logprob: -9.253567695617676
    8. ' print' → logprob: -9.378567695617676
    9. '(print' → logprob: -10.253567695617676
    10. '```' → logprob: -11.253567695617676

Token 879: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7873768210411072
    2. 'print' → logprob: -1.287376880645752
    3. '(i' → logprob: -1.412376880645752
    4. ' (' → logprob: -4.662376880645752
    5. ' i' → logprob: -5.162376880645752
    6. '```' → logprob: -5.537376880645752
    7. '       ' → logprob: -5.787376880645752
    8. '(print' → logprob: -6.912376880645752
    9. '(' → logprob: -7.037376880645752
    10. '{i' → logprob: -7.662376880645752

Token 880: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. ' print' → logprob: -11.25001335144043
    3. '```' → logprob: -20.62501335144043
    4. '   ' → logprob: -20.87501335144043
    5. '	print' → logprob: -21.00001335144043
    6. '(print' → logprob: -21.25001335144043
    7. '1' → logprob: -22.50001335144043
    8. 'i' → logprob: -22.50001335144043
    9. '       ' → logprob: -22.62501335144043
    10. '.print' → logprob: -23.25001335144043

Token 881: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02362394705414772
    2. '(i' → logprob: -3.7736239433288574
    3. ' i' → logprob: -7.898623943328857
    4. '(' → logprob: -12.273624420166016
    5. '1' → logprob: -13.898624420166016
    6. '   ' → logprob: -14.023624420166016
    7. '{i' → logprob: -15.273624420166016
    8. ' (' → logprob: -15.648624420166016
    9. '(
' → logprob: -15.898624420166016
    10. '	i' → logprob: -16.148624420166016

Token 882: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2254282385110855
    2. '+' → logprob: -1.6004282236099243
    3. ' ' → logprob: -12.100428581237793
    4. '[' → logprob: -12.975428581237793
    5. ')' → logprob: -13.100428581237793
    6. '1' → logprob: -13.350428581237793
    7. ',' → logprob: -14.350428581237793
    8. ' plus' → logprob: -14.725428581237793
    9. '   ' → logprob: -14.850428581237793
    10. 'i' → logprob: -14.975428581237793

Token 883: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.250045776367188
    3. '2' → logprob: -11.500045776367188
    4. '+' → logprob: -16.562545776367188
    5. '`' → logprob: -17.125045776367188
    6. '```' → logprob: -17.187545776367188
    7. '   ' → logprob: -17.312545776367188
    8. '"' → logprob: -17.375045776367188
    9. 'n' → logprob: -17.937545776367188
    10. ')' → logprob: -18.187545776367188

Token 884: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -12.00001049041748
    3. '2' → logprob: -12.50001049041748
    4. '+' → logprob: -15.37501049041748
    5. '```' → logprob: -16.312511444091797
    6. 'n' → logprob: -16.937511444091797
    7. ',' → logprob: -17.062511444091797
    8. '
' → logprob: -17.125011444091797
    9. '   ' → logprob: -17.375011444091797
    10. '12' → logprob: -17.437511444091797

Token 885: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008005765848793089
    2. ',n' → logprob: -7.625800609588623
    3. ' ,' → logprob: -8.250800132751465
    4. '+' → logprob: -10.125800132751465
    5. '+,' → logprob: -11.625800132751465
    6. '+n' → logprob: -13.875800132751465
    7. ' +' → logprob: -14.125800132751465
    8. ',
' → logprob: -15.125800132751465
    9. '`,' → logprob: -16.12580108642578
    10. '",' → logprob: -16.12580108642578

Token 886: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '	n' → logprob: -18.125158309936523
    4. '   ' → logprob: -18.375158309936523
    5. ')n' → logprob: -20.625158309936523
    6. '<|end|>' → logprob: -20.625158309936523
    7. ' ' → logprob: -21.000158309936523
    8. ',n' → logprob: -21.000158309936523
    9. '(n' → logprob: -21.250158309936523
    10. '       ' → logprob: -21.250158309936523

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.269565634895116e-05
    2. ' ,' → logprob: -9.375092506408691
    3. ',path' → logprob: -12.000092506408691
    4. '+' → logprob: -13.625092506408691
    5. '+,' → logprob: -15.750092506408691
    6. 'path' → logprob: -16.000093460083008
    7. '       ' → logprob: -16.750093460083008
    8. '   ' → logprob: -17.125093460083008
    9. ' +' → logprob: -17.500093460083008
    10. ')' → logprob: -18.000093460083008

Token 888: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.001170225441455841
    2. ' path' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.126171112060547
    4. '(path' → logprob: -19.126171112060547
    5. '	path' → logprob: -19.251171112060547
    6. '       ' → logprob: -19.376171112060547
    7. '"path' → logprob: -19.876171112060547
    8. '`' → logprob: -20.376171112060547
    9. ' ' → logprob: -20.501171112060547
    10. '[path' → logprob: -21.001171112060547

Token 889: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.625
    3. 'add' → logprob: -17.0
    4. '_added' → logprob: -18.875
    5. '_Add' → logprob: -19.5
    6. 'Add' → logprob: -19.625
    7. '_ADD' → logprob: -20.125
    8. '_ad' → logprob: -20.5
    9. '_' → logprob: -20.75
    10. '_put' → logprob: -21.25

Token 890: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.723352049040841e-06
    2. '[i' → logprob: -12.500004768371582
    3. 'Value' → logprob: -15.375004768371582
    4. 'value' → logprob: -16.250003814697266
    5. '_Value' → logprob: -16.250003814697266
    6. '```' → logprob: -16.250003814697266
    7. '_VALUE' → logprob: -16.500003814697266
    8. '_val' → logprob: -17.000003814697266
    9. '_add' → logprob: -17.500003814697266
    10. ']_' → logprob: -17.500003814697266

Token 891: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.125006675720215
    3. ')' → logprob: -14.750006675720215
    4. '[I' → logprob: -15.375006675720215
    5. ')[' → logprob: -15.500006675720215
    6. ' [' → logprob: -15.875006675720215
    7. '[n' → logprob: -16.7500057220459
    8. 'i' → logprob: -17.8750057220459
    9. '```' → logprob: -18.1250057220459
    10. '[u' → logprob: -18.3750057220459

Token 892: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010497196344658732
    2. '[i' → logprob: -7.001049518585205
    3. ' )' → logprob: -9.001049995422363
    4. ')
' → logprob: -12.501049995422363
    5. '[' → logprob: -13.126049995422363
    6. '+' → logprob: -13.251049995422363
    7. '))' → logprob: -13.501049995422363
    8. ')`' → logprob: -13.501049995422363
    9. '])' → logprob: -13.626049995422363
    10. '})' → logprob: -14.876049995422363


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 890
Tokens correctement prédits (1ère position, stricte): 208
Tokens correctement prédits (1ère position, avec adaptation): 215
Tokens correctement prédits (top 10): 510
Précision stricte (1ère position): 23.37%
Précision adaptée (1ère position): 24.16%
Précision (top 10): 57.30%
================================================================================
