================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, je vais tenter de compter les différences
S=input()
c=0
for j in range(0, int(len(S)/2)):
    # On compare les deux caractères... si ça ne va pas, ajoute 1
    if S[j] != S[len(S)-1-j]:
        c=c+1
# et voilà, on affiche combien ça fait (pas sûr s'il fallait retourner ça ou l'imprimer)
print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.10114563256502151
    2. ' ' → logprob: -3.2261457443237305
    3. ' je' → logprob: -3.3511457443237305
    4. 'soir' → logprob: -5.2261457443237305
    5. '```' → logprob: -5.8511457443237305
    6. ' app' → logprob: -5.8511457443237305
    7. '   ' → logprob: -5.9761457443237305
    8. ' j' → logprob: -6.2261457443237305
    9. '  ' → logprob: -6.4761457443237305
    10. 'jours' → logprob: -6.8511457443237305

Token 4: ' vais' (ID: 42975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05833010375499725
    2. 's' → logprob: -3.5583300590515137
    3. ' suis' → logprob: -4.433330059051514
    4. ' vais' → logprob: -4.558330059051514
    5. ' continue' → logprob: -6.433330059051514
    6. ' ```' → logprob: -6.808330059051514
    7. '_' → logprob: -7.808330059051514
    8. ' veux' → logprob: -7.808330059051514
    9. '  ' → logprob: -8.308330535888672
    10. ' ' → logprob: -8.683330535888672

Token 5: ' tenter' (ID: 109833)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.8283001184463501
    2. ' ' → logprob: -1.32830011844635
    3. '_' → logprob: -2.5782999992370605
    4. ' écrire' → logprob: -2.9532999992370605
    5. ' faire' → logprob: -3.3282999992370605
    6. 'contin' → logprob: -3.3282999992370605
    7. ' coder' → logprob: -4.0782999992370605
    8. ' continue' → logprob: -4.3282999992370605
    9. ' essayer' → logprob: -4.9532999992370605
    10. ' code' → logprob: -4.9532999992370605

Token 6: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3797409534454346
    2. '.' → logprob: -1.6297409534454346
    3. ':' → logprob: -1.6297409534454346
    4. '!' → logprob: -2.3797409534454346
    5. ' de' → logprob: -2.5047409534454346
    6. '_' → logprob: -2.8797409534454346
    7. ',' → logprob: -3.1297409534454346
    8. '#' → logprob: -3.2547409534454346
    9. ' d' → logprob: -4.3797407150268555
    10. 'de' → logprob: -5.5047407150268555

Token 7: ' compter' (ID: 81694)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.30672532320022583
    2. 'com' → logprob: -3.056725263595581
    3. 'import' → logprob: -3.431725263595581
    4. 'le' → logprob: -3.431725263595581
    5. ' faire' → logprob: -3.681725263595581
    6. '#' → logprob: -3.806725263595581
    7. 'coder' → logprob: -4.55672550201416
    8. ' comprendre' → logprob: -4.68172550201416
    9. 'print' → logprob: -4.80672550201416
    10. 'vous' → logprob: -4.93172550201416

Token 8: ' les' (ID: 1341)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6536331176757812
    2. ' ' → logprob: -1.4036331176757812
    3. '_' → logprob: -2.4036331176757812
    4. ':' → logprob: -2.9036331176757812
    5. ',' → logprob: -3.5286331176757812
    6. '```' → logprob: -4.528633117675781
    7. 'le' → logprob: -4.778633117675781
    8. '#' → logprob: -5.528633117675781
    9. ' :' → logprob: -5.528633117675781
    10. '!' → logprob: -5.528633117675781

Token 9: ' différences' (ID: 175718)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.5558376908302307
    2. 'm' → logprob: -2.055837631225586
    3. ' ' → logprob: -2.555837631225586
    4. ' espaces' → logprob: -2.930837631225586
    5. '\' → logprob: -3.805837631225586
    6. '   ' → logprob: -3.930837631225586
    7. ' caractères' → logprob: -4.055837631225586
    8. '\n' → logprob: -4.180837631225586
    9. '\t' → logprob: -4.680837631225586
    10. '  ' → logprob: -4.680837631225586

Token 10: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7409013509750366
    2. ' entre' → logprob: -1.6159013509750366
    3. ' ' → logprob: -2.365901470184326
    4. ':' → logprob: -2.740901470184326
    5. '.' → logprob: -2.990901470184326
    6. '_' → logprob: -3.240901470184326
    7. '\n' → logprob: -3.740901470184326
    8. ',' → logprob: -4.365901470184326
    9. ' between' → logprob: -4.740901470184326
    10. '#' → logprob: -5.240901470184326

Token 11: 'S' (ID: 50)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45813342928886414
    2. ':' → logprob: -1.8331334590911865
    3. '.' → logprob: -2.4581334590911865
    4. '_' → logprob: -2.9581334590911865
    5. ' :' → logprob: -3.7081334590911865
    6. ',' → logprob: -4.333133220672607
    7. ' entre' → logprob: -4.583133220672607
    8. '\' → logprob: -5.458133220672607
    9. 's' → logprob: -5.458133220672607
    10. ''' → logprob: -6.083133220672607

Token 12: '=input' (ID: 87911)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4962618350982666
    2. 'u' → logprob: -1.8712618350982666
    3. 'i' → logprob: -2.2462618350982666
    4. 'a' → logprob: -2.7462618350982666
    5. 't' → logprob: -3.8712618350982666
    6. 'o' → logprob: -3.9962618350982666
    7. 'et' → logprob: -5.1212615966796875
    8. 'é' → logprob: -5.1212615966796875
    9. 'ur' → logprob: -5.6212615966796875
    10. '#' → logprob: -5.7462615966796875

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007459558080881834
    2. '()' → logprob: -5.13245964050293
    3. '('' → logprob: -7.00745964050293
    4. '("' → logprob: -7.88245964050293
    5. '("("' → logprob: -8.75745964050293
    6. '(
' → logprob: -10.63245964050293
    7. '("")' → logprob: -10.63245964050293
    8. '(

' → logprob: -11.38245964050293
    9. '().' → logprob: -11.63245964050293
    10. ' (' → logprob: -12.25745964050293

Token 14: 'c' (ID: 66)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1808728128671646
    2. '_' → logprob: -2.430872917175293
    3. '=' → logprob: -3.930872917175293
    4. '[' → logprob: -4.055872917175293
    5. '_diff' → logprob: -4.930872917175293
    6. ' =' → logprob: -5.180872917175293
    7. 'diff' → logprob: -5.180872917175293
    8. 's' → logprob: -5.805872917175293
    9. '(' → logprob: -5.930872917175293
    10. '.count' → logprob: -5.930872917175293

Token 15: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012141210027039051
    2. ' =' → logprob: -5.012141227722168
    3. 'ount' → logprob: -5.887141227722168
    4. 'a' → logprob: -7.262141227722168
    5. '=[]' → logprob: -8.637141227722168
    6. '=''' → logprob: -8.762141227722168
    7. 'f' → logprob: -9.012141227722168
    8. 't' → logprob: -9.012141227722168
    9. 'nt' → logprob: -9.137141227722168
    10. '=int' → logprob: -9.137141227722168

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016957100888248533
    2. ' ' → logprob: -9.37516975402832
    3. 'len' → logprob: -10.00016975402832
    4. '1' → logprob: -10.50016975402832
    5. 'abs' → logprob: -12.62516975402832
    6. 'int' → logprob: -13.12516975402832
    7. 'S' → logprob: -13.37516975402832
    8. 'sum' → logprob: -13.50016975402832
    9. 'c' → logprob: -14.12516975402832
    10. '[' → logprob: -14.37516975402832

Token 17: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08800546079874039
    2. '
' → logprob: -3.213005542755127
    3. ' for' → logprob: -3.463005542755127
    4. 'f' → logprob: -5.338005542755127
    5. ' 
' → logprob: -6.213005542755127
    6. ' ' → logprob: -6.213005542755127
    7. '  
' → logprob: -6.838005542755127
    8. '' → logprob: -7.463005542755127
    9. 'r' → logprob: -7.838005542755127
    10. '<|end|>' → logprob: -7.963005542755127

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18244682252407074
    2. ' for' → logprob: -1.807446837425232
    3. ' ' → logprob: -7.3074469566345215
    4. 'f' → logprob: -7.5574469566345215
    5. 'n' → logprob: -7.6824469566345215
    6. 'r' → logprob: -7.9324469566345215
    7. 'i' → logprob: -9.307446479797363
    8. '=' → logprob: -9.432446479797363
    9. '_' → logprob: -9.682446479797363
    10. '
' → logprob: -9.807446479797363

Token 19: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13788703083992004
    2. ' i' → logprob: -2.2628870010375977
    3. ' _' → logprob: -4.762887001037598
    4. ' c' → logprob: -5.012887001037598
    5. ' s' → logprob: -5.762887001037598
    6. 'i' → logprob: -6.262887001037598
    7. '  ' → logprob: -6.512887001037598
    8. '_' → logprob: -6.887887001037598
    9. ' x' → logprob: -7.762887001037598
    10. 'c' → logprob: -8.262887001037598

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031242119148373604
    2. 'in' → logprob: -3.5312421321868896
    3. ' ' → logprob: -6.6562418937683105
    4. 'n' → logprob: -9.156242370605469
    5. '  ' → logprob: -11.031242370605469
    6. ' n' → logprob: -11.281242370605469
    7. 's' → logprob: -11.406242370605469
    8. ',' → logprob: -11.406242370605469
    9. ' i' → logprob: -11.781242370605469
    10. '_' → logprob: -12.468742370605469

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.025940271094441414
    2. 'range' → logprob: -4.150940418243408
    3. ' S' → logprob: -4.650940418243408
    4. 'S' → logprob: -8.15093994140625
    5. ' ' → logprob: -11.52593994140625
    6. ' xrange' → logprob: -13.15093994140625
    7. '(range' → logprob: -13.27593994140625
    8. '  ' → logprob: -14.27593994140625
    9. ' input' → logprob: -15.52593994140625
    10. '[' → logprob: -15.52593994140625

Token 22: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.018167035654187202
    2. '(' → logprob: -4.018167018890381
    3. '(l' → logprob: -12.268167495727539
    4. ' (' → logprob: -12.393167495727539
    5. ' len' → logprob: -12.518167495727539
    6. '(n' → logprob: -14.018167495727539
    7. 'len' → logprob: -14.268167495727539
    8. '(length' → logprob: -14.268167495727539
    9. '(s' → logprob: -14.643167495727539
    10. '(le' → logprob: -15.018167495727539

Token 23: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.05732741951942444
    2. '1' → logprob: -3.1823275089263916
    3. ' len' → logprob: -4.3073272705078125
    4. ' ' → logprob: -8.057327270507812
    5. '2' → logprob: -8.807327270507812
    6. '0' → logprob: -9.307327270507812
    7. '(len' → logprob: -10.182327270507812
    8. '3' → logprob: -10.432327270507812
    9. '4' → logprob: -10.557327270507812
    10. 'int' → logprob: -11.182327270507812

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9792764782905579
    2. ' ' → logprob: -1.854276418685913
    3. ' )' → logprob: -1.979276418685913
    4. ',len' → logprob: -2.479276418685913
    5. ' len' → logprob: -2.604276418685913
    6. '1' → logprob: -2.979276418685913
    7. ')' → logprob: -2.979276418685913
    8. ' ,' → logprob: -3.104276418685913
    9. 'len' → logprob: -4.354276657104492
    10. '(len' → logprob: -4.604276657104492

Token 25: ' int' (ID: 677)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02064688131213188
    2. ' len' → logprob: -3.895646810531616
    3. '1' → logprob: -9.645647048950195
    4. '10' → logprob: -11.645647048950195
    5. '3' → logprob: -12.145647048950195
    6. '100' → logprob: -12.270647048950195
    7. '5' → logprob: -12.395647048950195
    8. '4' → logprob: -12.770647048950195
    9. ' ' → logprob: -13.020647048950195
    10. '(len' → logprob: -13.270647048950195

Token 26: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.20183633267879486
    2. '(' → logprob: -1.951836347579956
    3. '(S' → logprob: -3.201836347579956
    4. '(s' → logprob: -10.576836585998535
    5. '(
' → logprob: -11.326836585998535
    6. 'len' → logprob: -12.201836585998535
    7. ' ' → logprob: -12.326836585998535
    8. '('' → logprob: -12.326836585998535
    9. ' len' → logprob: -12.826836585998535
    10. '(`' → logprob: -13.076836585998535

Token 27: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.061982475221157074
    2. '(' → logprob: -2.8119823932647705
    3. '(s' → logprob: -11.311982154846191
    4. 'S' → logprob: -13.436982154846191
    5. '(c' → logprob: -14.811982154846191
    6. '(`' → logprob: -15.311982154846191
    7. ')' → logprob: -15.436982154846191
    8. '(
' → logprob: -16.061983108520508
    9. '(j' → logprob: -16.561983108520508
    10. ' (' → logprob: -17.186983108520508

Token 28: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9927164316177368
    2. ')-' → logprob: -1.6177164316177368
    3. '(S' → logprob: -1.7427164316177368
    4. '())' → logprob: -2.7427163124084473
    5. '))' → logprob: -3.1177163124084473
    6. '(' → logprob: -3.1177163124084473
    7. '/' → logprob: -3.4927163124084473
    8. '()))' → logprob: -3.7427163124084473
    9. '()' → logprob: -4.492716312408447
    10. '()/' → logprob: -4.617716312408447

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004708276130259037
    2. '1' → logprob: -5.379708290100098
    3. ' ' → logprob: -9.379708290100098
    4. ')' → logprob: -13.379708290100098
    5. '3' → logprob: -13.754708290100098
    6. '10' → logprob: -15.254708290100098
    7. '4' → logprob: -15.379708290100098
    8. '5' → logprob: -16.37970733642578
    9. '20' → logprob: -16.62970733642578
    10. 'S' → logprob: -16.87970733642578

Token 30: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.37081652879714966
    2. ')' → logprob: -1.3708164691925049
    3. '))' → logprob: -2.995816469192505
    4. '):' → logprob: -5.245816707611084
    5. '),' → logprob: -8.495816230773926
    6. ')):
' → logprob: -8.870816230773926
    7. ')+' → logprob: -8.995816230773926
    8. ')))' → logprob: -9.870816230773926
    9. ' ' → logprob: -10.620816230773926
    10. ' ))' → logprob: -10.620816230773926

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017004406079649925
    2. '+' → logprob: -4.892004489898682
    3. '   ' → logprob: -5.642004489898682
    4. '<|end|>' → logprob: -5.892004489898682
    5. ' if' → logprob: -7.517004489898682
    6. '  ' → logprob: -7.642004489898682
    7. '    ' → logprob: -7.767004489898682
    8. ':' → logprob: -7.892004489898682
    9. ' 
' → logprob: -8.517004013061523
    10. '=' → logprob: -9.267004013061523

Token 32: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7432922720909119
    2. ' if' → logprob: -0.9932922720909119
    3. 'if' → logprob: -2.2432923316955566
    4. '   ' → logprob: -3.7432923316955566
    5. '1' → logprob: -4.618292331695557
    6. '    ' → logprob: -4.993292331695557
    7. 'c' → logprob: -6.368292331695557
    8. ' c' → logprob: -6.618292331695557
    9. '  ' → logprob: -6.868292331695557
    10. '2' → logprob: -7.368292331695557

Token 33: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3056242763996124
    2. ' ' → logprob: -2.80562424659729
    3. ' c' → logprob: -2.93062424659729
    4. 'if' → logprob: -2.93062424659729
    5. '   ' → logprob: -3.43062424659729
    6. '    ' → logprob: -3.80562424659729
    7. ' abs' → logprob: -4.680624485015869
    8. ' for' → logprob: -4.930624485015869
    9. 'abs' → logprob: -4.930624485015869
    10. 'c' → logprob: -5.055624485015869

Token 34: ' compare' (ID: 12221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30638429522514343
    2. '    ' → logprob: -2.681384325027466
    3. ' for' → logprob: -2.806384325027466
    4. '   ' → logprob: -3.306384325027466
    5. 'for' → logprob: -3.431384325027466
    6. 'if' → logprob: -4.556384086608887
    7. ' if' → logprob: -4.806384086608887
    8. '  ' → logprob: -5.181384086608887
    9. '+' → logprob: -5.556384086608887
    10. 's' → logprob: -5.681384086608887

Token 35: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6055230498313904
    2. 'S' → logprob: -1.7305231094360352
    3. '<|end|>' → logprob: -1.8555231094360352
    4. '   ' → logprob: -2.605523109436035
    5. '    ' → logprob: -4.230523109436035
    6. ' S' → logprob: -4.605523109436035
    7. '  ' → logprob: -4.730523109436035
    8. '(S' → logprob: -5.355523109436035
    9. '<|end|>' → logprob: -5.980523109436035
    10. 's' → logprob: -6.230523109436035

Token 36: ' deux' (ID: 10301)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8164089322090149
    2. ' S' → logprob: -0.8164089322090149
    3. ' caractères' → logprob: -3.44140887260437
    4. 'car' → logprob: -3.56640887260437
    5. ' j' → logprob: -3.81640887260437
    6. 'j' → logprob: -4.816409111022949
    7. ' car' → logprob: -5.066409111022949
    8. ' ' → logprob: -5.316409111022949
    9. ' caract' → logprob: -5.691409111022949
    10. ' caracteres' → logprob: -5.816409111022949

Token 37: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6261999607086182
    2. ' ' → logprob: -1.6261999607086182
    3. ' caracteres' → logprob: -2.751199960708618
    4. 's' → logprob: -3.126199960708618
    5. ' car' → logprob: -3.501199960708618
    6. ' caract' → logprob: -3.626199960708618
    7. '-' → logprob: -4.126199722290039
    8. ' j' → logprob: -4.251199722290039
    9. ' characters' → logprob: -4.751199722290039
    10. ' ' → logprob: -5.251199722290039

Token 38: '...' (ID: 1008)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12001822143793106
    2. 's' → logprob: -2.870018243789673
    3. '   ' → logprob: -3.620018243789673
    4. '    ' → logprob: -4.870018005371094
    5. '  ' → logprob: -5.245018005371094
    6. '[' → logprob: -5.370018005371094
    7. ' s' → logprob: -5.370018005371094
    8. '<|end|>' → logprob: -5.870018005371094
    9. ' if' → logprob: -7.495018005371094
    10. ',' → logprob: -7.495018005371094

Token 39: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.490532249212265
    2. 's' → logprob: -1.6155322790145874
    3. ' if' → logprob: -2.615532159805298
    4. '   ' → logprob: -3.490532159805298
    5. '  ' → logprob: -3.740532159805298
    6. 'if' → logprob: -4.490532398223877
    7. '[' → logprob: -4.490532398223877
    8. '    ' → logprob: -4.615532398223877
    9. '<|end|>' → logprob: -4.865532398223877
    10. ' s' → logprob: -5.365532398223877

Token 40: ' ça' (ID: 13590)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6331017017364502
    2. 'S' → logprob: -0.7581017017364502
    3. ' ' → logprob: -8.008101463317871
    4. ' not' → logprob: -10.008101463317871
    5. ' abs' → logprob: -10.258101463317871
    6. 's' → logprob: -10.883101463317871
    7. 'abs' → logprob: -11.258101463317871
    8. '  ' → logprob: -11.383101463317871
    9. ' ' → logprob: -11.508101463317871
    10. '(S' → logprob: -12.008101463317871

Token 41: ' ne' (ID: 453)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07364092767238617
    2. 'ne' → logprob: -2.948640823364258
    3. ' ne' → logprob: -5.073640823364258
    4. ' ' → logprob: -5.698640823364258
    5. 's' → logprob: -6.198640823364258
    6. 'd' → logprob: -6.323640823364258
    7. 'n' → logprob: -7.323640823364258
    8. ' diff' → logprob: -7.573640823364258
    9. '<|end|>' → logprob: -7.823640823364258
    10. 'dif' → logprob: -8.073640823364258

Token 42: ' va' (ID: 3423)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.830481767654419
    2. 'cor' → logprob: -0.955481767654419
    3. 's' → logprob: -2.705481767654419
    4. 'co' → logprob: -3.830481767654419
    5. 'mat' → logprob: -4.45548152923584
    6. ' ' → logprob: -4.58048152923584
    7. ' correspond' → logprob: -4.70548152923584
    8. ' match' → logprob: -4.83048152923584
    9. 'se' → logprob: -4.83048152923584
    10. 'diff' → logprob: -5.08048152923584

Token 43: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.014175849966704845
    2. 'pas' → logprob: -4.264175891876221
    3. ' ' → logprob: -12.514175415039062
    4. '_pas' → logprob: -12.764175415039062
    5. ',' → logprob: -13.639175415039062
    6. 'Pas' → logprob: -14.014175415039062
    7. 'p' → logprob: -14.139175415039062
    8. ' plus' → logprob: -14.764175415039062
    9. ')' → logprob: -14.889175415039062
    10. 'a' → logprob: -15.389175415039062

Token 44: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8918148875236511
    2. ':' → logprob: -1.266814947128296
    3. '   ' → logprob: -2.016814947128296
    4. ' ' → logprob: -3.016814947128296
    5. 'if' → logprob: -3.141814947128296
    6. '<|end|>' → logprob: -3.391814947128296
    7. ',' → logprob: -4.016814708709717
    8. ' and' → logprob: -4.766814708709717
    9. ' :' → logprob: -5.266814708709717
    10. '    ' → logprob: -5.391814708709717

Token 45: ' ajoute' (ID: 91611)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22892658412456512
    2. ' c' → logprob: -1.6039265394210815
    3. ' ' → logprob: -6.353926658630371
    4. '	c' → logprob: -7.103926658630371
    5. ' ' → logprob: -7.478926658630371
    6. '    ' → logprob: -9.103926658630371
    7. '  ' → logprob: -9.603926658630371
    8. '  ' → logprob: -10.103926658630371
    9. '   ' → logprob: -10.353926658630371
    10. '<|end|>' → logprob: -10.478926658630371

Token 46: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2241500616073608
    2. ' ' → logprob: -1.2241500616073608
    3. ' c' → logprob: -1.7241500616073608
    4. ' +=' → logprob: -1.7241500616073608
    5. '   ' → logprob: -3.7241501808166504
    6. ' +' → logprob: -5.09915018081665
    7. 'n' → logprob: -5.09915018081665
    8. 's' → logprob: -5.72415018081665
    9. '1' → logprob: -5.84915018081665
    10. '+' → logprob: -6.47415018081665

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010360929183661938
    2. ' ' → logprob: -5.3853607177734375
    3. 'c' → logprob: -5.7603607177734375
    4. '+' → logprob: -6.3853607177734375
    5. '+=' → logprob: -7.5103607177734375
    6. 'un' → logprob: -9.135360717773438
    7. ' +=' → logprob: -10.260360717773438
    8. 'au' → logprob: -10.635360717773438
    9. ' +' → logprob: -10.635360717773438
    10. '   ' → logprob: -10.635360717773438

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19482256472110748
    2. ' ' → logprob: -2.5698225498199463
    3. '<|end|>' → logprob: -3.3198225498199463
    4. ' if' → logprob: -3.4448225498199463
    5. '  ' → logprob: -4.694822788238525
    6. '    ' → logprob: -5.319822788238525
    7. 'if' → logprob: -5.569822788238525
    8. ' c' → logprob: -5.569822788238525
    9. '       ' → logprob: -6.069822788238525
    10. 'c' → logprob: -6.319822788238525

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38687121868133545
    2. ' ' → logprob: -1.8868712186813354
    3. '<|end|>' → logprob: -2.136871337890625
    4. '  ' → logprob: -4.386871337890625
    5. ' if' → logprob: -4.511871337890625
    6. ':' → logprob: -4.761871337890625
    7. 's' → logprob: -5.886871337890625
    8. 'if' → logprob: -6.011871337890625
    9. ' 
' → logprob: -6.261871337890625
    10. '    ' → logprob: -6.386871337890625

Token 50: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9047725200653076
    2. ' if' → logprob: -0.9047725200653076
    3. '   ' → logprob: -2.1547725200653076
    4. 'if' (adapté à ' if') → logprob: -2.7797725200653076
    5. '<|end|>' → logprob: -4.904772758483887
    6. '  ' → logprob: -6.029772758483887
    7. '    ' → logprob: -7.154772758483887
    8. '[' → logprob: -8.279772758483887
    9. 's' → logprob: -8.279772758483887
    10. 'c' → logprob: -8.404772758483887

Token 51: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.004202574957162142
    2. 'S' → logprob: -5.504202365875244
    3. ' abs' → logprob: -9.629202842712402
    4. ' ' → logprob: -10.129202842712402
    5. 'abs' → logprob: -11.004202842712402
    6. '(S' → logprob: -14.004202842712402
    7. ' ' → logprob: -14.379202842712402
    8. ' ord' → logprob: -15.254202842712402
    9. 's' → logprob: -16.379201889038086
    10. '	S' → logprob: -16.629201889038086

Token 52: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005239564459770918
    2. '[' → logprob: -5.255239486694336
    3. '[len' → logprob: -13.005239486694336
    4. '[c' → logprob: -13.630239486694336
    5. '[i' → logprob: -14.255239486694336
    6. '[S' → logprob: -14.255239486694336
    7. '[
' → logprob: -15.255239486694336
    8. '```' → logprob: -15.380239486694336
    9. '[int' → logprob: -15.880239486694336
    10. '[...]' → logprob: -16.505239486694336

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5769214630126953
    2. ']!=' → logprob: -0.8269214630126953
    3. '!=' → logprob: -6.951921463012695
    4. '']' → logprob: -11.701921463012695
    5. ' ]' → logprob: -11.951921463012695
    6. ']==' → logprob: -13.201921463012695
    7. ')!=' → logprob: -13.201921463012695
    8. '[' → logprob: -13.326921463012695
    9. '"]' → logprob: -13.326921463012695
    10. ']!' → logprob: -14.576921463012695

Token 54: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00027682865038514137
    2. ' !=' → logprob: -8.500276565551758
    3. ']!=' → logprob: -9.875276565551758
    4. '!==' → logprob: -11.250276565551758
    5. '()!=' → logprob: -12.625276565551758
    6. '```' → logprob: -13.750276565551758
    7. ')!=' → logprob: -13.875276565551758
    8. '=' → logprob: -14.375276565551758
    9. '<>' → logprob: -14.375276565551758
    10. ' ' → logprob: -14.375276565551758

Token 55: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10023050010204315
    2. ' S' → logprob: -2.3502304553985596
    3. ' ' → logprob: -10.72523021697998
    4. ' ' → logprob: -14.35023021697998
    5. '	S' → logprob: -15.10023021697998
    6. '  ' → logprob: -15.22523021697998
    7. '   ' → logprob: -15.72523021697998
    8. 's' → logprob: -16.100231170654297
    9. '    ' → logprob: -16.100231170654297
    10. '>S' → logprob: -16.350231170654297

Token 56: '[len' (ID: 57582)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.29023680090904236
    2. '[len' → logprob: -1.5402368307113647
    3. '[' → logprob: -3.290236711502075
    4. '[::-' → logprob: -9.290236473083496
    5. '```' → logprob: -9.790236473083496
    6. '[j' → logprob: -10.040236473083496
    7. '[int' → logprob: -11.415236473083496
    8. '[n' → logprob: -11.540236473083496
    9. '[
' → logprob: -11.540236473083496
    10. ']' → logprob: -11.665236473083496

Token 57: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0003956416912842542
    2. '(' → logprob: -7.875395774841309
    3. '-' → logprob: -11.500395774841309
    4. 'S' → logprob: -12.625395774841309
    5. '(s' → logprob: -14.125395774841309
    6. ' -' → logprob: -14.875395774841309
    7. '(
' → logprob: -15.125395774841309
    8. ')' → logprob: -15.375395774841309
    9. ' (' → logprob: -15.875395774841309
    10. ']' → logprob: -16.500394821166992

Token 58: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5905897617340088
    2. ')-' → logprob: -1.0905897617340088
    3. ')' → logprob: -2.465589761734009
    4. ' -' → logprob: -4.09058952331543
    5. '-j' → logprob: -5.09058952331543
    6. ']-' → logprob: -7.21558952331543
    7. '1' → logprob: -7.96558952331543
    8. ')-(' → logprob: -8.21558952331543
    9. '()-' → logprob: -8.59058952331543
    10. ' )' → logprob: -8.59058952331543

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04863812401890755
    2. 'j' → logprob: -3.048638105392456
    3. ' j' → logprob: -10.673638343811035
    4. ' ' → logprob: -11.423638343811035
    5. '-' → logprob: -11.923638343811035
    6. '(' → logprob: -12.298638343811035
    7. '```' → logprob: -14.173638343811035
    8. '{' → logprob: -14.298638343811035
    9. '(j' → logprob: -14.361138343811035
    10. '   ' → logprob: -14.673638343811035

Token 60: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.21454423666000366
    2. '-' → logprob: -1.7145442962646484
    3. ' -' → logprob: -4.339544296264648
    4. '-J' → logprob: -14.214544296264648
    5. 'j' → logprob: -14.464544296264648
    6. '-
' → logprob: -14.589544296264648
    7. ' ' → logprob: -14.714544296264648
    8. '```' → logprob: -15.964544296264648
    9. '   ' → logprob: -16.33954429626465
    10. '-v' → logprob: -16.58954429626465

Token 61: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0033565396443009377
    2. ']' → logprob: -5.753356456756592
    3. '):' → logprob: -9.75335693359375
    4. ' ]' → logprob: -10.00335693359375
    5. ']:
' → logprob: -10.00335693359375
    6. ':' → logprob: -11.25335693359375
    7. ']):' → logprob: -11.87835693359375
    8. ']:
' → logprob: -12.50335693359375
    9. '']:' → logprob: -13.25335693359375
    10. '"]:' → logprob: -13.25335693359375

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37079644203186035
    2. ':' → logprob: -1.2457964420318604
    3. ':
' → logprob: -3.9957964420318604
    4. '   ' → logprob: -6.245796203613281
    5. ':c' → logprob: -7.245796203613281
    6. ' c' → logprob: -8.245796203613281
    7. 'c' → logprob: -8.870796203613281
    8. '	c' → logprob: -8.870796203613281
    9. ' :' → logprob: -9.495796203613281
    10. ' :
' → logprob: -9.745796203613281

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3665027320384979
    2. 'c' (adapté à ' c') → logprob: -1.2415027618408203
    3. '       ' → logprob: -5.36650276184082
    4. ' ' → logprob: -5.49150276184082
    5. '1' → logprob: -5.74150276184082
    6. '	c' → logprob: -5.74150276184082
    7. ' 
' → logprob: -6.49150276184082
    8. '   ' → logprob: -7.24150276184082
    9. ' ' → logprob: -9.24150276184082
    10. '    ' → logprob: -9.36650276184082

Token 64: '=c' (ID: 43473)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2134910672903061
    2. '+' → logprob: -1.7134910821914673
    3. ' +=' → logprob: -4.463490962982178
    4. '=' → logprob: -7.713490962982178
    5. ' +' → logprob: -10.713491439819336
    6. '+='' → logprob: -11.963491439819336
    7. '+="' → logprob: -12.838491439819336
    8. ']+=' → logprob: -13.588491439819336
    9. ' ' → logprob: -13.588491439819336
    10. ' =' → logprob: -13.963491439819336

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005557744298130274
    2. ' +' → logprob: -7.500555992126465
    3. '1' → logprob: -13.375555992126465
    4. '+
' → logprob: -14.750555992126465
    5. ' ' → logprob: -14.875555992126465
    6. ' plus' → logprob: -15.250555992126465
    7. '+c' → logprob: -16.25055503845215
    8. '+=' → logprob: -17.62555503845215
    9. 'plus' → logprob: -17.87555503845215
    10. ' +
' → logprob: -18.00055503845215

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -19.50000762939453
    4. '   ' → logprob: -20.12500762939453
    5. '```' → logprob: -20.50000762939453
    6. '  ' → logprob: -20.62500762939453
    7. '۱' → logprob: -21.00000762939453
    8. ' ' → logprob: -21.37500762939453
    9. '１' → logprob: -21.50000762939453
    10. '१' → logprob: -22.00000762939453

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5230225324630737
    2. '<|end|>' → logprob: -1.1480225324630737
    3. 'print' → logprob: -2.6480226516723633
    4. '\n' → logprob: -4.648022651672363
    5. '#' → logprob: -5.648022651672363
    6. ')' → logprob: -5.898022651672363
    7. '```' → logprob: -6.148022651672363
    8. '<|end|>' → logprob: -8.648022651672363
    9. '' → logprob: -8.773022651672363
    10. ' print' → logprob: -9.023022651672363

Token 68: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.084206375409849e-05
    2. ' print' → logprob: -10.125041007995605
    3. '#print' → logprob: -15.125041007995605
    4. '#' → logprob: -15.875041007995605
    5. 'pr' → logprob: -16.37504005432129
    6. '```' → logprob: -16.87504005432129
    7. 'c' → logprob: -17.00004005432129
    8. ')' → logprob: -17.12504005432129
    9. '<|end|>' → logprob: -17.25004005432129
    10. 'p' → logprob: -17.50004005432129

Token 70: ' voilà' (ID: 77612)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34909260272979736
    2. ' print' → logprob: -1.2240926027297974
    3. 'pr' → logprob: -8.599092483520508
    4. 'p' → logprob: -8.724092483520508
    5. 'c' → logprob: -9.849092483520508
    6. ' p' → logprob: -9.974092483520508
    7. ' c' → logprob: -10.099092483520508
    8. '
' → logprob: -10.224092483520508
    9. ' prin' → logprob: -10.724092483520508
    10. ' ' → logprob: -10.849092483520508

Token 71: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01743805594742298
    2. '<|end|>' → logprob: -4.517437934875488
    3. '
' → logprob: -6.392437934875488
    4. ' print' → logprob: -6.642437934875488
    5. 'p' → logprob: -6.767437934875488
    6. ')' → logprob: -7.142437934875488
    7. '#' → logprob: -7.517437934875488
    8. ' ' → logprob: -8.017437934875488
    9. 'c' → logprob: -8.642437934875488
    10. '\n' → logprob: -9.267437934875488

Token 72: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38708242774009705
    2. ' print' → logprob: -1.1370824575424194
    3. ' c' → logprob: -8.88708209991455
    4. 'c' → logprob: -9.63708209991455
    5. ' ' → logprob: -12.51208209991455
    6. ' ' → logprob: -14.38708209991455
    7. '	print' → logprob: -14.51208209991455
    8. ' 
' → logprob: -14.51208209991455
    9. ')' → logprob: -14.76208209991455
    10. '<|end|>' → logprob: -14.76208209991455

Token 73: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09058187156915665
    2. ' print' → logprob: -2.7155818939208984
    3. ' imprime' → logprob: -4.840581893920898
    4. 'aff' → logprob: -5.340581893920898
    5. ' affiche' → logprob: -5.340581893920898
    6. 'pr' → logprob: -6.715581893920898
    7. 'im' → logprob: -8.215581893920898
    8. 'p' → logprob: -8.340581893920898
    9. ' a' → logprob: -8.590581893920898
    10. 'prit' → logprob: -8.965581893920898

Token 74: ' combien' (ID: 106648)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4873836636543274
    2. 'c' → logprob: -1.1123836040496826
    3. '(c' → logprob: -3.9873836040496826
    4. ' c' → logprob: -4.112383842468262
    5. '(' → logprob: -4.362383842468262
    6. ' print' → logprob: -5.112383842468262
    7. '(
' → logprob: -6.362383842468262
    8. '
' → logprob: -7.737383842468262
    9. '()
' → logprob: -7.987383842468262
    10. '(print' → logprob: -8.112383842468262

Token 75: ' ça' (ID: 13590)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017557069659233093
    2. '(
' → logprob: -4.642557144165039
    3. '(' → logprob: -5.267557144165039
    4. ' print' → logprob: -6.267557144165039
    5. '(print' → logprob: -7.892557144165039
    6. '
' → logprob: -9.392557144165039
    7. ')
' → logprob: -9.392557144165039
    8. ')' → logprob: -9.517557144165039
    9. 'c' → logprob: -10.517557144165039
    10. '(c' → logprob: -10.892557144165039

Token 76: ' fait' (ID: 7473)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.3531641960144043
    2. ' prend' → logprob: -2.2281641960144043
    3. 'change' → logprob: -3.6031641960144043
    4. ' co' → logprob: -3.9781641960144043
    5. 'diff' → logprob: -3.9781641960144043
    6. '   ' → logprob: -4.103164196014404
    7. 'd' → logprob: -4.228164196014404
    8. 'pr' → logprob: -4.353164196014404
    9. ' change' → logprob: -4.353164196014404
    10. ' coûte' → logprob: -4.603164196014404

Token 77: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032998246024362743
    2. '
' → logprob: -8.125329971313477
    3. ' print' → logprob: -10.500329971313477
    4. '```' → logprob: -12.500329971313477
    5. ')
' → logprob: -13.750329971313477
    6. '
' → logprob: -14.125329971313477
    7. '  
' → logprob: -15.625329971313477
    8. ' 
' → logprob: -15.750329971313477
    9. ')' → logprob: -16.125329971313477
    10. 'c' → logprob: -16.625329971313477

Token 78: 'pas' (ID: 21122)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30082085728645325
    2. ')
' → logprob: -1.5508208274841309
    3. ')' → logprob: -3.050820827484131
    4. ' print' → logprob: -8.300821304321289
    5. ')
' → logprob: -9.675821304321289
    6. ' )
' → logprob: -10.425821304321289
    7. 'c' → logprob: -11.175821304321289
    8. ')c' → logprob: -11.175821304321289
    9. ')

' → logprob: -11.425821304321289
    10. '```' → logprob: -12.300821304321289

Token 79: ' sûr' (ID: 46415)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1517370343208313
    2. 'de' → logprob: -2.1517369747161865
    3. 'd' → logprob: -5.651737213134766
    4. 'mal' → logprob: -5.776737213134766
    5. 'des' → logprob: -6.276737213134766
    6. ' de' → logprob: -6.401737213134766
    7. ')
' → logprob: -7.026737213134766
    8. '1' → logprob: -7.026737213134766
    9. 'diff' → logprob: -7.026737213134766
    10. 'au' → logprob: -7.276737213134766

Token 80: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12335173785686493
    2. '!' → logprob: -3.623351812362671
    3. 'de' → logprob: -3.998351812362671
    4. 'que' → logprob: -4.123351573944092
    5. '!)' → logprob: -4.248351573944092
    6. ' de' → logprob: -4.623351573944092
    7. ' que' → logprob: -4.748351573944092
    8. '):' → logprob: -5.623351573944092
    9. ' !)' → logprob: -6.123351573944092
    10. ' )' → logprob: -6.373351573944092

Token 81: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.33958399295806885
    2. 'e' → logprob: -1.8395839929580688
    3. 'ur' → logprob: -3.4645838737487793
    4. 'u' → logprob: -3.7145838737487793
    5. 'a' → logprob: -4.214583873748779
    6. ''' → logprob: -4.339583873748779
    7. '')' → logprob: -4.964583873748779
    8. 'i' → logprob: -5.339583873748779
    9. ''à' → logprob: -5.339583873748779
    10. ')' → logprob: -5.839583873748779

Token 82: ' fallait' (ID: 110338)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.022971736267209053
    2. ' faut' → logprob: -4.7729716300964355
    3. 'fa' → logprob: -5.2729716300964355
    4. 's' → logprob: -5.5229716300964355
    5. 'a' → logprob: -6.1479716300964355
    6. ' faudra' → logprob: -8.022972106933594
    7. ' f' → logprob: -8.147972106933594
    8. 'y' → logprob: -8.147972106933594
    9. ' ' → logprob: -8.397972106933594
    10. '   ' → logprob: -8.897972106933594

Token 83: ' retourner' (ID: 116656)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.1045960187911987
    2. 'le' → logprob: -1.9795960187911987
    3. ' ' → logprob: -2.2295961380004883
    4. 'print' → logprob: -2.8545961380004883
    5. 'changer' → logprob: -2.9795961380004883
    6. 'faire' → logprob: -3.2295961380004883
    7. ' le' → logprob: -3.3545961380004883
    8. ' afficher' → logprob: -3.3545961380004883
    9. 'mettre' → logprob: -3.7295961380004883
    10. 'un' → logprob: -3.9795961380004883

Token 84: ' ça' (ID: 13590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9812054634094238
    2. ' c' → logprob: -1.1062054634094238
    3. ' ' → logprob: -2.356205463409424
    4. ' la' → logprob: -2.981205463409424
    5. ')' → logprob: -3.356205463409424
    6. ' un' → logprob: -3.731205463409424
    7. ' le' → logprob: -4.231205463409424
    8. 'la' → logprob: -4.231205463409424
    9. ' )' → logprob: -4.606205463409424
    10. 'le' → logprob: -5.106205463409424

Token 85: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030068419873714447
    2. 'print' → logprob: -3.5300683975219727
    3. ',' → logprob: -9.530068397521973
    4. ' )' → logprob: -9.780068397521973
    5. ')
' → logprob: -10.030068397521973
    6. ' print' → logprob: -10.030068397521973
    7. ')c' → logprob: -10.030068397521973
    8. '!)' → logprob: -11.280068397521973
    9. '`)' → logprob: -11.655068397521973
    10. 'c' → logprob: -11.780068397521973

Token 86: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7069108486175537
    2. 'l' → logprob: -1.9569108486175537
    3. 'aff' → logprob: -2.3319108486175537
    4. ' l' → logprob: -2.7069108486175537
    5. 'im' → logprob: -2.9569108486175537
    6. ' print' → logprob: -3.2069108486175537
    7. ' impr' → logprob: -3.4569108486175537
    8. ' afficher' → logprob: -3.4569108486175537
    9. ' juste' → logprob: -3.8319108486175537
    10. '#' → logprob: -5.456911087036133

Token 87: ''im' (ID: 44488)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5331643223762512
    2. 'a' → logprob: -0.9081643223762512
    3. '')' → logprob: -5.7831645011901855
    4. 'es' → logprob: -5.9081645011901855
    5. ''' → logprob: -7.1581645011901855
    6. 'à' → logprob: -7.1581645011901855
    7. 'print' → logprob: -7.6581645011901855
    8. 'i' → logprob: -8.408164024353027
    9. ''a' → logprob: -8.408164024353027
    10. ')' → logprob: -8.658164024353027

Token 88: 'primer' (ID: 55821)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32346051931381226
    2. 'primer' → logprob: -1.448460578918457
    3. 'prime' → logprob: -4.698460578918457
    4. 'press' → logprob: -4.698460578918457
    5. 'print' → logprob: -4.823460578918457
    6. 'pr' → logprob: -5.198460578918457
    7. 'prim' → logprob: -5.573460578918457
    8. 'r' → logprob: -6.448460578918457
    9. 'primir' → logprob: -7.323460578918457
    10. 'port' → logprob: -7.698460578918457

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03723830357193947
    2. 'print' → logprob: -3.787238359451294
    3. ')
' → logprob: -4.287238121032715
    4. '(' → logprob: -10.162238121032715
    5. 'p' → logprob: -10.287238121032715
    6. ' )' → logprob: -10.912238121032715
    7. '()' → logprob: -11.037238121032715
    8. ')

' → logprob: -11.537238121032715
    9. ' print' → logprob: -11.787238121032715
    10. '(print' → logprob: -11.912238121032715

Token 90: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016380504239350557
    2. '
' → logprob: -6.751637935638428
    3. 'p' → logprob: -8.251638412475586
    4. ' print' → logprob: -8.876638412475586
    5. ')' → logprob: -10.376638412475586
    6. '```' → logprob: -11.251638412475586
    7. ')
' → logprob: -11.626638412475586
    8. 'pr' → logprob: -12.751638412475586
    9. 'prin' → logprob: -13.376638412475586
    10. ' 
' → logprob: -13.376638412475586

Token 91: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38688546419143677
    2. '(c' → logprob: -1.136885404586792
    3. '()' → logprob: -12.011885643005371
    4. '((' → logprob: -12.886885643005371
    5. '('' → logprob: -13.011885643005371
    6. '(
' → logprob: -13.511885643005371
    7. '(`' → logprob: -14.011885643005371
    8. '(C' → logprob: -15.011885643005371
    9. '(s' → logprob: -15.636885643005371
    10. 'c' → logprob: -15.886885643005371

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -17.25
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -18.375
    6. '')' → logprob: -19.75
    7. ')#' → logprob: -20.5
    8. ')}' → logprob: -20.875
    9. '）' → logprob: -21.0
    10. '(' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 30.00%
Précision adaptée (1ère position): 30.00%
Précision (top 10): 54.44%
================================================================================
