================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
exec("x,y=[*map(int,input().split())];s=[*map(int,input().split())];t=sum(s)/(4*y);print(('No','Yes')[sum([k>=t for k in s])>=y])")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'exec' (ID: 31592)
  → Token d'amorce (pas de prédiction)

Token 1: '("' (ID: 568)
  → Token d'amorce (pas de prédiction)

Token 2: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 3: ',y' (ID: 16103)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7992233037948608
    2. ')")' → logprob: -0.9242233037948608
    3. ')' → logprob: -2.2992234230041504
    4. '+")' → logprob: -3.5492234230041504
    5. '+' → logprob: -4.17422342300415
    6. '*' → logprob: -5.67422342300415
    7. '[' → logprob: -6.29922342300415
    8. ' ")' → logprob: -6.79922342300415
    9. '}")' → logprob: -7.79922342300415
    10. '**' → logprob: -7.92422342300415

Token 4: '=[' (ID: 13370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45137569308280945
    2. '=' → logprob: -1.4513757228851318
    3. ')=' → logprob: -2.201375722885132
    4. '")' → logprob: -4.326375484466553
    5. ' =' → logprob: -6.201375484466553
    6. ')="' → logprob: -6.576375484466553
    7. ' )' → logprob: -7.326375484466553
    8. ',' → logprob: -8.201375961303711
    9. ')")' → logprob: -8.701375961303711
    10. '="' → logprob: -9.326375961303711

Token 5: '*' (ID: 9)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020663337782025337
    2. '0' → logprob: -4.020663261413574
    3. '10' → logprob: -7.020663261413574
    4. '3' → logprob: -7.895663261413574
    5. ']' → logprob: -7.895663261413574
    6. '2' → logprob: -8.395663261413574
    7. 'int' → logprob: -8.645663261413574
    8. '5' → logprob: -8.770663261413574
    9. ' ' → logprob: -9.895663261413574
    10. ''' → logprob: -10.020663261413574

Token 6: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0056914035230875015
    2. ' range' → logprob: -6.2556915283203125
    3. '1' → logprob: -6.7556915283203125
    4. '(' → logprob: -7.0056915283203125
    5. 'input' → logprob: -7.6306915283203125
    6. '(range' → logprob: -8.005691528320312
    7. '[' → logprob: -8.380691528320312
    8. 'map' → logprob: -8.755691528320312
    9. '"' → logprob: -8.755691528320312
    10. '0' → logprob: -9.130691528320312

Token 7: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.14940614998340607
    2. '(' → logprob: -2.7744061946868896
    3. '(lambda' → logprob: -3.3994061946868896
    4. '(eval' → logprob: -3.8994061946868896
    5. '(str' → logprob: -4.0244059562683105
    6. '(ord' → logprob: -5.7744059562683105
    7. '(input' → logprob: -7.0244059562683105
    8. '(list' → logprob: -8.149406433105469
    9. '(chr' → logprob: -8.524406433105469
    10. '("' → logprob: -9.274406433105469

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5244545340538025
    2. '(' → logprob: -1.2744545936584473
    3. '("' → logprob: -2.5244545936584473
    4. '(eval' → logprob: -4.149454593658447
    5. '("("' → logprob: -4.649454593658447
    6. '('' → logprob: -5.399454593658447
    7. '(range' → logprob: -6.024454593658447
    8. '(("' → logprob: -6.149454593658447
    9. '(""))' → logprob: -6.274454593658447
    10. '(f' → logprob: -6.274454593658447

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2156554013490677
    2. '(' → logprob: -3.5906553268432617
    3. '("' → logprob: -3.5906553268432617
    4. ')]' → logprob: -3.5906553268432617
    5. '(()' → logprob: -3.8406553268432617
    6. ')' → logprob: -3.8406553268432617
    7. ')])' → logprob: -4.090655326843262
    8. '("("' → logprob: -4.590655326843262
    9. '()]' → logprob: -4.715655326843262
    10. '(""))' → logprob: -4.840655326843262

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004529566504061222
    2. 'strip' → logprob: -7.750452995300293
    3. ' split' → logprob: -11.375452995300293
    4. 'rstrip' → logprob: -12.000452995300293
    5. '(split' → logprob: -12.375452995300293
    6. 'read' → logprob: -15.250452995300293
    7. 'spl' → logprob: -16.625452041625977
    8. 'replace' → logprob: -17.250452041625977
    9. '```' → logprob: -18.250452041625977
    10. ' strip' → logprob: -18.375452041625977

Token 11: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012171243317425251
    2. '('' → logprob: -5.262171268463135
    3. '("' → logprob: -5.887171268463135
    4. '()]' → logprob: -6.512171268463135
    5. '()))' → logprob: -6.637171268463135
    6. ')]' → logprob: -7.637171268463135
    7. '()' → logprob: -8.012170791625977
    8. '(' → logprob: -8.637170791625977
    9. ')])' → logprob: -8.887170791625977
    10. ')' → logprob: -9.637170791625977

Token 12: '];' (ID: 11464)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09081225842237473
    2. ')])' → logprob: -2.9658122062683105
    3. ')' → logprob: -3.4658122062683105
    4. '])' → logprob: -6.2158122062683105
    5. '())' → logprob: -7.5908122062683105
    6. '")]' → logprob: -7.9658122062683105
    7. '()]' → logprob: -8.090812683105469
    8. ']' → logprob: -8.340812683105469
    9. '])]' → logprob: -8.840812683105469
    10. '()' → logprob: -9.215812683105469

Token 13: 's' (ID: 82)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8940178751945496
    2. ')' → logprob: -1.1440179347991943
    3. ' x' → logprob: -1.7690179347991943
    4. ' )' → logprob: -3.6440179347991943
    5. '\n' → logprob: -4.019017696380615
    6. 'print' → logprob: -4.769017696380615
    7. '")' → logprob: -4.894017696380615
    8. '"' → logprob: -5.019017696380615
    9. 'exec' → logprob: -5.269017696380615
    10. ' ' → logprob: -5.519017696380615

Token 14: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0607234463095665
    2. '=input' → logprob: -3.5607235431671143
    3. 'um' → logprob: -3.9357235431671143
    4. '=sum' → logprob: -5.685723304748535
    5. '+=' → logprob: -6.685723304748535
    6. '1' → logprob: -6.935723304748535
    7. '=s' → logprob: -7.310723304748535
    8. '=(' → logprob: -7.435723304748535
    9. 'quare' → logprob: -7.560723304748535
    10. '=f' → logprob: -7.810723304748535

Token 15: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4795835018157959
    2. '1' → logprob: -1.979583501815796
    3. 'i' → logprob: -2.354583501815796
    4. 'x' → logprob: -3.104583501815796
    5. '*' → logprob: -3.229583501815796
    6. '*i' → logprob: -4.354583740234375
    7. 'int' → logprob: -4.854583740234375
    8. '(i' → logprob: -4.854583740234375
    9. '(' → logprob: -5.354583740234375
    10. 'input' → logprob: -5.604583740234375

Token 16: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05949745699763298
    2. 'map' → logprob: -3.434497356414795
    3. 'input' → logprob: -3.684497356414795
    4. '(range' → logprob: -9.309497833251953
    5. '"' → logprob: -9.434497833251953
    6. ' range' → logprob: -9.434497833251953
    7. 'str' → logprob: -9.559497833251953
    8. '(map' → logprob: -11.184497833251953
    9. ''' → logprob: -11.934497833251953
    10. ''r' → logprob: -12.309497833251953

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000718626833986491
    2. '(' → logprob: -7.500718593597412
    3. '<int' → logprob: -10.00071907043457
    4. ',int' → logprob: -10.37571907043457
    5. 'int' → logprob: -10.87571907043457
    6. '(str' → logprob: -11.12571907043457
    7. '[int' → logprob: -11.25071907043457
    8. '(eval' → logprob: -11.37571907043457
    9. ']int' → logprob: -11.62571907043457
    10. '=int' → logprob: -12.12571907043457

Token 18: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017118285177275538
    2. ',input' → logprob: -6.876711845397949
    3. ')' → logprob: -8.25171184539795
    4. '=input' → logprob: -9.25171184539795
    5. '<|end|>' → logprob: -9.37671184539795
    6. '(' → logprob: -9.87671184539795
    7. ')(' → logprob: -10.50171184539795
    8. ',' → logprob: -10.62671184539795
    9. '(user' → logprob: -10.87671184539795
    10. '),' → logprob: -11.00171184539795

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006513170665130019
    2. '()' → logprob: -7.3756513595581055
    3. '()).' → logprob: -11.750651359558105
    4. '())' → logprob: -11.875651359558105
    5. '()].' → logprob: -12.875651359558105
    6. ' ().' → logprob: -13.750651359558105
    7. '());' → logprob: -14.000651359558105
    8. '()[' → logprob: -14.125651359558105
    9. '().__' → logprob: -14.250651359558105
    10. '.' → logprob: -14.750651359558105

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -14.375000953674316
    3. '(split' → logprob: -15.125000953674316
    4. 'plit' → logprob: -15.875000953674316
    5. 'spl' → logprob: -15.875000953674316
    6. ')' → logprob: -16.750001907348633
    7. 'strip' → logprob: -17.500001907348633
    8. 's' → logprob: -17.625001907348633
    9. 'read' → logprob: -17.875001907348633
    10. 'rstrip' → logprob: -18.125001907348633

Token 21: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002675418509170413
    2. '()' → logprob: -6.252675533294678
    3. '()))' → logprob: -7.627675533294678
    4. '()]' → logprob: -8.50267505645752
    5. ')' → logprob: -11.00267505645752
    6. ')]' → logprob: -11.62767505645752
    7. ')])' → logprob: -11.75267505645752
    8. '());' → logprob: -11.87767505645752
    9. '()),' → logprob: -12.25267505645752
    10. ' ())' → logprob: -12.87767505645752

Token 22: '];' (ID: 11464)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2735190689563751
    2. '()]' → logprob: -1.6485190391540527
    3. '()' → logprob: -4.148519039154053
    4. '())' → logprob: -4.148519039154053
    5. ')' → logprob: -5.148519039154053
    6. ']' → logprob: -5.398519039154053
    7. ')])' → logprob: -5.898519039154053
    8. '])' → logprob: -6.898519039154053
    9. '")]' → logprob: -7.773519039154053
    10. '])]' → logprob: -8.148519515991211

Token 23: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5384661555290222
    2. 'p' → logprob: -2.913466215133667
    3. 'x' → logprob: -3.163466215133667
    4. 'r' → logprob: -3.288466215133667
    5. 'a' → logprob: -3.288466215133667
    6. 'z' → logprob: -3.413466215133667
    7. 'exec' → logprob: -3.538466215133667
    8. 's' → logprob: -3.538466215133667
    9. 'if' → logprob: -3.913466215133667
    10. ' for' → logprob: -4.163465976715088

Token 24: '=sum' (ID: 174693)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.37307190895080566
    2. '=' → logprob: -1.3730719089508057
    3. ' =' → logprob: -3.8730719089508057
    4. '=[]' → logprob: -4.373071670532227
    5. ',' → logprob: -4.998071670532227
    6. ' =[' → logprob: -5.123071670532227
    7. '[' → logprob: -5.998071670532227
    8. '=['' → logprob: -7.248071670532227
    9. '=(' → logprob: -7.248071670532227
    10. '(' → logprob: -7.248071670532227

Token 25: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.621307909488678
    2. '(' → logprob: -0.871307909488678
    3. '((' → logprob: -3.746307849884033
    4. '([' → logprob: -4.871307849884033
    5. 's' → logprob: -5.371307849884033
    6. '(t' → logprob: -6.121307849884033
    7. '(range' → logprob: -6.246307849884033
    8. '([(' → logprob: -6.746307849884033
    9. '(x' → logprob: -7.121307849884033
    10. '(eval' → logprob: -8.496308326721191

Token 26: ')/(' (ID: 60504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014970379881560802
    2. ')-' → logprob: -5.639970302581787
    3. '[' → logprob: -6.889970302581787
    4. '))' → logprob: -6.889970302581787
    5. ')+' → logprob: -6.889970302581787
    6. ');' → logprob: -7.014970302581787
    7. '-' → logprob: -7.139970302581787
    8. ')>' → logprob: -7.514970302581787
    9. '-s' → logprob: -7.764970302581787
    10. '[x' → logprob: -7.764970302581787

Token 27: '4' (ID: 19)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010958919301629066
    2. 'y' → logprob: -4.635959148406982
    3. '(x' → logprob: -7.260959148406982
    4. ' x' → logprob: -8.385958671569824
    5. '2' → logprob: -9.260958671569824
    6. 'len' → logprob: -9.510958671569824
    7. ' y' → logprob: -11.135958671569824
    8. ')x' → logprob: -11.260958671569824
    9. ')' → logprob: -11.510958671569824
    10. ' ' → logprob: -11.635958671569824

Token 28: '*y' (ID: 83575)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5837399363517761
    2. '*(' → logprob: -1.333739995956421
    3. '*x' → logprob: -1.958739995956421
    4. 'x' → logprob: -4.083739757537842
    5. '*' → logprob: -4.833739757537842
    6. ')' → logprob: -5.333739757537842
    7. '*y' → logprob: -5.583739757537842
    8. ',x' → logprob: -7.333739757537842
    9. '(' → logprob: -7.458739757537842
    10. '(y' → logprob: -7.458739757537842

Token 29: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006606779992580414
    2. ')*' → logprob: -6.006606578826904
    3. '*' → logprob: -6.256606578826904
    4. '**' → logprob: -7.631606578826904
    5. '*)' → logprob: -7.631606578826904
    6. '))' → logprob: -8.131607055664062
    7. ')**' → logprob: -8.256607055664062
    8. '+' → logprob: -9.131607055664062
    9. '")' → logprob: -9.381607055664062
    10. ')+' → logprob: -9.506607055664062

Token 30: 'print' (ID: 1598)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3627272844314575
    2. 'x' → logprob: -1.4877272844314575
    3. ')' → logprob: -1.9877272844314575
    4. 'print' → logprob: -2.487727165222168
    5. 'n' → logprob: -2.862727165222168
    6. ' x' → logprob: -2.862727165222168
    7. ' )' → logprob: -3.737727165222168
    8. ' s' → logprob: -3.987727165222168
    9. '"' → logprob: -4.112727165222168
    10. '\n' → logprob: -4.112727165222168

Token 31: '(('' (ID: 122195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8171605467796326
    2. '(round' → logprob: -2.0671606063842773
    3. '(f' → logprob: -2.1921606063842773
    4. '(int' → logprob: -2.3171606063842773
    5. '(t' → logprob: -2.8171606063842773
    6. '("' → logprob: -3.0671606063842773
    7. '(s' → logprob: -3.5671606063842773
    8. '('' → logprob: -3.6921606063842773
    9. '("("' → logprob: -4.067160606384277
    10. '((' → logprob: -4.317160606384277

Token 32: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4494209289550781
    2. 'x' → logprob: -1.4494209289550781
    3. '{' → logprob: -2.949420928955078
    4. '"' → logprob: -2.949420928955078
    5. 's' → logprob: -3.199420928955078
    6. 'abs' → logprob: -3.386920928955078
    7. 'f' → logprob: -3.386920928955078
    8. '(' → logprob: -4.199420928955078
    9. 'round' → logprob: -4.324420928955078
    10. '('' → logprob: -4.324420928955078

Token 33: '','' (ID: 4074)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20463961362838745
    2. '','' → logprob: -2.5796396732330322
    3. ' t' → logprob: -3.2046396732330322
    4. ',' → logprob: -4.079639434814453
    5. ''' → logprob: -4.204639434814453
    6. ' ','' → logprob: -4.329639434814453
    7. ','' → logprob: -5.579639434814453
    8. 'ne' → logprob: -5.704639434814453
    9. ' '' → logprob: -5.829639434814453
    10. '')' → logprob: -6.079639434814453

Token 34: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00645470479503274
    2. '"' → logprob: -5.7564544677734375
    3. ' '' → logprob: -5.7564544677734375
    4. ' ' → logprob: -10.756454467773438
    5. ''S' → logprob: -11.256454467773438
    6. ''O' → logprob: -11.256454467773438
    7. '('' → logprob: -11.631454467773438
    8. ''\' → logprob: -12.131454467773438
    9. '`' → logprob: -12.256454467773438
    10. ' "' → logprob: -12.381454467773438

Token 35: '')[' (ID: 28534)
  Prédit: '')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')[' → logprob: -0.00045164540642872453
    2. '')' → logprob: -8.750452041625977
    3. ')[' → logprob: -9.000452041625977
    4. ' ')[' → logprob: -9.750452041625977
    5. ''[' → logprob: -10.125452041625977
    6. '")[' → logprob: -10.250452041625977
    7. '')['' → logprob: -10.750452041625977
    8. ''' → logprob: -12.000452041625977
    9. ')['' → logprob: -12.750452041625977
    10. ')' → logprob: -13.250452041625977

Token 36: 'sum' (ID: 12298)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24061939120292664
    2. 's' → logprob: -2.240619421005249
    3. 'x' → logprob: -3.240619421005249
    4. 'all' → logprob: -3.865619421005249
    5. 'int' → logprob: -4.36561918258667
    6. 'abs' → logprob: -4.86561918258667
    7. 'any' → logprob: -4.99061918258667
    8. 'round' → logprob: -5.36561918258667
    9. 'sum' → logprob: -5.49061918258667
    10. ' t' → logprob: -5.61561918258667

Token 37: '([' (ID: 5194)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.010814586654305458
    2. '(' → logprob: -5.135814666748047
    3. '(x' → logprob: -6.260814666748047
    4. '([' → logprob: -6.885814666748047
    5. '((' → logprob: -7.135814666748047
    6. 's' → logprob: -7.260814666748047
    7. '(i' → logprob: -8.510814666748047
    8. '(a' → logprob: -10.385814666748047
    9. '(t' → logprob: -10.635814666748047
    10. '([(' → logprob: -10.760814666748047

Token 38: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.471242904663086
    2. '1' → logprob: -1.596242904663086
    3. '(s' → logprob: -1.596242904663086
    4. 'x' → logprob: -2.471242904663086
    5. '(x' → logprob: -2.471242904663086
    6. '(i' → logprob: -2.971242904663086
    7. 's' → logprob: -3.221242904663086
    8. 'abs' → logprob: -3.846242904663086
    9. '(' → logprob: -4.471242904663086
    10. 'int' → logprob: -4.846242904663086

Token 39: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.34494611620903015
    2. ' >=' → logprob: -2.4699461460113525
    3. '>' → logprob: -2.7199461460113525
    4. '(s' → logprob: -3.4699461460113525
    5. '<=' → logprob: -4.094945907592773
    6. '==' → logprob: -4.844945907592773
    7. '%' → logprob: -4.969945907592773
    8. '>s' → logprob: -5.094945907592773
    9. '<s' → logprob: -5.219945907592773
    10. ' for' → logprob: -5.344945907592773

Token 40: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02296404540538788
    2. ' t' → logprob: -4.522964000701904
    3. '2' → logprob: -5.522964000701904
    4. 's' → logprob: -5.897964000701904
    5. '4' → logprob: -6.147964000701904
    6. 'x' → logprob: -7.772964000701904
    7. 'i' → logprob: -7.772964000701904
    8. 'int' → logprob: -7.772964000701904
    9. '1' → logprob: -8.147964477539062
    10. ' ' → logprob: -8.522964477539062

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1801031231880188
    2. 'for' → logprob: -1.805103063583374
    3. ' ' → logprob: -8.680103302001953
    4. ')' → logprob: -9.680103302001953
    5. '])' → logprob: -10.055103302001953
    6. '*' → logprob: -12.055103302001953
    7. '	for' → logprob: -12.055103302001953
    8. '-' → logprob: -12.242603302001953
    9. '```' → logprob: -12.305103302001953
    10. ' ])' → logprob: -12.492603302001953

Token 42: ' k' (ID: 372)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06198326125741005
    2. 's' → logprob: -2.811983346939087
    3. ' k' → logprob: -12.061983108520508
    4. 'k' → logprob: -12.561983108520508
    5. ' range' → logprob: -12.686983108520508
    6. ' ' → logprob: -13.561983108520508
    7. '[' → logprob: -14.811983108520508
    8. 'range' → logprob: -15.061983108520508
    9. '(s' → logprob: -15.186983108520508
    10. ''s' → logprob: -15.561983108520508

Token 43: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6048988103866577
    2. ' s' → logprob: -0.8548988103866577
    3. ' in' → logprob: -3.6048989295959473
    4. 'in' → logprob: -6.854898929595947
    5. '(s' → logprob: -8.854898452758789
    6. ' ' → logprob: -10.104898452758789
    7. ',s' → logprob: -10.604898452758789
    8. ']' → logprob: -11.104898452758789
    9. ')' → logprob: -11.229898452758789
    10. '<|end|>' → logprob: -11.979898452758789

Token 44: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16028708219528198
    2. ' s' → logprob: -1.9102871417999268
    3. ' ' → logprob: -11.160286903381348
    4. 'sorted' → logprob: -11.472786903381348
    5. ' sorted' → logprob: -11.472786903381348
    6. ']' → logprob: -12.285286903381348
    7. '[' → logprob: -13.035286903381348
    8. ')' → logprob: -13.222786903381348
    9. ' ' → logprob: -13.285286903381348
    10. 'x' → logprob: -13.472786903381348

Token 45: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0015071245143190026
    2. ']>=' → logprob: -6.87650728225708
    3. ')>=' → logprob: -8.501506805419922
    4. ' ])' → logprob: -9.251506805419922
    5. ' if' → logprob: -10.376506805419922
    6. '])/' → logprob: -10.626506805419922
    7. ')' → logprob: -10.751506805419922
    8. '])*' → logprob: -10.751506805419922
    9. '[:' → logprob: -10.876506805419922
    10. 'if' → logprob: -11.501506805419922

Token 46: '>=' (ID: 20974)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.233375683426857
    2. '>=' → logprob: -1.6083756685256958
    3. ']==' → logprob: -5.483375549316406
    4. '==' → logprob: -6.608375549316406
    5. ')>=' → logprob: -6.733375549316406
    6. ']' → logprob: -6.858375549316406
    7. ' >=' → logprob: -9.108375549316406
    8. '">' → logprob: -10.733375549316406
    9. '```' → logprob: -10.858375549316406
    10. ']>' → logprob: -11.483375549316406

Token 47: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3935216963291168
    2. 'x' → logprob: -1.1435216665267944
    3. ' y' → logprob: -5.393521785736084
    4. '4' → logprob: -6.768521785736084
    5. ' x' → logprob: -7.768521785736084
    6. '3' → logprob: -8.518521308898926
    7. '2' → logprob: -8.643521308898926
    8. ' ' → logprob: -9.143521308898926
    9. '   ' → logprob: -12.393521308898926
    10. 'k' → logprob: -12.393521308898926

Token 48: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6463794112205505
    2. ')])' → logprob: -0.8963794112205505
    3. ')' → logprob: -2.7713794708251953
    4. ')]' → logprob: -5.771379470825195
    5. '))' → logprob: -6.896379470825195
    6. ']))' → logprob: -7.271379470825195
    7. ']' → logprob: -8.146379470825195
    8. ']])' → logprob: -9.146379470825195
    9. '])]' → logprob: -9.646379470825195
    10. ' ])' → logprob: -10.396379470825195

Token 49: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003357006062287837
    2. ' )' → logprob: -9.375335693359375
    3. ' ' → logprob: -10.000335693359375
    4. ')
' → logprob: -10.375335693359375
    5. '(' → logprob: -10.625335693359375
    6. '[' → logprob: -10.875335693359375
    7. '```' → logprob: -10.875335693359375
    8. '')' → logprob: -11.000335693359375
    9. '
' → logprob: -11.125335693359375
    10. '\n' → logprob: -11.250335693359375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 31.91%
Précision adaptée (1ère position): 31.91%
Précision (top 10): 59.57%
================================================================================
