================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    return sys.stdin.readline().rstrip()

def get_first_line():
    return map(int, read_input().split())

def init_permutation_count_array(N):
    return [[0] * (2 * i + 1) for i in range(N + 1)]

def set_base_case(A):
    A[0][0] = 1

def update_permutation_counts(A, N, P):
    def add_and_reduce(a, b):
        a += b
        if a >= P:
            a -= P
        return a
    for i in range(N):
        process_row_update(A, i, P, add_and_reduce)

def process_row_update(A, i, P, add_and_reduce):
    for j in range(i, 2 * i + 1):
        A[i + 1][j + 1] = add_and_reduce(A[i + 1][j + 1], A[i][j])
        A[i + 1][j + 2] = add_and_reduce(A[i + 1][j + 2], A[i][j])

def init_B(N):
    return [0] * (N + 1)

def type1_update(B, A, N, X):
    for i in range(N + 1):
        type1_inner_update(B, A, i, X)

def type1_inner_update(B, A, i, X):
    for j in range(i, min(2 * i + 1, X)):
        B[i] += A[i][j]

def type2_update(B, N, X):
    if X % 2 == 1:
        for i in range(X, N + 1):
            B[i] += 1

def type3_update(B, A, N, X, P):
    for i in range(1, X):
        a = X - 1 - 2 * i
        if a < 0:
            continue
        process_type3_inner(B, A, a, i, N, P)

def process_type3_inner(B, A, a, i, N, P):
    for j in range((a + 1) // 2, a + 1):
        k = j + 2 * i
        if k > N:
            break
        B[k] += A[j][a]
        if B[k] >= P:
            B[k] -= P

def compute_answer(B, A, N, P):
    ans = 0
    for i, b in enumerate(B):
        ans = accumulate_answer(ans, b, A, N, i, P)
    return ans

def accumulate_answer(ans, b, A, N, i, P):
    return (ans + b * A[-1][-1 - i]) % P

def main():
    N, X = get_first_line()
    P = 998244353
    A = init_permutation_count_array(N)
    set_base_case(A)
    update_permutation_counts(A, N, P)
    B = init_B(N)
    type1_update(B, A, N, X)
    type2_update(B, N, X)
    type3_update(B, A, N, X, P)
    ans = compute_answer(B, A, N, P)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25461360812187195
    2. '_' → logprob: -1.5046136379241943
    3. ' (' → logprob: -6.629613399505615
    4. '_line' → logprob: -7.379613399505615
    5. '```' → logprob: -9.379613876342773
    6. ':' → logprob: -9.504613876342773
    7. ' ' → logprob: -9.629613876342773
    8. '_input' → logprob: -9.879613876342773
    9. 's' → logprob: -9.879613876342773
    10. '_data' → logprob: -10.004613876342773

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03724060207605362
    2. '():' → logprob: -4.037240505218506
    3. '_' → logprob: -4.162240505218506
    4. '):' → logprob: -7.412240505218506
    5. '(_' → logprob: -7.412240505218506
    6. '(_:' → logprob: -7.662240505218506
    7. '(:' → logprob: -8.162240982055664
    8. ' (' → logprob: -8.537240982055664
    9. '```' → logprob: -8.662240982055664
    10. '_:' → logprob: -9.287240982055664

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21430249512195587
    2. '   ' → logprob: -1.9643025398254395
    3. '\' → logprob: -4.4643025398254395
    4. ' return' → logprob: -4.9643025398254395
    5. '()' → logprob: -5.3393025398254395
    6. '(
' → logprob: -5.7143025398254395
    7. ' (' → logprob: -5.7143025398254395
    8. '```' → logprob: -5.7143025398254395
    9. '(return' → logprob: -5.9643025398254395
    10. ' ' → logprob: -5.9643025398254395

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42360714077949524
    2. 'return' (adapté à ' return') → logprob: -1.4236071109771729
    3. 'data' → logprob: -3.048607110977173
    4. ' ' → logprob: -4.173607349395752
    5. 'input' → logprob: -4.298607349395752
    6. ' return' → logprob: -4.548607349395752
    7. 'r' → logprob: -5.548607349395752
    8. 'line' → logprob: -6.298607349395752
    9. '    ' → logprob: -6.298607349395752
    10. 'x' → logprob: -6.423607349395752

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005234594456851482
    2. ' ' → logprob: -5.880234718322754
    3. ' input' → logprob: -6.755234718322754
    4. 'sys' → logprob: -6.755234718322754
    5. 'input' → logprob: -9.380234718322754
    6. ' int' → logprob: -12.755234718322754
    7. ' None' → logprob: -13.005234718322754
    8. ' list' → logprob: -13.255234718322754
    9. '	sys' → logprob: -13.380234718322754
    10. '(sys' → logprob: -13.880234718322754

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03089427389204502
    2. '.stdin' → logprob: -3.6558942794799805
    3. '.argv' → logprob: -5.6558942794799805
    4. '.stdout' → logprob: -7.1558942794799805
    5. '.readline' → logprob: -9.03089427947998
    6. ' .' → logprob: -9.15589427947998
    7. '.exit' → logprob: -10.90589427947998
    8. '.input' → logprob: -11.15589427947998
    9. '.import' → logprob: -11.28089427947998
    10. '.stderr' → logprob: -11.90589427947998

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0491243414580822
    2. '.read' → logprob: -3.674124240875244
    3. '.' → logprob: -3.799124240875244
    4. '.readlines' → logprob: -8.924124717712402
    5. 'read' → logprob: -10.549124717712402
    6. '.Read' → logprob: -11.924124717712402
    7. ' .' → logprob: -12.549124717712402
    8. '.write' → logprob: -13.174124717712402
    9. ' readline' → logprob: -13.549124717712402
    10. '```' → logprob: -14.549124717712402

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010716310935094953
    2. '().' → logprob: -7.001071453094482
    3. '()
' → logprob: -9.87607192993164
    4. '()(' → logprob: -10.12607192993164
    5. '(' → logprob: -10.25107192993164
    6. ' ()' → logprob: -11.37607192993164
    7. '()

' → logprob: -12.12607192993164
    8. '()\' → logprob: -12.12607192993164
    9. '`()' → logprob: -13.00107192993164
    10. '())' → logprob: -13.12607192993164

Token 13: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005533903022296727
    2. 'rstrip' → logprob: -7.500553607940674
    3. ' strip' → logprob: -15.250553131103516
    4. '_strip' → logprob: -16.625553131103516
    5. 'decode' → logprob: -16.750553131103516
    6. 'replace' → logprob: -17.875553131103516
    7. '```' → logprob: -18.250553131103516
    8. 'read' → logprob: -18.625553131103516
    9. '-strip' → logprob: -18.750553131103516
    10. '(strip' → logprob: -19.125553131103516

Token 14: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16166909039020538
    2. '()' → logprob: -1.911669135093689
    3. '(\' → logprob: -7.1616692543029785
    4. '(
' → logprob: -8.41166877746582
    5. '```' → logprob: -9.53666877746582
    6. '\' → logprob: -10.03666877746582
    7. ' ' → logprob: -10.28666877746582
    8. ''' → logprob: -10.28666877746582
    9. '\n' → logprob: -10.41166877746582
    10. ' ()' → logprob: -10.53666877746582

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10511475801467896
    2. '#' → logprob: -3.355114698410034
    3. 'd' → logprob: -3.980114698410034
    4. '\n' → logprob: -4.230114936828613
    5. '\' → logprob: -5.230114936828613
    6. 'n' → logprob: -5.480114936828613
    7. '
' → logprob: -5.480114936828613
    8. '' → logprob: -5.605114936828613
    9. '    
' → logprob: -5.980114936828613
    10. '```' → logprob: -6.105114936828613

Token 16: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13231900334358215
    2. ' calculate' → logprob: -2.6323189735412598
    3. ' process' → logprob: -4.13231897354126
    4. ' read' → logprob: -4.88231897354126
    5. ' write' → logprob: -5.13231897354126
    6. ' ' → logprob: -5.50731897354126
    7. ' solve' → logprob: -5.88231897354126
    8. ' compute' → logprob: -6.13231897354126
    9. ' parse' → logprob: -6.25731897354126
    10. ' add' → logprob: -6.38231897354126

Token 17: '_first' (ID: 29347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5018013715744019
    2. '_user' → logprob: -2.1268014907836914
    3. '_max' → logprob: -2.1268014907836914
    4. '_input' → logprob: -2.8768014907836914
    5. '_data' → logprob: -2.8768014907836914
    6. '_sum' → logprob: -3.8768014907836914
    7. '_value' → logprob: -5.751801490783691
    8. '_factor' → logprob: -6.251801490783691
    9. '_average' → logprob: -6.626801490783691
    10. '_name' → logprob: -6.876801490783691

Token 18: '_line' (ID: 14418)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.5197122693061829
    2. '_' → logprob: -1.019712209701538
    3. '_token' → logprob: -4.019712448120117
    4. '_char' → logprob: -4.769712448120117
    5. '_character' → logprob: -4.894712448120117
    6. '_name' → logprob: -5.394712448120117
    7. '_line' → logprob: -6.269712448120117
    8. '_element' → logprob: -6.644712448120117
    9. '_space' → logprob: -7.519712448120117
    10. '_item' → logprob: -7.519712448120117

Token 19: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013113131280988455
    2. '()' → logprob: -7.376311302185059
    3. '(' → logprob: -8.001311302185059
    4. ' ():' → logprob: -8.501311302185059
    5. '_parent' → logprob: -10.626311302185059
    6. '_' → logprob: -11.376311302185059
    7. '_output' → logprob: -11.376311302185059
    8. '):' → logprob: -11.626311302185059
    9. ':' → logprob: -11.626311302185059
    10. '():
' → logprob: -12.001311302185059

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018089536752086133
    2. ' return' → logprob: -9.125181198120117
    3. 'return' → logprob: -9.625181198120117
    4. '   ' → logprob: -13.625181198120117
    5. '    ' → logprob: -13.875181198120117
    6. '    
' → logprob: -14.125181198120117
    7. '       ' → logprob: -14.250181198120117
    8. '()' → logprob: -14.875181198120117
    9. '```' → logprob: -15.125181198120117
    10. '(' → logprob: -15.250181198120117

Token 21: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5824530124664307
    2. ' return' → logprob: -0.9574530124664307
    3. 'return' (adapté à ' return') → logprob: -2.9574530124664307
    4. ' line' → logprob: -5.332452774047852
    5. 'line' → logprob: -7.332452774047852
    6. '    ' → logprob: -9.957452774047852
    7. ' ' → logprob: -10.082452774047852
    8. ' input' → logprob: -11.207452774047852
    9. ' lines' → logprob: -11.332452774047852
    10. '  ' → logprob: -11.457452774047852

Token 22: ' map' (ID: 4014)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6365551948547363
    2. ' sys' → logprob: -1.2615551948547363
    3. ' ' → logprob: -2.0115551948547363
    4. ' input' → logprob: -3.8865551948547363
    5. 'read' → logprob: -4.011555194854736
    6. ' int' → logprob: -5.386555194854736
    7. '  ' → logprob: -6.011555194854736
    8. 'sys' → logprob: -6.511555194854736
    9. 'input' → logprob: -6.636555194854736
    10. ' readline' → logprob: -6.886555194854736

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09783563762903214
    2. '(' → logprob: -2.7228355407714844
    3. '(str' → logprob: -3.5978355407714844
    4. '(lambda' → logprob: -9.472835540771484
    5. '(list' → logprob: -10.597835540771484
    6. '(float' → logprob: -11.972835540771484
    7. 'int' → logprob: -12.722835540771484
    8. '(
' → logprob: -12.847835540771484
    9. '(s' → logprob: -12.972835540771484
    10. '(input' → logprob: -13.347835540771484

Token 24: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.34659507870674133
    2. '(' → logprob: -1.346595048904419
    3. '(read' → logprob: -3.846595048904419
    4. ')' → logprob: -4.596595287322998
    5. ' (' → logprob: -8.47159481048584
    6. '()' → logprob: -8.59659481048584
    7. '(open' → logprob: -9.22159481048584
    8. '())' → logprob: -9.84659481048584
    9. '(system' → logprob: -9.84659481048584
    10. '(stdin' → logprob: -9.97159481048584

Token 25: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.11356118321418762
    2. 'read' → logprob: -2.2385611534118652
    3. ')' → logprob: -7.738561153411865
    4. ' sys' → logprob: -8.988561630249023
    5. ' readline' → logprob: -9.738561630249023
    6. ' input' → logprob: -9.988561630249023
    7. ' )' → logprob: -10.238561630249023
    8. 'sys' → logprob: -11.363561630249023
    9. '	read' → logprob: -11.613561630249023
    10. '(read' → logprob: -12.113561630249023

Token 26: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0002848152944352478
    2. '_' → logprob: -8.375285148620605
    3. '_line' → logprob: -10.000285148620605
    4. '_in' → logprob: -13.500285148620605
    5. ')_' → logprob: -13.625285148620605
    6. '_output' → logprob: -14.125285148620605
    7. '_inputs' → logprob: -14.125285148620605
    8. '_put' → logprob: -14.125285148620605
    9. '(_' → logprob: -14.250285148620605
    10. '()' → logprob: -14.375285148620605

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03474288433790207
    2. '()' → logprob: -3.409742832183838
    3. '().' → logprob: -7.159742832183838
    4. '()))' → logprob: -9.409743309020996
    5. ' ())' → logprob: -9.534743309020996
    6. ')' → logprob: -10.034743309020996
    7. '()]' → logprob: -10.534743309020996
    8. '()[' → logprob: -10.909743309020996
    9. '();)' → logprob: -11.284743309020996
    10. '());' → logprob: -11.784743309020996

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007317355484701693
    2. 'strip' → logprob: -7.250731945037842
    3. ' split' → logprob: -10.750731468200684
    4. '(split' → logprob: -15.875731468200684
    5. 'rstrip' → logprob: -15.875731468200684
    6. 's' → logprob: -16.750732421875
    7. 'spl' → logprob: -16.875732421875
    8. ')' → logprob: -17.000732421875
    9. ' strip' → logprob: -17.750732421875
    10. '.split' → logprob: -19.750732421875

Token 29: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011485524009913206
    2. '()' → logprob: -7.251148700714111
    3. '()))' → logprob: -7.876148700714111
    4. ')' → logprob: -9.876148223876953
    5. '())
' → logprob: -13.001148223876953
    6. ' ())' → logprob: -13.001148223876953
    7. '()]' → logprob: -14.126148223876953
    8. '))' → logprob: -14.376148223876953
    9. '(' → logprob: -14.501148223876953
    10. '()),' → logprob: -15.251148223876953

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09058285504579544
    2. 'n' → logprob: -3.590582847595215
    3. 'a' → logprob: -3.715582847595215
    4. 'for' → logprob: -4.715582847595215
    5. '#' → logprob: -5.465582847595215
    6. '\' → logprob: -5.465582847595215
    7. 'd' → logprob: -5.590582847595215
    8. 'data' → logprob: -5.715582847595215
    9. '(' → logprob: -5.840582847595215
    10. '```' → logprob: -6.090582847595215

Token 31: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06422901153564453
    2. ' solve' → logprob: -3.6892290115356445
    3. ' get' → logprob: -4.1892290115356445
    4. 'main' → logprob: -5.0642290115356445
    5. ' calculate' → logprob: -5.1892290115356445
    6. ' count' → logprob: -6.1892290115356445
    7. ' process' → logprob: -6.3142290115356445
    8. ' write' → logprob: -6.6892290115356445
    9. 'solve' → logprob: -7.0642290115356445
    10. ' factorial' → logprob: -7.3142290115356445

Token 32: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7034149169921875
    2. '(' → logprob: -1.5784149169921875
    3. '_array' → logprob: -1.9534149169921875
    4. '_data' → logprob: -2.9534149169921875
    5. '()' → logprob: -4.3284149169921875
    6. '_parent' → logprob: -4.4534149169921875
    7. '_list' → logprob: -5.4534149169921875
    8. '_map' → logprob: -5.4534149169921875
    9. '_params' → logprob: -5.5784149169921875
    10. '_(' → logprob: -5.7034149169921875

Token 33: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.2502359449863434
    2. 'mut' → logprob: -2.2502360343933105
    3. 'son' → logprob: -2.3752360343933105
    4. 'm' → logprob: -4.2502360343933105
    5. 's' → logprob: -5.6252360343933105
    6. 'mu' → logprob: -6.5002360343933105
    7. 'formance' → logprob: -6.8752360343933105
    8. 'f' → logprob: -7.5002360343933105
    9. 'ms' → logprob: -8.125235557556152
    10. 'missions' → logprob: -8.375235557556152

Token 34: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47453251481056213
    2. '(n' → logprob: -1.2245324850082397
    3. '():' → logprob: -2.7245326042175293
    4. '()' → logprob: -4.474532604217529
    5. '(size' → logprob: -5.349532604217529
    6. '(len' → logprob: -7.724532604217529
    7. '(N' → logprob: -8.224532127380371
    8. '(length' → logprob: -8.224532127380371
    9. '_list' → logprob: -8.599532127380371
    10. '((' → logprob: -9.099532127380371

Token 35: '_array' (ID: 8766)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017498500645160675
    2. '()' → logprob: -4.39249849319458
    3. 's' → logprob: -6.14249849319458
    4. '():' → logprob: -6.51749849319458
    5. '(n' → logprob: -7.76749849319458
    6. '_' → logprob: -8.142498970031738
    7. '(s' → logprob: -9.642498970031738
    8. '()(' → logprob: -9.642498970031738
    9. '("("' → logprob: -9.767498970031738
    10. '_(' → logprob: -10.017498970031738

Token 36: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0632445216178894
    2. '(n' → logprob: -3.063244581222534
    3. '()' → logprob: -4.688244342803955
    4. '(size' → logprob: -5.438244342803955
    5. '(length' → logprob: -8.313244819641113
    6. '(num' → logprob: -8.813244819641113
    7. '(len' → logprob: -8.813244819641113
    8. ' (' → logprob: -9.688244819641113
    9. '(N' → logprob: -9.813244819641113
    10. '(s' → logprob: -10.063244819641113

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002855397528037429
    2. ',' → logprob: -6.37785530090332
    3. ')' → logprob: -7.25285530090332
    4. ' ):' → logprob: -8.12785530090332
    5. '):
' → logprob: -9.00285530090332
    6. ':' → logprob: -11.62785530090332
    7. '=' → logprob: -12.50285530090332
    8. '):
' → logprob: -12.75285530090332
    9. ')):' → logprob: -14.12785530090332
    10. ' )' → logprob: -14.12785530090332

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002782054478302598
    2. ' return' → logprob: -7.002781867980957
    3. '[' → logprob: -7.127781867980957
    4. ' [' → logprob: -8.877781867980957
    5. 'array' → logprob: -9.002781867980957
    6. 'return' → logprob: -9.002781867980957
    7. ' array' → logprob: -9.252781867980957
    8. '(' → logprob: -9.502781867980957
    9. ':' → logprob: -9.877781867980957
    10. ' ' → logprob: -10.127781867980957

Token 39: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.15135695040225983
    2. '[' → logprob: -2.2763569355010986
    3. '   ' → logprob: -3.6513569355010986
    4. ' return' → logprob: -4.776357173919678
    5. 'return' (adapté à ' return') → logprob: -6.651357173919678
    6. 'arr' → logprob: -8.15135669708252
    7. '[p' → logprob: -8.27635669708252
    8. ' arr' → logprob: -8.90135669708252
    9. ' permutation' → logprob: -8.90135669708252
    10. '[n' → logprob: -9.02635669708252

Token 40: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09090837836265564
    2. ' [' → logprob: -2.4659082889556885
    3. '[N' → logprob: -6.965908527374268
    4. '[n' → logprob: -7.090908527374268
    5. '[int' → logprob: -9.71590805053711
    6. '[[' → logprob: -10.34090805053711
    7. '[np' → logprob: -11.09090805053711
    8. '[i' → logprob: -11.59090805053711
    9. '[len' → logprob: -12.09090805053711
    10. '[-' → logprob: -12.09090805053711

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005744783557020128
    2. 'False' → logprob: -7.875574588775635
    3. ' ' → logprob: -9.625574111938477
    4. '-' → logprob: -10.125574111938477
    5. '1' → logprob: -10.375574111938477
    6. '(' → logprob: -11.000574111938477
    7. 'int' → logprob: -11.625574111938477
    8. '[' → logprob: -12.000574111938477
    9. 'float' → logprob: -12.250574111938477
    10. 'None' → logprob: -12.500574111938477

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4308374226093292
    2. ']*(' → logprob: -1.6808373928070068
    3. ' for' → logprob: -2.180837392807007
    4. 'for' → logprob: -3.180837392807007
    5. ']*' → logprob: -4.680837631225586
    6. ']+' → logprob: -11.055837631225586
    7. '	for' → logprob: -11.555837631225586
    8. ' ]' → logprob: -11.805837631225586
    9. 'if' → logprob: -12.430837631225586
    10. ')' → logprob: -13.055837631225586

Token 43: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3465694487094879
    2. 'for' → logprob: -1.3465694189071655
    3. ']*(' → logprob: -3.846569538116455
    4. ']' → logprob: -4.846569538116455
    5. ']*' → logprob: -5.721569538116455
    6. '   ' → logprob: -8.721569061279297
    7. '	for' → logprob: -10.096569061279297
    8. ']+' → logprob: -10.346569061279297
    9. ' ]' → logprob: -11.846569061279297
    10. ' ' → logprob: -12.346569061279297

Token 44: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004105827305465937
    2. '(' → logprob: -5.754106044769287
    3. 'N' → logprob: -7.879106044769287
    4. '(n' → logprob: -8.379105567932129
    5. ' (' → logprob: -8.754105567932129
    6. '(i' → logprob: -9.629105567932129
    7. '(j' → logprob: -11.129105567932129
    8. '2' → logprob: -11.254105567932129
    9. '(max' → logprob: -11.629105567932129
    10. '3' → logprob: -11.879105567932129

Token 45: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0014939149841666222
    2. ' N' → logprob: -6.75149393081665
    3. '(N' → logprob: -8.751493453979492
    4. 'i' → logprob: -9.001493453979492
    5. '(' → logprob: -11.126493453979492
    6. '2' → logprob: -12.001493453979492
    7. ' (' → logprob: -12.251493453979492
    8. ' ' → logprob: -12.501493453979492
    9. '   ' → logprob: -12.501493453979492
    10. '(i' → logprob: -13.626493453979492

Token 46: ' *' (ID: 425)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.19352160394191742
    2. ' *' → logprob: -2.193521499633789
    3. '*' → logprob: -2.818521499633789
    4. '**' → logprob: -5.818521499633789
    5. 'N' → logprob: -6.943521499633789
    6. ' **' → logprob: -8.318521499633789
    7. '0' → logprob: -9.193521499633789
    8. ')' → logprob: -9.318521499633789
    9. '*n' → logprob: -9.568521499633789
    10. ' ' → logprob: -9.818521499633789

Token 47: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00036144492332823575
    2. ' N' → logprob: -8.000361442565918
    3. '*N' → logprob: -10.875361442565918
    4. '*' → logprob: -13.000361442565918
    5. '(N' → logprob: -13.625361442565918
    6. ' ' → logprob: -14.125361442565918
    7. '**' → logprob: -14.250361442565918
    8. ' *' → logprob: -14.625361442565918
    9. '	N' → logprob: -14.875361442565918
    10. '(' → logprob: -15.500361442565918

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35574328899383545
    2. ' +' → logprob: -1.2307432889938354
    3. ')' → logprob: -5.105743408203125
    4. '-' → logprob: -7.730743408203125
    5. ' -' → logprob: -8.230743408203125
    6. ' ' → logprob: -8.605743408203125
    7. '1' → logprob: -9.605743408203125
    8. ' )' → logprob: -9.855743408203125
    9. '+)' → logprob: -10.105743408203125
    10. ')]' → logprob: -10.480743408203125

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14520186185836792
    2. '2' → logprob: -2.0202019214630127
    3. ' ' → logprob: -6.270201683044434
    4. '3' → logprob: -7.520201683044434
    5. 'N' → logprob: -10.020201683044434
    6. '4' → logprob: -11.020201683044434
    7. ' N' → logprob: -11.832701683044434
    8. '   ' → logprob: -12.207701683044434
    9. '5' → logprob: -12.332701683044434
    10. ')' → logprob: -13.707701683044434

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22664226591587067
    2. '2' → logprob: -1.6016422510147095
    3. '3' → logprob: -6.85164213180542
    4. ' ' → logprob: -9.101642608642578
    5. '4' → logprob: -10.414142608642578
    6. '5' → logprob: -11.726642608642578
    7. '```' → logprob: -12.726642608642578
    8. ')' → logprob: -13.289142608642578
    9. '   ' → logprob: -13.351642608642578
    10. '6' → logprob: -13.414142608642578

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015252305194735527
    2. ' for' → logprob: -4.890252113342285
    3. 'for' → logprob: -5.140252113342285
    4. ' )' → logprob: -6.640252113342285
    5. '+' → logprob: -8.765252113342285
    6. ' ' → logprob: -9.390252113342285
    7. '   ' → logprob: -9.515252113342285
    8. ')]' → logprob: -10.015252113342285
    9. ' +' → logprob: -10.765252113342285
    10. ']' → logprob: -11.390252113342285

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31331413984298706
    2. 'for' → logprob: -1.3133141994476318
    3. '	for' → logprob: -11.063314437866211
    4. '   ' → logprob: -11.313314437866211
    5. ' ' → logprob: -11.688314437866211
    6. '+' → logprob: -12.063314437866211
    7. ')' → logprob: -12.938314437866211
    8. '  ' → logprob: -13.563314437866211
    9. '    ' → logprob: -13.688314437866211
    10. '```' → logprob: -13.938314437866211

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0337165892124176
    2. 'i' → logprob: -3.4087166786193848
    3. ' in' → logprob: -10.908716201782227
    4. ' range' → logprob: -11.158716201782227
    5. 'range' → logprob: -11.408716201782227
    6. ' _' → logprob: -11.408716201782227
    7. '	i' → logprob: -12.408716201782227
    8. ' ' → logprob: -12.533716201782227
    9. '_i' → logprob: -13.033716201782227
    10. '_' → logprob: -13.158716201782227

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018535945564508438
    2. 'in' → logprob: -4.01853609085083
    3. 'range' → logprob: -8.268535614013672
    4. ' range' → logprob: -9.143535614013672
    5. '<|end|>' → logprob: -11.018535614013672
    6. '(range' → logprob: -12.893535614013672
    7. ' ' → logprob: -13.268535614013672
    8. '<|end|>' → logprob: -15.143535614013672
    9. ')' → logprob: -15.268535614013672
    10. '	range' → logprob: -15.268535614013672

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804252669215202
    2. 'range' → logprob: -3.2880425453186035
    3. '	range' → logprob: -14.288042068481445
    4. '(range' → logprob: -15.288042068481445
    5. ' xrange' → logprob: -16.538042068481445
    6. ' ' → logprob: -18.913042068481445
    7. '_range' → logprob: -19.163042068481445
    8. 'Range' → logprob: -19.288042068481445
    9. '```' → logprob: -19.538042068481445
    10. '.range' → logprob: -19.538042068481445

Token 56: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02975187823176384
    2. '(' → logprob: -3.529751777648926
    3. '(n' → logprob: -14.029751777648926
    4. ' (' → logprob: -15.404751777648926
    5. '(
' → logprob: -15.654751777648926
    6. '(len' → logprob: -16.279752731323242
    7. '(i' → logprob: -16.654752731323242
    8. '((' → logprob: -16.904752731323242
    9. '(I' → logprob: -17.904752731323242
    10. '```' → logprob: -18.154752731323242

Token 57: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019817621796391904
    2. ' )' → logprob: -8.875198364257812
    3. ')' → logprob: -10.750198364257812
    4. '+' → logprob: -10.750198364257812
    5. ')])' → logprob: -12.000198364257812
    6. ']' → logprob: -12.875198364257812
    7. ' ]' → logprob: -13.250198364257812
    8. '   ' → logprob: -14.000198364257812
    9. ' ' → logprob: -14.250198364257812
    10. ')]
' → logprob: -14.500198364257812

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013307139743119478
    2. ' ' → logprob: -6.626330852508545
    3. '2' → logprob: -12.376330375671387
    4. '(' → logprob: -15.251330375671387
    5. '```' → logprob: -15.626330375671387
    6. '   ' → logprob: -16.626331329345703
    7. ')' → logprob: -16.751331329345703
    8. '
' → logprob: -16.876331329345703
    9. ' ' → logprob: -17.063831329345703
    10. '  ' → logprob: -17.751331329345703

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '2' → logprob: -11.500011444091797
    3. ' ' → logprob: -13.625011444091797
    4. '```' → logprob: -16.375011444091797
    5. '3' → logprob: -18.375011444091797
    6. '0' → logprob: -18.562511444091797
    7. '(' → logprob: -18.812511444091797
    8. '7' → logprob: -19.437511444091797
    9. ')' → logprob: -19.437511444091797
    10. '   ' → logprob: -19.687511444091797

Token 60: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.976922744186595e-05
    2. ']' → logprob: -10.500040054321289
    3. ')' → logprob: -11.500040054321289
    4. ')])' → logprob: -14.000040054321289
    5. '])]' → logprob: -14.625040054321289
    6. ' )' → logprob: -15.375040054321289
    7. ')]
' → logprob: -16.00004005432129
    8. '])' → logprob: -16.12504005432129
    9. '))' → logprob: -16.37504005432129
    10. ')],' → logprob: -17.12504005432129

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04956800490617752
    2. '
' → logprob: -3.549567937850952
    3. '

' → logprob: -4.674568176269531
    4. '```' → logprob: -5.049568176269531
    5. '\' → logprob: -6.549568176269531
    6. '<|end|>' → logprob: -7.299568176269531
    7. '#' → logprob: -8.049568176269531
    8. '[' → logprob: -8.424568176269531
    9. 'newline' → logprob: -8.424568176269531
    10. ')' → logprob: -8.549568176269531

Token 62: ' set' (ID: 920)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3016010522842407
    2. ' calculate' → logprob: -2.051600933074951
    3. ' compute' → logprob: -2.926600933074951
    4. ' calc' → logprob: -3.301600933074951
    5. ' factorial' → logprob: -4.801600933074951
    6. ' solve' → logprob: -5.176600933074951
    7. ' main' → logprob: -5.301600933074951
    8. ' get' → logprob: -5.676600933074951
    9. ' init' → logprob: -5.801600933074951
    10. ' find' → logprob: -6.426600933074951

Token 63: '_base' (ID: 17096)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.3706187307834625
    2. '_' → logprob: -1.2456187009811401
    3. '_initial' → logprob: -4.99561882019043
    4. '_perm' → logprob: -6.24561882019043
    5. '_p' → logprob: -6.37061882019043
    6. '_base' → logprob: -6.37061882019043
    7. '_up' → logprob: -6.49561882019043
    8. ' _' → logprob: -6.74561882019043
    9. '_count' → logprob: -6.99561882019043
    10. '_max' → logprob: -7.24561882019043

Token 64: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.4419306218624115
    2. '_cases' → logprob: -1.5669306516647339
    3. '_values' → logprob: -2.3169305324554443
    4. '_' → logprob: -3.1919305324554443
    5. '_conditions' → logprob: -5.941930770874023
    6. '_counts' → logprob: -6.191930770874023
    7. '_line' → logprob: -6.191930770874023
    8. '_count' → logprob: -7.441930770874023
    9. '_per' → logprob: -7.816930770874023
    10. '_array' → logprob: -8.566930770874023

Token 65: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49038347601890564
    2. '(per' → logprob: -1.490383505821228
    3. '():' → logprob: -2.9903833866119385
    4. '(P' → logprob: -3.1153833866119385
    5. '(p' → logprob: -3.1153833866119385
    6. '(arr' → logprob: -4.865383625030518
    7. '(array' → logprob: -5.240383625030518
    8. '_per' → logprob: -5.990383625030518
    9. '(N' → logprob: -6.490383625030518
    10. '((' → logprob: -7.240383625030518

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14814142882823944
    2. ',' → logprob: -2.148141384124756
    3. ')' → logprob: -4.023141384124756
    4. '[' → logprob: -6.148141384124756
    5. ',N' → logprob: -8.898141860961914
    6. '):
' → logprob: -9.023141860961914
    7. '[]):' → logprob: -9.273141860961914
    8. ' ):' → logprob: -9.523141860961914
    9. ')]' → logprob: -9.773141860961914
    10. ' ,' → logprob: -9.898141860961914

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1856774538755417
    2. 'A' → logprob: -1.810677409172058
    3. ' A' → logprob: -5.185677528381348
    4. '```' → logprob: -8.935677528381348
    5. '[A' → logprob: -9.560677528381348
    6. '	A' → logprob: -10.310677528381348
    7. '[' → logprob: -10.560677528381348
    8. '       ' → logprob: -11.060677528381348
    9. ' ' → logprob: -11.185677528381348
    10. '(A' → logprob: -11.810677528381348

Token 68: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.05722993239760399
    2. 'for' → logprob: -3.807229995727539
    3. ' A' → logprob: -4.057229995727539
    4. '   ' → logprob: -4.307229995727539
    5. ' for' → logprob: -6.057229995727539
    6. 'if' → logprob: -8.807229995727539
    7. ' ' → logprob: -9.932229995727539
    8. ' if' → logprob: -11.057229995727539
    9. '[' → logprob: -11.182229995727539
    10. '```' → logprob: -11.557229995727539

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -14.000001907348633
    3. '0' → logprob: -14.875001907348633
    4. '\[' → logprob: -15.000001907348633
    5. '```' → logprob: -15.125001907348633
    6. 'def' → logprob: -16.125001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '=' → logprob: -17.750001907348633
    9. '[A' → logprob: -17.875001907348633
    10. '1' → logprob: -18.000001907348633

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003205161774531007
    2. '1' → logprob: -5.753205299377441
    3. '[' → logprob: -11.378205299377441
    4. ' ' → logprob: -11.753205299377441
    5. '][' → logprob: -12.753205299377441
    6. '2' → logprob: -13.003205299377441
    7. ']' → logprob: -13.128205299377441
    8. ')' → logprob: -15.503205299377441
    9. '-' → logprob: -15.940705299377441
    10. '3' → logprob: -15.940705299377441

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009305141866207123
    2. ']' → logprob: -7.125930309295654
    3. '[' → logprob: -9.500930786132812
    4. ' ][' → logprob: -10.250930786132812
    5. '])' → logprob: -12.125930786132812
    6. '][-' → logprob: -12.750930786132812
    7. ')][' → logprob: -13.125930786132812
    8. ']=' → logprob: -13.875930786132812
    9. ']][' → logprob: -14.000930786132812
    10. '][]' → logprob: -14.375930786132812

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006253096275031567
    2. '1' → logprob: -5.256253242492676
    3. 'N' → logprob: -7.006253242492676
    4. '2' → logprob: -10.631253242492676
    5. '-' → logprob: -10.881253242492676
    6. 'len' → logprob: -11.256253242492676
    7. ']' → logprob: -11.381253242492676
    8. 'A' → logprob: -11.631253242492676
    9. ' ' → logprob: -12.131253242492676
    10. 'i' → logprob: -12.256253242492676

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000918604782782495
    2. ']=' → logprob: -7.000918388366699
    3. ' ]' → logprob: -12.1259183883667
    4. ']+=' → logprob: -14.2509183883667
    5. '=' → logprob: -14.5009183883667
    6. ']==' → logprob: -15.2509183883667
    7. '][' → logprob: -16.000919342041016
    8. ']
' → logprob: -16.750919342041016
    9. '[' → logprob: -17.250919342041016
    10. ']=(' → logprob: -17.500919342041016

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021055489778519
    2. ' =' → logprob: -2.350210666656494
    3. '[' → logprob: -13.475210189819336
    4. '1' → logprob: -13.975210189819336
    5. '+=' → logprob: -14.850210189819336
    6. ' ' → logprob: -15.225210189819336
    7. ']=' → logprob: -15.600210189819336
    8. ']' → logprob: -15.725210189819336
    9. ' +=' → logprob: -15.725210189819336
    10. '.=' → logprob: -16.225210189819336

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.100059156073257e-05
    2. ' ' → logprob: -9.875070571899414
    3. '0' → logprob: -11.000070571899414
    4. '2' → logprob: -14.250070571899414
    5. '   ' → logprob: -14.312570571899414
    6. '  ' → logprob: -15.000070571899414
    7. 'A' → logprob: -15.187570571899414
    8. '-' → logprob: -16.062570571899414
    9. '[' → logprob: -16.437570571899414
    10. '    ' → logprob: -16.937570571899414

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. '0' → logprob: -10.875031471252441
    3. ' ' → logprob: -11.375031471252441
    4. '2' → logprob: -15.187531471252441
    5. '-' → logprob: -15.500031471252441
    6. 'A' → logprob: -16.375032424926758
    7. '[' → logprob: -16.437532424926758
    8. '  ' → logprob: -16.750032424926758
    9. '(' → logprob: -16.875032424926758
    10. '11' → logprob: -16.937532424926758

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' update' (ID: 4027)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8419009447097778
    2. ' count' → logprob: -1.7169009447097778
    3. ' compute' → logprob: -1.9669009447097778
    4. ' set' → logprob: -2.5919008255004883
    5. ' calc' → logprob: -2.8419008255004883
    6. ' def' → logprob: -2.9669008255004883
    7. ' solve' → logprob: -4.091900825500488
    8. ' get' → logprob: -4.591900825500488
    9. ' init' → logprob: -4.966900825500488
    10. ' multiply' → logprob: -5.091900825500488

Token 80: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.1535767912864685
    2. '_counts' → logprob: -2.9035768508911133
    3. '_count' → logprob: -3.2785768508911133
    4. '_array' → logprob: -3.5285768508911133
    5. '_' → logprob: -4.653576850891113
    6. '(A' → logprob: -4.903576850891113
    7. '_perm' → logprob: -6.653576850891113
    8. '_(' → logprob: -7.403576850891113
    9. '_arr' → logprob: -8.028576850891113
    10. '_arrays' → logprob: -8.278576850891113

Token 81: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -7.636475493200123e-05
    2. 'm' → logprob: -10.500076293945312
    3. 'mut' → logprob: -10.750076293945312
    4. 'rm' → logprob: -11.250076293945312
    5. 'r' → logprob: -12.250076293945312
    6. 'mission' → logprob: -12.625076293945312
    7. '```' → logprob: -13.000076293945312
    8. 'utation' → logprob: -14.125076293945312
    9. '1' → logprob: -14.125076293945312
    10. 'mu' → logprob: -14.375076293945312

Token 82: '_counts' (ID: 61971)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.05658961459994316
    2. '_counts' → logprob: -2.9315896034240723
    3. 's' → logprob: -7.056589603424072
    4. '_array' → logprob: -7.306589603424072
    5. '_' → logprob: -9.80659008026123
    6. '_counter' → logprob: -10.80659008026123
    7. 'count' → logprob: -10.93159008026123
    8. '_arrays' → logprob: -11.43159008026123
    9. '_s' → logprob: -11.55659008026123
    10. '_sum' → logprob: -11.68159008026123

Token 83: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.014351537451148033
    2. '(' → logprob: -4.2643513679504395
    3. '(N' → logprob: -8.639351844787598
    4. ' (' → logprob: -12.264351844787598
    5. '(a' → logprob: -12.889351844787598
    6. '(
' → logprob: -13.139351844787598
    7. '\(' → logprob: -15.139351844787598
    8. '(I' → logprob: -15.389351844787598
    9. '```' → logprob: -15.514351844787598
    10. '(

' → logprob: -15.514351844787598

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004978670622222126
    2. ' ,' → logprob: -8.250497817993164
    3. ',N' → logprob: -8.625497817993164
    4. ',i' → logprob: -10.250497817993164
    5. ',n' → logprob: -11.250497817993164
    6. '):' → logprob: -12.500497817993164
    7. '   ' → logprob: -13.500497817993164
    8. ',A' → logprob: -14.125497817993164
    9. 'N' → logprob: -14.750497817993164
    10. ' ' → logprob: -15.250497817993164

Token 85: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5032153129577637
    2. 'i' → logprob: -1.7532153129577637
    3. ' N' → logprob: -2.0032153129577637
    4. ' i' → logprob: -3.1282153129577637
    5. 'n' → logprob: -3.7532153129577637
    6. ' n' → logprob: -5.253215312957764
    7. 'k' → logprob: -5.253215312957764
    8. 'A' → logprob: -6.378215312957764
    9. ' k' → logprob: -6.878215312957764
    10. 'j' → logprob: -6.878215312957764

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004332560580223799
    2. '):' → logprob: -5.504332542419434
    3. ' ,' → logprob: -8.504332542419434
    4. ')' → logprob: -10.379332542419434
    5. ',
' → logprob: -12.879332542419434
    6. ' ):' → logprob: -13.004332542419434
    7. ',i' → logprob: -13.004332542419434
    8. '   ' → logprob: -13.129332542419434
    9. '):
' → logprob: -13.254332542419434
    10. ',n' → logprob: -13.504332542419434

Token 87: ' P' (ID: 398)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0178966522216797
    2. ' K' → logprob: -1.3928966522216797
    3. ' k' → logprob: -2.5178966522216797
    4. ' i' → logprob: -3.0178966522216797
    5. 'M' → logprob: -3.3928966522216797
    6. 'k' → logprob: -3.5178966522216797
    7. 'K' → logprob: -3.5178966522216797
    8. ' A' → logprob: -3.8928966522216797
    9. ' mod' → logprob: -4.14289665222168
    10. ' p' → logprob: -4.89289665222168

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6631779074668884
    2. '):
' → logprob: -0.9131779074668884
    3. ',' → logprob: -2.788177967071533
    4. '):
' → logprob: -4.413177967071533
    5. 'erm' → logprob: -5.663177967071533
    6. ')' → logprob: -6.663177967071533
    7. '):

' → logprob: -7.038177967071533
    8. 'ermut' → logprob: -7.038177967071533
    9. 'ar' → logprob: -7.538177967071533
    10. 'r' → logprob: -7.913177967071533

Token 89: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6388600468635559
    2. '   ' → logprob: -0.8888600468635559
    3. ':' → logprob: -3.388859987258911
    4. 'for' → logprob: -4.51386022567749
    5. '<|end|>' → logprob: -5.13886022567749
    6. ',' → logprob: -5.88886022567749
    7. '```' → logprob: -6.01386022567749
    8. '
' → logprob: -6.38886022567749
    9. '	for' → logprob: -6.38886022567749
    10. ' ' → logprob: -7.51386022567749

Token 90: ' def' (ID: 1056)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43798425793647766
    2. 'for' → logprob: -1.0629842281341553
    3. '   ' → logprob: -4.687984466552734
    4. '```' → logprob: -10.687984466552734
    5. '	for' → logprob: -11.937984466552734
    6. 'def' (adapté à ' def') → logprob: -13.687984466552734
    7. '``' → logprob: -13.687984466552734
    8. ' ' → logprob: -14.187984466552734
    9. '
' → logprob: -14.312984466552734
    10. '    
' → logprob: -14.687984466552734

Token 91: ' add' (ID: 1147)
  Prédit: ' helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' helper' → logprob: -0.7982495427131653
    2. ' inner' → logprob: -1.7982494831085205
    3. ' dfs' → logprob: -2.2982494831085205
    4. ' factorial' → logprob: -2.2982494831085205
    5. ' comb' → logprob: -2.9232494831085205
    6. ' compute' → logprob: -4.2982497215271
    7. ' count' → logprob: -4.4232497215271
    8. ' update' → logprob: -4.4232497215271
    9. ' dp' → logprob: -4.5482497215271
    10. ' calc' → logprob: -4.6732497215271

Token 92: '_and' (ID: 18645)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1465981006622314
    2. '(a' → logprob: -1.2715981006622314
    3. '_' → logprob: -2.0215981006622314
    4. '(i' → logprob: -2.1465981006622314
    5. '(' → logprob: -2.2715981006622314
    6. '_counts' → logprob: -4.646597862243652
    7. '(A' → logprob: -5.896597862243652
    8. '(_' → logprob: -6.021597862243652
    9. '_one' → logprob: -6.021597862243652
    10. '(s' → logprob: -6.146597862243652

Token 93: '_reduce' (ID: 165367)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.2803010046482086
    2. '_sub' → logprob: -2.905301094055176
    3. '_m' → logprob: -3.405301094055176
    4. '_set' → logprob: -3.530301094055176
    5. '_check' → logprob: -3.655301094055176
    6. '_assign' → logprob: -3.655301094055176
    7. '_mod' → logprob: -4.280301094055176
    8. '_count' → logprob: -4.405301094055176
    9. '_get' → logprob: -4.905301094055176
    10. '_cl' → logprob: -5.780301094055176

Token 94: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.49561554193496704
    2. '(x' → logprob: -0.995615541934967
    3. '(' → logprob: -3.9956154823303223
    4. '(i' → logprob: -5.995615482330322
    5. ' (' → logprob: -9.24561595916748
    6. '(value' → logprob: -9.74561595916748
    7. '(A' → logprob: -9.99561595916748
    8. '(n' → logprob: -9.99561595916748
    9. '(num' → logprob: -10.24561595916748
    10. '(val' → logprob: -10.49561595916748

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005564924795180559
    2. ',b' → logprob: -5.6305646896362305
    3. ' ,' → logprob: -6.6305646896362305
    4. '):' → logprob: -7.8805646896362305
    5. ',a' → logprob: -9.63056468963623
    6. 'rray' → logprob: -10.38056468963623
    7. 'b' → logprob: -10.38056468963623
    8. ',n' → logprob: -11.00556468963623
    9. '   ' → logprob: -11.88056468963623
    10. ',i' → logprob: -12.00556468963623

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02757965214550495
    2. ' b' → logprob: -3.6525795459747314
    3. 'mod' → logprob: -7.4025797843933105
    4. 'p' → logprob: -8.402579307556152
    5. 'm' → logprob: -8.902579307556152
    6. ' mod' → logprob: -9.402579307556152
    7. ' modulus' → logprob: -9.902579307556152
    8. ' ' → logprob: -10.652579307556152
    9. ' p' → logprob: -10.777579307556152
    10. 'MOD' → logprob: -10.902579307556152

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009100330644287169
    2. ',' → logprob: -7.875909805297852
    3. '):
' → logprob: -7.875909805297852
    4. ' ):' → logprob: -9.875909805297852
    5. ':' → logprob: -10.125909805297852
    6. ')' → logprob: -10.750909805297852
    7. '=' → logprob: -11.125909805297852
    8. '):
' → logprob: -11.875909805297852
    9. '   ' → logprob: -12.500909805297852
    10. ' ' → logprob: -12.500909805297852

Token 98: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22876925766468048
    2. '       ' → logprob: -1.728769302368164
    3. '):' → logprob: -4.478769302368164
    4. ':
' → logprob: -5.478769302368164
    5. '<|end|>' → logprob: -6.228769302368164
    6. ':return' → logprob: -6.478769302368164
    7. '():' → logprob: -6.728769302368164
    8. '<|end|>' → logprob: -6.853769302368164
    9. '(a' → logprob: -6.978769302368164
    10. '):
' → logprob: -6.978769302368164

Token 99: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1310710906982422
    2. 'return' → logprob: -1.1310710906982422
    3. ' return' → logprob: -1.1310710906982422
    4. '   ' → logprob: -3.881071090698242
    5. ' (' → logprob: -5.506071090698242
    6. 'a' (adapté à ' a') → logprob: -6.381071090698242
    7. '(a' → logprob: -6.381071090698242
    8. ' a' → logprob: -7.381071090698242
    9. 'c' → logprob: -7.381071090698242
    10. ' s' → logprob: -7.631071090698242

Token 100: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3207170069217682
    2. ' +' → logprob: -1.4457169771194458
    3. '=' → logprob: -4.195716857910156
    4. ',' → logprob: -4.570716857910156
    5. ' =' → logprob: -4.695716857910156
    6. ' +=' → logprob: -6.445716857910156
    7. '+=' → logprob: -6.570716857910156
    8. ' ' → logprob: -7.570716857910156
    9. '+b' → logprob: -8.070716857910156
    10. '[' → logprob: -8.945716857910156

Token 101: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0429999977350235
    2. ' b' → logprob: -3.1679999828338623
    3. '   ' → logprob: -14.668000221252441
    4. ' ' → logprob: -15.543000221252441
    5. '	b' → logprob: -16.167999267578125
    6. '    ' → logprob: -18.167999267578125
    7. '  ' → logprob: -18.292999267578125
    8. ' ' → logprob: -18.542999267578125
    9. '```' → logprob: -18.917999267578125
    10. 'int' → logprob: -19.042999267578125

Token 102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1770946979522705
    2. '       ' → logprob: -2.9270946979522705
    3. '<|end|>' → logprob: -3.3020946979522705
    4. '%' → logprob: -3.6770946979522705
    5. ' %' → logprob: -3.9270946979522705
    6. '   ' → logprob: -4.177094459533691
    7. '<|end|>' → logprob: -5.177094459533691
    8. ' if' → logprob: -6.427094459533691
    9. '
' → logprob: -6.552094459533691
    10. '[' → logprob: -7.427094459533691

Token 103: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1102493479847908
    2. '       ' → logprob: -2.4852492809295654
    3. '<|end|>' → logprob: -4.3602495193481445
    4. '   ' → logprob: -5.7352495193481445
    5. '%' → logprob: -6.3602495193481445
    6. '
' → logprob: -6.8602495193481445
    7. ' %' → logprob: -7.1102495193481445
    8. ' if' → logprob: -7.4852495193481445
    9. '<|end|>' → logprob: -7.9852495193481445
    10. '    
' → logprob: -9.360249519348145

Token 104: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.531883180141449
    2. ' if' → logprob: -1.2818832397460938
    3. '       ' → logprob: -2.6568832397460938
    4. 'return' → logprob: -3.0318832397460938
    5. ' return' → logprob: -4.656883239746094
    6. 'a' → logprob: -5.781883239746094
    7. '   ' → logprob: -6.031883239746094
    8. ' a' → logprob: -7.031883239746094
    9. ' ' → logprob: -9.031883239746094
    10. '           ' → logprob: -9.281883239746094

Token 105: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5232595801353455
    2. 'a' → logprob: -0.8982595801353455
    3. '   ' → logprob: -9.648259162902832
    4. ' ' → logprob: -10.523259162902832
    5. '	a' → logprob: -10.648259162902832
    6. '(a' → logprob: -11.648259162902832
    7. '(' → logprob: -12.523259162902832
    8. '    ' → logprob: -13.523259162902832
    9. '  ' → logprob: -13.773259162902832
    10. '>' → logprob: -14.335759162902832

Token 106: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5234717726707458
    2. '>=' → logprob: -0.8984717726707458
    3. '>' → logprob: -8.39847183227539
    4. ' >' → logprob: -9.64847183227539
    5. '[' → logprob: -10.89847183227539
    6. ']>=' → logprob: -11.27347183227539
    7. ')>=' → logprob: -11.27347183227539
    8. ' ' → logprob: -12.14847183227539
    9. ')' → logprob: -13.14847183227539
    10. '   ' → logprob: -13.27347183227539

Token 107: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.25819092988967896
    2. '100' → logprob: -2.008190870285034
    3. ' P' → logprob: -3.133190870285034
    4. '10' → logprob: -3.633190870285034
    5. ' ' → logprob: -4.508191108703613
    6. '998' → logprob: -4.758191108703613
    7. 'MOD' → logprob: -6.758191108703613
    8. '1' → logprob: -7.383191108703613
    9. '2' → logprob: -7.633191108703613
    10. '200' → logprob: -8.133191108703613

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3486108183860779
    2. ':
' → logprob: -1.2236108779907227
    3. '       ' → logprob: -9.723610877990723
    4. '):
' → logprob: -10.348610877990723
    5. '   ' → logprob: -10.848610877990723
    6. ':a' → logprob: -10.848610877990723
    7. ' :' → logprob: -12.098610877990723
    8. ':
' → logprob: -12.223610877990723
    9. '):' → logprob: -12.223610877990723
    10. ' :
' → logprob: -12.348610877990723

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.319227397441864
    2. 'a' → logprob: -1.4442274570465088
    3. ' a' → logprob: -3.319227457046509
    4. ' return' → logprob: -7.94422721862793
    5. '       ' → logprob: -8.19422721862793
    6. 'return' → logprob: -8.44422721862793
    7. '	       ' → logprob: -8.69422721862793
    8. ',a' → logprob: -9.81922721862793
    9. '	a' → logprob: -10.94422721862793
    10. ',' → logprob: -11.06922721862793

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.3884356915950775
    2. ' a' → logprob: -1.1384357213974
    3. '           ' → logprob: -6.6384358406066895
    4. '       ' → logprob: -8.388435363769531
    5. '               ' → logprob: -11.888435363769531
    6. '	a' → logprob: -12.138435363769531
    7. ' return' → logprob: -12.263435363769531
    8. '   ' → logprob: -12.388435363769531
    9. 'return' → logprob: -12.763435363769531
    10. ' ' → logprob: -13.263435363769531

Token 111: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6951689720153809
    2. '-=' → logprob: -0.6951689720153809
    3. '   ' → logprob: -6.945168972015381
    4. '-' → logprob: -6.945168972015381
    5. '           ' → logprob: -10.445169448852539
    6. '       ' → logprob: -10.945169448852539
    7. ' -' → logprob: -11.320169448852539
    8. ' ' → logprob: -11.695169448852539
    9. '=' → logprob: -11.695169448852539
    10. '```' → logprob: -12.320169448852539

Token 112: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.006715370807796717
    2. ' P' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.506715774536133
    4. '>P' → logprob: -17.631715774536133
    5. '=P' → logprob: -18.381715774536133
    6. '	P' → logprob: -18.506715774536133
    7. ',P' → logprob: -18.631715774536133
    8. '<|end|>' → logprob: -19.006715774536133
    9. '   ' → logprob: -19.131715774536133
    10. 'p' → logprob: -19.256715774536133

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029068700969219208
    2. 'return' → logprob: -6.877906799316406
    3. '
' → logprob: -7.127906799316406
    4. '   ' → logprob: -7.127906799316406
    5. ' return' → logprob: -8.377906799316406
    6. '	return' → logprob: -11.377906799316406
    7. '           ' → logprob: -11.877906799316406
    8. ',' → logprob: -12.252906799316406
    9. 'def' → logprob: -12.252906799316406
    10. '<|end|>' → logprob: -12.627906799316406

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017159747949335724
    2. '   ' → logprob: -8.875171661376953
    3. 'return' → logprob: -10.750171661376953
    4. '           ' → logprob: -12.750171661376953
    5. ' return' → logprob: -12.750171661376953
    6. 'def' → logprob: -13.250171661376953
    7. '<|end|>' → logprob: -14.500171661376953
    8. ',' → logprob: -14.625171661376953
    9. 'import' → logprob: -14.625171661376953
    10. '	return' → logprob: -14.875171661376953

Token 115: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013756176456809044
    2. 'return' (adapté à ' return') → logprob: -5.138756275177002
    3. ' return' → logprob: -5.388756275177002
    4. '   ' → logprob: -5.763756275177002
    5. 'def' → logprob: -9.388755798339844
    6. '           ' → logprob: -13.513755798339844
    7. ' ' → logprob: -13.638755798339844
    8. 'import' → logprob: -13.763755798339844
    9. '	return' → logprob: -14.388755798339844
    10. '
' → logprob: -14.513755798339844

Token 116: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868752717971802
    2. ' a' → logprob: -1.1368752717971802
    3. ' ' → logprob: -12.51187515258789
    4. '	a' → logprob: -15.13687515258789
    5. '  ' → logprob: -16.63687515258789
    6. '_a' → logprob: -16.76187515258789
    7. ' ' → logprob: -17.76187515258789
    8. ''a' → logprob: -18.26187515258789
    9. '(a' → logprob: -18.44937515258789
    10. '   ' → logprob: -18.44937515258789

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2992711365222931
    2. '   ' → logprob: -1.4242711067199707
    3. '    
' → logprob: -4.299271106719971
    4. '<|end|>' → logprob: -5.674271106719971
    5. '

' → logprob: -7.924271106719971
    6. '  
' → logprob: -9.299271583557129
    7. '
' → logprob: -9.299271583557129
    8. '<|end|>' → logprob: -9.674271583557129
    9. 'for' → logprob: -9.924271583557129
    10. '        
' → logprob: -10.174271583557129

Token 119: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036680642515420914
    2. 'for' (adapté à ' for') → logprob: -3.5366806983947754
    3. ' for' → logprob: -5.286680698394775
    4. '
' → logprob: -6.661680698394775
    5. '    
' → logprob: -7.536680698394775
    6. 'n' → logprob: -11.411680221557617
    7. 'def' → logprob: -12.286680221557617
    8. '  
' → logprob: -12.411680221557617
    9. '<|end|>' → logprob: -12.786680221557617
    10. '   
' → logprob: -13.411680221557617

Token 120: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001949344645254314
    2. 'i' → logprob: -6.251949310302734
    3. ' range' → logprob: -11.501949310302734
    4. ' ' → logprob: -13.251949310302734
    5. ' j' → logprob: -13.876949310302734
    6. ' _' → logprob: -13.876949310302734
    7. ')' → logprob: -13.876949310302734
    8. ' n' → logprob: -14.001949310302734
    9. '_i' → logprob: -14.126949310302734
    10. '`' → logprob: -14.376949310302734

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002197717549279332
    2. 'in' → logprob: -6.127197742462158
    3. ' ' → logprob: -11.502197265625
    4. ',' → logprob: -14.377197265625
    5. '   ' → logprob: -14.627197265625
    6. '	in' → logprob: -14.877197265625
    7. '  ' → logprob: -15.002197265625
    8. 'n' → logprob: -15.877197265625
    9. 'range' → logprob: -16.127197265625
    10. '1' → logprob: -16.502197265625

Token 122: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575958251953125
    2. 'range' → logprob: -0.825958251953125
    3. '(range' → logprob: -11.325958251953125
    4. ' ' → logprob: -12.200958251953125
    5. '	range' → logprob: -14.700958251953125
    6. '(' → logprob: -15.075958251953125
    7. '   ' → logprob: -15.575958251953125
    8. '1' → logprob: -15.575958251953125
    9. '  ' → logprob: -15.700958251953125
    10. ' xrange' → logprob: -15.825958251953125

Token 123: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000585322268307209
    2. '(N' → logprob: -7.500585556030273
    3. '1' → logprob: -10.375585556030273
    4. '   ' → logprob: -14.500585556030273
    5. ' (' → logprob: -14.875585556030273
    6. ' ' → logprob: -16.250585556030273
    7. '(
' → logprob: -16.375585556030273
    8. '(len' → logprob: -16.625585556030273
    9. '(n' → logprob: -18.000585556030273
    10. ',' → logprob: -18.500585556030273

Token 124: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36544403433799744
    2. ' +' → logprob: -1.2404440641403198
    3. '):' → logprob: -4.615444183349609
    4. '):
' → logprob: -5.115444183349609
    5. '   ' → logprob: -7.365444183349609
    6. '1' → logprob: -8.99044418334961
    7. ' ' → logprob: -9.24044418334961
    8. ' ):' → logprob: -10.49044418334961
    9. '
' → logprob: -11.11544418334961
    10. '-' → logprob: -11.61544418334961

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03115510754287243
    2. ' for' → logprob: -3.5311551094055176
    3. '   ' → logprob: -7.531155109405518
    4. 'for' → logprob: -7.781155109405518
    5. ',' → logprob: -8.40615463256836
    6. '<|end|>' → logprob: -9.28115463256836
    7. ' ' → logprob: -10.03115463256836
    8. ' and' → logprob: -10.53115463256836
    9. '	   ' → logprob: -11.15615463256836
    10. '    ' → logprob: -11.15615463256836

Token 126: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04450410604476929
    2. ' for' → logprob: -3.169504165649414
    3. '       ' → logprob: -7.044504165649414
    4. '   ' → logprob: -7.544504165649414
    5. 'j' → logprob: -10.544504165649414
    6. '    ' → logprob: -10.669504165649414
    7. ' ' → logprob: -11.044504165649414
    8. '	for' → logprob: -11.419504165649414
    9. 'next' → logprob: -12.294504165649414
    10. '        ' → logprob: -12.544504165649414

Token 127: '_row' (ID: 19157)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1563440561294556
    2. 'd' → logprob: -1.7813440561294556
    3. 'for' → logprob: -2.156343936920166
    4. ' for' → logprob: -2.781343936920166
    5. '(' → logprob: -3.031343936920166
    6. '   ' → logprob: -3.156343936920166
    7. 's' → logprob: -3.156343936920166
    8. ' =' → logprob: -3.406343936920166
    9. ',' → logprob: -4.031343936920166
    10. ' in' → logprob: -4.156343936920166

Token 128: '_update' (ID: 19528)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1642242968082428
    2. '=' → logprob: -2.66422438621521
    3. ' in' → logprob: -3.91422438621521
    4. ',' → logprob: -4.039224147796631
    5. '   ' → logprob: -4.664224147796631
    6. 'for' → logprob: -5.039224147796631
    7. '(' → logprob: -5.539224147796631
    8. 'in' → logprob: -5.664224147796631
    9. '(i' → logprob: -6.039224147796631
    10. 'range' → logprob: -6.039224147796631

Token 129: '(A' (ID: 10706)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.232672095298767
    2. '(A' → logprob: -1.357672095298767
    3. '(' → logprob: -1.482672095298767
    4. '(N' → logprob: -2.6076722145080566
    5. '(i' → logprob: -3.3576722145080566
    6. '   ' → logprob: -4.107672214508057
    7. 'def' → logprob: -4.232672214508057
    8. '=' → logprob: -4.357672214508057
    9. ' for' → logprob: -4.357672214508057
    10. ',' → logprob: -4.607672214508057

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08552763611078262
    2. '[i' → logprob: -2.8355276584625244
    3. ',i' → logprob: -3.9605276584625244
    4. ' ,' → logprob: -6.210527420043945
    5. '   ' → logprob: -7.085527420043945
    6. '[' → logprob: -7.085527420043945
    7. '(i' → logprob: -8.960527420043945
    8. ')' → logprob: -9.335527420043945
    9. ',[' → logprob: -9.835527420043945
    10. ' [' → logprob: -10.210527420043945

Token 131: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00839305855333805
    2. ' i' → logprob: -5.258393287658691
    3. 'A' → logprob: -6.383393287658691
    4. 'N' → logprob: -6.633393287658691
    5. ')' → logprob: -9.508393287658691
    6. ' A' → logprob: -10.133393287658691
    7. ' N' → logprob: -11.008393287658691
    8. ')i' → logprob: -12.383393287658691
    9. '   ' → logprob: -12.508393287658691
    10. '[i' → logprob: -13.133393287658691

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7532097101211548
    2. '+' → logprob: -0.8782097101211548
    3. ' +' → logprob: -2.3782095909118652
    4. ')' → logprob: -4.128209590911865
    5. '   ' → logprob: -5.628209590911865
    6. ' ,' → logprob: -7.253209590911865
    7. ' )' → logprob: -9.003210067749023
    8. ',i' → logprob: -9.378210067749023
    9. ' ' → logprob: -10.378210067749023
    10. '+)' → logprob: -10.378210067749023

Token 133: ' P' (ID: 398)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07450899481773376
    2. 'P' → logprob: -3.4495089054107666
    3. 'A' → logprob: -4.074509143829346
    4. ' N' → logprob: -4.324509143829346
    5. 'i' → logprob: -4.824509143829346
    6. ' P' → logprob: -7.199509143829346
    7. ' A' → logprob: -7.449509143829346
    8. ' i' → logprob: -8.449508666992188
    9. '   ' → logprob: -9.199508666992188
    10. ' ' → logprob: -10.324508666992188

Token 134: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009198847226798534
    2. ',' → logprob: -4.8841986656188965
    3. '+' → logprob: -6.7591986656188965
    4. '   ' → logprob: -8.884199142456055
    5. ' )' → logprob: -9.384199142456055
    6. ' +' → logprob: -9.509199142456055
    7. '<|end|>' → logprob: -9.634199142456055
    8. ')
' → logprob: -10.884199142456055
    9. ',)' → logprob: -12.384199142456055
    10. ');' → logprob: -12.384199142456055

Token 135: ' add' (ID: 1147)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05351683497428894
    2. 'A' → logprob: -3.3035168647766113
    3. ' N' → logprob: -4.928516864776611
    4. ')' → logprob: -5.303516864776611
    5. 'i' → logprob: -6.928516864776611
    6. 'update' → logprob: -7.053516864776611
    7. ' A' → logprob: -7.178516864776611
    8. ' update' → logprob: -9.178516387939453
    9. '2' → logprob: -9.553516387939453
    10. ' )' → logprob: -10.053516387939453

Token 136: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.9361264946837764e-07
    2. 'and' → logprob: -17.0
    3. '_an' → logprob: -17.375
    4. '_to' → logprob: -18.25
    5. ' and' → logprob: -18.625
    6. '_add' → logprob: -19.125
    7. ')' → logprob: -19.25
    8. '_' → logprob: -19.75
    9. '_not' → logprob: -20.0
    10. ')_' → logprob: -20.25

Token 137: '_reduce' (ID: 165367)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.04480060935020447
    2. '_reduce' → logprob: -3.4198005199432373
    3. 'duce' → logprob: -4.544800758361816
    4. 'uce' → logprob: -8.419800758361816
    5. 'ed' → logprob: -8.669800758361816
    6. '.reduce' → logprob: -10.919800758361816
    7. 'and' → logprob: -11.294800758361816
    8. 'uced' → logprob: -11.419800758361816
    9. ' reduce' → logprob: -11.919800758361816
    10. 'educt' → logprob: -12.794800758361816

Token 138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014072739577386528
    2. ',' → logprob: -9.250141143798828
    3. ' )' → logprob: -10.625141143798828
    4. '   ' → logprob: -11.375141143798828
    5. ')
' → logprob: -12.125141143798828
    6. 'def' → logprob: -14.625141143798828
    7. ' ' → logprob: -14.750141143798828
    8. ',)' → logprob: -14.750141143798828
    9. ')

' → logprob: -14.875141143798828
    10. '    ' → logprob: -15.375141143798828

Token 139: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.048605188727378845
    2. 'process' → logprob: -3.04860520362854
    3. ' update' → logprob: -11.548604965209961
    4. '_process' → logprob: -13.548604965209961
    5. '	process' → logprob: -13.798604965209961
    6. 'update' → logprob: -13.798604965209961
    7. ' def' → logprob: -13.923604965209961
    8. ' ' → logprob: -14.048604965209961
    9. 'def' → logprob: -14.173604965209961
    10. '(process' → logprob: -14.548604965209961

Token 141: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.4849443838757e-06
    2. '_line' → logprob: -13.250004768371582
    3. '_rows' → logprob: -13.500004768371582
    4. '_' → logprob: -14.250004768371582
    5. '_Row' → logprob: -15.875004768371582
    6. '_ROW' → logprob: -16.375003814697266
    7. '_raw' → logprob: -16.625003814697266
    8. '_cell' → logprob: -17.375003814697266
    9. '_array' → logprob: -17.500003814697266
    10. '_user' → logprob: -17.625003814697266

Token 142: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -2.816093228830141e-06
    2. 'update' → logprob: -13.12500286102295
    3. '(A' → logprob: -15.00000286102295
    4. '_updates' → logprob: -15.12500286102295
    5. '_row' → logprob: -16.750001907348633
    6. '_updated' → logprob: -17.750001907348633
    7. '_' → logprob: -18.125001907348633
    8. '(' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. '_Update' → logprob: -18.250001907348633

Token 143: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0019305398454889655
    2. '(' → logprob: -6.2519307136535645
    3. '(
' → logprob: -13.251930236816406
    4. '(a' → logprob: -16.251930236816406
    5. '(

' → logprob: -17.501930236816406
    6. 'def' → logprob: -17.501930236816406
    7. '((' → logprob: -17.626930236816406
    8. ' (' → logprob: -18.001930236816406
    9. '```' → logprob: -18.251930236816406
    10. '(B' → logprob: -18.501930236816406

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',A' → logprob: -14.37501335144043
    4. ',i' → logprob: -16.37501335144043
    5. ',
' → logprob: -16.87501335144043
    6. '):' → logprob: -18.12501335144043
    7. '   ' → logprob: -18.12501335144043
    8. '_,' → logprob: -18.75001335144043
    9. 'A' → logprob: -19.00001335144043
    10. ',a' → logprob: -19.12501335144043

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03333720937371254
    2. ' i' → logprob: -3.783337116241455
    3. 'N' → logprob: -4.658337116241455
    4. ' N' → logprob: -7.783337116241455
    5. ')' → logprob: -10.033337593078613
    6. 'idx' → logprob: -10.908337593078613
    7. '   ' → logprob: -11.283337593078613
    8. 'index' → logprob: -11.533337593078613
    9. ' ' → logprob: -11.533337593078613
    10. 'n' → logprob: -11.783337593078613

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ',P' → logprob: -15.125059127807617
    4. '   ' → logprob: -15.875059127807617
    5. '):' → logprob: -16.250059127807617
    6. ',N' → logprob: -16.375059127807617
    7. '_,' → logprob: -16.875059127807617
    8. ',n' → logprob: -17.000059127807617
    9. ',A' → logprob: -17.125059127807617
    10. ',
' → logprob: -17.125059127807617

Token 147: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004897735081613064
    2. ' P' → logprob: -5.379897594451904
    3. 'N' → logprob: -8.254898071289062
    4. 'A' → logprob: -11.629898071289062
    5. ' ' → logprob: -13.129898071289062
    6. ' N' → logprob: -13.129898071289062
    7. '   ' → logprob: -13.254898071289062
    8. 'p' → logprob: -14.129898071289062
    9. ')' → logprob: -14.754898071289062
    10. 'i' → logprob: -14.879898071289062

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013691288768313825
    2. ' ,' → logprob: -9.500137329101562
    3. '):' → logprob: -9.750137329101562
    4. '   ' → logprob: -13.625137329101562
    5. '):
' → logprob: -14.125137329101562
    6. ',
' → logprob: -15.000137329101562
    7. ',A' → logprob: -15.500137329101562
    8. ')' → logprob: -15.625137329101562
    9. ',n' → logprob: -16.125137329101562
    10. ' ):' → logprob: -16.250137329101562

Token 149: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0032712374813854694
    2. ' add' → logprob: -5.753271102905273
    3. 'func' → logprob: -10.378271102905273
    4. 'update' → logprob: -10.753271102905273
    5. 'adder' → logprob: -11.378271102905273
    6. 'f' → logprob: -11.753271102905273
    7. 'a' → logprob: -12.253271102905273
    8. ')' → logprob: -12.503271102905273
    9. ')add' → logprob: -13.128271102905273
    10. ' ' → logprob: -13.503271102905273

Token 150: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.259079363080673e-05
    2. '_' → logprob: -11.375012397766113
    3. 'and' → logprob: -14.375012397766113
    4. '_to' → logprob: -15.625012397766113
    5. '_an' → logprob: -16.12501335144043
    6. ')_' → logprob: -16.62501335144043
    7. ' and' → logprob: -16.75001335144043
    8. ' _' → logprob: -17.62501335144043
    9. '_not' → logprob: -17.75001335144043
    10. '_for' → logprob: -18.00001335144043

Token 151: '_reduce' (ID: 165367)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.012520251795649529
    2. '_reduce' → logprob: -4.3875203132629395
    3. ' reduce' → logprob: -11.637519836425781
    4. 'process' → logprob: -14.387519836425781
    5. '.reduce' → logprob: -14.637519836425781
    6. 'Reduce' → logprob: -15.637519836425781
    7. 'def' → logprob: -16.13751983642578
    8. 'b' → logprob: -16.13751983642578
    9. '
' → logprob: -16.76251983642578
    10. ')' → logprob: -16.88751983642578

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001710014621494338
    2. '):
' → logprob: -9.000170707702637
    3. ' ):' → logprob: -10.750170707702637
    4. ',' → logprob: -11.000170707702637
    5. ')' → logprob: -11.750170707702637
    6. '):
' → logprob: -14.125170707702637
    7. '   ' → logprob: -15.250170707702637
    8. '):

' → logprob: -15.250170707702637
    9. ':' → logprob: -15.625170707702637
    10. ' ' → logprob: -17.625171661376953

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33507242798805237
    2. 'for' → logprob: -1.71007239818573
    3. ' for' → logprob: -2.3350725173950195
    4. 'n' → logprob: -6.5850725173950195
    5. 'offset' → logprob: -6.5850725173950195
    6. 'j' → logprob: -6.7100725173950195
    7. 'm' → logprob: -8.33507251739502
    8. '    ' → logprob: -8.46007251739502
    9. 'row' → logprob: -8.46007251739502
    10. ' offset' → logprob: -8.46007251739502

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020967721939086914
    2. 'row' → logprob: -5.520967483520508
    3. 'offset' → logprob: -5.645967483520508
    4. ' for' → logprob: -5.770967483520508
    5. '   ' → logprob: -6.145967483520508
    6. 'j' → logprob: -6.270967483520508
    7. 'length' → logprob: -7.020967483520508
    8. 'A' → logprob: -7.020967483520508
    9. 'mid' → logprob: -7.395967483520508
    10. 'n' → logprob: -7.520967483520508

Token 155: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19619052112102509
    2. ' j' → logprob: -1.9461904764175415
    3. 'k' → logprob: -3.571190595626831
    4. ' k' → logprob: -5.946190357208252
    5. 'x' → logprob: -7.071190357208252
    6. 'd' → logprob: -7.196190357208252
    7. 'offset' → logprob: -7.821190357208252
    8. 'idx' → logprob: -8.19619083404541
    9. ' offset' → logprob: -8.69619083404541
    10. 'c' → logprob: -8.88369083404541

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3133070170879364
    2. 'in' → logprob: -1.3133070468902588
    3. ' ' → logprob: -11.81330680847168
    4. '0' → logprob: -11.93830680847168
    5. '   ' → logprob: -12.06330680847168
    6. '(' → logprob: -12.43830680847168
    7. ',' → logprob: -12.43830680847168
    8. ')' → logprob: -12.56330680847168
    9. 'n' → logprob: -12.56330680847168
    10. '1' → logprob: -13.18830680847168

Token 157: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001741700922138989
    2. ' range' → logprob: -6.376741886138916
    3. '(range' → logprob: -10.251741409301758
    4. '(' → logprob: -14.001741409301758
    5. '   ' → logprob: -14.251741409301758
    6. ' ' → logprob: -14.501741409301758
    7. '	range' → logprob: -14.626741409301758
    8. '[' → logprob: -14.751741409301758
    9. '  ' → logprob: -15.001741409301758
    10. ')' → logprob: -15.001741409301758

Token 158: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28459110856056213
    2. '(len' → logprob: -1.4095910787582397
    3. '(i' → logprob: -6.034591197967529
    4. '(-' → logprob: -7.409591197967529
    5. '((' → logprob: -8.659590721130371
    6. '(A' → logprob: -8.909590721130371
    7. 'len' → logprob: -9.534590721130371
    8. '2' → logprob: -10.909590721130371
    9. ' (' → logprob: -11.534590721130371
    10. '(range' → logprob: -12.159590721130371

Token 159: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021888937801122665
    2. ' +' → logprob: -4.146888732910156
    3. '):' → logprob: -6.271888732910156
    4. '-' → logprob: -6.896888732910156
    5. '   ' → logprob: -7.396888732910156
    6. ',' → logprob: -7.396888732910156
    7. '):
' → logprob: -7.521888732910156
    8. '*' → logprob: -8.271888732910156
    9. ' -' → logprob: -9.021888732910156
    10. ')' → logprob: -9.021888732910156

Token 160: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03250936046242714
    2. '-' → logprob: -4.7825093269348145
    3. 'i' → logprob: -5.1575093269348145
    4. ' ' → logprob: -5.1575093269348145
    5. '(' → logprob: -5.2825093269348145
    6. '3' → logprob: -6.9075093269348145
    7. 'len' → logprob: -7.0325093269348145
    8. ' -' → logprob: -7.0325093269348145
    9. '1' → logprob: -7.1575093269348145
    10. '0' → logprob: -7.2825093269348145

Token 161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3810005187988281
    2. '-' → logprob: -1.3810005187988281
    3. '-i' → logprob: -3.506000518798828
    4. '0' → logprob: -4.506000518798828
    5. '-(' → logprob: -4.631000518798828
    6. '(' → logprob: -5.131000518798828
    7. 'i' → logprob: -5.381000518798828
    8. '3' → logprob: -7.006000518798828
    9. ' -' → logprob: -7.256000518798828
    10. 'len' → logprob: -7.381000518798828

Token 162: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35275548696517944
    2. '*i' → logprob: -1.7277555465698242
    3. ' *' → logprob: -2.977755546569824
    4. '*' → logprob: -3.227755546569824
    5. ' i' → logprob: -3.727755546569824
    6. '+' → logprob: -6.352755546569824
    7. 'j' → logprob: -7.352755546569824
    8. ' ' → logprob: -7.477755546569824
    9. '   ' → logprob: -7.477755546569824
    10. ' +' → logprob: -8.102755546569824

Token 163: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004294771933928132
    2. 'j' → logprob: -8.875429153442383
    3. ' i' → logprob: -9.000429153442383
    4. '*i' → logprob: -9.375429153442383
    5. '(i' → logprob: -10.125429153442383
    6. '
' → logprob: -10.750429153442383
    7. '*' → logprob: -12.375429153442383
    8. '   ' → logprob: -12.625429153442383
    9. ')' → logprob: -13.375429153442383
    10. '(' → logprob: -13.500429153442383

Token 164: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03930042311549187
    2. ' +' → logprob: -3.2893004417419434
    3. '   ' → logprob: -7.914300441741943
    4. ')' → logprob: -7.914300441741943
    5. '-' → logprob: -8.289299964904785
    6. ' -' → logprob: -9.539299964904785
    7. '):' → logprob: -9.914299964904785
    8. '):
' → logprob: -10.164299964904785
    9. ')+' → logprob: -10.164299964904785
    10. ' ' → logprob: -11.164299964904785

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048728276044130325
    2. '2' → logprob: -3.0487282276153564
    3. ' ' → logprob: -9.423727989196777
    4. '0' → logprob: -10.548727989196777
    5. '3' → logprob: -11.611227989196777
    6. '
' → logprob: -12.361227989196777
    7. 'i' → logprob: -12.423727989196777
    8. '   ' → logprob: -12.423727989196777
    9. 'j' → logprob: -12.986227989196777
    10. '```' → logprob: -13.173727989196777

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16031703352928162
    2. '2' → logprob: -1.910317063331604
    3. ' ' → logprob: -9.785317420959473
    4. '0' → logprob: -11.660317420959473
    5. '3' → logprob: -12.410317420959473
    6. ')' → logprob: -13.160317420959473
    7. '10' → logprob: -13.160317420959473
    8. '12' → logprob: -13.285317420959473
    9. '11' → logprob: -13.285317420959473
    10. '```' → logprob: -13.597817420959473

Token 167: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17499299347400665
    2. '):' → logprob: -2.0499930381774902
    3. ' +' → logprob: -4.04999303817749
    4. '):
' → logprob: -4.29999303817749
    5. '   ' → logprob: -7.92499303817749
    6. ' ):' → logprob: -8.174992561340332
    7. ')' → logprob: -10.299992561340332
    8. '    ' → logprob: -10.549992561340332
    9. ' ):
' → logprob: -10.674992561340332
    10. ',' → logprob: -11.549992561340332

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031425125780515373
    2. ' A' → logprob: -9.125314712524414
    3. '<|end|>' → logprob: -10.250314712524414
    4. '   ' → logprob: -10.375314712524414
    5. 'A' → logprob: -10.500314712524414
    6. ',' → logprob: -10.750314712524414
    7. ')' → logprob: -11.250314712524414
    8. ' if' → logprob: -11.375314712524414
    9. '           ' → logprob: -11.625314712524414
    10. 'a' → logprob: -11.750314712524414

Token 169: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.3420480787754059
    2. 'if' → logprob: -2.467048168182373
    3. '           ' → logprob: -3.217048168182373
    4. ' A' → logprob: -3.217048168182373
    5. ' if' → logprob: -3.467048168182373
    6. 'val' → logprob: -3.717048168182373
    7. 'new' → logprob: -3.842048168182373
    8. '       ' → logprob: -4.217048168182373
    9. ' val' → logprob: -4.842048168182373
    10. ' new' → logprob: -4.842048168182373

Token 170: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.138441237155348e-05
    2. '[j' → logprob: -10.000091552734375
    3. '[' → logprob: -10.125091552734375
    4. ' [' → logprob: -12.500091552734375
    5. '   ' → logprob: -15.000091552734375
    6. '[I' → logprob: -15.000091552734375
    7. '[A' → logprob: -15.125091552734375
    8. '][' → logprob: -15.375091552734375
    9. '
' → logprob: -15.500091552734375
    10. '[next' → logprob: -15.500091552734375

Token 171: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5261207222938538
    2. '][' → logprob: -0.9011207222938538
    3. ' +' → logprob: -6.651120662689209
    4. ']' → logprob: -7.151120662689209
    5. '[' → logprob: -8.401121139526367
    6. '[j' → logprob: -8.776121139526367
    7. ' ][' → logprob: -8.901121139526367
    8. '[i' → logprob: -9.026121139526367
    9. '+j' → logprob: -9.776121139526367
    10. '   ' → logprob: -10.276121139526367

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -15.000000953674316
    3. '
' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.125000953674316
    5. '   ' → logprob: -15.375000953674316
    6. '```' → logprob: -16.437501907348633
    7. 'def' → logprob: -16.500001907348633
    8. '2' → logprob: -16.750001907348633
    9. '１' → logprob: -18.375001907348633
    10. 'j' → logprob: -18.562501907348633

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -14.625001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '2' → logprob: -15.312501907348633
    5. '   ' → logprob: -15.312501907348633
    6. '```' → logprob: -15.750001907348633
    7. 'j' → logprob: -16.937501907348633
    8. '0' → logprob: -17.375001907348633
    9. '１' → logprob: -17.562501907348633
    10. '11' → logprob: -18.000001907348633

Token 174: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024132427643053234
    2. ']' → logprob: -9.00024127960205
    3. '[j' → logprob: -9.37524127960205
    4. ' ][' → logprob: -11.12524127960205
    5. '[' → logprob: -11.37524127960205
    6. '"][' → logprob: -13.25024127960205
    7. ')[' → logprob: -14.12524127960205
    8. ']][' → logprob: -14.25024127960205
    9. ''][' → logprob: -14.75024127960205
    10. '][]' → logprob: -14.75024127960205

Token 175: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.8921695047756657e-05
    2. '2' → logprob: -11.125028610229492
    3. '   ' → logprob: -12.750028610229492
    4. ' j' → logprob: -12.875028610229492
    5. '
' → logprob: -13.125028610229492
    6. '0' → logprob: -13.625028610229492
    7. ' ' → logprob: -13.750028610229492
    8. '	j' → logprob: -14.375028610229492
    9. '(j' → logprob: -14.750028610229492
    10. '[j' → logprob: -14.750028610229492

Token 176: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007537063676863909
    2. '+' → logprob: -5.757536888122559
    3. ']=' → logprob: -5.882536888122559
    4. ']+=' → logprob: -7.132536888122559
    5. ' ]' → logprob: -8.007536888122559
    6. '-' → logprob: -8.757536888122559
    7. '=' → logprob: -8.757536888122559
    8. ']+' → logprob: -10.632536888122559
    9. ' -' → logprob: -10.757536888122559
    10. '   ' → logprob: -11.132536888122559

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005830321926623583
    2. '-' → logprob: -5.38083028793335
    3. '2' → logprob: -7.50583028793335
    4. '0' → logprob: -7.63083028793335
    5. ' ' → logprob: -9.005830764770508
    6. ' -' → logprob: -10.380830764770508
    7. '   ' → logprob: -11.505830764770508
    8. '```' → logprob: -12.880830764770508
    9. '  ' → logprob: -13.255830764770508
    10. '
' → logprob: -14.380830764770508

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001175343873910606
    2. '2' → logprob: -7.501175403594971
    3. '-' → logprob: -7.626175403594971
    4. '0' → logprob: -9.001174926757812
    5. ' ' → logprob: -12.376174926757812
    6. ' -' → logprob: -13.251174926757812
    7. '   ' → logprob: -13.501174926757812
    8. '```' → logprob: -13.626174926757812
    9. '3' → logprob: -14.813674926757812
    10. '
' → logprob: -15.063674926757812

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008205882040783763
    2. ']=' → logprob: -7.125820636749268
    3. '=' → logprob: -11.75082015991211
    4. ' ]' → logprob: -12.37582015991211
    5. ')' → logprob: -13.00082015991211
    6. '])' → logprob: -13.87582015991211
    7. ']+=' → logprob: -14.87582015991211
    8. '[' → logprob: -15.87582015991211
    9. ']
' → logprob: -16.50082015991211
    10. ' =' → logprob: -16.50082015991211

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759463906288147
    2. ' =' → logprob: -0.8259463906288147
    3. '[' → logprob: -12.700946807861328
    4. ')' → logprob: -13.825946807861328
    5. ' ' → logprob: -13.950946807861328
    6. ']' → logprob: -13.950946807861328
    7. ' +=' → logprob: -15.325946807861328
    8. '+=' → logprob: -15.450946807861328
    9. ']=' → logprob: -15.450946807861328
    10. '```' → logprob: -15.825946807861328

Token 181: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00033558503491804004
    2. ' add' → logprob: -8.000335693359375
    3. '(add' → logprob: -16.125335693359375
    4. '	add' → logprob: -17.250335693359375
    5. '   ' → logprob: -17.875335693359375
    6. ')add' → logprob: -18.875335693359375
    7. '           ' → logprob: -19.250335693359375
    8. '  ' → logprob: -19.375335693359375
    9. '       ' → logprob: -19.500335693359375
    10. ' ' → logprob: -19.500335693359375

Token 182: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.000006675720215
    3. 'and' → logprob: -15.125006675720215
    4. '_add' → logprob: -16.12500762939453
    5. '(A' → logprob: -16.12500762939453
    6. '```' → logprob: -16.75000762939453
    7. '_to' → logprob: -16.87500762939453
    8. '_an' → logprob: -18.00000762939453
    9. '_under' → logprob: -18.50000762939453
    10. ' and' → logprob: -18.50000762939453

Token 183: '_reduce' (ID: 165367)
  Prédit: '_reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reduce' → logprob: -0.08941081911325455
    2. 'reduce' → logprob: -2.4644107818603516
    3. '(A' → logprob: -7.714410781860352
    4. 'Reduce' → logprob: -11.589410781860352
    5. 'A' → logprob: -12.214410781860352
    6. ' reduce' → logprob: -13.214410781860352
    7. 'duce' → logprob: -13.339410781860352
    8. '   ' → logprob: -13.839410781860352
    9. '[A' → logprob: -14.089410781860352
    10. ' A' → logprob: -14.464410781860352

Token 184: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.500096321105957
    3. '(
' → logprob: -11.000096321105957
    4. 'A' → logprob: -12.500096321105957
    5. ' (' → logprob: -13.750096321105957
    6. '   ' → logprob: -17.500097274780273
    7. '((' → logprob: -17.625097274780273
    8. '(
' → logprob: -18.125097274780273
    9. '(

' → logprob: -18.375097274780273
    10. '```' → logprob: -18.375097274780273

Token 185: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. 'i' → logprob: -13.000006675720215
    3. '[' → logprob: -13.500006675720215
    4. ' [' → logprob: -14.250006675720215
    5. '[j' → logprob: -14.500006675720215
    6. '[I' → logprob: -14.875006675720215
    7. '[
' → logprob: -15.125006675720215
    8. '[A' → logprob: -15.500006675720215
    9. ')' → logprob: -16.1250057220459
    10. 'A' → logprob: -16.5000057220459

Token 186: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1253090649843216
    2. '][' → logprob: -2.2503089904785156
    3. '[j' → logprob: -5.250308990478516
    4. ' +' → logprob: -5.500308990478516
    5. '[i' → logprob: -6.500308990478516
    6. '+j' → logprob: -7.375308990478516
    7. ' ][' → logprob: -7.750308990478516
    8. ']' → logprob: -9.000308990478516
    9. '   ' → logprob: -9.000308990478516
    10. '[' → logprob: -9.250308990478516

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.375097274780273
    3. 'j' → logprob: -12.375097274780273
    4. '
' → logprob: -13.125097274780273
    5. '   ' → logprob: -13.125097274780273
    6. '0' → logprob: -13.875097274780273
    7. '][' → logprob: -13.875097274780273
    8. '```' → logprob: -14.625097274780273
    9. '[j' → logprob: -15.687597274780273
    10. '
' → logprob: -15.937597274780273

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.816591434879228e-05
    2. 'j' → logprob: -9.62508773803711
    3. ' ' → logprob: -11.00008773803711
    4. '0' → logprob: -12.50008773803711
    5. '   ' → logprob: -14.25008773803711
    6. '
' → logprob: -14.75008773803711
    7. '[j' → logprob: -15.75008773803711
    8. '][' → logprob: -16.25008773803711
    9. ' j' → logprob: -16.37508773803711
    10. '+' → logprob: -16.62508773803711

Token 189: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015129582025110722
    2. ']' → logprob: -6.8765130043029785
    3. '[j' → logprob: -8.37651252746582
    4. '[' → logprob: -8.75151252746582
    5. ' ][' → logprob: -9.75151252746582
    6. '[i' → logprob: -11.25151252746582
    7. '"][' → logprob: -11.87651252746582
    8. ' ' → logprob: -13.25151252746582
    9. '<|end|>' → logprob: -13.37651252746582
    10. ''][' → logprob: -13.50151252746582

Token 190: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.182190554682165e-05
    2. '[j' → logprob: -10.500061988830566
    3. ' j' → logprob: -10.875061988830566
    4. '[' → logprob: -12.750061988830566
    5. ']' → logprob: -12.875061988830566
    6. ' ' → logprob: -13.250061988830566
    7. '][' → logprob: -13.500061988830566
    8. '   ' → logprob: -13.500061988830566
    9. 'i' → logprob: -13.750061988830566
    10. '	j' → logprob: -14.250061988830566

Token 191: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10270263999700546
    2. '],' → logprob: -3.1027026176452637
    3. ']' → logprob: -3.4777026176452637
    4. '][' → logprob: -4.352702617645264
    5. '   ' → logprob: -5.477702617645264
    6. ']+' → logprob: -6.227702617645264
    7. ' +' → logprob: -6.727702617645264
    8. '1' → logprob: -6.977702617645264
    9. '],[' → logprob: -9.352703094482422
    10. ' ' → logprob: -9.477703094482422

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003923806827515364
    2. '0' → logprob: -6.0039238929748535
    3. ' ' → logprob: -6.6289238929748535
    4. '   ' → logprob: -9.753923416137695
    5. '
' → logprob: -11.378923416137695
    6. '2' → logprob: -11.503923416137695
    7. '-' → logprob: -11.566423416137695
    8. '```' → logprob: -12.191423416137695
    9. '           ' → logprob: -12.941423416137695
    10. '  ' → logprob: -13.003923416137695

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0070205992087721825
    2. '0' → logprob: -5.007020473480225
    3. ' ' → logprob: -8.632020950317383
    4. '   ' → logprob: -9.757020950317383
    5. ']' → logprob: -10.882020950317383
    6. 'add' → logprob: -11.757020950317383
    7. '```' → logprob: -11.882020950317383
    8. 'i' → logprob: -11.882020950317383
    9. '])' → logprob: -12.007020950317383
    10. '-' → logprob: -12.757020950317383

Token 194: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.055758025497198105
    2. ',' → logprob: -2.930757999420166
    3. ']' → logprob: -7.180757999420166
    4. '   ' → logprob: -10.430758476257324
    5. ',A' → logprob: -10.555758476257324
    6. ' ,' → logprob: -11.055758476257324
    7. ' ],' → logprob: -11.430758476257324
    8. '],
' → logprob: -11.805758476257324
    9. 'A' → logprob: -12.305758476257324
    10. '),' → logprob: -12.430758476257324

Token 195: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005736440070904791
    2. ' A' → logprob: -7.500573635101318
    3. '   ' → logprob: -10.875574111938477
    4. '       ' → logprob: -14.500574111938477
    5. '           ' → logprob: -14.500574111938477
    6. '	A' → logprob: -15.125574111938477
    7. '  ' → logprob: -15.750574111938477
    8. '    ' → logprob: -16.125574111938477
    9. ' ' → logprob: -16.125574111938477
    10. '               ' → logprob: -16.750574111938477

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. 'i' → logprob: -13.000004768371582
    3. '[' → logprob: -13.750004768371582
    4. '[j' → logprob: -14.250004768371582
    5. ' [' → logprob: -15.125004768371582
    6. '```' → logprob: -15.250004768371582
    7. '[
' → logprob: -15.625004768371582
    8. '[I' → logprob: -15.750004768371582
    9. '[user' → logprob: -17.2500057220459
    10. '][' → logprob: -17.3750057220459

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008170120418071747
    2. ']' → logprob: -7.750816822052002
    3. ' ][' → logprob: -8.50081729888916
    4. '[i' → logprob: -9.12581729888916
    5. '[j' → logprob: -10.37581729888916
    6. '[' → logprob: -10.62581729888916
    7. '   ' → logprob: -12.25081729888916
    8. '])' → logprob: -12.37581729888916
    9. ' ' → logprob: -12.50081729888916
    10. ')[' → logprob: -13.62581729888916

Token 198: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2948405128554441e-05
    2. ' j' → logprob: -11.37501335144043
    3. '
' → logprob: -14.62501335144043
    4. ']' → logprob: -15.62501335144043
    5. 'i' → logprob: -16.12501335144043
    6. ')' → logprob: -16.37501335144043
    7. '	j' → logprob: -16.37501335144043
    8. '```' → logprob: -16.50001335144043
    9. '_j' → logprob: -16.75001335144043
    10. ' ' → logprob: -16.75001335144043

Token 199: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002583594177849591
    2. '])
' → logprob: -8.750258445739746
    3. ')' → logprob: -10.000258445739746
    4. ']' → logprob: -10.625258445739746
    5. ' ])' → logprob: -10.750258445739746
    6. '   ' → logprob: -13.125258445739746
    7. '])

' → logprob: -13.125258445739746
    8. '       ' → logprob: -13.750258445739746
    9. ')])' → logprob: -14.625258445739746
    10. '))' → logprob: -14.750258445739746

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01980002410709858
    2. '<|end|>' → logprob: -4.394800186157227
    3. '   ' → logprob: -5.769800186157227
    4. '        ' → logprob: -6.769800186157227
    5. ' ' → logprob: -7.269800186157227
    6. '
' → logprob: -7.644800186157227
    7. ')' → logprob: -7.894800186157227
    8. ' A' → logprob: -8.019800186157227
    9. ',' → logprob: -8.769800186157227
    10. '    ' → logprob: -9.019800186157227

Token 201: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0019150725565850735
    2. 'if' → logprob: -6.626914978027344
    3. ' A' → logprob: -8.626914978027344
    4. '       ' → logprob: -8.626914978027344
    5. '   ' → logprob: -9.001914978027344
    6. ' if' → logprob: -9.376914978027344
    7. '           ' → logprob: -11.876914978027344
    8. ' ' → logprob: -12.376914978027344
    9. 'for' → logprob: -12.626914978027344
    10. '	A' → logprob: -13.751914978027344

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3319124011322856e-05
    2. ' [' → logprob: -11.250022888183594
    3. '[' → logprob: -11.750022888183594
    4. '[I' → logprob: -13.750022888183594
    5. 'i' → logprob: -15.375022888183594
    6. '   ' → logprob: -16.000022888183594
    7. '```' → logprob: -16.000022888183594
    8. ' ' → logprob: -16.250022888183594
    9. 'def' → logprob: -16.375022888183594
    10. '[
' → logprob: -16.625022888183594

Token 203: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32918983697891235
    2. ' +' → logprob: -1.3291897773742676
    3. '][' → logprob: -4.204189777374268
    4. ' ][' → logprob: -7.954189777374268
    5. '   ' → logprob: -8.454190254211426
    6. '[' → logprob: -9.079190254211426
    7. '[i' → logprob: -9.829190254211426
    8. ' [' → logprob: -10.329190254211426
    9. ' ' → logprob: -10.579190254211426
    10. ']' → logprob: -11.079190254211426

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004778592265211046
    2. ' ' → logprob: -7.8754777908325195
    3. '2' → logprob: -9.87547779083252
    4. '0' → logprob: -10.12547779083252
    5. '   ' → logprob: -12.87547779083252
    6. '
' → logprob: -13.25047779083252
    7. '  ' → logprob: -14.68797779083252
    8. '    ' → logprob: -15.50047779083252
    9. '

' → logprob: -15.81297779083252
    10. '```' → logprob: -16.187978744506836

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007263366132974625
    2. '0' → logprob: -5.00726318359375
    3. ' ' → logprob: -8.00726318359375
    4. '2' → logprob: -8.50726318359375
    5. '   ' → logprob: -12.00726318359375
    6. '
' → logprob: -13.88226318359375
    7. '           ' → logprob: -14.00726318359375
    8. '  ' → logprob: -14.00726318359375
    9. '       ' → logprob: -14.25726318359375
    10. '    ' → logprob: -14.50726318359375

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013104582205414772
    2. '[j' → logprob: -4.763104438781738
    3. '[' → logprob: -5.513104438781738
    4. ']' → logprob: -8.263104438781738
    5. ')[' → logprob: -9.638104438781738
    6. '}[' → logprob: -10.513104438781738
    7. ' ][' → logprob: -10.763104438781738
    8. '[i' → logprob: -11.138104438781738
    9. '>[' → logprob: -11.763104438781738
    10. '"][' → logprob: -11.763104438781738

Token 207: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001589618914294988
    2. '2' → logprob: -9.12515926361084
    3. '   ' → logprob: -10.87515926361084
    4. ' j' → logprob: -11.25015926361084
    5. ' ' → logprob: -12.37515926361084
    6. '	j' → logprob: -13.00015926361084
    7. '[' → logprob: -13.12515926361084
    8. '(' → logprob: -13.37515926361084
    9. '  ' → logprob: -13.62515926361084
    10. '    ' → logprob: -13.75015926361084

Token 208: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04629070311784744
    2. '-' → logprob: -3.421290636062622
    3. '   ' → logprob: -5.421290874481201
    4. ']=' → logprob: -5.671290874481201
    5. ' ]' → logprob: -5.796290874481201
    6. '=' → logprob: -8.171290397644043
    7. '+' → logprob: -8.171290397644043
    8. ' -' → logprob: -8.296290397644043
    9. ' ' → logprob: -8.421290397644043
    10. ']+=' → logprob: -8.421290397644043

Token 209: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008341663633473217
    2. '0' → logprob: -7.375833988189697
    3. '2' → logprob: -9.125834465026855
    4. ' ' → logprob: -9.500834465026855
    5. '```' → logprob: -11.375834465026855
    6. '   ' → logprob: -12.375834465026855
    7. '<|end|>' → logprob: -13.125834465026855
    8. ')' → logprob: -13.625834465026855
    9. '...' → logprob: -14.125834465026855
    10. '    ' → logprob: -14.438334465026855

Token 210: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007135885767638683
    2. '0' → logprob: -5.38213586807251
    3. '-' → logprob: -6.13213586807251
    4. '2' → logprob: -8.382136344909668
    5. ' ' → logprob: -9.757136344909668
    6. '   ' → logprob: -11.382136344909668
    7. ')' → logprob: -12.007136344909668
    8. '```' → logprob: -12.007136344909668
    9. ' -' → logprob: -12.819636344909668
    10. ']' → logprob: -12.944636344909668

Token 211: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009683952084742486
    2. ']=' → logprob: -7.2509684562683105
    3. ')' → logprob: -9.500967979431152
    4. '],' → logprob: -9.625967979431152
    5. '])' → logprob: -9.750967979431152
    6. ' ]' → logprob: -10.750967979431152
    7. ')]' → logprob: -10.875967979431152
    8. '       ' → logprob: -11.750967979431152
    9. '   ' → logprob: -12.500967979431152
    10. '][' → logprob: -13.000967979431152

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06958755850791931
    2. ' =' → logprob: -3.194587469100952
    3. ']' → logprob: -3.694587469100952
    4. ']=' → logprob: -6.694587707519531
    5. ')' → logprob: -9.319587707519531
    6. '[' → logprob: -10.194587707519531
    7. ')=' → logprob: -11.819587707519531
    8. ' ]' → logprob: -12.819587707519531
    9. '   ' → logprob: -13.319587707519531
    10. ' ' → logprob: -14.069587707519531

Token 213: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.20141597092151642
    2. 'add' → logprob: -1.701416015625
    3. '(add' → logprob: -13.326416015625
    4. '	add' → logprob: -14.701416015625
    5. ')add' → logprob: -15.201416015625
    6. ' ' → logprob: -16.076416015625
    7. '.add' → logprob: -16.326416015625
    8. '_add' → logprob: -17.826416015625
    9. ' ' → logprob: -17.951416015625
    10. ':add' → logprob: -18.076416015625

Token 214: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -4.842555426876061e-06
    2. 'and' → logprob: -12.375004768371582
    3. '_to' → logprob: -15.750004768371582
    4. '_' → logprob: -16.5000057220459
    5. '_reduce' → logprob: -16.5000057220459
    6. '_AND' → logprob: -17.1250057220459
    7. '_or' → logprob: -17.5000057220459
    8. '_add' → logprob: -17.6250057220459
    9. ' and' → logprob: -17.7500057220459
    10. 'andr' → logprob: -18.0000057220459

Token 215: '_reduce' (ID: 165367)
  Prédit: '_reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reduce' → logprob: -0.4742099940776825
    2. 'reduce' → logprob: -0.9742100238800049
    3. 'duce' → logprob: -9.724209785461426
    4. 'Reduce' → logprob: -9.849209785461426
    5. 'd' → logprob: -13.349209785461426
    6. 'add' → logprob: -13.599209785461426
    7. 'def' → logprob: -13.724209785461426
    8. '.reduce' → logprob: -13.724209785461426
    9. '_adjust' → logprob: -13.724209785461426
    10. '```' → logprob: -13.724209785461426

Token 216: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -9.875052452087402
    3. '(
' → logprob: -14.500052452087402
    4. '<|end|>' → logprob: -17.625051498413086
    5. '```' → logprob: -18.500051498413086
    6. ' (' → logprob: -18.500051498413086
    7. '((' → logprob: -19.000051498413086
    8. '(a' → logprob: -19.500051498413086
    9. '(AST' → logprob: -19.750051498413086
    10. 'A' → logprob: -20.000051498413086

Token 217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.87501049041748
    3. '[I' → logprob: -13.37501049041748
    4. '[A' → logprob: -14.00001049041748
    5. '```' → logprob: -15.75001049041748
    6. '[[' → logprob: -16.125009536743164
    7. ')[' → logprob: -16.250009536743164
    8. ' [' → logprob: -16.250009536743164
    9. 'i' → logprob: -16.625009536743164
    10. '[
' → logprob: -16.625009536743164

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12715235352516174
    2. ' +' → logprob: -2.127152442932129
    3. '[i' → logprob: -9.127152442932129
    4. '][' → logprob: -9.627152442932129
    5. '[' → logprob: -10.127152442932129
    6. '＋' → logprob: -12.502152442932129
    7. '+i' → logprob: -13.377152442932129
    8. '```' → logprob: -14.127152442932129
    9. '1' → logprob: -14.377152442932129
    10. '+[' → logprob: -14.502152442932129

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000618792837485671
    2. ' ' → logprob: -7.500618934631348
    3. '+' → logprob: -10.625618934631348
    4. '```' → logprob: -10.625618934631348
    5. '   ' → logprob: -12.250618934631348
    6. '[' → logprob: -12.625618934631348
    7. '  ' → logprob: -14.000618934631348
    8. '
' → logprob: -14.000618934631348
    9. '[i' → logprob: -14.125618934631348
    10. '...' → logprob: -14.250618934631348

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013127363054081798
    2. ' ' → logprob: -6.876312732696533
    3. '+' → logprob: -9.001313209533691
    4. '[i' → logprob: -9.126313209533691
    5. 'i' → logprob: -11.751313209533691
    6. '   ' → logprob: -12.063813209533691
    7. '```' → logprob: -12.251313209533691
    8. ' +' → logprob: -12.563813209533691
    9. '(i' → logprob: -12.563813209533691
    10. '[j' → logprob: -12.626313209533691

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011794081889092922
    2. '[i' → logprob: -4.511794090270996
    3. '[j' → logprob: -7.636794090270996
    4. ')[' → logprob: -8.636794090270996
    5. '[' → logprob: -10.386794090270996
    6. ' ][' → logprob: -10.886794090270996
    7. ']' → logprob: -11.261794090270996
    8. '}[' → logprob: -11.386794090270996
    9. '>[' → logprob: -12.761794090270996
    10. '"][' → logprob: -13.386794090270996

Token 222: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003242607053834945
    2. '[j' → logprob: -8.125324249267578
    3. ' j' → logprob: -11.375324249267578
    4. '2' → logprob: -11.750324249267578
    5. '   ' → logprob: -13.250324249267578
    6. '][' → logprob: -13.750324249267578
    7. 'i' → logprob: -13.875324249267578
    8. '```' → logprob: -13.875324249267578
    9. '
' → logprob: -14.250324249267578
    10. '[' → logprob: -14.625324249267578

Token 223: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016112491488456726
    2. ' +' → logprob: -4.766112327575684
    3. '][' → logprob: -5.516112327575684
    4. '[j' → logprob: -5.766112327575684
    5. '+j' → logprob: -9.391112327575684
    6. '2' → logprob: -9.641112327575684
    7. ']' → logprob: -10.016112327575684
    8. '[' → logprob: -10.016112327575684
    9. '   ' → logprob: -10.516112327575684
    10. 'j' → logprob: -11.141112327575684

Token 224: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004647504829335958
    2. ' ' → logprob: -8.00046443939209
    3. '1' → logprob: -9.25046443939209
    4. '   ' → logprob: -11.12546443939209
    5. '
' → logprob: -12.31296443939209
    6. '```' → logprob: -12.81296443939209
    7. '

' → logprob: -13.68796443939209
    8. ']' → logprob: -13.75046443939209
    9. '  ' → logprob: -13.81296443939209
    10. 'j' → logprob: -14.56296443939209

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006752309389412403
    2. '1' → logprob: -5.0067524909973145
    3. 'j' → logprob: -10.756752014160156
    4. ' ' → logprob: -11.631752014160156
    5. '   ' → logprob: -13.381752014160156
    6. '+' → logprob: -13.881752014160156
    7. '[j' → logprob: -14.006752014160156
    8. '```' → logprob: -14.006752014160156
    9. '
' → logprob: -14.381752014160156
    10. '

' → logprob: -14.944252014160156

Token 226: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.18083243072032928
    2. ',' → logprob: -1.8058323860168457
    3. '),' → logprob: -7.055832386016846
    4. ']' → logprob: -8.805832862854004
    5. '],[' → logprob: -11.305832862854004
    6. '       ' → logprob: -11.430832862854004
    7. ',A' → logprob: -11.430832862854004
    8. ' ,' → logprob: -11.930832862854004
    9. '   ' → logprob: -12.180832862854004
    10. ' ],' → logprob: -12.680832862854004

Token 227: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2014273703098297
    2. ' A' → logprob: -1.7014273405075073
    3. '   ' → logprob: -12.201427459716797
    4. ' ' → logprob: -12.451427459716797
    5. '	A' → logprob: -13.326427459716797
    6. '  ' → logprob: -14.326427459716797
    7. ' ' → logprob: -14.576427459716797
    8. '    ' → logprob: -14.701427459716797
    9. '           ' → logprob: -14.951427459716797
    10. ')' → logprob: -15.076427459716797

Token 228: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.547789674485102e-05
    2. '][' → logprob: -10.750035285949707
    3. '[' → logprob: -11.875035285949707
    4. '```' → logprob: -12.625035285949707
    5. '[][' → logprob: -14.000035285949707
    6. ')[' → logprob: -14.000035285949707
    7. 'i' → logprob: -14.250035285949707
    8. '[
' → logprob: -15.375035285949707
    9. '
' → logprob: -15.625035285949707
    10. ' [' → logprob: -15.750035285949707

Token 229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.635164754698053e-05
    2. '[i' → logprob: -10.250066757202148
    3. ']' → logprob: -10.875066757202148
    4. ' ][' → logprob: -11.375066757202148
    5. '[' → logprob: -15.875066757202148
    6. ')[' → logprob: -16.50006675720215
    7. '"][' → logprob: -16.87506675720215
    8. 'i' → logprob: -17.12506675720215
    9. '   ' → logprob: -17.25006675720215
    10. '```' → logprob: -17.37506675720215

Token 230: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. '[j' → logprob: -13.750001907348633
    3. ' j' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.000001907348633
    5. '```' → logprob: -15.500001907348633
    6. '[' → logprob: -15.625001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.625001907348633
    9. '	j' → logprob: -18.500001907348633
    10. ')' → logprob: -18.750001907348633

Token 231: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006705015548504889
    2. ']' → logprob: -8.125670433044434
    3. '[j' → logprob: -8.500670433044434
    4. ')' → logprob: -9.500670433044434
    5. '])
' → logprob: -10.250670433044434
    6. '       ' → logprob: -10.625670433044434
    7. ' ])' → logprob: -11.500670433044434
    8. '   ' → logprob: -12.125670433044434
    9. '[' → logprob: -12.625670433044434
    10. '])

' → logprob: -12.750670433044434

Token 232: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2519674599170685
    2. 'main' → logprob: -1.501967430114746
    3. ' solve' → logprob: -11.376967430114746
    4. 'solve' → logprob: -11.501967430114746
    5. 'def' → logprob: -12.001967430114746
    6. 'calculate' → logprob: -13.001967430114746
    7. 'compute' → logprob: -13.376967430114746
    8. ' def' → logprob: -13.626967430114746
    9. ' compute' → logprob: -13.751967430114746
    10. 'process' → logprob: -13.876967430114746

Token 234: '_B' (ID: 3201)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.31792423129081726
    2. '_' → logprob: -1.9429242610931396
    3. 'def' → logprob: -2.5679242610931396
    4. '_array' → logprob: -4.4429240226745605
    5. '(N' → logprob: -4.9429240226745605
    6. '(' → logprob: -5.0679240226745605
    7. '(P' → logprob: -5.8179240226745605
    8. '_count' → logprob: -6.0679240226745605
    9. '(A' → logprob: -6.4429240226745605
    10. '_perm' → logprob: -6.4429240226745605

Token 235: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01090468280017376
    2. '(A' → logprob: -5.010904788970947
    3. '():' → logprob: -6.385904788970947
    4. '(' → logprob: -6.635904788970947
    5. '(B' → logprob: -7.635904788970947
    6. '(size' → logprob: -8.885904312133789
    7. '()' → logprob: -9.260904312133789
    8. '(len' → logprob: -9.510904312133789
    9. 'def' → logprob: -9.885904312133789
    10. '(n' → logprob: -9.885904312133789

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0041440497152507305
    2. '):
' → logprob: -5.754144191741943
    3. ',' → logprob: -7.004144191741943
    4. ')' → logprob: -10.129143714904785
    5. ' ):' → logprob: -11.379143714904785
    6. '):
' → logprob: -12.504143714904785
    7. '):

' → logprob: -13.879143714904785
    8. '   ' → logprob: -15.254143714904785
    9. ',B' → logprob: -15.379143714904785
    10. ',N' → logprob: -15.504143714904785

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003995765466243029
    2. 'return' → logprob: -5.753995895385742
    3. ' return' → logprob: -7.378995895385742
    4. '[' → logprob: -8.628995895385742
    5. 'def' → logprob: -11.878995895385742
    6. '[]' → logprob: -13.753995895385742
    7. '	return' → logprob: -13.753995895385742
    8. ' [' → logprob: -13.878995895385742
    9. '```' → logprob: -14.003995895385742
    10. '[[' → logprob: -14.128995895385742

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028630690649151802
    2. ' return' → logprob: -3.9036307334899902
    3. '   ' → logprob: -4.90363073348999
    4. '[' → logprob: -7.77863073348999
    5. 'def' → logprob: -9.153630256652832
    6. 'B' → logprob: -9.403630256652832
    7. 'import' → logprob: -11.903630256652832
    8. '```' → logprob: -12.403630256652832
    9. '[B' → logprob: -12.403630256652832
    10. ' [' → logprob: -12.528630256652832

Token 239: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5775655508041382
    2. '[[' → logprob: -0.8275655508041382
    3. ' [[' → logprob: -7.202565670013428
    4. ' [' → logprob: -7.827565670013428
    5. '[N' → logprob: -8.07756519317627
    6. '[A' → logprob: -9.45256519317627
    7. '[n' → logprob: -10.07756519317627
    8. '[-' → logprob: -11.07756519317627
    9. '[(' → logprob: -11.82756519317627
    10. '[i' → logprob: -12.32756519317627

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06743782013654709
    2. '[' → logprob: -2.8174378871917725
    3. '1' → logprob: -5.817437648773193
    4. '[]' → logprob: -7.567437648773193
    5. 'False' → logprob: -7.817437648773193
    6. '(' → logprob: -8.067438125610352
    7. '-' → logprob: -8.067438125610352
    8. ' [' → logprob: -8.317438125610352
    9. '[N' → logprob: -8.942438125610352
    10. '[i' → logprob: -9.067438125610352

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0635312870144844
    2. ' for' → logprob: -3.1885313987731934
    3. 'for' → logprob: -3.9385313987731934
    4. ']*' → logprob: -7.188531398773193
    5. ']*(' → logprob: -10.938530921936035
    6. ']+' → logprob: -11.063530921936035
    7. '*' → logprob: -11.188530921936035
    8. '   ' → logprob: -11.688530921936035
    9. ' *' → logprob: -11.813530921936035
    10. ' ' → logprob: -12.063530921936035

Token 242: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12478834390640259
    2. ' *' → logprob: -2.499788284301758
    3. '*(' → logprob: -3.874788284301758
    4. 'for' → logprob: -5.124788284301758
    5. ' for' → logprob: -5.249788284301758
    6. '(N' → logprob: -7.124788284301758
    7. '+' → logprob: -7.499788284301758
    8. '(' → logprob: -8.249788284301758
    9. '0' → logprob: -8.249788284301758
    10. ')' → logprob: -8.249788284301758

Token 243: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07952480018138885
    2. '(N' → logprob: -2.5795247554779053
    3. '((' → logprob: -7.829524993896484
    4. 'N' → logprob: -8.829524993896484
    5. '2' → logprob: -10.454524993896484
    6. ' (' → logprob: -10.704524993896484
    7. '3' → logprob: -11.454524993896484
    8. '   ' → logprob: -12.079524993896484
    9. '(n' → logprob: -12.579524993896484
    10. '(int' → logprob: -12.954524993896484

Token 244: 'N' (ID: 45)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19749142229557037
    2. '(' → logprob: -1.8224914073944092
    3. 'N' → logprob: -4.572491645812988
    4. '3' → logprob: -5.447491645812988
    5. '4' → logprob: -6.697491645812988
    6. '(N' → logprob: -6.822491645812988
    7. ' ' → logprob: -8.822491645812988
    8. '1' → logprob: -9.072491645812988
    9. '5' → logprob: -9.697491645812988
    10. '6' → logprob: -9.697491645812988

Token 245: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0035573046188801527
    2. ' +' → logprob: -6.003557205200195
    3. '*' → logprob: -6.878557205200195
    4. ')' → logprob: -10.378557205200195
    5. ' *' → logprob: -11.253557205200195
    6. '2' → logprob: -13.128557205200195
    7. '[' → logprob: -13.378557205200195
    8. '1' → logprob: -13.878557205200195
    9. '+
' → logprob: -14.003557205200195
    10. '+)' → logprob: -15.253557205200195

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39318734407424927
    2. '2' → logprob: -1.1431872844696045
    3. '3' → logprob: -5.268187522888184
    4. ' ' → logprob: -7.143187522888184
    5. '10' → logprob: -8.643187522888184
    6. '5' → logprob: -9.643187522888184
    7. '4' → logprob: -10.018187522888184
    8. '7' → logprob: -11.143187522888184
    9. '6' → logprob: -11.518187522888184
    10. '100' → logprob: -12.143187522888184

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5243744850158691
    2. '2' → logprob: -0.8993744850158691
    3. '3' → logprob: -6.774374485015869
    4. '10' → logprob: -10.149374008178711
    5. '5' → logprob: -10.649374008178711
    6. ' ' → logprob: -10.774374008178711
    7. '4' → logprob: -11.774374008178711
    8. 'N' → logprob: -12.524374008178711
    9. '7' → logprob: -13.086874008178711
    10. '6' → logprob: -13.524374008178711

Token 248: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -16.0
    5. ')}' → logprob: -17.5
    6. '),' → logprob: -17.875
    7. '))' → logprob: -18.375
    8. '}' → logprob: -18.75
    9. ')

' → logprob: -18.75
    10. ')#' → logprob: -18.875

Token 249: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012248923303559422
    2. '<|end|>' → logprob: -9.1251220703125
    3. '```' → logprob: -11.7501220703125
    4. ' def' → logprob: -13.3751220703125
    5. '<|end|>' → logprob: -13.5001220703125
    6. 'for' → logprob: -14.2501220703125
    7. '#' → logprob: -14.7501220703125
    8. '
' → logprob: -15.0001220703125
    9. '\' → logprob: -15.5001220703125
    10. 'B' → logprob: -15.5001220703125

Token 250: ' type' (ID: 1490)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.2475651502609253
    2. 'read' → logprob: -1.6225651502609253
    3. 'update' → logprob: -1.9975651502609253
    4. 'compute' → logprob: -2.372565269470215
    5. 'def' → logprob: -2.747565269470215
    6. 'process' → logprob: -2.872565269470215
    7. 'set' → logprob: -2.872565269470215
    8. 'calculate' → logprob: -3.372565269470215
    9. 'fill' → logprob: -4.247565269470215
    10. 'init' → logprob: -4.372565269470215

Token 251: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3178801536560059
    2. '_' → logprob: -1.4428801536560059
    3. '_annotations' → logprob: -1.6928801536560059
    4. '_hint' → logprob: -2.442880153656006
    5. '_counts' → logprob: -3.192880153656006
    6. '()' → logprob: -3.317880153656006
    7. ':' → logprob: -3.567880153656006
    8. '_annotation' → logprob: -3.942880153656006
    9. '_check' → logprob: -4.317880153656006
    10. '_count' → logprob: -4.567880153656006

Token 252: '_update' (ID: 19528)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7063044309616089
    2. '_update' → logprob: -2.0813045501708984
    3. '(N' → logprob: -2.7063045501708984
    4. '(_' → logprob: -3.2063045501708984
    5. '(B' → logprob: -3.2063045501708984
    6. '_add' → logprob: -3.3313045501708984
    7. '_sum' → logprob: -3.5813045501708984
    8. '_def' → logprob: -3.7063045501708984
    9. '_count' → logprob: -3.9563045501708984
    10. ' def' → logprob: -4.456304550170898

Token 253: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0006230841390788555
    2. '(A' → logprob: -7.5006232261657715
    3. '(' → logprob: -9.625622749328613
    4. '(N' → logprob: -12.875622749328613
    5. '(M' → logprob: -15.000622749328613
    6. '(b' → logprob: -15.250622749328613
    7. '(T' → logprob: -15.500622749328613
    8. ' (' → logprob: -15.625622749328613
    9. '(L' → logprob: -15.875622749328613
    10. '(I' → logprob: -16.00062370300293

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011634345864877105
    2. ',B' → logprob: -7.751163482666016
    3. '):' → logprob: -8.376163482666016
    4. ' ,' → logprob: -9.001163482666016
    5. ',j' → logprob: -9.001163482666016
    6. ',i' → logprob: -9.376163482666016
    7. ',N' → logprob: -9.376163482666016
    8. ')' → logprob: -11.251163482666016
    9. ',A' → logprob: -11.751163482666016
    10. ',k' → logprob: -11.751163482666016

Token 255: ' A' (ID: 355)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.217122197151184
    2. 'i' → logprob: -1.717122197151184
    3. 'x' → logprob: -2.2171220779418945
    4. 'A' → logprob: -2.3421220779418945
    5. 'l' → logprob: -2.7171220779418945
    6. 'idx' → logprob: -2.9671220779418945
    7. 'P' → logprob: -3.2171220779418945
    8. 'index' → logprob: -4.0921220779418945
    9. ' N' → logprob: -4.3421220779418945
    10. 'L' → logprob: -4.4671220779418945

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004724987084046006
    2. '):' → logprob: -8.125472068786621
    3. ' ,' → logprob: -9.125472068786621
    4. '):
' → logprob: -10.375472068786621
    5. ',i' → logprob: -11.625472068786621
    6. ',N' → logprob: -11.750472068786621
    7. '[N' → logprob: -12.500472068786621
    8. ')' → logprob: -12.625472068786621
    9. '   ' → logprob: -13.000472068786621
    10. ',j' → logprob: -13.375472068786621

Token 257: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3655347526073456
    2. 'i' → logprob: -1.240534782409668
    3. ' N' → logprob: -4.865534782409668
    4. ' i' → logprob: -5.490534782409668
    5. 'B' → logprob: -5.865534782409668
    6. 'P' → logprob: -7.240534782409668
    7. 'A' → logprob: -7.365534782409668
    8. 'j' → logprob: -8.240534782409668
    9. 'n' → logprob: -8.865534782409668
    10. ' B' → logprob: -9.490534782409668

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005240394733846188
    2. '):' → logprob: -6.130240440368652
    3. '):
' → logprob: -6.380240440368652
    4. ' ,' → logprob: -6.755240440368652
    5. '+' → logprob: -9.755240440368652
    6. '   ' → logprob: -9.880240440368652
    7. ')' → logprob: -11.130240440368652
    8. ',j' → logprob: -11.505240440368652
    9. '-' → logprob: -11.630240440368652
    10. ',
' → logprob: -11.755240440368652

Token 259: ' X' (ID: 2127)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.017568549141287804
    2. ' P' → logprob: -4.767568588256836
    3. 'i' → logprob: -4.892568588256836
    4. ')' → logprob: -8.267568588256836
    5. 'j' → logprob: -8.267568588256836
    6. ' i' → logprob: -8.642568588256836
    7. '   ' → logprob: -8.892568588256836
    8. 'k' → logprob: -9.767568588256836
    9. 'M' → logprob: -10.080068588256836
    10. 'K' → logprob: -10.080068588256836

Token 260: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4079051613807678
    2. '):' → logprob: -1.532905101776123
    3. '):
' → logprob: -2.157905101776123
    4. ' ,' → logprob: -6.282905101776123
    5. ')' → logprob: -7.657905101776123
    6. ' ):' → logprob: -8.032905578613281
    7. '+' → logprob: -8.282905578613281
    8. '):

' → logprob: -9.657905578613281
    9. ' ):
' → logprob: -9.657905578613281
    10. '   ' → logprob: -9.657905578613281

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016393154859542847
    2. ' for' → logprob: -4.516393184661865
    3. 'for' → logprob: -5.516393184661865
    4. '```' → logprob: -7.391393184661865
    5. ':' → logprob: -9.016392707824707
    6. '):
' → logprob: -9.391392707824707
    7. '	for' → logprob: -9.391392707824707
    8. ',' → logprob: -9.516392707824707
    9. ')' → logprob: -9.766392707824707
    10. ':
' → logprob: -9.766392707824707

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004060829058289528
    2. 'B' → logprob: -6.379060745239258
    3. '   ' → logprob: -7.629060745239258
    4. ' for' → logprob: -7.754060745239258
    5. 'def' → logprob: -7.879060745239258
    6. 'j' → logprob: -8.504060745239258
    7. 'temp' → logprob: -9.129060745239258
    8. 'i' → logprob: -9.254060745239258
    9. 'idx' → logprob: -9.254060745239258
    10. 'b' → logprob: -9.754060745239258

Token 263: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3915289044380188
    2. ' i' → logprob: -1.141528844833374
    3. 'j' → logprob: -6.641529083251953
    4. 'k' → logprob: -6.766529083251953
    5. ' j' → logprob: -7.141529083251953
    6. 'x' → logprob: -7.641529083251953
    7. ' k' → logprob: -7.891529083251953
    8. ' x' → logprob: -8.641529083251953
    9. 'v' → logprob: -9.891529083251953
    10. 'd' → logprob: -10.391529083251953

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2525852918624878
    2. 'in' → logprob: -1.5025852918624878
    3. ',' → logprob: -9.002585411071777
    4. ' ' → logprob: -9.127585411071777
    5. 'n' → logprob: -9.127585411071777
    6. '(' → logprob: -10.002585411071777
    7. ')' → logprob: -10.127585411071777
    8. '   ' → logprob: -10.127585411071777
    9. '0' → logprob: -10.752585411071777
    10. '```' → logprob: -10.752585411071777

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31327372789382935
    2. ' range' → logprob: -1.3132736682891846
    3. '(range' → logprob: -11.938273429870605
    4. '	range' → logprob: -13.063273429870605
    5. '   ' → logprob: -13.313273429870605
    6. ' xrange' → logprob: -14.313273429870605
    7. ' ' → logprob: -15.063273429870605
    8. '  ' → logprob: -15.938273429870605
    9. 'r' → logprob: -16.188274383544922
    10. 'rang' → logprob: -16.563274383544922

Token 266: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18252089619636536
    2. '(N' → logprob: -1.807520866394043
    3. '(X' → logprob: -5.932520866394043
    4. '1' → logprob: -9.557520866394043
    5. '(len' → logprob: -11.057520866394043
    6. '(n' → logprob: -11.432520866394043
    7. '(B' → logprob: -11.557520866394043
    8. 'X' → logprob: -13.182520866394043
    9. '(x' → logprob: -13.432520866394043
    10. ' (' → logprob: -13.432520866394043

Token 267: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3747116029262543
    2. '):
' → logprob: -1.6247116327285767
    3. ' +' → logprob: -2.749711513519287
    4. '):' → logprob: -2.999711513519287
    5. '-' → logprob: -7.249711513519287
    6. '   ' → logprob: -7.999711513519287
    7. ',' → logprob: -8.124711990356445
    8. ' -' → logprob: -8.624711990356445
    9. ' ):' → logprob: -9.249711990356445
    10. ' ):
' → logprob: -9.249711990356445

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014173032715916634
    2. ' ' → logprob: -4.2641730308532715
    3. '   ' → logprob: -12.26417350769043
    4. ')' → logprob: -14.13917350769043
    5. '0' → logprob: -14.32667350769043
    6. '2' → logprob: -14.38917350769043
    7. '```' → logprob: -14.38917350769043
    8. ',' → logprob: -14.76417350769043
    9. '  ' → logprob: -15.26417350769043
    10. '
' → logprob: -15.82667350769043

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '0' → logprob: -14.500046730041504
    4. '   ' → logprob: -15.000046730041504
    5. '2' → logprob: -16.375045776367188
    6. '```' → logprob: -16.500045776367188
    7. ')' → logprob: -16.875045776367188
    8. '-' → logprob: -17.562545776367188
    9. ',' → logprob: -17.750045776367188
    10. ' -' → logprob: -17.937545776367188

Token 270: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25196245312690735
    2. '):' → logprob: -1.501962423324585
    3. '):
' → logprob: -10.626962661743164
    4. ')' → logprob: -12.376962661743164
    5. '   ' → logprob: -13.001962661743164
    6. ' ):
' → logprob: -14.001962661743164
    7. ':' → logprob: -14.501962661743164
    8. '):

' → logprob: -14.626962661743164
    9. ' ):' → logprob: -15.126962661743164
    10. '():
' → logprob: -15.501962661743164

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003281929297372699
    2. ':' → logprob: -6.503282070159912
    3. '):
' → logprob: -7.503282070159912
    4. '):' → logprob: -7.753282070159912
    5. '   ' → logprob: -8.003281593322754
    6. ',' → logprob: -9.128281593322754
    7. ':
' → logprob: -9.128281593322754
    8. ' B' → logprob: -9.753281593322754
    9. ')' → logprob: -10.128281593322754
    10. 'B' → logprob: -11.128281593322754

Token 272: ' type' (ID: 1490)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05179235339164734
    2. ' B' → logprob: -3.1767923831939697
    3. '       ' → logprob: -5.551792144775391
    4. '   ' → logprob: -5.676792144775391
    5. 'if' → logprob: -7.426792144775391
    6. ' if' → logprob: -8.30179214477539
    7. '           ' → logprob: -8.80179214477539
    8. 'for' → logprob: -8.80179214477539
    9. ' ' → logprob: -9.30179214477539
    10. '	B' → logprob: -10.05179214477539

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -11.625031471252441
    3. '2' → logprob: -11.750031471252441
    4. '_' → logprob: -12.125031471252441
    5. '```' → logprob: -13.000031471252441
    6. '   ' → logprob: -13.125031471252441
    7. 'def' → logprob: -13.250031471252441
    8. '
' → logprob: -14.500031471252441
    9. ')' → logprob: -14.750031471252441
    10. ',' → logprob: -14.875031471252441

Token 274: '_inner' (ID: 81672)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.001680059707723558
    2. '_' → logprob: -6.87667989730835
    3. '_Update' → logprob: -9.501680374145508
    4. '   ' → logprob: -9.626680374145508
    5. '_i' → logprob: -9.876680374145508
    6. ' _' → logprob: -10.001680374145508
    7. '_up' → logprob: -10.501680374145508
    8. '_count' → logprob: -10.751680374145508
    9. '_write' → logprob: -10.876680374145508
    10. '_UPDATE' → logprob: -10.876680374145508

Token 275: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.0018641414353623986
    2. '   ' → logprob: -7.126863956451416
    3. '_' → logprob: -7.626863956451416
    4. 'for' → logprob: -9.001864433288574
    5. '_Update' → logprob: -9.626864433288574
    6. '```' → logprob: -10.001864433288574
    7. '_for' → logprob: -10.376864433288574
    8. ' for' → logprob: -10.376864433288574
    9. '_write' → logprob: -10.876864433288574
    10. ' =' → logprob: -11.001864433288574

Token 276: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0009348054882138968
    2. '(' → logprob: -8.375934600830078
    3. '   ' → logprob: -8.375934600830078
    4. ' (' → logprob: -8.625934600830078
    5. ' =' → logprob: -9.625934600830078
    6. '=' → logprob: -10.000934600830078
    7. '(A' → logprob: -10.000934600830078
    8. 'def' → logprob: -10.250934600830078
    9. '       ' → logprob: -10.750934600830078
    10. '(
' → logprob: -11.375934600830078

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044830769184045494
    2. ',i' → logprob: -8.500448226928711
    3. '[i' → logprob: -8.750448226928711
    4. ' ,' → logprob: -9.750448226928711
    5. '   ' → logprob: -11.375448226928711
    6. '[' → logprob: -12.125448226928711
    7. ',A' → logprob: -12.250448226928711
    8. '[A' → logprob: -13.625448226928711
    9. ')' → logprob: -13.875448226928711
    10. ',
' → logprob: -14.375448226928711

Token 278: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21667176485061646
    2. ' A' → logprob: -1.8416717052459717
    3. 'i' → logprob: -3.5916717052459717
    4. 'X' → logprob: -5.591671943664551
    5. ' i' → logprob: -5.841671943664551
    6. 'N' → logprob: -6.966671943664551
    7. ' X' → logprob: -8.46667194366455
    8. '   ' → logprob: -8.59167194366455
    9. ',' → logprob: -8.71667194366455
    10. ')' → logprob: -8.84167194366455

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004255646374076605
    2. ',i' → logprob: -5.879255771636963
    3. '[i' → logprob: -6.629255771636963
    4. ' ,' → logprob: -9.879255294799805
    5. '   ' → logprob: -10.254255294799805
    6. '[' → logprob: -11.379255294799805
    7. ',N' → logprob: -11.504255294799805
    8. '[N' → logprob: -12.254255294799805
    9. '```' → logprob: -13.004255294799805
    10. ',n' → logprob: -13.129255294799805

Token 280: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3586675524711609
    2. 'i' → logprob: -1.9836676120758057
    3. ' N' → logprob: -2.1086676120758057
    4. ' i' → logprob: -3.4836676120758057
    5. ',' → logprob: -4.983667373657227
    6. 'X' → logprob: -5.983667373657227
    7. '   ' → logprob: -6.858667373657227
    8. ',N' → logprob: -7.983667373657227
    9. ' X' → logprob: -8.358667373657227
    10. ' ' → logprob: -8.358667373657227

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028386167832650244
    2. ' ,' → logprob: -9.000284194946289
    3. ',i' → logprob: -9.875284194946289
    4. ',X' → logprob: -9.875284194946289
    5. '   ' → logprob: -10.625284194946289
    6. ')' → logprob: -10.875284194946289
    7. '[X' → logprob: -12.500284194946289
    8. '[i' → logprob: -12.875284194946289
    9. '  ' → logprob: -13.500284194946289
    10. '[' → logprob: -13.625284194946289

Token 282: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0168604739010334
    2. ' X' → logprob: -4.141860485076904
    3. 'N' → logprob: -7.266860485076904
    4. '   ' → logprob: -9.891860008239746
    5. ' ' → logprob: -10.516860008239746
    6. ' N' → logprob: -10.766860008239746
    7. '  ' → logprob: -11.766860008239746
    8. 'i' → logprob: -12.141860008239746
    9. ')' → logprob: -12.266860008239746
    10. '	X' → logprob: -13.266860008239746

Token 283: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.479218453168869
    2. ',' → logprob: -0.9792184829711914
    3. '[i' → logprob: -5.604218482971191
    4. ',i' → logprob: -7.479218482971191
    5. ' )' → logprob: -8.354218482971191
    6. ' ,' → logprob: -8.604218482971191
    7. '[' → logprob: -9.229218482971191
    8. '   ' → logprob: -9.604218482971191
    9. '+' → logprob: -10.479218482971191
    10. ')
' → logprob: -10.604218482971191

Token 284: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3571509122848511
    2. '   ' → logprob: -1.857150912284851
    3. '<|end|>' → logprob: -2.7321510314941406
    4. ' def' → logprob: -3.7321510314941406
    5. '       ' → logprob: -3.9821510314941406
    6. ',' → logprob: -4.232151031494141
    7. ':' → logprob: -4.482151031494141
    8. ' for' → logprob: -6.232151031494141
    9. '```' → logprob: -6.482151031494141
    10. '[i' → logprob: -6.482151031494141

Token 285: ' type' (ID: 1490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4790313243865967
    2. ' type' → logprob: -1.4790313243865967
    3. 'type' → logprob: -2.1040313243865967
    4. ' def' → logprob: -3.6040313243865967
    5. '
' → logprob: -6.104031562805176
    6. 'for' → logprob: -7.104031562805176
    7. ' for' → logprob: -8.979031562805176
    8. '_type' → logprob: -9.854031562805176
    9. 'range' → logprob: -10.541531562805176
    10. '```' → logprob: -10.541531562805176

Token 286: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132713735103607
    2. '1' → logprob: -1.313271403312683
    3. '3' → logprob: -11.938271522521973
    4. '0' → logprob: -13.063271522521973
    5. '_' → logprob: -14.813271522521973
    6. '```' → logprob: -15.188271522521973
    7. '4' → logprob: -15.938271522521973
    8. ' ' → logprob: -16.188270568847656
    9. '5' → logprob: -16.938270568847656
    10. 'type' → logprob: -17.313270568847656

Token 287: '_inner' (ID: 81672)
  Prédit: '_inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inner' → logprob: -0.0016873201820999384
    2. '_update' → logprob: -6.501687526702881
    3. '_outer' → logprob: -8.751687049865723
    4. '_internal' → logprob: -11.376687049865723
    5. '_' → logprob: -13.126687049865723
    6. '```' → logprob: -13.501687049865723
    7. '_type' → logprob: -13.751687049865723
    8. '_continue' → logprob: -14.001687049865723
    9. '_in' → logprob: -14.126687049865723
    10. '1' → logprob: -14.126687049865723

Token 288: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -7.896309739408025e-07
    2. 'update' → logprob: -14.625000953674316
    3. '_inner' → logprob: -16.375
    4. 'def' → logprob: -16.5
    5. '_updates' → logprob: -16.75
    6. '_Update' → logprob: -16.875
    7. '_UPDATE' → logprob: -17.125
    8. 'Update' → logprob: -17.875
    9. '_write' → logprob: -18.25
    10. '_updated' → logprob: -18.25

Token 289: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -3.6789137084269896e-05
    2. '(' → logprob: -10.25003719329834
    3. 'def' → logprob: -13.87503719329834
    4. '(
' → logprob: -15.50003719329834
    5. '<|end|>' → logprob: -17.375036239624023
    6. ' (' → logprob: -17.500036239624023
    7. '```' → logprob: -17.875036239624023
    8. '(b' → logprob: -18.125036239624023
    9. '[B' → logprob: -18.500036239624023
    10. '   ' → logprob: -18.875036239624023

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -11.125027656555176
    3. ',A' → logprob: -11.375027656555176
    4. '   ' → logprob: -15.125027656555176
    5. ',B' → logprob: -15.625027656555176
    6. ',
' → logprob: -15.750027656555176
    7. 'A' → logprob: -16.50002670288086
    8. ' A' → logprob: -16.62502670288086
    9. '‌,' → logprob: -16.62502670288086
    10. '[A' → logprob: -17.00002670288086

Token 291: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6350675225257874
    2. ' A' → logprob: -0.7600675225257874
    3. 'i' → logprob: -7.010067462921143
    4. 'X' → logprob: -7.510067462921143
    5. 'N' → logprob: -8.1350679397583
    6. ' i' → logprob: -8.2600679397583
    7. ' X' → logprob: -8.5100679397583
    8. ' N' → logprob: -8.8850679397583
    9. ' ' → logprob: -9.8850679397583
    10. '   ' → logprob: -10.5100679397583

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010878815373871475
    2. ' ,' → logprob: -9.75010871887207
    3. ',i' → logprob: -10.00010871887207
    4. '   ' → logprob: -12.87510871887207
    5. 'def' → logprob: -14.62510871887207
    6. '[i' → logprob: -14.87510871887207
    7. ',
' → logprob: -15.50010871887207
    8. ',N' → logprob: -15.50010871887207
    9. ' ' → logprob: -15.62510871887207
    10. ',n' → logprob: -15.75010871887207

Token 293: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1615467667579651
    2. 'i' → logprob: -2.4115467071533203
    3. ' N' → logprob: -3.0365467071533203
    4. ' i' → logprob: -5.03654670715332
    5. ',' → logprob: -5.41154670715332
    6. ',N' → logprob: -8.28654670715332
    7. ' ' → logprob: -9.53654670715332
    8. ',i' → logprob: -9.78654670715332
    9. ')' → logprob: -10.03654670715332
    10. 'X' → logprob: -10.53654670715332

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ',i' → logprob: -14.625032424926758
    4. '   ' → logprob: -16.125032424926758
    5. ',
' → logprob: -16.250032424926758
    6. ',int' → logprob: -16.250032424926758
    7. ',X' → logprob: -16.250032424926758
    8. ',N' → logprob: -16.375032424926758
    9. '```' → logprob: -16.750032424926758
    10. 'def' → logprob: -16.750032424926758

Token 295: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.04300502687692642
    2. ' X' → logprob: -3.1680049896240234
    3. ' ' → logprob: -13.168004989624023
    4. ')' → logprob: -13.793004989624023
    5. '   ' → logprob: -14.168004989624023
    6. 'x' → logprob: -14.293004989624023
    7. '	X' → logprob: -14.543004989624023
    8. 'i' → logprob: -14.668004989624023
    9. '  ' → logprob: -16.043004989624023
    10. '_X' → logprob: -16.543004989624023

Token 296: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.364694207906723
    2. ',' → logprob: -1.6146942377090454
    3. '):
' → logprob: -2.239694118499756
    4. '   ' → logprob: -9.489694595336914
    5. '):
' → logprob: -10.614694595336914
    6. ' ,' → logprob: -11.239694595336914
    7. '):

' → logprob: -11.614694595336914
    8. ')' → logprob: -11.739694595336914
    9. ' ):' → logprob: -12.114694595336914
    10. ',X' → logprob: -13.739694595336914

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058920301496982574
    2. 'for' → logprob: -3.308920383453369
    3. ' for' → logprob: -4.433920383453369
    4. 'B' → logprob: -5.183920383453369
    5. ' B' → logprob: -6.558920383453369
    6. 'if' → logprob: -7.058920383453369
    7. ' if' → logprob: -8.183919906616211
    8. '       ' → logprob: -8.308919906616211
    9. 'j' → logprob: -10.183919906616211
    10. 'b' → logprob: -10.183919906616211

Token 298: ' for' (ID: 395)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7363210320472717
    2. 'for' (adapté à ' for') → logprob: -0.7363210320472717
    3. 'if' → logprob: -3.736320972442627
    4. '   ' → logprob: -5.361320972442627
    5. 'val' → logprob: -5.986320972442627
    6. ' for' → logprob: -6.111320972442627
    7. 'temp' → logprob: -6.361320972442627
    8. 'j' → logprob: -6.736320972442627
    9. ' B' → logprob: -6.986320972442627
    10. 's' → logprob: -7.111320972442627

Token 299: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.552299439907074
    2. 'j' → logprob: -1.0522994995117188
    3. ' k' → logprob: -3.3022994995117188
    4. 'k' → logprob: -3.5522994995117188
    5. ' x' → logprob: -5.802299499511719
    6. 'x' → logprob: -6.177299499511719
    7. ' v' → logprob: -7.552299499511719
    8. ' s' → logprob: -7.927299499511719
    9. 'v' → logprob: -8.052299499511719
    10. ' d' → logprob: -8.177299499511719

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04322526603937149
    2. 'in' → logprob: -3.1682252883911133
    3. ')' → logprob: -9.668225288391113
    4. ' ' → logprob: -10.293225288391113
    5. '   ' → logprob: -10.543225288391113
    6. ',' → logprob: -11.043225288391113
    7. 'range' → logprob: -11.168225288391113
    8. '```' → logprob: -11.418225288391113
    9. '  ' → logprob: -12.043225288391113
    10. 'n' → logprob: -12.043225288391113

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06203065440058708
    2. ' range' → logprob: -2.812030553817749
    3. '(range' → logprob: -10.187030792236328
    4. ' xrange' → logprob: -12.437030792236328
    5. '	range' → logprob: -12.687030792236328
    6. '   ' → logprob: -12.812030792236328
    7. '2' → logprob: -12.937030792236328
    8. '
' → logprob: -13.062030792236328
    9. '[' → logprob: -13.062030792236328
    10. ' ' → logprob: -13.562030792236328

Token 302: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41519755125045776
    2. '(len' → logprob: -1.1651976108551025
    3. '(i' → logprob: -4.415197372436523
    4. '(X' → logprob: -5.415197372436523
    5. '(range' → logprob: -5.790197372436523
    6. ' range' → logprob: -5.915197372436523
    7. '(-' → logprob: -6.290197372436523
    8. 'range' → logprob: -6.540197372436523
    9. 'len' → logprob: -7.290197372436523
    10. ' (' → logprob: -7.790197372436523

Token 303: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3950614631175995
    2. ' +' → logprob: -1.1450614929199219
    3. ',' → logprob: -4.895061492919922
    4. '   ' → logprob: -8.520061492919922
    5. '-' → logprob: -9.145061492919922
    6. ' -' → logprob: -9.145061492919922
    7. '):' → logprob: -9.395061492919922
    8. '):
' → logprob: -9.770061492919922
    9. ' ,' → logprob: -9.770061492919922
    10. '()+' → logprob: -11.895061492919922

Token 304: ' min' (ID: 1349)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.060309190303087234
    2. ' ' → logprob: -2.9353091716766357
    3. 'len' → logprob: -5.810309410095215
    4. ' len' → logprob: -6.935309410095215
    5. '(' → logprob: -7.935309410095215
    6. 'i' → logprob: -8.310309410095215
    7. '
' → logprob: -8.810309410095215
    8. ' -' → logprob: -8.935309410095215
    9. ' i' → logprob: -9.185309410095215
    10. '0' → logprob: -9.435309410095215

Token 305: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15520526468753815
    2. '(len' → logprob: -2.405205249786377
    3. '(i' → logprob: -3.030205249786377
    4. '(N' → logprob: -5.655205249786377
    5. '(X' → logprob: -6.905205249786377
    6. '(j' → logprob: -7.905205249786377
    7. '(
' → logprob: -8.405205726623535
    8. '((' → logprob: -9.780205726623535
    9. '(B' → logprob: -11.405205726623535
    10. '(A' → logprob: -11.780205726623535

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8840909004211426
    2. '(' → logprob: -1.0090909004211426
    3. '(len' → logprob: -2.1340909004211426
    4. 'len' → logprob: -2.7590909004211426
    5. '(i' → logprob: -3.8840909004211426
    6. 'i' → logprob: -4.759090900421143
    7. '(X' → logprob: -5.634090900421143
    8. ')' → logprob: -6.009090900421143
    9. 'X' → logprob: -6.509090900421143
    10. '(N' → logprob: -7.259090900421143

Token 307: ' *' (ID: 425)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12688231468200684
    2. 'i' → logprob: -2.501882314682007
    3. '*i' → logprob: -3.501882314682007
    4. ' *' → logprob: -6.126882553100586
    5. '(' → logprob: -6.251882553100586
    6. ' i' → logprob: -6.501882553100586
    7. '(j' → logprob: -8.001882553100586
    8. 'j' → logprob: -8.501882553100586
    9. '*' → logprob: -8.501882553100586
    10. ')' → logprob: -8.876882553100586

Token 308: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002439467643853277
    2. ' i' → logprob: -8.625244140625
    3. '(i' → logprob: -10.625244140625
    4. 'j' → logprob: -10.875244140625
    5. '
' → logprob: -11.375244140625
    6. '*i' → logprob: -12.750244140625
    7. ')i' → logprob: -13.000244140625
    8. '_i' → logprob: -14.125244140625
    9. ')' → logprob: -14.250244140625
    10. '[i' → logprob: -14.500244140625

Token 309: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24455302953720093
    2. ' +' → logprob: -1.6195530891418457
    3. ',' → logprob: -3.9945530891418457
    4. ' ,' → logprob: -8.119552612304688
    5. '   ' → logprob: -9.494552612304688
    6. '()+' → logprob: -9.994552612304688
    7. '1' → logprob: -11.119552612304688
    8. ')+' → logprob: -11.244552612304688
    9. '[' → logprob: -11.744552612304688
    10. '+,' → logprob: -11.744552612304688

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008583135902881622
    2. 'i' → logprob: -5.258583068847656
    3. 'X' → logprob: -5.883583068847656
    4. '+' → logprob: -8.633583068847656
    5. 'N' → logprob: -9.258583068847656
    6. '2' → logprob: -9.258583068847656
    7. 'j' → logprob: -10.383583068847656
    8. '   ' → logprob: -10.508583068847656
    9. '(i' → logprob: -10.758583068847656
    10. ')' → logprob: -10.758583068847656

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001737431448418647
    2. ' ' → logprob: -9.500173568725586
    3. '2' → logprob: -9.625173568725586
    4. '+' → logprob: -11.750173568725586
    5. 'X' → logprob: -12.250173568725586
    6. ',' → logprob: -12.375173568725586
    7. '   ' → logprob: -12.375173568725586
    8. 'N' → logprob: -13.812673568725586
    9. 'i' → logprob: -14.000173568725586
    10. ')' → logprob: -14.312673568725586

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3596181571483612
    2. ')' → logprob: -2.1096181869506836
    3. ')+' → logprob: -2.6096181869506836
    4. '):' → logprob: -2.9846181869506836
    5. '+' → logprob: -3.4846181869506836
    6. ' +' → logprob: -4.859618186950684
    7. '()+' → logprob: -5.359618186950684
    8. ')):' → logprob: -5.734618186950684
    9. '):
' → logprob: -6.234618186950684
    10. ' ,' → logprob: -6.359618186950684

Token 313: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.730098307132721
    2. 'i' → logprob: -0.855098307132721
    3. ' i' → logprob: -3.480098247528076
    4. ' X' → logprob: -3.855098247528076
    5. 'j' → logprob: -3.980098247528076
    6. 'len' → logprob: -4.855098247528076
    7. '   ' → logprob: -5.480098247528076
    8. '2' → logprob: -5.605098247528076
    9. ' len' → logprob: -6.230098247528076
    10. ' ' → logprob: -6.855098247528076

Token 314: ')):
' (ID: 22530)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1404108703136444
    2. ' +' → logprob: -2.265410900115967
    3. '[i' → logprob: -4.265410900115967
    4. ')):' → logprob: -4.640410900115967
    5. ')):
' → logprob: -6.390410900115967
    6. '))' → logprob: -7.640410900115967
    7. '   ' → logprob: -7.640410900115967
    8. '[' → logprob: -8.015410423278809
    9. '[j' → logprob: -8.390410423278809
    10. ')' → logprob: -10.265410423278809

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007553085451945662
    2. '):
' → logprob: -8.250755310058594
    3. ',' → logprob: -9.250755310058594
    4. ' B' → logprob: -9.750755310058594
    5. 'B' → logprob: -10.000755310058594
    6. ' if' → logprob: -10.000755310058594
    7. '           ' → logprob: -10.125755310058594
    8. '):' → logprob: -10.125755310058594
    9. ')' → logprob: -10.375755310058594
    10. ':' → logprob: -10.500755310058594

Token 316: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.03139091655611992
    2. ' B' → logprob: -3.531390905380249
    3. '           ' → logprob: -7.031391143798828
    4. 'if' → logprob: -7.906391143798828
    5. ' if' → logprob: -8.656391143798828
    6. '       ' → logprob: -9.281391143798828
    7. '   ' → logprob: -9.781391143798828
    8. '	B' → logprob: -9.906391143798828
    9. '               ' → logprob: -12.406391143798828
    10. ' ' → logprob: -13.031391143798828

Token 317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015123146586120129
    2. '[j' → logprob: -4.39012336730957
    3. '[' → logprob: -6.01512336730957
    4. '[B' → logprob: -9.64012336730957
    5. '[A' → logprob: -11.01512336730957
    6. '[I' → logprob: -11.01512336730957
    7. ' [' → logprob: -11.26512336730957
    8. '```' → logprob: -11.39012336730957
    9. 'i' → logprob: -11.76512336730957
    10. 'j' → logprob: -12.64012336730957

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032701645977795124
    2. ']+=' → logprob: -6.003270149230957
    3. '[j' → logprob: -7.753270149230957
    4. '[i' → logprob: -8.503270149230957
    5. '[' → logprob: -9.378270149230957
    6. ']=' → logprob: -10.753270149230957
    7. 'j' → logprob: -11.128270149230957
    8. ' ]' → logprob: -11.503270149230957
    9. ']+' → logprob: -11.628270149230957
    10. '   ' → logprob: -12.628270149230957

Token 319: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2862755358219147
    2. '=' → logprob: -1.7862755060195923
    3. ' +=' → logprob: -2.661275625228882
    4. ' =' → logprob: -4.661275386810303
    5. ' ^=' → logprob: -6.786275386810303
    6. '^' → logprob: -7.786275386810303
    7. '[' → logprob: -8.411275863647461
    8. ']+=' → logprob: -9.036275863647461
    9. '+' → logprob: -10.536275863647461
    10. ' |=' → logprob: -10.786275863647461

Token 320: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015047440538182855
    2. ' A' → logprob: -6.501504898071289
    3. '(A' → logprob: -13.751504898071289
    4. '	A' → logprob: -14.251504898071289
    5. '(' → logprob: -14.626504898071289
    6. '   ' → logprob: -16.00150489807129
    7. 'a' → logprob: -17.12650489807129
    8. ' ' → logprob: -17.12650489807129
    9. '[' → logprob: -17.62650489807129
    10. '_A' → logprob: -17.75150489807129

Token 321: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.50000286102295
    3. '[I' → logprob: -14.00000286102295
    4. ' [' → logprob: -15.75000286102295
    5. '[j' → logprob: -16.500001907348633
    6. '[A' → logprob: -16.625001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'i' → logprob: -17.500001907348633
    9. '<|end|>' → logprob: -17.625001907348633
    10. '[int' → logprob: -17.875001907348633

Token 322: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004883344518020749
    2. '[j' → logprob: -7.87548828125
    3. ']' → logprob: -9.50048828125
    4. '[i' → logprob: -10.75048828125
    5. '[' → logprob: -12.37548828125
    6. ' ][' → logprob: -13.12548828125
    7. '"][' → logprob: -13.75048828125
    8. ''][' → logprob: -13.87548828125
    9. '```' → logprob: -13.87548828125
    10. ']][' → logprob: -14.62548828125

Token 323: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -12.875003814697266
    3. '	j' → logprob: -15.625003814697266
    4. '
' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '<|end|>' → logprob: -15.750003814697266
    7. ' ' → logprob: -16.375003814697266
    8. '[j' → logprob: -16.375003814697266
    9. ']' → logprob: -16.625003814697266
    10. '[' → logprob: -17.375003814697266

Token 324: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.017927029868588e-05
    2. ' ]' → logprob: -10.125080108642578
    3. ']*' → logprob: -11.000080108642578
    4. ']
' → logprob: -11.500080108642578
    5. '<|end|>' → logprob: -12.500080108642578
    6. '])' → logprob: -12.625080108642578
    7. '[' → logprob: -13.000080108642578
    8. ']<<' → logprob: -14.500080108642578
    9. ']

' → logprob: -14.500080108642578
    10. '[j' → logprob: -14.625080108642578

Token 325: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.6213949918746948
    2. ' B' → logprob: -1.4963949918746948
    3. ' type' → logprob: -1.9963949918746948
    4. 'B' → logprob: -2.6213951110839844
    5. 'for' → logprob: -5.121395111083984
    6. 'range' → logprob: -5.121395111083984
    7. 'def' → logprob: -5.371395111083984
    8. '```' → logprob: -6.371395111083984
    9. ' range' → logprob: -6.621395111083984
    10. '(B' → logprob: -6.621395111083984

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026338381692767143
    2. '1' → logprob: -3.6513383388519287
    3. '3' → logprob: -10.526338577270508
    4. '0' → logprob: -12.151338577270508
    5. '_' → logprob: -12.776338577270508
    6. ' ' → logprob: -14.026338577270508
    7. 'def' → logprob: -14.276338577270508
    8. '```' → logprob: -14.401338577270508
    9. '4' → logprob: -14.651338577270508
    10. 'type' → logprob: -15.526338577270508

Token 328: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -1.8624639324116288e-06
    2. '(B' → logprob: -14.875001907348633
    3. 'def' → logprob: -15.000001907348633
    4. 'update' → logprob: -15.000001907348633
    5. '_updates' → logprob: -15.625001907348633
    6. '_' → logprob: -15.750001907348633
    7. '_UPDATE' → logprob: -16.250001907348633
    8. '_Update' → logprob: -16.250001907348633
    9. '_updated' → logprob: -16.875001907348633
    10. '_add' → logprob: -17.125001907348633

Token 329: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0011726059019565582
    2. '(' → logprob: -6.7511725425720215
    3. ' (' → logprob: -14.50117301940918
    4. '(
' → logprob: -14.62617301940918
    5. '(A' → logprob: -14.62617301940918
    6. 'def' → logprob: -14.75117301940918
    7. '()' → logprob: -15.00117301940918
    8. '(C' → logprob: -16.12617301940918
    9. '(M' → logprob: -16.75117301940918
    10. '((' → logprob: -17.37617301940918

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9424725148128346e-05
    2. ',B' → logprob: -10.375049591064453
    3. ' ,' → logprob: -11.375049591064453
    4. '(B' → logprob: -12.125049591064453
    5. ',
' → logprob: -14.500049591064453
    6. 'def' → logprob: -15.500049591064453
    7. 'B' → logprob: -16.250049591064453
    8. '

' → logprob: -16.500049591064453
    9. '   ' → logprob: -16.750049591064453
    10. '[B' → logprob: -16.875049591064453

Token 331: ' N' (ID: 478)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5823572278022766
    2. 'A' → logprob: -0.9573572278022766
    3. ' B' → logprob: -3.582357168197632
    4. 'B' → logprob: -4.332357406616211
    5. ' N' → logprob: -5.207357406616211
    6. 'N' → logprob: -5.582357406616211
    7. 'X' → logprob: -6.082357406616211
    8. ' X' → logprob: -6.332357406616211
    9. ' P' → logprob: -7.207357406616211
    10. 'P' → logprob: -7.832357406616211

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003782416461035609
    2. '):' → logprob: -8.375378608703613
    3. ',B' → logprob: -9.500378608703613
    4. ' ,' → logprob: -10.500378608703613
    5. '):
' → logprob: -10.500378608703613
    6. ',A' → logprob: -12.125378608703613
    7. '   ' → logprob: -12.875378608703613
    8. ')' → logprob: -13.125378608703613
    9. ',X' → logprob: -13.125378608703613
    10. ',
' → logprob: -14.125378608703613

Token 333: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3785191774368286
    2. 'P' → logprob: -1.7535191774368286
    3. 'A' → logprob: -3.128519058227539
    4. ' X' → logprob: -3.253519058227539
    5. ' P' → logprob: -3.878519058227539
    6. 'i' → logprob: -5.128519058227539
    7. ' A' → logprob: -5.378519058227539
    8. 'C' → logprob: -5.753519058227539
    9. 'B' → logprob: -5.753519058227539
    10. 'M' → logprob: -6.128519058227539

Token 334: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3649665117263794
    2. '):
' → logprob: -1.6149665117263794
    3. '):' → logprob: -2.23996639251709
    4. '):
' → logprob: -8.98996639251709
    5. '   ' → logprob: -9.11496639251709
    6. ' ,' → logprob: -9.36496639251709
    7. ')' → logprob: -9.86496639251709
    8. '):

' → logprob: -11.61496639251709
    9. ' ):' → logprob: -11.73996639251709
    10. ' ):
' → logprob: -11.98996639251709

Token 335: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15742459893226624
    2. '   ' → logprob: -2.0324246883392334
    3. ' for' → logprob: -4.407424449920654
    4. 'def' → logprob: -6.032424449920654
    5. '```' → logprob: -10.907424926757812
    6. 'if' → logprob: -11.407424926757812
    7. 'B' → logprob: -11.782424926757812
    8. '	for' → logprob: -12.282424926757812
    9. ' def' → logprob: -12.907424926757812
    10. 'i' → logprob: -13.157424926757812

Token 336: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00381183042190969
    2. 'if' (adapté à ' if') → logprob: -6.253811836242676
    3. 'B' → logprob: -7.003811836242676
    4. 'def' → logprob: -8.128811836242676
    5. ' for' → logprob: -9.128811836242676
    6. '   ' → logprob: -9.753811836242676
    7. 'start' → logprob: -9.878811836242676
    8. 'limit' → logprob: -9.878811836242676
    9. 'idx' → logprob: -10.003811836242676
    10. 'count' → logprob: -10.253811836242676

Token 337: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.10663144290447235
    2. 'X' → logprob: -2.3566315174102783
    3. ' ' → logprob: -5.856631278991699
    4. ' N' → logprob: -6.481631278991699
    5. ' B' → logprob: -7.606631278991699
    6. '0' → logprob: -8.2316312789917
    7. '1' → logprob: -8.4816312789917
    8. '   ' → logprob: -8.7316312789917
    9. ' isinstance' → logprob: -8.8566312789917
    10. 'N' → logprob: -8.8566312789917

Token 338: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9012175798416138
    2. '==' → logprob: -1.6512175798416138
    3. ' <' → logprob: -1.9012175798416138
    4. ' >' → logprob: -2.526217460632324
    5. ' <=' → logprob: -3.026217460632324
    6. ' >=' → logprob: -3.151217460632324
    7. '>' → logprob: -3.276217460632324
    8. '[' → logprob: -4.026217460632324
    9. '>=' → logprob: -4.651217460632324
    10. '<=' → logprob: -4.901217460632324

Token 339: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011632794514298439
    2. ' ' → logprob: -4.511632919311523
    3. '3' → logprob: -7.886632919311523
    4. '1' → logprob: -8.886632919311523
    5. '4' → logprob: -9.886632919311523
    6. '=' → logprob: -13.011632919311523
    7. '```' → logprob: -13.136632919311523
    8. '100' → logprob: -13.386632919311523
    9. '  ' → logprob: -13.449132919311523
    10. '(' → logprob: -13.511632919311523

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006037878338247538
    2. '3' → logprob: -8.250603675842285
    3. '1' → logprob: -8.750603675842285
    4. '4' → logprob: -9.250603675842285
    5. 'N' → logprob: -10.750603675842285
    6. ' ' → logprob: -10.750603675842285
    7. '(N' → logprob: -11.250603675842285
    8. '(' → logprob: -11.875603675842285
    9. '10' → logprob: -11.875603675842285
    10. '=' → logprob: -12.625603675842285

Token 341: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3536706566810608
    2. ' ==' → logprob: -1.228670597076416
    3. ' !=' → logprob: -5.978670597076416
    4. '!=' → logprob: -6.103670597076416
    5. '0' → logprob: -8.603671073913574
    6. ':' → logprob: -8.853671073913574
    7. '=' → logprob: -10.728671073913574
    8. '==
' → logprob: -10.728671073913574
    9. '1' → logprob: -10.853671073913574
    10. ' and' → logprob: -11.603671073913574

Token 342: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09151154011487961
    2. '1' → logprob: -2.4665114879608154
    3. ' ' → logprob: -5.9665117263793945
    4. '=' → logprob: -13.841511726379395
    5. '2' → logprob: -14.466511726379395
    6. '   ' → logprob: -14.466511726379395
    7. '
' → logprob: -14.654011726379395
    8. '```' → logprob: -14.716511726379395
    9. '==' → logprob: -15.341511726379395
    10. '...' → logprob: -15.716511726379395

Token 343: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06338785588741302
    2. '1' → logprob: -2.813387870788574
    3. ' ' → logprob: -6.563387870788574
    4. '2' → logprob: -12.313387870788574
    5. '=' → logprob: -13.813387870788574
    6. '   ' → logprob: -14.375887870788574
    7. '==' → logprob: -14.875887870788574
    8. '```' → logprob: -15.188387870788574
    9. ')' → logprob: -16.000886917114258
    10. '
' → logprob: -16.063386917114258

Token 344: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5841604471206665
    2. ':' → logprob: -0.8341604471206665
    3. '       ' → logprob: -5.334160327911377
    4. ' and' → logprob: -5.834160327911377
    5. 'and' → logprob: -8.709160804748535
    6. '):
' → logprob: -9.459160804748535
    7. '   ' → logprob: -9.584160804748535
    8. ' or' → logprob: -10.709160804748535
    9. '==' → logprob: -10.834160804748535
    10. ',' → logprob: -10.834160804748535

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08227697014808655
    2. ':
' → logprob: -2.8322770595550537
    3. ':' → logprob: -4.082276821136475
    4. ' for' → logprob: -6.582276821136475
    5. '
' → logprob: -7.582276821136475
    6. '):
' → logprob: -7.957276821136475
    7. ' :
' → logprob: -8.582277297973633
    8. '   ' → logprob: -8.707277297973633
    9. 'for' → logprob: -8.707277297973633
    10. ' and' → logprob: -9.207277297973633

Token 346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25244832038879395
    2. 'B' → logprob: -2.002448320388794
    3. '   ' → logprob: -3.377448320388794
    4. 'return' → logprob: -3.752448320388794
    5. 'mid' → logprob: -4.627448081970215
    6. ' for' → logprob: -4.877448081970215
    7. 'if' → logprob: -6.627448081970215
    8. ' B' → logprob: -6.627448081970215
    9. 'half' → logprob: -6.752448081970215
    10. '       ' → logprob: -7.127448081970215

Token 347: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6947177052497864
    2. ' i' → logprob: -0.6947177052497864
    3. '   ' → logprob: -6.944717884063721
    4. 'j' → logprob: -9.319717407226562
    5. 'x' → logprob: -9.444717407226562
    6. ' j' → logprob: -9.444717407226562
    7. 'k' → logprob: -9.569717407226562
    8. ' ' → logprob: -9.819717407226562
    9. ' x' → logprob: -9.944717407226562
    10. ' k' → logprob: -10.319717407226562

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014435792341828346
    2. 'in' → logprob: -4.264435768127441
    3. ' range' → logprob: -9.014435768127441
    4. 'range' → logprob: -9.139435768127441
    5. ' ' → logprob: -10.514435768127441
    6. '   ' → logprob: -12.264435768127441
    7. '  ' → logprob: -12.639435768127441
    8. '<|end|>' → logprob: -12.889435768127441
    9. '```' → logprob: -13.389435768127441
    10. '(range' → logprob: -13.889435768127441

Token 349: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08895615488290787
    2. ' range' → logprob: -2.463956117630005
    3. '   ' → logprob: -12.088955879211426
    4. '(range' → logprob: -12.963955879211426
    5. 're' → logprob: -13.588955879211426
    6. 'B' → logprob: -13.713955879211426
    7. 'in' → logprob: -13.713955879211426
    8. ' ' → logprob: -13.838955879211426
    9. '
' → logprob: -13.838955879211426
    10. '  ' → logprob: -14.588955879211426

Token 350: '(X' (ID: 17061)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.270747572183609
    2. '(' → logprob: -1.8957475423812866
    3. '(X' → logprob: -3.145747661590576
    4. 'N' → logprob: -3.520747661590576
    5. '1' → logprob: -4.520747661590576
    6. 'X' → logprob: -5.895747661590576
    7. '(len' → logprob: -8.020747184753418
    8. '((' → logprob: -8.645747184753418
    9. '0' → logprob: -9.895747184753418
    10. 'len' → logprob: -10.270747184753418

Token 351: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6287623643875122
    2. ',' → logprob: -1.5037623643875122
    3. '+' → logprob: -1.6287623643875122
    4. '):
' → logprob: -3.7537622451782227
    5. '):' → logprob: -5.003762245178223
    6. ' ,' → logprob: -5.253762245178223
    7. '//' → logprob: -5.378762245178223
    8. ' //' → logprob: -5.628762245178223
    9. ' -' → logprob: -6.378762245178223
    10. '   ' → logprob: -6.503762245178223

Token 352: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007136243395507336
    2. ' N' → logprob: -5.132136344909668
    3. 'len' → logprob: -6.882136344909668
    4. '   ' → logprob: -9.507136344909668
    5. ' len' → logprob: -10.257136344909668
    6. '-' → logprob: -10.632136344909668
    7. '	N' → logprob: -11.882136344909668
    8. ' -' → logprob: -12.007136344909668
    9. ' ' → logprob: -12.132136344909668
    10. '    ' → logprob: -12.382136344909668

Token 353: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07003124803304672
    2. ' +' → logprob: -2.69503116607666
    3. '):
' → logprob: -10.07003116607666
    4. '   ' → logprob: -10.57003116607666
    5. '):' → logprob: -11.94503116607666
    6. ',' → logprob: -12.32003116607666
    7. '+
' → logprob: -12.32003116607666
    8. '-' → logprob: -12.69503116607666
    9. '1' → logprob: -12.94503116607666
    10. ')' → logprob: -13.32003116607666

Token 354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.50002384185791
    4. ')' → logprob: -14.87502384185791
    5. '```' → logprob: -15.12502384185791
    6. ',' → logprob: -15.75002384185791
    7. '):
' → logprob: -16.562524795532227
    8. '+' → logprob: -17.187524795532227
    9. '
' → logprob: -17.437524795532227
    10. '[' → logprob: -17.562524795532227

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.750012397766113
    4. ')' → logprob: -15.500012397766113
    5. '```' → logprob: -16.37501335144043
    6. '):
' → logprob: -16.75001335144043
    7. ',' → logprob: -17.00001335144043
    8. '2' → logprob: -18.18751335144043
    9. '
' → logprob: -18.18751335144043
    10. '+' → logprob: -18.68751335144043

Token 356: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1654796600341797
    2. '):' → logprob: -1.9154796600341797
    3. ',' → logprob: -5.29047966003418
    4. '+' → logprob: -10.29047966003418
    5. '       ' → logprob: -10.29047966003418
    6. '):
' → logprob: -10.29047966003418
    7. ' ):
' → logprob: -10.29047966003418
    8. '   ' → logprob: -10.41547966003418
    9. ':' → logprob: -11.91547966003418
    10. '):

' → logprob: -12.04047966003418

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029969585593789816
    2. '       ' → logprob: -6.127996921539307
    3. '	       ' → logprob: -8.252997398376465
    4. ' B' → logprob: -8.752997398376465
    5. '               ' → logprob: -9.002997398376465
    6. 'B' → logprob: -9.502997398376465
    7. '   ' → logprob: -10.002997398376465
    8. ',' → logprob: -10.502997398376465
    9. '```' → logprob: -10.752997398376465
    10. '
' → logprob: -10.752997398376465

Token 358: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.8210757374763489
    2. ' B' → logprob: -0.8210757374763489
    3. '               ' → logprob: -2.696075677871704
    4. '           ' → logprob: -3.071075677871704
    5. '       ' → logprob: -5.571075916290283
    6. '   ' → logprob: -6.321075916290283
    7. ' ' → logprob: -8.946075439453125
    8. '                   ' → logprob: -9.883575439453125
    9. 'if' → logprob: -9.883575439453125
    10. ' if' → logprob: -10.133575439453125

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.946405094116926e-05
    2. '[' → logprob: -9.750079154968262
    3. ' [' → logprob: -12.125079154968262
    4. '```' → logprob: -12.125079154968262
    5. '   ' → logprob: -13.375079154968262
    6. ')[' → logprob: -13.875079154968262
    7. '[
' → logprob: -14.000079154968262
    8. '
' → logprob: -14.125079154968262
    9. 'i' → logprob: -14.250079154968262
    10. '][' → logprob: -14.375079154968262

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07253554463386536
    2. ']+=' → logprob: -2.947535514831543
    3. ']=' → logprob: -4.697535514831543
    4. '-' → logprob: -5.947535514831543
    5. '-=' → logprob: -6.697535514831543
    6. '=' → logprob: -6.822535514831543
    7. '+=' → logprob: -7.072535514831543
    8. ' -=' → logprob: -7.322535514831543
    9. '   ' → logprob: -7.447535514831543
    10. ' ]' → logprob: -7.822535514831543

Token 361: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.45535945892333984
    2. '=' → logprob: -1.2053594589233398
    3. ' +=' → logprob: -3.45535945892334
    4. '-=' → logprob: -3.58035945892334
    5. ' =' → logprob: -5.70535945892334
    6. ' -=' → logprob: -6.20535945892334
    7. '^' → logprob: -8.08035945892334
    8. '   ' → logprob: -8.08035945892334
    9. ' ^=' → logprob: -8.45535945892334
    10. '-' → logprob: -8.95535945892334

Token 362: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14938664436340332
    2. '1' → logprob: -2.0243866443634033
    3. ' B' → logprob: -6.024386405944824
    4. '2' → logprob: -6.649386405944824
    5. 'i' → logprob: -7.149386405944824
    6. 'A' → logprob: -7.524386405944824
    7. ' ' → logprob: -7.899386405944824
    8. 'type' → logprob: -7.899386405944824
    9. '(' → logprob: -8.524386405944824
    10. '0' → logprob: -9.024386405944824

Token 363: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22945277392864227
    2. '1' → logprob: -1.6044527292251587
    3. '2' → logprob: -6.354452610015869
    4. 'i' → logprob: -7.354452610015869
    5. 'A' → logprob: -7.729452610015869
    6. ' B' → logprob: -8.229453086853027
    7. '0' → logprob: -8.604453086853027
    8. '(' → logprob: -8.604453086853027
    9. 'X' → logprob: -8.979453086853027
    10. 'type' → logprob: -9.479453086853027

Token 364: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' type' (ID: 1490)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13623197376728058
    2. ' def' → logprob: -2.7612318992614746
    3. 'def' → logprob: -3.8862318992614746
    4. 'main' → logprob: -3.8862318992614746
    5. ' read' → logprob: -5.011231899261475
    6. ' __' → logprob: -5.511231899261475
    7. '__' → logprob: -5.511231899261475
    8. ' sys' → logprob: -6.261231899261475
    9. ' int' → logprob: -6.511231899261475
    10. ' type' → logprob: -7.511231899261475

Token 367: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6371326446533203
    2. '3' → logprob: -1.3871326446533203
    3. '2' → logprob: -1.5121326446533203
    4. '_' → logprob: -7.26213264465332
    5. ' ' → logprob: -9.01213264465332
    6. '=' → logprob: -10.26213264465332
    7. '0' → logprob: -11.07463264465332
    8. '4' → logprob: -11.51213264465332
    9. 'def' → logprob: -11.76213264465332
    10. '```' → logprob: -11.76213264465332

Token 368: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -2.3319124011322856e-05
    2. '_updates' → logprob: -12.500022888183594
    3. '_add' → logprob: -12.875022888183594
    4. '_' → logprob: -13.000022888183594
    5. 'def' → logprob: -13.250022888183594
    6. '_write' → logprob: -13.625022888183594
    7. '_UPDATE' → logprob: -13.625022888183594
    8. '_Update' → logprob: -13.750022888183594
    9. '```' → logprob: -13.875022888183594
    10. ' _' → logprob: -14.000022888183594

Token 369: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.002211516024544835
    2. '(' → logprob: -6.127211570739746
    3. 'def' → logprob: -11.502211570739746
    4. ' (' → logprob: -11.502211570739746
    5. '(
' → logprob: -13.127211570739746
    6. '<|end|>' → logprob: -13.752211570739746
    7. '(A' → logprob: -14.252211570739746
    8. ' def' → logprob: -15.002211570739746
    9. ',' → logprob: -15.002211570739746
    10. '(S' → logprob: -15.502211570739746

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ',B' → logprob: -10.750038146972656
    3. ' ,' → logprob: -11.250038146972656
    4. '(B' → logprob: -13.625038146972656
    5. ')' → logprob: -14.125038146972656
    6. 'B' → logprob: -14.500038146972656
    7. ',
' → logprob: -15.625038146972656
    8. 'def' → logprob: -15.875038146972656
    9. ' B' → logprob: -15.875038146972656
    10. '```' → logprob: -16.125038146972656

Token 371: ' A' (ID: 355)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5552660226821899
    2. ' N' → logprob: -1.80526602268219
    3. 'B' → logprob: -2.3052659034729004
    4. 'A' → logprob: -2.6802659034729004
    5. ' B' → logprob: -3.0552659034729004
    6. ' A' → logprob: -3.3052659034729004
    7. 'X' → logprob: -5.1802659034729
    8. ' X' → logprob: -6.6802659034729
    9. 'P' → logprob: -6.8052659034729
    10. ' P' → logprob: -7.3052659034729

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',N' → logprob: -13.250017166137695
    4. ',B' → logprob: -13.500017166137695
    5. '   ' → logprob: -14.625017166137695
    6. 'def' → logprob: -14.875017166137695
    7. ',
' → logprob: -15.125017166137695
    8. ',A' → logprob: -17.000017166137695
    9. ',n' → logprob: -17.125017166137695
    10. '‌,' → logprob: -17.250017166137695

Token 373: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1430225819349289
    2. ' N' → logprob: -2.0180225372314453
    3. 'X' → logprob: -8.768022537231445
    4. 'i' → logprob: -10.518022537231445
    5. 'B' → logprob: -10.643022537231445
    6. ',' → logprob: -10.768022537231445
    7. ' ' → logprob: -10.768022537231445
    8. ' X' → logprob: -11.018022537231445
    9. 'def' → logprob: -11.393022537231445
    10. 'A' → logprob: -11.393022537231445

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.875011444091797
    3. ',X' → logprob: -13.375011444091797
    4. '   ' → logprob: -14.375011444091797
    5. ',
' → logprob: -14.625011444091797
    6. 'def' → logprob: -14.750011444091797
    7. '):' → logprob: -15.125011444091797
    8. ')' → logprob: -15.500011444091797
    9. 'X' → logprob: -16.125011444091797
    10. '):
' → logprob: -16.375011444091797

Token 375: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10317195951938629
    2. ' X' → logprob: -2.3531720638275146
    3. 'P' → logprob: -7.2281718254089355
    4. 'N' → logprob: -7.7281718254089355
    5. 'A' → logprob: -8.103172302246094
    6. ')' → logprob: -8.228172302246094
    7. 'B' → logprob: -8.228172302246094
    8. ' P' → logprob: -8.353172302246094
    9. ' N' → logprob: -8.978172302246094
    10. 'Y' → logprob: -8.978172302246094

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6465622782707214
    2. '):
' → logprob: -0.7715622782707214
    3. '):' → logprob: -4.396562099456787
    4. '   ' → logprob: -6.646562099456787
    5. '):
' → logprob: -9.521562576293945
    6. 'def' → logprob: -10.271562576293945
    7. ',
' → logprob: -10.521562576293945
    8. ',i' → logprob: -10.521562576293945
    9. ' ,' → logprob: -10.646562576293945
    10. ':' → logprob: -11.146562576293945

Token 377: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.24020949006080627
    2. ' P' → logprob: -2.2402095794677734
    3. 'i' → logprob: -3.6152095794677734
    4. ')' → logprob: -3.9902095794677734
    5. 'j' → logprob: -4.740209579467773
    6. '):' → logprob: -5.365209579467773
    7. ' i' → logprob: -5.490209579467773
    8. 'k' → logprob: -5.615209579467773
    9. 'idx' → logprob: -5.802709579467773
    10. ' idx' → logprob: -6.177709579467773

Token 378: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20196327567100525
    2. '):' → logprob: -1.7019633054733276
    3. ',' → logprob: -7.701963424682617
    4. '):
' → logprob: -9.701963424682617
    5. '   ' → logprob: -10.576963424682617
    6. '):

' → logprob: -12.326963424682617
    7. ')' → logprob: -12.451963424682617
    8. ':' → logprob: -13.701963424682617
    9. ' ):
' → logprob: -14.326963424682617
    10. ' ):' → logprob: -14.826963424682617

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01952766813337803
    2. 'for' → logprob: -4.644527435302734
    3. ' for' → logprob: -4.644527435302734
    4. 'def' → logprob: -9.769527435302734
    5. '```' → logprob: -10.394527435302734
    6. '	for' → logprob: -10.769527435302734
    7. ' def' → logprob: -14.144527435302734
    8. '``' → logprob: -15.644527435302734
    9. '       ' → logprob: -15.769527435302734
    10. '
' → logprob: -15.894527435302734

Token 380: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008700100006535649
    2. 'def' → logprob: -7.375870227813721
    3. '   ' → logprob: -9.750869750976562
    4. ' for' → logprob: -9.875869750976562
    5. 'threshold' → logprob: -11.125869750976562
    6. 'if' → logprob: -11.625869750976562
    7. 'count' → logprob: -11.625869750976562
    8. 'limit' → logprob: -11.750869750976562
    9. 'total' → logprob: -11.875869750976562
    10. 'temp' → logprob: -11.875869750976562

Token 381: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16060134768486023
    2. 'i' → logprob: -1.9106013774871826
    3. ' j' → logprob: -9.035601615905762
    4. 'j' → logprob: -9.535601615905762
    5. '	i' → logprob: -10.660601615905762
    6. ' ' → logprob: -10.785601615905762
    7. '_i' → logprob: -10.848101615905762
    8. 'X' → logprob: -10.910601615905762
    9. 'x' → logprob: -10.910601615905762
    10. ' x' → logprob: -11.285601615905762

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021961715538054705
    2. 'in' → logprob: -6.127196311950684
    3. 'range' → logprob: -13.002196311950684
    4. ' ' → logprob: -13.252196311950684
    5. '   ' → logprob: -13.627196311950684
    6. '```' → logprob: -14.002196311950684
    7. '=' → logprob: -14.627196311950684
    8. '(' → logprob: -14.752196311950684
    9. '1' → logprob: -14.877196311950684
    10. ' =' → logprob: -14.877196311950684

Token 383: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859725013375282
    2. 'range' → logprob: -3.0485973358154297
    3. '(range' → logprob: -12.42359733581543
    4. ' ' → logprob: -14.04859733581543
    5. ' xrange' → logprob: -14.11109733581543
    6. ' in' → logprob: -14.42359733581543
    7. '	range' → logprob: -14.98609733581543
    8. '0' → logprob: -15.17359733581543
    9. '   ' → logprob: -15.17359733581543
    10. 'in' → logprob: -15.29859733581543

Token 384: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08079132437705994
    2. '(X' → logprob: -2.7057912349700928
    3. '(' → logprob: -4.580791473388672
    4. 'N' → logprob: -8.580791473388672
    5. 'X' → logprob: -9.080791473388672
    6. '1' → logprob: -9.205791473388672
    7. 'range' → logprob: -10.580791473388672
    8. ' N' → logprob: -10.580791473388672
    9. ' range' → logprob: -10.830791473388672
    10. ' ' → logprob: -11.205791473388672

Token 385: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13121195137500763
    2. 'X' → logprob: -2.131211996078491
    3. '1' → logprob: -5.756211757659912
    4. 'range' → logprob: -7.756211757659912
    5. ' N' → logprob: -8.63121223449707
    6. 'len' → logprob: -9.00621223449707
    7. '(X' → logprob: -9.38121223449707
    8. '(N' → logprob: -9.63121223449707
    9. '(' → logprob: -10.13121223449707
    10. '0' → logprob: -10.25621223449707

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005126410396769643
    2. ' ,' → logprob: -8.250513076782227
    3. ',N' → logprob: -8.625513076782227
    4. '   ' → logprob: -10.000513076782227
    5. ' in' → logprob: -12.000513076782227
    6. '```' → logprob: -12.250513076782227
    7. '(N' → logprob: -12.625513076782227
    8. '<|end|>' → logprob: -13.375513076782227
    9. '  ' → logprob: -13.500513076782227
    10. 'in' → logprob: -13.875513076782227

Token 387: ' X' (ID: 2127)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03940357267856598
    2. 'X' → logprob: -3.7894036769866943
    3. ' N' → logprob: -4.164403438568115
    4. ' X' → logprob: -7.789403438568115
    5. '2' → logprob: -11.289403915405273
    6. ' ' → logprob: -11.539403915405273
    7. 'len' → logprob: -11.664403915405273
    8. '   ' → logprob: -12.164403915405273
    9. 'P' → logprob: -12.164403915405273
    10. 'i' → logprob: -12.289403915405273

Token 388: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07538492977619171
    2. ' +' → logprob: -2.8253848552703857
    3. '):
' → logprob: -4.700385093688965
    4. '):' → logprob: -5.575385093688965
    5. '[N' → logprob: -8.950385093688965
    6. '[' → logprob: -9.075385093688965
    7. '   ' → logprob: -9.200385093688965
    8. '```' → logprob: -10.450385093688965
    9. ',' → logprob: -10.700385093688965
    10. ':' → logprob: -11.450385093688965

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07488113641738892
    2. '   ' → logprob: -3.199881076812744
    3. 'for' → logprob: -3.699881076812744
    4. ' for' → logprob: -5.074881076812744
    5. 'B' → logprob: -7.949881076812744
    6. '	for' → logprob: -11.199881553649902
    7. 'b' → logprob: -11.574881553649902
    8. ' B' → logprob: -12.074881553649902
    9. '```' → logprob: -12.074881553649902
    10. 'j' → logprob: -13.074881553649902

Token 390: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012077851220965385
    2. ' for' → logprob: -4.887077808380127
    3. 'B' → logprob: -6.137077808380127
    4. '   ' → logprob: -6.387077808380127
    5. '       ' → logprob: -8.012078285217285
    6. 'if' → logprob: -8.637078285217285
    7. 's' → logprob: -10.387078285217285
    8. ' B' → logprob: -11.137078285217285
    9. 'temp' → logprob: -11.637078285217285
    10. 'count' → logprob: -11.887078285217285

Token 391: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7837411761283875
    2. '=' → logprob: -1.4087412357330322
    3. ' =' → logprob: -1.7837412357330322
    4. 'i' → logprob: -2.7837412357330322
    5. 'j' → logprob: -4.408740997314453
    6. '_i' → logprob: -4.908740997314453
    7. ',' → logprob: -5.033740997314453
    8. '   ' → logprob: -5.158740997314453
    9. '[i' → logprob: -5.408740997314453
    10. '_for' → logprob: -5.908740997314453

Token 392: ' X' (ID: 2127)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6125999093055725
    2. 'B' → logprob: -1.3625998497009277
    3. '0' → logprob: -2.4875998497009277
    4. 'i' → logprob: -3.6125998497009277
    5. 'sum' → logprob: -3.7375998497009277
    6. '(i' → logprob: -4.612599849700928
    7. '(A' → logprob: -4.862599849700928
    8. '(' → logprob: -4.862599849700928
    9. 'N' → logprob: -5.237599849700928
    10. '1' → logprob: -5.362599849700928

Token 393: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0366305373609066
    2. ' -' → logprob: -3.536630630493164
    3. '-i' → logprob: -5.411630630493164
    4. '+' → logprob: -6.661630630493164
    5. '[i' → logprob: -8.661630630493164
    6. '*i' → logprob: -9.286630630493164
    7. 'i' → logprob: -9.411630630493164
    8. '%' → logprob: -9.411630630493164
    9. '   ' → logprob: -9.536630630493164
    10. '       ' → logprob: -9.786630630493164

Token 394: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021259987261146307
    2. ' i' → logprob: -9.000212669372559
    3. '1' → logprob: -9.625212669372559
    4. '2' → logprob: -11.375212669372559
    5. '   ' → logprob: -12.625212669372559
    6. ' ' → logprob: -13.625212669372559
    7. '
' → logprob: -13.625212669372559
    8. '3' → logprob: -13.625212669372559
    9. 'a' → logprob: -14.625212669372559
    10. '  ' → logprob: -14.750212669372559

Token 395: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027230256819166243
    2. ' i' → logprob: -8.875272750854492
    3. '1' → logprob: -9.125272750854492
    4. '2' → logprob: -11.375272750854492
    5. '   ' → logprob: -12.875272750854492
    6. '
' → logprob: -13.000272750854492
    7. ' ' → logprob: -13.375272750854492
    8. 'a' → logprob: -13.500272750854492
    9. '3' → logprob: -14.875272750854492
    10. '(' → logprob: -15.125272750854492

Token 396: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0897839069366455
    2. '-' → logprob: -1.4647839069366455
    3. 'for' → logprob: -1.8397839069366455
    4. ' -' → logprob: -2.3397839069366455
    5. '   ' → logprob: -3.2147839069366455
    6. ',' → logprob: -3.4647839069366455
    7. '+' → logprob: -3.4647839069366455
    8. ' for' → logprob: -3.8397839069366455
    9. '
' → logprob: -3.9647839069366455
    10. '[' → logprob: -4.964783668518066

Token 397: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021998681768309325
    2. ' i' → logprob: -8.50022029876709
    3. 'a' → logprob: -12.50022029876709
    4. '   ' → logprob: -12.75022029876709
    5. '1' → logprob: -13.12522029876709
    6. '(i' → logprob: -13.37522029876709
    7. ' ' → logprob: -13.75022029876709
    8. '(' → logprob: -14.00022029876709
    9. '2' → logprob: -14.37522029876709
    10. '  ' → logprob: -14.87522029876709

Token 398: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002812391903717071
    2. ' i' → logprob: -8.25028133392334
    3. 'a' → logprob: -12.12528133392334
    4. '(i' → logprob: -12.75028133392334
    5. '   ' → logprob: -12.87528133392334
    6. '1' → logprob: -13.00028133392334
    7. ' ' → logprob: -13.75028133392334
    8. '
' → logprob: -13.75028133392334
    9. '(' → logprob: -14.12528133392334
    10. '[i' → logprob: -14.50028133392334

Token 399: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.07968498766422272
    2. ' *' → logprob: -2.7046849727630615
    3. '*' → logprob: -5.204685211181641
    4. '[i' → logprob: -5.954685211181641
    5. 'i' → logprob: -6.579685211181641
    6. ' i' → logprob: -9.82968521118164
    7. '       ' → logprob: -10.32968521118164
    8. '*(' → logprob: -10.32968521118164
    9. '(i' → logprob: -10.82968521118164
    10. '*j' → logprob: -10.95468521118164

Token 400: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043126524542458355
    2. '(i' → logprob: -8.250431060791016
    3. ' i' → logprob: -8.750431060791016
    4. '*i' → logprob: -12.750431060791016
    5. '(' → logprob: -13.125431060791016
    6. '   ' → logprob: -13.250431060791016
    7. '
' → logprob: -13.500431060791016
    8. ' (' → logprob: -13.875431060791016
    9. '_i' → logprob: -14.250431060791016
    10. '	i' → logprob: -14.750431060791016

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0448756217956543
    2. '
' → logprob: -3.5448756217956543
    3. '<|end|>' → logprob: -4.669875621795654
    4. ' if' → logprob: -6.669875621795654
    5. '   ' → logprob: -7.044875621795654
    6. '+' → logprob: -7.294875621795654
    7. ' +' → logprob: -7.419875621795654
    8. '[' → logprob: -7.669875621795654
    9. 'if' → logprob: -7.794875621795654
    10. ',' → logprob: -7.794875621795654

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6884424686431885
    2. 'for' → logprob: -1.1884424686431885
    3. ' for' → logprob: -2.3134424686431885
    4. 'if' → logprob: -2.6884424686431885
    5. ' if' → logprob: -3.8134424686431885
    6. '   ' → logprob: -6.188442230224609
    7. '<|end|>' → logprob: -6.688442230224609
    8. 'b' → logprob: -9.18844223022461
    9. '```' → logprob: -9.43844223022461
    10. 's' → logprob: -9.43844223022461

Token 403: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5255098938941956
    2. 'if' (adapté à ' if') → logprob: -0.9005098938941956
    3. '   ' → logprob: -6.775509834289551
    4. ' for' → logprob: -7.650509834289551
    5. ' if' → logprob: -8.27550983428955
    6. 'b' → logprob: -8.40050983428955
    7. 'B' → logprob: -8.90050983428955
    8. '       ' → logprob: -9.02550983428955
    9. '<|end|>' → logprob: -12.27550983428955
    10. '```' → logprob: -12.52550983428955

Token 404: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39076268672943115
    2. ' a' → logprob: -1.1407626867294312
    3. '0' → logprob: -5.890762805938721
    4. ' ' → logprob: -7.140762805938721
    5. '(' → logprob: -9.890762329101562
    6. ' (' → logprob: -10.265762329101562
    7. '(a' → logprob: -10.265762329101562
    8. ' i' → logprob: -10.515762329101562
    9. 'i' → logprob: -10.640762329101562
    10. '1' → logprob: -10.640762329101562

Token 405: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5106565952301025
    2. '>=' → logprob: -1.3856565952301025
    3. '>' → logprob: -2.8856565952301025
    4. ' >' → logprob: -3.0106565952301025
    5. ' <' → logprob: -3.6356565952301025
    6. '<' → logprob: -4.510656356811523
    7. ' <=' → logprob: -6.010656356811523
    8. '<=' → logprob: -6.510656356811523
    9. ' ==' → logprob: -6.635656356811523
    10. '==' → logprob: -6.635656356811523

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001036383560858667
    2. ' ' → logprob: -6.876036167144775
    3. '1' → logprob: -13.626036643981934
    4. '=' → logprob: -14.001036643981934
    5. '   ' → logprob: -14.376036643981934
    6. 'N' → logprob: -15.001036643981934
    7. 'i' → logprob: -15.876036643981934
    8. '2' → logprob: -16.001035690307617
    9. '```' → logprob: -16.001035690307617
    10. '  ' → logprob: -16.501035690307617

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004801240866072476
    2. ' ' → logprob: -7.7504801750183105
    3. '-' → logprob: -10.625479698181152
    4. 'N' → logprob: -11.875479698181152
    5. 'i' → logprob: -12.125479698181152
    6. '1' → logprob: -12.250479698181152
    7. '=' → logprob: -13.250479698181152
    8. ' -' → logprob: -13.750479698181152
    9. '2' → logprob: -14.312979698181152
    10. '   ' → logprob: -14.750479698181152

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4392555058002472
    2. ':
' → logprob: -1.6892554759979248
    3. '           ' → logprob: -1.8142554759979248
    4. '       ' → logprob: -4.939255714416504
    5. ':return' → logprob: -8.064255714416504
    6. ' or' → logprob: -8.814255714416504
    7. ',' → logprob: -9.314255714416504
    8. ' and' → logprob: -10.064255714416504
    9. '   ' → logprob: -10.439255714416504
    10. ':
' → logprob: -11.314255714416504

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013333676906768233
    2. ' continue' → logprob: -9.375133514404297
    3. 'continue' → logprob: -11.500133514404297
    4. ' break' → logprob: -11.750133514404297
    5. '               ' → logprob: -11.750133514404297
    6. '	       ' → logprob: -12.125133514404297
    7. '       ' → logprob: -12.250133514404297
    8. ',' → logprob: -13.000133514404297
    9. '<|end|>' → logprob: -13.250133514404297
    10. '		' → logprob: -13.500133514404297

Token 410: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.207451730966568
    2. 'break' → logprob: -1.8324517011642456
    3. ' break' → logprob: -4.082451820373535
    4. 'continue' (adapté à ' continue') → logprob: -5.332451820373535
    5. '               ' → logprob: -5.832451820373535
    6. '       ' → logprob: -6.957451820373535
    7. 'return' → logprob: -7.207451820373535
    8. ' continue' → logprob: -7.707451820373535
    9. '	break' → logprob: -7.832451820373535
    10. '   ' → logprob: -9.582451820373535

Token 411: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004481273703277111
    2. '<|end|>' → logprob: -6.004481315612793
    3. ' for' → logprob: -6.379481315612793
    4. 'for' → logprob: -8.629481315612793
    5. '   ' → logprob: -9.379481315612793
    6. ',' → logprob: -10.879481315612793
    7. '           ' → logprob: -12.754481315612793
    8. ')' → logprob: -12.754481315612793
    9. '<|end|>' → logprob: -13.004481315612793
    10. '```' → logprob: -13.254481315612793

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007400614558719099
    2. '   ' → logprob: -8.125740051269531
    3. 'for' → logprob: -8.250740051269531
    4. 'B' → logprob: -9.750740051269531
    5. ' for' → logprob: -9.750740051269531
    6. 'b' → logprob: -10.625740051269531
    7. '<|end|>' → logprob: -10.625740051269531
    8. '           ' → logprob: -11.750740051269531
    9. ' B' → logprob: -12.750740051269531
    10. '```' → logprob: -13.375740051269531

Token 413: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2835007309913635
    2. '       ' → logprob: -1.6585006713867188
    3. ' for' → logprob: -3.5335006713867188
    4. 'B' → logprob: -4.033500671386719
    5. '   ' → logprob: -4.783500671386719
    6. 'b' → logprob: -7.533500671386719
    7. 'if' → logprob: -8.658500671386719
    8. 'sum' → logprob: -8.908500671386719
    9. 's' → logprob: -9.408500671386719
    10. ' B' → logprob: -9.533500671386719

Token 414: '_type' (ID: 3804)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000400521676056087
    2. '_range' → logprob: -9.62540054321289
    3. '_token' → logprob: -9.62540054321289
    4. '_' → logprob: -10.12540054321289
    5. '_line' → logprob: -10.25040054321289
    6. 'row' → logprob: -10.62540054321289
    7. 'B' → logprob: -10.87540054321289
    8. '<|end|>' → logprob: -11.25040054321289
    9. '_per' → logprob: -11.37540054321289
    10. ')' → logprob: -11.37540054321289

Token 415: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3425219549390022e-05
    2. '1' → logprob: -11.62501335144043
    3. '2' → logprob: -13.00001335144043
    4. '_' → logprob: -13.62501335144043
    5. ' ' → logprob: -15.12501335144043
    6. '```' → logprob: -15.50001335144043
    7. '_three' → logprob: -15.50001335144043
    8. '۳' → logprob: -16.43751335144043
    9. '٣' → logprob: -16.68751335144043
    10. '３' → logprob: -16.81251335144043

Token 416: '_inner' (ID: 81672)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -1.759734732331708e-05
    2. '_row' → logprob: -12.125017166137695
    3. '_updates' → logprob: -12.375017166137695
    4. '_inner' → logprob: -13.000017166137695
    5. '_B' → logprob: -13.875017166137695
    6. '(B' → logprob: -14.000017166137695
    7. 'Update' → logprob: -14.250017166137695
    8. '_counts' → logprob: -15.000017166137695
    9. '_up' → logprob: -15.000017166137695
    10. '_array' → logprob: -15.000017166137695

Token 417: '(B' (ID: 8409)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.03715422376990318
    2. '(B' → logprob: -3.412154197692871
    3. 'update' → logprob: -6.037154197692871
    4. '(A' → logprob: -7.412154197692871
    5. '_updates' → logprob: -8.162154197692871
    6. '```' → logprob: -9.537154197692871
    7. '_loop' → logprob: -9.787154197692871
    8. 'Update' → logprob: -10.037154197692871
    9. 'updates' → logprob: -11.537154197692871
    10. 'for' → logprob: -11.912154197692871

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.29340603761375e-05
    2. ',A' → logprob: -9.500092506408691
    3. '(A' → logprob: -11.500092506408691
    4. ' ,' → logprob: -12.500092506408691
    5. '[A' → logprob: -13.750092506408691
    6. ')' → logprob: -13.750092506408691
    7. '<|end|>' → logprob: -14.500092506408691
    8. ',
' → logprob: -14.750092506408691
    9. '       ' → logprob: -15.250092506408691
    10. '[' → logprob: -15.375092506408691

Token 419: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1615132987499237
    2. ' A' → logprob: -1.911513328552246
    3. 'N' → logprob: -7.411513328552246
    4. 'i' → logprob: -7.911513328552246
    5. 'a' → logprob: -9.161513328552246
    6. ' N' → logprob: -9.786513328552246
    7. 'X' → logprob: -10.161513328552246
    8. '   ' → logprob: -10.661513328552246
    9. ' i' → logprob: -10.911513328552246
    10. 'P' → logprob: -11.036513328552246

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001214237418025732
    2. ',N' → logprob: -9.750121116638184
    3. ' ,' → logprob: -10.625121116638184
    4. '       ' → logprob: -10.875121116638184
    5. '   ' → logprob: -12.000121116638184
    6. ',i' → logprob: -12.375121116638184
    7. ',n' → logprob: -13.250121116638184
    8. '```' → logprob: -13.375121116638184
    9. ',
' → logprob: -13.750121116638184
    10. ',A' → logprob: -14.125121116638184

Token 421: ' a' (ID: 261)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22049173712730408
    2. ' N' → logprob: -1.8454917669296265
    3. 'i' → logprob: -3.970491647720337
    4. 'X' → logprob: -4.595491886138916
    5. ' i' → logprob: -5.470491886138916
    6. 'a' → logprob: -5.470491886138916
    7. ' X' → logprob: -6.720491886138916
    8. ' a' → logprob: -7.345491886138916
    9. 'P' → logprob: -8.345491409301758
    10. ' P' → logprob: -9.095491409301758

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007833030540496111
    2. ',i' → logprob: -7.625783443450928
    3. ' ,' → logprob: -8.75078296661377
    4. 'i' → logprob: -10.37578296661377
    5. '   ' → logprob: -10.62578296661377
    6. '[i' → logprob: -10.62578296661377
    7. '       ' → logprob: -10.75078296661377
    8. '```' → logprob: -12.12578296661377
    9. ',N' → logprob: -12.25078296661377
    10. '[' → logprob: -12.62578296661377

Token 423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7016892433166504
    2. 'X' → logprob: -1.2016892433166504
    3. 'P' → logprob: -2.4516892433166504
    4. 'N' → logprob: -2.5766892433166504
    5. ' i' → logprob: -3.8266892433166504
    6. ' X' → logprob: -4.95168924331665
    7. ' P' → logprob: -5.20168924331665
    8. ' N' → logprob: -5.32668924331665
    9. 'A' → logprob: -6.45168924331665
    10. '   ' → logprob: -8.451688766479492

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014959340915083885
    2. ' ,' → logprob: -6.876495838165283
    3. ')' → logprob: -8.626496315002441
    4. ',P' → logprob: -9.126496315002441
    5. ',X' → logprob: -9.501496315002441
    6. '       ' → logprob: -9.876496315002441
    7. '   ' → logprob: -10.876496315002441
    8. '```' → logprob: -11.501496315002441
    9. 'X' → logprob: -12.501496315002441
    10. ',
' → logprob: -13.251496315002441

Token 425: ' N' (ID: 478)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.040105391293764114
    2. ' P' → logprob: -3.4151053428649902
    3. 'X' → logprob: -5.16510534286499
    4. 'N' → logprob: -7.54010534286499
    5. ' X' → logprob: -9.165105819702148
    6. ' N' → logprob: -10.540105819702148
    7. 'A' → logprob: -10.665105819702148
    8. ')' → logprob: -11.415105819702148
    9. ' ' → logprob: -11.415105819702148
    10. 'i' → logprob: -12.290105819702148

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024349973537027836
    2. ')' → logprob: -6.252435207366943
    3. ',P' → logprob: -8.627434730529785
    4. '       ' → logprob: -8.752434730529785
    5. ' ,' → logprob: -9.377434730529785
    6. ',X' → logprob: -9.877434730529785
    7. '   ' → logprob: -11.127434730529785
    8. '<|end|>' → logprob: -12.752434730529785
    9. '           ' → logprob: -13.127434730529785
    10. '```' → logprob: -13.252434730529785

Token 427: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0009084834600798786
    2. ' P' → logprob: -7.625908374786377
    3. 'X' → logprob: -7.875908374786377
    4. 'A' → logprob: -10.375908851623535
    5. '   ' → logprob: -13.000908851623535
    6. ')' → logprob: -13.375908851623535
    7. 'p' → logprob: -13.875908851623535
    8. ' ' → logprob: -14.250908851623535
    9. 'i' → logprob: -14.375908851623535
    10. 'j' → logprob: -14.375908851623535

Token 428: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00206223432905972
    2. '):' → logprob: -6.8770623207092285
    3. ',' → logprob: -7.1270623207092285
    4. '   ' → logprob: -9.00206184387207
    5. '       ' → logprob: -9.87706184387207
    6. '):
' → logprob: -10.62706184387207
    7. '<|end|>' → logprob: -11.62706184387207
    8. ')
' → logprob: -11.87706184387207
    9. ' )' → logprob: -13.12706184387207
    10. ')[' → logprob: -13.50206184387207

Token 429: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08606711030006409
    2. '   ' → logprob: -2.8360671997070312
    3. '```' → logprob: -4.086067199707031
    4. ' for' → logprob: -5.586067199707031
    5. 'for' → logprob: -6.211067199707031
    6. ' def' → logprob: -7.211067199707031
    7. '<|end|>' → logprob: -8.586067199707031
    8. '[' → logprob: -8.836067199707031
    9. '       ' → logprob: -10.336067199707031
    10. '	for' → logprob: -10.461067199707031

Token 430: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.10024140775203705
    2. ' process' → logprob: -2.3502414226531982
    3. 'type' → logprob: -11.100241661071777
    4. 'def' → logprob: -11.350241661071777
    5. '_process' → logprob: -13.100241661071777
    6. '	process' → logprob: -13.225241661071777
    7. ' type' → logprob: -13.600241661071777
    8. '.process' → logprob: -14.600241661071777
    9. '(process' → logprob: -14.725241661071777
    10. 'proces' → logprob: -14.850241661071777

Token 431: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -2.2200749754119897e-06
    2. '_row' → logprob: -13.875001907348633
    3. 'type' → logprob: -14.500001907348633
    4. '3' → logprob: -15.375001907348633
    5. '_typ' → logprob: -15.375001907348633
    6. '_' → logprob: -16.625001907348633
    7. '```' → logprob: -16.875001907348633
    8. '__' → logprob: -17.500001907348633
    9. 'Type' → logprob: -17.500001907348633
    10. '_TYPE' → logprob: -17.875001907348633

Token 432: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -16.0
    3. '```' → logprob: -16.125
    4. '_' → logprob: -16.375
    5. 'type' → logprob: -17.375
    6. '۳' → logprob: -17.375
    7. '３' → logprob: -17.5
    8. '_type' → logprob: -17.5
    9. '٣' → logprob: -17.625
    10. '_three' → logprob: -17.9375

Token 433: '_inner' (ID: 81672)
  Prédit: '_inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inner' → logprob: -8.895480277715251e-06
    2. '_outer' → logprob: -12.375008583068848
    3. '_update' → logprob: -12.750008583068848
    4. '_internal' → logprob: -14.125008583068848
    5. 'inner' → logprob: -14.500008583068848
    6. '_inside' → logprob: -15.875008583068848
    7. '```' → logprob: -16.000009536743164
    8. '_inline' → logprob: -16.750009536743164
    9. 'Inner' → logprob: -17.000009536743164
    10. '_in' → logprob: -17.000009536743164

Token 434: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. '(
' → logprob: -15.750009536743164
    4. 'def' → logprob: -16.625009536743164
    5. ' (' → logprob: -17.125009536743164
    6. '(A' → logprob: -18.375009536743164
    7. '(b' → logprob: -18.750009536743164
    8. '```' → logprob: -19.625009536743164
    9. '((' → logprob: -19.750009536743164
    10. ',' → logprob: -20.000009536743164

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ',A' → logprob: -12.250005722045898
    3. ' ,' → logprob: -14.000005722045898
    4. ',B' → logprob: -15.250005722045898
    5. ',
' → logprob: -16.8750057220459
    6. '   ' → logprob: -17.0000057220459
    7. 'A' → logprob: -18.2500057220459
    8. '‌,' → logprob: -18.2500057220459
    9. ')' → logprob: -18.6250057220459
    10. '[A' → logprob: -18.7500057220459

Token 436: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2811688780784607
    2. ' A' → logprob: -1.4061689376831055
    3. ' ' → logprob: -12.406168937683105
    4. '   ' → logprob: -12.531168937683105
    5. 'a' → logprob: -12.656168937683105
    6. ')' → logprob: -13.281168937683105
    7. 'B' → logprob: -13.531168937683105
    8. '	A' → logprob: -13.906168937683105
    9. ',A' → logprob: -14.781168937683105
    10. '  ' → logprob: -14.906168937683105

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.625005722045898
    3. ',a' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.875005722045898
    5. ',A' → logprob: -15.000005722045898
    6. 'a' → logprob: -15.750005722045898
    7. ',
' → logprob: -15.875005722045898
    8. ',B' → logprob: -17.3750057220459
    9. '_,' → logprob: -17.5000057220459
    10. '[],' → logprob: -17.7500057220459

Token 438: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02978416346013546
    2. ' a' → logprob: -3.5297842025756836
    3. 'i' → logprob: -11.279784202575684
    4. 'X' → logprob: -11.904784202575684
    5. 'A' → logprob: -12.279784202575684
    6. ',' → logprob: -12.779784202575684
    7. ' ' → logprob: -13.529784202575684
    8. ' X' → logprob: -13.904784202575684
    9. '   ' → logprob: -14.154784202575684
    10. 'b' → logprob: -14.154784202575684

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -10.250066757202148
    3. ',i' → logprob: -11.125066757202148
    4. '   ' → logprob: -12.000066757202148
    5. ',A' → logprob: -13.250066757202148
    6. ',a' → logprob: -13.750066757202148
    7. 'a' → logprob: -13.875066757202148
    8. ',N' → logprob: -14.125066757202148
    9. ')' → logprob: -14.500066757202148
    10. '```' → logprob: -14.500066757202148

Token 440: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.592537522315979
    2. 'i' → logprob: -1.217537522315979
    3. 'X' → logprob: -2.4675374031066895
    4. 'N' → logprob: -3.4675374031066895
    5. ' A' → logprob: -4.0925374031066895
    6. ' i' → logprob: -4.8425374031066895
    7. '<|end|>' → logprob: -5.5925374031066895
    8. ' X' → logprob: -6.3425374031066895
    9. 'a' → logprob: -6.4675374031066895
    10. ' ' → logprob: -6.8425374031066895

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014942926645744592
    2. ' ,' → logprob: -8.875149726867676
    3. '   ' → logprob: -12.000149726867676
    4. ',A' → logprob: -14.500149726867676
    5. ',
' → logprob: -14.625149726867676
    6. '_,' → logprob: -15.125149726867676
    7. '  ' → logprob: -15.375149726867676
    8. ',B' → logprob: -15.625149726867676
    9. '       ' → logprob: -15.687649726867676
    10. ',X' → logprob: -15.750149726867676

Token 442: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0067756460048258305
    2. ' N' → logprob: -5.006775856018066
    3. 'X' → logprob: -10.256775856018066
    4. 'P' → logprob: -11.256775856018066
    5. 'B' → logprob: -12.131775856018066
    6. ',' → logprob: -13.006775856018066
    7. ' ' → logprob: -13.631775856018066
    8. 'A' → logprob: -14.006775856018066
    9. '   ' → logprob: -14.631775856018066
    10. ',N' → logprob: -15.131775856018066

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.800739018013701e-05
    2. ' ,' → logprob: -10.0000581741333
    3. ',P' → logprob: -11.8750581741333
    4. '   ' → logprob: -12.8750581741333
    5. ',
' → logprob: -13.3750581741333
    6. '_,' → logprob: -15.1250581741333
    7. '):
' → logprob: -15.7500581741333
    8. ',p' → logprob: -16.375057220458984
    9. '  ' → logprob: -16.375057220458984
    10. 'P' → logprob: -16.500057220458984

Token 444: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00013619766104966402
    2. ' P' → logprob: -9.500136375427246
    3. 'X' → logprob: -10.250136375427246
    4. 'A' → logprob: -10.750136375427246
    5. 'B' → logprob: -13.000136375427246
    6. ')' → logprob: -14.625136375427246
    7. '```' → logprob: -14.625136375427246
    8. 'a' → logprob: -15.000136375427246
    9. '   ' → logprob: -15.625136375427246
    10. ' ' → logprob: -15.750136375427246

Token 445: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06231820955872536
    2. '):
' → logprob: -3.1873183250427246
    3. '):' → logprob: -4.062318325042725
    4. '   ' → logprob: -6.312318325042725
    5. ',B' → logprob: -10.062317848205566
    6. '):
' → logprob: -11.437317848205566
    7. ',
' → logprob: -11.562317848205566
    8. ' ,' → logprob: -11.687317848205566
    9. ':' → logprob: -11.812317848205566
    10. ')' → logprob: -11.937317848205566

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7647251486778259
    2. 'for' → logprob: -1.0147252082824707
    3. ' for' → logprob: -1.7647252082824707
    4. '```' → logprob: -7.764725208282471
    5. 's' → logprob: -9.514724731445312
    6. ' s' → logprob: -9.639724731445312
    7. ' ' → logprob: -9.639724731445312
    8. '       ' → logprob: -10.264724731445312
    9. '	for' → logprob: -10.764724731445312
    10. 'sum' → logprob: -10.889724731445312

Token 447: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007529280846938491
    2. 'limit' → logprob: -8.250753402709961
    3. '   ' → logprob: -9.125753402709961
    4. 's' → logprob: -9.500753402709961
    5. 'temp' → logprob: -9.625753402709961
    6. 'val' → logprob: -9.625753402709961
    7. ' for' → logprob: -9.750753402709961
    8. 'tmp' → logprob: -10.875753402709961
    9. 'mult' → logprob: -11.375753402709961
    10. 'if' → logprob: -11.500753402709961

Token 448: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0494164414703846
    2. 'k' → logprob: -3.6744165420532227
    3. 'x' → logprob: -4.299416542053223
    4. ' j' → logprob: -4.924416542053223
    5. 'idx' → logprob: -7.549416542053223
    6. 'v' → logprob: -8.174416542053223
    7. 'i' → logprob: -8.674416542053223
    8. ' k' → logprob: -8.799416542053223
    9. 'b' → logprob: -8.799416542053223
    10. ' x' → logprob: -9.299416542053223

Token 449: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018182599917054176
    2. 'in' → logprob: -4.018182754516602
    3. 'range' → logprob: -10.768182754516602
    4. ' ' → logprob: -12.268182754516602
    5. 'n' → logprob: -13.893182754516602
    6. '   ' → logprob: -14.018182754516602
    7. '```' → logprob: -14.268182754516602
    8. 'import' → logprob: -14.643182754516602
    9. '  ' → logprob: -14.768182754516602
    10. ')' → logprob: -14.768182754516602

Token 450: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0086202472448349
    2. ' range' → logprob: -4.758620262145996
    3. 'in' → logprob: -13.258620262145996
    4. '(range' → logprob: -14.133620262145996
    5. ' in' → logprob: -14.258620262145996
    6. '[' → logprob: -14.758620262145996
    7. '   ' → logprob: -14.758620262145996
    8. ' ' → logprob: -14.883620262145996
    9. 'a' → logprob: -15.508620262145996
    10. '2' → logprob: -15.633620262145996

Token 451: '((' (ID: 2054)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20527128875255585
    2. ' range' → logprob: -2.4552712440490723
    3. '(a' → logprob: -2.7052712440490723
    4. '(range' → logprob: -3.7052712440490723
    5. ' in' → logprob: -5.705271244049072
    6. 'a' → logprob: -6.330271244049072
    7. '(' → logprob: -6.580271244049072
    8. '(i' → logprob: -6.955271244049072
    9. 'in' → logprob: -8.08027172088623
    10. ' a' → logprob: -8.70527172088623

Token 452: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16556796431541443
    2. '2' → logprob: -2.0405678749084473
    3. 'i' → logprob: -4.290567874908447
    4. '0' → logprob: -5.915567874908447
    5. '1' → logprob: -6.040567874908447
    6. ' a' → logprob: -7.290567874908447
    7. ')' → logprob: -7.415567874908447
    8. 'N' → logprob: -7.540567874908447
    9. '3' → logprob: -7.790567874908447
    10. 'j' → logprob: -8.165568351745605

Token 453: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23092497885227203
    2. ',' → logprob: -1.9809249639511108
    3. ' +' → logprob: -2.9809250831604004
    4. ')+' → logprob: -5.3559250831604
    5. '),' → logprob: -5.4809250831604
    6. ')' → logprob: -5.7309250831604
    7. '   ' → logprob: -6.3559250831604
    8. ' ,' → logprob: -7.3559250831604
    9. '//' → logprob: -7.4809250831604
    10. '-' → logprob: -7.6059250831604

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010274447500705719
    2. '2' → logprob: -5.510274410247803
    3. 'i' → logprob: -5.635274410247803
    4. 'a' → logprob: -6.885274410247803
    5. '0' → logprob: -7.010274410247803
    6. 'N' → logprob: -8.260274887084961
    7. ' ' → logprob: -9.135274887084961
    8. '(i' → logprob: -9.510274887084961
    9. '3' → logprob: -10.010274887084961
    10. '(' → logprob: -10.135274887084961

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0149117736145854
    2. '2' → logprob: -5.014911651611328
    3. 'i' → logprob: -5.639911651611328
    4. '0' → logprob: -6.014911651611328
    5. 'a' → logprob: -6.639911651611328
    6. '(i' → logprob: -8.389911651611328
    7. 'N' → logprob: -8.639911651611328
    8. '(' → logprob: -9.014911651611328
    9. '3' → logprob: -9.389911651611328
    10. ' ' → logprob: -9.889911651611328

Token 456: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10288549214601517
    2. ')//' → logprob: -2.3528854846954346
    3. '),' → logprob: -6.352885723114014
    4. ')>>' → logprob: -7.852885723114014
    5. ',' → logprob: -8.727885246276855
    6. 'a' → logprob: -9.477885246276855
    7. ' )' → logprob: -9.602885246276855
    8. ')):
' → logprob: -9.852885246276855
    9. '//' → logprob: -10.227885246276855
    10. '(' → logprob: -10.977885246276855

Token 457: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12303132563829422
    2. '+' → logprob: -2.6230313777923584
    3. '):' → logprob: -4.248031139373779
    4. '   ' → logprob: -5.123031139373779
    5. ' +' → logprob: -5.123031139373779
    6. '):
' → logprob: -5.123031139373779
    7. '//' → logprob: -5.998031139373779
    8. ' ,' → logprob: -6.248031139373779
    9. '       ' → logprob: -6.998031139373779
    10. ')' → logprob: -6.998031139373779

Token 458: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014483332633972168
    2. ' ' → logprob: -6.626448154449463
    3. '1' → logprob: -10.126448631286621
    4. ')' → logprob: -10.501448631286621
    5. '   ' → logprob: -10.501448631286621
    6. '=' → logprob: -11.876448631286621
    7. ',' → logprob: -12.251448631286621
    8. '  ' → logprob: -12.626448631286621
    9. '    ' → logprob: -13.376448631286621
    10. '3' → logprob: -13.376448631286621

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001018875278532505
    2. '1' → logprob: -7.00101900100708
    3. ' ' → logprob: -9.501018524169922
    4. ')' → logprob: -11.126018524169922
    5. '3' → logprob: -12.501018524169922
    6. '   ' → logprob: -12.626018524169922
    7. '
' → logprob: -13.126018524169922
    8. ',' → logprob: -13.688518524169922
    9. '}' → logprob: -14.188518524169922
    10. '=' → logprob: -14.251018524169922

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09243295341730118
    2. '):' → logprob: -2.592432975769043
    3. '   ' → logprob: -5.092432975769043
    4. ' ,' → logprob: -5.967432975769043
    5. '+' → logprob: -6.467432975769043
    6. '):
' → logprob: -6.717432975769043
    7. '       ' → logprob: -7.217432975769043
    8. ' +' → logprob: -7.967432975769043
    9. ',j' → logprob: -9.217432975769043
    10. ' ):' → logprob: -9.592432975769043

Token 461: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.857633650302887
    2. 'a' → logprob: -1.3576335906982422
    3. 'min' → logprob: -1.3576335906982422
    4. '2' → logprob: -3.607633590698242
    5. ' min' → logprob: -4.607633590698242
    6. ' i' → logprob: -4.857633590698242
    7. 'N' → logprob: -4.857633590698242
    8. ' a' → logprob: -5.732633590698242
    9. 'X' → logprob: -6.857633590698242
    10. '(' → logprob: -6.982633590698242

Token 462: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03381490334868431
    2. ' +' → logprob: -3.4088149070739746
    3. '[' → logprob: -9.783814430236816
    4. '2' → logprob: -10.533814430236816
    5. '   ' → logprob: -10.658814430236816
    6. ')' → logprob: -11.158814430236816
    7. ',' → logprob: -11.783814430236816
    8. '-' → logprob: -11.908814430236816
    9. ' ' → logprob: -12.033814430236816
    10. '//' → logprob: -12.783814430236816

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029029499273747206
    2. '2' → logprob: -8.375289916992188
    3. ' ' → logprob: -9.750289916992188
    4. '   ' → logprob: -15.000289916992188
    5. 'a' → logprob: -15.562789916992188
    6. '(' → logprob: -16.125289916992188
    7. '
' → logprob: -16.250289916992188
    8. '0' → logprob: -16.625289916992188
    9. '  ' → logprob: -16.937789916992188
    10. 'i' → logprob: -17.125289916992188

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024084746837615967
    2. '2' → logprob: -8.75024127960205
    3. ' ' → logprob: -9.50024127960205
    4. 'i' → logprob: -12.25024127960205
    5. 'a' → logprob: -14.00024127960205
    6. '   ' → logprob: -14.87524127960205
    7. '3' → logprob: -15.00024127960205
    8. '  ' → logprob: -16.187740325927734
    9. '
' → logprob: -16.250240325927734
    10. 'j' → logprob: -16.312740325927734

Token 465: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3884604573249817
    2. '):' → logprob: -1.138460397720337
    3. '+' → logprob: -6.888460636138916
    4. '       ' → logprob: -7.888460636138916
    5. '   ' → logprob: -9.513460159301758
    6. '):
' → logprob: -9.513460159301758
    7. ':' → logprob: -11.388460159301758
    8. '```' → logprob: -12.013460159301758
    9. '():
' → logprob: -12.138460159301758
    10. ',' → logprob: -12.263460159301758

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001138431136496365
    2. 'B' → logprob: -7.001138210296631
    3. ' B' → logprob: -8.626138687133789
    4. '           ' → logprob: -11.251138687133789
    5. '   ' → logprob: -11.376138687133789
    6. '```' → logprob: -11.751138687133789
    7. 'b' → logprob: -12.626138687133789
    8. '<|end|>' → logprob: -13.001138687133789
    9. '	' → logprob: -13.251138687133789
    10. '	B' → logprob: -13.751138687133789

Token 467: ' k' (ID: 372)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008405826985836029
    2. ' B' → logprob: -5.008405685424805
    3. '       ' → logprob: -6.758405685424805
    4. 'if' → logprob: -8.758405685424805
    5. 'val' → logprob: -8.883405685424805
    6. 'value' → logprob: -9.383405685424805
    7. '           ' → logprob: -10.008405685424805
    8. 'v' → logprob: -10.508405685424805
    9. 'b' → logprob: -10.758405685424805
    10. 'temp' → logprob: -11.758405685424805

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12409235537052155
    2. ' =' → logprob: -2.2490923404693604
    3. ' in' → logprob: -4.9990925788879395
    4. 'in' → logprob: -6.1240925788879395
    5. ',' → logprob: -6.6240925788879395
    6. ')' → logprob: -7.2490925788879395
    7. ']' → logprob: -9.874092102050781
    8. '   ' → logprob: -10.124092102050781
    9. 'import' → logprob: -10.374092102050781
    10. ' ' → logprob: -11.249092102050781

Token 469: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5733066201210022
    2. 'a' → logprob: -1.9483065605163574
    3. '(a' → logprob: -2.6983065605163574
    4. 'A' → logprob: -3.4483065605163574
    5. ' j' → logprob: -3.5733065605163574
    6. 'B' → logprob: -3.6983065605163574
    7. '(j' → logprob: -3.8233065605163574
    8. 'i' → logprob: -3.9483065605163574
    9. '(A' → logprob: -3.9483065605163574
    10. '(i' → logprob: -4.323306560516357

Token 470: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1587105691432953
    2. '+' → logprob: -2.658710479736328
    3. ' =' → logprob: -2.908710479736328
    4. '       ' → logprob: -5.158710479736328
    5. ' +' → logprob: -5.283710479736328
    6. '+=' → logprob: -5.658710479736328
    7. '<|end|>' → logprob: -6.408710479736328
    8. ',' → logprob: -6.533710479736328
    9. ')' → logprob: -6.533710479736328
    10. '-' → logprob: -6.908710479736328

Token 471: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0439620316028595
    2. '2' → logprob: -3.418962001800537
    3. '1' → logprob: -5.043962001800537
    4. 'X' → logprob: -6.543962001800537
    5. 'a' → logprob: -7.043962001800537
    6. '(' → logprob: -7.418962001800537
    7. '(i' → logprob: -8.418962478637695
    8. ' i' → logprob: -8.543962478637695
    9. '   ' → logprob: -8.918962478637695
    10. 'j' → logprob: -8.918962478637695

Token 472: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01077378261834383
    2. '2' → logprob: -5.135773658752441
    3. '1' → logprob: -5.885773658752441
    4. 'X' → logprob: -6.760773658752441
    5. 'a' → logprob: -7.510773658752441
    6. '(' → logprob: -9.135773658752441
    7. '(i' → logprob: -9.635773658752441
    8. ' i' → logprob: -9.885773658752441
    9. 'j' → logprob: -10.760773658752441
    10. '   ' → logprob: -10.760773658752441

Token 473: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.09655004739761353
    2. 'i' → logprob: -2.5965499877929688
    3. '*' → logprob: -4.846549987792969
    4. ' *' → logprob: -5.596549987792969
    5. '       ' → logprob: -6.221549987792969
    6. '*j' → logprob: -6.346549987792969
    7. '*k' → logprob: -7.846549987792969
    8. 'j' → logprob: -8.346549987792969
    9. '[i' → logprob: -8.346549987792969
    10. '*a' → logprob: -8.346549987792969

Token 474: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.0100624169572257e-05
    2. ' i' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. '*i' → logprob: -14.750020027160645
    5. '
' → logprob: -15.500020027160645
    6. ' ' → logprob: -17.25002098083496
    7. '       ' → logprob: -17.37502098083496
    8. '           ' → logprob: -17.62502098083496
    9. '	i' → logprob: -17.75002098083496
    10. '  ' → logprob: -17.75002098083496

Token 475: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007282407954335213
    2. '<|end|>' → logprob: -5.507282257080078
    3. '
' → logprob: -7.007282257080078
    4. ' if' → logprob: -7.757282257080078
    5. 'for' → logprob: -8.007282257080078
    6. 'if' → logprob: -8.132282257080078
    7. '=' → logprob: -8.757282257080078
    8. ')' → logprob: -8.757282257080078
    9. ' for' → logprob: -8.882282257080078
    10. 'B' → logprob: -9.132282257080078

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014464459381997585
    2. ')' → logprob: -4.889464378356934
    3. '<|end|>' → logprob: -5.514464378356934
    4. ']' → logprob: -6.639464378356934
    5. '```' → logprob: -7.764464378356934
    6. ' if' → logprob: -8.014464378356934
    7. 'B' → logprob: -8.764464378356934
    8. ',' → logprob: -9.264464378356934
    9. 'if' → logprob: -9.514464378356934
    10. '[' → logprob: -9.514464378356934

Token 477: ' if' (ID: 538)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08580809086561203
    2. 'if' (adapté à ' if') → logprob: -2.585808038711548
    3. '       ' → logprob: -5.710808277130127
    4. ' if' → logprob: -6.085808277130127
    5. ' B' → logprob: -7.085808277130127
    6. '           ' → logprob: -7.710808277130127
    7. '```' → logprob: -11.710807800292969
    8. 'b' → logprob: -12.335807800292969
    9. '               ' → logprob: -12.835807800292969
    10. '   ' → logprob: -12.835807800292969

Token 478: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007982534356415272
    2. ' k' → logprob: -4.8829827308654785
    3. 'j' → logprob: -8.75798225402832
    4. '0' → logprob: -8.88298225402832
    5. '           ' → logprob: -10.25798225402832
    6. ' j' → logprob: -11.75798225402832
    7. '       ' → logprob: -11.88298225402832
    8. ' ' → logprob: -12.25798225402832
    9. 'a' → logprob: -12.63298225402832
    10. '   ' → logprob: -12.75798225402832

Token 479: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0963051319122314
    2. '<=' → logprob: -1.2213051319122314
    3. ' <' → logprob: -1.7213051319122314
    4. ' <=' → logprob: -2.0963051319122314
    5. '>=' → logprob: -3.2213051319122314
    6. ' >=' → logprob: -3.9713051319122314
    7. '>' → logprob: -5.221304893493652
    8. ' >' → logprob: -5.721304893493652
    9. '<len' → logprob: -7.346304893493652
    10. '=' → logprob: -7.721304893493652

Token 480: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22745655477046967
    2. 'a' → logprob: -2.227456569671631
    3. '2' → logprob: -2.352456569671631
    4. 'n' → logprob: -8.852456092834473
    5. '(' → logprob: -8.977456092834473
    6. ' N' → logprob: -9.102456092834473
    7. ' ' → logprob: -10.352456092834473
    8. ' a' → logprob: -11.102456092834473
    9. '1' → logprob: -11.227456092834473
    10. '(N' → logprob: -11.539956092834473

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0701388269662857
    2. ':
' → logprob: -3.320138931274414
    3. ' or' → logprob: -3.945138931274414
    4. '           ' → logprob: -5.195138931274414
    5. ':return' → logprob: -5.820138931274414
    6. '[' → logprob: -6.195138931274414
    7. '       ' → logprob: -7.320138931274414
    8. '<|end|>' → logprob: -7.570138931274414
    9. 'or' → logprob: -9.445138931274414
    10. ' and' → logprob: -9.695138931274414

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020473242329899222
    2. ' continue' → logprob: -8.750205039978027
    3. 'continue' → logprob: -10.375205039978027
    4. ' break' → logprob: -12.000205039978027
    5. '```' → logprob: -12.750205039978027
    6. '               ' → logprob: -13.000205039978027
    7. 'break' → logprob: -13.500205039978027
    8. '<|end|>' → logprob: -14.500205039978027
    9. '		' → logprob: -15.000205039978027
    10. '	       ' → logprob: -15.375205039978027

Token 483: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27000775933265686
    2. 'break' (adapté à ' break') → logprob: -1.7700077295303345
    3. '               ' → logprob: -2.895007848739624
    4. 'continue' → logprob: -5.145007610321045
    5. ' break' → logprob: -5.395007610321045
    6. ' continue' → logprob: -8.145008087158203
    7. '	break' → logprob: -8.895008087158203
    8. 'return' → logprob: -9.520008087158203
    9. '   ' → logprob: -10.270008087158203
    10. '       ' → logprob: -10.395008087158203

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07342495769262314
    2. '           ' → logprob: -2.698425054550171
    3. '<|end|>' → logprob: -5.823424816131592
    4. '```' → logprob: -8.69842529296875
    5. '               ' → logprob: -9.44842529296875
    6. ',' → logprob: -9.82342529296875
    7. '	       ' → logprob: -9.94842529296875
    8. 'B' → logprob: -10.32342529296875
    9. '<|end|>' → logprob: -10.69842529296875
    10. ' B' → logprob: -10.82342529296875

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026658078422769904
    2. '<|end|>' → logprob: -9.000267028808594
    3. '           ' → logprob: -10.250267028808594
    4. '```' → logprob: -10.375267028808594
    5. 'B' → logprob: -10.500267028808594
    6. '   ' → logprob: -11.000267028808594
    7. ' B' → logprob: -11.875267028808594
    8. '	   ' → logprob: -12.250267028808594
    9. '	       ' → logprob: -12.500267028808594
    10. '	' → logprob: -12.875267028808594

Token 486: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.0010949730640277267
    2. '       ' → logprob: -7.501094818115234
    3. 'val' → logprob: -9.001094818115234
    4. '           ' → logprob: -9.251094818115234
    5. 'value' → logprob: -9.751094818115234
    6. 'v' → logprob: -9.751094818115234
    7. ' B' → logprob: -9.876094818115234
    8. 'temp' → logprob: -10.001094818115234
    9. 'b' → logprob: -10.501094818115234
    10. 's' → logprob: -10.751094818115234

Token 487: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0037606554105877876
    2. '[i' → logprob: -5.628760814666748
    3. '[j' → logprob: -9.37876033782959
    4. '[a' → logprob: -9.62876033782959
    5. '[' → logprob: -12.12876033782959
    6. 'k' → logprob: -13.62876033782959
    7. '
' → logprob: -14.25376033782959
    8. '[key' → logprob: -14.75376033782959
    9. '[b' → logprob: -14.75376033782959
    10. '[
' → logprob: -14.75376033782959

Token 488: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09462283551692963
    2. ']+=' → logprob: -2.719622850418091
    3. ']=' → logprob: -4.594622611999512
    4. '[k' → logprob: -5.469622611999512
    5. '[' → logprob: -5.594622611999512
    6. '=' → logprob: -6.219622611999512
    7. '%=' → logprob: -6.719622611999512
    8. '[j' → logprob: -6.844622611999512
    9. '+=' → logprob: -7.219622611999512
    10. '[i' → logprob: -7.344622611999512

Token 489: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2991093695163727
    2. '=' → logprob: -1.6741093397140503
    3. ' +=' → logprob: -2.92410945892334
    4. ' =' → logprob: -4.17410945892334
    5. '%=' → logprob: -6.79910945892334
    6. '       ' → logprob: -7.79910945892334
    7. ']+=' → logprob: -9.42410945892334
    8. '   ' → logprob: -9.67410945892334
    9. '+' → logprob: -9.92410945892334
    10. '        ' → logprob: -9.92410945892334

Token 490: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009162581525743008
    2. ' A' → logprob: -5.009162425994873
    3. '(A' → logprob: -6.134162425994873
    4. '(' → logprob: -9.009162902832031
    5. ' (' → logprob: -9.509162902832031
    6. '   ' → logprob: -9.759162902832031
    7. ' ' → logprob: -11.759162902832031
    8. 'a' → logprob: -12.509162902832031
    9. '	A' → logprob: -12.509162902832031
    10. '((' → logprob: -13.884162902832031

Token 491: '[j' (ID: 7895)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0009499297011643648
    2. 'a' → logprob: -7.000949859619141
    3. '[i' → logprob: -10.62594985961914
    4. '```' → logprob: -12.00094985961914
    5. '[' → logprob: -13.12594985961914
    6. ' a' → logprob: -13.37594985961914
    7. '[k' → logprob: -13.75094985961914
    8. '(a' → logprob: -14.25094985961914
    9. '	a' → logprob: -14.87594985961914
    10. '[
' → logprob: -14.87594985961914

Token 492: '][' (ID: 2696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.01221917662769556
    2. '][' → logprob: -4.512218952178955
    3. 'a' → logprob: -7.387218952178955
    4. '[' → logprob: -7.637218952178955
    5. ')[' → logprob: -10.637219429016113
    6. '[j' → logprob: -11.637219429016113
    7. ']' → logprob: -12.012219429016113
    8. ' [' → logprob: -12.387219429016113
    9. '}[' → logprob: -12.387219429016113
    10. '[k' → logprob: -12.512219429016113

Token 493: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00019722258730325848
    2. 'k' → logprob: -9.125197410583496
    3. ' a' → logprob: -10.125197410583496
    4. 'j' → logprob: -11.000197410583496
    5. 'i' → logprob: -11.375197410583496
    6. '
' → logprob: -12.500197410583496
    7. '   ' → logprob: -12.750197410583496
    8. '[a' → logprob: -12.750197410583496
    9. ' ' → logprob: -13.000197410583496
    10. '2' → logprob: -13.125197410583496

Token 494: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019225641153752804
    2. '-' → logprob: -6.876922607421875
    3. '[' → logprob: -7.876922607421875
    4. ' -' → logprob: -9.001922607421875
    5. '[j' → logprob: -9.001922607421875
    6. '-k' → logprob: -9.501922607421875
    7. '-j' → logprob: -10.376922607421875
    8. ']-' → logprob: -10.501922607421875
    9. '<|end|>' → logprob: -10.751922607421875
    10. '],' → logprob: -11.376922607421875

Token 495: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0664065033197403
    2. 'B' → logprob: -2.941406488418579
    3. ' if' → logprob: -5.066406726837158
    4. 'if' (adapté à ' if') → logprob: -5.566406726837158
    5. ' B' → logprob: -7.566406726837158
    6. '<|end|>' → logprob: -7.816406726837158
    7. '```' → logprob: -8.19140625
    8. '           ' → logprob: -10.06640625
    9. 'for' → logprob: -11.19140625
    10. '   ' → logprob: -11.31640625

Token 497: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04321339353919029
    2. ' B' → logprob: -3.168213367462158
    3. '   ' → logprob: -8.918213844299316
    4. '       ' → logprob: -10.168213844299316
    5. '           ' → logprob: -10.668213844299316
    6. '	B' → logprob: -11.793213844299316
    7. '    ' → logprob: -12.543213844299316
    8. ' ' → logprob: -13.043213844299316
    9. '         ' → logprob: -13.793213844299316
    10. '     ' → logprob: -14.168213844299316

Token 498: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. 'k' → logprob: -16.875001907348633
    4. '[j' → logprob: -18.125001907348633
    5. '[
' → logprob: -18.875001907348633
    6. '[i' → logprob: -19.750001907348633
    7. '{k' → logprob: -20.000001907348633
    8. ' [' → logprob: -20.125001907348633
    9. ',k' → logprob: -20.125001907348633
    10. '	k' → logprob: -20.375001907348633

Token 499: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.845798710244708e-05
    2. '>=' → logprob: -10.750038146972656
    3. '[' → logprob: -11.125038146972656
    4. '>' → logprob: -14.000038146972656
    5. 'k' → logprob: -14.875038146972656
    6. ' >=' → logprob: -15.625038146972656
    7. ']' → logprob: -15.750038146972656
    8. '```' → logprob: -16.000038146972656
    9. ']>=' → logprob: -16.250038146972656
    10. '[j' → logprob: -16.500038146972656

Token 500: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16031154990196228
    2. ' >=' → logprob: -1.9103115797042847
    3. '[' → logprob: -10.160311698913574
    4. ']>=' → logprob: -10.535311698913574
    5. ')>=' → logprob: -11.535311698913574
    6. '   ' → logprob: -12.160311698913574
    7. '≥' → logprob: -13.035311698913574
    8. '>' → logprob: -13.535311698913574
    9. '[i' → logprob: -14.410311698913574
    10. '[k' → logprob: -14.660311698913574

Token 501: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.0206720617134124e-05
    2. ' P' → logprob: -11.50001049041748
    3. '```' → logprob: -18.125009536743164
    4. '   ' → logprob: -18.250009536743164
    5. '=P' → logprob: -18.500009536743164
    6. '
' → logprob: -18.625009536743164
    7. '>P' → logprob: -18.625009536743164
    8. 'p' → logprob: -19.500009536743164
    9. '	P' → logprob: -19.750009536743164
    10. ' ' → logprob: -19.750009536743164

Token 502: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3521665930747986
    2. ':' → logprob: -1.2271666526794434
    3. '           ' → logprob: -5.602166652679443
    4. ' :
' → logprob: -11.977166175842285
    5. '       ' → logprob: -12.477166175842285
    6. '):
' → logprob: -12.602166175842285
    7. ':
' → logprob: -12.852166175842285
    8. '```' → logprob: -12.977166175842285
    9. ',' → logprob: -13.602166175842285
    10. '               ' → logprob: -13.727166175842285

Token 503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006956351571716368
    2. 'B' → logprob: -7.625695705413818
    3. ' B' → logprob: -9.12569522857666
    4. '```' → logprob: -9.75069522857666
    5. '		' → logprob: -11.00069522857666
    6. '               ' → logprob: -11.75069522857666
    7. ',' → logprob: -12.62569522857666
    8. '	       ' → logprob: -12.87569522857666
    9. '          ' → logprob: -13.12569522857666
    10. 'b' → logprob: -13.50069522857666

Token 504: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -1.9385402993066236e-05
    2. '           ' → logprob: -11.500019073486328
    3. ' B' → logprob: -11.625019073486328
    4. '```' → logprob: -15.250019073486328
    5. '   ' → logprob: -17.750019073486328
    6. '``' → logprob: -17.875019073486328
    7. '       ' → logprob: -18.000019073486328
    8. '#' → logprob: -18.250019073486328
    9. '               ' → logprob: -18.875019073486328
    10. '`' → logprob: -19.000019073486328

Token 505: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.320199877838604e-07
    2. 'k' → logprob: -14.875
    3. '```' → logprob: -18.75
    4. '=k' → logprob: -19.0
    5. '{k' → logprob: -19.5
    6. ',k' → logprob: -20.375
    7. '[i' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. '	k' → logprob: -20.625
    10. '=' → logprob: -21.0

Token 506: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.004108915571123362
    2. ' -=' → logprob: -5.629108905792236
    3. '-' → logprob: -7.629108905792236
    4. '=' → logprob: -11.629109382629395
    5. '   ' → logprob: -12.379109382629395
    6. ']-' → logprob: -12.879109382629395
    7. '           ' → logprob: -13.004109382629395
    8. ']' → logprob: -13.254109382629395
    9. '```' → logprob: -13.504109382629395
    10. ' -' → logprob: -15.129109382629395

Token 507: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0001825642102630809
    2. '-' → logprob: -9.000182151794434
    3. ' -=' → logprob: -9.750182151794434
    4. '=' → logprob: -14.375182151794434
    5. '%=' → logprob: -15.500182151794434
    6. '+=' → logprob: -17.25018310546875
    7. '   ' → logprob: -17.62518310546875
    8. ' -' → logprob: -18.00018310546875
    9. '>=' → logprob: -18.12518310546875
    10. '```' → logprob: -18.25018310546875

Token 508: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.836499985889532e-05
    2. ' P' → logprob: -9.7500581741333
    3. '```' → logprob: -18.125059127807617
    4. '           ' → logprob: -19.125059127807617
    5. '   ' → logprob: -19.250059127807617
    6. '=P' → logprob: -19.875059127807617
    7. '
' → logprob: -20.250059127807617
    8. '	P' → logprob: -20.250059127807617
    9. '>P' → logprob: -20.500059127807617
    10. 'p' → logprob: -20.625059127807617

Token 509: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08363508433103561
    2. 'main' → logprob: -3.333635091781616
    3. ' process' → logprob: -4.458634853363037
    4. ' type' → logprob: -4.833634853363037
    5. ' def' → logprob: -4.958634853363037
    6. ' update' → logprob: -5.458634853363037
    7. ' run' → logprob: -5.583634853363037
    8. 'def' → logprob: -5.708634853363037
    9. ' sum' → logprob: -6.708634853363037
    10. 'type' → logprob: -6.833634853363037

Token 512: '_answer' (ID: 65702)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.1408720016479492
    2. '_counts' → logprob: -1.1408720016479492
    3. '_result' → logprob: -2.015872001647949
    4. '_' → logprob: -2.140872001647949
    5. '_final' → logprob: -3.390872001647949
    6. '_results' → logprob: -4.140872001647949
    7. '_factor' → logprob: -4.390872001647949
    8. '_total' → logprob: -4.390872001647949
    9. '_answer' → logprob: -4.515872001647949
    10. '_sum' → logprob: -5.265872001647949

Token 513: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.007574800401926041
    2. '(' → logprob: -5.007575035095215
    3. '(A' → logprob: -7.632575035095215
    4. '(N' → logprob: -8.257575035095215
    5. '(P' → logprob: -10.757575035095215
    6. 'def' → logprob: -10.882575035095215
    7. ' (' → logprob: -10.882575035095215
    8. '```' → logprob: -11.007575035095215
    9. '(
' → logprob: -11.507575035095215
    10. '_B' → logprob: -12.882575035095215

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4109949469566345
    2. '):' → logprob: -1.7859950065612793
    3. '):
' → logprob: -1.7859950065612793
    4. ')' → logprob: -6.910995006561279
    5. '):
' → logprob: -8.285994529724121
    6. ',N' → logprob: -8.285994529724121
    7. '):

' → logprob: -9.785994529724121
    8. '   ' → logprob: -10.285994529724121
    9. ',
' → logprob: -10.785994529724121
    10. ',B' → logprob: -11.035994529724121

Token 515: ' A' (ID: 355)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14902189373970032
    2. 'P' → logprob: -2.274021863937378
    3. ' N' → logprob: -3.524021863937378
    4. ' P' → logprob: -5.274022102355957
    5. 'A' → logprob: -7.649022102355957
    6. ' ' → logprob: -8.899022102355957
    7. ' A' → logprob: -9.774022102355957
    8. ')' → logprob: -10.274022102355957
    9. 'sys' → logprob: -10.274022102355957
    10. 'def' → logprob: -10.399022102355957

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015062130114529282
    2. ',N' → logprob: -9.375150680541992
    3. ' ,' → logprob: -10.500150680541992
    4. 'def' → logprob: -11.625150680541992
    5. '):
' → logprob: -11.625150680541992
    6. ',
' → logprob: -11.625150680541992
    7. ',P' → logprob: -12.500150680541992
    8. '):' → logprob: -13.750150680541992
    9. 'import' → logprob: -13.875150680541992
    10. '[N' → logprob: -14.000150680541992

Token 517: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02039741910994053
    2. ' N' → logprob: -4.020397186279297
    3. 'P' → logprob: -6.520397186279297
    4. 'B' → logprob: -7.645397186279297
    5. ' P' → logprob: -9.770397186279297
    6. 'X' → logprob: -10.145397186279297
    7. 'A' → logprob: -10.520397186279297
    8. 'n' → logprob: -10.645397186279297
    9. ' ' → logprob: -10.645397186279297
    10. 'def' → logprob: -10.770397186279297

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030787214636802673
    2. '):
' → logprob: -5.878078937530518
    3. ' ,' → logprob: -9.00307846069336
    4. '):' → logprob: -9.75307846069336
    5. ',P' → logprob: -10.00307846069336
    6. 'def' → logprob: -11.25307846069336
    7. ',
' → logprob: -11.37807846069336
    8. '   ' → logprob: -11.75307846069336
    9. '):

' → logprob: -12.12807846069336
    10. 'P' → logprob: -13.12807846069336

Token 519: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0037944926880300045
    2. ' P' → logprob: -5.7537946701049805
    3. 'X' → logprob: -8.62879467010498
    4. 'N' → logprob: -9.25379467010498
    5. ')' → logprob: -10.00379467010498
    6. 'A' → logprob: -10.19129467010498
    7. 'Q' → logprob: -10.25379467010498
    8. ' ' → logprob: -10.44129467010498
    9. 'sys' → logprob: -10.69129467010498
    10. 'B' → logprob: -11.00379467010498

Token 520: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9039414525032043
    2. ',' → logprob: -1.1539413928985596
    3. '):
' → logprob: -1.2789413928985596
    4. '   ' → logprob: -7.153941631317139
    5. '):
' → logprob: -8.15394115447998
    6. ')' → logprob: -9.52894115447998
    7. '):

' → logprob: -10.15394115447998
    8. ' ,' → logprob: -10.15394115447998
    9. ',
' → logprob: -11.15394115447998
    10. ',k' → logprob: -11.15394115447998

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014159157872200012
    2. 'answer' → logprob: -4.764159202575684
    3. 'ans' → logprob: -5.889159202575684
    4. 'result' → logprob: -6.639159202575684
    5. 'res' → logprob: -7.014159202575684
    6. 'total' → logprob: -8.014159202575684
    7. 's' → logprob: -10.014159202575684
    8. '
' → logprob: -10.139159202575684
    9. 'for' → logprob: -10.514159202575684
    10. '```' → logprob: -10.514159202575684

Token 522: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.46776703000068665
    2. 'ans' (adapté à ' ans') → logprob: -1.3427670001983643
    3. 'res' → logprob: -2.8427670001983643
    4. 'result' → logprob: -3.0927670001983643
    5. '   ' → logprob: -5.592767238616943
    6. 'total' → logprob: -6.092767238616943
    7. 'return' → logprob: -6.592767238616943
    8. 's' → logprob: -7.092767238616943
    9. 'ret' → logprob: -8.842766761779785
    10. ' ans' → logprob: -8.842766761779785

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698447704315186
    2. '=' → logprob: -2.1269845962524414
    3. ',' → logprob: -11.001984596252441
    4. '_' → logprob: -11.251984596252441
    5. '   ' → logprob: -11.376984596252441
    6. ')' → logprob: -12.751984596252441
    7. '[' → logprob: -13.001984596252441
    8. ' ' → logprob: -13.251984596252441
    9. '  ' → logprob: -13.501984596252441
    10. ' =
' → logprob: -13.751984596252441

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004739483818411827
    2. ' ' → logprob: -5.379739284515381
    3. 'sum' → logprob: -10.129739761352539
    4. '1' → logprob: -10.754739761352539
    5. 'B' → logprob: -11.004739761352539
    6. ' sum' → logprob: -11.504739761352539
    7. '[' → logprob: -11.754739761352539
    8. ' B' → logprob: -11.942239761352539
    9. '(' → logprob: -12.692239761352539
    10. '   ' → logprob: -12.942239761352539

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000802480208221823
    2. 'sum' → logprob: -7.750802516937256
    3. '1' → logprob: -8.875802040100098
    4. 'B' → logprob: -9.375802040100098
    5. '(' → logprob: -10.125802040100098
    6. '[' → logprob: -10.375802040100098
    7. '(B' → logprob: -10.875802040100098
    8. ' ' → logprob: -11.625802040100098
    9. '[B' → logprob: -11.750802040100098
    10. 'A' → logprob: -11.875802040100098

Token 526: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0764479711651802
    2. '   ' → logprob: -2.7014479637145996
    3. ' for' → logprob: -6.0764479637146
    4. '<|end|>' → logprob: -6.5764479637146
    5. '    
' → logprob: -6.7014479637146
    6. ' 
' → logprob: -7.3264479637146
    7. '  
' → logprob: -7.7014479637146
    8. 'for' → logprob: -9.326448440551758
    9. '	for' → logprob: -9.451448440551758
    10. '   
' → logprob: -9.576448440551758

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01505010575056076
    2. ' for' → logprob: -4.265049934387207
    3. 'for' → logprob: -7.390049934387207
    4. '
' → logprob: -9.140049934387207
    5. '<|end|>' → logprob: -9.140049934387207
    6. ',' → logprob: -11.015049934387207
    7. '	for' → logprob: -11.015049934387207
    8. '    
' → logprob: -11.515049934387207
    9. '  ' → logprob: -13.140049934387207
    10. '<|end|>' → logprob: -13.390049934387207

Token 528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005258422344923019
    2. '   ' → logprob: -5.255258560180664
    3. ' for' → logprob: -10.755258560180664
    4. '```' → logprob: -13.505258560180664
    5. 'mod' → logprob: -13.880258560180664
    6. '
' → logprob: -14.630258560180664
    7. '	for' → logprob: -15.505258560180664
    8. '``' → logprob: -16.630258560180664
    9. '  ' → logprob: -16.630258560180664
    10. 'def' → logprob: -17.130258560180664

Token 529: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35089361667633057
    2. 'k' → logprob: -1.2258936166763306
    3. ' i' → logprob: -6.600893497467041
    4. 'x' → logprob: -7.350893497467041
    5. ' k' → logprob: -8.1008939743042
    6. '   ' → logprob: -9.9758939743042
    7. 'j' → logprob: -10.1008939743042
    8. '```' → logprob: -11.2258939743042
    9. 'a' → logprob: -11.3508939743042
    10. 'b' → logprob: -12.4758939743042

Token 530: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031881670001894236
    2. 'in' → logprob: -5.753188133239746
    3. '```' → logprob: -12.753188133239746
    4. 'range' → logprob: -13.003188133239746
    5. '   ' → logprob: -13.128188133239746
    6. '	in' → logprob: -14.378188133239746
    7. ',' → logprob: -14.503188133239746
    8. ' ' → logprob: -14.628188133239746
    9. '<|end|>' → logprob: -15.253188133239746
    10. '0' → logprob: -15.378188133239746

Token 531: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23880068957805634
    2. 'v' → logprob: -2.3638007640838623
    3. 'x' → logprob: -2.7388007640838623
    4. 'val' → logprob: -3.2388007640838623
    5. ' b' → logprob: -5.238800525665283
    6. 'bi' → logprob: -5.613800525665283
    7. 'value' → logprob: -6.363800525665283
    8. ' val' → logprob: -6.863800525665283
    9. 'count' → logprob: -6.988800525665283
    10. ' v' → logprob: -7.488800525665283

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.317290723323822
    2. ',' → logprob: -1.9422907829284668
    3. 'in' → logprob: -2.067290782928467
    4. ',b' → logprob: -6.317290782928467
    5. ' ,' → logprob: -9.817290306091309
    6. '```' → logprob: -10.442290306091309
    7. 'b' → logprob: -11.067290306091309
    8. ' ' → logprob: -11.442290306091309
    9. ',k' → logprob: -11.442290306091309
    10. ',B' → logprob: -11.567290306091309

Token 533: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015023599844425917
    2. ' enumerate' → logprob: -6.501502513885498
    3. '```' → logprob: -18.126502990722656
    4. 'enum' → logprob: -18.376502990722656
    5. '
' → logprob: -18.751502990722656
    6. 'en' → logprob: -19.001502990722656
    7. 'range' → logprob: -19.501502990722656
    8. 'zip' → logprob: -20.376502990722656
    9. '   ' → logprob: -21.001502990722656
    10. 'enqueue' → logprob: -21.126502990722656

Token 534: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.31328386068344116
    2. 'B' → logprob: -1.313283920288086
    3. 'zip' → logprob: -11.188283920288086
    4. ' B' → logprob: -12.813283920288086
    5. '	B' → logprob: -13.063283920288086
    6. 'enumer' → logprob: -14.063283920288086
    7. '(zip' → logprob: -14.688283920288086
    8. '
' → logprob: -14.938283920288086
    9. '[B' → logprob: -14.938283920288086
    10. 'b' → logprob: -15.063283920288086

Token 535: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12709535658359528
    2. '):' → logprob: -2.1270954608917236
    3. '):
' → logprob: -8.877095222473145
    4. '   ' → logprob: -10.877095222473145
    5. ' ):
' → logprob: -13.252095222473145
    6. ')' → logprob: -13.377095222473145
    7. ':' → logprob: -13.752095222473145
    8. '):

' → logprob: -13.752095222473145
    9. ',' → logprob: -14.002095222473145
    10. '():
' → logprob: -14.252095222473145

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18522509932518005
    2. '   ' → logprob: -2.310225009918213
    3. ':' → logprob: -3.060225009918213
    4. ' if' → logprob: -4.810225009918213
    5. '<|end|>' → logprob: -5.685225009918213
    6. ':
' → logprob: -5.810225009918213
    7. ' ' → logprob: -6.185225009918213
    8. ',' → logprob: -6.435225009918213
    9. ' :' → logprob: -6.810225009918213
    10. '):
' → logprob: -7.685225009918213

Token 537: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.35211989283561707
    2. '       ' → logprob: -1.4771199226379395
    3. '   ' → logprob: -2.9771199226379395
    4. ' ans' → logprob: -4.8521199226379395
    5. '	ans' → logprob: -5.2271199226379395
    6. 'if' → logprob: -5.9771199226379395
    7. '
' → logprob: -7.2271199226379395
    8. '(ans' → logprob: -8.227119445800781
    9. 'for' → logprob: -8.227119445800781
    10. 'temp' → logprob: -9.227119445800781

Token 538: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5935144424438477
    2. ' +=' → logprob: -0.8435144424438477
    3. '=' → logprob: -4.593514442443848
    4. ' =' → logprob: -5.343514442443848
    5. '   ' → logprob: -6.343514442443848
    6. '+' → logprob: -8.343514442443848
    7. ' ^=' → logprob: -8.968514442443848
    8. '```' → logprob: -8.968514442443848
    9. ']+=' → logprob: -9.218514442443848
    10. 'import' → logprob: -10.218514442443848

Token 539: ' accumulate' (ID: 74226)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.07044996321201324
    2. ' (' → logprob: -2.6954500675201416
    3. '(add' → logprob: -8.320449829101562
    4. '(' → logprob: -8.570449829101562
    5. ' ans' → logprob: -10.320449829101562
    6. 'ans' → logprob: -10.820449829101562
    7. 'add' → logprob: -11.320449829101562
    8. ' add' → logprob: -12.570449829101562
    9. '(a' → logprob: -12.570449829101562
    10. '(answer' → logprob: -12.945449829101562

Token 540: '_answer' (ID: 65702)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.012745312415063381
    2. 'ans' → logprob: -4.512745380401611
    3. ' ans' → logprob: -7.012745380401611
    4. ' (' → logprob: -7.262745380401611
    5. '(' → logprob: -10.012744903564453
    6. '	ans' → logprob: -11.012744903564453
    7. '(acc' → logprob: -11.387744903564453
    8. '_ans' → logprob: -12.137744903564453
    9. '   ' → logprob: -12.762744903564453
    10. '(answer' → logprob: -13.137744903564453

Token 541: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00037800322752445936
    2. 'ans' → logprob: -8.625377655029297
    3. ' (' → logprob: -9.125377655029297
    4. '(' → logprob: -9.625377655029297
    5. '   ' → logprob: -11.875377655029297
    6. '((' → logprob: -12.375377655029297
    7. '(
' → logprob: -13.125377655029297
    8. ' ans' → logprob: -13.250377655029297
    9. '(acc' → logprob: -13.375377655029297
    10. '(answer' → logprob: -13.500377655029297

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025038134306669235
    2. ',b' → logprob: -3.900038242340088
    3. ' ,' → logprob: -5.900038242340088
    4. ' +' → logprob: -6.650038242340088
    5. ' b' → logprob: -8.27503776550293
    6. '+' → logprob: -9.40003776550293
    7. '+b' → logprob: -9.65003776550293
    8. 'b' → logprob: -11.27503776550293
    9. '+,' → logprob: -11.40003776550293
    10. '   ' → logprob: -11.77503776550293

Token 543: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14321351051330566
    2. ' b' → logprob: -2.0182135105133057
    3. 'i' → logprob: -8.268213272094727
    4. ' i' → logprob: -9.268213272094727
    5. 'B' → logprob: -9.893213272094727
    6. 'A' → logprob: -10.268213272094727
    7. 'a' → logprob: -10.768213272094727
    8. ' A' → logprob: -10.893213272094727
    9. '(b' → logprob: -11.643213272094727
    10. '       ' → logprob: -11.643213272094727

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002583594177849591
    2. ' ,' → logprob: -8.750258445739746
    3. ',A' → logprob: -9.875258445739746
    4. ')' → logprob: -11.500258445739746
    5. ',
' → logprob: -11.750258445739746
    6. ',P' → logprob: -11.875258445739746
    7. ',i' → logprob: -12.000258445739746
    8. 'import' → logprob: -12.500258445739746
    9. '   ' → logprob: -12.500258445739746
    10. '       ' → logprob: -13.250258445739746

Token 545: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0759323313832283
    2. 'P' → logprob: -2.700932264328003
    3. ' A' → logprob: -5.575932502746582
    4. 'i' → logprob: -7.075932502746582
    5. ' P' → logprob: -8.200932502746582
    6. '       ' → logprob: -8.825932502746582
    7. 'N' → logprob: -8.950932502746582
    8. '   ' → logprob: -8.950932502746582
    9. '1' → logprob: -8.950932502746582
    10. '           ' → logprob: -9.200932502746582

Token 546: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16626062989234924
    2. ',' → logprob: -1.9162606000900269
    3. ',i' → logprob: -5.416260719299316
    4. '   ' → logprob: -7.166260719299316
    5. '[' → logprob: -7.416260719299316
    6. ' ,' → logprob: -9.291260719299316
    7. ',[' → logprob: -10.166260719299316
    8. ')' → logprob: -10.791260719299316
    9. '[
' → logprob: -10.916260719299316
    10. ',
' → logprob: -12.041260719299316

Token 547: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2416762262582779
    2. 'N' → logprob: -1.6166762113571167
    3. ' i' → logprob: -4.491676330566406
    4. ' N' → logprob: -5.616676330566406
    5. '   ' → logprob: -7.366676330566406
    6. ',' → logprob: -8.366676330566406
    7. '       ' → logprob: -8.741676330566406
    8. ' ' → logprob: -9.616676330566406
    9. ')' → logprob: -10.741676330566406
    10. ',N' → logprob: -10.741676330566406

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006261508446186781
    2. ',i' → logprob: -6.006261348724365
    3. '[i' → logprob: -6.256261348724365
    4. ' ,' → logprob: -6.756261348724365
    5. '       ' → logprob: -8.131261825561523
    6. '   ' → logprob: -8.381261825561523
    7. 'import' → logprob: -9.506261825561523
    8. '[' → logprob: -10.131261825561523
    9. ')' → logprob: -11.256261825561523
    10. 'def' → logprob: -11.506261825561523

Token 549: ' i' (ID: 575)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03292873129248619
    2. 'i' → logprob: -3.532928705215454
    3. ' P' → logprob: -5.907928943634033
    4. '   ' → logprob: -8.282928466796875
    5. ' i' → logprob: -9.157928466796875
    6. ' ' → logprob: -10.532928466796875
    7. ',' → logprob: -10.907928466796875
    8. ')' → logprob: -11.657928466796875
    9. '  ' → logprob: -11.657928466796875
    10. '
' → logprob: -12.407928466796875

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1719183772802353
    2. ')' → logprob: -1.9219183921813965
    3. ')
' → logprob: -5.2969183921813965
    4. '   ' → logprob: -5.5469183921813965
    5. '       ' → logprob: -6.5469183921813965
    6. ',i' → logprob: -7.7969183921813965
    7. ' ,' → logprob: -8.421917915344238
    8. '[' → logprob: -9.296917915344238
    9. 'def' → logprob: -9.296917915344238
    10. '[i' → logprob: -9.546917915344238

Token 551: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0011928485473617911
    2. ' P' → logprob: -6.751193046569824
    3. '   ' → logprob: -11.626193046569824
    4. 'i' → logprob: -12.001193046569824
    5. '
' → logprob: -13.501193046569824
    6. ' ' → logprob: -13.501193046569824
    7. ')' → logprob: -14.251193046569824
    8. '       ' → logprob: -14.376193046569824
    9. 'N' → logprob: -14.501193046569824
    10. '  ' → logprob: -14.751193046569824

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11768492311239243
    2. ',' → logprob: -2.367684841156006
    3. ')
' → logprob: -4.617684841156006
    4. '   ' → logprob: -5.617684841156006
    5. '       ' → logprob: -5.742684841156006
    6. '<|end|>' → logprob: -8.867685317993164
    7. ',
' → logprob: -9.242685317993164
    8. '):
' → logprob: -9.242685317993164
    9. '```' → logprob: -9.492685317993164
    10. ')(
' → logprob: -10.367685317993164

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09901472926139832
    2. '```' → logprob: -3.0990147590637207
    3. '+' → logprob: -4.474014759063721
    4. '\' → logprob: -4.849014759063721
    5. '<|end|>' → logprob: -4.974014759063721
    6. '=' → logprob: -5.349014759063721
    7. ',' → logprob: -5.974014759063721
    8. ' +=' → logprob: -6.099014759063721
    9. ' +' → logprob: -6.224014759063721
    10. '``' → logprob: -6.474014759063721

Token 554: ' return' (ID: 622)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23441258072853088
    2. '   ' → logprob: -2.484412670135498
    3. '<|end|>' → logprob: -3.734412670135498
    4. ' for' → logprob: -3.859412670135498
    5. '```' → logprob: -3.984412670135498
    6. '    ' → logprob: -4.359412670135498
    7. ' ' → logprob: -4.484412670135498
    8. '=' → logprob: -4.484412670135498
    9. '       ' → logprob: -5.359412670135498
    10. ' +=' → logprob: -6.359412670135498

Token 555: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.021921591833233833
    2. '(ans' → logprob: -4.146921634674072
    3. ' ans' → logprob: -5.146921634674072
    4. ' (' → logprob: -10.396921157836914
    5. '(' → logprob: -11.396921157836914
    6. 'acc' → logprob: -11.646921157836914
    7. '	ans' → logprob: -14.021921157836914
    8. '(acc' → logprob: -14.896921157836914
    9. '   ' → logprob: -15.646921157836914
    10. '_ans' → logprob: -15.646921157836914

Token 556: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3445080816745758
    2. 'def' → logprob: -1.3445080518722534
    3. '```' → logprob: -4.844508171081543
    4. '<|end|>' → logprob: -4.969508171081543
    5. ' def' → logprob: -5.094508171081543
    6. '
' → logprob: -5.469508171081543
    7. '  ' → logprob: -6.844508171081543
    8. ' ' → logprob: -7.094508171081543
    9. '[
' → logprob: -7.719508171081543
    10. '[' → logprob: -7.844508171081543

Token 557: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2599725723266602
    2. 'def' → logprob: -1.2599725723266602
    3. ' def' → logprob: -1.2599725723266602
    4. '+' → logprob: -3.25997257232666
    5. ' ' → logprob: -3.63497257232666
    6. '    ' → logprob: -3.75997257232666
    7. ' for' → logprob: -4.00997257232666
    8. '<|end|>' → logprob: -4.50997257232666
    9. '```' → logprob: -4.75997257232666
    10. '=' → logprob: -5.63497257232666

Token 558: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14272673428058624
    2. ' accumulate' → logprob: -2.0177266597747803
    3. 'def' → logprob: -11.64272689819336
    4. '(acc' → logprob: -11.64272689819336
    5. 'add' → logprob: -12.01772689819336
    6. ' ' → logprob: -12.01772689819336
    7. '_acc' → logprob: -12.39272689819336
    8. ' acc' → logprob: -12.76772689819336
    9. '
' → logprob: -13.01772689819336
    10. '	acc' → logprob: -13.26772689819336

Token 559: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.00013262155698612332
    2. 'answer' → logprob: -9.12513256072998
    3. '_ans' → logprob: -11.00013256072998
    4. 'Answer' → logprob: -13.00013256072998
    5. 'def' → logprob: -13.75013256072998
    6. 'ans' → logprob: -14.00013256072998
    7. '(answer' → logprob: -14.00013256072998
    8. '(ans' → logprob: -14.00013256072998
    9. '_' → logprob: -15.75013256072998
    10. '_answers' → logprob: -15.87513256072998

Token 560: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.380904672667384e-05
    2. '(acc' → logprob: -11.375033378601074
    3. '(' → logprob: -11.625033378601074
    4. '(answer' → logprob: -11.875033378601074
    5. '(a' → logprob: -12.750033378601074
    6. ' (' → logprob: -12.750033378601074
    7. '(s' → logprob: -15.375033378601074
    8. '(prev' → logprob: -15.625033378601074
    9. '(old' → logprob: -16.87503433227539
    10. '(
' → logprob: -16.87503433227539

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',b' → logprob: -15.000036239624023
    4. ',a' → logprob: -16.375036239624023
    5. '   ' → logprob: -16.750036239624023
    6. ',
' → logprob: -18.000036239624023
    7. ',int' → logprob: -18.750036239624023
    8. ',value' → logprob: -19.000036239624023
    9. '_,' → logprob: -19.375036239624023
    10. ',i' → logprob: -19.375036239624023

Token 562: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.40736764669418335
    2. ' b' → logprob: -1.9073677062988281
    3. 'B' → logprob: -2.032367706298828
    4. ' B' → logprob: -2.907367706298828
    5. 'val' → logprob: -8.532367706298828
    6. ' val' → logprob: -8.907367706298828
    7. 'value' → logprob: -10.032367706298828
    8. ' value' → logprob: -10.782367706298828
    9. 'x' → logprob: -11.282367706298828
    10. ' ' → logprob: -11.407367706298828

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018041854491457343
    2. ' ,' → logprob: -8.6251802444458
    3. ',A' → logprob: -15.2501802444458
    4. ',a' → logprob: -15.3751802444458
    5. '   ' → logprob: -16.125181198120117
    6. ',b' → logprob: -16.375181198120117
    7. ',
' → logprob: -16.500181198120117
    8. ',i' → logprob: -17.625181198120117
    9. '_,' → logprob: -18.000181198120117
    10. 'a' → logprob: -18.375181198120117

Token 564: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.043693460524082184
    2. ' A' → logprob: -3.6686935424804688
    3. 'B' → logprob: -4.668693542480469
    4. 'b' → logprob: -5.043693542480469
    5. ')' → logprob: -8.043693542480469
    6. '1' → logprob: -8.043693542480469
    7. ' b' → logprob: -8.543693542480469
    8. ' B' → logprob: -8.918693542480469
    9. '0' → logprob: -9.043693542480469
    10. ' ' → logprob: -10.043693542480469

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.424530435353518e-05
    2. ' ,' → logprob: -9.375094413757324
    3. '   ' → logprob: -12.125094413757324
    4. ',i' → logprob: -12.875094413757324
    5. 'def' → logprob: -15.000094413757324
    6. ',
' → logprob: -15.125094413757324
    7. ',b' → logprob: -16.250093460083008
    8. '```' → logprob: -16.250093460083008
    9. '  ' → logprob: -16.500093460083008
    10. '[i' → logprob: -16.500093460083008

Token 566: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3900838792324066
    2. 'i' → logprob: -1.140083909034729
    3. '0' → logprob: -6.7650837898254395
    4. 'len' → logprob: -7.1400837898254395
    5. ' N' → logprob: -8.015084266662598
    6. ' i' → logprob: -8.515084266662598
    7. '   ' → logprob: -8.765084266662598
    8. ')' → logprob: -8.765084266662598
    9. 'b' → logprob: -9.515084266662598
    10. ',' → logprob: -9.765084266662598

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001158211671281606
    2. ' ,' → logprob: -9.125115394592285
    3. ',i' → logprob: -12.125115394592285
    4. '   ' → logprob: -13.875115394592285
    5. '_,' → logprob: -16.2501163482666
    6. 'i' → logprob: -16.3751163482666
    7. ',
' → logprob: -16.5001163482666
    8. ' ' → logprob: -17.0001163482666
    9. 'def' → logprob: -17.0001163482666
    10. '```' → logprob: -17.3751163482666

Token 568: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030449610203504562
    2. ' i' → logprob: -3.530449628829956
    3. 'b' → logprob: -7.905449390411377
    4. '   ' → logprob: -8.905449867248535
    5. ' b' → logprob: -10.155449867248535
    6. ' ' → logprob: -10.280449867248535
    7. ')' → logprob: -10.530449867248535
    8. ',' → logprob: -10.905449867248535
    9. '0' → logprob: -11.405449867248535
    10. '
' → logprob: -11.655449867248535

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003074566484428942
    2. '   ' → logprob: -8.625307083129883
    3. ' ,' → logprob: -9.375307083129883
    4. '):
' → logprob: -10.750307083129883
    5. '):' → logprob: -11.250307083129883
    6. ',
' → logprob: -12.500307083129883
    7. '```' → logprob: -13.125307083129883
    8. ',b' → logprob: -14.625307083129883
    9. '_,' → logprob: -15.250307083129883
    10. '  ' → logprob: -15.500307083129883

Token 570: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004149391781538725
    2. ' P' → logprob: -5.504149436950684
    3. 'b' → logprob: -10.129149436950684
    4. ')' → logprob: -11.504149436950684
    5. 'p' → logprob: -12.754149436950684
    6. 'i' → logprob: -12.754149436950684
    7. 'A' → logprob: -12.754149436950684
    8. '   ' → logprob: -12.879149436950684
    9. ' ' → logprob: -13.004149436950684
    10. '```' → logprob: -13.379149436950684

Token 571: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03472986817359924
    2. '):' → logprob: -3.4097299575805664
    3. ',' → logprob: -7.284729957580566
    4. '   ' → logprob: -8.159729957580566
    5. '):
' → logprob: -9.159729957580566
    6. '):

' → logprob: -12.659729957580566
    7. ':' → logprob: -13.534729957580566
    8. ')' → logprob: -13.659729957580566
    9. ':
' → logprob: -15.534729957580566
    10. ' ):
' → logprob: -15.659729957580566

Token 572: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6281620860099792
    2. ' ans' → logprob: -1.253162145614624
    3. '   ' → logprob: -2.003162145614624
    4. '(ans' → logprob: -3.878162145614624
    5. 'return' → logprob: -4.128161907196045
    6. ' if' → logprob: -5.378161907196045
    7. 'ans' → logprob: -6.378161907196045
    8. '```' → logprob: -7.003161907196045
    9. '    ' → logprob: -7.378161907196045
    10. ' (' → logprob: -8.003162384033203

Token 573: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7743120789527893
    2. 'return' (adapté à ' return') → logprob: -1.2743120193481445
    3. '(ans' → logprob: -1.3993120193481445
    4. '   ' → logprob: -4.8993120193481445
    5. 'if' → logprob: -6.0243120193481445
    6. ' ans' → logprob: -7.1493120193481445
    7. ' return' → logprob: -7.7743120193481445
    8. 'for' → logprob: -7.8993120193481445
    9. '       ' → logprob: -8.649312019348145
    10. 'res' → logprob: -8.649312019348145

Token 574: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.776898251497187e-05
    2. ' (' → logprob: -10.3750581741333
    3. '(' → logprob: -11.7500581741333
    4. 'ans' → logprob: -12.0000581741333
    5. '(acc' → logprob: -12.0000581741333
    6. '(a' → logprob: -13.0000581741333
    7. '(answer' → logprob: -13.7500581741333
    8. '   ' → logprob: -14.0000581741333
    9. '(arr' → logprob: -15.0000581741333
    10. '
' → logprob: -15.0000581741333

Token 575: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001205893131555058
    2. '(ans' → logprob: -9.125120162963867
    3. ' ans' → logprob: -11.625120162963867
    4. '   ' → logprob: -13.250120162963867
    5. '
' → logprob: -14.750120162963867
    6. '	ans' → logprob: -15.000120162963867
    7. '           ' → logprob: -16.375120162963867
    8. '(' → logprob: -17.250120162963867
    9. '       ' → logprob: -17.625120162963867
    10. '_ans' → logprob: -17.875120162963867

Token 576: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935076117515564
    2. ' +' → logprob: -0.6935076117515564
    3. '+b' → logprob: -7.943507671356201
    4. '   ' → logprob: -13.193507194519043
    5. ' ' → logprob: -13.943507194519043
    6. '+
' → logprob: -14.318507194519043
    7. ' ' → logprob: -14.693507194519043
    8. ' +
' → logprob: -14.693507194519043
    9. '+B' → logprob: -14.818507194519043
    10. '```' → logprob: -15.318507194519043

Token 577: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005428812000900507
    2. ' b' → logprob: -5.255428791046143
    3. '(b' → logprob: -8.7554292678833
    4. ' (' → logprob: -11.1304292678833
    5. '   ' → logprob: -11.2554292678833
    6. '(' → logprob: -12.8804292678833
    7. ' ' → logprob: -13.7554292678833
    8. '
' → logprob: -13.7554292678833
    9. 'a' → logprob: -14.5054292678833
    10. '(A' → logprob: -14.5054292678833

Token 578: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47412925958633423
    2. '*' → logprob: -0.9741292595863342
    3. '*A' → logprob: -10.599129676818848
    4. ')' → logprob: -11.474129676818848
    5. '   ' → logprob: -11.724129676818848
    6. ' ' → logprob: -13.474129676818848
    7. '**' → logprob: -13.724129676818848
    8. '    ' → logprob: -14.099129676818848
    9. '*(' → logprob: -14.349129676818848
    10. '```' → logprob: -14.599129676818848

Token 579: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012563452124595642
    2. 'sum' → logprob: -4.887563228607178
    3. '(A' → logprob: -6.137563228607178
    4. ' A' → logprob: -6.512563228607178
    5. '(' → logprob: -8.012563705444336
    6. '   ' → logprob: -8.387563705444336
    7. 'max' → logprob: -8.762563705444336
    8. ' (' → logprob: -9.387563705444336
    9. 'pow' → logprob: -9.512563705444336
    10. '(sum' → logprob: -9.637563705444336

Token 580: '[-' (ID: 17503)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00021807955636177212
    2. 'N' → logprob: -8.875218391418457
    3. '[' → logprob: -9.750218391418457
    4. '[i' → logprob: -11.375218391418457
    5. '   ' → logprob: -12.625218391418457
    6. '[n' → logprob: -12.875218391418457
    7. '(N' → logprob: -14.375218391418457
    8. '[
' → logprob: -14.625218391418457
    9. '
' → logprob: -14.875218391418457
    10. '```' → logprob: -15.000218391418457

Token 581: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008985616266727448
    2. '1' → logprob: -4.75898551940918
    3. '[N' → logprob: -9.13398551940918
    4. ' N' → logprob: -9.25898551940918
    5. '[' → logprob: -9.88398551940918
    6. '(N' → logprob: -10.13398551940918
    7. '```' → logprob: -10.25898551940918
    8. '   ' → logprob: -11.25898551940918
    9. 'i' → logprob: -11.75898551940918
    10. '_N' → logprob: -12.25898551940918

Token 582: '][-' (ID: 162298)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.18318314850330353
    2. '[i' → logprob: -2.308183193206787
    3. '][' → logprob: -2.808183193206787
    4. '[' → logprob: -5.058183193206787
    5. ')[' → logprob: -7.558183193206787
    6. ' [' → logprob: -8.308182716369629
    7. '[n' → logprob: -9.433182716369629
    8. '   ' → logprob: -9.433182716369629
    9. '[-' → logprob: -9.933182716369629
    10. '```' → logprob: -9.933182716369629

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004338877333793789
    2. '2' → logprob: -8.875433921813965
    3. '(' → logprob: -9.000433921813965
    4. 'i' → logprob: -9.000433921813965
    5. 'N' → logprob: -11.125433921813965
    6. 'P' → logprob: -11.875433921813965
    7. '(i' → logprob: -11.875433921813965
    8. '(N' → logprob: -11.875433921813965
    9. ' ' → logprob: -13.187933921813965
    10. '   ' → logprob: -13.375433921813965

Token 584: ' -' (ID: 533)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03598308190703392
    2. ')' → logprob: -3.535983085632324
    3. ']' → logprob: -5.285983085632324
    4. ']%' → logprob: -7.660983085632324
    5. ')%' → logprob: -7.910983085632324
    6. ' ])' → logprob: -9.160983085632324
    7. '[i' → logprob: -9.535983085632324
    8. ' )' → logprob: -9.660983085632324
    9. ',' → logprob: -11.035983085632324
    10. '))' → logprob: -11.410983085632324

Token 585: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037056926637887955
    2. ' i' → logprob: -4.287056922912598
    3. '(' → logprob: -4.412056922912598
    4. 'N' → logprob: -5.412056922912598
    5. ' (' → logprob: -5.912056922912598
    6. '(N' → logprob: -6.537056922912598
    7. '(i' → logprob: -7.287056922912598
    8. '1' → logprob: -7.662056922912598
    9. '2' → logprob: -8.537056922912598
    10. ' N' → logprob: -8.912056922912598

Token 586: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22695505619049072
    2. ')' → logprob: -1.6019550561904907
    3. ']' → logprob: -6.976954936981201
    4. ')%' → logprob: -7.976954936981201
    5. '   ' → logprob: -9.22695541381836
    6. ' )' → logprob: -9.97695541381836
    7. '))' → logprob: -10.35195541381836
    8. ']%' → logprob: -10.97695541381836
    9. ' ])' → logprob: -11.10195541381836
    10. '%' → logprob: -11.22695541381836

Token 587: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.161977618932724
    2. ' %' → logprob: -1.9119776487350464
    3. ')' → logprob: -6.411977767944336
    4. ')%' → logprob: -9.536977767944336
    5. '%B' → logprob: -10.911977767944336
    6. 'def' → logprob: -12.411977767944336
    7. '%A' → logprob: -12.536977767944336
    8. '```' → logprob: -13.036977767944336
    9. '%D' → logprob: -13.286977767944336
    10. '
' → logprob: -13.536977767944336

Token 588: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004078401252627373
    2. ' P' → logprob: -5.504078388214111
    3. '(P' → logprob: -17.879077911376953
    4. ' ' → logprob: -19.254077911376953
    5. '```' → logprob: -19.754077911376953
    6. '   ' → logprob: -20.254077911376953
    7. '=P' → logprob: -20.379077911376953
    8. '>P' → logprob: -20.754077911376953
    9. '	P' → logprob: -20.879077911376953
    10. '<P' → logprob: -21.004077911376953

Token 589: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2188100814819336
    2. ' read' → logprob: -2.0938100814819336
    3. 'main' → logprob: -3.4688100814819336
    4. ' def' → logprob: -3.9688100814819336
    5. ' get' → logprob: -5.093810081481934
    6. 'def' → logprob: -5.343810081481934
    7. 'read' → logprob: -5.468810081481934
    8. ' ' → logprob: -6.218810081481934
    9. ' sys' → logprob: -6.843810081481934
    10. 'if' → logprob: -7.468810081481934

Token 592: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.4656579120783135e-05
    2. '():
' → logprob: -10.250044822692871
    3. ' ():' → logprob: -11.625044822692871
    4. '()' → logprob: -15.250044822692871
    5. '():
' → logprob: -16.875043869018555
    6. '(' → logprob: -18.500043869018555
    7. '():

' → logprob: -18.625043869018555
    8. '().' → logprob: -19.625043869018555
    9. '(":' → logprob: -19.750043869018555
    10. ':' → logprob: -20.125043869018555

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.689031183719635
    2. ' N' → logprob: -0.814031183719635
    3. 'N' → logprob: -2.9390311241149902
    4. ' n' → logprob: -6.93903112411499
    5. 'n' → logprob: -7.31403112411499
    6. ' ' → logprob: -9.064031600952148
    7. '```' → logprob: -9.314031600952148
    8. '	N' → logprob: -9.564031600952148
    9. '  ' → logprob: -11.189031600952148
    10. '	n' → logprob: -12.564031600952148

Token 594: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002587550552561879
    2. '   ' → logprob: -6.25258731842041
    3. ' N' → logprob: -7.37758731842041
    4. 'n' → logprob: -10.50258731842041
    5. ' ' → logprob: -13.12758731842041
    6. 'import' → logprob: -13.37758731842041
    7. '	N' → logprob: -14.62758731842041
    8. '
' → logprob: -14.75258731842041
    9. '  ' → logprob: -14.75258731842041
    10. '#' → logprob: -14.87758731842041

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020056030189152807
    2. ',P' → logprob: -8.875200271606445
    3. '=' → logprob: -10.250200271606445
    4. ' ,' → logprob: -11.250200271606445
    5. ' =' → logprob: -11.500200271606445
    6. ',
' → logprob: -15.000200271606445
    7. ',K' → logprob: -15.125200271606445
    8. ',N' → logprob: -15.250200271606445
    9. ' P' → logprob: -15.250200271606445
    10. ')' → logprob: -16.000200271606445

Token 596: ' X' (ID: 2127)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002494683489203453
    2. ' P' → logprob: -6.002494812011719
    3. ' ' → logprob: -12.002494812011719
    4. 'K' → logprob: -12.752494812011719
    5. 'Q' → logprob: -12.752494812011719
    6. 'M' → logprob: -12.752494812011719
    7. '<|end|>' → logprob: -13.502494812011719
    8. '  ' → logprob: -13.627494812011719
    9. '   ' → logprob: -14.127494812011719
    10. 'p' → logprob: -15.127494812011719

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5241366028785706
    2. '=' → logprob: -0.8991366028785706
    3. ',' → logprob: -6.899136543273926
    4. '=sys' → logprob: -13.274136543273926
    5. ')' → logprob: -14.274136543273926
    6. '=input' → logprob: -14.649136543273926
    7. ')=' → logprob: -15.524136543273926
    8. '=int' → logprob: -15.899136543273926
    9. ' =
' → logprob: -16.024137496948242
    10. ' =
' → logprob: -16.274137496948242

Token 598: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.008650264702737331
    2. 'get' → logprob: -4.758650302886963
    3. ' read' → logprob: -10.883649826049805
    4. ' map' → logprob: -11.008649826049805
    5. 'read' → logprob: -15.508649826049805
    6. 'map' → logprob: -16.008649826049805
    7. '	get' → logprob: -17.133649826049805
    8. '=get' → logprob: -17.633649826049805
    9. '(get' → logprob: -19.258649826049805
    10. ' ' → logprob: -19.758649826049805

Token 599: '_first' (ID: 29347)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.49506470561027527
    2. '_first' → logprob: -1.7450647354125977
    3. '(' → logprob: -2.1200647354125977
    4. '1' → logprob: -3.2450647354125977
    5. '()' → logprob: -3.4950647354125977
    6. '(N' → logprob: -3.8700647354125977
    7. 'int' → logprob: -5.870064735412598
    8. ' first' → logprob: -7.120064735412598
    9. 'first' → logprob: -7.870064735412598
    10. 'First' → logprob: -8.370064735412598

Token 600: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00118368084076792
    2. '()' → logprob: -7.25118350982666
    3. '_token' → logprob: -8.25118350982666
    4. 'line' → logprob: -8.62618350982666
    5. '_' → logprob: -12.12618350982666
    6. ' line' → logprob: -12.12618350982666
    7. 'Line' → logprob: -12.37618350982666
    8. '(' → logprob: -12.75118350982666
    9. '_value' → logprob: -13.37618350982666
    10. ')' → logprob: -13.62618350982666

Token 601: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008485790458507836
    2. '()
' → logprob: -7.125848770141602
    3. '();' → logprob: -11.250848770141602
    4. ')' → logprob: -11.500848770141602
    5. '<|end|>' → logprob: -12.250848770141602
    6. '())' → logprob: -12.750848770141602
    7. '   ' → logprob: -13.000848770141602
    8. '(' → logprob: -13.250848770141602
    9. '()\' → logprob: -13.250848770141602
    10. ',' → logprob: -13.875848770141602

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33437731862068176
    2. '
' → logprob: -1.3343772888183594
    3. '    
' → logprob: -4.959377288818359
    4. '```' → logprob: -5.209377288818359
    5. 'P' → logprob: -5.334377288818359
    6. '<|end|>' → logprob: -6.084377288818359
    7. '  
' → logprob: -8.20937728881836
    8. 'A' → logprob: -8.70937728881836
    9. ' P' → logprob: -8.83437728881836
    10. '	P' → logprob: -9.08437728881836

Token 603: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.00030936390976421535
    2. 'A' → logprob: -8.250308990478516
    3. '   ' → logprob: -10.625308990478516
    4. ' P' → logprob: -11.375308990478516
    5. '```' → logprob: -11.375308990478516
    6. 'import' → logprob: -14.500308990478516
    7. '
' → logprob: -16.375308990478516
    8. 'from' → logprob: -16.625308990478516
    9. '    
' → logprob: -17.375308990478516
    10. ' ' → logprob: -17.375308990478516

Token 604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519579827785492
    2. '=' → logprob: -1.5019580125808716
    3. ',' → logprob: -10.501957893371582
    4. ' =
' → logprob: -14.751957893371582
    5. '   ' → logprob: -15.001957893371582
    6. ' ' → logprob: -15.876957893371582
    7. '.' → logprob: -16.1269588470459
    8. ')' → logprob: -16.2519588470459
    9. '=
' → logprob: -16.2519588470459
    10. '=int' → logprob: -16.2519588470459

Token 605: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004435697570443153
    2. '100' → logprob: -5.5044355392456055
    3. '998' → logprob: -8.129435539245605
    4. 'int' → logprob: -9.754435539245605
    5. ' ' → logprob: -12.629435539245605
    6. '1' → logprob: -14.379435539245605
    7. '(' → logprob: -15.379435539245605
    8. 'pow' → logprob: -16.629436492919922
    9. '```' → logprob: -17.379436492919922
    10. '999' → logprob: -17.504436492919922

Token 606: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004761549644172192
    2. '100' → logprob: -5.504761695861816
    3. '998' → logprob: -7.379761695861816
    4. 'int' → logprob: -9.754761695861816
    5. '(' → logprob: -14.504761695861816
    6. '1' → logprob: -14.629761695861816
    7. '999' → logprob: -16.6297607421875
    8. 'pow' → logprob: -17.1297607421875
    9. '[int' → logprob: -17.7547607421875
    10. '123' → logprob: -17.7547607421875

Token 607: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.941850526549388e-06
    2. '247' → logprob: -12.500007629394531
    3. '243' → logprob: -13.000007629394531
    4. '245' → logprob: -13.750007629394531
    5. '```' → logprob: -15.250007629394531
    6. '457' → logprob: -16.12500762939453
    7. '744' → logprob: -16.62500762939453
    8. '444' → logprob: -16.87500762939453
    9. '242' → logprob: -17.37500762939453
    10. '447' → logprob: -17.37500762939453

Token 608: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0007099286303855479
    2. '853' → logprob: -7.2507100105285645
    3. '3' → logprob: -18.000709533691406
    4. '753' → logprob: -18.375709533691406
    5. '```' → logprob: -19.625709533691406
    6. '857' → logprob: -20.125709533691406
    7. '553' → logprob: -20.250709533691406
    8. '53' → logprob: -20.250709533691406
    9. '7' → logprob: -20.625709533691406
    10. '357' → logprob: -20.625709533691406

Token 609: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6926782727241516
    2. '   ' → logprob: -1.0676782131195068
    3. '<|end|>' → logprob: -2.317678213119507
    4. 'A' → logprob: -3.817678213119507
    5. '    
' → logprob: -3.817678213119507
    6. '```' → logprob: -5.067678451538086
    7. '  
' → logprob: -6.442678451538086
    8. '	
' → logprob: -6.817678451538086
    9. ' A' → logprob: -6.942678451538086
    10. '<|end|>' → logprob: -7.067678451538086

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031851738691329956
    2. 'A' → logprob: -3.6568517684936523
    3. '
' → logprob: -6.031851768493652
    4. ' A' → logprob: -6.906851768493652
    5. '    
' → logprob: -7.031851768493652
    6. '```' → logprob: -7.156851768493652
    7. '	A' → logprob: -8.156851768493652
    8. '<|end|>' → logprob: -9.031851768493652
    9. '  
' → logprob: -10.531851768493652
    10. '  ' → logprob: -11.781851768493652

Token 611: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -3.190178904333152e-05
    2. '   ' → logprob: -10.500031471252441
    3. ' A' → logprob: -12.500031471252441
    4. '```' → logprob: -14.875031471252441
    5. '#' → logprob: -16.375032424926758
    6. ' ' → logprob: -17.000032424926758
    7. '`' → logprob: -17.500032424926758
    8. '  ' → logprob: -17.875032424926758
    9. '	A' → logprob: -17.875032424926758
    10. '[' → logprob: -18.125032424926758

Token 612: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '=A' → logprob: -15.475207328796387
    4. ',' → logprob: -16.85020637512207
    5. ' ' → logprob: -17.35020637512207
    6. '<|end|>' → logprob: -17.47520637512207
    7. '[' → logprob: -17.60020637512207
    8. '＝' → logprob: -17.72520637512207
    9. '=create' → logprob: -17.85020637512207
    10. '```' → logprob: -17.85020637512207

Token 613: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0297523383051157
    2. ' init' → logprob: -3.529752254486084
    3. '_init' → logprob: -13.779752731323242
    4. '(init' → logprob: -14.279752731323242
    5. '	init' → logprob: -16.529752731323242
    6. '.init' → logprob: -16.779752731323242
    7. 'initialize' → logprob: -17.279752731323242
    8. '/init' → logprob: -17.529752731323242
    9. ':init' → logprob: -17.529752731323242
    10. 'inite' → logprob: -17.654752731323242

Token 614: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -3.128163257315464e-07
    2. 'per' → logprob: -15.375
    3. '_' → logprob: -17.75
    4. '_perm' → logprob: -18.0
    5. 'Permutation' → logprob: -19.25
    6. '(per' → logprob: -19.625
    7. '\' → logprob: -19.75
    8. '_p' → logprob: -20.0
    9. '_PER' → logprob: -20.5
    10. '```' → logprob: -20.75

Token 615: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -1.9862216504407115e-05
    2. 'utation' → logprob: -11.375020027160645
    3. 'm' → logprob: -11.875020027160645
    4. 'mut' → logprob: -14.000020027160645
    5. 'Mutation' → logprob: -14.750020027160645
    6. ' mutation' → logprob: -17.000019073486328
    7. 'putation' → logprob: -17.125019073486328
    8. 'rm' → logprob: -17.625019073486328
    9. '```' → logprob: -17.625019073486328
    10. 'mission' → logprob: -17.625019073486328

Token 616: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.320199877838604e-07
    2. '_counts' → logprob: -15.625
    3. 'count' → logprob: -16.125
    4. '```' → logprob: -17.375
    5. '_' → logprob: -18.0
    6. '_per' → logprob: -18.5
    7. '_co' → logprob: -18.75
    8. '_c' → logprob: -18.75
    9. '`' → logprob: -19.0
    10. '_array' → logprob: -19.25

Token 617: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -4.704065213445574e-05
    2. '_count' → logprob: -10.000046730041504
    3. '_arrays' → logprob: -14.000046730041504
    4. 'array' → logprob: -14.375046730041504
    5. 's' → logprob: -16.00004768371582
    6. 'Array' → logprob: -17.25004768371582
    7. '_arr' → logprob: -18.12504768371582
    8. '_counts' → logprob: -19.62504768371582
    9. '_ARRAY' → logprob: -19.75004768371582
    10. '_list' → logprob: -19.87504768371582

Token 618: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.750075340270996
    3. ' (' → logprob: -11.250075340270996
    4. '<|end|>' → logprob: -13.000075340270996
    5. 'N' → logprob: -14.500075340270996
    6. '```' → logprob: -15.125075340270996
    7. '(
' → logprob: -16.00007438659668
    8. '(n' → logprob: -16.12507438659668
    9. ')(' → logprob: -16.25007438659668
    10. ',N' → logprob: -16.62507438659668

Token 619: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038169484469108284
    2. ')
' → logprob: -7.8753814697265625
    3. ' )' → logprob: -14.375381469726562
    4. '   ' → logprob: -14.875381469726562
    5. ')
' → logprob: -15.375381469726562
    6. '),' → logprob: -16.125381469726562
    7. '<|end|>' → logprob: -16.125381469726562
    8. ')

' → logprob: -16.625381469726562
    9. ')#' → logprob: -17.125381469726562
    10. ');' → logprob: -17.875381469726562

Token 620: '   ' (ID: 271)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.9544341564178467
    2. '   ' → logprob: -1.0794341564178467
    3. 'set' → logprob: -1.3294341564178467
    4. '<|end|>' → logprob: -5.454434394836426
    5. ')set' → logprob: -6.079434394836426
    6. '	set' → logprob: -6.329434394836426
    7. '```' → logprob: -6.829434394836426
    8. '(set' → logprob: -8.204434394836426
    9. '#set' → logprob: -8.454434394836426
    10. '
' → logprob: -8.829434394836426

Token 621: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.07894090563058853
    2. ' set' → logprob: -2.5789408683776855
    3. '   ' → logprob: -10.203941345214844
    4. ')set' → logprob: -11.578941345214844
    5. '```' → logprob: -13.453941345214844
    6. 'A' → logprob: -14.078941345214844
    7. '#set' → logprob: -14.703941345214844
    8. '_set' → logprob: -14.703941345214844
    9. 'Set' → logprob: -15.078941345214844
    10. '(set' → logprob: -15.078941345214844

Token 622: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -2.816093228830141e-06
    2. 'base' → logprob: -13.00000286102295
    3. 'Base' → logprob: -14.50000286102295
    4. ' base' → logprob: -18.000001907348633
    5. '_BASE' → logprob: -18.250001907348633
    6. '_Base' → logprob: -18.625001907348633
    7. '_bas' → logprob: -19.125001907348633
    8. '_' → logprob: -19.875001907348633
    9. '\' → logprob: -20.000001907348633
    10. 'A' → logprob: -20.125001907348633

Token 623: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -8.537868779967539e-06
    2. 'case' → logprob: -11.875008583068848
    3. 'Case' → logprob: -14.125008583068848
    4. '_code' → logprob: -15.250008583068848
    5. ' case' → logprob: -15.625008583068848
    6. '```' → logprob: -15.750008583068848
    7. '_cases' → logprob: -16.25000762939453
    8. '_' → logprob: -16.25000762939453
    9. '\' → logprob: -17.25000762939453
    10. '_base' → logprob: -17.37500762939453

Token 624: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -16.500015258789062
    4. ' (' → logprob: -19.125015258789062
    5. '\(' → logprob: -19.500015258789062
    6. '(B' → logprob: -20.500015258789062
    7. '(AP' → logprob: -20.875015258789062
    8. '```' → logprob: -21.125015258789062
    9. '(AST' → logprob: -21.125015258789062
    10. 'A' → logprob: -21.250015258789062

Token 625: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013790446100756526
    2. ')
' → logprob: -6.626379013061523
    3. '   ' → logprob: -9.876379013061523
    4. ')

' → logprob: -14.751379013061523
    5. ')
' → logprob: -14.751379013061523
    6. ' )' → logprob: -15.376379013061523
    7. '(A' → logprob: -16.001379013061523
    8. ',' → logprob: -16.126379013061523
    9. ')`' → logprob: -16.126379013061523
    10. ')#' → logprob: -16.501379013061523

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016244331374764442
    2. ' update' → logprob: -4.516244411468506
    3. 'update' → logprob: -5.266244411468506
    4. '```' → logprob: -11.266243934631348
    5. '	update' → logprob: -12.641243934631348
    6. '(update' → logprob: -13.141243934631348
    7. '.update' → logprob: -13.766243934631348
    8. '    
' → logprob: -14.766243934631348
    9. '
' → logprob: -14.891243934631348
    10. '_update' → logprob: -15.891243934631348

Token 627: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.001933277933858335
    2. ' update' → logprob: -6.2519330978393555
    3. '   ' → logprob: -12.376933097839355
    4. '```' → logprob: -15.251933097839355
    5. '	update' → logprob: -16.751934051513672
    6. '.update' → logprob: -17.501934051513672
    7. '
' → logprob: -18.001934051513672
    8. '(update' → logprob: -18.376934051513672
    9. ' ' → logprob: -19.126934051513672
    10. '``' → logprob: -19.876934051513672

Token 628: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: 0.0
    2. '_par' → logprob: -17.25
    3. '_' → logprob: -17.875
    4. '_permission' → logprob: -18.0
    5. '_p' → logprob: -18.625
    6. '_pres' → logprob: -18.625
    7. '_permalink' → logprob: -19.875
    8. 'per' → logprob: -20.0
    9. '_pro' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 629: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -3.2617008400848135e-05
    2. 'utation' → logprob: -10.375032424926758
    3. 'mut' → logprob: -13.875032424926758
    4. 'm' → logprob: -15.500032424926758
    5. 'Mutation' → logprob: -15.875032424926758
    6. 'putation' → logprob: -17.250032424926758
    7. ' mutation' → logprob: -17.250032424926758
    8. '```' → logprob: -18.250032424926758
    9. '_mut' → logprob: -18.500032424926758
    10. '   ' → logprob: -20.000032424926758

Token 630: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -4.961759259458631e-06
    2. '_count' → logprob: -12.250004768371582
    3. 'counts' → logprob: -16.8750057220459
    4. '```' → logprob: -16.8750057220459
    5. 's' → logprob: -18.8750057220459
    6. '_cost' → logprob: -19.3750057220459
    7. '_codes' → logprob: -19.5000057220459
    8. ' counts' → logprob: -20.0000057220459
    9. '
' → logprob: -20.1250057220459
    10. '\' → logprob: -20.2500057220459

Token 631: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -11.875008583068848
    3. ' (' → logprob: -13.750008583068848
    4. '(
' → logprob: -14.875008583068848
    5. '```' → logprob: -16.500009536743164
    6. '(B' → logprob: -17.375009536743164
    7. '(AST' → logprob: -17.625009536743164
    8. '<|end|>' → logprob: -17.875009536743164
    9. '(E' → logprob: -18.125009536743164
    10. ')' → logprob: -18.250009536743164

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ',A' → logprob: -14.250001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. ',
' → logprob: -15.750001907348633
    5. ')' → logprob: -16.875001907348633
    6. ',N' → logprob: -17.000001907348633
    7. '```' → logprob: -18.500001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '
' → logprob: -19.875001907348633
    10. '(' → logprob: -20.250001907348633

Token 633: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001502717612311244
    2. ' N' → logprob: -6.501502513885498
    3. '   ' → logprob: -14.751502990722656
    4. '
' → logprob: -17.126502990722656
    5. ')' → logprob: -17.376502990722656
    6. ' ' → logprob: -17.876502990722656
    7. '	N' → logprob: -18.626502990722656
    8. '    ' → logprob: -19.001502990722656
    9. '  ' → logprob: -19.626502990722656
    10. ',N' → logprob: -19.626502990722656

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5451681974809617e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',P' → logprob: -12.000015258789062
    4. ')' → logprob: -15.625015258789062
    5. '   ' → logprob: -16.125015258789062
    6. ',
' → logprob: -17.500015258789062
    7. '```' → logprob: -17.500015258789062
    8. 'P' → logprob: -18.250015258789062
    9. '‌,' → logprob: -19.000015258789062
    10. '),' → logprob: -19.250015258789062

Token 635: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.700132997939363e-05
    2. ' P' → logprob: -11.000017166137695
    3. ')' → logprob: -15.375017166137695
    4. '   ' → logprob: -17.375017166137695
    5. '
' → logprob: -18.125017166137695
    6. '```' → logprob: -19.750017166137695
    7. ' ' → logprob: -20.125017166137695
    8. ')
' → logprob: -20.125017166137695
    9. '	P' → logprob: -20.875017166137695
    10. '998' → logprob: -22.000017166137695

Token 636: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16762696206569672
    2. ')
' → logprob: -1.917626976966858
    3. '   ' → logprob: -4.917626857757568
    4. '
' → logprob: -10.542627334594727
    5. ')

' → logprob: -11.042627334594727
    6. ',' → logprob: -11.792627334594727
    7. ')
' → logprob: -12.542627334594727
    8. '    
' → logprob: -12.542627334594727
    9. '```' → logprob: -14.292627334594727
    10. '  
' → logprob: -15.292627334594727

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029685230925679207
    2. '
' → logprob: -3.7796852588653564
    3. 'B' → logprob: -5.654685020446777
    4. '```' → logprob: -6.654685020446777
    5. '<|end|>' → logprob: -6.779685020446777
    6. '    
' → logprob: -8.029685020446777
    7. ' B' → logprob: -9.404685020446777
    8. '	B' → logprob: -10.904685020446777
    9. '<|end|>' → logprob: -11.154685020446777
    10. '``' → logprob: -11.154685020446777

Token 638: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -1.8193366486229934e-05
    2. '   ' → logprob: -11.375018119812012
    3. ' B' → logprob: -12.000018119812012
    4. '```' → logprob: -14.500018119812012
    5. '
' → logprob: -17.500019073486328
    6. '``' → logprob: -19.000019073486328
    7. '	B' → logprob: -19.125019073486328
    8. ' ' → logprob: -20.375019073486328
    9. '  ' → logprob: -20.500019073486328
    10. '#' → logprob: -20.625019073486328

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409141063690186
    2. '=' → logprob: -0.9740914106369019
    3. '[' → logprob: -12.099091529846191
    4. ',' → logprob: -12.474091529846191
    5. '<|end|>' → logprob: -13.099091529846191
    6. '=create' → logprob: -14.099091529846191
    7. '```' → logprob: -14.849091529846191
    8. ' ' → logprob: -15.349091529846191
    9. ' =[' → logprob: -15.349091529846191
    10. '  ' → logprob: -15.474091529846191

Token 640: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.3132856786251068
    2. 'init' → logprob: -1.3132857084274292
    3. '[' → logprob: -11.438285827636719
    4. ' [' → logprob: -11.688285827636719
    5. '_init' → logprob: -12.438285827636719
    6. '(init' → logprob: -15.438285827636719
    7. '	init' → logprob: -15.563285827636719
    8. '/init' → logprob: -16.18828582763672
    9. ')init' → logprob: -16.56328582763672
    10. '.init' → logprob: -16.68828582763672

Token 641: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.250000953674316
    3. 'B' → logprob: -14.875000953674316
    4. '(B' → logprob: -15.375000953674316
    5. '	B' → logprob: -17.750001907348633
    6. '_A' → logprob: -18.125001907348633
    7. '`' → logprob: -18.375001907348633
    8. '_' → logprob: -18.625001907348633
    9. '_BT' → logprob: -18.625001907348633
    10. '[' → logprob: -18.750001907348633

Token 642: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011110781691968441
    2. 'N' → logprob: -4.511110782623291
    3. '(' → logprob: -10.011110305786133
    4. '   ' → logprob: -11.886110305786133
    5. '```' → logprob: -12.136110305786133
    6. ' (' → logprob: -12.761110305786133
    7. ' N' → logprob: -14.011110305786133
    8. '	N' → logprob: -14.636110305786133
    9. ',N' → logprob: -14.761110305786133
    10. ')' → logprob: -14.761110305786133

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048610869795084
    2. ')
' → logprob: -3.0486109256744385
    3. ')
' → logprob: -11.29861068725586
    4. '   ' → logprob: -12.04861068725586
    5. ')

' → logprob: -13.29861068725586
    6. '()' → logprob: -13.79861068725586
    7. ' )' → logprob: -13.92361068725586
    8. '())' → logprob: -15.04861068725586
    9. '())
' → logprob: -15.17361068725586
    10. ' ' → logprob: -15.29861068725586

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24226415157318115
    2. ' type' → logprob: -1.6172641515731812
    3. 'type' → logprob: -4.117264270782471
    4. '```' → logprob: -8.492263793945312
    5. '	type' → logprob: -8.992263793945312
    6. '
' → logprob: -10.742263793945312
    7. '(type' → logprob: -10.867263793945312
    8. '_type' → logprob: -11.617263793945312
    9. '<|end|>' → logprob: -11.617263793945312
    10. '[type' → logprob: -11.742263793945312

Token 645: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' (adapté à ' type') → logprob: -0.04158130660653114
    2. ' type' → logprob: -4.041581153869629
    3. '   ' → logprob: -4.291581153869629
    4. 'if' → logprob: -4.791581153869629
    5. ' if' → logprob: -6.916581153869629
    6. '
' → logprob: -9.041581153869629
    7. '```' → logprob: -10.416581153869629
    8. '	type' → logprob: -11.666581153869629
    9. 'for' → logprob: -12.166581153869629
    10. 'def' → logprob: -12.166581153869629

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '3' → logprob: -12.500005722045898
    3. '2' → logprob: -13.500005722045898
    4. ' ' → logprob: -15.250005722045898
    5. '```' → logprob: -16.1250057220459
    6. '(' → logprob: -16.5000057220459
    7. '
' → logprob: -17.7500057220459
    8. '`' → logprob: -18.0000057220459
    9. '۱' → logprob: -18.8750057220459
    10. '１' → logprob: -18.8750057220459

Token 647: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -1.5570885807392187e-05
    2. '_type' → logprob: -12.625015258789062
    3. '_updates' → logprob: -12.625015258789062
    4. '_up' → logprob: -12.750015258789062
    5. '_' → logprob: -12.875015258789062
    6. '_updated' → logprob: -13.750015258789062
    7. '_append' → logprob: -14.625015258789062
    8. '_Update' → logprob: -14.750015258789062
    9. '1' → logprob: -15.125015258789062
    10. '```' → logprob: -15.125015258789062

Token 648: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.000033378601074
    4. '(
' → logprob: -16.25003433227539
    5. '```' → logprob: -16.75003433227539
    6. '(A' → logprob: -18.25003433227539
    7. 'B' → logprob: -19.37503433227539
    8. ' B' → logprob: -19.50003433227539
    9. ',B' → logprob: -19.62503433227539
    10. ')' → logprob: -19.62503433227539

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005496950470842421
    2. ',B' → logprob: -7.750549793243408
    3. ',A' → logprob: -9.25054931640625
    4. ' ,' → logprob: -10.87554931640625
    5. ')' → logprob: -13.50054931640625
    6. ',
' → logprob: -13.62554931640625
    7. '(B' → logprob: -14.37554931640625
    8. '```' → logprob: -15.25054931640625
    9. '   ' → logprob: -15.87554931640625
    10. '(' → logprob: -16.00054931640625

Token 650: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04859236627817154
    2. ' A' → logprob: -3.0485923290252686
    3. '   ' → logprob: -12.923592567443848
    4. ' ' → logprob: -13.298592567443848
    5. ')' → logprob: -15.048592567443848
    6. '	A' → logprob: -15.798592567443848
    7. '  ' → logprob: -16.17359161376953
    8. ',' → logprob: -16.67359161376953
    9. '    ' → logprob: -16.79859161376953
    10. ',A' → logprob: -16.92359161376953

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -10.875021934509277
    3. '   ' → logprob: -14.250021934509277
    4. '```' → logprob: -14.375021934509277
    5. ',N' → logprob: -14.750021934509277
    6. ',X' → logprob: -15.125021934509277
    7. ',
' → logprob: -15.500021934509277
    8. ')' → logprob: -15.875021934509277
    9. ',A' → logprob: -16.25002098083496
    10. '‌,' → logprob: -16.25002098083496

Token 652: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004078401252627373
    2. ' N' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.379077911376953
    4. '```' → logprob: -18.504077911376953
    5. '   ' → logprob: -18.879077911376953
    6. ')' → logprob: -19.379077911376953
    7. '	N' → logprob: -20.004077911376953
    8. ',N' → logprob: -20.004077911376953
    9. ',' → logprob: -20.504077911376953
    10. 'n' → logprob: -21.504077911376953

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011868205183418468
    2. ' ,' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.500118255615234
    4. ',X' → logprob: -12.875118255615234
    5. '```' → logprob: -13.250118255615234
    6. ')' → logprob: -13.750118255615234
    7. 'X' → logprob: -15.750118255615234
    8. ',
' → logprob: -15.875118255615234
    9. '),' → logprob: -16.125118255615234
    10. '`,' → logprob: -16.500118255615234

Token 654: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.018150178715586662
    2. ' X' → logprob: -4.018150329589844
    3. ')' → logprob: -16.518150329589844
    4. '   ' → logprob: -16.768150329589844
    5. '	X' → logprob: -17.268150329589844
    6. ' ' → logprob: -18.768150329589844
    7. '
' → logprob: -19.143150329589844
    8. 'x' → logprob: -19.643150329589844
    9. '(X' → logprob: -20.143150329589844
    10. '>X' → logprob: -20.768150329589844

Token 655: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20200008153915405
    2. ')
' → logprob: -1.7020001411437988
    3. '   ' → logprob: -7.452000141143799
    4. ')

' → logprob: -12.70199966430664
    5. ')
' → logprob: -13.32699966430664
    6. '
' → logprob: -15.32699966430664
    7. '),' → logprob: -15.45199966430664
    8. '<|end|>' → logprob: -15.57699966430664
    9. ' )' → logprob: -15.70199966430664
    10. ' )
' → logprob: -15.82699966430664

Token 656: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1462117433547974
    2. '   ' → logprob: -1.2712117433547974
    3. '
' → logprob: -1.5212117433547974
    4. 'type' → logprob: -2.271211624145508
    5. ' type' → logprob: -3.271211624145508
    6. '    
' → logprob: -3.521211624145508
    7. ' 
' → logprob: -5.396211624145508
    8. '  
' → logprob: -5.521211624145508
    9. '``' → logprob: -6.271211624145508
    10. '   
' → logprob: -6.771211624145508

Token 657: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' (adapté à ' type') → logprob: -0.02632248029112816
    2. ' type' → logprob: -4.026322364807129
    3. '
' → logprob: -5.526322364807129
    4. '   ' → logprob: -5.526322364807129
    5. '```' → logprob: -8.776322364807129
    6. '    
' → logprob: -11.901322364807129
    7. ' 
' → logprob: -12.401322364807129
    8. '	type' → logprob: -13.276322364807129
    9. '(type' → logprob: -13.401322364807129
    10. '

' → logprob: -13.401322364807129

Token 658: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.722539834911004e-05
    2. '3' → logprob: -9.250097274780273
    3. ' ' → logprob: -14.375097274780273
    4. '_' → logprob: -15.125097274780273
    5. '```' → logprob: -16.000097274780273
    6. '
' → logprob: -16.812597274780273
    7. '1' → logprob: -16.937597274780273
    8. '

' → logprob: -17.875097274780273
    9. '۲' → logprob: -18.187597274780273
    10. '=' → logprob: -18.250097274780273

Token 659: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -2.339278580620885e-06
    2. '_updates' → logprob: -14.625001907348633
    3. '_up' → logprob: -14.750001907348633
    4. '_add' → logprob: -14.875001907348633
    5. '```' → logprob: -15.625001907348633
    6. '_updated' → logprob: -15.875001907348633
    7. '_append' → logprob: -15.875001907348633
    8. '_Update' → logprob: -15.875001907348633
    9. '_UPDATE' → logprob: -16.250001907348633
    10. '_' → logprob: -16.250001907348633

Token 660: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -15.00000286102295
    4. ')' → logprob: -19.125003814697266
    5. ' (' → logprob: -19.375003814697266
    6. 'B' → logprob: -19.500003814697266
    7. '```' → logprob: -19.750003814697266
    8. ',B' → logprob: -20.375003814697266
    9. '<|end|>' → logprob: -20.500003814697266
    10. '(A' → logprob: -20.500003814697266

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006685942644253373
    2. '(B' → logprob: -8.0006685256958
    3. ' ,' → logprob: -8.8756685256958
    4. ',B' → logprob: -8.8756685256958
    5. ')' → logprob: -10.1256685256958
    6. '(' → logprob: -12.5006685256958
    7. '```' → logprob: -12.5006685256958
    8. '   ' → logprob: -12.5006685256958
    9. ',
' → logprob: -13.6256685256958
    10. '),' → logprob: -14.7506685256958

Token 662: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016806209459900856
    2. ' N' → logprob: -4.266806125640869
    3. 'B' → logprob: -6.016806125640869
    4. ' B' → logprob: -8.516806602478027
    5. ' ' → logprob: -14.016806602478027
    6. '   ' → logprob: -14.516806602478027
    7. ')' → logprob: -15.141806602478027
    8. '```' → logprob: -16.89180564880371
    9. '	N' → logprob: -17.39180564880371
    10. '  ' → logprob: -17.64180564880371

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.750041007995605
    3. ',X' → logprob: -10.875041007995605
    4. '   ' → logprob: -15.000041007995605
    5. 'X' → logprob: -15.375041007995605
    6. ',B' → logprob: -15.625041007995605
    7. ')' → logprob: -15.875041007995605
    8. ',
' → logprob: -16.750041961669922
    9. '<|end|>' → logprob: -17.000041961669922
    10. '```' → logprob: -17.000041961669922

Token 664: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00671584764495492
    2. ' X' → logprob: -5.006715774536133
    3. '   ' → logprob: -14.756715774536133
    4. ' ' → logprob: -16.756715774536133
    5. ')' → logprob: -17.631715774536133
    6. '	X' → logprob: -18.131715774536133
    7. '  ' → logprob: -19.881715774536133
    8. '
' → logprob: -20.131715774536133
    9. '```' → logprob: -20.256715774536133
    10. '[' → logprob: -20.381715774536133

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04318096861243248
    2. ')
' → logprob: -3.5431809425354004
    3. '   ' → logprob: -4.5431809425354
    4. ',' → logprob: -5.9181809425354
    5. ' )' → logprob: -12.918181419372559
    6. ')
' → logprob: -13.293181419372559
    7. ',
' → logprob: -13.793181419372559
    8. ' ,' → logprob: -14.168181419372559
    9. ')

' → logprob: -14.168181419372559
    10. '),' → logprob: -14.418181419372559

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03401309996843338
    2. 'type' → logprob: -4.034013271331787
    3. '```' → logprob: -4.284013271331787
    4. ' type' → logprob: -6.284013271331787
    5. '``' → logprob: -10.284012794494629
    6. '
' → logprob: -10.659012794494629
    7. '	type' → logprob: -11.409012794494629
    8. '    
' → logprob: -11.534012794494629
    9. '(type' → logprob: -12.409012794494629
    10. '[type' → logprob: -14.284012794494629

Token 667: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' (adapté à ' type') → logprob: -1.7432603272027336e-06
    2. ' type' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '```' → logprob: -16.000001907348633
    5. '(type' → logprob: -19.500001907348633
    6. '
' → logprob: -20.000001907348633
    7. '	type' → logprob: -21.750001907348633
    8. '``' → logprob: -22.000001907348633
    9. '[type' → logprob: -22.000001907348633
    10. '"type' → logprob: -22.375001907348633

Token 668: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. '```' → logprob: -20.5
    4. '۳' → logprob: -21.0
    5. '３' → logprob: -21.25
    6. 'type' → logprob: -21.5
    7. '_type' → logprob: -22.125
    8. '৩' → logprob: -22.25
    9. '[' → logprob: -22.375
    10. ' ' → logprob: -22.625

Token 669: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -7.822646693966817e-06
    2. '_up' → logprob: -12.375007629394531
    3. '_upgrade' → logprob: -13.625007629394531
    4. '_updates' → logprob: -14.250007629394531
    5. '_add' → logprob: -14.750007629394531
    6. '_updated' → logprob: -15.000007629394531
    7. '_' → logprob: -15.500007629394531
    8. '_write' → logprob: -15.500007629394531
    9. '_type' → logprob: -16.62500762939453
    10. '3' → logprob: -17.00000762939453

Token 670: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(
' → logprob: -17.125001907348633
    4. '```' → logprob: -19.000001907348633
    5. '(A' → logprob: -19.375001907348633
    6. 'B' → logprob: -20.250001907348633
    7. ')' → logprob: -21.125001907348633
    8. ' (' → logprob: -21.250001907348633
    9. '\(' → logprob: -22.000001907348633
    10. '(`' → logprob: -22.125001907348633

Token 671: ',' (ID: 11)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0009089602972380817
    2. ',' → logprob: -7.250908851623535
    3. ')' → logprob: -8.625908851623535
    4. ',B' → logprob: -11.125908851623535
    5. '(' → logprob: -13.375908851623535
    6. ' (' → logprob: -13.875908851623535
    7. '   ' → logprob: -14.375908851623535
    8. '```' → logprob: -14.500908851623535
    9. ')(' → logprob: -15.000908851623535
    10. 'B' → logprob: -15.375908851623535

Token 672: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006715370807796717
    2. ' B' → logprob: -5.006715297698975
    3. ')' → logprob: -17.381715774536133
    4. '	B' → logprob: -17.881715774536133
    5. '(B' → logprob: -17.881715774536133
    6. '>B' → logprob: -19.506715774536133
    7. '<|end|>' → logprob: -19.506715774536133
    8. '   ' → logprob: -20.131715774536133
    9. '_B' → logprob: -20.131715774536133
    10. ',' → logprob: -20.131715774536133

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4272752852994017e-05
    2. ',B' → logprob: -11.00002384185791
    3. ' ,' → logprob: -12.12502384185791
    4. '   ' → logprob: -13.75002384185791
    5. '```' → logprob: -14.75002384185791
    6. ')' → logprob: -14.75002384185791
    7. '(B' → logprob: -16.000024795532227
    8. ',
' → logprob: -16.250024795532227
    9. '<|end|>' → logprob: -16.750024795532227
    10. 'B' → logprob: -17.500024795532227

Token 674: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00150390958879143
    2. ' N' → logprob: -6.501503944396973
    3. 'B' → logprob: -13.376503944396973
    4. ',' → logprob: -17.251502990722656
    5. ' ' → logprob: -17.751502990722656
    6. '   ' → logprob: -18.126502990722656
    7. 'X' → logprob: -18.626502990722656
    8. ')' → logprob: -19.001502990722656
    9. ',N' → logprob: -19.626502990722656
    10. ' B' → logprob: -19.751502990722656

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023011912708170712
    2. ' ,' → logprob: -8.500229835510254
    3. ',X' → logprob: -10.625229835510254
    4. '   ' → logprob: -13.250229835510254
    5. '```' → logprob: -14.875229835510254
    6. 'X' → logprob: -15.625229835510254
    7. ',
' → logprob: -16.87523078918457
    8. ')' → logprob: -17.00023078918457
    9. ' X' → logprob: -18.25023078918457
    10. '(' → logprob: -18.62523078918457

Token 676: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.001170225441455841
    2. ' X' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.501171112060547
    4. ' ' → logprob: -19.501171112060547
    5. '	X' → logprob: -19.626171112060547
    6. ')' → logprob: -19.876171112060547
    7. '>X' → logprob: -21.376171112060547
    8. '```' → logprob: -21.876171112060547
    9. ',X' → logprob: -22.001171112060547
    10. '
' → logprob: -22.251171112060547

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000111768240458332
    2. ',P' → logprob: -9.50011157989502
    3. ' ,' → logprob: -10.25011157989502
    4. 'P' → logprob: -14.00011157989502
    5. '   ' → logprob: -14.50011157989502
    6. ',
' → logprob: -15.87511157989502
    7. ')' → logprob: -16.750112533569336
    8. ',p' → logprob: -17.375112533569336
    9. '```' → logprob: -17.625112533569336
    10. ' ' → logprob: -19.500112533569336

Token 678: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.107425062713446e-06
    2. ' P' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. ')' → logprob: -17.87500762939453
    5. '	P' → logprob: -19.37500762939453
    6. '
' → logprob: -20.25000762939453
    7. '>P' → logprob: -20.75000762939453
    8. '```' → logprob: -21.25000762939453
    9. '=P' → logprob: -21.25000762939453
    10. ')
' → logprob: -21.50000762939453

Token 679: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007438970264047384
    2. '   ' → logprob: -5.132439136505127
    3. ')
' → logprob: -6.507439136505127
    4. '<|end|>' → logprob: -11.382438659667969
    5. ' )' → logprob: -13.757438659667969
    6. '```' → logprob: -13.757438659667969
    7. ',' → logprob: -13.882438659667969
    8. ')

' → logprob: -14.632438659667969
    9. ')
' → logprob: -15.007438659667969
    10. '
' → logprob: -15.257438659667969

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005788889247924089
    2. 'print' → logprob: -7.500578880310059
    3. '```' → logprob: -10.750578880310059
    4. '
' → logprob: -13.500578880310059
    5. 'ans' → logprob: -13.875578880310059
    6. '    
' → logprob: -14.000578880310059
    7. 'answer' → logprob: -14.250578880310059
    8. ' print' → logprob: -15.000578880310059
    9. '``' → logprob: -15.750578880310059
    10. 'result' → logprob: -16.125579833984375

Token 681: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005114490049891174
    2. 'ans' (adapté à ' ans') → logprob: -8.000511169433594
    3. '   ' → logprob: -9.000511169433594
    4. 'answer' → logprob: -10.750511169433594
    5. '```' → logprob: -10.750511169433594
    6. 'result' → logprob: -12.250511169433594
    7. ' print' → logprob: -12.375511169433594
    8. 'return' → logprob: -14.625511169433594
    9. '``' → logprob: -16.625511169433594
    10. ' ans' → logprob: -17.000511169433594

Token 682: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062024932354688644
    2. '=' → logprob: -2.8120248317718506
    3. '   ' → logprob: -10.31202507019043
    4. '  ' → logprob: -11.56202507019043
    5. ')' → logprob: -12.56202507019043
    6. ',' → logprob: -12.56202507019043
    7. ' ' → logprob: -12.93702507019043
    8. ' +=' → logprob: -14.06202507019043
    9. '    ' → logprob: -14.68702507019043
    10. '```' → logprob: -14.81202507019043

Token 683: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.20141352713108063
    2. ' compute' → logprob: -1.7014135122299194
    3. '   ' → logprob: -16.326414108276367
    4. '.compute' → logprob: -16.326414108276367
    5. '_compute' → logprob: -17.076414108276367
    6. '
' → logprob: -18.201414108276367
    7. '```' → logprob: -19.326414108276367
    8. 'computer' → logprob: -20.076414108276367
    9. 'calculate' → logprob: -21.201414108276367
    10. 'comput' → logprob: -21.201414108276367

Token 684: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.8624639324116288e-06
    2. 'answer' → logprob: -14.000001907348633
    3. '_ans' → logprob: -14.125001907348633
    4. '_' → logprob: -16.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. 'Answer' → logprob: -17.250001907348633
    7. ' _' → logprob: -18.250001907348633
    8. '_answers' → logprob: -18.375001907348633
    9. '
' → logprob: -18.875001907348633
    10. 'ANSWER' → logprob: -19.125001907348633

Token 685: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -9.817902173381299e-05
    2. '(' → logprob: -9.25009822845459
    3. '(
' → logprob: -13.87509822845459
    4. ' (' → logprob: -14.00009822845459
    5. '(A' → logprob: -15.75009822845459
    6. '```' → logprob: -16.625097274780273
    7. '((' → logprob: -17.375097274780273
    8. '(`' → logprob: -17.375097274780273
    9. '\(' → logprob: -18.125097274780273
    10. '(C' → logprob: -18.250097274780273

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.911954500945285e-05
    2. ',A' → logprob: -9.500088691711426
    3. '(A' → logprob: -11.375088691711426
    4. ' ,' → logprob: -13.875088691711426
    5. ',
' → logprob: -14.125088691711426
    6. ')' → logprob: -14.750088691711426
    7. '(' → logprob: -15.125088691711426
    8. '   ' → logprob: -16.250089645385742
    9. 'A' → logprob: -16.250089645385742
    10. '```' → logprob: -16.375089645385742

Token 687: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.505351095460355e-05
    2. ' A' → logprob: -9.500075340270996
    3. '	A' → logprob: -17.25007438659668
    4. '   ' → logprob: -17.37507438659668
    5. ')' → logprob: -18.37507438659668
    6. ',A' → logprob: -18.37507438659668
    7. ' ' → logprob: -18.62507438659668
    8. '```' → logprob: -19.37507438659668
    9. 'P' → logprob: -19.75007438659668
    10. '>A' → logprob: -19.87507438659668

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ',N' → logprob: -10.875029563903809
    3. ' ,' → logprob: -11.500029563903809
    4. ',P' → logprob: -15.000029563903809
    5. ',
' → logprob: -15.875029563903809
    6. ',n' → logprob: -17.000030517578125
    7. '   ' → logprob: -17.125030517578125
    8. '```' → logprob: -17.125030517578125
    9. 'N' → logprob: -18.000030517578125
    10. ')' → logprob: -18.625030517578125

Token 689: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00444246269762516
    2. 'P' → logprob: -5.5044426918029785
    3. '998' → logprob: -8.00444221496582
    4. ' N' → logprob: -10.75444221496582
    5. ')' → logprob: -13.00444221496582
    6. '   ' → logprob: -13.00444221496582
    7. '999' → logprob: -13.75444221496582
    8. ' ' → logprob: -13.87944221496582
    9. '```' → logprob: -14.87944221496582
    10. '
' → logprob: -15.12944221496582

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1093578804284334e-05
    2. ',P' → logprob: -10.500051498413086
    3. ' ,' → logprob: -10.750051498413086
    4. '   ' → logprob: -14.125051498413086
    5. ',
' → logprob: -14.625051498413086
    6. '```' → logprob: -15.000051498413086
    7. ')' → logprob: -15.250051498413086
    8. 'P' → logprob: -16.000051498413086
    9. ',p' → logprob: -17.125051498413086
    10. 'import' → logprob: -17.625051498413086

Token 691: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.339278580620885e-06
    2. ' P' → logprob: -13.000001907348633
    3. ')' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '998' → logprob: -17.875001907348633
    6. '
' → logprob: -19.125001907348633
    7. '```' → logprob: -19.375001907348633
    8. '	P' → logprob: -19.500001907348633
    9. ' ' → logprob: -20.250001907348633
    10. 'p' → logprob: -20.375001907348633

Token 692: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3715653717517853
    2. ')
' → logprob: -1.371565341949463
    3. '   ' → logprob: -2.871565341949463
    4. ')
' → logprob: -11.121565818786621
    5. ' )
' → logprob: -13.371565818786621
    6. '()' → logprob: -13.371565818786621
    7. '
' → logprob: -13.496565818786621
    8. ' )' → logprob: -13.496565818786621
    9. '```' → logprob: -13.871565818786621
    10. 'print' → logprob: -13.996565818786621

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009827394969761372
    2. 'print' → logprob: -4.634827613830566
    3. '```' → logprob: -10.884827613830566
    4. '<|end|>' → logprob: -11.009827613830566
    5. '
' → logprob: -11.509827613830566
    6. ' print' → logprob: -11.759827613830566
    7. '    
' → logprob: -11.759827613830566
    8. 'return' → logprob: -12.009827613830566
    9. '	print' → logprob: -13.384827613830566
    10. 'if' → logprob: -14.259827613830566

Token 694: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -11.000017166137695
    3. ' print' → logprob: -14.625017166137695
    4. '```' → logprob: -15.500017166137695
    5. 'return' → logprob: -16.625017166137695
    6. '	print' → logprob: -19.375017166137695
    7. '#print' → logprob: -20.375017166137695
    8. '
' → logprob: -20.375017166137695
    9. 'pr' → logprob: -20.875017166137695
    10. 'import' → logprob: -21.375017166137695

Token 695: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'ans' → logprob: -15.625000953674316
    4. '()' → logprob: -16.250001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '(answer' → logprob: -17.250001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '	ans' → logprob: -18.625001907348633
    9. '(abs' → logprob: -19.500001907348633
    10. '((' → logprob: -19.500001907348633

Token 696: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. '())' → logprob: -12.375007629394531
    3. '()' → logprob: -12.750007629394531
    4. ')`' → logprob: -15.875007629394531
    5. ' )' → logprob: -17.00000762939453
    6. ')
' → logprob: -17.00000762939453
    7. '))' → logprob: -17.87500762939453
    8. '`)' → logprob: -18.37500762939453
    9. ')}' → logprob: -19.00000762939453
    10. '')' → logprob: -19.12500762939453

Token 697: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007067138212732971
    2. 'main' → logprob: -7.875706672668457
    3. '```' → logprob: -8.750706672668457
    4. ' if' → logprob: -9.375706672668457
    5. '
' → logprob: -10.125706672668457
    6. '<|end|>' → logprob: -10.375706672668457
    7. '#' → logprob: -11.750706672668457
    8. '\n' → logprob: -13.500706672668457
    9. '(main' → logprob: -14.250706672668457
    10. '\' → logprob: -14.750706672668457

Token 698: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 696
Tokens correctement prédits (1ère position, stricte): 301
Tokens correctement prédits (1ère position, avec adaptation): 328
Tokens correctement prédits (top 10): 614
Précision stricte (1ère position): 43.25%
Précision adaptée (1ère position): 47.13%
Précision (top 10): 88.22%
================================================================================
