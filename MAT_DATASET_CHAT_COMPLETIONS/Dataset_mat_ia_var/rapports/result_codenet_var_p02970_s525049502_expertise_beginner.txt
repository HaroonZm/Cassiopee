================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_D = input().split()
N = int(N_D[0])
D = int(N_D[1])

a = 0
while N > 0:
    N = N - (2 * D + 1)
    a = a + 1

print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_D' (ID: 2958)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12596899271011353
    2. '10' → logprob: -2.5009689331054688
    3. '32' → logprob: -3.6259689331054688
    4. '100' → logprob: -6.000968933105469
    5. '64' → logprob: -6.125968933105469
    6. '16' → logprob: -6.500968933105469
    7. '20' → logprob: -7.250968933105469
    8. '1' → logprob: -7.875968933105469
    9. '4' → logprob: -7.875968933105469
    10. '8' → logprob: -8.000968933105469

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01347348652780056
    2. ''' → logprob: -4.7634735107421875
    3. '[' → logprob: -6.6384735107421875
    4. '"' → logprob: -6.7634735107421875
    5. '('' → logprob: -6.7634735107421875
    6. '(
' → logprob: -7.6384735107421875
    7. '_' → logprob: -8.638473510742188
    8. '.' → logprob: -8.888473510742188
    9. '```' → logprob: -9.638473510742188
    10. '`' → logprob: -10.013473510742188

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19426102936267853
    2. '.strip' → logprob: -2.069261074066162
    3. '()' → logprob: -4.444261074066162
    4. '```' → logprob: -4.819261074066162
    5. '\n' → logprob: -5.444261074066162
    6. '().' → logprob: -5.444261074066162
    7. '+' → logprob: -5.694261074066162
    8. '.split' → logprob: -5.819261074066162
    9. '[' → logprob: -6.444261074066162
    10. 'strip' → logprob: -6.444261074066162

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010310231009498239
    2. '()' → logprob: -7.126030921936035
    3. '('' → logprob: -9.751030921936035
    4. '("("' → logprob: -10.001030921936035
    5. '```' → logprob: -10.501030921936035
    6. '(
' → logprob: -10.501030921936035
    7. '(

' → logprob: -10.626030921936035
    8. '`' → logprob: -11.376030921936035
    9. '(`' → logprob: -11.626030921936035
    10. '((' → logprob: -11.751030921936035

Token 7: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33437857031822205
    2. 'N' → logprob: -1.8343786001205444
    3. 'a' → logprob: -2.459378480911255
    4. 'x' → logprob: -4.459378719329834
    5. '[' → logprob: -4.709378719329834
    6. '=' → logprob: -5.709378719329834
    7. '_' → logprob: -5.959378719329834
    8. 'for' → logprob: -5.959378719329834
    9. ' =' → logprob: -6.584378719329834
    10. 'print' → logprob: -6.709378719329834

Token 8: ' =' (ID: 314)
  Prédit: '_D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.36723706126213074
    2. '_' → logprob: -1.2422370910644531
    3. '[' → logprob: -4.117237091064453
    4. '[_' → logprob: -6.617237091064453
    5. '_[' → logprob: -7.742237091064453
    6. 'D' → logprob: -9.242237091064453
    7. '[]' → logprob: -9.492237091064453
    8. '```' → logprob: -9.617237091064453
    9. '<|end|>' → logprob: -9.867237091064453
    10. ' _' → logprob: -9.992237091064453

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12749935686588287
    2. ' int' → logprob: -2.1274993419647217
    3. '[int' → logprob: -8.7524995803833
    4. 'list' → logprob: -8.8774995803833
    5. 'len' → logprob: -9.3774995803833
    6. ' N' → logprob: -10.0024995803833
    7. ' list' → logprob: -10.0024995803833
    8. 'map' → logprob: -10.1274995803833
    9. ' map' → logprob: -11.0024995803833
    10. 'N' → logprob: -11.3774995803833

Token 10: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2525221109390259
    2. '(N' → logprob: -1.5025221109390259
    3. '('' → logprob: -7.502521991729736
    4. '("' → logprob: -11.627522468566895
    5. '(`' → logprob: -11.877522468566895
    6. '(
' → logprob: -12.252522468566895
    7. '(

' → logprob: -12.627522468566895
    8. '()' → logprob: -13.002522468566895
    9. '(n' → logprob: -13.002522468566895
    10. ''' → logprob: -13.002522468566895

Token 11: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.34889498353004456
    2. '[' → logprob: -1.2238949537277222
    3. ')' → logprob: -8.473895072937012
    4. '[_' → logprob: -10.098895072937012
    5. '```' → logprob: -10.098895072937012
    6. '_[' → logprob: -10.723895072937012
    7. 'D' → logprob: -10.848895072937012
    8. '`' → logprob: -10.848895072937012
    9. '   ' → logprob: -11.098895072937012
    10. ')[' → logprob: -11.473895072937012

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -13.500001907348633
    3. ' [' → logprob: -16.250001907348633
    4. '[
' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. '\[' → logprob: -17.875001907348633
    7. '[N' → logprob: -18.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '(' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.625001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. '1' → logprob: -10.750021934509277
    3. ' ' → logprob: -14.375021934509277
    4. ')' → logprob: -17.625022888183594
    5. '`' → logprob: -17.750022888183594
    6. ''' → logprob: -18.000022888183594
    7. '```' → logprob: -18.375022888183594
    8. ']' → logprob: -20.000022888183594
    9. '۰' → logprob: -20.125022888183594
    10. '"' → logprob: -20.187522888183594

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2532983422279358
    2. '])' → logprob: -1.503298282623291
    3. ']' → logprob: -6.753298282623291
    4. ' ])' → logprob: -10.00329875946045
    5. ')]' → logprob: -10.12829875946045
    6. ' )' → logprob: -10.50329875946045
    7. '[' → logprob: -10.75329875946045
    8. ')
' → logprob: -10.87829875946045
    9. ''])' → logprob: -11.00329875946045
    10. ')])' → logprob: -11.50329875946045

Token 15: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00020926215802319348
    2. 'd' → logprob: -8.875208854675293
    3. 'M' → logprob: -10.125208854675293
    4. ' D' → logprob: -11.000208854675293
    5. '```' → logprob: -12.375208854675293
    6. 'N' → logprob: -12.750208854675293
    7. '`' → logprob: -13.250208854675293
    8. '_' → logprob: -13.500208854675293
    9. '_D' → logprob: -14.875208854675293
    10. ')' → logprob: -14.875208854675293

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12306474894285202
    2. ' =' → logprob: -2.2480647563934326
    3. '_' → logprob: -4.9980645179748535
    4. ')' → logprob: -6.2480645179748535
    5. '=int' → logprob: -7.2480645179748535
    6. '_space' → logprob: -8.373064994812012
    7. '.' → logprob: -8.748064994812012
    8. '[' → logprob: -8.998064994812012
    9. '<|end|>' → logprob: -9.748064994812012
    10. 'space' → logprob: -10.123064994812012

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005234002135694027
    2. ' int' → logprob: -5.2552337646484375
    3. '(int' → logprob: -17.130233764648438
    4. '[int' → logprob: -17.130233764648438
    5. '=int' → logprob: -17.380233764648438
    6. 'float' → logprob: -17.380233764648438
    7. ' ' → logprob: -19.005233764648438
    8. '<int' → logprob: -19.130233764648438
    9. '	int' → logprob: -19.880233764648438
    10. ':int' → logprob: -20.130233764648438

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2610642910003662
    2. '(N' → logprob: -1.5110642910003662
    3. '(D' → logprob: -4.761064529418945
    4. ''' → logprob: -9.261064529418945
    5. ' (' → logprob: -9.261064529418945
    6. '()' → logprob: -9.511064529418945
    7. '('' → logprob: -9.636064529418945
    8. '`' → logprob: -10.011064529418945
    9. '```' → logprob: -10.136064529418945
    10. '"' → logprob: -10.761064529418945

Token 19: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.00011522514978423715
    2. '[' → logprob: -9.500115394592285
    3. '_' → logprob: -11.125115394592285
    4. ')' → logprob: -11.625115394592285
    5. '])' → logprob: -12.000115394592285
    6. ' ' → logprob: -13.250115394592285
    7. '[_' → logprob: -13.750115394592285
    8. '```' → logprob: -13.875115394592285
    9. '_)' → logprob: -14.125115394592285
    10. '   ' → logprob: -14.250115394592285

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010092071170220152
    2. '_D' → logprob: -9.500101089477539
    3. ')' → logprob: -11.250101089477539
    4. '```' → logprob: -12.125101089477539
    5. '])' → logprob: -13.125101089477539
    6. ')[' → logprob: -13.375101089477539
    7. '   ' → logprob: -13.875101089477539
    8. ' [' → logprob: -14.125101089477539
    9. '[
' → logprob: -14.750101089477539
    10. ']' → logprob: -15.500101089477539

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. '0' → logprob: -10.375051498413086
    3. ' ' → logprob: -11.500051498413086
    4. '])' → logprob: -11.625051498413086
    5. ']' → logprob: -15.500051498413086
    6. '```' → logprob: -15.500051498413086
    7. '-' → logprob: -15.750051498413086
    8. '2' → logprob: -16.125051498413086
    9. '   ' → logprob: -16.625051498413086
    10. ')' → logprob: -16.625051498413086

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '）' → logprob: -14.500001907348633
    3. '))' → logprob: -14.625001907348633
    4. ']' → logprob: -15.125001907348633
    5. '])' → logprob: -15.125001907348633
    6. '`)' → logprob: -15.625001907348633
    7. '')' → logprob: -16.250001907348633
    8. ' )' → logprob: -16.875001907348633
    9. ')])' → logprob: -17.000001907348633
    10. ')]' → logprob: -17.125001907348633

Token 23: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2187622785568237
    2. 'i' → logprob: -1.4687622785568237
    3. 'n' → logprob: -2.5937623977661133
    4. 'r' → logprob: -2.7187623977661133
    5. 'if' → logprob: -2.8437623977661133
    6. 's' → logprob: -3.0937623977661133
    7. 'for' → logprob: -3.0937623977661133
    8. 'x' → logprob: -3.3437623977661133
    9. ' ' → logprob: -4.218762397766113
    10. '`' → logprob: -4.343762397766113

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.670556902885437
    2. '[' → logprob: -1.545556902885437
    3. 'r' → logprob: -2.0455570220947266
    4. '=' → logprob: -2.4205570220947266
    5. ' ' → logprob: -3.9205570220947266
    6. 'd' → logprob: -4.295557022094727
    7. '_' → logprob: -4.420557022094727
    8. 'rr' → logprob: -6.545557022094727
    9. 'p' → logprob: -6.795557022094727
    10. '.' → logprob: -6.795557022094727

Token 25: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06401120871305466
    2. 'list' → logprob: -3.1890110969543457
    3. '[' → logprob: -4.564011096954346
    4. '[int' → logprob: -5.439011096954346
    5. ' []' → logprob: -6.064011096954346
    6. '[input' → logprob: -7.564011096954346
    7. '[N' → logprob: -7.689011096954346
    8. 'input' → logprob: -7.814011096954346
    9. '[list' → logprob: -8.064011573791504
    10. '[a' → logprob: -8.064011573791504

Token 26: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5755687355995178
    2. 'list' → logprob: -1.075568675994873
    3. '[int' → logprob: -2.700568675994873
    4. '[' → logprob: -4.950568675994873
    5. '[N' → logprob: -5.325568675994873
    6. 'input' → logprob: -5.450568675994873
    7. 'int' → logprob: -5.450568675994873
    8. '[input' → logprob: -5.950568675994873
    9. '[list' → logprob: -6.075568675994873
    10. '[a' → logprob: -6.825568675994873

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.52610182762146
    2. 'while' → logprob: -1.90110182762146
    3. ' ' → logprob: -2.15110182762146
    4. 'w' → logprob: -3.15110182762146
    5. 'b' → logprob: -3.27610182762146
    6. '+' → logprob: -4.651102066040039
    7. ' for' → logprob: -4.651102066040039
    8. '=' → logprob: -4.776102066040039
    9. 'i' → logprob: -4.901102066040039
    10. '' → logprob: -5.151102066040039

Token 29: ' N' (ID: 478)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.043519068509340286
    2. 'a' → logprob: -3.2935190200805664
    3. ' N' → logprob: -5.418519020080566
    4. ' ' → logprob: -7.293519020080566
    5. 'N' → logprob: -8.418519020080566
    6. ' True' → logprob: -9.668519020080566
    7. ' D' → logprob: -10.418519020080566
    8. '_a' → logprob: -11.668519020080566
    9. '	a' → logprob: -11.918519020080566
    10. ' not' → logprob: -12.293519020080566

Token 30: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1273336410522461
    2. '>' → logprob: -2.127333641052246
    3. '%' → logprob: -8.752333641052246
    4. ' >=' → logprob: -9.127333641052246
    5. ' %' → logprob: -9.752333641052246
    6. ' !=' → logprob: -10.502333641052246
    7. '>=' → logprob: -11.377333641052246
    8. ' <' → logprob: -11.502333641052246
    9. ' <=' → logprob: -12.002333641052246
    10. ' ' → logprob: -12.002333641052246

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20434872806072235
    2. ' ' → logprob: -1.7043486833572388
    3. 'D' → logprob: -6.829348564147949
    4. '1' → logprob: -6.954348564147949
    5. '=' → logprob: -7.954348564147949
    6. 'a' → logprob: -8.07934856414795
    7. ' D' → logprob: -9.82934856414795
    8. ' a' → logprob: -10.07934856414795
    9. '>' → logprob: -10.07934856414795
    10. '10' → logprob: -10.70434856414795

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02034870535135269
    2. 'D' → logprob: -4.77034854888916
    3. '9' → logprob: -4.77034854888916
    4. '1' → logprob: -5.89534854888916
    5. '10' → logprob: -8.64534854888916
    6. '999' → logprob: -9.02034854888916
    7. ' ' → logprob: -10.14534854888916
    8. '=' → logprob: -10.77034854888916
    9. '5' → logprob: -10.89534854888916
    10. 'a' → logprob: -11.14534854888916

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022638519294559956
    2. ' :' → logprob: -6.127264022827148
    3. ',' → logprob: -10.502264022827148
    4. 'a' → logprob: -11.377264022827148
    5. ' and' → logprob: -11.502264022827148
    6. ':
' → logprob: -11.877264022827148
    7. '   ' → logprob: -12.627264022827148
    8. ' ' → logprob: -12.752264022827148
    9. '):' → logprob: -12.752264022827148
    10. ' ,' → logprob: -13.127264022827148

Token 34: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3700556755065918
    2. 'a' → logprob: -1.6200556755065918
    3. '<|end|>' → logprob: -3.245055675506592
    4. '   ' → logprob: -3.870055675506592
    5. ' a' → logprob: -4.620055675506592
    6. 'N' → logprob: -4.745055675506592
    7. ' N' → logprob: -4.870055675506592
    8. '    ' → logprob: -5.245055675506592
    9. ' 
' → logprob: -5.620055675506592
    10. 'n' → logprob: -6.245055675506592

Token 35: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4882848858833313
    2. 'N' (adapté à ' N') → logprob: -1.4882848262786865
    3. ' ' → logprob: -2.8632848262786865
    4. ' a' → logprob: -3.7382848262786865
    5. ' N' → logprob: -3.7382848262786865
    6. '   ' → logprob: -3.8632848262786865
    7. ' if' → logprob: -4.863285064697266
    8. 'if' → logprob: -5.238285064697266
    9. '_' → logprob: -5.238285064697266
    10. 'n' → logprob: -6.113285064697266

Token 36: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.30532386898994446
    2. '-=' → logprob: -1.680323839187622
    3. ' //' → logprob: -3.680323839187622
    4. '=' → logprob: -4.305324077606201
    5. '//=' → logprob: -4.305324077606201
    6. ' =' → logprob: -4.555324077606201
    7. '>' → logprob: -5.305324077606201
    8. '-' → logprob: -5.555324077606201
    9. ' >>=' → logprob: -6.555324077606201
    10. ' ' → logprob: -6.930324077606201

Token 37: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2016243189573288
    2. ' N' → logprob: -1.7016242742538452
    3. ' ' → logprob: -9.201623916625977
    4. ' (' → logprob: -9.951623916625977
    5. 'int' → logprob: -10.326623916625977
    6. '(' → logprob: -11.701623916625977
    7. 'D' → logprob: -12.076623916625977
    8. ' int' → logprob: -12.576623916625977
    9. '(N' → logprob: -13.201623916625977
    10. 'n' → logprob: -13.201623916625977

Token 38: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.21936431527137756
    2. '//' → logprob: -1.7193642854690552
    3. '-' → logprob: -4.094364166259766
    4. ' -' → logprob: -7.844364166259766
    5. '>>' → logprob: -8.344364166259766
    6. ' ' → logprob: -8.719364166259766
    7. '%' → logprob: -9.344364166259766
    8. '```' → logprob: -10.344364166259766
    9. '.' → logprob: -10.469364166259766
    10. ' >>' → logprob: -10.594364166259766

Token 39: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1852254867553711
    2. 'D' → logprob: -1.810225486755371
    3. '10' → logprob: -6.060225486755371
    4. '2' → logprob: -6.685225486755371
    5. ' D' → logprob: -7.060225486755371
    6. ' ' → logprob: -7.185225486755371
    7. '5' → logprob: -9.685225486755371
    8. '   ' → logprob: -10.560225486755371
    9. 'a' → logprob: -10.810225486755371
    10. 'd' → logprob: -11.060225486755371

Token 40: '2' (ID: 17)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.04549075663089752
    2. '10' → logprob: -3.4204907417297363
    3. '1' → logprob: -5.045490741729736
    4. '2' → logprob: -5.670490741729736
    5. '5' → logprob: -7.670490741729736
    6. '50' → logprob: -7.670490741729736
    7. '(' → logprob: -8.545491218566895
    8. ' D' → logprob: -8.670491218566895
    9. '6' → logprob: -9.545491218566895
    10. '(D' → logprob: -9.545491218566895

Token 41: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08748527616262436
    2. '*' → logprob: -2.7124853134155273
    3. ' **' → logprob: -4.087485313415527
    4. ' *' → logprob: -7.712485313415527
    5. '*a' → logprob: -9.962485313415527
    6. ')**' → logprob: -10.587485313415527
    7. ')' → logprob: -10.587485313415527
    8. ' ' → logprob: -11.087485313415527
    9. '+' → logprob: -11.212485313415527
    10. '**)' → logprob: -11.587485313415527

Token 42: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.20905016362667084
    2. 'a' → logprob: -1.834050178527832
    3. ' D' → logprob: -3.709050178527832
    4. ' a' → logprob: -5.584050178527832
    5. '10' → logprob: -8.459050178527832
    6. ' ' → logprob: -8.959050178527832
    7. '**' → logprob: -9.709050178527832
    8. '*' → logprob: -9.709050178527832
    9. ')' → logprob: -11.084050178527832
    10. '2' → logprob: -11.209050178527832

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19427213072776794
    2. ')' → logprob: -2.319272041320801
    3. ' +' → logprob: -2.569272041320801
    4. ' )' → logprob: -7.319272041320801
    5. '+a' → logprob: -7.319272041320801
    6. '+)' → logprob: -9.3192720413208
    7. '**' → logprob: -9.8192720413208
    8. '-' → logprob: -9.8192720413208
    9. ')**' → logprob: -10.4442720413208
    10. 'a' → logprob: -10.9442720413208

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03839603066444397
    2. ' ' → logprob: -3.288396120071411
    3. 'a' → logprob: -8.788395881652832
    4. ')' → logprob: -9.663395881652832
    5. '2' → logprob: -9.913395881652832
    6. ' a' → logprob: -10.788395881652832
    7. '3' → logprob: -10.788395881652832
    8. '+' → logprob: -11.413395881652832
    9. '   ' → logprob: -11.663395881652832
    10. ' ' → logprob: -12.350895881652832

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012932125246152282
    2. ' ' → logprob: -7.376293182373047
    3. 'a' → logprob: -7.501293182373047
    4. ')' → logprob: -10.126293182373047
    5. '3' → logprob: -10.626293182373047
    6. '2' → logprob: -10.751293182373047
    7. ' a' → logprob: -12.126293182373047
    8. '+' → logprob: -12.251293182373047
    9. '   ' → logprob: -12.751293182373047
    10. '-' → logprob: -12.938793182373047

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002346488763578236
    2. ')
' → logprob: -9.000234603881836
    3. ' )' → logprob: -9.125234603881836
    4. ')

' → logprob: -14.250234603881836
    5. '))' → logprob: -15.125234603881836
    6. ')a' → logprob: -15.125234603881836
    7. ')
' → logprob: -15.625234603881836
    8. ')`' → logprob: -16.125234603881836
    9. ' )
' → logprob: -16.250234603881836
    10. ')*' → logprob: -16.375234603881836

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3505534827709198
    2. 'a' → logprob: -1.2255535125732422
    3. '```' → logprob: -6.600553512573242
    4. '    
' → logprob: -7.475553512573242
    5. '
' → logprob: -9.725553512573242
    6. '``' → logprob: -10.100553512573242
    7. ' a' → logprob: -10.725553512573242
    8. '+' → logprob: -11.600553512573242
    9. ' 
' → logprob: -11.850553512573242
    10. '   
' → logprob: -11.850553512573242

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00270073558203876
    2. '   ' → logprob: -6.1277008056640625
    3. ' a' → logprob: -7.6277008056640625
    4. '+' → logprob: -10.877700805664062
    5. '```' → logprob: -12.377700805664062
    6. '  ' → logprob: -13.502700805664062
    7. '    
' → logprob: -13.877700805664062
    8. ' +' → logprob: -14.002700805664062
    9. '1' → logprob: -14.252700805664062
    10. '    ' → logprob: -14.877700805664062

Token 49: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06383442133665085
    2. ' +=' → logprob: -2.8138344287872314
    3. '=' → logprob: -6.813834190368652
    4. '+' → logprob: -7.188834190368652
    5. ' =' → logprob: -11.813834190368652
    6. ']+=' → logprob: -13.063834190368652
    7. 'a' → logprob: -14.188834190368652
    8. '+='' → logprob: -15.063834190368652
    9. '++' → logprob: -15.188834190368652
    10. '```' → logprob: -15.688834190368652

Token 50: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02325386554002762
    2. ' a' → logprob: -3.773253917694092
    3. '+' → logprob: -12.148253440856934
    4. '1' → logprob: -13.023253440856934
    5. '+a' → logprob: -15.023253440856934
    6. ' ' → logprob: -15.273253440856934
    7. ' +' → logprob: -15.523253440856934
    8. '	a' → logprob: -16.39825439453125
    9. '>a' → logprob: -17.89825439453125
    10. '   ' → logprob: -18.39825439453125

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007115975022315979
    2. ' +' → logprob: -7.250711441040039
    3. '+a' → logprob: -13.750711441040039
    4. '1' → logprob: -15.000711441040039
    5. '＋' → logprob: -15.875711441040039
    6. '+=' → logprob: -17.75071144104004
    7. ' plus' → logprob: -18.00071144104004
    8. '+
' → logprob: -18.00071144104004
    9. 'plus' → logprob: -18.50071144104004
    10. 'a' → logprob: -19.12571144104004

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.000019073486328
    4. '+' → logprob: -18.000019073486328
    5. '  ' → logprob: -18.750019073486328
    6. '2' → logprob: -20.812519073486328
    7. '<|end|>' → logprob: -20.937519073486328
    8. '۱' → logprob: -21.000019073486328
    9. '１' → logprob: -21.125019073486328
    10. '```' → logprob: -21.250019073486328

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.875003814697266
    4. '+' → logprob: -17.625003814697266
    5. '  ' → logprob: -19.125003814697266
    6. '2' → logprob: -19.937503814697266
    7. '<|end|>' → logprob: -20.062503814697266
    8. '7' → logprob: -20.312503814697266
    9. '```' → logprob: -20.312503814697266
    10. 'a' → logprob: -20.625003814697266

Token 54: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00868016667664051
    2. '
' → logprob: -4.75868034362793
    3. ' print' → logprob: -9.88368034362793
    4. '\n' → logprob: -12.25868034362793
    5. ' 
' → logprob: -12.50868034362793
    6. '
' → logprob: -13.63368034362793
    7. '  
' → logprob: -13.75868034362793
    8. 'a' → logprob: -13.75868034362793
    9. '```' → logprob: -13.88368034362793
    10. '(print' → logprob: -14.25868034362793

Token 55: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.431207682704553e-05
    2. 'a' → logprob: -10.125054359436035
    3. '
' → logprob: -11.500054359436035
    4. ' print' → logprob: -12.500054359436035
    5. '```' → logprob: -16.12505340576172
    6. '(print' → logprob: -17.00005340576172
    7. 'p' → logprob: -17.25005340576172
    8. 'pr' → logprob: -17.62505340576172
    9. '#print' → logprob: -17.62505340576172
    10. '\n' → logprob: -18.00005340576172

Token 56: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759726762771606
    2. '(a' → logprob: -0.8259726762771606
    3. '()' → logprob: -11.075972557067871
    4. 'a' → logprob: -11.325972557067871
    5. '('' → logprob: -12.700972557067871
    6. '((' → logprob: -14.075972557067871
    7. '(`' → logprob: -14.200972557067871
    8. '("("' → logprob: -14.825972557067871
    9. '(
' → logprob: -15.075972557067871
    10. ' (' → logprob: -15.575972557067871

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.75
    3. '))' → logprob: -17.5
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -19.0
    6. '')' → logprob: -19.875
    7. ')}' → logprob: -20.5
    8. '）' → logprob: -21.0
    9. '`)' → logprob: -21.125
    10. '()' → logprob: -21.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 29.09%
Précision adaptée (1ère position): 30.91%
Précision (top 10): 78.18%
================================================================================
