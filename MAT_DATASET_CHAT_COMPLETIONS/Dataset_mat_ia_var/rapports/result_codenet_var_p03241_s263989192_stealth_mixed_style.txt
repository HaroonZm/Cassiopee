================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def abc112_d():
    from functools import reduce

    N_M = input().split()
    N = int(N_M[0])
    M = int(N_M[1])

    # Procédural pour la recherche des diviseurs, puis liste en compréhension
    def divisors(k):
        a,b = [],[]
        i = 1
        while i * i <= k:
            if k % i == 0:
                a.append(i)
                if i != k//i:
                    b.append(k//i)
            i += 1
        return list(set(a+b))

    candidates = divisors(M)
    found = 0

    # Programming fonctionnel : filter, reduce
    res = list(filter(lambda d: M//d>=N, candidates))
    if res:
        found = reduce(lambda x, y: x if x > y else y, res)
    else:
        found = 1

    # déclenchement classique
    print(found)

abc112_d()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: '112' (ID: 12307)
  → Token d'amorce (pas de prédiction)

Token 3: '_d' (ID: 1565)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39360326528549194
    2. '_' → logprob: -1.1436033248901367
    3. '```' → logprob: -5.518603324890137
    4. ':' → logprob: -7.768603324890137
    5. '"' → logprob: -8.018603324890137
    6. '.' → logprob: -8.143603324890137
    7. '_:' → logprob: -8.143603324890137
    8. '():' → logprob: -8.393603324890137
    9. '(_' → logprob: -8.768603324890137
    10. ''' → logprob: -8.893603324890137

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1176268681883812
    2. '():' → logprob: -2.242626905441284
    3. '_' → logprob: -5.742626667022705
    4. ':' → logprob: -7.367626667022705
    5. '(:' → logprob: -7.617626667022705
    6. '()' → logprob: -8.367627143859863
    7. '_:' → logprob: -9.992627143859863
    8. '(
' → logprob: -10.242627143859863
    9. '```' → logprob: -10.242627143859863
    10. ' ():' → logprob: -11.242627143859863

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3915937840938568
    2. '```' → logprob: -1.6415938138961792
    3. '\n' → logprob: -3.0165936946868896
    4. '\' → logprob: -3.1415936946868896
    5. '    
' → logprob: -4.766593933105469
    6. ':' → logprob: -4.766593933105469
    7. '  
' → logprob: -5.516593933105469
    8. '(' → logprob: -5.766593933105469
    9. '``' → logprob: -6.016593933105469
    10. '
' → logprob: -6.016593933105469

Token 6: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48787567019462585
    2. '```' → logprob: -1.7378756999969482
    3. '\' → logprob: -2.8628756999969482
    4. '\n' → logprob: -2.9878756999969482
    5. 'n' → logprob: -3.6128756999969482
    6. '`' → logprob: -3.7378756999969482
    7. '    ' → logprob: -3.8628756999969482
    8. ' ' → logprob: -5.362875461578369
    9. 'x' → logprob: -5.362875461578369
    10. ' ```' → logprob: -6.112875461578369

Token 7: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.13942986726760864
    2. ' sys' → logprob: -2.139429807662964
    3. ' collections' → logprob: -5.014430046081543
    4. 'math' → logprob: -5.639430046081543
    5. ' itertools' → logprob: -6.514430046081543
    6. 'sys' → logprob: -7.889430046081543
    7. 'collections' → logprob: -8.389430046081543
    8. ' sym' → logprob: -9.639430046081543
    9. ' numpy' → logprob: -10.639430046081543
    10. ' ' → logprob: -10.764430046081543

Token 8: ' import' (ID: 1588)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04510478675365448
    2. '_import' → logprob: -3.920104742050171
    3. '.' → logprob: -4.42010498046875
    4. 'import' → logprob: -5.17010498046875
    5. ' import' → logprob: -5.17010498046875
    6. ' _' → logprob: -8.54510498046875
    7. ' ' → logprob: -8.54510498046875
    8. '```' → logprob: -8.79510498046875
    9. ' .' → logprob: -9.42010498046875
    10. '`' → logprob: -10.17010498046875

Token 9: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.36243364214897156
    2. 'l' → logprob: -1.362433671951294
    3. 'reduce' → logprob: -3.487433671951294
    4. ' reduce' → logprob: -4.112433433532715
    5. 'partial' → logprob: -7.862433433532715
    6. ' partial' → logprob: -8.112433433532715
    7. 'cache' → logprob: -8.987433433532715
    8. 'wrap' → logprob: -9.362433433532715
    9. ' wraps' → logprob: -9.612433433532715
    10. ' cache' → logprob: -10.362433433532715

Token 10: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.027047872543335
    2. '(' → logprob: -2.277047872543335
    3. '\n' → logprob: -2.277047872543335
    4. '    
' → logprob: -2.402047872543335
    5. '   ' → logprob: -2.652047872543335
    6. '
' → logprob: -2.777047872543335
    7. '    ' → logprob: -2.902047872543335
    8. ' ' → logprob: -3.527047872543335
    9. '_' → logprob: -3.902047872543335
    10. '`' → logprob: -4.152048110961914

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6228188872337341
    2. '    
' → logprob: -1.747818946838379
    3. '\' → logprob: -2.622818946838379
    4. '(' → logprob: -2.872818946838379
    5. '`' → logprob: -3.122818946838379
    6. '```' → logprob: -3.747818946838379
    7. '\n' → logprob: -3.997818946838379
    8. '    ' → logprob: -4.372818946838379
    9. '_' → logprob: -4.622818946838379
    10. '
' → logprob: -4.622818946838379

Token 12: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6774263381958008
    2. '   ' → logprob: -1.3024263381958008
    3. 'a' → logprob: -2.927426338195801
    4. 'result' → logprob: -3.302426338195801
    5. 's' → logprob: -3.552426338195801
    6. 'res' → logprob: -3.677426338195801
    7. 'return' → logprob: -3.677426338195801
    8. ' ' → logprob: -5.052426338195801
    9. 'r' → logprob: -5.302426338195801
    10. 'data' → logprob: -5.427426338195801

Token 13: '_M' (ID: 2372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5600858926773071
    2. ' ' → logprob: -1.6850858926773071
    3. ',' → logprob: -2.0600857734680176
    4. '=' → logprob: -2.5600857734680176
    5. ' ,' → logprob: -3.5600857734680176
    6. '    ' → logprob: -5.935085773468018
    7. '   ' → logprob: -6.060085773468018
    8. '_' → logprob: -6.310085773468018
    9. '  ' → logprob: -6.435085773468018
    10. '.' → logprob: -7.685085773468018

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3543752431869507
    2. ' =' → logprob: -1.3543752431869507
    3. ',' → logprob: -3.3543753623962402
    4. '_' → logprob: -5.47937536239624
    5. ')' → logprob: -8.479374885559082
    6. ' ,' → logprob: -8.604374885559082
    7. '[' → logprob: -9.229374885559082
    8. '  ' → logprob: -9.354374885559082
    9. ' ' → logprob: -9.354374885559082
    10. '   ' → logprob: -9.479374885559082

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11313895881175995
    2. 'input' → logprob: -2.3631389141082764
    3. ' list' → logprob: -4.7381391525268555
    4. ' map' → logprob: -6.2381391525268555
    5. ' int' → logprob: -6.9881391525268555
    6. 'list' → logprob: -7.3631391525268555
    7. 'int' → logprob: -7.9881391525268555
    8. ' ' → logprob: -9.363139152526855
    9. 'map' → logprob: -9.363139152526855
    10. ' tuple' → logprob: -10.488139152526855

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006134976167231798
    2. '('' → logprob: -6.256134986877441
    3. '()' → logprob: -6.881134986877441
    4. '[' → logprob: -6.881134986877441
    5. '("("' → logprob: -7.256134986877441
    6. ''' → logprob: -7.631134986877441
    7. '(
' → logprob: -8.631134986877441
    8. '"' → logprob: -9.006134986877441
    9. ')' → logprob: -9.006134986877441
    10. '```' → logprob: -9.381134986877441

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031886440701782703
    2. 'strip' → logprob: -5.753188610076904
    3. 'rstrip' → logprob: -11.503189086914062
    4. ' split' → logprob: -14.378189086914062
    5. 'spl' → logprob: -15.128189086914062
    6. 'replace' → logprob: -18.378189086914062
    7. 'read' → logprob: -18.878189086914062
    8. 'startswith' → logprob: -19.753189086914062
    9. '.split' → logprob: -20.253189086914062
    10. '(split' → logprob: -20.378189086914062

Token 18: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3634089231491089
    2. '('' → logprob: -1.6134089231491089
    3. '()' → logprob: -2.7384090423583984
    4. '("("' → logprob: -3.2384090423583984
    5. '(`' → logprob: -7.863409042358398
    6. '("' → logprob: -8.238409042358398
    7. '```' → logprob: -8.363409042358398
    8. '(()' → logprob: -8.738409042358398
    9. '`()' → logprob: -8.988409042358398
    10. '((' → logprob: -9.738409042358398

Token 19: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15235008299350739
    2. '[N' → logprob: -3.7773501873016357
    3. ' ' → logprob: -3.9023501873016357
    4. ')' → logprob: -4.027349948883057
    5. '[n' → logprob: -4.277349948883057
    6. ',' → logprob: -4.652349948883057
    7. '   ' → logprob: -4.652349948883057
    8. '=' → logprob: -4.652349948883057
    9. '[
' → logprob: -5.527349948883057
    10. '<|end|>' → logprob: -5.527349948883057

Token 20: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.38073229789733887
    2. 'n' → logprob: -1.3807322978973389
    3. ' N' → logprob: -4.255732536315918
    4. '[' → logprob: -4.380732536315918
    5. ')' → logprob: -5.130732536315918
    6. '   ' → logprob: -5.255732536315918
    7. '[N' → logprob: -5.755732536315918
    8. ' ' → logprob: -6.005732536315918
    9. 't' → logprob: -6.130732536315918
    10. 'i' → logprob: -6.130732536315918

Token 21: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3835608959197998
    2. '_' → logprob: -1.5085608959197998
    3. ' =' → logprob: -2.6335608959198
    4. '=' → logprob: -4.133561134338379
    5. '_,' → logprob: -5.508561134338379
    6. ' ,' → logprob: -6.258561134338379
    7. '[' → logprob: -6.633561134338379
    8. ',_' → logprob: -7.508561134338379
    9. ')' → logprob: -7.633561134338379
    10. '_=' → logprob: -8.633561134338379

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018162818625569344
    2. 'int' → logprob: -4.018162727355957
    3. ' N' → logprob: -12.268162727355957
    4. ' ' → logprob: -12.518162727355957
    5. '[int' → logprob: -13.393162727355957
    6. ' in' → logprob: -14.143162727355957
    7. '(int' → logprob: -14.393162727355957
    8. '    ' → logprob: -14.768162727355957
    9. '=int' → logprob: -14.893162727355957
    10. '	int' → logprob: -15.393162727355957

Token 23: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38711169362068176
    2. '(N' → logprob: -1.1371116638183594
    3. '('' → logprob: -8.51211166381836
    4. '("("' → logprob: -11.13711166381836
    5. '("' → logprob: -11.51211166381836
    6. '(

' → logprob: -13.13711166381836
    7. ''' → logprob: -13.13711166381836
    8. '(`' → logprob: -13.26211166381836
    9. '```' → logprob: -13.51211166381836
    10. '((' → logprob: -13.76211166381836

Token 24: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.0033199493773281574
    2. '[' → logprob: -5.87831974029541
    3. ')' → logprob: -7.75331974029541
    4. '[_' → logprob: -10.12831974029541
    5. ' _' → logprob: -11.50331974029541
    6. '[M' → logprob: -11.62831974029541
    7. '   ' → logprob: -12.00331974029541
    8. '_N' → logprob: -12.37831974029541
    9. '```' → logprob: -12.62831974029541
    10. ' ' → logprob: -13.12831974029541

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '0' → logprob: -17.0
    5. '   ' → logprob: -17.625
    6. '\[' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. ' ' → logprob: -18.75
    9. '[N' → logprob: -19.0
    10. '[
' → logprob: -19.25

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009737557265907526
    2. ' ' → logprob: -7.000973701477051
    3. '1' → logprob: -9.75097370147705
    4. ')' → logprob: -13.37597370147705
    5. '   ' → logprob: -14.25097370147705
    6. '[' → logprob: -14.25097370147705
    7. '  ' → logprob: -14.87597370147705
    8. ']' → logprob: -15.56347370147705
    9. '])' → logprob: -15.87597370147705
    10. ' )' → logprob: -16.625974655151367

Token 27: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026729601086117327
    2. ' )' → logprob: -8.750267028808594
    3. '])' → logprob: -9.625267028808594
    4. ')
' → logprob: -11.000267028808594
    5. ']' → logprob: -11.750267028808594
    6. ' ' → logprob: -13.000267028808594
    7. '),' → logprob: -13.125267028808594
    8. ')])' → logprob: -13.375267028808594
    9. '）' → logprob: -13.500267028808594
    10. '   ' → logprob: -13.500267028808594

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2463332712650299
    2. '<|end|>' → logprob: -2.246333360671997
    3. ' M' → logprob: -2.746333360671997
    4. ' ' → logprob: -3.871333360671997
    5. ')' → logprob: -4.496333122253418
    6. '    ' → logprob: -5.371333122253418
    7. ' N' → logprob: -5.746333122253418
    8. '<|end|>' → logprob: -5.871333122253418
    9. '  ' → logprob: -6.371333122253418
    10. '    
' → logprob: -7.371333122253418

Token 29: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.44787323474884033
    2. ' M' → logprob: -1.1978732347488403
    3. ' ' → logprob: -3.697873115539551
    4. '_' → logprob: -3.947873115539551
    5. ''' → logprob: -5.822873115539551
    6. 'N' → logprob: -5.947873115539551
    7. ')' → logprob: -6.447873115539551
    8. '    ' → logprob: -6.947873115539551
    9. '<|end|>' → logprob: -6.947873115539551
    10. ' N' → logprob: -7.072873115539551

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016230959445238113
    2. '=' → logprob: -4.141231060028076
    3. ')' → logprob: -9.516230583190918
    4. '_' → logprob: -9.766230583190918
    5. ' ' → logprob: -10.141230583190918
    6. ',' → logprob: -11.766230583190918
    7. '=int' → logprob: -12.266230583190918
    8. '<|end|>' → logprob: -12.391230583190918
    9. '.' → logprob: -13.516230583190918
    10. '  ' → logprob: -14.016230583190918

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022635996341705
    2. ' int' → logprob: -1.9102263450622559
    3. ' ' → logprob: -14.035226821899414
    4. '=int' → logprob: -14.535226821899414
    5. ' N' → logprob: -15.285226821899414
    6. '  ' → logprob: -15.660226821899414
    7. '(int' → logprob: -16.160226821899414
    8. '0' → logprob: -16.285226821899414
    9. '	int' → logprob: -16.410226821899414
    10. 'N' → logprob: -16.410226821899414

Token 32: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.010235271416604519
    2. '(' → logprob: -4.63523530960083
    3. '(M' → logprob: -7.76023530960083
    4. '('' → logprob: -10.260234832763672
    5. ' (' → logprob: -12.135234832763672
    6. '(n' → logprob: -13.260234832763672
    7. '(
' → logprob: -13.385234832763672
    8. ''' → logprob: -13.385234832763672
    9. '(S' → logprob: -13.510234832763672
    10. '()' → logprob: -13.885234832763672

Token 33: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.00019340807921253145
    2. ')' → logprob: -9.50019359588623
    3. '_' → logprob: -9.87519359588623
    4. '-' → logprob: -10.12519359588623
    5. ' ' → logprob: -12.00019359588623
    6. '[' → logprob: -12.25019359588623
    7. '_)' → logprob: -12.87519359588623
    8. '   ' → logprob: -13.12519359588623
    9. ')_' → logprob: -13.25019359588623
    10. ' _' → logprob: -13.50019359588623

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.805981972021982e-05
    2. ')' → logprob: -9.50009822845459
    3. ')[' → logprob: -11.62509822845459
    4. ' [' → logprob: -12.37509822845459
    5. '   ' → logprob: -12.50009822845459
    6. '1' → logprob: -12.75009822845459
    7. ' ' → logprob: -14.00009822845459
    8. '][' → logprob: -14.50009822845459
    9. '```' → logprob: -14.75009822845459
    10. '(' → logprob: -15.00009822845459

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003520960221067071
    2. '0' → logprob: -6.003520965576172
    3. ' ' → logprob: -6.878520965576172
    4. '])' → logprob: -11.378520965576172
    5. '2' → logprob: -13.253520965576172
    6. ' ])' → logprob: -13.753520965576172
    7. '   ' → logprob: -15.753520965576172
    8. ')' → logprob: -15.753520965576172
    9. '-' → logprob: -15.753520965576172
    10. '  ' → logprob: -16.253520965576172

Token 36: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.750000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.0
    5. '')' → logprob: -16.875
    6. '`)' → logprob: -17.125
    7. ']' → logprob: -17.25
    8. '）' → logprob: -17.5
    9. '}' → logprob: -18.625
    10. ')))' → logprob: -18.625

Token 37: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4603736400604248
    2. '
' → logprob: -1.4603736400604248
    3. '   ' → logprob: -1.7103736400604248
    4. ' 
' → logprob: -2.335373640060425
    5. '    
' → logprob: -2.960373640060425
    6. 'a' → logprob: -3.085373640060425
    7. '\n' → logprob: -3.460373640060425
    8. '\' → logprob: -4.085373878479004
    9. '```' → logprob: -4.085373878479004
    10. ')' → logprob: -4.335373878479004

Token 38: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5039616823196411
    2. 'd' → logprob: -1.7539616823196411
    3. 'c' → logprob: -1.7539616823196411
    4. 's' → logprob: -1.7539616823196411
    5. 'A' → logprob: -2.7539615631103516
    6. 'S' → logprob: -3.6289615631103516
    7. 'g' → logprob: -4.253961563110352
    8. 'b' → logprob: -4.378961563110352
    9. '_' → logprob: -4.378961563110352
    10. 'p' → logprob: -4.503961563110352

Token 39: ' Proc' (ID: 61817)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2339098453521729
    2. 'c' → logprob: -1.7339098453521729
    3. 'd' → logprob: -1.9839098453521729
    4. 's' → logprob: -1.9839098453521729
    5. 'l' → logprob: -3.108909845352173
    6. 'g' → logprob: -3.483909845352173
    7. 'A' → logprob: -3.733909845352173
    8. 'f' → logprob: -4.233909606933594
    9. 'b' → logprob: -4.483909606933594
    10. 'p' → logprob: -4.733909606933594

Token 40: 'éd' (ID: 6383)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.01237613894045353
    2. 'e' → logprob: -4.762376308441162
    3. 'essing' → logprob: -5.762376308441162
    4. 'essor' → logprob: -8.262375831604004
    5. 'es' → logprob: -9.262375831604004
    6. ' ess' → logprob: -9.387375831604004
    7. '_' → logprob: -10.012375831604004
    8. 'a' → logprob: -10.512375831604004
    9. '```' → logprob: -10.887375831604004
    10. '=' → logprob: -11.012375831604004

Token 41: 'ural' (ID: 4900)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.057905834168195724
    2. 'u' → logprob: -3.682905912399292
    3. 'e' → logprob: -4.057905673980713
    4. 'è' → logprob: -6.057905673980713
    5. 'éder' → logprob: -6.057905673980713
    6. 'ed' → logprob: -6.307905673980713
    7. 'ess' → logprob: -6.807905673980713
    8. 'd' → logprob: -7.057905673980713
    9. 'és' → logprob: -7.432905673980713
    10. 'éd' → logprob: -7.557905673980713

Token 42: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.244840145111084
    2. '_' → logprob: -2.369840145111084
    3. '   ' → logprob: -2.369840145111084
    4. ' ' → logprob: -2.494840145111084
    5. '
' → logprob: -2.744840145111084
    6. '\n' → logprob: -2.744840145111084
    7. '\' → logprob: -2.869840145111084
    8. 'for' → logprob: -3.244840145111084
    9. 'r' → logprob: -3.369840145111084
    10. 'c' → logprob: -3.744840145111084

Token 43: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44651755690574646
    2. '_' → logprob: -1.9465175867080688
    3. ' i' → logprob: -2.6965174674987793
    4. 'r' → logprob: -3.4465174674987793
    5. 'l' → logprob: -3.8215174674987793
    6. ' l' → logprob: -4.071517467498779
    7. 'c' → logprob: -4.321517467498779
    8. 'i' → logprob: -4.446517467498779
    9. ' c' → logprob: -4.446517467498779
    10. ' r' → logprob: -4.946517467498779

Token 44: ' recherche' (ID: 24975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5839840769767761
    2. 's' → logprob: -2.333984136581421
    3. ' i' → logprob: -2.833984136581421
    4. '_' → logprob: -3.333984136581421
    5. 'r' → logprob: -3.833984136581421
    6. ' c' → logprob: -4.083983898162842
    7. 'i' → logprob: -4.146483898162842
    8. ' s' → logprob: -4.458983898162842
    9. ' suite' → logprob: -4.521483898162842
    10. '   ' → logprob: -4.646483898162842

Token 45: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5359660387039185
    2. ' ' → logprob: -1.4109660387039185
    3. ' des' → logprob: -3.410965919494629
    4. 's' → logprob: -3.535965919494629
    5. '   ' → logprob: -3.910965919494629
    6. 'def' → logprob: -4.660965919494629
    7. ' de' → logprob: -4.785965919494629
    8. 'd' → logprob: -4.785965919494629
    9. '  ' → logprob: -4.910965919494629
    10. 'des' → logprob: -4.910965919494629

Token 46: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7437949776649475
    2. '_' → logprob: -1.3687949180603027
    3. 's' → logprob: -3.4937949180603027
    4. 'i' → logprob: -3.9312949180603027
    5. ' p' → logprob: -4.243794918060303
    6. 'c' → logprob: -4.243794918060303
    7. ' chemins' → logprob: -4.493794918060303
    8. 'p' → logprob: -4.556294918060303
    9. ' `' → logprob: -4.681294918060303
    10. 'd' → logprob: -4.743794918060303

Token 47: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.05092265456914902
    2. 'i' → logprob: -3.8009226322174072
    3. 'is' → logprob: -4.675922870635986
    4. 'e' → logprob: -5.175922870635986
    5. '```' → logprob: -5.675922870635986
    6. '   ' → logprob: -6.800922870635986
    7. 'iseur' → logprob: -6.800922870635986
    8. '`' → logprob: -7.550922870635986
    9. '_' → logprob: -7.613422870635986
    10. '``' → logprob: -7.800922870635986

Token 48: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.07093290239572525
    2. 'u' → logprob: -2.6959328651428223
    3. 'ur' → logprob: -6.945932865142822
    4. 'rs' → logprob: -11.69593334197998
    5. 'us' → logprob: -12.57093334197998
    6. '   ' → logprob: -12.57093334197998
    7. '```' → logprob: -12.57093334197998
    8. ' ' → logprob: -13.19593334197998
    9. 's' → logprob: -13.44593334197998
    10. 'urses' → logprob: -13.94593334197998

Token 49: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.105903148651123
    2. ':' → logprob: -1.230903148651123
    3. '\' → logprob: -2.605903148651123
    4. 'n' → logprob: -3.230903148651123
    5. '   ' → logprob: -3.355903148651123
    6. ' 
' → logprob: -3.480903148651123
    7. ',' → logprob: -3.605903148651123
    8. '\n' → logprob: -3.605903148651123
    9. '_' → logprob: -3.730903148651123
    10. '#' → logprob: -3.980903148651123

Token 50: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02320517599582672
    2. '    ' → logprob: -4.773205280303955
    3. '   ' → logprob: -5.148205280303955
    4. '  ' → logprob: -6.773205280303955
    5. ' '' → logprob: -7.023205280303955
    6. 's' → logprob: -7.273205280303955
    7. ' "' → logprob: -7.898205280303955
    8. 'a' → logprob: -8.023204803466797
    9. 'r' → logprob: -8.023204803466797
    10. '_' → logprob: -8.148204803466797

Token 51: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8496402502059937
    2. '_' → logprob: -2.349640369415283
    3. ' la' → logprob: -2.349640369415283
    4. ' l' → logprob: -2.724640369415283
    5. ' ' → logprob: -2.849640369415283
    6. 'l' → logprob: -3.349640369415283
    7. ' leur' → logprob: -3.724640369415283
    8. 'r' → logprob: -3.724640369415283
    9. ' le' → logprob: -3.974640369415283
    10. 's' → logprob: -4.224640369415283

Token 52: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32673028111457825
    2. 'd' → logprob: -1.8267302513122559
    3. 's' → logprob: -3.576730251312256
    4. ' d' → logprob: -4.201730251312256
    5. '_d' → logprob: -4.326730251312256
    6. 'des' → logprob: -4.576730251312256
    7. '[' → logprob: -4.701730251312256
    8. ' =' → logprob: -4.951730251312256
    9. 'def' → logprob: -5.326730251312256
    10. 'de' → logprob: -5.576730251312256

Token 53: ' compréhension' (ID: 142333)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0232994556427002
    2. '```' → logprob: -1.6482994556427002
    3. 'compr' → logprob: -1.7732994556427002
    4. '_' → logprob: -2.5232994556427
    5. ' comprehension' → logprob: -3.6482994556427
    6. ' ' → logprob: -4.148299217224121
    7. 'comp' → logprob: -4.523299217224121
    8. 'c' → logprob: -4.523299217224121
    9. ' compréhension' → logprob: -4.523299217224121
    10. '[]' → logprob: -5.023299217224121

Token 54: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17866788804531097
    2. 'div' → logprob: -2.5536677837371826
    3. '   ' → logprob: -3.0536677837371826
    4. ' d' → logprob: -4.553668022155762
    5. '[' → logprob: -4.928668022155762
    6. ' divis' → logprob: -5.178668022155762
    7. 's' → logprob: -5.803668022155762
    8. 'D' → logprob: -5.928668022155762
    9. '_' → logprob: -6.428668022155762
    10. 'res' → logprob: -7.303668022155762

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6789596676826477
    2. 'd' → logprob: -1.178959608078003
    3. 'div' → logprob: -2.053959608078003
    4. ' divis' → logprob: -4.553959846496582
    5. ' d' → logprob: -4.928959846496582
    6. '```' → logprob: -5.053959846496582
    7. '    
' → logprob: -5.428959846496582
    8. '\n' → logprob: -5.553959846496582
    9. '_' → logprob: -5.928959846496582
    10. '\' → logprob: -5.928959846496582

Token 56: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1439054012298584
    2. 'div' → logprob: -2.8939054012298584
    3. ' d' → logprob: -3.7689054012298584
    4. ' divis' → logprob: -3.7689054012298584
    5. '   ' → logprob: -5.0189056396484375
    6. 's' → logprob: -5.1439056396484375
    7. 'n' → logprob: -5.7689056396484375
    8. ' div' → logprob: -6.1439056396484375
    9. 'a' → logprob: -6.3939056396484375
    10. '_' → logprob: -6.3939056396484375

Token 57: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.3260495662689209
    2. ' div' → logprob: -1.826049566268921
    3. 'div' → logprob: -2.826049566268921
    4. ' divisor' → logprob: -3.951049566268921
    5. ' d' → logprob: -4.0760498046875
    6. ' ' → logprob: -5.0760498046875
    7. ' find' → logprob: -5.0760498046875
    8. 'd' → logprob: -5.5760498046875
    9. ' get' → logprob: -6.2010498046875
    10. '	div' → logprob: -7.0760498046875

Token 58: 'ors' (ID: 914)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.34752410650253296
    2. 'ors' → logprob: -1.4725241661071777
    3. 'eurs' → logprob: -3.0975241661071777
    4. '```' → logprob: -4.847524166107178
    5. '_' → logprob: -5.972524166107178
    6. 'or' → logprob: -6.222524166107178
    7. 'o' → logprob: -6.722524166107178
    8. '`' → logprob: -7.722524166107178
    9. '_e' → logprob: -8.03502368927002
    10. 'ers' → logprob: -8.09752368927002

Token 59: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00204962445423007
    2. '_' → logprob: -6.752049446105957
    3. 's' → logprob: -7.752049446105957
    4. '(n' → logprob: -8.127049446105957
    5. '_of' → logprob: -9.752049446105957
    6. '_(' → logprob: -11.252049446105957
    7. '_list' → logprob: -11.502049446105957
    8. ' (' → logprob: -11.752049446105957
    9. '(x' → logprob: -12.002049446105957
    10. 'of' → logprob: -12.002049446105957

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015345009742304683
    2. ')' → logprob: -6.501534461975098
    3. ' ):' → logprob: -10.626534461975098
    4. '   ' → logprob: -13.501534461975098
    5. '=' → logprob: -13.626534461975098
    6. ':' → logprob: -13.876534461975098
    7. ')：' → logprob: -13.876534461975098
    8. '):
' → logprob: -14.251534461975098
    9. ',' → logprob: -14.251534461975098
    10. '_' → logprob: -14.751534461975098

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6710464358329773
    2. ':' → logprob: -0.9210464358329773
    3. '       ' → logprob: -3.671046495437622
    4. '    ' → logprob: -3.671046495437622
    5. ' :' → logprob: -4.171046257019043
    6. ' ' → logprob: -4.796046257019043
    7. '  ' → logprob: -6.046046257019043
    8. '):' → logprob: -6.296046257019043
    9. '[]' → logprob: -6.546046257019043
    10. '[' → logprob: -6.546046257019043

Token 62: ' a' (ID: 261)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4892550706863403
    2. '   ' → logprob: -1.7392550706863403
    3. ' d' → logprob: -1.8642550706863403
    4. ' return' → logprob: -1.8642550706863403
    5. 'return' → logprob: -2.364254951477051
    6. '[' → logprob: -3.239254951477051
    7. ' [' → logprob: -3.364254951477051
    8. ' ' → logprob: -3.614254951477051
    9. ' i' → logprob: -3.864254951477051
    10. 'res' → logprob: -4.489254951477051

Token 63: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6511796712875366
    2. '=' → logprob: -0.7761796712875366
    3. '=[]' → logprob: -4.526179790496826
    4. ' ' → logprob: -6.651179790496826
    5. '=[]
' → logprob: -6.651179790496826
    6. 'r' → logprob: -7.026179790496826
    7. 'range' → logprob: -7.151179790496826
    8. '=[' → logprob: -7.276179790496826
    9. '[]' → logprob: -8.026179313659668
    10. '   ' → logprob: -8.026179313659668

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5244218111038208
    2. ' =' → logprob: -0.8994218111038208
    3. ',' → logprob: -6.774421691894531
    4. ' ' → logprob: -9.274421691894531
    5. '=[]' → logprob: -10.774421691894531
    6. '   ' → logprob: -12.024421691894531
    7. ' ,' → logprob: -12.149421691894531
    8. '=int' → logprob: -12.399421691894531
    9. ')' → logprob: -12.774421691894531
    10. '  ' → logprob: -12.774421691894531

Token 65: ' [],' (ID: 22188)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5027144551277161
    2. ' ' → logprob: -1.0027143955230713
    3. '2' → logprob: -4.62771463394165
    4. '0' → logprob: -5.25271463394165
    5. '[]' → logprob: -6.00271463394165
    6. ' [],' → logprob: -6.12771463394165
    7. ' k' → logprob: -6.25271463394165
    8. ' (' → logprob: -6.50271463394165
    9. ' []' → logprob: -6.75271463394165
    10. ' [' → logprob: -7.00271463394165

Token 66: '[]
' (ID: 41761)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19841717183589935
    2. '2' → logprob: -2.6984171867370605
    3. ' ' → logprob: -3.1984171867370605
    4. '[' → logprob: -3.5734171867370605
    5. '[]' → logprob: -4.1984171867370605
    6. ' [' → logprob: -4.4484171867370605
    7. ' []' → logprob: -5.4484171867370605
    8. 'range' → logprob: -5.4484171867370605
    9. ' range' → logprob: -6.4484171867370605
    10. '0' → logprob: -6.5734171867370605

Token 67: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9718112945556641
    2. 'for' → logprob: -1.221811294555664
    3. ' for' → logprob: -1.596811294555664
    4. '       ' → logprob: -2.846811294555664
    5. '   ' → logprob: -3.471811294555664
    6. '<|end|>' → logprob: -3.971811294555664
    7. ' ' → logprob: -5.471811294555664
    8. '	for' → logprob: -6.221811294555664
    9. ')' → logprob: -6.346811294555664
    10. ' 
' → logprob: -6.471811294555664

Token 68: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23827292025089264
    2. ' for' → logprob: -1.7382729053497314
    3. '       ' → logprob: -3.4882729053497314
    4. 'i' (adapté à ' i') → logprob: -5.9882731437683105
    5. '   ' → logprob: -6.2382731437683105
    6. ' i' → logprob: -6.9882731437683105
    7. 'import' → logprob: -9.238272666931152
    8. ' ' → logprob: -9.863272666931152
    9. '    ' → logprob: -10.738272666931152
    10. 'x' → logprob: -11.113272666931152

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039196692407131195
    2. '=' → logprob: -3.289196729660034
    3. ' ' → logprob: -7.539196491241455
    4. 'n' → logprob: -8.039196968078613
    5. ' n' → logprob: -9.164196968078613
    6. 'nt' → logprob: -9.289196968078613
    7. ' in' → logprob: -9.914196968078613
    8. '1' → logprob: -11.539196968078613
    9. ' ,' → logprob: -11.539196968078613
    10. ',' → logprob: -11.914196968078613

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5797373652458191
    2. ' ' → logprob: -0.8297373652458191
    3. '2' → logprob: -5.579737186431885
    4. '0' → logprob: -11.329737663269043
    5. ' ' → logprob: -13.704737663269043
    6. '  ' → logprob: -14.517237663269043
    7. '   ' → logprob: -14.767237663269043
    8. ' k' → logprob: -14.954737663269043
    9. 'k' → logprob: -15.079737663269043
    10. '[' → logprob: -15.204737663269043

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011095219291746616
    2. '2' → logprob: -4.63609504699707
    3. ' ' → logprob: -6.63609504699707
    4. '0' → logprob: -10.88609504699707
    5. 'int' → logprob: -13.26109504699707
    6. 'k' → logprob: -13.57359504699707
    7. '(' → logprob: -13.82359504699707
    8. '   ' → logprob: -14.82359504699707
    9. '  ' → logprob: -15.07359504699707
    10. '```' → logprob: -15.19859504699707

Token 72: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1678862571716309
    2. ' while' → logprob: -1.6678862571716309
    3. '<|end|>' → logprob: -1.6678862571716309
    4. ',' → logprob: -1.7928862571716309
    5. 'while' → logprob: -3.167886257171631
    6. ' ,' → logprob: -3.667886257171631
    7. ' 
' → logprob: -3.792886257171631
    8. '+' → logprob: -4.417886257171631
    9. '
' → logprob: -4.792886257171631
    10. ':' → logprob: -4.917886257171631

Token 73: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3791677951812744
    2. '<|end|>' → logprob: -1.6291677951812744
    3. ',' → logprob: -3.2541677951812744
    4. ' while' → logprob: -4.004167556762695
    5. ' 
' → logprob: -4.379167556762695
    6. '+' → logprob: -4.629167556762695
    7. 'while' → logprob: -4.754167556762695
    8. ' ,' → logprob: -5.129167556762695
    9. ':' → logprob: -5.504167556762695
    10. '
' → logprob: -5.754167556762695

Token 74: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4447844624519348
    2. ' ' → logprob: -1.56978440284729
    3. 'while' (adapté à ' while') → logprob: -2.06978440284729
    4. '    ' → logprob: -4.444784641265869
    5. ' i' → logprob: -5.444784641265869
    6. 'i' → logprob: -6.194784641265869
    7. '       ' → logprob: -6.694784641265869
    8. '        ' → logprob: -6.944784641265869
    9. '	while' → logprob: -7.069784641265869
    10. '2' → logprob: -7.819784641265869

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021106518805027008
    2. 'i' → logprob: -3.896106481552124
    3. ' ' → logprob: -7.771106719970703
    4. '	i' → logprob: -10.021106719970703
    5. '(i' → logprob: -10.146106719970703
    6. ' ' → logprob: -10.271106719970703
    7. ' (' → logprob: -11.021106719970703
    8. '(' → logprob: -12.771106719970703
    9. '  ' → logprob: -13.896106719970703
    10. '1' → logprob: -14.146106719970703

Token 76: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.4299238622188568
    2. '*' → logprob: -1.8049238920211792
    3. ' *' → logprob: -2.0549237728118896
    4. ' <=' → logprob: -3.3049237728118896
    5. '<=' → logprob: -3.9299237728118896
    6. '**' → logprob: -7.804924011230469
    7. ' ' → logprob: -9.929924011230469
    8. '*(' → logprob: -10.929924011230469
    9. '*k' → logprob: -12.054924011230469
    10. '*j' → logprob: -12.429924011230469

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04304623603820801
    2. ' i' → logprob: -3.168046236038208
    3. ' ' → logprob: -10.793045997619629
    4. '	i' → logprob: -11.668045997619629
    5. '*i' → logprob: -12.043045997619629
    6. '2' → logprob: -12.168045997619629
    7. '<|end|>' → logprob: -12.918045997619629
    8. '1' → logprob: -13.293045997619629
    9. '<|end|>' → logprob: -14.168045997619629
    10. '  ' → logprob: -14.293045997619629

Token 78: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014593218453228474
    2. '<=' → logprob: -4.264593124389648
    3. '<|end|>' → logprob: -8.139593124389648
    4. ' ' → logprob: -9.889593124389648
    5. ' <' → logprob: -9.889593124389648
    6. '<|end|>' → logprob: -12.139593124389648
    7. ' <=",' → logprob: -12.264593124389648
    8. '<' → logprob: -12.264593124389648
    9. ')<=' → logprob: -12.264593124389648
    10. ' ≤' → logprob: -12.514593124389648

Token 79: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5231298804283142
    2. 'k' → logprob: -0.8981298804283142
    3. ' ' → logprob: -12.3981294631958
    4. '	k' → logprob: -13.2731294631958
    5. '<|end|>' → logprob: -15.6481294631958
    6. ' ' → logprob: -16.273130416870117
    7. ' к' → logprob: -16.273130416870117
    8. '```' → logprob: -17.085630416870117
    9. 'N' → logprob: -17.148130416870117
    10. ' M' → logprob: -17.335630416870117

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004228697158396244
    2. ' :' → logprob: -5.504228591918945
    3. ':
' → logprob: -9.004228591918945
    4. ' and' → logprob: -11.129228591918945
    5. '):' → logprob: -12.379228591918945
    6. ' :
' → logprob: -13.379228591918945
    7. ':**' → logprob: -13.379228591918945
    8. '       ' → logprob: -13.754228591918945
    9. ',' → logprob: -14.254228591918945
    10. ' ' → logprob: -14.754228591918945

Token 81: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10771652311086655
    2. ' :' → logprob: -2.6077165603637695
    3. ' ' → logprob: -4.2327165603637695
    4. ':
' → logprob: -4.7327165603637695
    5. ' :
' → logprob: -5.6077165603637695
    6. '       ' → logprob: -7.4827165603637695
    7. '           ' → logprob: -8.85771656036377
    8. '        ' → logprob: -8.98271656036377
    9. '<|end|>' → logprob: -9.23271656036377
    10. ' and' → logprob: -9.35771656036377

Token 82: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11573515832424164
    2. ':' → logprob: -2.9907350540161133
    3. ' 
' → logprob: -3.8657350540161133
    4. '       ' → logprob: -4.740735054016113
    5. '        ' → logprob: -4.865735054016113
    6. ' :' → logprob: -5.115735054016113
    7. ':
' → logprob: -5.490735054016113
    8. '<|end|>' → logprob: -6.240735054016113
    9. ' ' → logprob: -6.615735054016113
    10. ' :
' → logprob: -6.865735054016113

Token 83: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0380699522793293
    2. 'k' → logprob: -3.2880699634552
    3. ' ' → logprob: -10.788069725036621
    4. ' (' → logprob: -12.288069725036621
    5. '	k' → logprob: -13.413069725036621
    6. '    ' → logprob: -14.288069725036621
    7. ' ' → logprob: -14.413069725036621
    8. '  ' → logprob: -15.663069725036621
    9. '   ' → logprob: -16.038070678710938
    10. '(k' → logprob: -16.288070678710938

Token 84: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.030509036034345627
    2. '%' → logprob: -3.5305089950561523
    3. ' ' → logprob: -7.280508995056152
    4. '%i' → logprob: -9.655508995056152
    5. ' ' → logprob: -12.530508995056152
    6. ' %
' → logprob: -14.405508995056152
    7. '<|end|>' → logprob: -15.030508995056152
    8. '%e' → logprob: -15.780508995056152
    9. '%x' → logprob: -16.15550994873047
    10. ' %

' → logprob: -16.40550994873047

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12693965435028076
    2. 'i' → logprob: -2.1269397735595703
    3. ' ' → logprob: -12.12693977355957
    4. '	i' → logprob: -12.62693977355957
    5. '<|end|>' → logprob: -13.00193977355957
    6. ' ' → logprob: -15.62693977355957
    7. '*i' → logprob: -16.00193977355957
    8. '<|end|>' → logprob: -16.25193977355957
    9. '  ' → logprob: -16.50193977355957
    10. '2' → logprob: -17.50193977355957

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014331450685858727
    2. '==' → logprob: -4.264331340789795
    3. ' ' → logprob: -8.889331817626953
    4. ' =' → logprob: -11.264331817626953
    5. '=' → logprob: -12.139331817626953
    6. ')==' → logprob: -12.264331817626953
    7. '0' → logprob: -12.889331817626953
    8. ')' → logprob: -13.264331817626953
    9. ' ===' → logprob: -13.764331817626953
    10. ' ' → logprob: -14.764331817626953

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759398937225342
    2. ' ' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.200940132141113
    4. '  ' → logprob: -15.700940132141113
    5. '<|end|>' → logprob: -17.575939178466797
    6. '```' → logprob: -17.638439178466797
    7. '۰' → logprob: -17.825939178466797
    8. ' ' → logprob: -18.200939178466797
    9. '   ' → logprob: -18.950939178466797
    10. '	' → logprob: -19.200939178466797

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '  ' → logprob: -16.255233764648438
    4. '۰' → logprob: -17.567733764648438
    5. '```' → logprob: -17.755233764648438
    6. '   ' → logprob: -17.880233764648438
    7. ' ' → logprob: -18.067733764648438
    8. '

' → logprob: -18.192733764648438
    9. '	' → logprob: -18.505233764648438
    10. 'i' → logprob: -18.692733764648438

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016670884797349572
    2. ':
' → logprob: -6.501667022705078
    3. ' :' → logprob: -8.876667022705078
    4. '):' → logprob: -10.876667022705078
    5. ':
' → logprob: -13.501667022705078
    6. ' and' → logprob: -13.626667022705078
    7. ')' → logprob: -14.126667022705078
    8. ' :
' → logprob: -14.251667022705078
    9. ',' → logprob: -14.751667022705078
    10. '           ' → logprob: -14.751667022705078

Token 90: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055345285683870316
    2. ' a' → logprob: -3.555345296859741
    3. ' ' → logprob: -5.055345058441162
    4. 'a' → logprob: -5.055345058441162
    5. '            ' → logprob: -5.055345058441162
    6. '               ' → logprob: -5.305345058441162
    7. ' ' → logprob: -8.43034553527832
    8. '        ' → logprob: -8.55534553527832
    9. ':' → logprob: -8.55534553527832
    10. '          ' → logprob: -9.30534553527832

Token 91: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0494631789624691
    2. 'a' (adapté à ' a') → logprob: -3.6744632720947266
    3. '           ' → logprob: -3.7994632720947266
    4. '               ' → logprob: -8.299463272094727
    5. '            ' → logprob: -9.174463272094727
    6. '                   ' → logprob: -9.924463272094727
    7. ' 
' → logprob: -10.424463272094727
    8. ' ' → logprob: -10.674463272094727
    9. ' ' → logprob: -11.174463272094727
    10. '    ' → logprob: -11.424463272094727

Token 92: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6935660243034363
    2. '.append' → logprob: -0.6935660243034363
    3. ' .' → logprob: -7.818565845489502
    4. '.app' → logprob: -11.81856632232666
    5. '.ap' → logprob: -12.31856632232666
    6. 'append' → logprob: -13.56856632232666
    7. '.p' → logprob: -13.56856632232666
    8. '.Append' → logprob: -14.19356632232666
    9. '​.' → logprob: -15.44356632232666
    10. '].' → logprob: -15.56856632232666

Token 93: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001929228543303907
    2. '(' → logprob: -6.25192928314209
    3. '(
' → logprob: -14.25192928314209
    4. ' (' → logprob: -17.626928329467773
    5. '(ii' → logprob: -18.626928329467773
    6. '(a' → logprob: -18.876928329467773
    7. '(

' → logprob: -19.001928329467773
    8. '(I' → logprob: -19.126928329467773
    9. 'i' → logprob: -19.251928329467773
    10. '(k' → logprob: -19.376928329467773

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3174964189529419
    2. ')
' → logprob: -1.317496418952942
    3. ')
' → logprob: -5.692496299743652
    4. '               ' → logprob: -7.192496299743652
    5. ')

' → logprob: -10.067496299743652
    6. ' )
' → logprob: -11.192496299743652
    7. '                   ' → logprob: -11.317496299743652
    8. '           ' → logprob: -11.567496299743652
    9. ' )' → logprob: -11.817496299743652
    10. '),' → logprob: -12.567496299743652

Token 95: '               ' (ID: 506)
  Prédit: '                
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                
' → logprob: -1.2116367816925049
    2. '                ' → logprob: -1.3366367816925049
    3. '               ' → logprob: -1.4616367816925049
    4. ' 
' → logprob: -2.586636781692505
    5. '            
' → logprob: -2.836636781692505
    6. '        
' → logprob: -3.586636781692505
    7. '                 
' → logprob: -4.211636543273926
    8. '<|end|>' → logprob: -5.336636543273926
    9. '                    
' → logprob: -5.586636543273926
    10. '             
' → logprob: -5.836636543273926

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6428667306900024
    2. 'if' (adapté à ' if') → logprob: -0.7678667306900024
    3. '               ' → logprob: -5.642866611480713
    4. '                   ' → logprob: -6.267866611480713
    5. '           ' → logprob: -6.642866611480713
    6. ' b' → logprob: -6.767866611480713
    7. 'b' → logprob: -7.017866611480713
    8. ' ' → logprob: -7.142866611480713
    9. '                    
' → logprob: -9.392867088317871
    10. ' 
' → logprob: -9.517867088317871

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2839052379131317
    2. 'i' → logprob: -1.408905267715454
    3. 'k' → logprob: -6.658905029296875
    4. ' k' → logprob: -6.908905029296875
    5. ' (' → logprob: -8.408905029296875
    6. ' ' → logprob: -8.783905029296875
    7. '(i' → logprob: -10.033905029296875
    8. '(' → logprob: -11.408905029296875
    9. ' not' → logprob: -11.533905029296875
    10. ' ' → logprob: -11.658905029296875

Token 98: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1715107411146164
    2. '!=' → logprob: -1.9215106964111328
    3. '*i' → logprob: -5.421510696411133
    4. ' *' → logprob: -5.921510696411133
    5. ' i' → logprob: -5.921510696411133
    6. '*' → logprob: -7.171510696411133
    7. ' ' → logprob: -7.421510696411133
    8. 'i' → logprob: -10.421510696411133
    9. '!==' → logprob: -12.046510696411133
    10. ')!=' → logprob: -12.296510696411133

Token 99: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759997963905334
    2. 'k' → logprob: -0.8259997963905334
    3. ' ' → logprob: -9.826000213623047
    4. ' (' → logprob: -13.201000213623047
    5. '(k' → logprob: -13.701000213623047
    6. '	k' → logprob: -13.951000213623047
    7. '1' → logprob: -14.201000213623047
    8. '  ' → logprob: -14.326000213623047
    9. ' ' → logprob: -14.451000213623047
    10. '    ' → logprob: -14.701000213623047

Token 100: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11333110183477402
    2. ' //' → logprob: -2.2383310794830322
    3. '/i' → logprob: -7.988331317901611
    4. '/' → logprob: -9.488330841064453
    5. ' ' → logprob: -9.988330841064453
    6. ' /' → logprob: -10.488330841064453
    7. ' ' → logprob: -11.238330841064453
    8. '```' → logprob: -12.988330841064453
    9. '//=' → logprob: -13.238330841064453
    10. '   ' → logprob: -15.238330841064453

Token 101: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0059363823384046555
    2. ' i' → logprob: -5.130936145782471
    3. ' ' → logprob: -12.130936622619629
    4. '	i' → logprob: -13.630936622619629
    5. '   ' → logprob: -14.380936622619629
    6. '  ' → logprob: -15.005936622619629
    7. '    ' → logprob: -16.255935668945312
    8. ' ' → logprob: -16.880935668945312
    9. '```' → logprob: -17.255935668945312
    10. '<|end|>' → logprob: -17.630935668945312

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018662870861589909
    2. ':
' → logprob: -6.751866340637207
    3. ' :' → logprob: -8.001866340637207
    4. '):' → logprob: -8.126866340637207
    5. ' and' → logprob: -10.626866340637207
    6. '):
' → logprob: -11.501866340637207
    7. ')' → logprob: -11.501866340637207
    8. '           ' → logprob: -12.501866340637207
    9. ':
' → logprob: -12.626866340637207
    10. ' :
' → logprob: -12.626866340637207

Token 103: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7688751220703125
    2. ' b' → logprob: -1.2688751220703125
    3. '               ' → logprob: -1.3938751220703125
    4. 'b' → logprob: -6.1438751220703125
    5. '                ' → logprob: -6.1438751220703125
    6. ' a' → logprob: -6.3938751220703125
    7. '                       ' → logprob: -7.8938751220703125
    8. '           ' → logprob: -8.268875122070312
    9. 'a' → logprob: -9.518875122070312
    10. '                    ' → logprob: -9.768875122070312

Token 104: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03808945417404175
    2. 'b' (adapté à ' b') → logprob: -3.2880895137786865
    3. ' a' → logprob: -10.538089752197266
    4. ' ' → logprob: -11.663089752197266
    5. 'a' → logprob: -12.038089752197266
    6. ' ' → logprob: -13.038089752197266
    7. '            ' → logprob: -13.788089752197266
    8. '    ' → logprob: -13.913089752197266
    9. '	b' → logprob: -14.788089752197266
    10. ')b' → logprob: -14.788089752197266

Token 105: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2521986961364746
    2. '.' → logprob: -1.5021986961364746
    3. '.insert' → logprob: -8.502199172973633
    4. '.app' → logprob: -10.252199172973633
    5. ' .' → logprob: -10.752199172973633
    6. '.ap' → logprob: -12.002199172973633
    7. '.extend' → logprob: -13.752199172973633
    8. 'append' → logprob: -14.502199172973633
    9. ').' → logprob: -15.252199172973633
    10. ' ' → logprob: -15.377199172973633

Token 106: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. 'k' → logprob: -13.375125885009766
    4. ' (' → logprob: -15.000125885009766
    5. ' k' → logprob: -16.500125885009766
    6. '(
' → logprob: -16.625125885009766
    7. '((' → logprob: -16.625125885009766
    8. '	k' → logprob: -19.250125885009766
    9. '   ' → logprob: -19.750125885009766
    10. '(

' → logprob: -21.125125885009766

Token 107: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.002136936644092202
    2. ' //' → logprob: -6.627136707305908
    3. '/i' → logprob: -7.127136707305908
    4. '/' → logprob: -12.252137184143066
    5. ' /' → logprob: -13.252137184143066
    6. '//=' → logprob: -14.127137184143066
    7. '%i' → logprob: -16.12713623046875
    8. ' ' → logprob: -16.62713623046875
    9. ' ' → logprob: -16.87713623046875
    10. '//
' → logprob: -17.00213623046875

Token 108: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.491498531133402e-06
    2. ' i' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.000009536743164
    4. '	i' → logprob: -16.125009536743164
    5. '_i' → logprob: -17.750009536743164
    6. '  ' → logprob: -18.125009536743164
    7. '   ' → logprob: -18.250009536743164
    8. ')' → logprob: -18.500009536743164
    9. ')i' → logprob: -18.875009536743164
    10. '[i' → logprob: -19.250009536743164

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03007720410823822
    2. ')
' → logprob: -3.5300772190093994
    3. ')
' → logprob: -8.53007698059082
    4. '       ' → logprob: -10.03007698059082
    5. '               ' → logprob: -10.15507698059082
    6. '           ' → logprob: -10.78007698059082
    7. ' )' → logprob: -11.28007698059082
    8. ')`
' → logprob: -12.65507698059082
    9. ')

' → logprob: -13.28007698059082
    10. '   ' → logprob: -13.28007698059082

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03913203999400139
    2. '
' → logprob: -3.2891321182250977
    3. '       ' → logprob: -7.789132118225098
    4. '            
' → logprob: -8.039132118225098
    5. '
' → logprob: -8.414132118225098
    6. '    
' → logprob: -10.414132118225098
    7. '   ' → logprob: -10.664132118225098
    8. '               ' → logprob: -10.789132118225098
    9. '        
' → logprob: -11.289132118225098
    10. '<|end|>' → logprob: -11.664132118225098

Token 111: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013283402658998966
    2. '
' → logprob: -4.7632832527160645
    3. '       ' → logprob: -5.7632832527160645
    4. '   ' → logprob: -7.1382832527160645
    5. '    
' → logprob: -8.638283729553223
    6. '            
' → logprob: -8.638283729553223
    7. '    ' → logprob: -9.263283729553223
    8. '
' → logprob: -9.888283729553223
    9. '        
' → logprob: -10.013283729553223
    10. ' 
' → logprob: -10.388283729553223

Token 112: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5242045521736145
    2. ' +=' → logprob: -1.0242044925689697
    3. '+' → logprob: -3.0242044925689697
    4. '=' → logprob: -9.02420425415039
    5. ' ' → logprob: -9.14920425415039
    6. ' +' → logprob: -10.14920425415039
    7. '++' → logprob: -11.39920425415039
    8. '1' → logprob: -12.14920425415039
    9. '+="' → logprob: -12.64920425415039
    10. '+='' → logprob: -12.89920425415039

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007606151048094034
    2. ' ' → logprob: -4.882606029510498
    3. '  ' → logprob: -17.757606506347656
    4. '   ' → logprob: -17.882606506347656
    5. '```' → logprob: -18.007606506347656
    6. ' ' → logprob: -18.132606506347656
    7. '１' → logprob: -19.445106506347656
    8. '2' → logprob: -19.820106506347656
    9. '
' → logprob: -19.945106506347656
    10. '    ' → logprob: -20.445106506347656

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -20.125001907348633
    5. '  ' → logprob: -21.000001907348633
    6. '１' → logprob: -21.375001907348633
    7. '
' → logprob: -22.125001907348633
    8. '۱' → logprob: -22.500001907348633
    9. '2' → logprob: -22.937501907348633
    10. '+' → logprob: -23.312501907348633

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1682782918214798
    2. '       ' → logprob: -1.9182783365249634
    3. '
' → logprob: -6.043278217315674
    4. '        
' → logprob: -6.668278217315674
    5. '    
' → logprob: -6.918278217315674
    6. '   ' → logprob: -7.043278217315674
    7. ' 
' → logprob: -7.168278217315674
    8. '<|end|>' → logprob: -7.418278217315674
    9. '\n' → logprob: -8.043278694152832
    10. '  
' → logprob: -8.293278694152832

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043652139604091644
    2. '
' → logprob: -3.293652057647705
    3. '   ' → logprob: -5.793652057647705
    4. '        
' → logprob: -7.043652057647705
    5. ',' → logprob: -7.543652057647705
    6. '    
' → logprob: -8.168652534484863
    7. '    ' → logprob: -8.918652534484863
    8. ' return' → logprob: -9.043652534484863
    9. ',
' → logprob: -9.043652534484863
    10. '<|end|>' → logprob: -9.043652534484863

Token 117: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8778231143951416
    2. ' return' → logprob: -1.6278231143951416
    3. 'return' (adapté à ' return') → logprob: -1.7528231143951416
    4. 'b' → logprob: -2.0028231143951416
    5. ' b' → logprob: -3.2528231143951416
    6. ' ' → logprob: -4.1278228759765625
    7. '       ' → logprob: -4.7528228759765625
    8. ' a' → logprob: -5.1278228759765625
    9. '
' → logprob: -5.7528228759765625
    10. 'a' → logprob: -6.1278228759765625

Token 118: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2815192639827728
    2. ' a' → logprob: -1.4065192937850952
    3. ' ' → logprob: -8.031518936157227
    4. '[a' → logprob: -10.406518936157227
    5. '   ' → logprob: -12.156518936157227
    6. ' list' → logprob: -13.156518936157227
    7. ' [' → logprob: -13.906518936157227
    8. '[' → logprob: -13.906518936157227
    9. '	a' → logprob: -13.906518936157227
    10. '  ' → logprob: -14.031518936157227

Token 119: '(set' (ID: 25904)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0032586383167654276
    2. '(' → logprob: -6.12825870513916
    3. '(sorted' → logprob: -7.50325870513916
    4. '(set' → logprob: -7.87825870513916
    5. '(re' → logprob: -9.25325870513916
    6. '(chain' → logprob: -11.75325870513916
    7. '(
' → logprob: -11.87825870513916
    8. '(range' → logprob: -12.00325870513916
    9. 'a' → logprob: -12.00325870513916
    10. '(s' → logprob: -12.37825870513916

Token 120: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0010891393758356571
    2. '(' → logprob: -6.876089096069336
    3. 'a' → logprob: -10.876089096069336
    4. ')' → logprob: -11.501089096069336
    5. '(
' → logprob: -11.626089096069336
    6. ' (' → logprob: -11.626089096069336
    7. ' a' → logprob: -13.001089096069336
    8. '(sorted' → logprob: -13.001089096069336
    9. ')(' → logprob: -13.251089096069336
    10. ')a' → logprob: -13.501089096069336

Token 121: '+b' (ID: 76609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13673625886440277
    2. '+' → logprob: -2.1367361545562744
    3. '+b' → logprob: -4.6367363929748535
    4. ')' → logprob: -10.636735916137695
    5. '+B' → logprob: -10.636735916137695
    6. ' ' → logprob: -12.011735916137695
    7. ' +
' → logprob: -12.261735916137695
    8. '+a' → logprob: -12.386735916137695
    9. '.extend' → logprob: -12.886735916137695
    10. ')+' → logprob: -13.261735916137695

Token 122: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133755028247833
    2. '))' → logprob: -1.313375473022461
    3. ')))' → logprob: -9.813375473022461
    4. '])' → logprob: -10.313375473022461
    5. '())' → logprob: -11.313375473022461
    6. ')
' → logprob: -12.938375473022461
    7. ' )' → logprob: -13.188375473022461
    8. ' ))' → logprob: -13.563375473022461
    9. '()))' → logprob: -13.813375473022461
    10. ')])' → logprob: -13.813375473022461

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06549292802810669
    2. '   ' → logprob: -3.440492868423462
    3. '<|end|>' → logprob: -3.940492868423462
    4. ')' → logprob: -5.690493106842041
    5. '    
' → logprob: -5.940493106842041
    6. '\n' → logprob: -7.065493106842041
    7. '  
' → logprob: -7.190493106842041
    8. ' ' → logprob: -7.315493106842041
    9. '' → logprob: -7.315493106842041
    10. ':' → logprob: -7.440493106842041

Token 124: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2052839994430542
    2. '    
' → logprob: -2.5802841186523438
    3. '
' → logprob: -2.8302841186523438
    4. '#' → logprob: -4.330284118652344
    5. 'def' → logprob: -4.705284118652344
    6. 'd' → logprob: -5.205284118652344
    7. 'n' → logprob: -5.830284118652344
    8. 'x' → logprob: -5.955284118652344
    9. 's' → logprob: -6.330284118652344
    10. ' 
' → logprob: -6.642784118652344

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023276928812265396
    2. '=' → logprob: -3.7732770442962646
    3. '_' → logprob: -11.148277282714844
    4. 's' → logprob: -12.023277282714844
    5. ':' → logprob: -12.648277282714844
    6. ',' → logprob: -13.148277282714844
    7. '[:]' → logprob: -13.773277282714844
    8. ' ' → logprob: -14.398277282714844
    9. ' ' → logprob: -14.398277282714844
    10. '＝' → logprob: -14.523277282714844

Token 126: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4339059591293335
    2. '[' → logprob: -1.3089059591293335
    3. 'set' → logprob: -3.433906078338623
    4. 'list' → logprob: -3.683906078338623
    5. ' divis' → logprob: -5.308906078338623
    6. '[list' → logprob: -5.558906078338623
    7. '[]' → logprob: -5.933906078338623
    8. '[i' → logprob: -6.058906078338623
    9. '{' → logprob: -6.183906078338623
    10. 'range' → logprob: -6.558906078338623

Token 127: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.09547162801027298
    2. 'tors' → logprob: -2.5954716205596924
    3. 's' → logprob: -4.3454718589782715
    4. '[' → logprob: -6.5954718589782715
    5. 'vors' → logprob: -7.2204718589782715
    6. 'rors' → logprob: -7.8454718589782715
    7. 't' → logprob: -9.345471382141113
    8. 'rs' → logprob: -9.470471382141113
    9. '{' → logprob: -9.470471382141113
    10. 'vers' → logprob: -9.720471382141113

Token 128: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.05673075094819069
    2. '(N' → logprob: -3.1817307472229004
    3. '(' → logprob: -4.3067307472229
    4. '((' → logprob: -9.056731224060059
    5. '<|end|>' → logprob: -11.306731224060059
    6. '(s' → logprob: -12.056731224060059
    7. '(int' → logprob: -12.056731224060059
    8. ' (' → logprob: -12.181731224060059
    9. '(A' → logprob: -13.056731224060059
    10. '(
' → logprob: -13.306731224060059

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001584850688232109
    2. ')
' → logprob: -9.250158309936523
    3. ' )' → logprob: -10.875158309936523
    4. ')[' → logprob: -10.875158309936523
    5. '))' → logprob: -12.125158309936523
    6. '[' → logprob: -12.750158309936523
    7. '-' → logprob: -12.750158309936523
    8. ').' → logprob: -13.250158309936523
    9. ')

' → logprob: -13.375158309936523
    10. ')+' → logprob: -13.500158309936523

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028286337852478027
    2. '.sort' → logprob: -4.278286457061768
    3. '.' → logprob: -4.903286457061768
    4. ')' → logprob: -6.028286457061768
    5. '    
' → logprob: -6.903286457061768
    6. '[' → logprob: -7.403286457061768
    7. '<|end|>' → logprob: -7.778286457061768
    8. ' candidates' → logprob: -8.27828598022461
    9. 'c' → logprob: -8.65328598022461
    10. '[:]' → logprob: -8.77828598022461

Token 131: ' found' (ID: 2491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2487425059080124
    2. 'c' → logprob: -1.8737424612045288
    3. 'result' → logprob: -3.9987425804138184
    4. 'ans' → logprob: -4.373742580413818
    5. 'res' → logprob: -4.748742580413818
    6. 'answers' → logprob: -5.498742580413818
    7. 'answer' → logprob: -5.498742580413818
    8. ' ans' → logprob: -5.623742580413818
    9. ' candidates' → logprob: -5.623742580413818
    10. '    
' → logprob: -5.873742580413818

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2334948182106018
    2. '=' → logprob: -1.858494758605957
    3. '_' → logprob: -2.983494758605957
    4. ':' → logprob: -7.108494758605957
    5. 's' → logprob: -8.608494758605957
    6. ' ' → logprob: -8.608494758605957
    7. '_=' → logprob: -8.608494758605957
    8. 'ed' → logprob: -10.108494758605957
    9. '_candidates' → logprob: -10.108494758605957
    10. ',' → logprob: -10.733494758605957

Token 133: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.09374184906482697
    2. ' False' → logprob: -2.8437418937683105
    3. '0' → logprob: -4.0937418937683105
    4. '-' → logprob: -4.7187418937683105
    5. '[]' → logprob: -5.9687418937683105
    6. ' ' → logprob: -7.2187418937683105
    7. ' []' → logprob: -7.2187418937683105
    8. ' -' → logprob: -7.3437418937683105
    9. 'None' → logprob: -7.3437418937683105
    10. ' None' → logprob: -9.093741416931152

Token 134: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005294477101415396
    2. '0' → logprob: -6.255294322967529
    3. ' False' → logprob: -6.630294322967529
    4. '[]' → logprob: -6.755294322967529
    5. '-' → logprob: -7.380294322967529
    6. 'True' → logprob: -9.505294799804688
    7. 'set' → logprob: -10.130294799804688
    8. 'None' → logprob: -10.130294799804688
    9. ' []' → logprob: -11.005294799804688
    10. 'F' → logprob: -11.130294799804688

Token 135: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03396954387426376
    2. '   ' → logprob: -3.9089696407318115
    3. ' 
' → logprob: -5.408969402313232
    4. '<|end|>' → logprob: -5.783969402313232
    5. ' for' → logprob: -6.283969402313232
    6. '    
' → logprob: -6.408969402313232
    7. ':' → logprob: -7.283969402313232
    8. '\n' → logprob: -7.283969402313232
    9. '  
' → logprob: -8.53396987915039
    10. ' ' → logprob: -8.78396987915039

Token 136: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29429787397384644
    2. ' 
' → logprob: -1.5442979335784912
    3. '   ' → logprob: -3.919297933578491
    4. '    
' → logprob: -4.794297695159912
    5. ' for' → logprob: -5.419297695159912
    6. '<|end|>' → logprob: -6.294297695159912
    7. '  
' → logprob: -6.419297695159912
    8. '\n' → logprob: -6.669297695159912
    9. ' ' → logprob: -6.669297695159912
    10. '   
' → logprob: -6.919297695159912

Token 137: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005056452471762896
    2. ' for' → logprob: -5.630056381225586
    3. '   ' → logprob: -6.630056381225586
    4. 'c' → logprob: -9.255056381225586
    5. 'while' → logprob: -10.255056381225586
    6. '
' → logprob: -13.880056381225586
    7. '    
' → logprob: -13.880056381225586
    8. ' 
' → logprob: -14.505056381225586
    9. ' ' → logprob: -14.755056381225586
    10. 'candidate' → logprob: -15.005056381225586

Token 138: ' Programming' (ID: 65103)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06300143897533417
    2. ' for' → logprob: -2.8130013942718506
    3. 'c' → logprob: -7.31300163269043
    4. '   ' → logprob: -8.31300163269043
    5. ' candidates' → logprob: -9.81300163269043
    6. 'while' → logprob: -9.93800163269043
    7. ' while' → logprob: -12.31300163269043
    8. 'found' → logprob: -12.81300163269043
    9. ' c' → logprob: -13.31300163269043
    10. ' ' → logprob: -13.56300163269043

Token 139: ' fonction' (ID: 17610)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10306981950998306
    2. 'for' → logprob: -2.47806978225708
    3. '   ' → logprob: -4.72806978225708
    4. '<|end|>' → logprob: -5.72806978225708
    5. ' candidates' → logprob: -7.35306978225708
    6. ':' → logprob: -8.353070259094238
    7. '<|end|>' → logprob: -8.353070259094238
    8. ' to' → logprob: -8.603070259094238
    9. ' ' → logprob: -8.853070259094238
    10. '	for' → logprob: -9.228070259094238

Token 140: 'nel' (ID: 10085)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7967048287391663
    2. '   ' → logprob: -1.0467047691345215
    3. 'def' → logprob: -2.6717047691345215
    4. 'al' → logprob: -2.9217047691345215
    5. 'for' → logprob: -3.9217047691345215
    6. ' def' → logprob: -4.1717047691345215
    7. ':' → logprob: -4.5467047691345215
    8. 'nelle' → logprob: -5.1717047691345215
    9. ' to' → logprob: -5.5467047691345215
    10. ' de' → logprob: -5.9217047691345215

Token 141: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3351033627986908
    2. ' for' → logprob: -1.8351033926010132
    3. '<|end|>' → logprob: -2.5851032733917236
    4. ':' → logprob: -4.210103511810303
    5. '    
' → logprob: -4.835103511810303
    6. '
' → logprob: -5.210103511810303
    7. '<|end|>' → logprob: -5.210103511810303
    8. ',' → logprob: -5.210103511810303
    9. 'for' → logprob: -5.335103511810303
    10. 'def' → logprob: -7.585103511810303

Token 142: ' filter' (ID: 6690)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5585533976554871
    2. ' for' → logprob: -1.4335534572601318
    3. '   ' → logprob: -2.683553457260132
    4. 'result' → logprob: -4.058553218841553
    5. 'print' → logprob: -4.183553218841553
    6. 'found' → logprob: -4.308553218841553
    7. ' result' → logprob: -4.808553218841553
    8. 'def' → logprob: -4.808553218841553
    9. 'c' → logprob: -5.183553218841553
    10. ' print' → logprob: -5.558553218841553

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7158520817756653
    2. '(' → logprob: -0.9658520817756653
    3. '(lambda' → logprob: -3.2158520221710205
    4. '   ' → logprob: -3.3408520221710205
    5. '_candidates' → logprob: -3.9658520221710205
    6. ' and' → logprob: -5.3408522605896
    7. ')' → logprob: -5.7158522605896
    8. ' ,' → logprob: -5.8408522605896
    9. '(
' → logprob: -5.9658522605896
    10. ' =' → logprob: -5.9658522605896

Token 144: ' reduce' (ID: 10389)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.297101616859436
    2. ' map' → logprob: -1.547101616859436
    3. 'lambda' → logprob: -1.672101616859436
    4. ' lambda' → logprob: -1.797101616859436
    5. '   ' → logprob: -3.0471014976501465
    6. ' list' → logprob: -3.1721014976501465
    7. 'reduce' → logprob: -3.5471014976501465
    8. 'list' → logprob: -4.4221014976501465
    9. 'filter' → logprob: -4.9221014976501465
    10. ' reduce' → logprob: -5.1721014976501465

Token 145: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35676899552345276
    2. '   ' → logprob: -1.9817689657211304
    3. '(' → logprob: -2.48176908493042
    4. '(lambda' → logprob: -2.98176908493042
    5. '(
' → logprob: -4.35676908493042
    6. ' ,' → logprob: -5.35676908493042
    7. ' and' → logprob: -5.73176908493042
    8. ')' → logprob: -6.73176908493042
    9. '_candidates' → logprob: -6.98176908493042
    10. '<|end|>' → logprob: -7.48176908493042

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5366279482841492
    2. ',' → logprob: -1.036628007888794
    3. '(' → logprob: -3.161628007888794
    4. '<|end|>' → logprob: -5.286627769470215
    5. ' (' → logprob: -5.411627769470215
    6. ' ,' → logprob: -6.161627769470215
    7. ')' → logprob: -6.161627769470215
    8. '(
' → logprob: -6.911627769470215
    9. ' and' → logprob: -6.911627769470215
    10. '(lambda' → logprob: -7.536627769470215

Token 147: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07343226671218872
    2. 'for' → logprob: -4.073432445526123
    3. ' for' → logprob: -4.573432445526123
    4. 'c' → logprob: -4.948432445526123
    5. 'ans' → logprob: -5.198432445526123
    6. 'def' → logprob: -5.448432445526123
    7. 'valid' → logprob: -5.448432445526123
    8. ' ans' → logprob: -5.573432445526123
    9. 'result' → logprob: -6.073432445526123
    10. 'max' → logprob: -6.323432445526123

Token 148: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.7306745648384094
    2. ' =' → logprob: -0.8556745648384094
    3. '=' → logprob: -2.7306745052337646
    4. 'ults' → logprob: -3.7306745052337646
    5. 'ultat' → logprob: -6.480674743652344
    6. 'u' → logprob: -6.855674743652344
    7. '   ' → logprob: -7.480674743652344
    8. ' ult' → logprob: -7.730674743652344
    9. 't' → logprob: -8.230674743652344
    10. 'ul' → logprob: -8.730674743652344

Token 149: ' list' (ID: 1562)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5882043242454529
    2. 'max' → logprob: -0.8382043242454529
    3. ' list' → logprob: -5.088204383850098
    4. 'reduce' → logprob: -5.713204383850098
    5. 'list' → logprob: -6.588204383850098
    6. ' reduce' → logprob: -7.088204383850098
    7. '   ' → logprob: -8.838204383850098
    8. '[max' → logprob: -9.213204383850098
    9. ' [' → logprob: -9.963204383850098
    10. 'min' → logprob: -10.463204383850098

Token 150: '(filter' (ID: 36366)
  Prédit: '(filter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(filter' → logprob: -5.7053759519476444e-05
    2. '(' → logprob: -9.875057220458984
    3. '(
' → logprob: -12.375057220458984
    4. '   ' → logprob: -14.250057220458984
    5. 'filter' → logprob: -15.250057220458984
    6. '(Filter' → logprob: -16.250057220458984
    7. '	filter' → logprob: -16.375057220458984
    8. '(f' → logprob: -16.500057220458984
    9. '.filter' → logprob: -16.875057220458984
    10. '(

' → logprob: -17.500057220458984

Token 151: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.500015258789062
    3. '(
' → logprob: -12.375015258789062
    4. ' (' → logprob: -14.250015258789062
    5. '(None' → logprob: -14.875015258789062
    6. 'lambda' → logprob: -16.375015258789062
    7. '   ' → logprob: -16.750015258789062
    8. '(l' → logprob: -17.000015258789062
    9. ')' → logprob: -18.750015258789062
    10. ' lambda' → logprob: -19.000015258789062

Token 152: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07565297931432724
    2. ' d' → logprob: -3.450653076171875
    3. 'x' → logprob: -3.700653076171875
    4. ' k' → logprob: -5.325653076171875
    5. ' c' → logprob: -5.325653076171875
    6. ' a' → logprob: -6.575653076171875
    7. 'd' → logprob: -6.700653076171875
    8. ' ' → logprob: -7.825653076171875
    9. ' lambda' → logprob: -7.825653076171875
    10. ' f' → logprob: -7.950653076171875

Token 153: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004634234122931957
    2. ' :' → logprob: -5.379634380340576
    3. 'd' → logprob: -12.129633903503418
    4. ':d' → logprob: -12.629633903503418
    5. ',' → logprob: -13.754633903503418
    6. 'res' → logprob: -14.379633903503418
    7. ':return' → logprob: -14.379633903503418
    8. ':
' → logprob: -14.504633903503418
    9. ':not' → logprob: -14.629633903503418
    10. '   ' → logprob: -14.879633903503418

Token 154: ' M' (ID: 391)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.45885005593299866
    2. 'N' → logprob: -1.0838500261306763
    3. '(d' → logprob: -4.458849906921387
    4. ' d' → logprob: -4.958849906921387
    5. 'M' → logprob: -5.583849906921387
    6. ' N' → logprob: -5.958849906921387
    7. '(N' → logprob: -6.708849906921387
    8. '   ' → logprob: -6.958849906921387
    9. 'all' → logprob: -7.333849906921387
    10. ' ' → logprob: -7.583849906921387

Token 155: '//' (ID: 393)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8436764478683472
    2. '%d' → logprob: -0.8436764478683472
    3. ' %' → logprob: -1.9686764478683472
    4. '%e' → logprob: -10.718676567077637
    5. '%i' → logprob: -11.093676567077637
    6. '%D' → logprob: -11.093676567077637
    7. '%s' → logprob: -11.218676567077637
    8. ' ' → logprob: -11.343676567077637
    9. '%c' → logprob: -11.843676567077637
    10. ' ' → logprob: -12.218676567077637

Token 156: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020795092859771103
    2. ' d' → logprob: -8.500207901000977
    3. ' ' → logprob: -13.250207901000977
    4. '
' → logprob: -13.875207901000977
    5. '   ' → logprob: -14.375207901000977
    6. '	d' → logprob: -15.375207901000977
    7. 'N' → logprob: -15.625207901000977
    8. '  ' → logprob: -16.000207901000977
    9. '(d' → logprob: -16.250207901000977
    10. ')d' → logprob: -16.312707901000977

Token 157: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2525566816329956
    2. ' >=' → logprob: -1.7525566816329956
    3. '<=' → logprob: -3.627556800842285
    4. ' <=' → logprob: -4.627556800842285
    5. '*' → logprob: -4.752556800842285
    6. '==' → logprob: -6.377556800842285
    7. '>' → logprob: -7.002556800842285
    8. ' *' → logprob: -7.127556800842285
    9. '%' → logprob: -7.752556800842285
    10. ' ==' → logprob: -8.252556800842285

Token 158: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015812745550647378
    2. ' N' → logprob: -8.875158309936523
    3. 'd' → logprob: -11.500158309936523
    4. '   ' → logprob: -13.125158309936523
    5. '	N' → logprob: -13.875158309936523
    6. ' ' → logprob: -13.875158309936523
    7. '2' → logprob: -14.000158309936523
    8. '100' → logprob: -14.125158309936523
    9. '1' → logprob: -14.375158309936523
    10. '  ' → logprob: -15.125158309936523

Token 159: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22136826813220978
    2. 'and' → logprob: -1.9713683128356934
    3. ',' → logprob: -2.8463683128356934
    4. ' ,' → logprob: -6.846368312835693
    5. '   ' → logprob: -8.721367835998535
    6. ' ' → logprob: -11.346367835998535
    7. '    ' → logprob: -12.596367835998535
    8. '  ' → logprob: -12.846367835998535
    9. ' ' → logprob: -13.221367835998535
    10. 'res' → logprob: -13.221367835998535

Token 160: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02634384296834469
    2. ' candidates' → logprob: -3.651343822479248
    3. '   ' → logprob: -10.776344299316406
    4. ' c' → logprob: -11.651344299316406
    5. ' ' → logprob: -11.901344299316406
    6. 'cand' → logprob: -13.276344299316406
    7. ' candidats' → logprob: -13.776344299316406
    8. '  ' → logprob: -14.151344299316406
    9. '_candidates' → logprob: -14.151344299316406
    10. ')c' → logprob: -14.151344299316406

Token 161: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018852073117159307
    2. ' ))' → logprob: -8.750188827514648
    3. '))
' → logprob: -11.125188827514648
    4. '   ' → logprob: -12.375188827514648
    5. ')))' → logprob: -12.500188827514648
    6. ')' → logprob: -12.750188827514648
    7. ' ' → logprob: -13.125188827514648
    8. ',' → logprob: -13.875188827514648
    9. '));' → logprob: -15.375188827514648
    10. '))

' → logprob: -15.750188827514648

Token 162: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2144239991903305
    2. '[' → logprob: -2.589423894882202
    3. '   ' → logprob: -3.089423894882202
    4. '
' → logprob: -3.839423894882202
    5. ')
' → logprob: -3.964423894882202
    6. '.sort' → logprob: -3.964423894882202
    7. ')[' → logprob: -5.589424133300781
    8. '<|end|>' → logprob: -6.339424133300781
    9. '  
' → logprob: -6.964424133300781
    10. ' ' → logprob: -7.089424133300781

Token 163: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0253307819366455
    2. ')' → logprob: -1.1503307819366455
    3. '   ' → logprob: -1.5253307819366455
    4. 'print' → logprob: -2.6503307819366455
    5. 'max' → logprob: -4.150330543518066
    6. 'if' (adapté à ' if') → logprob: -4.650330543518066
    7. 'sorted' → logprob: -5.025330543518066
    8. ')
' → logprob: -7.025330543518066
    9. '    
' → logprob: -7.525330543518066
    10. ' if' → logprob: -7.525330543518066

Token 164: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4762633144855499
    2. ' len' → logprob: -0.9762632846832275
    3. 'len' → logprob: -7.226263523101807
    4. 'res' → logprob: -7.351263523101807
    5. ' not' → logprob: -7.476263523101807
    6. ' ' → logprob: -8.601263046264648
    7. ' found' → logprob: -9.726263046264648
    8. '(len' → logprob: -13.476263046264648
    9. '	res' → logprob: -14.226263046264648
    10. '(res' → logprob: -14.476263046264648

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004158887546509504
    2. ' :' → logprob: -5.504158973693848
    3. '>:' → logprob: -10.379158973693848
    4. '):' → logprob: -10.754158973693848
    5. '>' → logprob: -11.629158973693848
    6. ':
' → logprob: -12.629158973693848
    7. '.' → logprob: -12.754158973693848
    8. ':**' → logprob: -13.004158973693848
    9. '():' → logprob: -13.754158973693848
    10. ' and' → logprob: -13.754158973693848

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00597430020570755
    2. '   ' → logprob: -5.255974292755127
    3. 'print' → logprob: -7.380974292755127
    4. ' print' → logprob: -9.255974769592285
    5. '    ' → logprob: -12.005974769592285
    6. '    
' → logprob: -12.880974769592285
    7. '           ' → logprob: -13.005974769592285
    8. '
' → logprob: -13.505974769592285
    9. '        
' → logprob: -13.630974769592285
    10. '     ' → logprob: -13.755974769592285

Token 167: ' found' (ID: 2491)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12753744423389435
    2. '       ' → logprob: -2.377537488937378
    3. ' print' → logprob: -4.252537250518799
    4. '   ' → logprob: -4.627537250518799
    5. 'found' (adapté à ' found') → logprob: -6.002537250518799
    6. 'res' → logprob: -8.127537727355957
    7. ' found' → logprob: -9.502537727355957
    8. ' res' → logprob: -10.877537727355957
    9. 'return' → logprob: -10.877537727355957
    10. '	print' → logprob: -11.377537727355957

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001170225441455841
    2. '=' → logprob: -6.8761701583862305
    3. ' +=' → logprob: -9.12617015838623
    4. ' ' → logprob: -10.62617015838623
    5. '=len' → logprob: -13.62617015838623
    6. '+=' → logprob: -13.75117015838623
    7. '    ' → logprob: -15.00117015838623
    8. ' |=' → logprob: -15.00117015838623
    9. ' =)' → logprob: -15.00117015838623
    10. ',' → logprob: -15.62617015838623

Token 169: ' reduce' (ID: 10389)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03120352141559124
    2. ' max' → logprob: -3.531203508377075
    3. 'res' → logprob: -6.656203746795654
    4. ' res' → logprob: -9.281203269958496
    5. 'min' → logprob: -10.281203269958496
    6. 'reduce' → logprob: -11.156203269958496
    7. 'M' → logprob: -11.531203269958496
    8. '   ' → logprob: -11.781203269958496
    9. ' ' → logprob: -12.781203269958496
    10. ' M' → logprob: -13.906203269958496

Token 170: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5834966897964478
    2. '(max' → logprob: -0.8334966897964478
    3. '(' → logprob: -4.958496570587158
    4. 'max' → logprob: -8.583497047424316
    5. '(int' → logprob: -9.458497047424316
    6. '(min' → logprob: -9.958497047424316
    7. '(
' → logprob: -9.958497047424316
    8. '   ' → logprob: -10.083497047424316
    9. '```' → logprob: -10.208497047424316
    10. 'lambda' → logprob: -10.458497047424316

Token 171: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18327544629573822
    2. 'x' → logprob: -2.4332754611968994
    3. ' a' → logprob: -3.0582754611968994
    4. 'a' → logprob: -3.8082754611968994
    5. ' lambda' → logprob: -5.05827522277832
    6. 'lambda' → logprob: -6.30827522277832
    7. ' acc' → logprob: -6.93327522277832
    8. ' max' → logprob: -7.18327522277832
    9. 'max' → logprob: -8.55827522277832
    10. ' ' → logprob: -8.80827522277832

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017812274396419525
    2. ',d' → logprob: -4.767812252044678
    3. ' ,' → logprob: -5.392812252044678
    4. ',x' → logprob: -5.517812252044678
    5. ',y' → logprob: -8.517812728881836
    6. ',max' → logprob: -9.017812728881836
    7. ',res' → logprob: -9.142812728881836
    8. ',a' → logprob: -9.767812728881836
    9. ' lambda' → logprob: -10.642812728881836
    10. ',m' → logprob: -11.142812728881836

Token 173: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10023298859596252
    2. 'y' → logprob: -2.3502330780029297
    3. ' lambda' → logprob: -11.85023307800293
    4. ' ' → logprob: -11.97523307800293
    5. 'lambda' → logprob: -12.60023307800293
    6. ',y' → logprob: -12.85023307800293
    7. '	y' → logprob: -13.10023307800293
    8. ',' → logprob: -13.72523307800293
    9. '<|end|>' → logprob: -13.85023307800293
    10. '   ' → logprob: -13.85023307800293

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021758420392870903
    2. ' :' → logprob: -3.8967583179473877
    3. ',' → logprob: -6.896758556365967
    4. ':max' → logprob: -8.771758079528809
    5. ':x' → logprob: -11.146758079528809
    6. '   ' → logprob: -11.646758079528809
    7. ' ,' → logprob: -12.021758079528809
    8. ',x' → logprob: -12.646758079528809
    9. ',:' → logprob: -12.646758079528809
    10. ',max' → logprob: -12.771758079528809

Token 175: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8776025772094727
    2. 'x' → logprob: -1.1276025772094727
    3. ' max' → logprob: -1.6276025772094727
    4. 'max' → logprob: -2.7526025772094727
    5. ' min' → logprob: -9.127602577209473
    6. 'min' → logprob: -10.002602577209473
    7. ' ' → logprob: -10.127602577209473
    8. '   ' → logprob: -11.002602577209473
    9. '	x' → logprob: -11.752602577209473
    10. '>x' → logprob: -12.002602577209473

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008777535520493984
    2. 'if' → logprob: -4.758777618408203
    3. ',' → logprob: -9.133777618408203
    4. 'max' → logprob: -10.508777618408203
    5. ' ' → logprob: -11.633777618408203
    6. '*' → logprob: -12.258777618408203
    7. ',y' → logprob: -12.633777618408203
    8. ' max' → logprob: -12.883777618408203
    9. ' *' → logprob: -13.383777618408203
    10. '   ' → logprob: -13.633777618408203

Token 177: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03369906544685364
    2. ' x' → logprob: -3.4086990356445312
    3. 'y' → logprob: -11.158699035644531
    4. '   ' → logprob: -11.783699035644531
    5. '>x' → logprob: -11.783699035644531
    6. ' ' → logprob: -12.033699035644531
    7. 'M' → logprob: -12.658699035644531
    8. '(x' → logprob: -13.158699035644531
    9. ' y' → logprob: -13.158699035644531
    10. 'max' → logprob: -13.283699035644531

Token 178: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16036385297775269
    2. ' >' → logprob: -1.9103639125823975
    3. '>=' → logprob: -10.035364151000977
    4. ' ' → logprob: -10.535364151000977
    5. '>x' → logprob: -10.535364151000977
    6. 'y' → logprob: -11.285364151000977
    7. ' >=' → logprob: -11.660364151000977
    8. '>d' → logprob: -11.910364151000977
    9. '<' → logprob: -12.285364151000977
    10. '>
' → logprob: -12.910364151000977

Token 179: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026302969083189964
    2. ' y' → logprob: -3.6513030529022217
    3. ' ' → logprob: -14.1513032913208
    4. 'x' → logprob: -14.2763032913208
    5. '	y' → logprob: -14.9013032913208
    6. '   ' → logprob: -15.4013032913208
    7. ''y' → logprob: -15.4013032913208
    8. '    ' → logprob: -15.6513032913208
    9. '  ' → logprob: -16.401302337646484
    10. '<|end|>' → logprob: -16.401302337646484

Token 180: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0025764903984963894
    2. 'else' → logprob: -6.5025763511657715
    3. ',' → logprob: -6.8775763511657715
    4. ' ,' → logprob: -11.00257682800293
    5. ' y' → logprob: -11.37757682800293
    6. ' ' → logprob: -11.87757682800293
    7. ' res' → logprob: -13.37757682800293
    8. 'y' → logprob: -14.12757682800293
    9. ',y' → logprob: -14.25257682800293
    10. 'res' → logprob: -14.37757682800293

Token 181: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.251962810754776
    2. ' y' → logprob: -1.5019627809524536
    3. '   ' → logprob: -11.501962661743164
    4. '    ' → logprob: -11.876962661743164
    5. ' ' → logprob: -12.126962661743164
    6. 'x' → logprob: -12.626962661743164
    7. '	y' → logprob: -12.751962661743164
    8. '  ' → logprob: -13.751962661743164
    9. ' ' → logprob: -14.501962661743164
    10. '       ' → logprob: -14.501962661743164

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033478207886219025
    2. ',res' → logprob: -3.908478260040283
    3. ' ,' → logprob: -4.408478260040283
    4. '   ' → logprob: -8.033477783203125
    5. 'res' → logprob: -8.533477783203125
    6. '       ' → logprob: -9.783477783203125
    7. ' res' → logprob: -10.158477783203125
    8. ')' → logprob: -11.033477783203125
    9. '    ' → logprob: -11.408477783203125
    10. '(res' → logprob: -11.783477783203125

Token 183: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47413942217826843
    2. ' res' → logprob: -0.9741394519805908
    3. '   ' → logprob: -10.099139213562012
    4. '(res' → logprob: -12.349139213562012
    5. ' ' → logprob: -12.599139213562012
    6. '[' → logprob: -12.599139213562012
    7. '	res' → logprob: -13.099139213562012
    8. 'list' → logprob: -13.224139213562012
    9. 'filter' → logprob: -13.474139213562012
    10. '  ' → logprob: -14.224139213562012

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2531016767024994
    2. ')
' → logprob: -1.5031017065048218
    3. ' )
' → logprob: -7.878101825714111
    4. ' )' → logprob: -8.378101348876953
    5. '       ' → logprob: -8.503101348876953
    6. ')

' → logprob: -8.878101348876953
    7. '   ' → logprob: -9.128101348876953
    8. ')
' → logprob: -9.503101348876953
    9. ')+' → logprob: -11.253101348876953
    10. ')return' → logprob: -11.878101348876953

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07170803099870682
    2. 'print' → logprob: -3.4467079639434814
    3. '
' → logprob: -3.8217079639434814
    4. ')' → logprob: -5.5717082023620605
    5. ' print' → logprob: -5.8217082023620605
    6. '       ' → logprob: -5.8217082023620605
    7. '    
' → logprob: -6.1967082023620605
    8. '<|end|>' → logprob: -6.3217082023620605
    9. ')
' → logprob: -7.6967082023620605
    10. '        
' → logprob: -8.321707725524902

Token 186: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006856504827737808
    2. '
' → logprob: -5.881856441497803
    3. '       ' → logprob: -6.506856441497803
    4. 'print' → logprob: -6.756856441497803
    5. 'return' → logprob: -7.381856441497803
    6. '    
' → logprob: -8.256856918334961
    7. '	return' → logprob: -9.006856918334961
    8. ')' → logprob: -9.131856918334961
    9. ' return' → logprob: -9.381856918334961
    10. '<|end|>' → logprob: -9.756856918334961

Token 187: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2910853326320648
    2. ':' → logprob: -1.4160853624343872
    3. '       ' → logprob: -4.666085243225098
    4. '   ' → logprob: -7.791085243225098
    5. '0' → logprob: -10.541085243225098
    6. ' :
' → logprob: -11.916085243225098
    7. ':
' → logprob: -12.166085243225098
    8. ':

' → logprob: -12.291085243225098
    9. ' found' → logprob: -12.541085243225098
    10. ',' → logprob: -13.166085243225098

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5347739458084106
    2. 'found' → logprob: -1.4097739458084106
    3. '0' → logprob: -2.534773826599121
    4. 'print' → logprob: -2.659773826599121
    5. '   ' → logprob: -4.284773826599121
    6. ' found' → logprob: -5.159773826599121
    7. ' print' → logprob: -7.659773826599121
    8. 'return' → logprob: -8.534773826599121
    9. '```' → logprob: -9.034773826599121
    10. '
' → logprob: -9.409773826599121

Token 189: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.6347447037696838
    2. 'print' → logprob: -0.8847447037696838
    3. ' found' → logprob: -3.509744644165039
    4. '0' → logprob: -4.384744644165039
    5. '   ' → logprob: -4.634744644165039
    6. ' print' → logprob: -5.509744644165039
    7. '       ' → logprob: -8.009744644165039
    8. 'pass' → logprob: -8.259744644165039
    9. 'N' → logprob: -9.884744644165039
    10. ' N' → logprob: -10.009744644165039

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1901484727859497
    2. ' =' → logprob: -1.9401484727859497
    3. ' +=' → logprob: -3.81514835357666
    4. '+=' → logprob: -4.94014835357666
    5. '+' → logprob: -8.56514835357666
    6. ' ' → logprob: -10.19014835357666
    7. ':' → logprob: -11.19014835357666
    8. ' +' → logprob: -11.19014835357666
    9. '<|end|>' → logprob: -11.69014835357666
    10. '==' → logprob: -12.06514835357666

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10642784088850021
    2. '1' → logprob: -2.4814279079437256
    3. '-' → logprob: -4.7314276695251465
    4. ' ' → logprob: -4.8564276695251465
    5. ' -' → logprob: -7.4814276695251465
    6. 'M' → logprob: -9.481428146362305
    7. 'None' → logprob: -10.231428146362305
    8. '   ' → logprob: -10.856428146362305
    9. ' M' → logprob: -11.106428146362305
    10. 'N' → logprob: -11.606428146362305

Token 192: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1352015733718872
    2. '1' → logprob: -2.2602014541625977
    3. '-' → logprob: -3.8852014541625977
    4. ' ' → logprob: -7.260201454162598
    5. 'M' → logprob: -7.385201454162598
    6. 'N' → logprob: -9.260201454162598
    7. ' -' → logprob: -9.385201454162598
    8. 'None' → logprob: -10.510201454162598
    9. 'max' → logprob: -10.760201454162598
    10. ' M' → logprob: -12.010201454162598

Token 193: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035529087763279676
    2. '
' → logprob: -6.6285529136657715
    3. 'print' → logprob: -7.0035529136657715
    4. '<|end|>' → logprob: -7.5035529136657715
    5. 'return' → logprob: -7.8785529136657715
    6. '    
' → logprob: -8.628552436828613
    7. ')' → logprob: -9.003552436828613
    8. ' return' → logprob: -10.628552436828613
    9. '       ' → logprob: -11.128552436828613
    10. '  
' → logprob: -11.753552436828613

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03633594885468483
    2. ')' → logprob: -3.7863359451293945
    3. 'print' → logprob: -4.9113359451293945
    4. '
' → logprob: -5.7863359451293945
    5. '<|end|>' → logprob: -6.4113359451293945
    6. 'return' → logprob: -7.9113359451293945
    7. '    
' → logprob: -8.161335945129395
    8. ' print' → logprob: -10.036335945129395
    9. ' return' → logprob: -10.161335945129395
    10. '	return' → logprob: -10.536335945129395

Token 195: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014359298162162304
    2. 'return' → logprob: -4.639359474182129
    3. '   ' → logprob: -5.389359474182129
    4. ' print' → logprob: -10.639359474182129
    5. ' return' → logprob: -13.139359474182129
    6. '    
' → logprob: -14.639359474182129
    7. '```' → logprob: -14.889359474182129
    8. '	print' → logprob: -15.389359474182129
    9. '
' → logprob: -15.514359474182129
    10. '  ' → logprob: -16.014358520507812

Token 196: ' décl' (ID: 90087)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001603652024641633
    2. 'return' → logprob: -7.376603603363037
    3. '   ' → logprob: -7.626603603363037
    4. ' print' → logprob: -7.626603603363037
    5. ' return' → logprob: -13.251604080200195
    6. 'if' → logprob: -16.876604080200195
    7. '```' → logprob: -17.001604080200195
    8. ' ' → logprob: -17.251604080200195
    9. 'def' → logprob: -17.501604080200195
    10. 'result' → logprob: -17.626604080200195

Token 197: 'enche' (ID: 163916)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0061200447380542755
    2. 'arer' → logprob: -6.131120204925537
    3. 'are' → logprob: -6.381120204925537
    4. 'enche' → logprob: -7.631120204925537
    5. '   ' → logprob: -7.881120204925537
    6. 'a' → logprob: -8.756119728088379
    7. 'ara' → logprob: -8.881119728088379
    8. 'ared' → logprob: -9.006119728088379
    9. 'er' → logprob: -9.256119728088379
    10. 'arat' → logprob: -9.381119728088379

Token 198: 'ment' (ID: 508)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6153969764709473
    2. 'return' → logprob: -1.8653969764709473
    3. ' print' → logprob: -1.9903969764709473
    4. '   ' → logprob: -2.2403969764709473
    5. ' return' → logprob: -2.8653969764709473
    6. 'found' → logprob: -6.365396976470947
    7. ' found' → logprob: -6.990396976470947
    8. ' if' → logprob: -7.240396976470947
    9. '       ' → logprob: -8.240396499633789
    10. 'def' → logprob: -8.365396499633789

Token 199: ' classique' (ID: 76895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2555379271507263
    2. 'print' → logprob: -1.505537986755371
    3. ' print' → logprob: -5.630537986755371
    4. 'return' → logprob: -11.380537986755371
    5. '	print' → logprob: -13.130537986755371
    6. ' return' → logprob: -14.255537986755371
    7. 'if' → logprob: -15.130537986755371
    8. 'def' → logprob: -15.505537986755371
    9. '_print' → logprob: -15.630537986755371
    10. 'for' → logprob: -16.005537033081055

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14155897498130798
    2. '
' → logprob: -2.266558885574341
    3. 'print' → logprob: -3.641558885574341
    4. '    
' → logprob: -7.39155912399292
    5. 'return' → logprob: -7.39155912399292
    6. ' print' → logprob: -7.64155912399292
    7. ' return' → logprob: -9.391558647155762
    8. '<|end|>' → logprob: -9.516558647155762
    9. 'def' → logprob: -9.891558647155762
    10. '
' → logprob: -10.516558647155762

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25227463245391846
    2. 'print' → logprob: -1.5022746324539185
    3. 'return' → logprob: -8.752274513244629
    4. ' print' → logprob: -9.252274513244629
    5. 'if' → logprob: -9.502274513244629
    6. 'def' → logprob: -12.377274513244629
    7. 'abc' → logprob: -12.877274513244629
    8. '
' → logprob: -13.002274513244629
    9. '	print' → logprob: -13.002274513244629
    10. '    
' → logprob: -13.377274513244629

Token 202: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006156971794553101
    2. 'return' → logprob: -8.000616073608398
    3. '   ' → logprob: -8.250616073608398
    4. ' print' → logprob: -10.875616073608398
    5. 'pr' → logprob: -17.0006160736084
    6. ' return' → logprob: -17.1256160736084
    7. '	print' → logprob: -17.6256160736084
    8. 'if' → logprob: -19.5006160736084
    9. '```' → logprob: -19.7506160736084
    10. 'prin' → logprob: -20.2506160736084

Token 203: '(found' (ID: 105397)
  Prédit: '(found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(found' → logprob: -1.1279553291387856e-05
    2. 'found' → logprob: -12.000011444091797
    3. '(' → logprob: -12.250011444091797
    4. ' (' → logprob: -16.000011444091797
    5. ' found' → logprob: -16.875011444091797
    6. '(f' → logprob: -17.000011444091797
    7. '()' → logprob: -18.125011444091797
    8. '(find' → logprob: -18.250011444091797
    9. '(max' → logprob: -18.250011444091797
    10. '((' → logprob: -19.875011444091797

Token 204: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.25000286102295
    3. '))' → logprob: -15.25000286102295
    4. ')
' → logprob: -15.87500286102295
    5. ')`' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '*' → logprob: -16.750001907348633
    8. ' ' → logprob: -17.750001907348633
    9. ')}' → logprob: -17.875001907348633
    10. '`)' → logprob: -17.875001907348633

Token 205: 'abc' (ID: 26682)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5800741314888
    2. '<|end|>' → logprob: -0.8300741314888
    3. '<|end|>' → logprob: -6.955074310302734
    4. '```' → logprob: -7.455074310302734
    5. '(' → logprob: -7.580074310302734
    6. '#' → logprob: -7.830074310302734
    7. '
' → logprob: -8.205074310302734
    8. '()' → logprob: -8.205074310302734
    9. ':' → logprob: -8.455074310302734
    10. '[' → logprob: -8.830074310302734

Token 206: '112' (ID: 12307)
  Prédit: '112'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '112' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.000001907348633
    3. '_' → logprob: -16.625001907348633
    4. '12' → logprob: -17.625001907348633
    5. '111' → logprob: -18.375001907348633
    6. '```' → logprob: -18.750001907348633
    7. '114' → logprob: -18.875001907348633
    8. '11' → logprob: -19.125001907348633
    9. 'def' → logprob: -19.875001907348633
    10. '123' → logprob: -20.000001907348633

Token 207: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.106736039626412e-05
    2. '_' → logprob: -10.500031471252441
    3. '_def' → logprob: -12.875031471252441
    4. 'def' → logprob: -15.250031471252441
    5. ' _' → logprob: -15.375031471252441
    6. '_dl' → logprob: -15.625031471252441
    7. '_df' → logprob: -16.750030517578125
    8. '_s' → logprob: -17.500030517578125
    9. ''_' → logprob: -17.500030517578125
    10. '_div' → logprob: -17.750030517578125

Token 208: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20148088037967682
    2. '(' → logprob: -1.7014808654785156
    3. '(
' → logprob: -10.826480865478516
    4. '()
' → logprob: -11.201480865478516
    5. '();' → logprob: -11.701480865478516
    6. '()`' → logprob: -12.701480865478516
    7. '#' → logprob: -12.826480865478516
    8. '(

' → logprob: -12.826480865478516
    9. ' ()' → logprob: -13.326480865478516
    10. '()

' → logprob: -13.326480865478516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 152
Précision stricte (1ère position): 39.81%
Précision adaptée (1ère position): 41.75%
Précision (top 10): 73.79%
================================================================================
