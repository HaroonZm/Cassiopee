================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

N, M = map(int, input().split())

# Je stocke les interrupteurs comme demandé
switches = []
for _ in range(M):
    data = list(map(int, input().split()))
    switches.append(data)

p = list(map(int, input().split()))
result = 0

# Boucle sur toutes les combinaisons possible (ça peut être long pour grand N...)
for comb in itertools.product([0, 1], repeat=N):
    all_good = True
    for j in range(M):
        cnt = 0
        # Le premier élément c'est le nombre d'éléments suivants, pas utile ici
        for idx in switches[j][1:]:
            cnt += comb[idx - 1]  # décalé d'un à cause de 1-based
        # Condition un peu lourde mais c'est la consigne
        if cnt % 2 != p[j]:
            all_good = False
            break
    if all_good:
        result = result + 1 # J'aurais pu faire ++ mais bon...

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.310693111619912e-05
    2. '\' → logprob: -11.750042915344238
    3. 'import' → logprob: -11.875042915344238
    4. '(' → logprob: -12.250042915344238
    5. ' as' → logprob: -12.625042915344238
    6. '```' → logprob: -12.625042915344238
    7. 'as' → logprob: -12.750042915344238
    8. ',' → logprob: -12.750042915344238
    9. '\.' → logprob: -13.625042915344238
    10. '.import' → logprob: -14.250042915344238

Token 4: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2321624755859375
    2. '.' → logprob: -1.3571624755859375
    3. '_' → logprob: -1.3571624755859375
    4. ' =' → logprob: -2.6071624755859375
    5. ',' → logprob: -2.8571624755859375
    6. ' ' → logprob: -2.9821624755859375
    7. ')' → logprob: -5.4821624755859375
    8. '  ' → logprob: -6.2321624755859375
    9. '   ' → logprob: -6.9821624755859375
    10. 'T' → logprob: -7.1071624755859375

Token 5: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2934907376766205
    2. ' K' → logprob: -1.6684907674789429
    3. 'M' → logprob: -3.0434906482696533
    4. 'K' → logprob: -4.043490886688232
    5. ' ' → logprob: -8.418490409851074
    6. ' itertools' → logprob: -9.793490409851074
    7. ' =' → logprob: -10.043490409851074
    8. ' k' → logprob: -10.543490409851074
    9. ' T' → logprob: -10.605990409851074
    10. 'r' → logprob: -11.043490409851074

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012554391287267208
    2. '=' → logprob: -4.387554168701172
    3. ',' → logprob: -10.887554168701172
    4. ' ' → logprob: -11.262554168701172
    5. ' ,' → logprob: -12.262554168701172
    6. '<|end|>' → logprob: -12.637554168701172
    7. ' =
' → logprob: -13.387554168701172
    8. ')' → logprob: -13.637554168701172
    9. '```' → logprob: -14.762554168701172
    10. ' =)' → logprob: -14.762554168701172

Token 7: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1793963611125946
    2. 'map' → logprob: -2.429396390914917
    3. ' ' → logprob: -2.679396390914917
    4. ' itertools' → logprob: -5.304396152496338
    5. ' int' → logprob: -7.429396152496338
    6. ' input' → logprob: -7.679396152496338
    7. '0' → logprob: -7.804396152496338
    8. '5' → logprob: -8.304396629333496
    9. '10' → logprob: -8.304396629333496
    10. ' list' → logprob: -9.179396629333496

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02619428001344204
    2. '(int' → logprob: -3.7761943340301514
    3. '(str' → logprob: -6.276194095611572
    4. '(lambda' → logprob: -7.026194095611572
    5. '(input' → logprob: -9.65119457244873
    6. 'int' → logprob: -10.40119457244873
    7. '(
' → logprob: -10.77619457244873
    8. ' (' → logprob: -12.15119457244873
    9. '(eval' → logprob: -12.40119457244873
    10. '(len' → logprob: -12.40119457244873

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8342586159706116
    2. '(' → logprob: -1.2092585563659668
    3. ')' → logprob: -1.4592585563659668
    4. 'input' → logprob: -4.084258556365967
    5. '(str' → logprob: -5.209258556365967
    6. '```' → logprob: -5.459258556365967
    7. '(int' → logprob: -6.709258556365967
    8. '('' → logprob: -6.959258556365967
    9. '())' → logprob: -7.459258556365967
    10. '<|end|>' → logprob: -7.709258556365967

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3868761360645294
    2. 'input' → logprob: -1.136876106262207
    3. '(input' → logprob: -12.511876106262207
    4. ')' → logprob: -14.761876106262207
    5. ' ' → logprob: -14.761876106262207
    6. ',input' → logprob: -14.761876106262207
    7. '=input' → logprob: -15.886876106262207
    8. ' )' → logprob: -16.386877059936523
    9. '	input' → logprob: -17.511877059936523
    10. '<input' → logprob: -17.761877059936523

Token 11: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7256136536598206
    2. '())' → logprob: -0.8506136536598206
    3. '()' → logprob: -2.600613594055176
    4. '().' → logprob: -4.725613594055176
    5. '(' → logprob: -5.475613594055176
    6. '(),' → logprob: -7.850613594055176
    7. '('' → logprob: -8.475613594055176
    8. '());' → logprob: -8.475613594055176
    9. '`)' → logprob: -9.100613594055176
    10. '))' → logprob: -9.475613594055176

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015127197839319706
    2. 'strip' → logprob: -6.50151252746582
    3. 'rstrip' → logprob: -12.12651252746582
    4. ')' → logprob: -12.50151252746582
    5. ' split' → logprob: -14.12651252746582
    6. 'read' → logprob: -15.00151252746582
    7. '(split' → logprob: -16.00151252746582
    8. 'spl' → logprob: -17.25151252746582
    9. '_split' → logprob: -17.62651252746582
    10. ').' → logprob: -18.12651252746582

Token 13: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144160091876984
    2. '))' → logprob: -1.7014416456222534
    3. ')))' → logprob: -10.826441764831543
    4. '),' → logprob: -13.201441764831543
    5. '())' → logprob: -13.576441764831543
    6. '(' → logprob: -13.826441764831543
    7. '()' → logprob: -14.076441764831543
    8. '()))' → logprob: -14.326441764831543
    9. ')`' → logprob: -14.451441764831543
    10. '`)' → logprob: -14.826441764831543

Token 14: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15052641928195953
    2. 'a' → logprob: -2.900526523590088
    3. 'arr' → logprob: -3.900526523590088
    4. 'numbers' → logprob: -3.900526523590088
    5. 'A' → logprob: -4.525526523590088
    6. 'data' → logprob: -5.150526523590088
    7. 'nums' → logprob: -5.150526523590088
    8. 'result' → logprob: -5.400526523590088
    9. 'items' → logprob: -5.400526523590088
    10. 'array' → logprob: -6.400526523590088

Token 15: ' Je' (ID: 4678)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4909650683403015
    2. 'nums' → logprob: -2.3659651279449463
    3. ' for' → logprob: -2.6159651279449463
    4. 'numbers' → logprob: -3.4909651279449463
    5. 'arr' → logprob: -3.8659651279449463
    6. 'elements' → logprob: -3.9909651279449463
    7. 'cards' → logprob: -4.115964889526367
    8. 'data' → logprob: -4.240964889526367
    9. 'lists' → logprob: -4.490964889526367
    10. 'lst' → logprob: -4.615964889526367

Token 16: ' stock' (ID: 6546)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.019048716872930527
    2. 'ts' → logprob: -5.019048690795898
    3. 'r' → logprob: -5.269048690795898
    4. 'n' → logprob: -5.519048690795898
    5. 'm' → logprob: -7.769048690795898
    6. 'f' → logprob: -8.019048690795898
    7. 'u' → logprob: -8.019048690795898
    8. 'ter' → logprob: -8.394048690795898
    9. 'tu' → logprob: -8.706548690795898
    10. 'it' → logprob: -8.894048690795898

Token 17: 'e' (ID: 68)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.8141633868217468
    2. 'u' → logprob: -1.4391634464263916
    3. 'r' → logprob: -1.8141634464263916
    4. 't' → logprob: -1.9391634464263916
    5. 'ute' → logprob: -5.4391632080078125
    6. 'ure' → logprob: -5.6891632080078125
    7. 'te' → logprob: -6.6891632080078125
    8. 'uer' → logprob: -6.6891632080078125
    9. 'ur' → logprob: -7.5641632080078125
    10. 'ux' → logprob: -7.9391632080078125

Token 18: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2941333055496216
    2. ' les' → logprob: -2.044133186340332
    3. '_' → logprob: -2.544133186340332
    4. 'les' → logprob: -3.794133186340332
    5. ' toutes' → logprob: -5.169133186340332
    6. 'space' → logprob: -5.669133186340332
    7. ',' → logprob: -6.544133186340332
    8. 'l' → logprob: -6.544133186340332
    9. ' l' → logprob: -6.794133186340332
    10. ' ' → logprob: -6.919133186340332

Token 19: ' interrup' (ID: 149215)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.6715576648712158
    2. ' comb' → logprob: -2.171557664871216
    3. ' éléments' → logprob: -2.296557664871216
    4. 'élé' → logprob: -2.421557664871216
    5. ' tuples' → logprob: -2.421557664871216
    6. ' permutations' → logprob: -3.171557664871216
    7. ' indices' → logprob: -3.296557664871216
    8. 'indices' → logprob: -3.421557664871216
    9. 'comb' → logprob: -3.546557664871216
    10. 'com' → logprob: -3.796557664871216

Token 20: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.0033397905062884092
    2. 't' → logprob: -6.378339767456055
    3. 'ts' → logprob: -7.003339767456055
    4. 'teur' → logprob: -7.503339767456055
    5. '```' → logprob: -9.628339767456055
    6. 'te' → logprob: -10.253339767456055
    7. 's' → logprob: -11.253339767456055
    8. 'ptions' → logprob: -11.378339767456055
    9. 'tte' → logprob: -11.878339767456055
    10. 'r' → logprob: -12.503339767456055

Token 21: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5047828555107117
    2. '_' → logprob: -1.8797829151153564
    3. '_states' → logprob: -2.0047829151153564
    4. '_et' → logprob: -3.5047829151153564
    5. 's' → logprob: -3.6297829151153564
    6. '_state' → logprob: -3.8797829151153564
    7. '_status' → logprob: -4.129782676696777
    8. '=' → logprob: -4.504782676696777
    9. '_s' → logprob: -7.129782676696777
    10. 'et' → logprob: -7.629782676696777

Token 22: ' demandé' (ID: 82780)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2734485864639282
    2. '[]' → logprob: -2.7734484672546387
    3. ' une' → logprob: -2.7734484672546387
    4. 'des' → logprob: -3.0234484672546387
    5. 'une' → logprob: -3.1484484672546387
    6. 'list' → logprob: -4.273448467254639
    7. ' tuples' → logprob: -6.273448467254639
    8. '[' → logprob: -6.523448467254639
    9. 'a' → logprob: -6.648448467254639
    10. ' list' → logprob: -6.773448467254639

Token 23: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21242272853851318
    2. 'inter' → logprob: -2.4624228477478027
    3. 'switch' → logprob: -3.4624228477478027
    4. '[' → logprob: -3.9624228477478027
    5. '_switch' → logprob: -4.087422847747803
    6. '_' → logprob: -4.462422847747803
    7. ' =' → logprob: -5.212422847747803
    8. ' inter' → logprob: -5.587422847747803
    9. '_inter' → logprob: -5.962422847747803
    10. '_s' → logprob: -6.087422847747803

Token 24: 'switch' (ID: 41694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5237903594970703
    2. 'inter' → logprob: -1.5237903594970703
    3. 'switch' → logprob: -2.1487903594970703
    4. ' switches' → logprob: -3.6487903594970703
    5. ' inter' → logprob: -4.64879035949707
    6. 'w' → logprob: -4.77379035949707
    7. 'i' → logprob: -5.77379035949707
    8. '```' → logprob: -5.89879035949707
    9. ' switch' → logprob: -6.02379035949707
    10. 'b' → logprob: -6.39879035949707

Token 25: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.053344160318374634
    2. 's' → logprob: -3.428344249725342
    3. '_' → logprob: -4.928344249725342
    4. '_es' → logprob: -4.928344249725342
    5. '_states' → logprob: -5.678344249725342
    6. '_s' → logprob: -7.053344249725342
    7. 'ers' → logprob: -8.428343772888184
    8. '_e' → logprob: -8.928343772888184
    9. '_positions' → logprob: -9.178343772888184
    10. '_indexes' → logprob: -10.553343772888184

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031469471752643585
    2. '=' → logprob: -3.7814695835113525
    3. '_' → logprob: -5.531469345092773
    4. 's' → logprob: -5.781469345092773
    5. '[' → logprob: -8.156469345092773
    6. '[]' → logprob: -8.406469345092773
    7. '=[]' → logprob: -8.906469345092773
    8. 'es' → logprob: -9.156469345092773
    9. ',' → logprob: -9.781469345092773
    10. ' =[' → logprob: -9.906469345092773

Token 27: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.37638166546821594
    2. '[' → logprob: -1.6263816356658936
    3. 'list' → logprob: -2.6263816356658936
    4. '[it' → logprob: -3.3763816356658936
    5. '[]' → logprob: -6.001381874084473
    6. '[i' → logprob: -6.126381874084473
    7. ' [' → logprob: -6.251381874084473
    8. '[int' → logprob: -6.626381874084473
    9. '[input' → logprob: -7.376381874084473
    10. ' list' → logprob: -7.751381874084473

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011759399203583598
    2. ' for' → logprob: -6.751175880432129
    3. '<|end|>' → logprob: -13.501175880432129
    4. '
' → logprob: -13.751175880432129
    5. '\n' → logprob: -13.876175880432129
    6. '```' → logprob: -14.001175880432129
    7. '.for' → logprob: -14.501175880432129
    8. '[' → logprob: -15.501175880432129
    9. '_for' → logprob: -15.501175880432129
    10. '	for' → logprob: -15.876175880432129

Token 29: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5812936425209045
    2. ' _' → logprob: -0.8312936425209045
    3. ' i' → logprob: -5.33129358291626
    4. '_i' → logprob: -7.83129358291626
    5. 'i' → logprob: -9.206294059753418
    6. ' ' → logprob: -13.331294059753418
    7. '_range' → logprob: -14.331294059753418
    8. ' ' → logprob: -14.706294059753418
    9. '```' → logprob: -15.206294059753418
    10. '_s' → logprob: -15.206294059753418

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049491774290800095
    2. 'in' → logprob: -3.0494918823242188
    3. ' ' → logprob: -8.049491882324219
    4. 's' → logprob: -8.799491882324219
    5. 'import' → logprob: -8.924491882324219
    6. 'i' → logprob: -9.674491882324219
    7. '  ' → logprob: -10.049491882324219
    8. 'n' → logprob: -10.049491882324219
    9. 'switch' → logprob: -11.174491882324219
    10. '1' → logprob: -11.299491882324219

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004151410888880491
    2. ' range' → logprob: -5.504151344299316
    3. 'it' → logprob: -9.629151344299316
    4. ' itertools' → logprob: -13.504151344299316
    5. 'switch' → logprob: -13.629151344299316
    6. 'input' → logprob: -13.754151344299316
    7. '(range' → logprob: -14.129151344299316
    8. '```' → logprob: -14.379151344299316
    9. 'ranges' → logprob: -14.379151344299316
    10. '	range' → logprob: -15.254151344299316

Token 32: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5807955861091614
    2. '(M' → logprob: -0.8307955861091614
    3. '(' → logprob: -5.330795764923096
    4. '(int' → logprob: -12.830795288085938
    5. '(
' → logprob: -15.205795288085938
    6. '(n' → logprob: -15.580795288085938
    7. 'M' → logprob: -15.580795288085938
    8. 'N' → logprob: -15.830795288085938
    9. '(S' → logprob: -16.330795288085938
    10. '(K' → logprob: -16.455795288085938

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010479353368282318
    2. ')' → logprob: -7.6260480880737305
    3. ' ):' → logprob: -8.25104808807373
    4. '):
' → logprob: -8.62604808807373
    5. ':' → logprob: -9.12604808807373
    6. '):
' → logprob: -12.62604808807373
    7. ',' → logprob: -12.75104808807373
    8. ' :' → logprob: -14.00104808807373
    9. ' )' → logprob: -14.12604808807373
    10. '+' → logprob: -14.25104808807373

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006522102747112513
    2. ' switches' → logprob: -5.381522178649902
    3. 'switch' → logprob: -7.256522178649902
    4. ' switch' → logprob: -7.506522178649902
    5. '    
' → logprob: -8.131522178649902
    6. ' s' → logprob: -9.506522178649902
    7. '    ' → logprob: -9.881522178649902
    8. '```' → logprob: -10.006522178649902
    9. '   ' → logprob: -10.256522178649902
    10. '
' → logprob: -10.506522178649902

Token 35: ' data' (ID: 1238)
  Prédit: ' switches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' switches' → logprob: -0.5455189347267151
    2. 'switch' → logprob: -0.9205189347267151
    3. '   ' → logprob: -4.54551887512207
    4. ' switch' → logprob: -4.67051887512207
    5. 's' → logprob: -6.92051887512207
    6. ' s' → logprob: -8.42051887512207
    7. 'n' → logprob: -8.54551887512207
    8. '```' → logprob: -8.67051887512207
    9. 'input' → logprob: -9.67051887512207
    10. ' ' → logprob: -9.79551887512207

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133560121059418
    2. ' =' → logprob: -1.3133560419082642
    3. '=input' → logprob: -10.563356399536133
    4. '_' → logprob: -11.438356399536133
    5. 's' → logprob: -11.563356399536133
    6. '.' → logprob: -11.938356399536133
    7. ',' → logprob: -12.063356399536133
    8. '.append' → logprob: -12.313356399536133
    9. '_input' → logprob: -12.563356399536133
    10. 'data' → logprob: -12.563356399536133

Token 37: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16052468121051788
    2. ' list' → logprob: -1.9105247259140015
    3. 'input' → logprob: -8.285524368286133
    4. ' input' → logprob: -10.785524368286133
    5. 'tuple' → logprob: -11.285524368286133
    6. ' tuple' → logprob: -12.160524368286133
    7. '[' → logprob: -12.410524368286133
    8. '[list' → logprob: -13.660524368286133
    9. ' [' → logprob: -13.785524368286133
    10. 'map' → logprob: -14.285524368286133

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00020866614067927003
    2. '(' → logprob: -8.500208854675293
    3. 'map' → logprob: -13.000208854675293
    4. '(input' → logprob: -13.625208854675293
    5. '(int' → logprob: -13.750208854675293
    6. '()' → logprob: -15.625208854675293
    7. '	map' → logprob: -16.625207901000977
    8. '(range' → logprob: -16.875207901000977
    9. ' map' → logprob: -17.000207901000977
    10. '(filter' → logprob: -17.000207901000977

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004779784067068249
    2. 'int' → logprob: -8.37547779083252
    3. '(' → logprob: -8.75047779083252
    4. '[int' → logprob: -10.12547779083252
    5. '<int' → logprob: -10.87547779083252
    6. ',int' → logprob: -11.00047779083252
    7. '=int' → logprob: -12.12547779083252
    8. ']int' → logprob: -12.87547779083252
    9. '```' → logprob: -13.50047779083252
    10. ')' → logprob: -13.87547779083252

Token 40: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.532577395439148
    2. '(input' → logprob: -1.032577395439148
    3. ',' → logprob: -2.9075775146484375
    4. '(' → logprob: -6.6575775146484375
    5. 'input' → logprob: -7.5325775146484375
    6. ')' → logprob: -8.782577514648438
    7. ',int' → logprob: -9.782577514648438
    8. ' ,' → logprob: -10.032577514648438
    9. '=input' → logprob: -10.032577514648438
    10. '<|end|>' → logprob: -10.657577514648438

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750952497124672
    2. ' input' → logprob: -3.5297510623931885
    3. '	input' → logprob: -15.90475082397461
    4. ',input' → logprob: -16.40475082397461
    5. '=input' → logprob: -16.65475082397461
    6. ' ' → logprob: -16.77975082397461
    7. '(input' → logprob: -16.77975082397461
    8. ')' → logprob: -16.90475082397461
    9. '<input' → logprob: -17.65475082397461
    10. '_input' → logprob: -17.90475082397461

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020544764993246645
    2. ')' → logprob: -9.375205039978027
    3. '()' → logprob: -10.000205039978027
    4. '.' → logprob: -10.500205039978027
    5. ').' → logprob: -11.250205039978027
    6. '.readline' → logprob: -11.500205039978027
    7. '   ' → logprob: -11.750205039978027
    8. '(' → logprob: -12.125205039978027
    9. ' .' → logprob: -12.250205039978027
    10. '('').' → logprob: -13.875205039978027

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'strip' → logprob: -13.00000286102295
    3. '(split' → logprob: -15.12500286102295
    4. 'rstrip' → logprob: -15.37500286102295
    5. 'spl' → logprob: -16.750003814697266
    6. ' split' → logprob: -16.750003814697266
    7. 'read' → logprob: -18.750003814697266
    8. 's' → logprob: -19.000003814697266
    9. ')' → logprob: -20.125003814697266
    10. '.split' → logprob: -20.625003814697266

Token 44: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15000799298286438
    2. '))' → logprob: -2.025007963180542
    3. '()' → logprob: -5.650008201599121
    4. '())' → logprob: -5.900008201599121
    5. ')' → logprob: -7.775008201599121
    6. '(' → logprob: -7.775008201599121
    7. '()))
' → logprob: -9.400008201599121
    8. '()));' → logprob: -10.275008201599121
    9. '())))' → logprob: -11.025008201599121
    10. ')))' → logprob: -11.025008201599121

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9603911638259888
    2. 'switch' → logprob: -1.3353911638259888
    3. '[' → logprob: -2.210391044616699
    4. ')' → logprob: -2.210391044616699
    5. 's' → logprob: -3.085391044616699
    6. ' switches' → logprob: -3.960391044616699
    7. '(s' → logprob: -4.335391044616699
    8. ',' → logprob: -4.335391044616699
    9. ')
' → logprob: -4.710391044616699
    10. '(' → logprob: -5.210391044616699

Token 46: ' switches' (ID: 57537)
  Prédit: ' switches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' switches' → logprob: -0.5895804762840271
    2. 'switch' → logprob: -1.0895805358886719
    3. '   ' → logprob: -2.714580535888672
    4. ')' → logprob: -4.089580535888672
    5. 's' → logprob: -4.589580535888672
    6. ' switch' → logprob: -5.089580535888672
    7. ',' → logprob: -6.464580535888672
    8. ' s' → logprob: -6.714580535888672
    9. ' k' → logprob: -7.089580535888672
    10. ' ,' → logprob: -7.339580535888672

Token 47: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.996708104154095e-05
    2. '.' → logprob: -9.250100135803223
    3. '.extend' → logprob: -12.625100135803223
    4. '.ap' → logprob: -15.625100135803223
    5. ' .' → logprob: -15.875100135803223
    6. '[' → logprob: -16.750099182128906
    7. '.app' → logprob: -17.250099182128906
    8. '=' → logprob: -17.500099182128906
    9. ').' → logprob: -17.625099182128906
    10. ' =' → logprob: -17.750099182128906

Token 48: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -4.9186317482963204e-05
    2. '(' → logprob: -10.000049591064453
    3. '((' → logprob: -12.875049591064453
    4. '(tuple' → logprob: -14.750049591064453
    5. 'data' → logprob: -15.250049591064453
    6. '(list' → logprob: -15.500049591064453
    7. '([' → logprob: -15.750049591064453
    8. '(dat' → logprob: -16.250049591064453
    9. '(s' → logprob: -16.500049591064453
    10. ' (' → logprob: -16.875049591064453

Token 49: ')

' (ID: 1029)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1624191552400589
    2. ')' → logprob: -1.9124191999435425
    3. '))' → logprob: -6.162419319152832
    4. '[])' → logprob: -10.287419319152832
    5. ' )' → logprob: -11.412419319152832
    6. '())' → logprob: -11.662419319152832
    7. '[:' → logprob: -12.287419319152832
    8. '(' → logprob: -12.412419319152832
    9. '   ' → logprob: -12.537419319152832
    10. '`)' → logprob: -12.787419319152832

Token 50: 'p' (ID: 79)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3407671451568604
    2. '
' → logprob: -1.7157671451568604
    3. 'for' → logprob: -1.9657671451568604
    4. 's' → logprob: -2.0907671451568604
    5. '#' → logprob: -2.2157671451568604
    6. ')' → logprob: -2.7157671451568604
    7. '\n' → logprob: -3.4657671451568604
    8. '```' → logprob: -4.090766906738281
    9. '[i' → logprob: -4.465766906738281
    10. '[
' → logprob: -5.215766906738281

Token 51: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39399272203445435
    2. 'oss' → logprob: -1.7689926624298096
    3. 'er' → logprob: -2.8939926624298096
    4. 'ermut' → logprob: -3.7689926624298096
    5. 'ass' → logprob: -4.018992900848389
    6. 'erm' → logprob: -4.268992900848389
    7. 'ro' → logprob: -4.893992900848389
    8. 'os' → logprob: -5.268992900848389
    9. 'rocessing' → logprob: -5.643992900848389
    10. '#' → logprob: -5.768992900848389

Token 52: ' list' (ID: 1562)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -1.0517157316207886
    2. ' ' → logprob: -1.5517157316207886
    3. '1' → logprob: -1.6767157316207886
    4. '2' → logprob: -2.301715850830078
    5. '[]' → logprob: -3.301715850830078
    6. ' []' → logprob: -3.301715850830078
    7. '0' → logprob: -3.551715850830078
    8. 'len' → logprob: -4.676715850830078
    9. ' len' → logprob: -4.676715850830078
    10. 'it' → logprob: -5.301715850830078

Token 53: '(map' (ID: 16946)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.028044573962688446
    2. '(' → logprob: -3.6530444622039795
    3. '(range' → logprob: -6.403044700622559
    4. '(map' → logprob: -10.153044700622559
    5. '(int' → logprob: -11.653044700622559
    6. 'it' → logprob: -11.778044700622559
    7. '(list' → logprob: -11.903044700622559
    8. '(en' → logprob: -12.528044700622559
    9. '(iter' → logprob: -12.778044700622559
    10. '(i' → logprob: -13.403044700622559

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0023268868681043386
    2. '(' → logprob: -6.252326965332031
    3. 'int' → logprob: -7.877326965332031
    4. '<int' → logprob: -12.252326965332031
    5. ')' → logprob: -12.377326965332031
    6. '[int' → logprob: -12.627326965332031
    7. ',int' → logprob: -13.377326965332031
    8. '=int' → logprob: -13.377326965332031
    9. ' int' → logprob: -13.877326965332031
    10. '```' → logprob: -14.252326965332031

Token 55: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8263227939605713
    2. ',' → logprob: -1.0763227939605713
    3. '(input' → logprob: -1.7013227939605713
    4. '(' → logprob: -3.4513227939605713
    5. ',int' → logprob: -5.451322555541992
    6. '(int' → logprob: -6.451322555541992
    7. ' ,' → logprob: -6.826322555541992
    8. 'input' → logprob: -8.576322555541992
    9. '```' → logprob: -10.201322555541992
    10. '(),' → logprob: -10.451322555541992

Token 56: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3871195614337921
    2. ' input' → logprob: -1.1371195316314697
    3. 'int' → logprob: -9.01211929321289
    4. '(input' → logprob: -9.13711929321289
    5. ')' → logprob: -11.88711929321289
    6. ',input' → logprob: -12.26211929321289
    7. ' int' → logprob: -12.88711929321289
    8. 'list' → logprob: -13.88711929321289
    9. '=input' → logprob: -14.38711929321289
    10. '[input' → logprob: -14.51211929321289

Token 57: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7921982407569885
    2. '().' → logprob: -1.0421981811523438
    3. '(' → logprob: -1.9171981811523438
    4. '()' → logprob: -3.4171981811523438
    5. '()(' → logprob: -5.292198181152344
    6. '(),' → logprob: -5.417198181152344
    7. ',' → logprob: -6.792198181152344
    8. ' (' → logprob: -7.417198181152344
    9. ',int' → logprob: -7.417198181152344
    10. ')' → logprob: -7.667198181152344

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.500000953674316
    3. ' split' → logprob: -15.625000953674316
    4. '(split' → logprob: -15.750000953674316
    5. 'spl' → logprob: -15.875000953674316
    6. 'rstrip' → logprob: -18.375
    7. '.split' → logprob: -19.125
    8. 'plit' → logprob: -19.5
    9. 's' → logprob: -19.625
    10. ')' → logprob: -20.125

Token 59: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.32749903202056885
    2. ')' → logprob: -1.5774990320205688
    3. '()))' → logprob: -2.8274989128112793
    4. '())' → logprob: -4.952498912811279
    5. '()' → logprob: -5.202498912811279
    6. '(' → logprob: -6.952498912811279
    7. ')(' → logprob: -10.952499389648438
    8. '()));' → logprob: -11.077499389648438
    9. ')))' → logprob: -11.327499389648438
    10. ')>' → logprob: -11.577499389648438

Token 60: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23483909666538239
    2. 'result' → logprob: -2.8598392009735107
    3. 'count' → logprob: -2.9848392009735107
    4. 'valid' → logprob: -3.4848392009735107
    5. 'answer' → logprob: -4.234838962554932
    6. '
' → logprob: -4.359838962554932
    7. ' for' → logprob: -4.484838962554932
    8. 'ans' → logprob: -4.734838962554932
    9. 'res' → logprob: -5.234838962554932
    10. 'possible' → logprob: -5.609838962554932

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08708642423152924
    2. 's' → logprob: -2.9620864391326904
    3. '=' → logprob: -3.4620864391326904
    4. '_' → logprob: -8.71208667755127
    5. '(' → logprob: -9.58708667755127
    6. ' ' → logprob: -11.21208667755127
    7. ')' → logprob: -11.33708667755127
    8. ':' → logprob: -11.71208667755127
    9. ' s' → logprob: -11.83708667755127
    10. 'space' → logprob: -11.96208667755127

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6338953971862793
    2. '0' → logprob: -0.7588953971862793
    3. '[]' → logprob: -7.383895397186279
    4. ' []' → logprob: -7.883895397186279
    5. 'sum' → logprob: -9.633895874023438
    6. ' sum' → logprob: -9.883895874023438
    7. '1' → logprob: -10.633895874023438
    8. 'len' → logprob: -10.633895874023438
    9. ' list' → logprob: -10.633895874023438
    10. ' [' → logprob: -10.758895874023438

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010774685069918633
    2. 'sum' → logprob: -7.751077651977539
    3. 'False' → logprob: -8.001077651977539
    4. '[]' → logprob: -8.501077651977539
    5. ' ' → logprob: -10.376077651977539
    6. '[' → logprob: -10.376077651977539
    7. 'len' → logprob: -10.626077651977539
    8. '(' → logprob: -11.876077651977539
    9. '[]
' → logprob: -12.876077651977539
    10. 'int' → logprob: -13.376077651977539

Token 64: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008782025426626205
    2. '
' → logprob: -4.883781909942627
    3. ' for' → logprob: -6.758781909942627
    4. '```' → logprob: -12.508782386779785
    5. '\n' → logprob: -13.133782386779785
    6. '' → logprob: -13.383782386779785
    7. '

' → logprob: -13.508782386779785
    8. ' 
' → logprob: -13.508782386779785
    9. '<|end|>' → logprob: -14.383782386779785
    10. '\' → logprob: -14.383782386779785

Token 65: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.506661833962426e-05
    2. ' for' → logprob: -9.50008487701416
    3. 'f' → logprob: -12.00008487701416
    4. '
' → logprob: -12.87508487701416
    5. 'fo' → logprob: -14.75008487701416
    6. '```' → logprob: -14.87508487701416
    7. 'import' → logprob: -16.250085830688477
    8. 'from' → logprob: -16.250085830688477
    9. '#' → logprob: -17.250085830688477
    10. '' → logprob: -17.375085830688477

Token 66: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008401192026212811
    2. ' for' → logprob: -7.125840187072754
    3. 'from' → logprob: -10.750840187072754
    4. 'import' → logprob: -11.375840187072754
    5. '#' → logprob: -13.750840187072754
    6. '```' → logprob: -13.750840187072754
    7. 'For' → logprob: -16.000839233398438
    8. 'range' → logprob: -16.250839233398438
    9. 'all' → logprob: -16.750839233398438
    10. 's' → logprob: -17.250839233398438

Token 67: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.11161544173955917
    2. 'cles' → logprob: -2.3616154193878174
    3. 'c' → logprob: -4.8616156578063965
    4. 'cler' → logprob: -5.7366156578063965
    5. 'cl' → logprob: -8.236615180969238
    6. 'clé' → logprob: -9.486615180969238
    7. '```' → logprob: -11.611615180969238
    8. 'r' → logprob: -12.236615180969238
    9. '_' → logprob: -12.361615180969238
    10. '#' → logprob: -12.486615180969238

Token 68: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2811882495880127
    2. 'for' → logprob: -1.4061882495880127
    3. ' over' → logprob: -11.031188011169434
    4. 'from' → logprob: -12.406188011169434
    5. 'over' → logprob: -12.656188011169434
    6. '(' → logprob: -13.156188011169434
    7. ' in' → logprob: -13.406188011169434
    8. '`' → logprob: -14.031188011169434
    9. ' through' → logprob: -14.031188011169434
    10. ':' → logprob: -14.156188011169434

Token 69: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0789366066455841
    2. ' range' → logprob: -3.0789365768432617
    3. 'all' → logprob: -4.328936576843262
    4. '_' → logprob: -5.828936576843262
    5. 'i' → logprob: -5.828936576843262
    6. '(range' → logprob: -6.328936576843262
    7. 'ranges' → logprob: -6.578936576843262
    8. '(' → logprob: -6.703936576843262
    9. 'r' → logprob: -6.703936576843262
    10. 'it' → logprob: -6.703936576843262

Token 70: ' les' (ID: 1341)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6095145344734192
    2. '(' → logprob: -0.8595145344734192
    3. 'range' → logprob: -3.7345144748687744
    4. 'ranges' → logprob: -6.2345147132873535
    5. '(it' → logprob: -6.4845147132873535
    6. 's' → logprob: -6.8595147132873535
    7. '(s' → logprob: -7.2345147132873535
    8. '(p' → logprob: -7.4845147132873535
    9. ' itertools' → logprob: -7.4845147132873535
    10. ' range' → logprob: -7.8595147132873535

Token 71: ' comb' (ID: 4134)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6831535696983337
    2. ' range' → logprob: -1.4331536293029785
    3. 'com' → logprob: -1.5581536293029785
    4. 'it' → logprob: -3.6831536293029785
    5. ' itertools' → logprob: -4.8081536293029785
    6. 'comb' → logprob: -5.3081536293029785
    7. ' combinations' → logprob: -6.0581536293029785
    8. 'ranges' → logprob: -6.6831536293029785
    9. 'p' → logprob: -6.9331536293029785
    10. ' comb' → logprob: -7.4331536293029785

Token 72: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.20965582132339478
    2. 'inations' → logprob: -1.70965576171875
    3. 'in' → logprob: -5.20965576171875
    4. 'ina' → logprob: -6.08465576171875
    5. 'inas' → logprob: -8.58465576171875
    6. 'initions' → logprob: -9.08465576171875
    7. '```' → logprob: -9.95965576171875
    8. 'inat' → logprob: -10.58465576171875
    9. 'i' → logprob: -11.08465576171875
    10. ' in' → logprob: -11.33465576171875

Token 73: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014214749448001385
    2. 'ons' → logprob: -4.389214515686035
    3. 's' → logprob: -6.639214515686035
    4. 'o' → logprob: -8.389214515686035
    5. 'tons' → logprob: -9.389214515686035
    6. '```' → logprob: -11.014214515686035
    7. 'sons' → logprob: -11.264214515686035
    8. 'to' → logprob: -11.639214515686035
    9. 'ts' → logprob: -11.764214515686035
    10. 'on' → logprob: -11.889214515686035

Token 74: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8482711911201477
    2. '(' → logprob: -0.9732711911201477
    3. ' for' → logprob: -1.723271131515503
    4. '(
' → logprob: -4.848271369934082
    5. '(range' → logprob: -6.723271369934082
    6. ' itertools' → logprob: -6.848271369934082
    7. 'import' → logprob: -7.098271369934082
    8. '(it' → logprob: -7.473271369934082
    9. 'range' → logprob: -7.598271369934082
    10. ' (' → logprob: -7.598271369934082

Token 75: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45766016840934753
    2. ' for' → logprob: -1.58266019821167
    3. 'for' → logprob: -2.08266019821167
    4. ':' → logprob: -4.58266019821167
    5. 's' → logprob: -4.70766019821167
    6. '(
' → logprob: -4.95766019821167
    7. ',' → logprob: -5.70766019821167
    8. ' (' → logprob: -5.95766019821167
    9. 'a' → logprob: -7.20766019821167
    10. '   ' → logprob: -7.95766019821167

Token 76: 'ça' (ID: 4041)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.866685688495636
    2. ' range' → logprob: -0.991685688495636
    3. ' itertools' → logprob: -2.116685628890991
    4. 'it' → logprob: -2.991685628890991
    5. '(range' → logprob: -4.86668586730957
    6. ')' → logprob: -4.86668586730957
    7. '   ' → logprob: -5.36668586730957
    8. ' (' → logprob: -5.99168586730957
    9. '(' → logprob: -5.99168586730957
    10. ' it' → logprob: -6.36668586730957

Token 77: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6608757972717285
    2. ' )' → logprob: -1.2858757972717285
    3. ' ):' → logprob: -2.4108757972717285
    4. ')' → logprob: -2.6608757972717285
    5. ' :' → logprob: -4.2858757972717285
    6. '):' → logprob: -4.4108757972717285
    7. ' for' → logprob: -5.5358757972717285
    8. ' ,' → logprob: -5.5358757972717285
    9. ' in' → logprob: -5.6608757972717285
    10. ',' → logprob: -6.2858757972717285

Token 78: ' être' (ID: 9104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0848049744963646
    2. ' be' → logprob: -3.3348050117492676
    3. ' )' → logprob: -4.584805011749268
    4. ')' → logprob: -4.959805011749268
    5. ' être' → logprob: -5.084805011749268
    6. ' for' → logprob: -5.459805011749268
    7. ' ,' → logprob: -5.584805011749268
    8. ',' → logprob: -5.959805011749268
    9. ' a' → logprob: -7.209805011749268
    10. ' continuer' → logprob: -7.209805011749268

Token 79: ' long' (ID: 1701)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3333985805511475
    2. ' itertools' → logprob: -1.5833985805511475
    3. ' range' → logprob: -1.7083985805511475
    4. ' for' → logprob: -1.8333985805511475
    5. 'for' → logprob: -3.2083985805511475
    6. ')' → logprob: -3.5833985805511475
    7. 'fait' → logprob: -4.333398818969727
    8. '0' → logprob: -4.333398818969727
    9. '2' → logprob: -4.583398818969727
    10. ' ' → logprob: -4.958398818969727

Token 80: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2936481535434723
    2. ',' → logprob: -1.66864812374115
    3. ' ' → logprob: -3.0436482429504395
    4. ' )' → logprob: -4.5436482429504395
    5. ' ,' → logprob: -6.0436482429504395
    6. '(' → logprob: -6.4186482429504395
    7. '   ' → logprob: -6.7936482429504395
    8. 's' → logprob: -7.7936482429504395
    9. '  ' → logprob: -8.168647766113281
    10. ' de' → logprob: -8.418647766113281

Token 81: ' grand' (ID: 6363)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04093293845653534
    2. ' ' → logprob: -3.5409328937530518
    3. 'range' → logprob: -4.665933132171631
    4. ' i' → logprob: -7.665933132171631
    5. ' itertools' → logprob: -8.290932655334473
    6. ' N' → logprob: -8.540932655334473
    7. '2' → logprob: -8.790932655334473
    8. ' M' → logprob: -9.290932655334473
    9. '1' → logprob: -9.540932655334473
    10. ')' → logprob: -9.790932655334473

Token 82: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5698304176330566
    2. ')' → logprob: -1.9448304176330566
    3. 'N' → logprob: -2.6948304176330566
    4. ' M' → logprob: -2.9448304176330566
    5. ' ' → logprob: -2.9448304176330566
    6. ' )' → logprob: -3.3198304176330566
    7. 'e' → logprob: -3.4448304176330566
    8. 's' → logprob: -3.8198304176330566
    9. 'M' → logprob: -4.694830417633057
    10. '   ' → logprob: -6.069830417633057

Token 83: '...)
' (ID: 66563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003288701642304659
    2. ' )' → logprob: -6.378288745880127
    3. ',' → logprob: -6.878288745880127
    4. ' ' → logprob: -9.378288269042969
    5. '):' → logprob: -9.378288269042969
    6. 's' → logprob: -9.628288269042969
    7. 'a' → logprob: -10.378288269042969
    8. 'e' → logprob: -10.378288269042969
    9. '(' → logprob: -10.753288269042969
    10. 'range' → logprob: -10.753288269042969

Token 84: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3374634385108948
    2. ' for' → logprob: -1.33746337890625
    3. '(' → logprob: -4.33746337890625
    4. ' 
' → logprob: -5.33746337890625
    5. '(
' → logprob: -7.08746337890625
    6. ' (' → logprob: -7.21246337890625
    7. 'f' → logprob: -7.46246337890625
    8. '
' → logprob: -7.58746337890625
    9. ' ' → logprob: -7.71246337890625
    10. '0' → logprob: -7.71246337890625

Token 85: ' comb' (ID: 4134)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.6220208406448364
    2. ' bits' → logprob: -1.8720208406448364
    3. ' s' → logprob: -1.9970208406448364
    4. 'i' → logprob: -2.122020721435547
    5. 's' → logprob: -2.997020721435547
    6. ' on' → logprob: -3.247020721435547
    7. ' combination' → logprob: -3.372020721435547
    8. ' bit' → logprob: -3.497020721435547
    9. ' b' → logprob: -3.622020721435547
    10. ' state' → logprob: -3.622020721435547

Token 86: ' in' (ID: 306)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.2615988254547119
    2. ' in' → logprob: -1.636598825454712
    3. 'in' → logprob: -3.386598825454712
    4. 'inations' → logprob: -7.136598587036133
    5. 'ina' → logprob: -7.886598587036133
    6. '_' → logprob: -9.261598587036133
    7. '   ' → logprob: -9.636598587036133
    8. 'INATION' → logprob: -9.636598587036133
    9. 'inat' → logprob: -9.636598587036133
    10. 'inition' → logprob: -10.511598587036133

Token 87: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0004378214362077415
    2. ' range' → logprob: -8.37543773651123
    3. 'it' → logprob: -8.62543773651123
    4. 'range' → logprob: -11.25043773651123
    5. '(it' → logprob: -12.25043773651123
    6. ' it' → logprob: -12.87543773651123
    7. ' ' → logprob: -12.87543773651123
    8. '   ' → logprob: -13.50043773651123
    9. '```' → logprob: -13.87543773651123
    10. '(' → logprob: -15.12543773651123

Token 88: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.1125556230545044
    2. '.' → logprob: -2.362555503845215
    3. '.com' → logprob: -5.112555503845215
    4. '.prod' → logprob: -6.362555503845215
    5. ' .' → logprob: -6.487555503845215
    6. '.per' → logprob: -7.362555503845215
    7. '.products' → logprob: -7.487555503845215
    8. '.c' → logprob: -7.737555503845215
    9. '.import' → logprob: -7.737555503845215
    10. '.p' → logprob: -8.737555503845215

Token 89: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.10147731006145477
    2. '(range' → logprob: -2.3514773845672607
    3. '((' → logprob: -6.976477146148682
    4. '(' → logprob: -8.22647762298584
    5. '(['' → logprob: -10.10147762298584
    6. '('' → logprob: -11.10147762298584
    7. '(([' → logprob: -12.35147762298584
    8. ' ([' → logprob: -12.47647762298584
    9. ' (' → logprob: -13.60147762298584
    10. '[' → logprob: -14.47647762298584

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006502558942884207
    2. ' ' → logprob: -5.131502628326416
    3. 'False' → logprob: -8.006502151489258
    4. 'True' → logprob: -8.756502151489258
    5. ' True' → logprob: -10.006502151489258
    6. ' False' → logprob: -10.256502151489258
    7. '   ' → logprob: -14.131502151489258
    8. '-' → logprob: -14.506502151489258
    9. '1' → logprob: -14.631502151489258
    10. '  ' → logprob: -15.569002151489258

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. ' ,' → logprob: -10.25003719329834
    3. '1' → logprob: -13.37503719329834
    4. ' ' → logprob: -14.87503719329834
    5. ',
' → logprob: -15.87503719329834
    6. ',

' → logprob: -16.000038146972656
    7. '2' → logprob: -17.375038146972656
    8. '

' → logprob: -18.125038146972656
    9. '-' → logprob: -18.625038146972656
    10. '‌,' → logprob: -18.875038146972656

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34844890236854553
    2. '1' → logprob: -1.2234488725662231
    3. '  ' → logprob: -14.035948753356934
    4. ' ' → logprob: -14.410948753356934
    5. '```' → logprob: -14.848448753356934
    6. '   ' → logprob: -15.035948753356934
    7. ' 
' → logprob: -15.473448753356934
    8. '-' → logprob: -15.598448753356934
    9. '2' → logprob: -15.660948753356934
    10. '0' → logprob: -15.785948753356934

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028057026211172342
    2. ' ' → logprob: -5.877805709838867
    3. '  ' → logprob: -15.127805709838867
    4. '   ' → logprob: -15.752805709838867
    5. '```' → logprob: -16.252805709838867
    6. '

' → logprob: -16.877805709838867
    7. '
' → logprob: -16.940305709838867
    8. '-' → logprob: -17.065305709838867
    9. ']' → logprob: -17.190305709838867
    10. '１' → logprob: -17.565305709838867

Token 94: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0008328551193699241
    2. ']' → logprob: -7.125833034515381
    3. '),' → logprob: -11.625832557678223
    4. ' ],' → logprob: -12.125832557678223
    5. '])' → logprob: -12.125832557678223
    6. ',' → logprob: -13.125832557678223
    7. '],[' → logprob: -13.250832557678223
    8. ''],' → logprob: -14.000832557678223
    9. ']),' → logprob: -14.375832557678223
    10. '],

' → logprob: -14.500832557678223

Token 95: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.6314259767532349
    2. ' range' → logprob: -1.0064259767532349
    3. 'repeat' → logprob: -2.7564258575439453
    4. 'range' → logprob: -3.2564258575439453
    5. ' ' → logprob: -8.381425857543945
    6. ')' → logprob: -8.506425857543945
    7. ',' → logprob: -10.756425857543945
    8. '   ' → logprob: -10.756425857543945
    9. ' r' → logprob: -10.881425857543945
    10. '```' → logprob: -11.256425857543945

Token 96: '=N' (ID: 143132)
  Prédit: '=N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=N' → logprob: -0.20146402716636658
    2. '=' → logprob: -1.701464056968689
    3. 'N' → logprob: -10.57646369934082
    4. '(N' → logprob: -11.57646369934082
    5. ')' → logprob: -11.95146369934082
    6. '=n' → logprob: -13.07646369934082
    7. ' =' → logprob: -13.32646369934082
    8. '=M' → logprob: -14.20146369934082
    9. '(' → logprob: -14.32646369934082
    10. '=len' → logprob: -14.32646369934082

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001201062579639256
    2. ')' → logprob: -6.751201152801514
    3. ':' → logprob: -11.001200675964355
    4. ' ):' → logprob: -11.751200675964355
    5. '):
' → logprob: -12.126200675964355
    6. ')):' → logprob: -15.126200675964355
    7. '():' → logprob: -16.501201629638672
    8. ')：' → logprob: -16.751201629638672
    9. ']:' → logprob: -17.001201629638672
    10. ',' → logprob: -17.251201629638672

Token 98: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13279801607131958
    2. '   ' → logprob: -2.132797956466675
    3. ':
' → logprob: -5.382798194885254
    4. '):' → logprob: -7.132798194885254
    5. ' :' → logprob: -9.382798194885254
    6. ')' → logprob: -9.632798194885254
    7. '
' → logprob: -9.632798194885254
    8. '):
' → logprob: -9.757798194885254
    9. '    
' → logprob: -10.132798194885254
    10. ' ' → logprob: -10.507798194885254

Token 99: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24701350927352905
    2. ':' → logprob: -2.122013568878174
    3. '    ' → logprob: -2.997013568878174
    4. ' on' → logprob: -4.497013568878174
    5. '       ' → logprob: -4.747013568878174
    6. '
' → logprob: -4.997013568878174
    7. '    
' → logprob: -5.372013568878174
    8. ' s' → logprob: -6.247013568878174
    9. ' ok' → logprob: -6.622013568878174
    10. ':
' → logprob: -6.997013568878174

Token 100: '_good' (ID: 108021)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.005494615063071251
    2. '_' → logprob: -6.755494594573975
    3. '(on' → logprob: -6.880494594573975
    4. 'on' → logprob: -7.380494594573975
    5. '_work' → logprob: -7.505494594573975
    6. '_ok' → logprob: -7.880494594573975
    7. '_s' → logprob: -7.880494594573975
    8. '(' → logprob: -8.005495071411133
    9. '(lambda' → logprob: -8.755495071411133
    10. '()' → logprob: -9.255495071411133

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632804960012436
    2. '=' → logprob: -3.6513280868530273
    3. '_' → logprob: -10.776328086853027
    4. ':' → logprob: -13.026328086853027
    5. ',' → logprob: -13.526328086853027
    6. ' ' → logprob: -13.901328086853027
    7. '   ' → logprob: -14.401328086853027
    8. 's' → logprob: -14.776328086853027
    9. '=True' → logprob: -14.776328086853027
    10. '  ' → logprob: -15.276328086853027

Token 102: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011049113236367702
    2. ' True' → logprob: -4.511049270629883
    3. '1' → logprob: -14.636049270629883
    4. '(True' → logprob: -14.636049270629883
    5. '=True' → logprob: -15.511049270629883
    6. '   ' → logprob: -16.511049270629883
    7. ' ' → logprob: -17.011049270629883
    8. 'true' → logprob: -17.761049270629883
    9. 'False' → logprob: -17.886049270629883
    10. 'Tr' → logprob: -18.136049270629883

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.134858176112175
    2. '
' → logprob: -2.1348581314086914
    3. '<|end|>' → logprob: -5.009858131408691
    4. '    
' → logprob: -7.009858131408691
    5. '  
' → logprob: -9.509858131408691
    6. '<|end|>' → logprob: -9.634858131408691
    7. '  ' → logprob: -10.009858131408691
    8. '   
' → logprob: -10.759858131408691
    9. '\n' → logprob: -10.884858131408691
    10. ',' → logprob: -10.884858131408691

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03936311602592468
    2. '
' → logprob: -3.414363145828247
    3. '    
' → logprob: -5.664362907409668
    4. '<|end|>' → logprob: -6.664362907409668
    5. '\n' → logprob: -8.289362907409668
    6. '  
' → logprob: -8.914362907409668
    7. ' for' → logprob: -9.039362907409668
    8. '    ' → logprob: -9.289362907409668
    9. ':' → logprob: -9.789362907409668
    10. '  ' → logprob: -9.914362907409668

Token 105: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3218211829662323
    2. 'for' (adapté à ' for') → logprob: -1.5718212127685547
    3. ' for' → logprob: -2.6968212127685547
    4. '    
' → logprob: -9.696821212768555
    5. '	for' → logprob: -11.196821212768555
    6. '
' → logprob: -12.071821212768555
    7. ' ' → logprob: -12.946821212768555
    8. '  ' → logprob: -14.071821212768555
    9. '   ' → logprob: -14.196821212768555
    10. '       ' → logprob: -15.446821212768555

Token 106: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3118087351322174
    2. 'i' → logprob: -1.686808705329895
    3. ' j' → logprob: -2.8118088245391846
    4. 'j' → logprob: -3.9368088245391846
    5. ' idx' → logprob: -6.9368085861206055
    6. ' switch' → logprob: -7.9368085861206055
    7. 'switch' → logprob: -7.9368085861206055
    8. 'idx' → logprob: -8.061808586120605
    9. ' k' → logprob: -8.186808586120605
    10. 'k' → logprob: -8.311808586120605

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003954444080591202
    2. 'in' → logprob: -6.1289544105529785
    3. ',' → logprob: -6.8789544105529785
    4. ' ' → logprob: -7.5039544105529785
    5. ' ,' → logprob: -8.753954887390137
    6. '  ' → logprob: -11.878954887390137
    7. 'range' → logprob: -12.003954887390137
    8. 's' → logprob: -12.503954887390137
    9. ' range' → logprob: -13.253954887390137
    10. '    ' → logprob: -13.753954887390137

Token 108: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34845349192619324
    2. 'range' → logprob: -1.2234535217285156
    3. '(range' → logprob: -12.723453521728516
    4. '	range' → logprob: -12.723453521728516
    5. ' xrange' → logprob: -14.098453521728516
    6. ' ' → logprob: -14.223453521728516
    7. '  ' → logprob: -15.223453521728516
    8. '.range' → logprob: -15.223453521728516
    9. '   ' → logprob: -15.598453521728516
    10. 'rang' → logprob: -15.848453521728516

Token 109: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.005034983158111572
    2. ' M' → logprob: -5.630034923553467
    3. 'M' → logprob: -7.380034923553467
    4. ' (' → logprob: -7.505034923553467
    5. '(' → logprob: -8.505035400390625
    6. '(len' → logprob: -10.380035400390625
    7. ')' → logprob: -11.255035400390625
    8. '	M' → logprob: -12.880035400390625
    9. 'len' → logprob: -13.005035400390625
    10. '   ' → logprob: -13.130035400390625

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016444525681436062
    2. ' ):' → logprob: -9.125164031982422
    3. '):
' → logprob: -10.000164031982422
    4. ':' → logprob: -12.000164031982422
    5. ')' → logprob: -12.750164031982422
    6. '):
' → logprob: -15.125164031982422
    7. '   ' → logprob: -15.500164031982422
    8. ',' → logprob: -15.750164031982422
    9. '}:' → logprob: -16.000164031982422
    10. ' ' → logprob: -16.000164031982422

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004495873581618071
    2. '   ' → logprob: -5.754496097564697
    3. '    ' → logprob: -8.129495620727539
    4. ':' → logprob: -8.379495620727539
    5. ',' → logprob: -9.129495620727539
    6. '        
' → logprob: -9.379495620727539
    7. ' s' → logprob: -9.629495620727539
    8. '
' → logprob: -9.754495620727539
    9. '#' → logprob: -9.754495620727539
    10. '<|end|>' → logprob: -9.879495620727539

Token 112: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5371061563491821
    2. 'on' → logprob: -1.7871061563491821
    3. 's' → logprob: -2.2871060371398926
    4. '       ' → logprob: -3.0371060371398926
    5. '   ' → logprob: -3.4121060371398926
    6. 'cnt' (adapté à ' cnt') → logprob: -4.287106037139893
    7. 'total' → logprob: -4.412106037139893
    8. 'sum' → logprob: -4.787106037139893
    9. ' on' → logprob: -4.912106037139893
    10. '           ' → logprob: -5.037106037139893

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03406460955739021
    2. '=' → logprob: -3.409064531326294
    3. '_on' → logprob: -8.034064292907715
    4. ' ' → logprob: -9.784064292907715
    5. 'on' → logprob: -10.909064292907715
    6. '_' → logprob: -12.409064292907715
    7. ' on' → logprob: -12.534064292907715
    8. '_ON' → logprob: -12.909064292907715
    9. '1' → logprob: -13.534064292907715
    10. '   ' → logprob: -13.784064292907715

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022690063633490354
    2. ' ' → logprob: -8.625226974487305
    3. 'sum' → logprob: -10.000226974487305
    4. ' sum' → logprob: -13.625226974487305
    5. '   ' → logprob: -14.375226974487305
    6. '1' → logprob: -17.125226974487305
    7. '  ' → logprob: -17.375226974487305
    8. '    ' → logprob: -18.125226974487305
    9. ' ' → logprob: -19.437726974487305
    10. '	sum' → logprob: -19.625226974487305

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005759088089689612
    2. 'sum' → logprob: -7.500576019287109
    3. ' ' → logprob: -10.75057601928711
    4. ' sum' → logprob: -13.50057601928711
    5. '   ' → logprob: -16.12557601928711
    6. '1' → logprob: -17.00057601928711
    7. 'len' → logprob: -18.00057601928711
    8. '	sum' → logprob: -18.12557601928711
    9. 'int' → logprob: -18.62557601928711
    10. 's' → logprob: -18.68807601928711

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03534441813826561
    2. '<|end|>' → logprob: -4.16034460067749
    3. ' ' → logprob: -4.78534460067749
    4. ' for' → logprob: -5.28534460067749
    5. '   ' → logprob: -6.41034460067749
    6. '        ' → logprob: -6.53534460067749
    7. '    ' → logprob: -7.03534460067749
    8. 'for' → logprob: -7.91034460067749
    9. '<|end|>' → logprob: -8.410344123840332
    10. '        
' → logprob: -8.660344123840332

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23523810505867004
    2. ' for' → logprob: -2.3602380752563477
    3. '   ' → logprob: -2.7352380752563477
    4. ' ' → logprob: -3.7352380752563477
    5. '<|end|>' → logprob: -4.860238075256348
    6. '    ' → logprob: -5.485238075256348
    7. '
' → logprob: -5.485238075256348
    8. 'for' → logprob: -5.735238075256348
    9. '        
' → logprob: -6.985238075256348
    10. '        ' → logprob: -6.985238075256348

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01831826940178871
    2. ' for' → logprob: -4.018318176269531
    3. '   ' → logprob: -9.268318176269531
    4. '       ' → logprob: -9.643318176269531
    5. '	for' → logprob: -12.893318176269531
    6. 'switch' → logprob: -13.018318176269531
    7. ' ' → logprob: -13.268318176269531
    8. 'indices' → logprob: -13.768318176269531
    9. '    ' → logprob: -15.393318176269531
    10. '        
' → logprob: -15.393318176269531

Token 119: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03368430957198143
    2. ' for' → logprob: -3.408684253692627
    3. '   ' → logprob: -10.783684730529785
    4. 'k' → logprob: -11.783684730529785
    5. 'indices' → logprob: -13.158684730529785
    6. ' ' → logprob: -13.283684730529785
    7. '	for' → logprob: -13.783684730529785
    8. 'i' → logprob: -14.033684730529785
    9. 'idx' → logprob: -14.158684730529785
    10. 'switch' → logprob: -14.158684730529785

Token 120: ' premier' (ID: 15506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5240308046340942
    2. 'for' → logprob: -1.0240308046340942
    3. 'len' → logprob: -3.6490306854248047
    4. 'switch' → logprob: -4.774030685424805
    5. 's' → logprob: -5.149030685424805
    6. ' len' → logprob: -6.024030685424805
    7. ' switch' → logprob: -6.649030685424805
    8. 'n' → logprob: -7.774030685424805
    9. 'range' → logprob: -7.774030685424805
    10. ' data' → logprob: -7.899030685424805

Token 121: ' élément' (ID: 99627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4392709732055664
    2. 'element' → logprob: -1.5642709732055664
    3. ' element' → logprob: -1.5642709732055664
    4. ' élément' → logprob: -2.0642709732055664
    5. 'for' → logprob: -2.1892709732055664
    6. 'élé' → logprob: -2.8142709732055664
    7. 'token' → logprob: -4.314270973205566
    8. ' token' → logprob: -5.314270973205566
    9. 'index' → logprob: -5.439270973205566
    10. ' index' → logprob: -5.939270973205566

Token 122: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4037489891052246
    2. ' is' → logprob: -1.5287489891052246
    3. ' of' → logprob: -2.0287489891052246
    4. ' de' → logprob: -2.2787489891052246
    5. ' =' → logprob: -2.4037489891052246
    6. ' in' → logprob: -3.4037489891052246
    7. 'for' → logprob: -3.4037489891052246
    8. 'switch' → logprob: -3.4037489891052246
    9. ')' → logprob: -3.9037489891052246
    10. '=' → logprob: -4.403748989105225

Token 123: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.015832815319299698
    2. 'on' → logprob: -5.015832901000977
    3. 'onten' → logprob: -6.640832901000977
    4. 'ount' → logprob: -6.765832901000977
    5. 'omm' → logprob: -7.015832901000977
    6. 'de' → logprob: -7.015832901000977
    7. 'omme' → logprob: -7.515832901000977
    8. 'omp' → logprob: -7.640832901000977
    9. 'onte' → logprob: -7.640832901000977
    10. 'nt' → logprob: -7.890832901000977

Token 124: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6490313410758972
    2. 'le' → logprob: -0.8990313410758972
    3. 'la' → logprob: -3.399031400680542
    4. 'switch' → logprob: -3.774031400680542
    5. ' le' → logprob: -5.274031162261963
    6. 'the' → logprob: -5.274031162261963
    7. ' la' → logprob: -6.899031162261963
    8. 'data' → logprob: -7.524031162261963
    9. 'l' → logprob: -7.649031162261963
    10. '1' → logprob: -7.649031162261963

Token 125: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0005361131625249982
    2. ' nombre' → logprob: -8.25053596496582
    3. 'number' → logprob: -9.00053596496582
    4. 'length' → logprob: -9.75053596496582
    5. 'num' → logprob: -10.37553596496582
    6. 'len' → logprob: -10.75053596496582
    7. 'count' → logprob: -10.87553596496582
    8. 'nb' → logprob: -12.37553596496582
    9. 'Nombre' → logprob: -12.87553596496582
    10. 'n' → logprob: -13.25053596496582

Token 126: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6576806902885437
    2. ' of' → logprob: -1.7826807498931885
    3. ' de' → logprob: -2.1576807498931885
    4. 'switch' → logprob: -3.1576807498931885
    5. 'des' → logprob: -3.4076807498931885
    6. 'd' → logprob: -3.6576807498931885
    7. '<|end|>' → logprob: -3.7826807498931885
    8. 's' → logprob: -4.032680511474609
    9. ' des' → logprob: -4.907680511474609
    10. ' d' → logprob: -5.032680511474609

Token 127: ''' (ID: 6)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.23048485815525055
    2. ' switches' → logprob: -2.605484962463379
    3. '_switch' → logprob: -3.230484962463379
    4. 's' → logprob: -3.605484962463379
    5. '<|end|>' → logprob: -3.605484962463379
    6. 'inter' → logprob: -4.230484962463379
    7. ' switch' → logprob: -5.105484962463379
    8. 'elements' → logprob: -5.355484962463379
    9. 'de' → logprob: -6.105484962463379
    10. '_inter' → logprob: -6.355484962463379

Token 128: 'élé' (ID: 15228)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.4776231050491333
    2. 'interrupt' → logprob: -1.9776231050491333
    3. 'amp' → logprob: -2.1026229858398438
    4. 'app' → logprob: -2.9776229858398438
    5. ' interrup' → logprob: -3.6026229858398438
    6. 'élé' → logprob: -3.6026229858398438
    7. 'amps' → logprob: -5.102622985839844
    8. 'comm' → logprob: -6.352622985839844
    9. 'indices' → logprob: -6.602622985839844
    10. 'switch' → logprob: -6.852622985839844

Token 129: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.006015421822667122
    2. 'ment' → logprob: -5.131015300750732
    3. 'm' → logprob: -9.88101577758789
    4. 'éments' → logprob: -10.75601577758789
    5. 'ements' → logprob: -13.25601577758789
    6. 'v' → logprob: -13.25601577758789
    7. 'phants' → logprob: -13.63101577758789
    8. '{' → logprob: -14.25601577758789
    9. '```' → logprob: -14.25601577758789
    10. 'ts' → logprob: -14.38101577758789

Token 130: ' suivants' (ID: 112219)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7536364197731018
    2. 'for' → logprob: -2.378636360168457
    3. ',' → logprob: -2.753636360168457
    4. '   ' → logprob: -2.753636360168457
    5. ')' → logprob: -3.378636360168457
    6. 'switch' → logprob: -3.378636360168457
    7. ' in' → logprob: -3.503636360168457
    8. '    ' → logprob: -3.628636360168457
    9. ' =' → logprob: -3.878636360168457
    10. '<|end|>' → logprob: -4.003636360168457

Token 131: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3650490343570709
    2. 'for' → logprob: -1.8650490045547485
    3. '+' → logprob: -2.740049123764038
    4. ',' → logprob: -3.615049123764038
    5. '   ' → logprob: -4.240048885345459
    6. ' +' → logprob: -4.240048885345459
    7. '1' → logprob: -5.115048885345459
    8. '       ' → logprob: -5.990048885345459
    9. ':' → logprob: -5.990048885345459
    10. '[' → logprob: -6.115048885345459

Token 132: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45208504796028137
    2. '<|end|>' → logprob: -1.702085018157959
    3. '    ' → logprob: -2.952085018157959
    4. '   ' → logprob: -3.327085018157959
    5. ' for' → logprob: -3.327085018157959
    6. '       ' → logprob: -4.452085018157959
    7. ',' → logprob: -5.202085018157959
    8. ' 
' → logprob: -5.202085018157959
    9. 'for' → logprob: -5.327085018157959
    10. ' so' → logprob: -5.452085018157959

Token 133: ' utile' (ID: 68237)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8563426733016968
    2. 'for' → logprob: -1.1063426733016968
    3. 'indices' → logprob: -3.4813427925109863
    4. 'the' → logprob: -3.6063427925109863
    5. '0' → logprob: -3.8563427925109863
    6. 'cnt' → logprob: -3.9813427925109863
    7. ' for' → logprob: -4.106342792510986
    8. 'count' → logprob: -4.231342792510986
    9. 'le' → logprob: -4.356342792510986
    10. 'la' → logprob: -4.481342792510986

Token 134: ' ici' (ID: 27994)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26345503330230713
    2. '<|end|>' → logprob: -2.0134549140930176
    3. 'for' → logprob: -3.0134549140930176
    4. ' ' → logprob: -4.263454914093018
    5. ',' → logprob: -4.388454914093018
    6. '   ' → logprob: -4.888454914093018
    7. '<|end|>' → logprob: -5.388454914093018
    8. '1' → logprob: -6.013454914093018
    9. '    ' → logprob: -6.388454914093018
    10. '       ' → logprob: -6.888454914093018

Token 135: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5308140516281128
    2. ' for' → logprob: -1.0308140516281128
    3. '   ' → logprob: -4.030814170837402
    4. ',' → logprob: -4.655814170837402
    5. 'for' → logprob: -4.655814170837402
    6. '<|end|>' → logprob: -4.655814170837402
    7. '    ' → logprob: -5.780814170837402
    8. ' ' → logprob: -6.405814170837402
    9. '1' → logprob: -7.030814170837402
    10. '<|end|>' → logprob: -7.780814170837402

Token 136: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4622107744216919
    2. ' for' → logprob: -1.087210774421692
    3. '    
' → logprob: -4.962210655212402
    4. ',' → logprob: -4.962210655212402
    5. '       ' → logprob: -5.087210655212402
    6. '    ' → logprob: -5.587210655212402
    7. '<|end|>' → logprob: -5.837210655212402
    8. 'for' → logprob: -6.462210655212402
    9. ' ' → logprob: -7.087210655212402
    10. ' ,' → logprob: -7.337210655212402

Token 137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3136734962463379
    2. ' for' → logprob: -1.313673496246338
    3. '       ' → logprob: -8.31367301940918
    4. '   ' → logprob: -8.81367301940918
    5. '    ' → logprob: -11.43867301940918
    6. '	for' → logprob: -12.56367301940918
    7. 'switch' → logprob: -13.93867301940918
    8. '        ' → logprob: -14.18867301940918
    9. ' ' → logprob: -14.68867301940918
    10. '        
' → logprob: -15.06367301940918

Token 138: ' idx' (ID: 14016)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12373196333646774
    2. ' k' → logprob: -2.373731851577759
    3. 'idx' → logprob: -4.748732089996338
    4. 'i' → logprob: -4.873732089996338
    5. ' idx' → logprob: -5.498732089996338
    6. ' i' → logprob: -6.248732089996338
    7. 'x' → logprob: -7.873732089996338
    8. 'index' → logprob: -9.37373161315918
    9. 'switch' → logprob: -9.37373161315918
    10. ' index' → logprob: -9.49873161315918

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1276552826166153
    2. 'in' → logprob: -2.127655267715454
    3. ' ' → logprob: -8.252655029296875
    4. '   ' → logprob: -8.627655029296875
    5. '_in' → logprob: -9.502655029296875
    6. 's' → logprob: -9.877655029296875
    7. '	in' → logprob: -10.377655029296875
    8. ',' → logprob: -10.627655029296875
    9. '  ' → logprob: -10.627655029296875
    10. '    ' → logprob: -10.877655029296875

Token 140: ' switches' (ID: 57537)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.3882039487361908
    2. ' range' → logprob: -2.0132038593292236
    3. ' switches' → logprob: -2.3882038593292236
    4. 'range' → logprob: -2.3882038593292236
    5. ' switch' → logprob: -5.638204097747803
    6. ' ' → logprob: -8.263203620910645
    7. ' data' → logprob: -8.513203620910645
    8. 'data' → logprob: -9.138203620910645
    9. '   ' → logprob: -9.513203620910645
    10. 's' → logprob: -9.638203620910645

Token 141: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015908108616713434
    2. '[' → logprob: -9.87515926361084
    3. 'j' → logprob: -10.37515926361084
    4. ' [' → logprob: -10.50015926361084
    5. '][' → logprob: -11.75015926361084
    6. '[i' → logprob: -12.50015926361084
    7. '```' → logprob: -12.50015926361084
    8. 'import' → logprob: -12.62515926361084
    9. '[s' → logprob: -13.12515926361084
    10. 's' → logprob: -13.37515926361084

Token 142: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41054368019104004
    2. '][' → logprob: -1.16054368019104
    3. '1' → logprob: -3.91054368019104
    4. ' [' → logprob: -6.535543441772461
    5. ' ' → logprob: -7.535543441772461
    6. ' ][' → logprob: -8.160543441772461
    7. ':' → logprob: -8.410543441772461
    8. '   ' → logprob: -8.535543441772461
    9. '"][' → logprob: -9.785543441772461
    10. '[i' → logprob: -9.973043441772461

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006087461486458778
    2. 'range' → logprob: -5.256087303161621
    3. ' ' → logprob: -7.756087303161621
    4. ' range' → logprob: -8.381087303161621
    5. '   ' → logprob: -9.381087303161621
    6. '[' → logprob: -10.506087303161621
    7. '```' → logprob: -10.881087303161621
    8. '  ' → logprob: -10.881087303161621
    9. ':' → logprob: -11.506087303161621
    10. '(' → logprob: -11.506087303161621

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.500108141452074e-05
    2. ':]' → logprob: -10.750035285949707
    3. ' :' → logprob: -11.750035285949707
    4. ']:' → logprob: -12.625035285949707
    5. ':].' → logprob: -13.750035285949707
    6. ':],' → logprob: -14.750035285949707
    7. '：' → logprob: -15.500035285949707
    8. '_:' → logprob: -15.750035285949707
    9. ':end' → logprob: -16.37503433227539
    10. '+:' → logprob: -16.62503433227539

Token 145: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0036143241450190544
    2. ']' → logprob: -6.25361442565918
    3. ' ]' → logprob: -6.75361442565918
    4. ']:
' → logprob: -7.75361442565918
    5. ']:
' → logprob: -9.75361442565918
    6. ']:

' → logprob: -12.12861442565918
    7. '   ' → logprob: -12.25361442565918
    8. '       ' → logprob: -12.62861442565918
    9. ' ' → logprob: -12.62861442565918
    10. ']):' → logprob: -13.12861442565918

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008218562230467796
    2. '       ' → logprob: -5.258218765258789
    3. ' if' → logprob: -6.133218765258789
    4. '        ' → logprob: -8.133218765258789
    5. '            ' → logprob: -8.508218765258789
    6. '               ' → logprob: -9.758218765258789
    7. '          ' → logprob: -9.758218765258789
    8. ' ' → logprob: -10.133218765258789
    9. '            
' → logprob: -10.258218765258789
    10. '    ' → logprob: -10.508218765258789

Token 147: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5680030584335327
    2. '           ' → logprob: -1.6930030584335327
    3. 'if' → logprob: -1.9430030584335327
    4. ' cnt' → logprob: -3.0680031776428223
    5. '       ' → logprob: -3.1930031776428223
    6. '        ' → logprob: -4.818003177642822
    7. 'cnt' (adapté à ' cnt') → logprob: -5.693003177642822
    8. '
' → logprob: -6.318003177642822
    9. '            ' → logprob: -6.568003177642822
    10. '   ' → logprob: -6.943003177642822

Token 148: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.055122267454862595
    2. '+=' → logprob: -2.9301223754882812
    3. ' ^=' → logprob: -8.680122375488281
    4. ']+=' → logprob: -10.930122375488281
    5. '   ' → logprob: -11.555122375488281
    6. '+' → logprob: -11.680122375488281
    7. ' +' → logprob: -11.680122375488281
    8. '    ' → logprob: -12.305122375488281
    9. '+=(' → logprob: -12.305122375488281
    10. ' ' → logprob: -12.430122375488281

Token 149: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.07020539790391922
    2. ' comb' → logprob: -2.6952054500579834
    3. 'com' → logprob: -8.320205688476562
    4. '   ' → logprob: -11.820205688476562
    5. ' ' → logprob: -12.195205688476562
    6. '(com' → logprob: -12.445205688476562
    7. '1' → logprob: -14.070205688476562
    8. '(' → logprob: -14.132705688476562
    9. 'comm' → logprob: -14.195205688476562
    10. ' combin' → logprob: -14.570205688476562

Token 150: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.012052292935550213
    2. 'idx' → logprob: -4.637052059173584
    3. '[' → logprob: -6.137052059173584
    4. '[
' → logprob: -9.762052536010742
    5. ' idx' → logprob: -10.512052536010742
    6. '(idx' → logprob: -11.262052536010742
    7. '[int' → logprob: -11.387052536010742
    8. '	idx' → logprob: -12.262052536010742
    9. '[i' → logprob: -13.012052536010742
    10. '```' → logprob: -13.012052536010742

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1271161437034607
    2. ' -' → logprob: -2.1271162033081055
    3. ' ' → logprob: -9.127116203308105
    4. '   ' → logprob: -10.502116203308105
    5. '1' → logprob: -10.752116203308105
    6. '  ' → logprob: -11.377116203308105
    7. ']' → logprob: -12.002116203308105
    8. ')' → logprob: -12.377116203308105
    9. '0' → logprob: -13.877116203308105
    10. '<|end|>' → logprob: -13.877116203308105

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023274161503650248
    2. ' ' → logprob: -8.375232696533203
    3. '```' → logprob: -14.437732696533203
    4. '<|end|>' → logprob: -14.437732696533203
    5. '   ' → logprob: -15.312732696533203
    6. '  ' → logprob: -16.187732696533203
    7. ')' → logprob: -16.250232696533203
    8. 'to' → logprob: -16.500232696533203
    9. ']' → logprob: -17.062732696533203
    10. '0' → logprob: -17.062732696533203

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9650025428272784e-05
    2. ' ' → logprob: -10.250040054321289
    3. '<|end|>' → logprob: -13.437540054321289
    4. '```' → logprob: -14.000040054321289
    5. '0' → logprob: -14.312540054321289
    6. ')' → logprob: -15.875040054321289
    7. '`' → logprob: -16.12504005432129
    8. '2' → logprob: -16.50004005432129
    9. '１' → logprob: -16.56254005432129

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004120192490518093
    2. '])' → logprob: -5.879120349884033
    3. ')' → logprob: -7.004120349884033
    4. ' ]' → logprob: -8.004119873046875
    5. ']
' → logprob: -9.879119873046875
    6. ')]' → logprob: -12.254119873046875
    7. ' )' → logprob: -12.379119873046875
    8. ' ])' → logprob: -12.504119873046875
    9. '   ' → logprob: -13.129119873046875
    10. ']==' → logprob: -13.254119873046875

Token 155: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0158017873764038
    2. ' %' → logprob: -1.0158017873764038
    3. '   ' → logprob: -2.0158019065856934
    4. '%' → logprob: -2.7658019065856934
    5. ')' → logprob: -3.0158019065856934
    6. '
' → logprob: -4.015801906585693
    7. ')
' → logprob: -6.140801906585693
    8. ' *' → logprob: -6.515801906585693
    9. '    
' → logprob: -6.765801906585693
    10. '        
' → logprob: -6.765801906585693

Token 156: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5432842969894409
    2. '       ' → logprob: -0.9182842969894409
    3. '   ' → logprob: -4.1682844161987305
    4. '  
' → logprob: -6.7932844161987305
    5. '    
' → logprob: -6.9182844161987305
    6. '        
' → logprob: -7.5432844161987305
    7. '
' → logprob: -7.7932844161987305
    8. '   
' → logprob: -7.9182844161987305
    9. ' if' → logprob: -8.66828441619873
    10. '  ' → logprob: -8.66828441619873

Token 157: ' dé' (ID: 2393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8809231519699097
    2. ' ' → logprob: -1.1309231519699097
    3. ' 
' → logprob: -2.755923271179199
    4. '1' → logprob: -3.130923271179199
    5. ' )' → logprob: -3.505923271179199
    6. '       ' → logprob: -3.505923271179199
    7. ')
' → logprob: -4.130923271179199
    8. '
' → logprob: -4.255923271179199
    9. ' p' → logprob: -4.505923271179199
    10. '   ' → logprob: -4.880923271179199

Token 158: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.6297286152839661
    2. 'comp' → logprob: -1.3797285556793213
    3. 'com' → logprob: -2.1297285556793213
    4. 'f' → logprob: -3.7547285556793213
    5. 'cré' → logprob: -4.0047287940979
    6. 'cre' → logprob: -4.3797287940979
    7. 'cr' → logprob: -5.2547287940979
    8. 'crement' → logprob: -5.2547287940979
    9. 'c' → logprob: -5.6297287940979
    10. '#' → logprob: -6.0047287940979

Token 159: 'é' (ID: 377)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10728882253170013
    2. 'ement' → logprob: -2.8572888374328613
    3. 'ment' → logprob: -4.357288837432861
    4. 'é' → logprob: -4.482288837432861
    5. '1' → logprob: -5.482288837432861
    6. '-' → logprob: -5.607288837432861
    7. '+' → logprob: -6.232288837432861
    8. '2' → logprob: -6.857288837432861
    9. 'ed' → logprob: -6.857288837432861
    10. '```' → logprob: -6.857288837432861

Token 160: ' d' (ID: 272)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3407282829284668
    2. ' 
' → logprob: -2.340728282928467
    3. ' ' → logprob: -2.840728282928467
    4. '  
' → logprob: -3.715728282928467
    5. '1' → logprob: -3.965728282928467
    6. '       ' → logprob: -4.215728282928467
    7. ' if' → logprob: -4.465728282928467
    8. ')' → logprob: -4.590728282928467
    9. '   
' → logprob: -4.840728282928467
    10. '   ' → logprob: -5.090728282928467

Token 161: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.041387684643268585
    2. '-' → logprob: -3.2913877964019775
    3. ''un' → logprob: -6.791387557983398
    4. '-un' → logprob: -7.166387557983398
    5. 'un' → logprob: -7.541387557983398
    6. ' ' → logprob: -7.666387557983398
    7. ' -' → logprob: -7.916387557983398
    8. ''une' → logprob: -10.791387557983398
    9. '<|end|>' → logprob: -10.791387557983398
    10. ' un' → logprob: -11.541387557983398

Token 162: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5645104646682739
    2. '<|end|>' → logprob: -1.564510464668274
    3. '-' → logprob: -2.3145103454589844
    4. '```' → logprob: -3.6895103454589844
    5. ' ' → logprob: -4.064510345458984
    6. ')' → logprob: -4.064510345458984
    7. 'unit' → logprob: -4.189510345458984
    8. 'token' → logprob: -4.689510345458984
    9. 'index' → logprob: -4.939510345458984
    10. 'indice' → logprob: -5.189510345458984

Token 163: ' cause' (ID: 7075)
  Prédit: 'cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cause' → logprob: -0.24915318191051483
    2. ' cause' → logprob: -2.6241531372070312
    3. '1' → logprob: -2.9991531372070312
    4. 'u' → logprob: -3.4991531372070312
    5. '-' → logprob: -4.124153137207031
    6. ' ' → logprob: -4.249153137207031
    7. 'ue' → logprob: -4.874153137207031
    8. 'vec' → logprob: -4.999153137207031
    9. '```' → logprob: -5.374153137207031
    10. 'près' → logprob: -5.374153137207031

Token 164: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -1.2826108932495117
    2. 'de' → logprob: -1.7826108932495117
    3. 'du' → logprob: -1.7826108932495117
    4. ' de' → logprob: -1.9076108932495117
    5. ' des' → logprob: -2.1576108932495117
    6. '0' → logprob: -2.6576108932495117
    7. 'des' → logprob: -4.157610893249512
    8. 'd' → logprob: -4.407610893249512
    9. '1' → logprob: -4.657610893249512
    10. '<|end|>' → logprob: -5.782610893249512

Token 165: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3969242572784424
    2. '0' → logprob: -1.3969242572784424
    3. ' l' → logprob: -2.6469242572784424
    4. 'la' → logprob: -5.396924018859863
    5. '1' → logprob: -6.146924018859863
    6. ' ' → logprob: -6.771924018859863
    7. ' la' → logprob: -7.771924018859863
    8. 'zero' → logprob: -8.021924018859863
    9. ' zéro' → logprob: -8.271924018859863
    10. 'index' → logprob: -8.521924018859863

Token 166: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2948545217514038
    2. '0' → logprob: -1.4198545217514038
    3. '1' → logprob: -4.919854640960693
    4. ' l' → logprob: -6.044854640960693
    5. 'index' → logprob: -6.544854640960693
    6. 'zero' → logprob: -6.919854640960693
    7. 'la' → logprob: -7.044854640960693
    8. ' ' → logprob: -9.044854164123535
    9. 'python' → logprob: -9.169854164123535
    10. 'indice' → logprob: -9.294854164123535

Token 167: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.021101845428347588
    2. '-' → logprob: -4.396101951599121
    3. 'based' → logprob: -4.896101951599121
    4. '-base' → logprob: -7.896101951599121
    5. ' -' → logprob: -8.021101951599121
    6. ' based' → logprob: -8.146101951599121
    7. '-index' → logprob: -11.146101951599121
    8. ')' → logprob: -11.271101951599121
    9. '-bas' → logprob: -11.521101951599121
    10. '-Based' → logprob: -11.771101951599121

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11792521178722382
    2. '
' → logprob: -2.7429251670837402
    3. '        
' → logprob: -3.7429251670837402
    4. '  
' → logprob: -5.36792516708374
    5. '   ' → logprob: -5.86792516708374
    6. '    
' → logprob: -6.11792516708374
    7. ' if' → logprob: -6.11792516708374
    8. '\n' → logprob: -6.49292516708374
    9. ')' → logprob: -6.61792516708374
    10. 'if' → logprob: -6.74292516708374

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05772560462355614
    2. '
' → logprob: -3.057725667953491
    3. '        
' → logprob: -5.557725429534912
    4. '  
' → logprob: -6.307725429534912
    5. '   ' → logprob: -6.932725429534912
    6. ' 
' → logprob: -7.682725429534912
    7. '    
' → logprob: -7.807725429534912
    8. ' if' → logprob: -7.932725429534912
    9. '<|end|>' → logprob: -8.30772590637207
    10. '
' → logprob: -8.93272590637207

Token 170: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46589410305023193
    2. ' if' → logprob: -1.465894103050232
    3. '       ' → logprob: -1.965894103050232
    4. '   ' → logprob: -7.2158942222595215
    5. 'all' → logprob: -7.7158942222595215
    6. ' all' → logprob: -9.215893745422363
    7. '           ' → logprob: -9.215893745422363
    8. '        
' → logprob: -10.465893745422363
    9. ' ' → logprob: -10.590893745422363
    10. '	if' → logprob: -11.465893745422363

Token 171: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05071495473384857
    2. ' if' → logprob: -3.0507149696350098
    3. 'all' → logprob: -6.42571496963501
    4. ' all' → logprob: -8.300714492797852
    5. '       ' → logprob: -9.425714492797852
    6. 'result' → logprob: -9.800714492797852
    7. '   ' → logprob: -10.050714492797852
    8. '           ' → logprob: -10.800714492797852
    9. 'print' → logprob: -11.675714492797852
    10. ' result' → logprob: -11.800714492797852

Token 172: ' un' (ID: 537)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35437580943107605
    2. 'if' → logprob: -1.2293758392333984
    3. ' +=' → logprob: -5.979375839233398
    4. '       ' → logprob: -6.479375839233398
    5. ' =' → logprob: -7.104375839233398
    6. ':' → logprob: -8.104375839233398
    7. '           ' → logprob: -8.354375839233398
    8. '=' → logprob: -8.604375839233398
    9. '+=' → logprob: -8.729375839233398
    10. '   ' → logprob: -9.854375839233398

Token 173: ' peu' (ID: 9235)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.5686731338500977
    2. 'e' → logprob: -1.4436731338500977
    3. '=' → logprob: -2.4436731338500977
    4. 'if' → logprob: -3.1936731338500977
    5. '+=' → logprob: -4.693673133850098
    6. 'til' → logprob: -4.943673133850098
    7. ' =' → logprob: -4.943673133850098
    8. 'dert' → logprob: -5.193673133850098
    9. 'd' → logprob: -5.443673133850098
    10. 'ique' → logprob: -5.568673133850098

Token 174: ' lour' (ID: 113574)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2598721385002136
    2. ' if' → logprob: -2.6348721981048584
    3. '^' → logprob: -3.7598721981048584
    4. ' ^=' → logprob: -3.7598721981048584
    5. 'e' → logprob: -4.134871959686279
    6. '+=' → logprob: -4.384871959686279
    7. 'diff' → logprob: -4.509871959686279
    8. 'pe' → logprob: -4.634871959686279
    9. ' différente' → logprob: -4.634871959686279
    10. 'xor' → logprob: -4.884871959686279

Token 175: 'de' (ID: 613)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12476824223995209
    2. 'ère' → logprob: -2.3747682571411133
    3. 'ere' → logprob: -4.499768257141113
    4. 'ére' → logprob: -5.124768257141113
    5. 'érée' → logprob: -5.874768257141113
    6. 'u' → logprob: -7.249768257141113
    7. 'er' → logprob: -7.249768257141113
    8. 'è' → logprob: -8.124768257141113
    9. 'èrement' → logprob: -8.124768257141113
    10. 're' → logprob: -8.374768257141113

Token 176: ' mais' (ID: 2899)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5061862468719482
    2. '       ' → logprob: -1.0061862468719482
    3. 'if' → logprob: -3.5061862468719482
    4. ':' → logprob: -7.256186485290527
    5. '   ' → logprob: -8.256186485290527
    6. ' =' → logprob: -8.756186485290527
    7. '           ' → logprob: -9.256186485290527
    8. ' :' → logprob: -10.006186485290527
    9. '        
' → logprob: -10.006186485290527
    10. '=' → logprob: -10.256186485290527

Token 177: ' c' (ID: 274)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.4976910650730133
    2. 'cnt' → logprob: -1.872691035270691
    3. '(cnt' → logprob: -2.6226911544799805
    4. ' p' → logprob: -2.9976911544799805
    5. '       ' → logprob: -3.6226911544799805
    6. ' (' → logprob: -3.6226911544799805
    7. ' all' → logprob: -3.9976911544799805
    8. '(p' → logprob: -4.3726911544799805
    9. 'all' → logprob: -5.1226911544799805
    10. ' not' → logprob: -5.2476911544799805

Token 178: ''est' (ID: 6616)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3590813875198364
    2. 'st' → logprob: -1.7340813875198364
    3. 'est' → logprob: -2.734081268310547
    4. 'ess' → logprob: -2.984081268310547
    5. 'if' → logprob: -3.109081268310547
    6. '=' → logprob: -3.234081268310547
    7. ' if' → logprob: -3.234081268310547
    8. '   ' → logprob: -3.359081268310547
    9. 'q' → logprob: -3.734081268310547
    10. ' =' → logprob: -3.984081268310547

Token 179: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3086588680744171
    2. 'cnt' → logprob: -2.0586588382720947
    3. ' p' → logprob: -3.3086588382720947
    4. 'all' → logprob: -3.6836588382720947
    5. '(p' → logprob: -3.9336588382720947
    6. ' cnt' → logprob: -4.433659076690674
    7. '(cnt' → logprob: -4.558659076690674
    8. 'not' → logprob: -4.808659076690674
    9. ' not' → logprob: -5.308659076690674
    10. 'result' → logprob: -5.558659076690674

Token 180: ' cons' (ID: 1473)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.061508532613515854
    2. ' p' → logprob: -4.186508655548096
    3. '(p' → logprob: -4.311508655548096
    4. ' même' → logprob: -4.686508655548096
    5. 'if' → logprob: -4.811508655548096
    6. 'result' → logprob: -6.311508655548096
    7. 'val' → logprob: -6.686508655548096
    8. 'condition' → logprob: -6.936508655548096
    9. 'not' → logprob: -7.061508655548096
    10. ' suivante' → logprob: -7.186508655548096

Token 181: 'igne' (ID: 24120)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2577840089797974
    2. 't' → logprob: -1.3827840089797974
    3. 'u' → logprob: -1.5077840089797974
    4. 'p' → logprob: -1.8827840089797974
    5. 'd' → logprob: -4.007783889770508
    6. 'istance' → logprob: -4.132783889770508
    7. 'ent' → logprob: -4.882783889770508
    8. 'istent' → logprob: -5.132783889770508
    9. '   ' → logprob: -5.257783889770508
    10. 'quence' → logprob: -5.257783889770508

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014668402262032032
    2. ' if' → logprob: -4.3896684646606445
    3. 'if' → logprob: -6.7646684646606445
    4. ':' → logprob: -7.2646684646606445
    5. '   ' → logprob: -9.639668464660645
    6. ',' → logprob: -9.889668464660645
    7. '           ' → logprob: -10.014668464660645
    8. '
' → logprob: -10.639668464660645
    9. ':
' → logprob: -10.889668464660645
    10. '        
' → logprob: -11.014668464660645

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11797405779361725
    2. ' if' → logprob: -2.242974042892456
    3. 'if' → logprob: -5.492974281311035
    4. '
' → logprob: -7.742974281311035
    5. '        
' → logprob: -8.992974281311035
    6. '   ' → logprob: -9.117974281311035
    7. '           ' → logprob: -9.367974281311035
    8. ':' → logprob: -9.867974281311035
    9. ' all' → logprob: -10.742974281311035
    10. 'all' → logprob: -10.742974281311035

Token 184: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029836803674697876
    2. ' if' → logprob: -3.779836893081665
    3. '       ' → logprob: -5.529836654663086
    4. 'all' → logprob: -6.029836654663086
    5. '   ' → logprob: -9.154836654663086
    6. '           ' → logprob: -10.154836654663086
    7. ' all' → logprob: -10.279836654663086
    8. 'for' → logprob: -12.279836654663086
    9. 'result' → logprob: -12.404836654663086
    10. ' ' → logprob: -12.904836654663086

Token 185: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5591554641723633
    2. 'cnt' → logprob: -1.0591554641723633
    3. '(cnt' → logprob: -2.5591554641723633
    4. ' (' → logprob: -5.684155464172363
    5. ' p' → logprob: -9.059155464172363
    6. '(p' → logprob: -9.184155464172363
    7. 'p' → logprob: -9.309155464172363
    8. '[cnt' → logprob: -9.309155464172363
    9. '   ' → logprob: -9.684155464172363
    10. ' ' → logprob: -9.809155464172363

Token 186: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05491872876882553
    2. '%' → logprob: -2.9299187660217285
    3. ' ' → logprob: -10.30491828918457
    4. ' ' → logprob: -13.05491828918457
    5. '%e' → logprob: -15.05491828918457
    6. '%c' → logprob: -16.17991828918457
    7. '％' → logprob: -16.30491828918457
    8. '%A' → logprob: -16.92991828918457
    9. '```' → logprob: -16.92991828918457
    10. ' %
' → logprob: -17.17991828918457

Token 187: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03805778920650482
    2. ' ' → logprob: -3.288057804107666
    3. 'p' → logprob: -11.913057327270508
    4. ' p' → logprob: -13.038057327270508
    5. '   ' → logprob: -13.288057327270508
    6. '  ' → logprob: -13.413057327270508
    7. '```' → logprob: -14.163057327270508
    8. '	' → logprob: -14.788057327270508
    9. '    ' → logprob: -15.038057327270508
    10. '

' → logprob: -15.288057327270508

Token 188: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -15.437541007995605
    4. 'p' → logprob: -15.875041007995605
    5. '   ' → logprob: -16.437541961669922
    6. '２' → logprob: -16.500041961669922
    7. '(' → logprob: -16.687541961669922
    8. '{' → logprob: -16.750041961669922
    9. '  ' → logprob: -17.062541961669922
    10. '۲' → logprob: -17.312541961669922

Token 189: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6327407360076904
    2. ' !=' → logprob: -0.7577407360076904
    3. ')!=' → logprob: -10.13274097442627
    4. '()!=' → logprob: -10.25774097442627
    5. '==' → logprob: -10.50774097442627
    6. ' ' → logprob: -11.63274097442627
    7. ' ' → logprob: -11.88274097442627
    8. ' ==' → logprob: -12.38274097442627
    9. ']!=' → logprob: -12.38274097442627
    10. ')' → logprob: -12.38274097442627

Token 190: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4287099540233612
    2. 'p' → logprob: -1.0537099838256836
    3. '	p' → logprob: -12.803709983825684
    4. ' ' → logprob: -12.928709983825684
    5. ' ' → logprob: -13.803709983825684
    6. '(p' → logprob: -14.178709983825684
    7. '   ' → logprob: -14.553709983825684
    8. '  ' → logprob: -15.053709983825684
    9. '0' → logprob: -15.178709983825684
    10. '<p' → logprob: -15.178709983825684

Token 191: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. 'j' → logprob: -15.500000953674316
    4. '[m' → logprob: -17.75
    5. ' [' → logprob: -17.875
    6. '```' → logprob: -18.375
    7. '[i' → logprob: -18.75
    8. ' j' → logprob: -19.25
    9. '[
' → logprob: -19.75
    10. '[s' → logprob: -19.875

Token 192: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0479302406311035
    2. ']:' → logprob: -1.1729302406311035
    3. ':' → logprob: -1.4229302406311035
    4. '):
' → logprob: -2.9229302406311035
    5. ']:
' → logprob: -3.6729302406311035
    6. ':
' → logprob: -4.1729302406311035
    7. '   ' → logprob: -6.9229302406311035
    8. '[' → logprob: -7.0479302406311035
    9. ']' → logprob: -7.1729302406311035
    10. '       ' → logprob: -8.297929763793945

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16563645005226135
    2. '       ' → logprob: -2.1656365394592285
    3. 'all' → logprob: -3.6656365394592285
    4. '   ' → logprob: -5.0406365394592285
    5. ' all' → logprob: -5.1656365394592285
    6. '	all' → logprob: -10.16563606262207
    7. ' break' → logprob: -10.29063606262207
    8. '               ' → logprob: -10.79063606262207
    9. '          ' → logprob: -11.16563606262207
    10. 'break' → logprob: -11.16563606262207

Token 194: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.016963500529527664
    2. ' all' → logprob: -4.766963481903076
    3. '           ' → logprob: -5.016963481903076
    4. '   ' → logprob: -6.516963481903076
    5. '       ' → logprob: -8.641963958740234
    6. '	all' → logprob: -10.766963958740234
    7. ' ' → logprob: -12.641963958740234
    8. '               ' → logprob: -12.891963958740234
    9. '
' → logprob: -12.891963958740234
    10. 'break' → logprob: -13.516963958740234

Token 195: '_good' (ID: 108021)
  Prédit: '_good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_good' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.125004768371582
    3. '_go' → logprob: -14.375004768371582
    4. '_ok' → logprob: -14.625004768371582
    5. '_goods' → logprob: -14.625004768371582
    6. 'good' → logprob: -14.750004768371582
    7. 'Good' → logprob: -14.875004768371582
    8. '_correct' → logprob: -15.125004768371582
    9. '_possible' → logprob: -15.125004768371582
    10. '_bad' → logprob: -16.3750057220459

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142951607704163
    2. ' =' → logprob: -1.7014294862747192
    3. '=False' → logprob: -11.20142936706543
    4. ' ' → logprob: -13.70142936706543
    5. '=True' → logprob: -13.95142936706543
    6. ')' → logprob: -16.07642936706543
    7. '.' → logprob: -16.82642936706543
    8. '```' → logprob: -16.82642936706543
    9. ',' → logprob: -16.95142936706543
    10. '=false' → logprob: -17.20142936706543

Token 197: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -18.625553131103516
    4. '=False' → logprob: -19.125553131103516
    5. 'F' → logprob: -20.375553131103516
    6. '0' → logprob: -21.000553131103516
    7. 'false' → logprob: -21.375553131103516
    8. 'True' → logprob: -22.000553131103516
    9. '_false' → logprob: -22.000553131103516
    10. '.False' → logprob: -22.000553131103516

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8325677703833207e-05
    2. '            
' → logprob: -10.750028610229492
    3. '		' → logprob: -12.500028610229492
    4. '               ' → logprob: -14.500028610229492
    5. '          ' → logprob: -14.625028610229492
    6. '       ' → logprob: -14.750028610229492
    7. '<|end|>' → logprob: -14.750028610229492
    8. '            ' → logprob: -14.875028610229492
    9. '
' → logprob: -15.375028610229492
    10. '    
' → logprob: -16.375028610229492

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.180258191714529e-06
    2. '            
' → logprob: -12.125008583068848
    3. '       ' → logprob: -14.625008583068848
    4. '            ' → logprob: -14.750008583068848
    5. ' ' → logprob: -14.875008583068848
    6. '		' → logprob: -14.875008583068848
    7. '               ' → logprob: -15.250008583068848
    8. '          ' → logprob: -15.500008583068848
    9. '<|end|>' → logprob: -16.00000762939453
    10. '   ' → logprob: -16.12500762939453

Token 200: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07908123731613159
    2. 'break' (adapté à ' break') → logprob: -2.8290812969207764
    3. ' break' → logprob: -4.079081058502197
    4. '	break' → logprob: -11.079081535339355
    5. '               ' → logprob: -11.454081535339355
    6. '       ' → logprob: -11.704081535339355
    7. '		' → logprob: -12.329081535339355
    8. '   ' → logprob: -13.079081535339355
    9. 'b' → logprob: -13.579081535339355
    10. '          ' → logprob: -13.829081535339355

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026848025154322386
    2. '    
' → logprob: -6.002684593200684
    3. '   
' → logprob: -9.627684593200684
    4. '        
' → logprob: -9.752684593200684
    5. ' 
' → logprob: -10.502684593200684
    6. '            
' → logprob: -11.002684593200684
    7. '  
' → logprob: -11.127684593200684
    8. '
' → logprob: -11.752684593200684
    9. '  ' → logprob: -12.502684593200684
    10. '       
' → logprob: -12.752684593200684

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00455568078905344
    2. '    
' → logprob: -5.504555702209473
    3. '   
' → logprob: -9.129555702209473
    4. '  
' → logprob: -9.379555702209473
    5. '        
' → logprob: -9.629555702209473
    6. '
' → logprob: -10.129555702209473
    7. ' 
' → logprob: -10.129555702209473
    8. '            
' → logprob: -10.129555702209473
    9. ' if' → logprob: -11.004555702209473
    10. '       ' → logprob: -11.129555702209473

Token 203: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41895970702171326
    2. '   ' → logprob: -1.2939597368240356
    3. 'if' (adapté à ' if') → logprob: -2.793959617614746
    4. '    
' → logprob: -5.168959617614746
    5. ' ' → logprob: -7.668959617614746
    6. '  ' → logprob: -8.918959617614746
    7. '   
' → logprob: -8.918959617614746
    8. ' 
' → logprob: -9.043959617614746
    9. '        
' → logprob: -9.168959617614746
    10. '    ' → logprob: -9.418959617614746

Token 204: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16022564470767975
    2. 'all' → logprob: -1.9102256298065186
    3. ' ' → logprob: -14.410225868225098
    4. '   ' → logprob: -14.535225868225098
    5. ' not' → logprob: -15.660225868225098
    6. '	all' → logprob: -16.03522491455078
    7. '_all' → logprob: -16.91022491455078
    8. 'not' → logprob: -17.16022491455078
    9. 'All' → logprob: -17.91022491455078
    10. '    ' → logprob: -18.03522491455078

Token 205: '_good' (ID: 108021)
  Prédit: '_good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_good' → logprob: -4.723352049040841e-06
    2. 'good' → logprob: -12.500004768371582
    3. '_goods' → logprob: -15.750004768371582
    4. '_' → logprob: -15.750004768371582
    5. 'Good' → logprob: -16.000003814697266
    6. '_possible' → logprob: -16.125003814697266
    7. '_go' → logprob: -16.125003814697266
    8. '_ok' → logprob: -16.250003814697266
    9. ' good' → logprob: -17.000003814697266
    10. '_safe' → logprob: -17.000003814697266

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023643692838959396
    2. ':
' → logprob: -8.375236511230469
    3. '=' → logprob: -13.250236511230469
    4. '+:' → logprob: -13.750236511230469
    5. '   ' → logprob: -14.125236511230469
    6. '==' → logprob: -14.375236511230469
    7. ' :' → logprob: -14.375236511230469
    8. '):' → logprob: -14.500236511230469
    9. '+=' → logprob: -15.875236511230469
    10. ' +=' → logprob: -16.50023651123047

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013098694384098053
    2. '   ' → logprob: -4.51309871673584
    3. ' result' → logprob: -6.51309871673584
    4. 'result' → logprob: -7.63809871673584
    5. '
' → logprob: -9.76309871673584
    6. '    
' → logprob: -11.88809871673584
    7. '        
' → logprob: -12.13809871673584
    8. '```' → logprob: -12.76309871673584
    9. '     ' → logprob: -13.38809871673584
    10. '           ' → logprob: -13.38809871673584

Token 208: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.007354008965194225
    2. ' result' → logprob: -5.007353782653809
    3. '   ' → logprob: -8.007353782653809
    4. '
' → logprob: -8.132353782653809
    5. '       ' → logprob: -11.632353782653809
    6. '    
' → logprob: -13.382353782653809
    7. ' 
' → logprob: -14.882353782653809
    8. '        
' → logprob: -15.382353782653809
    9. ' ' → logprob: -16.132354736328125
    10. '1' → logprob: -16.257354736328125

Token 209: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741349220275879
    2. '+=' → logprob: -0.9741349220275879
    3. ']+=' → logprob: -10.09913444519043
    4. '+' → logprob: -11.22413444519043
    5. '   ' → logprob: -13.47413444519043
    6. '+="' → logprob: -14.22413444519043
    7. '+='' → logprob: -14.59913444519043
    8. '=' → logprob: -14.97413444519043
    9. '+=(' → logprob: -16.22413444519043
    10. '```' → logprob: -16.34913444519043

Token 210: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007620468270033598
    2. ' result' → logprob: -4.882620334625244
    3. '(result' → logprob: -12.257620811462402
    4. '1' → logprob: -12.882620811462402
    5. '0' → logprob: -13.132620811462402
    6. ' ' → logprob: -13.257620811462402
    7. '
' → logprob: -13.632620811462402
    8. '+' → logprob: -13.882620811462402
    9. '   ' → logprob: -14.882620811462402
    10. '+=' → logprob: -16.007619857788086

Token 211: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002189756603911519
    2. ' +' → logprob: -6.127189636230469
    3. '+
' → logprob: -13.002189636230469
    4. '1' → logprob: -13.252189636230469
    5. '+=' → logprob: -15.877189636230469
    6. ' ' → logprob: -16.12718963623047
    7. ' plus' → logprob: -16.25218963623047
    8. ' +
' → logprob: -16.75218963623047
    9. '+r' → logprob: -17.25218963623047
    10. ' +=' → logprob: -17.75218963623047

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -21.375001907348633
    5. '  ' → logprob: -22.125001907348633
    6. '１' → logprob: -22.375001907348633
    7. '+' → logprob: -22.500001907348633
    8. '۱' → logprob: -22.750001907348633
    9. '
' → logprob: -23.125001907348633
    10. '<|end|>' → logprob: -23.625001907348633

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.125
    4. '۱' → logprob: -22.125
    5. '１' → logprob: -22.25
    6. '
' → logprob: -22.375
    7. '```' → logprob: -22.375
    8. '2' → logprob: -23.5
    9. '  ' → logprob: -23.5625
    10. '+' → logprob: -23.5625

Token 214: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002632430987432599
    2. '
' → logprob: -8.250263214111328
    3. ' print' → logprob: -13.750263214111328
    4. '```' → logprob: -15.125263214111328
    5. '  
' → logprob: -15.500263214111328
    6. '
' → logprob: -16.125263214111328
    7. '

' → logprob: -16.375263214111328
    8. ')' → logprob: -16.500263214111328
    9. '(print' → logprob: -16.750263214111328
    10. ' 
' → logprob: -17.250263214111328

Token 215: ' J' (ID: 643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006530511658638716
    2. '
' → logprob: -5.131530284881592
    3. ' print' → logprob: -8.13153076171875
    4. '

' → logprob: -8.25653076171875
    5. '
' → logprob: -11.13153076171875
    6. ')' → logprob: -11.38153076171875
    7. '```' → logprob: -12.38153076171875
    8. '<|end|>' → logprob: -12.63153076171875
    9. '#' → logprob: -12.88153076171875
    10. '(print' → logprob: -13.25653076171875

Token 216: ''aurais' (ID: 149917)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43493109941482544
    2. '+=' → logprob: -1.5599310398101807
    3. ' +=' → logprob: -2.5599310398101807
    4. 'e' → logprob: -4.68493127822876
    5. 'result' → logprob: -4.68493127822876
    6. '++' → logprob: -5.05993127822876
    7. 'a' → logprob: -5.18493127822876
    8. 'umps' → logprob: -5.18493127822876
    9. 'continue' → logprob: -5.43493127822876
    10. 'u' → logprob: -5.55993127822876

Token 217: ' pu' (ID: 2923)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.0519416369497776
    2. 'put' → logprob: -4.051941871643066
    3. 'pe' → logprob: -4.926941871643066
    4. 'pré' → logprob: -5.051941871643066
    5. 'p' → logprob: -5.926941871643066
    6. 'pus' → logprob: -6.051941871643066
    7. 'plus' → logprob: -6.176941871643066
    8. 'bien' → logprob: -6.301941871643066
    9. ' pu' → logprob: -6.301941871643066
    10. 'print' → logprob: -6.551941871643066

Token 218: ' faire' (ID: 8119)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06306646764278412
    2. '++' → logprob: -3.9380664825439453
    3. '+' → logprob: -4.063066482543945
    4. 'result' → logprob: -4.563066482543945
    5. ' +=' → logprob: -4.688066482543945
    6. '=' → logprob: -6.313066482543945
    7. 'use' → logprob: -7.313066482543945
    8. '   ' → logprob: -8.063066482543945
    9. '=result' → logprob: -8.063066482543945
    10. '+++' → logprob: -8.188066482543945

Token 219: ' ++' (ID: 7600)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18097050487995148
    2. '+=' → logprob: -1.805970549583435
    3. ' +=' → logprob: -7.555970668792725
    4. ' result' → logprob: -8.055970191955566
    5. '+' → logprob: -8.680970191955566
    6. '1' → logprob: -10.055970191955566
    7. '   ' → logprob: -10.555970191955566
    8. '++' → logprob: -10.680970191955566
    9. '(result' → logprob: -10.805970191955566
    10. '=result' → logprob: -10.805970191955566

Token 220: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026383911608718336
    2. '
' → logprob: -8.250264167785645
    3. ' print' → logprob: -13.875264167785645
    4. '

' → logprob: -14.250264167785645
    5. '
' → logprob: -14.625264167785645
    6. '  
' → logprob: -15.125264167785645
    7. '```' → logprob: -16.625263214111328
    8. ')' → logprob: -16.875263214111328
    9. '    
' → logprob: -17.500263214111328
    10. ' 
' → logprob: -18.000263214111328

Token 221: ' bon' (ID: 4846)
  Prédit: ' Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.7036260366439819
    2. 'Python' → logprob: -1.328626036643982
    3. 'python' → logprob: -2.4536261558532715
    4. '+' → logprob: -2.8286261558532715
    5. '+=' → logprob: -3.9536261558532715
    6. ' in' → logprob: -4.3286261558532715
    7. ' python' → logprob: -4.4536261558532715
    8. ' ' → logprob: -4.4536261558532715
    9. ' +=' → logprob: -4.8286261558532715
    10. '=' → logprob: -5.3286261558532715

Token 222: '...

' (ID: 2161)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007212492637336254
    2. '
' → logprob: -7.250721454620361
    3. ' print' → logprob: -11.500720977783203
    4. '  
' → logprob: -15.375720977783203
    5. '(print' → logprob: -15.375720977783203
    6. '

' → logprob: -15.750720977783203
    7. ')' → logprob: -15.875720977783203
    8. '
' → logprob: -16.375720977783203
    9. '```' → logprob: -16.500720977783203
    10. '    
' → logprob: -16.625720977783203

Token 223: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.886803359724581e-05
    2. '
' → logprob: -9.500079154968262
    3. ' print' → logprob: -12.750079154968262
    4. ')' → logprob: -14.375079154968262
    5. '```' → logprob: -15.875079154968262
    6. '

' → logprob: -16.000078201293945
    7. '
' → logprob: -16.625078201293945
    8. '  
' → logprob: -16.625078201293945
    9. '(print' → logprob: -17.500078201293945
    10. ')
' → logprob: -18.000078201293945

Token 224: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.008620485663414001
    2. '(' → logprob: -4.758620262145996
    3. 'result' → logprob: -12.133620262145996
    4. '()' → logprob: -15.258620262145996
    5. '(results' → logprob: -16.258621215820312
    6. '(res' → logprob: -16.758621215820312
    7. '(
' → logprob: -16.883621215820312
    8. ' (' → logprob: -17.133621215820312
    9. '(Result' → logprob: -17.633621215820312
    10. '(resultado' → logprob: -18.508621215820312

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.250001907348633
    4. '()' → logprob: -15.750001907348633
    5. '())' → logprob: -15.875001907348633
    6. ')`' → logprob: -17.750001907348633
    7. '),' → logprob: -19.500001907348633
    8. '+' → logprob: -19.625001907348633
    9. '```' → logprob: -19.625001907348633
    10. '))' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 223
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 153
Précision stricte (1ère position): 34.98%
Précision adaptée (1ère position): 36.77%
Précision (top 10): 68.61%
================================================================================
