================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return __import__('builtins').input()

def strange_range(a, b=None, c=None):
    # Just a wrapper for range, but with weird argument parsing
    if b is None:
        return range(a)
    elif c is None:
        return range(a, b)
    else:
        return range(a, b, c)

fancy_numbers = list(map(lambda x: f"{x}", strange_range(10)))
N = int(get_input())
S = get_input()
lookat = set()
def insert(x): lookat.add(x)

for xx in strange_range(10):
    banana = fancy_numbers[xx]
    for yy in strange_range(10):
        apple = fancy_numbers[yy]
        for zz in strange_range(10):
            orange = fancy_numbers[zz]
            seen = [False, False]
            for aa, ch in enumerate(S):
                if not seen[0] and ch == banana:
                    seen[0] = True
                elif seen[0] and not seen[1] and ch == apple:
                    seen[1] = True
                elif seen[0] and seen[1] and ch == orange:
                    insert(banana + apple + orange)

print(len(lookat))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026244083419442177
    2. '_' → logprob: -6.00262451171875
    3. ' (' → logprob: -10.00262451171875
    4. '():' → logprob: -10.25262451171875
    5. '()' → logprob: -11.12762451171875
    6. '```' → logprob: -11.12762451171875
    7. '(:' → logprob: -12.00262451171875
    8. ':' → logprob: -12.12762451171875
    9. '(_' → logprob: -12.37762451171875
    10. '(_:' → logprob: -12.75262451171875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1580127775669098
    2. ':' → logprob: -3.533012866973877
    3. '():' → logprob: -3.533012866973877
    4. '   ' → logprob: -3.533012866973877
    5. '(' → logprob: -4.158012866973877
    6. '\' → logprob: -4.283012866973877
    7. '    
' → logprob: -5.408012866973877
    8. ''' → logprob: -5.658012866973877
    9. '(
' → logprob: -6.033012866973877
    10. ' return' → logprob: -6.158012866973877

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4519650936126709
    2. 'input' → logprob: -2.076965093612671
    3. '   ' → logprob: -2.326965093612671
    4. ' ' → logprob: -3.326965093612671
    5. 'i' → logprob: -3.451965093612671
    6. 'x' → logprob: -3.951965093612671
    7. 'user' → logprob: -3.951965093612671
    8. '```' → logprob: -4.45196533203125
    9. 'a' → logprob: -5.70196533203125
    10. 'r' → logprob: -5.82696533203125

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7762201428413391
    2. ' input' → logprob: -0.7762201428413391
    3. 'input' → logprob: -2.9012200832366943
    4. '"' → logprob: -4.026220321655273
    5. ''' → logprob: -5.651220321655273
    6. ' "' → logprob: -6.776220321655273
    7. '  ' → logprob: -7.401220321655273
    8. ' '' → logprob: -7.901220321655273
    9. '(input' → logprob: -8.276220321655273
    10. ' None' → logprob: -8.401220321655273

Token 7: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.686778503237292e-05
    2. ' input' → logprob: -9.250097274780273
    3. 'int' → logprob: -15.000097274780273
    4. '<input' → logprob: -15.625097274780273
    5. '(input' → logprob: -16.125097274780273
    6. '__' → logprob: -16.250097274780273
    7. '```' → logprob: -17.250097274780273
    8. '   ' → logprob: -17.875097274780273
    9. ' ' → logprob: -18.375097274780273
    10. '"' → logprob: -18.875097274780273

Token 8: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006325370632112026
    2. '__' → logprob: -6.1313252449035645
    3. '('' → logprob: -6.8813252449035645
    4. '__('' → logprob: -6.8813252449035645
    5. '__(' → logprob: -6.8813252449035645
    6. '_' → logprob: -8.006325721740723
    7. '("("' → logprob: -8.131325721740723
    8. '__("' → logprob: -9.131325721740723
    9. '("' → logprob: -9.256325721740723
    10. '(__' → logprob: -10.006325721740723

Token 9: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.07941899448633194
    2. 'sys' → logprob: -2.579418897628784
    3. 'read' → logprob: -7.954419136047363
    4. '__' → logprob: -9.329419136047363
    5. ' built' → logprob: -9.954419136047363
    6. 'code' → logprob: -10.829419136047363
    7. 'os' → logprob: -11.454419136047363
    8. 'b' → logprob: -12.204419136047363
    9. 're' → logprob: -13.704419136047363
    10. '-built' → logprob: -13.954419136047363

Token 10: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0005177667480893433
    2. 's' → logprob: -8.500517845153809
    3. 'in' → logprob: -8.625517845153809
    4. 'i' → logprob: -9.250517845153809
    5. 'input' → logprob: -10.250517845153809
    6. '```' → logprob: -14.625517845153809
    7. '__' → logprob: -14.750517845153809
    8. '_ins' → logprob: -15.125517845153809
    9. 'inas' → logprob: -15.375517845153809
    10. 't' → logprob: -15.625517845153809

Token 11: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.054572708904743195
    2. ').' → logprob: -3.929572820663452
    3. '')' → logprob: -4.054572582244873
    4. '.' → logprob: -4.429572582244873
    5. '.input' → logprob: -5.804572582244873
    6. ')' → logprob: -7.179572582244873
    7. '.')' → logprob: -8.679573059082031
    8. ''' → logprob: -9.929573059082031
    9. 'input' → logprob: -10.304573059082031
    10. '.Input' → logprob: -10.554573059082031

Token 12: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.9361264946837764e-07
    2. ' input' → logprob: -16.0
    3. 'inp' → logprob: -17.875
    4. '__' → logprob: -18.5
    5. 'raw' → logprob: -18.625
    6. 'eval' → logprob: -19.0
    7. '<input' → logprob: -19.875
    8. '_input' → logprob: -20.125
    9. '	input' → logprob: -20.5
    10. 'open' → logprob: -20.5

Token 13: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013475831598043442
    2. '()' → logprob: -4.3884758949279785
    3. '(
' → logprob: -7.5134758949279785
    4. '.' → logprob: -9.13847541809082
    5. '('' → logprob: -9.26347541809082
    6. ')' → logprob: -10.38847541809082
    7. '(

' → logprob: -10.38847541809082
    8. ' ' → logprob: -10.51347541809082
    9. '().' → logprob: -10.76347541809082
    10. '<|end|>' → logprob: -10.88847541809082

Token 14: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01014076080173254
    2. '()' → logprob: -4.760140895843506
    3. '(
' → logprob: -7.760140895843506
    4. ' ' → logprob: -7.885140895843506
    5. '.' → logprob: -8.135140419006348
    6. '<|end|>' → logprob: -8.760140419006348
    7. ' (' → logprob: -9.385140419006348
    8. ')' → logprob: -10.260140419006348
    9. '('' → logprob: -10.635140419006348
    10. '```' → logprob: -10.760140419006348

Token 15: ' strange' (ID: 26197)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.06611119210720062
    2. ' calculate' → logprob: -3.4411110877990723
    3. ' user' → logprob: -4.816111087799072
    4. ' space' → logprob: -5.191111087799072
    5. ' main' → logprob: -5.691111087799072
    6. ' process' → logprob: -5.691111087799072
    7. ' my' → logprob: -6.066111087799072
    8. ' add' → logprob: -6.691111087799072
    9. ' compute' → logprob: -6.941111087799072
    10. ' ' → logprob: -7.191111087799072

Token 16: '_range' (ID: 22022)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5855135321617126
    2. '_' → logprob: -0.8355135321617126
    3. '_space' → logprob: -5.710513591766357
    4. '_function' → logprob: -5.960513591766357
    5. '('_' → logprob: -6.460513591766357
    6. '(_)' → logprob: -8.4605131149292
    7. '_name' → logprob: -8.5855131149292
    8. '("_' → logprob: -9.0855131149292
    9. '_variable' → logprob: -9.0855131149292
    10. '_(' → logprob: -9.3355131149292

Token 17: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006442877347581089
    2. '_' → logprob: -7.875644207000732
    3. ' (' → logprob: -8.87564468383789
    4. '('' → logprob: -10.62564468383789
    5. 's' → logprob: -11.00064468383789
    6. '```' → logprob: -11.00064468383789
    7. '("("' → logprob: -11.25064468383789
    8. '_(' → logprob: -12.25064468383789
    9. '(
' → logprob: -12.25064468383789
    10. ''' → logprob: -12.50064468383789

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023658636957406998
    2. ' ,' → logprob: -4.023658752441406
    3. ',b' → logprob: -5.648658752441406
    4. ')' → logprob: -7.273658752441406
    5. '_,' → logprob: -7.898658752441406
    6. ',n' → logprob: -8.023658752441406
    7. ',a' → logprob: -8.398658752441406
    8. '):' → logprob: -9.648658752441406
    9. ',)' → logprob: -9.773658752441406
    10. ',_' → logprob: -10.023658752441406

Token 19: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34936514496803284
    2. 'b' → logprob: -1.2243651151657104
    3. ' n' → logprob: -7.474365234375
    4. 'n' → logprob: -9.349365234375
    5. ',' → logprob: -9.599365234375
    6. ')' → logprob: -9.849365234375
    7. ' ,' → logprob: -10.224365234375
    8. ',b' → logprob: -10.474365234375
    9. ' ' → logprob: -10.599365234375
    10. ' )' → logprob: -11.224365234375

Token 20: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48065629601478577
    2. ',' → logprob: -0.9806562662124634
    3. ')' → logprob: -5.105656147003174
    4. ' ,' → logprob: -8.855656623840332
    5. '):
' → logprob: -9.105656623840332
    6. '=' → logprob: -9.855656623840332
    7. '   ' → logprob: -9.980656623840332
    8. ' ):' → logprob: -9.980656623840332
    9. ':' → logprob: -10.855656623840332
    10. ' ' → logprob: -11.605656623840332

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05572205409407616
    2. '):' → logprob: -2.9307219982147217
    3. ' ,' → logprob: -7.430722236633301
    4. ')' → logprob: -9.0557222366333
    5. '):
' → logprob: -10.3057222366333
    6. '<|end|>' → logprob: -10.9307222366333
    7. '   ' → logprob: -11.0557222366333
    8. ',a' → logprob: -11.4307222366333
    9. ' ):' → logprob: -12.0557222366333
    10. ',
' → logprob: -12.0557222366333

Token 22: ' c' (ID: 274)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8200933337211609
    2. ' c' → logprob: -1.4450933933258057
    3. 'c' → logprob: -1.5700933933258057
    4. 'step' → logprob: -2.1950933933258057
    5. ' ' → logprob: -6.320093154907227
    6. '   ' → logprob: -6.695093154907227
    7. ')' → logprob: -7.695093154907227
    8. ',' → logprob: -7.945093154907227
    9. '  ' → logprob: -8.820093154907227
    10. ' )' → logprob: -8.820093154907227

Token 23: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4327150583267212
    2. '=' → logprob: -1.0577150583267212
    3. ')' → logprob: -6.182714939117432
    4. '=None' → logprob: -6.307714939117432
    5. ',' → logprob: -10.18271541595459
    6. ')=' → logprob: -10.43271541595459
    7. ':' → logprob: -11.30771541595459
    8. ' ):' → logprob: -11.93271541595459
    9. '**' → logprob: -12.18271541595459
    10. ' =' → logprob: -12.18271541595459

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008113683201372623
    2. ':' → logprob: -4.883113861083984
    3. ')' → logprob: -7.633113861083984
    4. ',' → logprob: -12.133113861083984
    5. ' ):' → logprob: -12.508113861083984
    6. '**' → logprob: -12.758113861083984
    7. '):
' → logprob: -12.883113861083984
    8. ':)' → logprob: -13.258113861083984
    9. ':**' → logprob: -13.633113861083984
    10. '*' → logprob: -14.008113861083984

Token 25: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10143551975488663
    2. ':' → logprob: -3.476435422897339
    3. ' (' → logprob: -3.726435422897339
    4. '   ' → logprob: -4.351435661315918
    5. 'a' → logprob: -4.726435661315918
    6. 'def' → logprob: -5.226435661315918
    7. '(a' → logprob: -5.476435661315918
    8. '[' → logprob: -5.976435661315918
    9. ' ' → logprob: -6.226435661315918
    10. '  ' → logprob: -6.851435661315918

Token 26: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3047199547290802
    2. '   ' → logprob: -2.304719924926758
    3. '    ' → logprob: -2.554719924926758
    4. ' ' → logprob: -2.929719924926758
    5. 'if' → logprob: -4.304719924926758
    6. ' range' → logprob: -5.804719924926758
    7. ' i' → logprob: -5.804719924926758
    8. ' for' → logprob: -5.929719924926758
    9. ' a' → logprob: -6.429719924926758
    10. '  ' → logprob: -6.929719924926758

Token 27: ' Just' (ID: 6214)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3240405023097992
    2. ' if' → logprob: -1.6990405321121216
    3. '    ' → logprob: -3.824040412902832
    4. ' """' → logprob: -3.824040412902832
    5. '   ' → logprob: -4.324040412902832
    6. 'if' → logprob: -4.699040412902832
    7. ' pass' → logprob: -5.574040412902832
    8. '  ' → logprob: -5.824040412902832
    9. ' range' → logprob: -5.824040412902832
    10. ' a' → logprob: -5.949040412902832

Token 28: ' a' (ID: 261)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8575788140296936
    2. ' a' → logprob: -1.2325787544250488
    3. ' ' → logprob: -1.7325787544250488
    4. ' range' → logprob: -3.982578754425049
    5. ' pass' → logprob: -4.357578754425049
    6. ' if' → logprob: -4.357578754425049
    7. ' for' → logprob: -4.482578754425049
    8. '    ' → logprob: -4.607578754425049
    9. ' use' → logprob: -5.607578754425049
    10. ' iterate' → logprob: -5.857578754425049

Token 29: ' wrapper' (ID: 26504)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8006053566932678
    2. ' for' → logprob: -2.300605297088623
    3. '   ' → logprob: -2.550605297088623
    4. 'd' → logprob: -2.675605297088623
    5. ' ' → logprob: -3.425605297088623
    6. ' return' → logprob: -3.425605297088623
    7. 'def' → logprob: -3.800605297088623
    8. 'r' → logprob: -3.925605297088623
    9. ' n' → logprob: -3.925605297088623
    10. 'for' → logprob: -3.925605297088623

Token 30: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050604697316884995
    2. ' for' → logprob: -3.4256045818328857
    3. '(
' → logprob: -4.800604820251465
    4. ' (' → logprob: -5.925604820251465
    5. ' around' → logprob: -5.925604820251465
    6. '   ' → logprob: -6.425604820251465
    7. 'for' → logprob: -7.050604820251465
    8. 'range' → logprob: -8.550604820251465
    9. '(range' → logprob: -8.925604820251465
    10. 'around' → logprob: -9.300604820251465

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02346721477806568
    2. ' range' → logprob: -3.7734673023223877
    3. '   ' → logprob: -8.773467063903809
    4. ' ' → logprob: -11.148467063903809
    5. '  ' → logprob: -11.648467063903809
    6. '	range' → logprob: -11.773467063903809
    7. ' xrange' → logprob: -12.023467063903809
    8. '```' → logprob: -12.023467063903809
    9. '`' → logprob: -12.523467063903809
    10. '__' → logprob: -12.773467063903809

Token 32: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004567780997604132
    2. '(
' → logprob: -5.504567623138428
    3. 'def' → logprob: -8.754568099975586
    4. '(a' → logprob: -9.004568099975586
    5. 'a' → logprob: -10.129568099975586
    6. '(

' → logprob: -10.254568099975586
    7. '<|end|>' → logprob: -11.004568099975586
    8. '()' → logprob: -11.004568099975586
    9. '```' → logprob: -11.004568099975586
    10. ',' → logprob: -11.754568099975586

Token 33: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11525776237249374
    2. ' return' → logprob: -2.740257740020752
    3. ' if' → logprob: -3.990257740020752
    4. '    ' → logprob: -4.115257740020752
    5. 'return' → logprob: -5.365257740020752
    6. ' a' → logprob: -6.865257740020752
    7. ' for' → logprob: -7.865257740020752
    8. ' ' → logprob: -7.865257740020752
    9. '  ' → logprob: -8.11525821685791
    10. ' range' → logprob: -8.11525821685791

Token 34: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21079888939857483
    2. ' return' → logprob: -2.835798978805542
    3. '    ' → logprob: -3.460798978805542
    4. ' if' → logprob: -3.585798978805542
    5. ' it' → logprob: -4.335798740386963
    6. ' with' → logprob: -4.710798740386963
    7. 'def' → logprob: -4.835798740386963
    8. 'return' → logprob: -4.960798740386963
    9. ' def' → logprob: -5.085798740386963
    10. ' not' → logprob: -5.085798740386963

Token 35: ' weird' (ID: 28783)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6145614981651306
    2. ' reversed' → logprob: -1.2395615577697754
    3. ' the' → logprob: -3.4895615577697754
    4. 'a' → logprob: -3.8645615577697754
    5. ' ' → logprob: -4.114561557769775
    6. ' all' → logprob: -4.239561557769775
    7. 're' → logprob: -4.739561557769775
    8. ' different' → logprob: -4.864561557769775
    9. ' an' → logprob: -4.864561557769775
    10. ' None' → logprob: -5.239561557769775

Token 36: ' argument' (ID: 10383)
  Prédit: ' behavior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' behavior' → logprob: -0.19115957617759705
    2. ' logic' → logprob: -2.69115948677063
    3. ' handling' → logprob: -3.06615948677063
    4. ' behaviors' → logprob: -3.19115948677063
    5. ' semantics' → logprob: -5.691159725189209
    6. ' behaviour' → logprob: -6.441159725189209
    7. ' ' → logprob: -6.441159725189209
    8. ' parameters' → logprob: -6.566159725189209
    9. 'behavior' → logprob: -6.566159725189209
    10. ' adjustments' → logprob: -6.816159725189209

Token 37: ' parsing' (ID: 51039)
  Prédit: ' handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handling' → logprob: -0.26107633113861084
    2. ' parsing' → logprob: -2.2610764503479004
    3. 's' → logprob: -2.8860764503479004
    4. 'handling' → logprob: -3.0110764503479004
    5. ' logic' → logprob: -4.7610764503479
    6. ' behavior' → logprob: -5.7610764503479
    7. ' manipulation' → logprob: -6.5110764503479
    8. ' checking' → logprob: -6.8860764503479
    9. ' ' → logprob: -7.1360764503479
    10. 'count' → logprob: -7.7610764503479

Token 38: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04870091751217842
    2. '   ' → logprob: -3.4237008094787598
    3. '(
' → logprob: -4.92370080947876
    4. 'def' → logprob: -5.67370080947876
    5. ':' → logprob: -5.92370080947876
    6. ' (' → logprob: -7.79870080947876
    7. '(a' → logprob: -8.673701286315918
    8. ',' → logprob: -8.923701286315918
    9. ' if' → logprob: -9.298701286315918
    10. '```' → logprob: -9.423701286315918

Token 39: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12356730550527573
    2. '   ' → logprob: -2.4985673427581787
    3. ':' → logprob: -4.3735671043396
    4. 'a' → logprob: -4.7485671043396
    5. '(a' → logprob: -5.6235671043396
    6. '(
' → logprob: -5.7485671043396
    7. ' (' → logprob: -6.1235671043396
    8. 'def' → logprob: -7.1235671043396
    9. ' if' → logprob: -7.4985671043396
    10. '```' → logprob: -7.8735671043396

Token 40: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07053061574697495
    2. ' if' → logprob: -2.695530652999878
    3. '   ' → logprob: -7.570530414581299
    4. 'args' → logprob: -10.445530891418457
    5. 'a' → logprob: -10.695530891418457
    6. 'i' → logprob: -11.070530891418457
    7. '    ' → logprob: -13.195530891418457
    8. 'n' → logprob: -13.445530891418457
    9. 'return' → logprob: -13.570530891418457
    10. ' i' → logprob: -13.945530891418457

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0006759775569662452
    2. 'b' → logprob: -7.375676155090332
    3. ' c' → logprob: -10.375676155090332
    4. ' ' → logprob: -11.375676155090332
    5. ' ' → logprob: -12.000676155090332
    6. ' not' → logprob: -15.000676155090332
    7. ' isinstance' → logprob: -16.250675201416016
    8. 'c' → logprob: -17.125675201416016
    9. '	b' → logprob: -17.500675201416016
    10. ' ' → logprob: -17.500675201416016

Token 42: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02061055600643158
    2. 'is' → logprob: -3.8956105709075928
    3. ' ' → logprob: -9.770610809326172
    4. ' None' → logprob: -11.895610809326172
    5. '==' → logprob: -13.895610809326172
    6. '<|end|>' → logprob: -13.895610809326172
    7. ' ==' → logprob: -14.645610809326172
    8. 'None' → logprob: -14.645610809326172
    9. ')' → logprob: -14.770610809326172
    10. ' ' → logprob: -15.020610809326172

Token 43: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.1280331313610077
    2. 'None' → logprob: -2.12803316116333
    3. ' not' → logprob: -6.87803316116333
    4. 'not' → logprob: -10.128032684326172
    5. ' ' → logprob: -11.128032684326172
    6. '=None' → logprob: -12.003032684326172
    7. '_None' → logprob: -12.003032684326172
    8. '(None' → logprob: -12.503032684326172
    9. '   ' → logprob: -13.128032684326172
    10. '  ' → logprob: -14.253032684326172

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009090794483199716
    2. ':
' → logprob: -7.500908851623535
    3. ' :' → logprob: -8.125908851623535
    4. ' and' → logprob: -10.125908851623535
    5. ':return' → logprob: -11.375908851623535
    6. ' :
' → logprob: -13.500908851623535
    7. '<|end|>' → logprob: -13.500908851623535
    8. '):' → logprob: -13.625908851623535
    9. ',' → logprob: -13.625908851623535
    10. ':

' → logprob: -14.125908851623535

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09809427708387375
    2. ' :' → logprob: -2.7230942249298096
    3. '       ' → logprob: -4.598094463348389
    4. ':
' → logprob: -5.348094463348389
    5. '   ' → logprob: -5.598094463348389
    6. ':return' → logprob: -5.598094463348389
    7. ' and' → logprob: -6.723094463348389
    8. '):' → logprob: -7.098094463348389
    9. ' :
' → logprob: -7.098094463348389
    10. ' return' → logprob: -7.223094463348389

Token 46: ' return' (ID: 622)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4263506233692169
    2. 'b' → logprob: -2.1763505935668945
    3. ' a' → logprob: -2.1763505935668945
    4. ' return' → logprob: -2.9263505935668945
    5. 'return' (adapté à ' return') → logprob: -3.6763505935668945
    6. 'a' → logprob: -4.0513505935668945
    7. ' ' → logprob: -4.4263505935668945
    8. '       ' → logprob: -5.4263505935668945
    9. '    ' → logprob: -5.6763505935668945
    10. '   ' → logprob: -6.3013505935668945

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16107168793678284
    2. 'range' → logprob: -1.9110716581344604
    3. ' strange' → logprob: -7.28607177734375
    4. ' str' → logprob: -9.53607177734375
    5. ' __' → logprob: -10.66107177734375
    6. 'str' → logprob: -10.66107177734375
    7. '	range' → logprob: -11.53607177734375
    8. ' ' → logprob: -12.28607177734375
    9. ' list' → logprob: -12.41107177734375
    10. '__' → logprob: -12.66107177734375

Token 48: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0036023214925080538
    2. '(' → logprob: -5.628602504730225
    3. '(
' → logprob: -14.253602027893066
    4. ')(' → logprob: -14.503602027893066
    5. '((' → logprob: -15.253602027893066
    6. ' (' → logprob: -15.253602027893066
    7. '(int' → logprob: -15.378602027893066
    8. 'a' → logprob: -15.503602027893066
    9. '(

' → logprob: -16.878602981567383
    10. '(A' → logprob: -17.253602981567383

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. ' )' → logprob: -10.875030517578125
    3. '+' → logprob: -11.750030517578125
    4. ' ' → logprob: -13.750030517578125
    5. ')
' → logprob: -14.375030517578125
    6. ' +' → logprob: -14.375030517578125
    7. '1' → logprob: -15.000030517578125
    8. '))' → logprob: -15.250030517578125
    9. '   ' → logprob: -16.125030517578125
    10. '`)' → logprob: -16.250030517578125

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47576233744621277
    2. '(' → logprob: -1.7257623672485352
    3. ',' → logprob: -3.100762367248535
    4. 'a' → logprob: -3.975762367248535
    5. ')' → logprob: -4.225762367248535
    6. '
' → logprob: -4.350762367248535
    7. '    
' → logprob: -4.350762367248535
    8. ' ' → logprob: -4.475762367248535
    9. 'return' → logprob: -4.850762367248535
    10. '    ' → logprob: -4.850762367248535

Token 51: ' elif' (ID: 9497)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5998644828796387
    2. ' elif' → logprob: -1.2248644828796387
    3. 'elif' (adapté à ' elif') → logprob: -2.4748644828796387
    4. 'if' → logprob: -2.8498644828796387
    5. ' ' → logprob: -5.349864482879639
    6. ' else' → logprob: -5.474864482879639
    7. '   ' → logprob: -5.599864482879639
    8. 'else' → logprob: -6.724864482879639
    9. ',' → logprob: -8.224864959716797
    10. '    
' → logprob: -8.724864959716797

Token 52: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.004574549850076437
    2. 'c' → logprob: -5.504574775695801
    3. ' b' → logprob: -7.754574775695801
    4. 'b' → logprob: -10.6295747756958
    5. ' isinstance' → logprob: -11.0045747756958
    6. ' not' → logprob: -12.1295747756958
    7. '   ' → logprob: -12.1295747756958
    8. ' ' → logprob: -12.2545747756958
    9. ' a' → logprob: -13.1295747756958
    10. ' ' → logprob: -13.6295747756958

Token 53: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023262133821845055
    2. 'is' → logprob: -3.7732620239257812
    3. '<|end|>' → logprob: -11.648262023925781
    4. ' ' → logprob: -12.773262023925781
    5. ')' → logprob: -13.398262023925781
    6. '	is' → logprob: -14.023262023925781
    7. 'Is' → logprob: -14.398262023925781
    8. '_is' → logprob: -14.523262023925781
    9. '<|end|>' → logprob: -14.773262023925781
    10. '==' → logprob: -15.523262023925781

Token 54: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3140966594219208
    2. ' None' → logprob: -1.3140966892242432
    3. ' not' → logprob: -7.564096450805664
    4. 'not' → logprob: -8.189096450805664
    5. ' ' → logprob: -10.814096450805664
    6. '_None' → logprob: -11.939096450805664
    7. '(None' → logprob: -12.939096450805664
    8. 'none' → logprob: -12.939096450805664
    9. 'Not' → logprob: -13.314096450805664
    10. '=None' → logprob: -13.939096450805664

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4000590145587921
    2. ':
' → logprob: -1.1500589847564697
    3. '       ' → logprob: -4.400059223175049
    4. '   ' → logprob: -7.650059223175049
    5. ':return' → logprob: -9.02505874633789
    6. '):
' → logprob: -9.27505874633789
    7. ',' → logprob: -9.77505874633789
    8. '():
' → logprob: -11.27505874633789
    9. ' :
' → logprob: -11.52505874633789
    10. ' and' → logprob: -11.77505874633789

Token 56: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8480117321014404
    2. ':
' → logprob: -1.2230117321014404
    3. '       ' → logprob: -1.3480117321014404
    4. '   ' → logprob: -4.9730119705200195
    5. ',' → logprob: -5.2230119705200195
    6. ' return' → logprob: -6.5980119705200195
    7. ':return' → logprob: -6.9730119705200195
    8. '	' → logprob: -7.7230119705200195
    9. '(' → logprob: -7.8480119705200195
    10. '):
' → logprob: -7.9730119705200195

Token 57: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11733008176088333
    2. ' range' → logprob: -2.9923300743103027
    3. 'return' (adapté à ' return') → logprob: -3.1173300743103027
    4. 'range' → logprob: -4.242330074310303
    5. ' ' → logprob: -7.242330074310303
    6. '       ' → logprob: -7.492330074310303
    7. '    ' → logprob: -8.117330551147461
    8. '   ' → logprob: -9.117330551147461
    9. '	return' → logprob: -10.117330551147461
    10. '        ' → logprob: -10.242330551147461

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004081247374415398
    2. ' range' → logprob: -5.5040812492370605
    3. '(range' → logprob: -13.629080772399902
    4. '	range' → logprob: -14.129080772399902
    5. '   ' → logprob: -14.879080772399902
    6. 'ranges' → logprob: -15.879080772399902
    7. 'rang' → logprob: -16.00408172607422
    8. 'str' → logprob: -16.62908172607422
    9. ' ' → logprob: -16.62908172607422
    10. ' xrange' → logprob: -17.12908172607422

Token 59: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(b' → logprob: -16.875001907348633
    4. 'a' → logprob: -17.625001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '(
' → logprob: -20.000001907348633
    7. ' (' → logprob: -20.000001907348633
    8. '((' → logprob: -20.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. ' ' → logprob: -21.750001907348633

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012111874530091882
    2. ',b' → logprob: -6.751211166381836
    3. ' ,' → logprob: -10.126211166381836
    4. 'b' → logprob: -14.501211166381836
    5. ')' → logprob: -15.251211166381836
    6. '   ' → logprob: -17.376211166381836
    7. ' ' → logprob: -17.376211166381836
    8. ' b' → logprob: -18.001211166381836
    9. '),' → logprob: -18.001211166381836
    10. '，' → logprob: -18.001211166381836

Token 61: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020817816257477
    2. ' b' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.850208282470703
    4. ')b' → logprob: -14.850208282470703
    5. ' ' → logprob: -15.100208282470703
    6. '	b' → logprob: -15.475208282470703
    7. ' ' → logprob: -16.475208282470703
    8. '    ' → logprob: -16.475208282470703
    9. '       ' → logprob: -16.475208282470703
    10. '  ' → logprob: -17.600208282470703

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004920298233628273
    2. ')
' → logprob: -7.625492095947266
    3. '   ' → logprob: -13.125492095947266
    4. ' )' → logprob: -13.625492095947266
    5. ')
' → logprob: -14.500492095947266
    6. ')

' → logprob: -16.125492095947266
    7. ' ' → logprob: -16.375492095947266
    8. '       ' → logprob: -17.000492095947266
    9. ')`' → logprob: -18.000492095947266
    10. '))' → logprob: -18.625492095947266

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.494741632603109e-05
    2. '       ' → logprob: -10.62508487701416
    3. 'range' → logprob: -10.87508487701416
    4. '    
' → logprob: -11.62508487701416
    5. ' range' → logprob: -11.87508487701416
    6. '(
' → logprob: -12.25008487701416
    7. '```' → logprob: -12.87508487701416
    8. ')' → logprob: -13.25008487701416
    9. 'else' → logprob: -13.25008487701416
    10. '  ' → logprob: -13.25008487701416

Token 64: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19615986943244934
    2. 'else' (adapté à ' else') → logprob: -2.821159839630127
    3. ' else' → logprob: -3.196159839630127
    4. ':' → logprob: -3.321159839630127
    5. ':
' → logprob: -4.821159839630127
    6. '       ' → logprob: -4.821159839630127
    7. 'range' → logprob: -4.821159839630127
    8. '(' → logprob: -5.321159839630127
    9. ',' → logprob: -5.696159839630127
    10. '  ' → logprob: -6.821159839630127

Token 65: ':
' (ID: 734)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24857480823993683
    2. 'range' → logprob: -2.123574733734131
    3. ' return' → logprob: -2.998574733734131
    4. '(range' → logprob: -3.498574733734131
    5. '   ' → logprob: -4.623574733734131
    6. ':' → logprob: -5.623574733734131
    7. '       ' → logprob: -5.998574733734131
    8. '	range' → logprob: -6.623574733734131
    9. ':
' → logprob: -7.248574733734131
    10. '(' → logprob: -7.248574733734131

Token 66: '       ' (ID: 309)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2533162832260132
    2. 'range' → logprob: -1.5033162832260132
    3. ' return' → logprob: -6.628316402435303
    4. 'return' → logprob: -10.128315925598145
    5. '    ' → logprob: -11.628315925598145
    6. '   ' → logprob: -11.878315925598145
    7. ' ' → logprob: -12.378315925598145
    8. '	range' → logprob: -12.878315925598145
    9. '(range' → logprob: -14.503315925598145
    10. '  ' → logprob: -15.128315925598145

Token 67: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03860801085829735
    2. ' return' → logprob: -3.2886080741882324
    3. 'range' → logprob: -7.913608074188232
    4. '   ' → logprob: -8.788607597351074
    5. '       ' → logprob: -10.413607597351074
    6. ' range' → logprob: -11.538607597351074
    7. ' ' → logprob: -12.163607597351074
    8. '	return' → logprob: -13.413607597351074
    9. 'eturn' → logprob: -14.788607597351074
    10. '  ' → logprob: -14.788607597351074

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002068892121315
    2. ' range' → logprob: -2.3502068519592285
    3. '(range' → logprob: -16.72520637512207
    4. '	range' → logprob: -16.72520637512207
    5. ' ' → logprob: -17.97520637512207
    6. 'ranges' → logprob: -18.97520637512207
    7. 'space' → logprob: -19.60020637512207
    8. '   ' → logprob: -19.72520637512207
    9. 'rang' → logprob: -19.97520637512207
    10. '_range' → logprob: -20.10020637512207

Token 69: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. '(c' → logprob: -16.875017166137695
    4. 'a' → logprob: -17.875017166137695
    5. '(A' → logprob: -18.375017166137695
    6. '(
' → logprob: -18.625017166137695
    7. '((' → logprob: -19.250017166137695
    8. '```' → logprob: -19.875017166137695
    9. '(ai' → logprob: -20.125017166137695
    10. '(abs' → logprob: -20.250017166137695

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001955537445610389
    2. ' ,' → logprob: -8.750195503234863
    3. ',c' → logprob: -10.250195503234863
    4. ',b' → logprob: -13.375195503234863
    5. ',
' → logprob: -17.62519645690918
    6. 'c' → logprob: -18.00019645690918
    7. ' ' → logprob: -18.12519645690918
    8. '，' → logprob: -18.62519645690918
    9. 'b' → logprob: -18.87519645690918
    10. ')' → logprob: -19.50019645690918

Token 71: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4927360415458679
    2. 'c' → logprob: -1.7427361011505127
    3. ' c' → logprob: -2.1177361011505127
    4. ' b' → logprob: -2.3677361011505127
    5. ' ' → logprob: -12.367735862731934
    6. '   ' → logprob: -13.242735862731934
    7. ')b' → logprob: -13.367735862731934
    8. ')c' → logprob: -13.617735862731934
    9. '	b' → logprob: -14.367735862731934
    10. '	c' → logprob: -15.367735862731934

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005274149589240551
    2. ',c' → logprob: -7.750527381896973
    3. ' ,' → logprob: -9.250527381896973
    4. 'c' → logprob: -14.375527381896973
    5. '),' → logprob: -17.62552833557129
    6. '   ' → logprob: -17.62552833557129
    7. ')' → logprob: -17.87552833557129
    8. ' c' → logprob: -18.62552833557129
    9. ' ' → logprob: -19.25052833557129
    10. '，' → logprob: -19.37552833557129

Token 73: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018150296062231064
    2. ' c' → logprob: -4.018150329589844
    3. ')c' → logprob: -15.518150329589844
    4. '	c' → logprob: -16.518150329589844
    5. '   ' → logprob: -16.643150329589844
    6. ')' → logprob: -17.768150329589844
    7. ' ' → logprob: -18.518150329589844
    8. '  ' → logprob: -19.518150329589844
    9. '    ' → logprob: -19.768150329589844
    10. '       ' → logprob: -20.143150329589844

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -17.0
    4. ')return' → logprob: -18.375
    5. ')`' → logprob: -19.0
    6. '))' → logprob: -19.125
    7. ')#' → logprob: -19.625
    8. '),' → logprob: -20.125
    9. '）' → logprob: -20.375
    10. ')a' → logprob: -20.75

Token 75: 'f' (ID: 69)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20416094362735748
    2. '#' → logprob: -2.5791609287261963
    3. 'd' → logprob: -3.3291609287261963
    4. ':' → logprob: -3.3291609287261963
    5. '\' → logprob: -4.829161167144775
    6. '
' → logprob: -5.079161167144775
    7. '(' → logprob: -5.454161167144775
    8. '_' → logprob: -5.579161167144775
    9. 'n' → logprob: -5.829161167144775
    10. ')' → logprob: -6.579161167144775

Token 76: 'ancy' (ID: 8830)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2171492576599121
    2. 'o' → logprob: -1.842149257659912
    3. 'l' → logprob: -4.842149257659912
    4. 'i' → logprob: -5.092149257659912
    5. 'ilter' → logprob: -5.467149257659912
    6. ' =' → logprob: -5.967149257659912
    7. 'r' → logprob: -5.967149257659912
    8. '()' → logprob: -6.342149257659912
    9. 'a' → logprob: -6.467149257659912
    10. 'ro' → logprob: -6.842149257659912

Token 77: '_numbers' (ID: 76842)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.6441676616668701
    2. '_' → logprob: -0.7691676616668701
    3. '_r' → logprob: -5.394167900085449
    4. '(' → logprob: -6.394167900085449
    5. ' _' → logprob: -6.519167900085449
    6. '_list' → logprob: -7.269167900085449
    7. '_ranges' → logprob: -7.769167900085449
    8. '_iter' → logprob: -8.64416790008545
    9. '__' → logprob: -8.76916790008545
    10. '_sum' → logprob: -8.89416790008545

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03493065759539604
    2. '=' → logprob: -3.53493070602417
    3. '(' → logprob: -5.28493070602417
    4. '_' → logprob: -10.659930229187012
    5. ' ' → logprob: -10.659930229187012
    6. ' (' → logprob: -10.784930229187012
    7. 's' → logprob: -11.284930229187012
    8. ')' → logprob: -12.659930229187012
    9. '  ' → logprob: -13.159930229187012
    10. '(range' → logprob: -13.659930229187012

Token 79: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.39968210458755493
    2. 'list' → logprob: -1.3996820449829102
    3. ' list' → logprob: -3.02468204498291
    4. ' strange' → logprob: -3.89968204498291
    5. '[str' → logprob: -4.89968204498291
    6. '[' → logprob: -6.02468204498291
    7. ' str' → logprob: -6.39968204498291
    8. '[list' → logprob: -7.14968204498291
    9. 'set' → logprob: -8.02468204498291
    10. '[]' → logprob: -8.02468204498291

Token 80: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004634234122931957
    2. '(' → logprob: -5.379634380340576
    3. '(s' → logprob: -12.504633903503418
    4. '(range' → logprob: -12.629633903503418
    5. '()' → logprob: -13.629633903503418
    6. '(f' → logprob: -13.629633903503418
    7. '(Str' → logprob: -13.754633903503418
    8. '(__' → logprob: -13.879633903503418
    9. '(st' → logprob: -14.129633903503418
    10. ' (' → logprob: -14.754633903503418

Token 81: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.03258078917860985
    2. '(' → logprob: -3.782580852508545
    3. '(int' → logprob: -5.282580852508545
    4. '(lambda' → logprob: -5.782580852508545
    5. '(abs' → logprob: -7.782580852508545
    6. ')' → logprob: -7.782580852508545
    7. '(get' → logprob: -9.282580375671387
    8. '(
' → logprob: -10.032580375671387
    9. '(s' → logprob: -10.282580375671387
    10. 'str' → logprob: -10.407580375671387

Token 82: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.34943699836730957
    2. 'x' → logprob: -1.3494369983673096
    3. 'str' → logprob: -4.0994367599487305
    4. ' str' → logprob: -4.5994367599487305
    5. 's' → logprob: -5.7244367599487305
    6. 'f' → logprob: -7.0994367599487305
    7. ' f' → logprob: -7.2244367599487305
    8. 'lambda' → logprob: -7.2244367599487305
    9. ' lambda' → logprob: -7.5994367599487305
    10. '(lambda' → logprob: -7.7244367599487305

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009680427610874176
    2. ' :' → logprob: -5.009680271148682
    3. ':str' → logprob: -6.259680271148682
    4. 'str' → logprob: -8.38468074798584
    5. 's' → logprob: -8.63468074798584
    6. ',' → logprob: -8.75968074798584
    7. ' str' → logprob: -8.88468074798584
    8. '=str' → logprob: -9.50968074798584
    9. ' x' → logprob: -10.25968074798584
    10. ':f' → logprob: -10.50968074798584

Token 84: ' f' (ID: 285)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23456156253814697
    2. 'x' → logprob: -2.2345614433288574
    3. ' str' → logprob: -2.7345614433288574
    4. 'str' → logprob: -3.4845614433288574
    5. ' strange' → logprob: -5.234561443328857
    6. ' ' → logprob: -7.609561443328857
    7. ' (' → logprob: -9.109561920166016
    8. '(x' → logprob: -9.984561920166016
    9. '   ' → logprob: -10.109561920166016
    10. ' lambda' → logprob: -10.359561920166016

Token 85: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.32568493485450745
    2. '"' → logprob: -1.450684905052185
    3. ''{' → logprob: -3.4506850242614746
    4. 'str' → logprob: -5.450685024261475
    5. ''' → logprob: -6.325685024261475
    6. '"x' → logprob: -6.575685024261475
    7. '"${' → logprob: -6.825685024261475
    8. '"#' → logprob: -6.950685024261475
    9. ''f' → logprob: -7.825685024261475
    10. '"...' → logprob: -8.325684547424316

Token 86: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0032858517952263355
    2. 'str' → logprob: -6.628285884857178
    3. '0' → logprob: -6.753285884857178
    4. ''' → logprob: -8.87828540802002
    5. ''x' → logprob: -8.87828540802002
    6. ' x' → logprob: -9.00328540802002
    7. '#' → logprob: -9.62828540802002
    8. 'hex' → logprob: -9.75328540802002
    9. '[x' → logprob: -10.37828540802002
    10. '(x' → logprob: -10.50328540802002

Token 87: '}",' (ID: 20115)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09103212505578995
    2. '**' → logprob: -2.966032028198242
    3. '*' → logprob: -3.966032028198242
    4. '}' → logprob: -4.716032028198242
    5. '!' → logprob: -6.216032028198242
    6. ' *' → logprob: -7.091032028198242
    7. ':**' → logprob: -7.466032028198242
    8. ' **' → logprob: -7.591032028198242
    9. ':#' → logprob: -7.716032028198242
    10. ':+' → logprob: -7.716032028198242

Token 88: ' strange' (ID: 26197)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3993252217769623
    2. ' strange' → logprob: -1.1493252515792847
    3. ' str' → logprob: -4.524325370788574
    4. 'range' → logprob: -7.274325370788574
    5. ' range' → logprob: -7.899325370788574
    6. '[str' → logprob: -9.774325370788574
    7. ' ' → logprob: -9.899325370788574
    8. '   ' → logprob: -9.899325370788574
    9. ' strang' → logprob: -10.149325370788574
    10. ' list' → logprob: -10.274325370788574

Token 89: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.750000953674316
    3. '_r' → logprob: -14.750000953674316
    4. '_ranges' → logprob: -15.125000953674316
    5. ' _' → logprob: -16.250001907348633
    6. 'range' → logprob: -18.750001907348633
    7. '_rng' → logprob: -18.875001907348633
    8. '"_' → logprob: -19.500001907348633
    9. '_scope' → logprob: -19.875001907348633
    10. '_ra' → logprob: -20.125001907348633

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002217748697148636
    2. '(
' → logprob: -9.125222206115723
    3. ' (' → logprob: -10.875222206115723
    4. ')' → logprob: -11.250222206115723
    5. '((' → logprob: -11.250222206115723
    6. '(len' → logprob: -11.250222206115723
    7. '(-' → logprob: -11.500222206115723
    8. '(int' → logprob: -11.750222206115723
    9. '<|end|>' → logprob: -11.875222206115723
    10. '(a' → logprob: -12.250222206115723

Token 91: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16787351667881012
    2. '1' → logprob: -2.2928736209869385
    3. '5' → logprob: -3.4178736209869385
    4. '0' → logprob: -4.542873382568359
    5. ' ' → logprob: -5.292873382568359
    6. '100' → logprob: -6.417873382568359
    7. '20' → logprob: -6.792873382568359
    8. '(' → logprob: -7.167873382568359
    9. '42' → logprob: -7.667873382568359
    10. '   ' → logprob: -8.54287338256836

Token 92: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.41207054257392883
    2. ')' → logprob: -1.6620705127716064
    3. ')))' → logprob: -1.9120705127716064
    4. ' ' → logprob: -9.912070274353027
    5. ',' → logprob: -10.287070274353027
    6. '()))' → logprob: -10.537070274353027
    7. '))))' → logprob: -10.787070274353027
    8. ' ))' → logprob: -10.912070274353027
    9. ')));' → logprob: -12.162070274353027
    10. '(' → logprob: -12.162070274353027

Token 93: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09626978635787964
    2. '<|end|>' → logprob: -2.5962698459625244
    3. '(' → logprob: -4.346269607543945
    4. 'f' → logprob: -6.971269607543945
    5. ' ' → logprob: -7.221269607543945
    6. '#' → logprob: -7.221269607543945
    7. '()' → logprob: -7.471269607543945
    8. '<|end|>' → logprob: -8.096269607543945
    9. '[' → logprob: -8.721269607543945
    10. '(
' → logprob: -9.096269607543945

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3140578269958496
    2. '=' → logprob: -1.3140578269958496
    3. ' ' → logprob: -7.81405782699585
    4. '=int' → logprob: -9.189058303833008
    5. 'um' → logprob: -9.439058303833008
    6. '  ' → logprob: -9.814058303833008
    7. 'ext' → logprob: -10.189058303833008
    8. '   ' → logprob: -10.689058303833008
    9. 'umber' → logprob: -10.814058303833008
    10. '.' → logprob: -10.814058303833008

Token 95: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8401634693145752
    2. ' int' → logprob: -0.9651634693145752
    3. 'int' → logprob: -3.090163469314575
    4. ' len' → logprob: -3.215163469314575
    5. '20' → logprob: -3.465163469314575
    6. '10' → logprob: -3.590163469314575
    7. ' fancy' → logprob: -3.965163469314575
    8. 'f' → logprob: -5.090163230895996
    9. 'len' → logprob: -5.215163230895996
    10. '5' → logprob: -5.215163230895996

Token 96: '(get' (ID: 7119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.510056734085083
    2. '(get' → logprob: -1.635056734085083
    3. '(f' → logprob: -1.760056734085083
    4. '('' → logprob: -3.510056734085083
    5. '(input' → logprob: -6.510056495666504
    6. '(__' → logprob: -7.885056495666504
    7. '(str' → logprob: -8.135056495666504
    8. ' (' → logprob: -8.385056495666504
    9. '("' → logprob: -8.885056495666504
    10. 'f' → logprob: -9.510056495666504

Token 97: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.32686570286750793
    2. '(' → logprob: -1.9518656730651855
    3. '_' → logprob: -2.9518656730651855
    4. '('_' → logprob: -3.8268656730651855
    5. '("_' → logprob: -4.2018656730651855
    6. 'put' → logprob: -4.3268656730651855
    7. '()' → logprob: -4.8268656730651855
    8. '("' → logprob: -5.2018656730651855
    9. '('' → logprob: -5.2018656730651855
    10. 'input' → logprob: -5.7018656730651855

Token 98: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0622984953224659
    2. '()' → logprob: -2.812298536300659
    3. '(' → logprob: -8.937298774719238
    4. '()))' → logprob: -9.312298774719238
    5. ' ())' → logprob: -10.312298774719238
    6. '("' → logprob: -10.937298774719238
    7. ')' → logprob: -11.437298774719238
    8. '();)' → logprob: -11.687298774719238
    9. '().' → logprob: -11.812298774719238
    10. '`()' → logprob: -12.437298774719238

Token 99: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31238311529159546
    2. 'result' → logprob: -1.8123831748962402
    3. 'numbers' → logprob: -4.06238317489624
    4. 's' → logprob: -4.18738317489624
    5. 'total' → logprob: -4.56238317489624
    6. ' for' → logprob: -4.81238317489624
    7. 'lst' → logprob: -4.81238317489624
    8. 'n' → logprob: -5.31238317489624
    9. 'f' → logprob: -5.43738317489624
    10. 'if' → logprob: -5.68738317489624

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029230695217847824
    2. '=' → logprob: -3.6542305946350098
    3. '=input' → logprob: -6.15423059463501
    4. ' ' → logprob: -8.279231071472168
    5. '_' → logprob: -8.654231071472168
    6. 'um' → logprob: -9.279231071472168
    7. '=[]' → logprob: -9.904231071472168
    8. 'tr' → logprob: -10.029231071472168
    9. '_input' → logprob: -10.279231071472168
    10. 't' → logprob: -10.779231071472168

Token 101: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.08648353815078735
    2. '""' → logprob: -3.5864834785461426
    3. ' get' → logprob: -3.7114834785461426
    4. 'str' → logprob: -4.336483478546143
    5. '[]' → logprob: -4.836483478546143
    6. 'sum' → logprob: -6.336483478546143
    7. 'f' → logprob: -6.711483478546143
    8. '"' → logprob: -6.711483478546143
    9. '[get' → logprob: -6.711483478546143
    10. ' []' → logprob: -7.211483478546143

Token 102: '_input' (ID: 12507)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.7296680808067322
    2. 'er' → logprob: -0.9796680808067322
    3. '_input' → logprob: -1.979668140411377
    4. 'puts' → logprob: -5.854668140411377
    5. 'ert' → logprob: -8.729667663574219
    6. '```' → logprob: -8.854667663574219
    7. 'ery' → logprob: -8.979667663574219
    8. 'ered' → logprob: -9.104667663574219
    9. 'py' → logprob: -9.229667663574219
    10. 'str' → logprob: -9.604667663574219

Token 103: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.1782583391759545e-05
    2. ' ()' → logprob: -11.750031471252441
    3. '`()' → logprob: -12.000031471252441
    4. '()
' → logprob: -12.125031471252441
    5. '()`' → logprob: -12.625031471252441
    6. '()

' → logprob: -13.250031471252441
    7. '(' → logprob: -13.625031471252441
    8. '|()
' → logprob: -13.875031471252441
    9. '()]' → logprob: -14.125031471252441
    10. '()(' → logprob: -14.125031471252441

Token 104: 'look' (ID: 9001)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7445250153541565
    2. 'for' → logprob: -0.9945250153541565
    3. 'answer' → logprob: -2.8695249557495117
    4. 'res' → logprob: -3.8695249557495117
    5. 'count' → logprob: -4.244524955749512
    6. 'ans' → logprob: -4.619524955749512
    7. 'if' → logprob: -4.869524955749512
    8. '_' → logprob: -4.994524955749512
    9. 'i' → logprob: -5.619524955749512
    10. 'arr' → logprob: -5.994524955749512

Token 105: 'at' (ID: 266)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.6461966633796692
    2. 'ing' → logprob: -2.5211966037750244
    3. '_idx' → logprob: -2.5211966037750244
    4. 'ups' → logprob: -2.7711966037750244
    5. 's' → logprob: -3.0211966037750244
    6. '_pos' → logprob: -3.1461966037750244
    7. 'ahead' → logprob: -3.7711966037750244
    8. '_index' → logprob: -3.7711966037750244
    9. 'idx' → logprob: -4.0211968421936035
    10. 'for' → logprob: -4.1461968421936035

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6463459730148315
    2. '_idx' → logprob: -1.6463459730148315
    3. 's' → logprob: -2.521346092224121
    4. '=' → logprob: -2.646346092224121
    5. '_index' → logprob: -2.646346092224121
    6. '_pos' → logprob: -4.021346092224121
    7. '_' → logprob: -4.396346092224121
    8. 'idx' → logprob: -5.146346092224121
    9. '_indices' → logprob: -5.396346092224121
    10. '_chars' → logprob: -6.021346092224121

Token 107: ' set' (ID: 920)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6092075705528259
    2. 'str' → logprob: -1.7342076301574707
    3. '0' → logprob: -2.3592076301574707
    4. 'len' → logprob: -3.6092076301574707
    5. 'f' → logprob: -3.7342076301574707
    6. 'N' → logprob: -3.8592076301574707
    7. 'set' → logprob: -4.109207630157471
    8. ' S' → logprob: -4.234207630157471
    9. '{' → logprob: -4.359207630157471
    10. 'int' → logprob: -4.859207630157471

Token 108: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21326908469200134
    2. '(S' → logprob: -1.7132691144943237
    3. '(' → logprob: -4.963269233703613
    4. '('' → logprob: -6.838269233703613
    5. '(['' → logprob: -6.838269233703613
    6. '(s' → logprob: -7.213269233703613
    7. '([' → logprob: -7.713269233703613
    8. '([]' → logprob: -7.838269233703613
    9. '(range' → logprob: -8.213269233703613
    10. '({' → logprob: -9.088269233703613

Token 109: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019850973039865494
    2. ' for' → logprob: -4.519851207733154
    3. 'i' → logprob: -5.269851207733154
    4. 'idx' → logprob: -7.519851207733154
    5. 'tokens' → logprob: -7.769851207733154
    6. 'words' → logprob: -8.019850730895996
    7. '()' → logprob: -8.269850730895996
    8. 'result' → logprob: -8.269850730895996
    9. 's' → logprob: -8.269850730895996
    10. 'answer' → logprob: -8.644850730895996

Token 110: ' insert' (ID: 10898)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5546895861625671
    2. ' check' → logprob: -1.929689645767212
    3. ' find' → logprob: -2.554689645767212
    4. ' process' → logprob: -3.179689645767212
    5. ' solve' → logprob: -3.554689645767212
    6. '_' → logprob: -3.679689645767212
    7. ' analyze' → logprob: -3.929689645767212
    8. ' main' → logprob: -4.179689407348633
    9. ' look' → logprob: -4.679689407348633
    10. ' is' → logprob: -4.929689407348633

Token 111: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8100100159645081
    2. '_' → logprob: -0.9350100159645081
    3. '_(' → logprob: -2.6850099563598633
    4. '(key' → logprob: -3.4350099563598633
    5. '(_' → logprob: -4.435009956359863
    6. '(word' → logprob: -4.685009956359863
    7. '(char' → logprob: -5.060009956359863
    8. '(item' → logprob: -5.185009956359863
    9. '(_)' → logprob: -5.310009956359863
    10. '_into' → logprob: -5.310009956359863

Token 112: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0708041861653328
    2. '):
' → logprob: -2.6958041191101074
    3. ' ):' → logprob: -7.820804119110107
    4. ')' → logprob: -8.695804595947266
    5. '   ' → logprob: -9.070804595947266
    6. ',' → logprob: -9.820804595947266
    7. '):
' → logprob: -10.070804595947266
    8. ':' → logprob: -10.320804595947266
    9. ' ' → logprob: -11.070804595947266
    10. ' ):
' → logprob: -11.195804595947266

Token 113: ' look' (ID: 1631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0350310355424881
    2. ' look' → logprob: -3.4100310802459717
    3. 'look' → logprob: -6.660030841827393
    4. '<|end|>' → logprob: -10.28503131866455
    5. '    
' → logprob: -11.28503131866455
    6. '
' → logprob: -11.53503131866455
    7. '   ' → logprob: -12.16003131866455
    8. '  ' → logprob: -12.28503131866455
    9. '.look' → logprob: -12.28503131866455
    10. ' looks' → logprob: -12.41003131866455

Token 114: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.9361264946837764e-07
    2. ' at' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. '(at' → logprob: -19.625
    5. '_at' → logprob: -19.625
    6. '	at' → logprob: -20.375
    7. 'ат' → logprob: -20.5
    8. 'atat' → logprob: -22.0
    9. 'up' → logprob: -22.75
    10. ' ' → logprob: -22.75

Token 115: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.018218660727143288
    2. '.' → logprob: -4.018218517303467
    3. ' .' → logprob: -9.893218994140625
    4. 'add' → logprob: -11.643218994140625
    5. '.update' → logprob: -12.143218994140625
    6. '().' → logprob: -13.143218994140625
    7. '.append' → logprob: -14.768218994140625
    8. ' add' → logprob: -14.768218994140625
    9. '_add' → logprob: -15.143218994140625
    10. '   ' → logprob: -15.518218994140625

Token 116: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014173968695104122
    2. '(' → logprob: -4.264173984527588
    3. '((' → logprob: -11.88917350769043
    4. ' (' → logprob: -12.76417350769043
    5. '(
' → logprob: -15.38917350769043
    6. '('' → logprob: -16.38917350769043
    7. '<|end|>' → logprob: -16.38917350769043
    8. 'x' → logprob: -16.63917350769043
    9. '(int' → logprob: -17.13917350769043
    10. '(`' → logprob: -17.13917350769043

Token 117: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.652451464906335e-05
    2. '())' → logprob: -11.875016212463379
    3. ')
' → logprob: -12.125016212463379
    4. ' )' → logprob: -12.875016212463379
    5. ')return' → logprob: -14.250016212463379
    6. ');' → logprob: -15.500016212463379
    7. ')

' → logprob: -15.625016212463379
    8. '))' → logprob: -15.875016212463379
    9. ')`' → logprob: -16.375017166137695
    10. '()' → logprob: -16.625017166137695

Token 118: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11486676335334778
    2. ' for' → logprob: -2.6148667335510254
    3. 'i' → logprob: -3.8648667335510254
    4. 'idx' → logprob: -5.614866733551025
    5. '_' → logprob: -6.739866733551025
    6. '()' → logprob: -6.864866733551025
    7. 'current' → logprob: -6.989866733551025
    8. 'def' → logprob: -6.989866733551025
    9. 'pos' → logprob: -7.114866733551025
    10. '
' → logprob: -7.239866733551025

Token 119: ' xx' (ID: 44242)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5275864601135254
    2. '_' → logprob: -1.6525864601135254
    3. 'c' → logprob: -1.6525864601135254
    4. ' i' → logprob: -2.1525864601135254
    5. 'ch' → logprob: -2.2775864601135254
    6. ' c' → logprob: -2.5275864601135254
    7. 'char' → logprob: -3.6525864601135254
    8. 'x' → logprob: -3.6525864601135254
    9. ' ch' → logprob: -3.6525864601135254
    10. ' _' → logprob: -4.777586460113525

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016933387145400047
    2. 'in' → logprob: -4.141933441162109
    3. ' ' → logprob: -7.141933441162109
    4. '_' → logprob: -10.14193344116211
    5. 'x' → logprob: -11.01693344116211
    6. 's' → logprob: -11.51693344116211
    7. '_in' → logprob: -11.64193344116211
    8. '  ' → logprob: -11.89193344116211
    9. '   ' → logprob: -12.76693344116211
    10. ',' → logprob: -13.14193344116211

Token 121: ' strange' (ID: 26197)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1186089739203453
    2. 'range' → logprob: -2.9936089515686035
    3. 'str' → logprob: -2.9936089515686035
    4. ' S' → logprob: -5.1186089515686035
    5. 'f' → logprob: -5.8686089515686035
    6. ' range' → logprob: -6.2436089515686035
    7. ' fancy' → logprob: -8.368609428405762
    8. '(' → logprob: -8.868609428405762
    9. 'look' → logprob: -9.118609428405762
    10. ' strange' → logprob: -9.368609428405762

Token 122: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.6240566083070007e-06
    2. 'range' → logprob: -13.500001907348633
    3. '(' → logprob: -16.375001907348633
    4. '_ranges' → logprob: -17.500001907348633
    5. 'Range' → logprob: -17.625001907348633
    6. '_' → logprob: -18.125001907348633
    7. '_RANGE' → logprob: -18.375001907348633
    8. '_numbers' → logprob: -18.875001907348633
    9. '_r' → logprob: -19.750001907348633
    10. '_ratio' → logprob: -20.250001907348633

Token 123: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.062456537038087845
    2. '(' → logprob: -2.9374566078186035
    3. '(len' → logprob: -4.9374566078186035
    4. '(S' → logprob: -8.312456130981445
    5. '((' → logprob: -9.812456130981445
    6. '(s' → logprob: -10.812456130981445
    7. '(n' → logprob: -11.312456130981445
    8. '(length' → logprob: -11.437456130981445
    9. '()' → logprob: -12.312456130981445
    10. '(int' → logprob: -12.437456130981445

Token 124: '10' (ID: 702)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18906286358833313
    2. '(N' → logprob: -1.8140628337860107
    3. 'len' → logprob: -5.68906307220459
    4. '(len' → logprob: -6.06406307220459
    5. '(' → logprob: -6.31406307220459
    6. ' N' → logprob: -7.31406307220459
    7. '10' → logprob: -7.56406307220459
    8. '1' → logprob: -9.06406307220459
    9. ')' → logprob: -9.43906307220459
    10. '2' → logprob: -9.68906307220459

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037696745712310076
    2. '):
' → logprob: -5.628769874572754
    3. ',' → logprob: -9.753769874572754
    4. ' ):' → logprob: -10.003769874572754
    5. '():' → logprob: -10.253769874572754
    6. ':' → logprob: -12.003769874572754
    7. ')' → logprob: -12.003769874572754
    8. '):
' → logprob: -12.128769874572754
    9. '   ' → logprob: -12.503769874572754
    10. '(' → logprob: -13.003769874572754

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018691575154662132
    2. ':' → logprob: -4.768691539764404
    3. '    
' → logprob: -4.768691539764404
    4. ':
' → logprob: -7.768691539764404
    5. ' if' → logprob: -8.018692016601562
    6. ' for' → logprob: -8.643692016601562
    7. '    ' → logprob: -9.143692016601562
    8. '<|end|>' → logprob: -9.393692016601562
    9. ' insert' → logprob: -9.643692016601562
    10. ' 
' → logprob: -9.768692016601562

Token 127: ' banana' (ID: 60252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3003673851490021
    2. ' insert' → logprob: -2.3003673553466797
    3. ' if' → logprob: -2.5503673553466797
    4. ' for' → logprob: -3.4253673553466797
    5. 'insert' → logprob: -3.5503673553466797
    6. 'if' → logprob: -4.55036735534668
    7. 'for' → logprob: -4.92536735534668
    8. '    
' → logprob: -7.55036735534668
    9. ' x' → logprob: -7.80036735534668
    10. '    ' → logprob: -8.17536735534668

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46523571014404297
    2. '=' → logprob: -1.090235710144043
    3. '   ' → logprob: -3.840235710144043
    4. '_' → logprob: -5.715235710144043
    5. 's' → logprob: -5.965235710144043
    6. '.' → logprob: -5.965235710144043
    7. ' ' → logprob: -6.715235710144043
    8. 'if' → logprob: -7.715235710144043
    9. '[' → logprob: -7.840235710144043
    10. ',' → logprob: -7.965235710144043

Token 129: ' fancy' (ID: 39357)
  Prédit: ' xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xx' → logprob: -0.5826497673988342
    2. 'xx' → logprob: -1.0826497077941895
    3. 'str' → logprob: -3.5826497077941895
    4. 'f' → logprob: -3.7076497077941895
    5. 'S' → logprob: -4.0826497077941895
    6. ' str' → logprob: -4.8326497077941895
    7. ' S' → logprob: -5.5826497077941895
    8. ' fancy' → logprob: -5.8326497077941895
    9. '(xx' → logprob: -5.9576497077941895
    10. 'int' → logprob: -6.2076497077941895

Token 130: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -5.621933451038785e-05
    2. '_' → logprob: -10.125056266784668
    3. 'numbers' → logprob: -12.125056266784668
    4. '_number' → logprob: -12.250056266784668
    5. 'f' → logprob: -13.875056266784668
    6. '_n' → logprob: -14.125056266784668
    7. 'Numbers' → logprob: -14.250056266784668
    8. 's' → logprob: -14.875056266784668
    9. '__' → logprob: -14.875056266784668
    10. 'banana' → logprob: -15.125056266784668

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018792471382766962
    2. '.index' → logprob: -10.125187873840332
    3. '[x' → logprob: -10.375187873840332
    4. '[ix' → logprob: -10.500187873840332
    5. '(xx' → logprob: -11.000187873840332
    6. '   ' → logprob: -11.125187873840332
    7. ' [' → logprob: -11.250187873840332
    8. '[int' → logprob: -12.000187873840332
    9. '[ii' → logprob: -12.250187873840332
    10. '[
' → logprob: -12.750187873840332

Token 132: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.0008074867073446512
    2. ' xx' → logprob: -7.125807285308838
    3. '(xx' → logprob: -13.500807762145996
    4. 'x' → logprob: -14.625807762145996
    5. '0' → logprob: -15.250807762145996
    6. ' ' → logprob: -15.375807762145996
    7. '[' → logprob: -15.500807762145996
    8. '   ' → logprob: -15.625807762145996
    9. '  ' → logprob: -16.50080680847168
    10. '    ' → logprob: -17.37580680847168

Token 133: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002986494218930602
    2. ']+' → logprob: -6.502986431121826
    3. ']
' → logprob: -7.502986431121826
    4. '])' → logprob: -7.877986431121826
    5. '][' → logprob: -8.627986907958984
    6. ' ]' → logprob: -8.627986907958984
    7. ')]' → logprob: -10.502986907958984
    8. '].' → logprob: -10.502986907958984
    9. '[' → logprob: -10.627986907958984
    10. '+' → logprob: -11.127986907958984

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3960409164428711
    2. '<|end|>' → logprob: -2.146040916442871
    3. ' if' → logprob: -2.521040916442871
    4. '
' → logprob: -2.521040916442871
    5. '    
' → logprob: -4.396040916442871
    6. ' ' → logprob: -4.771040916442871
    7. 'if' → logprob: -4.896040916442871
    8. ' 
' → logprob: -5.521040916442871
    9. '  
' → logprob: -5.896040916442871
    10. '[' → logprob: -6.146040916442871

Token 135: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11521091312170029
    2. ' if' → logprob: -2.740211009979248
    3. 'for' (adapté à ' for') → logprob: -3.990211009979248
    4. '   ' → logprob: -4.240211009979248
    5. 'insert' → logprob: -4.740211009979248
    6. ' for' → logprob: -6.615211009979248
    7. ' insert' → logprob: -7.490211009979248
    8. 'idx' → logprob: -8.24021053314209
    9. 'print' → logprob: -9.86521053314209
    10. ' ' → logprob: -10.11521053314209

Token 136: ' yy' (ID: 31344)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.3099342882633209
    2. 'ch' → logprob: -3.059934377670288
    3. ' yy' → logprob: -3.434934377670288
    4. 'char' → logprob: -3.434934377670288
    5. 'xx' → logprob: -4.059934139251709
    6. 'x' → logprob: -4.059934139251709
    7. 'y' → logprob: -4.059934139251709
    8. 'yyy' → logprob: -4.434934139251709
    9. 'jj' → logprob: -4.934934139251709
    10. 'cc' → logprob: -5.184934139251709

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03370679169893265
    2. 'in' → logprob: -3.4087069034576416
    3. ' ' → logprob: -9.908706665039062
    4. '	in' → logprob: -12.908706665039062
    5. 'n' → logprob: -13.908706665039062
    6. ' ' → logprob: -14.033706665039062
    7. '    ' → logprob: -14.033706665039062
    8. 'inth' → logprob: -14.158706665039062
    9. 'In' → logprob: -14.533706665039062
    10. '<|end|>' → logprob: -14.658706665039062

Token 138: ' strange' (ID: 26197)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08038639277219772
    2. ' strange' → logprob: -2.5803864002227783
    3. 'range' → logprob: -7.580386161804199
    4. ' str' → logprob: -7.580386161804199
    5. ' range' → logprob: -7.830386161804199
    6. 'stra' → logprob: -11.8303861618042
    7. ' ' → logprob: -11.8303861618042
    8. 's' → logprob: -11.8303861618042
    9. ' strang' → logprob: -11.9553861618042
    10. '(str' → logprob: -12.2053861618042

Token 139: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.00010247035970678553
    2. 'range' → logprob: -9.500102043151855
    3. '(' → logprob: -10.875102043151855
    4. '(f' → logprob: -12.000102043151855
    5. 'Range' → logprob: -14.000102043151855
    6. '(range' → logprob: -14.625102043151855
    7. 'f' → logprob: -14.625102043151855
    8. '_' → logprob: -15.750102043151855
    9. '(b' → logprob: -15.875102043151855
    10. '_RANGE' → logprob: -15.875102043151855

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02143293060362339
    2. '(xx' → logprob: -4.396432876586914
    3. '(b' → logprob: -4.771432876586914
    4. '(len' → logprob: -8.271432876586914
    5. '((' → logprob: -9.771432876586914
    6. '(x' → logprob: -10.646432876586914
    7. '(bb' → logprob: -10.896432876586914
    8. '10' → logprob: -11.146432876586914
    9. '(f' → logprob: -11.396432876586914
    10. 'banana' → logprob: -11.771432876586914

Token 141: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4773213863372803
    2. 'xx' → logprob: -1.3523213863372803
    3. '(xx' → logprob: -3.2273213863372803
    4. '(' → logprob: -3.8523213863372803
    5. 'banana' → logprob: -3.8523213863372803
    6. 'len' → logprob: -4.852321624755859
    7. '5' → logprob: -4.977321624755859
    8. '1' → logprob: -5.102321624755859
    9. '4' → logprob: -5.352321624755859
    10. '3' → logprob: -5.602321624755859

Token 142: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2529228627681732
    2. '):' → logprob: -1.5029228925704956
    3. '   ' → logprob: -7.127923011779785
    4. ':' → logprob: -9.502923011779785
    5. ',' → logprob: -10.002923011779785
    6. '       ' → logprob: -10.502923011779785
    7. '):
' → logprob: -10.502923011779785
    8. '():
' → logprob: -12.502923011779785
    9. '):

' → logprob: -12.502923011779785
    10. '():' → logprob: -13.127923011779785

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001999642699956894
    2. ' if' → logprob: -9.625200271606445
    3. '        
' → logprob: -10.250200271606445
    4. ' for' → logprob: -11.000200271606445
    5. '        ' → logprob: -11.750200271606445
    6. '<|end|>' → logprob: -11.750200271606445
    7. 'if' → logprob: -12.000200271606445
    8. '   ' → logprob: -12.125200271606445
    9. ' ' → logprob: -12.250200271606445
    10. '    ' → logprob: -12.375200271606445

Token 144: ' apple' (ID: 30366)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24203714728355408
    2. ' if' → logprob: -2.617037057876587
    3. 'if' → logprob: -2.867037057876587
    4. '       ' → logprob: -2.992037057876587
    5. '               ' → logprob: -5.117037296295166
    6. 'insert' → logprob: -5.242037296295166
    7. 'ch' → logprob: -5.367037296295166
    8. ' insert' → logprob: -5.742037296295166
    9. ' for' → logprob: -6.242037296295166
    10. 'for' → logprob: -6.367037296295166

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11864253133535385
    2. '=' → logprob: -2.243642568588257
    3. '   ' → logprob: -5.243642330169678
    4. ' ' → logprob: -8.118642807006836
    5. 's' → logprob: -10.118642807006836
    6. '[' → logprob: -10.368642807006836
    7. '_' → logprob: -10.618642807006836
    8. '    ' → logprob: -10.993642807006836
    9. '       ' → logprob: -11.118642807006836
    10. '  ' → logprob: -11.118642807006836

Token 146: ' fancy' (ID: 39357)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09242447465658188
    2. ' fancy' → logprob: -2.9674243927001953
    3. 'S' → logprob: -4.217424392700195
    4. 'str' → logprob: -4.842424392700195
    5. 'banana' → logprob: -4.967424392700195
    6. ' f' → logprob: -5.592424392700195
    7. ' banana' → logprob: -6.467424392700195
    8. ' S' → logprob: -7.092424392700195
    9. ' str' → logprob: -7.842424392700195
    10. '"' → logprob: -8.592424392700195

Token 147: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.2352385965641588e-05
    2. 'numbers' → logprob: -11.500012397766113
    3. 'Numbers' → logprob: -13.875012397766113
    4. '_number' → logprob: -14.875012397766113
    5. 's' → logprob: -15.625012397766113
    6. '_' → logprob: -15.750012397766113
    7. '_range' → logprob: -16.500011444091797
    8. 'range' → logprob: -17.125011444091797
    9. '[' → logprob: -17.375011444091797
    10. 'f' → logprob: -17.500011444091797

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -12.500006675720215
    3. '       ' → logprob: -14.000006675720215
    4. ' [' → logprob: -14.000006675720215
    5. '(' → logprob: -14.250006675720215
    6. '           ' → logprob: -16.3750057220459
    7. '[(' → logprob: -16.3750057220459
    8. '  ' → logprob: -17.0000057220459
    9. '[y' → logprob: -17.1250057220459
    10. '][' → logprob: -17.2500057220459

Token 149: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -11.125020027160645
    3. ' yy' → logprob: -12.625020027160645
    4. '(' → logprob: -13.875020027160645
    5. '	yy' → logprob: -14.250020027160645
    6. 'xx' → logprob: -14.500020027160645
    7. 'xy' → logprob: -17.37502098083496
    8. '   ' → logprob: -17.87502098083496
    9. ']' → logprob: -18.00002098083496
    10. '0' → logprob: -18.37502098083496

Token 150: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47956326603889465
    2. ']' → logprob: -1.3545632362365723
    3. '+' → logprob: -2.3545632362365723
    4. ' +' → logprob: -3.8545632362365723
    5. '   ' → logprob: -5.854563236236572
    6. '+"]' → logprob: -7.354563236236572
    7. ']+' → logprob: -7.604563236236572
    8. '       ' → logprob: -7.604563236236572
    9. ')
' → logprob: -7.729563236236572
    10. ']
' → logprob: -8.10456371307373

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004131118766963482
    2. '<|end|>' → logprob: -6.129131317138672
    3. '        
' → logprob: -6.879131317138672
    4. '           ' → logprob: -8.254131317138672
    5. ' if' → logprob: -8.879131317138672
    6. ' ' → logprob: -9.754131317138672
    7. ',' → logprob: -10.254131317138672
    8. ' for' → logprob: -10.379131317138672
    9. '<|end|>' → logprob: -10.379131317138672
    10. ' 
' → logprob: -10.504131317138672

Token 152: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15605394542217255
    2. 'for' (adapté à ' for') → logprob: -2.7810540199279785
    3. 'key' → logprob: -3.6560540199279785
    4. ' if' → logprob: -3.9060540199279785
    5. 'insert' → logprob: -4.4060540199279785
    6. 'xy' → logprob: -5.4060540199279785
    7. '       ' → logprob: -5.7810540199279785
    8. '           ' → logprob: -5.9060540199279785
    9. 'z' → logprob: -6.0310540199279785
    10. 'idx' → logprob: -6.6560540199279785

Token 153: ' zz' (ID: 41240)
  Prédit: 'zz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.004067597910761833
    2. ' zz' → logprob: -6.129067420959473
    3. 'xx' → logprob: -6.379067420959473
    4. 'str' → logprob: -9.254067420959473
    5. 'zzz' → logprob: -10.254067420959473
    6. 'z' → logprob: -10.754067420959473
    7. ' strange' → logprob: -11.754067420959473
    8. 'ZZ' → logprob: -12.254067420959473
    9. '__' → logprob: -12.504067420959473
    10. '_str' → logprob: -13.379067420959473

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132708668708801
    2. 'in' → logprob: -1.3132708072662354
    3. ' ' → logprob: -12.188270568847656
    4. '__' → logprob: -14.438270568847656
    5. 'import' → logprob: -14.813270568847656
    6. '   ' → logprob: -15.438270568847656
    7. ' ' → logprob: -15.500770568847656
    8. '<|end|>' → logprob: -15.500770568847656
    9. ')' → logprob: -15.563270568847656
    10. '_' → logprob: -15.688270568847656

Token 155: ' strange' (ID: 26197)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.048940010368824005
    2. ' strange' → logprob: -3.0489399433135986
    3. '(str' → logprob: -9.04893970489502
    4. ' str' → logprob: -9.04893970489502
    5. '(' → logprob: -9.67393970489502
    6. 'range' → logprob: -10.92393970489502
    7. 'stra' → logprob: -11.67393970489502
    8. '_str' → logprob: -12.17393970489502
    9. ' range' → logprob: -12.29893970489502
    10. ' strang' → logprob: -12.92393970489502

Token 156: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.981667537620524e-06
    2. 'range' → logprob: -13.250001907348633
    3. 'Range' → logprob: -15.875001907348633
    4. '(' → logprob: -18.625001907348633
    5. '_RANGE' → logprob: -18.750001907348633
    6. '_ranges' → logprob: -20.375001907348633
    7. '_' → logprob: -20.750001907348633
    8. '(range' → logprob: -20.875001907348633
    9. '-range' → logprob: -21.250001907348633
    10. 'def' → logprob: -21.625001907348633

Token 157: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '10' → logprob: -14.250001907348633
    3. ' (' → logprob: -15.000001907348633
    4. '(
' → logprob: -15.125001907348633
    5. '((' → logprob: -15.500001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '9' → logprob: -16.750001907348633
    8. '(len' → logprob: -17.375001907348633
    9. 'def' → logprob: -17.625001907348633
    10. '20' → logprob: -18.250001907348633

Token 158: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010491237044334412
    2. '1' → logprob: -7.626049041748047
    3. '(' → logprob: -8.251049041748047
    4. '0' → logprob: -9.876049041748047
    5. '3' → logprob: -9.876049041748047
    6. '2' → logprob: -10.376049041748047
    7. '4' → logprob: -10.563549041748047
    8. '   ' → logprob: -11.251049041748047
    9. '9' → logprob: -11.376049041748047
    10. '5' → logprob: -11.438549041748047

Token 159: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6332285404205322
    2. '):' → logprob: -0.7582285404205322
    3. ':' → logprob: -7.508228302001953
    4. '):
' → logprob: -10.758228302001953
    5. '       ' → logprob: -10.883228302001953
    6. '   ' → logprob: -11.633228302001953
    7. '):

' → logprob: -11.758228302001953
    8. ':
' → logprob: -11.758228302001953
    9. '():
' → logprob: -12.258228302001953
    10. '           ' → logprob: -12.633228302001953

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02543555200099945
    2. 'ch' → logprob: -4.775435447692871
    3. '               ' → logprob: -4.775435447692871
    4. ' cherry' → logprob: -6.900435447692871
    5. '       ' → logprob: -7.025435447692871
    6. ' code' → logprob: -7.150435447692871
    7. 'banana' → logprob: -7.275435447692871
    8. '   ' → logprob: -7.650435447692871
    9. ' pineapple' → logprob: -7.775435447692871
    10. 'digit' → logprob: -7.775435447692871

Token 161: ' orange' (ID: 26205)
  Prédit: 'orange'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orange' (adapté à ' orange') → logprob: -1.2827835083007812
    2. 'ch' → logprob: -1.4077835083007812
    3. 'gr' → logprob: -1.9077835083007812
    4. '               ' → logprob: -2.9077835083007812
    5. '           ' → logprob: -2.9077835083007812
    6. 'car' → logprob: -3.2827835083007812
    7. 'pear' → logprob: -3.2827835083007812
    8. 'pe' → logprob: -3.4077835083007812
    9. ' orange' → logprob: -4.032783508300781
    10. 'digit' → logprob: -4.032783508300781

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14274543523788452
    2. '=' → logprob: -2.0177454948425293
    3. ' ' → logprob: -10.142745018005371
    4. '   ' → logprob: -10.517745018005371
    5. '_' → logprob: -14.142745018005371
    6. ' ' → logprob: -14.392745018005371
    7. 's' → logprob: -14.392745018005371
    8. ')' → logprob: -15.142745018005371
    9. '  ' → logprob: -15.142745018005371
    10. 'f' → logprob: -15.767745018005371

Token 163: ' fancy' (ID: 39357)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6939452290534973
    2. ' fancy' → logprob: -0.6939452290534973
    3. ' f' → logprob: -7.318945407867432
    4. ' fanc' → logprob: -9.818944931030273
    5. '	f' → logprob: -10.693944931030273
    6. '(f' → logprob: -11.443944931030273
    7. ' ' → logprob: -11.693944931030273
    8. ' ' → logprob: -12.318944931030273
    9. 'fant' → logprob: -12.443944931030273
    10. ' fabulous' → logprob: -12.631444931030273

Token 164: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.8624639324116288e-06
    2. 'numbers' → logprob: -14.000001907348633
    3. '_tokens' → logprob: -14.875001907348633
    4. 'Numbers' → logprob: -15.250001907348633
    5. 'f' → logprob: -16.750001907348633
    6. 'a' → logprob: -17.000001907348633
    7. 'range' → logprob: -17.000001907348633
    8. '_ranges' → logprob: -17.000001907348633
    9. '[' → logprob: -17.375001907348633
    10. '_range' → logprob: -17.500001907348633

Token 165: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.375
    3. '       ' → logprob: -17.5
    4. '           ' → logprob: -18.375
    5. ' [' → logprob: -18.75
    6. '[z' → logprob: -19.5
    7. '(' → logprob: -19.75
    8. '         ' → logprob: -19.875
    9. '[(' → logprob: -19.875
    10. '[
' → logprob: -20.125

Token 166: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -2.081584716506768e-05
    2. ' zz' → logprob: -11.000020980834961
    3. 'zzz' → logprob: -12.625020980834961
    4. '[' → logprob: -14.875020980834961
    5. 'z' → logprob: -15.625020980834961
    6. 'sz' → logprob: -16.87502098083496
    7. '           ' → logprob: -17.50002098083496
    8. '          ' → logprob: -17.62502098083496
    9. '   ' → logprob: -17.62502098083496
    10. ' ' → logprob: -17.87502098083496

Token 167: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.14360566437244415
    2. ']' → logprob: -2.0186057090759277
    3. '           ' → logprob: -7.268605709075928
    4. ']
' → logprob: -9.01860523223877
    5. ')
' → logprob: -10.14360523223877
    6. ')' → logprob: -10.76860523223877
    7. ')]' → logprob: -11.39360523223877
    8. ']

' → logprob: -11.51860523223877
    9. ']:
' → logprob: -11.89360523223877
    10. '               ' → logprob: -12.26860523223877

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020568605395965278
    2. '            
' → logprob: -9.625205993652344
    3. 'if' → logprob: -10.000205993652344
    4. ' if' → logprob: -10.250205993652344
    5. '<|end|>' → logprob: -11.125205993652344
    6. 'token' → logprob: -11.250205993652344
    7. '               ' → logprob: -12.625205993652344
    8. '		' → logprob: -12.750205993652344
    9. '          ' → logprob: -12.875205993652344
    10. '
' → logprob: -13.125205993652344

Token 169: ' seen' (ID: 6177)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.113439679145813
    2. 'if' → logprob: -1.238439679145813
    3. 'token' → logprob: -1.488439679145813
    4. ' if' → logprob: -2.6134395599365234
    5. 'key' → logprob: -3.4884395599365234
    6. 'code' → logprob: -4.363439559936523
    7. 'num' → logprob: -4.863439559936523
    8. ' token' → logprob: -5.238439559936523
    9. '               ' → logprob: -5.738439559936523
    10. ' code' → logprob: -5.988439559936523

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07509633898735046
    2. '=' → logprob: -2.825096368789673
    3. '.add' → logprob: -4.825096130371094
    4. ' ' → logprob: -6.700096130371094
    5. '(' → logprob: -7.075096130371094
    6. '=(' → logprob: -8.075096130371094
    7. ')' → logprob: -8.075096130371094
    8. '   ' → logprob: -8.200096130371094
    9. 'add' → logprob: -8.575096130371094
    10. '_key' → logprob: -8.575096130371094

Token 171: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.20409943163394928
    2. '{}' → logprob: -2.829099416732788
    3. '""' → logprob: -3.579099416732788
    4. 'False' → logprob: -3.704099416732788
    5. ' set' → logprob: -3.954099416732788
    6. '{' → logprob: -4.329099655151367
    7. 'look' → logprob: -4.454099655151367
    8. '0' → logprob: -5.079099655151367
    9. 'str' → logprob: -5.079099655151367
    10. '"' → logprob: -5.204099655151367

Token 172: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2584027349948883
    2. '0' → logprob: -1.633402705192566
    3. 'banana' → logprob: -3.5084028244018555
    4. 'True' → logprob: -7.6334028244018555
    5. '(' → logprob: -7.8834028244018555
    6. 'S' → logprob: -8.383402824401855
    7. 'ban' → logprob: -8.383402824401855
    8. ' False' → logprob: -8.883402824401855
    9. 'orange' → logprob: -8.883402824401855
    10. '(False' → logprob: -9.133402824401855

Token 173: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29673606157302856
    2. ']*' → logprob: -1.5467360019683838
    3. ' for' → logprob: -3.546736001968384
    4. ',' → logprob: -4.421736240386963
    5. 'for' → logprob: -6.046736240386963
    6. ']*(' → logprob: -8.296735763549805
    7. ' ]' → logprob: -8.546735763549805
    8. '[' → logprob: -9.921735763549805
    9. '   ' → logprob: -10.421735763549805
    10. ']+' → logprob: -11.421735763549805

Token 174: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03377905488014221
    2. ' False' → logprob: -3.4087791442871094
    3. 'True' → logprob: -10.15877914428711
    4. ']' → logprob: -10.78377914428711
    5. '   ' → logprob: -10.78377914428711
    6. '(False' → logprob: -12.03377914428711
    7. '           ' → logprob: -12.15877914428711
    8. '    ' → logprob: -12.40877914428711
    9. ' ' → logprob: -12.40877914428711
    10. '                   ' → logprob: -12.53377914428711

Token 175: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036032749339938164
    2. ']' → logprob: -5.753603458404541
    3. ' ,' → logprob: -8.253602981567383
    4. ',
' → logprob: -9.378602981567383
    5. 'False' → logprob: -11.128602981567383
    6. 'True' → logprob: -11.253602981567383
    7. '<|end|>' → logprob: -11.253602981567383
    8. ' ]' → logprob: -11.628602981567383
    9. '<|end|>' → logprob: -12.003602981567383
    10. '(True' → logprob: -12.128602981567383

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14951692521572113
    2. '<|end|>' → logprob: -2.1495168209075928
    3. ' if' → logprob: -4.399517059326172
    4. '            
' → logprob: -6.524517059326172
    5. '               ' → logprob: -6.649517059326172
    6. ',' → logprob: -6.774517059326172
    7. ' for' → logprob: -6.774517059326172
    8. '            ' → logprob: -7.149517059326172
    9. 'if' → logprob: -7.274517059326172
    10. 'for' → logprob: -7.774517059326172

Token 177: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8254321217536926
    2. '           ' → logprob: -1.4504320621490479
    3. 'if' → logprob: -1.8254320621490479
    4. 'for' (adapté à ' for') → logprob: -2.450432062149048
    5. ' for' → logprob: -2.575432062149048
    6. '               ' → logprob: -6.825432300567627
    7. 'token' → logprob: -7.700432300567627
    8. '<|end|>' → logprob: -7.700432300567627
    9. '                           ' → logprob: -8.075431823730469
    10. '                                   ' → logprob: -8.325431823730469

Token 178: ' aa' (ID: 40260)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -2.318665027618408
    2. 'pos' → logprob: -2.693665027618408
    3. ' kk' → logprob: -3.068665027618408
    4. 'k' → logprob: -3.318665027618408
    5. ' idx' → logprob: -3.318665027618408
    6. ' w' → logprob: -3.568665027618408
    7. 'w' → logprob: -3.568665027618408
    8. ' k' → logprob: -3.568665027618408
    9. ' ww' → logprob: -3.693665027618408
    10. 'pp' → logprob: -3.693665027618408

Token 179: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932348608970642
    2. ' in' → logprob: -0.6932348608970642
    3. ' ' → logprob: -10.44323444366455
    4. ',' → logprob: -10.44323444366455
    5. '__' → logprob: -11.94323444366455
    6. '_in' → logprob: -13.19323444366455
    7. ')' → logprob: -13.31823444366455
    8. '(' → logprob: -13.31823444366455
    9. ' __' → logprob: -13.31823444366455
    10. ' ' → logprob: -13.56823444366455

Token 180: ' ch' (ID: 549)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.009263215586543083
    2. 'cc' → logprob: -5.509263038635254
    3. 'ch' → logprob: -5.634263038635254
    4. 'dd' → logprob: -7.634263038635254
    5. 'ss' → logprob: -8.509263038635254
    6. 'ab' → logprob: -8.759263038635254
    7. 'char' → logprob: -8.884263038635254
    8. 'ee' → logprob: -9.134263038635254
    9. ' bb' → logprob: -9.259263038635254
    10. 'vv' → logprob: -9.759263038635254

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485676050186157
    2. 'in' → logprob: -1.2235676050186157
    3. ',' → logprob: -9.723567962646484
    4. ')' → logprob: -10.473567962646484
    5. ' ' → logprob: -10.973567962646484
    6. '<|end|>' → logprob: -12.723567962646484
    7. '	in' → logprob: -13.098567962646484
    8. '<|end|>' → logprob: -13.598567962646484
    9. 's' → logprob: -13.911067962646484
    10. ' ' → logprob: -13.973567962646484

Token 182: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.17979303002357483
    2. 'enumer' → logprob: -1.8047930002212524
    3. '(en' → logprob: -10.429793357849121
    4. 'en' → logprob: -11.679793357849121
    5. 's' → logprob: -13.304793357849121
    6. ' zip' → logprob: -13.429793357849121
    7. 'zip' → logprob: -13.679793357849121
    8. '[' → logprob: -13.804793357849121
    9. '[(' → logprob: -13.929793357849121
    10. '```' → logprob: -14.179793357849121

Token 183: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0025574727915227413
    2. 'S' → logprob: -6.502557277679443
    3. '(' → logprob: -7.127557277679443
    4. '(b' → logprob: -9.127557754516602
    5. '(s' → logprob: -9.752557754516602
    6. 'banana' → logprob: -10.252557754516602
    7. '(f' → logprob: -11.252557754516602
    8. '(str' → logprob: -11.627557754516602
    9. '("' → logprob: -12.002557754516602
    10. '((' → logprob: -12.127557754516602

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02971751242876053
    2. '):
' → logprob: -4.404717445373535
    3. '[' → logprob: -4.529717445373535
    4. ':' → logprob: -5.779717445373535
    5. '[:' → logprob: -5.779717445373535
    6. '   ' → logprob: -10.404717445373535
    7. ' ):' → logprob: -11.279717445373535
    8. '[::-' → logprob: -11.654717445373535
    9. '(' → logprob: -12.029717445373535
    10. '[len' → logprob: -12.279717445373535

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006329386495053768
    2. ' if' → logprob: -5.506329536437988
    3. ' ' → logprob: -7.381329536437988
    4. '           ' → logprob: -8.131329536437988
    5. ':' → logprob: -8.381329536437988
    6. '                
' → logprob: -8.381329536437988
    7. '                ' → logprob: -8.881329536437988
    8. 'if' → logprob: -9.006329536437988
    9. '                               ' → logprob: -9.256329536437988
    10. '<|end|>' → logprob: -9.881329536437988

Token 186: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19608931243419647
    2. '                ' → logprob: -2.821089267730713
    3. '                   ' → logprob: -2.821089267730713
    4. '               ' → logprob: -4.321089267730713
    5. ' ' → logprob: -4.446089267730713
    6. 'if' (adapté à ' if') → logprob: -4.446089267730713
    7. ' ' → logprob: -4.696089267730713
    8. ' 
' → logprob: -5.321089267730713
    9. '                    ' → logprob: -5.821089267730713
    10. '                    
' → logprob: -6.321089267730713

Token 187: ' not' (ID: 625)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.46326932311058044
    2. ' ch' → logprob: -1.8382693529129028
    3. ' (' → logprob: -2.8382692337036133
    4. 'banana' → logprob: -3.2132692337036133
    5. ' banana' → logprob: -3.5882692337036133
    6. '(' → logprob: -3.8382692337036133
    7. '(ch' → logprob: -4.088269233703613
    8. ' orange' → logprob: -4.588269233703613
    9. 'orange' → logprob: -5.088269233703613
    10. ' apple' → logprob: -5.213269233703613

Token 188: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.1532488465309143
    2. ' seen' → logprob: -2.1532487869262695
    3. '(' → logprob: -4.4032487869262695
    4. 'look' → logprob: -5.0282487869262695
    5. '((' → logprob: -6.0282487869262695
    6. ' (' → logprob: -6.6532487869262695
    7. 'apple' → logprob: -7.4032487869262695
    8. 'ch' → logprob: -7.7782487869262695
    9. 'insert' → logprob: -7.7782487869262695
    10. '(ch' → logprob: -7.9032487869262695

Token 189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049559492617845535
    2. '[ch' → logprob: -3.0495595932006836
    3. '[int' → logprob: -7.174559593200684
    4. '[(' → logprob: -9.549559593200684
    5. ' [' → logprob: -10.799559593200684
    6. '[s' → logprob: -11.049559593200684
    7. '[count' → logprob: -11.299559593200684
    8. '[len' → logprob: -11.424559593200684
    9. '[get' → logprob: -11.924559593200684
    10. '[
' → logprob: -12.049559593200684

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0710185170173645
    2. 'ch' → logprob: -3.4460184574127197
    3. 'ord' → logprob: -4.446018695831299
    4. '1' → logprob: -4.571018695831299
    5. 'int' → logprob: -4.946018695831299
    6. '(' → logprob: -6.321018695831299
    7. 'aa' → logprob: -6.571018695831299
    8. ' ' → logprob: -6.696018695831299
    9. 'look' → logprob: -6.821018695831299
    10. ' ch' → logprob: -8.44601821899414

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13613083958625793
    2. ' and' → logprob: -2.2611308097839355
    3. ' ]' → logprob: -4.7611308097839355
    4. 'and' → logprob: -4.8861308097839355
    5. ' or' → logprob: -5.7611308097839355
    6. ']:
' → logprob: -6.2611308097839355
    7. ']:' → logprob: -6.3861308097839355
    8. 'or' → logprob: -10.261131286621094
    9. ' ' → logprob: -10.386131286621094
    10. ']:

' → logprob: -10.386131286621094

Token 192: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21953393518924713
    2. 'and' → logprob: -1.719533920288086
    3. ' or' → logprob: -4.094533920288086
    4. 'or' → logprob: -7.219533920288086
    5. ':' → logprob: -7.719533920288086
    6. ':
' → logprob: -9.719533920288086
    7. ' ' → logprob: -10.844533920288086
    8. '=' → logprob: -11.219533920288086
    9. '[' → logprob: -11.469533920288086
    10. '   ' → logprob: -12.719533920288086

Token 193: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3872819244861603
    2. ' ch' → logprob: -2.137281894683838
    3. 'banana' → logprob: -2.512281894683838
    4. ' banana' → logprob: -2.887281894683838
    5. ' apple' → logprob: -4.262281894683838
    6. 'apple' → logprob: -4.637281894683838
    7. 'S' → logprob: -4.762281894683838
    8. ' (' → logprob: -4.887281894683838
    9. '(ch' → logprob: -4.887281894683838
    10. ' S' → logprob: -5.012281894683838

Token 194: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6342944502830505
    2. ' ==' → logprob: -0.7592944502830505
    3. ' in' → logprob: -6.509294509887695
    4. 'in' → logprob: -9.884294509887695
    5. '!=' → logprob: -10.384294509887695
    6. ' not' → logprob: -10.509294509887695
    7. ' ' → logprob: -10.509294509887695
    8. ' !=' → logprob: -11.384294509887695
    9. '=' → logprob: -11.509294509887695
    10. '.' → logprob: -12.009294509887695

Token 195: ' banana' (ID: 60252)
  Prédit: 'banana'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'banana' → logprob: -0.03203440085053444
    2. ' banana' → logprob: -3.532034397125244
    3. 'apple' → logprob: -6.532034397125244
    4. 'orange' → logprob: -7.907034397125244
    5. 'ban' → logprob: -8.657034873962402
    6. ' apple' → logprob: -8.782034873962402
    7. ' orange' → logprob: -9.407034873962402
    8. ''' → logprob: -11.782034873962402
    9. ' ' → logprob: -11.782034873962402
    10. 'b' → logprob: -12.032034873962402

Token 196: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5445743799209595
    2. ':' → logprob: -1.6695743799209595
    3. 'and' → logprob: -1.7945743799209595
    4. ':
' → logprob: -2.79457426071167
    5. '                   ' → logprob: -6.41957426071167
    6. '               ' → logprob: -6.79457426071167
    7. '[' → logprob: -7.79457426071167
    8. '           ' → logprob: -8.544574737548828
    9. '                       ' → logprob: -8.544574737548828
    10. '   ' → logprob: -9.044574737548828

Token 197: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012276402674615383
    2. ':' → logprob: -4.8872761726379395
    3. '               ' → logprob: -6.2622761726379395
    4. ':
' → logprob: -6.8872761726379395
    5. ' and' → logprob: -7.2622761726379395
    6. '                       ' → logprob: -7.7622761726379395
    7. ' :' → logprob: -8.387276649475098
    8. ' or' → logprob: -9.137276649475098
    9. '                  ' → logprob: -10.137276649475098
    10. ' :
' → logprob: -10.262276649475098

Token 198: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.8042318224906921
    2. 'seen' (adapté à ' seen') → logprob: -1.554231882095337
    3. '                   ' → logprob: -2.054231882095337
    4. ' if' → logprob: -2.054231882095337
    5. 'if' → logprob: -3.554231882095337
    6. '                       ' → logprob: -3.679231882095337
    7. '               ' → logprob: -4.429231643676758
    8. 'insert' → logprob: -5.554231643676758
    9. '   ' → logprob: -6.054231643676758
    10. ' insert' → logprob: -6.429231643676758

Token 199: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.5
    3. '=' → logprob: -16.875
    4. '```' → logprob: -17.0
    5. ' [' → logprob: -17.625
    6. '=True' → logprob: -17.875
    7. '
' → logprob: -18.25
    8. 'True' → logprob: -18.75
    9. ' =' → logprob: -18.75
    10. '][' → logprob: -18.875

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001434516510926187
    2. '[' → logprob: -7.001434326171875
    3. ' ' → logprob: -8.251434326171875
    4. '1' → logprob: -8.751434326171875
    5. 'True' → logprob: -10.001434326171875
    6. '=' → logprob: -11.001434326171875
    7. '   ' → logprob: -11.626434326171875
    8. '
' → logprob: -11.626434326171875
    9. 'False' → logprob: -11.751434326171875
    10. '(' → logprob: -13.126434326171875

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07617317140102386
    2. ']=' → logprob: -3.4511730670928955
    3. '=' → logprob: -3.5761730670928955
    4. ' =' → logprob: -4.326173305511475
    5. '=True' → logprob: -8.826172828674316
    6. ' ]' → logprob: -8.826172828674316
    7. '[' → logprob: -9.826172828674316
    8. ')' → logprob: -10.826172828674316
    9. '           ' → logprob: -11.326172828674316
    10. ' or' → logprob: -11.451172828674316

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014184780418872833
    2. ' =' → logprob: -4.264184951782227
    3. '=True' → logprob: -10.764184951782227
    4. '=False' → logprob: -16.389184951782227
    5. ',' → logprob: -17.139184951782227
    6. '=

' → logprob: -19.014184951782227
    7. ' ' → logprob: -19.264184951782227
    8. '＝' → logprob: -19.264184951782227
    9. '[' → logprob: -19.264184951782227
    10. ']=' → logprob: -19.764184951782227

Token 203: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011708177626132965
    2. ' True' → logprob: -6.751170635223389
    3. '(True' → logprob: -15.251171112060547
    4. 'aa' → logprob: -15.626171112060547
    5. '1' → logprob: -16.126171112060547
    6. 'False' → logprob: -17.501171112060547
    7. ' ' → logprob: -17.626171112060547
    8. '   ' → logprob: -17.751171112060547
    9. '=True' → logprob: -18.376171112060547
    10. 'x' → logprob: -18.626171112060547

Token 204: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020460249856114388
    2. '<|end|>' → logprob: -4.77046012878418
    3. '                ' → logprob: -5.39546012878418
    4. '                   ' → logprob: -5.39546012878418
    5. ' elif' → logprob: -7.27046012878418
    6. ' ' → logprob: -7.52046012878418
    7. '           ' → logprob: -7.77046012878418
    8. '                    
' → logprob: -8.77046012878418
    9. '            ' → logprob: -9.02046012878418
    10. '              ' → logprob: -9.14546012878418

Token 205: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01853618025779724
    2. ' elif' → logprob: -4.64353609085083
    3. '                ' → logprob: -5.26853609085083
    4. ' ' → logprob: -6.76853609085083
    5. '<|end|>' → logprob: -6.76853609085083
    6. ' else' → logprob: -7.51853609085083
    7. ' ' → logprob: -8.768536567687988
    8. '                   ' → logprob: -9.018536567687988
    9. ' and' → logprob: -9.643536567687988
    10. ' if' → logprob: -9.643536567687988

Token 206: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01069700252264738
    2. ' elif' → logprob: -4.635696887969971
    3. '                ' → logprob: -7.385696887969971
    4. ' else' → logprob: -8.885697364807129
    5. '                   ' → logprob: -10.010697364807129
    6. '           ' → logprob: -10.135697364807129
    7. ' if' → logprob: -10.885697364807129
    8. 'elif' (adapté à ' elif') → logprob: -11.010697364807129
    9. '              ' → logprob: -11.260697364807129
    10. '            ' → logprob: -11.260697364807129

Token 207: ' seen' (ID: 6177)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03464178368449211
    2. 'not' → logprob: -3.784641742706299
    3. ' ch' → logprob: -5.159641742706299
    4. ' seen' → logprob: -5.659641742706299
    5. 'ch' → logprob: -6.409641742706299
    6. 'seen' → logprob: -8.034642219543457
    7. ' ' → logprob: -9.659642219543457
    8. ' apple' → logprob: -11.034642219543457
    9. '   ' → logprob: -11.409642219543457
    10. ' (' → logprob: -12.159642219543457

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. 'and' → logprob: -14.375001907348633
    3. 'not' → logprob: -14.750001907348633
    4. ' ' → logprob: -15.625001907348633
    5. ' [' → logprob: -15.750001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '0' → logprob: -16.375001907348633
    8. ' not' → logprob: -16.625001907348633
    9. '```' → logprob: -16.750001907348633
    10. '1' → logprob: -17.125001907348633

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061996594071388245
    2. '[' → logprob: -2.8119966983795166
    3. ' ' → logprob: -10.811996459960938
    4. '1' → logprob: -12.186996459960938
    5. '
' → logprob: -13.061996459960938
    6. 'False' → logprob: -15.061996459960938
    7. 'True' → logprob: -15.311996459960938
    8. ' [' → logprob: -15.686996459960938
    9. 'and' → logprob: -15.811996459960938
    10. '[
' → logprob: -16.061996459960938

Token 210: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023685414344072342
    2. 'and' → logprob: -3.7736854553222656
    3. '[' → logprob: -7.773685455322266
    4. ']' → logprob: -11.398685455322266
    5. ')' → logprob: -12.898685455322266
    6. ' ' → logprob: -13.523685455322266
    7. '[]' → logprob: -14.523685455322266
    8. '][' → logprob: -14.648685455322266
    9. '   ' → logprob: -14.898685455322266
    10. '	and' → logprob: -14.898685455322266

Token 211: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602267622947693
    2. 'and' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.785226821899414
    4. '[' → logprob: -14.035226821899414
    5. '	and' → logprob: -15.785226821899414
    6. '<|end|>' → logprob: -15.785226821899414
    7. ' ' → logprob: -15.910226821899414
    8. '==' → logprob: -16.160226821899414
    9. ')' → logprob: -16.785226821899414
    10. '   ' → logprob: -17.410226821899414

Token 212: ' not' (ID: 625)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.1542232483625412
    2. ' ch' → logprob: -2.0292232036590576
    3. ' not' → logprob: -4.904223442077637
    4. 'not' → logprob: -5.654223442077637
    5. '(ch' → logprob: -7.654223442077637
    6. ' (' → logprob: -10.529223442077637
    7. ' ' → logprob: -10.904223442077637
    8. '(not' → logprob: -11.529223442077637
    9. '   ' → logprob: -11.654223442077637
    10. '	ch' → logprob: -12.029223442077637

Token 213: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.0028083212673664093
    2. ' seen' → logprob: -5.877808094024658
    3. '   ' → logprob: -13.752808570861816
    4. ' ' → logprob: -13.752808570861816
    5. 'see' → logprob: -15.502808570861816
    6. '  ' → logprob: -15.627808570861816
    7. '           ' → logprob: -15.877808570861816
    8. '
' → logprob: -16.0028076171875
    9. 'se' → logprob: -16.2528076171875
    10. 's' → logprob: -16.3778076171875

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[
' → logprob: -14.625000953674316
    3. '1' → logprob: -15.750000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '0' → logprob: -16.625001907348633
    6. '```' → logprob: -16.625001907348633
    7. 's' → logprob: -17.500001907348633
    8. '...' → logprob: -17.562501907348633
    9. 'def' → logprob: -17.562501907348633
    10. 'and' → logprob: -18.000001907348633

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1797652393579483
    2. '[' → logprob: -1.804765224456787
    3. '(' → logprob: -12.804765701293945
    4. '```' → logprob: -12.867265701293945
    5. '0' → logprob: -13.054765701293945
    6. ' ' → logprob: -13.179765701293945
    7. '
' → logprob: -13.242265701293945
    8. '[
' → logprob: -13.617265701293945
    9. '   ' → logprob: -14.179765701293945
    10. 'def' → logprob: -14.742265701293945

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19703839719295502
    2. ' and' → logprob: -1.8220384120941162
    3. 'and' → logprob: -4.072038173675537
    4. ' ]' → logprob: -9.697038650512695
    5. ')' → logprob: -10.697038650512695
    6. '[' → logprob: -11.197038650512695
    7. '[]' → logprob: -13.822038650512695
    8. ' ' → logprob: -14.072038650512695
    9. ']:' → logprob: -14.572038650512695
    10. '']' → logprob: -14.947038650512695

Token 217: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889308780431747
    2. 'and' → logprob: -2.5788931846618652
    3. '[' → logprob: -13.203892707824707
    4. ' ' → logprob: -14.078892707824707
    5. '	and' → logprob: -15.453892707824707
    6. ' и' → logprob: -16.453893661499023
    7. '   ' → logprob: -16.703893661499023
    8. '[]' → logprob: -16.828893661499023
    9. '<|end|>' → logprob: -16.828893661499023
    10. ')' → logprob: -16.828893661499023

Token 218: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0010799680603668094
    2. ' ch' → logprob: -6.87608003616333
    3. '(ch' → logprob: -11.001079559326172
    4. 'apple' → logprob: -11.251079559326172
    5. '   ' → logprob: -11.876079559326172
    6. '  ' → logprob: -13.376079559326172
    7. '	ch' → logprob: -13.501079559326172
    8. 'banana' → logprob: -13.501079559326172
    9. ' ' → logprob: -13.626079559326172
    10. 'orange' → logprob: -14.001079559326172

Token 219: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02324605919420719
    2. '==' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.898245811462402
    4. ' !=' → logprob: -16.64824676513672
    5. ' ' → logprob: -16.77324676513672
    6. ' in' → logprob: -17.27324676513672
    7. ']==' → logprob: -17.64824676513672
    8. '===' → logprob: -17.89824676513672
    9. '=' → logprob: -18.27324676513672
    10. '```' → logprob: -18.52324676513672

Token 220: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.010712217539548874
    2. 'orange' → logprob: -4.635712146759033
    3. ' apple' → logprob: -7.010712146759033
    4. 'banana' → logprob: -10.510712623596191
    5. ' orange' → logprob: -10.635712623596191
    6. ' ' → logprob: -14.260712623596191
    7. '   ' → logprob: -14.385712623596191
    8. '  ' → logprob: -15.635712623596191
    9. 'Apple' → logprob: -16.010711669921875
    10. 'ap' → logprob: -16.135711669921875

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19279547035694122
    2. ':
' → logprob: -2.067795515060425
    3. '                   ' → logprob: -3.442795515060425
    4. '<|end|>' → logprob: -4.317795276641846
    5. '               ' → logprob: -6.317795276641846
    6. '<|end|>' → logprob: -7.442795276641846
    7. ' and' → logprob: -7.692795276641846
    8. '                       ' → logprob: -8.192795753479004
    9. ':

' → logprob: -9.317795753479004
    10. '):' → logprob: -9.817795753479004

Token 222: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010862821945920587
    2. '                       ' → logprob: -7.376086235046387
    3. '               ' → logprob: -8.876086235046387
    4. ' seen' → logprob: -9.001086235046387
    5. '<|end|>' → logprob: -9.376086235046387
    6. '                           ' → logprob: -10.751086235046387
    7. '                               ' → logprob: -11.001086235046387
    8. '   ' → logprob: -11.251086235046387
    9. '                    
' → logprob: -11.376086235046387
    10. '<|end|>' → logprob: -11.501086235046387

Token 223: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.6441698670387268
    2. ' seen' → logprob: -0.7691698670387268
    3. '                   ' → logprob: -5.019169807434082
    4. '                       ' → logprob: -5.394169807434082
    5. '                           ' → logprob: -9.019169807434082
    6. '                               ' → logprob: -9.144169807434082
    7. '               ' → logprob: -10.019169807434082
    8. '                    ' → logprob: -10.769169807434082
    9. '                     ' → logprob: -11.894169807434082
    10. '                                           ' → logprob: -12.019169807434082

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '<|end|>' → logprob: -14.625001907348633
    3. '```' → logprob: -14.625001907348633
    4. '=' → logprob: -15.125001907348633
    5. '[
' → logprob: -15.375001907348633
    6. '1' → logprob: -15.750001907348633
    7. '
' → logprob: -16.625001907348633
    8. ' [' → logprob: -16.875001907348633
    9. 'import' → logprob: -17.000001907348633
    10. '=True' → logprob: -17.125001907348633

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. 'True' → logprob: -12.625006675720215
    3. '[' → logprob: -12.875006675720215
    4. '0' → logprob: -14.375006675720215
    5. ' ' → logprob: -15.250006675720215
    6. '(' → logprob: -17.18750762939453
    7. '   ' → logprob: -17.25000762939453
    8. '```' → logprob: -17.37500762939453
    9. '
' → logprob: -17.43750762939453
    10. 'False' → logprob: -17.62500762939453

Token 226: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12579461932182312
    2. ']' → logprob: -2.8757946491241455
    3. ' =' → logprob: -3.0007946491241455
    4. ']=' → logprob: -5.125794410705566
    5. '                   ' → logprob: -6.500794410705566
    6. '[' → logprob: -6.500794410705566
    7. '=True' → logprob: -6.625794410705566
    8. ')' → logprob: -7.625794410705566
    9. '<|end|>' → logprob: -7.750794410705566
    10. '                       ' → logprob: -8.875794410705566

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062039606273174286
    2. ' =' → logprob: -2.812039613723755
    3. '=True' → logprob: -9.562039375305176
    4. '<|end|>' → logprob: -14.187039375305176
    5. '=False' → logprob: -14.937039375305176
    6. '                   ' → logprob: -16.062040328979492
    7. ' ' → logprob: -16.187040328979492
    8. '[' → logprob: -16.187040328979492
    9. '=
' → logprob: -16.562040328979492
    10. '   ' → logprob: -16.812040328979492

Token 228: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009117019944824278
    2. ' True' → logprob: -7.000911712646484
    3. '(True' → logprob: -16.500911712646484
    4. 'False' → logprob: -16.750911712646484
    5. '=True' → logprob: -18.250911712646484
    6. '   ' → logprob: -19.750911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '1' → logprob: -20.500911712646484
    9. '.True' → logprob: -20.625911712646484
    10. ' ' → logprob: -21.250911712646484

Token 229: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000477620807942003
    2. ' elif' → logprob: -8.50047779083252
    3. '<|end|>' → logprob: -8.87547779083252
    4. 'elif' → logprob: -9.25047779083252
    5. '           ' → logprob: -11.37547779083252
    6. '                ' → logprob: -12.25047779083252
    7. ' else' → logprob: -12.50047779083252
    8. '<|end|>' → logprob: -12.62547779083252
    9. '			' → logprob: -13.00047779083252
    10. '                   ' → logprob: -13.12547779083252

Token 230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.4153549020411447e-05
    2. 'elif' → logprob: -11.12502384185791
    3. '           ' → logprob: -12.75002384185791
    4. '<|end|>' → logprob: -13.37502384185791
    5. ' elif' → logprob: -13.62502384185791
    6. '			' → logprob: -14.12502384185791
    7. '                   ' → logprob: -14.62502384185791
    8. 'import' → logprob: -15.25002384185791
    9. '```' → logprob: -15.37502384185791
    10. '...' → logprob: -15.37502384185791

Token 231: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7878900766372681
    2. 'elif' (adapté à ' elif') → logprob: -0.7878900766372681
    3. ' elif' → logprob: -2.4128899574279785
    4. '           ' → logprob: -7.4128899574279785
    5. '	elif' → logprob: -9.162890434265137
    6. '                   ' → logprob: -11.037890434265137
    7. '   ' → logprob: -11.162890434265137
    8. 'else' → logprob: -11.287890434265137
    9. '                ' → logprob: -11.412890434265137
    10. '...' → logprob: -11.537890434265137

Token 232: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.25203463435173035
    2. ' seen' → logprob: -1.5020346641540527
    3. 'apple' → logprob: -10.877034187316895
    4. ' not' → logprob: -11.127034187316895
    5. '   ' → logprob: -11.252034187316895
    6. 'not' → logprob: -11.252034187316895
    7. 'look' → logprob: -12.127034187316895
    8. ' ' → logprob: -12.252034187316895
    9. 'see' → logprob: -12.252034187316895
    10. '           ' → logprob: -12.377034187316895

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -12.625017166137695
    3. '0' → logprob: -12.625017166137695
    4. '1' → logprob: -12.625017166137695
    5. '```' → logprob: -13.750017166137695
    6. ' ' → logprob: -14.000017166137695
    7. '   ' → logprob: -14.125017166137695
    8. 'and' → logprob: -14.375017166137695
    9. '[
' → logprob: -14.500017166137695
    10. 'not' → logprob: -14.750017166137695

Token 234: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007691321894526482
    2. '0' → logprob: -4.882691383361816
    3. '[' → logprob: -9.757691383361816
    4. ' ' → logprob: -10.882691383361816
    5. '   ' → logprob: -13.257691383361816
    6. '```' → logprob: -13.382691383361816
    7. '
' → logprob: -14.382691383361816
    8. ']' → logprob: -14.445191383361816
    9. '           ' → logprob: -14.945191383361816
    10. '2' → logprob: -14.945191383361816

Token 235: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04862596467137337
    2. 'and' → logprob: -3.048625946044922
    3. '[' → logprob: -10.423625946044922
    4. ' ' → logprob: -13.173625946044922
    5. ')' → logprob: -13.798625946044922
    6. '           ' → logprob: -13.923625946044922
    7. '               ' → logprob: -14.298625946044922
    8. ' ' → logprob: -14.298625946044922
    9. '<|end|>' → logprob: -14.548625946044922
    10. '            ' → logprob: -14.673625946044922

Token 236: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02054515667259693
    2. 'and' → logprob: -3.895545244216919
    3. '<|end|>' → logprob: -14.14554500579834
    4. ' ' → logprob: -14.27054500579834
    5. ',' → logprob: -14.77054500579834
    6. ' or' → logprob: -15.14554500579834
    7. '           ' → logprob: -15.77054500579834
    8. '[' → logprob: -15.77054500579834
    9. ')' → logprob: -16.270545959472656
    10. ' ' → logprob: -16.395545959472656

Token 237: ' seen' (ID: 6177)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5802087783813477
    2. ' not' → logprob: -0.8302087783813477
    3. 'seen' → logprob: -5.955208778381348
    4. ' seen' → logprob: -6.455208778381348
    5. '   ' → logprob: -10.580208778381348
    6. ' ' → logprob: -10.580208778381348
    7. '(not' → logprob: -11.205208778381348
    8. '	not' → logprob: -11.892708778381348
    9. 'se' → logprob: -12.955208778381348
    10. 'look' → logprob: -13.142708778381348

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.500001907348633
    3. '[
' → logprob: -15.875001907348633
    4. '```' → logprob: -16.875001907348633
    5. 'import' → logprob: -19.000001907348633
    6. ']' → logprob: -19.250001907348633
    7. ' [' → logprob: -19.250001907348633
    8. '0' → logprob: -19.375001907348633
    9. 'and' → logprob: -19.625001907348633
    10. '][' → logprob: -19.625001907348633

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '0' → logprob: -12.250008583068848
    3. ' ' → logprob: -13.375008583068848
    4. '```' → logprob: -13.750008583068848
    5. '[' → logprob: -14.687508583068848
    6. '   ' → logprob: -14.875008583068848
    7. '-' → logprob: -15.375008583068848
    8. 'True' → logprob: -16.125009536743164
    9. '(' → logprob: -16.250009536743164
    10. 'False' → logprob: -16.812509536743164

Token 240: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04863971471786499
    2. 'and' → logprob: -3.0486397743225098
    3. ']' → logprob: -10.173639297485352
    4. ')' → logprob: -11.673639297485352
    5. '[' → logprob: -12.548639297485352
    6. ' ' → logprob: -14.673639297485352
    7. '0' → logprob: -14.923639297485352
    8. '	and' → logprob: -14.923639297485352
    9. ' ' → logprob: -15.423639297485352
    10. '<|end|>' → logprob: -15.923639297485352

Token 241: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020678490400314
    2. 'and' → logprob: -2.3502068519592285
    3. ' ' → logprob: -17.35020637512207
    4. '	and' → logprob: -18.10020637512207
    5. ',' → logprob: -18.35020637512207
    6. '...' → logprob: -18.47520637512207
    7. '           ' → logprob: -18.72520637512207
    8. ' ' → logprob: -18.72520637512207
    9. ' и' → logprob: -18.85020637512207
    10. '0' → logprob: -18.85020637512207

Token 242: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0009159822366200387
    2. ' ch' → logprob: -7.000916004180908
    3. 'orange' → logprob: -13.62591552734375
    4. '(ch' → logprob: -14.12591552734375
    5. '   ' → logprob: -14.12591552734375
    6. '	ch' → logprob: -14.75091552734375
    7. '           ' → logprob: -15.25091552734375
    8. 'not' → logprob: -15.25091552734375
    9. ' ' → logprob: -15.75091552734375
    10. ' orange' → logprob: -16.12591552734375

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014164801687002182
    2. '==' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.389164924621582
    4. ' ' → logprob: -14.639164924621582
    5. ' !=' → logprob: -16.389163970947266
    6. '=' → logprob: -17.389163970947266
    7. ' =' → logprob: -17.389163970947266
    8. '===' → logprob: -17.764163970947266
    9. '    ' → logprob: -18.014163970947266
    10. '```' → logprob: -18.014163970947266

Token 244: ' orange' (ID: 26205)
  Prédit: 'orange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orange' → logprob: -0.002486715093255043
    2. ' orange' → logprob: -6.002486705780029
    3. 'banana' → logprob: -11.502487182617188
    4. '.orange' → logprob: -15.377487182617188
    5. 'orang' → logprob: -16.002487182617188
    6. 'str' → logprob: -16.127487182617188
    7. '
' → logprob: -16.377487182617188
    8. '`' → logprob: -16.377487182617188
    9. '```' → logprob: -16.627487182617188
    10. ' banana' → logprob: -16.752487182617188

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07057182490825653
    2. ':
' → logprob: -2.6955718994140625
    3. '               ' → logprob: -8.570571899414062
    4. ' and' → logprob: -8.945571899414062
    5. '                   ' → logprob: -9.195571899414062
    6. '==' → logprob: -9.820571899414062
    7. ':

' → logprob: -10.070571899414062
    8. '<|end|>' → logprob: -10.820571899414062
    9. 'and' → logprob: -10.945571899414062
    10. '           ' → logprob: -11.070571899414062

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013589908368885517
    2. '               ' → logprob: -4.388589859008789
    3. 'insert' → logprob: -7.388589859008789
    4. '                       ' → logprob: -8.013589859008789
    5. ' insert' → logprob: -9.513589859008789
    6. '           ' → logprob: -11.638589859008789
    7. '                  ' → logprob: -11.763589859008789
    8. '```' → logprob: -12.138589859008789
    9. ':' → logprob: -12.638589859008789
    10. ':
' → logprob: -12.638589859008789

Token 247: ' insert' (ID: 10898)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' (adapté à ' insert') → logprob: -0.10539061576128006
    2. ' insert' → logprob: -2.6053905487060547
    3. 'seen' → logprob: -4.355390548706055
    4. 'break' → logprob: -5.855390548706055
    5. '               ' → logprob: -6.230390548706055
    6. 'look' → logprob: -6.355390548706055
    7. ' seen' → logprob: -6.355390548706055
    8. ' break' → logprob: -6.605390548706055
    9. '           ' → logprob: -6.980390548706055
    10. '                   ' → logprob: -7.480390548706055

Token 248: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.6345989108085632
    2. '(' → logprob: -1.134598970413208
    3. '(f' → logprob: -2.134598970413208
    4. '((' → logprob: -3.509598970413208
    5. '("' → logprob: -10.884598731994629
    6. '('' → logprob: -11.509598731994629
    7. '(("' → logprob: -11.759598731994629
    8. '(x' → logprob: -11.884598731994629
    9. '("("' → logprob: -12.009598731994629
    10. 'banana' → logprob: -12.009598731994629

Token 249: 'anana' (ID: 71422)
  Prédit: 'anana'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anana' → logprob: -0.005368698853999376
    2. 'an' → logprob: -5.880368709564209
    3. 'banana' → logprob: -6.630368709564209
    4. 'ana' → logprob: -6.880368709564209
    5. 'anan' → logprob: -9.63036823272705
    6. '(' → logprob: -9.88036823272705
    7. '"' → logprob: -10.13036823272705
    8. 'a' → logprob: -11.00536823272705
    9. ''an' → logprob: -12.25536823272705
    10. '""' → logprob: -12.75536823272705

Token 250: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10929577797651291
    2. '+' → logprob: -2.3592958450317383
    3. ' +' → logprob: -4.734295845031738
    4. ')
' → logprob: -9.359295845031738
    5. ' )' → logprob: -9.484295845031738
    6. '+)' → logprob: -9.984295845031738
    7. '<|end|>' → logprob: -10.984295845031738
    8. ')))' → logprob: -12.234295845031738
    9. ')}}' → logprob: -12.359295845031738
    10. '[' → logprob: -12.734295845031738

Token 251: ' apple' (ID: 30366)
  Prédit: 'apple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0007261329446919262
    2. ' apple' → logprob: -7.250726222991943
    3. 'orange' → logprob: -11.125725746154785
    4. ' ' → logprob: -14.125725746154785
    5. '   ' → logprob: -15.000725746154785
    6. 'banana' → logprob: -15.625725746154785
    7. '         ' → logprob: -16.3757266998291
    8. '  ' → logprob: -16.8757266998291
    9. ' orange' → logprob: -16.8757266998291
    10. '     ' → logprob: -16.8757266998291

Token 252: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023264825344086
    2. '+' → logprob: -1.910232663154602
    3. ')' → logprob: -11.785232543945312
    4. '<|end|>' → logprob: -14.410232543945312
    5. '+)' → logprob: -16.660232543945312
    6. '+xml' → logprob: -16.785232543945312
    7. ' +
' → logprob: -17.410232543945312
    8. '),' → logprob: -18.035232543945312
    9. '+
' → logprob: -18.035232543945312
    10. ')+' → logprob: -18.160232543945312

Token 253: ' orange' (ID: 26205)
  Prédit: 'orange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orange' → logprob: -0.0002614550176076591
    2. ' orange' → logprob: -8.250261306762695
    3. 'banana' → logprob: -17.000261306762695
    4. 'apple' → logprob: -18.000261306762695
    5. '.orange' → logprob: -18.875261306762695
    6. '   ' → logprob: -19.625261306762695
    7. ' ' → logprob: -20.000261306762695
    8. '`' → logprob: -20.750261306762695
    9. 'Orange' → logprob: -20.875261306762695
    10. 'oracle' → logprob: -21.625261306762695

Token 254: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000800811278168112
    2. ')
' → logprob: -7.500800609588623
    3. ')}}' → logprob: -9.375801086425781
    4. ')))' → logprob: -9.625801086425781
    5. '")' → logprob: -10.750801086425781
    6. ' )' → logprob: -11.250801086425781
    7. '               ' → logprob: -11.500801086425781
    8. '                           ' → logprob: -11.500801086425781
    9. '           ' → logprob: -11.875801086425781
    10. '')' → logprob: -12.000801086425781

Token 255: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0266004800796509
    2. '()' → logprob: -1.0266004800796509
    3. '('' → logprob: -2.1516003608703613
    4. '(len' → logprob: -2.2766003608703613
    5. '(sum' → logprob: -3.1516003608703613
    6. '("' → logprob: -5.276600360870361
    7. '("")' → logprob: -5.526600360870361
    8. '(f' → logprob: -5.776600360870361
    9. '(list' → logprob: -6.276600360870361
    10. '(*' → logprob: -6.276600360870361

Token 257: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(insert' → logprob: -15.875
    3. 'look' → logprob: -17.0
    4. ' (' → logprob: -17.375
    5. '(
' → logprob: -17.375
    6. '(f' → logprob: -17.5
    7. '(lo' → logprob: -17.875
    8. '((' → logprob: -18.75
    9. ')' → logprob: -18.75
    10. '(str' → logprob: -19.875

Token 258: 'look' (ID: 9001)
  Prédit: 'look'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'look' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.000003814697266
    3. ' look' → logprob: -13.750003814697266
    4. 'lookup' → logprob: -15.500003814697266
    5. 'lo' → logprob: -18.000003814697266
    6. 'Look' → logprob: -18.625003814697266
    7. 'str' → logprob: -18.875003814697266
    8. '{' → logprob: -19.125003814697266
    9. 'looks' → logprob: -19.750003814697266
    10. 'looking' → logprob: -20.000003814697266

Token 259: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.45848218582978e-06
    2. 'ат' → logprob: -13.62500286102295
    3. ' at' → logprob: -14.12500286102295
    4. '(at' → logprob: -15.12500286102295
    5. ')' → logprob: -16.250001907348633
    6. '	at' → logprob: -16.875001907348633
    7. '))' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_at' → logprob: -17.875001907348633
    10. '(' → logprob: -18.000001907348633

Token 260: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01427657064050436
    2. '))' → logprob: -4.264276504516602
    3. '())' → logprob: -9.139276504516602
    4. ')}' → logprob: -13.514276504516602
    5. '()' → logprob: -13.639276504516602
    6. ')))' → logprob: -13.764276504516602
    7. '})' → logprob: -13.764276504516602
    8. ' )' → logprob: -15.139276504516602
    9. ')`' → logprob: -15.514276504516602
    10. ')
' → logprob: -15.639276504516602


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 258
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 44.19%
Précision adaptée (1ère position): 46.51%
Précision (top 10): 81.01%
================================================================================
