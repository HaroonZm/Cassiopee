================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_string = input()

output_masked_string = 'x' * len(user_input_string)

print(output_masked_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6409299969673157
    2. '[' → logprob: -1.765929937362671
    3. '.' → logprob: -2.390929937362671
    4. ':' → logprob: -2.765929937362671
    5. '```' → logprob: -3.015929937362671
    6. ''' → logprob: -3.640929937362671
    7. '(' → logprob: -4.39093017578125
    8. ' ' → logprob: -4.64093017578125
    9. '=' → logprob: -4.76593017578125
    10. '"' → logprob: -5.01593017578125

Token 4: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.034937333315610886
    2. ''' → logprob: -3.6599373817443848
    3. '""' → logprob: -5.659937381744385
    4. '"user' → logprob: -5.784937381744385
    5. ' "' → logprob: -7.034937381744385
    6. ' ' → logprob: -7.159937381744385
    7. '''' → logprob: -8.784936904907227
    8. '"""' → logprob: -9.534936904907227
    9. ' ""' → logprob: -9.534936904907227
    10. ' '' → logprob: -10.534936904907227

Token 5: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009948217775672674
    2. ''' → logprob: -7.750994682312012
    3. '('' → logprob: -8.750994682312012
    4. '```' → logprob: -9.125994682312012
    5. '(
' → logprob: -9.500994682312012
    6. '()' → logprob: -9.625994682312012
    7. '`' → logprob: -10.000994682312012
    8. '"' → logprob: -10.625994682312012
    9. ')' → logprob: -11.125994682312012
    10. '.' → logprob: -11.125994682312012

Token 6: 'output' (ID: 6130)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0593276172876358
    2. '.strip' → logprob: -2.9343276023864746
    3. '.lower' → logprob: -6.184327602386475
    4. '.split' → logprob: -6.684327602386475
    5. 'if' → logprob: -8.434328079223633
    6. '.upper' → logprob: -8.684328079223633
    7. '.replace' → logprob: -8.809328079223633
    8. '+' → logprob: -8.809328079223633
    9. '=' → logprob: -9.434328079223633
    10. 'print' → logprob: -9.809328079223633

Token 7: '_mask' (ID: 21732)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10475969314575195
    2. '+' → logprob: -3.104759693145752
    3. '.strip' → logprob: -3.479759693145752
    4. '\n' → logprob: -4.604759693145752
    5. 'print' → logprob: -6.479759693145752
    6. ')' → logprob: -6.604759693145752
    7. '.split' → logprob: -6.604759693145752
    8. '```' → logprob: -6.729759693145752
    9. '\' → logprob: -6.854759693145752
    10. '.lower' → logprob: -6.854759693145752

Token 8: 'ed' (ID: 295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9309787750244141
    2. '=' → logprob: -1.305978775024414
    3. '[:]' → logprob: -1.680978775024414
    4. '[' → logprob: -2.180978775024414
    5. '_' → logprob: -4.930978775024414
    6. '.' → logprob: -5.055978775024414
    7. '()' → logprob: -5.680978775024414
    8. '[]' → logprob: -6.055978775024414
    9. '.strip' → logprob: -6.180978775024414
    10. '.lower' → logprob: -6.180978775024414

Token 9: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5330634713172913
    2. '=' → logprob: -1.7830634117126465
    3. ' =' → logprob: -1.7830634117126465
    4. '_' → logprob: -2.9080634117126465
    5. '[' → logprob: -5.1580634117126465
    6. '[:]' → logprob: -5.7830634117126465
    7. 'user' → logprob: -5.9080634117126465
    8. ''' → logprob: -6.2830634117126465
    9. '(user' → logprob: -6.4080634117126465
    10. '"' → logprob: -7.0330634117126465

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18115860223770142
    2. '=' → logprob: -1.8061585426330566
    3. 'user' → logprob: -7.806158542633057
    4. '_' → logprob: -8.306159019470215
    5. '(' → logprob: -8.681159019470215
    6. 'output' → logprob: -8.681159019470215
    7. ' ' → logprob: -9.181159019470215
    8. '=user' → logprob: -9.556159019470215
    9. '(user' → logprob: -10.181159019470215
    10. ',' → logprob: -10.306159019470215

Token 11: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.153726577758789
    2. '"user' → logprob: -1.278726577758789
    3. 'user' → logprob: -1.653726577758789
    4. '""' → logprob: -2.153726577758789
    5. '"' → logprob: -2.903726577758789
    6. ''user' → logprob: -3.653726577758789
    7. ''' → logprob: -4.653726577758789
    8. '''.' → logprob: -5.528726577758789
    9. ' user' → logprob: -5.778726577758789
    10. ''*' → logprob: -7.778726577758789

Token 12: 'x' (ID: 87)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7026864290237427
    2. '*' → logprob: -0.8276864290237427
    3. ''*' → logprob: -3.577686309814453
    4. '''' → logprob: -4.077686309814453
    5. '#' → logprob: -4.202686309814453
    6. ''.' → logprob: -6.452686309814453
    7. '"' → logprob: -6.452686309814453
    8. ''''' → logprob: -7.077686309814453
    9. '')' → logprob: -7.827686309814453
    10. ' '' → logprob: -8.077686309814453

Token 13: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030986160039901733
    2. '')' → logprob: -4.155986309051514
    3. ''*' → logprob: -4.405986309051514
    4. ''''' → logprob: -7.155986309051514
    5. ''x' → logprob: -7.905986309051514
    6. 'x' → logprob: -8.030985832214355
    7. '*' → logprob: -8.155985832214355
    8. ')' → logprob: -8.530985832214355
    9. '"' → logprob: -9.405985832214355
    10. '']' → logprob: -9.655985832214355

Token 14: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00038467496051453054
    2. ' len' → logprob: -8.250384330749512
    3. '(len' → logprob: -9.000384330749512
    4. '[len' → logprob: -17.000385284423828
    5. 'user' → logprob: -17.375385284423828
    6. '10' → logprob: -18.625385284423828
    7. '20' → logprob: -18.750385284423828
    8. '	len' → logprob: -19.750385284423828
    9. '<len' → logprob: -19.875385284423828
    10. ',len' → logprob: -19.875385284423828

Token 16: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.02331477589905262
    2. '(' → logprob: -3.7733147144317627
    3. 'user' → logprob: -10.273314476013184
    4. '(use' → logprob: -10.648314476013184
    5. '(us' → logprob: -12.023314476013184
    6. '(
' → logprob: -12.898314476013184
    7. '('' → logprob: -14.023314476013184
    8. '(

' → logprob: -14.398314476013184
    9. '(input' → logprob: -15.773314476013184
    10. '(`' → logprob: -15.898314476013184

Token 17: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.12258882028982e-05
    2. 'input' → logprob: -10.37506103515625
    3. '_user' → logprob: -11.12506103515625
    4. '_' → logprob: -11.87506103515625
    5. '_output' → logprob: -12.25006103515625
    6. '_string' → logprob: -13.50006103515625
    7. 'put' → logprob: -14.00006103515625
    8. '_in' → logprob: -14.62506103515625
    9. ' _' → logprob: -15.50006103515625
    10. '_put' → logprob: -16.00006103515625

Token 18: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0002205828350270167
    2. 'string' → logprob: -9.25022029876709
    3. ')' → logprob: -9.50022029876709
    4. ')_' → logprob: -10.25022029876709
    5. '_str' → logprob: -12.12522029876709
    6. '_' → logprob: -13.12522029876709
    7. '_s' → logprob: -13.25022029876709
    8. '_)' → logprob: -13.37522029876709
    9. 'String' → logprob: -13.50022029876709
    10. '_user' → logprob: -14.50022029876709

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '')' → logprob: -13.87500286102295
    3. ')`' → logprob: -14.50000286102295
    4. ')
' → logprob: -15.00000286102295
    5. ' )' → logprob: -15.50000286102295
    6. '`)' → logprob: -15.62500286102295
    7. '))' → logprob: -16.000001907348633
    8. '[' → logprob: -17.125001907348633
    9. 'user' → logprob: -17.875001907348633
    10. ')))' → logprob: -18.125001907348633

Token 20: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.191489642835222e-05
    2. '<|end|>' → logprob: -10.875041961669922
    3. ' print' → logprob: -12.000041961669922
    4. '#' → logprob: -12.000041961669922
    5. '#print' → logprob: -12.375041961669922
    6. ')' → logprob: -12.500041961669922
    7. '```' → logprob: -13.875041961669922
    8. '
' → logprob: -15.250041961669922
    9. 'pr' → logprob: -15.625041961669922
    10. 'user' → logprob: -15.750041961669922

Token 21: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2753463685512543
    2. '(output' → logprob: -1.5253463983535767
    3. '(user' → logprob: -3.775346279144287
    4. '('' → logprob: -8.900346755981445
    5. '()' → logprob: -10.650346755981445
    6. '(print' → logprob: -11.275346755981445
    7. '("("' → logprob: -11.525346755981445
    8. '(input' → logprob: -11.900346755981445
    9. '(f' → logprob: -12.150346755981445
    10. 'user' → logprob: -12.275346755981445

Token 22: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0008365504327230155
    2. '_)' → logprob: -7.875836372375488
    3. ')' → logprob: -8.125836372375488
    4. '_' → logprob: -8.875836372375488
    5. ')_' → logprob: -11.875836372375488
    6. '_MASK' → logprob: -12.125836372375488
    7. 'masked' → logprob: -12.875836372375488
    8. '_output' → logprob: -13.000836372375488
    9. '_masks' → logprob: -13.375836372375488
    10. '_m' → logprob: -13.750836372375488

Token 23: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.054500666621607e-06
    2. 'e' → logprob: -13.00000286102295
    3. 'output' → logprob: -15.37500286102295
    4. 'sed' → logprob: -16.125003814697266
    5. 'eded' → logprob: -16.500003814697266
    6. '_ed' → logprob: -16.875003814697266
    7. '_str' → logprob: -16.875003814697266
    8. '_string' → logprob: -17.375003814697266
    9. '_mask' → logprob: -17.500003814697266
    10. 'edd' → logprob: -17.500003814697266

Token 24: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.011759092099964619
    2. 'ed' → logprob: -4.636759281158447
    3. '_mask' → logprob: -6.761759281158447
    4. '_str' → logprob: -8.136758804321289
    5. 'string' → logprob: -8.386758804321289
    6. '_s' → logprob: -9.261758804321289
    7. '_' → logprob: -9.511758804321289
    8. '_strings' → logprob: -10.136758804321289
    9. 's' → logprob: -10.636758804321289
    10. '_output' → logprob: -11.386758804321289

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.750000953674316
    3. '')' → logprob: -15.375000953674316
    4. '))' → logprob: -15.625000953674316
    5. '`)' → logprob: -16.75
    6. ')`' → logprob: -18.125
    7. '")' → logprob: -19.125
    8. ')
' → logprob: -19.375
    9. '）' → logprob: -20.25
    10. '()' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 12
Précision stricte (1ère position): 43.48%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 52.17%
================================================================================
