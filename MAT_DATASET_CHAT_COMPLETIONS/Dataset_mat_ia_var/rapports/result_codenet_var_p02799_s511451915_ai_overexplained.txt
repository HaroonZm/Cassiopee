================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # On importe le module sys pour accéder à stdin et exit

input = sys.stdin.readline  # On redéfinit input pour lire une ligne optimisée depuis l'entrée standard

# Lecture des deux premiers entiers depuis l'entrée standard.
# 'N' est le nombre de sommets (ou de noeuds), et 'M' est le nombre d'arêtes du graphe.
N, M = map(int, input().split())

# Lecture d'une liste d'entiers de longueur N correspondant à des valeurs pour chaque sommet.
# Utilisation de map pour convertir chaque élément lu dans input().split() en int.
D = list(map(int, input().split()))

# Lecture des M arêtes du graphe. Chaque arête est saisie comme un couple de sommets (x, y).
# On utilise 'sorted' pour garantir que l'arête est stockée dans l'ordre croissant (important pour utiliser comme clé).
# On crée M tuples (arêtes), stockés dans une liste EDGE.
EDGE = [tuple(sorted(map(int, input().split()))) for i in range(M)]

# On initialise un dictionnaire pour associer chaque arête à un index unique (de 0 à M-1).
DICE = dict()
for i in range(M):
    # La clé est l'arête elle-même (tuple de deux entiers) et la valeur est son indice d'apparition.
    DICE[EDGE[i]] = i

# Construction de la liste d'adjacence pour représenter le graphe. 
# E[i] contiendra la liste des sommets adjacents au sommet i.
# On utilise N+1 pour que les indices aillent de 1 à N (l'index 0 ne sera pas utilisé).
E = [[] for i in range(N + 1)]
for x, y in EDGE:
    # Pour chaque arête (x, y), on ajoute y à la liste des voisins de x et réciproquement.
    E[x].append(y)
    E[y].append(x)

# On crée une liste de tuples contenant les valeurs de D (les dés) et leur position originale.
# enumerate(D) va donner (index, valeur). On ajoute 1 à l'index car nos sommets commencent à 1.
P = [(x, ind + 1) for ind, x in enumerate(D)]
# On trie P par valeur (valeur du dé) croissante.
P.sort()

# On rajoute un zéro devant D pour que D[1] soit le dé pour le sommet 1, etc.
D = [0] + D

# On initialise une liste DECIDED pour marquer le "couleur" ou l'état de chaque sommet.
# Elle contient des chaînes vides au départ; DECIDED[i] vaudra typiquement "B" ou "W" plus tard.
DECIDED = [""] * (N + 1)

# DIS est une liste qui enregistrera les valeurs associées à chaque arête, initialisées à -1.
DIS = [-1] * M

# On parcourt tous les sommets dans l'ordre croissant de la valeur du dé.
for x, po in P:
    flag = 0  # Ce flag servira à savoir s'il y a au moins un voisin déjà colorié.

    # On parcourt tous les voisins du sommet po.
    for to in E[po]:
        # Si un voisin de po est déjà colorié ("B" ou "W"), on note le flag.
        if DECIDED[to] != "":
            flag = 1
            break  # On n'a pas besoin d'en chercher d'autres.

    # Si po n'a aucun voisin déjà colorié :
    if flag == 0:
        # Pour chaque voisin non colorié de po :
        for to in E[po]:
            # Si le dé du voisin to est égal à x (celui de po)
            if D[to] == x:
                # On attribue à DIS pour cette arête la valeur x.
                DIS[DICE[tuple(sorted([po, to]))]] = x
                # On décide arbitrairement une coloration : po en "B" (noir), to en "W" (blanc)
                DECIDED[po] = "B"
                DECIDED[to] = "W"
                break  # On sort de la boucle
        else:
            # Si aucun voisin n'a pu être affecté correctement, on affiche -1 et on termine le programme.
            print(-1)
            sys.exit()
    else:
        # Cas où au moins un voisin de po a déjà été colorié :
        for to in E[po]:
            # Si le voisin to est colorié, mais pas po, on donne à po la couleur opposée à celle de to.
            if DECIDED[to] != "" and DECIDED[po] == "":
                # Si le voisin est "B" (noir), po sera "W" (blanc), et vice versa.
                if DECIDED[to] == "B":
                    DECIDED[po] = "W"
                else:
                    DECIDED[po] = "B"
                # On assigne à DIS pour cette arête la valeur x.
                DIS[DICE[tuple(sorted([po, to]))]] = x
                break
            # Si le voisin to est colorié, po aussi, et ils ont la même couleur :
            elif DECIDED[to] != "" and DECIDED[po] == DECIDED[to]:
                # Si x est plus petit ou égal à D[to], on ne fait rien pour cette itération.
                if x <= D[to]:
                    continue
                # Sinon, on met le décalage (x - D[to]) sur cette arête.
                DIS[DICE[tuple(sorted([po, to]))]] = x - D[to]
                break
            # Si les deux sont déjà colorés et ont une couleur différente :
            elif DECIDED[to] != "" and DECIDED[po] != DECIDED[to]:
                # Si x est <= D[to], rien à faire pour cette arête.
                if x <= D[to]:
                    continue
                # Sinon, on attribue x à cette arête.
                DIS[DICE[tuple(sorted([po, to]))]] = x
                break

# Après l'affectation des couleurs et des valeurs d'arêtes, on affiche le résultat :
# On affiche la suite des couleurs décidées pour chaque sommet (sauf l'indice 0, inutilisé).
print("".join(DECIDED[1:]))

# Pour chaque arête, on affiche la valeur correspondante dans DIS :
# Si aucune valeur n'a été assignée (toujours à -1), on affiche 10^9.
for d in DIS:
    if d == -1:
        print(10 ** 9)
    else:
        print(d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035237859934568405
    2. '\n' → logprob: -4.410237789154053
    3. '<|end|>' → logprob: -4.910237789154053
    4. 'import' → logprob: -5.160237789154053
    5. '\' → logprob: -6.035237789154053
    6. ' ' → logprob: -6.035237789154053
    7. '' → logprob: -6.910237789154053
    8. 'newline' → logprob: -7.285237789154053
    9. '<|end|>' → logprob: -7.535237789154053
    10. '.import' → logprob: -7.785237789154053

Token 4: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023477701470255852
    2. '  ' → logprob: -4.273477554321289
    3. '<|end|>' → logprob: -5.648477554321289
    4. '\' → logprob: -6.898477554321289
    5. '[' → logprob: -7.023477554321289
    6. 'import' → logprob: -7.273477554321289
    7. '<|end|>' → logprob: -7.398477554321289
    8. '.' → logprob: -7.773477554321289
    9. '\n' → logprob: -8.023477554321289
    10. '  
' → logprob: -8.773477554321289

Token 5: ' importe' (ID: 80493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021656466647982597
    2. ' e' → logprob: -4.646656513214111
    3. 'l' → logprob: -6.021656513214111
    4. 'eline' → logprob: -6.146656513214111
    5. 'el' → logprob: -6.521656513214111
    6. '_' → logprob: -6.646656513214111
    7. ' ' → logprob: -7.021656513214111
    8. '-' → logprob: -7.146656513214111
    9. ' import' → logprob: -7.396656513214111
    10. 'ly' → logprob: -7.896656513214111

Token 6: ' le' (ID: 505)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.329092800617218
    2. ' os' → logprob: -1.8290927410125732
    3. ' ' → logprob: -2.4540927410125732
    4. 'sys' → logprob: -3.8290927410125732
    5. 'os' → logprob: -5.454092979431152
    6. ' les' → logprob: -6.204092979431152
    7. ',' → logprob: -6.579092979431152
    8. ' ' → logprob: -7.204092979431152
    9. ' le' → logprob: -7.454092979431152
    10. '  ' → logprob: -7.704092979431152

Token 7: ' module' (ID: 8827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24419498443603516
    2. 'module' → logprob: -2.119194984436035
    3. ' système' → logprob: -3.494194984436035
    4. ' module' → logprob: -3.619194984436035
    5. 'sys' → logprob: -4.244194984436035
    6. 'mod' → logprob: -4.994194984436035
    7. ' sys' → logprob: -5.369194984436035
    8. ' ' → logprob: -5.744194984436035
    9. 'f' → logprob: -5.994194984436035
    10. 'package' → logprob: -7.119194984436035

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02336171269416809
    2. 'import' → logprob: -4.773361682891846
    3. ' .' → logprob: -5.898361682891846
    4. '.sys' → logprob: -5.898361682891846
    5. '.import' → logprob: -6.398361682891846
    6. ' ' → logprob: -6.398361682891846
    7. ',' → logprob: -6.898361682891846
    8. 'sys' → logprob: -7.148361682891846
    9. '\n' → logprob: -7.273361682891846
    10. '\' → logprob: -7.398361682891846

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.040771011263132095
    2. '\n' → logprob: -3.915771007537842
    3. '
' → logprob: -4.790771007537842
    4. '\' → logprob: -5.290771007537842
    5. 'import' → logprob: -6.415771007537842
    6. 'newline' → logprob: -7.040771007537842
    7. '' → logprob: -7.165771007537842
    8. '<|end|>' → logprob: -7.290771007537842
    9. ' ' → logprob: -7.415771007537842
    10. ',' → logprob: -7.790771007537842

Token 10: ' accéder' (ID: 120555)
  Prédit: ' pouvoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -0.22024700045585632
    2. ' gérer' → logprob: -2.8452470302581787
    3. 'r' → logprob: -3.5952470302581787
    4. ' récupérer' → logprob: -3.9702470302581787
    5. ' la' → logprob: -4.4702467918396
    6. ' manip' → logprob: -4.5952467918396
    7. 'g' → logprob: -4.8452467918396
    8. 'l' → logprob: -4.9702467918396
    9. ' permettre' → logprob: -4.9702467918396
    10. 'util' → logprob: -5.0952467918396

Token 11: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3427526652812958
    2. '.' → logprob: -2.217752695083618
    3. ' aux' → logprob: -2.342752695083618
    4. ' au' → logprob: -3.467752695083618
    5. ' ' → logprob: -3.967752695083618
    6. ' .' → logprob: -4.092752456665039
    7. 'à' → logprob: -5.217752456665039
    8. ' a' → logprob: -5.592752456665039
    9. 'aux' → logprob: -6.217752456665039
    10. 'au' → logprob: -6.467752456665039

Token 12: ' stdin' (ID: 75143)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.9642056822776794
    2. ' l' → logprob: -1.3392057418823242
    3. ' sys' → logprob: -1.7142057418823242
    4. 'argv' → logprob: -2.964205741882324
    5. ' la' → logprob: -3.714205741882324
    6. 'la' → logprob: -4.214205741882324
    7. 'sys' → logprob: -4.214205741882324
    8. ' ' → logprob: -4.339205741882324
    9. '_' → logprob: -4.464205741882324
    10. 'l' → logprob: -4.589205741882324

Token 13: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21649128198623657
    2. 'import' → logprob: -2.341491222381592
    3. '
' → logprob: -3.591491222381592
    4. '\n' → logprob: -3.716491222381592
    5. '\' → logprob: -4.341491222381592
    6. ',' → logprob: -4.591491222381592
    7. '.readline' → logprob: -5.091491222381592
    8. '' → logprob: -5.466491222381592
    9. 'newline' → logprob: -6.216491222381592
    10. ' ' → logprob: -6.341491222381592

Token 14: ' exit' (ID: 10654)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.038175296038389206
    2. ' stdout' → logprob: -3.288175344467163
    3. 'stderr' → logprob: -9.288175582885742
    4. '.stdout' → logprob: -11.163175582885742
    5. 'argv' → logprob: -11.413175582885742
    6. '(stdout' → logprob: -12.038175582885742
    7. '_stdout' → logprob: -12.038175582885742
    8. 'sys' → logprob: -13.663175582885742
    9. ' argv' → logprob: -14.413175582885742
    10. 'print' → logprob: -14.413175582885742

Token 15: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11882884055376053
    2. '\n' → logprob: -2.993828773498535
    3. '\' → logprob: -3.243828773498535
    4. 'import' → logprob: -4.868828773498535
    5. '
' → logprob: -5.243828773498535
    6. '' → logprob: -5.743828773498535
    7. ',' → logprob: -6.243828773498535
    8. 'newline' → logprob: -6.993828773498535
    9. '[' → logprob: -7.243828773498535
    10. '```' → logprob: -7.493828773498535

Token 16: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23320718109607697
    2. '\n' → logprob: -2.6082072257995605
    3. '
' → logprob: -3.3582072257995605
    4. 'import' → logprob: -3.4832072257995605
    5. '```' → logprob: -3.8582072257995605
    6. '\' → logprob: -4.8582072257995605
    7. 'sys' → logprob: -4.8582072257995605
    8. 'print' → logprob: -5.1082072257995605
    9. ',' → logprob: -5.2332072257995605
    10. '#' → logprob: -5.4832072257995605

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004258377011865377
    2. '.' → logprob: -5.629258155822754
    3. '()' → logprob: -7.754258155822754
    4. ' (' → logprob: -9.379258155822754
    5. ')' → logprob: -10.129258155822754
    6. '_' → logprob: -10.754258155822754
    7. '(.)' → logprob: -10.879258155822754
    8. '=' → logprob: -11.004258155822754
    9. '(
' → logprob: -11.504258155822754
    10. 's' → logprob: -11.629258155822754

Token 18: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20640704035758972
    2. 'sys' → logprob: -1.706407070159912
    3. 'input' → logprob: -5.956407070159912
    4. ' input' → logprob: -6.081407070159912
    5. ' lambda' → logprob: -10.456406593322754
    6. ' ' → logprob: -10.581406593322754
    7. 'lambda' → logprob: -11.206406593322754
    8. '	sys' → logprob: -11.206406593322754
    9. '=sys' → logprob: -11.831406593322754
    10. '(sys' → logprob: -11.956406593322754

Token 19: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003933187108486891
    2. '.stdin' → logprob: -5.628932952880859
    3. '.readline' → logprob: -8.50393295288086
    4. ' .' → logprob: -9.87893295288086
    5. '.input' → logprob: -10.75393295288086
    6. '.stdout' → logprob: -11.25393295288086
    7. '.import' → logprob: -12.00393295288086
    8. '.argv' → logprob: -12.12893295288086
    9. '."""' → logprob: -12.12893295288086
    10. '.setdefault' → logprob: -12.50393295288086

Token 20: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12136289477348328
    2. '.readline' → logprob: -2.3713629245758057
    3. '.read' → logprob: -3.8713629245758057
    4. '.readlines' → logprob: -10.496362686157227
    5. 'read' → logprob: -10.871362686157227
    6. '.Read' → logprob: -11.371362686157227
    7. '.write' → logprob: -11.496362686157227
    8. '[' → logprob: -11.496362686157227
    9. ' .' → logprob: -11.996362686157227
    10. '```' → logprob: -12.746362686157227

Token 21: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2862534523010254
    2. '(' → logprob: -1.4112534523010254
    3. '(
' → logprob: -5.661253452301025
    4. '()
' → logprob: -7.036253452301025
    5. '().' → logprob: -8.536252975463867
    6. '(

' → logprob: -8.786252975463867
    7. ')' → logprob: -9.411252975463867
    8. '
' → logprob: -9.411252975463867
    9. '()

' → logprob: -10.161252975463867
    10. ' ' → logprob: -10.286252975463867

Token 22: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08423040062189102
    2. '(' → logprob: -2.584230422973633
    3. '(
' → logprob: -6.459230422973633
    4. '()
' → logprob: -6.709230422973633
    5. '()

' → logprob: -7.459230422973633
    6. '
' → logprob: -7.959230422973633
    7. '().' → logprob: -7.959230422973633
    8. ')' → logprob: -8.209230422973633
    9. '(

' → logprob: -8.334230422973633
    10. 'def' → logprob: -8.459230422973633

Token 23: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32784178853034973
    2. 'input' → logprob: -2.0778417587280273
    3. ' input' → logprob: -2.8278417587280273
    4. '()' → logprob: -3.7028417587280273
    5. ' read' → logprob: -4.577841758728027
    6. ' remplacer' → logprob: -4.577841758728027
    7. ' ' → logprob: -5.202841758728027
    8. '  ' → logprob: -5.452841758728027
    9. ' readline' → logprob: -5.452841758728027
    10. 'replace' → logprob: -5.702841758728027

Token 24: ' red' (ID: 3592)
  Prédit: ' ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ré' → logprob: -0.8710046410560608
    2. ' rem' → logprob: -0.9960046410560608
    3. 'ré' → logprob: -2.246004581451416
    4. 'rem' → logprob: -3.871004581451416
    5. 'r' → logprob: -3.996004581451416
    6. ' récup' → logprob: -4.121004581451416
    7. ' red' → logprob: -4.246004581451416
    8. '=' → logprob: -4.496004581451416
    9. 're' → logprob: -5.496004581451416
    10. 'lit' → logprob: -5.996004581451416

Token 25: 'éf' (ID: 126246)
  Prédit: 'éf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.2360922247171402
    2. 'ef' → logprob: -2.4860923290252686
    3. 'é' → logprob: -2.6110923290252686
    4. 'ir' → logprob: -2.9860923290252686
    5. 'irect' → logprob: -7.1110920906066895
    6. '   ' → logprob: -7.6110920906066895
    7. 'if' → logprob: -7.6110920906066895
    8. '	' → logprob: -8.861092567443848
    9. 'irection' → logprob: -9.111092567443848
    10. 'e' → logprob: -9.361092567443848

Token 26: 'init' (ID: 3287)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.1275688111782074
    2. 'init' → logprob: -2.3775687217712402
    3. 'nir' → logprob: -4.62756872177124
    4. '```' → logprob: -5.50256872177124
    5. 'input' → logprob: -5.75256872177124
    6. '   ' → logprob: -6.25256872177124
    7. 'n' → logprob: -6.62756872177124
    8. 'inir' → logprob: -6.62756872177124
    9. '#' → logprob: -7.62756872177124
    10. 'ni' → logprob: -8.002569198608398

Token 27: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5096075534820557
    2. ' ' → logprob: -1.3846075534820557
    3. '()' → logprob: -2.3846075534820557
    4. '(input' → logprob: -3.6346075534820557
    5. ' (' → logprob: -4.134607315063477
    6. ' ()' → logprob: -4.759607315063477
    7. 'input' → logprob: -5.634607315063477
    8. ' input' → logprob: -6.759607315063477
    9. ' la' → logprob: -8.259607315063477
    10. '(
' → logprob: -9.134607315063477

Token 28: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039979979395866394
    2. '(' → logprob: -3.289979934692383
    3. '(
' → logprob: -7.664979934692383
    4. '()
' → logprob: -7.664979934692383
    5. '()

' → logprob: -7.789979934692383
    6. '(

' → logprob: -8.914979934692383
    7. ')' → logprob: -9.039979934692383
    8. '()\' → logprob: -9.039979934692383
    9. 'def' → logprob: -10.039979934692383
    10. ' ' → logprob: -10.789979934692383

Token 29: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -1.000633716583252
    2. ' faciliter' → logprob: -1.000633716583252
    3. ' optimiser' → logprob: -2.125633716583252
    4. ' accél' → logprob: -3.625633716583252
    5. 'l' → logprob: -4.125633716583252
    6. ' simpl' → logprob: -4.125633716583252
    7. ' pouvoir' → logprob: -4.125633716583252
    8. 'optim' → logprob: -4.125633716583252
    9. ' améliorer' → logprob: -4.375633716583252
    10. ' optim' → logprob: -4.875633716583252

Token 30: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5207545161247253
    2. '()' → logprob: -1.5207545757293701
    3. ' plus' → logprob: -2.14575457572937
    4. ' la' → logprob: -4.270754337310791
    5. ' ' → logprob: -4.645754337310791
    6. 'une' → logprob: -5.145754337310791
    7. 'plus' → logprob: -5.145754337310791
    8. ' l' → logprob: -5.395754337310791
    9. ' les' → logprob: -5.520754337310791
    10. ' ' → logprob: -5.895754337310791

Token 31: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.172544002532959
    2. ' ' → logprob: -1.297544002532959
    3. ' line' → logprob: -2.672544002532959
    4. '\n' → logprob: -2.797544002532959
    5. 'e' → logprob: -3.047544002532959
    6. 'l' → logprob: -3.297544002532959
    7. 'n' → logprob: -3.297544002532959
    8. 'ligne' → logprob: -3.297544002532959
    9. ' input' → logprob: -3.547544002532959
    10. ' caractère' → logprob: -4.672544002532959

Token 32: ' optim' (ID: 9367)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537944436073303
    2. '()' → logprob: -0.9287944436073303
    3. '(
' → logprob: -4.5537943840026855
    4. ')' → logprob: -5.0537943840026855
    5. '
' → logprob: -5.5537943840026855
    6. '\n' → logprob: -6.3037943840026855
    7. '()
' → logprob: -6.4287943840026855
    8. '()

' → logprob: -6.6787943840026855
    9. '(

' → logprob: -7.0537943840026855
    10. '\' → logprob: -7.3037943840026855

Token 33: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.28139060735702515
    2. 'ale' → logprob: -1.90639066696167
    3. 'al' → logprob: -3.40639066696167
    4. 'ized' → logprob: -3.90639066696167
    5. 'isé' → logprob: -4.03139066696167
    6. 'isées' → logprob: -5.15639066696167
    7. '```' → logprob: -5.40639066696167
    8. 'is' → logprob: -5.65639066696167
    9. 'iz' → logprob: -5.65639066696167
    10. 'e' → logprob: -6.53139066696167

Token 34: ' depuis' (ID: 16277)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.202329158782959
    2. 'def' → logprob: -2.077329158782959
    3. '\n' → logprob: -2.077329158782959
    4. ')' → logprob: -2.327329158782959
    5. '\' → logprob: -2.327329158782959
    6. '(' → logprob: -2.577329158782959
    7. '#' → logprob: -3.452329158782959
    8. '(
' → logprob: -3.452329158782959
    9. '' → logprob: -4.327329158782959
    10. 'n' → logprob: -4.452329158782959

Token 35: ' l' (ID: 305)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.3152149021625519
    2. ' sys' → logprob: -1.6902148723602295
    3. ' l' → logprob: -3.4402148723602295
    4. 'stdin' → logprob: -3.5652148723602295
    5. 'sys' → logprob: -3.8152148723602295
    6. 'l' → logprob: -6.315215110778809
    7. ' la' → logprob: -7.940215110778809
    8. '(stdin' → logprob: -8.440215110778809
    9. ' standard' → logprob: -8.565215110778809
    10. ' ' → logprob: -8.690215110778809

Token 36: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8703667521476746
    2. ''' → logprob: -1.4953668117523193
    3. 'e' → logprob: -1.8703668117523193
    4. 'es' → logprob: -2.6203668117523193
    5. ''entrée' → logprob: -2.9953668117523193
    6. 'stdin' → logprob: -3.6203668117523193
    7. ''s' → logprob: -3.9953668117523193
    8. 'input' → logprob: -3.9953668117523193
    9. ' stdin' → logprob: -6.24536657333374
    10. ''utilisateur' → logprob: -6.49536657333374

Token 37: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15895821154117584
    2. '()' → logprob: -2.4089581966400146
    3. '(
' → logprob: -3.4089581966400146
    4. ')' → logprob: -4.533958435058594
    5. 'def' → logprob: -5.783958435058594
    6. '
' → logprob: -6.283958435058594
    7. '(

' → logprob: -6.658958435058594
    8. '\' → logprob: -7.033958435058594
    9. '#' → logprob: -7.283958435058594
    10. '\n' → logprob: -7.283958435058594

Token 38: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041732702404260635
    2. '
' → logprob: -3.9167327880859375
    3. '(
' → logprob: -4.7917327880859375
    4. ')' → logprob: -5.5417327880859375
    5. '()' → logprob: -6.6667327880859375
    6. '#' → logprob: -6.7917327880859375
    7. 'def' → logprob: -6.9167327880859375
    8. ' ' → logprob: -6.9167327880859375
    9. '\n' → logprob: -7.1667327880859375
    10. '

' → logprob: -7.6667327880859375

Token 39: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05704449862241745
    2. '()' → logprob: -3.557044506072998
    3. '(
' → logprob: -3.807044506072998
    4. ':' → logprob: -7.432044506072998
    5. 'def' → logprob: -7.432044506072998
    6. '
' → logprob: -7.557044506072998
    7. '#' → logprob: -7.557044506072998
    8. ')' → logprob: -7.682044506072998
    9. '(

' → logprob: -7.807044506072998
    10. ',' → logprob: -7.932044506072998

Token 40: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5816608667373657
    2. 'def' → logprob: -1.0816608667373657
    3. '#' → logprob: -2.581660747528076
    4. 't' → logprob: -4.581660747528076
    5. 'num' → logprob: -5.456660747528076
    6. ' n' → logprob: -6.081660747528076
    7. 'data' → logprob: -6.581660747528076
    8. 'd' → logprob: -6.706660747528076
    9. 'for' → logprob: -6.956660747528076
    10. 'class' → logprob: -7.081660747528076

Token 41: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.043230630457401276
    2. '(' → logprob: -3.2932305335998535
    3. 's' → logprob: -5.7932305335998535
    4. ')' → logprob: -7.4182305335998535
    5. 'n' → logprob: -7.7932305335998535
    6. ',' → logprob: -9.043231010437012
    7. '(
' → logprob: -9.293231010437012
    8. '_' → logprob: -9.543231010437012
    9. 'data' → logprob: -9.543231010437012
    10. 'input' → logprob: -9.543231010437012

Token 42: ' deux' (ID: 10301)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.05293404310941696
    2. ' nombres' → logprob: -3.427933931350708
    3. ' paramètres' → logprob: -5.302934169769287
    4. 'nombre' → logprob: -5.677934169769287
    5. ' nombre' → logprob: -6.052934169769287
    6. 'don' → logprob: -6.552934169769287
    7. 'd' → logprob: -6.677934169769287
    8. ' ' → logprob: -6.677934169769287
    9. 'n' → logprob: -7.177934169769287
    10. '_' → logprob: -7.552934169769287

Token 43: ' premiers' (ID: 59140)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4021340608596802
    2. ' ent' → logprob: -1.5271340608596802
    3. 'ent' → logprob: -3.6521339416503906
    4. 'nombre' → logprob: -3.7771339416503906
    5. ' integers' → logprob: -4.027133941650391
    6. 'prem' → logprob: -4.152133941650391
    7. 'n' → logprob: -4.652133941650391
    8. ' premières' → logprob: -5.152133941650391
    9. ' nombre' → logprob: -6.027133941650391
    10. ' ' → logprob: -6.152133941650391

Token 44: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.0470151901245117
    2. 'ent' → logprob: -1.6720151901245117
    3. 'inputs' → logprob: -2.5470151901245117
    4. 'input' → logprob: -2.7970151901245117
    5. ' ' → logprob: -2.9220151901245117
    6. 'num' → logprob: -3.5470151901245117
    7. ' ent' → logprob: -3.7970151901245117
    8. 'l' → logprob: -3.7970151901245117
    9. 'nombre' → logprob: -3.7970151901245117
    10. 'n' → logprob: -3.7970151901245117

Token 45: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -7.004696090007201e-05
    2. 'ières' → logprob: -10.250069618225098
    3. 'i' → logprob: -10.375069618225098
    4. 'ires' → logprob: -13.750069618225098
    5. 'ers' → logprob: -14.375069618225098
    6. 'ier' → logprob: -14.750069618225098
    7. 'êtes' → logprob: -14.875069618225098
    8. 'riers' → logprob: -15.125069618225098
    9. 'ri' → logprob: -15.250069618225098
    10. 'ié' → logprob: -16.250070571899414

Token 46: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011049000546336174
    2. '()' → logprob: -4.636048793792725
    3. 's' → logprob: -7.886048793792725
    4. 'n' → logprob: -8.261049270629883
    5. '(
' → logprob: -8.511049270629883
    6. '(n' → logprob: -9.011049270629883
    7. ',' → logprob: -9.136049270629883
    8. 'a' → logprob: -10.011049270629883
    9. ' (' → logprob: -10.261049270629883
    10. ')' → logprob: -10.261049270629883

Token 47: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8817405104637146
    2. ' la' → logprob: -1.5067405700683594
    3. 'la' → logprob: -2.3817405700683594
    4. 'sys' → logprob: -2.6317405700683594
    5. ' stdin' → logprob: -2.8817405700683594
    6. ' l' → logprob: -3.0067405700683594
    7. 'stdin' → logprob: -3.2567405700683594
    8. ' sys' → logprob: -3.3817405700683594
    9. 'input' → logprob: -4.506740570068359
    10. ' input' → logprob: -5.256740570068359

Token 48: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.8374587297439575
    2. 'a' → logprob: -1.4624587297439575
    3. 'input' → logprob: -1.7124587297439575
    4. 'entrée' → logprob: -2.337458610534668
    5. 'e' → logprob: -3.337458610534668
    6. ''' → logprob: -4.712458610534668
    7. 'es' → logprob: -5.462458610534668
    8. ' input' → logprob: -6.212458610534668
    9. 'stdin' → logprob: -6.337458610534668
    10. '_' → logprob: -6.712458610534668

Token 49: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7598046064376831
    2. '(' → logprob: -1.759804606437683
    3. '()' → logprob: -1.884804606437683
    4. 'a' → logprob: -2.3848047256469727
    5. 's' → logprob: -3.5098047256469727
    6. '(n' → logprob: -3.7598047256469727
    7. 'nombre' → logprob: -3.8848047256469727
    8. '(
' → logprob: -5.009804725646973
    9. 'x' → logprob: -5.634804725646973
    10. 'l' → logprob: -5.884804725646973

Token 50: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37461963295936584
    2. 'n' → logprob: -1.8746196031570435
    3. 'a' → logprob: -2.874619722366333
    4. '()' → logprob: -3.249619722366333
    5. '(n' → logprob: -4.374619483947754
    6. '(
' → logprob: -4.624619483947754
    7. ',' → logprob: -4.874619483947754
    8. 'x' → logprob: -4.999619483947754
    9. 's' → logprob: -5.624619483947754
    10. '\n' → logprob: -5.874619483947754

Token 51: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43181878328323364
    2. 'a' → logprob: -1.0568187236785889
    3. 'A' → logprob: -6.681818962097168
    4. 'x' → logprob: -7.556818962097168
    5. 'h' → logprob: -8.056818962097168
    6. 'N' → logprob: -8.056818962097168
    7. '```' → logprob: -8.431818962097168
    8. 'num' → logprob: -9.306818962097168
    9. 'm' → logprob: -9.681818962097168
    10. 'nb' → logprob: -9.806818962097168

Token 52: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1448288857936859
    2. 'a' → logprob: -2.0198287963867188
    3. ' n' → logprob: -7.769828796386719
    4. 'A' → logprob: -7.894828796386719
    5. 'N' → logprob: -7.894828796386719
    6. 'x' → logprob: -8.394828796386719
    7. ' a' → logprob: -8.894828796386719
    8. 'h' → logprob: -8.894828796386719
    9. '```' → logprob: -9.019828796386719
    10. 'num' → logprob: -9.519828796386719

Token 53: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39590778946876526
    2. 'a' → logprob: -1.1459077596664429
    3. 'N' → logprob: -6.395907878875732
    4. 'A' → logprob: -6.645907878875732
    5. 'x' → logprob: -6.770907878875732
    6. '```' → logprob: -6.895907878875732
    7. 'm' → logprob: -7.270907878875732
    8. 'h' → logprob: -7.395907878875732
    9. 't' → logprob: -7.895907878875732
    10. ' n' → logprob: -8.145907402038574

Token 54: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023027469869703054
    2. ' ,' → logprob: -6.377302646636963
    3. ',N' → logprob: -7.752302646636963
    4. ' =' → logprob: -10.127303123474121
    5. ',K' → logprob: -10.502303123474121
    6. ''' → logprob: -10.752303123474121
    7. '=' → logprob: -11.127303123474121
    8. ',M' → logprob: -12.002303123474121
    9. ' ' → logprob: -12.127303123474121
    10. ','' → logprob: -12.377303123474121

Token 55: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020506936125457287
    2. ' ,' → logprob: -6.377050876617432
    3. ',N' → logprob: -8.627050399780273
    4. ' =' → logprob: -9.627050399780273
    5. '=' → logprob: -9.752050399780273
    6. ',n' → logprob: -10.752050399780273
    7. ' ' → logprob: -11.627050399780273
    8. ',num' → logprob: -13.002050399780273
    9. ')' → logprob: -13.627050399780273
    10. ',int' → logprob: -13.877050399780273

Token 56: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.18837030231952667
    2. ' =' → logprob: -2.5633702278137207
    3. ' ' → logprob: -2.9383702278137207
    4. '=' → logprob: -4.438370227813721
    5. 'le' → logprob: -4.688370227813721
    6. ' the' → logprob: -5.438370227813721
    7. ' la' → logprob: -5.938370227813721
    8. 'nombre' → logprob: -5.938370227813721
    9. ',' → logprob: -6.063370227813721
    10. ' nombre' → logprob: -6.563370227813721

Token 57: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5764027237892151
    2. ' nombre' → logprob: -0.8264027237892151
    3. 'n' → logprob: -8.57640266418457
    4. ' ' → logprob: -9.32640266418457
    5. '_nombre' → logprob: -9.95140266418457
    6. ' nombres' → logprob: -10.20140266418457
    7. 'Nombre' → logprob: -10.57640266418457
    8. 'nb' → logprob: -10.95140266418457
    9. 'number' → logprob: -11.82640266418457
    10. 's' → logprob: -11.95140266418457

Token 58: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16171319782733917
    2. '<|end|>' → logprob: -2.536713123321533
    3. ' des' → logprob: -3.911713123321533
    4. 'des' → logprob: -4.661713123321533
    5. ')' → logprob: -4.911713123321533
    6. 's' → logprob: -5.036713123321533
    7. ' de' → logprob: -5.286713123321533
    8. 'de' → logprob: -5.411713123321533
    9. ' =' → logprob: -5.661713123321533
    10. '  ' → logprob: -5.661713123321533

Token 59: ' somm' (ID: 44830)
  Prédit: ' joueurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' joueurs' → logprob: -1.3342264890670776
    2. 'élé' → logprob: -1.5842264890670776
    3. ' éléments' → logprob: -2.209226608276367
    4. ' participants' → logprob: -2.959226608276367
    5. ' personnes' → logprob: -3.584226608276367
    6. ' colon' → logprob: -3.834226608276367
    7. ' élèves' → logprob: -4.209226608276367
    8. ' points' → logprob: -4.209226608276367
    9. ' lignes' → logprob: -4.459226608276367
    10. 'participants' → logprob: -4.459226608276367

Token 60: 'ets' (ID: 1719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.12744006514549255
    2. 'ets' → logprob: -2.1274399757385254
    3. 'et' → logprob: -8.252440452575684
    4. 'ès' → logprob: -10.002440452575684
    5. 'êts' → logprob: -10.752440452575684
    6. 'és' → logprob: -11.002440452575684
    7. 's' → logprob: -11.002440452575684
    8. 'e' → logprob: -11.252440452575684
    9. 'ètres' → logprob: -11.252440452575684
    10. 'etes' → logprob: -11.377440452575684

Token 61: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8835379481315613
    2. ' ' → logprob: -0.8835379481315613
    3. ' ,' → logprob: -2.133538007736206
    4. '<|end|>' → logprob: -4.258537769317627
    5. '=' → logprob: -4.758537769317627
    6. ' =' → logprob: -4.883537769317627
    7. 'n' → logprob: -5.133537769317627
    8. ')' → logprob: -5.133537769317627
    9. 's' → logprob: -5.508537769317627
    10. ' )' → logprob: -6.383537769317627

Token 62: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5529745221138
    2. ' )' → logprob: -1.0529744625091553
    3. ',' → logprob: -3.1779744625091553
    4. '),' → logprob: -4.302974700927734
    5. ' ),' → logprob: -4.927974700927734
    6. ' ,' → logprob: -5.302974700927734
    7. ' ' → logprob: -7.177974700927734
    8. ' dans' → logprob: -7.427974700927734
    9. 'et' → logprob: -7.427974700927734
    10. 's' → logprob: -7.552974700927734

Token 63: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.42191657423973083
    2. 'd' → logprob: -2.4219164848327637
    3. 'ar' → logprob: -2.6719164848327637
    4. ' ar' → logprob: -3.2969164848327637
    5. ' de' → logprob: -4.296916484832764
    6. 'de' → logprob: -4.421916484832764
    7. ' points' → logprob: -4.421916484832764
    8. ' ' → logprob: -4.546916484832764
    9. ' le' → logprob: -4.671916484832764
    10. ' noe' → logprob: -4.796916484832764

Token 64: ' noe' (ID: 49921)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.33479028940200806
    2. 'ar' → logprob: -1.4597902297973633
    3. ' arr' → logprob: -5.209790229797363
    4. ' edges' → logprob: -5.334790229797363
    5. ' points' → logprob: -5.459790229797363
    6. 'are' → logprob: -5.584790229797363
    7. ' ' → logprob: -5.959790229797363
    8. ' arcs' → logprob: -5.959790229797363
    9. ' ' → logprob: -6.209790229797363
    10. 's' → logprob: -6.209790229797363

Token 65: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.002012740820646286
    2. 'ud' → logprob: -6.627012729644775
    3. 'ds' → logprob: -7.377012729644775
    4. 'd' → logprob: -10.252013206481934
    5. 'u' → logprob: -11.752013206481934
    6. '```' → logprob: -12.002013206481934
    7. ' uds' → logprob: -13.127013206481934
    8. 's' → logprob: -13.627013206481934
    9. 'ads' → logprob: -14.627013206481934
    10. '#' → logprob: -14.627013206481934

Token 66: '),' (ID: 936)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.09556892514228821
    2. ')' → logprob: -2.470568895339966
    3. ' ),' → logprob: -5.345569133758545
    4. ',' → logprob: -7.345569133758545
    5. ' ,' → logprob: -7.845569133758545
    6. '),' → logprob: -8.345568656921387
    7. ' )
' → logprob: -8.595568656921387
    8. ' ' → logprob: -9.220568656921387
    9. ' de' → logprob: -9.220568656921387
    10. 's' → logprob: -10.595568656921387

Token 67: ' et' (ID: 859)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5734872221946716
    2. ' M' → logprob: -1.6984872817993164
    3. ' '' → logprob: -2.0734872817993164
    4. ''' → logprob: -3.3234872817993164
    5. ' et' → logprob: -3.4484872817993164
    6. 'et' → logprob: -3.8234872817993164
    7. 'K' → logprob: -4.698487281799316
    8. 's' → logprob: -5.448487281799316
    9. ' K' → logprob: -5.573487281799316
    10. ' ' → logprob: -5.698487281799316

Token 68: ' '' (ID: 461)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.624305248260498
    2. ' '' → logprob: -1.749305248260498
    3. 'K' → logprob: -2.374305248260498
    4. ''' → logprob: -2.499305248260498
    5. ' M' → logprob: -2.874305248260498
    6. ''M' → logprob: -3.249305248260498
    7. ' K' → logprob: -4.749305248260498
    8. ''s' → logprob: -5.749305248260498
    9. ''m' → logprob: -6.874305248260498
    10. ' ' → logprob: -7.249305248260498

Token 69: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03874208778142929
    2. 'K' → logprob: -4.1637420654296875
    3. ' M' → logprob: -4.4137420654296875
    4. 'Q' → logprob: -4.9137420654296875
    5. 'E' → logprob: -6.4137420654296875
    6. 'T' → logprob: -7.7887420654296875
    7. ' K' → logprob: -8.288742065429688
    8. ' ' → logprob: -9.663742065429688
    9. 'L' → logprob: -9.788742065429688
    10. ' Q' → logprob: -9.851242065429688

Token 70: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28173673152923584
    2. '=' → logprob: -1.9067367315292358
    3. ''' → logprob: -2.9067368507385254
    4. ' '' → logprob: -3.2817368507385254
    5. '='' → logprob: -6.156736850738525
    6. ',' → logprob: -7.406736850738525
    7. ')' → logprob: -7.656736850738525
    8. ' ' → logprob: -7.656736850738525
    9. ' ' → logprob: -8.156736373901367
    10. ' ='' → logprob: -9.031736373901367

Token 71: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2730281949043274
    2. '=' → logprob: -1.5230281352996826
    3. ',' → logprob: -3.8980281352996826
    4. '<|end|>' → logprob: -8.023028373718262
    5. ' ,' → logprob: -9.148028373718262
    6. ' ' → logprob: -9.773028373718262
    7. ')' → logprob: -10.523028373718262
    8. 's' → logprob: -11.523028373718262
    9. '```' → logprob: -11.648028373718262
    10. ' is' → logprob: -12.085528373718262

Token 72: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2267545759677887
    2. 'nombre' → logprob: -1.6017545461654663
    3. ' nombres' → logprob: -7.976754665374756
    4. ' ' → logprob: -8.476754188537598
    5. 's' → logprob: -8.601754188537598
    6. 'n' → logprob: -8.851754188537598
    7. 'Nombre' → logprob: -8.851754188537598
    8. '  ' → logprob: -9.601754188537598
    9. '_nombre' → logprob: -10.351754188537598
    10. ' le' → logprob: -10.726754188537598

Token 74: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055921707302331924
    2. '_' → logprob: -3.305921792984009
    3. '<|end|>' → logprob: -4.68092155456543
    4. ' des' → logprob: -5.43092155456543
    5. 's' → logprob: -6.43092155456543
    6. 'des' → logprob: -7.05592155456543
    7. ')' → logprob: -7.93092155456543
    8. ' )' → logprob: -7.93092155456543
    9. '_des' → logprob: -8.80592155456543
    10. '<|end|>' → logprob: -8.93092155456543

Token 75: ''ar' (ID: 54307)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1266414076089859
    2. '_' → logprob: -2.2516415119171143
    3. ''' → logprob: -5.126641273498535
    4. 'e' → logprob: -5.501641273498535
    5. '  ' → logprob: -7.376641273498535
    6. ''esp' → logprob: -7.376641273498535
    7. 's' → logprob: -7.876641273498535
    8. '<|end|>' → logprob: -8.126641273498535
    9. ''espace' → logprob: -8.126641273498535
    10. ' espaces' → logprob: -8.251641273498535

Token 76: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.4377366304397583
    2. 'ê' → logprob: -1.1877366304397583
    3. 'êt' → logprob: -4.312736511230469
    4. 'êts' → logprob: -4.437736511230469
    5. 'â' → logprob: -5.937736511230469
    6. '�' → logprob: -5.937736511230469
    7. 'ês' → logprob: -6.062736511230469
    8. '^' → logprob: -6.187736511230469
    9. 'c' → logprob: -6.187736511230469
    10. '\xc8' → logprob: -6.562736511230469

Token 77: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005429169628769159
    2. '(
' → logprob: -5.755429267883301
    3. ',' → logprob: -6.505429267883301
    4. '[' → logprob: -8.5054292678833
    5. ' (' → logprob: -9.0054292678833
    6. 's' → logprob: -9.5054292678833
    7. ')' → logprob: -9.5054292678833
    8. '()' → logprob: -9.7554292678833
    9. ' =' → logprob: -9.7554292678833
    10. '=' → logprob: -9.8804292678833

Token 78: ' grap' (ID: 60955)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013273759745061398
    2. ' graph' → logprob: -5.1382737159729
    3. ' grap' → logprob: -5.5132737159729
    4. 'graph' → logprob: -6.3882737159729
    5. '  ' → logprob: -7.2632737159729
    6. ' )' → logprob: -8.013274192810059
    7. ' '' → logprob: -9.388274192810059
    8. ' ' → logprob: -9.638274192810059
    9. 'gr' → logprob: -9.888274192810059
    10. ''' → logprob: -9.888274192810059

Token 79: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.001714093261398375
    2. 'aph' → logprob: -6.75171422958374
    3. 'phe' → logprob: -8.751713752746582
    4. '```' → logprob: -9.376713752746582
    5. 'a' → logprob: -9.501713752746582
    6. 'he' → logprob: -9.751713752746582
    7. 'h' → logprob: -10.251713752746582
    8. 'ph' → logprob: -10.376713752746582
    9. 'ap' → logprob: -10.751713752746582
    10. '   ' → logprob: -11.626713752746582

Token 80: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2783109247684479
    2. '(
' → logprob: -2.028311014175415
    3. ',' → logprob: -3.278311014175415
    4. '(N' → logprob: -3.653311014175415
    5. '[' → logprob: -4.278310775756836
    6. '
' → logprob: -4.903310775756836
    7. '(n' → logprob: -5.278310775756836
    8. 'N' → logprob: -5.903310775756836
    9. 'n' → logprob: -6.028310775756836
    10. ' (' → logprob: -6.028310775756836

Token 81: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5363537669181824
    2. '(' → logprob: -1.4113538265228271
    3. ',' → logprob: -2.911353826522827
    4. 'n' → logprob: -2.911353826522827
    5. '(N' → logprob: -4.411353588104248
    6. '(
' → logprob: -4.661353588104248
    7. '=' → logprob: -4.786353588104248
    8. ')' → logprob: -5.036353588104248
    9. '()' → logprob: -5.411353588104248
    10. 'x' → logprob: -5.786353588104248

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004020713677164167
    2. ',M' → logprob: -7.875401973724365
    3. ' ,' → logprob: -10.750402450561523
    4. ',N' → logprob: -14.875402450561523
    5. ',m' → logprob: -16.875402450561523
    6. ',
' → logprob: -17.000402450561523
    7. ',,' → logprob: -17.625402450561523
    8. '，' → logprob: -18.125402450561523
    9. ',K' → logprob: -18.125402450561523
    10. ',E' → logprob: -18.250402450561523

Token 83: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.07579199969768524
    2. 'M' → logprob: -2.825792074203491
    3. ' ' → logprob: -4.325791835784912
    4. '=' → logprob: -8.07579231262207
    5. ' =' → logprob: -9.70079231262207
    6. '<|end|>' → logprob: -9.82579231262207
    7. ' ' → logprob: -11.07579231262207
    8. '=M' → logprob: -11.20079231262207
    9. ',' → logprob: -11.32579231262207
    10. '  ' → logprob: -11.70079231262207

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029765525832772255
    2. '=' → logprob: -3.5297656059265137
    3. ',' → logprob: -11.404765129089355
    4. ' ' → logprob: -13.404765129089355
    5. '=input' → logprob: -13.529765129089355
    6. ' ,' → logprob: -15.404765129089355
    7. ' =
' → logprob: -15.404765129089355
    8. ')' → logprob: -15.779765129089355
    9. ' ' → logprob: -15.779765129089355
    10. '=int' → logprob: -15.904765129089355

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07803651690483093
    2. ' ' → logprob: -2.8280365467071533
    3. ' input' → logprob: -4.203036308288574
    4. 'map' → logprob: -7.328036308288574
    5. 'input' → logprob: -8.328036308288574
    6. ' list' → logprob: -9.953036308288574
    7. ' tuple' → logprob: -10.703036308288574
    8. ' ' → logprob: -12.203036308288574
    9. '  ' → logprob: -12.328036308288574
    10. '	map' → logprob: -12.703036308288574

Token 86: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42903387546539307
    2. '(int' → logprob: -1.054033875465393
    3. '(lambda' → logprob: -8.304034233093262
    4. '(
' → logprob: -10.554034233093262
    5. '(list' → logprob: -11.054034233093262
    6. '(str' → logprob: -11.304034233093262
    7. '(input' → logprob: -11.554034233093262
    8. ' (' → logprob: -11.929034233093262
    9. '<int' → logprob: -12.554034233093262
    10. '()' → logprob: -13.304034233093262

Token 87: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.230503112077713
    2. '(' → logprob: -1.6055030822753906
    3. ')' → logprob: -5.980503082275391
    4. ',input' → logprob: -6.855503082275391
    5. 'input' → logprob: -7.480503082275391
    6. ',' → logprob: -7.605503082275391
    7. '(sys' → logprob: -8.10550308227539
    8. '(
' → logprob: -9.60550308227539
    9. ' (' → logprob: -10.73050308227539
    10. '(

' → logprob: -11.23050308227539

Token 88: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5760631561279297
    2. ' input' → logprob: -0.8260631561279297
    3. ')' → logprob: -9.32606315612793
    4. '(input' → logprob: -10.57606315612793
    5. ' )' → logprob: -12.07606315612793
    6. ',input' → logprob: -13.95106315612793
    7. '=input' → logprob: -14.07606315612793
    8. ' ' → logprob: -14.57606315612793
    9. '	input' → logprob: -15.07606315612793
    10. 'sys' → logprob: -15.70106315612793

Token 89: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.033255450427532196
    2. '())' → logprob: -3.5332553386688232
    3. '()' → logprob: -5.658255577087402
    4. ')' → logprob: -12.408255577087402
    5. '(' → logprob: -13.283255577087402
    6. ' ())' → logprob: -13.408255577087402
    7. '()
' → logprob: -13.658255577087402
    8. ' ()' → logprob: -15.533255577087402
    9. ' ().' → logprob: -15.533255577087402
    10. '())
' → logprob: -15.658255577087402

Token 90: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5975106954574585
    2. 'split' → logprob: -0.8475106954574585
    3. 'rstrip' → logprob: -3.847510814666748
    4. ')' → logprob: -12.34751033782959
    5. ' split' → logprob: -14.22251033782959
    6. '(split' → logprob: -14.84751033782959
    7. 'rs' → logprob: -14.84751033782959
    8. ' strip' → logprob: -14.97251033782959
    9. 'read' → logprob: -15.09751033782959
    10. '())' → logprob: -15.47251033782959

Token 91: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12134431302547455
    2. ')' → logprob: -2.3713443279266357
    3. '()' → logprob: -3.8713443279266357
    4. '))' → logprob: -10.371344566345215
    5. '()))' → logprob: -10.746344566345215
    6. '(' → logprob: -10.996344566345215
    7. '())
' → logprob: -11.871344566345215
    8. ' ())' → logprob: -12.996344566345215
    9. '(),' → logprob: -13.121344566345215
    10. '())

' → logprob: -14.246344566345215

Token 92: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8768428564071655
    2. '
' → logprob: -1.1268428564071655
    3. 'graph' → logprob: -1.6268428564071655
    4. '' → logprob: -4.376842975616455
    5. 'edges' → logprob: -4.626842975616455
    6. ')' → logprob: -4.751842975616455
    7. ' ' → logprob: -5.126842975616455
    8. 'for' → logprob: -5.751842975616455
    9. '<|end|>' → logprob: -6.251842975616455
    10. 'g' → logprob: -6.376842975616455

Token 93: ' Lecture' (ID: 106534)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13187037408351898
    2. '#' → logprob: -2.6318702697753906
    3. 'adj' → logprob: -4.006870269775391
    4. ' graph' → logprob: -4.381870269775391
    5. 'edges' → logprob: -5.131870269775391
    6. 'g' → logprob: -6.006870269775391
    7. 'from' → logprob: -6.381870269775391
    8. 'gr' → logprob: -6.506870269775391
    9. 'neighbors' → logprob: -6.506870269775391
    10. ' adjacency' → logprob: -6.631870269775391

Token 94: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06089596822857857
    2. '()' → logprob: -3.4358959197998047
    3. ' des' → logprob: -4.310895919799805
    4. '(N' → logprob: -4.685895919799805
    5. 'des' → logprob: -6.185895919799805
    6. ' (' → logprob: -7.685895919799805
    7. '#' → logprob: -8.310895919799805
    8. '<|end|>' → logprob: -8.310895919799805
    9. '(
' → logprob: -8.435895919799805
    10. ' ' → logprob: -8.810895919799805

Token 95: ''une' (ID: 13337)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.187217354774475
    2. 'e' → logprob: -1.937217354774475
    3. ' les' → logprob: -2.0622172355651855
    4. ' la' → logprob: -2.4372172355651855
    5. 'es' → logprob: -2.8122172355651855
    6. '()' → logprob: -2.9372172355651855
    7. ' ' → logprob: -3.3122172355651855
    8. '(' → logprob: -3.3122172355651855
    9. 'des' → logprob: -3.4372172355651855
    10. 'a' → logprob: -3.8122172355651855

Token 96: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8760543465614319
    2. 'liste' → logprob: -0.8760543465614319
    3. ' boucle' → logprob: -2.376054286956787
    4. ' =' → logprob: -4.626054286956787
    5. '=' → logprob: -5.001054286956787
    6. ' ligne' → logprob: -5.126054286956787
    7. 'list' → logprob: -5.376054286956787
    8. '[' → logprob: -5.501054286956787
    9. 's' → logprob: -5.751054286956787
    10. 'bou' → logprob: -5.751054286956787

Token 97: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.38686344027519226
    2. 'des' → logprob: -1.3868634700775146
    3. '()' → logprob: -3.5118634700775146
    4. '[]' → logprob: -4.5118632316589355
    5. '<|end|>' → logprob: -4.6368632316589355
    6. '[' → logprob: -4.7618632316589355
    7. 's' → logprob: -6.1368632316589355
    8. '(' → logprob: -6.1368632316589355
    9. '_des' → logprob: -6.7618632316589355
    10. ' de' → logprob: -6.8868632316589355

Token 98: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7587104439735413
    2. ' integers' → logprob: -1.7587103843688965
    3. 'ent' → logprob: -2.1337103843688965
    4. 'ints' → logprob: -2.5087103843688965
    5. 'inte' → logprob: -3.2587103843688965
    6. ' ent' → logprob: -4.1337103843688965
    7. 's' → logprob: -4.6337103843688965
    8. '(int' → logprob: -4.8837103843688965
    9. ''ent' → logprob: -4.8837103843688965
    10. ' espaces' → logprob: -5.1337103843688965

Token 99: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.030381962656974792
    2. 'ières' → logprob: -3.530381917953491
    3. 'ier' → logprob: -8.15538215637207
    4. 'i' → logprob: -8.65538215637207
    5. 'ités' → logprob: -10.28038215637207
    6. 'ires' → logprob: -10.53038215637207
    7. 'r' → logprob: -10.90538215637207
    8. 'ière' → logprob: -10.90538215637207
    9. 'ieres' → logprob: -11.15538215637207
    10. 't' → logprob: -11.28038215637207

Token 100: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3913833796977997
    2. '(' → logprob: -1.266383409500122
    3. 'a' → logprob: -4.391383171081543
    4. 's' → logprob: -4.766383171081543
    5. 'numbers' → logprob: -5.516383171081543
    6. '(
' → logprob: -5.891383171081543
    7. '(numbers' → logprob: -6.641383171081543
    8. '[' → logprob: -6.766383171081543
    9. '=' → logprob: -6.891383171081543
    10. 'data' → logprob: -7.391383171081543

Token 101: ' longueur' (ID: 104613)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.9367467164993286
    2. ' taille' → logprob: -0.9367467164993286
    3. ' longueur' → logprob: -2.811746597290039
    4. ' ' → logprob: -3.811746597290039
    5. 'length' → logprob: -3.811746597290039
    6. 'M' → logprob: -4.186746597290039
    7. 's' → logprob: -4.436746597290039
    8. 'long' → logprob: -4.686746597290039
    9. ' la' → logprob: -4.811746597290039
    10. 't' → logprob: -4.811746597290039

Token 102: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8791329264640808
    2. '(N' → logprob: -1.5041329860687256
    3. '(' → logprob: -1.8791329860687256
    4. '(M' → logprob: -2.5041329860687256
    5. 'M' → logprob: -3.0041329860687256
    6. '()' → logprob: -3.3791329860687256
    7. ' N' → logprob: -3.5041329860687256
    8. ' M' → logprob: -5.1291327476501465
    9. ' (' → logprob: -5.3791327476501465
    10. 's' → logprob: -7.3791327476501465

Token 103: ' correspondant' (ID: 146058)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.1973457336425781
    2. 'numbers' → logprob: -1.5723457336425781
    3. 'nodes' → logprob: -2.322345733642578
    4. 'node' → logprob: -2.697345733642578
    5. 'data' → logprob: -2.947345733642578
    6. 'dist' → logprob: -3.197345733642578
    7. 's' → logprob: -3.447345733642578
    8. 'som' → logprob: -3.447345733642578
    9. 'arr' → logprob: -3.572345733642578
    10. 'val' → logprob: -4.072345733642578

Token 104: ' à' (ID: 1221)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.137362003326416
    2. ' à' → logprob: -1.512362003326416
    3. 'au' → logprob: -1.762362003326416
    4. ' au' → logprob: -2.012362003326416
    5. 'aux' → logprob: -2.262362003326416
    6. 'à' → logprob: -3.387362003326416
    7. 'to' → logprob: -4.887362003326416
    8. ' to' → logprob: -5.387362003326416
    9. '<|end|>' → logprob: -7.137362003326416
    10. ')' → logprob: -7.387362003326416

Token 105: ' des' (ID: 731)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.05862557888031
    2. ' la' → logprob: -1.18362557888031
    3. 'l' → logprob: -1.93362557888031
    4. 'la' → logprob: -3.0586256980895996
    5. ' les' → logprob: -3.0586256980895996
    6. 'les' → logprob: -3.4336256980895996
    7. 'le' → logprob: -4.0586256980896
    8. ' une' → logprob: -4.3086256980896
    9. ' weights' → logprob: -4.9336256980896
    10. ' heights' → logprob: -5.4336256980896

Token 106: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.5832623839378357
    2. ' poids' → logprob: -1.3332624435424805
    3. ' couleurs' → logprob: -3.0832624435424805
    4. 'val' → logprob: -3.8332624435424805
    5. ' capacités' → logprob: -3.9582624435424805
    6. 'capac' → logprob: -3.9582624435424805
    7. ' scores' → logprob: -4.8332624435424805
    8. ' coûts' → logprob: -4.8332624435424805
    9. 's' → logprob: -5.3332624435424805
    10. ' somm' → logprob: -5.4582624435424805

Token 107: ' pour' (ID: 1930)
  Prédit: ' associ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' associ' → logprob: -0.12023990601301193
    2. 's' → logprob: -3.8702399730682373
    3. 'des' → logprob: -4.120239734649658
    4. 'associated' → logprob: -4.620239734649658
    5. '<|end|>' → logprob: -4.870239734649658
    6. ' des' → logprob: -4.870239734649658
    7. ' ' → logprob: -4.995239734649658
    8. ',' → logprob: -5.745239734649658
    9. ' associated' → logprob: -5.870239734649658
    10. ' liées' → logprob: -5.870239734649658

Token 108: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.15398260951042175
    2. ' les' → logprob: -2.278982639312744
    3. ' each' → logprob: -3.778982639312744
    4. 'each' → logprob: -5.403982639312744
    5. 'les' → logprob: -5.403982639312744
    6. ' chacun' → logprob: -6.028982639312744
    7. ' chacune' → logprob: -6.153982639312744
    8. ' l' → logprob: -7.403982639312744
    9. ' ' → logprob: -7.528982639312744
    10. ' des' → logprob: -7.653982639312744

Token 109: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.08790087699890137
    2. ' noe' → logprob: -3.2129008769989014
    3. 's' → logprob: -3.9629008769989014
    4. ' somm' → logprob: -4.4629011154174805
    5. ' ' → logprob: -4.9629011154174805
    6. ' node' → logprob: -5.9629011154174805
    7. 'n' → logprob: -6.4629011154174805
    8. ' n' → logprob: -7.0879011154174805
    9. ' nodes' → logprob: -8.46290111541748
    10. 'som' → logprob: -8.46290111541748

Token 110: '.
' (ID: 558)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.34718993306159973
    2. 'val' → logprob: -1.3471899032592773
    3. 's' → logprob: -4.847189903259277
    4. ' values' → logprob: -4.972189903259277
    5. 'vals' → logprob: -5.347189903259277
    6. 'v' → logprob: -5.472189903259277
    7. 'a' → logprob: -6.222189903259277
    8. 'data' → logprob: -6.722189903259277
    9. ' valeurs' → logprob: -6.847189903259277
    10. 'node' → logprob: -6.847189903259277

Token 111: '#' (ID: 2)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.09386591613292694
    2. 'val' → logprob: -3.4688658714294434
    3. ' values' → logprob: -3.8438658714294434
    4. 'vals' → logprob: -4.718865871429443
    5. 'A' → logprob: -4.968865871429443
    6. 'weights' → logprob: -5.468865871429443
    7. 'node' → logprob: -5.593865871429443
    8. 'a' → logprob: -5.968865871429443
    9. 's' → logprob: -6.843865871429443
    10. 'data' → logprob: -6.843865871429443

Token 112: ' Util' (ID: 13564)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.06281617283821106
    2. ' values' → logprob: -3.1878161430358887
    3. 'weights' → logprob: -5.187816143035889
    4. 'vals' → logprob: -5.187816143035889
    5. 'val' → logprob: -5.812816143035889
    6. ' valeurs' → logprob: -6.812816143035889
    7. 'A' → logprob: -7.062816143035889
    8. 'node' → logprob: -7.312816143035889
    9. 'value' → logprob: -8.437816619873047
    10. 'scores' → logprob: -8.437816619873047

Token 113: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13507546484470367
    2. 'sage' → logprob: -3.260075569152832
    3. 'ser' → logprob: -3.385075569152832
    4. 'se' → logprob: -3.635075569152832
    5. 'sat' → logprob: -5.135075569152832
    6. 'ses' → logprob: -5.260075569152832
    7. 'sal' → logprob: -5.635075569152832
    8. '#' → logprob: -5.885075569152832
    9. 'sent' → logprob: -6.260075569152832
    10. '```' → logprob: -6.635075569152832

Token 114: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23750190436840057
    2. ' de' → logprob: -2.237501859664917
    3. ' d' → logprob: -3.737501859664917
    4. 'des' → logprob: -3.737501859664917
    5. '(' → logprob: -4.237502098083496
    6. 'values' → logprob: -4.862502098083496
    7. '(values' → logprob: -5.362502098083496
    8. ' =' → logprob: -5.487502098083496
    9. 's' → logprob: -5.737502098083496
    10. '=' → logprob: -5.862502098083496

Token 115: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3880341351032257
    2. 'list' → logprob: -1.8880341053009033
    3. ' map' → logprob: -2.1380341053009033
    4. 'map' → logprob: -3.3880341053009033
    5. ' la' → logprob: -4.138034343719482
    6. 'la' → logprob: -6.888034343719482
    7. ' une' → logprob: -7.888034343719482
    8. ' liste' → logprob: -8.138033866882324
    9. ' l' → logprob: -8.763033866882324
    10. ' input' → logprob: -9.138033866882324

Token 116: ' pour' (ID: 1930)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008028889074921608
    2. '(' → logprob: -5.758028984069824
    3. '(lambda' → logprob: -6.133028984069824
    4. '<int' → logprob: -6.383028984069824
    5. '=int' → logprob: -8.258028984069824
    6. 'int' → logprob: -8.508028984069824
    7. '[int' → logprob: -8.758028984069824
    8. ',int' → logprob: -9.258028984069824
    9. ',' → logprob: -9.383028984069824
    10. 's' → logprob: -9.758028984069824

Token 117: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.8007190823554993
    2. ' lire' → logprob: -1.1757190227508545
    3. ' obtenir' → logprob: -2.8007190227508545
    4. ' récupérer' → logprob: -3.3007190227508545
    5. ' read' → logprob: -3.6757190227508545
    6. 'convert' → logprob: -3.9257190227508545
    7. 'list' → logprob: -4.175719261169434
    8. 'int' → logprob: -4.175719261169434
    9. ' créer' → logprob: -4.425719261169434
    10. 'read' → logprob: -4.550719261169434

Token 118: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5507587790489197
    2. 'int' → logprob: -1.4257588386535645
    3. '(input' → logprob: -2.5507588386535645
    4. 'input' → logprob: -2.9257588386535645
    5. '(' → logprob: -3.3007588386535645
    6. ' input' → logprob: -5.3007588386535645
    7. 'list' → logprob: -6.5507588386535645
    8. 'l' → logprob: -6.9257588386535645
    9. '(str' → logprob: -7.0507588386535645
    10. 'les' → logprob: -7.0507588386535645

Token 119: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.022278059273958206
    2. 'val' → logprob: -4.52227783203125
    3. ' élément' → logprob: -5.27227783203125
    4. 'element' → logprob: -5.89727783203125
    5. 'token' → logprob: -6.64727783203125
    6. 'int' → logprob: -7.77227783203125
    7. ' valeur' → logprob: -7.89727783203125
    8. 'entrée' → logprob: -8.02227783203125
    9. ' element' → logprob: -8.52227783203125
    10. ' token' → logprob: -8.64727783203125

Token 120: ' lu' (ID: 8620)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17236004769802094
    2. ' en' → logprob: -2.5473599433898926
    3. 'int' → logprob: -2.7973599433898926
    4. '(' → logprob: -4.672359943389893
    5. 'en' → logprob: -4.922359943389893
    6. '(map' → logprob: -7.672359943389893
    7. '=int' → logprob: -8.17236042022705
    8. ',int' → logprob: -8.29736042022705
    9. ',' → logprob: -8.92236042022705
    10. ' int' → logprob: -8.92236042022705

Token 121: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9574520587921143
    2. '(' → logprob: -1.2074520587921143
    3. 'en' → logprob: -1.8324520587921143
    4. '(input' → logprob: -2.4574520587921143
    5. '(int' → logprob: -3.5824520587921143
    6. '(en' → logprob: -3.9574520587921143
    7. 'input' → logprob: -5.082451820373535
    8. '()' → logprob: -5.832451820373535
    9. '(map' → logprob: -5.832451820373535
    10. 'int' → logprob: -6.457451820373535

Token 122: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8396113514900208
    2. ' input' → logprob: -1.589611291885376
    3. 'int' → logprob: -1.714611291885376
    4. ' la' → logprob: -2.214611291885376
    5. 'la' → logprob: -3.339611291885376
    6. 'l' → logprob: -4.089611530303955
    7. 'list' → logprob: -4.589611530303955
    8. ' list' → logprob: -5.714611530303955
    9. ' int' → logprob: -6.089611530303955
    10. ' ' → logprob: -6.589611530303955

Token 123: '().' (ID: 1454)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6580546498298645
    2. '(int' → logprob: -1.2830545902252197
    3. '(' → logprob: -2.2830545902252197
    4. ',' → logprob: -3.1580545902252197
    5. '(en' → logprob: -4.158054828643799
    6. ' en' → logprob: -4.533054828643799
    7. '(map' → logprob: -4.908054828643799
    8. '()' → logprob: -5.033054828643799
    9. 'int' → logprob: -5.158054828643799
    10. ')' → logprob: -5.783054828643799

Token 124: 'split' (ID: 13627)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8285412192344666
    2. 'values' → logprob: -1.3285412788391113
    3. 'int' → logprob: -1.5785412788391113
    4. 'split' → logprob: -3.5785412788391113
    5. ' map' → logprob: -3.8285412788391113
    6. '(int' → logprob: -4.078541278839111
    7. 'val' → logprob: -5.328541278839111
    8. ' values' → logprob: -5.578541278839111
    9. 'ints' → logprob: -5.828541278839111
    10. 'vals' → logprob: -5.953541278839111

Token 125: '()' (ID: 416)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17200830578804016
    2. '(' → logprob: -2.2970082759857178
    3. '(map' → logprob: -3.7970082759857178
    4. 'int' → logprob: -4.797008514404297
    5. '(input' → logprob: -4.922008514404297
    6. ',' → logprob: -5.172008514404297
    7. ')' → logprob: -5.297008514404297
    8. '(lambda' → logprob: -5.922008514404297
    9. '()' → logprob: -6.422008514404297
    10. ',int' → logprob: -7.297008514404297

Token 126: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8857443332672119
    2. '(' → logprob: -1.760744333267212
    3. '(values' → logprob: -1.885744333267212
    4. 'val' → logprob: -2.135744333267212
    5. 'values' → logprob: -3.385744333267212
    6. ')' → logprob: -3.760744333267212
    7. '(val' → logprob: -4.510744094848633
    8. '(int' → logprob: -4.510744094848633
    9. 'vals' → logprob: -5.010744094848633
    10. 'v' → logprob: -5.010744094848633

Token 127: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00683223269879818
    2. ' int' → logprob: -5.006832122802734
    3. 'inte' → logprob: -10.131832122802734
    4. 'ent' → logprob: -10.256832122802734
    5. 'ints' → logprob: -10.631832122802734
    6. ' integers' → logprob: -11.756832122802734
    7. '(int' → logprob: -12.881832122802734
    8. '<int' → logprob: -13.006832122802734
    9. '=int' → logprob: -13.631832122802734
    10. 'integer' → logprob: -13.756832122802734

Token 128: '.
' (ID: 558)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.46941888332366943
    2. 'values' → logprob: -1.2194188833236694
    3. 'som' → logprob: -3.719419002532959
    4. 'vals' → logprob: -3.719419002532959
    5. 's' → logprob: -4.844419002532959
    6. 'node' → logprob: -5.594419002532959
    7. 'v' → logprob: -6.219419002532959
    8. 'vertex' → logprob: -6.469419002532959
    9. 'data' → logprob: -6.594419002532959
    10. 'A' → logprob: -6.719419002532959

Token 129: 'D' (ID: 35)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.12157298624515533
    2. 'val' → logprob: -2.996572971343994
    3. ' values' → logprob: -3.871572971343994
    4. 'vals' → logprob: -4.746572971343994
    5. 'node' → logprob: -4.996572971343994
    6. 'value' → logprob: -5.371572971343994
    7. 'weights' → logprob: -5.371572971343994
    8. 'data' → logprob: -5.996572971343994
    9. 'A' → logprob: -6.246572971343994
    10. 's' → logprob: -6.246572971343994

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033550139516592026
    2. '=' → logprob: -3.5335500240325928
    3. 'ist' → logprob: -6.408550262451172
    4. '_values' → logprob: -7.033550262451172
    5. ' ' → logprob: -7.533550262451172
    6. 'values' → logprob: -8.783550262451172
    7. '_vals' → logprob: -8.908550262451172
    8. 's' → logprob: -9.033550262451172
    9. ',' → logprob: -10.033550262451172
    10. 'ata' → logprob: -10.158550262451172

Token 131: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04860655218362808
    2. 'list' → logprob: -3.0486066341400146
    3. ' map' → logprob: -11.173606872558594
    4. 'map' → logprob: -13.173606872558594
    5. '(list' → logprob: -13.923606872558594
    6. ' ' → logprob: -14.673606872558594
    7. ' lis' → logprob: -14.798606872558594
    8. ' tuple' → logprob: -15.423606872558594
    9. '	list' → logprob: -15.673606872558594
    10. ' li' → logprob: -15.798606872558594

Token 132: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10023967176675797
    2. '(' → logprob: -2.3502397537231445
    3. '(int' → logprob: -10.475239753723145
    4. '(
' → logprob: -12.725239753723145
    5. '(m' → logprob: -14.725239753723145
    6. '(ma' → logprob: -14.850239753723145
    7. '(

' → logprob: -15.225239753723145
    8. 'map' → logprob: -15.225239753723145
    9. ' (' → logprob: -15.725239753723145
    10. ',map' → logprob: -16.350238800048828

Token 133: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022181766107678413
    2. '(' → logprob: -6.127218246459961
    3. 'int' → logprob: -11.377218246459961
    4. '(
' → logprob: -11.627218246459961
    5. ' (' → logprob: -12.252218246459961
    6. '<int' → logprob: -12.377218246459961
    7. ',int' → logprob: -13.502218246459961
    8. '[int' → logprob: -14.002218246459961
    9. ' int' → logprob: -14.877218246459961
    10. '```' → logprob: -14.877218246459961

Token 134: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5396728515625
    2. ',' → logprob: -1.0396728515625
    3. ',int' → logprob: -2.7896728515625
    4. '(' → logprob: -7.1646728515625
    5. '(input' → logprob: -7.2896728515625
    6. '(int' → logprob: -7.6646728515625
    7. ' ,' → logprob: -9.2896728515625
    8. ',(' → logprob: -11.2896728515625
    9. ',float' → logprob: -12.0396728515625
    10. 'input' → logprob: -13.0396728515625

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004085524007678032
    2. ' input' → logprob: -5.504085540771484
    3. 'int' → logprob: -12.504085540771484
    4. ')' → logprob: -13.629085540771484
    5. ',input' → logprob: -14.129085540771484
    6. '(input' → logprob: -14.379085540771484
    7. 'str' → logprob: -15.254085540771484
    8. ' ' → logprob: -16.254085540771484
    9. 'sys' → logprob: -16.754085540771484
    10. 'list' → logprob: -16.879085540771484

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.306760805164231e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -17.25001335144043
    4. '.' → logprob: -18.87501335144043
    5. '(),' → logprob: -19.87501335144043
    6. '(' → logprob: -19.87501335144043
    7. '().__' → logprob: -20.50001335144043
    8. '()
' → logprob: -20.87501335144043
    9. '()[' → logprob: -21.00001335144043
    10. '()?.' → logprob: -21.00001335144043

Token 137: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.875001907348633
    3. 'strip' → logprob: -15.000001907348633
    4. '(split' → logprob: -15.000001907348633
    5. 'spl' → logprob: -16.750001907348633
    6. ')' → logprob: -17.750001907348633
    7. 'rstrip' → logprob: -18.000001907348633
    8. '.split' → logprob: -18.375001907348633
    9. 'plit' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.375001907348633

Token 138: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10697084665298462
    2. '()' → logprob: -2.73197078704834
    3. '))' → logprob: -3.35697078704834
    4. '())' → logprob: -6.85697078704834
    5. '(' → logprob: -8.23197078704834
    6. ')' → logprob: -8.98197078704834
    7. '()));' → logprob: -10.35697078704834
    8. '()))
' → logprob: -10.60697078704834
    9. ' ))' → logprob: -13.10697078704834
    10. '(),' → logprob: -13.10697078704834

Token 139: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2406831979751587
    2. '
' → logprob: -2.865683078765869
    3. 'graph' → logprob: -2.865683078765869
    4. 'edges' → logprob: -2.865683078765869
    5. 'for' → logprob: -3.740683078765869
    6. 'a' → logprob: -5.865683078765869
    7. 'G' → logprob: -5.865683078765869
    8. 'adj' → logprob: -6.490683078765869
    9. 'result' → logprob: -6.990683078765869
    10. 'g' → logprob: -7.115683078765869

Token 140: ' Lecture' (ID: 106534)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4746842384338379
    2. 'edges' → logprob: -1.474684238433838
    3. '#' → logprob: -2.724684238433838
    4. 'adj' → logprob: -2.849684238433838
    5. 'for' → logprob: -4.974684238433838
    6. 'neighbors' → logprob: -5.224684238433838
    7. 'from' → logprob: -5.849684238433838
    8. 'gr' → logprob: -6.474684238433838
    9. 'result' → logprob: -6.974684238433838
    10. 'A' → logprob: -7.224684238433838

Token 141: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6267182230949402
    2. '(' → logprob: -0.8767182230949402
    3. '#' → logprob: -4.126718044281006
    4. ' des' → logprob: -4.376718044281006
    5. 'for' → logprob: -5.501718044281006
    6. 'des' → logprob: -5.501718044281006
    7. '(M' → logprob: -6.126718044281006
    8. '(N' → logprob: -6.251718044281006
    9. '([' → logprob: -6.376718044281006
    10. '(
' → logprob: -6.501718044281006

Token 142: ' M' (ID: 391)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.230094313621521
    2. 'M' → logprob: -1.605094313621521
    3. ' M' → logprob: -1.605094313621521
    4. 'ar' → logprob: -1.980094313621521
    5. 'edges' → logprob: -2.4800944328308105
    6. '_edges' → logprob: -3.7300944328308105
    7. ' ar' → logprob: -4.1050944328308105
    8. '_' → logprob: -4.8550944328308105
    9. ' lignes' → logprob: -5.6050944328308105
    10. ' données' → logprob: -5.9800944328308105

Token 143: ' ar' (ID: 646)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.1875646561384201
    2. ' lines' → logprob: -1.9375646114349365
    3. ' ' → logprob: -4.437564849853516
    4. ' ar' → logprob: -4.937564849853516
    5. ' edges' → logprob: -6.312564849853516
    6. 'ar' → logprob: -6.312564849853516
    7. ' for' → logprob: -7.312564849853516
    8. '<|end|>' → logprob: -7.687564849853516
    9. ' ligne' → logprob: -7.937564849853516
    10. ' linhas' → logprob: -8.312564849853516

Token 144: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0033585624769330025
    2. 'êts' → logprob: -6.378358364105225
    3. 'ê' → logprob: -7.503358364105225
    4. 'êt' → logprob: -7.753358364105225
    5. 'cs' → logprob: -8.628358840942383
    6. 'r' → logprob: -8.878358840942383
    7. 'ête' → logprob: -9.753358840942383
    8. 'ês' → logprob: -9.878358840942383
    9. 'êtres' → logprob: -10.003358840942383
    10. 'es' → logprob: -10.503358840942383

Token 145: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01562698744237423
    2. 'edges' → logprob: -4.265626907348633
    3. ' for' → logprob: -6.640626907348633
    4. ' edges' → logprob: -9.390626907348633
    5. '_edges' → logprob: -10.265626907348633
    6. 'graph' → logprob: -11.640626907348633
    7. 's' → logprob: -11.765626907348633
    8. '#' → logprob: -12.140626907348633
    9. '(edges' → logprob: -12.140626907348633
    10. '
' → logprob: -12.390626907348633

Token 146: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5480170249938965
    2. ' grap' → logprob: -0.9230170249938965
    3. 'graph' → logprob: -3.7980170249938965
    4. ' graph' → logprob: -6.1730170249938965
    5. ' ' → logprob: -10.798017501831055
    6. ' code' → logprob: -11.173017501831055
    7. '```' → logprob: -11.173017501831055
    8. ' graphique' → logprob: -11.798017501831055
    9. 'code' → logprob: -12.048017501831055
    10. 'sys' → logprob: -12.548017501831055

Token 147: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6902196407318115
    2. 'aphe' → logprob: -1.4402196407318115
    3. 'phe' → logprob: -1.9402196407318115
    4. 'ph' → logprob: -2.5652196407318115
    5. 'f' → logprob: -3.8152196407318115
    6. 'h' → logprob: -4.440219879150391
    7. 'che' → logprob: -5.565219879150391
    8. 'fe' → logprob: -7.190219879150391
    9. '#' → logprob: -7.315219879150391
    10. 'd' → logprob: -7.815219879150391

Token 148: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38922643661499023
    2. 'edges' → logprob: -1.1392264366149902
    3. 'graph' → logprob: -6.51422643661499
    4. '_edges' → logprob: -8.014226913452148
    5. ' edges' → logprob: -8.514226913452148
    6. ' for' → logprob: -8.889226913452148
    7. '(edges' → logprob: -10.139226913452148
    8. 'edge' → logprob: -10.139226913452148
    9. 'ar' → logprob: -10.514226913452148
    10. '
' → logprob: -10.889226913452148

Token 149: ' Chaque' (ID: 94758)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4433143734931946
    2. 'graph' → logprob: -1.1933143138885498
    3. 'for' → logprob: -3.31831431388855
    4. 'G' → logprob: -4.318314552307129
    5. 'g' → logprob: -6.443314552307129
    6. 'gr' → logprob: -7.068314552307129
    7. 'E' → logprob: -7.193314552307129
    8. ' edges' → logprob: -7.693314552307129
    9. 'edge' → logprob: -8.068314552307129
    10. '_edges' → logprob: -8.443314552307129

Token 150: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1520127058029175
    2. ' are' → logprob: -1.5270127058029175
    3. ' ar' → logprob: -1.7770127058029175
    4. 'ar' → logprob: -2.152012825012207
    5. ' edge' → logprob: -3.152012825012207
    6. ' for' → logprob: -3.152012825012207
    7. 'are' → logprob: -3.652012825012207
    8. '_' → logprob: -4.402012825012207
    9. 'edge' → logprob: -4.402012825012207
    10. '_are' → logprob: -4.402012825012207

Token 151: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.001514384988695383
    2. 'ète' → logprob: -7.376514434814453
    3. 'êtes' → logprob: -7.876514434814453
    4. 'te' → logprob: -8.376514434814453
    5. 'êt' → logprob: -9.251514434814453
    6. 'e' → logprob: -9.876514434814453
    7. 'ete' → logprob: -10.501514434814453
    8. 'c' → logprob: -11.126514434814453
    9. '#' → logprob: -11.126514434814453
    10. 'être' → logprob: -11.251514434814453

Token 152: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25072672963142395
    2. '=' → logprob: -2.1257266998291016
    3. 'for' → logprob: -2.5007266998291016
    4. 's' → logprob: -4.625726699829102
    5. '=[]' → logprob: -5.500726699829102
    6. '_edges' → logprob: -6.125726699829102
    7. '_' → logprob: -6.875726699829102
    8. ' for' → logprob: -7.000726699829102
    9. 'edges' → logprob: -7.250726699829102
    10. 'u' → logprob: -7.375726699829102

Token 153: ' sais' (ID: 30010)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02079540118575096
    2. ' []' → logprob: -5.0207953453063965
    3. 'tuple' → logprob: -5.0207953453063965
    4. ' tuple' → logprob: -5.6457953453063965
    5. '[' → logprob: -7.2707953453063965
    6. ' une' → logprob: -7.3957953453063965
    7. 'list' → logprob: -7.6457953453063965
    8. '(tuple' → logprob: -7.7707953453063965
    9. '[]
' → logprob: -8.270795822143555
    10. '[u' → logprob: -8.270795822143555

Token 154: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2746458947658539
    2. 'vie' → logprob: -3.0246458053588867
    3. 'e' → logprob: -3.2746458053588867
    4. 'tie' → logprob: -3.3996458053588867
    5. 'ite' → logprob: -3.5246458053588867
    6. 'sie' → logprob: -3.8996458053588867
    7. 'it' → logprob: -4.274645805358887
    8. 's' → logprob: -4.399645805358887
    9. 'is' → logprob: -4.649645805358887
    10. 't' → logprob: -4.774645805358887

Token 155: ' comme' (ID: 7971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014388319104909897
    2. ' for' → logprob: -4.264388084411621
    3. ' =' → logprob: -9.014388084411621
    4. '=' → logprob: -10.889388084411621
    5. '(
' → logprob: -11.139388084411621
    6. '(' → logprob: -11.264388084411621
    7. '[' → logprob: -11.514388084411621
    8. '_for' → logprob: -11.889388084411621
    9. '#' → logprob: -12.139388084411621
    10. 's' → logprob: -12.389388084411621

Token 156: ' un' (ID: 537)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.307826280593872
    2. 'list' → logprob: -1.932826280593872
    3. ' une' → logprob: -2.057826280593872
    4. 'une' → logprob: -2.557826280593872
    5. ' tuple' → logprob: -2.682826280593872
    6. '(u' → logprob: -2.682826280593872
    7. '(tuple' → logprob: -2.807826280593872
    8. 'a' → logprob: -3.057826280593872
    9. '[]' → logprob: -3.932826280593872
    10. '(' → logprob: -4.182826042175293

Token 157: ' couple' (ID: 7167)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.15697087347507477
    2. 'tuple' → logprob: -2.656970977783203
    3. 'for' → logprob: -4.156970977783203
    4. ' couple' → logprob: -4.281970977783203
    5. ' pair' → logprob: -4.656970977783203
    6. ' edge' → logprob: -5.031970977783203
    7. ' for' → logprob: -5.156970977783203
    8. 'u' → logprob: -5.531970977783203
    9. ' u' → logprob: -5.656970977783203
    10. ' trip' → logprob: -6.031970977783203

Token 158: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1392742395401
    2. '(' → logprob: -1.2642742395401
    3. ' ' → logprob: -2.7642741203308105
    4. ' of' → logprob: -2.8892741203308105
    5. ' de' → logprob: -2.8892741203308105
    6. 'for' → logprob: -3.0142741203308105
    7. '  ' → logprob: -3.2642741203308105
    8. '<|end|>' → logprob: -3.5142741203308105
    9. ' for' → logprob: -3.6392741203308105
    10. ' des' → logprob: -3.8892741203308105

Token 159: ' somm' (ID: 44830)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0850306749343872
    2. 'int' → logprob: -1.2100306749343872
    3. 'ints' → logprob: -2.0850305557250977
    4. 'n' → logprob: -2.3350305557250977
    5. 's' → logprob: -2.7100305557250977
    6. 'inte' → logprob: -3.0850305557250977
    7. 'som' → logprob: -5.210030555725098
    8. 'no' → logprob: -5.710030555725098
    9. ' noe' → logprob: -5.835030555725098
    10. ' somm' → logprob: -5.960030555725098

Token 160: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.2221946120262146
    2. 'et' → logprob: -2.4721946716308594
    3. 'êts' → logprob: -2.4721946716308594
    4. 'êtres' → logprob: -3.9721946716308594
    5. 'êt' → logprob: -5.847194671630859
    6. 'ètres' → logprob: -6.222194671630859
    7. 'e' → logprob: -6.597194671630859
    8. 'és' → logprob: -7.097194671630859
    9. 'ents' → logprob: -7.347194671630859
    10. 'ètes' → logprob: -7.472194671630859

Token 161: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002964746206998825
    2. 'edges' → logprob: -6.252964973449707
    3. ' for' → logprob: -7.627964973449707
    4. '(edges' → logprob: -8.752964973449707
    5. '_edges' → logprob: -9.377964973449707
    6. '[
' → logprob: -9.877964973449707
    7. '
' → logprob: -10.252964973449707
    8. 'u' → logprob: -10.252964973449707
    9. 's' → logprob: -10.377964973449707
    10. '[' → logprob: -10.502964973449707

Token 162: 'x' (ID: 87)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9338776469230652
    2. ')' → logprob: -1.30887770652771
    3. 'u' → logprob: -1.30887770652771
    4. ' )' → logprob: -3.68387770652771
    5. 'a' → logprob: -4.058877468109131
    6. ' integers' → logprob: -4.933877468109131
    7. ',' → logprob: -5.308877468109131
    8. 'int' → logprob: -5.558877468109131
    9. ',u' → logprob: -7.058877468109131
    10. 's' → logprob: -7.183877468109131

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013214473437983543
    2. ' ,' → logprob: -9.62513256072998
    3. ',y' → logprob: -9.75013256072998
    4. '_,' → logprob: -12.62513256072998
    5. ',
' → logprob: -13.50013256072998
    6. ')' → logprob: -14.25013256072998
    7. ',)' → logprob: -14.50013256072998
    8. 'y' → logprob: -14.75013256072998
    9. '_' → logprob: -15.00013256072998
    10. '1' → logprob: -15.37513256072998

Token 164: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4287113547325134
    2. ' y' → logprob: -1.0537114143371582
    3. ' ' → logprob: -11.9287109375
    4. '	y' → logprob: -13.0537109375
    5. ',y' → logprob: -14.4287109375
    6. ')' → logprob: -15.4287109375
    7. ',' → logprob: -15.5537109375
    8. ' ' → logprob: -15.6787109375
    9. '  ' → logprob: -15.8037109375
    10. '    ' → logprob: -16.3037109375

Token 165: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00123023078776896
    2. 'for' → logprob: -7.251230239868164
    3. ' )' → logprob: -8.251230239868164
    4. ')
' → logprob: -8.626230239868164
    5. ',' → logprob: -10.876230239868164
    6. ' ' → logprob: -11.876230239868164
    7. '))' → logprob: -12.001230239868164
    8. '   ' → logprob: -12.001230239868164
    9. ' for' → logprob: -12.126230239868164
    10. '):' → logprob: -12.126230239868164

Token 166: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3625965714454651
    2. 'for' → logprob: -1.2375965118408203
    3. 'graph' → logprob: -4.98759651184082
    4. ' edges' → logprob: -6.23759651184082
    5. 'edge' → logprob: -6.86259651184082
    6. '_edges' → logprob: -7.11259651184082
    7. 'ed' → logprob: -7.36259651184082
    8. ' for' → logprob: -7.36259651184082
    9. '
' → logprob: -7.48759651184082
    10. 'ar' → logprob: -7.73759651184082

Token 167: ' On' (ID: 2160)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.06031053140759468
    2. 'graph' → logprob: -2.9353106021881104
    3. ' edges' → logprob: -6.435310363769531
    4. 'for' → logprob: -6.810310363769531
    5. 'G' → logprob: -7.060310363769531
    6. 'E' → logprob: -8.060310363769531
    7. 'edge' → logprob: -8.185310363769531
    8. 'ar' → logprob: -8.435310363769531
    9. 'Edges' → logprob: -8.560310363769531
    10. 'are' → logprob: -8.935310363769531

Token 168: ' utilise' (ID: 70283)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6513293981552124
    2. 'for' → logprob: -1.0263293981552124
    3. '=' → logprob: -2.526329517364502
    4. ' for' → logprob: -4.026329517364502
    5. '_' → logprob: -4.526329517364502
    6. 'range' → logprob: -5.651329517364502
    7. '[]' → logprob: -6.151329517364502
    8. '=[]' → logprob: -7.026329517364502
    9. ' range' → logprob: -7.401329517364502
    10. 's' → logprob: -7.401329517364502

Token 169: ' '' (ID: 461)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03530207276344299
    2. ' []' → logprob: -4.03530216217041
    3. 'for' → logprob: -5.03530216217041
    4. '[' → logprob: -5.28530216217041
    5. 'range' → logprob: -5.78530216217041
    6. 'x' → logprob: -8.03530216217041
    7. 'une' → logprob: -8.28530216217041
    8. ' un' → logprob: -8.41030216217041
    9. ' une' → logprob: -8.66030216217041
    10. ' for' → logprob: -8.66030216217041

Token 170: 'sorted' (ID: 64288)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19541095197200775
    2. 'range' → logprob: -1.945410966873169
    3. '[' → logprob: -4.32041072845459
    4. ' []' → logprob: -4.69541072845459
    5. 'default' → logprob: -5.69541072845459
    6. ' range' → logprob: -5.94541072845459
    7. ' [[]' → logprob: -6.82041072845459
    8. 'for' → logprob: -7.07041072845459
    9. 'sys' → logprob: -7.19541072845459
    10. ' [' → logprob: -7.57041072845459

Token 171: ''' (ID: 6)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9736695885658264
    2. '(' → logprob: -1.7236695289611816
    3. '('' → logprob: -1.7236695289611816
    4. '(('' → logprob: -2.0986695289611816
    5. ''' → logprob: -2.8486695289611816
    6. '(x' → logprob: -3.8486695289611816
    7. '(lambda' → logprob: -4.223669528961182
    8. '()' → logprob: -4.223669528961182
    9. '(range' → logprob: -5.348669528961182
    10. '([' → logprob: -5.473669528961182

Token 172: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12840339541435242
    2. '((' → logprob: -2.503403425216675
    3. '(x' → logprob: -4.128403186798096
    4. 'for' → logprob: -4.503403186798096
    5. '(
' → logprob: -5.378403186798096
    6. '(lambda' → logprob: -6.253403186798096
    7. ',' → logprob: -6.628403186798096
    8. '([' → logprob: -7.253403186798096
    9. '(range' → logprob: -7.378403186798096
    10. ')' → logprob: -8.003403663635254

Token 173: ' garantir' (ID: 48328)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4731963574886322
    2. '(' → logprob: -1.8481963872909546
    3. '<|end|>' → logprob: -2.723196268081665
    4. '(sorted' → logprob: -3.348196268081665
    5. 'sorted' → logprob: -3.598196268081665
    6. ')' → logprob: -4.098196506500244
    7. '(
' → logprob: -4.348196506500244
    8. 'lambda' → logprob: -4.598196506500244
    9. '(range' → logprob: -4.973196506500244
    10. '()' → logprob: -4.973196506500244

Token 174: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08777608722448349
    2. '(lambda' → logprob: -2.9627761840820312
    3. '(x' → logprob: -4.337776184082031
    4. '<|end|>' → logprob: -4.587776184082031
    5. '(
' → logprob: -5.712776184082031
    6. '()' → logprob: -6.962776184082031
    7. '((' → logprob: -6.962776184082031
    8. ' (' → logprob: -7.087776184082031
    9. ')' → logprob: -7.837776184082031
    10. '(tuple' → logprob: -7.962776184082031

Token 175: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5774938464164734
    2. '(x' → logprob: -0.9524938464164734
    3. ' x' → logprob: -3.952493906021118
    4. ' (' → logprob: -4.577493667602539
    5. 'the' → logprob: -4.702493667602539
    6. ' the' → logprob: -5.577493667602539
    7. '(' → logprob: -5.702493667602539
    8. ' les' → logprob: -6.827493667602539
    9. 'l' → logprob: -7.452493667602539
    10. 'tuple' → logprob: -7.452493667602539

Token 176: ''ar' (ID: 54307)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5825844407081604
    2. 'x' → logprob: -1.0825843811035156
    3. ' x' → logprob: -2.5825843811035156
    4. ' (' → logprob: -4.082584381103516
    5. '<|end|>' → logprob: -5.707584381103516
    6. '(' → logprob: -5.957584381103516
    7. 'each' → logprob: -7.457584381103516
    8. ' each' → logprob: -7.707584381103516
    9. ')' → logprob: -7.707584381103516
    10. ' ' → logprob: -7.957584381103516

Token 177: 'ête' (ID: 16808)
  Prédit: 'êtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.4323999583721161
    2. 'ête' → logprob: -1.0573999881744385
    3. 'ète' → logprob: -7.807399749755859
    4. 'êt' → logprob: -7.932399749755859
    5. 'ôte' → logprob: -7.932399749755859
    6. 'c' → logprob: -8.18239974975586
    7. 'e' → logprob: -8.30739974975586
    8. 'être' → logprob: -8.68239974975586
    9. '#' → logprob: -8.80739974975586
    10. 'ange' → logprob: -8.93239974975586

Token 178: ' est' (ID: 893)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05036464333534241
    2. '(' → logprob: -3.4253647327423096
    3. ' (' → logprob: -4.4253644943237305
    4. ' =' → logprob: -6.4253644943237305
    5. '<|end|>' → logprob: -7.0503644943237305
    6. '=' → logprob: -7.3003644943237305
    7. ')' → logprob: -7.9253644943237305
    8. '(
' → logprob: -8.05036449432373
    9. ',' → logprob: -8.30036449432373
    10. '_' → logprob: -9.55036449432373

Token 179: ' stock' (ID: 6546)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07372698187828064
    2. 'tuple' → logprob: -3.6987268924713135
    3. 'x' → logprob: -4.448727130889893
    4. ' (' → logprob: -4.573727130889893
    5. ' tuple' → logprob: -4.698727130889893
    6. '(' → logprob: -4.823727130889893
    7. '(tuple' → logprob: -5.323727130889893
    8. 'list' → logprob: -7.573727130889893
    9. ' x' → logprob: -8.198726654052734
    10. '[x' → logprob: -8.323726654052734

Token 180: 'ée' (ID: 2894)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027817705646157265
    2. ' (' → logprob: -4.652817726135254
    3. '(x' → logprob: -5.902817726135254
    4. ')' → logprob: -6.152817726135254
    5. '=' → logprob: -6.277817726135254
    6. 'e' → logprob: -6.402817726135254
    7. ' ' → logprob: -6.402817726135254
    8. '('' → logprob: -6.777817726135254
    9. '(
' → logprob: -6.902817726135254
    10. '_' → logprob: -6.902817726135254

Token 181: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6499956846237183
    2. '(x' → logprob: -1.1499956846237183
    3. '((' → logprob: -3.024995803833008
    4. '(sorted' → logprob: -3.024995803833008
    5. '(tuple' → logprob: -3.899995803833008
    6. '(
' → logprob: -4.024995803833008
    7. ',' → logprob: -4.774995803833008
    8. 'sorted' → logprob: -5.149995803833008
    9. ')' → logprob: -5.899995803833008
    10. 'tuple' → logprob: -6.649995803833008

Token 182: ' l' (ID: 305)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6130697131156921
    2. '()' → logprob: -1.988069772720337
    3. ' tuple' → logprob: -2.363069772720337
    4. 'sorted' → logprob: -2.488069772720337
    5. '(tuple' → logprob: -3.238069772720337
    6. '(sorted' → logprob: -3.738069772720337
    7. 'list' → logprob: -3.738069772720337
    8. ')' → logprob: -4.613069534301758
    9. ' sorted' → logprob: -4.738069534301758
    10. '(x' → logprob: -4.988069534301758

Token 183: ''ordre' (ID: 124753)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.1858917474746704
    2. '(sorted' → logprob: -1.4358917474746704
    3. 'sorted' → logprob: -2.060891628265381
    4. '[' → logprob: -2.185891628265381
    5. ' tuple' → logprob: -2.685891628265381
    6. 'orted' → logprob: -3.310891628265381
    7. '(tuple' → logprob: -3.310891628265381
    8. ')' → logprob: -4.185891628265381
    9. '[]' → logprob: -4.185891628265381
    10. ' sorted' → logprob: -5.185891628265381

Token 184: ' cro' (ID: 11270)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002980552613735199
    2. '(' → logprob: -6.752980709075928
    3. '()' → logprob: -7.252980709075928
    4. ' (' → logprob: -8.12798023223877
    5. '(sorted' → logprob: -8.75298023223877
    6. '([' → logprob: -9.12798023223877
    7. ',' → logprob: -9.37798023223877
    8. ')' → logprob: -9.62798023223877
    9. 'x' → logprob: -9.62798023223877
    10. '((' → logprob: -9.87798023223877

Token 185: 'issant' (ID: 31359)
  Prédit: 'pped'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pped' → logprob: -0.12053719907999039
    2. 'isé' → logprob: -3.620537281036377
    3. 'issant' → logprob: -3.870537281036377
    4. 'cel' → logprob: -4.120537281036377
    5. 'ce' → logprob: -4.995537281036377
    6. 'né' → logprob: -5.745537281036377
    7. 'd' → logprob: -5.745537281036377
    8. 'pping' → logprob: -5.745537281036377
    9. 'pp' → logprob: -5.870537281036377
    10. 'cé' → logprob: -5.870537281036377

Token 186: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11631229519844055
    2. '(' → logprob: -2.616312265396118
    3. ',' → logprob: -4.116312503814697
    4. 'for' → logprob: -5.241312503814697
    5. '(edges' → logprob: -5.741312503814697
    6. 'x' → logprob: -6.116312503814697
    7. '(
' → logprob: -6.366312503814697
    8. '(edge' → logprob: -6.616312503814697
    9. 'edges' → logprob: -6.866312503814697
    10. '((' → logprob: -6.991312503814697

Token 187: 'important' (ID: 31371)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.048071350902318954
    2. 'x' → logprob: -3.2980713844299316
    3. ' (' → logprob: -5.423071384429932
    4. '[x' → logprob: -5.923071384429932
    5. ')' → logprob: -6.298071384429932
    6. '(' → logprob: -7.548071384429932
    7. ' x' → logprob: -8.173070907592773
    8. ')x' → logprob: -9.798070907592773
    9. '[' → logprob: -10.048070907592773
    10. ' ' → logprob: -11.048070907592773

Token 188: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0482791662216187
    2. ',' → logprob: -1.0482791662216187
    3. '(' → logprob: -1.4232791662216187
    4. '(x' → logprob: -4.298279285430908
    5. ' )' → logprob: -4.548279285430908
    6. ' ' → logprob: -4.548279285430908
    7. 'for' → logprob: -5.048279285430908
    8. ' ,' → logprob: -5.673279285430908
    9. ' pour' → logprob: -5.798279285430908
    10. ' for' → logprob: -5.923279285430908

Token 189: ' utiliser' (ID: 43227)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.433577299118042
    2. ' la' → logprob: -1.558577299118042
    3. 'l' → logprob: -2.558577299118042
    4. 'cons' → logprob: -2.683577299118042
    5. 'la' → logprob: -2.808577299118042
    6. ' l' → logprob: -2.933577299118042
    7. ' consistent' → logprob: -3.058577299118042
    8. ' éviter' → logprob: -3.058577299118042
    9. 'les' → logprob: -3.558577299118042
    10. 'consistent' → logprob: -3.683577299118042

Token 190: ' comme' (ID: 7971)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0848578214645386
    2. 'un' → logprob: -2.084857940673828
    3. ' des' → logprob: -2.084857940673828
    4. 'des' → logprob: -2.459857940673828
    5. 'les' → logprob: -2.584857940673828
    6. 'une' → logprob: -3.084857940673828
    7. ' a' → logprob: -3.209857940673828
    8. 'a' → logprob: -3.334857940673828
    9. ' une' → logprob: -3.584857940673828
    10. ' les' → logprob: -3.959857940673828

Token 191: ' clé' (ID: 83188)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.689603567123413
    2. ' tuple' → logprob: -1.689603567123413
    3. ' une' → logprob: -1.939603567123413
    4. 'tuple' → logprob: -1.939603567123413
    5. ' un' → logprob: -2.314603567123413
    6. ' tuples' → logprob: -2.439603567123413
    7. 'un' → logprob: -3.189603567123413
    8. ' des' → logprob: -3.689603567123413
    9. ' keys' → logprob: -3.814603567123413
    10. 'clé' → logprob: -4.189603805541992

Token 192: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.175146460533142
    2. 'dans' → logprob: -1.300146460533142
    3. ' dans' → logprob: -1.300146460533142
    4. ' des' → logprob: -3.1751465797424316
    5. 'des' → logprob: -3.1751465797424316
    6. ' )' → logprob: -4.300146579742432
    7. ',' → logprob: -4.300146579742432
    8. '),' → logprob: -5.300146579742432
    9. ' de' → logprob: -5.300146579742432
    10. ' in' → logprob: -5.425146579742432

Token 193: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.01959254778921604
    2. 'E' → logprob: -4.894592761993408
    3. 'ed' → logprob: -5.269592761993408
    4. 'graph' → logprob: -6.394592761993408
    5. 'edge' → logprob: -7.269592761993408
    6. '
' → logprob: -7.269592761993408
    7. 'G' → logprob: -7.519592761993408
    8. 'for' → logprob: -7.519592761993408
    9. '_edges' → logprob: -7.769592761993408
    10. 'ar' → logprob: -7.769592761993408

Token 194: ' On' (ID: 2160)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.030876826494932175
    2. 'E' → logprob: -4.155876636505127
    3. 'graph' → logprob: -6.030876636505127
    4. 'ar' → logprob: -6.155876636505127
    5. '
' → logprob: -6.155876636505127
    6. 'ed' → logprob: -6.155876636505127
    7. 'G' → logprob: -6.530876636505127
    8. 'A' → logprob: -6.780876636505127
    9. 'are' → logprob: -7.905876636505127
    10. 'edge' → logprob: -8.030877113342285

Token 195: ' crée' (ID: 102256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9779453277587891
    2. '_edges' → logprob: -1.102945327758789
    3. '=' → logprob: -2.227945327758789
    4. 'for' → logprob: -2.852945327758789
    5. 'edges' → logprob: -2.977945327758789
    6. '_' → logprob: -3.227945327758789
    7. 's' → logprob: -4.102945327758789
    8. ' edges' → logprob: -4.977945327758789
    9. '_edge' → logprob: -7.102945327758789
    10. ' for' → logprob: -7.102945327758789

Token 196: ' M' (ID: 391)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.11063533276319504
    2. 'un' → logprob: -2.610635280609131
    3. ' une' → logprob: -4.235635280609131
    4. ' a' → logprob: -4.985635280609131
    5. 'a' → logprob: -6.110635280609131
    6. 'une' → logprob: -6.360635280609131
    7. 's' → logprob: -6.735635280609131
    8. '{}' → logprob: -7.235635280609131
    9. '	un' → logprob: -7.610635280609131
    10. '[]' → logprob: -7.610635280609131

Token 197: ' tuples' (ID: 112464)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2495782971382141
    2. 'edges' → logprob: -2.1245782375335693
    3. ' edges' → logprob: -3.1245782375335693
    4. ' =' → logprob: -3.8745782375335693
    5. '[]' → logprob: -5.249578475952148
    6. '[
' → logprob: -5.874578475952148
    7. '[' → logprob: -5.874578475952148
    8. 'ar' → logprob: -6.249578475952148
    9. '_ar' → logprob: -6.249578475952148
    10. 'Edges' → logprob: -6.249578475952148

Token 198: ' (' (ID: 350)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.9347473382949829
    2. '(
' → logprob: -1.434747338294983
    3. '(x' → logprob: -1.934747338294983
    4. '(sorted' → logprob: -2.4347472190856934
    5. '(' → logprob: -3.3097472190856934
    6. '((' → logprob: -3.5597472190856934
    7. '[(' → logprob: -4.434747219085693
    8. 'for' → logprob: -4.684747219085693
    9. '_edges' → logprob: -4.934747219085693
    10. '([' → logprob: -4.934747219085693

Token 199: 'ar' (ID: 277)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.7961372137069702
    2. 'sorted' → logprob: -0.9211372137069702
    3. 'tuple' → logprob: -2.1711373329162598
    4. '(tuple' → logprob: -3.6711373329162598
    5. ' tuple' → logprob: -5.67113733291626
    6. ' sorted' → logprob: -5.79613733291626
    7. ')' → logprob: -6.42113733291626
    8. '(x' → logprob: -6.92113733291626
    9. ' (' → logprob: -7.67113733291626
    10. '(int' → logprob: -7.92113733291626

Token 200: 'êtes' (ID: 23720)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7463765740394592
    2. '(' → logprob: -1.6213765144348145
    3. 'êtes' → logprob: -1.6213765144348145
    4. 'ête' → logprob: -3.6213765144348145
    5. '(edges' → logprob: -3.9963765144348145
    6. 'e' → logprob: -4.1213765144348145
    7. '(r' → logprob: -4.2463765144348145
    8. '(ch' → logprob: -4.6213765144348145
    9. '(
' → logprob: -5.1213765144348145
    10. 'cs' → logprob: -5.3713765144348145

Token 201: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5339682698249817
    2. ',' → logprob: -2.033968210220337
    3. '(x' → logprob: -2.408968210220337
    4. ' =' → logprob: -3.033968210220337
    5. ',
' → logprob: -3.408968210220337
    6. '=' → logprob: -3.408968210220337
    7. '),' → logprob: -3.783968210220337
    8. ')
' → logprob: -4.408968448638916
    9. 'for' → logprob: -5.033968448638916
    10. '(
' → logprob: -5.158968448638916

Token 202: ' stock' (ID: 6546)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.036920215934515
    2. '[(' → logprob: -4.536920070648193
    3. '[' → logprob: -4.661920070648193
    4. ' edges' → logprob: -4.786920070648193
    5. '[]' → logprob: -6.161920070648193
    6. '[
' → logprob: -6.911920070648193
    7. '_edges' → logprob: -7.036920070648193
    8. '[E' → logprob: -7.411920070648193
    9. '(edges' → logprob: -7.536920070648193
    10. '[u' → logprob: -7.911920070648193

Token 203: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03934603929519653
    2. 'és' → logprob: -4.289346218109131
    3. 'edges' → logprob: -4.914346218109131
    4. '_edges' → logprob: -5.539346218109131
    5. '=' → logprob: -5.914346218109131
    6. 'ant' → logprob: -6.289346218109131
    7. 'ée' → logprob: -6.289346218109131
    8. 'ed' → logprob: -6.289346218109131
    9. 'ues' → logprob: -6.539346218109131
    10. 'é' → logprob: -6.789346218109131

Token 204: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.3111380636692047
    2. 'dans' → logprob: -1.9361380338668823
    3. ' in' → logprob: -2.561138153076172
    4. ' =' → logprob: -4.311138153076172
    5. 'in' → logprob: -4.436138153076172
    6. ')' → logprob: -5.061138153076172
    7. '=' → logprob: -5.186138153076172
    8. ' en' → logprob: -6.561138153076172
    9. '=[]' → logprob: -6.811138153076172
    10. '[' → logprob: -7.061138153076172

Token 205: ' une' (ID: 2463)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2893487215042114
    2. '[' → logprob: -1.9143487215042114
    3. ' edges' → logprob: -4.664348602294922
    4. '[a' → logprob: -4.664348602294922
    5. 'sorted' → logprob: -4.789348602294922
    6. '_edges' → logprob: -5.039348602294922
    7. '[E' → logprob: -5.039348602294922
    8. 'ar' → logprob: -5.164348602294922
    9. 'a' → logprob: -5.164348602294922
    10. '[(' → logprob: -5.289348602294922

Token 206: ' liste' (ID: 31719)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4222710430622101
    2. 'list' → logprob: -1.6722710132598877
    3. '[' → logprob: -2.1722710132598877
    4. '[
' → logprob: -3.7972710132598877
    5. '[]' → logprob: -4.547271251678467
    6. 'for' → logprob: -6.047271251678467
    7. '[list' → logprob: -6.297271251678467
    8. 'tuple' → logprob: -7.547271251678467
    9. 'liste' → logprob: -7.547271251678467
    10. '[m' → logprob: -7.547271251678467

Token 207: ' EDGE' (ID: 165368)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.06372123211622238
    2. 'E' → logprob: -3.438721179962158
    3. '(edges' → logprob: -4.563721179962158
    4. 'ar' → logprob: -5.063721179962158
    5. '[(' → logprob: -5.563721179962158
    6. '[E' → logprob: -6.188721179962158
    7. 'A' → logprob: -6.438721179962158
    8. '[' → logprob: -6.563721179962158
    9. '_edges' → logprob: -7.438721179962158
    10. 'G' → logprob: -7.563721179962158

Token 208: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18446922302246094
    2. ' =' → logprob: -2.309469223022461
    3. '=' → logprob: -2.684469223022461
    4. '=[]' → logprob: -7.809469223022461
    5. '=[]
' → logprob: -9.309469223022461
    6. 'es' → logprob: -9.434469223022461
    7. 'edges' → logprob: -9.934469223022461
    8. '[]' → logprob: -10.309469223022461
    9. '=edge' → logprob: -10.309469223022461
    10. 'S' → logprob: -10.434469223022461

Token 209: 'EDGE' (ID: 185822)
  Prédit: 'EDGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.0003961185284424573
    2. '[
' → logprob: -8.250395774841309
    3. '[' → logprob: -10.000395774841309
    4. 'edges' → logprob: -10.625395774841309
    5. '[]
' → logprob: -10.875395774841309
    6. '_EDGE' → logprob: -11.000395774841309
    7. 'edge' → logprob: -11.750395774841309
    8. '
' → logprob: -11.875395774841309
    9. ' EDGE' → logprob: -12.625395774841309
    10. '[(' → logprob: -12.875395774841309

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026292741298676
    2. '=' → logprob: -1.910262942314148
    3. 's' → logprob: -10.410263061523438
    4. '=[]' → logprob: -12.160263061523438
    5. ' =[' → logprob: -13.660263061523438
    6. '=[' → logprob: -14.785263061523438
    7. ' ' → logprob: -14.785263061523438
    8. ' =
' → logprob: -15.160263061523438
    9. '=[]
' → logprob: -15.285263061523438
    10. ',' → logprob: -15.285263061523438

Token 211: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016873658751137555
    2. ' [' → logprob: -9.000168800354004
    3. 'sorted' → logprob: -10.375168800354004
    4. '[list' → logprob: -12.000168800354004
    5. '[
' → logprob: -12.500168800354004
    6. '[s' → logprob: -13.625168800354004
    7. '   ' → logprob: -14.250168800354004
    8. '[List' → logprob: -14.625168800354004
    9. ' ' → logprob: -14.750168800354004
    10. '[str' → logprob: -15.375168800354004

Token 212: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.011816701851785183
    2. ' tuple' → logprob: -4.886816501617432
    3. 'sorted' → logprob: -5.511816501617432
    4. '(tuple' → logprob: -8.88681697845459
    5. '   ' → logprob: -11.63681697845459
    6. ' sorted' → logprob: -11.88681697845459
    7. '(sorted' → logprob: -12.88681697845459
    8. '
' → logprob: -12.88681697845459
    9. ' ' → logprob: -13.88681697845459
    10. ')' → logprob: -14.01181697845459

Token 213: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0046271225437521935
    2. 'sorted' → logprob: -5.379627227783203
    3. ' sorted' → logprob: -13.004627227783203
    4. '(' → logprob: -13.004627227783203
    5. '(map' → logprob: -13.754627227783203
    6. '(s' → logprob: -14.629627227783203
    7. '(
' → logprob: -14.754627227783203
    8. '(sort' → logprob: -16.129627227783203
    9. ' (' → logprob: -16.504627227783203
    10. 'map' → logprob: -16.504627227783203

Token 214: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00027015688829123974
    2. 'map' → logprob: -8.250269889831543
    3. '(' → logprob: -12.375269889831543
    4. '(list' → logprob: -13.250269889831543
    5. '(tuple' → logprob: -14.000269889831543
    6. ' map' → logprob: -14.375269889831543
    7. '(int' → logprob: -14.750269889831543
    8. ')' → logprob: -15.000269889831543
    9. '((' → logprob: -15.500269889831543
    10. '	map' → logprob: -15.750269889831543

Token 215: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -10.000099182128906
    3. 'int' → logprob: -10.000099182128906
    4. '<int' → logprob: -13.000099182128906
    5. ' (' → logprob: -13.125099182128906
    6. ',int' → logprob: -13.125099182128906
    7. '[int' → logprob: -14.125099182128906
    8. '(
' → logprob: -14.250099182128906
    9. '=int' → logprob: -15.000099182128906
    10. ' int' → logprob: -15.500099182128906

Token 216: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.07449128478765488
    2. ',' → logprob: -2.949491262435913
    3. '(input' → logprob: -3.949491262435913
    4. 'input' → logprob: -9.074491500854492
    5. '(' → logprob: -11.324491500854492
    6. ' ,' → logprob: -11.699491500854492
    7. ',(' → logprob: -12.199491500854492
    8. '(),' → logprob: -12.949491500854492
    9. ' (' → logprob: -12.949491500854492
    10. ',x' → logprob: -12.949491500854492

Token 217: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014173968695104122
    2. ' input' → logprob: -4.264173984527588
    3. '(input' → logprob: -11.76417350769043
    4. ' ' → logprob: -13.63917350769043
    5. 'sys' → logprob: -14.63917350769043
    6. ',input' → logprob: -15.38917350769043
    7. '	input' → logprob: -15.51417350769043
    8. '[input' → logprob: -15.51417350769043
    9. ' sys' → logprob: -16.26417350769043
    10. '<input' → logprob: -16.63917350769043

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -17.250001907348633
    4. '(' → logprob: -17.625001907348633
    5. '()
' → logprob: -18.500001907348633
    6. '()))' → logprob: -19.000001907348633
    7. '())))' → logprob: -19.125001907348633
    8. ' ' → logprob: -20.125001907348633
    9. 's' → logprob: -20.750001907348633
    10. 'sys' → logprob: -20.875001907348633

Token 219: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.153795766294934e-06
    2. 'strip' → logprob: -12.125005722045898
    3. ' split' → logprob: -14.500005722045898
    4. 'read' → logprob: -16.3750057220459
    5. '(split' → logprob: -16.7500057220459
    6. 'rstrip' → logprob: -17.3750057220459
    7. ' ' → logprob: -18.1250057220459
    8. '().' → logprob: -19.0000057220459
    9. '.split' → logprob: -19.1250057220459
    10. 'spl' → logprob: -19.2500057220459

Token 220: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.09482160210609436
    2. ')))' → logprob: -2.8448216915130615
    3. '()))' → logprob: -3.9698216915130615
    4. '()' → logprob: -4.594821453094482
    5. '())))
' → logprob: -6.219821453094482
    6. ' ' → logprob: -6.844821453094482
    7. '))' → logprob: -9.34482192993164
    8. '(' → logprob: -9.84482192993164
    9. '()
' → logprob: -10.09482192993164
    10. '())' → logprob: -10.21982192993164

Token 221: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47425270080566406
    2. 'for' → logprob: -0.9742527008056641
    3. ')' → logprob: -9.224252700805664
    4. ' ' → logprob: -10.474252700805664
    5. '   ' → logprob: -10.724252700805664
    6. '	for' → logprob: -10.724252700805664
    7. '    ' → logprob: -13.724252700805664
    8. '  ' → logprob: -14.224252700805664
    9. '()' → logprob: -14.224252700805664
    10. ' ' → logprob: -14.474252700805664

Token 222: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5820605754852295
    2. '_' → logprob: -1.0820605754852295
    3. 'range' → logprob: -2.3320605754852295
    4. ' _' → logprob: -5.832060813903809
    5. ' in' → logprob: -6.207060813903809
    6. '_range' → logprob: -8.457060813903809
    7. ' ' → logprob: -9.457060813903809
    8. 'in' → logprob: -11.457060813903809
    9. ' ' → logprob: -12.332060813903809
    10. '	range' → logprob: -12.832060813903809

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07011838257312775
    2. 'in' → logprob: -2.6951184272766113
    3. 'range' → logprob: -9.195117950439453
    4. ' ' → logprob: -10.070117950439453
    5. ' range' → logprob: -10.695117950439453
    6. ' i' → logprob: -12.570117950439453
    7. ')' → logprob: -13.070117950439453
    8. '(' → logprob: -13.070117950439453
    9. '_' → logprob: -13.445117950439453
    10. '(range' → logprob: -13.570117950439453

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858805239200592
    2. ' range' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.298587799072266
    4. '	range' → logprob: -15.548587799072266
    5. 'rang' → logprob: -15.673587799072266
    6. '(range' → logprob: -16.048587799072266
    7. ' xrange' → logprob: -17.923587799072266
    8. 'ra' → logprob: -18.548587799072266
    9. 'r' → logprob: -19.048587799072266
    10. ' rang' → logprob: -19.298587799072266

Token 225: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0002334568416699767
    2. '(' → logprob: -8.37523365020752
    3. 'M' → logprob: -13.00023365020752
    4. '(
' → logprob: -14.62523365020752
    5. ' (' → logprob: -16.250232696533203
    6. '(m' → logprob: -17.250232696533203
    7. ' M' → logprob: -18.250232696533203
    8. ')' → logprob: -18.625232696533203
    9. '	M' → logprob: -19.250232696533203
    10. '(int' → logprob: -20.250232696533203

Token 226: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039051592466421425
    2. ')' → logprob: -7.875390529632568
    3. '):' → logprob: -12.75039005279541
    4. ']' → logprob: -13.12539005279541
    5. ' )' → logprob: -13.25039005279541
    6. ')])' → logprob: -13.87539005279541
    7. ')]
' → logprob: -14.12539005279541
    8. '')]' → logprob: -15.25039005279541
    9. '])]' → logprob: -15.25039005279541
    10. ')][' → logprob: -15.62539005279541

Token 227: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1751949787139893
    2. 'graph' → logprob: -2.1751949787139893
    3. 'adj' → logprob: -2.3001949787139893
    4. 'for' → logprob: -2.9251949787139893
    5. 'result' → logprob: -2.9251949787139893
    6. 'visited' → logprob: -3.1751949787139893
    7. 'edges' → logprob: -3.1751949787139893
    8. 'Q' → logprob: -3.3001949787139893
    9. 'degree' → logprob: -3.4251949787139893
    10. 'answer' → logprob: -3.9251949787139893

Token 229: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9541223645210266
    2. ' #' → logprob: -1.7041223049163818
    3. '#' → logprob: -1.8291223049163818
    4. 'for' → logprob: -2.454122304916382
    5. '_' → logprob: -3.079122304916382
    6. 'def' → logprob: -3.204122304916382
    7. '=' → logprob: -3.579122304916382
    8. ' ' → logprob: -4.329122543334961
    9. '.' → logprob: -4.954122543334961
    10. ':' → logprob: -4.954122543334961

Token 230: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.6532939672470093
    2. 'adj' → logprob: -2.028294086456299
    3. ' a' → logprob: -2.403294086456299
    4. ' une' → logprob: -2.528294086456299
    5. ' graph' → logprob: -2.778294086456299
    6. 'dist' → logprob: -3.153294086456299
    7. ' adjacency' → logprob: -3.403294086456299
    8. ' adj' → logprob: -3.403294086456299
    9. ' dist' → logprob: -3.653294086456299
    10. ' distances' → logprob: -3.778294086456299

Token 231: ' diction' (ID: 155259)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.3377649486064911
    2. 'd' → logprob: -1.9627649784088135
    3. 'dict' → logprob: -3.3377649784088135
    4. ' defaultdict' → logprob: -3.3377649784088135
    5. 'set' → logprob: -3.4627649784088135
    6. ' =' → logprob: -5.212764739990234
    7. '
' → logprob: -5.212764739990234
    8. 'graph' → logprob: -5.462764739990234
    9. '=' → logprob: -5.712764739990234
    10. '[]' → logprob: -5.837764739990234

Token 232: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.0003716854262165725
    2. 'aire' → logprob: -8.375371932983398
    3. 'ary' → logprob: -9.250371932983398
    4. 'n' → logprob: -10.625371932983398
    5. 'na' → logprob: -11.250371932983398
    6. '#' → logprob: -12.500371932983398
    7. 'naires' → logprob: -13.625371932983398
    8. '{' → logprob: -13.875371932983398
    9. '{}' → logprob: -14.000371932983398
    10. '```' → logprob: -15.000371932983398

Token 233: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3104106187820435
    2. 'edges' → logprob: -1.5604106187820435
    3. 'graph' → logprob: -1.8104106187820435
    4. ' =' → logprob: -2.685410499572754
    5. 'edge' → logprob: -2.810410499572754
    6. ' d' → logprob: -3.185410499572754
    7. 'adj' → logprob: -3.560410499572754
    8. 'dict' → logprob: -4.185410499572754
    9. 'dist' → logprob: -4.435410499572754
    10. '_edges' → logprob: -4.435410499572754

Token 234: ' assoc' (ID: 107464)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.31862106919288635
    2. ' stock' → logprob: -2.6936211585998535
    3. ' compter' → logprob: -3.0686211585998535
    4. 'stock' → logprob: -3.5686211585998535
    5. ' defaultdict' → logprob: -3.9436211585998535
    6. '{' → logprob: -3.9436211585998535
    7. ' ' → logprob: -4.1936211585998535
    8. 'count' → logprob: -4.3186211585998535
    9. 'default' → logprob: -4.5686211585998535
    10. '_edges' → logprob: -4.8186211585998535

Token 235: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.010322241112589836
    2. 'uer' → logprob: -4.760322093963623
    3. 'er' → logprob: -6.760322093963623
    4. '{}' → logprob: -8.635322570800781
    5. '#' → logprob: -8.885322570800781
    6. '{' → logprob: -9.510322570800781
    7. 'i' → logprob: -10.510322570800781
    8. '   ' → logprob: -11.010322570800781
    9. 'urer' → logprob: -11.010322570800781
    10. 'érer' → logprob: -11.135322570800781

Token 236: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.6134346723556519
    2. 'D' → logprob: -2.1134347915649414
    3. '()' → logprob: -2.2384347915649414
    4. '(' → logprob: -2.4884347915649414
    5. 'edge' → logprob: -2.7384347915649414
    6. 'l' → logprob: -2.9884347915649414
    7. 'edges' → logprob: -3.1134347915649414
    8. 'les' → logprob: -3.4884347915649414
    9. '(edge' → logprob: -3.4884347915649414
    10. '_edges' → logprob: -3.7384347915649414

Token 237: ' ar' (ID: 646)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4866887927055359
    2. 'ar' → logprob: -1.2366888523101807
    3. ' edge' → logprob: -2.9866888523101807
    4. '(edge' → logprob: -3.6116888523101807
    5. ' (' → logprob: -5.736688613891602
    6. 'are' → logprob: -5.861688613891602
    7. '(' → logprob: -6.236688613891602
    8. 'EDGE' → logprob: -6.486688613891602
    9. 'tuple' → logprob: -6.736688613891602
    10. ' ar' → logprob: -6.986688613891602

Token 238: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0242777019739151
    2. 'e' → logprob: -4.649277687072754
    3. 'c' → logprob: -4.899277687072754
    4. 'ê' → logprob: -5.774277687072754
    5. 'êt' → logprob: -7.274277687072754
    6. 'ète' → logprob: -7.649277687072754
    7. '^' → logprob: -7.899277687072754
    8. 't' → logprob: -8.399277687072754
    9. 'Ê' → logprob: -8.399277687072754
    10. 'êtes' → logprob: -8.399277687072754

Token 239: ' à' (ID: 1221)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.7086609601974487
    2. '_edge' → logprob: -1.4586609601974487
    3. '(edges' → logprob: -3.3336610794067383
    4. ',' → logprob: -3.4586610794067383
    5. 'des' → logprob: -3.4586610794067383
    6. '{' → logprob: -3.8336610794067383
    7. 'edges' → logprob: -3.9586610794067383
    8. '{}' → logprob: -4.208661079406738
    9. ' à' → logprob: -4.458661079406738
    10. 'to' → logprob: -4.458661079406738

Token 240: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10211244225502014
    2. '[]' → logprob: -2.7271125316619873
    3. ' ' → logprob: -4.352112293243408
    4. 'float' → logprob: -5.477112293243408
    5. 'None' → logprob: -5.852112293243408
    6. '1' → logprob: -6.102112293243408
    7. '-' → logprob: -6.102112293243408
    8. 'False' → logprob: -6.227112293243408
    9. ' []' → logprob: -7.102112293243408
    10. 'int' → logprob: -7.352112293243408

Token 241: ' index' (ID: 3472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8817918300628662
    2. '[]' → logprob: -0.8817918300628662
    3. 'set' → logprob: -3.256791830062866
    4. 'val' → logprob: -3.881791830062866
    5. 'value' → logprob: -3.881791830062866
    6. 'int' → logprob: -3.881791830062866
    7. '[' → logprob: -4.256792068481445
    8. 'False' → logprob: -4.631792068481445
    9. 'count' → logprob: -4.881792068481445
    10. ' []' → logprob: -5.381792068481445

Token 242: ' unique' (ID: 5746)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4044387936592102
    2. 'EDGE' → logprob: -2.0294387340545654
    3. 'edges' → logprob: -3.1544387340545654
    4. '{}' → logprob: -3.6544387340545654
    5. ',' → logprob: -3.6544387340545654
    6. '_edge' → logprob: -3.7794387340545654
    7. '{' → logprob: -4.0294389724731445
    8. ' edge' → logprob: -4.4044389724731445
    9. 'dict' → logprob: -4.7794389724731445
    10. '(edge' → logprob: -5.0294389724731445

Token 243: ' (' (ID: 350)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.20796000957489014
    2. 'edges' → logprob: -2.4579601287841797
    3. 'EDGE' → logprob: -2.5829601287841797
    4. 'E' → logprob: -5.33296012878418
    5. ',' → logprob: -5.58296012878418
    6. '_edge' → logprob: -5.70796012878418
    7. ' edge' → logprob: -6.08296012878418
    8. 'dict' → logprob: -6.58296012878418
    9. '
' → logprob: -7.08296012878418
    10. '{' → logprob: -7.08296012878418

Token 244: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23293882608413696
    2. '{}' → logprob: -2.232938766479492
    3. '{})' → logprob: -2.857938766479492
    4. '{' → logprob: -4.232938766479492
    5. 'edge' → logprob: -4.482938766479492
    6. ')
' → logprob: -5.107938766479492
    7. ' )' → logprob: -5.857938766479492
    8. '{})
' → logprob: -6.107938766479492
    9. ' {})' → logprob: -6.732938766479492
    10. 'dict' → logprob: -7.232938766479492

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015049871057271957
    2. ' ' → logprob: -4.765049934387207
    3. 'i' → logprob: -6.265049934387207
    4. '1' → logprob: -6.390049934387207
    5. '{}' → logprob: -6.515049934387207
    6. '{' → logprob: -7.515049934387207
    7. 'ar' → logprob: -8.140049934387207
    8. 'f' → logprob: -9.140049934387207
    9. 'enumer' → logprob: -9.640049934387207
    10. ' i' → logprob: -10.015049934387207

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008372656302526593
    2. ' ' → logprob: -7.125837326049805
    3. '1' → logprob: -10.875837326049805
    4. '
' → logprob: -12.625837326049805
    5. 'range' → logprob: -13.125837326049805
    6. 'zero' → logprob: -13.625837326049805
    7. 'i' → logprob: -14.000837326049805
    8. 'ar' → logprob: -14.125837326049805
    9. '{' → logprob: -14.250837326049805
    10. ')' → logprob: -14.625837326049805

Token 247: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027699286583811045
    2. ',' → logprob: -6.627769947052002
    3. ' )' → logprob: -6.627769947052002
    4. '),' → logprob: -10.502769470214844
    5. ')
' → logprob: -10.752769470214844
    6. '})' → logprob: -11.252769470214844
    7. ' ' → logprob: -11.502769470214844
    8. '}' → logprob: -11.752769470214844
    9. 'x' → logprob: -12.002769470214844
    10. ',)' → logprob: -12.127769470214844

Token 248: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.22546371817588806
    2. ' M' → logprob: -1.6004637479782104
    3. ' ' → logprob: -9.9754638671875
    4. ' ' → logprob: -13.7254638671875
    5. '   ' → logprob: -13.8504638671875
    6. 'len' → logprob: -13.9754638671875
    7. '	M' → logprob: -14.7254638671875
    8. ' len' → logprob: -15.1004638671875
    9. '  ' → logprob: -15.4754638671875
    10. '
' → logprob: -15.7254638671875

Token 249: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005399172659963369
    2. ' -' → logprob: -5.255399227142334
    3. ')' → logprob: -8.755398750305176
    4. '-)' → logprob: -12.630398750305176
    5. ' )' → logprob: -13.380398750305176
    6. '1' → logprob: -13.505398750305176
    7. '-
' → logprob: -14.380398750305176
    8. '
' → logprob: -15.255398750305176
    9. ')-' → logprob: -15.380398750305176
    10. ' ' → logprob: -16.630399703979492

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014501138357445598
    2. 'M' → logprob: -7.251450061798096
    3. ' ' → logprob: -7.376450061798096
    4. '-' → logprob: -9.376450538635254
    5. ')' → logprob: -11.376450538635254
    6. ' M' → logprob: -11.501450538635254
    7. '```' → logprob: -12.751450538635254
    8. '19' → logprob: -13.626450538635254
    9. ',' → logprob: -14.251450538635254
    10. ' -' → logprob: -14.501450538635254

Token 251: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006005463656038046
    2. 'edge' → logprob: -6.00600528717041
    3. ',' → logprob: -6.50600528717041
    4. ')
' → logprob: -7.25600528717041
    5. 'edges' → logprob: -7.88100528717041
    6. ' )' → logprob: -8.25600528717041
    7. 'EDGE' → logprob: -8.25600528717041
    8. '_edge' → logprob: -9.13100528717041
    9. '}' → logprob: -9.88100528717041
    10. '_edges' → logprob: -10.25600528717041

Token 252: 'D' (ID: 35)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.20643720030784607
    2. 'EDGE' → logprob: -2.456437110900879
    3. 'edges' → logprob: -2.706437110900879
    4. 'E' → logprob: -4.081437110900879
    5. 'index' → logprob: -4.956437110900879
    6. 'idx' → logprob: -5.831437110900879
    7. 'ed' → logprob: -6.706437110900879
    8. 'e' → logprob: -6.706437110900879
    9. 'Edge' → logprob: -7.331437110900879
    10. 'dict' → logprob: -7.831437110900879

Token 253: 'ICE' (ID: 9468)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.22713802754878998
    2. '_edges' → logprob: -2.227138042449951
    3. 'ict' → logprob: -2.852138042449951
    4. 'ic' → logprob: -4.227138042449951
    5. ' =' → logprob: -5.102138042449951
    6. '_ed' → logprob: -5.852138042449951
    7. '_' → logprob: -6.102138042449951
    8. 'edge' → logprob: -6.227138042449951
    9. 'EDGE' → logprob: -6.352138042449951
    10. '_index' → logprob: -6.602138042449951

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4388945400714874
    2. '=' → logprob: -2.313894510269165
    3. '_index' → logprob: -2.438894510269165
    4. '_idx' → logprob: -2.563894510269165
    5. '_indices' → logprob: -4.188894748687744
    6. '_' → logprob: -4.188894748687744
    7. '_IDX' → logprob: -4.688894748687744
    8. '_INDEX' → logprob: -4.813894748687744
    9. '_edge' → logprob: -4.938894748687744
    10. '_edges' → logprob: -4.938894748687744

Token 255: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04438312351703644
    2. ' {}' → logprob: -3.2943830490112305
    3. 'dict' → logprob: -5.2943830490112305
    4. ' dict' → logprob: -7.1693830490112305
    5. '{' → logprob: -7.6693830490112305
    6. ' {' → logprob: -9.66938304901123
    7. '{}
' → logprob: -14.79438304901123
    8. '{}\' → logprob: -15.04438304901123
    9. '={}' → logprob: -15.04438304901123
    10. ' ' → logprob: -15.29438304901123

Token 256: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23950505256652832
    2. '(' → logprob: -2.4895050525665283
    3. '((' → logprob: -2.7395050525665283
    4. '([(' → logprob: -3.4895050525665283
    5. '(zip' → logprob: -3.4895050525665283
    6. '(((' → logprob: -7.114504814147949
    7. '(en' → logprob: -7.239504814147949
    8. '({' → logprob: -7.239504814147949
    9. '(
' → logprob: -7.614504814147949
    10. '{' → logprob: -7.739504814147949

Token 257: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.584861744660884e-05
    2. ' for' → logprob: -10.125045776367188
    3. 'i' → logprob: -12.375045776367188
    4. 'idx' → logprob: -14.125045776367188
    5. '```' → logprob: -15.375045776367188
    6. 'index' → logprob: -15.875045776367188
    7. '	for' → logprob: -16.125045776367188
    8. 'counter' → logprob: -16.875045776367188
    9. '#' → logprob: -17.125045776367188
    10. 'edge' → logprob: -17.500045776367188

Token 258: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36023208498954773
    2. 'i' → logprob: -1.7352321147918701
    3. ' edge' → logprob: -2.98523211479187
    4. ' e' → logprob: -2.98523211479187
    5. 'e' → logprob: -4.360231876373291
    6. 'edge' → logprob: -5.735231876373291
    7. ' idx' → logprob: -5.985231876373291
    8. ' x' → logprob: -7.110231876373291
    9. 'x' → logprob: -7.110231876373291
    10. ' (' → logprob: -7.485231876373291

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03410826623439789
    2. 'in' → logprob: -3.4091081619262695
    3. ' ' → logprob: -8.03410816192627
    4. ',' → logprob: -9.03410816192627
    5. ' i' → logprob: -11.78410816192627
    6. ' ,' → logprob: -12.78410816192627
    7. 'n' → logprob: -13.65910816192627
    8. 'range' → logprob: -13.78410816192627
    9. '	in' → logprob: -14.03410816192627
    10. '  ' → logprob: -14.28410816192627

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0336541123688221
    2. ' range' → logprob: -3.40865421295166
    3. 'EDGE' → logprob: -13.28365421295166
    4. 'edge' → logprob: -13.40865421295166
    5. '	range' → logprob: -14.15865421295166
    6. ' EDGE' → logprob: -14.15865421295166
    7. 'rang' → logprob: -14.28365421295166
    8. ' ' → logprob: -14.40865421295166
    9. 'r' → logprob: -14.53365421295166
    10. '(range' → logprob: -14.53365421295166

Token 261: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -3.452426608419046e-05
    2. '(' → logprob: -10.37503433227539
    3. ' (' → logprob: -13.50003433227539
    4. 'M' → logprob: -13.50003433227539
    5. ' M' → logprob: -15.25003433227539
    6. '(
' → logprob: -16.12503433227539
    7. '(m' → logprob: -17.37503433227539
    8. '(len' → logprob: -17.75003433227539
    9. '(N' → logprob: -18.75003433227539
    10. '	M' → logprob: -18.75003433227539

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.061395421624183655
    2. '):
' → logprob: -2.9363954067230225
    3. ')' → logprob: -5.061395645141602
    4. ' ):' → logprob: -9.311395645141602
    5. '):
' → logprob: -10.436395645141602
    6. ':' → logprob: -10.561395645141602
    7. ' ):
' → logprob: -12.811395645141602
    8. ' )' → logprob: -13.311395645141602
    9. '):

' → logprob: -13.811395645141602
    10. ',' → logprob: -13.936395645141602

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14746934175491333
    2. ' D' → logprob: -2.0224692821502686
    3. 'D' → logprob: -6.397469520568848
    4. '   ' → logprob: -7.647469520568848
    5. '	D' → logprob: -7.647469520568848
    6. '    
' → logprob: -8.147469520568848
    7. ' ' → logprob: -8.272469520568848
    8. ' ' → logprob: -8.772469520568848
    9. ' Dice' → logprob: -8.897469520568848
    10. ' dice' → logprob: -8.897469520568848

Token 264: ' #' (ID: 1069)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.003357728011906147
    2. ' D' → logprob: -6.378357887268066
    3. '   ' → logprob: -7.003357887268066
    4. 'edge' → logprob: -7.753357887268066
    5. 'dice' → logprob: -9.378357887268066
    6. 'key' → logprob: -9.378357887268066
    7. 'a' → logprob: -10.253357887268066
    8. 'u' → logprob: -10.503357887268066
    9. 'x' → logprob: -10.753357887268066
    10. 'e' → logprob: -11.253357887268066

Token 265: ' La' (ID: 3038)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.022121477872133255
    2. 'edge' → logprob: -4.147121429443359
    3. ' D' → logprob: -5.772121429443359
    4. 'key' → logprob: -6.647121429443359
    5. 'dice' → logprob: -7.397121429443359
    6. 'u' → logprob: -8.39712142944336
    7. '   ' → logprob: -8.52212142944336
    8. ' edge' → logprob: -8.52212142944336
    9. ' key' → logprob: -9.14712142944336
    10. 'x' → logprob: -9.64712142944336

Token 266: ' clé' (ID: 83188)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2100546658039093
    2. 'D' → logprob: -1.835054636001587
    3. 'EDGE' → logprob: -4.835054874420166
    4. 'key' → logprob: -4.960054874420166
    5. ' edge' → logprob: -5.210054874420166
    6. 'e' → logprob: -5.835054874420166
    7. ' D' → logprob: -5.960054874420166
    8. 'ar' → logprob: -6.460054874420166
    9. ' key' → logprob: -6.960054874420166
    10. 'dice' → logprob: -8.585054397583008

Token 267: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06594312936067581
    2. '=' → logprob: -2.8159432411193848
    3. '=edge' → logprob: -5.690943241119385
    4. 'EDGE' → logprob: -8.690942764282227
    5. ' =
' → logprob: -9.190942764282227
    6. ',' → logprob: -9.440942764282227
    7. ' EDGE' → logprob: -9.940942764282227
    8. '[' → logprob: -9.940942764282227
    9. ')' → logprob: -10.440942764282227
    10. 'edge' → logprob: -11.315942764282227

Token 268: ' l' (ID: 305)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.25231894850730896
    2. ' EDGE' → logprob: -1.5023189783096313
    3. '   ' → logprob: -9.2523193359375
    4. '_EDGE' → logprob: -9.5023193359375
    5. 'edge' → logprob: -9.6273193359375
    6. ' edge' → logprob: -10.0023193359375
    7. 'Edge' → logprob: -10.3773193359375
    8. 'ED' → logprob: -11.1273193359375
    9. ' Edge' → logprob: -11.5648193359375
    10. '<Edge' → logprob: -11.8148193359375

Token 269: ''ar' (ID: 54307)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.16063231229782104
    2. ' EDGE' → logprob: -1.9106323719024658
    3. '_EDGE' → logprob: -8.910632133483887
    4. '   ' → logprob: -9.785632133483887
    5. 'edge' → logprob: -9.910632133483887
    6. ' tuple' → logprob: -10.285632133483887
    7. 'tuple' → logprob: -10.410632133483887
    8. 'ED' → logprob: -10.535632133483887
    9. ' edge' → logprob: -11.035632133483887
    10. 'Edge' → logprob: -11.285632133483887

Token 270: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.07319299876689911
    2. 'te' → logprob: -3.573193073272705
    3. 'ôte' → logprob: -4.448193073272705
    4. 'c' → logprob: -5.448193073272705
    5. 'ge' → logprob: -5.573193073272705
    6. '^' → logprob: -5.823193073272705
    7. 'ce' → logprob: -6.323193073272705
    8. 'Ê' → logprob: -6.323193073272705
    9. 'e' → logprob: -6.323193073272705
    10. '\xc8' → logprob: -6.573193073272705

Token 271: ' elle' (ID: 11451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47621941566467285
    2. 'EDGE' → logprob: -1.3512194156646729
    3. '=' → logprob: -2.726219415664673
    4. ' EDGE' → logprob: -3.601219415664673
    5. '   ' → logprob: -5.226219177246094
    6. ',' → logprob: -5.351219177246094
    7. ':' → logprob: -5.351219177246094
    8. '=edge' → logprob: -5.476219177246094
    9. '[' → logprob: -5.851219177246094
    10. '_EDGE' → logprob: -6.226219177246094

Token 272: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.40040427446365356
    2. 'm' → logprob: -2.525404214859009
    3. 'self' → logprob: -2.650404214859009
    4. 'EDGE' → logprob: -2.900404214859009
    5. ':' → logprob: -3.025404214859009
    6. '[' → logprob: -4.150404453277588
    7. '=edge' → logprob: -4.150404453277588
    8. '   ' → logprob: -4.275404453277588
    9. '#' → logprob: -5.775404453277588
    10. ']' → logprob: -6.025404453277588

Token 273: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45057618618011475
    2. '   ' → logprob: -1.5755761861801147
    3. ' :' → logprob: -2.2005763053894043
    4. ':
' → logprob: -3.5755763053894043
    5. ' =' → logprob: -5.200576305389404
    6. ',' → logprob: -5.450576305389404
    7. ' :
' → logprob: -5.825576305389404
    8. '):' → logprob: -6.825576305389404
    9. 'D' → logprob: -7.575576305389404
    10. ' D' → logprob: -7.825576305389404

Token 274: 'tuple' (ID: 52834)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.002029634779319167
    2. ' EDGE' → logprob: -6.3770294189453125
    3. ')' → logprob: -8.502029418945312
    4. '   ' → logprob: -10.002029418945312
    5. 'edge' → logprob: -10.627029418945312
    6. '_EDGE' → logprob: -10.627029418945312
    7. '),' → logprob: -11.877029418945312
    8. 'ED' → logprob: -12.002029418945312
    9. 'Edge' → logprob: -12.252029418945312
    10. '<Edge' → logprob: -13.502029418945312

Token 275: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6774563789367676
    2. '(' → logprob: -1.9274563789367676
    3. '),' → logprob: -1.9274563789367676
    4. ')
' → logprob: -2.8024563789367676
    5. '   ' → logprob: -3.0524563789367676
    6. ',' → logprob: -3.6774563789367676
    7. 'EDGE' → logprob: -3.9274563789367676
    8. ' )' → logprob: -4.302456378936768
    9. '[' → logprob: -4.552456378936768
    10. ' )
' → logprob: -5.677456378936768

Token 276: ' deux' (ID: 10301)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.629123866558075
    2. 'de' → logprob: -1.6291239261627197
    3. '2' → logprob: -1.7541239261627197
    4. ' deux' → logprob: -3.7541239261627197
    5. 'two' → logprob: -4.504123687744141
    6. 'int' → logprob: -4.629123687744141
    7. 'l' → logprob: -4.629123687744141
    8. 'DE' → logprob: -4.754123687744141
    9. 'sorted' → logprob: -5.004123687744141
    10. 'ints' → logprob: -5.254123687744141

Token 277: ' ent' (ID: 1121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.231651172041893
    2. 'ent' → logprob: -1.6066511869430542
    3. ' ent' → logprob: -6.731651306152344
    4. 'indices' → logprob: -6.981651306152344
    5. 'ints' → logprob: -7.106651306152344
    6. 'som' → logprob: -7.106651306152344
    7. 'int' → logprob: -7.731651306152344
    8. ' somm' → logprob: -8.231651306152344
    9. 'élé' → logprob: -8.481651306152344
    10. ')' → logprob: -8.481651306152344

Token 278: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.3080716346157715e-05
    2. 'ier' → logprob: -11.625022888183594
    3. 'i' → logprob: -12.375022888183594
    4. 'ières' → logprob: -12.500022888183594
    5. 't' → logprob: -13.000022888183594
    6. 'ers' → logprob: -13.250022888183594
    7. 'ires' → logprob: -14.000022888183594
    8. '   ' → logprob: -15.250022888183594
    9. 'ts' → logprob: -15.500022888183594
    10. '```' → logprob: -15.750022888183594

Token 279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3364795744419098
    2. '),' → logprob: -2.086479663848877
    3. ',' → logprob: -2.586479663848877
    4. ')
' → logprob: -3.336479663848877
    5. '):' → logprob: -3.836479663848877
    6. '   ' → logprob: -4.211479663848877
    7. '))' → logprob: -5.211479663848877
    8. ' )' → logprob: -5.836479663848877
    9. '):
' → logprob: -5.836479663848877
    10. ' ,' → logprob: -7.586479663848877

Token 280: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2563937306404114
    2. ':' → logprob: -1.6313936710357666
    3. ':
' → logprob: -4.006393909454346
    4. 'D' → logprob: -5.506393909454346
    5. ' :' → logprob: -6.006393909454346
    6. ']' → logprob: -6.881393909454346
    7. '):' → logprob: -7.131393909454346
    8. ' =' → logprob: -7.131393909454346
    9. ')' → logprob: -7.756393909454346
    10. '[' → logprob: -7.881393909454346

Token 281: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2228551208972931
    2. 'D' → logprob: -2.3478550910949707
    3. 'val' → logprob: -2.9728550910949707
    4. 'la' → logprob: -3.7228550910949707
    5. ' la' → logprob: -3.8478550910949707
    6. ' D' → logprob: -5.597855091094971
    7. 'value' → logprob: -6.847855091094971
    8. ' ' → logprob: -7.472855091094971
    9. '  ' → logprob: -7.847855091094971
    10. 'v' → logprob: -8.097855567932129

Token 282: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7181583046913147
    2. 'value' → logprob: -0.7181583046913147
    3. ' value' → logprob: -4.21815824508667
    4. 'D' → logprob: -4.96815824508667
    5. ' valeur' → logprob: -6.09315824508667
    6. ' val' → logprob: -8.093158721923828
    7. ' D' → logprob: -9.218158721923828
    8. ' ' → logprob: -9.593158721923828
    9. ' vale' → logprob: -9.843158721923828
    10. '   ' → logprob: -9.843158721923828

Token 283: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.258807510137558
    2. ' =' → logprob: -1.5088075399398804
    3. ' est' → logprob: -5.13380765914917
    4. '=i' → logprob: -7.75880765914917
    5. 'est' → logprob: -8.758807182312012
    6. '   ' → logprob: -8.758807182312012
    7. 's' → logprob: -8.883807182312012
    8. ' is' → logprob: -10.508807182312012
    9. ' i' → logprob: -11.258807182312012
    10. ' ' → logprob: -12.258807182312012

Token 284: ' son' (ID: 2391)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1269427090883255
    2. 'i' → logprob: -2.1269426345825195
    3. ' ' → logprob: -12.25194263458252
    4. '	i' → logprob: -12.37694263458252
    5. '   ' → logprob: -12.87694263458252
    6. ' ' → logprob: -13.87694263458252
    7. ' l' → logprob: -14.50194263458252
    8. 'l' → logprob: -14.50194263458252
    9. '=i' → logprob: -15.25194263458252
    10. ' ' → logprob: -16.001943588256836

Token 285: ' indice' (ID: 90848)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7471461296081543
    2. ' index' → logprob: -1.3721461296081543
    3. 'indice' → logprob: -1.7471461296081543
    4. 'i' → logprob: -2.6221461296081543
    5. ' i' → logprob: -4.247146129608154
    6. ' indice' → logprob: -4.497146129608154
    7. ' ' → logprob: -8.997146606445312
    8. ' ' → logprob: -9.872146606445312
    9. 'ind' → logprob: -10.247146606445312
    10. 'indices' → logprob: -10.497146606445312

Token 286: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0583243370056152
    2. '[' → logprob: -1.1833243370056152
    3. '   ' → logprob: -1.8083243370056152
    4. '=' → logprob: -1.9333243370056152
    5. '[i' → logprob: -3.8083243370056152
    6. ']' → logprob: -5.183324337005615
    7. ' ' → logprob: -6.683324337005615
    8. ')' → logprob: -6.933324337005615
    9. '=edge' → logprob: -7.058324337005615
    10. '=
' → logprob: -7.183324337005615

Token 287: ''appar' (ID: 195019)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2940642535686493
    2. 'e' → logprob: -2.4190642833709717
    3. ' i' → logprob: -3.1690642833709717
    4. 'éc' → logprob: -3.4190642833709717
    5. 'ex' → logprob: -3.9190642833709717
    6. ''' → logprob: -4.294064044952393
    7. ''ex' → logprob: -4.419064044952393
    8. 'é' → logprob: -4.919064044952393
    9. 'élé' → logprob: -5.544064044952393
    10. 'irection' → logprob: -5.544064044952393

Token 288: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.001515576965175569
    2. 'ence' → logprob: -6.5015153884887695
    3. 'it' → logprob: -12.25151538848877
    4. 'i' → logprob: -12.75151538848877
    5. 'a' → logprob: -13.25151538848877
    6. '```' → logprob: -13.87651538848877
    7. 'ent' → logprob: -14.37651538848877
    8. 'iti' → logprob: -14.50151538848877
    9. 'ention' → logprob: -15.25151538848877
    10. 'e' → logprob: -15.75151538848877

Token 289: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04550694301724434
    2. ')' → logprob: -4.545506954193115
    3. '[' → logprob: -4.670506954193115
    4. ']' → logprob: -4.670506954193115
    5. '[i' → logprob: -5.295506954193115
    6. 'D' → logprob: -6.045506954193115
    7. '[D' → logprob: -6.920506954193115
    8. ' ' → logprob: -7.045506954193115
    9. ',' → logprob: -7.170506954193115
    10. '    
' → logprob: -7.170506954193115

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03285525366663933
    2. ' D' → logprob: -3.782855272293091
    3. 'D' → logprob: -4.657855033874512
    4. '   ' → logprob: -10.657855033874512
    5. '```' → logprob: -11.282855033874512
    6. '	D' → logprob: -11.282855033874512
    7. '
' → logprob: -11.782855033874512
    8. '    
' → logprob: -12.407855033874512
    9. ' Dice' → logprob: -13.282855033874512
    10. '       ' → logprob: -13.657855033874512

Token 291: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.026508815586566925
    2. '   ' → logprob: -4.276508808135986
    3. ' D' → logprob: -4.401508808135986
    4. ' ' → logprob: -12.651509284973145
    5. '	D' → logprob: -13.401509284973145
    6. '  ' → logprob: -13.401509284973145
    7. 'd' → logprob: -13.901509284973145
    8. 'EDGE' → logprob: -14.276509284973145
    9. 'dice' → logprob: -14.526509284973145
    10. '    
' → logprob: -14.526509284973145

Token 292: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -2.3676733690081164e-05
    2. 'I' → logprob: -11.87502384185791
    3. '[' → logprob: -12.75002384185791
    4. 'Ice' → logprob: -13.12502384185791
    5. ' ICE' → logprob: -13.25002384185791
    6. 'ICEF' → logprob: -13.25002384185791
    7. 'IC' → logprob: -13.50002384185791
    8. '
' → logprob: -13.87502384185791
    9. '[I' → logprob: -14.00002384185791
    10. 'OICE' → logprob: -14.50002384185791

Token 293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.184812031686306e-05
    2. '[E' → logprob: -10.125082015991211
    3. ' [' → logprob: -11.125082015991211
    4. '[i' → logprob: -12.125082015991211
    5. '[(' → logprob: -12.125082015991211
    6. '[
' → logprob: -12.750082015991211
    7. '[...]' → logprob: -13.000082015991211
    8. '[D' → logprob: -13.250082015991211
    9. '[I' → logprob: -14.000082015991211
    10. '=' → logprob: -14.125082015991211

Token 294: 'EDGE' (ID: 185822)
  Prédit: 'EDGE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.00427059642970562
    2. ' EDGE' → logprob: -5.504270553588867
    3. 'ED' → logprob: -9.879270553588867
    4. '(' → logprob: -10.254270553588867
    5. '_EDGE' → logprob: -10.254270553588867
    6. ')' → logprob: -10.879270553588867
    7. 'edge' → logprob: -11.004270553588867
    8. 'Edge' → logprob: -11.879270553588867
    9. ']' → logprob: -12.004270553588867
    10. '   ' → logprob: -12.004270553588867

Token 295: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003918271977454424
    2. '[' → logprob: -8.000391960144043
    3. ' [' → logprob: -10.500391960144043
    4. ']' → logprob: -10.875391960144043
    5. '[
' → logprob: -12.625391960144043
    6. '[I' → logprob: -13.250391960144043
    7. '[M' → logprob: -13.625391960144043
    8. '
' → logprob: -14.000391960144043
    9. '[E' → logprob: -14.250391960144043
    10. 'i' → logprob: -14.750391960144043

Token 296: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037694359198212624
    2. ']=' → logprob: -6.003769397735596
    3. ')]' → logprob: -7.378769397735596
    4. ']]' → logprob: -7.503769397735596
    5. ' ]' → logprob: -10.003769874572754
    6. ']]=' → logprob: -10.503769874572754
    7. '[i' → logprob: -10.878769874572754
    8. '])' → logprob: -11.753769874572754
    9. ']=(' → logprob: -12.628769874572754
    10. '[' → logprob: -12.878769874572754

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145660638809204
    2. ' =' → logprob: -1.7014565467834473
    3. '=i' → logprob: -10.076457023620605
    4. ' =
' → logprob: -14.951457023620605
    5. '=
' → logprob: -15.076457023620605
    6. '=

' → logprob: -15.576457023620605
    7. ' ' → logprob: -15.701457023620605
    8. '＝' → logprob: -16.70145606994629
    9. '=index' → logprob: -17.20145606994629
    10. ' ' → logprob: -17.45145606994629

Token 298: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519293427467346
    2. ' i' → logprob: -1.5019292831420898
    3. '	i' → logprob: -15.12692928314209
    4. ' ' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.626930236816406
    6. '   ' → logprob: -19.251930236816406
    7. ' 
' → logprob: -20.751930236816406
    8. '_i' → logprob: -21.251930236816406
    9. '[i' → logprob: -21.251930236816406
    10. '(i' → logprob: -21.376930236816406

Token 299: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5938261151313782
    2. 'Q' → logprob: -1.7188260555267334
    3. 'for' → logprob: -2.2188260555267334
    4. 'answer' → logprob: -2.9688260555267334
    5. 'print' → logprob: -4.5938262939453125
    6. 'color' → logprob: -4.7188262939453125
    7. 'graph' → logprob: -4.9688262939453125
    8. 'result' → logprob: -5.0938262939453125
    9. 'edges' → logprob: -5.3438262939453125
    10. 'visited' → logprob: -5.5938262939453125

Token 301: ' Construction' (ID: 31452)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8407881259918213
    2. 'for' → logprob: -2.2157881259918213
    3. 'result' → logprob: -2.7157881259918213
    4. 'answer' → logprob: -2.7157881259918213
    5. 'visited' → logprob: -2.9657881259918213
    6. 'res' → logprob: -3.3407881259918213
    7. '#' → logprob: -3.3407881259918213
    8. 'def' → logprob: -3.3407881259918213
    9. 'color' → logprob: -3.8407881259918213
    10. 'ans' → logprob: -4.215787887573242

Token 302: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4143016338348389
    2. 'graph' → logprob: -1.5393016338348389
    3. 'adj' → logprob: -1.5393016338348389
    4. 'g' → logprob: -2.039301633834839
    5. 'G' → logprob: -2.664301633834839
    6. 'of' → logprob: -3.164301633834839
    7. '#' → logprob: -3.164301633834839
    8. ' of' → logprob: -3.789301633834839
    9. ' d' → logprob: -5.039301872253418
    10. 'de' → logprob: -5.664301872253418

Token 303: ' la' (ID: 557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1729044914245605
    2. 'l' → logprob: -1.7979044914245605
    3. 'adj' → logprob: -1.9229044914245605
    4. ' un' → logprob: -2.1729044914245605
    5. 'un' → logprob: -2.6729044914245605
    6. 'la' → logprob: -3.6729044914245605
    7. '[' → logprob: -3.7979044914245605
    8. '{' → logprob: -4.0479044914245605
    9. 'graph' → logprob: -4.0479044914245605
    10. 'une' → logprob: -4.0479044914245605

Token 304: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.24405060708522797
    2. 'adj' → logprob: -2.1190505027770996
    3. 'gr' → logprob: -3.3690505027770996
    4. 'liste' → logprob: -3.6190505027770996
    5. ' graph' → logprob: -4.7440505027771
    6. ' adjacency' → logprob: -4.8690505027771
    7. '#' → logprob: -5.4940505027771
    8. 'from' → logprob: -5.6190505027771
    9. 'list' → logprob: -6.1190505027771
    10. 'default' → logprob: -6.1190505027771

Token 305: ' d' (ID: 272)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5441151261329651
    2. 'G' → logprob: -1.5441150665283203
    3. 'AD' → logprob: -2.9191150665283203
    4. 'graph' → logprob: -3.1691150665283203
    5. 'Adj' → logprob: -4.04411506652832
    6. 'GR' → logprob: -4.66911506652832
    7. 'neighbors' → logprob: -5.04411506652832
    8. 'g' → logprob: -5.29411506652832
    9. 'res' → logprob: -5.41911506652832
    10. 'GRAPH' → logprob: -5.41911506652832

Token 306: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.21851041913032532
    2. ' adjacency' → logprob: -1.718510389328003
    3. ' adj' → logprob: -5.093510627746582
    4. 'ad' → logprob: -6.093510627746582
    5. ' voisins' → logprob: -6.093510627746582
    6. 'vo' → logprob: -7.343510627746582
    7. ' ad' → logprob: -7.343510627746582
    8. '[]' → logprob: -7.468510627746582
    9. '_ad' → logprob: -7.468510627746582
    10. 'l' → logprob: -7.468510627746582

Token 307: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5762176513671875
    2. 'jac' → logprob: -0.8262176513671875
    3. 'ja' → logprob: -8.951217651367188
    4. 'J' → logprob: -10.451217651367188
    5. 'js' → logprob: -10.451217651367188
    6. '[j' → logprob: -10.701217651367188
    7. 'jec' → logprob: -10.826217651367188
    8. '_j' → logprob: -11.576217651367188
    9. 'jf' → logprob: -12.451217651367188
    10. '#' → logprob: -12.451217651367188

Token 308: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.09464441984891891
    2. 'ac' → logprob: -3.21964430809021
    3. 'ences' → logprob: -4.344644546508789
    4. 'es' → logprob: -4.594644546508789
    5. '#' → logprob: -4.969644546508789
    6. 'escence' → logprob: -5.094644546508789
    7. 'acency' → logprob: -5.094644546508789
    8. 'e' → logprob: -5.469644546508789
    9. 'ency' → logprob: -7.594644546508789
    10. '```' → logprob: -7.844644546508789

Token 309: ' pour' (ID: 1930)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.20615382492542267
    2. 'adj' → logprob: -2.0811538696289062
    3. 'graph' → logprob: -3.0811538696289062
    4. 'E' → logprob: -5.581153869628906
    5. 'GRAPH' → logprob: -6.206153869628906
    6. 'GR' → logprob: -6.331153869628906
    7. 'g' → logprob: -6.456153869628906
    8. 'Adj' → logprob: -6.456153869628906
    9. 'AD' → logprob: -6.831153869628906
    10. 'Graph' → logprob: -7.081153869628906

Token 310: ' représ' (ID: 31534)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.12409055978059769
    2. 'N' → logprob: -3.4990906715393066
    3. '_' → logprob: -3.8740906715393066
    4. '[]' → logprob: -4.499090671539307
    5. 'le' → logprob: -4.499090671539307
    6. ' graph' → logprob: -5.124090671539307
    7. 'graph' → logprob: -5.374090671539307
    8. ' [[]' → logprob: -5.374090671539307
    9. 'G' → logprob: -5.499090671539307
    10. ' la' → logprob: -5.749090671539307

Token 311: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.002943232422694564
    2. 'ent' → logprob: -6.87794303894043
    3. 'er' → logprob: -7.00294303894043
    4. 'ater' → logprob: -7.62794303894043
    5. 'entation' → logprob: -8.37794303894043
    6. '#' → logprob: -9.75294303894043
    7. 'anter' → logprob: -10.00294303894043
    8. 'ENTER' → logprob: -10.12794303894043
    9. 'éter' → logprob: -10.50294303894043
    10. 'ente' → logprob: -11.00294303894043

Token 312: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0789424479007721
    2. 'le' → logprob: -2.5789425373077393
    3. 'graph' → logprob: -10.70394229888916
    4. ' graph' → logprob: -11.32894229888916
    5. '#' → logprob: -12.70394229888916
    6. ' les' → logprob: -12.95394229888916
    7. '_le' → logprob: -13.20394229888916
    8. 'g' → logprob: -13.32894229888916
    9. ' un' → logprob: -13.57894229888916
    10. 'l' → logprob: -13.82894229888916

Token 313: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.27223607897758484
    2. 'graph' → logprob: -2.0222361087799072
    3. ' grap' → logprob: -2.2722361087799072
    4. ' graph' → logprob: -5.897235870361328
    5. '#' → logprob: -9.772235870361328
    6. '
' → logprob: -10.522235870361328
    7. '```' → logprob: -10.772235870361328
    8. 'G' → logprob: -11.147235870361328
    9. 'gra' → logprob: -12.522235870361328
    10. 'g' → logprob: -13.147235870361328

Token 314: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.4963063597679138
    2. 'he' → logprob: -1.6213064193725586
    3. 'h' → logprob: -2.2463064193725586
    4. 'phe' → logprob: -3.7463064193725586
    5. 'raph' → logprob: -3.9963064193725586
    6. '[' → logprob: -4.746306419372559
    7. '#' → logprob: -4.871306419372559
    8. '[]' → logprob: -5.121306419372559
    9. 'ph' → logprob: -5.371306419372559
    10. 'f' → logprob: -5.996306419372559

Token 315: '.' (ID: 13)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.18185842037200928
    2. 'adj' → logprob: -2.556858539581299
    3. 'graph' → logprob: -2.681858539581299
    4. 'GR' → logprob: -5.556858539581299
    5. 'GRAPH' → logprob: -5.556858539581299
    6. 'E' → logprob: -5.931858539581299
    7. 'g' → logprob: -6.181858539581299
    8. 'Adj' → logprob: -6.556858539581299
    9. ' graph' → logprob: -6.681858539581299
    10. 'Graph' → logprob: -6.806858539581299

Token 316: ' 
' (ID: 793)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.26450732350349426
    2. 'graph' → logprob: -2.139507293701172
    3. 'adj' → logprob: -2.389507293701172
    4. 'GRAPH' → logprob: -4.889507293701172
    5. 'GR' → logprob: -5.639507293701172
    6. 'E' → logprob: -5.889507293701172
    7. 'g' → logprob: -6.139507293701172
    8. 'Graph' → logprob: -6.264507293701172
    9. 'Adj' → logprob: -6.639507293701172
    10. 'AD' → logprob: -7.139507293701172

Token 317: '#' (ID: 2)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3951953053474426
    2. 'graph' → logprob: -1.8951952457427979
    3. 'adj' → logprob: -1.8951952457427979
    4. 'GRAPH' → logprob: -4.770195484161377
    5. 'GR' → logprob: -5.770195484161377
    6. 'Adj' → logprob: -6.020195484161377
    7. 'g' → logprob: -6.020195484161377
    8. 'E' → logprob: -6.020195484161377
    9. 'Graph' → logprob: -6.145195484161377
    10. 'AD' → logprob: -6.520195484161377

Token 318: ' E' (ID: 457)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.4131191670894623
    2. 'graph' → logprob: -1.7881191968917847
    3. 'adj' → logprob: -1.9131191968917847
    4. 'GRAPH' → logprob: -5.038119316101074
    5. 'g' → logprob: -5.663119316101074
    6. 'E' → logprob: -5.663119316101074
    7. 'GR' → logprob: -5.913119316101074
    8. 'Graph' → logprob: -5.913119316101074
    9. 'Adj' → logprob: -6.413119316101074
    10. 'gr' → logprob: -7.163119316101074

Token 319: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008703447878360748
    2. '=' → logprob: -5.133703231811523
    3. 'E' → logprob: -7.258703231811523
    4. '=[' → logprob: -7.258703231811523
    5. '=[]' → logprob: -7.758703231811523
    6. 'D' → logprob: -8.133703231811523
    7. 'd' → logprob: -9.133703231811523
    8. '=[]
' → logprob: -9.133703231811523
    9. 'G' → logprob: -9.633703231811523
    10. 'adj' → logprob: -9.758703231811523

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004243181552737951
    2. ']=' → logprob: -6.25424337387085
    3. ' =' → logprob: -6.87924337387085
    4. '=' → logprob: -7.50424337387085
    5. ' ]' → logprob: -7.50424337387085
    6. 'd' → logprob: -9.629242897033691
    7. '=[]' → logprob: -10.879242897033691
    8. '[]' → logprob: -11.129242897033691
    9. '[' → logprob: -11.254242897033691
    10. '][]' → logprob: -11.879242897033691

Token 321: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20163299143314362
    2. ' =' → logprob: -1.7016329765319824
    3. '=[]' → logprob: -8.70163345336914
    4. '=[' → logprob: -10.20163345336914
    5. '=[]
' → logprob: -11.57663345336914
    6. '=
' → logprob: -13.57663345336914
    7. ' =[' → logprob: -13.70163345336914
    8. '=[[' → logprob: -13.95163345336914
    9. '＝' → logprob: -14.57663345336914
    10. ']' → logprob: -14.70163345336914

Token 322: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12717147171497345
    2. 'ains' → logprob: -2.627171516418457
    3. 'ient' → logprob: -3.377171516418457
    4. ' =' → logprob: -4.877171516418457
    5. 'ain' → logprob: -6.627171516418457
    6. '=[' → logprob: -6.752171516418457
    7. 'ent' → logprob: -7.877171516418457
    8. 't' → logprob: -7.877171516418457
    9. '=[]' → logprob: -7.877171516418457
    10. '[' → logprob: -8.002171516418457

Token 323: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2790743410587311
    2. 'n' → logprob: -2.5290744304656982
    3. 'nt' → logprob: -3.2790744304656982
    4. 'nent' → logprob: -3.2790744304656982
    5. 'nds' → logprob: -4.029074192047119
    6. 't' → logprob: -4.529074192047119
    7. 'nd' → logprob: -5.029074192047119
    8. 'ents' → logprob: -5.029074192047119
    9. 'nes' → logprob: -5.154074192047119
    10. 'nts' → logprob: -5.279074192047119

Token 324: ' la' (ID: 557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2802588641643524
    2. ' les' → logprob: -2.030258893966675
    3. 'les' → logprob: -3.030258893966675
    4. ' la' → logprob: -3.155258893966675
    5. ' []' → logprob: -4.405258655548096
    6. 'la' → logprob: -5.280258655548096
    7. 'une' → logprob: -7.530258655548096
    8. ' une' → logprob: -7.655258655548096
    9. '=[]' → logprob: -7.655258655548096
    10. '[' → logprob: -7.655258655548096

Token 325: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005040794610977173
    2. '[' → logprob: -5.755040645599365
    3. '[]
' → logprob: -7.630040645599365
    4. ' [[]' → logprob: -7.630040645599365
    5. ' []' → logprob: -7.755040645599365
    6. 'neighbors' → logprob: -8.255041122436523
    7. '[][]' → logprob: -9.630041122436523
    8. '[:]' → logprob: -10.505041122436523
    9. '[
' → logprob: -10.630041122436523
    10. ' adjacency' → logprob: -11.130041122436523

Token 326: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8118974566459656
    2. ' =' → logprob: -0.9368974566459656
    3. ' of' → logprob: -2.6868975162506104
    4. '[]' → logprob: -3.3118975162506104
    5. ' de' → logprob: -4.061897277832031
    6. 'des' → logprob: -4.561897277832031
    7. 'E' → logprob: -4.686897277832031
    8. '=' → logprob: -5.061897277832031
    9. 'of' → logprob: -5.186897277832031
    10. 'adj' → logprob: -6.436897277832031

Token 327: ' somm' (ID: 44830)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.10767820477485657
    2. 'vo' → logprob: -2.732678174972534
    3. '[]' → logprob: -4.107678413391113
    4. ' voisin' → logprob: -4.357678413391113
    5. 'adj' → logprob: -6.107678413391113
    6. '[' → logprob: -6.357678413391113
    7. ' vois' → logprob: -6.732678413391113
    8. 'neighbors' → logprob: -7.107678413391113
    9. ' []' → logprob: -7.232678413391113
    10. ' neighbors' → logprob: -8.232678413391113

Token 328: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.308517187833786
    2. 'ètes' → logprob: -1.6835172176361084
    3. 'êtes' → logprob: -3.3085172176361084
    4. 'etes' → logprob: -3.9335172176361084
    5. 'êts' → logprob: -5.183516979217529
    6. 'et' → logprob: -5.683516979217529
    7. 'è' → logprob: -6.058516979217529
    8. 'ites' → logprob: -6.433516979217529
    9. 'ices' → logprob: -6.558516979217529
    10. 'ètres' → logprob: -6.808516979217529

Token 329: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6837149858474731
    2. ' adj' → logprob: -1.5587149858474731
    3. ' voisins' → logprob: -2.0587148666381836
    4. 'vo' → logprob: -2.9337148666381836
    5. '[]' → logprob: -3.4337148666381836
    6. ' vois' → logprob: -4.058714866638184
    7. ' vo' → logprob: -4.558714866638184
    8. ' adjacent' → logprob: -4.683714866638184
    9. ' =' → logprob: -4.808714866638184
    10. '_adj' → logprob: -5.183714866638184

Token 330: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0022398277651518583
    2. 'acent' → logprob: -6.87723970413208
    3. '[i' → logprob: -8.377240180969238
    4. 'a' → logprob: -8.627240180969238
    5. 'c' → logprob: -8.752240180969238
    6. 'oints' → logprob: -9.002240180969238
    7. 'ents' → logprob: -9.127240180969238
    8. 'ace' → logprob: -9.752240180969238
    9. '##' → logprob: -10.252240180969238
    10. '[' → logprob: -10.252240180969238

Token 331: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.004099296871572733
    2. 'ent' → logprob: -6.004099369049072
    3. 'entes' → logprob: -6.879099369049072
    4. 'cent' → logprob: -8.879098892211914
    5. 'c' → logprob: -9.254098892211914
    6. 'es' → logprob: -9.379098892211914
    7. '#' → logprob: -9.754098892211914
    8. 'centes' → logprob: -10.254098892211914
    9. 's' → logprob: -10.629098892211914
    10. 't' → logprob: -11.254098892211914

Token 332: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025038016960024834
    2. '=' → logprob: -4.025038242340088
    3. 'E' → logprob: -5.150038242340088
    4. 's' → logprob: -8.15003776550293
    5. ',' → logprob: -8.90003776550293
    6. '[]' → logprob: -9.40003776550293
    7. '(E' → logprob: -9.52503776550293
    8. 'aux' → logprob: -9.77503776550293
    9. 'au' → logprob: -9.77503776550293
    10. ']' → logprob: -10.15003776550293

Token 333: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3873664140701294
    2. ' i' → logprob: -1.1373664140701294
    3. ' sommet' → logprob: -7.63736629486084
    4. 'som' → logprob: -12.01236629486084
    5. 's' → logprob: -13.13736629486084
    6. ' som' → logprob: -13.51236629486084
    7. '	i' → logprob: -14.01236629486084
    8. '[i' → logprob: -14.01236629486084
    9. ' ' → logprob: -14.13736629486084
    10. ' ' → logprob: -14.51236629486084

Token 334: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1065313816070557
    2. 's' → logprob: -1.2315313816070557
    3. '[i' → logprob: -1.2315313816070557
    4. ' i' → logprob: -3.6065313816070557
    5. 'E' → logprob: -3.7315313816070557
    6. ' E' → logprob: -5.106531143188477
    7. ',' → logprob: -5.356531143188477
    8. '[]' → logprob: -5.606531143188477
    9. 'es' → logprob: -5.731531143188477
    10. '=' → logprob: -6.231531143188477

Token 335: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005450631957501173
    2. '=' → logprob: -5.75545072555542
    3. 'E' → logprob: -6.13045072555542
    4. 's' → logprob: -9.880450248718262
    5. ',' → logprob: -11.505450248718262
    6. ' =
' → logprob: -11.755450248718262
    7. ' E' → logprob: -11.880450248718262
    8. '=[' → logprob: -12.130450248718262
    9. ':' → logprob: -13.755450248718262
    10. '.' → logprob: -13.880450248718262

Token 336: '#' (ID: 2)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -2.3557529857498594e-05
    2. '
' → logprob: -11.25002384185791
    3. ' E' → logprob: -11.50002384185791
    4. '

' → logprob: -15.25002384185791
    5. '```' → logprob: -16.500022888183594
    6. '
' → logprob: -17.250022888183594
    7. '\n' → logprob: -17.875022888183594
    8. '#' → logprob: -18.125022888183594
    9. ' 
' → logprob: -18.375022888183594
    10. '\' → logprob: -19.625022888183594

Token 337: ' On' (ID: 2160)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -8.061054359131958e-06
    2. ' E' → logprob: -11.875007629394531
    3. '```' → logprob: -14.500007629394531
    4. '
' → logprob: -14.750007629394531
    5. '#' → logprob: -16.25000762939453
    6. '

' → logprob: -17.50000762939453
    7. ' 
' → logprob: -17.75000762939453
    8. '``' → logprob: -17.87500762939453
    9. '\n' → logprob: -18.37500762939453
    10. '\' → logprob: -18.75000762939453

Token 338: ' utilise' (ID: 70283)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4305676221847534
    2. '=' → logprob: -1.1805676221847534
    3. 'E' → logprob: -3.305567741394043
    4. ' E' → logprob: -5.555567741394043
    5. 'n' → logprob: -6.430567741394043
    6. 'for' → logprob: -8.930567741394043
    7. '_' → logprob: -9.930567741394043
    8. ' initialize' → logprob: -10.055567741394043
    9. ' ' → logprob: -10.180567741394043
    10. ',' → logprob: -10.305567741394043

Token 339: ' N' (ID: 478)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059428486973047256
    2. ' [[]' → logprob: -3.4344284534454346
    3. '[E' → logprob: -3.8094284534454346
    4. 'E' → logprob: -6.059428691864014
    5. '[N' → logprob: -7.809428691864014
    6. '[]' → logprob: -7.809428691864014
    7. ' [' → logprob: -10.684428215026855
    8. '[V' → logprob: -11.059428215026855
    9. '[i' → logprob: -11.309428215026855
    10. '[]
' → logprob: -11.434428215026855

Token 340: '+' (ID: 10)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5213770270347595
    2. '+' → logprob: -1.3963770866394043
    3. ' =' → logprob: -2.3963770866394043
    4. ' E' → logprob: -3.8963770866394043
    5. '=' → logprob: -4.146377086639404
    6. '
' → logprob: -4.771377086639404
    7. '[E' → logprob: -4.896377086639404
    8. ' +' → logprob: -5.771377086639404
    9. '=[' → logprob: -6.021377086639404
    10. ' [' → logprob: -6.021377086639404

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.875022888183594
    3. '(' → logprob: -12.875022888183594
    4. '=' → logprob: -15.000022888183594
    5. '2' → logprob: -15.000022888183594
    6. '
' → logprob: -15.125022888183594
    7. '+' → logprob: -16.375022888183594
    8. 'N' → logprob: -16.500022888183594
    9. '   ' → logprob: -17.250022888183594
    10. '(N' → logprob: -17.375022888183594

Token 342: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6066118478775024
    2. 'E' → logprob: -1.2316118478775024
    3. ')' → logprob: -2.231611728668213
    4. '
' → logprob: -4.106611728668213
    5. ']
' → logprob: -4.106611728668213
    6. ' E' → logprob: -5.106611728668213
    7. ')
' → logprob: -5.231611728668213
    8. ',' → logprob: -5.981611728668213
    9. ' ]' → logprob: -6.356611728668213
    10. '[E' → logprob: -6.481611728668213

Token 343: ' que' (ID: 661)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19242095947265625
    2. 'range' → logprob: -1.8174209594726562
    3. '_' → logprob: -4.442420959472656
    4. '[' → logprob: -8.317420959472656
    5. '_range' → logprob: -9.192420959472656
    6. 'E' → logprob: -9.317420959472656
    7. '[]' → logprob: -9.817420959472656
    8. ' permettre' → logprob: -10.317420959472656
    9. ' avoir' → logprob: -10.567420959472656
    10. '...' → logprob: -10.692420959472656

Token 344: ' les' (ID: 1341)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.2341790795326233
    2. 'E' → logprob: -1.9841790199279785
    3. ' range' → logprob: -2.8591790199279785
    4. 'range' → logprob: -5.3591790199279785
    5. ' i' → logprob: -5.6091790199279785
    6. ' _' → logprob: -6.2341790199279785
    7. '_' → logprob: -6.6091790199279785
    8. ' l' → logprob: -7.3591790199279785
    9. ' la' → logprob: -7.7341790199279785
    10. ' ' → logprob: -8.359179496765137

Token 345: ' indices' (ID: 30378)
  Prédit: ' vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertices' → logprob: -1.3182528018951416
    2. 'E' → logprob: -1.4432528018951416
    3. ' E' → logprob: -2.0682528018951416
    4. ' range' → logprob: -2.1932528018951416
    5. 'vertices' → logprob: -2.5682528018951416
    6. 'indices' → logprob: -2.8182528018951416
    7. 'range' → logprob: -2.9432528018951416
    8. ' indices' → logprob: -3.0682528018951416
    9. ' nodes' → logprob: -4.0682525634765625
    10. 'nodes' → logprob: -6.3182525634765625

Token 346: ' a' (ID: 261)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0403509140014648
    2. ' soient' → logprob: -1.7903509140014648
    3. ' E' → logprob: -2.040350914001465
    4. ' range' → logprob: -2.165350914001465
    5. ' puissent' → logprob: -2.790350914001465
    6. 'range' → logprob: -2.915350914001465
    7. ' des' → logprob: -3.040350914001465
    8. 's' → logprob: -3.915350914001465
    9. 'so' → logprob: -5.040350914001465
    10. ' de' → logprob: -5.290350914001465

Token 347: 'illent' (ID: 188524)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0682454109191895
    2. '=' → logprob: -1.4432454109191895
    3. ' =' → logprob: -1.5682454109191895
    4. 'rr' → logprob: -2.4432454109191895
    5. 'rray' → logprob: -2.4432454109191895
    6. 'E' → logprob: -4.8182454109191895
    7. ' range' → logprob: -4.8182454109191895
    8. '[' → logprob: -5.0682454109191895
    9. '_' → logprob: -5.5682454109191895
    10. 'rg' → logprob: -6.0682454109191895

Token 348: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.029395341873169
    2. ' de' → logprob: -1.404395341873169
    3. 'de' → logprob: -1.654395341873169
    4. 'from' → logprob: -2.529395341873169
    5. 'jus' → logprob: -2.904395341873169
    6. ' up' → logprob: -3.779395341873169
    7. ' from' → logprob: -4.27939510345459
    8. ' jusque' → logprob: -4.27939510345459
    9. ' range' → logprob: -4.40439510345459
    10. 'range' → logprob: -5.02939510345459

Token 349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07046262174844742
    2. '1' → logprob: -3.320462703704834
    3. ' ' → logprob: -3.445462703704834
    4. ' range' → logprob: -12.445462226867676
    5. 'range' → logprob: -12.570462226867676
    6. ' N' → logprob: -13.445462226867676
    7. '```' → logprob: -14.195462226867676
    8. '   ' → logprob: -14.820462226867676
    9. 'N' → logprob: -14.945462226867676
    10. ' ' → logprob: -15.445462226867676

Token 350: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3869004249572754
    2. '1' → logprob: -1.1369004249572754
    3. ' ' → logprob: -10.511899948120117
    4. '```' → logprob: -13.886899948120117
    5. 'range' → logprob: -14.636899948120117
    6. 'N' → logprob: -14.886899948120117
    7. '   ' → logprob: -15.261899948120117
    8. '
' → logprob: -15.886899948120117
    9. '``' → logprob: -17.636899948120117
    10. '  ' → logprob: -17.886899948120117

Token 351: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.017018938437104225
    2. 'à' → logprob: -4.642018795013428
    3. ' ' → logprob: -5.642018795013428
    4. ' jusqu' → logprob: -6.517018795013428
    5. ' au' → logprob: -6.767018795013428
    6. 'au' → logprob: -8.142019271850586
    7. ' to' → logprob: -8.392019271850586
    8. ',' → logprob: -9.392019271850586
    9. ')' → logprob: -9.392019271850586
    10. ' a' → logprob: -10.017019271850586

Token 352: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006715370807796717
    2. ' N' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.881715774536133
    4. ' ' → logprob: -20.381715774536133
    5. ',' → logprob: -20.631715774536133
    6. '	N' → logprob: -20.881715774536133
    7. '(N' → logprob: -20.881715774536133
    8. '
' → logprob: -20.881715774536133
    9. '```' → logprob: -21.006715774536133
    10. ',N' → logprob: -21.131715774536133

Token 353: ' (' (ID: 350)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0009094370761886239
    2. ' E' → logprob: -7.625909328460693
    3. '
' → logprob: -7.875909328460693
    4. ',' → logprob: -10.250909805297852
    5. ',
' → logprob: -12.500909805297852
    6. ',E' → logprob: -14.500909805297852
    7. ' 
' → logprob: -14.625909805297852
    8. '

' → logprob: -15.375909805297852
    9. ' =' → logprob: -15.875909805297852
    10. ' ,' → logprob: -16.00090980529785

Token 354: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05663951858878136
    2. 'E' → logprob: -3.5566394329071045
    3. ')
' → logprob: -4.181639671325684
    4. ' )' → logprob: -5.056639671325684
    5. ']' → logprob: -5.806639671325684
    6. ' E' → logprob: -7.806639671325684
    7. 'N' → logprob: -8.056639671325684
    8. ' )
' → logprob: -8.306639671325684
    9. '])' → logprob: -8.681639671325684
    10. ' ]' → logprob: -8.806639671325684

Token 355: ''' (ID: 6)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.10890371352434158
    2. ' E' → logprob: -3.108903646469116
    3. ' =' → logprob: -3.983903646469116
    4. '=' → logprob: -4.358903884887695
    5. ')' → logprob: -4.733903884887695
    6. '_' → logprob: -4.858903884887695
    7. '#' → logprob: -5.858903884887695
    8. '+' → logprob: -5.983903884887695
    9. ' )' → logprob: -6.983903884887695
    10. ' ' → logprob: -7.233903884887695

Token 356: 'index' (ID: 2257)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03601999580860138
    2. ' N' → logprob: -3.661020040512085
    3. '+' → logprob: -5.786019802093506
    4. 'range' → logprob: -5.911019802093506
    5. ')' → logprob: -6.286019802093506
    6. ' range' → logprob: -7.661019802093506
    7. '=' → logprob: -8.161020278930664
    8. '
' → logprob: -8.536020278930664
    9. ' =' → logprob: -8.661020278930664
    10. '```' → logprob: -9.161020278930664

Token 357: ' ' (ID: 220)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.9842734932899475
    2. ' =' → logprob: -1.4842734336853027
    3. ')' → logprob: -2.2342734336853027
    4. 'ation' → logprob: -2.8592734336853027
    5. 'ing' → logprob: -3.1092734336853027
    6. 's' → logprob: -3.4842734336853027
    7. 'es' → logprob: -3.8592734336853027
    8. '=' → logprob: -3.9842734336853027
    9. 'based' → logprob: -4.109273433685303
    10. 'e' → logprob: -4.609273433685303

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03951060399413109
    2. ' ' → logprob: -4.289510726928711
    3. 'E' → logprob: -4.414510726928711
    4. ' E' → logprob: -5.414510726928711
    5. ' =' → logprob: -6.039510726928711
    6. '[' → logprob: -6.539510726928711
    7. ' range' → logprob: -6.789510726928711
    8. '=' → logprob: -7.164510726928711
    9. ' N' → logprob: -7.789510726928711
    10. '
' → logprob: -7.914510726928711

Token 359: ' ne' (ID: 453)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42217719554901123
    2. ')' → logprob: -1.1721771955490112
    3. 'E' → logprob: -4.297177314758301
    4. ' ]' → logprob: -4.922177314758301
    5. '])' → logprob: -5.922177314758301
    6. ').' → logprob: -6.047177314758301
    7. ' )' → logprob: -6.172177314758301
    8. ',' → logprob: -6.672177314758301
    9. ' =' → logprob: -6.922177314758301
    10. ' E' → logprob: -7.297177314758301

Token 360: ' sera' (ID: 15511)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.3794089555740356
    2. '#' → logprob: -1.6294089555740356
    3. 'être' → logprob: -2.129408836364746
    4. ')' → logprob: -2.379408836364746
    5. ']' → logprob: -2.629408836364746
    6. 'est' → logprob: -2.754408836364746
    7. ' is' → logprob: -3.504408836364746
    8. '=' → logprob: -4.004408836364746
    9. 'n' → logprob: -4.129408836364746
    10. ' pas' → logprob: -4.129408836364746

Token 361: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.22884492576122284
    2. ' pas' → logprob: -1.7288448810577393
    3. 'unused' → logprob: -4.478845119476318
    4. '[]' → logprob: -4.853845119476318
    5. 'used' → logprob: -6.103845119476318
    6. '=[]' → logprob: -6.853845119476318
    7. ' utilisé' → logprob: -7.228845119476318
    8. ' None' → logprob: -7.853845119476318
    9. 'vide' → logprob: -7.978845119476318
    10. 'None' → logprob: -7.978845119476318

Token 362: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5034828186035156
    2. ' utilisé' → logprob: -1.0034828186035156
    3. 'used' → logprob: -4.003482818603516
    4. ' used' → logprob: -4.878482818603516
    5. ' utilisée' → logprob: -6.378482818603516
    6. ' utilisés' → logprob: -8.128482818603516
    7. 'unused' → logprob: -8.378482818603516
    8. ' utilisées' → logprob: -8.503482818603516
    9. 'vide' → logprob: -9.128482818603516
    10. 'pas' → logprob: -9.628482818603516

Token 363: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29168662428855896
    2. ']' → logprob: -2.291686534881592
    3. ',' → logprob: -2.791686534881592
    4. 'E' → logprob: -2.916686534881592
    5. ')
' → logprob: -3.541686534881592
    6. ']
' → logprob: -6.291686534881592
    7. ',E' → logprob: -6.666686534881592
    8. ' ,' → logprob: -6.791686534881592
    9. ' E' → logprob: -6.791686534881592
    10. ').' → logprob: -7.416686534881592

Token 364: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.75
    3. ' E' → logprob: -15.875
    4. '
' → logprob: -17.0
    5. '

' → logprob: -20.125
    6. ' 
' → logprob: -21.25
    7. '``' → logprob: -21.25
    8. '#' → logprob: -21.5
    9. '  
' → logprob: -21.5
    10. ')' → logprob: -21.875

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198056787252426
    2. ' =' → logprob: -2.8119804859161377
    3. '=[' → logprob: -11.436980247497559
    4. '=[]' → logprob: -13.311980247497559
    5. '＝' → logprob: -15.561980247497559
    6. '[' → logprob: -16.686981201171875
    7. ' ' → logprob: -16.936981201171875
    8. ' =[' → logprob: -16.936981201171875
    9. '=[]
' → logprob: -17.436981201171875
    10. '=list' → logprob: -17.561981201171875

Token 366: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12693262100219727
    2. ' [[]' → logprob: -2.1269326210021973
    3. '[[' → logprob: -12.376932144165039
    4. ' [' → logprob: -15.626932144165039
    5. '[N' → logprob: -16.12693214416504
    6. '   ' → logprob: -17.75193214416504
    7. '[['' → logprob: -17.87693214416504
    8. '{' → logprob: -18.12693214416504
    9. ' ' → logprob: -18.12693214416504
    10. '```' → logprob: -18.50193214416504

Token 367: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4740937054157257
    2. ' for' → logprob: -0.9740936756134033
    3. ']' → logprob: -11.724093437194824
    4. '	for' → logprob: -12.724093437194824
    5. ',' → logprob: -13.224093437194824
    6. ' ' → logprob: -13.599093437194824
    7. '   ' → logprob: -14.349093437194824
    8. 'f' → logprob: -14.724093437194824
    9. '(N' → logprob: -15.224093437194824
    10. ')' → logprob: -15.599093437194824

Token 368: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0034132052678614855
    2. ' _' → logprob: -5.878413200378418
    3. 'i' → logprob: -8.128413200378418
    4. ' i' → logprob: -8.628413200378418
    5. ' range' → logprob: -9.253413200378418
    6. 'range' → logprob: -10.503413200378418
    7. '0' → logprob: -12.753413200378418
    8. '_i' → logprob: -13.003413200378418
    9. ' ' → logprob: -13.128413200378418
    10. ' in' → logprob: -13.503413200378418

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269577145576477
    2. 'in' → logprob: -2.126957654953003
    3. '(' → logprob: -11.751957893371582
    4. ' ' → logprob: -11.751957893371582
    5. 'range' → logprob: -12.126957893371582
    6. ' i' → logprob: -13.376957893371582
    7. '_' → logprob: -13.626957893371582
    8. ' (' → logprob: -14.126957893371582
    9. '	in' → logprob: -14.126957893371582
    10. '1' → logprob: -14.376957893371582

Token 370: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -18.133615493774414
    4. ' ' → logprob: -18.758615493774414
    5. '	range' → logprob: -20.508615493774414
    6. 'rang' → logprob: -21.008615493774414
    7. '   ' → logprob: -21.133615493774414
    8. '  ' → logprob: -22.133615493774414
    9. 'ran' → logprob: -22.883615493774414
    10. '0' → logprob: -23.383615493774414

Token 371: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.375054359436035
    4. 'range' → logprob: -14.000054359436035
    5. 'N' → logprob: -14.250054359436035
    6. '(range' → logprob: -16.37505531311035
    7. '(n' → logprob: -16.75005531311035
    8. ' range' → logprob: -17.25005531311035
    9. '((' → logprob: -17.50005531311035
    10. ' ' → logprob: -18.50005531311035

Token 372: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010365027701482177
    2. ' +' → logprob: -6.876036643981934
    3. '+
' → logprob: -13.126036643981934
    4. ')]' → logprob: -13.626036643981934
    5. '()+' → logprob: -15.751036643981934
    6. '(' → logprob: -16.626035690307617
    7. 'range' → logprob: -17.001035690307617
    8. '1' → logprob: -17.001035690307617
    9. ')' → logprob: -17.126035690307617
    10. 'plus' → logprob: -17.751035690307617

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.750123977661133
    4. '2' → logprob: -17.875123977661133
    5. '0' → logprob: -18.437623977661133
    6. '  ' → logprob: -18.562623977661133
    7. ')' → logprob: -18.687623977661133
    8. '7' → logprob: -19.062623977661133
    9. '１' → logprob: -19.375123977661133
    10. '```' → logprob: -19.375123977661133

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -15.125006675720215
    4. '2' → logprob: -15.750006675720215
    5. '
' → logprob: -15.875006675720215
    6. '   ' → logprob: -16.00000762939453
    7. '```' → logprob: -17.12500762939453
    8. '(' → logprob: -18.00000762939453
    9. '``' → logprob: -18.00000762939453
    10. '3' → logprob: -18.12500762939453

Token 375: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1646960824728012
    2. ')]' → logprob: -1.9146960973739624
    3. ')' → logprob: -5.414696216583252
    4. '])' → logprob: -11.664695739746094
    5. ' ]' → logprob: -13.289695739746094
    6. ']
' → logprob: -15.039695739746094
    7. ')])' → logprob: -15.289695739746094
    8. '()]' → logprob: -15.539695739746094
    9. ')],' → logprob: -16.539695739746094
    10. '])]' → logprob: -16.539695739746094

Token 376: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '```' → logprob: -16.50000762939453
    4. 'i' → logprob: -17.75000762939453
    5. 'For' → logprob: -19.00000762939453
    6. '	for' → logprob: -19.00000762939453
    7. ')' → logprob: -19.75000762939453
    8. 'f' → logprob: -20.25000762939453
    9. 'x' → logprob: -20.37500762939453
    10. 'A' → logprob: -21.00000762939453

Token 377: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5427493453025818
    2. 'i' → logprob: -1.4177494049072266
    3. 'u' → logprob: -2.1677494049072266
    4. '_' → logprob: -4.167749404907227
    5. ' x' → logprob: -4.792749404907227
    6. ' i' → logprob: -5.292749404907227
    7. 'edge' → logprob: -5.417749404907227
    8. ' u' → logprob: -5.542749404907227
    9. 'a' → logprob: -5.667749404907227
    10. '_x' → logprob: -5.667749404907227

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002505982294678688
    2. 'in' → logprob: -6.502505779266357
    3. ',y' → logprob: -8.377506256103516
    4. ',x' → logprob: -8.377506256103516
    5. ',_' → logprob: -8.502506256103516
    6. ' in' → logprob: -8.752506256103516
    7. ' ,' → logprob: -8.877506256103516
    8. '_,' → logprob: -11.252506256103516
    9. ',in' → logprob: -12.252506256103516
    10. ',v' → logprob: -12.252506256103516

Token 379: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007100477814674377
    2. ' y' → logprob: -7.2507100105285645
    3. '	y' → logprob: -16.875709533691406
    4. '_y' → logprob: -17.250709533691406
    5. ' ' → logprob: -17.625709533691406
    6. ',y' → logprob: -18.500709533691406
    7. 'x' → logprob: -18.750709533691406
    8. '   ' → logprob: -19.000709533691406
    9. 'y's' → logprob: -19.250709533691406
    10. ',' → logprob: -19.500709533691406

Token 380: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38688212633132935
    2. ' in' → logprob: -1.1368820667266846
    3. ',' → logprob: -11.886881828308105
    4. ' ' → logprob: -13.261881828308105
    5. '	in' → logprob: -14.386881828308105
    6. '   ' → logprob: -15.136881828308105
    7. ')' → logprob: -15.386881828308105
    8. '  ' → logprob: -15.386881828308105
    9. 'In' → logprob: -15.636881828308105
    10. ',in' → logprob: -16.261882781982422

Token 381: ' EDGE' (ID: 165368)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -0.0024837462697178125
    2. ' EDGE' → logprob: -6.00248384475708
    3. 'ED' → logprob: -12.002483367919922
    4. '_EDGE' → logprob: -14.377483367919922
    5. 'Edge' → logprob: -14.752483367919922
    6. 'edge' → logprob: -15.002483367919922
    7. ' ' → logprob: -15.627483367919922
    8. '[' → logprob: -15.877483367919922
    9. 'E' → logprob: -16.127483367919922
    10. '<Edge' → logprob: -16.377483367919922

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024814847856760025
    2. ':
' → logprob: -6.002481460571289
    3. ' :' → logprob: -13.127481460571289
    4. ':
' → logprob: -13.752481460571289
    5. ' in' → logprob: -14.002481460571289
    6. ',' → logprob: -14.252481460571289
    7. '):' → logprob: -14.627481460571289
    8. '   ' → logprob: -15.252481460571289
    9. 'in' → logprob: -16.12748146057129
    10. ':E' → logprob: -16.12748146057129

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020969684701412916
    2. ' E' → logprob: -6.627097129821777
    3. 'E' → logprob: -7.877097129821777
    4. '	E' → logprob: -8.252097129821777
    5. '    
' → logprob: -9.752097129821777
    6. '```' → logprob: -11.002097129821777
    7. ' ' → logprob: -11.252097129821777
    8. '   ' → logprob: -11.752097129821777
    9. '<|end|>' → logprob: -11.752097129821777
    10. '       ' → logprob: -12.127097129821777

Token 384: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2465851902961731
    2. 'E' → logprob: -1.7465851306915283
    3. ' E' → logprob: -3.1215851306915283
    4. '	E' → logprob: -9.87158489227295
    5. ' ' → logprob: -11.62158489227295
    6. '
' → logprob: -12.24658489227295
    7. '```' → logprob: -12.49658489227295
    8. '  ' → logprob: -12.99658489227295
    9. '       ' → logprob: -12.99658489227295
    10. '    
' → logprob: -13.62158489227295

Token 385: ' Pour' (ID: 13931)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0005575587856583297
    2. ' E' → logprob: -8.125557899475098
    3. '   ' → logprob: -8.250557899475098
    4. '	E' → logprob: -15.500557899475098
    5. '```' → logprob: -16.50055694580078
    6. ' ' → logprob: -16.62555694580078
    7. '  ' → logprob: -18.00055694580078
    8. '>E' → logprob: -18.37555694580078
    9. '
' → logprob: -19.00055694580078
    10. '``' → logprob: -19.50055694580078

Token 386: ' chaque' (ID: 21194)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3214678168296814
    2. ' E' → logprob: -1.6964678764343262
    3. 'x' → logprob: -2.571467876434326
    4. ' x' → logprob: -4.196467876434326
    5. ' ' → logprob: -9.571467399597168
    6. '   ' → logprob: -11.196467399597168
    7. ' y' → logprob: -11.321467399597168
    8. 'y' → logprob: -11.946467399597168
    9. 'e' → logprob: -12.571467399597168
    10. '	E' → logprob: -12.571467399597168

Token 387: ' ar' (ID: 646)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37074676156044006
    2. ' sommet' → logprob: -1.7457467317581177
    3. ' x' → logprob: -2.2457468509674072
    4. 'E' → logprob: -4.245746612548828
    5. ' E' → logprob: -5.120746612548828
    6. ' voisin' → logprob: -6.370746612548828
    7. ' vertex' → logprob: -6.495746612548828
    8. '   ' → logprob: -6.620746612548828
    9. 'vertex' → logprob: -6.995746612548828
    10. ' node' → logprob: -7.370746612548828

Token 388: 'ête' (ID: 16808)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10543062537908554
    2. 'ête' → logprob: -2.4804306030273438
    3. ' x' → logprob: -4.730430603027344
    4. '   ' → logprob: -6.230430603027344
    5. 'e' → logprob: -6.605430603027344
    6. 'êt' → logprob: -6.855430603027344
    7. 'é' → logprob: -7.355430603027344
    8. ',' → logprob: -7.480430603027344
    9. 'êtes' → logprob: -7.980430603027344
    10. ',x' → logprob: -8.605430603027344

Token 389: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3145306706428528
    2. ',' → logprob: -2.314530611038208
    3. ':' → logprob: -2.564530611038208
    4. 'E' → logprob: -2.939530611038208
    5. ':
' → logprob: -3.314530611038208
    6. ' E' → logprob: -5.939530849456787
    7. '
' → logprob: -7.064530849456787
    8. ',E' → logprob: -8.064530372619629
    9. ' :' → logprob: -8.439530372619629
    10. ' :
' → logprob: -8.564530372619629

Token 390: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25237563252449036
    2. ' x' → logprob: -1.502375602722168
    3. '   ' → logprob: -7.877375602722168
    4. ',' → logprob: -10.502375602722168
    5. ')' → logprob: -11.252375602722168
    6. ')x' → logprob: -12.002375602722168
    7. ',x' → logprob: -12.127375602722168
    8. '	x' → logprob: -12.752375602722168
    9. ' ,' → logprob: -12.877375602722168
    10. '),' → logprob: -13.127375602722168

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30361852049827576
    2. '),' → logprob: -1.4286185503005981
    3. ',y' → logprob: -5.303618431091309
    4. '   ' → logprob: -5.553618431091309
    5. '):' → logprob: -5.803618431091309
    6. ')' → logprob: -5.928618431091309
    7. ',),' → logprob: -6.053618431091309
    8. ' ,' → logprob: -6.553618431091309
    9. '):
' → logprob: -6.803618431091309
    10. ',)' → logprob: -6.928618431091309

Token 392: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4741363227367401
    2. ' y' → logprob: -0.9741363525390625
    3. ',' → logprob: -10.849136352539062
    4. '   ' → logprob: -10.974136352539062
    5. ' ' → logprob: -11.349136352539062
    6. ',y' → logprob: -12.599136352539062
    7. 'x' → logprob: -13.474136352539062
    8. ')' → logprob: -13.599136352539062
    9. '
' → logprob: -13.974136352539062
    10. '	y' → logprob: -14.099136352539062

Token 393: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3962991535663605
    2. '),' → logprob: -1.521299123764038
    3. '):' → logprob: -2.271299123764038
    4. ')' → logprob: -5.771299362182617
    5. '   ' → logprob: -7.146299362182617
    6. ')
' → logprob: -7.646299362182617
    7. ',' → logprob: -7.646299362182617
    8. '):
' → logprob: -8.646299362182617
    9. ' ):
' → logprob: -8.646299362182617
    10. '),
' → logprob: -9.021299362182617

Token 394: ' on' (ID: 402)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7246972322463989
    2. ' E' → logprob: -0.7246972322463989
    3. '   ' → logprob: -3.4746971130371094
    4. ' ' → logprob: -10.59969711303711
    5. '	E' → logprob: -11.09969711303711
    6. '
' → logprob: -11.09969711303711
    7. '    
' → logprob: -11.72469711303711
    8. '    ' → logprob: -11.97469711303711
    9. ' 
' → logprob: -12.47469711303711
    10. '  ' → logprob: -12.59969711303711

Token 395: ' ajoute' (ID: 91611)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5023137927055359
    2. '   ' → logprob: -1.3773138523101807
    3. '.append' → logprob: -2.2523138523101807
    4. ' E' → logprob: -3.5023138523101807
    5. 'append' → logprob: -5.752313613891602
    6. ' append' → logprob: -6.502313613891602
    7. '.' → logprob: -6.752313613891602
    8. '  ' → logprob: -7.877313613891602
    9. ' ' → logprob: -8.377313613891602
    10. ' .' → logprob: -9.127313613891602

Token 396: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.18627963960170746
    2. 'y' → logprob: -1.8112796545028687
    3. ' x' → logprob: -5.561279773712158
    4. 'x' → logprob: -5.936279773712158
    5. '   ' → logprob: -11.186279296875
    6. '	y' → logprob: -11.811279296875
    7. '(y' → logprob: -13.436279296875
    8. '(x' → logprob: -14.061279296875
    9. ' ' → logprob: -14.061279296875
    10. ',y' → logprob: -14.561279296875

Token 397: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012286532670259476
    2. ' to' → logprob: -5.38728666305542
    3. ' )' → logprob: -5.38728666305542
    4. ' ' → logprob: -7.51228666305542
    5. ' à' → logprob: -7.51228666305542
    6. '.append' → logprob: -7.76228666305542
    7. 'to' → logprob: -7.88728666305542
    8. '   ' → logprob: -8.262286186218262
    9. ' in' → logprob: -8.387286186218262
    10. ',' → logprob: -8.387286186218262

Token 398: ' la' (ID: 557)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.011049113236367702
    2. ' E' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.761049270629883
    4. '   ' → logprob: -16.386049270629883
    5. 'l' → logprob: -17.011049270629883
    6. ' ' → logprob: -17.136049270629883
    7. 'x' → logprob: -17.886049270629883
    8. '	E' → logprob: -18.136049270629883
    9. 'e' → logprob: -18.261049270629883
    10. '>E' → logprob: -18.636049270629883

Token 399: ' liste' (ID: 31719)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002290971577167511
    2. 'x' → logprob: -6.627291202545166
    3. ' E' → logprob: -7.627291202545166
    4. '[x' → logprob: -7.752291202545166
    5. 'liste' → logprob: -10.127290725708008
    6. ' liste' → logprob: -12.752290725708008
    7. ' x' → logprob: -13.377290725708008
    8. 'adj' → logprob: -13.877290725708008
    9. '[E' → logprob: -14.127290725708008
    10. 'list' → logprob: -14.627290725708008

Token 400: ' des' (ID: 731)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011042759753763676
    2. 'E' → logprob: -4.636042594909668
    3. 'x' → logprob: -6.886042594909668
    4. '[E' → logprob: -9.261042594909668
    5. '   ' → logprob: -9.636042594909668
    6. '[' → logprob: -10.011042594909668
    7. 'de' → logprob: -10.636042594909668
    8. ' E' → logprob: -11.011042594909668
    9. 'd' → logprob: -12.511042594909668
    10. '```' → logprob: -13.136042594909668

Token 401: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -1.0566058158874512
    2. 'E' → logprob: -1.1816058158874512
    3. 'adj' → logprob: -1.1816058158874512
    4. ' E' → logprob: -3.431605815887451
    5. ' adj' → logprob: -5.931605815887451
    6. 'vo' → logprob: -6.556605815887451
    7. ' voisin' → logprob: -7.181605815887451
    8. 'neighbors' → logprob: -7.681605815887451
    9. ' adjacency' → logprob: -7.806605815887451
    10. 'x' → logprob: -8.05660629272461

Token 402: ' de' (ID: 334)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.963691804325208e-05
    2. 'x' → logprob: -11.250029563903809
    3. '[' → logprob: -11.875029563903809
    4. '   ' → logprob: -12.000029563903809
    5. ' [' → logprob: -12.625029563903809
    6. ' x' → logprob: -17.125030517578125
    7. ' ' → logprob: -17.500030517578125
    8. 'de' → logprob: -17.625030517578125
    9. '(x' → logprob: -18.125030517578125
    10. ' de' → logprob: -18.375030517578125

Token 403: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233882926404476
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -17.005233764648438
    4. '[x' → logprob: -18.130233764648438
    5. ' ' → logprob: -18.630233764648438
    6. '   ' → logprob: -19.255233764648438
    7. '[' → logprob: -20.880233764648438
    8. '```' → logprob: -20.880233764648438
    9. '(x' → logprob: -21.130233764648438
    10. '"x' → logprob: -21.380233764648438

Token 404: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009948217775672674
    2. '    
' → logprob: -7.500994682312012
    3. '
' → logprob: -9.125994682312012
    4. 'E' → logprob: -9.375994682312012
    5. ',' → logprob: -9.500994682312012
    6. '.' → logprob: -10.000994682312012
    7. ' E' → logprob: -10.125994682312012
    8. '   
' → logprob: -10.625994682312012
    9. '  ' → logprob: -11.125994682312012
    10. '    ' → logprob: -11.375994682312012

Token 405: ' ré' (ID: 3146)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31525689363479614
    2. 'x' → logprob: -1.3152568340301514
    3. '   ' → logprob: -6.4402570724487305
    4. ' ' → logprob: -8.19025707244873
    5. '    ' → logprob: -10.44025707244873
    6. '	x' → logprob: -10.56525707244873
    7. ',' → logprob: -11.31525707244873
    8. '.' → logprob: -11.81525707244873
    9. ' y' → logprob: -12.06525707244873
    10. ')' → logprob: -12.19025707244873

Token 406: 'cip' (ID: 22281)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.9166150689125061
    2. 'e' → logprob: -2.9166150093078613
    3. 'cip' → logprob: -2.9166150093078613
    4. 'c' → logprob: -3.1666150093078613
    5. 'é' → logprob: -3.1666150093078613
    6. 'p' → logprob: -3.2916150093078613
    7. '#' → logprob: -3.2916150093078613
    8. 'v' → logprob: -3.4166150093078613
    9. 'ponse' → logprob: -3.5416150093078613
    10. 'f' → logprob: -3.5416150093078613

Token 407: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.0065642716363072395
    2. 'quement' → logprob: -5.756564140319824
    3. 'oc' → logprob: -6.631564140319824
    4. 'o' → logprob: -7.131564140319824
    5. 'roc' → logprob: -8.506564140319824
    6. 'ri' → logprob: -8.631564140319824
    7. ' ro' → logprob: -9.131564140319824
    8. 'iquement' → logprob: -9.256564140319824
    9. '_ro' → logprob: -9.506564140319824
    10. 'oque' → logprob: -10.006564140319824

Token 408: 'quement' (ID: 42437)
  Prédit: 'quement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.06979191303253174
    2. 'que' → logprob: -2.819791793823242
    3. 'ques' → logprob: -6.194791793823242
    4. 'quer' → logprob: -6.569791793823242
    5. 'qu' → logprob: -7.069791793823242
    6. '```' → logprob: -7.944791793823242
    7. 'ro' → logprob: -8.069791793823242
    8. '-' → logprob: -8.569791793823242
    9. 'quez' → logprob: -8.569791793823242
    10. '\' → logprob: -8.694791793823242

Token 409: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03115221858024597
    2. ' E' → logprob: -4.031152248382568
    3. 'E' → logprob: -4.531152248382568
    4. '    
' → logprob: -6.656152248382568
    5. ',' → logprob: -8.15615177154541
    6. '
' → logprob: -8.53115177154541
    7. '.' → logprob: -9.03115177154541
    8. '   
' → logprob: -9.90615177154541
    9. '  ' → logprob: -10.15615177154541
    10. '  
' → logprob: -10.53115177154541

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010886762291193008
    2. ' E' → logprob: -4.8858866691589355
    3. '
' → logprob: -6.1358866691589355
    4. 'E' → logprob: -7.1358866691589355
    5. '    
' → logprob: -8.385887145996094
    6. ' 
' → logprob: -10.385887145996094
    7. '```' → logprob: -10.510887145996094
    8. '	E' → logprob: -11.885887145996094
    9. '  
' → logprob: -12.010887145996094
    10. '   
' → logprob: -12.260887145996094

Token 411: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.2820795178413391
    2. ' E' → logprob: -1.4070794582366943
    3. '   ' → logprob: -7.282079696655273
    4. '
' → logprob: -8.657079696655273
    5. ' 
' → logprob: -9.782079696655273
    6. '    
' → logprob: -12.032079696655273
    7. '	E' → logprob: -13.157079696655273
    8. '   
' → logprob: -14.657079696655273
    9. '  
' → logprob: -14.782079696655273
    10. ' ' → logprob: -14.907079696655273

Token 412: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.87501049041748
    4. '[y' → logprob: -18.000009536743164
    5. '[E' → logprob: -18.875009536743164
    6. '   ' → logprob: -20.000009536743164
    7. 'x' → logprob: -20.125009536743164
    8. '[i' → logprob: -20.625009536743164
    9. '[s' → logprob: -21.000009536743164
    10. '[int' → logprob: -21.125009536743164

Token 413: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0016097202897071838
    2. '.append' → logprob: -6.626609802246094
    3. '.' → logprob: -9.001609802246094
    4. ').' → logprob: -9.376609802246094
    5. ']' → logprob: -10.126609802246094
    6. '   ' → logprob: -11.001609802246094
    7. ' ].' → logprob: -11.001609802246094
    8. ' .' → logprob: -14.251609802246094
    9. '.app' → logprob: -14.751609802246094
    10. '[' → logprob: -15.001609802246094

Token 414: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -16.0
    4. 'app' → logprob: -19.375
    5. 'appen' → logprob: -20.125
    6. '	append' → logprob: -21.875
    7. '_append' → logprob: -21.875
    8. 'Append' → logprob: -22.625
    9. ' ' → logprob: -24.375
    10. 'add' → logprob: -24.375

Token 415: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -6.885492621222511e-05
    2. 'y' → logprob: -9.750068664550781
    3. '(' → logprob: -11.500068664550781
    4. ' y' → logprob: -15.875068664550781
    5. '(
' → logprob: -16.00006866455078
    6. ' (' → logprob: -16.75006866455078
    7. '	y' → logprob: -18.25006866455078
    8. '(x' → logprob: -19.62506866455078
    9. ',y' → logprob: -20.12506866455078
    10. '((' → logprob: -20.75006866455078

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006767230574041605
    2. ')
' → logprob: -5.006767272949219
    3. ' )' → logprob: -10.256767272949219
    4. '   ' → logprob: -11.381767272949219
    5. ' )
' → logprob: -13.006767272949219
    6. ')
' → logprob: -13.506767272949219
    7. ')y' → logprob: -13.881767272949219
    8. ')

' → logprob: -15.006767272949219
    9. ')x' → logprob: -15.256767272949219
    10. '),' → logprob: -16.63176727294922

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38714706897735596
    2. 'E' → logprob: -1.137147068977356
    3. ' E' → logprob: -8.262146949768066
    4. '```' → logprob: -11.887146949768066
    5. '	E' → logprob: -12.137146949768066
    6. ' ' → logprob: -12.887146949768066
    7. '   ' → logprob: -13.887146949768066
    8. '  ' → logprob: -14.012146949768066
    9. '    
' → logprob: -14.762146949768066
    10. '       ' → logprob: -15.012146949768066

Token 418: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.015624873340129852
    2. '   ' → logprob: -4.515625
    3. ' E' → logprob: -5.390625
    4. ' ' → logprob: -12.515625
    5. '	E' → logprob: -13.140625
    6. '  ' → logprob: -13.515625
    7. '    
' → logprob: -16.015625
    8. ' ' → logprob: -16.265625
    9. '    ' → logprob: -16.390625
    10. '       ' → logprob: -16.765625

Token 419: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00010926496179308742
    2. '[x' → logprob: -9.625109672546387
    3. '[' → logprob: -10.125109672546387
    4. 'y' → logprob: -12.875109672546387
    5. ' [' → logprob: -16.37510871887207
    6. '```' → logprob: -16.62510871887207
    7. '(y' → logprob: -17.12510871887207
    8. '[
' → logprob: -17.25010871887207
    9. ' y' → logprob: -17.50010871887207
    10. '   ' → logprob: -17.87510871887207

Token 420: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.7279140949249268
    2. '].' → logprob: -1.1029140949249268
    3. '.append' → logprob: -1.7279140949249268
    4. '.' → logprob: -5.102913856506348
    5. ')' → logprob: -6.977913856506348
    6. '   ' → logprob: -8.477913856506348
    7. ']' → logprob: -8.977913856506348
    8. ' .' → logprob: -9.852913856506348
    9. '.app' → logprob: -9.852913856506348
    10. '}.' → logprob: -10.352913856506348

Token 421: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.375
    3. '.append' → logprob: -16.5
    4. '	append' → logprob: -18.375
    5. 'appen' → logprob: -18.625
    6. 'add' → logprob: -20.0
    7. 'app' → logprob: -20.5
    8. 'Append' → logprob: -21.75
    9. 'insert' → logprob: -22.25
    10. '_append' → logprob: -22.25

Token 422: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.127333340875339e-06
    2. 'x' → logprob: -12.500003814697266
    3. '(' → logprob: -15.000003814697266
    4. '(
' → logprob: -18.250003814697266
    5. '	x' → logprob: -20.875003814697266
    6. ' (' → logprob: -21.000003814697266
    7. ',x' → logprob: -21.125003814697266
    8. '[x' → logprob: -22.000003814697266
    9. '   ' → logprob: -22.250003814697266
    10. ' x' → logprob: -22.250003814697266

Token 423: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. ')
' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.625020980834961
    4. '<|end|>' → logprob: -13.000020980834961
    5. ')

' → logprob: -16.12502098083496
    6. ')#' → logprob: -16.37502098083496
    7. ')return' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.00002098083496
    9. '),' → logprob: -17.00002098083496
    10. '#' → logprob: -17.00002098083496

Token 424: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5573349595069885
    2. 'Q' → logprob: -1.6823348999023438
    3. '#' → logprob: -3.5573348999023438
    4. 'color' → logprob: -3.6823348999023438
    5. 'def' → logprob: -4.182334899902344
    6. 'q' → logprob: -4.307334899902344
    7. 'for' → logprob: -4.432334899902344
    8. 'stack' → logprob: -4.557334899902344
    9. 'dist' → logprob: -4.557334899902344
    10. 'vis' → logprob: -4.682334899902344

Token 425: ' On' (ID: 2160)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.513207197189331
    2. 'import' → logprob: -2.263207197189331
    3. 'from' → logprob: -2.638207197189331
    4. '#' → logprob: -2.763207197189331
    5. 'dist' → logprob: -3.638207197189331
    6. 'stack' → logprob: -4.01320743560791
    7. 'def' → logprob: -4.26320743560791
    8. 'Q' → logprob: -4.26320743560791
    9. 'used' → logprob: -4.63820743560791
    10. 'vis' → logprob: -4.76320743560791

Token 426: ' crée' (ID: 102256)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.620546817779541
    2. ' visited' → logprob: -1.995546817779541
    3. 'stack' → logprob: -3.120546817779541
    4. 'from' → logprob: -3.120546817779541
    5. ' stack' → logprob: -3.495546817779541
    6. 'import' → logprob: -3.620546817779541
    7. 'def' → logprob: -3.995546817779541
    8. 'queue' → logprob: -4.120546817779541
    9. ' sys' → logprob: -4.120546817779541
    10. 'vis' → logprob: -4.370546817779541

Token 427: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7574275732040405
    2. 'une' → logprob: -0.7574275732040405
    3. 'visited' → logprob: -3.63242769241333
    4. 'un' → logprob: -4.63242769241333
    5. 'deque' → logprob: -5.50742769241333
    6. 'a' → logprob: -5.75742769241333
    7. ' un' → logprob: -5.75742769241333
    8. '[]' → logprob: -6.25742769241333
    9. 'de' → logprob: -6.25742769241333
    10. 'queue' → logprob: -6.75742769241333

Token 428: ' liste' (ID: 31719)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.7614573836326599
    2. 'file' → logprob: -1.7614574432373047
    3. 'stack' → logprob: -1.8864574432373047
    4. 'queue' → logprob: -2.1364574432373047
    5. 'pile' → logprob: -3.2614574432373047
    6. 'from' → logprob: -4.261457443237305
    7. 'visited' → logprob: -4.386457443237305
    8. '#' → logprob: -5.261457443237305
    9. 'def' → logprob: -5.386457443237305
    10. 'liste' → logprob: -5.636457443237305

Token 429: ' de' (ID: 334)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2953873872756958
    2. 'vis' → logprob: -1.6703873872756958
    3. 'used' → logprob: -2.2953872680664062
    4. 'de' → logprob: -2.4203872680664062
    5. 'd' → logprob: -2.6703872680664062
    6. 'dp' → logprob: -2.7953872680664062
    7. 'Q' → logprob: -3.2953872680664062
    8. 'V' → logprob: -4.170387268066406
    9. 'visit' → logprob: -4.420387268066406
    10. 'dist' → logprob: -4.545387268066406

Token 430: ' tuples' (ID: 112464)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.5698398947715759
    2. 'visited' → logprob: -1.3198399543762207
    3. 'dist' → logprob: -2.6948399543762207
    4. 'deque' → logprob: -3.4448399543762207
    5. 'vis' → logprob: -4.069839954376221
    6. 'd' → logprob: -4.944839954376221
    7. 'False' → logprob: -5.319839954376221
    8. 'distance' → logprob: -5.319839954376221
    9. '[' → logprob: -5.444839954376221
    10. 'flags' → logprob: -5.819839954376221

Token 431: ' contenant' (ID: 131049)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.0163590908050537
    2. '(' → logprob: -2.2663590908050537
    3. 'dist' → logprob: -2.7663590908050537
    4. 'de' → logprob: -2.8913590908050537
    5. ',' → logprob: -3.1413590908050537
    6. 'visited' → logprob: -3.2663590908050537
    7. '()' → logprob: -3.3913590908050537
    8. '(Q' → logprob: -3.6413590908050537
    9. 'D' → logprob: -3.7663590908050537
    10. 'd' → logprob: -3.7663590908050537

Token 432: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5610303282737732
    2. '(x' → logprob: -1.186030387878418
    3. ' (' → logprob: -3.436030387878418
    4. '(D' → logprob: -3.811030387878418
    5. '(' → logprob: -4.811030387878418
    6. '(s' → logprob: -4.936030387878418
    7. '(N' → logprob: -4.936030387878418
    8. '(l' → logprob: -5.186030387878418
    9. '(node' → logprob: -5.186030387878418
    10. '(value' → logprob: -5.311030387878418

Token 433: ' valeurs' (ID: 73668)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.491565227508545
    2. '(' → logprob: -1.866565227508545
    3. '(val' → logprob: -1.991565227508545
    4. '(i' → logprob: -2.241565227508545
    5. '(x' → logprob: -2.491565227508545
    6. '(de' → logprob: -2.616565227508545
    7. '(n' → logprob: -2.991565227508545
    8. 'val' → logprob: -3.241565227508545
    9. '(no' → logprob: -3.991565227508545
    10. '(-' → logprob: -4.241565227508545

Token 434: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6018441915512085
    2. '(x' → logprob: -1.9768441915512085
    3. ' (' → logprob: -2.476844310760498
    4. 'D' → logprob: -2.726844310760498
    5. '(i' → logprob: -2.851844310760498
    6. '(' → logprob: -3.226844310760498
    7. '(D' → logprob: -4.101844310760498
    8. ' D' → logprob: -4.726844310760498
    9. 'et' → logprob: -4.976844310760498
    10. 'de' → logprob: -5.226844310760498

Token 435: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.23509685695171356
    2. '(D' → logprob: -2.1100969314575195
    3. ' D' → logprob: -4.2350969314575195
    4. 's' → logprob: -4.3600969314575195
    5. 'd' → logprob: -4.7350969314575195
    6. 'l' → logprob: -5.4850969314575195
    7. '(E' → logprob: -5.4850969314575195
    8. 'distance' → logprob: -5.4850969314575195
    9. 'som' → logprob: -5.6100969314575195
    10. 'adj' → logprob: -5.6100969314575195

Token 436: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16497255861759186
    2. 'et' → logprob: -2.0399725437164307
    3. ' et' → logprob: -5.53997278213501
    4. ')' → logprob: -5.78997278213501
    5. '[i' → logprob: -5.78997278213501
    6. 'avec' → logprob: -5.78997278213501
    7. ' ,' → logprob: -6.16497278213501
    8. ',index' → logprob: -6.66497278213501
    9. 'enumer' → logprob: -6.78997278213501
    10. ',i' → logprob: -7.28997278213501

Token 437: 'les' (ID: 1032)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2525840997695923
    2. 'D' → logprob: -2.6275839805603027
    3. '(D' → logprob: -3.3775839805603027
    4. ' (' → logprob: -3.5025839805603027
    5. ',' → logprob: -4.252583980560303
    6. '(value' → logprob: -4.377583980560303
    7. '(x' → logprob: -4.627583980560303
    8. '(index' → logprob: -4.627583980560303
    9. '(val' → logprob: -5.002583980560303
    10. '(v' → logprob: -5.252583980560303

Token 438: ' dés' (ID: 19454)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.110089659690857
    2. 'indices' → logprob: -1.235089659690857
    3. 'i' → logprob: -1.985089659690857
    4. 'val' → logprob: -2.6100897789001465
    5. 'D' → logprob: -3.1100897789001465
    6. 'd' → logprob: -4.1100897789001465
    7. 'som' → logprob: -4.1100897789001465
    8. 'no' → logprob: -4.4850897789001465
    9. 'vo' → logprob: -4.4850897789001465
    10. ' somm' → logprob: -4.7350897789001465

Token 439: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07435351610183716
    2. '),' → logprob: -2.9493534564971924
    3. ')' → logprob: -4.3243536949157715
    4. '[i' → logprob: -5.5743536949157715
    5. ' ,' → logprob: -7.5743536949157715
    6. ',),' → logprob: -7.9493536949157715
    7. ',)' → logprob: -8.199353218078613
    8. '[' → logprob: -8.199353218078613
    9. 's' → logprob: -8.324353218078613
    10. 'de' → logprob: -9.449353218078613

Token 440: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36689236760139465
    2. 'et' → logprob: -1.4918923377990723
    3. 'enumer' → logprob: -4.116892337799072
    4. 'and' → logprob: -4.366892337799072
    5. 'avec' → logprob: -4.616892337799072
    6. 'with' → logprob: -5.366892337799072
    7. ' et' → logprob: -5.491892337799072
    8. 'des' → logprob: -5.616892337799072
    9. 'indexed' → logprob: -5.741892337799072
    10. 'for' → logprob: -5.866892337799072

Token 441: ' leur' (ID: 9853)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leur' → logprob: -0.5739010572433472
    2. 'l' → logprob: -1.5739010572433472
    3. 'leurs' → logprob: -2.0739011764526367
    4. 'les' → logprob: -3.3239011764526367
    5. ' leurs' → logprob: -3.3239011764526367
    6. ' leur' → logprob: -4.198901176452637
    7. 'le' → logprob: -5.198901176452637
    8. 'index' → logprob: -5.198901176452637
    9. '#' → logprob: -6.698901176452637
    10. 'indices' → logprob: -6.823901176452637

Token 442: ' position' (ID: 4010)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.12724725902080536
    2. 'index' → logprob: -2.6272473335266113
    3. ' indices' → logprob: -3.5022473335266113
    4. 'indice' → logprob: -4.252247333526611
    5. 'ind' → logprob: -7.002247333526611
    6. ' index' → logprob: -7.002247333526611
    7. 'indexes' → logprob: -7.502247333526611
    8. 'num' → logprob: -8.502246856689453
    9. 'positions' → logprob: -9.252246856689453
    10. ' indice' → logprob: -10.502246856689453

Token 443: ' originale' (ID: 90997)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08066343516111374
    2. 'enumer' → logprob: -3.4556634426116943
    3. ' =' → logprob: -4.330663204193115
    4. ' ,' → logprob: -4.455663204193115
    5. '
' → logprob: -5.830663204193115
    6. '=' → logprob: -6.205663204193115
    7. ',
' → logprob: -6.330663204193115
    8. 's' → logprob: -6.330663204193115
    9. 'D' → logprob: -6.455663204193115
    10. ' (' → logprob: -6.705663204193115

Token 444: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7091444134712219
    2. ' =' → logprob: -1.3341443538665771
    3. 'D' → logprob: -2.834144353866577
    4. 'enumer' → logprob: -3.084144353866577
    5. 'indexed' → logprob: -3.459144353866577
    6. 'sorted' → logprob: -3.709144353866577
    7. '=' → logprob: -3.959144353866577
    8. '
' → logprob: -4.209144592285156
    9. 'dice' → logprob: -4.834144592285156
    10. 'with' → logprob: -5.584144592285156

Token 445: '#' (ID: 2)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4021846652030945
    2. 'indexed' → logprob: -2.0271847248077393
    3. 'D' → logprob: -2.4021847248077393
    4. 'enumer' → logprob: -3.5271847248077393
    5. 'dice' → logprob: -3.9021847248077393
    6. 'sorted' → logprob: -4.02718448638916
    7. 'value' → logprob: -5.27718448638916
    8. 'd' → logprob: -5.27718448638916
    9. 'pos' → logprob: -5.52718448638916
    10. 'pairs' → logprob: -5.65218448638916

Token 446: ' enumerate' (ID: 29671)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dice' → logprob: -1.2813146114349365
    2. 'D' → logprob: -1.6563146114349365
    3. 'indexed' → logprob: -2.4063146114349365
    4. 'sorted' → logprob: -2.6563146114349365
    5. 'val' → logprob: -2.9063146114349365
    6. 'V' → logprob: -3.1563146114349365
    7. 'vals' → logprob: -3.9063146114349365
    8. 'nodes' → logprob: -4.031314849853516
    9. 'DD' → logprob: -4.031314849853516
    10. 'pos' → logprob: -4.156314849853516

Token 447: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.03500813618302345
    2. 'D' → logprob: -3.410008192062378
    3. '(' → logprob: -7.285007953643799
    4. '_D' → logprob: -9.035008430480957
    5. '(en' → logprob: -9.160008430480957
    6. '((' → logprob: -9.910008430480957
    7. '([(' → logprob: -10.285008430480957
    8. '=' → logprob: -10.410008430480957
    9. 'enumer' → logprob: -10.410008430480957
    10. '_list' → logprob: -10.660008430480957

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04845006763935089
    2. '())' → logprob: -3.298449993133545
    3. ',' → logprob: -4.798449993133545
    4. '(),' → logprob: -7.423449993133545
    5. ')
' → logprob: -7.548449993133545
    6. '()' → logprob: -7.798449993133545
    7. '(' → logprob: -8.423450469970703
    8. '),' → logprob: -9.423450469970703
    9. ' )' → logprob: -9.548450469970703
    10. '())
' → logprob: -9.923450469970703

Token 449: ' va' (ID: 3423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9098268747329712
    2. '=' → logprob: -1.5348268747329712
    3. ' =' → logprob: -1.5348268747329712
    4. '()' → logprob: -2.6598267555236816
    5. 'sorted' → logprob: -3.4098267555236816
    6. ',' → logprob: -4.034826755523682
    7. ']' → logprob: -4.409826755523682
    8. '(' → logprob: -5.034826755523682
    9. 'D' → logprob: -5.159826755523682
    10. '#' → logprob: -6.034826755523682

Token 450: ' donner' (ID: 32394)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.6129775047302246
    2. 'lambda' → logprob: -1.7379775047302246
    3. '(' → logprob: -1.9879775047302246
    4. ' lambda' → logprob: -2.6129775047302246
    5. '(lambda' → logprob: -2.7379775047302246
    6. '[(' → logprob: -2.9879775047302246
    7. ' enumerate' → logprob: -3.1129775047302246
    8. 'enumer' → logprob: -3.2379775047302246
    9. 'sorted' → logprob: -3.2379775047302246
    10. '((' → logprob: -3.3629775047302246

Token 451: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48959216475486755
    2. '(' → logprob: -1.23959219455719
    3. '(en' → logprob: -3.7395920753479004
    4. '(i' → logprob: -3.9895920753479004
    5. '((' → logprob: -4.1145920753479
    6. '(index' → logprob: -4.3645920753479
    7. '(lambda' → logprob: -4.3645920753479
    8. '(start' → logprob: -5.1145920753479
    9. 'enumer' → logprob: -6.4895920753479
    10. '(x' → logprob: -6.9895920753479

Token 452: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3787369132041931
    2. '0' → logprob: -1.878736972808838
    3. 'index' → logprob: -2.003736972808838
    4. 'idx' → logprob: -4.628736972808838
    5. ' i' → logprob: -4.878736972808838
    6. 'indice' → logprob: -5.503736972808838
    7. '(i' → logprob: -7.128736972808838
    8. ' index' → logprob: -7.128736972808838
    9. ' (' → logprob: -7.253736972808838
    10. 'ind' → logprob: -7.628736972808838

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014170228969305754
    2. ' ,' → logprob: -7.50141716003418
    3. ',D' → logprob: -7.87641716003418
    4. '(' → logprob: -8.00141716003418
    5. '(D' → logprob: -9.50141716003418
    6. ',d' → logprob: -11.12641716003418
    7. '0' → logprob: -11.50141716003418
    8. ',(' → logprob: -11.50141716003418
    9. ',
' → logprob: -12.00141716003418
    10. '(),' → logprob: -12.00141716003418

Token 454: ' valeur' (ID: 41664)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.22741734981536865
    2. ' value' → logprob: -2.102417469024658
    3. 'val' → logprob: -2.602417469024658
    4. ' valeur' → logprob: -5.352417469024658
    5. ' val' → logprob: -6.352417469024658
    6. 'd' → logprob: -7.602417469024658
    7. ' d' → logprob: -9.4774169921875
    8. 'D' → logprob: -11.1024169921875
    9. ')' → logprob: -11.1024169921875
    10. 'v' → logprob: -11.4774169921875

Token 455: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006920207757502794
    2. '),' → logprob: -5.381920337677002
    3. '(' → logprob: -7.006920337677002
    4. ')
' → logprob: -7.506920337677002
    5. '(D' → logprob: -8.631919860839844
    6. 'D' → logprob: -8.756919860839844
    7. 'd' → logprob: -9.131919860839844
    8. ',' → logprob: -9.756919860839844
    9. '(d' → logprob: -10.131919860839844
    10. '=' → logprob: -10.256919860839844

Token 456: ' On' (ID: 2160)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03825584426522255
    2. 'D' → logprob: -4.41325569152832
    3. 'sorted' → logprob: -4.91325569152832
    4. 'd' → logprob: -5.41325569152832
    5. '(' → logprob: -6.41325569152832
    6. 'dice' → logprob: -6.41325569152832
    7. '(d' → logprob: -6.53825569152832
    8. ' [(' → logprob: -6.53825569152832
    9. 'value' → logprob: -7.16325569152832
    10. '((' → logprob: -7.16325569152832

Token 457: ' ajoute' (ID: 91611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0993152856826782
    2. ' =' → logprob: -1.3493152856826782
    3. 'sorted' → logprob: -2.0993151664733887
    4. 'D' → logprob: -2.4743151664733887
    5. 's' → logprob: -3.7243151664733887
    6. 'd' → logprob: -3.8493151664733887
    7. 'sort' → logprob: -3.9743151664733887
    8. 'tr' → logprob: -4.099315166473389
    9. 'les' → logprob: -4.099315166473389
    10. 'val' → logprob: -4.724315166473389

Token 458: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5538788437843323
    2. ' (' → logprob: -1.5538787841796875
    3. '1' → logprob: -2.6788787841796875
    4. ',' → logprob: -3.3038787841796875
    5. '
' → logprob: -4.4288787841796875
    6. ')' → logprob: -4.4288787841796875
    7. 'lambda' → logprob: -4.5538787841796875
    8. ' a' → logprob: -4.8038787841796875
    9. '(lambda' → logprob: -5.0538787841796875
    10. 'value' → logprob: -5.1788787841796875

Token 459: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3357868194580078
    2. '1' → logprob: -2.335786819458008
    3. 'lambda' → logprob: -2.835786819458008
    4. '(lambda' → logprob: -3.210786819458008
    5. ',' → logprob: -3.835786819458008
    6. '(key' → logprob: -4.085786819458008
    7. ')' → logprob: -4.835786819458008
    8. ' (' → logprob: -5.085786819458008
    9. 'key' → logprob: -5.335786819458008
    10. '
' → logprob: -5.460786819458008

Token 460: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027685534209012985
    2. ' ,' → logprob: -4.277685642242432
    3. ' for' → logprob: -5.277685642242432
    4. ')' → logprob: -5.652685642242432
    5. 'for' → logprob: -6.027685642242432
    6. ',
' → logprob: -7.152685642242432
    7. '),' → logprob: -8.152685165405273
    8. 'enumer' → logprob: -8.402685165405273
    9. ',D' → logprob: -9.277685165405273
    10. ',d' → logprob: -9.277685165405273

Token 461: ' l' (ID: 305)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.060882844030857086
    2. ' index' → logprob: -2.935882806777954
    3. 'l' → logprob: -5.185883045196533
    4. ' l' → logprob: -8.060882568359375
    5. ' ' → logprob: -11.060882568359375
    6. 'idx' → logprob: -11.185882568359375
    7. 'indice' → logprob: -11.435882568359375
    8. '	index' → logprob: -12.310882568359375
    9. '#index' → logprob: -12.685882568359375
    10. '_' → logprob: -12.685882568359375

Token 462: ''' (ID: 6)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.20308023691177368
    2. ' index' → logprob: -1.703080177307129
    3. 'i' → logprob: -7.828080177307129
    4. 'x' → logprob: -8.453080177307129
    5. 'indice' → logprob: -8.703080177307129
    6. ' ' → logprob: -9.203080177307129
    7. '[index' → logprob: -9.328080177307129
    8. 'indices' → logprob: -9.328080177307129
    9. 'idx' → logprob: -9.703080177307129
    10. '[' → logprob: -9.828080177307129

Token 463: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00044032474397681653
    2. ' index' → logprob: -7.8754401206970215
    3. 'i' → logprob: -10.37544059753418
    4. 'indice' → logprob: -11.37544059753418
    5. 'idx' → logprob: -11.87544059753418
    6. 'indices' → logprob: -12.75044059753418
    7. 'x' → logprob: -13.75044059753418
    8. '_index' → logprob: -13.75044059753418
    9. '1' → logprob: -13.75044059753418
    10. '_' → logprob: -14.12544059753418

Token 464: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08710730075836182
    2. ')' → logprob: -2.5871071815490723
    3. 'for' → logprob: -5.337107181549072
    4. ' for' → logprob: -6.587107181549072
    5. '),' → logprob: -7.212107181549072
    6. ' ,' → logprob: -7.337107181549072
    7. ',
' → logprob: -8.83710765838623
    8. ' pour' → logprob: -9.33710765838623
    9. '   ' → logprob: -9.83710765838623
    10. 'pour' → logprob: -9.83710765838623

Token 465: ' nos' (ID: 4001)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.05064719542860985
    2. ' les' → logprob: -3.050647258758545
    3. 'le' → logprob: -6.925647258758545
    4. 'l' → logprob: -8.175646781921387
    5. 'enumer' → logprob: -8.425646781921387
    6. 'la' → logprob: -8.675646781921387
    7. ' on' → logprob: -9.300646781921387
    8. 'range' → logprob: -9.675646781921387
    9. '#' → logprob: -9.800646781921387
    10. 'on' → logprob: -10.050646781921387

Token 466: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3802781105041504
    2. ' somm' → logprob: -1.7552781105041504
    3. 'som' → logprob: -3.1302781105041504
    4. 'indices' → logprob: -3.2552781105041504
    5. 'nodes' → logprob: -3.8802781105041504
    6. ' indices' → logprob: -3.8802781105041504
    7. 'vertices' → logprob: -4.88027811050415
    8. ' nodes' → logprob: -4.88027811050415
    9. ' sommet' → logprob: -7.00527811050415
    10. ' vertices' → logprob: -7.00527811050415

Token 467: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.053867634385824203
    2. 'ents' → logprob: -3.8038675785064697
    3. 'ts' → logprob: -4.178867816925049
    4. 'es' → logprob: -6.303867816925049
    5. 'uts' → logprob: -6.428867816925049
    6. 'ats' → logprob: -6.553867816925049
    7. 'et' → logprob: -6.553867816925049
    8. 'orts' → logprob: -6.678867816925049
    9. 'ètres' → logprob: -6.803867816925049
    10. 'erts' → logprob: -7.053867816925049

Token 468: ' commencent' (ID: 184941)
  Prédit: ' commencent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commencent' → logprob: -0.7639155387878418
    2. 'comm' → logprob: -1.0139155387878418
    3. ' vont' → logprob: -3.013915538787842
    4. 's' → logprob: -3.388915538787842
    5. ' sont' → logprob: -3.638915538787842
    6. ' comm' → logprob: -4.013915538787842
    7. 'ne' → logprob: -4.763915538787842
    8. '#' → logprob: -4.888915538787842
    9. ' part' → logprob: -5.138915538787842
    10. ' ne' → logprob: -5.138915538787842

Token 469: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7420651912689209
    2. 'from' → logprob: -1.867065191268921
    3. ' à' → logprob: -2.242065191268921
    4. 'à' → logprob: -2.367065191268921
    5. '=' → logprob: -2.742065191268921
    6. ' par' → logprob: -3.367065191268921
    7. ' =' → logprob: -3.742065191268921
    8. 'par' → logprob: -3.992065191268921
    9. ')' → logprob: -4.4920654296875
    10. ' from' → logprob: -5.3670654296875

Token 470: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.00012493133545
    3. '
' → logprob: -14.50012493133545
    4. 'un' → logprob: -15.25012493133545
    5. '```' → logprob: -15.62512493133545
    6. 'index' → logprob: -16.000123977661133
    7. ' ' → logprob: -16.875123977661133
    8. ' partir' → logprob: -17.125123977661133
    9. '0' → logprob: -17.500123977661133
    10. 'l' → logprob: -17.875123977661133

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.125001907348633
    4. '
' → logprob: -17.875001907348633
    5. '0' → logprob: -18.750001907348633
    6. 'index' → logprob: -19.000001907348633
    7. 'un' → logprob: -19.875001907348633
    8. 'l' → logprob: -20.000001907348633
    9. '１' → logprob: -20.000001907348633
    10. '=' → logprob: -20.500001907348633

Token 472: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6696021556854248
    2. 'D' → logprob: -1.1696021556854248
    3. 'sorted' → logprob: -2.169602155685425
    4. ')' → logprob: -3.294602155685425
    5. 'd' → logprob: -5.419602394104004
    6. 'E' → logprob: -5.544602394104004
    7. ',D' → logprob: -5.669602394104004
    8. ')
' → logprob: -5.919602394104004
    9. ' D' → logprob: -6.419602394104004
    10. '),' → logprob: -6.794602394104004

Token 473: 'P' (ID: 47)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.6040931940078735
    2. 'dice' → logprob: -1.6040931940078735
    3. '[(' → logprob: -1.9790931940078735
    4. 'sorted' → logprob: -2.104093074798584
    5. 'val' → logprob: -3.354093074798584
    6. 'L' → logprob: -3.354093074798584
    7. 'vals' → logprob: -3.354093074798584
    8. 'V' → logprob: -3.479093074798584
    9. 'pairs' → logprob: -3.854093074798584
    10. 'nodes' → logprob: -4.229093074798584

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696832418441772
    2. ' =' → logprob: -2.1269683837890625
    3. '=P' → logprob: -11.751968383789062
    4. '=[]' → logprob: -11.876968383789062
    5. '=[' → logprob: -12.126968383789062
    6. '=
' → logprob: -12.626968383789062
    7. '=D' → logprob: -13.001968383789062
    8. 'sorted' → logprob: -13.376968383789062
    9. '=(' → logprob: -13.501968383789062
    10. '=p' → logprob: -13.501968383789062

Token 475: ' [(' (ID: 43900)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5652801394462585
    2. '[(' → logprob: -1.0652801990509033
    3. 'list' → logprob: -2.8152801990509033
    4. ' sorted' → logprob: -4.190279960632324
    5. ' [(' → logprob: -4.565279960632324
    6. ' list' → logprob: -6.565279960632324
    7. '[' → logprob: -9.190279960632324
    8. 'enumer' → logprob: -9.440279960632324
    9. '(sorted' → logprob: -9.690279960632324
    10. '[list' → logprob: -9.940279960632324

Token 476: 'x' (ID: 87)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5922802090644836
    2. 'd' → logprob: -1.0922801494598389
    3. 'val' → logprob: -2.467280149459839
    4. 'v' → logprob: -4.217280387878418
    5. 'value' → logprob: -4.592280387878418
    6. 'dice' → logprob: -7.092280387878418
    7. 'w' → logprob: -9.092280387878418
    8. '-D' → logprob: -9.467280387878418
    9. 'x' → logprob: -9.717280387878418
    10. 'p' → logprob: -9.717280387878418

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13387882709503174
    2. '[' → logprob: -2.383878707885742
    3. ',D' → logprob: -3.883878707885742
    4. ',d' → logprob: -5.508878707885742
    5. ' ,' → logprob: -6.133878707885742
    6. ',i' → logprob: -6.383878707885742
    7. ',v' → logprob: -6.508878707885742
    8. ',val' → logprob: -7.008878707885742
    9. 'D' → logprob: -7.133878707885742
    10. 'd' → logprob: -7.633878707885742

Token 478: ' ind' (ID: 1383)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00889605563133955
    2. ' i' → logprob: -4.8838958740234375
    3. 'idx' → logprob: -7.2588958740234375
    4. 'D' → logprob: -9.133895874023438
    5. 'd' → logprob: -9.383895874023438
    6. 'v' → logprob: -9.633895874023438
    7. ' idx' → logprob: -9.758895874023438
    8. 'y' → logprob: -10.258895874023438
    9. 'x' → logprob: -10.383895874023438
    10. 'index' → logprob: -10.383895874023438

Token 479: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06330975890159607
    2. ' +' → logprob: -2.813309669494629
    3. 'ex' → logprob: -7.188309669494629
    4. ')' → logprob: -8.188309669494629
    5. '+D' → logprob: -8.688309669494629
    6. 'x' → logprob: -10.188309669494629
    7. 'D' → logprob: -10.688309669494629
    8. 'd' → logprob: -10.813309669494629
    9. 'e' → logprob: -10.938309669494629
    10. ' ' → logprob: -11.688309669494629

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -17.12507438659668
    4. '0' → logprob: -17.50007438659668
    5. '   ' → logprob: -18.25007438659668
    6. '```' → logprob: -18.25007438659668
    7. ',' → logprob: -19.00007438659668
    8. ' ' → logprob: -19.68757438659668
    9. '+' → logprob: -19.81257438659668
    10. '=' → logprob: -19.87507438659668

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '0' → logprob: -17.87500762939453
    4. '```' → logprob: -18.62500762939453
    5. 'x' → logprob: -18.75000762939453
    6. ')' → logprob: -18.87500762939453
    7. '   ' → logprob: -18.87500762939453
    8. '=' → logprob: -19.00000762939453
    9. '+' → logprob: -19.93750762939453
    10. '2' → logprob: -19.93750762939453

Token 482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -11.875006675720215
    3. ',)' → logprob: -16.87500762939453
    4. ')]' → logprob: -17.37500762939453
    5. ')
' → logprob: -17.37500762939453
    6. ',' → logprob: -17.75000762939453
    7. ']' → logprob: -18.12500762939453
    8. '))' → logprob: -18.37500762939453
    9. '）' → logprob: -18.50000762939453
    10. ' ' → logprob: -19.25000762939453

Token 483: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3565005362033844
    2. 'for' → logprob: -1.731500506401062
    3. ')' → logprob: -2.1065006256103516
    4. ',' → logprob: -7.106500625610352
    5. '   ' → logprob: -8.231500625610352
    6. ' in' → logprob: -9.731500625610352
    7. ' )' → logprob: -10.981500625610352
    8. ' ' → logprob: -11.231500625610352
    9. '	for' → logprob: -11.981500625610352
    10. ']' → logprob: -12.231500625610352

Token 484: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.07975246012210846
    2. ' ind' → logprob: -2.5797524452209473
    3. 'x' → logprob: -7.704752445220947
    4. '(ind' → logprob: -7.829752445220947
    5. ',' → logprob: -12.079752922058105
    6. '(x' → logprob: -12.829752922058105
    7. ' x' → logprob: -13.079752922058105
    8. '_ind' → logprob: -13.704752922058105
    9. '[ind' → logprob: -14.204752922058105
    10. ''ind' → logprob: -14.829752922058105

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016410982236266136
    2. ',x' → logprob: -4.141410827636719
    3. ' ,' → logprob: -8.266410827636719
    4. 'x' → logprob: -9.266410827636719
    5. ' in' → logprob: -11.516410827636719
    6. 'in' → logprob: -12.641410827636719
    7. ',d' → logprob: -12.766410827636719
    8. '(x' → logprob: -13.391410827636719
    9. ',val' → logprob: -13.766410827636719
    10. ',value' → logprob: -13.891410827636719

Token 486: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0040785204619169235
    2. ' x' → logprob: -5.504078388214111
    3. '(x' → logprob: -16.379077911376953
    4. '	x' → logprob: -18.254077911376953
    5. ' ' → logprob: -19.629077911376953
    6. '_x' → logprob: -19.879077911376953
    7. ',x' → logprob: -20.254077911376953
    8. '<|end|>' → logprob: -20.504077911376953
    9. '$x' → logprob: -21.004077911376953
    10. ')x' → logprob: -21.129077911376953

Token 487: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22556056082248688
    2. 'in' → logprob: -1.6005605459213257
    3. ',' → logprob: -8.975560188293457
    4. ')' → logprob: -11.350560188293457
    5. 'enumer' → logprob: -12.350560188293457
    6. '<|end|>' → logprob: -13.475560188293457
    7. ' ' → logprob: -13.600560188293457
    8. ' ,' → logprob: -14.850560188293457
    9. 'import' → logprob: -15.475560188293457
    10. '	in' → logprob: -15.725560188293457

Token 488: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.009765887632966042
    2. ' enumerate' → logprob: -4.634766101837158
    3. 'ind' → logprob: -12.634765625
    4. ',' → logprob: -13.259765625
    5. 'enum' → logprob: -13.509765625
    6. '```' → logprob: -14.009765625
    7. '
' → logprob: -14.134765625
    8. 'x' → logprob: -14.509765625
    9. 'en' → logprob: -14.509765625
    10. 'in' → logprob: -14.634765625

Token 489: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0002087853499688208
    2. 'D' → logprob: -8.500208854675293
    3. '(' → logprob: -12.500208854675293
    4. ')' → logprob: -15.000208854675293
    5. ' D' → logprob: -15.125208854675293
    6. '
' → logprob: -15.625208854675293
    7. ' (' → logprob: -16.000207901000977
    8. ',D' → logprob: -16.000207901000977
    9. '(d' → logprob: -16.125207901000977
    10. ']' → logprob: -16.750207901000977

Token 490: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.043078898685053e-05
    2. ')' → logprob: -9.875090599060059
    3. ']' → logprob: -10.750090599060059
    4. ' )' → logprob: -11.250090599060059
    5. ')]
' → logprob: -12.750090599060059
    6. ')]

' → logprob: -14.875090599060059
    7. ')],' → logprob: -15.500090599060059
    8. ')][' → logprob: -15.750090599060059
    9. ')]
' → logprob: -16.125089645385742
    10. ' ]' → logprob: -16.375089645385742

Token 491: '#' (ID: 2)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0018054876709356904
    2. '#' → logprob: -6.376805305480957
    3. '.sort' → logprob: -10.376805305480957
    4. '
' → logprob: -10.751805305480957
    5. ')' → logprob: -11.751805305480957
    6. ',' → logprob: -11.751805305480957
    7. 'import' → logprob: -12.001805305480957
    8. '```' → logprob: -12.126805305480957
    9. 'sorted' → logprob: -12.626805305480957
    10. ' P' → logprob: -12.751805305480957

Token 492: ' On' (ID: 2160)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.719917630311102e-05
    2. 'p' → logprob: -10.250077247619629
    3. ' P' → logprob: -10.625077247619629
    4. '#' → logprob: -12.000077247619629
    5. '
' → logprob: -12.500077247619629
    6. 'import' → logprob: -12.875077247619629
    7. 'sorted' → logprob: -13.875077247619629
    8. '    
' → logprob: -14.250077247619629
    9. 'sort' → logprob: -14.375077247619629
    10. '  
' → logprob: -14.500077247619629

Token 493: ' trie' (ID: 139428)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.027211401611566544
    2. 'P' → logprob: -4.2772111892700195
    3. '=' → logprob: -4.7772111892700195
    4. '.' → logprob: -6.0272111892700195
    5. 'sort' → logprob: -6.4022111892700195
    6. ' =' → logprob: -8.77721118927002
    7. ' P' → logprob: -9.77721118927002
    8. 's' → logprob: -10.02721118927002
    9. ' .' → logprob: -10.15221118927002
    10. '.P' → logprob: -10.65221118927002

Token 494: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06200499087572098
    2. '(P' → logprob: -2.812005043029785
    3. ' P' → logprob: -10.812005043029785
    4. '(' → logprob: -11.937005043029785
    5. 'reverse' → logprob: -11.937005043029785
    6. '(
' → logprob: -14.687005043029785
    7. 'sorted' → logprob: -14.812005043029785
    8. '#' → logprob: -14.937005043029785
    9. 'key' → logprob: -14.937005043029785
    10. '	P' → logprob: -14.937005043029785

Token 495: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4164708852767944
    2. '.sort' → logprob: -1.5414708852767944
    3. 'P' → logprob: -1.6664708852767944
    4. 'reverse' → logprob: -2.041471004486084
    5. '(reverse' → logprob: -2.791471004486084
    6. '(P' → logprob: -3.166471004486084
    7. '.reverse' → logprob: -3.291471004486084
    8. 'sort' → logprob: -3.541471004486084
    9. '(key' → logprob: -4.166471004486084
    10. '()
' → logprob: -4.416471004486084

Token 496: ' valeur' (ID: 41664)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07832072675228119
    2. 'x' → logprob: -2.9533207416534424
    3. 'reverse' → logprob: -3.8283207416534424
    4. '=lambda' → logprob: -7.578320503234863
    5. '(lambda' → logprob: -7.703320503234863
    6. 'key' → logprob: -8.453320503234863
    7. ' lambda' → logprob: -9.078320503234863
    8. 'P' → logprob: -9.328320503234863
    9. 'lam' → logprob: -10.703320503234863
    10. 'value' → logprob: -12.828320503234863

Token 497: ' (' (ID: 350)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.19155877828598022
    2. '.sort' → logprob: -1.816558837890625
    3. '
' → logprob: -4.941558837890625
    4. 'sort' → logprob: -6.066558837890625
    5. ',' → logprob: -7.566558837890625
    6. ' P' → logprob: -7.566558837890625
    7. ',
' → logprob: -8.816558837890625
    8. '=' → logprob: -8.816558837890625
    9. '.reverse' → logprob: -8.816558837890625
    10. '=P' → logprob: -9.191558837890625

Token 498: 'val' (ID: 1105)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3731420934200287
    2. 'P' → logprob: -1.623142123222351
    3. ')' → logprob: -2.7481420040130615
    4. 'reverse' → logprob: -3.4981420040130615
    5. ' key' → logprob: -4.623142242431641
    6. ' P' → logprob: -5.248142242431641
    7. ')
' → logprob: -5.623142242431641
    8. '   ' → logprob: -8.24814224243164
    9. ' reverse' → logprob: -8.62314224243164
    10. ',key' → logprob: -8.62314224243164

Token 499: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.5542171597480774
    2. 'ue' → logprob: -1.1792171001434326
    3. '=lambda' → logprob: -3.0542171001434326
    4. ',' → logprob: -3.9292171001434326
    5. '=' → logprob: -4.179217338562012
    6. 'P' → logprob: -4.179217338562012
    7. ' =' → logprob: -5.554217338562012
    8. 'or' → logprob: -5.804217338562012
    9. ',P' → logprob: -6.179217338562012
    10. '=P' → logprob: -6.179217338562012

Token 500: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21543996036052704
    2. ',' → logprob: -1.7154399156570435
    3. '),' → logprob: -5.340439796447754
    4. ',)' → logprob: -5.340439796447754
    5. 'sort' → logprob: -7.590439796447754
    6. ',key' → logprob: -7.715439796447754
    7. ')x' → logprob: -7.840439796447754
    8. ' )' → logprob: -8.215439796447754
    9. 'asc' → logprob: -8.340439796447754
    10. '=' → logprob: -8.590439796447754

Token 501: ' dé' (ID: 2393)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05889749526977539
    2. 'P' → logprob: -2.9338974952697754
    3. 'lambda' → logprob: -6.433897495269775
    4. 'D' → logprob: -7.058897495269775
    5. '0' → logprob: -7.183897495269775
    6. ' x' → logprob: -8.183897018432617
    7. '[' → logprob: -8.683897018432617
    8. ' P' → logprob: -9.058897018432617
    9. 'dice' → logprob: -10.183897018432617
    10. ' lambda' → logprob: -10.558897018432617

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13278423249721527
    2. ',' → logprob: -2.257784128189087
    3. '),' → logprob: -4.632784366607666
    4. ')]' → logprob: -5.507784366607666
    5. ',)' → logprob: -5.757784366607666
    6. ' )' → logprob: -6.632784366607666
    7. ' ,' → logprob: -7.757784366607666
    8. '[' → logprob: -8.257783889770508
    9. ',x' → logprob: -9.007783889770508
    10. ')x' → logprob: -9.257783889770508

Token 503: ' cro' (ID: 11270)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.005887676030397415
    2. '
' → logprob: -6.130887508392334
    3. '.sort' → logprob: -6.380887508392334
    4. '=P' → logprob: -7.880887508392334
    5. 'sorted' → logprob: -7.880887508392334
    6. 'sort' → logprob: -8.255887985229492
    7. ',' → logprob: -8.505887985229492
    8. ' P' → logprob: -8.630887985229492
    9. ',P' → logprob: -8.755887985229492
    10. '=' → logprob: -8.755887985229492

Token 504: 'issante' (ID: 80061)
  Prédit: 'issant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.3013054430484772
    2. 'issante' → logprob: -2.4263055324554443
    3. 'issance' → logprob: -2.8013055324554443
    4. 'is' → logprob: -3.4263055324554443
    5. 'ss' → logprob: -3.9263055324554443
    6. 'P' → logprob: -4.801305294036865
    7. 'iss' → logprob: -5.551305294036865
    8. 't' → logprob: -5.551305294036865
    9. 'issement' → logprob: -5.676305294036865
    10. 'isement' → logprob: -5.801305294036865

Token 505: '.
' (ID: 558)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.09283174574375153
    2. ']
' → logprob: -2.96783185005188
    3. ']' → logprob: -3.96783185005188
    4. '.sort' → logprob: -5.717831611633301
    5. '
' → logprob: -5.842831611633301
    6. 'sorted' → logprob: -5.842831611633301
    7. ',' → logprob: -6.217831611633301
    8. ' P' → logprob: -6.592831611633301
    9. ';' → logprob: -6.717831611633301
    10. ',P' → logprob: -6.842831611633301

Token 506: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -13.875000953674316
    3. ' P' → logprob: -15.250000953674316
    4. 'sorted' → logprob: -17.375001907348633
    5. '```' → logprob: -17.750001907348633
    6. 'p' → logprob: -18.000001907348633
    7. '.sort' → logprob: -19.000001907348633
    8. '  
' → logprob: -19.250001907348633
    9. '    
' → logprob: -19.500001907348633
    10. '#' → logprob: -19.625001907348633

Token 507: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.000229046301683411
    2. '=' → logprob: -8.500228881835938
    3. '.' → logprob: -10.625228881835938
    4. 'sort' → logprob: -14.875228881835938
    5. '=P' → logprob: -15.000228881835938
    6. ' =' → logprob: -15.125228881835938
    7. '.sorted' → logprob: -16.125228881835938
    8. '=.' → logprob: -16.750228881835938
    9. 'sorted' → logprob: -17.375228881835938
    10. '.=' → logprob: -17.375228881835938

Token 508: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017970389453694224
    2. '(key' → logprob: -6.376797199249268
    3. '()
' → logprob: -9.75179672241211
    4. '(' → logprob: -10.62679672241211
    5. '(reverse' → logprob: -11.75179672241211
    6. 'key' → logprob: -13.50179672241211
    7. '()]' → logprob: -13.75179672241211
    8. ' ()' → logprob: -14.25179672241211
    9. '()

' → logprob: -14.62679672241211
    10. '())' → logprob: -15.62679672241211

Token 509: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1518080234527588
    2. 'visited' → logprob: -1.4018080234527588
    3. '#' → logprob: -2.276808023452759
    4. 'i' → logprob: -2.401808023452759
    5. 'idx' → logprob: -3.026808023452759
    6. 'used' → logprob: -3.151808023452759
    7. 'prev' → logprob: -4.02680778503418
    8. 'from' → logprob: -4.15180778503418
    9. 'Q' → logprob: -4.40180778503418
    10. 'stack' → logprob: -4.65180778503418

Token 510: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5712382793426514
    2. 'visited' → logprob: -1.9462382793426514
    3. 'i' → logprob: -2.9462382793426514
    4. 'from' → logprob: -3.3212382793426514
    5. 'vis' → logprob: -3.4462382793426514
    6. 'idx' → logprob: -3.5712382793426514
    7. 'stack' → logprob: -3.8212382793426514
    8. 'used' → logprob: -3.9462382793426514
    9. 'pos' → logprob: -4.1962385177612305
    10. 'import' → logprob: -4.6962385177612305

Token 511: ' raj' (ID: 46358)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06954619288444519
    2. ' for' → logprob: -3.8195462226867676
    3. 'from' → logprob: -4.319546222686768
    4. ' =' → logprob: -4.444546222686768
    5. '=' → logprob: -5.069546222686768
    6. '#' → logprob: -5.694546222686768
    7. 'def' → logprob: -5.944546222686768
    8. 'import' → logprob: -6.069546222686768
    9. 'visited' → logprob: -6.444546222686768
    10. 'stack' → logprob: -7.319546222686768

Token 512: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -1.1279553291387856e-05
    2. 'out' → logprob: -11.625011444091797
    3. 'outer' → logprob: -13.500011444091797
    4. '#' → logprob: -15.125011444091797
    5. 'outez' → logprob: -15.125011444091797
    6. '=' → logprob: -16.375011444091797
    7. '\' → logprob: -16.500011444091797
    8. 'outes' → logprob: -16.875011444091797
    9. 'o' → logprob: -17.125011444091797
    10. '>' → logprob: -17.375011444091797

Token 513: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.6210018396377563
    2. 'une' → logprob: -1.7460018396377563
    3. '(' → logprob: -1.9960018396377563
    4. 'un' → logprob: -2.496001720428467
    5. '#' → logprob: -2.996001720428467
    6. '
' → logprob: -3.371001720428467
    7. '[]' → logprob: -3.496001720428467
    8. 'a' → logprob: -3.496001720428467
    9. ' un' → logprob: -3.621001720428467
    10. '[' → logprob: -3.746001720428467

Token 514: ' zéro' (ID: 182040)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7949224710464478
    2. ' commentaire' → logprob: -1.5449224710464478
    3. '#' → logprob: -2.919922351837158
    4. 'comment' → logprob: -3.669922351837158
    5. ' espace' → logprob: -3.794922351837158
    6. 'a' → logprob: -4.294922351837158
    7. ' comment' → logprob: -4.294922351837158
    8. 'sent' → logprob: -4.294922351837158
    9. 's' → logprob: -4.544922351837158
    10. 'es' → logprob: -4.544922351837158

Token 515: ' devant' (ID: 37522)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01382190641015768
    2. ')' → logprob: -4.888822078704834
    3. ' ,' → logprob: -5.888822078704834
    4. '<|end|>' → logprob: -6.388822078704834
    5. '0' → logprob: -6.888822078704834
    6. '(' → logprob: -9.013821601867676
    7. ',
' → logprob: -9.138821601867676
    8. '.' → logprob: -9.388821601867676
    9. ']' → logprob: -9.513821601867676
    10. ' at' → logprob: -10.013821601867676

Token 516: ' D' (ID: 415)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03422670066356659
    2. '0' → logprob: -4.409226894378662
    3. '[' → logprob: -4.409226894378662
    4. ',' → logprob: -4.784226894378662
    5. 'D' → logprob: -8.659226417541504
    6. ' P' → logprob: -8.659226417541504
    7. 'p' → logprob: -9.534226417541504
    8. '(' → logprob: -9.659226417541504
    9. '#' → logprob: -9.909226417541504
    10. '_' → logprob: -10.159226417541504

Token 517: ' pour' (ID: 1930)
  Prédit: '.insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.37550994753837585
    2. 'D' → logprob: -1.6255099773406982
    3. ' =' → logprob: -2.5005099773406982
    4. '[' → logprob: -4.000509738922119
    5. '=' → logprob: -5.375509738922119
    6. '.' → logprob: -5.625509738922119
    7. 'insert' → logprob: -5.750509738922119
    8. '=[' → logprob: -6.250509738922119
    9. '([' → logprob: -7.000509738922119
    10. ')' → logprob: -8.000510215759277

Token 518: ' que' (ID: 661)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.354802668094635
    2. 'fac' → logprob: -2.6048026084899902
    3. 'align' → logprob: -2.7298026084899902
    4. ' rendre' → logprob: -3.2298026084899902
    5. ' align' → logprob: -3.4798026084899902
    6. 'p' → logprob: -3.6048026084899902
    7. ' permettre' → logprob: -4.60480260848999
    8. 'D' → logprob: -4.60480260848999
    9. 'faire' → logprob: -4.97980260848999
    10. ' avoir' → logprob: -5.35480260848999

Token 519: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0061114015989005566
    2. 'len' → logprob: -5.2561116218566895
    3. ' D' → logprob: -7.1311116218566895
    4. ' len' → logprob: -10.256111145019531
    5. 'l' → logprob: -11.506111145019531
    6. 'la' → logprob: -11.631111145019531
    7. '#' → logprob: -11.756111145019531
    8. 'P' → logprob: -12.756111145019531
    9. 'index' → logprob: -12.881111145019531
    10. 'd' → logprob: -13.256111145019531

Token 520: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3247348964214325
    2. '=' → logprob: -1.5747349262237549
    3. '.insert' → logprob: -3.574734926223755
    4. '=[' → logprob: -3.574734926223755
    5. '[' → logprob: -4.699734687805176
    6. 'D' → logprob: -5.824734687805176
    7. '.append' → logprob: -7.074734687805176
    8. '=D' → logprob: -7.574734687805176
    9. ' =[' → logprob: -8.324734687805176
    10. 'insert' → logprob: -8.699734687805176

Token 521: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003020961594302207
    2. '
' → logprob: -9.8753023147583
    3. 'N' → logprob: -10.3753023147583
    4. ']' → logprob: -10.3753023147583
    5. 'len' → logprob: -10.3753023147583
    6. 'index' → logprob: -10.6253023147583
    7. '=' → logprob: -10.7503023147583
    8. 'D' → logprob: -10.7503023147583
    9. 'insert' → logprob: -11.2503023147583
    10. ')' → logprob: -11.3753023147583

Token 522: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5307403206825256
    2. ']' → logprob: -1.2807402610778809
    3. ',' → logprob: -2.405740261077881
    4. ']=' → logprob: -4.030740261077881
    5. ' =' → logprob: -4.405740261077881
    6. ' ]' → logprob: -5.905740261077881
    7. 'D' → logprob: -6.030740261077881
    8. '...' → logprob: -6.030740261077881
    9. ' ,' → logprob: -6.905740261077881
    10. '.' → logprob: -7.405740261077881

Token 523: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12790024280548096
    2. ' =' → logprob: -2.6279001235961914
    3. ']' → logprob: -3.8779001235961914
    4. '...' → logprob: -4.502900123596191
    5. '<|end|>' → logprob: -5.002900123596191
    6. ',' → logprob: -5.502900123596191
    7. ')' → logprob: -7.377900123596191
    8. '.' → logprob: -7.377900123596191
    9. ']=' → logprob: -7.502900123596191
    10. '[' → logprob: -7.627900123596191

Token 524: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.16681286692619324
    2. '0' → logprob: -2.4168128967285156
    3. ' D' → logprob: -3.1668128967285156
    4. 'la' → logprob: -4.916812896728516
    5. 'accessible' → logprob: -5.416812896728516
    6. ' accessible' → logprob: -6.041812896728516
    7. 'valid' → logprob: -6.166812896728516
    8. 'le' → logprob: -6.416812896728516
    9. ' ' → logprob: -6.791812896728516
    10. ' la' → logprob: -7.041812896728516

Token 525: ' dé' (ID: 2393)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.35491687059402466
    2. 'D' → logprob: -2.22991681098938
    3. '0' → logprob: -2.60491681098938
    4. 'first' → logprob: -2.85491681098938
    5. ' premier' → logprob: -3.47991681098938
    6. 'val' → logprob: -4.354917049407959
    7. 'd' → logprob: -4.979917049407959
    8. 'élé' → logprob: -6.979917049407959
    9. 'next' → logprob: -7.229917049407959
    10. ' D' → logprob: -7.354917049407959

Token 526: ' pour' (ID: 1930)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.299912452697754
    2. ',' → logprob: -1.549912452697754
    3. '[' → logprob: -1.549912452697754
    4. '0' → logprob: -1.674912452697754
    5. 's' → logprob: -3.799912452697754
    6. 'value' → logprob: -3.924912452697754
    7. ' D' → logprob: -4.049912452697754
    8. ' ' → logprob: -4.174912452697754
    9. '_' → logprob: -4.299912452697754
    10. ' value' → logprob: -5.049912452697754

Token 527: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04718250408768654
    2. '1' → logprob: -4.172182559967041
    3. ' le' → logprob: -4.172182559967041
    4. 'la' → logprob: -4.922182559967041
    5. 'l' → logprob: -5.672182559967041
    6. 'les' → logprob: -5.672182559967041
    7. 's' → logprob: -8.172182083129883
    8. ' ' → logprob: -8.922182083129883
    9. ' la' → logprob: -9.047182083129883
    10. 'index' → logprob: -9.047182083129883

Token 528: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.7176158428192139
    2. 'prem' → logprob: -0.7176158428192139
    3. '1' → logprob: -3.842615842819214
    4. ' sommet' → logprob: -6.342616081237793
    5. 's' → logprob: -7.467616081237793
    6. ' premier' → logprob: -8.092616081237793
    7. 'first' → logprob: -10.842616081237793
    8. '#' → logprob: -10.967616081237793
    9. 'no' → logprob: -11.217616081237793
    10. '```' → logprob: -11.967616081237793

Token 529: ' ' (ID: 220)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3394621014595032
    2. '[' → logprob: -1.7144620418548584
    3. ',' → logprob: -3.0894620418548584
    4. ' D' → logprob: -3.8394620418548584
    5. ' =' → logprob: -3.9644620418548584
    6. '0' → logprob: -4.2144622802734375
    7. '.' → logprob: -5.9644622802734375
    8. 's' → logprob: -6.5894622802734375
    9. '=' → logprob: -6.9644622802734375
    10. ' [' → logprob: -7.5894622802734375

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008433376788161695
    2. ' ' → logprob: -7.125843524932861
    3. '0' → logprob: -10.500843048095703
    4. '[' → logprob: -12.000843048095703
    5. '```' → logprob: -13.500843048095703
    6. ',' → logprob: -14.000843048095703
    7. 'D' → logprob: -14.375843048095703
    8. '`' → logprob: -14.625843048095703
    9. '.' → logprob: -14.750843048095703
    10. '=' → logprob: -14.875843048095703

Token 531: ',' (ID: 11)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.01592843234539032
    2. ',' → logprob: -4.515928268432617
    3. '[' → logprob: -5.890928268432617
    4. ' =' → logprob: -7.015928268432617
    5. '
' → logprob: -7.765928268432617
    6. '=' → logprob: -8.515928268432617
    7. '0' → logprob: -8.640928268432617
    8. ' D' → logprob: -8.765928268432617
    9. ',
' → logprob: -8.890928268432617
    10. '=[' → logprob: -10.515928268432617

Token 532: ' etc' (ID: 5178)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.029242955148220062
    2. '0' → logprob: -4.029242992401123
    3. ' D' → logprob: -4.529242992401123
    4. '[' → logprob: -8.654242515563965
    5. ' ' → logprob: -9.904242515563965
    6. ' [' → logprob: -11.904242515563965
    7. ',' → logprob: -12.404242515563965
    8. '#' → logprob: -13.154242515563965
    9. ' 
' → logprob: -14.029242515563965
    10. '  
' → logprob: -14.404242515563965

Token 533: '.
' (ID: 558)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006581080378964543
    2. '[' → logprob: -7.62565803527832
    3. ' D' → logprob: -8.87565803527832
    4. '0' → logprob: -11.25065803527832
    5. '
' → logprob: -12.37565803527832
    6. ' =' → logprob: -12.37565803527832
    7. ',' → logprob: -12.50065803527832
    8. ' [' → logprob: -13.75065803527832
    9. 'd' → logprob: -14.12565803527832
    10. '.insert' → logprob: -14.62565803527832

Token 534: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0015437841648235917
    2. ' D' → logprob: -6.501543998718262
    3. '[' → logprob: -10.251543998718262
    4. '0' → logprob: -12.501543998718262
    5. ' [' → logprob: -13.126543998718262
    6. ' ' → logprob: -14.751543998718262
    7. 'd' → logprob: -18.251543045043945
    8. '
' → logprob: -18.626543045043945
    9. ' ' → logprob: -18.626543045043945
    10. ' =' → logprob: -18.751543045043945

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06861801445484161
    2. ' =' → logprob: -3.693618059158325
    3. '=[' → logprob: -3.818618059158325
    4. '.insert' → logprob: -3.943618059158325
    5. '[' → logprob: -10.068617820739746
    6. '.' → logprob: -11.068617820739746
    7. '.append' → logprob: -11.068617820739746
    8. 'insert' → logprob: -11.318617820739746
    9. ' =[' → logprob: -11.693617820739746
    10. '[:]' → logprob: -14.068617820739746

Token 536: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003178782993927598
    2. ' [' → logprob: -5.753178596496582
    3. '([' → logprob: -14.128178596496582
    4. '0' → logprob: -15.253178596496582
    5. '=[' → logprob: -17.1281795501709
    6. ' ' → logprob: -17.2531795501709
    7. ' ' → logprob: -18.8781795501709
    8. '[len' → logprob: -19.7531795501709
    9. '[-' → logprob: -20.5031795501709
    10. '​' → logprob: -21.1281795501709

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -17.375001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '०' → logprob: -20.187501907348633
    6. '00' → logprob: -20.187501907348633
    7. ']' → logprob: -20.375001907348633
    8. '٠' → logprob: -20.375001907348633
    9. '০' → logprob: -20.437501907348633
    10. '  ' → logprob: -20.562501907348633

Token 538: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005530327325686812
    2. ']+' → logprob: -7.500553131103516
    3. ' ]' → logprob: -16.125553131103516
    4. ',' → logprob: -20.500553131103516
    5. '+]' → logprob: -20.500553131103516
    6. ']+=' → logprob: -20.625553131103516
    7. '}' → logprob: -21.500553131103516
    8. ')' → logprob: -21.500553131103516
    9. '']' → logprob: -21.500553131103516
    10. ']
' → logprob: -21.875553131103516

Token 539: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017076305812224746
    2. ' +' → logprob: -9.250170707702637
    3. '+D' → logprob: -10.000170707702637
    4. ']+' → logprob: -10.500170707702637
    5. ']' → logprob: -14.000170707702637
    6. ')+' → logprob: -15.750170707702637
    7. '+[' → logprob: -15.750170707702637
    8. '+B' → logprob: -15.750170707702637
    9. '}+' → logprob: -15.750170707702637
    10. '+p' → logprob: -16.625171661376953

Token 540: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.704273118884885e-07
    2. ' D' → logprob: -14.250000953674316
    3. '[D' → logprob: -23.0
    4. '	D' → logprob: -24.0
    5. '_D' → logprob: -24.75
    6. 'list' → logprob: -25.125
    7. '[' → logprob: -25.5
    8. 'd' → logprob: -25.5
    9. 'DA' → logprob: -26.625
    10. '.D' → logprob: -26.75

Token 541: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5271937847137451
    2. 'visited' → logprob: -2.027193784713745
    3. '#' → logprob: -2.527193784713745
    4. 'Q' → logprob: -3.527193784713745
    5. 'from' → logprob: -3.527193784713745
    6. 'dist' → logprob: -3.777193784713745
    7. 'used' → logprob: -4.027194023132324
    8. 'DP' → logprob: -4.027194023132324
    9. 'res' → logprob: -4.902194023132324
    10. 'import' → logprob: -5.152194023132324

Token 542: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.67061448097229
    2. 'dp' → logprob: -1.92061448097229
    3. 'Q' → logprob: -2.42061448097229
    4. '#' → logprob: -3.04561448097229
    5. 'for' → logprob: -3.67061448097229
    6. 'used' → logprob: -3.67061448097229
    7. 'answer' → logprob: -3.92061448097229
    8. 'vis' → logprob: -4.045614242553711
    9. 'ans' → logprob: -4.420614242553711
    10. 'res' → logprob: -4.545614242553711

Token 543: ' On' (ID: 2160)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0016751289367676
    2. 'from' → logprob: -2.0016751289367676
    3. 'dp' → logprob: -2.3766751289367676
    4. 'used' → logprob: -2.5016751289367676
    5. 'import' → logprob: -2.6266751289367676
    6. 'ans' → logprob: -3.0016751289367676
    7. 'dist' → logprob: -3.6266751289367676
    8. 'for' → logprob: -3.7516751289367676
    9. 'vis' → logprob: -3.7516751289367676
    10. '#' → logprob: -3.7516751289367676

Token 544: ' initialise' (ID: 145250)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6439318656921387
    2. 'from' → logprob: -2.3939318656921387
    3. 'import' → logprob: -2.7689318656921387
    4. '#' → logprob: -2.7689318656921387
    5. 'def' → logprob: -3.3939318656921387
    6. '
' → logprob: -3.5189318656921387
    7. 'stack' → logprob: -3.7689318656921387
    8. 'for' → logprob: -3.8939318656921387
    9. 'continue' → logprob: -4.143931865692139
    10. 'vis' → logprob: -4.643931865692139

Token 545: ' une' (ID: 2463)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9725521802902222
    2. 'dp' → logprob: -1.2225521802902222
    3. 'dist' → logprob: -2.4725522994995117
    4. 'used' → logprob: -2.4725522994995117
    5. 'ans' → logprob: -2.9725522994995117
    6. 'vis' → logprob: -3.4725522994995117
    7. 'res' → logprob: -4.222552299499512
    8. 'seen' → logprob: -4.722552299499512
    9. 'Q' → logprob: -5.472552299499512
    10. 'done' → logprob: -5.597552299499512

Token 546: ' liste' (ID: 31719)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.17686086893081665
    2. 'stack' → logprob: -3.176860809326172
    3. 'vis' → logprob: -3.301860809326172
    4. 'deque' → logprob: -3.426860809326172
    5. 'dist' → logprob: -4.676860809326172
    6. 'list' → logprob: -4.801860809326172
    7. 'queue' → logprob: -5.051860809326172
    8. 'liste' → logprob: -5.301860809326172
    9. 'from' → logprob: -5.926860809326172
    10. 'distance' → logprob: -6.176860809326172

Token 547: ' DEC' (ID: 65456)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.48616454005241394
    2. 'dp' → logprob: -1.4861645698547363
    3. 'vis' → logprob: -2.8611645698547363
    4. 'used' → logprob: -3.2361645698547363
    5. 'dist' → logprob: -4.736164569854736
    6. 'visit' → logprob: -5.111164569854736
    7. '#' → logprob: -5.236164569854736
    8. 'de' → logprob: -5.236164569854736
    9. 'V' → logprob: -5.361164569854736
    10. 'ans' → logprob: -5.486164569854736

Token 548: 'ID' (ID: 1240)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8963583707809448
    2. '=[' → logprob: -1.1463583707809448
    3. '=' → logprob: -1.7713583707809448
    4. 'D' → logprob: -3.6463584899902344
    5. '=[]' → logprob: -4.396358489990234
    6. 'R' → logprob: -4.521358489990234
    7. 'ODE' → logprob: -4.771358489990234
    8. 'ED' → logprob: -5.146358489990234
    9. 'E' → logprob: -5.646358489990234
    10. 'C' → logprob: -5.896358489990234

Token 549: 'ED' (ID: 2252)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.14754505455493927
    2. 'ED' → logprob: -3.272545099258423
    3. '=[' → logprob: -3.522545099258423
    4. ' =' → logprob: -3.647545099258423
    5. '=' → logprob: -3.772545099258423
    6. '[' → logprob: -4.522544860839844
    7. 'e' → logprob: -5.897544860839844
    8. 'ed' → logprob: -5.897544860839844
    9. '=[]' → logprob: -6.522544860839844
    10. 'ES' → logprob: -7.897544860839844

Token 550: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08983215689659119
    2. ' =' → logprob: -2.464832067489624
    3. '=[' → logprob: -7.089832305908203
    4. '=[]' → logprob: -10.589832305908203
    5. '[' → logprob: -11.464832305908203
    6. 'DEC' → logprob: -12.714832305908203
    7. 'de' → logprob: -12.714832305908203
    8. '=[]
' → logprob: -12.839832305908203
    9. 'dec' → logprob: -13.214832305908203
    10. ',' → logprob: -13.839832305908203

Token 551: ' mar' (ID: 2674)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.31228339672088623
    2. '[' → logprob: -1.5622833967208862
    3. '[M' → logprob: -2.937283515930176
    4. '[i' → logprob: -5.562283515930176
    5. 'False' → logprob: -6.937283515930176
    6. 'N' → logprob: -7.937283515930176
    7. '[len' → logprob: -8.437283515930176
    8. ' [' → logprob: -9.562283515930176
    9. 'M' → logprob: -10.687283515930176
    10. '0' → logprob: -10.812283515930176

Token 552: 'quer' (ID: 8054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.220018208026886
    2. 'e' → logprob: -2.220018148422241
    3. '[e' → logprob: -2.970018148422241
    4. '[k' → logprob: -4.22001838684082
    5. '[i' → logprob: -4.72001838684082
    6. '[len' → logprob: -5.47001838684082
    7. 'ange' → logprob: -6.22001838684082
    8. 'ge' → logprob: -6.72001838684082
    9. '[N' → logprob: -7.09501838684082
    10. 'k' → logprob: -7.22001838684082

Token 553: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5474212765693665
    2. 'False' → logprob: -1.7974212169647217
    3. 'les' → logprob: -2.0474212169647217
    4. '[N' → logprob: -2.5474212169647217
    5. 'le' → logprob: -3.7974212169647217
    6. 'True' → logprob: -5.297421455383301
    7. '```' → logprob: -6.047421455383301
    8. 'which' → logprob: -6.172421455383301
    9. ' les' → logprob: -6.172421455383301
    10. '[]' → logprob: -6.422421455383301

Token 554: ' "' (ID: 392)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.010395030491054058
    2. ' False' → logprob: -5.260395050048828
    3. 'True' → logprob: -5.510395050048828
    4. '[' → logprob: -7.385395050048828
    5. 'visited' → logprob: -8.010395050048828
    6. ' True' → logprob: -9.885395050048828
    7. '0' → logprob: -10.135395050048828
    8. '```' → logprob: -11.010395050048828
    9. 'F' → logprob: -12.010395050048828
    10. 'state' → logprob: -12.135395050048828

Token 555: 'cou' (ID: 79019)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.034290291368961334
    2. ' False' → logprob: -4.034290313720703
    3. 'True' → logprob: -4.284290313720703
    4. 'visited' → logprob: -6.534290313720703
    5. ' True' → logprob: -7.284290313720703
    6. '```' → logprob: -10.284290313720703
    7. ' visited' → logprob: -11.034290313720703
    8. 'dec' → logprob: -12.034290313720703
    9. '0' → logprob: -12.534290313720703
    10. '[' → logprob: -12.784290313720703

Token 556: 'leur' (ID: 21303)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.6949114799499512
    2. 'leur' → logprob: -0.8199114799499512
    3. 'n' → logprob: -3.069911479949951
    4. 'leurs' → logprob: -4.694911479949951
    5. 'le' → logprob: -6.319911479949951
    6. 'r' → logprob: -6.819911479949951
    7. 'nts' → logprob: -7.194911479949951
    8. 'nte' → logprob: -7.694911479949951
    9. 'rant' → logprob: -8.44491195678711
    10. 'p' → logprob: -9.94491195678711

Token 557: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010116562247276306
    2. '[' → logprob: -5.7601165771484375
    3. '_' → logprob: -5.7601165771484375
    4. '[]' → logprob: -6.8851165771484375
    5. ' s' → logprob: -7.3851165771484375
    6. '[s' → logprob: -7.8851165771484375
    7. 'd' → logprob: -8.010116577148438
    8. '"' → logprob: -8.135116577148438
    9. ']' → logprob: -8.385116577148438
    10. '_s' → logprob: -8.760116577148438

Token 558: ' ou' (ID: 2031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16351555287837982
    2. '[' → logprob: -3.038515567779541
    3. '=' → logprob: -3.163515567779541
    4. 's' → logprob: -3.413515567779541
    5. '=[' → logprob: -4.038515567779541
    6. ',' → logprob: -6.663515567779541
    7. '[]' → logprob: -6.663515567779541
    8. 'des' → logprob: -6.788515567779541
    9. '[:]' → logprob: -6.913515567779541
    10. '   ' → logprob: -7.413515567779541

Token 559: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11733930557966232
    2. 'le' → logprob: -2.4923393726348877
    3. 'la' → logprob: -4.367339134216309
    4. 'stat' → logprob: -5.617339134216309
    5. 'True' → logprob: -5.867339134216309
    6. 'False' → logprob: -5.867339134216309
    7. '0' → logprob: -6.742339134216309
    8. 'state' → logprob: -6.992339134216309
    9. 'status' → logprob: -7.117339134216309
    10. '#' → logprob: -7.117339134216309

Token 560: ''état' (ID: 116357)
  Prédit: ''état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.035834383219480515
    2. 'ét' → logprob: -3.535834312438965
    3. '#' → logprob: -6.160834312438965
    4. '’état' → logprob: -6.285834312438965
    5. 'etat' → logprob: -7.035834312438965
    6. ' état' → logprob: -7.660834312438965
    7. 'stat' → logprob: -8.160834312438965
    8. ''et' → logprob: -9.285834312438965
    9. ''ét' → logprob: -9.285834312438965
    10. '"' → logprob: -9.785834312438965

Token 561: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30009764432907104
    2. '=' → logprob: -2.050097703933716
    3. '[' → logprob: -2.925097703933716
    4. '=[' → logprob: -3.175097703933716
    5. 'de' → logprob: -4.550097465515137
    6. 'des' → logprob: -5.050097465515137
    7. '[-' → logprob: -5.800097465515137
    8. 's' → logprob: -5.925097465515137
    9. '```' → logprob: -6.300097465515137
    10. ' des' → logprob: -6.550097465515137

Token 562: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.0681774914264679
    2. 'ch' → logprob: -2.9431774616241455
    3. ' chaque' → logprob: -4.943177700042725
    4. 'each' → logprob: -5.443177700042725
    5. '```' → logprob: -7.818177700042725
    6. 'la' → logprob: -8.443177223205566
    7. 'Chaque' → logprob: -8.693177223205566
    8. 's' → logprob: -9.068177223205566
    9. '[' → logprob: -9.318177223205566
    10. 'd' → logprob: -9.318177223205566

Token 563: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.6225281953811646
    2. 'node' → logprob: -1.1225281953811646
    3. ' sommet' → logprob: -2.622528076171875
    4. 's' → logprob: -3.122528076171875
    5. 'no' → logprob: -4.872528076171875
    6. 'vertex' → logprob: -4.872528076171875
    7. ' node' → logprob: -6.747528076171875
    8. '```' → logprob: -6.872528076171875
    9. 'i' → logprob: -6.997528076171875
    10. ' noe' → logprob: -7.247528076171875

Token 564: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48828616738319397
    2. 'DEC' → logprob: -1.4882861375808716
    3. '=' → logprob: -1.9882861375808716
    4. '[' → logprob: -4.363286018371582
    5. '=[' → logprob: -4.863286018371582
    6. ',' → logprob: -6.863286018371582
    7. 'dec' → logprob: -7.238286018371582
    8. ' DEC' → logprob: -7.613286018371582
    9. '_DEC' → logprob: -8.488286018371582
    10. ' [' → logprob: -9.488286018371582

Token 565: '#' (ID: 2)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0001628956088097766
    2. '[' → logprob: -9.000163078308105
    3. ' DEC' → logprob: -10.500163078308105
    4. '_DEC' → logprob: -12.500163078308105
    5. 'dec' → logprob: -12.500163078308105
    6. '=' → logprob: -14.500163078308105
    7. ' =' → logprob: -14.500163078308105
    8. '#' → logprob: -14.625163078308105
    9. 'DE' → logprob: -14.875163078308105
    10. 'D' → logprob: -15.125163078308105

Token 566: ' Elle' (ID: 21300)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -1.6240566083070007e-06
    2. '#' → logprob: -14.000001907348633
    3. '[' → logprob: -15.000001907348633
    4. 'DE' → logprob: -15.875001907348633
    5. '
' → logprob: -16.250001907348633
    6. '0' → logprob: -16.375001907348633
    7. 'D' → logprob: -16.625001907348633
    8. 'DEP' → logprob: -17.125001907348633
    9. '_DEC' → logprob: -17.250001907348633
    10. ' DEC' → logprob: -17.375001907348633

Token 567: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197608634829521
    2. ' =' → logprob: -2.811976194381714
    3. '=[' → logprob: -11.936976432800293
    4. '[' → logprob: -13.936976432800293
    5. '=[]' → logprob: -14.686976432800293
    6. '.=' → logprob: -15.936976432800293
    7. '=['' → logprob: -16.311975479125977
    8. '.' → logprob: -16.686975479125977
    9. ' =[' → logprob: -17.061975479125977
    10. '＝' → logprob: -17.436975479125977

Token 568: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07189031690359116
    2. '[N' → logprob: -2.821890354156494
    3. '['' → logprob: -5.196890354156494
    4. ' [' → logprob: -6.571890354156494
    5. 'N' → logprob: -6.696890354156494
    6. '["' → logprob: -6.946890354156494
    7. '0' → logprob: -7.821890354156494
    8. '[-' → logprob: -8.571889877319336
    9. ' N' → logprob: -9.446889877319336
    10. '[len' → logprob: -10.196889877319336

Token 569: ' chaînes' (ID: 179904)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056430086493492126
    2. 'None' → logprob: -3.6814301013946533
    3. 'False' → logprob: -4.931429862976074
    4. '[' → logprob: -5.056429862976074
    5. '"' → logprob: -5.181429862976074
    6. '-' → logprob: -5.931429862976074
    7. 'zeros' → logprob: -6.306429862976074
    8. 'N' → logprob: -6.556429862976074
    9. 'len' → logprob: -6.806429862976074
    10. ''' → logprob: -6.806429862976074

Token 570: ' v' (ID: 323)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -0.30888813734054565
    2. '['' → logprob: -1.4338881969451904
    3. '(["' → logprob: -4.933887958526611
    4. '(['' → logprob: -5.183887958526611
    5. '=["' → logprob: -6.058887958526611
    6. '=['' → logprob: -6.183887958526611
    7. '[' → logprob: -6.933887958526611
    8. 'de' → logprob: -7.058887958526611
    9. ' ["' → logprob: -7.058887958526611
    10. '=' → logprob: -7.183887958526611

Token 571: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.25863632559776306
    2. 'al' → logprob: -2.383636236190796
    3. 'ideo' → logprob: -2.758636236190796
    4. 'ides' → logprob: -3.508636236190796
    5. '['' → logprob: -4.383636474609375
    6. '["' → logprob: -4.508636474609375
    7. 'idé' → logprob: -4.883636474609375
    8. 'id' → logprob: -5.883636474609375
    9. 'u' → logprob: -6.508636474609375
    10. '[' → logprob: -7.008636474609375

Token 572: ' au' (ID: 2791)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '["' → logprob: -1.3488885164260864
    2. '['' → logprob: -1.4738885164260864
    3. 'for' → logprob: -1.5988885164260864
    4. '(['' → logprob: -2.098888397216797
    5. ' for' → logprob: -2.723888397216797
    6. '(["' → logprob: -3.223888397216797
    7. ',' → logprob: -3.473888397216797
    8. '""' → logprob: -4.848888397216797
    9. 'DEC' → logprob: -4.973888397216797
    10. '(' → logprob: -5.348888397216797

Token 573: ' départ' (ID: 32693)
  Prédit: ' départ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' départ' → logprob: -0.7229357957839966
    2. 'N' → logprob: -1.8479357957839966
    3. 'dé' → logprob: -1.8479357957839966
    4. 'depart' → logprob: -2.347935676574707
    5. '['' → logprob: -3.597935676574707
    6. 'start' → logprob: -3.847935676574707
    7. '[' → logprob: -4.097935676574707
    8. '[N' → logprob: -4.597935676574707
    9. '```' → logprob: -5.222935676574707
    10. '["' → logprob: -5.597935676574707

Token 574: ';' (ID: 26)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.10851779580116272
    2. ',' → logprob: -2.60851788520813
    3. '["' → logprob: -4.983517646789551
    4. 'dec' → logprob: -5.108517646789551
    5. '['' → logprob: -5.358517646789551
    6. 'for' → logprob: -5.483517646789551
    7. ' for' → logprob: -6.358517646789551
    8. ']' → logprob: -6.858517646789551
    9. ' DEC' → logprob: -6.858517646789551
    10. '
' → logprob: -7.233517646789551

Token 575: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0008740628836676478
    2. ' DEC' → logprob: -7.250874042510986
    3. '['' → logprob: -9.375874519348145
    4. '_DEC' → logprob: -11.000874519348145
    5. 'dec' → logprob: -11.000874519348145
    6. '["' → logprob: -11.125874519348145
    7. 'DE' → logprob: -11.500874519348145
    8. 'Dec' → logprob: -11.750874519348145
    9. '""' → logprob: -12.625874519348145
    10. '#' → logprob: -13.375874519348145

Token 576: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.00033415461075492203
    2. 'IDE' → logprob: -9.000333786010742
    3. 'I' → logprob: -9.125333786010742
    4. 'ED' → logprob: -10.125333786010742
    5. 'IED' → logprob: -11.875333786010742
    6. 'IDs' → logprob: -11.875333786010742
    7. 'IC' → logprob: -12.000333786010742
    8. 'IDES' → logprob: -12.125333786010742
    9. ' =' → logprob: -12.375333786010742
    10. 'IDEO' → logprob: -12.625333786010742

Token 577: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -4.320199877838604e-07
    2. 'E' → logprob: -16.125
    3. '=' → logprob: -16.75
    4. '
' → logprob: -17.25
    5. '[' → logprob: -17.625
    6. 'ed' → logprob: -17.625
    7. '```' → logprob: -18.0
    8. 'D' → logprob: -18.75
    9. '{' → logprob: -18.875
    10. ' =' → logprob: -18.875

Token 578: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313285231590271
    2. '=' → logprob: -1.313285231590271
    3. '[' → logprob: -11.563284873962402
    4. '=[' → logprob: -11.813284873962402
    5. ' ' → logprob: -13.563284873962402
    6. '.append' → logprob: -14.188284873962402
    7. '=['' → logprob: -14.188284873962402
    8. '=[]' → logprob: -14.188284873962402
    9. '```' → logprob: -14.688284873962402
    10. ']' → logprob: -14.813284873962402

Token 579: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018779201433062553
    2. ']=' → logprob: -4.518779277801514
    3. '=' → logprob: -4.893779277801514
    4. ' =' → logprob: -8.768778800964355
    5. ' ]' → logprob: -10.768778800964355
    6. '[' → logprob: -11.768778800964355
    7. ']='' → logprob: -12.018778800964355
    8. ']="' → logprob: -12.768778800964355
    9. ']+=' → logprob: -13.018778800964355
    10. '].' → logprob: -13.268778800964355

Token 580: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02976691536605358
    2. ' =' → logprob: -3.529766798019409
    3. '=''' → logprob: -12.529767036437988
    4. '=""' → logprob: -12.654767036437988
    5. '=[]' → logprob: -13.154767036437988
    6. ']' → logprob: -13.654767036437988
    7. ' ' → logprob: -13.779767036437988
    8. '=
' → logprob: -13.779767036437988
    9. ',' → logprob: -14.029767036437988
    10. '<|end|>' → logprob: -14.154767036437988

Token 581: 'ud' (ID: 527)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025426844134926796
    2. ' =' → logprob: -3.9004268646240234
    3. '=""' → logprob: -5.775426864624023
    4. '"' → logprob: -7.150426864624023
    5. '=''' → logprob: -7.900426864624023
    6. '""' → logprob: -8.650426864624023
    7. ''' → logprob: -8.900426864624023
    8. '<|end|>' → logprob: -9.900426864624023
    9. '"""' → logprob: -10.400426864624023
    10. '=[]' → logprob: -10.400426864624023

Token 582: 'ra' (ID: 614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.5594285726547241
    2. '""' → logprob: -1.4344285726547241
    3. ''' → logprob: -1.9344285726547241
    4. '=' → logprob: -3.8094286918640137
    5. '"' → logprob: -4.059428691864014
    6. '=""' → logprob: -6.059428691864014
    7. 'e' → logprob: -6.809428691864014
    8. ''''' → logprob: -6.809428691864014
    9. '=''' → logprob: -7.059428691864014
    10. '"""' → logprob: -8.059428215026855

Token 583: ' typ' (ID: 5378)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.390438050031662
    2. '''' → logprob: -1.5154380798339844
    3. ''' → logprob: -2.5154380798339844
    4. '"' → logprob: -4.015438079833984
    5. ' ""' → logprob: -6.390438079833984
    6. ' ''' → logprob: -7.515438079833984
    7. ''t' → logprob: -7.640438079833984
    8. ''s' → logprob: -7.765438079833984
    9. ''un' → logprob: -8.890438079833984
    10. ''y' → logprob: -9.390438079833984

Token 584: 'iquement' (ID: 83934)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.771897554397583
    2. ''e' → logprob: -0.771897554397583
    3. '''' → logprob: -3.396897554397583
    4. '""' → logprob: -3.396897554397583
    5. '"' → logprob: -4.771897315979004
    6. 'es' → logprob: -9.021897315979004
    7. ''é' → logprob: -9.896897315979004
    8. ''es' → logprob: -10.396897315979004
    9. ''' → logprob: -10.646897315979004
    10. ''o' → logprob: -11.771897315979004

Token 585: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.30035465955734253
    2. '''' → logprob: -2.1753547191619873
    3. ''' → logprob: -2.3003547191619873
    4. '"' → logprob: -3.1753547191619873
    5. ''s' → logprob: -7.425354480743408
    6. ' ""' → logprob: -7.425354480743408
    7. ''t' → logprob: -7.550354480743408
    8. ''un' → logprob: -8.425354957580566
    9. ''e' → logprob: -9.175354957580566
    10. ''y' → logprob: -9.175354957580566

Token 586: 'B' (ID: 33)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.5982741117477417
    2. '"' → logprob: -1.0982741117477417
    3. ''' → logprob: -2.7232742309570312
    4. '''' → logprob: -4.348274230957031
    5. 'red' → logprob: -5.098274230957031
    6. '"B' → logprob: -5.973274230957031
    7. 'no' → logprob: -6.098274230957031
    8. 'white' → logprob: -6.098274230957031
    9. 'black' → logprob: -6.098274230957031
    10. 'None' → logprob: -6.223274230957031

Token 587: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4025362432003021
    2. 'L' → logprob: -1.1525362730026245
    3. 'W' → logprob: -5.027536392211914
    4. '"L' → logprob: -6.027536392211914
    5. 'l' → logprob: -6.152536392211914
    6. '"W' → logprob: -6.652536392211914
    7. '""' → logprob: -7.277536392211914
    8. '"]' → logprob: -7.652536392211914
    9. 'lack' → logprob: -7.652536392211914
    10. 'R' → logprob: -7.777536392211914

Token 588: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08537944406270981
    2. '"' → logprob: -3.7103793621063232
    3. '<|end|>' → logprob: -3.8353793621063232
    4. ',' → logprob: -3.9603793621063232
    5. ' "' → logprob: -5.460379600524902
    6. 'or' → logprob: -5.710379600524902
    7. ' ' → logprob: -5.960379600524902
    8. ' ou' → logprob: -6.835379600524902
    9. ' for' → logprob: -7.085379600524902
    10. '"B' → logprob: -7.210379600524902

Token 589: ' "' (ID: 392)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.16020533442497253
    2. '"' → logprob: -2.035205364227295
    3. '"A' → logprob: -5.285205364227295
    4. 'R' → logprob: -5.410205364227295
    5. ' "' → logprob: -5.785205364227295
    6. ' ' → logprob: -6.285205364227295
    7. '"N' → logprob: -7.410205364227295
    8. 'W' → logprob: -7.410205364227295
    9. ''' → logprob: -8.285204887390137
    10. '"G' → logprob: -8.410204887390137

Token 590: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.25880274176597595
    2. 'R' → logprob: -1.5088027715682983
    3. 'A' → logprob: -5.508802890777588
    4. 'N' → logprob: -7.508802890777588
    5. ' W' → logprob: -7.633802890777588
    6. 'G' → logprob: -7.883802890777588
    7. ' ' → logprob: -8.13380241394043
    8. '
' → logprob: -8.50880241394043
    9. ' R' → logprob: -9.00880241394043
    10. '"' → logprob: -9.13380241394043

Token 591: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005421581212431192
    2. ' "' → logprob: -5.3804216384887695
    3. '"]' → logprob: -8.00542163848877
    4. '".' → logprob: -8.38042163848877
    5. '"
' → logprob: -8.88042163848877
    6. ']' → logprob: -10.63042163848877
    7. ']"' → logprob: -11.00542163848877
    8. ' "]' → logprob: -11.38042163848877
    9. '```' → logprob: -11.50542163848877
    10. '",' → logprob: -11.75542163848877

Token 592: ' plus' (ID: 2932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6979231834411621
    2. 'DEC' → logprob: -0.9479231834411621
    3. '=' → logprob: -2.322923183441162
    4. ',' → logprob: -5.947923183441162
    5. 'dec' → logprob: -5.947923183441162
    6. ' DEC' → logprob: -6.072923183441162
    7. ']' → logprob: -6.322923183441162
    8. '.' → logprob: -6.947923183441162
    9. ' for' → logprob: -6.947923183441162
    10. 'for' → logprob: -6.947923183441162

Token 593: ' tard' (ID: 30225)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.5057929754257202
    2. 'des' → logprob: -1.7557929754257202
    3. '[' → logprob: -2.0057930946350098
    4. '"' → logprob: -2.2557930946350098
    5. 'une' → logprob: -2.7557930946350098
    6. 'un' → logprob: -3.2557930946350098
    7. ' une' → logprob: -3.2557930946350098
    8. '[i' → logprob: -3.6307930946350098
    9. ' des' → logprob: -3.7557930946350098
    10. ' un' → logprob: -3.8807930946350098

Token 594: '.
' (ID: 558)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0006582272471860051
    2. ' DEC' → logprob: -8.25065803527832
    3. '
' → logprob: -8.75065803527832
    4. '_DEC' → logprob: -9.37565803527832
    5. ',' → logprob: -9.62565803527832
    6. 'dec' → logprob: -10.50065803527832
    7. '#' → logprob: -11.12565803527832
    8. '.
' → logprob: -11.75065803527832
    9. '```' → logprob: -11.87565803527832
    10. '.' → logprob: -12.12565803527832

Token 595: 'DEC' (ID: 57617)
  Prédit: 'DEC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.500000953674316
    3. '_DEC' → logprob: -15.250000953674316
    4. ' DEC' → logprob: -15.625000953674316
    5. 'dec' → logprob: -16.125001907348633
    6. '```' → logprob: -16.375001907348633
    7. '

' → logprob: -18.250001907348633
    8. '#' → logprob: -18.875001907348633
    9. '
' → logprob: -18.875001907348633
    10. '``' → logprob: -19.000001907348633

Token 596: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -2.856408536899835e-05
    2. 'IDE' → logprob: -11.250028610229492
    3. 'ED' → logprob: -11.375028610229492
    4. 'I' → logprob: -13.375028610229492
    5. 'IDES' → logprob: -14.250028610229492
    6. 'IED' → logprob: -15.000028610229492
    7. 'IC' → logprob: -15.375028610229492
    8. '_ID' → logprob: -15.375028610229492
    9. ' =' → logprob: -15.750028610229492
    10. '_' → logprob: -15.875028610229492

Token 597: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: 0.0
    2. '=' → logprob: -18.0
    3. '```' → logprob: -18.5
    4. '_' → logprob: -18.625
    5. 'E' → logprob: -18.75
    6. '[' → logprob: -18.875
    7. 'ed' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. '_ED' → logprob: -19.0
    10. '{' → logprob: -19.25

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022838652133942
    2. ' =' → logprob: -1.9102283716201782
    3. '=[' → logprob: -12.535228729248047
    4. '[' → logprob: -15.660228729248047
    5. '=[]' → logprob: -15.660228729248047
    6. ' =[' → logprob: -16.410228729248047
    7. ' ' → logprob: -16.660228729248047
    8. '＝' → logprob: -16.785228729248047
    9. '=['' → logprob: -16.785228729248047
    10. '   ' → logprob: -17.785228729248047

Token 599: ' ["' (ID: 9129)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.6932051777839661
    2. '["' → logprob: -0.6932051777839661
    3. ' ['' → logprob: -10.068204879760742
    4. ' ["' → logprob: -11.818204879760742
    5. '[' → logprob: -11.943204879760742
    6. '(['' → logprob: -14.568204879760742
    7. '['_' → logprob: -15.068204879760742
    8. '["_' → logprob: -15.193204879760742
    9. '[]' → logprob: -15.568204879760742
    10. '(["' → logprob: -15.693204879760742

Token 600: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.04864992946386337
    2. '"' → logprob: -3.048650026321411
    3. '""' → logprob: -9.798649787902832
    4. '']' → logprob: -13.048649787902832
    5. ' "]' → logprob: -13.048649787902832
    6. '"]
' → logprob: -14.673649787902832
    7. ' "' → logprob: -14.798649787902832
    8. '",' → logprob: -14.798649787902832
    9. '"}' → logprob: -15.298649787902832
    10. '")' → logprob: -15.423649787902832

Token 601: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025510279461741447
    2. 'for' → logprob: -4.400510311126709
    3. '+' → logprob: -4.775510311126709
    4. ',' → logprob: -6.525510311126709
    5. '*' → logprob: -7.150510311126709
    6. ']' → logprob: -7.275510311126709
    7. ' +' → logprob: -7.525510311126709
    8. ')' → logprob: -8.27550983428955
    9. ' *' → logprob: -8.52550983428955
    10. ' (' → logprob: -9.27550983428955

Token 602: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.007933685556054115
    2. ' (' → logprob: -4.882933616638184
    3. '(' → logprob: -8.132933616638184
    4. '((' → logprob: -11.257933616638184
    5. '(n' → logprob: -11.632933616638184
    6. '0' → logprob: -12.132933616638184
    7. '(len' → logprob: -12.882933616638184
    8. ' ' → logprob: -13.507933616638184
    9. '(NS' → logprob: -13.882933616638184
    10. '   ' → logprob: -14.757933616638184

Token 603: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.607391408877447e-05
    2. '(N' → logprob: -10.875036239624023
    3. ' N' → logprob: -11.000036239624023
    4. '(' → logprob: -15.250036239624023
    5. ' (' → logprob: -16.250036239624023
    6. '0' → logprob: -18.125036239624023
    7. '   ' → logprob: -19.625036239624023
    8. ' ' → logprob: -19.750036239624023
    9. '	N' → logprob: -20.125036239624023
    10. 'n' → logprob: -20.500036239624023

Token 604: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025078821927309036
    2. ' +' → logprob: -6.00250768661499
    3. '+
' → logprob: -10.377508163452148
    4. '
' → logprob: -15.002508163452148
    5. ' +
' → logprob: -15.127508163452148
    6. '1' → logprob: -15.127508163452148
    7. '+

' → logprob: -16.75250816345215
    8. '＋' → logprob: -17.00250816345215
    9. ' ' → logprob: -17.12750816345215
    10. ' plus' → logprob: -17.37750816345215

Token 605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.5000057220459
    4. '2' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.6250057220459
    6. '
' → logprob: -18.6250057220459
    7. '１' → logprob: -18.7500057220459
    8. '0' → logprob: -19.7500057220459
    9. '7' → logprob: -19.9375057220459
    10. '``' → logprob: -20.0000057220459

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -17.625
    4. '2' → logprob: -18.25
    5. '   ' → logprob: -18.875
    6. '
' → logprob: -19.375
    7. '１' → logprob: -19.375
    8. '[' → logprob: -19.75
    9. '+' → logprob: -19.75
    10. '0' → logprob: -19.8125

Token 607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036037206882610917
    2. ']' → logprob: -8.125360488891602
    3. ')]' → logprob: -9.875360488891602
    4. ')
' → logprob: -11.875360488891602
    5. '])' → logprob: -13.375360488891602
    6. ' )' → logprob: -13.875360488891602
    7. '<|end|>' → logprob: -14.000360488891602
    8. ')#' → logprob: -14.750360488891602
    9. '#' → logprob: -14.875360488891602
    10. ')

' → logprob: -15.250360488891602

Token 608: '#' (ID: 2)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.2812573313713074
    2. '[' → logprob: -2.281257390975952
    3. 'for' → logprob: -2.781257390975952
    4. '#' → logprob: -3.031257390975952
    5. 'D' → logprob: -3.781257390975952
    6. '.' → logprob: -6.281257152557373
    7. '[:]' → logprob: -6.781257152557373
    8. '=' → logprob: -7.156257152557373
    9. '```' → logprob: -7.281257152557373
    10. '[
' → logprob: -7.406257152557373

Token 609: ' DIS' (ID: 21047)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14587752521038055
    2. 'DEC' → logprob: -2.1458775997161865
    3. 'P' → logprob: -4.270877361297607
    4. 'D' → logprob: -6.145877361297607
    5. '#' → logprob: -6.395877361297607
    6. '[' → logprob: -7.895877361297607
    7. 'import' → logprob: -9.395877838134766
    8. ' for' → logprob: -9.395877838134766
    9. 'from' → logprob: -9.520877838134766
    10. 'dec' → logprob: -10.020877838134766

Token 610: ' est' (ID: 893)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.012375781312584877
    2. 'C' → logprob: -5.512375831604004
    3. 'Q' → logprob: -5.637375831604004
    4. ' =' → logprob: -6.387375831604004
    5. '=' → logprob: -7.262375831604004
    6. 'COUNT' → logprob: -8.262375831604004
    7. 'S' → logprob: -8.387375831604004
    8. 'K' → logprob: -8.637375831604004
    9. 'Covered' → logprob: -8.762375831604004
    10. 'TA' → logprob: -9.137375831604004

Token 611: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09060507267713547
    2. '[-' → logprob: -2.4656050205230713
    3. '["' → logprob: -7.09060525894165
    4. '[]' → logprob: -8.715604782104492
    5. '[D' → logprob: -8.715604782104492
    6. ' [' → logprob: -8.840604782104492
    7. '{}' → logprob: -9.840604782104492
    8. '[a' → logprob: -9.965604782104492
    9. '[int' → logprob: -9.965604782104492
    10. '[s' → logprob: -10.590604782104492

Token 612: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01716425083577633
    2. '[]' → logprob: -5.01716423034668
    3. 'default' → logprob: -5.89216423034668
    4. '[-' → logprob: -5.89216423034668
    5. ' [' → logprob: -6.64216423034668
    6. '{}' → logprob: -7.26716423034668
    7. 'deque' → logprob: -7.39216423034668
    8. '[:]' → logprob: -7.76716423034668
    9. 'dict' → logprob: -8.01716423034668
    10. '["' → logprob: -8.01716423034668

Token 613: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8430088758468628
    2. ' =' → logprob: -0.9680088758468628
    3. '[' → logprob: -2.0930089950561523
    4. '=[' → logprob: -3.9680089950561523
    5. '([' → logprob: -3.9680089950561523
    6. '(' → logprob: -4.093008995056152
    7. '=[]' → logprob: -5.718008995056152
    8. 'of' → logprob: -5.843008995056152
    9. ' of' → logprob: -6.218008995056152
    10. '<|end|>' → logprob: -6.843008995056152

Token 614: ' enregistr' (ID: 76845)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005308585241436958
    2. ' =' → logprob: -5.255308628082275
    3. '=[' → logprob: -10.380308151245117
    4. '=[]' → logprob: -10.880308151245117
    5. '[' → logprob: -11.755308151245117
    6. 'dis' → logprob: -11.755308151245117
    7. '=
' → logprob: -13.380308151245117
    8. 'is' → logprob: -13.880308151245117
    9. '=[]
' → logprob: -13.880308151245117
    10. 'import' → logprob: -14.505308151245117

Token 615: 'era' (ID: 2060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051977064460515976
    2. ' =' → logprob: -3.6769771575927734
    3. '=[' → logprob: -4.301977157592773
    4. '[' → logprob: -5.051977157592773
    5. '=[]' → logprob: -6.051977157592773
    6. '[:]' → logprob: -6.051977157592773
    7. '_' → logprob: -8.551977157592773
    8. ' =[' → logprob: -9.426977157592773
    9. '=['' → logprob: -9.801977157592773
    10. '=["' → logprob: -9.801977157592773

Token 616: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07180766761302948
    2. '[]' → logprob: -2.946807622909546
    3. '[-' → logprob: -4.446807861328125
    4. '["' → logprob: -6.571807861328125
    5. ' [' → logprob: -6.696807861328125
    6. 'False' → logprob: -7.321807861328125
    7. '0' → logprob: -7.696807861328125
    8. 'deque' → logprob: -8.196807861328125
    9. 'visited' → logprob: -8.446807861328125
    10. '[N' → logprob: -8.696807861328125

Token 617: ' valeurs' (ID: 73668)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.042122501879930496
    2. '[]' → logprob: -3.5421226024627686
    3. ' [' → logprob: -5.1671223640441895
    4. '[-' → logprob: -5.9171223640441895
    5. '0' → logprob: -6.0421223640441895
    6. '["' → logprob: -7.6671223640441895
    7. 'False' → logprob: -8.292122840881348
    8. ' []' → logprob: -9.042122840881348
    9. 'deque' → logprob: -9.417122840881348
    10. '[:]' → logprob: -9.667122840881348

Token 618: ' associ' (ID: 5516)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4299941956996918
    2. '=' → logprob: -1.5549942255020142
    3. 'D' → logprob: -3.0549941062927246
    4. '[' → logprob: -3.8049941062927246
    5. 'de' → logprob: -3.8049941062927246
    6. '[:]' → logprob: -4.304994106292725
    7. '[]' → logprob: -4.679994106292725
    8. '=[' → logprob: -5.179994106292725
    9. '=[]' → logprob: -5.179994106292725
    10. 'des' → logprob: -5.429994106292725

Token 619: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0007118358626030385
    2. 'ée' → logprob: -7.875711917877197
    3. 'ated' → logprob: -8.375711441040039
    4. 'é' → logprob: -10.000711441040039
    5. 'és' → logprob: -10.250711441040039
    6. 'es' → logprob: -12.125711441040039
    7. 'à' → logprob: -12.125711441040039
    8. 'ees' → logprob: -12.500711441040039
    9. '[' → logprob: -13.375711441040039
    10. 'ate' → logprob: -14.000711441040039

Token 620: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22185415029525757
    2. '=' → logprob: -1.7218542098999023
    3. '=[' → logprob: -5.221854209899902
    4. '=[]' → logprob: -5.346854209899902
    5. '[' → logprob: -6.096854209899902
    6. '[:]' → logprob: -6.596854209899902
    7. 'des' → logprob: -6.846854209899902
    8. '[]' → logprob: -6.971854209899902
    9. 'de' → logprob: -7.221854209899902
    10. 'D' → logprob: -7.346854209899902

Token 621: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.103793665766716
    2. '[]' → logprob: -2.3537936210632324
    3. '["' → logprob: -6.103793621063232
    4. '[D' → logprob: -8.22879409790039
    5. '['' → logprob: -8.35379409790039
    6. '[-' → logprob: -8.35379409790039
    7. '[:]' → logprob: -8.60379409790039
    8. ' [' → logprob: -8.85379409790039
    9. '[]
' → logprob: -9.22879409790039
    10. 'D' → logprob: -9.72879409790039

Token 622: ' ar' (ID: 646)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3543362617492676
    2. '[' → logprob: -1.3543362617492676
    3. '""' → logprob: -2.2293362617492676
    4. '[]' → logprob: -2.3543362617492676
    5. '_' → logprob: -2.7293362617492676
    6. 'D' → logprob: -3.1043362617492676
    7. '"' → logprob: -3.4793362617492676
    8. 'i' → logprob: -3.7293362617492676
    9. 'edge' → logprob: -3.8543362617492676
    10. 'node' → logprob: -4.854336261749268

Token 623: 'ête' (ID: 16808)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -1.117979884147644
    2. 'R' → logprob: -2.1179800033569336
    3. 'DEC' → logprob: -2.3679800033569336
    4. 'ray' → logprob: -2.4929800033569336
    5. 'DIS' → logprob: -2.6179800033569336
    6. 'r' → logprob: -2.7429800033569336
    7. 'D' → logprob: -2.8679800033569336
    8. 'range' → logprob: -3.2429800033569336
    9. '[' → logprob: -3.3679800033569336
    10. 'ange' → logprob: -4.242980003356934

Token 624: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1315765231847763
    2. ' =' → logprob: -2.1315765380859375
    3. 'DIS' → logprob: -5.6315765380859375
    4. '=[' → logprob: -7.3815765380859375
    5. '[' → logprob: -8.256576538085938
    6. 'dis' → logprob: -9.631576538085938
    7. 'D' → logprob: -10.881576538085938
    8. '=[]' → logprob: -11.131576538085938
    9. 'Dis' → logprob: -11.881576538085938
    10. '
' → logprob: -12.006576538085938

Token 625: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06393148750066757
    2. '[-' → logprob: -2.938931465148926
    3. 'DIS' → logprob: -5.688931465148926
    4. '["' → logprob: -6.063931465148926
    5. 'D' → logprob: -6.688931465148926
    6. '[D' → logprob: -6.688931465148926
    7. ' [' → logprob: -7.813931465148926
    8. 'dis' → logprob: -9.063931465148926
    9. '0' → logprob: -9.438931465148926
    10. 'DEC' → logprob: -10.438931465148926

Token 626: 'isées' (ID: 108324)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.004851838108152151
    2. 'ize' → logprob: -5.504851818084717
    3. ' =' → logprob: -8.754852294921875
    4. '[' → logprob: -8.879852294921875
    5. '=[' → logprob: -9.254852294921875
    6. '=' → logprob: -9.504852294921875
    7. 'e' → logprob: -9.629852294921875
    8. 'ze' → logprob: -9.879852294921875
    9. 'zed' → logprob: -10.004852294921875
    10. 'IZED' → logprob: -10.379852294921875

Token 627: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0323677659034729
    2. ' =' → logprob: -3.782367706298828
    3. '=[' → logprob: -4.782367706298828
    4. 'to' → logprob: -8.157367706298828
    5. '[' → logprob: -8.282367706298828
    6. '=-' → logprob: -10.157367706298828
    7. ' à' → logprob: -10.657367706298828
    8. 'with' → logprob: -10.782367706298828
    9. '([' → logprob: -11.532367706298828
    10. 'à' → logprob: -11.782367706298828

Token 628: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43547967076301575
    2. '[-' → logprob: -1.1854796409606934
    3. '0' → logprob: -3.8104796409606934
    4. '[M' → logprob: -4.185479640960693
    5. '-' → logprob: -5.310479640960693
    6. '["' → logprob: -6.185479640960693
    7. 'None' → logprob: -6.560479640960693
    8. 'M' → logprob: -7.185479640960693
    9. '['' → logprob: -7.685479640960693
    10. ' [' → logprob: -8.560480117797852

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '-' → logprob: -13.500004768371582
    3. ' ' → logprob: -13.500004768371582
    4. '[' → logprob: -14.000004768371582
    5. 'M' → logprob: -14.625004768371582
    6. ' -' → logprob: -15.000004768371582
    7. '[M' → logprob: -15.125004768371582
    8. '2' → logprob: -15.875004768371582
    9. '   ' → logprob: -16.6250057220459
    10. '```' → logprob: -16.8750057220459

Token 630: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33305656909942627
    2. '=' → logprob: -1.5830565690994263
    3. 'DIS' → logprob: -2.5830564498901367
    4. '=[' → logprob: -6.583056449890137
    5. ' DIS' → logprob: -8.208056449890137
    6. '[-' → logprob: -8.833056449890137
    7. 'dis' → logprob: -8.958056449890137
    8. '[' → logprob: -9.083056449890137
    9. ']' → logprob: -9.958056449890137
    10. ' ' → logprob: -9.958056449890137

Token 631: 'DIS' (ID: 34798)
  Prédit: 'DIS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.00021366903092712164
    2. '[-' → logprob: -8.500213623046875
    3. ' DIS' → logprob: -11.875213623046875
    4. 'dis' → logprob: -14.125213623046875
    5. '-' → logprob: -14.375213623046875
    6. '[' → logprob: -14.875213623046875
    7. '```' → logprob: -15.125213623046875
    8. 'DISC' → logprob: -15.125213623046875
    9. '-dis' → logprob: -15.750213623046875
    10. '=' → logprob: -16.000213623046875

Token 632: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815146580338478
    2. ' =' → logprob: -4.01815128326416
    3. '=[' → logprob: -13.51815128326416
    4. '＝' → logprob: -16.643152236938477
    5. '[' → logprob: -16.768152236938477
    6. '=[]' → logprob: -17.268152236938477
    7. ' =[' → logprob: -18.018152236938477
    8. ' ' → logprob: -18.143152236938477
    9. '   ' → logprob: -18.518152236938477
    10. ' ' → logprob: -19.018152236938477

Token 633: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.842555426876061e-06
    2. ' [-' → logprob: -12.250004768371582
    3. '[' → logprob: -18.1250057220459
    4. '([-' → logprob: -19.7500057220459
    5. '   ' → logprob: -20.1250057220459
    6. '-' → logprob: -21.2500057220459
    7. '[]' → logprob: -21.8750057220459
    8. ' ' → logprob: -22.2500057220459
    9. '[:-' → logprob: -22.5000057220459
    10. '[:]' → logprob: -23.1250057220459

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.937500953674316
    3. '2' → logprob: -15.000000953674316
    4. '-' → logprob: -16.812501907348633
    5. '```' → logprob: -16.937501907348633
    6. '１' → logprob: -17.000001907348633
    7. '۱' → logprob: -17.125001907348633
    8. '' → logprob: -17.687501907348633
    9. '100' → logprob: -17.812501907348633
    10. '১' → logprob: -17.812501907348633

Token 635: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011790355201810598
    2. ']*' → logprob: -6.876179218292236
    3. ' for' → logprob: -9.126178741455078
    4. ' ]' → logprob: -10.751178741455078
    5. ']*(' → logprob: -11.876178741455078
    6. 'for' → logprob: -12.251178741455078
    7. '*' → logprob: -12.876178741455078
    8. ')' → logprob: -13.626178741455078
    9. ']+' → logprob: -16.126178741455078
    10. ' *' → logprob: -16.251178741455078

Token 636: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04678897559642792
    2. ' *' → logprob: -3.4217889308929443
    3. ' for' → logprob: -4.921789169311523
    4. ')' → logprob: -5.796789169311523
    5. '*(' → logprob: -6.671789169311523
    6. '
' → logprob: -7.921789169311523
    7. 'for' → logprob: -7.921789169311523
    8. ']' → logprob: -9.046789169311523
    9. '*M' → logprob: -9.046789169311523
    10. '```' → logprob: -9.171789169311523

Token 637: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.337155355140567e-05
    2. '(M' → logprob: -9.750062942504883
    3. ' M' → logprob: -12.250062942504883
    4. '(' → logprob: -16.625062942504883
    5. '   ' → logprob: -17.250062942504883
    6. ' (' → logprob: -18.000062942504883
    7. ' ' → logprob: -19.125062942504883
    8. 'Ｍ' → logprob: -19.500062942504883
    9. '[M' → logprob: -19.750062942504883
    10. '	M' → logprob: -19.875062942504883

Token 638: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.090473972260952
    2. '#' → logprob: -3.2154738903045654
    3. '
' → logprob: -4.0904741287231445
    4. '<|end|>' → logprob: -4.0904741287231445
    5. ' for' → logprob: -5.2154741287231445
    6. 'D' → logprob: -6.4654741287231445
    7. 'def' → logprob: -6.9654741287231445
    8. 'P' → logprob: -7.0904741287231445
    9. ')' → logprob: -7.3404741287231445
    10. 'DEC' → logprob: -7.4654741287231445

Token 639: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00284469872713089
    2. '#' → logprob: -6.75284481048584
    3. 'def' → logprob: -6.75284481048584
    4. ' for' → logprob: -8.75284481048584
    5. 'P' → logprob: -9.25284481048584
    6. 'visited' → logprob: -10.25284481048584
    7. 'color' → logprob: -10.87784481048584
    8. '
' → logprob: -11.00284481048584
    9. '```' → logprob: -11.00284481048584
    10. 'while' → logprob: -11.12784481048584

Token 640: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5664997696876526
    2. 'for' → logprob: -0.9414997696876526
    3. 'import' → logprob: -3.441499710083008
    4. 'def' → logprob: -5.316499710083008
    5. 'stack' → logprob: -6.191499710083008
    6. 'visited' → logprob: -6.816499710083008
    7. 'queue' → logprob: -7.066499710083008
    8. '#' → logprob: -7.566499710083008
    9. 'while' → logprob: -8.066499710083008
    10. 'index' → logprob: -9.316499710083008

Token 641: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02314123325049877
    2. ' for' → logprob: -4.398141384124756
    3. '=' → logprob: -5.523141384124756
    4. 'def' → logprob: -5.773141384124756
    5. ' =' → logprob: -6.398141384124756
    6. 'import' → logprob: -7.023141384124756
    7. 'from' → logprob: -8.398140907287598
    8. '#' → logprob: -8.773140907287598
    9. 'visited' → logprob: -9.148140907287598
    10. 'continue' → logprob: -9.773140907287598

Token 642: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.04447593167424202
    2. 'ourt' → logprob: -3.66947603225708
    3. 'our' → logprob: -4.41947603225708
    4. '#' → logprob: -5.79447603225708
    5. '```' → logprob: -6.16947603225708
    6. '``' → logprob: -8.044475555419922
    7. 'court' → logprob: -9.419475555419922
    8. '
' → logprob: -10.044475555419922
    9. 'o' → logprob: -10.294475555419922
    10. 'urs' → logprob: -10.544475555419922

Token 643: ' tous' (ID: 10688)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0027360436506569386
    2. 'range' → logprob: -6.6277360916137695
    3. ' P' → logprob: -7.1277360916137695
    4. 'for' → logprob: -7.6277360916137695
    5. '(P' → logprob: -10.00273609161377
    6. ' range' → logprob: -10.75273609161377
    7. 'p' → logprob: -11.12773609161377
    8. ' for' → logprob: -12.00273609161377
    9. 'enumer' → logprob: -12.50273609161377
    10. '(' → logprob: -12.62773609161377

Token 644: ' les' (ID: 1341)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.04874292388558388
    2. ' P' → logprob: -3.6737430095672607
    3. 'range' → logprob: -4.298742771148682
    4. '(' → logprob: -5.923742771148682
    5. '(P' → logprob: -6.548742771148682
    6. 'p' → logprob: -6.798742771148682
    7. 'len' → logprob: -7.298742771148682
    8. ' range' → logprob: -7.798742771148682
    9. 'x' → logprob: -8.04874324798584
    10. 'i' → logprob: -8.17374324798584

Token 645: ' somm' (ID: 44830)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.045864153653383255
    2. 'range' → logprob: -3.4208641052246094
    3. 'x' → logprob: -5.295864105224609
    4. 'p' → logprob: -6.170864105224609
    5. '(x' → logprob: -6.170864105224609
    6. 'i' → logprob: -7.670864105224609
    7. ' P' → logprob: -7.670864105224609
    8. 'v' → logprob: -7.795864105224609
    9. ' range' → logprob: -7.795864105224609
    10. '(' → logprob: -8.42086410522461

Token 646: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.03209120035171509
    2. 'et' → logprob: -3.9070911407470703
    3. 'ètes' → logprob: -5.65709114074707
    4. 'e' → logprob: -6.03209114074707
    5. 'è' → logprob: -6.65709114074707
    6. 'ats' → logprob: -7.28209114074707
    7. 'es' → logprob: -7.40709114074707
    8. 'eurs' → logprob: -7.40709114074707
    9. 'etes' → logprob: -7.78209114074707
    10. 'orts' → logprob: -8.15709114074707

Token 647: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016879349946975708
    2. ' for' → logprob: -5.141879558563232
    3. ':' → logprob: -5.266879558563232
    4. ':
' → logprob: -5.391879558563232
    5. '
' → logprob: -7.266879558563232
    6. 'in' → logprob: -8.391879081726074
    7. ',' → logprob: -9.016879081726074
    8. ' in' → logprob: -11.016879081726074
    9. '.' → logprob: -11.141879081726074
    10. ',
' → logprob: -11.266879081726074

Token 648: ' l' (ID: 305)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00014418430509977043
    2. ' P' → logprob: -9.500144004821777
    3. 'range' → logprob: -9.625144004821777
    4. 'p' → logprob: -13.500144004821777
    5. ' range' → logprob: -14.000144004821777
    6. '[P' → logprob: -15.000144004821777
    7. ' ' → logprob: -15.750144004821777
    8. '(P' → logprob: -15.750144004821777
    9. '   ' → logprob: -16.250144958496094
    10. '[(' → logprob: -16.500144958496094

Token 649: ''ordre' (ID: 124753)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3156290054321289
    2. 'range' → logprob: -1.315629005432129
    3. ' range' → logprob: -6.440629005432129
    4. '(range' → logprob: -8.190629005432129
    5. ' P' → logprob: -8.440629005432129
    6. 'for' → logprob: -9.190629005432129
    7. 'p' → logprob: -9.940629005432129
    8. ')' → logprob: -10.440629005432129
    9. '(P' → logprob: -10.940629005432129
    10. 'r' → logprob: -11.690629005432129

Token 650: ' cro' (ID: 11270)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10126887261867523
    2. 'in' → logprob: -2.851268768310547
    3. '(P' → logprob: -3.976268768310547
    4. 'of' → logprob: -4.976268768310547
    5. ' for' → logprob: -5.601268768310547
    6. 'P' → logprob: -6.101268768310547
    7. '(len' → logprob: -6.351268768310547
    8. ' in' → logprob: -6.851268768310547
    9. '(' → logprob: -7.226268768310547
    10. 'range' → logprob: -7.226268768310547

Token 651: 'issant' (ID: 31359)
  Prédit: 'issante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.5755062699317932
    2. 'issant' → logprob: -1.2005062103271484
    3. 'ut' → logprob: -3.9505062103271484
    4. 'is' → logprob: -4.325506210327148
    5. 'issance' → logprob: -4.450506210327148
    6. 'nt' → logprob: -4.700506210327148
    7. 'ite' → logprob: -4.825506210327148
    8. 'mp' → logprob: -4.825506210327148
    9. 'urt' → logprob: -5.200506210327148
    10. 'nc' → logprob: -5.450506210327148

Token 652: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7050557732582092
    2. ':' → logprob: -0.8300557732582092
    3. ':
' → logprob: -4.2050557136535645
    4. '(P' → logprob: -4.2050557136535645
    5. ',' → logprob: -4.3300557136535645
    6. ' for' → logprob: -4.7050557136535645
    7. 'in' → logprob: -5.4550557136535645
    8. 'of' → logprob: -5.5800557136535645
    9. 'P' → logprob: -5.9550557136535645
    10. '(' → logprob: -6.3300557136535645

Token 653: ' la' (ID: 557)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6532811522483826
    2. 'P' → logprob: -0.9032811522483826
    3. 'la' → logprob: -3.5282812118530273
    4. 'D' → logprob: -3.9032812118530273
    5. 'x' → logprob: -4.403281211853027
    6. 'leur' → logprob: -4.778281211853027
    7. 'd' → logprob: -6.778281211853027
    8. 'les' → logprob: -7.278281211853027
    9. 'dé' → logprob: -7.278281211853027
    10. 'l' → logprob: -8.278281211853027

Token 654: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5105595588684082
    2. 'P' → logprob: -1.0105595588684082
    3. 'x' → logprob: -4.010559558868408
    4. 'D' → logprob: -4.760559558868408
    5. 'value' → logprob: -5.010559558868408
    6. ' P' → logprob: -7.385559558868408
    7. 'p' → logprob: -7.510559558868408
    8. 'range' → logprob: -8.13555908203125
    9. ' valeur' → logprob: -8.51055908203125
    10. 'for' → logprob: -9.51055908203125

Token 655: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8775156140327454
    2. 'for' → logprob: -1.2525155544281006
    3. ',' → logprob: -1.6275155544281006
    4. 'pour' → logprob: -3.2525155544281006
    5. 'in' → logprob: -4.37751579284668
    6. 'P' → logprob: -4.50251579284668
    7. 'dans' → logprob: -4.50251579284668
    8. 'des' → logprob: -5.12751579284668
    9. ':' → logprob: -5.62751579284668
    10. 'of' → logprob: -5.75251579284668

Token 656: ' dé' (ID: 2393)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.004268219694495201
    2. 'dés' → logprob: -5.879268169403076
    3. 'd' → logprob: -6.754268169403076
    4. 'de' → logprob: -8.879268646240234
    5. 'x' → logprob: -9.379268646240234
    6. 'dice' → logprob: -11.004268646240234
    7. '```' → logprob: -11.629268646240234
    8. ' dé' → logprob: -11.629268646240234
    9. 'des' → logprob: -11.754268646240234
    10. 'p' → logprob: -12.129268646240234

Token 657: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049226708710193634
    2. ':' → logprob: -3.299226760864258
    3. ':
' → logprob: -4.674226760864258
    4. ' for' → logprob: -7.049226760864258
    5. ',' → logprob: -7.299226760864258
    6. '.' → logprob: -9.799226760864258
    7. ',
' → logprob: -9.924226760864258
    8. 'P' → logprob: -10.299226760864258
    9. '(' → logprob: -10.924226760864258
    10. '(P' → logprob: -11.174226760864258

Token 658: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.138441237155348e-05
    2. ' for' → logprob: -9.625091552734375
    3. '```' → logprob: -11.125091552734375
    4. ':' → logprob: -12.375091552734375
    5. '
' → logprob: -12.500091552734375
    6. ':
' → logprob: -13.625091552734375
    7. '   ' → logprob: -14.375091552734375
    8. '	for' → logprob: -15.500091552734375
    9. '    
' → logprob: -16.250091552734375
    10. ',' → logprob: -16.625091552734375

Token 659: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07968344539403915
    2. 'val' → logprob: -3.329683542251587
    3. 'value' → logprob: -3.579683542251587
    4. '_,' → logprob: -4.829683303833008
    5. '(x' → logprob: -6.079683303833008
    6. 'v' → logprob: -6.829683303833008
    7. ' x' → logprob: -7.204683303833008
    8. '(_,' → logprob: -8.954683303833008
    9. ' value' → logprob: -9.204683303833008
    10. '_x' → logprob: -9.204683303833008

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007129970006644726
    2. ' in' → logprob: -5.757130146026611
    3. 'in' → logprob: -5.882130146026611
    4. ' ,' → logprob: -7.882130146026611
    5. ',v' → logprob: -8.632129669189453
    6. ',val' → logprob: -9.257129669189453
    7. ',x' → logprob: -9.507129669189453
    8. ',_' → logprob: -9.507129669189453
    9. '[' → logprob: -9.632129669189453
    10. ',(' → logprob: -9.757129669189453

Token 661: ' po' (ID: 2482)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0094975233078003
    2. 'p' → logprob: -1.6344975233078003
    3. 'y' → logprob: -1.6344975233078003
    4. 'v' → logprob: -2.00949764251709
    5. 'i' → logprob: -2.88449764251709
    6. 'ind' → logprob: -3.75949764251709
    7. 'u' → logprob: -4.50949764251709
    8. 'idx' → logprob: -4.63449764251709
    9. 'node' → logprob: -5.50949764251709
    10. 'id' → logprob: -6.50949764251709

Token 662: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010604646377032623
    2. 'r' → logprob: -9.750105857849121
    3. ',' → logprob: -11.375105857849121
    4. 'sit' → logprob: -11.500105857849121
    5. 'int' → logprob: -12.250105857849121
    6. 'p' → logprob: -12.250105857849121
    7. 'l' → logprob: -12.625105857849121
    8. 'x' → logprob: -12.750105857849121
    9. 'ss' → logprob: -13.375105857849121
    10. 'se' → logprob: -13.750105857849121

Token 663: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.320199877838604e-07
    2. ' P' → logprob: -15.0
    3. '[P' → logprob: -17.125
    4. '	P' → logprob: -18.5
    5. '(P' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '=P' → logprob: -19.875
    8. '_P' → logprob: -20.75
    9. ':P' → logprob: -20.75
    10. 'p' → logprob: -21.25

Token 664: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002695608709473163
    2. ':
' → logprob: -8.250269889831543
    3. ' :' → logprob: -12.500269889831543
    4. ',' → logprob: -13.500269889831543
    5. '):' → logprob: -13.750269889831543
    6. '   ' → logprob: -13.875269889831543
    7. ':

' → logprob: -15.000269889831543
    8. ')' → logprob: -15.500269889831543
    9. ':
' → logprob: -15.500269889831543
    10. '=' → logprob: -16.250268936157227

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13763566315174103
    2. ':' → logprob: -2.2626357078552246
    3. 'if' → logprob: -4.637635707855225
    4. ' if' → logprob: -4.637635707855225
    5. ':
' → logprob: -6.887635707855225
    6. 'DEC' → logprob: -7.012635707855225
    7. '```' → logprob: -7.012635707855225
    8. '    
' → logprob: -7.637635707855225
    9. '  ' → logprob: -8.512635231018066
    10. 'for' → logprob: -8.512635231018066

Token 666: ' flag' (ID: 9641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6510074734687805
    2. 'if' → logprob: -1.7760074138641357
    3. ' if' → logprob: -1.9010074138641357
    4. 'DEC' → logprob: -2.1510074138641357
    5. 'for' → logprob: -4.526007652282715
    6. ' for' → logprob: -4.526007652282715
    7. ':' → logprob: -5.526007652282715
    8. '    
' → logprob: -5.901007652282715
    9. '#' → logprob: -6.026007652282715
    10. ' DEC' → logprob: -6.276007652282715

Token 667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231673717498779
    2. '=' → logprob: -0.8981673717498779
    3. ' ' → logprob: -11.023167610168457
    4. ':' → logprob: -12.148167610168457
    5. ',' → logprob: -12.273167610168457
    6. '=False' → logprob: -12.273167610168457
    7. '   ' → logprob: -12.648167610168457
    8. '  ' → logprob: -13.273167610168457
    9. ' ==' → logprob: -13.898167610168457
    10. 'if' → logprob: -14.148167610168457

Token 668: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1455499678850174
    2. 'True' → logprob: -2.020550012588501
    3. '0' → logprob: -6.520549774169922
    4. ' False' → logprob: -6.895549774169922
    5. ' True' → logprob: -8.020549774169922
    6. '1' → logprob: -10.145549774169922
    7. '"' → logprob: -11.770549774169922
    8. ' ' → logprob: -13.145549774169922
    9. '(False' → logprob: -13.645549774169922
    10. '[' → logprob: -13.770549774169922

Token 669: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.049202874302864075
    2. 'True' → logprob: -3.0492029190063477
    3. '0' → logprob: -7.424202919006348
    4. ' False' → logprob: -11.674202919006348
    5. '1' → logprob: -11.924202919006348
    6. '[]' → logprob: -13.924202919006348
    7. ' True' → logprob: -14.549202919006348
    8. '[' → logprob: -14.674202919006348
    9. 'false' → logprob: -14.799202919006348
    10. '"' → logprob: -15.049202919006348

Token 670: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3895849287509918
    2. '<|end|>' → logprob: -1.5145848989486694
    3. ' for' → logprob: -3.389585018157959
    4. ' if' → logprob: -3.764585018157959
    5. 'for' → logprob: -3.889585018157959
    6. '
' → logprob: -4.389585018157959
    7. 'if' → logprob: -5.514585018157959
    8. '	if' → logprob: -6.889585018157959
    9. '	for' → logprob: -6.889585018157959
    10. ' ' → logprob: -7.139585018157959

Token 671: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.303139328956604
    2. '   ' → logprob: -1.428139328956604
    3. 'for' → logprob: -1.428139328956604
    4. ' for' → logprob: -1.678139328956604
    5. '    
' → logprob: -4.3031392097473145
    6. ' if' → logprob: -4.5531392097473145
    7. '' → logprob: -4.8031392097473145
    8. ' 
' → logprob: -5.4281392097473145
    9. '	for' → logprob: -5.5531392097473145
    10. 'if' → logprob: -5.6781392097473145

Token 672: ' Ce' (ID: 14228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10771341621875763
    2. ' for' → logprob: -2.357713460922241
    3. 'if' → logprob: -5.607713222503662
    4. '   ' → logprob: -6.482713222503662
    5. 'DEC' → logprob: -6.982713222503662
    6. '#' → logprob: -8.10771369934082
    7. ' if' → logprob: -8.10771369934082
    8. 'flag' → logprob: -8.60771369934082
    9. '	for' → logprob: -9.10771369934082
    10. ' DEC' → logprob: -9.23271369934082

Token 673: ' flag' (ID: 9641)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27925142645835876
    2. ' ' → logprob: -2.6542513370513916
    3. '<|end|>' → logprob: -3.1542513370513916
    4. '  ' → logprob: -4.029251575469971
    5. '   
' → logprob: -4.029251575469971
    6. ' 
' → logprob: -4.279251575469971
    7. 'for' → logprob: -4.404251575469971
    8. '#' → logprob: -4.529251575469971
    9. '=' → logprob: -4.529251575469971
    10. ' =' → logprob: -4.529251575469971

Token 674: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08053872734308243
    2. ' =' → logprob: -2.830538749694824
    3. '<|end|>' → logprob: -4.330538749694824
    4. '   ' → logprob: -6.830538749694824
    5. '
' → logprob: -6.955538749694824
    6. ' ' → logprob: -7.080538749694824
    7. '<|end|>' → logprob: -7.455538749694824
    8. '#' → logprob: -7.955538749694824
    9. 'flag' → logprob: -7.955538749694824
    10. ',' → logprob: -9.080538749694824

Token 675: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7032077312469482
    2. 'ait' → logprob: -0.9532077312469482
    3. 'à' → logprob: -2.9532077312469482
    4. 'it' → logprob: -4.203207969665527
    5. '=' → logprob: -4.328207969665527
    6. 'ant' → logprob: -4.703207969665527
    7. 't' → logprob: -4.828207969665527
    8. 'ra' → logprob: -4.953207969665527
    9. ' à' → logprob: -5.203207969665527
    10. 'to' → logprob: -6.703207969665527

Token 676: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7268200516700745
    2. '=' → logprob: -1.2268199920654297
    3. ' =' → logprob: -2.2268199920654297
    4. 'à' → logprob: -3.2268199920654297
    5. ' to' → logprob: -4.22681999206543
    6. ' ' → logprob: -4.47681999206543
    7. '<|end|>' → logprob: -4.72681999206543
    8. '   ' → logprob: -4.97681999206543
    9. 'for' → logprob: -4.97681999206543
    10. '    ' → logprob: -5.22681999206543

Token 677: ' savoir' (ID: 22835)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.057458437979221344
    2. 'flag' → logprob: -3.4324584007263184
    3. '0' → logprob: -4.557458400726318
    4. 'True' → logprob: -4.682458400726318
    5. 'for' → logprob: -6.432458400726318
    6. 'break' → logprob: -6.932458400726318
    7. ' ' → logprob: -8.057458877563477
    8. ' True' → logprob: -8.307458877563477
    9. 'False' → logprob: -8.807458877563477
    10. 'print' → logprob: -8.932458877563477

Token 678: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0441341400146484
    2. 'si' → logprob: -1.2941341400146484
    3. ' si' → logprob: -1.4191341400146484
    4. ' if' → logprob: -2.0441341400146484
    5. ' s' → logprob: -6.419134140014648
    6. 's' → logprob: -8.419134140014648
    7. '   ' → logprob: -9.169134140014648
    8. 'pour' → logprob: -9.169134140014648
    9. ' ' → logprob: -9.544134140014648
    10. ' ' → logprob: -10.044134140014648

Token 679: ''il' (ID: 14683)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44078606367111206
    2. '   ' → logprob: -2.440786123275757
    3. 'i' → logprob: -2.565786123275757
    4. ' if' → logprob: -2.940786123275757
    5. 'for' → logprob: -3.065786123275757
    6. '=' → logprob: -3.065786123275757
    7. ' ' → logprob: -4.065785884857178
    8. ' =' → logprob: -4.690785884857178
    9. 'u' → logprob: -5.315785884857178
    10. '#' → logprob: -6.190785884857178

Token 680: ' y' (ID: 342)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8983461260795593
    2. ' y' → logprob: -1.023346185684204
    3. 'a' → logprob: -1.773346185684204
    4. 'y' → logprob: -3.898346185684204
    5. '#' → logprob: -4.023345947265625
    6. 'flag' → logprob: -5.273345947265625
    7. ' possible' → logprob: -5.898345947265625
    8. 'avait' → logprob: -6.523345947265625
    9. ' est' → logprob: -6.648345947265625
    10. 'possible' → logprob: -6.648345947265625

Token 681: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05192851647734642
    2. ' a' → logprob: -3.0519285202026367
    3. 'avait' → logprob: -7.051928520202637
    4. 'as' → logprob: -7.301928520202637
    5. 'f' → logprob: -7.551928520202637
    6. 'already' → logprob: -8.176928520202637
    7. '#' → logprob: -8.676928520202637
    8. 'est' → logprob: -9.176928520202637
    9. 'u' → logprob: -9.551928520202637
    10. '```' → logprob: -9.676928520202637

Token 682: ' au' (ID: 2791)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2836293876171112
    2. ' un' → logprob: -2.4086294174194336
    3. 'une' → logprob: -2.6586294174194336
    4. 'un' → logprob: -3.2836294174194336
    5. ' ' → logprob: -4.533629417419434
    6. 'flag' → logprob: -4.783629417419434
    7. 'd' → logprob: -5.658629417419434
    8. 'for' → logprob: -5.908629417419434
    9. ' flag' → logprob: -6.033629417419434
    10. 'quel' → logprob: -6.158629417419434

Token 683: ' moins' (ID: 15924)
  Prédit: 'cun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cun' → logprob: -0.7144984006881714
    2. 'c' → logprob: -1.2144984006881714
    3. 'moins' → logprob: -1.5894984006881714
    4. 'un' → logprob: -5.589498519897461
    5. '```' → logprob: -6.964498519897461
    6. 'une' → logprob: -7.089498519897461
    7. 'ucun' → logprob: -7.714498519897461
    8. 'cours' → logprob: -7.964498519897461
    9. 'mo' → logprob: -8.089498519897461
    10. 'plus' → logprob: -8.089498519897461

Token 684: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.43346160650253296
    2. 'une' → logprob: -1.1834616661071777
    3. ' un' → logprob: -3.6834616661071777
    4. ' une' → logprob: -4.183461666107178
    5. 'quel' → logprob: -6.058461666107178
    6. ' ' → logprob: -6.808461666107178
    7. '```' → logprob: -7.308461666107178
    8. 'des' → logprob: -8.18346118927002
    9. 'de' → logprob: -8.18346118927002
    10. '   ' → logprob: -8.80846118927002

Token 685: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.33507224917411804
    2. ' voisin' → logprob: -1.7100722789764404
    3. 'neighbor' → logprob: -2.3350722789764404
    4. 'adj' → logprob: -6.335072040557861
    5. '"' → logprob: -6.835072040557861
    6. 'v' → logprob: -7.335072040557861
    7. '```' → logprob: -7.835072040557861
    8. 'ne' → logprob: -8.21007251739502
    9. 'con' → logprob: -8.33507251739502
    10. 'd' → logprob: -8.33507251739502

Token 686: ' déjà' (ID: 21229)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34259575605392456
    2. ' =' → logprob: -1.3425958156585693
    3. '   ' → logprob: -4.21759557723999
    4. '<|end|>' → logprob: -5.21759557723999
    5. 'for' → logprob: -5.71759557723999
    6. ' ' → logprob: -6.59259557723999
    7. '.' → logprob: -6.84259557723999
    8. ' for' → logprob: -7.59259557723999
    9. ',' → logprob: -7.71759557723999
    10. '    ' → logprob: -8.217596054077148

Token 687: ' color' (ID: 3089)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13029246032238007
    2. 'color' → logprob: -3.1302924156188965
    3. '"' → logprob: -3.7552924156188965
    4. '```' → logprob: -4.0052924156188965
    5. 'assign' → logprob: -4.2552924156188965
    6. 'colored' → logprob: -5.1302924156188965
    7. 'DEC' → logprob: -5.3802924156188965
    8. 'mar' → logprob: -5.8802924156188965
    9. 'dé' → logprob: -6.3802924156188965
    10. 'dec' → logprob: -6.5052924156188965

Token 688: 'ié' (ID: 143445)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11310404539108276
    2. 'ié' → logprob: -2.2381041049957275
    3. 'i' → logprob: -8.363103866577148
    4. 'e' → logprob: -11.363103866577148
    5. '#' → logprob: -11.488103866577148
    6. 'ed' → logprob: -11.863103866577148
    7. 'isé' → logprob: -12.488103866577148
    8. '=' → logprob: -12.738103866577148
    9. '   ' → logprob: -13.363103866577148
    10. 'ie' → logprob: -13.738103866577148

Token 689: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08146096765995026
    2. '<|end|>' → logprob: -3.331460952758789
    3. 'for' → logprob: -4.206460952758789
    4. ' for' → logprob: -4.581460952758789
    5. ' ' → logprob: -5.456460952758789
    6. '    
' → logprob: -5.706460952758789
    7. '.' → logprob: -6.206460952758789
    8. ',' → logprob: -6.331460952758789
    9. '  ' → logprob: -6.456460952758789
    10. '
' → logprob: -7.456460952758789

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6290963888168335
    2. 'for' → logprob: -0.8790963888168335
    3. ' for' → logprob: -3.129096508026123
    4. '	for' → logprob: -5.504096508026123
    5. '    
' → logprob: -6.879096508026123
    6. 'if' → logprob: -7.254096508026123
    7. '   ' → logprob: -7.754096508026123
    8. '' → logprob: -8.879096031188965
    9. '
' → logprob: -9.004096031188965
    10. ' ' → logprob: -9.004096031188965

Token 691: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006224070675671101
    2. ' for' → logprob: -5.506224155426025
    3. '   ' → logprob: -6.256224155426025
    4. 'neighbors' → logprob: -8.881223678588867
    5. '	for' → logprob: -10.256223678588867
    6. 'if' → logprob: -11.131223678588867
    7. '#' (adapté à ' #') → logprob: -11.756223678588867
    8. ' ' → logprob: -12.381223678588867
    9. 'neighbor' → logprob: -12.381223678588867
    10. '.' → logprob: -12.631223678588867

Token 692: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. 'if' → logprob: -13.875001907348633
    3. ' for' → logprob: -14.500001907348633
    4. 'neighbors' → logprob: -15.375001907348633
    5. 'flag' → logprob: -15.875001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '#' → logprob: -16.750001907348633
    8. '	for' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. 'DEC' → logprob: -17.625001907348633

Token 693: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008707110770046711
    2. ' for' → logprob: -4.758707046508789
    3. '   ' → logprob: -10.758707046508789
    4. '=' → logprob: -11.258707046508789
    5. 'continue' → logprob: -11.383707046508789
    6. 'or' → logprob: -11.633707046508789
    7. '	for' → logprob: -12.633707046508789
    8. ';' → logprob: -12.883707046508789
    9. 'pour' → logprob: -13.008707046508789
    10. '#' → logprob: -13.133707046508789

Token 694: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.005336216650903225
    2. 'ours' → logprob: -5.505336284637451
    3. 'oure' → logprob: -7.630336284637451
    4. 'court' → logprob: -8.380335807800293
    5. '#' → logprob: -8.630335807800293
    6. '
' → logprob: -8.880335807800293
    7. '_' → logprob: -9.630335807800293
    8. '[' → logprob: -10.255335807800293
    9. '```' → logprob: -10.755335807800293
    10. '\' → logprob: -11.130335807800293

Token 695: ' tous' (ID: 10688)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.05305219814181328
    2. '(E' → logprob: -3.1780521869659424
    3. ' E' → logprob: -4.6780524253845215
    4. '   ' → logprob: -7.4280524253845215
    5. 'for' → logprob: -10.178051948547363
    6. 'neighbor' → logprob: -11.053051948547363
    7. ' for' → logprob: -11.553051948547363
    8. '(' → logprob: -11.678051948547363
    9. 'adj' → logprob: -11.928051948547363
    10. ' ' → logprob: -12.053051948547363

Token 696: ' les' (ID: 1341)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.29737168550491333
    2. '(v' → logprob: -2.2973716259002686
    3. 'v' → logprob: -2.4223716259002686
    4. 'E' → logprob: -3.7973716259002686
    5. 'neighbor' → logprob: -4.172371864318848
    6. 'neighbors' → logprob: -4.922371864318848
    7. ' voisin' → logprob: -5.297371864318848
    8. '(' → logprob: -5.297371864318848
    9. 'vo' → logprob: -6.047371864318848
    10. ' voisins' → logprob: -6.422371864318848

Token 697: ' voisins' (ID: 166720)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15660634636878967
    2. 'vo' → logprob: -2.406606435775757
    3. ' v' → logprob: -4.031606197357178
    4. 'y' → logprob: -4.406606197357178
    5. 'neighbor' → logprob: -4.406606197357178
    6. ' voisin' → logprob: -5.281606197357178
    7. 'n' → logprob: -6.531606197357178
    8. ' voisins' → logprob: -6.906606197357178
    9. ' y' → logprob: -7.031606197357178
    10. 'neighbors' → logprob: -7.281606197357178

Token 698: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5333715677261353
    2. ' in' → logprob: -1.7833715677261353
    3. ' of' → logprob: -2.2833714485168457
    4. '   ' → logprob: -2.7833714485168457
    5. 'de' → logprob: -3.4083714485168457
    6. '[' → logprob: -3.6583714485168457
    7. 'in' → logprob: -4.658371448516846
    8. '(po' → logprob: -4.908371448516846
    9. ' po' → logprob: -6.283371448516846
    10. 'of' → logprob: -6.908371448516846

Token 699: ' sommet' (ID: 130502)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -3.2020991056924686e-05
    2. ' po' → logprob: -10.375032424926758
    3. 'pos' → logprob: -15.125032424926758
    4. 'x' → logprob: -15.500032424926758
    5. 'Po' → logprob: -16.500032424926758
    6. '(po' → logprob: -16.625032424926758
    7. 'p' → logprob: -16.875032424926758
    8. 'mo' → logprob: -16.875032424926758
    9. 'poi' → logprob: -17.500032424926758
    10. 'pe' → logprob: -17.875032424926758

Token 700: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.20201751589775085
    2. ' po' → logprob: -1.7020175457000732
    3. '(po' → logprob: -8.202017784118652
    4. '   ' → logprob: -8.702017784118652
    5. '[' → logprob: -8.827017784118652
    6. 'Po' → logprob: -12.702017784118652
    7. ' Po' → logprob: -13.327017784118652
    8. 'for' → logprob: -13.577017784118652
    9. ',' → logprob: -13.702017784118652
    10. '       ' → logprob: -13.827017784118652

Token 701: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09485802799463272
    2. '   ' → logprob: -2.969857931137085
    3. 'in' → logprob: -3.969857931137085
    4. ' in' → logprob: -4.094858169555664
    5. ':
' → logprob: -6.469858169555664
    6. ' :' → logprob: -6.969858169555664
    7. 'for' → logprob: -8.094858169555664
    8. '[' → logprob: -8.344858169555664
    9. '.' → logprob: -8.969858169555664
    10. ' for' → logprob: -9.094858169555664

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14882530272006989
    2. 'for' → logprob: -2.2738254070281982
    3. ' for' → logprob: -3.7738254070281982
    4. '	for' → logprob: -4.398825168609619
    5. '```' → logprob: -9.523825645446777
    6. '    
' → logprob: -11.023825645446777
    7. '   ' → logprob: -12.273825645446777
    8. '       ' → logprob: -12.523825645446777
    9. '\t' → logprob: -12.898825645446777
    10. '
' → logprob: -13.398825645446777

Token 703: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2701669931411743
    2. ' for' → logprob: -1.5201669931411743
    3. '   ' → logprob: -4.020166873931885
    4. '	for' → logprob: -9.020167350769043
    5. '```' → logprob: -13.645167350769043
    6. ' ' → logprob: -15.895167350769043
    7. '  ' → logprob: -16.145166397094727
    8. '   ' → logprob: -16.395166397094727
    9. ' ' → logprob: -16.770166397094727
    10. '    
' → logprob: -16.895166397094727

Token 704: ' to' (ID: 316)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5500316023826599
    2. 'y' → logprob: -2.6750316619873047
    3. 'nx' → logprob: -2.9250316619873047
    4. 'u' → logprob: -3.3000316619873047
    5. 'w' → logprob: -3.4250316619873047
    6. 'e' → logprob: -3.5500316619873047
    7. 'a' → logprob: -3.8000316619873047
    8. 'vo' → logprob: -3.8000316619873047
    9. 'ne' → logprob: -3.9250316619873047
    10. 'n' → logprob: -3.9250316619873047

Token 705: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12695667147636414
    2. 'in' → logprob: -2.1269567012786865
    3. '	in' → logprob: -11.376956939697266
    4. ' ' → logprob: -11.876956939697266
    5. '  ' → logprob: -13.126956939697266
    6. 'In' → logprob: -13.501956939697266
    7. 'not' → logprob: -13.626956939697266
    8. '   ' → logprob: -14.126956939697266
    9. ' ' → logprob: -14.376956939697266
    10. ',' → logprob: -14.501956939697266

Token 706: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002476724097505212
    2. ' E' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.252476692199707
    4. '   ' → logprob: -15.127476692199707
    5. '	E' → logprob: -15.877476692199707
    6. '  ' → logprob: -17.252477645874023
    7. ')' → logprob: -17.877477645874023
    8. '
' → logprob: -18.002477645874023
    9. '[' → logprob: -18.377477645874023
    10. '[E' → logprob: -18.377477645874023

Token 707: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.375001907348633
    4. '       ' → logprob: -15.875001907348633
    5. '[pos' → logprob: -16.500001907348633
    6. '[x' → logprob: -16.750001907348633
    7. '```' → logprob: -17.125001907348633
    8. ' ' → logprob: -17.125001907348633
    9. '#' → logprob: -17.250001907348633
    10. '[
' → logprob: -17.625001907348633

Token 708: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -2.1008713702030946e-06
    2. ' po' → logprob: -13.375001907348633
    3. '[' → logprob: -15.125001907348633
    4. '(po' → logprob: -15.375001907348633
    5. 'Po' → logprob: -18.875001907348633
    6. '_po' → logprob: -19.875001907348633
    7. '.po' → logprob: -20.000001907348633
    8. 'poi' → logprob: -20.125001907348633
    9. 'pos' → logprob: -20.250001907348633
    10. '```' → logprob: -20.375001907348633

Token 709: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0008333319565281272
    2. ']:
' → logprob: -7.875833511352539
    3. '):' → logprob: -8.625833511352539
    4. ':' → logprob: -9.000833511352539
    5. ']' → logprob: -9.125833511352539
    6. '   ' → logprob: -11.000833511352539
    7. '       ' → logprob: -11.625833511352539
    8. ']:
' → logprob: -11.625833511352539
    9. '}:' → logprob: -13.500833511352539
    10. ']:

' → logprob: -13.875833511352539

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025165079161524773
    2. '<|end|>' → logprob: -4.02516508102417
    3. '   ' → logprob: -5.52516508102417
    4. ' if' → logprob: -6.90016508102417
    5. ':' → logprob: -7.52516508102417
    6. '	if' → logprob: -8.400164604187012
    7. '<|end|>' → logprob: -8.400164604187012
    8. '	   ' → logprob: -8.900164604187012
    9. '```' → logprob: -8.900164604187012
    10. '[' → logprob: -9.025164604187012

Token 711: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003742244793102145
    2. '   ' → logprob: -5.753742218017578
    3. ' if' → logprob: -8.128742218017578
    4. '       ' → logprob: -8.253742218017578
    5. '	if' → logprob: -12.003742218017578
    6. '<|end|>' → logprob: -13.753742218017578
    7. '#' (adapté à ' #') → logprob: -14.628742218017578
    8. '```' → logprob: -15.003742218017578
    9. ' ' → logprob: -15.753742218017578
    10. '  ' → logprob: -15.753742218017578

Token 712: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0445127372804563e-05
    2. '   ' → logprob: -11.87501049041748
    3. '#' → logprob: -13.87501049041748
    4. ' if' → logprob: -14.00001049041748
    5. 'neighbor' → logprob: -15.00001049041748
    6. '       ' → logprob: -15.75001049041748
    7. 'v' → logprob: -15.87501049041748
    8. 'flag' → logprob: -16.125009536743164
    9. 'i' → logprob: -16.250009536743164
    10. '	if' → logprob: -16.250009536743164

Token 713: ' un' (ID: 537)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0070285312831401825
    2. ' DEC' → logprob: -5.007028579711914
    3. 'D' → logprob: -8.632028579711914
    4. 'DIS' → logprob: -9.257028579711914
    5. ' ' → logprob: -11.382028579711914
    6. 'not' → logprob: -12.257028579711914
    7. 'len' → logprob: -12.257028579711914
    8. 'dec' → logprob: -12.382028579711914
    9. '   ' → logprob: -12.382028579711914
    10. ' not' → logprob: -12.757028579711914

Token 714: ' voisin' (ID: 145411)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.038324784487485886
    2. 'D' → logprob: -3.9133248329162598
    3. ' DEC' → logprob: -5.41332483291626
    4. 'DIS' → logprob: -5.53832483291626
    5. 'not' → logprob: -6.28832483291626
    6. 'dec' → logprob: -6.41332483291626
    7. ' not' → logprob: -7.72582483291626
    8. '==' → logprob: -8.100824356079102
    9. '[' → logprob: -8.225824356079102
    10. 'neighbor' → logprob: -8.288324356079102

Token 715: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9138272404670715
    2. 'DEC' → logprob: -1.0388271808624268
    3. 'a' → logprob: -2.7888271808624268
    4. '!=' → logprob: -3.0388271808624268
    5. 'est' → logprob: -3.9138271808624268
    6. '==' → logprob: -4.663827419281006
    7. ' !=' → logprob: -4.913827419281006
    8. '#' → logprob: -5.038827419281006
    9. 's' → logprob: -5.038827419281006
    10. 'is' → logprob: -5.038827419281006

Token 716: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0005653033731505275
    2. 'DEC' → logprob: -7.625565528869629
    3. 'to' → logprob: -11.000565528869629
    4. ' po' → logprob: -11.250565528869629
    5. '(po' → logprob: -11.625565528869629
    6. 'dec' → logprob: -12.000565528869629
    7. '#' → logprob: -12.625565528869629
    8. '```' → logprob: -12.750565528869629
    9. 'p' → logprob: -12.875565528869629
    10. '[' → logprob: -13.000565528869629

Token 717: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06647276133298874
    2. ' a' → logprob: -3.4414727687835693
    3. 'est' → logprob: -4.19147253036499
    4. '[' → logprob: -5.44147253036499
    5. 'DEC' → logprob: -5.94147253036499
    6. ' est' → logprob: -6.19147253036499
    7. 'has' → logprob: -6.44147253036499
    8. ' has' → logprob: -6.44147253036499
    9. 'n' → logprob: -7.19147253036499
    10. 's' → logprob: -7.56647253036499

Token 718: ' déjà' (ID: 21229)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.783473551273346
    2. '""' → logprob: -1.6584734916687012
    3. 'DEC' → logprob: -1.6584734916687012
    4. '"' → logprob: -2.283473491668701
    5. ' not' → logprob: -4.033473491668701
    6. '"D' → logprob: -4.033473491668701
    7. 'non' → logprob: -5.908473491668701
    8. '   ' → logprob: -6.033473491668701
    9. 'dec' → logprob: -6.158473491668701
    10. 'd' → logprob: -6.408473491668701

Token 719: ' color' (ID: 3089)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.056557513773441315
    2. '"' → logprob: -3.4315574169158936
    3. 'dec' → logprob: -4.806557655334473
    4. 'not' → logprob: -5.181557655334473
    5. '""' → logprob: -5.181557655334473
    6. '```' → logprob: -6.931557655334473
    7. '"D' → logprob: -7.931557655334473
    8. 'non' → logprob: -8.306557655334473
    9. ''' → logprob: -8.556557655334473
    10. ' DEC' → logprob: -9.056557655334473

Token 720: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.22720006108283997
    2. 'é' → logprob: -1.6022000312805176
    3. 'i' → logprob: -7.102200031280518
    4. 'ie' → logprob: -8.477200508117676
    5. '=' → logprob: -8.477200508117676
    6. 'ée' → logprob: -8.852200508117676
    7. 'isé' → logprob: -8.852200508117676
    8. '!=' → logprob: -10.227200508117676
    9. 'e' → logprob: -10.477200508117676
    10. 'ieux' → logprob: -10.477200508117676

Token 721: ' ("' (ID: 7109)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.27114200592041016
    2. ' and' → logprob: -2.14614200592041
    3. ':' → logprob: -2.64614200592041
    4. '   ' → logprob: -3.89614200592041
    5. '!=' → logprob: -4.39614200592041
    6. ':
' → logprob: -5.14614200592041
    7. '==' → logprob: -5.52114200592041
    8. ' !=' → logprob: -6.64614200592041
    9. '[' → logprob: -6.89614200592041
    10. '=' → logprob: -7.14614200592041

Token 722: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1901325136423111
    2. 'W' → logprob: -2.0651326179504395
    3. '"' → logprob: -3.1901326179504395
    4. '"B' → logprob: -6.1901326179504395
    5. '""' → logprob: -6.5651326179504395
    6. '")' → logprob: -7.3151326179504395
    7. '"W' → logprob: -7.5651326179504395
    8. 'DEC' → logprob: -8.565132141113281
    9. ''' → logprob: -9.690132141113281
    10. ' B' → logprob: -10.315132141113281

Token 723: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.44547078013420105
    2. '")' → logprob: -1.0704708099365234
    3. '"),' → logprob: -4.820470809936523
    4. '"):
' → logprob: -5.445470809936523
    5. '"):' → logprob: -6.195470809936523
    6. ' ")' → logprob: -7.945470809936523
    7. 'or' → logprob: -8.070470809936523
    8. ' "' → logprob: -8.195470809936523
    9. ' or' → logprob: -8.195470809936523
    10. '"):
' → logprob: -8.820470809936523

Token 724: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5820897221565247
    2. 'or' → logprob: -1.4570896625518799
    3. ')' → logprob: -1.8320896625518799
    4. '==' → logprob: -4.582089900970459
    5. '):' → logprob: -4.832089900970459
    6. 'if' → logprob: -5.457089900970459
    7. 'and' → logprob: -5.457089900970459
    8. '")' → logprob: -5.707089900970459
    9. '   ' → logprob: -6.332089900970459
    10. '"' → logprob: -6.332089900970459

Token 725: ' "' (ID: 392)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.011985041201114655
    2. 'W' → logprob: -4.636984825134277
    3. ' "' → logprob: -6.386984825134277
    4. '"' → logprob: -7.761984825134277
    5. ' W' → logprob: -9.761984825134277
    6. '
' → logprob: -11.011984825134277
    7. ''' → logprob: -11.636984825134277
    8. '<W' → logprob: -11.636984825134277
    9. '```' → logprob: -12.136984825134277
    10. '	W' → logprob: -12.386984825134277

Token 726: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -6.289473822107539e-05
    2. ' W' → logprob: -10.000062942504883
    3. '"W' → logprob: -11.375062942504883
    4. '"' → logprob: -13.250062942504883
    5. ' ' → logprob: -13.625062942504883
    6. '	W' → logprob: -14.562562942504883
    7. '```' → logprob: -14.812562942504883
    8. '   ' → logprob: -15.250062942504883
    9. 'B' → logprob: -15.500062942504883
    10. '")' → logprob: -15.500062942504883

Token 727: '"),' (ID: 7645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.5804868936538696
    2. '")' → logprob: -1.3304868936538696
    3. '"):
' → logprob: -2.45548677444458
    4. '"),' → logprob: -2.83048677444458
    5. '"' → logprob: -3.70548677444458
    6. ')' → logprob: -6.45548677444458
    7. '   ' → logprob: -6.83048677444458
    8. '):' → logprob: -7.58048677444458
    9. '==' → logprob: -7.70548677444458
    10. ' "),' → logprob: -8.205487251281738

Token 728: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07792879641056061
    2. '       ' → logprob: -3.3279287815093994
    3. ' if' → logprob: -3.3279287815093994
    4. '   ' → logprob: -5.9529290199279785
    5. '           ' → logprob: -7.9529290199279785
    6. 'continue' → logprob: -9.45292854309082
    7. '	if' → logprob: -9.95292854309082
    8. 'flag' → logprob: -10.07792854309082
    9. '<|end|>' → logprob: -11.07792854309082
    10. ':' → logprob: -11.32792854309082

Token 729: ' note' (ID: 7477)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.6763335466384888
    2. 'if' → logprob: -1.5513335466384888
    3. ' flag' → logprob: -1.6763335466384888
    4. ' if' → logprob: -3.301333427429199
    5. 'continue' → logprob: -4.051333427429199
    6. ' not' → logprob: -4.551333427429199
    7. 'DEC' → logprob: -5.051333427429199
    8. '       ' → logprob: -5.176333427429199
    9. 'not' → logprob: -5.801333427429199
    10. ' DEC' → logprob: -5.801333427429199

Token 730: ' le' (ID: 505)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.025610676035284996
    2. ' flag' → logprob: -4.400610446929932
    3. '   ' → logprob: -4.525610446929932
    4. ' que' → logprob: -7.275610446929932
    5. 'que' → logprob: -7.525610446929932
    6. '       ' → logprob: -8.52561092376709
    7. '	flag' → logprob: -8.90061092376709
    8. ' ' → logprob: -9.02561092376709
    9. 'that' → logprob: -9.27561092376709
    10. ' that' → logprob: -9.65061092376709

Token 731: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.007549596950411797
    2. '1' → logprob: -5.88254976272583
    3. ' flag' → logprob: -6.13254976272583
    4. 'if' → logprob: -6.38254976272583
    5. 'dec' → logprob: -8.632549285888672
    6. 'break' → logprob: -9.007549285888672
    7. 'DEC' → logprob: -9.382549285888672
    8. 'd' → logprob: -9.507549285888672
    9. 'continue' → logprob: -9.507549285888672
    10. '"' → logprob: -10.132549285888672

Token 732: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11315525323152542
    2. ' =' → logprob: -2.2381553649902344
    3. '           ' → logprob: -9.238155364990234
    4. '+=' → logprob: -9.488155364990234
    5. '   ' → logprob: -9.863155364990234
    6. ' +=' → logprob: -10.238155364990234
    7. '       ' → logprob: -10.863155364990234
    8. '=True' → logprob: -11.238155364990234
    9. '               ' → logprob: -11.738155364990234
    10. ' |=' → logprob: -11.863155364990234

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4356386959552765
    2. '   ' → logprob: -1.060638666152954
    3. ' if' → logprob: -6.310638904571533
    4. '<|end|>' → logprob: -6.810638904571533
    5. '	if' → logprob: -7.185638904571533
    6. '[' → logprob: -7.310638904571533
    7. 'if' → logprob: -7.310638904571533
    8. '    ' → logprob: -7.935638904571533
    9. ' ' → logprob: -8.435638427734375
    10. '	' → logprob: -8.560638427734375

Token 734: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0045579345896840096
    2. ' if' → logprob: -5.504558086395264
    3. '       ' → logprob: -7.879558086395264
    4. '   ' → logprob: -9.254557609558105
    5. '	if' → logprob: -12.504557609558105
    6. '```' → logprob: -14.754557609558105
    7. ' ' → logprob: -15.004557609558105
    8. '           ' → logprob: -15.254557609558105
    9. '  ' → logprob: -15.379557609558105
    10. 'If' → logprob: -15.629557609558105

Token 735: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0003015001420862973
    2. ' DEC' → logprob: -8.125301361083984
    3. 'len' → logprob: -12.750301361083984
    4. '   ' → logprob: -13.500301361083984
    5. '_DEC' → logprob: -14.750301361083984
    6. ' ' → logprob: -15.125301361083984
    7. 'dec' → logprob: -15.625301361083984
    8. 'not' → logprob: -16.000301361083984
    9. 'D' → logprob: -16.875301361083984
    10. 'DE' → logprob: -17.500301361083984

Token 736: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.04361550882458687
    2. 'DEC' → logprob: -3.2936155796051025
    3. 'ED' → logprob: -5.918615341186523
    4. 'IDE' → logprob: -6.918615341186523
    5. 'IS' → logprob: -7.293615341186523
    6. 'IC' → logprob: -7.918615341186523
    7. 'I' → logprob: -8.668615341186523
    8. '[' → logprob: -8.793615341186523
    9. 'IDES' → logprob: -9.793615341186523
    10. '_DEC' → logprob: -10.043615341186523

Token 737: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.0009725636919029057
    2. 'DED' → logprob: -7.000972747802734
    3. 'DEC' → logprob: -10.625972747802734
    4. 'SED' → logprob: -12.125972747802734
    5. 'CED' → logprob: -12.375972747802734
    6. 'RED' → logprob: -12.750972747802734
    7. '[' → logprob: -12.875972747802734
    8. 'DE' → logprob: -13.000972747802734
    9. 'VED' → logprob: -13.125972747802734
    10. 'O' → logprob: -13.250972747802734

Token 738: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0009115827269852161
    2. '[' → logprob: -7.000911712646484
    3. '[pos' → logprob: -16.875911712646484
    4. ' [' → logprob: -17.000911712646484
    5. '[from' → logprob: -18.250911712646484
    6. '[[' → logprob: -18.750911712646484
    7. '[tmp' → logprob: -18.875911712646484
    8. '```' → logprob: -19.000911712646484
    9. '[temp' → logprob: -19.125911712646484
    10. 'to' → logprob: -19.125911712646484

Token 739: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1147514581680298
    2. '!=' → logprob: -1.1147514581680298
    3. ']:' → logprob: -1.7397514581680298
    4. ']!=' → logprob: -1.8647514581680298
    5. '!="' → logprob: -5.11475133895874
    6. ']==' → logprob: -6.23975133895874
    7. '[' → logprob: -6.48975133895874
    8. ' !=' → logprob: -6.48975133895874
    9. '==' → logprob: -6.98975133895874
    10. ']:
' → logprob: -7.98975133895874

Token 740: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.006175502203404903
    2. ' !=' → logprob: -5.756175518035889
    3. ':' → logprob: -6.131175518035889
    4. '!="' → logprob: -7.506175518035889
    5. '==' → logprob: -8.38117504119873
    6. '!='' → logprob: -11.25617504119873
    7. '!' → logprob: -11.63117504119873
    8. '!==' → logprob: -12.25617504119873
    9. '[' → logprob: -12.63117504119873
    10. '>' → logprob: -12.63117504119873

Token 741: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.01532425545156002
    2. '"":' → logprob: -5.015324115753174
    3. '''' → logprob: -5.140324115753174
    4. '"' → logprob: -6.015324115753174
    5. ''' → logprob: -8.265324592590332
    6. ' ""' → logprob: -11.015324592590332
    7. '"""' → logprob: -14.515324592590332
    8. ' "' → logprob: -15.265324592590332
    9. ' "":
' → logprob: -16.015323638916016
    10. '"",' → logprob: -16.015323638916016

Token 742: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033432088792324066
    2. '       ' → logprob: -3.6584320068359375
    3. ' :' → logprob: -5.9084320068359375
    4. ' and' → logprob: -6.9084320068359375
    5. '           ' → logprob: -7.0334320068359375
    6. '<|end|>' → logprob: -7.0334320068359375
    7. ',' → logprob: -7.7834320068359375
    8. ':
' → logprob: -7.9084320068359375
    9. '):' → logprob: -8.408432006835938
    10. ' or' → logprob: -9.033432006835938

Token 743: ' flag' (ID: 9641)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7471762895584106
    2. '<|end|>' → logprob: -1.7471762895584106
    3. '           ' → logprob: -1.8721762895584106
    4. '               ' → logprob: -2.622176170349121
    5. '   ' → logprob: -3.497176170349121
    6. '[' → logprob: -3.747176170349121
    7. ' flag' → logprob: -3.872176170349121
    8. '\n' → logprob: -4.997176170349121
    9. ' ' → logprob: -5.372176170349121
    10. 'flag' (adapté à ' flag') → logprob: -5.497176170349121

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716079078614712
    2. ' =' → logprob: -5.006716251373291
    3. '==' → logprob: -14.631715774536133
    4. '+=' → logprob: -16.006715774536133
    5. ' ==' → logprob: -16.506715774536133
    6. '   ' → logprob: -17.131715774536133
    7. ':' → logprob: -17.506715774536133
    8. ' +=' → logprob: -17.506715774536133
    9. '>' → logprob: -18.006715774536133
    10. '=

' → logprob: -18.006715774536133

Token 745: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030269217677414417
    2. ' ' → logprob: -8.1253023147583
    3. 'True' → logprob: -12.2503023147583
    4. ' True' → logprob: -13.6253023147583
    5. '   ' → logprob: -14.3753023147583
    6. '  ' → logprob: -17.687803268432617
    7. 'true' → logprob: -18.125303268432617
    8. ' ' → logprob: -18.187803268432617
    9. '	' → logprob: -18.875303268432617
    10. '１' → logprob: -18.875303268432617

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.015305552864447e-05
    2. 'True' → logprob: -9.875060081481934
    3. ' ' → logprob: -11.750060081481934
    4. '   ' → logprob: -14.750060081481934
    5. ' True' → logprob: -15.375060081481934
    6. '2' → logprob: -17.56256103515625
    7. '
' → logprob: -17.68756103515625
    8. 'true' → logprob: -17.68756103515625
    9. '  ' → logprob: -18.06256103515625
    10. '	' → logprob: -18.06256103515625

Token 747: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 748: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7761614322662354
    2. '<|end|>' → logprob: -1.2761614322662354
    3. '   ' → logprob: -1.9011614322662354
    4. '       ' → logprob: -2.4011614322662354
    5. '            
' → logprob: -5.651161193847656
    6. '    ' → logprob: -5.651161193847656
    7. '    
' → logprob: -6.026161193847656
    8. ' ' → logprob: -6.401161193847656
    9. ' 
' → logprob: -6.901161193847656
    10. '<|end|>' → logprob: -6.901161193847656

Token 749: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017154647037386894
    2. 'break' (adapté à ' break') → logprob: -4.892154693603516
    3. '       ' → logprob: -5.767154693603516
    4. 'if' → logprob: -6.017154693603516
    5. ' if' → logprob: -6.017154693603516
    6. ' break' → logprob: -7.517154693603516
    7. 'continue' → logprob: -8.642154693603516
    8. '               ' → logprob: -8.767154693603516
    9. 'for' → logprob: -9.017154693603516
    10. '   ' → logprob: -9.017154693603516

Token 750: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018292054533958435
    2. '       ' → logprob: -4.76829195022583
    3. '    
' → logprob: -5.89329195022583
    4. '    ' → logprob: -6.14329195022583
    5. '<|end|>' → logprob: -6.26829195022583
    6. 'if' → logprob: -7.89329195022583
    7. '.' → logprob: -7.89329195022583
    8. '        
' → logprob: -8.143292427062988
    9. '\t' → logprob: -9.018292427062988
    10. ' if' → logprob: -9.143292427062988

Token 751: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2234928458929062
    2. '<|end|>' → logprob: -2.4734928607940674
    3. '    
' → logprob: -3.7234928607940674
    4. ' 
' → logprob: -4.223492622375488
    5. 'if' → logprob: -4.348492622375488
    6. '       ' → logprob: -4.473492622375488
    7. '    ' → logprob: -4.848492622375488
    8. '
' → logprob: -4.848492622375488
    9. ' if' → logprob: -5.098492622375488
    10. '\n' → logprob: -5.473492622375488

Token 752: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.890836238861084
    2. '   ' → logprob: -1.140836238861084
    3. '       ' → logprob: -1.640836238861084
    4. '           ' → logprob: -4.140836238861084
    5. '    ' → logprob: -4.390836238861084
    6. 'for' → logprob: -4.890836238861084
    7. ' if' → logprob: -4.890836238861084
    8. '#' → logprob: -5.015836238861084
    9. '.' → logprob: -5.265836238861084
    10. '<|end|>' → logprob: -5.890836238861084

Token 753: ' n' (ID: 297)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15802988409996033
    2. ' continue' → logprob: -2.033029794692993
    3. '       ' → logprob: -5.533030033111572
    4. 'contin' → logprob: -5.533030033111572
    5. '           ' → logprob: -5.783030033111572
    6. ')' → logprob: -6.658030033111572
    7. '   ' → logprob: -7.408030033111572
    8. ' )' → logprob: -7.533030033111572
    9. ' continues' → logprob: -8.158029556274414
    10. ' ' → logprob: -8.283029556274414

Token 754: ''a' (ID: 10443)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2840937376022339
    2. ' ' → logprob: -1.7840937376022339
    3. '   ' → logprob: -1.9090937376022339
    4. ')' → logprob: -2.4090938568115234
    5. '           ' → logprob: -2.4090938568115234
    6. '    ' → logprob: -2.9090938568115234
    7. '<|end|>' → logprob: -3.6590938568115234
    8. ' )' → logprob: -3.7840938568115234
    9. 'continue' → logprob: -4.034093856811523
    10. '.' → logprob: -4.034093856811523

Token 755: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3954443335533142
    2. 'pas' → logprob: -1.145444393157959
    3. '           ' → logprob: -6.270444393157959
    4. ' ' → logprob: -6.520444393157959
    5. ' rien' → logprob: -7.520444393157959
    6. ' peut' → logprob: -7.770444393157959
    7. '_pas' → logprob: -7.770444393157959
    8. 'contin' → logprob: -8.0204439163208
    9. '       ' → logprob: -8.2704439163208
    10. ')' → logprob: -8.2704439163208

Token 756: ' besoin' (ID: 27703)
  Prédit: ' besoin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' besoin' → logprob: -0.6679035425186157
    2. ' pas' → logprob: -1.5429035425186157
    3. 'pas' → logprob: -2.167903423309326
    4. ' ' → logprob: -2.292903423309326
    5. ' plus' → logprob: -4.167903423309326
    6. 'contin' → logprob: -4.292903423309326
    7. 'plus' → logprob: -5.417903423309326
    8. ' need' → logprob: -5.667903423309326
    9. ' à' → logprob: -5.792903423309326
    10. 'bes' → logprob: -6.167903423309326

Token 757: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7059231996536255
    2. 'de' → logprob: -0.7059231996536255
    3. 'd' → logprob: -5.205923080444336
    4. 'pas' → logprob: -6.205923080444336
    5. 'contin' → logprob: -6.580923080444336
    6. ' d' → logprob: -6.830923080444336
    7. 'plus' → logprob: -7.205923080444336
    8. '           ' → logprob: -7.705923080444336
    9. 'continue' → logprob: -8.080923080444336
    10. '   ' → logprob: -8.205923080444336

Token 758: ''en' (ID: 16740)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.07649765908718109
    2. ' continuer' → logprob: -3.4514975547790527
    3. 'continue' → logprob: -3.5764975547790527
    4. 'continu' → logprob: -5.451497554779053
    5. 'pas' → logprob: -5.951497554779053
    6. 'aller' → logprob: -6.201497554779053
    7. ''aller' → logprob: -6.576497554779053
    8. ' poursuivre' → logprob: -7.326497554779053
    9. 'chercher' → logprob: -7.576497554779053
    10. 'plus' → logprob: -7.701497554779053

Token 759: ' chercher' (ID: 79602)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.7625683546066284
    2. 'contin' → logprob: -1.6375683546066284
    3. 'core' → logprob: -2.137568473815918
    4. 'trer' → logprob: -3.262568473815918
    5. 'chercher' → logprob: -3.387568473815918
    6. 'tr' → logprob: -3.512568473815918
    7. ' continuer' → logprob: -4.012568473815918
    8. 'c' → logprob: -4.137568473815918
    9. '```' → logprob: -4.387568473815918
    10. 't' → logprob: -4.512568473815918

Token 760: ' d' (ID: 272)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0007407767116092145
    2. 'd' → logprob: -7.750741004943848
    3. ' plus' → logprob: -8.750741004943848
    4. '+' → logprob: -9.375741004943848
    5. 'dav' → logprob: -10.875741004943848
    6. '```' → logprob: -11.250741004943848
    7. ' davantage' → logprob: -11.875741004943848
    8. 'ailleurs' → logprob: -12.125741004943848
    9. 'more' → logprob: -12.250741004943848
    10. 'un' → logprob: -12.375741004943848

Token 761: ''autres' (ID: 38753)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -1.0837575197219849
    2. 'plus' → logprob: -1.4587575197219849
    3. ''autres' → logprob: -1.4587575197219849
    4. ''av' → logprob: -2.4587574005126953
    5. ''autre' → logprob: -2.9587574005126953
    6. 'av' → logprob: -3.4587574005126953
    7. '```' → logprob: -4.208757400512695
    8. ''aut' → logprob: -5.708757400512695
    9. 'e' → logprob: -6.333757400512695
    10. 'avant' → logprob: -6.833757400512695

Token 762: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03212132677435875
    2. 'if' → logprob: -3.907121419906616
    3. ' if' → logprob: -5.782121181488037
    4. '<|end|>' → logprob: -6.282121181488037
    5. '	if' → logprob: -6.407121181488037
    6. '       ' → logprob: -6.782121181488037
    7. '    ' → logprob: -7.032121181488037
    8. '\t' → logprob: -7.282121181488037
    9. '    
' → logprob: -7.532121181488037
    10. '```' → logprob: -7.657121181488037

Token 764: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5991597771644592
    2. '   ' → logprob: -0.8491597771644592
    3. ' if' → logprob: -3.8491597175598145
    4. '	if' → logprob: -7.7241597175598145
    5. '    
' → logprob: -7.8491597175598145
    6. '<|end|>' → logprob: -8.599160194396973
    7. '    ' → logprob: -9.224160194396973
    8. '       ' → logprob: -9.349160194396973
    9. ' ' → logprob: -9.349160194396973
    10. '  ' → logprob: -9.599160194396973

Token 765: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01437151525169611
    2. '   ' → logprob: -4.264371395111084
    3. ' if' → logprob: -8.514371871948242
    4. '    
' → logprob: -13.389371871948242
    5. '	if' → logprob: -13.639371871948242
    6. '```' → logprob: -13.889371871948242
    7. 'continue' → logprob: -14.139371871948242
    8. 'If' → logprob: -14.264371871948242
    9. '  ' → logprob: -14.764371871948242
    10. '#' → logprob: -15.014371871948242

Token 766: ' po' (ID: 2482)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6146340370178223
    2. 'flag' → logprob: -1.4896340370178223
    3. ' not' → logprob: -1.6146340370178223
    4. 'not' → logprob: -3.3646340370178223
    5. '	flag' → logprob: -10.364633560180664
    6. '(flag' → logprob: -10.614633560180664
    7. ' ' → logprob: -10.739633560180664
    8. ' ' → logprob: -11.114633560180664
    9. 'DEC' → logprob: -11.114633560180664
    10. ' DEC' → logprob: -11.677133560180664

Token 767: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2933257818222046
    2. ' ==' → logprob: -1.5433257818222046
    3. '==' → logprob: -2.043325901031494
    4. 'not' → logprob: -2.543325901031494
    5. ' !=' → logprob: -2.668325901031494
    6. '!=' → logprob: -3.293325901031494
    7. ' in' → logprob: -3.668325901031494
    8. ':' → logprob: -4.043325901031494
    9. '   ' → logprob: -4.043325901031494
    10. '<|end|>' → logprob: -4.043325901031494

Token 768: ''a' (ID: 10443)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.01613091118633747
    2. 'o' → logprob: -4.2661309242248535
    3. 'on' → logprob: -7.1411309242248535
    4. 'e' → logprob: -8.266130447387695
    5. '#' → logprob: -8.516130447387695
    6. ''est' → logprob: -8.766130447387695
    7. 'a' → logprob: -9.516130447387695
    8. 'pas' → logprob: -9.641130447387695
    9. 'oise' → logprob: -10.016130447387695
    10. 'n' → logprob: -10.141130447387695

Token 769: ' aucun' (ID: 41678)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.04417966306209564
    2. ' pas' → logprob: -3.294179677963257
    3. '=' → logprob: -6.169179439544678
    4. 't' → logprob: -6.919179439544678
    5. ' ==' → logprob: -7.169179439544678
    6. 'pas' → logprob: -7.294179439544678
    7. '==' → logprob: -7.919179439544678
    8. 'et' → logprob: -8.919179916381836
    9. ' not' → logprob: -9.294179916381836
    10. 'not' → logprob: -9.419179916381836

Token 770: ' voisin' (ID: 145411)
  Prédit: ' voisin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.8016919493675232
    2. 'neighbor' → logprob: -1.551692008972168
    3. ' neighbor' → logprob: -2.301692008972168
    4. ' color' → logprob: -2.926692008972168
    5. ' flag' → logprob: -2.926692008972168
    6. 'color' → logprob: -3.676692008972168
    7. 'flag' → logprob: -3.676692008972168
    8. 'vo' → logprob: -4.176692008972168
    9. ' voisins' → logprob: -4.926692008972168
    10. ' colored' → logprob: -5.051692008972168

Token 771: ' déjà' (ID: 21229)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.24470220506191254
    2. ' color' → logprob: -2.744702100753784
    3. ' ==' → logprob: -3.369702100753784
    4. ':' → logprob: -3.619702100753784
    5. '   ' → logprob: -3.994702100753784
    6. '==' → logprob: -4.244702339172363
    7. '.' → logprob: -4.744702339172363
    8. ' !=' → logprob: -5.244702339172363
    9. '_color' → logprob: -5.494702339172363
    10. 'colored' → logprob: -5.494702339172363

Token 772: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.011646468192338943
    2. ' color' → logprob: -4.636646270751953
    3. 'colored' → logprob: -7.386646270751953
    4. 'd' → logprob: -7.636646270751953
    5. '```' → logprob: -8.011646270751953
    6. 'col' → logprob: -8.636646270751953
    7. ' colori' → logprob: -10.386646270751953
    8. '_color' → logprob: -10.511646270751953
    9. '	color' → logprob: -10.761646270751953
    10. '""' → logprob: -10.761646270751953

Token 773: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.0006099864258430898
    2. 'i' → logprob: -7.625609874725342
    3. 'é' → logprob: -9.3756103515625
    4. 'isé' → logprob: -10.3756103515625
    5. 'ifié' → logprob: -13.1256103515625
    6. '[i' → logprob: -13.5006103515625
    7. 'ie' → logprob: -14.6256103515625
    8. 'iqué' → logprob: -14.8756103515625
    9. 'lié' → logprob: -15.1256103515625
    10. 'iable' → logprob: -15.5006103515625

Token 774: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00936549250036478
    2. ',' → logprob: -5.509365558624268
    3. ':
' → logprob: -5.759365558624268
    4. '   ' → logprob: -6.259365558624268
    5. ' :' → logprob: -9.25936508178711
    6. 'continue' → logprob: -10.13436508178711
    7. '.' → logprob: -10.88436508178711
    8. ' or' → logprob: -11.25936508178711
    9. ' and' → logprob: -11.75936508178711
    10. ' continue' → logprob: -11.75936508178711

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006551004946231842
    2. '    
' → logprob: -6.3815507888793945
    3. ' if' → logprob: -6.3815507888793945
    4. 'if' → logprob: -7.3815507888793945
    5. '[' → logprob: -7.5065507888793945
    6. '```' → logprob: -7.5065507888793945
    7. '   ' → logprob: -7.8815507888793945
    8. '       ' → logprob: -7.8815507888793945
    9. ',' → logprob: -8.506550788879395
    10. '
' → logprob: -9.756550788879395

Token 776: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19558614492416382
    2. 'if' (adapté à ' if') → logprob: -1.8205862045288086
    3. ' if' → logprob: -4.320586204528809
    4. '       ' → logprob: -6.695586204528809
    5. '```' → logprob: -7.070586204528809
    6. 'continue' → logprob: -9.570586204528809
    7. '    
' → logprob: -9.695586204528809
    8. '   ' → logprob: -9.820586204528809
    9. '	if' → logprob: -10.070586204528809
    10. ' continue' → logprob: -10.820586204528809

Token 777: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.13308116793632507
    2. ' flag' → logprob: -2.3830811977386475
    3. 'not' → logprob: -4.008080959320068
    4. ' not' → logprob: -4.258080959320068
    5. '(flag' → logprob: -11.883081436157227
    6. '	flag' → logprob: -12.133081436157227
    7. '   ' → logprob: -13.008081436157227
    8. '!' → logprob: -13.633081436157227
    9. 'dec' → logprob: -13.883081436157227
    10. ' ' → logprob: -13.883081436157227

Token 778: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759756565093994
    2. ' ==' → logprob: -0.8259756565093994
    3. '=' → logprob: -11.20097541809082
    4. ':' → logprob: -12.07597541809082
    5. '==
' → logprob: -12.07597541809082
    6. '0' → logprob: -12.95097541809082
    7. ')==' → logprob: -13.07597541809082
    8. ' =' → logprob: -13.32597541809082
    9. ' ' → logprob: -13.70097541809082
    10. ' :' → logprob: -14.07597541809082

Token 779: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004895264864899218
    2. ' ' → logprob: -7.625489711761475
    3. '1' → logprob: -13.875489234924316
    4. '=' → logprob: -15.375489234924316
    5. '۰' → logprob: -15.875489234924316
    6. '   ' → logprob: -16.000490188598633
    7. '<|end|>' → logprob: -17.187990188598633
    8. '০' → logprob: -17.437990188598633
    9. '０' → logprob: -17.500490188598633
    10. '01' → logprob: -17.875490188598633

Token 780: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.750031471252441
    4. '=' → logprob: -16.625032424926758
    5. '۰' → logprob: -16.625032424926758
    6. '<|end|>' → logprob: -17.125032424926758
    7. '０' → logprob: -18.625032424926758
    8. '00' → logprob: -18.750032424926758
    9. '০' → logprob: -19.062532424926758
    10. '   ' → logprob: -19.125032424926758

Token 781: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5728429555892944
    2. ':
' → logprob: -0.9478429555892944
    3. '   ' → logprob: -3.072843074798584
    4. '       ' → logprob: -7.447843074798584
    5. '[' → logprob: -7.447843074798584
    6. ' and' → logprob: -7.822843074798584
    7. ':

' → logprob: -8.697842597961426
    8. ',' → logprob: -8.822842597961426
    9. ' :
' → logprob: -9.572842597961426
    10. ' :' → logprob: -9.697842597961426

Token 782: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03563746064901352
    2. '       ' → logprob: -3.410637378692627
    3. 'DEC' → logprob: -6.910637378692627
    4. '	' → logprob: -8.410637855529785
    5. '```' → logprob: -8.785637855529785
    6. '   ' → logprob: -8.910637855529785
    7. '    
' → logprob: -9.660637855529785
    8. '	   ' → logprob: -9.910637855529785
    9. '[' → logprob: -10.285637855529785
    10. '        
' → logprob: -10.410637855529785

Token 783: ' #' (ID: 1069)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.06286890059709549
    2. '   ' → logprob: -2.81286883354187
    3. ' DEC' → logprob: -7.562869071960449
    4. 'if' → logprob: -9.06286907196045
    5. 'import' → logprob: -9.31286907196045
    6. '       ' → logprob: -9.93786907196045
    7. 'for' → logprob: -11.31286907196045
    8. ' ' → logprob: -11.43786907196045
    9. 'continue' → logprob: -11.43786907196045
    10. '_DEC' → logprob: -11.43786907196045

Token 784: ' Pour' (ID: 13931)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.002270039403811097
    2. '   ' → logprob: -6.127270221710205
    3. ' DEC' → logprob: -10.127269744873047
    4. 'if' → logprob: -10.502269744873047
    5. 'import' → logprob: -12.002269744873047
    6. '       ' → logprob: -12.627269744873047
    7. 'continue' → logprob: -13.627269744873047
    8. ' ' → logprob: -13.877269744873047
    9. 'DE' → logprob: -14.127269744873047
    10. '           ' → logprob: -14.377269744873047

Token 785: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9651454091072083
    2. 'i' → logprob: -1.8401453495025635
    3. 'DEC' → logprob: -1.8401453495025635
    4. ' po' → logprob: -2.9651453495025635
    5. 'to' → logprob: -3.5901453495025635
    6. ' node' → logprob: -3.7151453495025635
    7. ' ind' → logprob: -3.8401453495025635
    8. ' DEC' → logprob: -3.9651453495025635
    9. 'dec' → logprob: -4.090145587921143
    10. 'v' → logprob: -4.465145587921143

Token 786: ' voisin' (ID: 145411)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03895823284983635
    2. 'neighbor' → logprob: -3.7889583110809326
    3. 'vo' → logprob: -5.0389580726623535
    4. ' to' → logprob: -6.0389580726623535
    5. 'v' → logprob: -6.1639580726623535
    6. 'i' → logprob: -6.7889580726623535
    7. ' voisin' → logprob: -7.4139580726623535
    8. ' neighbor' → logprob: -7.7889580726623535
    9. 'x' → logprob: -7.7889580726623535
    10. 'ne' → logprob: -7.9139580726623535

Token 787: ' non' (ID: 2893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.059267282485961914
    2. 'in' → logprob: -3.059267282485962
    3. '       ' → logprob: -5.434267044067383
    4. 'to' → logprob: -6.059267044067383
    5. '           ' → logprob: -6.184267044067383
    6. '   ' → logprob: -6.559267044067383
    7. '	in' → logprob: -8.559267044067383
    8. ' to' → logprob: -9.809267044067383
    9. ' of' → logprob: -10.059267044067383
    10. ',' → logprob: -10.684267044067383

Token 788: ' color' (ID: 3089)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33669906854629517
    2. 'in' → logprob: -1.5866990089416504
    3. 'po' → logprob: -4.21169900894165
    4. '   ' → logprob: -4.58669900894165
    5. 'dec' → logprob: -4.58669900894165
    6. '[]' → logprob: -4.83669900894165
    7. 'empty' → logprob: -5.71169900894165
    8. '[' → logprob: -5.71169900894165
    9. '=[]' → logprob: -5.83669900894165
    10. ' po' → logprob: -5.83669900894165

Token 789: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.0007995037594810128
    2. 'é' → logprob: -7.250799655914307
    3. 'i' → logprob: -9.625799179077148
    4. 'ie' → logprob: -11.750799179077148
    5. '   ' → logprob: -11.750799179077148
    6. '[i' → logprob: -13.625799179077148
    7. 'isé' → logprob: -14.000799179077148
    8. '  ' → logprob: -14.000799179077148
    9. 'ië' → logprob: -14.375799179077148
    10. 'ied' → logprob: -14.375799179077148

Token 790: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6865330934524536
    2. ' in' → logprob: -1.3115330934524536
    3. 'in' → logprob: -2.311532974243164
    4. '   ' → logprob: -3.061532974243164
    5. ':
' → logprob: -3.061532974243164
    6. '       ' → logprob: -4.561532974243164
    7. ',' → logprob: -5.061532974243164
    8. ' :' → logprob: -5.311532974243164
    9. ' as' → logprob: -5.686532974243164
    10. '           ' → logprob: -5.686532974243164

Token 791: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.004404955543577671
    2. ' po' → logprob: -5.5044050216674805
    3. 'E' → logprob: -8.75440502166748
    4. 'to' → logprob: -8.75440502166748
    5. '(po' → logprob: -12.62940502166748
    6. ' to' → logprob: -13.25440502166748
    7. ' E' → logprob: -13.62940502166748
    8. 'Po' → logprob: -13.87940502166748
    9. 'pos' → logprob: -14.50440502166748
    10. 'poi' → logprob: -14.62940502166748

Token 792: ' :
' (ID: 10039)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39130622148513794
    2. ':' → logprob: -1.5163061618804932
    3. '   ' → logprob: -3.016306161880493
    4. '           ' → logprob: -3.766306161880493
    5. '       ' → logprob: -4.016306400299072
    6. ',' → logprob: -4.391306400299072
    7. '[' → logprob: -8.016305923461914
    8. ':
' → logprob: -8.016305923461914
    9. '.' → logprob: -8.766305923461914
    10. '):
' → logprob: -8.766305923461914

Token 793: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4345545470714569
    2. '       ' → logprob: -1.1845545768737793
    3. ' for' → logprob: -3.4345545768737793
    4. 'for' → logprob: -4.309554576873779
    5. '```' → logprob: -7.684554576873779
    6. '	for' → logprob: -8.434554100036621
    7. ':' → logprob: -9.809554100036621
    8. '	   ' → logprob: -10.559554100036621
    9. '           ' → logprob: -10.684554100036621
    10. '   ' → logprob: -10.684554100036621

Token 794: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019513490842655301
    2. '   ' → logprob: -6.501951217651367
    3. 'DEC' → logprob: -7.876951217651367
    4. '       ' → logprob: -10.501951217651367
    5. ' for' → logprob: -10.751951217651367
    6. 'continue' → logprob: -11.751951217651367
    7. '           ' → logprob: -12.251951217651367
    8. '	for' → logprob: -12.876951217651367
    9. '```' → logprob: -13.501951217651367
    10. 'dec' → logprob: -13.751951217651367

Token 795: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11285541951656342
    2. ' to' → logprob: -2.2378554344177246
    3. 't' → logprob: -11.362854957580566
    4. '	to' → logprob: -12.112854957580566
    5. 'v' → logprob: -12.487854957580566
    6. ' ' → logprob: -13.425354957580566
    7. '```' → logprob: -13.487854957580566
    8. '   ' → logprob: -14.237854957580566
    9. ' ' → logprob: -14.300354957580566
    10. '  ' → logprob: -14.550354957580566

Token 796: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018317103385925293
    2. 'in' → logprob: -4.018317222595215
    3. ' ' → logprob: -9.268317222595215
    4. 'not' → logprob: -10.518317222595215
    5. '  ' → logprob: -11.268317222595215
    6. '	in' → logprob: -11.518317222595215
    7. '    ' → logprob: -12.018317222595215
    8. ' not' → logprob: -12.143317222595215
    9. '   ' → logprob: -12.143317222595215
    10. 's' → logprob: -14.018317222595215

Token 797: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.04301460087299347
    2. ' E' → logprob: -3.1680145263671875
    3. ' ' → logprob: -12.043014526367188
    4. '[E' → logprob: -13.043014526367188
    5. '[' → logprob: -13.543014526367188
    6. '   ' → logprob: -13.668014526367188
    7. ' range' → logprob: -13.793014526367188
    8. 'range' → logprob: -13.918014526367188
    9. '	E' → logprob: -13.918014526367188
    10. 'sorted' → logprob: -14.293014526367188

Token 798: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. ' [' → logprob: -13.37500286102295
    3. '[
' → logprob: -15.00000286102295
    4. '   ' → logprob: -15.25000286102295
    5. '```' → logprob: -15.25000286102295
    6. '[to' → logprob: -15.87500286102295
    7. '[pos' → logprob: -16.500003814697266
    8. '       ' → logprob: -16.625003814697266
    9. '[[' → logprob: -16.625003814697266
    10. ' ' → logprob: -16.875003814697266

Token 799: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -9.221884101862088e-05
    2. ' po' → logprob: -9.750092506408691
    3. '[' → logprob: -10.375092506408691
    4. '(po' → logprob: -13.250092506408691
    5. 'pos' → logprob: -15.500092506408691
    6. '   ' → logprob: -16.250091552734375
    7. 'p' → logprob: -16.250091552734375
    8. 'poj' → logprob: -16.875091552734375
    9. 'por' → logprob: -17.000091552734375
    10. '```' → logprob: -17.000091552734375

Token 800: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.18338461220264435
    2. ']:
' → logprob: -1.808384656906128
    3. ']:
' → logprob: -5.808384418487549
    4. ']' → logprob: -7.683384418487549
    5. ':' → logprob: -10.183384895324707
    6. ' ]' → logprob: -10.308384895324707
    7. ']:

' → logprob: -10.433384895324707
    8. '       ' → logprob: -10.683384895324707
    9. '   ' → logprob: -11.308384895324707
    10. '           ' → logprob: -12.058384895324707

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23320850729942322
    2. '       ' → logprob: -1.9832085371017456
    3. '   ' → logprob: -3.483208417892456
    4. '	       ' → logprob: -3.858208417892456
    5. '	   ' → logprob: -4.608208656311035
    6. ' if' → logprob: -5.983208656311035
    7. '		' → logprob: -6.483208656311035
    8. 'if' → logprob: -6.483208656311035
    9. '	' → logprob: -7.483208656311035
    10. '               ' → logprob: -7.608208656311035

Token 802: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9406611919403076
    2. 'DEC' → logprob: -1.0656611919403076
    3. 'if' → logprob: -2.1906611919403076
    4. 'DIS' → logprob: -2.5656611919403076
    5. '               ' → logprob: -3.1906611919403076
    6. '       ' → logprob: -4.190661430358887
    7. '   ' → logprob: -4.190661430358887
    8. ' if' → logprob: -6.065661430358887
    9. 'D' → logprob: -6.440661430358887
    10. ' DEC' → logprob: -8.565661430358887

Token 803: ' Si' (ID: 7832)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.7802804112434387
    2. 'DEC' → logprob: -1.405280351638794
    3. 'if' → logprob: -1.905280351638794
    4. 'edge' → logprob: -2.280280351638794
    5. 'D' → logprob: -3.905280351638794
    6. 'key' → logprob: -5.030280590057373
    7. 'dec' → logprob: -5.780280590057373
    8. 'dis' → logprob: -6.030280590057373
    9. '   ' → logprob: -6.155280590057373
    10. 'index' → logprob: -6.905280590057373

Token 804: ' le' (ID: 505)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.17360199987888336
    2. 'D' → logprob: -2.0486021041870117
    3. 'DIS' → logprob: -3.7986021041870117
    4. ' DEC' → logprob: -5.298602104187012
    5. ' D' → logprob: -6.673602104187012
    6. 'dec' → logprob: -7.298602104187012
    7. '   ' → logprob: -8.548602104187012
    8. 'to' → logprob: -8.923602104187012
    9. 'x' → logprob: -8.923602104187012
    10. 'dis' → logprob: -9.173602104187012

Token 805: ' dé' (ID: 2393)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.6333826184272766
    2. 'D' → logprob: -0.8833826184272766
    3. 'DIS' → logprob: -3.383382558822632
    4. 'dec' → logprob: -5.008382797241211
    5. 'to' → logprob: -5.383382797241211
    6. 'x' → logprob: -5.508382797241211
    7. ' D' → logprob: -6.258382797241211
    8. ' DEC' → logprob: -6.633382797241211
    9. 'dis' → logprob: -7.008382797241211
    10. 'po' → logprob: -7.633382797241211

Token 806: ' du' (ID: 1462)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.20180515944957733
    2. '[' → logprob: -1.7018051147460938
    3. 'D' → logprob: -9.076805114746094
    4. '[D' → logprob: -9.076805114746094
    5. ' [' → logprob: -9.451805114746094
    6. '[pos' → logprob: -10.951805114746094
    7. '>' → logprob: -10.951805114746094
    8. 'to' → logprob: -11.576805114746094
    9. '[from' → logprob: -11.576805114746094
    10. '```' → logprob: -12.076805114746094

Token 807: ' voisin' (ID: 145411)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10234328359365463
    2. 'po' → logprob: -2.3523433208465576
    3. 'D' → logprob: -6.8523430824279785
    4. ' to' → logprob: -7.3523430824279785
    5. ' po' → logprob: -8.102343559265137
    6. '[to' → logprob: -10.102343559265137
    7. ' D' → logprob: -10.477343559265137
    8. 'DEC' → logprob: -11.664843559265137
    9. '```' → logprob: -11.914843559265137
    10. '(po' → logprob: -12.164843559265137

Token 808: ' to' (ID: 316)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.3524320721626282
    2. '[' → logprob: -1.9774320125579834
    3. '>' → logprob: -2.3524320125579834
    4. ' >' → logprob: -3.3524320125579834
    5. 'to' → logprob: -4.2274322509765625
    6. ' <' → logprob: -5.7274322509765625
    7. '<' → logprob: -5.9774322509765625
    8. '[x' → logprob: -5.9774322509765625
    9. 'D' → logprob: -6.1024322509765625
    10. '[pos' → logprob: -7.9774322509765625

Token 809: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2088958024978638
    2. ' >' → logprob: -1.3338958024978638
    3. ' <' → logprob: -1.8338958024978638
    4. '[' → logprob: -1.9588958024978638
    5. '<' → logprob: -2.083895683288574
    6. '==' → logprob: -5.708895683288574
    7. ' ==' → logprob: -6.583895683288574
    8. ' is' → logprob: -6.958895683288574
    9. '<=' → logprob: -7.458895683288574
    10. ' ' → logprob: -7.583895683288574

Token 810: ' égal' (ID: 15059)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8256037831306458
    2. ' x' → logprob: -1.575603723526001
    3. 'D' → logprob: -1.825603723526001
    4. '>' → logprob: -2.825603723526001
    5. ' D' → logprob: -3.575603723526001
    6. '<' → logprob: -3.700603723526001
    7. ' equal' → logprob: -4.32560396194458
    8. ' not' → logprob: -4.45060396194458
    9. 'greater' → logprob: -4.95060396194458
    10. ' greater' → logprob: -5.07560396194458

Token 811: ' à' (ID: 1221)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4195628762245178
    2. 'x' → logprob: -1.419562816619873
    3. ' x' → logprob: -2.794562816619873
    4. ' D' → logprob: -3.919562816619873
    5. ' à' → logprob: -4.419562816619873
    6. '           ' → logprob: -5.419562816619873
    7. 'à' → logprob: -7.169562816619873
    8. '   ' → logprob: -7.669562816619873
    9. ' to' → logprob: -8.044563293457031
    10. ' ' → logprob: -8.169563293457031

Token 812: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03725932165980339
    2. 'D' → logprob: -3.412259340286255
    3. ' x' → logprob: -6.287259101867676
    4. '0' → logprob: -6.537259101867676
    5. ' D' → logprob: -8.787259101867676
    6. ' ' → logprob: -10.162259101867676
    7. '1' → logprob: -10.412259101867676
    8. 'd' → logprob: -11.162259101867676
    9. '```' → logprob: -11.599759101867676
    10. '   ' → logprob: -11.724759101867676

Token 813: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5161600112915039
    2. ':' → logprob: -1.141160011291504
    3. '==' → logprob: -3.266160011291504
    4. 'and' → logprob: -3.766160011291504
    5. '               ' → logprob: -5.016160011291504
    6. ':
' → logprob: -5.016160011291504
    7. '           ' → logprob: -6.016160011291504
    8. ' ==' → logprob: -6.016160011291504
    9. ' or' → logprob: -7.016160011291504
    10. ',' → logprob: -7.141160011291504

Token 814: 'cel' (ID: 4610)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008768792264163494
    2. 'x' → logprob: -5.008768558502197
    3. ' D' → logprob: -6.508768558502197
    4. ' x' → logprob: -8.758769035339355
    5. ')' → logprob: -9.383769035339355
    6. '0' → logprob: -9.508769035339355
    7. '):' → logprob: -9.508769035339355
    8. '           ' → logprob: -10.383769035339355
    9. 'd' → logprob: -10.633769035339355
    10. '   ' → logprob: -11.008769035339355

Token 815: 'ui' (ID: 1866)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.060323555022478104
    2. '=' → logprob: -4.560323715209961
    3. '):' → logprob: -4.560323715209961
    4. 'x' → logprob: -4.810323715209961
    5. 'and' → logprob: -5.060323715209961
    6. 'if' → logprob: -5.185323715209961
    7. ':' → logprob: -5.560323715209961
    8. ' if' → logprob: -5.685323715209961
    9. ' and' → logprob: -6.435323715209961
    10. 'D' → logprob: -6.935323715209961

Token 816: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26466652750968933
    2. '==' → logprob: -2.2646665573120117
    3. 'and' → logprob: -3.1396665573120117
    4. ' ==' → logprob: -3.7646665573120117
    5. ':' → logprob: -4.264666557312012
    6. '   ' → logprob: -4.514666557312012
    7. ' and' → logprob: -4.514666557312012
    8. ' ):' → logprob: -5.014666557312012
    9. '):
' → logprob: -5.389666557312012
    10. ')' → logprob: -5.514666557312012

Token 817: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.06218043342232704
    2. 'D' → logprob: -3.562180519104004
    3. ' po' → logprob: -3.562180519104004
    4. ' D' → logprob: -6.062180519104004
    5. 'to' → logprob: -7.062180519104004
    6. ' to' → logprob: -9.187180519104004
    7. 'x' → logprob: -9.312180519104004
    8. 'p' → logprob: -10.437180519104004
    9. ')' → logprob: -10.812180519104004
    10. ' ' → logprob: -11.187180519104004

Token 818: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5004132986068726
    2. ')' → logprob: -1.3754132986068726
    3. '),' → logprob: -2.375413417816162
    4. '):
' → logprob: -3.250413417816162
    5. ' )' → logprob: -6.125413417816162
    6. ' ):' → logprob: -6.250413417816162
    7. '):

' → logprob: -6.875413417816162
    8. '           ' → logprob: -7.000413417816162
    9. ' ),' → logprob: -7.125413417816162
    10. ' and' → logprob: -7.250413417816162

Token 819: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.37464046478271484
    2. '               ' → logprob: -1.4996404647827148
    3. ':' → logprob: -2.874640464782715
    4. '           ' → logprob: -3.999640464782715
    5. 'and' → logprob: -4.499640464782715
    6. ':
' → logprob: -6.874640464782715
    7. ',' → logprob: -7.624640464782715
    8. '==' → logprob: -7.874640464782715
    9. ' or' → logprob: -8.124640464782715
    10. '   ' → logprob: -8.374640464782715

Token 820: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25555306673049927
    2. '           ' → logprob: -2.7555530071258545
    3. 'and' → logprob: -2.7555530071258545
    4. ':' → logprob: -3.0055530071258545
    5. ' if' → logprob: -3.8805530071258545
    6. 'if' (adapté à ' if') → logprob: -4.380553245544434
    7. '               ' → logprob: -4.880553245544434
    8. ':
' → logprob: -5.505553245544434
    9. '==' → logprob: -6.130553245544434
    10. '   ' → logprob: -7.630553245544434

Token 821: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00466176075860858
    2. ' D' → logprob: -5.379661560058594
    3. 'x' → logprob: -10.629661560058594
    4. ' ' → logprob: -12.504661560058594
    5. '   ' → logprob: -12.504661560058594
    6. '	D' → logprob: -12.754661560058594
    7. '           ' → logprob: -12.879661560058594
    8. 'DEC' → logprob: -13.754661560058594
    9. ' x' → logprob: -14.379661560058594
    10. '         ' → logprob: -14.754661560058594

Token 822: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.05530310049653053
    2. '[' → logprob: -2.9303030967712402
    3. 'to' → logprob: -7.80530309677124
    4. ' [' → logprob: -12.430303573608398
    5. '==' → logprob: -12.555303573608398
    6. '[x' → logprob: -13.305303573608398
    7. ' to' → logprob: -13.555303573608398
    8. ' ==' → logprob: -14.555303573608398
    9. 'po' → logprob: -14.805303573608398
    10. '[pos' → logprob: -14.805303573608398

Token 823: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7127009630203247
    2. ' ==' → logprob: -0.7127009630203247
    3. ']==' → logprob: -4.087700843811035
    4. ']' → logprob: -6.212700843811035
    5. '[' → logprob: -7.962700843811035
    6. ')==' → logprob: -9.087700843811035
    7. '==
' → logprob: -10.212700843811035
    8. ' ]' → logprob: -10.337700843811035
    9. ')' → logprob: -11.712700843811035
    10. '[x' → logprob: -11.837700843811035

Token 824: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4287595748901367
    2. '==' → logprob: -1.0537595748901367
    3. '[' → logprob: -11.178759574890137
    4. '=' → logprob: -11.928759574890137
    5. ' ' → logprob: -12.053759574890137
    6. '!=' → logprob: -12.303759574890137
    7. ' !=' → logprob: -12.428759574890137
    8. '==
' → logprob: -12.428759574890137
    9. ')==' → logprob: -13.053759574890137
    10. '>=' → logprob: -13.178759574890137

Token 825: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011048289015889168
    2. ' x' → logprob: -4.511048316955566
    3. 'D' → logprob: -15.386048316955566
    4. ' ' → logprob: -16.01104736328125
    5. '	x' → logprob: -16.26104736328125
    6. ' ' → logprob: -17.88604736328125
    7. '   ' → logprob: -18.01104736328125
    8. ' D' → logprob: -18.76104736328125
    9. '```' → logprob: -19.76104736328125
    10. '  ' → logprob: -20.01104736328125

Token 826: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11299321800470352
    2. ':
' → logprob: -2.3629932403564453
    3. ' and' → logprob: -4.487993240356445
    4. '           ' → logprob: -7.987993240356445
    5. '               ' → logprob: -7.987993240356445
    6. ':
' → logprob: -8.862993240356445
    7. '):
' → logprob: -9.112993240356445
    8. 'and' → logprob: -9.112993240356445
    9. ',' → logprob: -9.237993240356445
    10. '):' → logprob: -9.862993240356445

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014426150592043996
    2. '           ' → logprob: -7.8764424324035645
    3. '	           ' → logprob: -8.501442909240723
    4. '	       ' → logprob: -8.751442909240723
    5. ' continue' → logprob: -9.001442909240723
    6. '		       ' → logprob: -9.251442909240723
    7. '			' → logprob: -9.626442909240723
    8. '                       ' → logprob: -9.751442909240723
    9. 'continue' → logprob: -9.751442909240723
    10. '                   ' → logprob: -10.001442909240723

Token 828: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0719971656799316
    2. 'DIS' → logprob: -1.1969971656799316
    3. 'DEC' → logprob: -1.4469971656799316
    4. '               ' → logprob: -2.8219971656799316
    5. 'continue' → logprob: -4.071997165679932
    6. '           ' → logprob: -4.446997165679932
    7. '   ' → logprob: -4.571997165679932
    8. ' DEC' → logprob: -5.321997165679932
    9. 'for' → logprob: -5.696997165679932
    10. '                       ' → logprob: -6.071997165679932

Token 829: ' On' (ID: 2160)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.3634403944015503
    2. 'DIS' → logprob: -1.2384403944015503
    3. 'if' → logprob: -5.23844051361084
    4. '   ' → logprob: -5.98844051361084
    5. 'continue' → logprob: -5.98844051361084
    6. 'D' → logprob: -6.23844051361084
    7. '#' → logprob: -7.61344051361084
    8. '       ' → logprob: -7.98844051361084
    9. '           ' → logprob: -8.11344051361084
    10. 'dec' → logprob: -8.36344051361084

Token 830: ' attrib' (ID: 72186)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.862693190574646
    2. 'DIS' → logprob: -0.987693190574646
    3. 'continue' → logprob: -2.6126933097839355
    4. '=' → logprob: -3.8626933097839355
    5. 'break' → logprob: -4.2376933097839355
    6. 'D' → logprob: -4.2376933097839355
    7. '[' → logprob: -4.3626933097839355
    8. '#' → logprob: -4.7376933097839355
    9. 'for' → logprob: -4.7376933097839355
    10. 'import' → logprob: -4.9876933097839355

Token 831: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0001698094274615869
    2. 'u' → logprob: -9.25016975402832
    3. 'uer' → logprob: -9.62516975402832
    4. 'uera' → logprob: -12.00016975402832
    5. 'e' → logprob: -15.00016975402832
    6. 'uere' → logprob: -15.00016975402832
    7. 'ues' → logprob: -15.12516975402832
    8. 'uie' → logprob: -16.12516975402832
    9. 'uez' → logprob: -16.25016975402832
    10. '#' → logprob: -16.75016975402832

Token 832: ' à' (ID: 1221)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5404898524284363
    2. '"W' → logprob: -1.415489912033081
    3. '"B' → logprob: -1.915489912033081
    4. ''' → logprob: -4.165489673614502
    5. '"D' → logprob: -6.165489673614502
    6. 'DEC' → logprob: -6.290489673614502
    7. '""' → logprob: -6.790489673614502
    8. 'W' → logprob: -6.790489673614502
    9. '   ' → logprob: -6.790489673614502
    10. ' "' → logprob: -7.165489673614502

Token 833: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.05567243695259094
    2. 'DEC' → logprob: -2.9306724071502686
    3. '   ' → logprob: -8.430672645568848
    4. 'D' → logprob: -8.555672645568848
    5. ' DIS' → logprob: -9.055672645568848
    6. ' ' → logprob: -10.180672645568848
    7. 'edge' → logprob: -10.555672645568848
    8. 'dec' → logprob: -10.930672645568848
    9. 'dis' → logprob: -11.055672645568848
    10. '  ' → logprob: -11.055672645568848

Token 834: ' pour' (ID: 1930)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.027786748483777046
    2. 'D' → logprob: -3.7777867317199707
    3. '[' → logprob: -5.527786731719971
    4. '               ' → logprob: -8.277787208557129
    5. '[
' → logprob: -9.777787208557129
    6. '[M' → logprob: -10.277787208557129
    7. '   ' → logprob: -10.277787208557129
    8. '0' → logprob: -10.402787208557129
    9. ' [' → logprob: -10.402787208557129
    10. '                   ' → logprob: -10.902787208557129

Token 835: ' cette' (ID: 7696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0025610304437577724
    2. ' D' → logprob: -6.252561092376709
    3. '[D' → logprob: -7.502561092376709
    4. 'DIS' → logprob: -10.25256061553955
    5. '[' → logprob: -11.25256061553955
    6. '   ' → logprob: -12.00256061553955
    7. '```' → logprob: -12.00256061553955
    8. 'Dice' → logprob: -12.87756061553955
    9. '	D' → logprob: -13.25256061553955
    10. 'EDGE' → logprob: -13.25256061553955

Token 836: ' ar' (ID: 646)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00757905887439847
    2. '(' → logprob: -5.8825788497924805
    3. '(D' → logprob: -6.3825788497924805
    4. '[D' → logprob: -6.7575788497924805
    5. 'EDGE' → logprob: -7.5075788497924805
    6. 'edge' → logprob: -7.7575788497924805
    7. ' D' → logprob: -8.50757884979248
    8. '[' → logprob: -8.50757884979248
    9. 'tuple' → logprob: -9.00757884979248
    10. '[(' → logprob: -9.38257884979248

Token 837: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.014206405729055405
    2. 'ê' → logprob: -6.389206409454346
    3. 'c' → logprob: -6.514206409454346
    4. 'ète' → logprob: -6.514206409454346
    5. 'e' → logprob: -6.639206409454346
    6. '[' → logprob: -6.764206409454346
    7. 'Ê' → logprob: -6.764206409454346
    8. 'êt' → logprob: -6.889206409454346
    9. 'r' → logprob: -7.639206409454346
    10. 't' → logprob: -7.639206409454346

Token 838: ' la' (ID: 557)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.12816233932971954
    2. 'D' → logprob: -2.128162384033203
    3. '[' → logprob: -6.878162384033203
    4. '[
' → logprob: -9.378162384033203
    5. '[(' → logprob: -10.003162384033203
    6. ' D' → logprob: -10.253162384033203
    7. ' [' → logprob: -11.503162384033203
    8. '   ' → logprob: -12.003162384033203
    9. '               ' → logprob: -12.253162384033203
    10. '```' → logprob: -12.628162384033203

Token 839: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4542753994464874
    2. 'D' → logprob: -1.204275369644165
    3. '"' → logprob: -3.204275369644165
    4. '"D' → logprob: -4.329275608062744
    5. '1' → logprob: -5.204275608062744
    6. 'i' → logprob: -6.204275608062744
    7. ''' → logprob: -7.079275608062744
    8. ' ' → logprob: -7.579275608062744
    9. ''D' → logprob: -7.579275608062744
    10. ' D' → logprob: -7.704275608062744

Token 840: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2851552367210388
    2. '"' → logprob: -2.1601552963256836
    3. '1' → logprob: -2.4101552963256836
    4. 'D' → logprob: -3.7851552963256836
    5. '"D' → logprob: -4.910155296325684
    6. '   ' → logprob: -5.160155296325684
    7. 'x' → logprob: -6.410155296325684
    8. ''' → logprob: -7.035155296325684
    9. ' ' → logprob: -7.160155296325684
    10. 'po' → logprob: -7.535155296325684

Token 841: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17150892317295074
    2. '                   ' → logprob: -2.421509027481079
    3. ' =' → logprob: -3.796509027481079
    4. '=' → logprob: -4.6715087890625
    5. '
' → logprob: -4.6715087890625
    6. '           ' → logprob: -4.9215087890625
    7. ',' → logprob: -5.6715087890625
    8. '<|end|>' → logprob: -5.9215087890625
    9. '                
' → logprob: -6.4215087890625
    10. ')' → logprob: -6.6715087890625

Token 842: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7475529909133911
    2. '                   ' → logprob: -1.4975529909133911
    3. '           ' → logprob: -2.8725528717041016
    4. '<|end|>' → logprob: -2.8725528717041016
    5. ')' → logprob: -3.3725528717041016
    6. ' =' → logprob: -3.7475528717041016
    7. '=' → logprob: -3.9975528717041016
    8. '[' → logprob: -4.122552871704102
    9. '       ' → logprob: -4.372552871704102
    10. '   ' → logprob: -4.747552871704102

Token 843: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' (adapté à ' DIS') → logprob: -0.055675819516181946
    2. 'edge' → logprob: -3.305675745010376
    3. 'idx' → logprob: -4.930675983428955
    4. 'index' → logprob: -5.805675983428955
    5. 'dis' → logprob: -5.930675983428955
    6. 'key' → logprob: -6.930675983428955
    7. 'e' → logprob: -7.180675983428955
    8. 'D' → logprob: -7.305675983428955
    9. '   ' → logprob: -7.805675983428955
    10. 'EDGE' → logprob: -8.055675506591797

Token 844: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.00019662656995933503
    2. '[' → logprob: -8.75019645690918
    3. 'D' → logprob: -10.75019645690918
    4. '[
' → logprob: -11.25019645690918
    5. '[d' → logprob: -13.62519645690918
    6. '=D' → logprob: -14.50019645690918
    7. ' [' → logprob: -14.87519645690918
    8. '[[' → logprob: -14.87519645690918
    9. '
' → logprob: -15.75019645690918
    10. '   ' → logprob: -15.87519645690918

Token 845: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -2.3199920178740285e-05
    2. '[' → logprob: -12.125022888183594
    3. '
' → logprob: -12.625022888183594
    4. 'ISE' → logprob: -12.625022888183594
    5. ']' → logprob: -13.625022888183594
    6. 'D' → logprob: -13.750022888183594
    7. '[(' → logprob: -14.125022888183594
    8. 'IC' → logprob: -14.125022888183594
    9. 'ICEF' → logprob: -14.125022888183594
    10. '[
' → logprob: -14.375022888183594

Token 846: '[' (ID: 58)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004095143172889948
    2. '[' → logprob: -5.504095077514648
    3. '[((' → logprob: -11.379095077514648
    4. '((' → logprob: -13.379095077514648
    5. '(' → logprob: -13.629095077514648
    6. '[
' → logprob: -14.129095077514648
    7. ' [(' → logprob: -14.629095077514648
    8. '(sorted' → logprob: -14.754095077514648
    9. ']' → logprob: -15.879095077514648
    10. '[{' → logprob: -16.00409507751465

Token 847: 'tuple' (ID: 52834)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.2420724332332611
    2. 'tuple' → logprob: -1.8670724630355835
    3. '(' → logprob: -3.117072343826294
    4. ' (' → logprob: -4.492072582244873
    5. ' tuple' → logprob: -5.867072582244873
    6. '(sorted' → logprob: -7.492072582244873
    7. '(s' → logprob: -7.742072582244873
    8. '(t' → logprob: -7.867072582244873
    9. '(
' → logprob: -8.742072105407715
    10. '   ' → logprob: -8.867072105407715

Token 848: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.06198561564087868
    2. 'sorted' → logprob: -2.811985731124878
    3. '([' → logprob: -11.561985969543457
    4. ' sorted' → logprob: -12.061985969543457
    5. '(s' → logprob: -13.686985969543457
    6. '_sorted' → logprob: -14.811985969543457
    7. '[' → logprob: -15.686985969543457
    8. 'po' → logprob: -15.686985969543457
    9. ' (' → logprob: -15.936985969543457
    10. '((' → logprob: -15.936985969543457

Token 849: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5893094539642334
    2. '((' → logprob: -0.8393094539642334
    3. '(po' → logprob: -4.3393096923828125
    4. '(' → logprob: -9.214309692382812
    5. '[(' → logprob: -10.214309692382812
    6. '(p' → logprob: -10.339309692382812
    7. '(sorted' → logprob: -10.464309692382812
    8. '(py' → logprob: -11.089309692382812
    9. '(to' → logprob: -12.464309692382812
    10. '({' → logprob: -12.714309692382812

Token 850: 'po' (ID: 2519)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10097678750753403
    2. '(po' → logprob: -2.3509767055511475
    3. '([' → logprob: -7.350976943969727
    4. '(p' → logprob: -9.850976943969727
    5. '[p' → logprob: -10.475976943969727
    6. '[to' → logprob: -11.225976943969727
    7. '(to' → logprob: -11.600976943969727
    8. '(' → logprob: -11.975976943969727
    9. '   ' → logprob: -12.100976943969727
    10. ' [' → logprob: -13.100976943969727

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032011426985263824
    2. '[' → logprob: -3.7820115089416504
    3. ' ,' → logprob: -5.03201150894165
    4. '(po' → logprob: -7.15701150894165
    5. ',to' → logprob: -7.78201150894165
    6. ',[' → logprob: -8.157011032104492
    7. '[to' → logprob: -8.407011032104492
    8. '   ' → logprob: -8.532011032104492
    9. '(to' → logprob: -9.282011032104492
    10. ',p' → logprob: -10.782011032104492

Token 852: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.011102883145213127
    2. '[to' → logprob: -4.511102676391602
    3. ' to' → logprob: -10.261102676391602
    4. '(to' → logprob: -11.511102676391602
    5. '[' → logprob: -12.636102676391602
    6. '   ' → logprob: -12.886102676391602
    7. 'po' → logprob: -12.886102676391602
    8. ' [' → logprob: -14.136102676391602
    9. '	to' → logprob: -14.386102676391602
    10. ' ' → logprob: -15.636102676391602

Token 853: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0036480571143329144
    2. '()' → logprob: -6.128648281097412
    3. '])' → logprob: -7.878648281097412
    4. '])]' → logprob: -7.878648281097412
    5. '])))' → logprob: -8.253647804260254
    6. '))' → logprob: -9.253647804260254
    7. '()))' → logprob: -9.378647804260254
    8. ']' → logprob: -9.378647804260254
    9. '"]))' → logprob: -10.378647804260254
    10. '']))' → logprob: -10.503647804260254

Token 854: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014260820113122463
    2. ']=' → logprob: -4.264260768890381
    3. ' ]' → logprob: -10.264261245727539
    4. ')]' → logprob: -10.514261245727539
    5. ']]' → logprob: -11.014261245727539
    6. '=' → logprob: -11.264261245727539
    7. ']]=' → logprob: -12.514261245727539
    8. ')' → logprob: -14.264261245727539
    9. ']=(' → logprob: -14.889261245727539
    10. ']
' → logprob: -15.139261245727539

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014203116297721863
    2. ' =' → logprob: -4.264203071594238
    3. '=x' → logprob: -10.139203071594238
    4. '=
' → logprob: -16.139204025268555
    5. '＝' → logprob: -17.389204025268555
    6. '=

' → logprob: -18.014204025268555
    7. 'x' → logprob: -18.514204025268555
    8. '=int' → logprob: -18.514204025268555
    9. '=k' → logprob: -18.764204025268555
    10. ' ' → logprob: -19.014204025268555

Token 856: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000431861262768507
    2. ' x' → logprob: -7.750432014465332
    3. '0' → logprob: -13.625432014465332
    4. '	x' → logprob: -17.500431060791016
    5. ' ' → logprob: -18.375431060791016
    6. '1' → logprob: -19.750431060791016
    7. '   ' → logprob: -20.250431060791016
    8. '{x' → logprob: -20.250431060791016
    9. '(x' → logprob: -20.500431060791016
    10. 'D' → logprob: -20.750431060791016

Token 857: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 858: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 859: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3062320351600647
    2. '       ' → logprob: -1.93123197555542
    3. '           ' → logprob: -2.43123197555542
    4. 'DEC' → logprob: -4.18123197555542
    5. '   ' → logprob: -4.80623197555542
    6. 'else' → logprob: -6.80623197555542
    7. '<|end|>' → logprob: -7.18123197555542
    8. 'elif' → logprob: -7.30623197555542
    9. '			' → logprob: -7.55623197555542
    10. 'Dec' → logprob: -7.68123197555542

Token 860: ' On' (ID: 2160)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.009596719406545162
    2. '           ' → logprob: -5.759596824645996
    3. '       ' → logprob: -5.884596824645996
    4. '   ' → logprob: -6.509596824645996
    5. 'if' → logprob: -7.009596824645996
    6. '#' → logprob: -7.759596824645996
    7. 'break' → logprob: -8.259596824645996
    8. '               ' → logprob: -8.884596824645996
    9. 'continue' → logprob: -9.134596824645996
    10. 'dec' → logprob: -9.884596824645996

Token 861: ' décide' (ID: 113599)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.16624689102172852
    2. ' DEC' → logprob: -3.2912468910217285
    3. 'continue' → logprob: -3.7912468910217285
    4. '   ' → logprob: -4.7287468910217285
    5. 'break' → logprob: -4.8537468910217285
    6. '       ' → logprob: -4.9162468910217285
    7. '[' → logprob: -4.9787468910217285
    8. 'dec' → logprob: -5.0412468910217285
    9. ' continue' → logprob: -5.1662468910217285
    10. 'Dec' → logprob: -5.2287468910217285

Token 862: ' arbit' (ID: 96555)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7247025370597839
    2. 'DEC' → logprob: -0.9747025370597839
    3. '"' → logprob: -3.5997025966644287
    4. '   ' → logprob: -4.22470235824585
    5. '           ' → logprob: -4.47470235824585
    6. '(po' → logprob: -4.47470235824585
    7. 'po' → logprob: -4.72470235824585
    8. '               ' → logprob: -4.97470235824585
    9. ' DEC' → logprob: -4.97470235824585
    10. ' =' → logprob: -5.09970235824585

Token 863: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.015592955984175205
    2. '"' → logprob: -4.6405930519104
    3. 'r' → logprob: -5.5155930519104
    4. 'tra' → logprob: -7.1405930519104
    5. 'tr' → logprob: -7.6405930519104
    6. '   ' → logprob: -9.390592575073242
    7. 'aire' → logprob: -9.890592575073242
    8. '"#' → logprob: -9.890592575073242
    9. 'taire' → logprob: -10.015592575073242
    10. '#"' → logprob: -10.015592575073242

Token 864: 'irement' (ID: 19343)
  Prédit: 'irement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irement' → logprob: -0.018523188307881355
    2. 'ire' → logprob: -4.393523216247559
    3. 'rement' → logprob: -5.518523216247559
    4. 're' → logprob: -6.768523216247559
    5. 'r' → logprob: -8.768523216247559
    6. 'ir' → logprob: -8.893523216247559
    7. '#' → logprob: -9.018523216247559
    8. 'ment' → logprob: -10.518523216247559
    9. '```' → logprob: -10.643523216247559
    10. 'lement' → logprob: -10.706023216247559

Token 865: ' une' (ID: 2463)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.05405987426638603
    2. ' DEC' → logprob: -3.9290599822998047
    3. '   ' → logprob: -4.054059982299805
    4. '=' → logprob: -5.304059982299805
    5. '"' → logprob: -6.179059982299805
    6. ' =' → logprob: -6.554059982299805
    7. 'dec' → logprob: -6.554059982299805
    8. '    ' → logprob: -7.304059982299805
    9. '_DEC' → logprob: -7.304059982299805
    10. '    
' → logprob: -7.429059982299805

Token 866: ' coloration' (ID: 185006)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.2581203281879425
    2. '"' → logprob: -2.13312029838562
    3. ' DEC' → logprob: -2.88312029838562
    4. 'W' → logprob: -4.258120536804199
    5. 'color' → logprob: -4.758120536804199
    6. 'B' → logprob: -5.383120536804199
    7. 'dec' → logprob: -5.508120536804199
    8. ' "' → logprob: -5.508120536804199
    9. ' color' → logprob: -6.008120536804199
    10. '#' → logprob: -6.883120536804199

Token 867: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41046616435050964
    2. '[' → logprob: -1.410466194152832
    3. '=' → logprob: -2.660466194152832
    4. '"' → logprob: -4.785466194152832
    5. '   ' → logprob: -5.535466194152832
    6. '="' → logprob: -5.660466194152832
    7. '["' → logprob: -6.410466194152832
    8. ' po' → logprob: -7.035466194152832
    9. '               ' → logprob: -7.160466194152832
    10. '                   ' → logprob: -7.410466194152832

Token 868: ' po' (ID: 2482)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.03497244045138359
    2. '"' → logprob: -3.5349724292755127
    3. '"W' → logprob: -6.284972667694092
    4. ' DEC' → logprob: -6.534972667694092
    5. '   ' → logprob: -7.534972667694092
    6. '"B' → logprob: -7.784972667694092
    7. '           ' → logprob: -8.409972190856934
    8. 'W' → logprob: -8.534972190856934
    9. ''' → logprob: -8.784972190856934
    10. 'B' → logprob: -9.034972190856934

Token 869: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09784050285816193
    2. ' =' → logprob: -2.4728405475616455
    3. ']' → logprob: -5.972840309143066
    4. '   ' → logprob: -6.597840309143066
    5. '[' → logprob: -6.722840309143066
    6. '="' → logprob: -7.222840309143066
    7. '"' → logprob: -7.222840309143066
    8. ',' → logprob: -7.597840309143066
    9. ')' → logprob: -7.597840309143066
    10. 'DEC' → logprob: -8.347840309143066

Token 870: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.7018096446990967
    2. 'B' → logprob: -1.2018096446990967
    3. '"W' → logprob: -2.7018096446990967
    4. 'W' → logprob: -2.7018096446990967
    5. '"' → logprob: -3.0768096446990967
    6. ''' → logprob: -4.576809883117676
    7. ' "' → logprob: -4.576809883117676
    8. ' B' → logprob: -6.576809883117676
    9. ' W' → logprob: -8.076809883117676
    10. ' '' → logprob: -8.201809883117676

Token 871: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012844767421483994
    2. 'W' → logprob: -4.387844562530518
    3. '"B' → logprob: -8.762845039367676
    4. ' B' → logprob: -9.387845039367676
    5. '"' → logprob: -10.387845039367676
    6. '"W' → logprob: -10.637845039367676
    7. ''' → logprob: -11.012845039367676
    8. 'BW' → logprob: -13.075345039367676
    9. '_B' → logprob: -13.387845039367676
    10. ' W' → logprob: -13.450345039367676

Token 872: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5317312479019165
    2. '",' → logprob: -0.9067312479019165
    3. '"
' → logprob: -5.031731128692627
    4. '"
' → logprob: -7.156731128692627
    5. '"B' → logprob: -7.406731128692627
    6. 'B' → logprob: -8.156731605529785
    7. '"#' → logprob: -9.531731605529785
    8. '#' → logprob: -9.906731605529785
    9. '"`
' → logprob: -10.156731605529785
    10. '"`' → logprob: -10.531731605529785

Token 873: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4920167922973633
    2. '
' → logprob: -2.1170167922973633
    3. '           ' → logprob: -3.2420167922973633
    4. ',' → logprob: -3.4920167922973633
    5. '=' → logprob: -3.6170167922973633
    6. '[' → logprob: -3.6170167922973633
    7. '               ' → logprob: -3.6170167922973633
    8. ' =' → logprob: -3.8670167922973633
    9. '                   ' → logprob: -4.117016792297363
    10. '       ' → logprob: -4.117016792297363

Token 874: 'no' (ID: 1750)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.32165706157684326
    2. '"' → logprob: -2.071657180786133
    3. '")' → logprob: -2.071657180786133
    4. '"B' → logprob: -4.321657180786133
    5. '",' → logprob: -5.196657180786133
    6. ')' → logprob: -6.321657180786133
    7. ')"' → logprob: -7.571657180786133
    8. '#' → logprob: -7.696657180786133
    9. ' B' → logprob: -8.321657180786133
    10. '"),' → logprob: -8.821657180786133

Token 875: 'ir' (ID: 380)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.44042593240737915
    2. 'B' → logprob: -1.1904258728027344
    3. '")' → logprob: -3.8154258728027344
    4. '"' → logprob: -4.565425872802734
    5. 'L' → logprob: -5.190425872802734
    6. 'n' → logprob: -5.565425872802734
    7. ' ")' → logprob: -6.190425872802734
    8. ' "' → logprob: -6.440425872802734
    9. ' B' → logprob: -6.690425872802734
    10. 'l' → logprob: -7.190425872802734

Token 876: '),' (ID: 936)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5583667159080505
    2. '",' → logprob: -1.3083667755126953
    3. '")' → logprob: -2.0583667755126953
    4. ')' → logprob: -3.6833667755126953
    5. '"
' → logprob: -6.683366775512695
    6. ')"' → logprob: -7.183366775512695
    7. '   ' → logprob: -7.558366775512695
    8. ',' → logprob: -8.183366775512695
    9. '")
' → logprob: -8.183366775512695
    10. '",
' → logprob: -8.433366775512695

Token 877: ' to' (ID: 316)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.014106856659054756
    2. ' DEC' → logprob: -5.139106750488281
    3. '                   ' → logprob: -6.014106750488281
    4. '               ' → logprob: -6.139106750488281
    5. '           ' → logprob: -6.639106750488281
    6. '   ' → logprob: -7.764106750488281
    7. '       ' → logprob: -8.139106750488281
    8. 'po' → logprob: -8.264106750488281
    9. 'dec' → logprob: -8.514106750488281
    10. '_DEC' → logprob: -8.639106750488281

Token 878: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.734696626663208
    2. 'en' → logprob: -0.984696626663208
    3. '=' → logprob: -2.609696626663208
    4. ' =' → logprob: -3.359696626663208
    5. ' in' → logprob: -3.609696626663208
    6. 'in' → logprob: -5.359696388244629
    7. '"' → logprob: -5.984696388244629
    8. '="' → logprob: -6.109696388244629
    9. ',' → logprob: -7.109696388244629
    10. ' "' → logprob: -8.734696388244629

Token 879: ' "' (ID: 392)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.39646172523498535
    2. '"' → logprob: -1.3964617252349854
    3. ' "' → logprob: -3.5214617252349854
    4. 'W' → logprob: -3.5214617252349854
    5. ' W' → logprob: -4.271461486816406
    6. ''' → logprob: -5.271461486816406
    7. ' ' → logprob: -7.396461486816406
    8. '"B' → logprob: -8.021461486816406
    9. ' ' → logprob: -8.271461486816406
    10. ' '' → logprob: -8.771461486816406

Token 880: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0012821375858038664
    2. '"W' → logprob: -6.876282215118408
    3. ' W' → logprob: -9.25128173828125
    4. 'B' → logprob: -9.37628173828125
    5. '"' → logprob: -10.50128173828125
    6. ''' → logprob: -11.00128173828125
    7. '```' → logprob: -12.62628173828125
    8. '	W' → logprob: -12.68878173828125
    9. ' ' → logprob: -12.87628173828125
    10. '""' → logprob: -13.37628173828125

Token 881: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03959689289331436
    2. '")' → logprob: -3.4145967960357666
    3. '"
' → logprob: -5.414597034454346
    4. ')"' → logprob: -7.164597034454346
    5. ')' → logprob: -8.414596557617188
    6. '"B' → logprob: -8.789596557617188
    7. '")
' → logprob: -8.914596557617188
    8. '```' → logprob: -9.914596557617188
    9. '"
' → logprob: -10.664596557617188
    10. ')"
' → logprob: -11.164596557617188

Token 882: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47968393564224243
    2. '"
' → logprob: -0.9796839356422424
    3. '               ' → logprob: -6.604683876037598
    4. '",' → logprob: -7.229683876037598
    5. '"
' → logprob: -7.604683876037598
    6. '           ' → logprob: -7.729683876037598
    7. '```' → logprob: -7.854683876037598
    8. '                   ' → logprob: -8.604683876037598
    9. '"`
' → logprob: -8.604683876037598
    10. '"B' → logprob: -8.604683876037598

Token 883: 'bl' (ID: 1751)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.16969400644302368
    2. '"' → logprob: -2.669693946838379
    3. '"W' → logprob: -2.669693946838379
    4. 'B' → logprob: -5.169693946838379
    5. '")' → logprob: -5.419693946838379
    6. '"B' → logprob: -6.544693946838379
    7. ')' → logprob: -6.669693946838379
    8. ''' → logprob: -6.794693946838379
    9. ' "' → logprob: -6.919693946838379
    10. ' W' → logprob: -6.919693946838379

Token 884: 'anc' (ID: 1054)
  Prédit: 'anc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anc' → logprob: -0.22224490344524384
    2. 'ack' → logprob: -2.22224497795105
    3. 'a' → logprob: -3.34724497795105
    4. 'an' → logprob: -3.72224497795105
    5. 'ac' → logprob: -3.97224497795105
    6. '```' → logprob: -5.972244739532471
    7. '#' → logprob: -6.347244739532471
    8. 'ank' → logprob: -6.597244739532471
    9. '"' → logprob: -6.722244739532471
    10. 'anche' → logprob: -6.972244739532471

Token 885: ')
' (ID: 446)
  Prédit: '"
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.607854962348938
    2. '"' → logprob: -0.857854962348938
    3. '               ' → logprob: -4.232854843139648
    4. '           ' → logprob: -5.232854843139648
    5. '[' → logprob: -6.357854843139648
    6. '                   ' → logprob: -6.857854843139648
    7. '"]' → logprob: -7.107854843139648
    8. ')' → logprob: -7.357854843139648
    9. '")' → logprob: -7.357854843139648
    10. '"
' → logprob: -7.607854843139648

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036579396575689316
    2. '[' → logprob: -4.411579608917236
    3. '                
' → logprob: -4.786579608917236
    4. '                   ' → logprob: -5.411579608917236
    5. '
' → logprob: -5.911579608917236
    6. '           ' → logprob: -6.536579608917236
    7. '       ' → logprob: -6.786579608917236
    8. '[
' → logprob: -7.161579608917236
    9. '                    
' → logprob: -7.411579608917236
    10. '   ' → logprob: -7.661579608917236

Token 887: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' (adapté à ' DEC') → logprob: -0.014749695546925068
    2. '"' → logprob: -5.014749526977539
    3. '               ' → logprob: -6.014749526977539
    4. ' DEC' → logprob: -6.764749526977539
    5. '["' → logprob: -7.014749526977539
    6. '       ' → logprob: -7.639749526977539
    7. '   ' → logprob: -7.764749526977539
    8. '[' → logprob: -8.014749526977539
    9. '           ' → logprob: -8.264749526977539
    10. '[
' → logprob: -8.389749526977539

Token 888: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.0006203425000421703
    2. 'IDE' → logprob: -7.750620365142822
    3. 'DEC' → logprob: -9.000619888305664
    4. 'IC' → logprob: -10.625619888305664
    5. 'I' → logprob: -11.375619888305664
    6. 'IDES' → logprob: -11.875619888305664
    7. 'ED' → logprob: -12.625619888305664
    8. 'IDEO' → logprob: -12.750619888305664
    9. '[' → logprob: -13.250619888305664
    10. 'IS' → logprob: -13.375619888305664

Token 889: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -2.0219828002154827e-05
    2. 'DEC' → logprob: -11.625020027160645
    3. 'DED' → logprob: -12.000020027160645
    4. 'D' → logprob: -12.875020027160645
    5. '[' → logprob: -14.875020027160645
    6. 'DE' → logprob: -15.125020027160645
    7. '{' → logprob: -15.375020027160645
    8. 'EDD' → logprob: -15.375020027160645
    9. 'SED' → logprob: -15.875020027160645
    10. 'E' → logprob: -15.875020027160645

Token 890: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02344532310962677
    2. ' =' → logprob: -4.398445129394531
    3. '=' → logprob: -4.523445129394531
    4. '=[' → logprob: -10.898445129394531
    5. '```' → logprob: -13.648445129394531
    6. ' [' → logprob: -14.148445129394531
    7. '   ' → logprob: -14.273445129394531
    8. '	' → logprob: -14.648445129394531
    9. '

' → logprob: -14.898445129394531
    10. ' ' → logprob: -14.898445129394531

Token 891: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.160475954413414
    2. '[' → logprob: -1.9104759693145752
    3. ' po' → logprob: -8.910475730895996
    4. '(po' → logprob: -9.785475730895996
    5. ' [' → logprob: -11.535475730895996
    6. 'to' → logprob: -11.660475730895996
    7. '[to' → logprob: -12.035475730895996
    8. 'Po' → logprob: -12.160475730895996
    9. 'poi' → logprob: -12.660475730895996
    10. '[p' → logprob: -13.160475730895996

Token 892: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017250381642952561
    2. ' =' → logprob: -6.501725196838379
    3. ']' → logprob: -8.501725196838379
    4. ']=' → logprob: -11.126725196838379
    5. '="' → logprob: -13.001725196838379
    6. ')' → logprob: -13.876725196838379
    7. ',' → logprob: -14.626725196838379
    8. '=

' → logprob: -15.001725196838379
    9. ' ="' → logprob: -15.251725196838379
    10. '='' → logprob: -15.876725196838379

Token 893: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.6312321753939614e-05
    2. ' =' → logprob: -10.625036239624023
    3. '="' → logprob: -11.375036239624023
    4. '='' → logprob: -15.250036239624023
    5. ',' → logprob: -16.375036239624023
    6. '=

' → logprob: -16.625036239624023
    7. '=
' → logprob: -18.625036239624023
    8. ' ="' → logprob: -18.625036239624023
    9. '=("' → logprob: -19.250036239624023
    10. '"' → logprob: -19.250036239624023

Token 894: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.16052448749542236
    2. ''' → logprob: -1.9105244874954224
    3. '"W' → logprob: -8.660524368286133
    4. '"' → logprob: -9.410524368286133
    5. ' "' → logprob: -10.285524368286133
    6. 'B' → logprob: -11.660524368286133
    7. ' '' → logprob: -14.785524368286133
    8. ''"' → logprob: -15.035524368286133
    9. ' ' → logprob: -15.285524368286133
    10. '`' → logprob: -15.410524368286133

Token 895: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.264322317088954e-05
    2. '"B' → logprob: -10.000052452087402
    3. ''' → logprob: -12.500052452087402
    4. ' B' → logprob: -12.875052452087402
    5. '"' → logprob: -14.250052452087402
    6. 'W' → logprob: -16.25005340576172
    7. '	B' → logprob: -17.50005340576172
    8. '"""' → logprob: -17.62505340576172
    9. 'b' → logprob: -17.87505340576172
    10. 'Ｂ' → logprob: -18.00005340576172

Token 896: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 897: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9870302677154541
    2. '               ' → logprob: -1.612030267715454
    3. '
' → logprob: -1.987030267715454
    4. 'DEC' → logprob: -1.987030267715454
    5. '                   ' → logprob: -3.112030267715454
    6. '       ' → logprob: -3.112030267715454
    7. '<|end|>' → logprob: -4.237030029296875
    8. '   ' → logprob: -4.612030029296875
    9. '[' → logprob: -4.987030029296875
    10. '            
' → logprob: -5.112030029296875

Token 898: ' DEC' (ID: 65456)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4296790659427643
    2. 'DEC' (adapté à ' DEC') → logprob: -1.054679036140442
    3. '           ' → logprob: -7.679678916931152
    4. ' DEC' → logprob: -8.679678916931152
    5. '                   ' → logprob: -9.304678916931152
    6. '              ' → logprob: -9.554678916931152
    7. '_DEC' → logprob: -9.679678916931152
    8. '       ' → logprob: -9.929678916931152
    9. '   ' → logprob: -11.304678916931152
    10. '                ' → logprob: -11.304678916931152

Token 899: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.00026538874953985214
    2. 'ED' → logprob: -8.250265121459961
    3. 'I' → logprob: -13.625265121459961
    4. '\' → logprob: -14.375265121459961
    5. 'IED' → logprob: -14.625265121459961
    6. 'IDE' → logprob: -14.625265121459961
    7. '_' → logprob: -15.000265121459961
    8. 'IC' → logprob: -15.500265121459961
    9. '_ID' → logprob: -15.625265121459961
    10. 'O' → logprob: -16.37526512145996

Token 900: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -3.128163257315464e-07
    2. 'EDD' → logprob: -16.5
    3. 'E' → logprob: -17.0
    4. 'EDI' → logprob: -17.5
    5. 'ed' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. 'DED' → logprob: -18.25
    8. '[' → logprob: -18.25
    9. '=' → logprob: -18.375
    10. 'ЕД' → logprob: -18.5

Token 901: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.023247340694069862
    2. '[' → logprob: -3.773247241973877
    3. ' [' → logprob: -14.898247718811035
    4. '=' → logprob: -15.273247718811035
    5. '[pos' → logprob: -15.773247718811035
    6. '[temp' → logprob: -15.898247718811035
    7. '```' → logprob: -16.14824676513672
    8. '[from' → logprob: -16.14824676513672
    9. '[tmp' → logprob: -16.27324676513672
    10. '[[' → logprob: -16.52324676513672

Token 902: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011585425585508347
    2. '=' → logprob: -4.511585235595703
    3. ']=' → logprob: -8.136585235595703
    4. ' =' → logprob: -8.386585235595703
    5. ' ]' → logprob: -11.136585235595703
    6. '"]' → logprob: -13.511585235595703
    7. ']="' → logprob: -14.261585235595703
    8. ')' → logprob: -15.386585235595703
    9. ' ' → logprob: -17.386585235595703
    10. '"' → logprob: -17.636585235595703

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '="' → logprob: -17.126928329467773
    4. '=

' → logprob: -18.751928329467773
    5. ' ="' → logprob: -18.876928329467773
    6. '=
' → logprob: -19.251928329467773
    7. '='' → logprob: -20.001928329467773
    8. '＝' → logprob: -20.001928329467773
    9. ')' → logprob: -20.626928329467773
    10. '[' → logprob: -21.126928329467773

Token 904: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10037284344434738
    2. '"W' → logprob: -2.350372791290283
    3. ' "' → logprob: -8.975373268127441
    4. ''' → logprob: -10.225373268127441
    5. 'W' → logprob: -12.850373268127441
    6. ' W' → logprob: -14.600373268127441
    7. '"B' → logprob: -16.475372314453125
    8. ' ' → logprob: -16.475372314453125
    9. ' ' → logprob: -16.600372314453125
    10. '("' → logprob: -17.225372314453125

Token 905: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.055645380169153214
    2. '"W' → logprob: -2.93064546585083
    3. '"' → logprob: -7.80564546585083
    4. ' W' → logprob: -8.055644989013672
    5. ''' → logprob: -10.555644989013672
    6. ' "' → logprob: -11.805644989013672
    7. '	W' → logprob: -13.555644989013672
    8. '<W' → logprob: -13.805644989013672
    9. ' ' → logprob: -14.555644989013672
    10. '"""' → logprob: -15.180644989013672

Token 906: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 908: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034382209181785583
    2. '<|end|>' → logprob: -4.159382343292236
    3. '			' → logprob: -5.159382343292236
    4. '	break' → logprob: -5.534382343292236
    5. '                   ' → logprob: -5.909382343292236
    6. 'break' (adapté à ' break') → logprob: -6.034382343292236
    7. '                ' → logprob: -7.034382343292236
    8. '				' → logprob: -8.034381866455078
    9. '           ' → logprob: -8.159381866455078
    10. '              ' → logprob: -8.534381866455078

Token 909: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 910: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 912: ' sort' (ID: 4506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.348328948020935
    2. '       ' → logprob: -1.473328948020935
    3. 'continue' → logprob: -1.598328948020935
    4. '           ' → logprob: -1.848328948020935
    5. 'break' → logprob: -2.0983290672302246
    6. ' ' → logprob: -5.223329067230225
    7. '  ' → logprob: -5.348329067230225
    8. '```' → logprob: -5.473329067230225
    9. '               ' → logprob: -5.723329067230225
    10. ')' → logprob: -6.348329067230225

Token 913: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0010213785571977496
    2. 'c' → logprob: -7.626021385192871
    3. 'l' → logprob: -8.126021385192871
    4. ' la' → logprob: -9.001021385192871
    5. 'for' → logprob: -10.126021385192871
    6. 'le' → logprob: -10.376021385192871
    7. 'ces' → logprob: -11.501021385192871
    8. 'bou' → logprob: -11.751021385192871
    9. 'the' → logprob: -11.751021385192871
    10. 'ce' → logprob: -12.001021385192871

Token 915: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03457188233733177
    2. 'bou' → logprob: -3.534571886062622
    3. 'loop' → logprob: -5.534571647644043
    4. 'inner' → logprob: -7.534571647644043
    5. '```' → logprob: -9.159571647644043
    6. ' for' → logprob: -9.284571647644043
    7. ' boucle' → logprob: -9.534571647644043
    8. 'b' → logprob: -11.659571647644043
    9. 'pour' → logprob: -11.909571647644043
    10. 'outer' → logprob: -12.034571647644043

Token 916: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 917: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 918: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.48927780985832214
    2. 'continue' → logprob: -1.7392778396606445
    3. '<|end|>' → logprob: -2.2392778396606445
    4. '   ' → logprob: -2.4892778396606445
    5. ' else' → logprob: -4.7392778396606445
    6. '       ' → logprob: -5.7392778396606445
    7. ' continue' → logprob: -5.9892778396606445
    8. 'elif' → logprob: -6.1142778396606445
    9. 'if' → logprob: -6.3642778396606445
    10. '```' → logprob: -6.6142778396606445

Token 919: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04601217061281204
    2. ':
' → logprob: -3.6710121631622314
    3. 'continue' → logprob: -4.6710124015808105
    4. ' continue' → logprob: -5.2960124015808105
    5. '       ' → logprob: -6.0460124015808105
    6. '   ' → logprob: -6.4210124015808105
    7. '           ' → logprob: -6.7960124015808105
    8. '	continue' → logprob: -11.796011924743652
    9. ' :' → logprob: -12.171011924743652
    10. ':
' → logprob: -12.546011924743652

Token 920: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09290854632854462
    2. ' continue' → logprob: -3.3429086208343506
    3. 'continue' → logprob: -3.5929086208343506
    4. '       ' → logprob: -3.8429086208343506
    5. '   ' → logprob: -6.3429083824157715
    6. '               ' → logprob: -6.4679083824157715
    7. '```' → logprob: -6.8429083824157715
    8. '	continue' → logprob: -11.34290885925293
    9. '``' → logprob: -11.34290885925293
    10. '		' → logprob: -12.21790885925293

Token 921: ' #' (ID: 1069)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.009876965545117855
    2. 'continue' → logprob: -5.259876728057861
    3. '   ' → logprob: -5.634876728057861
    4. '       ' → logprob: -8.13487720489502
    5. '           ' → logprob: -8.88487720489502
    6. '#' (adapté à ' #') → logprob: -9.25987720489502
    7. '```' → logprob: -9.50987720489502
    8. 'print' → logprob: -9.63487720489502
    9. 'break' → logprob: -9.63487720489502
    10. ' DEC' → logprob: -9.63487720489502

Token 922: ' Si' (ID: 7832)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.26818057894706726
    2. 'continue' → logprob: -2.5181806087493896
    3. '       ' → logprob: -2.7681806087493896
    4. '   ' → logprob: -2.8931806087493896
    5. '           ' → logprob: -3.7681806087493896
    6. 'for' → logprob: -4.7681803703308105
    7. '#' → logprob: -5.8931803703308105
    8. '```' → logprob: -7.1431803703308105
    9. ' DEC' → logprob: -8.018180847167969
    10. '               ' → logprob: -8.643180847167969

Token 923: ' aucun' (ID: 41678)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.086217500269413
    2. ' DEC' → logprob: -3.0862174034118652
    3. 'flag' → logprob: -4.836217403411865
    4. '   ' → logprob: -4.961217403411865
    5. ' not' → logprob: -5.086217403411865
    6. 'True' → logprob: -5.336217403411865
    7. 'not' → logprob: -5.461217403411865
    8. ' True' → logprob: -6.336217403411865
    9. ' flag' → logprob: -6.586217403411865
    10. 'dec' → logprob: -6.836217403411865

Token 924: ' voisin' (ID: 145411)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.7708744406700134
    2. 'vo' → logprob: -1.3958745002746582
    3. ' voisin' → logprob: -2.145874500274658
    4. ' neighbor' → logprob: -3.395874500274658
    5. 'for' → logprob: -4.020874500274658
    6. 'to' → logprob: -4.145874500274658
    7. 'continue' → logprob: -4.395874500274658
    8. 'dec' → logprob: -4.395874500274658
    9. 'ne' → logprob: -4.520874500274658
    10. 'd' → logprob: -4.770874500274658

Token 925: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856947779655457
    2. ':' → logprob: -1.1606948375701904
    3. '           ' → logprob: -3.0356948375701904
    4. '=' → logprob: -3.1606948375701904
    5. 'po' → logprob: -3.2856948375701904
    6. 'n' → logprob: -3.6606948375701904
    7. '   ' → logprob: -4.285694599151611
    8. '       ' → logprob: -4.410694599151611
    9. ' =' → logprob: -4.785694599151611
    10. '==' → logprob: -5.035694599151611

Token 926: ''a' (ID: 10443)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1367485523223877
    2. 'n' → logprob: -1.2617485523223877
    3. 'a' → logprob: -1.6367485523223877
    4. '==' → logprob: -2.5117485523223877
    5. '!=' → logprob: -3.7617485523223877
    6. '=' → logprob: -4.136748313903809
    7. 'est' → logprob: -4.761748313903809
    8. ' ==' → logprob: -4.761748313903809
    9. ' a' → logprob: -4.761748313903809
    10. 'ne' → logprob: -5.136748313903809

Token 927: ' pu' (ID: 2923)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.11458839476108551
    2. ' été' → logprob: -3.239588499069214
    3. 'pu' → logprob: -3.489588499069214
    4. 'ég' → logprob: -4.864588260650635
    5. 'D' → logprob: -4.989588260650635
    6. 'égal' → logprob: -5.364588260650635
    7. 'equal' → logprob: -5.989588260650635
    8. 'une' → logprob: -6.364588260650635
    9. ' trouvé' → logprob: -6.614588260650635
    10. '```' → logprob: -6.614588260650635

Token 928: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.07630958408117294
    2. ' être' → logprob: -2.8263096809387207
    3. 'assign' → logprob: -5.201309680938721
    4. 'color' → logprob: -6.576309680938721
    5. 'êtres' → logprob: -6.826309680938721
    6. 'etre' → logprob: -7.076309680938721
    7. 'Ê' → logprob: -7.201309680938721
    8. ''être' → logprob: -7.451309680938721
    9. ' etre' → logprob: -7.826309680938721
    10. ' be' → logprob: -8.076309204101562

Token 929: ' affect' (ID: 7902)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.07034584879875183
    2. 'tr' → logprob: -3.070345878601074
    3. 'assign' → logprob: -4.195345878601074
    4. ' trouvé' → logprob: -6.070345878601074
    5. 'trait' → logprob: -6.820345878601074
    6. 'attrib' → logprob: -7.320345878601074
    7. 'found' → logprob: -7.445345878601074
    8. ' color' → logprob: -7.695345878601074
    9. 'colored' → logprob: -7.820345878601074
    10. '```' → logprob: -8.695345878601074

Token 930: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0005666146171279252
    2. '=' → logprob: -7.750566482543945
    3. 'ion' → logprob: -10.000566482543945
    4. 'ée' → logprob: -10.875566482543945
    5. '#' → logprob: -11.125566482543945
    6. 'e' → logprob: -11.500566482543945
    7. 'à' → logprob: -11.750566482543945
    8. '   ' → logprob: -12.625566482543945
    9. 'ré' → logprob: -12.750566482543945
    10. 'ed' → logprob: -12.750566482543945

Token 931: ' correctement' (ID: 123961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0060131549835205
    2. '           ' → logprob: -1.0060131549835205
    3. ':' → logprob: -2.5060131549835205
    4. 'à' → logprob: -2.8810131549835205
    5. ' à' → logprob: -3.0060131549835205
    6. '               ' → logprob: -3.1310131549835205
    7. '       ' → logprob: -4.131012916564941
    8. ':
' → logprob: -5.131012916564941
    9. '                   ' → logprob: -6.006012916564941
    10. '=' → logprob: -6.131012916564941

Token 932: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7395395636558533
    2. ':' → logprob: -1.239539623260498
    3. ',' → logprob: -2.989539623260498
    4. '               ' → logprob: -2.989539623260498
    5. '       ' → logprob: -3.114539623260498
    6. 'DEC' → logprob: -3.114539623260498
    7. ':
' → logprob: -3.739539623260498
    8. '   ' → logprob: -5.239539623260498
    9. '#' → logprob: -5.489539623260498
    10. '```' → logprob: -5.614539623260498

Token 933: ' on' (ID: 402)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.07631157338619232
    2. '           ' → logprob: -3.5763115882873535
    3. '   ' → logprob: -4.0763115882873535
    4. 'continue' → logprob: -4.9513115882873535
    5. ' DEC' → logprob: -5.2013115882873535
    6. '#' → logprob: -5.4513115882873535
    7. 'print' → logprob: -5.7013115882873535
    8. '       ' → logprob: -5.7013115882873535
    9. '               ' → logprob: -6.0763115882873535
    10. 'pass' → logprob: -7.4513115882873535

Token 934: ' affiche' (ID: 127479)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3037470579147339
    2. 'sys' → logprob: -1.5537470579147339
    3. 'print' → logprob: -1.6787470579147339
    4. 'continue' → logprob: -1.9287470579147339
    5. 'break' → logprob: -2.6787471771240234
    6. '   ' → logprob: -3.1787471771240234
    7. 'exit' → logprob: -4.053747177124023
    8. ' sys' → logprob: -4.553747177124023
    9. 'raise' → logprob: -4.678747177124023
    10. ' break' → logprob: -4.678747177124023

Token 935: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22401712834835052
    2. '("' → logprob: -2.7240171432495117
    3. '(-' → logprob: -3.4740171432495117
    4. 'print' → logprob: -3.9740171432495117
    5. '-im' → logprob: -3.9740171432495117
    6. '0' → logprob: -3.9740171432495117
    7. '"' → logprob: -4.474017143249512
    8. '-N' → logprob: -5.349017143249512
    9. 'NO' → logprob: -5.474017143249512
    10. 'im' → logprob: -5.724017143249512

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. 'print' → logprob: -10.875025749206543
    3. '```' → logprob: -12.750025749206543
    4. ' ' → logprob: -13.500025749206543
    5. '   ' → logprob: -14.250025749206543
    6. '
' → logprob: -14.875025749206543
    7. '``' → logprob: -15.000025749206543
    8. '"' → logprob: -15.125025749206543
    9. '`' → logprob: -15.500025749206543
    10. '-' → logprob: -15.500025749206543

Token 937: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4407561421394348
    2. '           ' → logprob: -1.31575608253479
    3. '               ' → logprob: -2.81575608253479
    4. '```' → logprob: -4.065756320953369
    5. '       ' → logprob: -5.190756320953369
    6. '                   ' → logprob: -6.190756320953369
    7. '   ' → logprob: -6.690756320953369
    8. '-' → logprob: -7.315756320953369
    9. 'sys' → logprob: -7.315756320953369
    10. '``' → logprob: -8.190755844116211

Token 938: ' on' (ID: 402)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.020786993205547333
    2. ' sys' → logprob: -4.395786762237549
    3. 'import' → logprob: -5.520786762237549
    4. 'exit' → logprob: -5.645786762237549
    5. '
' → logprob: -8.020787239074707
    6. '```' → logprob: -8.770787239074707
    7. 'print' → logprob: -9.270787239074707
    8. '	sys' → logprob: -9.645787239074707
    9. 'break' → logprob: -10.270787239074707
    10. '    
' → logprob: -12.145787239074707

Token 939: ' termine' (ID: 76900)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.26138928532600403
    2. 'exit' → logprob: -1.7613892555236816
    3. 'sys' → logprob: -2.8863892555236816
    4. ' exit' → logprob: -6.636389255523682
    5. ' sys' → logprob: -7.136389255523682
    6. '
' → logprob: -9.38638973236084
    7. '```' → logprob: -9.38638973236084
    8. ' import' → logprob: -9.88638973236084
    9. '	exit' → logprob: -10.13638973236084
    10. 'break' → logprob: -10.38638973236084

Token 940: ' le' (ID: 505)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.15378381311893463
    2. '(sys' → logprob: -2.9037837982177734
    3. '           ' → logprob: -3.4037837982177734
    4. '               ' → logprob: -4.153783798217773
    5. '```' → logprob: -4.778783798217773
    6. ' sys' → logprob: -5.028783798217773
    7. 'print' → logprob: -5.028783798217773
    8. '()' → logprob: -5.403783798217773
    9. '                   ' → logprob: -5.653783798217773
    10. '   ' → logprob: -6.153783798217773

Token 941: ' programme' (ID: 18190)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25913524627685547
    2. 'exit' → logprob: -1.7591352462768555
    3. 'print' → logprob: -3.6341352462768555
    4. 'import' → logprob: -4.3841352462768555
    5. 'program' → logprob: -4.5091352462768555
    6. '
' → logprob: -5.8841352462768555
    7. '```' → logprob: -6.6341352462768555
    8. ' sys' → logprob: -7.0091352462768555
    9. 'ex' → logprob: -8.759135246276855
    10. '
' → logprob: -9.134135246276855

Token 942: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5963248014450073
    2. '               ' → logprob: -1.4713248014450073
    3. 'sys' → logprob: -1.9713248014450073
    4. '```' → logprob: -3.721324920654297
    5. '   ' → logprob: -3.846324920654297
    6. '       ' → logprob: -3.971324920654297
    7. '                   ' → logprob: -5.096324920654297
    8. 'print' → logprob: -5.596324920654297
    9. '
' → logprob: -6.471324920654297
    10. 'exit' → logprob: -7.096324920654297

Token 943: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8988685607910156
    2. 'sys' → logprob: -1.3988685607910156
    3. '               ' → logprob: -1.6488685607910156
    4. '   ' → logprob: -2.7738685607910156
    5. '```' → logprob: -2.8988685607910156
    6. ' sys' → logprob: -4.148868560791016
    7. '       ' → logprob: -4.398868560791016
    8. '                   ' → logprob: -5.523868560791016
    9. 'exit' → logprob: -6.398868560791016
    10. '``' → logprob: -6.773868560791016

Token 944: ' print' (ID: 2123)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0006068871589377522
    2. ' sys' → logprob: -8.375606536865234
    3. 'print' (adapté à ' print') → logprob: -8.500606536865234
    4. '   ' → logprob: -8.875606536865234
    5. '```' → logprob: -11.125606536865234
    6. 'exit' → logprob: -11.625606536865234
    7. '	sys' → logprob: -13.000606536865234
    8. 'import' → logprob: -13.000606536865234
    9. '
' → logprob: -13.500606536865234
    10. '(sys' → logprob: -13.500606536865234

Token 945: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0042616999708116055
    2. '-' → logprob: -5.504261493682861
    3. '(' → logprob: -8.62926197052002
    4. '("-' → logprob: -13.12926197052002
    5. '(
' → logprob: -13.50426197052002
    6. ' -' → logprob: -14.00426197052002
    7. '()-' → logprob: -16.129261016845703
    8. '('-' → logprob: -16.504261016845703
    9. '```' → logprob: -17.879261016845703
    10. ' (-' → logprob: -18.129261016845703

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.5
    5. '
' → logprob: -20.875
    6. ')' → logprob: -21.125
    7. '１' → logprob: -21.75
    8. '' → logprob: -22.0
    9. '`' → logprob: -22.125
    10. '"""' → logprob: -22.25

Token 947: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038306672126054764
    2. ')' → logprob: -3.288306713104248
    3. ')
' → logprob: -8.28830623626709
    4. ' )
' → logprob: -12.41330623626709
    5. 'sys' → logprob: -12.66330623626709
    6. '           ' → logprob: -12.91330623626709
    7. ')return' → logprob: -13.78830623626709
    8. '               ' → logprob: -14.28830623626709
    9. '   ' → logprob: -14.66330623626709
    10. ')`
' → logprob: -14.78830623626709

Token 948: '           ' (ID: 352)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.14586886763572693
    2. 'exit' → logprob: -2.3958687782287598
    3. '
' → logprob: -3.8958687782287598
    4. '<|end|>' → logprob: -4.39586877822876
    5. ' sys' → logprob: -5.52086877822876
    6. '```' → logprob: -6.27086877822876
    7. '           ' → logprob: -6.89586877822876
    8. '	sys' → logprob: -7.02086877822876
    9. 'import' → logprob: -7.39586877822876
    10. '    
' → logprob: -7.77086877822876

Token 949: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.21652181446552277
    2. 'exit' → logprob: -1.7165218591690063
    3. ' sys' → logprob: -4.966521739959717
    4. '
' → logprob: -5.341521739959717
    5. '```' → logprob: -6.841521739959717
    6. ' exit' → logprob: -7.091521739959717
    7. 'return' → logprob: -7.216521739959717
    8. 'import' → logprob: -9.466522216796875
    9. '	sys' → logprob: -9.716522216796875
    10. 'break' → logprob: -9.716522216796875

Token 950: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -1.2948405128554441e-05
    2. '.' → logprob: -11.37501335144043
    3. 'exit' → logprob: -14.12501335144043
    4. '.quit' → logprob: -15.25001335144043
    5. '.stdout' → logprob: -15.50001335144043
    6. '.EXIT' → logprob: -16.75001335144043
    7. '	exit' → logprob: -16.87501335144043
    8. '.stderr' → logprob: -17.75001335144043
    9. '```' → logprob: -17.75001335144043
    10. '.Exit' → logprob: -18.12501335144043

Token 951: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00866798684000969
    2. '(' → logprob: -4.758667945861816
    3. '()
' → logprob: -10.633667945861816
    4. '0' → logprob: -10.758667945861816
    5. ' ()' → logprob: -12.633667945861816
    6. '()\' → logprob: -12.758667945861816
    7. '(
' → logprob: -14.508667945861816
    8. '()`' → logprob: -14.883667945861816
    9. '()

' → logprob: -15.133667945861816
    10. '()<' → logprob: -15.383667945861816

Token 952: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07073155045509338
    2. '<|end|>' → logprob: -3.3207316398620605
    3. ' else' → logprob: -4.5707316398620605
    4. '   ' → logprob: -4.9457316398620605
    5. 'elif' → logprob: -5.1957316398620605
    6. 'continue' → logprob: -5.5707316398620605
    7. '#' → logprob: -6.8207316398620605
    8. 'print' → logprob: -6.9457316398620605
    9. '```' → logprob: -6.9457316398620605
    10. 'for' → logprob: -7.0707316398620605

Token 954: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017543019726872444
    2. ':
' → logprob: -4.267542839050293
    3. '       ' → logprob: -6.267542839050293
    4. '   ' → logprob: -6.642542839050293
    5. '[' → logprob: -9.017542839050293
    6. ' :' → logprob: -11.267542839050293
    7. '```' → logprob: -11.267542839050293
    8. '{' → logprob: -12.767542839050293
    9. '<|end|>' → logprob: -12.892542839050293
    10. '#' → logprob: -13.142542839050293

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3198085129261017
    2. '   ' → logprob: -1.3198084831237793
    3. '#' → logprob: -5.819808483123779
    4. 'for' → logprob: -6.444808483123779
    5. 'print' → logprob: -6.819808483123779
    6. '```' → logprob: -8.069808959960938
    7. ' for' → logprob: -8.819808959960938
    8. 'DEC' → logprob: -9.069808959960938
    9. '           ' → logprob: -9.194808959960938
    10. 'if' → logprob: -9.194808959960938

Token 956: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8854403495788574
    2. 'DEC' → logprob: -1.6354403495788574
    3. 'print' → logprob: -2.1354403495788574
    4. '#' (adapté à ' #') → logprob: -2.3854403495788574
    5. '   ' → logprob: -2.3854403495788574
    6. 'if' → logprob: -2.6354403495788574
    7. 'continue' → logprob: -4.760440349578857
    8. '       ' → logprob: -5.385440349578857
    9. 'pass' → logprob: -5.510440349578857
    10. '```' → logprob: -7.885440349578857

Token 957: ' Cas' (ID: 8066)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762449502944946
    2. 'DEC' → logprob: -1.7012449502944946
    3. 'print' → logprob: -2.076244831085205
    4. 'if' → logprob: -2.326244831085205
    5. '#' → logprob: -3.951244831085205
    6. '   ' → logprob: -5.576244831085205
    7. 'continue' → logprob: -5.576244831085205
    8. 'color' → logprob: -6.201244831085205
    9. 'pass' → logprob: -6.576244831085205
    10. 'dec' → logprob: -7.201244831085205

Token 958: ' où' (ID: 15113)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5630987286567688
    2. '   ' → logprob: -1.313098669052124
    3. '       ' → logprob: -1.938098669052124
    4. ' if' → logprob: -5.188098907470703
    5. ' :' → logprob: -6.063098907470703
    6. 'if' → logprob: -6.438098907470703
    7. '           ' → logprob: -6.688098907470703
    8. '    ' → logprob: -6.688098907470703
    9. '"' → logprob: -7.063098907470703
    10. 'elif' → logprob: -7.063098907470703

Token 959: ' au' (ID: 2791)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.013447141274809837
    2. '   ' → logprob: -4.763447284698486
    3. ' DEC' → logprob: -6.263447284698486
    4. 'D' → logprob: -6.888447284698486
    5. 'po' → logprob: -8.138446807861328
    6. 'dec' → logprob: -8.263446807861328
    7. '"' → logprob: -8.263446807861328
    8. 'DIS' → logprob: -8.388446807861328
    9. '       ' → logprob: -8.888446807861328
    10. ' ' → logprob: -9.263446807861328

Token 960: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.1674504280090332
    2. 'po' → logprob: -2.667450428009033
    3. 'else' → logprob: -3.542450428009033
    4. ' moins' → logprob: -3.917450428009033
    5. 'elif' → logprob: -4.417450428009033
    6. 'pass' → logprob: -4.792450428009033
    7. 'mo' → logprob: -5.417450428009033
    8. 'pas' → logprob: -6.667450428009033
    9. 'print' → logprob: -7.292450428009033
    10. 'least' → logprob: -7.292450428009033

Token 961: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.05103853717446327
    2. ' un' → logprob: -4.30103874206543
    3. 'po' → logprob: -4.30103874206543
    4. 'vo' → logprob: -4.55103874206543
    5. 'DEC' → logprob: -5.30103874206543
    6. 'flag' → logprob: -5.67603874206543
    7. 'not' → logprob: -6.05103874206543
    8. 'une' → logprob: -7.92603874206543
    9. ' po' → logprob: -8.55103874206543
    10. '1' → logprob: -8.80103874206543

Token 962: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.4528912603855133
    2. ' voisin' → logprob: -1.827891230583191
    3. 'DEC' → logprob: -2.2028913497924805
    4. 'neighbor' → logprob: -2.9528913497924805
    5. 'for' → logprob: -4.9528913497924805
    6. 'po' → logprob: -5.0778913497924805
    7. ' DEC' → logprob: -6.0778913497924805
    8. 'dec' → logprob: -6.2028913497924805
    9. 'not' → logprob: -6.2028913497924805
    10. 'if' → logprob: -6.3278913497924805

Token 963: ' de' (ID: 334)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5885791778564453
    2. ' !=' → logprob: -1.4635791778564453
    3. '   ' → logprob: -1.7135791778564453
    4. '       ' → logprob: -4.713579177856445
    5. '==' → logprob: -4.713579177856445
    6. ' ==' → logprob: -4.838579177856445
    7. ':' → logprob: -6.213579177856445
    8. '!' → logprob: -6.463579177856445
    9. '=' → logprob: -7.713579177856445
    10. '[' → logprob: -8.213579177856445

Token 964: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -1.4498052223643754e-05
    2. 'la' → logprob: -12.375014305114746
    3. 'l' → logprob: -12.500014305114746
    4. 'pe' → logprob: -13.500014305114746
    5. ' po' → logprob: -14.000014305114746
    6. '```' → logprob: -14.000014305114746
    7. '`' → logprob: -14.625014305114746
    8. 'x' → logprob: -14.625014305114746
    9. 'to' → logprob: -14.625014305114746
    10. 'p' → logprob: -15.125014305114746

Token 965: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1027352809906006
    2. '!=' → logprob: -1.4777352809906006
    3. 'a' → logprob: -1.8527352809906006
    4. ' !=' → logprob: -2.2277352809906006
    5. '   ' → logprob: -3.1027352809906006
    6. ':' → logprob: -3.4777352809906006
    7. 'est' → logprob: -3.8527352809906006
    8. ' est' → logprob: -4.47773551940918
    9. '       ' → logprob: -4.60273551940918
    10. 'n' → logprob: -4.72773551940918

Token 966: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.965552568435669
    2. '"' → logprob: -1.840552568435669
    3. '=""' → logprob: -2.090552568435669
    4. 'été' → logprob: -2.465552568435669
    5. '""' → logprob: -2.590552568435669
    6. 'dec' → logprob: -2.840552568435669
    7. '"""' → logprob: -3.340552568435669
    8. 'd' → logprob: -3.965552568435669
    9. 'une' → logprob: -4.84055233001709
    10. 'DEC' → logprob: -4.96555233001709

Token 967: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.6058626174926758
    2. 'une' → logprob: -1.2308626174926758
    3. 'dé' → logprob: -3.105862617492676
    4. 'd' → logprob: -3.355862617492676
    5. 'dec' → logprob: -3.855862617492676
    6. ' été' → logprob: -4.355862617492676
    7. 'é' → logprob: -5.105862617492676
    8. '=""' → logprob: -5.105862617492676
    9. '```' → logprob: -5.105862617492676
    10. 'DEC' → logprob: -5.605862617492676

Token 968: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6361101865768433
    2. 'd' → logprob: -0.7611101865768433
    3. 'colored' → logprob: -7.261110305786133
    4. '"' → logprob: -7.636110305786133
    5. '```' → logprob: -7.886110305786133
    6. '"""' → logprob: -7.886110305786133
    7. 'dé' → logprob: -8.261110305786133
    8. 'assign' → logprob: -8.386110305786133
    9. ' color' → logprob: -8.511110305786133
    10. '""' → logprob: -8.511110305786133

Token 969: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.34142255783081055
    2. '=' → logprob: -1.8414225578308105
    3. 'é' → logprob: -2.0914225578308105
    4. '"' → logprob: -5.7164225578308105
    5. 'i' → logprob: -7.2164225578308105
    6. 'ie' → logprob: -7.5914225578308105
    7. 'isé' → logprob: -7.7164225578308105
    8. '"]' → logprob: -7.9664225578308105
    9. '")' → logprob: -7.9664225578308105
    10. ' =' → logprob: -8.091423034667969

Token 970: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7390248775482178
    2. '       ' → logprob: -0.8640248775482178
    3. '   ' → logprob: -2.4890248775482178
    4. ':
' → logprob: -4.114025115966797
    5. '           ' → logprob: -8.114025115966797
    6. '```' → logprob: -8.364025115966797
    7. ' :' → logprob: -8.614025115966797
    8. '[' → logprob: -9.114025115966797
    9. ' if' → logprob: -9.239025115966797
    10. 'if' → logprob: -9.364025115966797

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047639645636081696
    2. '```' → logprob: -4.297639846801758
    3. '   ' → logprob: -4.547639846801758
    4. ' for' → logprob: -4.922639846801758
    5. '           ' → logprob: -5.422639846801758
    6. 'for' → logprob: -5.547639846801758
    7. ' if' → logprob: -6.047639846801758
    8. 'if' → logprob: -6.297639846801758
    9. 'DEC' → logprob: -6.797639846801758
    10. ' DEC' → logprob: -8.422639846801758

Token 972: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2988743185997009
    2. 'if' → logprob: -2.0488743782043457
    3. 'DEC' → logprob: -2.1738743782043457
    4. '   ' → logprob: -5.423874378204346
    5. 'color' → logprob: -5.798874378204346
    6. '       ' → logprob: -6.173874378204346
    7. '#' → logprob: -6.298874378204346
    8. 'continue' → logprob: -6.923874378204346
    9. '```' → logprob: -7.173874378204346
    10. 'print' → logprob: -7.298874378204346

Token 973: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00032485672272741795
    2. ' to' → logprob: -8.125325202941895
    3. 'neighbor' → logprob: -11.875325202941895
    4. 'v' → logprob: -12.125325202941895
    5. 't' → logprob: -12.250325202941895
    6. 'ne' → logprob: -13.875325202941895
    7. 'nei' → logprob: -14.000325202941895
    8. 'dis' → logprob: -14.000325202941895
    9. 'adj' → logprob: -14.125325202941895
    10. 'n' → logprob: -14.500325202941895

Token 974: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3133143484592438
    2. ' in' → logprob: -1.3133143186569214
    3. 'not' → logprob: -11.313314437866211
    4. '	in' → logprob: -11.688314437866211
    5. ' ' → logprob: -11.938314437866211
    6. 'to' → logprob: -12.063314437866211
    7. 'E' → logprob: -12.688314437866211
    8. '
' → logprob: -12.938314437866211
    9. ' ' → logprob: -13.438314437866211
    10. 'import' → logprob: -13.438314437866211

Token 975: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00029959288076497614
    2. ' E' → logprob: -8.125299453735352
    3. '[E' → logprob: -13.000299453735352
    4. '	E' → logprob: -14.875299453735352
    5. '>E' → logprob: -15.500299453735352
    6. '<E' → logprob: -15.875299453735352
    7. '   ' → logprob: -16.25029945373535
    8. ' ' → logprob: -16.25029945373535
    9. '(E' → logprob: -16.50029945373535
    10. '[' → logprob: -16.62529945373535

Token 976: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.875000953674316
    3. '[
' → logprob: -16.25
    4. '[to' → logprob: -16.5
    5. '   ' → logprob: -16.75
    6. '[pos' → logprob: -17.125
    7. '#' → logprob: -17.25
    8. ' [' → logprob: -17.625
    9. '﻿' → logprob: -17.9375
    10. '	' → logprob: -18.625

Token 977: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -4.47757811343763e-05
    2. '(po' → logprob: -10.500044822692871
    3. '[' → logprob: -11.375044822692871
    4. ' po' → logprob: -12.125044822692871
    5. 'to' → logprob: -15.500044822692871
    6. '(' → logprob: -17.125043869018555
    7. 'pos' → logprob: -17.750043869018555
    8. '```' → logprob: -18.000043869018555
    9. 'p' → logprob: -18.375043869018555
    10. 'Po' → logprob: -18.375043869018555

Token 978: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02480650320649147
    2. ':' → logprob: -3.899806499481201
    3. ']:
' → logprob: -5.524806499481201
    4. ']' → logprob: -8.64980697631836
    5. ']:
' → logprob: -10.02480697631836
    6. '[' → logprob: -11.14980697631836
    7. ':
' → logprob: -11.27480697631836
    8. '       ' → logprob: -12.64980697631836
    9. '):' → logprob: -12.77480697631836
    10. ':]' → logprob: -12.77480697631836

Token 979: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02663511596620083
    2. 'if' → logprob: -4.40163516998291
    3. ' if' → logprob: -4.90163516998291
    4. '           ' → logprob: -5.65163516998291
    5. '   ' → logprob: -6.27663516998291
    6. '	       ' → logprob: -7.40163516998291
    7. '```' → logprob: -8.52663516998291
    8. '<|end|>' → logprob: -8.65163516998291
    9. '	   ' → logprob: -9.65163516998291
    10. '	if' → logprob: -9.77663516998291

Token 980: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007863077335059643
    2. ' if' → logprob: -5.2578630447387695
    3. '       ' → logprob: -6.3828630447387695
    4. '           ' → logprob: -7.3828630447387695
    5. '   ' → logprob: -8.13286304473877
    6. '	if' → logprob: -12.13286304473877
    7. '               ' → logprob: -12.13286304473877
    8. '```' → logprob: -12.63286304473877
    9. '#' (adapté à ' #') → logprob: -13.13286304473877
    10. 'print' → logprob: -13.50786304473877

Token 981: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018465323373675346
    2. 'edge' → logprob: -7.3768463134765625
    3. 'key' → logprob: -7.3768463134765625
    4. '           ' → logprob: -8.251846313476562
    5. 'idx' → logprob: -8.626846313476562
    6. '   ' → logprob: -10.251846313476562
    7. '       ' → logprob: -10.501846313476562
    8. 'e' → logprob: -11.001846313476562
    9. 'ar' → logprob: -11.126846313476562
    10. 'k' → logprob: -11.251846313476562

Token 982: ' le' (ID: 505)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.12024635076522827
    2. 'D' → logprob: -2.495246410369873
    3. 'DIS' → logprob: -3.745246410369873
    4. ' DEC' → logprob: -5.120246410369873
    5. ' D' → logprob: -7.120246410369873
    6. 'to' → logprob: -9.120245933532715
    7. ' DIS' → logprob: -9.245245933532715
    8. 'dec' → logprob: -9.745245933532715
    9. '   ' → logprob: -10.245245933532715
    10. ' ' → logprob: -11.120245933532715

Token 983: ' voisin' (ID: 145411)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.08440603315830231
    2. 'D' → logprob: -2.8344061374664307
    3. 'DIS' → logprob: -3.8344061374664307
    4. 'dec' → logprob: -7.959405899047852
    5. 'to' → logprob: -9.584405899047852
    6. 'dis' → logprob: -10.209405899047852
    7. ' DEC' → logprob: -10.209405899047852
    8. 'not' → logprob: -11.334405899047852
    9. 'abs' → logprob: -11.459405899047852
    10. 'DISC' → logprob: -11.959405899047852

Token 984: ' to' (ID: 316)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.3182706832885742
    2. '!=' → logprob: -1.3182706832885742
    3. 'DEC' → logprob: -1.4432706832885742
    4. ' in' → logprob: -3.068270683288574
    5. ' ==' → logprob: -3.443270683288574
    6. '==' → logprob: -3.443270683288574
    7. '           ' → logprob: -3.693270683288574
    8. ' DEC' → logprob: -3.818270683288574
    9. '   ' → logprob: -4.068270683288574
    10. 'D' → logprob: -4.193270683288574

Token 985: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6045763492584229
    2. '!=' → logprob: -0.9795763492584229
    3. ' ==' → logprob: -3.354576349258423
    4. '==' → logprob: -3.854576349258423
    5. ' is' → logprob: -5.604576110839844
    6. ' has' → logprob: -6.104576110839844
    7. ' in' → logprob: -6.479576110839844
    8. 'if' → logprob: -6.479576110839844
    9. 'is' → logprob: -6.729576110839844
    10. '           ' → logprob: -6.854576110839844

Token 986: ' color' (ID: 3089)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6241410970687866
    2. 'colored' → logprob: -1.9991410970687866
    3. 'DEC' → logprob: -2.124141216278076
    4. 'po' → logprob: -2.249141216278076
    5. ' not' → logprob: -2.749141216278076
    6. '""' → logprob: -4.249141216278076
    7. ' po' → logprob: -4.874141216278076
    8. '"' → logprob: -5.499141216278076
    9. ' colored' → logprob: -5.874141216278076
    10. 'color' → logprob: -6.374141216278076

Token 987: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.00037204305408522487
    2. 'é' → logprob: -8.375371932983398
    3. 'i' → logprob: -8.875371932983398
    4. '"' → logprob: -14.500371932983398
    5. 'iable' → logprob: -15.000371932983398
    6. 'isé' → logprob: -15.750371932983398
    7. 'ië' → logprob: -15.750371932983398
    8. 'lié' → logprob: -16.2503719329834
    9. '"#' → logprob: -16.3753719329834
    10. 'e' → logprob: -16.7503719329834

Token 988: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7040061950683594
    2. 'and' → logprob: -1.7040061950683594
    3. '==' → logprob: -1.9540061950683594
    4. '               ' → logprob: -2.7040061950683594
    5. ' ==' → logprob: -3.0790061950683594
    6. '!=' → logprob: -3.4540061950683594
    7. ':
' → logprob: -4.454006195068359
    8. ' !=' → logprob: -4.704006195068359
    9. '           ' → logprob: -4.954006195068359
    10. ':' → logprob: -5.704006195068359

Token 989: ' mais' (ID: 2899)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19898848235607147
    2. '               ' → logprob: -2.198988437652588
    3. ' if' → logprob: -2.823988437652588
    4. '           ' → logprob: -4.698988437652588
    5. 'print' → logprob: -8.948988914489746
    6. 'idx' → logprob: -8.948988914489746
    7. 'token' → logprob: -9.073988914489746
    8. 'break' → logprob: -9.323988914489746
    9. 'index' → logprob: -9.448988914489746
    10. 't' → logprob: -9.823988914489746

Token 990: ' pas' (ID: 2173)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.05268414318561554
    2. ' DEC' → logprob: -3.0526840686798096
    3. 'D' → logprob: -6.302684307098389
    4. '           ' → logprob: -6.427684307098389
    5. '   ' → logprob: -8.17768383026123
    6. ' D' → logprob: -9.80268383026123
    7. 'DIS' → logprob: -10.30268383026123
    8. 'dec' → logprob: -10.42768383026123
    9. '               ' → logprob: -10.55268383026123
    10. 'to' → logprob: -10.67768383026123

Token 991: ' po' (ID: 2482)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.6138417720794678
    2. 'po' → logprob: -1.6138417720794678
    3. ' DEC' → logprob: -2.3638417720794678
    4. '""' → logprob: -3.3638417720794678
    5. ' po' → logprob: -3.9888417720794678
    6. 'equal' → logprob: -3.9888417720794678
    7. '"' → logprob: -3.9888417720794678
    8. ' equal' → logprob: -4.238842010498047
    9. ' égal' → logprob: -5.613842010498047
    10. 'to' → logprob: -5.613842010498047

Token 992: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14756593108177185
    2. 'and' → logprob: -2.7725658416748047
    3. '               ' → logprob: -3.3975658416748047
    4. ' or' → logprob: -3.7725658416748047
    5. '           ' → logprob: -4.897565841674805
    6. ':' → logprob: -5.522565841674805
    7. ' ' → logprob: -6.397565841674805
    8. ':
' → logprob: -6.897565841674805
    9. '=' → logprob: -7.147565841674805
    10. '==' → logprob: -7.272565841674805

Token 993: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37746894359588623
    2. ' if' → logprob: -1.7524689435958862
    3. ' and' → logprob: -2.252469062805176
    4. '           ' → logprob: -3.502469062805176
    5. 'if' → logprob: -6.252469062805176
    6. '   ' → logprob: -7.002469062805176
    7. '       ' → logprob: -7.377469062805176
    8. 'and' → logprob: -8.002469062805176
    9. ' continue' → logprob: -8.252469062805176
    10. '<|end|>' → logprob: -8.377469062805176

Token 994: ' donne' (ID: 30004)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8945062160491943
    2. ' continue' → logprob: -1.2695062160491943
    3. 'if' → logprob: -2.0195062160491943
    4. '           ' → logprob: -2.3945062160491943
    5. ' if' → logprob: -2.7695062160491943
    6. '               ' → logprob: -5.269506454467773
    7. 'and' → logprob: -5.894506454467773
    8. ' and' → logprob: -6.019506454467773
    9. ' not' → logprob: -6.019506454467773
    10. 'not' → logprob: -6.019506454467773

Token 995: ' à' (ID: 1221)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.13703587651252747
    2. '"' → logprob: -2.762035846710205
    3. ' po' → logprob: -2.762035846710205
    4. '(po' → logprob: -7.637035846710205
    5. '```' → logprob: -8.012036323547363
    6. '`' → logprob: -8.387036323547363
    7. 'if' → logprob: -9.012036323547363
    8. ''' → logprob: -9.762036323547363
    9. 'to' → logprob: -10.262036323547363
    10. 'a' → logprob: -10.387036323547363

Token 996: ' po' (ID: 2482)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -1.0666395425796509
    2. 'DEC' → logprob: -1.0666395425796509
    3. 'po' → logprob: -1.1916395425796509
    4. ' po' → logprob: -5.316639423370361
    5. ' DEC' → logprob: -7.566639423370361
    6. 'PO' → logprob: -7.816639423370361
    7. '`' → logprob: -7.941639423370361
    8. 'dec' → logprob: -7.941639423370361
    9. ' DIS' → logprob: -8.19163990020752
    10. '```' → logprob: -8.31663990020752

Token 997: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02883327752351761
    2. ' =' → logprob: -3.7788333892822266
    3. '"' → logprob: -5.278833389282227
    4. '="' → logprob: -8.028833389282227
    5. '```' → logprob: -11.153833389282227
    6. '`' → logprob: -11.278833389282227
    7. ')' → logprob: -11.653833389282227
    8. ' "' → logprob: -11.653833389282227
    9. '='' → logprob: -11.903833389282227
    10. ' a' → logprob: -12.028833389282227

Token 998: ' couleur' (ID: 48005)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.32240235805511475
    2. '"' → logprob: -1.4474023580551147
    3. '"B' → logprob: -3.4474024772644043
    4. ' "' → logprob: -5.822402477264404
    5. ''' → logprob: -6.072402477264404
    6. 'W' → logprob: -6.697402477264404
    7. 'to' → logprob: -7.197402477264404
    8. 'DEC' → logprob: -8.072402000427246
    9. ' W' → logprob: -8.447402000427246
    10. '"D' → logprob: -8.697402000427246

Token 999: ' oppos' (ID: 20679)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0671025514602661
    2. 'DEC' → logprob: -1.1921025514602661
    3. '=' → logprob: -1.3171025514602661
    4. ' =' → logprob: -2.9421024322509766
    5. ' DEC' → logprob: -4.067102432250977
    6. '="' → logprob: -5.442102432250977
    7. ' "' → logprob: -5.817102432250977
    8. '           ' → logprob: -6.192102432250977
    9. '""' → logprob: -6.442102432250977
    10. ''' → logprob: -7.567102432250977

Token 1000: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26314637064933777
    2. '"' → logprob: -1.7631464004516602
    3. ' =' → logprob: -3.38814640045166
    4. '="' → logprob: -4.88814640045166
    5. ' "' → logprob: -5.13814640045166
    6. 'if' → logprob: -5.63814640045166
    7. ' ' → logprob: -6.63814640045166
    8. 'to' → logprob: -6.63814640045166
    9. '   ' → logprob: -7.01314640045166
    10. 'def' → logprob: -7.51314640045166

Token 1001: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8587364554405212
    2. ' if' → logprob: -1.608736515045166
    3. ' =' → logprob: -1.733736515045166
    4. '=' → logprob: -2.608736515045166
    5. '               ' → logprob: -2.983736515045166
    6. '"' → logprob: -3.858736515045166
    7. ' to' → logprob: -4.983736515045166
    8. '[' → logprob: -5.108736515045166
    9. '       ' → logprob: -5.108736515045166
    10. ' (' → logprob: -5.358736515045166

Token 1002: ' celle' (ID: 31790)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.009879447519779205
    2. '"' → logprob: -4.8848795890808105
    3. ' DEC' → logprob: -6.3848795890808105
    4. '("' → logprob: -7.8848795890808105
    5. '(' → logprob: -9.134879112243652
    6. ''' → logprob: -10.759879112243652
    7. '_DEC' → logprob: -11.259879112243652
    8. '"D' → logprob: -11.384879112243652
    9. '('' → logprob: -11.634879112243652
    10. ' "' → logprob: -12.384879112243652

Token 1003: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8257389068603516
    2. '[to' → logprob: -0.8257389068603516
    3. 'de' → logprob: -3.0757389068603516
    4. ' de' → logprob: -3.5757389068603516
    5. 'to' → logprob: -4.075738906860352
    6. '=' → logprob: -4.075738906860352
    7. 'of' → logprob: -5.075738906860352
    8. ' of' → logprob: -5.200738906860352
    9. '(to' → logprob: -6.575738906860352
    10. '```' → logprob: -7.700738906860352

Token 1004: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0002448893792461604
    2. ' to' → logprob: -8.500245094299316
    3. 'DEC' → logprob: -10.125245094299316
    4. 'dec' → logprob: -14.375245094299316
    5. ' DEC' → logprob: -14.750245094299316
    6. '	to' → logprob: -15.125245094299316
    7. '   ' → logprob: -16.250244140625
    8. ' ' → logprob: -17.875244140625
    9. '```' → logprob: -17.875244140625
    10. '[to' → logprob: -18.000244140625

Token 1005: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37503814697265625
    2. ':
' → logprob: -2.2500381469726562
    3. '               ' → logprob: -2.3750381469726562
    4. ':' → logprob: -2.6250381469726562
    5. '=' → logprob: -4.000038146972656
    6. ' and' → logprob: -4.500038146972656
    7. ' =' → logprob: -5.375038146972656
    8. ' :
' → logprob: -6.500038146972656
    9. ' if' → logprob: -6.750038146972656
    10. '[' → logprob: -7.125038146972656

Token 1006: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13784725964069366
    2. '       ' → logprob: -3.1378471851348877
    3. '               ' → logprob: -3.2628471851348877
    4. '[' → logprob: -3.7628471851348877
    5. ' if' → logprob: -4.012847423553467
    6. 'if' → logprob: -7.012847423553467
    7. '            
' → logprob: -7.262847423553467
    8. '```' → logprob: -7.387847423553467
    9. ' 
' → logprob: -7.637847423553467
    10. '            ' → logprob: -7.762847423553467

Token 1007: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12247071415185928
    2. '           ' → logprob: -2.9974706172943115
    3. 'if' (adapté à ' if') → logprob: -3.3724706172943115
    4. '               ' → logprob: -3.4974706172943115
    5. '       ' → logprob: -8.24747085571289
    6. '		' → logprob: -9.24747085571289
    7. '	if' → logprob: -9.24747085571289
    8. '	       ' → logprob: -9.49747085571289
    9. ' ' → logprob: -9.62247085571289
    10. '			' → logprob: -9.99747085571289

Token 1008: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0024895723909139633
    2. ' DEC' → logprob: -6.0024895668029785
    3. '_DEC' → logprob: -12.377490043640137
    4. 'D' → logprob: -12.502490043640137
    5. '   ' → logprob: -13.127490043640137
    6. 'dec' → logprob: -13.752490043640137
    7. ' ' → logprob: -13.752490043640137
    8. 'DE' → logprob: -14.002490043640137
    9. '           ' → logprob: -15.752490043640137
    10. '     ' → logprob: -16.00248908996582

Token 1009: 'ID' (ID: 1240)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.004866668954491615
    2. '_DEC' → logprob: -5.879866600036621
    3. '_dec' → logprob: -6.379866600036621
    4. '_' → logprob: -9.379866600036621
    5. 'ED' → logprob: -9.629866600036621
    6. '[' → logprob: -9.879866600036621
    7. 'PO' → logprob: -10.629866600036621
    8. ' DEC' → logprob: -11.129866600036621
    9. '   ' → logprob: -11.379866600036621
    10. 'DE' → logprob: -11.504866600036621

Token 1010: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.0008366696420125663
    2. 'DEC' → logprob: -7.2508368492126465
    3. 'DED' → logprob: -10.000836372375488
    4. '_DEC' → logprob: -11.500836372375488
    5. '_' → logprob: -11.750836372375488
    6. 'Dec' → logprob: -11.750836372375488
    7. 'SED' → logprob: -12.125836372375488
    8. '[' → logprob: -12.250836372375488
    9. '_dec' → logprob: -12.375836372375488
    10. 'EC' → logprob: -12.500836372375488

Token 1011: '[to' (ID: 139069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017086135921999812
    2. '[to' → logprob: -6.376708507537842
    3. 'to' → logprob: -12.876708984375
    4. '[pos' → logprob: -13.251708984375
    5. ' [' → logprob: -14.626708984375
    6. 'po' → logprob: -14.751708984375
    7. '
' → logprob: -15.251708984375
    8. '[x' → logprob: -15.626708984375
    9. '[p' → logprob: -16.001708984375
    10. '[
' → logprob: -16.126708984375

Token 1012: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020561158657073975
    2. ' ]' → logprob: -5.270561218261719
    3. '==' → logprob: -5.395561218261719
    4. ' !=' → logprob: -5.645561218261719
    5. '!=' → logprob: -5.895561218261719
    6. ']==' → logprob: -6.020561218261719
    7. ' ==' → logprob: -6.895561218261719
    8. ']!=' → logprob: -7.020561218261719
    9. ' po' → logprob: -11.020561218261719
    10. '[' → logprob: -11.645561218261719

Token 1013: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.30812641978263855
    2. ' !=' → logprob: -1.433126449584961
    3. '==' → logprob: -3.808126449584961
    4. ' ==' → logprob: -5.683126449584961
    5. ' and' → logprob: -7.058126449584961
    6. 'and' → logprob: -9.183126449584961
    7. '!' → logprob: -10.058126449584961
    8. '!="' → logprob: -12.558126449584961
    9. '=' → logprob: -12.808126449584961
    10. ' ' → logprob: -13.558126449584961

Token 1014: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03450947254896164
    2. '"' → logprob: -4.034509658813477
    3. '"":' → logprob: -4.159509658813477
    4. '''' → logprob: -7.909509658813477
    5. ' ""' → logprob: -8.659509658813477
    6. ' "":
' → logprob: -10.159509658813477
    7. ''' → logprob: -11.409509658813477
    8. '"""' → logprob: -11.909509658813477
    9. ' "' → logprob: -12.034509658813477
    10. '"",' → logprob: -13.034509658813477

Token 1015: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.069034643471241
    2. 'and' → logprob: -2.8190345764160156
    3. ':' → logprob: -5.694034576416016
    4. ':
' → logprob: -5.819034576416016
    5. '           ' → logprob: -7.819034576416016
    6. '               ' → logprob: -8.569034576416016
    7. ' :' → logprob: -10.694034576416016
    8. ' :
' → logprob: -10.944034576416016
    9. '==' → logprob: -11.319034576416016
    10. '   ' → logprob: -11.569034576416016

Token 1016: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.003672756254673004
    2. ' DEC' → logprob: -5.6286725997924805
    3. '   ' → logprob: -9.62867259979248
    4. '           ' → logprob: -13.25367259979248
    5. ' ' → logprob: -13.37867259979248
    6. '_DEC' → logprob: -13.62867259979248
    7. 'dec' → logprob: -14.62867259979248
    8. '       ' → logprob: -14.75367259979248
    9. 'DE' → logprob: -15.00367259979248
    10. '  ' → logprob: -15.25367259979248

Token 1017: 'ID' (ID: 1240)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.9342783093452454
    2. 'ID' → logprob: -1.0592782497406006
    3. 'DEC' → logprob: -1.4342782497406006
    4. 'DED' → logprob: -4.80927848815918
    5. 'IDE' → logprob: -5.80927848815918
    6. 'D' → logprob: -6.05927848815918
    7. 'DE' → logprob: -6.80927848815918
    8. 'IED' → logprob: -7.18427848815918
    9. 'IS' → logprob: -7.30927848815918
    10. 'PO' → logprob: -7.43427848815918

Token 1018: 'ED' (ID: 2252)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011659377487376332
    2. '==' → logprob: -8.001166343688965
    3. '[to' → logprob: -9.001166343688965
    4. ' ==' → logprob: -9.126166343688965
    5. '!=' → logprob: -9.376166343688965
    6. '[pos' → logprob: -9.626166343688965
    7. '[
' → logprob: -9.751166343688965
    8. ']' → logprob: -10.001166343688965
    9. '```' → logprob: -10.001166343688965
    10. 'ec' → logprob: -10.376166343688965

Token 1019: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1875571544806007e-05
    2. '[to' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.000011444091797
    4. '!=' → logprob: -15.625011444091797
    5. '[
' → logprob: -16.125011444091797
    6. '```' → logprob: -16.250011444091797
    7. '==' → logprob: -16.375011444091797
    8. '[pos' → logprob: -16.375011444091797
    9. 'to' → logprob: -16.750011444091797
    10. '[p' → logprob: -16.875011444091797

Token 1020: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.00013512482109945267
    2. '[' → logprob: -9.00013542175293
    3. ' po' → logprob: -11.62513542175293
    4. '(po' → logprob: -13.12513542175293
    5. '"' → logprob: -15.37513542175293
    6. '```' → logprob: -16.50013542175293
    7. 'pos' → logprob: -16.75013542175293
    8. 'to' → logprob: -16.87513542175293
    9. 'Po' → logprob: -17.00013542175293
    10. '.po' → logprob: -17.37513542175293

Token 1021: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47876983880996704
    2. ']==' → logprob: -1.3537697792053223
    3. '==' → logprob: -2.3537697792053223
    4. ' ==' → logprob: -4.228769779205322
    5. ']!=' → logprob: -5.478769779205322
    6. '[' → logprob: -5.853769779205322
    7. '!=' → logprob: -6.978769779205322
    8. ')' → logprob: -7.103769779205322
    9. '=' → logprob: -7.103769779205322
    10. ' ]' → logprob: -7.353769779205322

Token 1022: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5191444158554077
    2. '=' → logprob: -1.3941444158554077
    3. '!=' → logprob: -2.0191445350646973
    4. ' ==' → logprob: -3.8941445350646973
    5. ' !=' → logprob: -5.894144535064697
    6. ' =' → logprob: -7.269144535064697
    7. '==
' → logprob: -9.894144058227539
    8. '[' → logprob: -10.019144058227539
    9. '===' → logprob: -10.394144058227539
    10. '<|end|>' → logprob: -10.519144058227539

Token 1023: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0107260188087821
    2. '"' → logprob: -4.760725975036621
    3. '"":' → logprob: -6.760725975036621
    4. ' ""' → logprob: -7.260725975036621
    5. '''' → logprob: -8.385725975036621
    6. ''' → logprob: -11.260725975036621
    7. ' ' → logprob: -13.010725975036621
    8. '"""' → logprob: -13.385725975036621
    9. ' "":
' → logprob: -13.510725975036621
    10. ' "' → logprob: -14.135725975036621

Token 1024: '               ' (ID: 506)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15187101066112518
    2. ' =' → logprob: -2.5268709659576416
    3. '               ' → logprob: -3.2768709659576416
    4. ':' → logprob: -4.776871204376221
    5. '=
' → logprob: -5.276871204376221
    6. ':
' → logprob: -5.651871204376221
    7. '           ' → logprob: -5.776871204376221
    8. '       ' → logprob: -7.151871204376221
    9. '[' → logprob: -7.776871204376221
    10. '                       ' → logprob: -8.276870727539062

Token 1025: ' #' (ID: 1069)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.84120774269104
    2. '               ' → logprob: -0.96620774269104
    3. '           ' → logprob: -2.46620774269104
    4. ' DEC' → logprob: -2.71620774269104
    5. '_DEC' → logprob: -4.966207504272461
    6. '                   ' → logprob: -5.216207504272461
    7. ' if' → logprob: -5.466207504272461
    8. 'if' → logprob: -5.716207504272461
    9. '			' → logprob: -6.216207504272461
    10. '   ' → logprob: -6.341207504272461

Token 1026: ' Si' (ID: 7832)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.015616311691701412
    2. '           ' → logprob: -4.765616416931152
    3. 'if' → logprob: -5.765616416931152
    4. '               ' → logprob: -5.890616416931152
    5. '		' → logprob: -8.015616416931152
    6. ' DEC' → logprob: -8.140616416931152
    7. '_DEC' → logprob: -9.140616416931152
    8. '   ' → logprob: -9.265616416931152
    9. '			' → logprob: -9.515616416931152
    10. '                   ' → logprob: -9.890616416931152

Token 1027: ' le' (ID: 505)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -4.668304245569743e-05
    2. ' DEC' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. '_DEC' → logprob: -15.000046730041504
    5. 'dec' → logprob: -16.250045776367188
    6. 'DE' → logprob: -16.625045776367188
    7. ' ' → logprob: -16.875045776367188
    8. 'D' → logprob: -17.000045776367188
    9. '	' → logprob: -17.375045776367188
    10. '     ' → logprob: -17.500045776367188

Token 1028: ' voisin' (ID: 145411)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0002646735229063779
    2. ' DEC' → logprob: -8.375265121459961
    3. 'D' → logprob: -11.000265121459961
    4. '
' → logprob: -12.375265121459961
    5. 'to' → logprob: -12.750265121459961
    6. '_DEC' → logprob: -12.875265121459961
    7. 'dec' → logprob: -13.125265121459961
    8. 'DE' → logprob: -13.250265121459961
    9. '```' → logprob: -13.750265121459961
    10. '`' → logprob: -14.625265121459961

Token 1029: ' est' (ID: 893)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.15880262851715088
    2. 'to' → logprob: -2.0338025093078613
    3. '[' → logprob: -4.158802509307861
    4. 'po' → logprob: -8.90880298614502
    5. '(to' → logprob: -9.03380298614502
    6. ' to' → logprob: -10.28380298614502
    7. '[
' → logprob: -10.90880298614502
    8. '```' → logprob: -10.90880298614502
    9. 'toi' → logprob: -11.78380298614502
    10. '==' → logprob: -12.53380298614502

Token 1030: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.020140765234827995
    2. '"W' → logprob: -4.020140647888184
    3. 'B' → logprob: -6.520140647888184
    4. ''' → logprob: -8.645140647888184
    5. 'W' → logprob: -8.895140647888184
    6. '"' → logprob: -9.145140647888184
    7. ' "' → logprob: -9.770140647888184
    8. '"D' → logprob: -11.270140647888184
    9. '("' → logprob: -12.145140647888184
    10. ' B' → logprob: -12.520140647888184

Token 1031: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.042385343462228775
    2. 'W' → logprob: -3.4173853397369385
    3. '"B' → logprob: -4.917385578155518
    4. '"W' → logprob: -7.042385578155518
    5. '"' → logprob: -7.792385578155518
    6. ''' → logprob: -10.04238510131836
    7. ' B' → logprob: -10.16738510131836
    8. '   ' → logprob: -13.22988510131836
    9. '`' → logprob: -13.54238510131836
    10. ' "' → logprob: -13.60488510131836

Token 1032: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7773445844650269
    2. '":' → logprob: -0.7773445844650269
    3. '":
' → logprob: -2.5273447036743164
    4. '"B' → logprob: -8.152344703674316
    5. ':' → logprob: -8.652344703674316
    6. 'else' → logprob: -9.152344703674316
    7. ':
' → logprob: -9.527344703674316
    8. '",' → logprob: -10.027344703674316
    9. '":
' → logprob: -10.027344703674316
    10. ' "' → logprob: -10.152344703674316

Token 1033: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3449608087539673
    2. ':' → logprob: -1.7199608087539673
    3. '                   ' → logprob: -2.2199606895446777
    4. 'else' → logprob: -6.594960689544678
    5. '               ' → logprob: -6.719960689544678
    6. ',' → logprob: -7.719960689544678
    7. '                       ' → logprob: -7.969960689544678
    8. '           ' → logprob: -8.969961166381836
    9. ' :
' → logprob: -9.219961166381836
    10. ' else' → logprob: -9.469961166381836

Token 1034: 'no' (ID: 1750)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.18076148629188538
    2. '"W' → logprob: -1.805761456489563
    3. '"' → logprob: -7.555761337280273
    4. '")' → logprob: -9.055761337280273
    5. '```' → logprob: -9.430761337280273
    6. '"B' → logprob: -9.805761337280273
    7. '   ' → logprob: -10.055761337280273
    8. 'B' → logprob: -10.180761337280273
    9. ''' → logprob: -10.555761337280273
    10. ')' → logprob: -10.680761337280273

Token 1035: 'ir' (ID: 380)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2032812237739563
    2. 't' → logprob: -3.0782811641693115
    3. 'r' → logprob: -3.4532811641693115
    4. '"' → logprob: -3.4532811641693115
    5. '"W' → logprob: -3.8282811641693115
    6. 'n' → logprob: -4.078281402587891
    7. 'w' → logprob: -4.203281402587891
    8. ' W' → logprob: -4.453281402587891
    9. 'u' → logprob: -5.953281402587891
    10. '")' → logprob: -6.203281402587891

Token 1036: '),' (ID: 936)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16835516691207886
    2. ')' → logprob: -2.2933552265167236
    3. ':
' → logprob: -3.7933552265167236
    4. ',' → logprob: -4.1683549880981445
    5. '):' → logprob: -5.0433549880981445
    6. '")' → logprob: -6.1683549880981445
    7. 'else' → logprob: -6.2933549880981445
    8. ' else' → logprob: -6.4183549880981445
    9. '),' → logprob: -6.6683549880981445
    10. ' :' → logprob: -7.2933549880981445

Token 1037: ' po' (ID: 2482)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -1.0948203802108765
    2. ' DEC' → logprob: -1.0948203802108765
    3. '                   ' → logprob: -1.8448203802108765
    4. '"' → logprob: -1.9698203802108765
    5. '               ' → logprob: -3.844820499420166
    6. '`' → logprob: -5.969820499420166
    7. '_DEC' → logprob: -5.969820499420166
    8. '                       ' → logprob: -6.344820499420166
    9. '           ' → logprob: -6.844820499420166
    10. ''' → logprob: -7.219820499420166

Token 1038: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890047132968903
    2. ' =' → logprob: -2.5789005756378174
    3. '="' → logprob: -11.953900337219238
    4. ',' → logprob: -14.078900337219238
    5. ')' → logprob: -14.453900337219238
    6. '=
' → logprob: -14.453900337219238
    7. ' ="' → logprob: -14.578900337219238
    8. ' ' → logprob: -15.078900337219238
    9. '```' → logprob: -15.203900337219238
    10. '=

' → logprob: -15.578900337219238

Token 1039: ' "' (ID: 392)
  Prédit: '"W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"W' → logprob: -0.017082924023270607
    2. '"' → logprob: -4.142082691192627
    3. 'W' → logprob: -7.392082691192627
    4. ' "' → logprob: -8.517083168029785
    5. ' W' → logprob: -9.142083168029785
    6. ''' → logprob: -9.267083168029785
    7. '<W' → logprob: -11.267083168029785
    8. '`' → logprob: -11.642083168029785
    9. '=W' → logprob: -12.767083168029785
    10. '```' → logprob: -13.142083168029785

Token 1040: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.004180140793323517
    2. ' W' → logprob: -5.504179954528809
    3. '"W' → logprob: -9.379179954528809
    4. '"' → logprob: -11.129179954528809
    5. ' "' → logprob: -13.879179954528809
    6. ''' → logprob: -14.879179954528809
    7. ' ' → logprob: -15.004179954528809
    8. '```' → logprob: -15.129179954528809
    9. '<W' → logprob: -15.879179954528809
    10. ' ' → logprob: -16.129180908203125

Token 1041: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07923290133476257
    2. '"
' → logprob: -2.579232931137085
    3. '"
' → logprob: -8.829233169555664
    4. '\n' → logprob: -9.329233169555664
    5. '```' → logprob: -10.204233169555664
    6. ' "' → logprob: -10.829233169555664
    7. '"\' → logprob: -10.954233169555664
    8. 'else' → logprob: -11.454233169555664
    9. '"`
' → logprob: -12.329233169555664
    10. '".' → logprob: -13.204233169555664

Token 1042: ' (' (ID: 350)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5480475425720215
    2. 'else' → logprob: -0.9230475425720215
    3. '               ' → logprob: -4.0480475425720215
    4. ' =' → logprob: -5.1730475425720215
    5. '=' → logprob: -7.2980475425720215
    6. 'elif' → logprob: -8.17304801940918
    7. ' elif' → logprob: -9.17304801940918
    8. '                   ' → logprob: -9.54804801940918
    9. '<|end|>' → logprob: -9.54804801940918
    10. '           ' → logprob: -9.79804801940918

Token 1043: 'bl' (ID: 1751)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04885270446538925
    2. '"' → logprob: -3.4238526821136475
    3. '")' → logprob: -4.673852920532227
    4. ' ")' → logprob: -5.548852920532227
    5. ' "' → logprob: -6.673852920532227
    6. ' W' → logprob: -7.798852920532227
    7. '"W' → logprob: -9.173852920532227
    8. '">' → logprob: -10.548852920532227
    9. ')' → logprob: -10.923852920532227
    10. 'B' → logprob: -11.173852920532227

Token 1044: 'anc' (ID: 1054)
  Prédit: 'lack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lack' → logprob: -0.7903216481208801
    2. 'l' → logprob: -1.4153215885162354
    3. 'L' → logprob: -2.2903215885162354
    4. 'ack' → logprob: -2.5403215885162354
    5. '```' → logprob: -3.0403215885162354
    6. 'W' → logprob: -3.5403215885162354
    7. 'lac' → logprob: -3.6653215885162354
    8. 'lace' → logprob: -5.2903218269348145
    9. '"' → logprob: -5.5403218269348145
    10. '</' → logprob: -6.2903218269348145

Token 1045: '),' (ID: 936)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7586257457733154
    2. 'else' → logprob: -1.1336257457733154
    3. ')
' → logprob: -2.1336257457733154
    4. ' else' → logprob: -2.6336257457733154
    5. ')' → logprob: -4.6336259841918945
    6. '                   ' → logprob: -5.7586259841918945
    7. '")' → logprob: -5.8836259841918945
    8. '")
' → logprob: -6.2586259841918945
    9. '           ' → logprob: -6.7586259841918945
    10. '```' → logprob: -8.883625984191895

Token 1046: ' et' (ID: 859)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20849724113941193
    2. '               ' → logprob: -2.5834972858428955
    3. '"W' → logprob: -3.4584972858428955
    4. ' else' → logprob: -3.5834972858428955
    5. ' W' → logprob: -4.333497047424316
    6. '                   ' → logprob: -4.583497047424316
    7. ' "' → logprob: -5.208497047424316
    8. '"\' → logprob: -5.583497047424316
    9. 'W' → logprob: -5.708497047424316
    10. 'else' → logprob: -5.708497047424316

Token 1047: ' vice' (ID: 22625)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10424954444169998
    2. 'else' → logprob: -3.4792494773864746
    3. ' po' → logprob: -3.8542494773864746
    4. '               ' → logprob: -4.104249477386475
    5. 'po' → logprob: -4.854249477386475
    6. ' else' → logprob: -4.979249477386475
    7. '                   ' → logprob: -5.729249477386475
    8. ' "' → logprob: -6.354249477386475
    9. ' not' → logprob: -6.979249477386475
    10. '       ' → logprob: -7.104249477386475

Token 1048: ' versa' (ID: 74153)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09508514404296875
    2. ' if' → logprob: -3.4700851440429688
    3. 'else' → logprob: -3.9700851440429688
    4. '"' → logprob: -4.345085144042969
    5. 'elif' → logprob: -4.845085144042969
    6. '```' → logprob: -4.845085144042969
    7. ':' → logprob: -5.845085144042969
    8. 'op' → logprob: -6.345085144042969
    9. ' else' → logprob: -6.845085144042969
    10. '               ' → logprob: -7.345085144042969

Token 1049: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6795487403869629
    2. ' =' → logprob: -1.179548740386963
    3. '                   ' → logprob: -2.304548740386963
    4. '               ' → logprob: -3.554548740386963
    5. ':
' → logprob: -3.679548740386963
    6. ':' → logprob: -4.429548740386963
    7. '=
' → logprob: -4.804548740386963
    8. 'W' → logprob: -5.929548740386963
    9. '                       ' → logprob: -6.304548740386963
    10. ' =
' → logprob: -6.679548740386963

Token 1050: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0255368947982788
    2. '               ' → logprob: -1.9005368947982788
    3. 'W' → logprob: -2.0255370140075684
    4. ' W' → logprob: -2.2755370140075684
    5. '=' → logprob: -3.1505370140075684
    6. '                   ' → logprob: -3.1505370140075684
    7. '                           ' → logprob: -3.2755370140075684
    8. ':' → logprob: -3.2755370140075684
    9. '                               ' → logprob: -4.025537014007568
    10. '                       ' → logprob: -4.275537014007568

Token 1051: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038470253348350525
    2. '                   ' → logprob: -4.288470268249512
    3. ' if' → logprob: -4.663470268249512
    4. '                       ' → logprob: -5.788470268249512
    5. 'DEC' → logprob: -5.788470268249512
    6. 'if' (adapté à ' if') → logprob: -5.913470268249512
    7. ' DEC' → logprob: -6.913470268249512
    8. '           ' → logprob: -7.163470268249512
    9. '                
' → logprob: -7.413470268249512
    10. '                               ' → logprob: -7.788470268249512

Token 1052: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.00014036978245712817
    2. ' DEC' → logprob: -8.875140190124512
    3. '_DEC' → logprob: -15.375140190124512
    4. 'DE' → logprob: -16.125141143798828
    5. '   ' → logprob: -16.500141143798828
    6. '	' → logprob: -16.875141143798828
    7. 'D' → logprob: -18.375141143798828
    8. ' ' → logprob: -18.750141143798828
    9. ' ' → logprob: -18.875141143798828
    10. 'DC' → logprob: -19.125141143798828

Token 1053: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.000892759533599019
    2. 'ED' → logprob: -7.375892639160156
    3. 'IDE' → logprob: -9.125892639160156
    4. 'E' → logprob: -9.750892639160156
    5. 'IC' → logprob: -10.000892639160156
    6. 'I' → logprob: -10.750892639160156
    7. 'ided' → logprob: -11.500892639160156
    8. 'IED' → logprob: -11.500892639160156
    9. 'IDES' → logprob: -13.375892639160156
    10. 'ODE' → logprob: -13.625892639160156

Token 1054: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -2.15310683415737e-05
    2. 'DED' → logprob: -11.625021934509277
    3. 'DEC' → logprob: -12.500021934509277
    4. 'E' → logprob: -12.750021934509277
    5. 'ed' → logprob: -13.500021934509277
    6. '```' → logprob: -14.250021934509277
    7. 'Ed' → logprob: -15.000021934509277
    8. 'EDIT' → logprob: -15.000021934509277
    9. 'ЕД' → logprob: -15.000021934509277
    10. 'EDI' → logprob: -15.000021934509277

Token 1055: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -4.723352049040841e-06
    2. 'to' → logprob: -12.875004768371582
    3. '[' → logprob: -13.125004768371582
    4. ' [' → logprob: -18.125003814697266
    5. '(to' → logprob: -18.750003814697266
    6. '	to' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '[tmp' → logprob: -19.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. '[temp' → logprob: -19.875003814697266

Token 1056: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6335378289222717
    2. ' ==' → logprob: -0.7585378289222717
    3. ']==' → logprob: -7.633537769317627
    4. '[' → logprob: -8.383538246154785
    5. '=="' → logprob: -9.633538246154785
    6. ']' → logprob: -9.758538246154785
    7. '==
' → logprob: -9.758538246154785
    8. ')==' → logprob: -11.008538246154785
    9. ')' → logprob: -12.258538246154785
    10. '=' → logprob: -12.383538246154785

Token 1057: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005352466832846403
    2. ' ==' → logprob: -5.25535249710083
    3. '=="' → logprob: -9.755352020263672
    4. '[' → logprob: -10.505352020263672
    5. '==
' → logprob: -10.505352020263672
    6. ']==' → logprob: -12.755352020263672
    7. '=='' → logprob: -14.005352020263672
    8. '=' → logprob: -14.380352020263672
    9. '	' → logprob: -14.505352020263672
    10. '===' → logprob: -14.755352020263672

Token 1058: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.03946774825453758
    2. ''' → logprob: -3.2894678115844727
    3. '"W' → logprob: -7.539467811584473
    4. '"' → logprob: -7.539467811584473
    5. 'B' → logprob: -8.039467811584473
    6. ' "' → logprob: -10.414467811584473
    7. ' B' → logprob: -12.664467811584473
    8. ' ' → logprob: -12.914467811584473
    9. 'W' → logprob: -13.539467811584473
    10. '   ' → logprob: -14.289467811584473

Token 1059: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.726595241460018e-05
    2. '"B' → logprob: -10.50003719329834
    3. 'W' → logprob: -11.75003719329834
    4. ' B' → logprob: -14.25003719329834
    5. '"' → logprob: -14.37503719329834
    6. ''' → logprob: -14.75003719329834
    7. '_B' → logprob: -17.125038146972656
    8. '"W' → logprob: -18.375038146972656
    9. '	B' → logprob: -18.500038146972656
    10. 'Ｂ' → logprob: -19.125038146972656

Token 1060: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8377130627632141
    2. '":
' → logprob: -1.7127130031585693
    3. '"' → logprob: -1.8377130031585693
    4. ':' → logprob: -1.9627130031585693
    5. '":' → logprob: -2.8377130031585693
    6. '               ' → logprob: -4.587713241577148
    7. '           ' → logprob: -5.462713241577148
    8. ' else' → logprob: -5.712713241577148
    9. '"):
' → logprob: -6.087713241577148
    10. '):
' → logprob: -6.087713241577148

Token 1061: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3043118417263031
    2. ' W' → logprob: -2.679311752319336
    3. ' =' → logprob: -3.429311752319336
    4. '<|end|>' → logprob: -3.554311752319336
    5. '                   ' → logprob: -3.804311752319336
    6. 'W' → logprob: -3.804311752319336
    7. '                           ' → logprob: -4.054311752319336
    8. '           ' → logprob: -4.429311752319336
    9. '                               ' → logprob: -4.554311752319336
    10. '                       ' → logprob: -4.929311752319336

Token 1062: ' DEC' (ID: 65456)
  Prédit: ' DEC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DEC' → logprob: -0.3858173191547394
    2. '                   ' → logprob: -1.385817289352417
    3. '                       ' → logprob: -3.260817289352417
    4. 'DEC' (adapté à ' DEC') → logprob: -3.760817289352417
    5. '               ' → logprob: -5.760817527770996
    6. '"' → logprob: -6.385817527770996
    7. '`' → logprob: -6.510817527770996
    8. '_DEC' → logprob: -7.010817527770996
    9. '                           ' → logprob: -8.885817527770996
    10. ' ' → logprob: -9.010817527770996

Token 1063: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.00011343709047650918
    2. 'IDE' → logprob: -9.875113487243652
    3. 'ED' → logprob: -10.000113487243652
    4. 'I' → logprob: -12.000113487243652
    5. 'IC' → logprob: -12.875113487243652
    6. 'IED' → logprob: -13.000113487243652
    7. 'IDES' → logprob: -13.375113487243652
    8. 'ided' → logprob: -14.125113487243652
    9. 'ODE' → logprob: -14.250113487243652
    10. 'IDEO' → logprob: -14.625113487243652

Token 1064: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -5.676981345459353e-06
    2. 'DED' → logprob: -13.125005722045898
    3. 'E' → logprob: -14.125005722045898
    4. 'IED' → logprob: -14.750005722045898
    5. 'O' → logprob: -15.000005722045898
    6. 'ID' → logprob: -15.125005722045898
    7. '```' → logprob: -15.125005722045898
    8. 'EDI' → logprob: -15.375005722045898
    9. 'DEC' → logprob: -15.625005722045898
    10. 'EDD' → logprob: -15.875005722045898

Token 1065: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '=' → logprob: -16.875
    3. ' [' → logprob: -17.5
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.625
    6. '[
' → logprob: -19.375
    7. ' =' → logprob: -19.625
    8. '[pos' → logprob: -20.0
    9. 'po' → logprob: -20.375
    10. '           ' → logprob: -20.375

Token 1066: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -10.75002384185791
    3. ' po' → logprob: -13.00002384185791
    4. '(po' → logprob: -16.250024795532227
    5. '_po' → logprob: -18.500024795532227
    6. 'poi' → logprob: -18.500024795532227
    7. 'Po' → logprob: -18.625024795532227
    8. 'por' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.625024795532227
    10. '.po' → logprob: -19.750024795532227

Token 1067: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193527340888977
    2. ' =' → logprob: -1.5019352436065674
    3. ']' → logprob: -12.376935005187988
    4. ']=' → logprob: -14.251935005187988
    5. ' ="' → logprob: -14.751935005187988
    6. '="' → logprob: -15.251935005187988
    7. ')' → logprob: -15.376935005187988
    8. '=
' → logprob: -15.501935005187988
    9. '=

' → logprob: -16.126935958862305
    10. ' ' → logprob: -16.376935958862305

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975129522383213
    2. ' =' → logprob: -3.5297513008117676
    3. '="' → logprob: -14.65475082397461
    4. ' ="' → logprob: -14.90475082397461
    5. '[' → logprob: -17.52975082397461
    6. '＝' → logprob: -17.77975082397461
    7. '=

' → logprob: -17.77975082397461
    8. '	' → logprob: -18.02975082397461
    9. '='' → logprob: -18.40475082397461
    10. ' ' → logprob: -18.52975082397461

Token 1069: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0552394762635231
    2. '"W' → logprob: -3.18023943901062
    3. ' "' → logprob: -4.680239677429199
    4. ''' → logprob: -5.930239677429199
    5. ' W' → logprob: -8.5552396774292
    6. ' '' → logprob: -10.9302396774292
    7. '`' → logprob: -11.4302396774292
    8. 'W' → logprob: -11.9302396774292
    9. '```' → logprob: -13.8052396774292
    10. '[' → logprob: -14.1802396774292

Token 1070: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014204643666744232
    2. ' W' → logprob: -4.264204502105713
    3. '"W' → logprob: -10.264204978942871
    4. '"' → logprob: -12.389204978942871
    5. ' "' → logprob: -13.389204978942871
    6. ''' → logprob: -15.514204978942871
    7. ' ' → logprob: -16.014204025268555
    8. ' ' → logprob: -16.264204025268555
    9. '<W' → logprob: -17.139204025268555
    10. '	W' → logprob: -17.514204025268555

Token 1071: '"
' (ID: 1092)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42490094900131226
    2. 'else' → logprob: -1.549901008605957
    3. '<|end|>' → logprob: -2.549901008605957
    4. ' else' → logprob: -2.924901008605957
    5. '			' → logprob: -7.049901008605957
    6. 'elif' → logprob: -8.299901008605957
    7. '	else' → logprob: -8.549901008605957
    8. '<|end|>' → logprob: -8.799901008605957
    9. '                ' → logprob: -8.924901008605957
    10. ')' → logprob: -9.299901008605957

Token 1072: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33457499742507935
    2. 'else' → logprob: -1.4595749378204346
    3. ' else' → logprob: -2.9595749378204346
    4. '                   ' → logprob: -10.084574699401855
    5. '			' → logprob: -10.334574699401855
    6. '                ' → logprob: -10.834574699401855
    7. '	else' → logprob: -10.959574699401855
    8. '           ' → logprob: -11.209574699401855
    9. 'elif' → logprob: -11.209574699401855
    10. '<|end|>' → logprob: -11.209574699401855

Token 1073: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1392986923456192
    2. ' else' → logprob: -2.389298677444458
    3. '               ' → logprob: -3.264298677444458
    4. '	else' → logprob: -9.889298439025879
    5. '			' → logprob: -10.639298439025879
    6. 'elif' → logprob: -10.889298439025879
    7. '                   ' → logprob: -11.514298439025879
    8. '                ' → logprob: -13.014298439025879
    9. '           ' → logprob: -13.139298439025879
    10. '				' → logprob: -14.014298439025879

Token 1074: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011021859245374799
    2. '               ' → logprob: -9.375110626220703
    3. '           ' → logprob: -12.000110626220703
    4. '                       ' → logprob: -12.000110626220703
    5. '   ' → logprob: -12.375110626220703
    6. 'DEC' → logprob: -12.875110626220703
    7. ':
' → logprob: -13.750110626220703
    8. '                  ' → logprob: -13.750110626220703
    9. '				' → logprob: -14.250110626220703
    10. ' DEC' → logprob: -14.500110626220703

Token 1075: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005573204252868891
    2. '               ' → logprob: -7.7505574226379395
    3. '                       ' → logprob: -9.375556945800781
    4. '           ' → logprob: -10.750556945800781
    5. '                    ' → logprob: -12.000556945800781
    6. '                  ' → logprob: -12.250556945800781
    7. '```' → logprob: -13.125556945800781
    8. '   ' → logprob: -13.250556945800781
    9. '                           ' → logprob: -13.875556945800781
    10. '       ' → logprob: -14.000556945800781

Token 1076: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' (adapté à ' DEC') → logprob: -0.6105973124504089
    2. '                   ' → logprob: -0.8605973124504089
    3. ' DEC' → logprob: -3.8605973720550537
    4. '                       ' → logprob: -4.610597133636475
    5. '"' → logprob: -6.110597133636475
    6. '_DEC' → logprob: -8.610597610473633
    7. '               ' → logprob: -8.985597610473633
    8. '                    ' → logprob: -9.360597610473633
    9. '`' → logprob: -9.485597610473633
    10. '           ' → logprob: -9.610597610473633

Token 1077: 'ID' (ID: 1240)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.003935325425118208
    2. 'ID' → logprob: -5.62893533706665
    3. 'IED' → logprob: -8.878934860229492
    4. 'IC' → logprob: -8.878934860229492
    5. 'DEC' → logprob: -10.753934860229492
    6. 'DED' → logprob: -11.753934860229492
    7. 'EDI' → logprob: -11.878934860229492
    8. 'IDE' → logprob: -12.503934860229492
    9. 'EC' → logprob: -12.628934860229492
    10. 'ITED' → logprob: -12.753934860229492

Token 1078: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -6.704273118884885e-07
    2. 'EDI' → logprob: -16.0
    3. 'EC' → logprob: -16.5
    4. 'E' → logprob: -16.625
    5. 'DED' → logprob: -17.125
    6. 'DEC' → logprob: -17.125
    7. 'ЕД' → logprob: -17.125
    8. 'ed' → logprob: -17.25
    9. 'EDD' → logprob: -17.25
    10. '_ED' → logprob: -17.625

Token 1079: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.040457421680912e-05
    2. '=' → logprob: -10.250070571899414
    3. ' =' → logprob: -11.000070571899414
    4. '["' → logprob: -11.625070571899414
    5. '[to' → logprob: -12.750070571899414
    6. '                   ' → logprob: -13.500070571899414
    7. '[
' → logprob: -13.500070571899414
    8. '               ' → logprob: -13.625070571899414
    9. ' [' → logprob: -14.375070571899414
    10. 'po' → logprob: -15.000070571899414

Token 1080: 'po' (ID: 2519)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.00019257364328950644
    2. 'B' → logprob: -8.875192642211914
    3. '"' → logprob: -10.875192642211914
    4. ''' → logprob: -11.250192642211914
    5. '"W' → logprob: -11.500192642211914
    6. ' "' → logprob: -12.375192642211914
    7. '"P' → logprob: -13.500192642211914
    8. '   ' → logprob: -13.875192642211914
    9. '"C' → logprob: -14.250192642211914
    10. ' ' → logprob: -14.875192642211914

Token 1081: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859134554862976
    2. ' =' → logprob: -3.048591375350952
    3. ']' → logprob: -13.173591613769531
    4. ']=' → logprob: -14.173591613769531
    5. '                   ' → logprob: -14.923591613769531
    6. ')' → logprob: -15.048591613769531
    7. '=
' → logprob: -15.798591613769531
    8. '="' → logprob: -15.923591613769531
    9. '[' → logprob: -16.29859161376953
    10. ')=' → logprob: -16.54859161376953

Token 1082: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '="' → logprob: -17.126502990722656
    4. '＝' → logprob: -19.001502990722656
    5. '=B' → logprob: -19.501502990722656
    6. '=
' → logprob: -19.876502990722656
    7. '=

' → logprob: -19.876502990722656
    8. '==' → logprob: -20.126502990722656
    9. '[' → logprob: -20.251502990722656
    10. ' ' → logprob: -20.376502990722656

Token 1083: ' "' (ID: 392)
  Prédit: '"B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"B' → logprob: -0.008828703314065933
    2. '"' → logprob: -4.758828639984131
    3. ' "' → logprob: -8.633829116821289
    4. ''' → logprob: -10.383829116821289
    5. '"W' → logprob: -13.258829116821289
    6. 'B' → logprob: -13.258829116821289
    7. '"A' → logprob: -15.383829116821289
    8. '("' → logprob: -15.383829116821289
    9. '	' → logprob: -15.383829116821289
    10. '   ' → logprob: -15.633829116821289

Token 1084: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.062022581696510315
    2. '"B' → logprob: -2.8120226860046387
    3. '"' → logprob: -10.18702220916748
    4. ''' → logprob: -11.31202220916748
    5. ' B' → logprob: -12.31202220916748
    6. '_B' → logprob: -16.187023162841797
    7. '`' → logprob: -16.312023162841797
    8. '	B' → logprob: -16.437023162841797
    9. '#' → logprob: -16.937023162841797
    10. ' "' → logprob: -17.187023162841797

Token 1085: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1086: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1087: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09881831705570221
    2. 'for' → logprob: -3.098818302154541
    3. '       ' → logprob: -3.848818302154541
    4. '           ' → logprob: -4.598818302154541
    5. '                   ' → logprob: -4.723818302154541
    6. 'break' → logprob: -5.223818302154541
    7. '#' (adapté à ' #') → logprob: -6.473818302154541
    8. ' for' → logprob: -7.598818302154541
    9. 'continue' → logprob: -7.598818302154541
    10. '   ' → logprob: -8.0988187789917

Token 1088: ' On' (ID: 2160)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.011167141608893871
    2. 'edge' → logprob: -5.011167049407959
    3. 'index' → logprob: -7.011167049407959
    4. 'if' → logprob: -7.386167049407959
    5. 'dis' → logprob: -7.386167049407959
    6. 'break' → logprob: -7.386167049407959
    7. '               ' → logprob: -8.011167526245117
    8. 'idx' → logprob: -8.386167526245117
    9. '                   ' → logprob: -8.511167526245117
    10. '       ' → logprob: -8.636167526245117

Token 1089: ' ass' (ID: 1680)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.21903906762599945
    2. 'edge' → logprob: -2.469038963317871
    3. 'break' → logprob: -2.719038963317871
    4. 'if' → logprob: -3.844038963317871
    5. 'index' → logprob: -5.469038963317871
    6. ' DIS' → logprob: -5.844038963317871
    7. '       ' → logprob: -5.844038963317871
    8. 'dis' → logprob: -6.094038963317871
    9. 'for' → logprob: -6.094038963317871
    10. '   ' → logprob: -6.719038963317871

Token 1090: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.12457850575447083
    2. 'ign' → logprob: -2.8745784759521484
    3. 'oc' → logprob: -2.9995784759521484
    4. '#' → logprob: -5.374578475952148
    5. '```' → logprob: -6.624578475952148
    6. '[' → logprob: -7.999578475952148
    7. 'ect' → logprob: -7.999578475952148
    8. 'ignez' → logprob: -8.249578475952148
    9. '>' → logprob: -8.374578475952148
    10. 'sign' → logprob: -8.499578475952148

Token 1091: ' à' (ID: 1221)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.011354787275195122
    2. 'for' → logprob: -5.386354923248291
    3. '               ' → logprob: -6.011354923248291
    4. '           ' → logprob: -6.761354923248291
    5. '                   ' → logprob: -7.136354923248291
    6. 'if' → logprob: -7.636354923248291
    7. ' DIS' → logprob: -7.636354923248291
    8. '```' → logprob: -7.886354923248291
    9. '       ' → logprob: -8.511354446411133
    10. 'edge' → logprob: -8.761354446411133

Token 1092: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -1.7432603272027336e-06
    2. ' DIS' → logprob: -13.625001907348633
    3. '   ' → logprob: -16.250001907348633
    4. 'dis' → logprob: -16.375001907348633
    5. '       ' → logprob: -16.750001907348633
    6. '
' → logprob: -17.000001907348633
    7. '```' → logprob: -17.750001907348633
    8. '           ' → logprob: -17.750001907348633
    9. 'D' → logprob: -17.875001907348633
    10. '(DIS' → logprob: -18.000001907348633

Token 1093: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47411173582077026
    2. '[D' → logprob: -0.9741117358207703
    3. 'D' → logprob: -10.724111557006836
    4. ' [' → logprob: -12.724111557006836
    5. '```' → logprob: -13.349111557006836
    6. '[
' → logprob: -13.349111557006836
    7. '=D' → logprob: -13.724111557006836
    8. '[cur' → logprob: -14.599111557006836
    9. '       ' → logprob: -14.724111557006836
    10. '               ' → logprob: -14.724111557006836

Token 1094: ' cette' (ID: 7696)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001085566938854754
    2. 'DIS' → logprob: -7.1260857582092285
    3. '[D' → logprob: -8.75108528137207
    4. ' D' → logprob: -9.50108528137207
    5. 'tuple' → logprob: -10.87608528137207
    6. 'EDGE' → logprob: -11.75108528137207
    7. 'l' → logprob: -11.87608528137207
    8. '```' → logprob: -13.12608528137207
    9. '[' → logprob: -13.37608528137207
    10. 'the' → logprob: -13.62608528137207

Token 1095: ' ar' (ID: 646)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004365798085927963
    2. 'tuple' → logprob: -5.754365921020508
    3. 'edge' → logprob: -7.629365921020508
    4. 'ar' → logprob: -8.004365921020508
    5. '```' → logprob: -8.879365921020508
    6. '[D' → logprob: -9.129365921020508
    7. 'EDGE' → logprob: -9.629365921020508
    8. '[' → logprob: -10.504365921020508
    9. ' D' → logprob: -12.004365921020508
    10. ' tuple' → logprob: -13.004365921020508

Token 1096: 'ête' (ID: 16808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024980584159493446
    2. '[(' → logprob: -4.524980545043945
    3. '[x' → logprob: -6.149980545043945
    4. 'EDGE' → logprob: -6.149980545043945
    5. 'e' → logprob: -6.399980545043945
    6. 'ête' → logprob: -6.524980545043945
    7. '[
' → logprob: -6.899980545043945
    8. '[t' → logprob: -7.399980545043945
    9. 'edge' → logprob: -7.399980545043945
    10. '=edge' → logprob: -7.899980545043945

Token 1097: ' la' (ID: 557)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.0007671024068258703
    2. 'D' → logprob: -7.500767230987549
    3. '[' → logprob: -8.50076675415039
    4. ' [' → logprob: -12.62576675415039
    5. 'tuple' → logprob: -13.37576675415039
    6. ' D' → logprob: -13.37576675415039
    7. '   ' → logprob: -13.87576675415039
    8. '=D' → logprob: -14.12576675415039
    9. '[
' → logprob: -15.00076675415039
    10. '       ' → logprob: -15.00076675415039

Token 1098: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.06140091270208359
    2. 'x' → logprob: -3.436400890350342
    3. 'DIS' → logprob: -3.936400890350342
    4. 'val' → logprob: -5.936400890350342
    5. 'value' → logprob: -6.061400890350342
    6. 'tuple' → logprob: -6.561400890350342
    7. ' D' → logprob: -7.061400890350342
    8. '[D' → logprob: -9.1864013671875
    9. 'v' → logprob: -9.6864013671875
    10. 'max' → logprob: -9.8114013671875

Token 1099: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07288539409637451
    2. 'D' → logprob: -2.697885513305664
    3. ' D' → logprob: -6.572885513305664
    4. ' x' → logprob: -6.697885513305664
    5. '[D' → logprob: -9.197885513305664
    6. '   ' → logprob: -9.697885513305664
    7. '=D' → logprob: -10.697885513305664
    8. '```' → logprob: -10.697885513305664
    9. '       ' → logprob: -10.822885513305664
    10. '`' → logprob: -10.947885513305664

Token 1100: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03043203055858612
    2. 'DIS' → logprob: -3.7804319858551025
    3. ' =' → logprob: -5.405432224273682
    4. '                   ' → logprob: -7.030432224273682
    5. '=' → logprob: -7.280432224273682
    6. '[' → logprob: -7.905432224273682
    7. '(DIS' → logprob: -8.780431747436523
    8. '
' → logprob: -9.030431747436523
    9. '```' → logprob: -9.155431747436523
    10. ' DIS' → logprob: -9.280431747436523

Token 1101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024609018117189407
    2. '                   ' → logprob: -3.899609088897705
    3. 'DIS' → logprob: -5.774609088897705
    4. '                       ' → logprob: -7.899609088897705
    5. '```' → logprob: -7.899609088897705
    6. '           ' → logprob: -10.024608612060547
    7. '       ' → logprob: -10.274608612060547
    8. ' DIS' → logprob: -10.524608612060547
    9. '[' → logprob: -11.024608612060547
    10. '_DIS' → logprob: -11.149608612060547

Token 1102: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' (adapté à ' DIS') → logprob: -0.0001848254178185016
    2. '               ' → logprob: -9.000185012817383
    3. '                   ' → logprob: -10.250185012817383
    4. '           ' → logprob: -11.500185012817383
    5. ' DIS' → logprob: -11.625185012817383
    6. 'for' → logprob: -12.625185012817383
    7. '                       ' → logprob: -13.875185012817383
    8. '       ' → logprob: -14.625185012817383
    9. '   ' → logprob: -14.750185012817383
    10. 'if' → logprob: -14.750185012817383

Token 1103: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -4.5491004129871726e-05
    2. 'D' → logprob: -10.375045776367188
    3. '[' → logprob: -11.250045776367188
    4. '[
' → logprob: -14.250045776367188
    5. '   ' → logprob: -15.500045776367188
    6. ' [' → logprob: -15.750045776367188
    7. '=D' → logprob: -16.375045776367188
    8. '       ' → logprob: -17.000045776367188
    9. '	D' → logprob: -17.375045776367188
    10. '[[' → logprob: -17.500045776367188

Token 1104: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.00011236425780225545
    2. 'D' → logprob: -9.375112533569336
    3. '[' → logprob: -12.000112533569336
    4. 'OICE' → logprob: -12.500112533569336
    5. '
' → logprob: -12.875112533569336
    6. 'C' → logprob: -13.000112533569336
    7. 'ICEF' → logprob: -13.000112533569336
    8. '{' → logprob: -13.875112533569336
    9. '[
' → logprob: -13.875112533569336
    10. 'CODE' → logprob: -14.125112533569336

Token 1105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.8590300139039755e-05
    2. '[(' → logprob: -10.000048637390137
    3. '[
' → logprob: -13.625048637390137
    4. '(tuple' → logprob: -14.875048637390137
    5. '```' → logprob: -14.875048637390137
    6. '[[' → logprob: -15.250048637390137
    7. 'tuple' → logprob: -15.375048637390137
    8. ' [' → logprob: -15.750048637390137
    9. '[array' → logprob: -16.00004768371582
    10. '[cur' → logprob: -16.50004768371582

Token 1106: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0004892880679108202
    2. '(tuple' → logprob: -8.375489234924316
    3. '[' → logprob: -8.500489234924316
    4. ' tuple' → logprob: -10.375489234924316
    5. '(' → logprob: -10.750489234924316
    6. '[(' → logprob: -13.750489234924316
    7. 'tu' → logprob: -15.000489234924316
    8. '{' → logprob: -15.250489234924316
    9. '```' → logprob: -15.500489234924316
    10. 'triangle' → logprob: -16.125490188598633

Token 1107: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.008618119172751904
    2. 'sorted' → logprob: -4.758618354797363
    3. ' sorted' → logprob: -13.508618354797363
    4. '[' → logprob: -14.008618354797363
    5. '.sorted' → logprob: -14.383618354797363
    6. 'Sorted' → logprob: -15.383618354797363
    7. '_sorted' → logprob: -15.383618354797363
    8. '([' → logprob: -15.633618354797363
    9. '   ' → logprob: -16.508617401123047
    10. '(' → logprob: -17.008617401123047

Token 1108: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -14.00000286102295
    3. '(([' → logprob: -14.62500286102295
    4. '[' → logprob: -14.75000286102295
    5. '((' → logprob: -14.75000286102295
    6. '([
' → logprob: -15.75000286102295
    7. '[[' → logprob: -16.000001907348633
    8. '([[' → logprob: -16.250001907348633
    9. '(
' → logprob: -16.500001907348633
    10. '([(' → logprob: -16.625001907348633

Token 1109: 'po' (ID: 2519)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '(po' → logprob: -13.12500286102295
    3. '[p' → logprob: -15.50000286102295
    4. '([' → logprob: -16.125001907348633
    5. 'po' → logprob: -17.125001907348633
    6. ' [' → logprob: -17.625001907348633
    7. '[
' → logprob: -17.875001907348633
    8. '[to' → logprob: -18.250001907348633
    9. '[pos' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.250001907348633

Token 1110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009076816961169243
    2. '[' → logprob: -4.7590765953063965
    3. ' ,' → logprob: -8.634077072143555
    4. ',[' → logprob: -9.009077072143555
    5. '[to' → logprob: -10.009077072143555
    6. ',
' → logprob: -10.134077072143555
    7. '(po' → logprob: -10.884077072143555
    8. '       ' → logprob: -11.259077072143555
    9. '   ' → logprob: -11.384077072143555
    10. ',to' → logprob: -11.509077072143555

Token 1111: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20157676935195923
    2. '[to' → logprob: -1.7015767097473145
    3. ' to' → logprob: -9.326577186584473
    4. '(to' → logprob: -9.576577186584473
    5. '[' → logprob: -12.451577186584473
    6. ' [' → logprob: -14.326577186584473
    7. '	to' → logprob: -15.076577186584473
    8. ',to' → logprob: -15.826577186584473
    9. '   ' → logprob: -16.326576232910156
    10. '[
' → logprob: -16.826576232910156

Token 1112: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0036447341553866863
    2. '()' → logprob: -5.878644943237305
    3. '()))' → logprob: -8.503644943237305
    4. '))' → logprob: -9.253644943237305
    5. '[' → logprob: -9.378644943237305
    6. '"]))' → logprob: -9.628644943237305
    7. '])]' → logprob: -9.753644943237305
    8. '']))' → logprob: -9.878644943237305
    9. '[]' → logprob: -10.128644943237305
    10. '])' → logprob: -10.253644943237305

Token 1113: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06850993633270264
    2. ']]' → logprob: -2.818510055541992
    3. ')]' → logprob: -5.068510055541992
    4. ']=' → logprob: -8.568510055541992
    5. ']]=' → logprob: -10.443510055541992
    6. ' ]' → logprob: -12.068510055541992
    7. ' ]]' → logprob: -13.943510055541992
    8. ']]]' → logprob: -14.318510055541992
    9. '}]' → logprob: -14.568510055541992
    10. ')' → logprob: -14.568510055541992

Token 1114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06201529875397682
    2. ' =' → logprob: -2.8120152950286865
    3. ']' → logprob: -10.187015533447266
    4. ')' → logprob: -12.312015533447266
    5. ']=' → logprob: -12.312015533447266
    6. ')=' → logprob: -14.687015533447266
    7. '=x' → logprob: -15.187015533447266
    8. '=
' → logprob: -16.562015533447266
    9. ' ' → logprob: -16.687015533447266
    10. ' ]' → logprob: -16.937015533447266

Token 1115: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -18.630233764648438
    4. '(x' → logprob: -18.755233764648438
    5. '`' → logprob: -19.130233764648438
    6. '"x' → logprob: -19.505233764648438
    7. ' ' → logprob: -19.505233764648438
    8. 'str' → logprob: -20.005233764648438
    9. ' ' → logprob: -20.255233764648438
    10. ''x' → logprob: -20.630233764648438

Token 1116: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1117: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005320800933986902
    2. 'break' (adapté à ' break') → logprob: -6.005321025848389
    3. '			' → logprob: -6.380321025848389
    4. '	break' → logprob: -7.880321025848389
    5. '		       ' → logprob: -8.63032054901123
    6. '                   ' → logprob: -9.13032054901123
    7. '           ' → logprob: -9.38032054901123
    8. '	           ' → logprob: -9.63032054901123
    9. '       ' → logprob: -9.63032054901123
    10. '	' → logprob: -9.75532054901123

Token 1119: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1120: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8497595191001892
    2. 'print' → logprob: -1.224759578704834
    3. '#' → logprob: -1.474759578704834
    4. 'if' → logprob: -3.599759578704834
    5. 'else' → logprob: -4.474759578704834
    6. '<|end|>' → logprob: -4.849759578704834
    7. ')' → logprob: -6.974759578704834
    8. 'continue' → logprob: -7.474759578704834
    9. '```' → logprob: -7.724759578704834
    10. ' for' → logprob: -7.849759578704834

Token 1121: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1850830316543579
    2. 'print' → logprob: -2.9350829124450684
    3. '#' (adapté à ' #') → logprob: -3.3100829124450684
    4. '   ' → logprob: -3.6850829124450684
    5. '<|end|>' → logprob: -4.060082912445068
    6. ' else' → logprob: -4.560082912445068
    7. 'if' → logprob: -5.060082912445068
    8. '       ' → logprob: -5.185082912445068
    9. 'continue' → logprob: -5.435082912445068
    10. 'for' → logprob: -6.060082912445068

Token 1122: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2677801847457886
    2. 'continue' → logprob: -1.7677801847457886
    3. '       ' → logprob: -3.517780303955078
    4. '#' → logprob: -4.642780303955078
    5. 'if' → logprob: -5.142780303955078
    6. ' else' → logprob: -5.517780303955078
    7. '   ' → logprob: -5.642780303955078
    8. 'elif' → logprob: -5.642780303955078
    9. 'print' → logprob: -6.142780303955078
    10. ' continue' → logprob: -6.517780303955078

Token 1123: ' le' (ID: 505)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0156589075922966
    2. ' DEC' → logprob: -4.265658855438232
    3. 'D' → logprob: -7.890658855438232
    4. 'to' → logprob: -8.01565933227539
    5. 'DIS' → logprob: -8.14065933227539
    6. 'not' → logprob: -8.76565933227539
    7. 'dec' → logprob: -8.89065933227539
    8. '   ' → logprob: -9.89065933227539
    9. ' not' → logprob: -10.26565933227539
    10. 'po' → logprob: -10.39065933227539

Token 1124: ' voisin' (ID: 145411)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.01604481041431427
    2. 'to' → logprob: -4.516044616699219
    3. ' DEC' → logprob: -6.016044616699219
    4. 'po' → logprob: -6.391044616699219
    5. 'dec' → logprob: -8.016044616699219
    6. 'D' → logprob: -8.766044616699219
    7. 'DIS' → logprob: -9.516044616699219
    8. 'not' → logprob: -9.516044616699219
    9. ' to' → logprob: -9.766044616699219
    10. '   ' → logprob: -10.266044616699219

Token 1125: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5694511532783508
    2. '==' → logprob: -1.694451093673706
    3. '[to' → logprob: -2.194451093673706
    4. ' ==' → logprob: -2.694451093673706
    5. '[' → logprob: -3.319451093673706
    6. 'po' → logprob: -4.819451332092285
    7. '!=' → logprob: -4.944451332092285
    8. ' to' → logprob: -5.069451332092285
    9. ' is' → logprob: -5.944451332092285
    10. 'est' → logprob: -6.194451332092285

Token 1126: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.98603755235672
    2. '!=' → logprob: -1.2360374927520752
    3. '==' → logprob: -1.6110374927520752
    4. ' ==' → logprob: -2.111037492752075
    5. ' is' → logprob: -5.486037731170654
    6. 'est' → logprob: -6.361037731170654
    7. ' est' → logprob: -6.486037731170654
    8. 'is' → logprob: -6.861037731170654
    9. '#' → logprob: -6.986037731170654
    10. ')' → logprob: -7.361037731170654

Token 1127: ' color' (ID: 3089)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.6913514137268066
    2. 'po' → logprob: -1.8163514137268066
    3. '""' → logprob: -1.9413514137268066
    4. ' DEC' → logprob: -2.4413514137268066
    5. ' not' → logprob: -3.4413514137268066
    6. ' po' → logprob: -3.5663514137268066
    7. 'not' → logprob: -3.8163514137268066
    8. 'color' → logprob: -4.566351413726807
    9. ' color' → logprob: -4.941351413726807
    10. 'colored' → logprob: -7.128851413726807

Token 1128: 'ié' (ID: 143445)
  Prédit: 'ié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ié' → logprob: -0.0013145243283361197
    2. 'é' → logprob: -6.751314640045166
    3. 'i' → logprob: -8.876314163208008
    4. 'isé' → logprob: -13.626314163208008
    5. '[i' → logprob: -14.001314163208008
    6. 'ied' → logprob: -14.501314163208008
    7. 'ée' → logprob: -14.626314163208008
    8. '"' → logprob: -15.376314163208008
    9. '           ' → logprob: -15.751314163208008
    10. 'ië' → logprob: -16.001314163208008

Token 1129: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1687135249376297
    2. 'and' → logprob: -2.0437135696411133
    3. '==' → logprob: -3.9187135696411133
    4. ' ==' → logprob: -5.668713569641113
    5. 'et' → logprob: -6.793713569641113
    6. ' et' → logprob: -7.543713569641113
    7. '!=' → logprob: -7.668713569641113
    8. '           ' → logprob: -9.293713569641113
    9. ' ' → logprob: -9.793713569641113
    10. ' !=' → logprob: -10.043713569641113

Token 1130: ' po' (ID: 2482)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.0964115858078003
    2. '           ' → logprob: -1.3464115858078003
    3. 'DEC' → logprob: -2.47141170501709
    4. ' elif' → logprob: -2.47141170501709
    5. ' DEC' → logprob: -2.72141170501709
    6. 'if' → logprob: -3.34641170501709
    7. ' and' → logprob: -3.59641170501709
    8. ' if' → logprob: -3.84641170501709
    9. 'DIS' → logprob: -3.84641170501709
    10. '#' → logprob: -4.34641170501709

Token 1131: ' aussi' (ID: 9894)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.806740403175354
    2. '!=' → logprob: -1.181740403175354
    3. ' ==' → logprob: -1.931740403175354
    4. '==' → logprob: -2.3067402839660645
    5. ' est' → logprob: -7.4317402839660645
    6. '           ' → logprob: -8.056740760803223
    7. ' a' → logprob: -8.181740760803223
    8. 'est' → logprob: -8.306740760803223
    9. ' is' → logprob: -8.806740760803223
    10. '=' → logprob: -9.181740760803223

Token 1132: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.055683378130197525
    2. '               ' → logprob: -4.180683612823486
    3. 'and' → logprob: -4.305683612823486
    4. '           ' → logprob: -4.805683612823486
    5. ':
' → logprob: -4.805683612823486
    6. ':' → logprob: -4.930683612823486
    7. ',' → logprob: -7.305683612823486
    8. ' et' → logprob: -8.180683135986328
    9. '=' → logprob: -8.805683135986328
    10. '```' → logprob: -9.055683135986328

Token 1133: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7834392786026001
    2. ' and' → logprob: -0.9084392786026001
    3. ' continue' → logprob: -2.2834391593933105
    4. '           ' → logprob: -4.6584391593933105
    5. 'and' → logprob: -4.6584391593933105
    6. '                   ' → logprob: -4.9084391593933105
    7. ' ' → logprob: -5.7834391593933105
    8. 'continue' → logprob: -5.9084391593933105
    9. '                ' → logprob: -6.9084391593933105
    10. ':' → logprob: -7.2834391593933105

Token 1134: ' ils' (ID: 15387)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0026037218049168587
    2. ' DEC' → logprob: -6.502603530883789
    3. 'DIS' → logprob: -7.127603530883789
    4. 'D' → logprob: -9.002603530883789
    5. 'to' → logprob: -10.002603530883789
    6. 'flag' → logprob: -10.502603530883789
    7. 'dec' → logprob: -11.002603530883789
    8. 'not' → logprob: -11.127603530883789
    9. '   ' → logprob: -11.377603530883789
    10. 'po' → logprob: -11.377603530883789

Token 1135: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.0705080032348633
    2. ' have' → logprob: -1.1955080032348633
    3. ' are' → logprob: -1.8205080032348633
    4. 'have' → logprob: -2.0705080032348633
    5. ' ont' → logprob: -3.1955080032348633
    6. 'are' → logprob: -4.445508003234863
    7. ' sont' → logprob: -5.195508003234863
    8. '#' → logprob: -6.070508003234863
    9. ''ont' → logprob: -6.320508003234863
    10. 's' → logprob: -6.320508003234863

Token 1136: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1872817724943161
    2. ' la' → logprob: -2.437281847000122
    3. 'the' → logprob: -2.687281847000122
    4. 'different' → logprob: -5.437281608581543
    5. 'diff' → logprob: -5.687281608581543
    6. ' the' → logprob: -6.187281608581543
    7. '```' → logprob: -6.187281608581543
    8. 'les' → logprob: -7.312281608581543
    9. 'not' → logprob: -7.562281608581543
    10. 'une' → logprob: -7.562281608581543

Token 1137: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06740806996822357
    2. ' même' → logprob: -3.0674080848693848
    3. 'same' → logprob: -4.192408084869385
    4. '```' → logprob: -6.692408084869385
    5. 'Même' → logprob: -6.942408084869385
    6. 'even' → logprob: -8.192407608032227
    7. 'DEC' → logprob: -8.442407608032227
    8. 'mé' → logprob: -8.817407608032227
    9. 'mem' → logprob: -9.317407608032227
    10. ' meme' → logprob: -9.317407608032227

Token 1138: ' couleur' (ID: 48005)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.3395742177963257
    2. 'DEC' → logprob: -1.3395742177963257
    3. ' color' → logprob: -4.214574337005615
    4. ' DEC' → logprob: -5.839574337005615
    5. ' couleur' → logprob: -6.089574337005615
    6. 'dec' → logprob: -6.464574337005615
    7. '[' → logprob: -6.714574337005615
    8. 'COLOR' → logprob: -7.339574337005615
    9. ' ' → logprob: -7.589574337005615
    10. '   ' → logprob: -8.339573860168457

Token 1139: ' :
' (ID: 10039)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.559071958065033
    2. 'and' → logprob: -0.934071958065033
    3. '               ' → logprob: -4.059072017669678
    4. '           ' → logprob: -4.809072017669678
    5. ':' → logprob: -5.059072017669678
    6. ':
' → logprob: -5.934072017669678
    7. ',' → logprob: -8.68407154083252
    8. '=' → logprob: -9.05907154083252
    9. 'if' → logprob: -9.18407154083252
    10. '==' → logprob: -9.30907154083252

Token 1140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7393280267715454
    2. '               ' → logprob: -0.7393280267715454
    3. ' if' → logprob: -3.614327907562256
    4. '```' → logprob: -5.739327907562256
    5. 'if' → logprob: -5.989327907562256
    6. '       ' → logprob: -5.989327907562256
    7. '<|end|>' → logprob: -5.989327907562256
    8. ' and' → logprob: -6.364327907562256
    9. '            
' → logprob: -6.864327907562256
    10. '   ' → logprob: -6.989327907562256

Token 1141: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0201940406113863
    2. '               ' → logprob: -4.270194053649902
    3. '```' → logprob: -5.770194053649902
    4. '       ' → logprob: -6.895194053649902
    5. ' if' → logprob: -7.145194053649902
    6. 'if' → logprob: -8.145194053649902
    7. '            
' → logprob: -8.520194053649902
    8. 'elif' (adapté à ' elif') → logprob: -9.020194053649902
    9. '
' → logprob: -9.270194053649902
    10. '            ' → logprob: -9.645194053649902

Token 1142: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.0889887586236
    2. ' DEC' → logprob: -2.463988780975342
    3. '   ' → logprob: -10.213988304138184
    4. 'D' → logprob: -12.838988304138184
    5. '_DEC' → logprob: -12.963988304138184
    6. ' ' → logprob: -13.338988304138184
    7. '           ' → logprob: -13.713988304138184
    8. 'dec' → logprob: -13.713988304138184
    9. '    ' → logprob: -14.088988304138184
    10. '(' → logprob: -14.588988304138184

Token 1143: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.0461113266646862
    2. 'ED' → logprob: -3.2961113452911377
    3. 'DEC' → logprob: -5.421111106872559
    4. 'I' → logprob: -5.921111106872559
    5. 'IDE' → logprob: -8.546111106872559
    6. 'ided' → logprob: -8.671111106872559
    7. 'IED' → logprob: -9.046111106872559
    8. 'IC' → logprob: -9.546111106872559
    9. '{' → logprob: -9.921111106872559
    10. 'IS' → logprob: -10.171111106872559

Token 1144: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -3.047134305234067e-05
    2. 'DED' → logprob: -10.875030517578125
    3. 'ID' → logprob: -12.750030517578125
    4. 'IED' → logprob: -13.375030517578125
    5. 'E' → logprob: -14.000030517578125
    6. 'DEC' → logprob: -14.250030517578125
    7. 'EDI' → logprob: -14.375030517578125
    8. 'ЕД' → logprob: -14.500030517578125
    9. '
' → logprob: -14.625030517578125
    10. 'O' → logprob: -14.875030517578125

Token 1145: '[to' (ID: 139069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009759039618074894
    2. '[to' → logprob: -4.634758949279785
    3. ' [' → logprob: -13.759758949279785
    4. 'to' → logprob: -13.759758949279785
    5. '```' → logprob: -15.259758949279785
    6. '[pos' → logprob: -15.384758949279785
    7. '   ' → logprob: -15.509758949279785
    8. '       ' → logprob: -16.7597599029541
    9. '[
' → logprob: -16.8847599029541
    10. '==' → logprob: -17.1347599029541

Token 1146: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7880702018737793
    2. '==' → logprob: -1.0380702018737793
    3. '[' → logprob: -2.2880702018737793
    4. ']' → logprob: -2.6630702018737793
    5. ']==' → logprob: -4.038070201873779
    6. '][' → logprob: -7.413070201873779
    7. '```' → logprob: -7.788070201873779
    8. ' !=' → logprob: -7.913070201873779
    9. '!=' → logprob: -8.413070678710938
    10. ')' → logprob: -9.038070678710938

Token 1147: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18079352378845215
    2. ' ==' → logprob: -1.8057935237884521
    3. '[' → logprob: -7.555793762207031
    4. '!=' → logprob: -8.055793762207031
    5. ' !=' → logprob: -9.305793762207031
    6. '=' → logprob: -9.555793762207031
    7. '==
' → logprob: -10.555793762207031
    8. ']==' → logprob: -11.680793762207031
    9. '```' → logprob: -12.680793762207031
    10. ')==' → logprob: -12.930793762207031

Token 1148: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.000508591765537858
    2. 'DEC' → logprob: -8.125508308410645
    3. '"' → logprob: -9.125508308410645
    4. ' ""' → logprob: -10.125508308410645
    5. 'po' → logprob: -11.000508308410645
    6. '''' → logprob: -11.125508308410645
    7. '"":' → logprob: -11.500508308410645
    8. '"""' → logprob: -12.250508308410645
    9. '""""' → logprob: -12.250508308410645
    10. '=""' → logprob: -12.625508308410645

Token 1149: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023437678813934
    2. 'and' → logprob: -1.9102343320846558
    3. '           ' → logprob: -12.160234451293945
    4. ' ' → logprob: -13.160234451293945
    5. '	and' → logprob: -13.660234451293945
    6. '   ' → logprob: -15.160234451293945
    7. ' ' → logprob: -15.285234451293945
    8. '       ' → logprob: -15.535234451293945
    9. '            ' → logprob: -15.660234451293945
    10. 'andr' → logprob: -16.160234451293945

Token 1150: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.007628757506608963
    2. ' DEC' → logprob: -4.882628917694092
    3. '   ' → logprob: -10.882628440856934
    4. '_DEC' → logprob: -13.632628440856934
    5. 'D' → logprob: -13.882628440856934
    6. 'DE' → logprob: -14.632628440856934
    7. ' ' → logprob: -14.882628440856934
    8. 'dec' → logprob: -15.632628440856934
    9. '       ' → logprob: -15.632628440856934
    10. 'DC' → logprob: -16.38262939453125

Token 1151: 'ID' (ID: 1240)
  Prédit: 'ED'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.046259984374046326
    2. 'DEC' → logprob: -3.796259880065918
    3. 'ID' → logprob: -4.046259880065918
    4. 'DED' → logprob: -5.546259880065918
    5. 'ided' → logprob: -8.671259880065918
    6. 'DE' → logprob: -8.671259880065918
    7. 'D' → logprob: -8.671259880065918
    8. 'IDE' → logprob: -9.296259880065918
    9. 'SED' → logprob: -9.296259880065918
    10. 'EC' → logprob: -9.546259880065918

Token 1152: 'ED' (ID: 2252)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.2542448937892914
    2. 'ED' → logprob: -1.5042449235916138
    3. 'DED' → logprob: -7.004244804382324
    4. 'DE' → logprob: -7.754244804382324
    5. 'EC' → logprob: -8.254244804382324
    6. ' DEC' → logprob: -9.004244804382324
    7. 'D' → logprob: -9.129244804382324
    8. 'ed' → logprob: -9.879244804382324
    9. '{' → logprob: -10.004244804382324
    10. '[' → logprob: -10.129244804382324

Token 1153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003645442193374038
    2. '[to' → logprob: -8.625364303588867
    3. '==' → logprob: -9.125364303588867
    4. ' ==' → logprob: -10.500364303588867
    5. 'to' → logprob: -11.375364303588867
    6. 'DEC' → logprob: -11.875364303588867
    7. '```' → logprob: -11.875364303588867
    8. ' [' → logprob: -12.375364303588867
    9. '[
' → logprob: -12.375364303588867
    10. 'po' → logprob: -12.625364303588867

Token 1154: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.6668704152107239
    2. 'DEC' → logprob: -0.7918704152107239
    3. '""' → logprob: -3.666870355606079
    4. ' po' → logprob: -5.541870594024658
    5. ' DEC' → logprob: -5.791870594024658
    6. 'PO' → logprob: -7.916870594024658
    7. 'to' → logprob: -8.0418701171875
    8. '"' → logprob: -8.9168701171875
    9. 'dec' → logprob: -9.4168701171875
    10. 'Dec' → logprob: -9.9168701171875

Token 1155: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.45500534772872925
    2. ' ==' → logprob: -1.080005407333374
    3. ']==' → logprob: -4.080005168914795
    4. ']' → logprob: -4.830005168914795
    5. '[' → logprob: -7.080005168914795
    6. ')==' → logprob: -9.955005645751953
    7. '```' → logprob: -9.955005645751953
    8. '=' → logprob: -11.080005645751953
    9. '==
' → logprob: -11.205005645751953
    10. ')' → logprob: -11.455005645751953

Token 1156: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0038973453920334578
    2. ' ==' → logprob: -5.628897190093994
    3. '!=' → logprob: -8.253897666931152
    4. '==
' → logprob: -11.378897666931152
    5. '=' → logprob: -11.753897666931152
    6. '=="' → logprob: -11.878897666931152
    7. '[' → logprob: -12.503897666931152
    8. ' !=' → logprob: -12.628897666931152
    9. ']==' → logprob: -13.628897666931152
    10. '===' → logprob: -14.378897666931152

Token 1157: ' DEC' (ID: 65456)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03953192010521889
    2. 'DEC' → logprob: -3.414531946182251
    3. '"":' → logprob: -5.664531707763672
    4. '"' → logprob: -6.164531707763672
    5. ' "":
' → logprob: -9.789531707763672
    6. ' DEC' → logprob: -9.914531707763672
    7. 'to' → logprob: -10.664531707763672
    8. '''' → logprob: -10.789531707763672
    9. 'dec' → logprob: -11.039531707763672
    10. ' ""' → logprob: -11.164531707763672

Token 1158: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.008502408862113953
    2. 'ED' → logprob: -5.38350248336792
    3. 'IDE' → logprob: -6.63350248336792
    4. 'ided' → logprob: -7.25850248336792
    5. 'IED' → logprob: -7.63350248336792
    6. 'DEC' → logprob: -7.63350248336792
    7. 'I' → logprob: -8.383502006530762
    8. 'IC' → logprob: -8.508502006530762
    9. '```' → logprob: -9.133502006530762
    10. '[' → logprob: -9.258502006530762

Token 1159: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -5.908022285439074e-05
    2. 'O' → logprob: -11.250059127807617
    3. 'DED' → logprob: -11.250059127807617
    4. 'ID' → logprob: -12.125059127807617
    5. '[' → logprob: -12.250059127807617
    6. 'DEC' → logprob: -12.500059127807617
    7. '
' → logprob: -12.625059127807617
    8. 'IED' → logprob: -13.000059127807617
    9. '{' → logprob: -13.250059127807617
    10. 'D' → logprob: -13.625059127807617

Token 1160: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -11.375020027160645
    3. 'to' → logprob: -11.750020027160645
    4. '(to' → logprob: -15.875020027160645
    5. '   ' → logprob: -16.375019073486328
    6. 'toi' → logprob: -16.500019073486328
    7. ' [' → logprob: -17.125019073486328
    8. '```' → logprob: -17.625019073486328
    9. '[from' → logprob: -17.875019073486328
    10. '	to' → logprob: -18.250019073486328

Token 1161: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7032027244567871
    2. ':
' → logprob: -0.7032027244567871
    3. '):
' → logprob: -4.953202724456787
    4. ']:
' → logprob: -6.703202724456787
    5. '):' → logprob: -7.203202724456787
    6. ']:' → logprob: -8.703203201293945
    7. '"]:
' → logprob: -8.703203201293945
    8. '():
' → logprob: -8.828203201293945
    9. '":' → logprob: -9.578203201293945
    10. ':

' → logprob: -9.828203201293945

Token 1162: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07854535430669785
    2. '           ' → logprob: -2.828545331954956
    3. 'print' → logprob: -4.828545570373535
    4. '                   ' → logprob: -5.328545570373535
    5. '```' → logprob: -6.203545570373535
    6. ' print' → logprob: -7.578545570373535
    7. '   ' → logprob: -7.578545570373535
    8. '       ' → logprob: -7.828545570373535
    9. '``' → logprob: -9.578545570373535
    10. '                       ' → logprob: -9.953545570373535

Token 1163: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001683632144704461
    2. '           ' → logprob: -7.126683712005615
    3. '```' → logprob: -7.376683712005615
    4. '                   ' → logprob: -9.251683235168457
    5. ' print' → logprob: -9.751683235168457
    6. '   ' → logprob: -10.501683235168457
    7. '               ' → logprob: -10.501683235168457
    8. '``' → logprob: -10.501683235168457
    9. '       ' → logprob: -11.376683235168457
    10. '
' → logprob: -13.751683235168457

Token 1164: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.047134305234067e-05
    2. '           ' → logprob: -10.500030517578125
    3. '               ' → logprob: -13.875030517578125
    4. '```' → logprob: -14.750030517578125
    5. ' print' → logprob: -14.875030517578125
    6. 'for' → logprob: -15.000030517578125
    7. '   ' → logprob: -15.250030517578125
    8. '       ' → logprob: -15.750030517578125
    9. '
' → logprob: -15.875030517578125
    10. '#' → logprob: -16.375030517578125

Token 1165: ' x' (ID: 1215)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2443772554397583
    2. ' True' → logprob: -2.1193771362304688
    3. 'D' → logprob: -2.9943771362304688
    4. 'x' → logprob: -3.7443771362304688
    5. 'print' → logprob: -4.869377136230469
    6. ' D' → logprob: -5.119377136230469
    7. 'DEC' → logprob: -5.494377136230469
    8. 'len' → logprob: -6.869377136230469
    9. ' x' → logprob: -6.994377136230469
    10. 'DIS' → logprob: -7.494377136230469

Token 1166: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.33534738421440125
    2. '==' → logprob: -1.4603474140167236
    3. '==-' → logprob: -3.7103474140167236
    4. ' !=' → logprob: -4.4603471755981445
    5. '!=' → logprob: -4.8353471755981445
    6. '=' → logprob: -6.0853471755981445
    7. 'print' → logprob: -6.7103471755981445
    8. '#' → logprob: -7.2103471755981445
    9. '<' → logprob: -7.7103471755981445
    10. '>' → logprob: -7.8353471755981445

Token 1167: ' plus' (ID: 2932)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3489683270454407
    2. ' D' → logprob: -2.723968267440796
    3. '<' → logprob: -3.098968267440796
    4. '0' → logprob: -3.223968267440796
    5. 'not' → logprob: -3.598968267440796
    6. ' not' → logprob: -3.723968267440796
    7. '<=' → logprob: -3.848968267440796
    8. '>' → logprob: -3.973968267440796
    9. '>=' → logprob: -4.348968505859375
    10. 'x' → logprob: -4.598968505859375

Token 1168: ' petit' (ID: 20577)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3882087469100952
    2. ' >' → logprob: -1.7632087469100952
    3. '<' → logprob: -3.5132088661193848
    4. '=' → logprob: -3.6382088661193848
    5. '>=' → logprob: -4.013208866119385
    6. 'x' → logprob: -4.263208866119385
    7. ' x' → logprob: -4.513208866119385
    8. 'grand' → logprob: -4.888208866119385
    9. ' grande' → logprob: -5.138208866119385
    10. ' >=' → logprob: -5.263208866119385

Token 1169: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13737811148166656
    2. '<' → logprob: -2.762378215789795
    3. '                   ' → logprob: -4.512378215789795
    4. ' than' → logprob: -5.012378215789795
    5. ':
' → logprob: -5.012378215789795
    6. ' :' → logprob: -5.137378215789795
    7. '==' → logprob: -5.262378215789795
    8. '=' → logprob: -5.387378215789795
    9. '                           ' → logprob: -5.387378215789795
    10. ' <' → logprob: -5.762378215789795

Token 1170: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4664846360683441
    2. 'grand' → logprob: -2.091484546661377
    3. 'ou' → logprob: -2.716484546661377
    4. 'égal' → logprob: -2.841484546661377
    5. 'strict' → logprob: -3.466484546661377
    6. 'que' → logprob: -3.716484546661377
    7. '>=' → logprob: -4.216484546661377
    8. 'equal' → logprob: -4.716484546661377
    9. 'x' → logprob: -4.966484546661377
    10. '0' → logprob: -4.966484546661377

Token 1171: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017826409311965108
    2. ' =' → logprob: -7.001782417297363
    3. 'x' → logprob: -8.626782417297363
    4. 'à' → logprob: -9.001782417297363
    5. '=x' → logprob: -9.001782417297363
    6. '<=' → logprob: -9.126782417297363
    7. ',' → logprob: -9.251782417297363
    8. ' à' → logprob: -9.376782417297363
    9. ' x' → logprob: -9.876782417297363
    10. '=
' → logprob: -10.376782417297363

Token 1172: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.024610185995697975
    2. ' D' → logprob: -4.6496100425720215
    3. 'x' → logprob: -4.7746100425720215
    4. '0' → logprob: -5.8996100425720215
    5. 'DIS' → logprob: -7.0246100425720215
    6. '1' → logprob: -7.1496100425720215
    7. 'DEC' → logprob: -7.5246100425720215
    8. 'd' → logprob: -8.52461051940918
    9. ' ' → logprob: -8.64961051940918
    10. 'P' → logprob: -8.77461051940918

Token 1173: '[to' (ID: 139069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14846386015415192
    2. '[to' → logprob: -2.0234639644622803
    3. '[x' → logprob: -5.398463726043701
    4. 'to' → logprob: -7.273463726043701
    5. 'x' → logprob: -8.27346420288086
    6. '[pos' → logprob: -9.14846420288086
    7. 'po' → logprob: -9.64846420288086
    8. '[D' → logprob: -9.64846420288086
    9. 'D' → logprob: -11.27346420288086
    10. ' [' → logprob: -12.77346420288086

Token 1174: '],' (ID: 2155)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.18042564392089844
    2. '],' → logprob: -2.6804256439208984
    3. ']:' → logprob: -2.8054256439208984
    4. '[' → logprob: -4.055425643920898
    5. ']' → logprob: -5.180425643920898
    6. ':
' → logprob: -5.305425643920898
    7. '[to' → logprob: -5.680425643920898
    8. ':' → logprob: -6.555425643920898
    9. '   ' → logprob: -7.430425643920898
    10. ']:

' → logprob: -7.555425643920898

Token 1175: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34022748470306396
    2. 'print' → logprob: -1.340227484703064
    3. '               ' → logprob: -4.9652276039123535
    4. 'continue' → logprob: -5.0902276039123535
    5. ' print' → logprob: -5.5902276039123535
    6. 'if' → logprob: -5.5902276039123535
    7. '                       ' → logprob: -6.3402276039123535
    8. '   ' → logprob: -6.4652276039123535
    9. '           ' → logprob: -6.9652276039123535
    10. ' continue' → logprob: -7.3402276039123535

Token 1176: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3448227643966675
    2. ' print' → logprob: -2.969822883605957
    3. '           ' → logprob: -3.094822883605957
    4. ' continue' → logprob: -3.094822883605957
    5. 'continue' → logprob: -3.344822883605957
    6. '#' → logprob: -3.594822883605957
    7. '               ' → logprob: -3.719822883605957
    8. 'break' → logprob: -3.969822883605957
    9. ' break' → logprob: -4.594822883605957
    10. '                   ' → logprob: -4.594822883605957

Token 1177: ' fait' (ID: 7473)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4375663101673126
    2. 'continue' → logprob: -1.4375662803649902
    3. 'pas' → logprob: -2.4375662803649902
    4. '           ' → logprob: -4.43756628036499
    5. ' continue' → logprob: -4.93756628036499
    6. ' print' → logprob: -5.81256628036499
    7. '               ' → logprob: -6.68756628036499
    8. '#' → logprob: -6.81256628036499
    9. '       ' → logprob: -7.06256628036499
    10. 'pass' → logprob: -7.18756628036499

Token 1178: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7792014479637146
    2. ' rien' → logprob: -1.2792015075683594
    3. 'pas' → logprob: -1.5292015075683594
    4. 'print' → logprob: -3.9042015075683594
    5. 'pass' → logprob: -4.279201507568359
    6. ' pas' → logprob: -4.779201507568359
    7. '           ' → logprob: -6.404201507568359
    8. '   ' → logprob: -8.27920150756836
    9. '```' → logprob: -8.40420150756836
    10. '               ' → logprob: -8.77920150756836

Token 1179: ' pour' (ID: 1930)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30575764179229736
    2. '               ' → logprob: -2.055757522583008
    3. ':' → logprob: -2.680757522583008
    4. 'continue' → logprob: -3.430757522583008
    5. ' continue' → logprob: -3.930757522583008
    6. ':
' → logprob: -4.555757522583008
    7. '                       ' → logprob: -6.055757522583008
    8. '           ' → logprob: -7.180757522583008
    9. ',' → logprob: -7.930757522583008
    10. '	continue' → logprob: -8.305757522583008

Token 1180: ' cette' (ID: 7696)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0074955224990845
    2. 'pas' → logprob: -1.7574955224990845
    3. 'l' → logprob: -1.8824955224990845
    4. 'continue' → logprob: -2.007495403289795
    5. 'print' → logprob: -3.382495403289795
    6. 'le' → logprob: -3.882495403289795
    7. 'les' → logprob: -4.382495403289795
    8. 'x' → logprob: -4.382495403289795
    9. 'contin' → logprob: -4.632495403289795
    10. 'DIS' → logprob: -4.757495403289795

Token 1181: ' it' (ID: 480)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.033841636031866074
    2. 'vo' → logprob: -4.158841609954834
    3. ' ar' → logprob: -4.658841609954834
    4. 'are' → logprob: -6.283841609954834
    5. 'case' → logprob: -6.908841609954834
    6. 'aré' → logprob: -7.408841609954834
    7. 'edge' → logprob: -7.533841609954834
    8. 'if' → logprob: -7.658841609954834
    9. 'for' → logprob: -8.158842086791992
    10. 'voie' → logprob: -8.283842086791992

Token 1182: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.26629215478897095
    2. 'é' → logprob: -1.5162920951843262
    3. 'er' → logprob: -5.016292095184326
    4. 'ère' → logprob: -5.391292095184326
    5. 'éra' → logprob: -7.641292095184326
    6. 'èr' → logprob: -7.766292095184326
    7. 'ére' → logprob: -8.516292572021484
    8. 'ér' → logprob: -8.641292572021484
    9. 'éré' → logprob: -8.641292572021484
    10. 'érance' → logprob: -8.641292572021484

Token 1183: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5523486733436584
    2. '               ' → logprob: -1.1773486137390137
    3. ':' → logprob: -3.0523486137390137
    4. ':
' → logprob: -3.3023486137390137
    5. 'continue' → logprob: -4.552348613739014
    6. '.' → logprob: -5.427348613739014
    7. ' continue' → logprob: -5.427348613739014
    8. '                       ' → logprob: -5.802348613739014
    9. ',' → logprob: -6.052348613739014
    10. '           ' → logprob: -6.302348613739014

Token 1184: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04184531047940254
    2. '               ' → logprob: -3.2918453216552734
    3. '           ' → logprob: -6.541845321655273
    4. ' continue' → logprob: -7.166845321655273
    5. '                       ' → logprob: -7.291845321655273
    6. 'continue' → logprob: -7.666845321655273
    7. '   ' → logprob: -8.791845321655273
    8. '       ' → logprob: -9.791845321655273
    9. ':' → logprob: -10.166845321655273
    10. ':
' → logprob: -10.416845321655273

Token 1185: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.11775614321231842
    2. '                   ' → logprob: -3.2427561283111572
    3. ' continue' → logprob: -3.3677561283111572
    4. '               ' → logprob: -3.6177561283111572
    5. 'if' (adapté à ' if') → logprob: -4.867756366729736
    6. '	continue' → logprob: -6.742756366729736
    7. '   ' → logprob: -7.492756366729736
    8. ' if' → logprob: -7.742756366729736
    9. '                       ' → logprob: -8.242755889892578
    10. '           ' → logprob: -8.242755889892578

Token 1186: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01816457509994507
    2. ' x' → logprob: -4.01816463470459
    3. 'D' → logprob: -12.01816463470459
    4. '   ' → logprob: -12.51816463470459
    5. ' ' → logprob: -13.39316463470459
    6. '	x' → logprob: -13.76816463470459
    7. ' D' → logprob: -14.26816463470459
    8. '
' → logprob: -15.14316463470459
    9. '(x' → logprob: -15.14316463470459
    10. ' not' → logprob: -15.26816463470459

Token 1187: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011088728904724121
    2. '<=' → logprob: -4.511088848114014
    3. ' <' → logprob: -11.511088371276855
    4. ' ' → logprob: -11.886088371276855
    5. ' >' → logprob: -12.011088371276855
    6. ' >=' → logprob: -12.136088371276855
    7. ' ==' → logprob: -12.136088371276855
    8. '<' → logprob: -13.636088371276855
    9. '[' → logprob: -13.886088371276855
    10. '>' → logprob: -14.011088371276855

Token 1188: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0019310165662318468
    2. ' D' → logprob: -6.251931190490723
    3. '	D' → logprob: -13.876931190490723
    4. 'x' → logprob: -14.751931190490723
    5. ' ' → logprob: -14.751931190490723
    6. '   ' → logprob: -15.751931190490723
    7. '=D' → logprob: -16.001930236816406
    8. '>D' → logprob: -16.126930236816406
    9. '  ' → logprob: -16.751930236816406
    10. '
' → logprob: -17.001930236816406

Token 1189: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -10.875020027160645
    3. 'to' → logprob: -14.000020027160645
    4. ' [' → logprob: -16.250019073486328
    5. '   ' → logprob: -17.125019073486328
    6. '
' → logprob: -17.875019073486328
    7. '```' → logprob: -19.375019073486328
    8. '[tmp' → logprob: -20.000019073486328
    9. '[from' → logprob: -20.125019073486328
    10. '	' → logprob: -20.125019073486328

Token 1190: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5770910382270813
    2. ':
' → logprob: -0.8270910382270813
    3. '                   ' → logprob: -7.827091217041016
    4. '               ' → logprob: -8.327091217041016
    5. '           ' → logprob: -8.452091217041016
    6. 'continue' → logprob: -9.077091217041016
    7. '):
' → logprob: -9.952091217041016
    8. ':return' → logprob: -9.952091217041016
    9. ' continue' → logprob: -10.077091217041016
    10. '):' → logprob: -10.952091217041016

Token 1191: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028483783826231956
    2. 'continue' → logprob: -3.6534838676452637
    3. ' continue' → logprob: -6.653483867645264
    4. ':
' → logprob: -7.778483867645264
    5. '               ' → logprob: -8.153483390808105
    6. '                       ' → logprob: -9.403483390808105
    7. ':' → logprob: -9.903483390808105
    8. '	continue' → logprob: -11.028483390808105
    9. '           ' → logprob: -11.528483390808105
    10. '   ' → logprob: -11.903483390808105

Token 1192: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.036561235785484314
    2. '                   ' → logprob: -3.7865612506866455
    3. ' continue' → logprob: -4.411561012268066
    4. '                       ' → logprob: -7.536561012268066
    5. '               ' → logprob: -8.036561012268066
    6. '	continue' → logprob: -9.286561012268066
    7. '```' → logprob: -10.161561012268066
    8. '   ' → logprob: -10.286561012268066
    9. '           ' → logprob: -10.286561012268066
    10. 'pass' → logprob: -11.661561012268066

Token 1193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004757630173116922
    2. 'else' → logprob: -5.504757404327393
    3. '                   ' → logprob: -7.879757404327393
    4. ' else' → logprob: -9.00475788116455
    5. '           ' → logprob: -10.00475788116455
    6. '<|end|>' → logprob: -10.25475788116455
    7. '                
' → logprob: -10.87975788116455
    8. '       ' → logprob: -11.25475788116455
    9. '```' → logprob: -11.37975788116455
    10. '
' → logprob: -11.37975788116455

Token 1194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001723965280689299
    2. 'else' → logprob: -6.376723766326904
    3. '                   ' → logprob: -11.501724243164062
    4. '           ' → logprob: -12.251724243164062
    5. ' else' → logprob: -13.001724243164062
    6. 'elif' → logprob: -13.501724243164062
    7. '```' → logprob: -14.251724243164062
    8. '       ' → logprob: -14.251724243164062
    9. '              ' → logprob: -14.501724243164062
    10. '                ' → logprob: -14.876724243164062

Token 1195: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2242356836795807
    2. 'else' → logprob: -1.7242356538772583
    3. 'print' → logprob: -4.349235534667969
    4. '#' (adapté à ' #') → logprob: -5.349235534667969
    5. '           ' → logprob: -5.599235534667969
    6. ' else' → logprob: -7.724235534667969
    7. '                   ' → logprob: -8.099235534667969
    8. 'elif' → logprob: -8.349235534667969
    9. 'for' → logprob: -9.849235534667969
    10. 'DIS' → logprob: -10.474235534667969

Token 1196: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22136282920837402
    2. 'print' → logprob: -1.721362829208374
    3. '#' → logprob: -4.721363067626953
    4. '           ' → logprob: -5.221363067626953
    5. '               ' → logprob: -5.346363067626953
    6. 'elif' → logprob: -8.096363067626953
    7. '                   ' → logprob: -9.096363067626953
    8. ' else' → logprob: -9.346363067626953
    9. 'DIS' → logprob: -9.971363067626953
    10. 'if' → logprob: -10.096363067626953

Token 1197: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9107442498207092
    2. '               ' → logprob: -1.2857441902160645
    3. 'print' → logprob: -1.2857441902160645
    4. ' print' → logprob: -3.6607441902160645
    5. '#' → logprob: -5.0357441902160645
    6. 'else' → logprob: -6.1607441902160645
    7. 'DIS' → logprob: -6.4107441902160645
    8. '           ' → logprob: -6.4107441902160645
    9. ' for' → logprob: -6.9107441902160645
    10. '                       ' → logprob: -7.0357441902160645

Token 1198: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5930669903755188
    2. '                   ' → logprob: -2.468066930770874
    3. 'DIS' → logprob: -2.468066930770874
    4. '               ' → logprob: -2.593066930770874
    5. ' print' → logprob: -2.718066930770874
    6. 'DEC' → logprob: -2.843066930770874
    7. '#' → logprob: -3.718066930770874
    8. ' DEC' → logprob: -4.343067169189453
    9. 'for' → logprob: -4.843067169189453
    10. ' DIS' → logprob: -4.968067169189453

Token 1199: ' met' (ID: 1421)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16399464011192322
    2. 'break' → logprob: -2.663994550704956
    3. '#' → logprob: -2.913994550704956
    4. '           ' → logprob: -4.788994789123535
    5. ' print' → logprob: -5.163994789123535
    6. ' break' → logprob: -5.788994789123535
    7. 'raise' → logprob: -6.288994789123535
    8. '                   ' → logprob: -6.538994789123535
    9. '               ' → logprob: -6.538994789123535
    10. '   ' → logprob: -7.288994789123535

Token 1200: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2388869822025299
    2. 'DIS' → logprob: -2.113887071609497
    3. 'DEC' → logprob: -4.363886833190918
    4. ' print' → logprob: -4.613886833190918
    5. '-' → logprob: -4.738886833190918
    6. '                   ' → logprob: -4.863886833190918
    7. '#' → logprob: -4.988886833190918
    8. '               ' → logprob: -4.988886833190918
    9. 'sys' → logprob: -5.113886833190918
    10. '           ' → logprob: -5.363886833190918

Token 1201: ' dé' (ID: 2393)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3254412114620209
    2. '-' → logprob: -1.8254412412643433
    3. 'DIS' → logprob: -3.2004411220550537
    4. 'DEC' → logprob: -3.3254411220550537
    5. '#' → logprob: -4.825441360473633
    6. 'dec' → logprob: -5.325441360473633
    7. 'dis' → logprob: -5.450441360473633
    8. 'sys' → logprob: -5.825441360473633
    9. '"-' → logprob: -5.825441360473633
    10. '"' → logprob: -5.950441360473633

Token 1202: 'cal' (ID: 5842)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.8861055970191956
    2. '[' → logprob: -1.2611055374145508
    3. '[to' → logprob: -1.8861055374145508
    4. '=' → logprob: -2.761105537414551
    5. 'to' → logprob: -4.011105537414551
    6. '```' → logprob: -4.386105537414551
    7. ' DIS' → logprob: -4.636105537414551
    8. 'dis' → logprob: -4.761105537414551
    9. 'D' → logprob: -4.761105537414551
    10. ' =' → logprob: -5.011105537414551

Token 1203: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0004092235758434981
    2. 'e' → logprob: -9.000409126281738
    3. 'é' → logprob: -9.250409126281738
    4. 'ement' → logprob: -10.000409126281738
    5. 'le' → logprob: -10.625409126281738
    6. 'AGE' → logprob: -11.000409126281738
    7. 'l' → logprob: -11.000409126281738
    8. 'a' → logprob: -11.500409126281738
    9. '```' → logprob: -11.500409126281738
    10. 'lement' → logprob: -11.625409126281738

Token 1204: ' (' (ID: 350)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.0736144632101059
    2. '=' → logprob: -3.6986143589019775
    3. ' DIS' → logprob: -4.073614597320557
    4. '[' → logprob: -4.948614597320557
    5. ' =' → logprob: -4.948614597320557
    6. '                   ' → logprob: -5.698614597320557
    7. '(DIS' → logprob: -6.073614597320557
    8. '               ' → logprob: -6.323614597320557
    9. ' à' → logprob: -6.323614597320557
    10. '_DIS' → logprob: -6.948614597320557

Token 1205: 'x' (ID: 87)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.2837265133857727
    2. 'x' → logprob: -1.533726453781128
    3. '-' → logprob: -4.408726692199707
    4. 'D' → logprob: -4.533726692199707
    5. ' DIS' → logprob: -6.283726692199707
    6. '0' → logprob: -6.408726692199707
    7. '1' → logprob: -6.908726692199707
    8. 'dis' → logprob: -6.908726692199707
    9. 'abs' → logprob: -7.658726692199707
    10. '-dis' → logprob: -7.783726692199707

Token 1206: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24910487234592438
    2. ' -' → logprob: -1.6241048574447632
    3. ')' → logprob: -4.124104976654053
    4. '               ' → logprob: -6.374104976654053
    5. '=' → logprob: -6.499104976654053
    6. 'DIS' → logprob: -6.749104976654053
    7. '-D' → logprob: -7.874104976654053
    8. '           ' → logprob: -7.999104976654053
    9. '   ' → logprob: -8.249104499816895
    10. ' )' → logprob: -8.499104499816895

Token 1207: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0010450744302943349
    2. ' D' → logprob: -6.876045227050781
    3. '                   ' → logprob: -13.001045227050781
    4. '               ' → logprob: -13.001045227050781
    5. '   ' → logprob: -13.126045227050781
    6. '1' → logprob: -13.126045227050781
    7. '	D' → logprob: -14.126045227050781
    8. ' ' → logprob: -14.251045227050781
    9. '           ' → logprob: -14.626045227050781
    10. '
' → logprob: -15.126045227050781

Token 1208: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.00262476596981287
    2. '[' → logprob: -6.002624988555908
    3. 'to' → logprob: -8.87762451171875
    4. ' [' → logprob: -13.37762451171875
    5. '```' → logprob: -13.62762451171875
    6. ')' → logprob: -14.25262451171875
    7. 'toi' → logprob: -14.25262451171875
    8. '(to' → logprob: -14.37762451171875
    9. '   ' → logprob: -14.50262451171875
    10. 'po' → logprob: -14.50262451171875

Token 1209: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012493413873016834
    2. '])' → logprob: -4.63749361038208
    3. '[' → logprob: -6.88749361038208
    4. ' )' → logprob: -7.38749361038208
    5. ')])' → logprob: -8.512493133544922
    6. '               ' → logprob: -8.887493133544922
    7. ')]' → logprob: -8.887493133544922
    8. ']' → logprob: -9.012493133544922
    9. ')
' → logprob: -9.137493133544922
    10. '))' → logprob: -9.512493133544922

Token 1210: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2717666029930115
    2. '                   ' → logprob: -2.2717666625976562
    3. ')' → logprob: -2.6467666625976562
    4. '[' → logprob: -3.8967666625976562
    5. '<|end|>' → logprob: -4.646766662597656
    6. '=' → logprob: -4.771766662597656
    7. ' =' → logprob: -4.896766662597656
    8. '           ' → logprob: -5.896766662597656
    9. ']' → logprob: -6.146766662597656
    10. '                       ' → logprob: -6.396766662597656

Token 1211: ' cette' (ID: 7696)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.03818298876285553
    2. 'D' → logprob: -3.2881829738616943
    3. ' DIS' → logprob: -9.163183212280273
    4. '
' → logprob: -11.913183212280273
    5. '   ' → logprob: -11.913183212280273
    6. 'dis' → logprob: -11.913183212280273
    7. '	D' → logprob: -12.288183212280273
    8. ' D' → logprob: -12.913183212280273
    9. '(DIS' → logprob: -13.788183212280273
    10. 'DISC' → logprob: -14.163183212280273

Token 1212: ' ar' (ID: 646)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.25991174578666687
    2. 'tuple' → logprob: -2.2599117755889893
    3. 'edge' → logprob: -2.8849117755889893
    4. 'DIS' → logprob: -3.3849117755889893
    5. 'EDGE' → logprob: -5.25991153717041
    6. ' edge' → logprob: -5.63491153717041
    7. '[D' → logprob: -5.63491153717041
    8. '```' → logprob: -5.63491153717041
    9. 'ar' → logprob: -5.75991153717041
    10. ' D' → logprob: -5.75991153717041

Token 1213: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.002128137508407235
    2. 'c' → logprob: -7.8771281242370605
    3. 'ê' → logprob: -7.8771281242370605
    4. '[' → logprob: -8.377128601074219
    5. 'te' → logprob: -8.502128601074219
    6. 'ète' → logprob: -8.877128601074219
    7. 'Ê' → logprob: -9.252128601074219
    8. 'êt' → logprob: -9.377128601074219
    9. 'ç' → logprob: -9.502128601074219
    10. 'êtes' → logprob: -9.502128601074219

Token 1214: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02467275969684124
    2. '                   ' → logprob: -4.274672985076904
    3. '=' → logprob: -5.524672985076904
    4. ' =' → logprob: -6.024672985076904
    5. '.' → logprob: -6.649672985076904
    6. '                ' → logprob: -7.399672985076904
    7. '[' → logprob: -7.399672985076904
    8. '           ' → logprob: -8.524672508239746
    9. ')' → logprob: -8.774672508239746
    10. '                       ' → logprob: -8.774672508239746

Token 1215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7058553695678711
    2. '                   ' → logprob: -0.7058553695678711
    3. '                       ' → logprob: -5.455855369567871
    4. ' =' → logprob: -5.955855369567871
    5. '```' → logprob: -6.580855369567871
    6. 'DIS' → logprob: -7.580855369567871
    7. '                    
' → logprob: -7.955855369567871
    8. ':
' → logprob: -8.205855369567871
    9. '                
' → logprob: -8.205855369567871
    10. '                ' → logprob: -8.205855369567871

Token 1216: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' (adapté à ' DIS') → logprob: -0.008030308410525322
    2. '               ' → logprob: -4.883030414581299
    3. '                   ' → logprob: -8.00802993774414
    4. ' DIS' → logprob: -9.88302993774414
    5. 'for' → logprob: -11.25802993774414
    6. '                       ' → logprob: -11.63302993774414
    7. '           ' → logprob: -12.00802993774414
    8. '```' → logprob: -12.75802993774414
    9. '_DIS' → logprob: -13.38302993774414
    10. '   ' → logprob: -13.50802993774414

Token 1217: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.875006675720215
    4. ' [' → logprob: -16.00000762939453
    5. '[
' → logprob: -16.12500762939453
    6. 'D' → logprob: -16.62500762939453
    7. '```' → logprob: -17.62500762939453
    8. '	D' → logprob: -17.62500762939453
    9. '       ' → logprob: -18.12500762939453
    10. '\[' → logprob: -18.37500762939453

Token 1218: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.0039352066814899445
    2. '[D' → logprob: -6.12893533706665
    3. '[' → logprob: -7.25393533706665
    4. 'D' → logprob: -7.75393533706665
    5. '[C' → logprob: -9.128934860229492
    6. 'OICE' → logprob: -9.378934860229492
    7. '[I' → logprob: -9.503934860229492
    8. '
' → logprob: -9.628934860229492
    9. 'ICEF' → logprob: -9.878934860229492
    10. 'C' → logprob: -10.003934860229492

Token 1219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '[(' → logprob: -12.000007629394531
    3. '[
' → logprob: -15.000007629394531
    4. 'tuple' → logprob: -15.250007629394531
    5. '(tuple' → logprob: -16.62500762939453
    6. '```' → logprob: -16.62500762939453
    7. ' [' → logprob: -16.87500762939453
    8. '
' → logprob: -17.00000762939453
    9. '[[' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.37500762939453

Token 1220: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0003267639840487391
    2. '(tuple' → logprob: -8.250327110290527
    3. ' tuple' → logprob: -10.375327110290527
    4. '[' → logprob: -10.500327110290527
    5. '(' → logprob: -12.375327110290527
    6. '{' → logprob: -14.375327110290527
    7. 'sorted' → logprob: -14.500327110290527
    8. '```' → logprob: -15.125327110290527
    9. 'tu' → logprob: -15.375327110290527
    10. '   ' → logprob: -16.00032615661621

Token 1221: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.298079252243042
    2. '[' → logprob: -1.673079252243042
    3. 'sorted' → logprob: -2.673079252243042
    4. '[(' → logprob: -7.173079490661621
    5. 'tuple' → logprob: -9.173079490661621
    6. '(tuple' → logprob: -9.173079490661621
    7. '([' → logprob: -10.548079490661621
    8. '.sorted' → logprob: -11.548079490661621
    9. '(' → logprob: -11.673079490661621
    10. '_sorted' → logprob: -12.048079490661621

Token 1222: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01417373027652502
    2. '[' → logprob: -4.26417350769043
    3. '(sorted' → logprob: -11.76417350769043
    4. '[(' → logprob: -13.88917350769043
    5. '[[' → logprob: -14.76417350769043
    6. '((' → logprob: -15.63917350769043
    7. '[p' → logprob: -15.76417350769043
    8. '(([' → logprob: -15.88917350769043
    9. '(' → logprob: -16.26417350769043
    10. '       ' → logprob: -16.38917350769043

Token 1223: 'po' (ID: 2519)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2842308680992573e-05
    2. '(po' → logprob: -11.125022888183594
    3. ' [' → logprob: -12.500022888183594
    4. 'po' → logprob: -13.375022888183594
    5. '   ' → logprob: -14.375022888183594
    6. '([' → logprob: -14.500022888183594
    7. '       ' → logprob: -14.750022888183594
    8. '[
' → logprob: -15.000022888183594
    9. '[p' → logprob: -15.625022888183594
    10. '[pos' → logprob: -15.750022888183594

Token 1224: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39005839824676514
    2. ',' → logprob: -1.2650583982467651
    3. '[to' → logprob: -3.2650585174560547
    4. '       ' → logprob: -7.265058517456055
    5. ',to' → logprob: -7.390058517456055
    6. '   ' → logprob: -8.390058517456055
    7. '               ' → logprob: -8.515058517456055
    8. '(to' → logprob: -8.515058517456055
    9. ' [' → logprob: -8.640058517456055
    10. ',[' → logprob: -9.015058517456055

Token 1225: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20342451333999634
    2. '[to' → logprob: -1.7034244537353516
    3. ' to' → logprob: -6.953424453735352
    4. '[' → logprob: -7.328424453735352
    5. '(to' → logprob: -8.578424453735352
    6. '   ' → logprob: -9.328424453735352
    7. ' [' → logprob: -9.328424453735352
    8. '       ' → logprob: -10.953424453735352
    9. 'po' → logprob: -12.828424453735352
    10. '	to' → logprob: -13.078424453735352

Token 1226: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.003613728331401944
    2. '])]' → logprob: -6.8786139488220215
    3. '])' → logprob: -7.0036139488220215
    4. '()' → logprob: -7.1286139488220215
    5. '))' → logprob: -8.003613471984863
    6. '()))' → logprob: -8.753613471984863
    7. '']))' → logprob: -9.628613471984863
    8. '"]))' → logprob: -9.628613471984863
    9. '])))' → logprob: -9.878613471984863
    10. ']])' → logprob: -9.878613471984863

Token 1227: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010521204239921644
    2. ']=' → logprob: -9.750104904174805
    3. ' ]' → logprob: -10.000104904174805
    4. '=' → logprob: -14.750104904174805
    5. ')]' → logprob: -14.750104904174805
    6. ']]' → logprob: -14.750104904174805
    7. '`]' → logprob: -16.250104904174805
    8. ']
' → logprob: -16.375104904174805
    9. '   ' → logprob: -16.625104904174805
    10. '()]' → logprob: -17.125104904174805

Token 1228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002078503370285
    2. ' =' → logprob: -2.350207805633545
    3. ']' → logprob: -14.725208282470703
    4. ']=' → logprob: -14.850208282470703
    5. '[' → logprob: -16.100208282470703
    6. '+=' → logprob: -16.725208282470703
    7. '＝' → logprob: -16.850208282470703
    8. '=
' → logprob: -17.225208282470703
    9. ' +=' → logprob: -17.225208282470703
    10. ')' → logprob: -17.350208282470703

Token 1229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20252671837806702
    2. ' x' → logprob: -1.7025266885757446
    3. '(x' → logprob: -6.827526569366455
    4. ' (' → logprob: -10.577527046203613
    5. '(' → logprob: -13.452527046203613
    6. '{x' → logprob: -14.077527046203613
    7. '	x' → logprob: -14.452527046203613
    8. ' ' → logprob: -15.077527046203613
    9. '`' → logprob: -15.702527046203613
    10. ' ' → logprob: -15.952527046203613

Token 1230: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026406772434711456
    2. '-' → logprob: -3.651406764984131
    3. ' +' → logprob: -11.276407241821289
    4. ' ' → logprob: -11.401407241821289
    5. ' ' → logprob: -11.526407241821289
    6. '+' → logprob: -11.526407241821289
    7. '   ' → logprob: -11.776407241821289
    8. '```' → logprob: -12.151407241821289
    9. '<|end|>' → logprob: -12.276407241821289
    10. '               ' → logprob: -12.401407241821289

Token 1231: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.627176768844947e-05
    2. ' D' → logprob: -9.250096321105957
    3. '	D' → logprob: -17.62509536743164
    4. ' ' → logprob: -18.12509536743164
    5. '   ' → logprob: -18.50009536743164
    6. ' ' → logprob: -19.62509536743164
    7. '  ' → logprob: -20.25009536743164
    8. '               ' → logprob: -21.50009536743164
    9. '_D' → logprob: -21.62509536743164
    10. 'd' → logprob: -21.75009536743164

Token 1232: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -8.2994620242971e-06
    2. 'to' → logprob: -11.750008583068848
    3. '[' → logprob: -15.250008583068848
    4. '(to' → logprob: -16.62500762939453
    5. 'toi' → logprob: -18.00000762939453
    6. '```' → logprob: -18.37500762939453
    7. ',to' → logprob: -18.62500762939453
    8. '[tmp' → logprob: -18.87500762939453
    9. '
' → logprob: -19.75000762939453
    10. '[
' → logprob: -19.75000762939453

Token 1233: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008987155742943287
    2. ')' → logprob: -5.008986949920654
    3. ']
' → logprob: -6.883986949920654
    4. '<|end|>' → logprob: -7.633986949920654
    5. '               ' → logprob: -8.133987426757812
    6. ' ]' → logprob: -8.758987426757812
    7. ')]' → logprob: -8.883987426757812
    8. '"]' → logprob: -10.258987426757812
    9. '}' → logprob: -10.383987426757812
    10. '           ' → logprob: -10.883987426757812

Token 1234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34971165657043457
    2. '<|end|>' → logprob: -1.7247116565704346
    3. '           ' → logprob: -2.8497116565704346
    4. '       ' → logprob: -3.7247116565704346
    5. '                   ' → logprob: -3.7247116565704346
    6. 'continue' → logprob: -6.3497114181518555
    7. '```' → logprob: -6.4747114181518555
    8. 'else' → logprob: -6.5997114181518555
    9. '                       ' → logprob: -6.8497114181518555
    10. '   ' → logprob: -7.3497114181518555

Token 1235: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1170295998454094
    2. 'continue' → logprob: -3.2420296669006348
    3. '<|end|>' → logprob: -3.3670296669006348
    4. '                   ' → logprob: -4.492029666900635
    5. '           ' → logprob: -4.617029666900635
    6. '       ' → logprob: -4.867029666900635
    7. ' continue' → logprob: -5.617029666900635
    8. 'else' → logprob: -6.492029666900635
    9. '                       ' → logprob: -7.367029666900635
    10. '   ' → logprob: -7.617029666900635

Token 1236: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1237: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20892633497714996
    2. 'for' → logprob: -2.4589264392852783
    3. '#' → logprob: -2.5839264392852783
    4. 'else' → logprob: -4.333926200866699
    5. '
' → logprob: -5.083926200866699
    6. '```' → logprob: -6.083926200866699
    7. ')' → logprob: -6.208926200866699
    8. '   ' → logprob: -6.583926200866699
    9. '<|end|>' → logprob: -7.833926200866699
    10. ' for' → logprob: -7.833926200866699

Token 1238: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0454347133636475
    2. 'else' → logprob: -1.1704347133636475
    3. '<|end|>' → logprob: -1.5454347133636475
    4. '#' (adapté à ' #') → logprob: -3.1704347133636475
    5. '   ' → logprob: -3.4204347133636475
    6. 'print' → logprob: -4.545434951782227
    7. '           ' → logprob: -4.920434951782227
    8. ' else' → logprob: -5.045434951782227
    9. '        ' → logprob: -5.170434951782227
    10. '               ' → logprob: -5.670434951782227

Token 1239: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6107714176177979
    2. '<|end|>' → logprob: -1.4857714176177979
    3. 'else' → logprob: -2.110771417617798
    4. '       ' → logprob: -3.110771417617798
    5. '#' → logprob: -4.235771179199219
    6. ' continue' → logprob: -4.235771179199219
    7. '	continue' → logprob: -4.860771179199219
    8. 'pass' → logprob: -5.110771179199219
    9. '        ' → logprob: -5.735771179199219
    10. '	' → logprob: -5.985771179199219

Token 1240: ' les' (ID: 1341)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.026385173201560974
    2. ' DEC' → logprob: -3.7763850688934326
    3. 'D' → logprob: -6.776385307312012
    4. 'DIS' → logprob: -6.901385307312012
    5. 'to' → logprob: -7.651385307312012
    6. 'dec' → logprob: -8.776385307312012
    7. ' D' → logprob: -9.776385307312012
    8. 'x' → logprob: -10.026385307312012
    9. ' to' → logprob: -10.151385307312012
    10. '   ' → logprob: -10.401385307312012

Token 1241: ' deux' (ID: 10301)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.35703346133232117
    2. 'to' → logprob: -1.6070334911346436
    3. ' DEC' → logprob: -3.6070334911346436
    4. ' to' → logprob: -3.8570334911346436
    5. 'DIS' → logprob: -4.1070332527160645
    6. 'D' → logprob: -4.3570332527160645
    7. 'po' → logprob: -4.9820332527160645
    8. 'x' → logprob: -5.9820332527160645
    9. '   ' → logprob: -6.6070332527160645
    10. 'dec' → logprob: -6.6070332527160645

Token 1242: ' sont' (ID: 5242)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.3732794225215912
    2. 's' → logprob: -2.123279333114624
    3. '!=' → logprob: -3.623279333114624
    4. ' po' → logprob: -3.748279333114624
    5. 'DEC' → logprob: -4.123279571533203
    6. ' are' → logprob: -4.248279571533203
    7. '.' → logprob: -4.498279571533203
    8. ' DEC' → logprob: -4.498279571533203
    9. '!' → logprob: -4.748279571533203
    10. '=' → logprob: -4.748279571533203

Token 1243: ' déjà' (ID: 21229)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.03248259052634239
    2. 'color' → logprob: -3.782482624053955
    3. ' color' → logprob: -6.282482624053955
    4. '"' → logprob: -6.782482624053955
    5. 'po' → logprob: -6.782482624053955
    6. '"""' → logprob: -7.157482624053955
    7. '!=' → logprob: -7.907482624053955
    8. ' ""' → logprob: -7.907482624053955
    9. '"":' → logprob: -7.907482624053955
    10. ' !=' → logprob: -8.032482147216797

Token 1244: ' color' (ID: 3089)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2985202670097351
    2. 'color' → logprob: -1.6735203266143799
    3. ' color' → logprob: -2.92352032661438
    4. 'colored' → logprob: -4.923520088195801
    5. '"' → logprob: -6.423520088195801
    6. '"":' → logprob: -6.798520088195801
    7. '"""' → logprob: -6.923520088195801
    8. '=""' → logprob: -7.173520088195801
    9. ' ""' → logprob: -7.548520088195801
    10. '!=' → logprob: -7.673520088195801

Token 1245: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.33942583203315735
    2. 'é' → logprob: -2.089425802230835
    3. 'ié' → logprob: -2.589425802230835
    4. 'ées' → logprob: -3.714425802230835
    5. '"' → logprob: -3.839425802230835
    6. 'ied' → logprob: -5.089426040649414
    7. '""' → logprob: -5.089426040649414
    8. 'ed' → logprob: -5.214426040649414
    9. '=' → logprob: -5.339426040649414
    10. 'éd' → logprob: -5.339426040649414

Token 1246: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4054921567440033
    2. ' et' → logprob: -1.4054921865463257
    3. 'and' → logprob: -3.655492067337036
    4. 'et' → logprob: -3.780492067337036
    5. ',' → logprob: -4.405492305755615
    6. '               ' → logprob: -4.530492305755615
    7. ':
' → logprob: -5.530492305755615
    8. '           ' → logprob: -5.655492305755615
    9. ':' → logprob: -6.280492305755615
    10. ' !=' → logprob: -6.655492305755615

Token 1247: ' ont' (ID: 4930)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.062211912125349045
    2. 'different' → logprob: -4.062211990356445
    3. 'not' → logprob: -4.687211990356445
    4. ' DEC' → logprob: -5.187211990356445
    5. ' different' → logprob: -5.437211990356445
    6. '   ' → logprob: -5.562211990356445
    7. 'diff' → logprob: -6.062211990356445
    8. 'DIS' → logprob: -6.437211990356445
    9. 'po' → logprob: -6.437211990356445
    10. 'dec' → logprob: -6.437211990356445

Token 1248: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.320559561252594
    2. 'la' → logprob: -2.320559501647949
    3. 'diff' → logprob: -2.695559501647949
    4. ' différentes' → logprob: -3.570559501647949
    5. 'une' → logprob: -3.820559501647949
    6. ' une' → logprob: -4.320559501647949
    7. 'different' → logprob: -4.570559501647949
    8. ' différente' → logprob: -4.820559501647949
    9. ' different' → logprob: -5.070559501647949
    10. 'not' → logprob: -5.320559501647949

Token 1249: ' couleur' (ID: 48005)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07854072004556656
    2. 'cou' → logprob: -2.703540802001953
    3. ' différente' → logprob: -5.578540802001953
    4. ' couleur' → logprob: -6.203540802001953
    5. ' différence' → logprob: -7.328540802001953
    6. 'different' → logprob: -7.453540802001953
    7. '```' → logprob: -7.453540802001953
    8. 'd' → logprob: -8.203540802001953
    9. ' diff' → logprob: -8.703540802001953
    10. 'val' → logprob: -9.328540802001953

Token 1250: ' différente' (ID: 140707)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.13022716343402863
    2. ' différente' → logprob: -2.1302270889282227
    3. 'different' → logprob: -6.005227088928223
    4. 'd' → logprob: -8.380227088928223
    5. '```' → logprob: -8.505227088928223
    6. '   ' → logprob: -9.380227088928223
    7. ' différent' → logprob: -9.505227088928223
    8. ' différentes' → logprob: -9.880227088928223
    9. 'dif' → logprob: -10.505227088928223
    10. ' different' → logprob: -10.630227088928223

Token 1251: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5787484049797058
    2. '               ' → logprob: -1.3287484645843506
    3. ':
' → logprob: -1.9537484645843506
    4. ',' → logprob: -3.7037484645843506
    5. ' and' → logprob: -5.2037482261657715
    6. 'and' → logprob: -7.2037482261657715
    7. '           ' → logprob: -7.4537482261657715
    8. ' continue' → logprob: -7.8287482261657715
    9. 'continue' → logprob: -8.20374870300293
    10. ' :' → logprob: -9.07874870300293

Token 1252: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07808403670787811
    2. ' continue' → logprob: -3.0780839920043945
    3. 'continue' → logprob: -3.5780839920043945
    4. '                   ' → logprob: -7.8280839920043945
    5. '```' → logprob: -8.078083992004395
    6. '           ' → logprob: -9.078083992004395
    7. '			' → logprob: -9.828083992004395
    8. '                
' → logprob: -10.453083992004395
    9. '                ' → logprob: -10.453083992004395
    10. '   ' → logprob: -10.703083992004395

Token 1253: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07319266349077225
    2. ' else' → logprob: -3.323192596435547
    3. 'else' → logprob: -3.948192596435547
    4. ' continue' → logprob: -4.573192596435547
    5. '           ' → logprob: -6.448192596435547
    6. '                   ' → logprob: -7.198192596435547
    7. 'continue' → logprob: -7.448192596435547
    8. '			' → logprob: -7.948192596435547
    9. ' elif' → logprob: -8.073192596435547
    10. '                ' → logprob: -8.073192596435547

Token 1254: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.029926015064120293
    2. ' DEC' → logprob: -3.529926061630249
    3. 'D' → logprob: -9.904926300048828
    4. '   ' → logprob: -10.404926300048828
    5. 'True' → logprob: -10.529926300048828
    6. 'False' → logprob: -11.404926300048828
    7. 'DIS' → logprob: -11.529926300048828
    8. 'dec' → logprob: -11.779926300048828
    9. '_DEC' → logprob: -12.029926300048828
    10. 'DE' → logprob: -12.154926300048828

Token 1255: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.03619236499071121
    2. 'DEC' → logprob: -3.4111924171447754
    3. 'ED' → logprob: -6.286192417144775
    4. 'IDE' → logprob: -8.661191940307617
    5. 'DED' → logprob: -9.411191940307617
    6. '_DEC' → logprob: -9.911191940307617
    7. '```' → logprob: -9.911191940307617
    8. 'IED' → logprob: -10.036191940307617
    9. 'IC' → logprob: -10.161191940307617
    10. 'Dec' → logprob: -10.161191940307617

Token 1256: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.0037648091092705727
    2. 'DEC' → logprob: -5.753764629364014
    3. 'DED' → logprob: -7.753764629364014
    4. '[' → logprob: -9.753765106201172
    5. '[to' → logprob: -10.003765106201172
    6. 'to' → logprob: -10.503765106201172
    7. '
' → logprob: -11.878765106201172
    8. '```' → logprob: -12.378765106201172
    9. 'D' → logprob: -13.628765106201172
    10. '{' → logprob: -13.753765106201172

Token 1257: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.1269364058971405
    2. '[' → logprob: -2.126936435699463
    3. 'to' → logprob: -12.001935958862305
    4. ' [' → logprob: -13.876935958862305
    5. '```' → logprob: -14.876935958862305
    6. '   ' → logprob: -15.501935958862305
    7. '(to' → logprob: -15.751935958862305
    8. '       ' → logprob: -16.876935958862305
    9. '[
' → logprob: -16.876935958862305
    10. '               ' → logprob: -17.001935958862305

Token 1258: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.524631679058075
    2. ']' → logprob: -1.0246317386627197
    3. ' !=' → logprob: -3.3996317386627197
    4. '!=' → logprob: -4.774631500244141
    5. ']!=' → logprob: -5.774631500244141
    6. '[to' → logprob: -5.899631500244141
    7. '```' → logprob: -7.524631500244141
    8. '][' → logprob: -8.27463150024414
    9. 'to' → logprob: -8.89963150024414
    10. ' ]' → logprob: -9.02463150024414

Token 1259: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22549568116664886
    2. '!=' → logprob: -1.60049569606781
    3. '==' → logprob: -10.600495338439941
    4. ' ==' → logprob: -10.600495338439941
    5. ']!=' → logprob: -11.100495338439941
    6. '!="' → logprob: -12.600495338439941
    7. '```' → logprob: -12.600495338439941
    8. ')!=' → logprob: -12.850495338439941
    9. ' ' → logprob: -13.100495338439941
    10. '()!=' → logprob: -13.100495338439941

Token 1260: ' ""' (ID: 3216)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.008648726157844067
    2. ' ""' → logprob: -4.758648872375488
    3. '"' → logprob: -10.883648872375488
    4. '''' → logprob: -12.508648872375488
    5. '"":' → logprob: -12.633648872375488
    6. 'po' → logprob: -12.883648872375488
    7. '=""' → logprob: -14.008648872375488
    8. ' "":
' → logprob: -14.008648872375488
    9. ' ' → logprob: -14.258648872375488
    10. '"",' → logprob: -14.258648872375488

Token 1261: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889749854803085
    2. 'and' → logprob: -2.578897476196289
    3. ' ' → logprob: -12.703897476196289
    4. ' ' → logprob: -13.953897476196289
    5. '           ' → logprob: -14.453897476196289
    6. '```' → logprob: -14.578897476196289
    7. '            ' → logprob: -14.953897476196289
    8. '	and' → logprob: -15.203897476196289
    9. ' и' → logprob: -15.328897476196289
    10. ' !=' → logprob: -15.703897476196289

Token 1262: ' DEC' (ID: 65456)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.014187362976372242
    2. ' DEC' → logprob: -4.264187335968018
    3. '   ' → logprob: -11.389187812805176
    4. '_DEC' → logprob: -12.139187812805176
    5. 'D' → logprob: -13.139187812805176
    6. 'DE' → logprob: -13.264187812805176
    7. 'dec' → logprob: -14.014187812805176
    8. ' ' → logprob: -14.889187812805176
    9. '	' → logprob: -14.889187812805176
    10. '
' → logprob: -15.264187812805176

Token 1263: 'ID' (ID: 1240)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.020557772368192673
    2. 'ED' → logprob: -4.020557880401611
    3. 'ID' → logprob: -6.520557880401611
    4. 'EC' → logprob: -8.145557403564453
    5. 'DED' → logprob: -8.395557403564453
    6. '_DEC' → logprob: -8.895557403564453
    7. '{' → logprob: -9.395557403564453
    8. '[' → logprob: -10.645557403564453
    9. 'DE' → logprob: -10.645557403564453
    10. 'PO' → logprob: -11.020557403564453

Token 1264: 'ED' (ID: 2252)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.01090786512941122
    2. '[' → logprob: -5.6359076499938965
    3. ' DEC' → logprob: -6.2609076499938965
    4. 'po' → logprob: -7.0109076499938965
    5. 'PO' → logprob: -7.1359076499938965
    6. '   ' → logprob: -7.2609076499938965
    7. 'ED' → logprob: -7.3859076499938965
    8. '_DEC' → logprob: -7.6359076499938965
    9. ' ' → logprob: -8.635908126831055
    10. '```' → logprob: -8.760908126831055

Token 1265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016131732612848282
    2. 'po' → logprob: -4.76613187789917
    3. '!=' → logprob: -5.39113187789917
    4. ' !=' → logprob: -6.14113187789917
    5. ' po' → logprob: -7.76613187789917
    6. ' [' → logprob: -9.766131401062012
    7. '```' → logprob: -9.766131401062012
    8. '[to' → logprob: -9.891131401062012
    9. 'to' → logprob: -10.016131401062012
    10. '(po' → logprob: -10.141131401062012

Token 1266: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0005985465249978006
    2. ' po' → logprob: -8.000598907470703
    3. '""' → logprob: -8.500598907470703
    4. 'to' → logprob: -10.875598907470703
    5. '"' → logprob: -11.000598907470703
    6. 'DEC' → logprob: -11.250598907470703
    7. '[' → logprob: -13.375598907470703
    8. '(po' → logprob: -14.000598907470703
    9. 'poi' → logprob: -14.125598907470703
    10. '   ' → logprob: -14.125598907470703

Token 1267: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05038776621222496
    2. '!=' → logprob: -3.6753878593444824
    3. ']' → logprob: -4.050387859344482
    4. ']!=' → logprob: -5.800387859344482
    5. ' ==' → logprob: -5.925387859344482
    6. '==' → logprob: -7.675387859344482
    7. '```' → logprob: -9.800387382507324
    8. ']==' → logprob: -9.925387382507324
    9. '[' → logprob: -10.800387382507324
    10. ' ' → logprob: -11.050387382507324

Token 1268: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.038366202265024185
    2. ' !=' → logprob: -3.2883663177490234
    3. '==' → logprob: -8.413366317749023
    4. '```' → logprob: -10.038366317749023
    5. ']!=' → logprob: -11.288366317749023
    6. '()!=' → logprob: -11.538366317749023
    7. '!==' → logprob: -12.163366317749023
    8. '!="' → logprob: -12.413366317749023
    9. ')!=' → logprob: -12.663366317749023
    10. '!=(' → logprob: -12.663366317749023

Token 1269: ' DEC' (ID: 65456)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.020217403769493103
    2. 'to' → logprob: -4.520217418670654
    3. '"":' → logprob: -5.145217418670654
    4. '"' → logprob: -5.770217418670654
    5. ' "":
' → logprob: -9.895216941833496
    6. 'DEC' → logprob: -10.145216941833496
    7. ' ""' → logprob: -10.395216941833496
    8. '"",' → logprob: -11.770216941833496
    9. '''' → logprob: -11.895216941833496
    10. ' to' → logprob: -12.145216941833496

Token 1270: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -0.0013435659930109978
    2. 'ED' → logprob: -6.626343727111816
    3. 'IDE' → logprob: -12.126343727111816
    4. 'I' → logprob: -12.251343727111816
    5. 'IED' → logprob: -12.876343727111816
    6. 'IC' → logprob: -13.876343727111816
    7. 'ided' → logprob: -14.751343727111816
    8. '
' → logprob: -14.751343727111816
    9. '

' → logprob: -15.001343727111816
    10. '\' → logprob: -15.001343727111816

Token 1271: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -0.000947545631788671
    2. 'EC' → logprob: -8.000947952270508
    3. 'DEC' → logprob: -8.250947952270508
    4. 'IC' → logprob: -8.500947952270508
    5. '""' → logprob: -10.125947952270508
    6. 'IED' → logprob: -11.250947952270508
    7. 'DED' → logprob: -11.250947952270508
    8. '"' → logprob: -11.500947952270508
    9. 'ITED' → logprob: -11.500947952270508
    10. 'E' → logprob: -11.750947952270508

Token 1272: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.0017652629176154733
    2. '[' → logprob: -6.501765251159668
    3. 'to' → logprob: -8.251765251159668
    4. '(to' → logprob: -14.626765251159668
    5. 'toi' → logprob: -14.876765251159668
    6. '```' → logprob: -15.251765251159668
    7. 'To' → logprob: -15.626765251159668
    8. 'TO' → logprob: -15.751765251159668
    9. '   ' → logprob: -16.376766204833984
    10. '	to' → logprob: -16.501766204833984

Token 1273: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6552423238754272
    2. ':' → logprob: -1.1552423238754272
    3. ']:
' → logprob: -1.9052423238754272
    4. '               ' → logprob: -4.655242443084717
    5. ']:' → logprob: -5.030242443084717
    6. ']' → logprob: -8.155241966247559
    7. '):
' → logprob: -9.405241966247559
    8. ']:
' → logprob: -9.530241966247559
    9. '           ' → logprob: -9.655241966247559
    10. '"]:
' → logprob: -9.780241966247559

Token 1274: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006416924763470888
    2. 'continue' → logprob: -5.8814167976379395
    3. ' continue' → logprob: -6.1314167976379395
    4. ':' → logprob: -7.5064167976379395
    5. ':
' → logprob: -8.006417274475098
    6. '                   ' → logprob: -8.881417274475098
    7. '			' → logprob: -9.631417274475098
    8. '	continue' → logprob: -9.631417274475098
    9. '           ' → logprob: -9.756417274475098
    10. '```' → logprob: -9.881417274475098

Token 1275: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3030050992965698
    2. 'continue' → logprob: -1.5530050992965698
    3. ' continue' → logprob: -3.6780052185058594
    4. '                   ' → logprob: -3.8030052185058594
    5. '```' → logprob: -7.553005218505859
    6. '   ' → logprob: -7.803005218505859
    7. '			' → logprob: -8.30300521850586
    8. '                       ' → logprob: -8.30300521850586
    9. 'pass' → logprob: -8.55300521850586
    10. '	continue' → logprob: -8.80300521850586

Token 1276: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.335405170917511
    2. 'DIS' → logprob: -1.3354051113128662
    3. '               ' → logprob: -4.960405349731445
    4. 'pass' → logprob: -5.085405349731445
    5. '                   ' → logprob: -5.335405349731445
    6. '           ' → logprob: -7.085405349731445
    7. 'break' → logprob: -7.085405349731445
    8. ' continue' → logprob: -7.210405349731445
    9. '   ' → logprob: -7.710405349731445
    10. '                       ' → logprob: -7.960405349731445

Token 1277: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16387048363685608
    2. ' x' → logprob: -1.9138704538345337
    3. 'D' → logprob: -5.913870334625244
    4. ' D' → logprob: -7.413870334625244
    5. 'DIS' → logprob: -8.288870811462402
    6. ' DIS' → logprob: -11.038870811462402
    7. 'DEC' → logprob: -11.288870811462402
    8. '(x' → logprob: -11.538870811462402
    9. '   ' → logprob: -11.538870811462402
    10. '	x' → logprob: -12.038870811462402

Token 1278: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.30545783042907715
    2. ' <=' → logprob: -2.055457830429077
    3. ' <' → logprob: -2.305457830429077
    4. '>' → logprob: -3.555457830429077
    5. '<' → logprob: -6.180458068847656
    6. '<=' → logprob: -6.180458068847656
    7. ' ==' → logprob: -6.430458068847656
    8. ' >=' → logprob: -7.430458068847656
    9. ' !=' → logprob: -8.805458068847656
    10. '==' → logprob: -8.805458068847656

Token 1279: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21633431315422058
    2. ' <=' → logprob: -2.466334342956543
    3. '>' → logprob: -2.591334342956543
    4. ' <' → logprob: -3.841334342956543
    5. '<=' → logprob: -5.341334342956543
    6. '<' → logprob: -5.716334342956543
    7. ' ==' → logprob: -6.216334342956543
    8. ' >=' → logprob: -6.216334342956543
    9. '==' → logprob: -7.716334342956543
    10. ' !=' → logprob: -7.841334342956543

Token 1280: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4288076162338257
    2. ' D' → logprob: -1.0538076162338257
    3. ' ' → logprob: -10.678807258605957
    4. '	D' → logprob: -10.678807258605957
    5. ' ' → logprob: -10.928807258605957
    6. '   ' → logprob: -11.553807258605957
    7. 'x' → logprob: -11.678807258605957
    8. ' x' → logprob: -11.803807258605957
    9. '                   ' → logprob: -12.178807258605957
    10. '0' → logprob: -12.428807258605957

Token 1281: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.07013349235057831
    2. '[' → logprob: -2.6951334476470947
    3. 'to' → logprob: -8.570133209228516
    4. 'x' → logprob: -13.570133209228516
    5. '[x' → logprob: -13.945133209228516
    6. '(to' → logprob: -14.445133209228516
    7. '```' → logprob: -14.570133209228516
    8. 'xto' → logprob: -14.820133209228516
    9. ' [' → logprob: -15.070133209228516
    10. 'po' → logprob: -15.070133209228516

Token 1282: '],' (ID: 2155)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1638534814119339
    2. ':
' → logprob: -3.038853406906128
    3. '               ' → logprob: -3.163853406906128
    4. '                   ' → logprob: -3.788853406906128
    5. ':' → logprob: -4.038853645324707
    6. ']:' → logprob: -4.288853645324707
    7. '):
' → logprob: -6.038853645324707
    8. ']' → logprob: -6.663853645324707
    9. '']:
' → logprob: -6.913853645324707
    10. '```' → logprob: -7.663853645324707

Token 1283: ' rien' (ID: 23082)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.11774173378944397
    2. '                   ' → logprob: -2.492741823196411
    3. ' continue' → logprob: -4.117741584777832
    4. '               ' → logprob: -4.492741584777832
    5. '   ' → logprob: -7.367741584777832
    6. '                       ' → logprob: -9.242741584777832
    7. '	continue' → logprob: -9.492741584777832
    8. '```' → logprob: -9.867741584777832
    9. '           ' → logprob: -10.742741584777832
    10. 'break' → logprob: -11.492741584777832

Token 1284: ' à' (ID: 1221)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.46447232365608215
    2. '                   ' → logprob: -1.3394722938537598
    3. ' continue' → logprob: -2.3394722938537598
    4. ':' → logprob: -5.08947229385376
    5. '               ' → logprob: -5.83947229385376
    6. '	continue' → logprob: -6.08947229385376
    7. ':
' → logprob: -6.96447229385376
    8. ' continues' → logprob: -8.339472770690918
    9. '_continue' → logprob: -8.589472770690918
    10. '                       ' → logprob: -9.214472770690918

Token 1285: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.012689401395618916
    2. ' faire' → logprob: -4.887689590454102
    3. 'print' → logprob: -6.137689590454102
    4. 'fait' → logprob: -7.262689590454102
    5. 'f' → logprob: -7.387689590454102
    6. 'do' → logprob: -8.012689590454102
    7. '```' → logprob: -8.012689590454102
    8. 'continue' → logprob: -8.637689590454102
    9. 'contin' → logprob: -8.637689590454102
    10. 'fare' → logprob: -9.012689590454102

Token 1286: ' pour' (ID: 1930)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8298336863517761
    2. 'continue' → logprob: -1.079833745956421
    3. '               ' → logprob: -2.079833745956421
    4. ' continue' → logprob: -2.704833745956421
    5. ':
' → logprob: -3.954833745956421
    6. ':' → logprob: -4.454833507537842
    7. '                       ' → logprob: -7.454833507537842
    8. '	continue' → logprob: -7.579833507537842
    9. '.' → logprob: -8.704833984375
    10. '   ' → logprob: -9.579833984375

Token 1287: ' cette' (ID: 7696)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.013988254591822624
    2. 'contin' → logprob: -4.638988018035889
    3. 'this' → logprob: -5.763988018035889
    4. ' continue' → logprob: -7.388988018035889
    5. 'pass' → logprob: -8.513988494873047
    6. ' cette' → logprob: -9.138988494873047
    7. 'continu' → logprob: -9.888988494873047
    8. 'ce' → logprob: -11.013988494873047
    9. 'c' → logprob: -11.138988494873047
    10. 'la' → logprob: -11.513988494873047

Token 1288: ' ar' (ID: 646)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2595287263393402
    2. 'continue' → logprob: -1.7595287561416626
    3. 'iteration' → logprob: -4.134528636932373
    4. '.' → logprob: -4.259528636932373
    5. '```' → logprob: -5.259528636932373
    6. 'else' → logprob: -5.384528636932373
    7. 'ligne' → logprob: -5.509528636932373
    8. 'contin' → logprob: -5.634528636932373
    9. 'x' → logprob: -6.884528636932373
    10. 'for' → logprob: -7.009528636932373

Token 1289: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.038044705986976624
    2. 'ète' → logprob: -4.9130449295043945
    3. 'être' → logprob: -5.2880449295043945
    4. 'êt' → logprob: -5.9130449295043945
    5. 't' → logprob: -6.2880449295043945
    6. '#' → logprob: -6.2880449295043945
    7. '               ' → logprob: -6.6630449295043945
    8. 'ère' → logprob: -6.6630449295043945
    9. 'ège' → logprob: -6.7880449295043945
    10. 'ètre' → logprob: -6.9130449295043945

Token 1290: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46290770173072815
    2. 'continue' → logprob: -1.8379076719284058
    3. '               ' → logprob: -2.0879077911376953
    4. ' continue' → logprob: -3.0879077911376953
    5. ':' → logprob: -3.8379077911376953
    6. ':
' → logprob: -4.087907791137695
    7. '.' → logprob: -6.087907791137695
    8. '                       ' → logprob: -7.462907791137695
    9. '	continue' → logprob: -8.337907791137695
    10. '           ' → logprob: -8.962907791137695

Token 1291: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12208621203899384
    2. 'continue' → logprob: -2.3720862865448
    3. '               ' → logprob: -4.122086048126221
    4. ' continue' → logprob: -5.872086048126221
    5. '   ' → logprob: -6.872086048126221
    6. '                       ' → logprob: -7.497086048126221
    7. '```' → logprob: -7.997086048126221
    8. '{
' → logprob: -8.872086524963379
    9. '           ' → logprob: -8.997086524963379
    10. '	continue' → logprob: -8.997086524963379

Token 1292: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48483842611312866
    2. 'continue' → logprob: -1.4848384857177734
    3. ' continue' → logprob: -2.1098384857177734
    4. '               ' → logprob: -3.6098384857177734
    5. ' if' → logprob: -5.984838485717773
    6. 'if' (adapté à ' if') → logprob: -6.109838485717773
    7. '	continue' → logprob: -6.484838485717773
    8. '                       ' → logprob: -6.734838485717773
    9. '				' → logprob: -7.359838485717773
    10. '   ' → logprob: -8.234838485717773

Token 1293: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03364858031272888
    2. ' x' → logprob: -3.4086484909057617
    3. '   ' → logprob: -13.658648490905762
    4. '	x' → logprob: -14.158648490905762
    5. ' ' → logprob: -15.283648490905762
    6. ' ' → logprob: -15.908648490905762
    7. '0' → logprob: -16.158649444580078
    8. '(x' → logprob: -16.408649444580078
    9. 'False' → logprob: -16.408649444580078
    10. 'not' → logprob: -16.533649444580078

Token 1294: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04992483928799629
    2. '<=' → logprob: -3.299924850463867
    3. ' >' → logprob: -4.674924850463867
    4. '>' → logprob: -6.299924850463867
    5. ' <' → logprob: -7.549924850463867
    6. '<' → logprob: -9.174924850463867
    7. ' >=' → logprob: -11.174924850463867
    8. '>=' → logprob: -12.924924850463867
    9. ' ==' → logprob: -14.174924850463867
    10. ' ' → logprob: -14.299924850463867

Token 1295: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.033654000610113144
    2. ' D' → logprob: -3.408653974533081
    3. ' ' → logprob: -12.40865421295166
    4. '   ' → logprob: -13.15865421295166
    5. '	D' → logprob: -14.15865421295166
    6. '  ' → logprob: -14.65865421295166
    7. '
' → logprob: -14.90865421295166
    8. ' ' → logprob: -16.033653259277344
    9. '    ' → logprob: -16.408653259277344
    10. '0' → logprob: -17.033653259277344

Token 1296: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'to' → logprob: -16.125
    4. '   ' → logprob: -17.75
    5. ' [' → logprob: -17.875
    6. '(to' → logprob: -18.25
    7. '
' → logprob: -18.875
    8. 'D' → logprob: -19.375
    9. '[tmp' → logprob: -19.375
    10. '[[' → logprob: -19.75

Token 1297: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2970952093601227
    2. ':' → logprob: -1.7970951795578003
    3. '                   ' → logprob: -2.42209529876709
    4. '               ' → logprob: -6.17209529876709
    5. '           ' → logprob: -9.17209529876709
    6. 'continue' → logprob: -9.29709529876709
    7. ':return' → logprob: -9.42209529876709
    8. ' continue' → logprob: -9.92209529876709
    9. '                       ' → logprob: -10.17209529876709
    10. '):
' → logprob: -10.54709529876709

Token 1298: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00530040031298995
    2. 'continue' → logprob: -5.630300521850586
    3. ' continue' → logprob: -7.130300521850586
    4. ':' → logprob: -8.255300521850586
    5. '               ' → logprob: -8.255300521850586
    6. ':
' → logprob: -8.505300521850586
    7. '                       ' → logprob: -9.255300521850586
    8. '	continue' → logprob: -10.380300521850586
    9. '				' → logprob: -11.255300521850586
    10. '           ' → logprob: -11.755300521850586

Token 1299: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10490535199642181
    2. '                   ' → logprob: -2.354905366897583
    3. ' continue' → logprob: -5.479905128479004
    4. '                       ' → logprob: -8.354905128479004
    5. '               ' → logprob: -8.979905128479004
    6. '	continue' → logprob: -9.604905128479004
    7. 'break' → logprob: -10.354905128479004
    8. '   ' → logprob: -10.854905128479004
    9. '				' → logprob: -10.979905128479004
    10. '```' → logprob: -11.979905128479004

Token 1300: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002783600240945816
    2. '                   ' → logprob: -6.25278377532959
    3. 'else' → logprob: -7.62778377532959
    4. 'continue' → logprob: -8.37778377532959
    5. '           ' → logprob: -10.25278377532959
    6. ' else' → logprob: -10.75278377532959
    7. '```' → logprob: -10.87778377532959
    8. ' continue' → logprob: -11.12778377532959
    9. '       ' → logprob: -11.62778377532959
    10. '                       ' → logprob: -11.87778377532959

Token 1301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017031598836183548
    2. 'else' → logprob: -4.767031669616699
    3. '                   ' → logprob: -5.142031669616699
    4. '           ' → logprob: -7.017031669616699
    5. 'continue' → logprob: -7.267031669616699
    6. ' else' → logprob: -8.2670316696167
    7. '       ' → logprob: -8.3920316696167
    8. '                       ' → logprob: -9.2670316696167
    9. '```' → logprob: -9.5170316696167
    10. ' continue' → logprob: -9.7670316696167

Token 1302: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19967778027057648
    2. 'DIS' → logprob: -2.0746777057647705
    3. '                   ' → logprob: -2.9496777057647705
    4. ':
' → logprob: -6.44967794418335
    5. ' DIS' → logprob: -7.94967794418335
    6. 'else' → logprob: -8.199677467346191
    7. '                       ' → logprob: -8.699677467346191
    8. '#' (adapté à ' #') → logprob: -9.074677467346191
    9. '           ' → logprob: -9.324677467346191
    10. '```' → logprob: -9.324677467346191

Token 1303: ' Sinon' (ID: 154924)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.006939263548702002
    2. '               ' → logprob: -5.38193941116333
    3. 'else' → logprob: -6.50693941116333
    4. '                   ' → logprob: -7.50693941116333
    5. '```' → logprob: -9.381938934326172
    6. '           ' → logprob: -9.631938934326172
    7. '                       ' → logprob: -10.756938934326172
    8. '   ' → logprob: -10.881938934326172
    9. ' DIS' → logprob: -11.131938934326172
    10. '``' → logprob: -11.131938934326172

Token 1304: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31933844089508057
    2. '               ' → logprob: -1.5693384408950806
    3. ':
' → logprob: -3.569338321685791
    4. 'DIS' → logprob: -3.569338321685791
    5. ':' → logprob: -4.944338321685791
    6. '                       ' → logprob: -8.06933879852295
    7. ' DIS' → logprob: -8.31933879852295
    8. '```' → logprob: -8.69433879852295
    9. '           ' → logprob: -8.94433879852295
    10. '   ' → logprob: -8.94433879852295

Token 1305: ' on' (ID: 402)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.0021287298295646906
    2. '               ' → logprob: -7.127128601074219
    3. ' DIS' → logprob: -7.252128601074219
    4. '                   ' → logprob: -7.502128601074219
    5. '                       ' → logprob: -10.502128601074219
    6. '           ' → logprob: -11.502128601074219
    7. '                               ' → logprob: -12.002128601074219
    8. '                           ' → logprob: -12.377128601074219
    9. '```' → logprob: -12.877128601074219
    10. '   ' → logprob: -13.127128601074219

Token 1306: ' attrib' (ID: 72186)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.03642585128545761
    2. ' DIS' → logprob: -3.786425828933716
    3. '           ' → logprob: -5.536426067352295
    4. 'met' → logprob: -6.161426067352295
    5. 'dis' → logprob: -6.536426067352295
    6. '               ' → logprob: -6.536426067352295
    7. '                   ' → logprob: -7.411426067352295
    8. 'assign' → logprob: -7.786426067352295
    9. '_DIS' → logprob: -8.036425590515137
    10. ' met' → logprob: -8.161425590515137

Token 1307: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00032283025211654603
    2. 'uer' → logprob: -8.875323295593262
    3. 'u' → logprob: -9.125323295593262
    4. 'uera' → logprob: -10.500323295593262
    5. 'DIS' → logprob: -11.250323295593262
    6. '   ' → logprob: -11.875323295593262
    7. 'ues' → logprob: -11.875323295593262
    8. '               ' → logprob: -12.375323295593262
    9. '       ' → logprob: -12.625323295593262
    10. 'e' → logprob: -13.000323295593262

Token 1308: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4202937185764313
    2. ' x' → logprob: -1.2952936887741089
    3. 'DIS' → logprob: -3.0452938079833984
    4. '               ' → logprob: -4.920293807983398
    5. '0' → logprob: -5.420293807983398
    6. '(x' → logprob: -6.045293807983398
    7. 'D' → logprob: -6.420293807983398
    8. ' DIS' → logprob: -6.420293807983398
    9. '                   ' → logprob: -6.420293807983398
    10. '           ' → logprob: -7.045293807983398

Token 1309: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5241693258285522
    2. ' -' → logprob: -0.8991693258285522
    3. '-D' → logprob: -6.899169445037842
    4. '-dis' → logprob: -11.774168968200684
    5. '   ' → logprob: -11.899168968200684
    6. ' ' → logprob: -12.274168968200684
    7. '-d' → logprob: -12.774168968200684
    8. '+' → logprob: -12.899168968200684
    9. '```' → logprob: -13.024168968200684
    10. ')' → logprob: -13.274168968200684

Token 1310: ' cette' (ID: 7696)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -4.179569077678025e-05
    2. ' DIS' → logprob: -10.375041961669922
    3. 'D' → logprob: -12.750041961669922
    4. '   ' → logprob: -13.750041961669922
    5. '`' → logprob: -13.875041961669922
    6. '(DIS' → logprob: -14.000041961669922
    7. 'x' → logprob: -14.250041961669922
    8. 'dis' → logprob: -14.250041961669922
    9. '           ' → logprob: -14.500041961669922
    10. 'DS' → logprob: -14.875041961669922

Token 1311: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0068990131840109825
    2. ' ar' → logprob: -5.756898880004883
    3. 'DIS' → logprob: -6.006898880004883
    4. 'edge' → logprob: -8.131898880004883
    5. '[' → logprob: -8.506898880004883
    6. 'are' → logprob: -8.631898880004883
    7. '[D' → logprob: -8.756898880004883
    8. 'D' → logprob: -8.881898880004883
    9. 'aré' → logprob: -10.006898880004883
    10. ''ar' → logprob: -10.131898880004883

Token 1312: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0008087906171567738
    2. 'ète' → logprob: -8.500808715820312
    3. 'êtes' → logprob: -9.000808715820312
    4. '[' → logprob: -9.125808715820312
    5. 'ôte' → logprob: -9.625808715820312
    6. 'être' → logprob: -9.875808715820312
    7. 'te' → logprob: -10.000808715820312
    8. 'EDGE' → logprob: -10.375808715820312
    9. 'é' → logprob: -10.500808715820312
    10. 'ê' → logprob: -10.625808715820312

Token 1313: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48117494583129883
    2. '[D' → logprob: -1.1061749458312988
    3. '                   ' → logprob: -4.231174945831299
    4. '[' → logprob: -4.231174945831299
    5. 'DIS' → logprob: -5.106174945831299
    6. ' =' → logprob: -5.106174945831299
    7. '=' → logprob: -5.981174945831299
    8. '           ' → logprob: -6.106174945831299
    9. '```' → logprob: -6.231174945831299
    10. '       ' → logprob: -7.481174945831299

Token 1314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012532255612313747
    2. 'DIS' → logprob: -5.2625322341918945
    3. ' =' → logprob: -6.2625322341918945
    4. '                   ' → logprob: -6.3875322341918945
    5. '```' → logprob: -6.3875322341918945
    6. '=' → logprob: -6.6375322341918945
    7. '[' → logprob: -8.512532234191895
    8. '           ' → logprob: -9.012532234191895
    9. ')' → logprob: -9.637532234191895
    10. '_DIS' → logprob: -10.012532234191895

Token 1315: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' (adapté à ' DIS') → logprob: -0.0002545448951423168
    2. '               ' → logprob: -8.37525463104248
    3. ' DIS' → logprob: -11.25025463104248
    4. '                   ' → logprob: -11.75025463104248
    5. '           ' → logprob: -13.62525463104248
    6. '```' → logprob: -14.00025463104248
    7. '                       ' → logprob: -15.50025463104248
    8. '_DIS' → logprob: -15.62525463104248
    9. '   ' → logprob: -16.000253677368164
    10. 'DISC' → logprob: -16.625253677368164

Token 1316: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.375005722045898
    3. 'D' → logprob: -13.625005722045898
    4. '```' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.1250057220459
    6. ' [' → logprob: -17.1250057220459
    7. '	D' → logprob: -17.7500057220459
    8. '[d' → logprob: -17.8750057220459
    9. '[
' → logprob: -18.2500057220459
    10. '[[' → logprob: -18.5000057220459

Token 1317: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.011141546070575714
    2. '[D' → logprob: -4.761141777038574
    3. '[' → logprob: -7.511141777038574
    4. '[I' → logprob: -7.886141777038574
    5. '
' → logprob: -8.011141777038574
    6. 'ICEF' → logprob: -8.136141777038574
    7. 'D' → logprob: -8.511141777038574
    8. 'OICE' → logprob: -8.636141777038574
    9. '[C' → logprob: -9.386141777038574
    10. 'ICES' → logprob: -9.386141777038574

Token 1318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '[[' → logprob: -14.250003814697266
    3. '```' → logprob: -14.625003814697266
    4. '[(' → logprob: -14.750003814697266
    5. ' [' → logprob: -14.750003814697266
    6. '   ' → logprob: -15.000003814697266
    7. '
' → logprob: -15.250003814697266
    8. '[
' → logprob: -15.625003814697266
    9. '       ' → logprob: -15.937503814697266
    10. 'tuple' → logprob: -15.937503814697266

Token 1319: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0024993177503347397
    2. '[' → logprob: -6.002499103546143
    3. '(tuple' → logprob: -10.7524995803833
    4. ' tuple' → logprob: -13.8774995803833
    5. '{' → logprob: -15.0024995803833
    6. '```' → logprob: -15.1274995803833
    7. 'tu' → logprob: -15.3774995803833
    8. '[(' → logprob: -15.3774995803833
    9. '(' → logprob: -16.127498626708984
    10. '[
' → logprob: -16.627498626708984

Token 1320: '(sorted' (ID: 92488)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -6.110668618930504e-05
    2. '[(' → logprob: -10.37506103515625
    3. 'tuple' → logprob: -10.62506103515625
    4. 'sorted' → logprob: -13.62506103515625
    5. '```' → logprob: -13.75006103515625
    6. '[
' → logprob: -14.00006103515625
    7. '       ' → logprob: -14.25006103515625
    8. '[[' → logprob: -14.37506103515625
    9. '
' → logprob: -15.37506103515625
    10. '           ' → logprob: -15.37506103515625

Token 1321: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -7.028536492725834e-05
    2. '[' → logprob: -9.625070571899414
    3. '[[' → logprob: -12.875070571899414
    4. '(([' → logprob: -14.250070571899414
    5. '[(' → logprob: -15.000070571899414
    6. '([(' → logprob: -15.500070571899414
    7. '([
' → logprob: -16.500070571899414
    8. '([[' → logprob: -16.500070571899414
    9. '```' → logprob: -16.500070571899414
    10. '[
' → logprob: -16.875070571899414

Token 1322: 'po' (ID: 2519)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '(po' → logprob: -14.750000953674316
    3. '[
' → logprob: -16.000001907348633
    4. ' [' → logprob: -16.125001907348633
    5. '       ' → logprob: -16.250001907348633
    6. 'po' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.875001907348633
    8. '     ' → logprob: -17.250001907348633
    9. '         ' → logprob: -17.250001907348633
    10. '[pos' → logprob: -17.750001907348633

Token 1323: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0989149659872055
    2. '[to' → logprob: -2.473914861679077
    3. ',' → logprob: -4.973915100097656
    4. '       ' → logprob: -7.223915100097656
    5. '([' → logprob: -7.723915100097656
    6. '(to' → logprob: -7.723915100097656
    7. ',to' → logprob: -7.848915100097656
    8. '   ' → logprob: -8.098915100097656
    9. ',[' → logprob: -8.223915100097656
    10. ' [' → logprob: -9.223915100097656

Token 1324: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01915900595486164
    2. '[to' → logprob: -4.019158840179443
    3. ' to' → logprob: -7.019158840179443
    4. '[' → logprob: -9.269159317016602
    5. '   ' → logprob: -11.894159317016602
    6. ' [' → logprob: -12.519159317016602
    7. '(to' → logprob: -12.644159317016602
    8. '	to' → logprob: -13.144159317016602
    9. ' ' → logprob: -13.394159317016602
    10. '  ' → logprob: -14.519159317016602

Token 1325: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.000597116129938513
    2. '[' → logprob: -8.37559700012207
    3. '])]' → logprob: -8.62559700012207
    4. '])' → logprob: -9.75059700012207
    5. '))' → logprob: -9.87559700012207
    6. '[]' → logprob: -10.62559700012207
    7. '])))' → logprob: -11.62559700012207
    8. ']]' → logprob: -11.87559700012207
    9. '']))' → logprob: -12.00059700012207
    10. ']' → logprob: -12.00059700012207

Token 1326: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.019200751557946205
    2. ']' → logprob: -4.144200801849365
    3. ')]' → logprob: -6.519200801849365
    4. ']]=' → logprob: -6.519200801849365
    5. ']=' → logprob: -8.644200325012207
    6. ']]]' → logprob: -11.019200325012207
    7. '[' → logprob: -12.019200325012207
    8. '']]' → logprob: -12.894200325012207
    9. '=' → logprob: -13.019200325012207
    10. ' ]]' → logprob: -13.019200325012207

Token 1327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038054682314395905
    2. ' =' → logprob: -3.2880547046661377
    3. ']' → logprob: -11.538054466247559
    4. ']=' → logprob: -12.913054466247559
    5. ')' → logprob: -14.413054466247559
    6. '[' → logprob: -15.288054466247559
    7. ')=' → logprob: -16.288055419921875
    8. '   ' → logprob: -17.538055419921875
    9. '=
' → logprob: -17.788055419921875
    10. ' ' → logprob: -17.913055419921875

Token 1328: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01814994215965271
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -17.268150329589844
    4. '(x' → logprob: -19.643150329589844
    5. ' ' → logprob: -20.268150329589844
    6. ' ' → logprob: -20.268150329589844
    7. '"x' → logprob: -20.768150329589844
    8. '   ' → logprob: -21.393150329589844
    9. '```' → logprob: -21.768150329589844
    10. '0' → logprob: -21.893150329589844

Token 1329: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1330: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1331: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0875840112566948
    2. '<|end|>' → logprob: -2.9625840187072754
    3. '                   ' → logprob: -4.212584018707275
    4. 'break' (adapté à ' break') → logprob: -4.837584018707275
    5. '           ' → logprob: -5.212584018707275
    6. '	break' → logprob: -6.587584018707275
    7. '       ' → logprob: -7.212584018707275
    8. ' break' → logprob: -8.087583541870117
    9. '                       ' → logprob: -8.337583541870117
    10. '                ' → logprob: -8.587583541870117

Token 1332: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1333: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2119123637676239
    2. 'for' → logprob: -1.7119123935699463
    3. '#' → logprob: -5.211912155151367
    4. ')' → logprob: -5.461912155151367
    5. '
' → logprob: -8.086912155151367
    6. '```' → logprob: -8.711912155151367
    7. ' for' → logprob: -8.961912155151367
    8. ')
' → logprob: -10.211912155151367
    9. '#print' → logprob: -10.961912155151367
    10. '<|end|>' → logprob: -11.086912155151367

Token 1334: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3868769407272339
    2. 'for' → logprob: -1.1368769407272339
    3. '#' → logprob: -12.761877059936523
    4. ' for' → logprob: -14.136877059936523
    5. '```' → logprob: -14.511877059936523
    6. '#print' → logprob: -14.761877059936523
    7. 'if' → logprob: -14.886877059936523
    8. ' print' → logprob: -15.011877059936523
    9. 'pr' → logprob: -15.886877059936523
    10. '
' → logprob: -16.136877059936523

Token 1335: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04864152520895004
    2. 'for' → logprob: -3.0486414432525635
    3. '#' → logprob: -10.423641204833984
    4. ' print' → logprob: -11.798641204833984
    5. '#print' → logprob: -11.798641204833984
    6. '
' → logprob: -12.298641204833984
    7. '   ' → logprob: -13.423641204833984
    8. '```' → logprob: -13.798641204833984
    9. ' for' → logprob: -14.173641204833984
    10. '
' → logprob: -14.798641204833984

Token 1336: ''aff' (ID: 53397)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08436834067106247
    2. 'print' → logprob: -2.8343682289123535
    3. '#' → logprob: -3.9593682289123535
    4. ' for' → logprob: -6.2093682289123535
    5. '
' → logprob: -8.584368705749512
    6. 'range' → logprob: -9.209368705749512
    7. '   ' → logprob: -9.209368705749512
    8. 'all' → logprob: -9.209368705749512
    9. 'fin' → logprob: -9.584368705749512
    10. '```' → logprob: -9.584368705749512

Token 1337: 'ect' (ID: 534)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.00010402000043541193
    2. 'ich' → logprob: -9.750103950500488
    3. 'iche' → logprob: -11.000103950500488
    4. '#' → logprob: -11.125103950500488
    5. 'ect' → logprob: -11.875103950500488
    6. 'ic' → logprob: -12.375103950500488
    7. '```' → logprob: -14.250103950500488
    8. 'ection' → logprob: -14.500103950500488
    9. '**' → logprob: -15.125103950500488
    10. '

' → logprob: -15.625103950500488

Token 1338: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3749508261680603
    2. 'print' → logprob: -1.999950885772705
    3. 'ichage' → logprob: -3.249950885772705
    4. 'ection' → logprob: -3.374950885772705
    5. 'ication' → logprob: -3.624950885772705
    6. 'ement' → logprob: -3.749950885772705
    7. 'ect' → logprob: -4.124950885772705
    8. 'action' → logprob: -4.749950885772705
    9. 'cation' → logprob: -4.749950885772705
    10. '#' → logprob: -5.374950885772705

Token 1339: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10089844465255737
    2. 'for' → logprob: -2.350898504257202
    3. '#' → logprob: -7.350898265838623
    4. '#print' → logprob: -10.725898742675781
    5. ' for' → logprob: -10.850898742675781
    6. ' print' → logprob: -12.600898742675781
    7. '```' → logprob: -13.850898742675781
    8. '
' → logprob: -13.850898742675781
    9. ':' → logprob: -14.100898742675781
    10. 'pour' → logprob: -14.600898742675781

Token 1340: ' couleurs' (ID: 54001)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03782077878713608
    2. 'DIS' → logprob: -3.662820816040039
    3. 'dis' → logprob: -4.787820816040039
    4. 'ar' → logprob: -6.912820816040039
    5. 'values' → logprob: -7.037820816040039
    6. 'vals' → logprob: -7.662820816040039
    7. 'd' → logprob: -8.412820816040039
    8. 'indices' → logprob: -9.412820816040039
    9. ' valeurs' → logprob: -9.787820816040039
    10. ' DIS' → logprob: -9.787820816040039

Token 1341: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34985771775245667
    2. 'for' → logprob: -1.3498576879501343
    3. '#' → logprob: -3.349857807159424
    4. ' for' → logprob: -8.349857330322266
    5. '#print' → logprob: -8.349857330322266
    6. '
' → logprob: -8.599857330322266
    7. ',' → logprob: -9.099857330322266
    8. ';' → logprob: -10.724857330322266
    9. ')' → logprob: -10.724857330322266
    10. ',
' → logprob: -12.224857330322266

Token 1342: ' des' (ID: 731)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0856435298919678
    2. '#' → logprob: -1.4606435298919678
    3. 'la' → logprob: -2.2106435298919678
    4. 'le' → logprob: -2.3356435298919678
    5. 'print' → logprob: -2.3356435298919678
    6. 'd' → logprob: -3.4606435298919678
    7. 'les' → logprob: -3.5856435298919678
    8. 'des' → logprob: -4.085643768310547
    9. 'val' → logprob: -4.210643768310547
    10. 'dé' → logprob: -4.335643768310547

Token 1343: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5949699878692627
    2. 'd' → logprob: -0.9699699878692627
    3. 'dé' → logprob: -2.8449699878692627
    4. 'dis' → logprob: -5.469969749450684
    5. 'offset' → logprob: -6.844969749450684
    6. 'dist' → logprob: -6.969969749450684
    7. 'indices' → logprob: -7.344969749450684
    8. 'de' → logprob: -7.469969749450684
    9. 'vals' → logprob: -7.594969749450684
    10. 'dés' → logprob: -7.594969749450684

Token 1344: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3285695016384125
    2. 'for' → logprob: -1.3285695314407349
    3. '#' → logprob: -4.203569412231445
    4. ' for' → logprob: -9.328569412231445
    5. '#print' → logprob: -9.328569412231445
    6. 'pour' → logprob: -10.203569412231445
    7. ',' → logprob: -11.328569412231445
    8. ' print' → logprob: -11.828569412231445
    9. '
' → logprob: -11.953569412231445
    10. '```' → logprob: -13.328569412231445

Token 1345: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.4427596628665924
    2. 'ar' → logprob: -1.56775963306427
    3. 'e' → logprob: -2.3177597522735596
    4. 'es' → logprob: -3.4427597522735596
    5. ''' → logprob: -4.4427595138549805
    6. 'éc' → logprob: -6.4427595138549805
    7. ''éc' → logprob: -6.8177595138549805
    8. 'DIS' → logprob: -7.3177595138549805
    9. 'é' → logprob: -7.6927595138549805
    10. 'is' → logprob: -8.06775951385498

Token 1346: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0402311272919178
    2. 'ête' → logprob: -3.290231227874756
    3. 'ê' → logprob: -6.415231227874756
    4. 'tes' → logprob: -8.665230751037598
    5. 'êt' → logprob: -9.415230751037598
    6. 'ètes' → logprob: -9.665230751037598
    7. 'etes' → logprob: -10.165230751037598
    8. 'êtres' → logprob: -10.915230751037598
    9. 'être' → logprob: -11.040230751037598
    10. 'Ê' → logprob: -11.040230751037598

Token 1347: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12767259776592255
    2. 'for' → logprob: -2.1276726722717285
    3. '#' → logprob: -7.2526726722717285
    4. ' for' → logprob: -11.25267219543457
    5. '#print' → logprob: -11.50267219543457
    6. '
' → logprob: -11.87767219543457
    7. ' print' → logprob: -12.62767219543457
    8. ')' → logprob: -14.37767219543457
    9. '```' → logprob: -14.87767219543457
    10. 'if' → logprob: -15.00267219543457

Token 1348: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008627224713563919
    2. 'for' → logprob: -4.758627414703369
    3. '#' → logprob: -11.383626937866211
    4. '
' → logprob: -14.008626937866211
    5. '#print' → logprob: -15.633626937866211
    6. ' print' → logprob: -15.883626937866211
    7. '   ' → logprob: -16.88362693786621
    8. '```' → logprob: -17.00862693786621
    9. '

' → logprob: -17.50862693786621
    10. '    
' → logprob: -17.63362693786621

Token 1349: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014171270653605461
    2. 'for' → logprob: -4.264171123504639
    3. ' print' → logprob: -12.264171600341797
    4. '#' → logprob: -13.139171600341797
    5. ' for' → logprob: -14.389171600341797
    6. '
' → logprob: -14.764171600341797
    7. '#print' → logprob: -16.139171600341797
    8. 'pr' → logprob: -18.139171600341797
    9. 'prin' → logprob: -18.514171600341797
    10. 'try' → logprob: -19.264171600341797

Token 1350: ' le' (ID: 505)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7176003456115723
    2. ''' → logprob: -0.9676003456115723
    3. 'print' → logprob: -2.4676003456115723
    4. '*' → logprob: -3.2176003456115723
    5. '"\' → logprob: -5.467600345611572
    6. '
' → logprob: -6.467600345611572
    7. ''\' → logprob: -7.467600345611572
    8. '(*' → logprob: -8.092599868774414
    9. '('' → logprob: -8.592599868774414
    10. '   ' → logprob: -9.217599868774414

Token 1351: ' résultat' (ID: 62556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6237216591835022
    2. ''' → logprob: -0.8737216591835022
    3. '*' → logprob: -3.7487215995788574
    4. 'print' → logprob: -4.748721599578857
    5. '
' → logprob: -4.998721599578857
    6. '"\' → logprob: -5.248721599578857
    7. ''\' → logprob: -6.748721599578857
    8. 'for' → logprob: -7.998721599578857
    9. '    
' → logprob: -8.873722076416016
    10. ''D' → logprob: -9.123722076416016

Token 1352: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038042180240154266
    2. 'for' → logprob: -3.2880420684814453
    3. '```' → logprob: -15.038042068481445
    4. '
' → logprob: -15.288042068481445
    5. ' print' → logprob: -16.788042068481445
    6. 'if' → logprob: -17.413042068481445
    7. '\' → logprob: -18.038042068481445
    8. '#print' → logprob: -18.163042068481445
    9. '\n' → logprob: -18.288042068481445
    10. ' for' → logprob: -18.413042068481445

Token 1353: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0040785204619169235
    2. 'for' → logprob: -5.504078388214111
    3. '```' → logprob: -16.129077911376953
    4. ' print' → logprob: -17.504077911376953
    5. '
' → logprob: -19.379077911376953
    6. '#print' → logprob: -20.129077911376953
    7. ' for' → logprob: -20.754077911376953
    8. '   ' → logprob: -21.629077911376953
    9. '    
' → logprob: -22.004077911376953
    10. 'if' → logprob: -22.129077911376953

Token 1354: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00861456897109747
    2. 'for' → logprob: -4.758614540100098
    3. '```' → logprob: -17.008615493774414
    4. ' print' → logprob: -17.383615493774414
    5. '
' → logprob: -18.008615493774414
    6. ' for' → logprob: -20.133615493774414
    7. '#print' → logprob: -20.258615493774414
    8. 'import' → logprob: -20.258615493774414
    9. '   ' → logprob: -20.383615493774414
    10. '    
' → logprob: -20.508615493774414

Token 1355: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869055509567261
    2. 'for' → logprob: -1.136905550956726
    3. ' for' → logprob: -10.511905670166016
    4. ' print' → logprob: -12.011905670166016
    5. 'pr' → logprob: -14.886905670166016
    6. '
' → logprob: -15.386905670166016
    7. '#' → logprob: -15.636905670166016
    8. 'continue' → logprob: -16.011905670166016
    9. '```' → logprob: -16.136905670166016
    10. ' 
' → logprob: -16.636905670166016

Token 1356: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7600554823875427
    2. '"' → logprob: -0.8850554823875427
    3. '*' → logprob: -2.5100555419921875
    4. '"\' → logprob: -3.6350555419921875
    5. '(*' → logprob: -5.6350555419921875
    6. ''\' → logprob: -5.7600555419921875
    7. '('' → logprob: -5.8850555419921875
    8. '("' → logprob: -7.0100555419921875
    9. '
' → logprob: -7.5100555419921875
    10. '("\' → logprob: -7.7600555419921875

Token 1357: ' suite' (ID: 13800)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4309770166873932
    2. ''' → logprob: -1.0559769868850708
    3. '*' → logprob: -6.930976867675781
    4. '"\' → logprob: -7.555976867675781
    5. 'print' → logprob: -7.555976867675781
    6. '
' → logprob: -9.430976867675781
    7. ''\' → logprob: -9.805976867675781
    8. ''D' → logprob: -10.930976867675781
    9. '\n' → logprob: -11.305976867675781
    10. 'for' → logprob: -11.805976867675781

Token 1358: ' des' (ID: 731)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.1075091361999512
    2. '("' → logprob: -1.2325091361999512
    3. '('' → logprob: -1.2325091361999512
    4. 'print' → logprob: -2.982509136199951
    5. '(' → logprob: -3.482509136199951
    6. '(
' → logprob: -5.357509136199951
    7. 'for' → logprob: -8.48250961303711
    8. '
' → logprob: -9.60750961303711
    9. '(print' → logprob: -10.73250961303711
    10. '"' → logprob: -10.85750961303711

Token 1359: ' couleurs' (ID: 54001)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.2879120409488678
    2. 'print' → logprob: -1.5379120111465454
    3. 'str' → logprob: -3.912912130355835
    4. '(DIS' → logprob: -4.412911891937256
    5. 'dis' → logprob: -6.287911891937256
    6. '(str' → logprob: -7.537911891937256
    7. '*' → logprob: -9.037912368774414
    8. 'map' → logprob: -9.037912368774414
    9. '(dis' → logprob: -9.162912368774414
    10. '(*' → logprob: -9.162912368774414

Token 1360: ' décid' (ID: 191357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5863332152366638
    2. 'for' → logprob: -0.8363332152366638
    3. '.' → logprob: -6.211333274841309
    4. '("' → logprob: -6.336333274841309
    5. '.join' → logprob: -6.586333274841309
    6. '[' → logprob: -6.961333274841309
    7. 'join' → logprob: -7.211333274841309
    8. ')' → logprob: -7.586333274841309
    9. '+' → logprob: -7.711333274841309
    10. ',' → logprob: -7.961333274841309

Token 1361: 'ées' (ID: 5161)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.3804893493652344
    2. 'e' → logprob: -1.2554893493652344
    3. 'es' → logprob: -3.6304893493652344
    4. 'for' → logprob: -6.130489349365234
    5. 'print' → logprob: -6.755489349365234
    6. 'ées' → logprob: -7.630489349365234
    7. 'ée' → logprob: -8.380489349365234
    8. '```' → logprob: -8.380489349365234
    9. '"' → logprob: -8.880489349365234
    10. 'é' → logprob: -9.005489349365234

Token 1362: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005259133875370026
    2. 'for' → logprob: -5.255259037017822
    3. '```' → logprob: -11.38025951385498
    4. '
' → logprob: -11.50525951385498
    5. ' print' → logprob: -13.13025951385498
    6. ' for' → logprob: -14.88025951385498
    7. '   ' → logprob: -15.13025951385498
    8. ',' → logprob: -15.88025951385498
    9. '``' → logprob: -16.005258560180664
    10. '#print' → logprob: -16.005258560180664

Token 1363: ' chaque' (ID: 21194)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.3516598641872406
    2. 'range' → logprob: -1.226659893989563
    3. '"' → logprob: -6.601659774780273
    4. ' range' → logprob: -7.476659774780273
    5. ' DEC' → logprob: -8.101659774780273
    6. 'i' → logprob: -8.476659774780273
    7. '""' → logprob: -8.851659774780273
    8. 'dec' → logprob: -8.851659774780273
    9. '''.' → logprob: -8.851659774780273
    10. 'print' → logprob: -9.351659774780273

Token 1364: ' sommet' (ID: 130502)
  Prédit: 'DEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -0.11654063314199448
    2. 'i' → logprob: -2.6165406703948975
    3. 'range' → logprob: -4.366540431976318
    4. 'po' → logprob: -4.491540431976318
    5. 'dec' → logprob: -5.241540431976318
    6. '"' → logprob: -6.741540431976318
    7. ' DEC' → logprob: -7.366540431976318
    8. 'node' → logprob: -7.366540431976318
    9. 'str' → logprob: -7.491540431976318
    10. '[' → logprob: -7.491540431976318

Token 1365: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01013981457799673
    2. 'for' → logprob: -4.6351399421691895
    3. '
' → logprob: -8.510139465332031
    4. '[' → logprob: -9.135139465332031
    5. '```' → logprob: -9.760139465332031
    6. ' print' → logprob: -13.385139465332031
    7. '"\' → logprob: -13.635139465332031
    8. '\' → logprob: -13.635139465332031
    9. ',' → logprob: -13.885139465332031
    10. '#print' → logprob: -13.885139465332031

Token 1366: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9504606825648807e-05
    2. '"' → logprob: -11.625019073486328
    3. '```' → logprob: -12.375019073486328
    4. ' print' → logprob: -13.000019073486328
    5. 'for' → logprob: -13.500019073486328
    6. '''.' → logprob: -14.125019073486328
    7. '""' → logprob: -14.375019073486328
    8. '
' → logprob: -14.375019073486328
    9. '   ' → logprob: -15.125019073486328
    10. '``' → logprob: -15.500019073486328

Token 1367: 'auf' (ID: 7483)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.11536705493927
    2. 'r' → logprob: -1.49036705493927
    3. 'print' → logprob: -1.74036705493927
    4. 'tring' → logprob: -1.99036705493927
    5. 'tr' → logprob: -2.6153669357299805
    6. 'for' → logprob: -4.1153669357299805
    7. '
' → logprob: -4.8653669357299805
    8. 'range' → logprob: -5.1153669357299805
    9. '```' → logprob: -5.2403669357299805
    10. 'e' → logprob: -5.4903669357299805

Token 1368: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039327472448349
    2. '[' → logprob: -3.789327383041382
    3. 'le' → logprob: -4.539327621459961
    4. ' ' → logprob: -6.289327621459961
    5. ' le' → logprob: -6.289327621459961
    6. ' la' → logprob: -7.539327621459961
    7. 'l' → logprob: -7.539327621459961
    8. '1' → logprob: -8.914327621459961
    9. 'la' → logprob: -8.914327621459961
    10. ' l' → logprob: -9.289327621459961

Token 1369: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016629199963063002
    2. '[' → logprob: -6.626662731170654
    3. 'print' → logprob: -8.376663208007812
    4. '=' → logprob: -11.126663208007812
    5. '#' → logprob: -11.376663208007812
    6. 'r' → logprob: -11.626663208007812
    7. 'out' → logprob: -11.751663208007812
    8. 'range' → logprob: -11.751663208007812
    9. 'o' → logprob: -11.876663208007812
    10. '1' → logprob: -12.126663208007812

Token 1370: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -5.037835580878891e-05
    2. 'ice' → logprob: -10.00005054473877
    3. 'e' → logprob: -12.37505054473877
    4. '0' → logprob: -14.37505054473877
    5. 'exe' → logprob: -16.125049591064453
    6. '#' → logprob: -17.500049591064453
    7. 'exp' → logprob: -18.500049591064453
    8. 'dex' → logprob: -18.625049591064453
    9. 'é' → logprob: -18.875049591064453
    10. 'expl' → logprob: -18.875049591064453

Token 1371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010843054042197764
    2. ' ' → logprob: -9.75010871887207
    3. '1' → logprob: -10.25010871887207
    4. '=' → logprob: -12.25010871887207
    5. '```' → logprob: -12.50010871887207
    6. '[' → logprob: -12.62510871887207
    7. '>' → logprob: -13.87510871887207
    8. '`' → logprob: -14.25010871887207
    9. '
' → logprob: -14.50010871887207
    10. '#' → logprob: -15.50010871887207

Token 1372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '1' → logprob: -17.875
    4. '>' → logprob: -19.125
    5. '[' → logprob: -19.125
    6. '```' → logprob: -19.375
    7. '
' → logprob: -19.5
    8. '#' → logprob: -20.0
    9. '=' → logprob: -20.0
    10. '`' → logprob: -21.375

Token 1373: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032642170786857605
    2. ',' → logprob: -3.657642126083374
    3. 'print' → logprob: -5.282642364501953
    4. ')[' → logprob: -7.907642364501953
    5. '```' → logprob: -8.282642364501953
    6. ')' → logprob: -8.532642364501953
    7. '#' → logprob: -9.032642364501953
    8. '1' → logprob: -9.032642364501953
    9. '][' → logprob: -9.657642364501953
    10. 'for' → logprob: -10.782642364501953

Token 1374: ' inutil' (ID: 154055)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020882810931652784
    2. 'print' → logprob: -7.0020880699157715
    3. '```' → logprob: -7.3770880699157715
    4. '
' → logprob: -8.62708854675293
    5. ')' → logprob: -9.00208854675293
    6. '   ' → logprob: -9.87708854675293
    7. ' ' → logprob: -9.87708854675293
    8. '[' → logprob: -10.87708854675293
    9. ')[' → logprob: -11.00208854675293
    10. 'sep' → logprob: -11.12708854675293

Token 1375: 'isé' (ID: 30065)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3073997497558594
    2. 'ée' → logprob: -1.3073997497558594
    3. 'é' → logprob: -1.8073997497558594
    4. '[' → logprob: -2.5573997497558594
    5. 'isé' → logprob: -2.9323997497558594
    6. 'e' → logprob: -3.0573997497558594
    7. 'es' → logprob: -3.8073997497558594
    8. '0' → logprob: -3.9323997497558594
    9. '```' → logprob: -4.057399749755859
    10. 'isée' → logprob: -4.182399749755859

Token 1376: ').
' (ID: 6294)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.734817624092102
    2. ',' → logprob: -0.859817624092102
    3. '[' → logprob: -2.6098175048828125
    4. ')' → logprob: -4.2348175048828125
    5. '```' → logprob: -5.8598175048828125
    6. ',"' → logprob: -6.1098175048828125
    7. 'for' → logprob: -6.8598175048828125
    8. '+' → logprob: -7.7348175048828125
    9. ',"\' → logprob: -7.8598175048828125
    10. ',
' → logprob: -8.109817504882812

Token 1377: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.125
    3. 'for' → logprob: -16.0
    4. ' print' → logprob: -17.5
    5. '
' → logprob: -19.125
    6. '#print' → logprob: -20.875
    7. '``' → logprob: -21.0
    8. '   ' → logprob: -21.5
    9. '"' → logprob: -21.75
    10. '`' → logprob: -22.25

Token 1378: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16121190786361694
    2. '('' → logprob: -1.9112119674682617
    3. '(' → logprob: -7.036211967468262
    4. '(*' → logprob: -9.286211967468262
    5. '(""' → logprob: -11.536211967468262
    6. '("")' → logprob: -13.036211967468262
    7. '()' → logprob: -13.286211967468262
    8. '"' → logprob: -14.786211967468262
    9. '(("' → logprob: -14.911211967468262
    10. '("").' → logprob: -15.536211967468262

Token 1379: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0439562126994133
    2. '''.' → logprob: -3.1689562797546387
    3. '""' → logprob: -7.793956279754639
    4. '".' → logprob: -7.918956279754639
    5. '("' → logprob: -9.54395580291748
    6. ' "".' → logprob: -10.16895580291748
    7. '"B' → logprob: -10.16895580291748
    8. ''' → logprob: -11.41895580291748
    9. '('' → logprob: -11.91895580291748
    10. ' ''.' → logprob: -12.41895580291748

Token 1380: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. 'j' → logprob: -14.625000953674316
    3. ' join' → logprob: -16.0
    4. 'jo' → logprob: -16.125
    5. '''.' → logprob: -18.625
    6. 'print' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. '.join' → logprob: -19.875
    9. '.' → logprob: -19.875
    10. 'joint' → logprob: -20.125

Token 1381: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '([' → logprob: -13.250003814697266
    3. 'DEC' → logprob: -13.375003814697266
    4. '(dec' → logprob: -16.250003814697266
    5. '((' → logprob: -17.125003814697266
    6. '[' → logprob: -17.625003814697266
    7. '(
' → logprob: -17.625003814697266
    8. '(i' → logprob: -17.875003814697266
    9. '(DE' → logprob: -18.125003814697266
    10. 'dec' → logprob: -18.625003814697266

Token 1382: 'DEC' (ID: 57617)
  Prédit: 'DEC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEC' → logprob: -9.555654105497524e-05
    2. '[' → logprob: -9.37509536743164
    3. '(' → logprob: -12.37509536743164
    4. 'dec' → logprob: -13.00009536743164
    5. ' DEC' → logprob: -13.25009536743164
    6. 'map' → logprob: -14.62509536743164
    7. 'str' → logprob: -14.87509536743164
    8. 'c' → logprob: -15.25009536743164
    9. '_DEC' → logprob: -15.25009536743164
    10. 'd' → logprob: -15.75009536743164

Token 1383: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -6.153795766294934e-06
    2. 'ED' → logprob: -12.500005722045898
    3. 'IDE' → logprob: -13.250005722045898
    4. 'I' → logprob: -15.750005722045898
    5. 'IDES' → logprob: -16.5000057220459
    6. 'IED' → logprob: -16.6250057220459
    7. 'ided' → logprob: -16.7500057220459
    8. 'IC' → logprob: -17.1250057220459
    9. '_ID' → logprob: -17.3750057220459
    10. '_' → logprob: -17.5000057220459

Token 1384: 'ED' (ID: 2252)
  Prédit: 'ED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ED' → logprob: -1.9361264946837764e-07
    2. 'DED' → logprob: -15.625
    3. '[' → logprob: -17.0
    4. 'ID' → logprob: -18.625
    5. '{' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. 'EDI' → logprob: -20.125
    8. 'IED' → logprob: -20.25
    9. '"' → logprob: -20.375
    10. '`' → logprob: -20.625

Token 1385: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. '))' → logprob: -18.375
    4. '```' → logprob: -19.375
    5. '(' → logprob: -21.125
    6. '[
' → logprob: -21.625
    7. ')' → logprob: -21.75
    8. ' [' → logprob: -22.0
    9. '   ' → logprob: -22.0
    10. '()[' → logprob: -22.5

Token 1386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.125
    3. '[' → logprob: -17.0
    4. ' ' → logprob: -17.0
    5. '   ' → logprob: -18.625
    6. '```' → logprob: -19.375
    7. '１' → logprob: -20.5
    8. '

' → logprob: -20.625
    9. ')' → logprob: -20.75
    10. '
' → logprob: -21.25

Token 1387: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016146040288731456
    2. ':]' → logprob: -6.501614570617676
    3. ']))' → logprob: -9.126614570617676
    4. ' :' → logprob: -13.376614570617676
    5. ':].' → logprob: -14.751614570617676
    6. '])' → logprob: -15.001614570617676
    7. ':)' → logprob: -15.001614570617676
    8. '::' → logprob: -15.876614570617676
    9. ':N' → logprob: -16.126615524291992
    10. ':])
' → logprob: -16.376615524291992

Token 1388: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000341541541274637
    2. ')' → logprob: -8.000341415405273
    3. '))
' → logprob: -12.500341415405273
    4. ' ))' → logprob: -13.500341415405273
    5. ')))' → logprob: -14.125341415405273
    6. '"))' → logprob: -16.625341415405273
    7. '),' → logprob: -16.750341415405273
    8. '()))' → logprob: -17.250341415405273
    9. '))

' → logprob: -18.125341415405273
    10. '));' → logprob: -18.500341415405273

Token 1389: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1281263679265976
    2. '<|end|>' → logprob: -2.128126382827759
    3. '[' → logprob: -8.12812614440918
    4. '
' → logprob: -8.25312614440918
    5. '#' → logprob: -9.00312614440918
    6. '(' → logprob: -9.12812614440918
    7. '```' → logprob: -9.12812614440918
    8. '\n' → logprob: -9.37812614440918
    9. '<|end|>' → logprob: -10.00312614440918
    10. ' )' → logprob: -10.12812614440918

Token 1390: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019288709154352546
    2. 'for' → logprob: -6.251928806304932
    3. ' print' → logprob: -15.62692928314209
    4. '
' → logprob: -16.501928329467773
    5. '   ' → logprob: -17.751928329467773
    6. '#print' → logprob: -18.001928329467773
    7. '#' → logprob: -18.126928329467773
    8. '    
' → logprob: -19.126928329467773
    9. '  
' → logprob: -19.501928329467773
    10. ' for' → logprob: -19.501928329467773

Token 1391: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.082801103591919
    2. 'val' → logprob: -1.207801103591919
    3. 'd' → logprob: -1.332801103591919
    4. 'v' → logprob: -2.457801103591919
    5. 'value' → logprob: -5.33280086517334
    6. 'dist' → logprob: -5.33280086517334
    7. 'x' → logprob: -6.58280086517334
    8. 'w' → logprob: -7.45780086517334
    9. 'dis' → logprob: -7.70780086517334
    10. 'e' → logprob: -7.95780086517334

Token 1392: ' ar' (ID: 646)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5385726094245911
    2. 'val' → logprob: -1.6635725498199463
    3. 'i' → logprob: -2.0385725498199463
    4. 'v' → logprob: -3.1635725498199463
    5. 'value' → logprob: -3.9135725498199463
    6. 'x' → logprob: -4.288572788238525
    7. 'dist' → logprob: -4.538572788238525
    8. 'dis' → logprob: -5.038572788238525
    9. 'e' → logprob: -7.163572788238525
    10. 'distance' → logprob: -7.163572788238525

Token 1393: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.04050763323903084
    2. 'êt' → logprob: -4.040507793426514
    3. 'edge' → logprob: -5.165507793426514
    4. 'e' → logprob: -5.540507793426514
    5. 't' → logprob: -5.790507793426514
    6. 'r' → logprob: -6.415507793426514
    7. 'c' → logprob: -6.415507793426514
    8. 'i' → logprob: -6.540507793426514
    9. 'êtes' → logprob: -6.665507793426514
    10. 'ê' → logprob: -6.915507793426514

Token 1394: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5163905620574951
    2. 'print' → logprob: -1.6413905620574951
    3. ':' → logprob: -1.7663905620574951
    4. 'in' → logprob: -3.391390562057495
    5. ':
' → logprob: -5.891390800476074
    6. ' in' → logprob: -6.391390800476074
    7. ' for' → logprob: -8.016390800476074
    8. ',' → logprob: -8.891390800476074
    9. 'as' → logprob: -10.266390800476074
    10. ' print' → logprob: -11.016390800476074

Token 1395: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47508519887924194
    2. 'print' → logprob: -0.9750851988792419
    3. ' for' → logprob: -6.975085258483887
    4. ' print' → logprob: -9.600085258483887
    5. '   ' → logprob: -12.225085258483887
    6. '
' → logprob: -16.47508430480957
    7. '    
' → logprob: -17.10008430480957
    8. '```' → logprob: -17.10008430480957
    9. ' 
' → logprob: -18.10008430480957
    10. '	for' → logprob: -18.10008430480957

Token 1396: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06252460926771164
    2. 'for' → logprob: -2.8125245571136475
    3. ' print' → logprob: -7.812524795532227
    4. ' for' → logprob: -8.812524795532227
    5. ':
' → logprob: -13.187524795532227
    6. '   ' → logprob: -14.937524795532227
    7. ':' → logprob: -15.187524795532227
    8. '	print' → logprob: -15.562524795532227
    9. '.print' → logprob: -15.562524795532227
    10. '#' → logprob: -15.812524795532227

Token 1397: ' la' (ID: 557)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.5831149220466614
    2. '(DIS' → logprob: -1.2081148624420166
    3. 'print' → logprob: -3.3331148624420166
    4. '(dis' → logprob: -3.7081148624420166
    5. 'dis' → logprob: -3.9581148624420166
    6. '
' → logprob: -3.9581148624420166
    7. '(' → logprob: -4.833115100860596
    8. '(*' → logprob: -5.208115100860596
    9. '("' → logprob: -5.208115100860596
    10. 'str' → logprob: -5.333115100860596

Token 1398: ' valeur' (ID: 41664)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.8928967714309692
    2. 'dis' → logprob: -1.2678967714309692
    3. 'print' → logprob: -1.5178967714309692
    4. 'd' → logprob: -2.5178966522216797
    5. 'str' → logprob: -5.51789665222168
    6. '(dis' → logprob: -6.51789665222168
    7. 'value' → logprob: -6.89289665222168
    8. '(DIS' → logprob: -7.01789665222168
    9. ' DIS' → logprob: -8.01789665222168
    10. 'disp' → logprob: -8.51789665222168

Token 1399: ' correspond' (ID: 11095)
  Prédit: '(DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(DIS' → logprob: -1.1269927024841309
    2. 'for' → logprob: -1.2519927024841309
    3. '(dis' → logprob: -1.2519927024841309
    4. '(' → logprob: -3.001992702484131
    5. 'DIS' → logprob: -3.876992702484131
    6. 'print' → logprob: -4.751992702484131
    7. '(i' → logprob: -5.126992702484131
    8. '(D' → logprob: -5.251992702484131
    9. '(d' → logprob: -5.376992702484131
    10. 'dis' → logprob: -6.126992702484131

Token 1400: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005896206945180893
    2. ' à' → logprob: -5.755896091461182
    3. 'es' → logprob: -7.755896091461182
    4. '   ' → logprob: -7.755896091461182
    5. 'a' → logprob: -7.880896091461182
    6. 'é' → logprob: -8.00589656829834
    7. 'ée' → logprob: -8.00589656829834
    8. 'à' → logprob: -8.63089656829834
    9. ' a' → logprob: -9.13089656829834
    10. ')' → logprob: -9.13089656829834

Token 1401: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00028278882382437587
    2. 'print' → logprob: -9.125283241271973
    3. ' for' → logprob: -9.375283241271973
    4. '
' → logprob: -9.500283241271973
    5. '(' → logprob: -12.250283241271973
    6. '()
' → logprob: -12.625283241271973
    7. ')
' → logprob: -13.875283241271973
    8. '```' → logprob: -13.875283241271973
    9. '(i' → logprob: -14.750283241271973
    10. '()' → logprob: -14.875283241271973

Token 1402: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -9.865583706414327e-05
    2. 'print' → logprob: -9.62509822845459
    3. ' DIS' → logprob: -10.87509822845459
    4. '(DIS' → logprob: -11.62509822845459
    5. 'range' → logprob: -12.37509822845459
    6. '   ' → logprob: -15.87509822845459
    7. 'dis' → logprob: -16.125099182128906
    8. ' range' → logprob: -17.000099182128906
    9. '
' → logprob: -17.000099182128906
    10. 'DISC' → logprob: -17.375099182128906

Token 1403: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4974866644479334e-05
    2. '
' → logprob: -11.375015258789062
    3. ' for' → logprob: -12.875015258789062
    4. 'print' → logprob: -14.000015258789062
    5. '```' → logprob: -17.125015258789062
    6. ')
' → logprob: -18.375015258789062
    7. '``' → logprob: -19.125015258789062
    8. '\n' → logprob: -19.250015258789062
    9. '   ' → logprob: -19.500015258789062
    10. '
' → logprob: -19.500015258789062

Token 1404: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026741522015072405
    2. 'print' → logprob: -8.250267028808594
    3. '
' → logprob: -12.000267028808594
    4. '```' → logprob: -17.375267028808594
    5. ' for' → logprob: -17.875267028808594
    6. '
' → logprob: -20.750267028808594
    7. '    
' → logprob: -20.750267028808594
    8. '``' → logprob: -21.000267028808594
    9. '\n' → logprob: -21.625267028808594
    10. '   ' → logprob: -21.875267028808594

Token 1405: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011703446507453918
    2. 'print' → logprob: -6.7511701583862305
    3. '
' → logprob: -16.376171112060547
    4. ' for' → logprob: -17.376171112060547
    5. '```' → logprob: -18.876171112060547
    6. '    
' → logprob: -20.376171112060547
    7. '   ' → logprob: -20.501171112060547
    8. '	for' → logprob: -21.376171112060547
    9. ' 
' → logprob: -22.001171112060547
    10. '  
' → logprob: -22.376171112060547

Token 1406: ' aucune' (ID: 51173)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.16778653860092163
    2. 'd' → logprob: -2.2927865982055664
    3. 'dis' → logprob: -3.2927865982055664
    4. 'x' → logprob: -4.792786598205566
    5. 'val' → logprob: -5.792786598205566
    6. 'v' → logprob: -6.167786598205566
    7. 'i' → logprob: -6.417786598205566
    8. ' DIS' → logprob: -7.917786598205566
    9. 'D' → logprob: -8.417786598205566
    10. '-' → logprob: -8.917786598205566

Token 1407: ' valeur' (ID: 41664)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.0427157878875732
    2. ' DIS' → logprob: -1.7927157878875732
    3. ' dis' → logprob: -2.0427157878875732
    4. 'DIS' → logprob: -2.4177157878875732
    5. ' val' → logprob: -2.6677157878875732
    6. 'dis' → logprob: -2.7927157878875732
    7. 'val' → logprob: -2.9177157878875732
    8. 'value' → logprob: -3.0427157878875732
    9. ' ==' → logprob: -4.542716026306152
    10. ' valeur' → logprob: -4.667716026306152

Token 1408: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2163909524679184
    2. 'n' → logprob: -2.09139084815979
    3. '==' → logprob: -3.21639084815979
    4. ' ==' → logprob: -4.216391086578369
    5. 'a' → logprob: -5.466391086578369
    6. '==-' → logprob: -5.716391086578369
    7. 'assigned' → logprob: -6.091391086578369
    8. 'assign' → logprob: -6.841391086578369
    9. '[' → logprob: -7.091391086578369
    10. '[i' → logprob: -7.091391086578369

Token 1409: ''a' (ID: 10443)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6751004457473755
    2. '[i' → logprob: -1.1751004457473755
    3. ' ==' → logprob: -1.9251004457473755
    4. '[' → logprob: -3.925100326538086
    5. 'a' → logprob: -5.675100326538086
    6. '==-' → logprob: -6.425100326538086
    7. '[j' → logprob: -6.800100326538086
    8. 'e' → logprob: -7.175100326538086
    9. '[idx' → logprob: -7.175100326538086
    10. '[ind' → logprob: -7.175100326538086

Token 1410: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.9721484780311584
    2. 'été' → logprob: -0.9721484780311584
    3. 'pas' → logprob: -1.8471484184265137
    4. ' pas' → logprob: -2.4721484184265137
    5. '=' → logprob: -8.347148895263672
    6. 'ét' → logprob: -8.472148895263672
    7. 'être' → logprob: -9.097148895263672
    8. ' encore' → logprob: -9.097148895263672
    9. 'é' → logprob: -9.347148895263672
    10. ' jamais' → logprob: -9.347148895263672

Token 1411: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.6716265678405762
    2. 'attrib' → logprob: -0.7966265678405762
    3. 'aff' → logprob: -3.421626567840576
    4. 'assigned' → logprob: -6.296626567840576
    5. ' attrib' → logprob: -6.421626567840576
    6. '   ' → logprob: -7.171626567840576
    7. ' assign' → logprob: -8.171627044677734
    8. 'ass' → logprob: -8.421627044677734
    9. 'mise' → logprob: -8.546627044677734
    10. 'fix' → logprob: -9.546627044677734

Token 1412: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02066158875823021
    2. 'é' → logprob: -3.8956615924835205
    3. 'e' → logprob: -9.395661354064941
    4. 'ee' → logprob: -10.645661354064941
    5. 'née' → logprob: -12.145661354064941
    6. ' é' → logprob: -13.270661354064941
    7. '=' → logprob: -13.895661354064941
    8. 'ie' → logprob: -14.520661354064941
    9. ',' → logprob: -14.520661354064941
    10. 'è' → logprob: -14.645661354064941

Token 1413: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9697645306587219
    2. ' for' → logprob: -0.9697645306587219
    3. 'for' → logprob: -1.9697644710540771
    4. 'print' → logprob: -3.469764471054077
    5. ' or' → logprob: -3.969764471054077
    6. ',' → logprob: -4.094764709472656
    7. '   ' → logprob: -4.844764709472656
    8. ' pour' → logprob: -4.969764709472656
    9. ' print' → logprob: -5.094764709472656
    10. ' à' → logprob: -5.344764709472656

Token 1414: 'tou' (ID: 143506)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.8712871670722961
    2. 'd' → logprob: -1.2462871074676514
    3. 'dis' → logprob: -1.3712871074676514
    4. 'x' → logprob: -4.3712873458862305
    5. 'val' → logprob: -4.6212873458862305
    6. 'i' → logprob: -4.8712873458862305
    7. 'v' → logprob: -5.2462873458862305
    8. ' DIS' → logprob: -6.6212873458862305
    9. ' dis' → logprob: -6.8712873458862305
    10. ' d' → logprob: -7.4962873458862305

Token 1415: 'jours' (ID: 15650)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2896975576877594
    2. '[' → logprob: -2.5396976470947266
    3. '[n' → logprob: -3.2896976470947266
    4. 'n' → logprob: -3.7896976470947266
    5. ' ==' → logprob: -4.414697647094727
    6. ' n' → logprob: -4.539697647094727
    7. '#' → logprob: -4.789697647094727
    8. 'for' → logprob: -4.789697647094727
    9. '==' → logprob: -5.164697647094727
    10. 'e' → logprob: -5.289697647094727

Token 1416: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00048072010395117104
    2. ' -' → logprob: -7.875480651855469
    3. 'à' → logprob: -10.000480651855469
    4. '==-' → logprob: -10.750480651855469
    5. ' à' → logprob: -11.000480651855469
    6. ' égal' → logprob: -12.000480651855469
    7. '==' → logprob: -12.000480651855469
    8. '–' → logprob: -14.000480651855469
    9. ' ég' → logprob: -14.250480651855469
    10. '=' → logprob: -14.625480651855469

Token 1417: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.4121114822482923e-06
    2. ' -' → logprob: -12.625003814697266
    3. '```' → logprob: -18.000003814697266
    4. '#' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.750003814697266
    6. '−' → logprob: -19.875003814697266
    7. ''-' → logprob: -20.125003814697266
    8. '`' → logprob: -20.250003814697266
    9. ' ' → logprob: -20.375003814697266
    10. '--' → logprob: -21.000003814697266

Token 1418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '
' → logprob: -12.500008583068848
    3. ' ' → logprob: -13.250008583068848
    4. '```' → logprob: -13.750008583068848
    5. '-' → logprob: -14.500008583068848
    6. '   ' → logprob: -15.000008583068848
    7. '`' → logprob: -15.000008583068848
    8. '           ' → logprob: -15.687508583068848
    9. '

' → logprob: -16.062509536743164
    10. '``' → logprob: -16.187509536743164

Token 1419: '),' (ID: 936)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8572187423706055
    2. '),' → logprob: -1.2322187423706055
    3. '):
' → logprob: -2.1072187423706055
    4. '):' → logprob: -2.7322187423706055
    5. ')' → logprob: -3.2322187423706055
    6. 'print' → logprob: -3.4822187423706055
    7. 'or' → logprob: -4.6072187423706055
    8. ':
' → logprob: -5.2322187423706055
    9. ':' → logprob: -5.6072187423706055
    10. ',' → logprob: -5.8572187423706055

Token 1420: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017705116420984268
    2. ' print' → logprob: -4.142704963684082
    3. '   ' → logprob: -6.892704963684082
    4. '0' → logprob: -7.392704963684082
    5. ' ' → logprob: -11.892704963684082
    6. '7' → logprob: -12.267704963684082
    7. '    
' → logprob: -12.392704963684082
    8. ' 
' → logprob: -12.517704963684082
    9. 'for' → logprob: -13.142704963684082
    10. '1' → logprob: -13.142704963684082

Token 1421: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022594700567424297
    2. ' print' → logprob: -8.500226020812988
    3. 'pr' → logprob: -11.250226020812988
    4. '0' → logprob: -12.500226020812988
    5. 'prit' → logprob: -13.500226020812988
    6. 'put' → logprob: -13.625226020812988
    7. 'prin' → logprob: -13.875226020812988
    8. 'printf' → logprob: -14.125226020812988
    9. '.print' → logprob: -14.625226020812988
    10. '.' → logprob: -16.125225067138672

Token 1422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010918774642050266
    2. ' ' → logprob: -6.876091957092285
    3. '1' → logprob: -10.626091957092285
    4. '"' → logprob: -11.626091957092285
    5. '-' → logprob: -11.751091957092285
    6. 'x' → logprob: -12.126091957092285
    7. 'print' → logprob: -13.126091957092285
    8. ''' → logprob: -13.376091957092285
    9. ' x' → logprob: -13.626091957092285
    10. '10' → logprob: -13.751091957092285

Token 1423: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001434690784662962
    2. '"' → logprob: -10.125143051147461
    3. ' ' → logprob: -10.125143051147461
    4. '1' → logprob: -10.500143051147461
    5. '-' → logprob: -11.375143051147461
    6. ''' → logprob: -11.500143051147461
    7. '00' → logprob: -12.625143051147461
    8. 'x' → logprob: -13.125143051147461
    9. '10' → logprob: -13.375143051147461
    10. '000' → logprob: -14.000143051147461

Token 1424: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001563185011036694
    2. ' ' → logprob: -6.50156307220459
    3. 'for' → logprob: -11.87656307220459
    4. '**' → logprob: -11.87656307220459
    5. ',' → logprob: -12.00156307220459
    6. ' ' → logprob: -12.25156307220459
    7. '^' → logprob: -12.62656307220459
    8. '  
' → logprob: -12.75156307220459
    9. '[' → logprob: -13.00156307220459
    10. '3' → logprob: -13.00156307220459

Token 1425: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0022281676065176725
    2. '6' → logprob: -6.127228260040283
    3. '**' → logprob: -10.502227783203125
    4. ' ' → logprob: -11.877227783203125
    5. '0' → logprob: -12.377227783203125
    6. '```' → logprob: -13.127227783203125
    7. '7' → logprob: -14.002227783203125
    8. 'print' → logprob: -14.627227783203125
    9. '8' → logprob: -15.502227783203125
    10. '^' → logprob: -15.627227783203125

Token 1426: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1776398867368698
    2. 'if' → logprob: -1.9276398420333862
    3. '
' → logprob: -4.302639961242676
    4. ' if' → logprob: -6.552639961242676
    5. 'print' → logprob: -6.802639961242676
    6. ' for' → logprob: -7.302639961242676
    7. '10' → logprob: -9.052639961242676
    8. '   ' → logprob: -9.177639961242676
    9. 'or' → logprob: -9.427639961242676
    10. '
' → logprob: -10.427639961242676

Token 1427: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007505594287067652
    2. '
' → logprob: -5.507505416870117
    3. 'print' → logprob: -5.882505416870117
    4. '10' → logprob: -7.507505416870117
    5. ' for' → logprob: -10.132505416870117
    6. '    
' → logprob: -11.132505416870117
    7. '   ' → logprob: -12.257505416870117
    8. '  
' → logprob: -12.382505416870117
    9. '
' → logprob: -12.507505416870117
    10. '0' → logprob: -12.507505416870117

Token 1428: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02564309909939766
    2. 'v' → logprob: -4.7756428718566895
    3. 'x' → logprob: -4.9006428718566895
    4. 'val' → logprob: -4.9006428718566895
    5. 'd' → logprob: -6.5256428718566895
    6. 'value' → logprob: -8.025643348693848
    7. ' i' → logprob: -8.775643348693848
    8. 'dis' → logprob: -10.400643348693848
    9. 'dist' → logprob: -12.025643348693848
    10. 'w' → logprob: -12.275643348693848

Token 1429: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03413672372698784
    2. 'in' → logprob: -3.6591367721557617
    3. 'i' → logprob: -5.284136772155762
    4. ' i' → logprob: -6.159136772155762
    5. 'is' → logprob: -8.284136772155762
    6. ' ' → logprob: -9.409136772155762
    7. ',' → logprob: -9.534136772155762
    8. 'd' → logprob: -9.534136772155762
    9. ' d' → logprob: -10.659136772155762
    10. '_' → logprob: -10.784136772155762

Token 1430: ' DIS' (ID: 21047)
  Prédit: 'DIS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DIS' → logprob: -0.004175510257482529
    2. ' DIS' → logprob: -5.504175662994385
    3. '(DIS' → logprob: -9.254175186157227
    4. 'D' → logprob: -14.379175186157227
    5. 'dis' → logprob: -15.254175186157227
    6. '(' → logprob: -15.629175186157227
    7. '_DIS' → logprob: -16.254175186157227
    8. '(D' → logprob: -17.004175186157227
    9. ' ' → logprob: -17.004175186157227
    10. ' (' → logprob: -17.004175186157227

Token 1431: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41561052203178406
    2. 'if' → logprob: -1.4156105518341064
    3. 'print' → logprob: -2.7906105518341064
    4. '   ' → logprob: -4.415610313415527
    5. ' print' → logprob: -4.540610313415527
    6. '=' → logprob: -5.165610313415527
    7. ':' → logprob: -6.040610313415527
    8. ' or' → logprob: -6.665610313415527
    9. ',' → logprob: -6.915610313415527
    10. ' =' → logprob: -7.290610313415527

Token 1432: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18810179829597473
    2. '   ' → logprob: -2.4381017684936523
    3. ' print' → logprob: -3.0631017684936523
    4. ' if' → logprob: -3.8131017684936523
    5. 'if' → logprob: -4.188101768493652
    6. '    ' → logprob: -9.938101768493652
    7. '    
' → logprob: -10.563101768493652
    8. ' 
' → logprob: -10.813101768493652
    9. '
' → logprob: -11.063101768493652
    10. ' ' → logprob: -11.813101768493652

Token 1433: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01586988754570484
    2. 'if' (adapté à ' if') → logprob: -4.265870094299316
    3. ' print' → logprob: -7.015870094299316
    4. ' if' → logprob: -7.140870094299316
    5. '
' → logprob: -11.890870094299316
    6. ' 
' → logprob: -12.515870094299316
    7. '   ' → logprob: -13.265870094299316
    8. 'prin' → logprob: -14.265870094299316
    9. 'pr' → logprob: -14.765870094299316
    10. '    
' → logprob: -14.765870094299316

Token 1434: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001234428636962548
    2. ' d' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.750123977661133
    4. '	d' → logprob: -20.125123977661133
    5. ' ' → logprob: -21.750123977661133
    6. '_d' → logprob: -21.875123977661133
    7. ' ' → logprob: -22.125123977661133
    8. '  ' → logprob: -22.125123977661133
    9. '>d' → logprob: -22.250123977661133
    10. '$d' → logprob: -22.500123977661133

Token 1435: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1138264462351799
    2. '==' → logprob: -2.7388265132904053
    3. '==-' → logprob: -3.2388265132904053
    4. '<' → logprob: -6.238826274871826
    5. ' <' → logprob: -6.363826274871826
    6. '=' → logprob: -10.863826751708984
    7. '<=' → logprob: -11.488826751708984
    8. ' ' → logprob: -11.738826751708984
    9. ' <=' → logprob: -12.113826751708984
    10. ' =' → logprob: -12.238826751708984

Token 1436: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.438573680294212e-06
    2. ' -' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.3750057220459
    4. '−' → logprob: -20.0000057220459
    5. '	' → logprob: -21.6250057220459
    6. '==-' → logprob: -21.7500057220459
    7. '  ' → logprob: -22.2500057220459
    8. '```' → logprob: -22.8750057220459
    9. ' ' → logprob: -23.1250057220459
    10. '=-' → logprob: -23.1250057220459

Token 1437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.75
    5. '１' → logprob: -21.125
    6. '۱' → logprob: -21.25
    7. '-' → logprob: -21.625
    8. '১' → logprob: -21.625
    9. '१' → logprob: -21.875
    10. '

' → logprob: -22.1875

Token 1438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3909105956554413
    2. ':
' → logprob: -1.1409106254577637
    3. '   ' → logprob: -5.765910625457764
    4. 'print' → logprob: -7.640910625457764
    5. ' print' → logprob: -8.265910148620605
    6. '       ' → logprob: -10.390910148620605
    7. ')' → logprob: -10.390910148620605
    8. ' :
' → logprob: -10.640910148620605
    9. '=' → logprob: -10.765910148620605
    10. ' :' → logprob: -11.015910148620605

Token 1439: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12488629668951035
    2. 'print' → logprob: -2.6248862743377686
    3. ' print' → logprob: -3.1248862743377686
    4. '       ' → logprob: -6.999886512756348
    5. '    ' → logprob: -9.999886512756348
    6. '	print' → logprob: -10.374886512756348
    7. ' ' → logprob: -11.999886512756348
    8. '  ' → logprob: -12.624886512756348
    9. '```' → logprob: -12.999886512756348
    10. ':' → logprob: -13.249886512756348

Token 1440: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005811482667922974
    2. ' print' → logprob: -5.75581169128418
    3. '10' → logprob: -6.63081169128418
    4. '100' → logprob: -6.88081169128418
    5. '   ' → logprob: -8.25581169128418
    6. '       ' → logprob: -11.38081169128418
    7. '0' → logprob: -12.63081169128418
    8. '999' → logprob: -12.75581169128418
    9. 'printf' → logprob: -14.00581169128418
    10. '9' → logprob: -14.13081169128418

Token 1441: '(' (ID: 7)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.023300450295209885
    2. '10' → logprob: -4.023300647735596
    3. ' ' → logprob: -5.273300647735596
    4. '(' → logprob: -11.648300170898438
    5. '1' → logprob: -13.398300170898438
    6. 'int' → logprob: -15.648300170898438
    7. '(int' → logprob: -16.773300170898438
    8. '   ' → logprob: -16.898300170898438
    9. '109' → logprob: -17.023300170898438
    10. ' ' → logprob: -17.773300170898438

Token 1442: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.575939953327179
    2. '10' → logprob: -0.825939953327179
    3. 'int' → logprob: -14.950940132141113
    4. ' ' → logprob: -15.700940132141113
    5. '1' → logprob: -17.700939178466797
    6. '```' → logprob: -18.575939178466797
    7. '109' → logprob: -18.825939178466797
    8. '   ' → logprob: -19.700939178466797
    9. '999' → logprob: -19.700939178466797
    10. 'pow' → logprob: -20.325939178466797

Token 1443: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31331104040145874
    2. '9' → logprob: -1.3133111000061035
    3. '^' → logprob: -10.313310623168945
    4. '000' → logprob: -11.438310623168945
    5. ' **' → logprob: -13.063310623168945
    6. '\xe2\x81' → logprob: -13.313310623168945
    7. '```' → logprob: -14.813310623168945
    8. '*' → logprob: -14.813310623168945
    9. '999' → logprob: -15.438310623168945
    10. '​' → logprob: -15.813310623168945

Token 1444: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '
' → logprob: -20.125
    3. '09' → logprob: -20.375
    4. '```' → logprob: -20.375
    5. ' ' → logprob: -20.625
    6. '

' → logprob: -20.875
    7. '8' → logprob: -20.875
    8. '９' → logprob: -21.5
    9. '``' → logprob: -21.75
    10. 'nine' → logprob: -22.5

Token 1445: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.625
    3. '8' → logprob: -20.0
    4. '```' → logprob: -20.125
    5. ' ' → logprob: -20.375
    6. '
' → logprob: -21.375
    7. '10' → logprob: -21.5
    8. '９' → logprob: -21.5
    9. '

' → logprob: -21.625
    10. '``' → logprob: -21.625

Token 1446: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1437837779521942
    2. ')' → logprob: -2.0187838077545166
    3. '   ' → logprob: -6.8937835693359375
    4. ')
' → logprob: -9.768783569335938
    5. 'else' → logprob: -11.018783569335938
    6. ' )
' → logprob: -11.518783569335938
    7. ' )' → logprob: -12.393783569335938
    8. '       ' → logprob: -13.393783569335938
    9. ')`
' → logprob: -13.518783569335938
    10. ' else' → logprob: -14.018783569335938

Token 1447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139919340610504
    2. 'else' → logprob: -1.313991904258728
    3. ' else' → logprob: -7.313992023468018
    4. '	else' → logprob: -9.68899154663086
    5. 'elif' → logprob: -14.18899154663086
    6. '       ' → logprob: -14.81399154663086
    7. '  ' → logprob: -15.68899154663086
    8. '<|end|>' → logprob: -16.06399154663086
    9. '```' → logprob: -16.18899154663086
    10. ' ' → logprob: -16.18899154663086

Token 1448: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014497014693915844
    2. '   ' → logprob: -4.264496803283691
    3. ' else' → logprob: -8.014496803283691
    4. '	else' → logprob: -13.014496803283691
    5. 'elif' → logprob: -14.389496803283691
    6. 'print' → logprob: -17.389497756958008
    7. ' ' → logprob: -17.639497756958008
    8. '       ' → logprob: -17.764497756958008
    9. '```' → logprob: -18.639497756958008
    10. '  ' → logprob: -18.764497756958008

Token 1449: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1046876534819603
    2. ':' → logprob: -3.1046876907348633
    3. 'print' → logprob: -3.3546876907348633
    4. ':
' → logprob: -3.9796876907348633
    5. ' print' → logprob: -7.104687690734863
    6. '   ' → logprob: -10.104687690734863
    7. '(print' → logprob: -10.229687690734863
    8. '.print' → logprob: -10.729687690734863
    9. '	print' → logprob: -11.479687690734863
    10. '           ' → logprob: -13.104687690734863

Token 1450: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00030674142180942
    2. ' print' → logprob: -8.250307083129883
    3. '   ' → logprob: -10.750307083129883
    4. '       ' → logprob: -10.750307083129883
    5. '```' → logprob: -13.250307083129883
    6. '	print' → logprob: -14.500307083129883
    7. '``' → logprob: -16.625307083129883
    8. '    
' → logprob: -17.125307083129883
    9. '        
' → logprob: -17.750307083129883
    10. '(print' → logprob: -18.250307083129883

Token 1451: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.375
    3. '   ' → logprob: -16.5
    4. '```' → logprob: -16.5
    5. '	print' → logprob: -20.375
    6. '       ' → logprob: -20.375
    7. '``' → logprob: -22.0
    8. 'printf' → logprob: -23.25
    9. '    
' → logprob: -23.5
    10. '.print' → logprob: -24.125

Token 1452: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00043162284418940544
    2. '(d' → logprob: -7.750431537628174
    3. ' d' → logprob: -13.875432014465332
    4. '(' → logprob: -19.125431060791016
    5. ')d' → logprob: -19.250431060791016
    6. '	d' → logprob: -19.625431060791016
    7. '%d' → logprob: -21.000431060791016
    8. '{' → logprob: -21.375431060791016
    9. 'int' → logprob: -21.750431060791016
    10. '$d' → logprob: -22.000431060791016

Token 1453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ' )' → logprob: -12.125007629394531
    3. ')
' → logprob: -13.625007629394531
    4. '<|end|>' → logprob: -15.375007629394531
    5. ')d' → logprob: -15.500007629394531
    6. '   ' → logprob: -15.625007629394531
    7. ')#' → logprob: -16.25000762939453
    8. '())' → logprob: -16.50000762939453
    9. '))' → logprob: -16.75000762939453
    10. ')return' → logprob: -16.75000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1451
Tokens correctement prédits (1ère position, stricte): 358
Tokens correctement prédits (1ère position, avec adaptation): 380
Tokens correctement prédits (top 10): 821
Précision stricte (1ère position): 24.67%
Précision adaptée (1ère position): 26.19%
Précision (top 10): 56.58%
================================================================================
