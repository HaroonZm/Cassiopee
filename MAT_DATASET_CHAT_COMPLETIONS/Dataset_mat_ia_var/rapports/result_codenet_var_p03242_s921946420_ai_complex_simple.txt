================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

s = input()

trans = {ord('9'): 'q', ord('1'): '9', ord('q'): '1'}

def deep_replace(t, d):
    return reduce(add, [[d.get(ord(c), c)] for c in t])

print(''.join(deep_replace(s, trans)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8743318915367126
    2. ' operator' → logprob: -1.4993319511413574
    3. ' itertools' → logprob: -1.6243319511413574
    4. ' collections' → logprob: -1.8743319511413574
    5. ' os' → logprob: -4.874331951141357
    6. 'operator' → logprob: -7.499331951141357
    7. ' typing' → logprob: -8.4993314743042
    8. ' sys' → logprob: -8.6243314743042
    9. 'collections' → logprob: -8.9993314743042
    10. 'math' → logprob: -8.9993314743042

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2564718425273895
    2. '\' → logprob: -2.631471872329712
    3. '(
' → logprob: -3.256471872329712
    4. '\n' → logprob: -3.256471872329712
    5. ',' → logprob: -3.756471872329712
    6. '#' → logprob: -4.631471633911133
    7. ' ' → logprob: -5.131471633911133
    8. 'def' → logprob: -5.131471633911133
    9. ')' → logprob: -5.506471633911133
    10. '
' → logprob: -5.756471633911133

Token 10: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5296599864959717
    2. '#' → logprob: -2.0296599864959717
    3. 'result' → logprob: -3.0296599864959717
    4. 'def' → logprob: -3.4046599864959717
    5. 'print' → logprob: -3.5296599864959717
    6. 'a' → logprob: -3.5296599864959717
    7. '[' → logprob: -3.5296599864959717
    8. ',' → logprob: -3.7796599864959717
    9. '(
' → logprob: -3.7796599864959717
    10. '\' → logprob: -4.404660224914551

Token 11: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.44419923424720764
    2. 'u' → logprob: -1.0691992044448853
    3. 'et' → logprob: -5.694199085235596
    4. 'tr' → logprob: -5.819199085235596
    5. 't' → logprob: -6.319199085235596
    6. 'e' → logprob: -6.694199085235596
    7. '(' → logprob: -7.569199085235596
    8. '=' → logprob: -7.569199085235596
    9. '(u' → logprob: -7.569199085235596
    10. '```' → logprob: -7.819199085235596

Token 12: ' input' (ID: 3422)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.5053303241729736
    2. ' [' → logprob: -1.7553303241729736
    3. ' "' → logprob: -2.0053303241729736
    4. ''' → logprob: -2.2553303241729736
    5. '"' → logprob: -2.5053303241729736
    6. ' []' → logprob: -2.5053303241729736
    7. ' ''' → logprob: -2.6303303241729736
    8. '[' → logprob: -3.3803303241729736
    9. ' ' → logprob: -3.3803303241729736
    10. ' ""' → logprob: -4.2553300857543945

Token 13: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005066845333203673
    2. '('' → logprob: -8.000506401062012
    3. '(
' → logprob: -10.625506401062012
    4. '```' → logprob: -10.625506401062012
    5. '("("' → logprob: -10.625506401062012
    6. '`' → logprob: -11.125506401062012
    7. ''' → logprob: -11.375506401062012
    8. '(`' → logprob: -11.500506401062012
    9. 's' → logprob: -11.500506401062012
    10. '()' → logprob: -11.500506401062012

Token 14: 'trans' (ID: 2623)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05128409340977669
    2. 'r' → logprob: -4.301284313201904
    3. '.' → logprob: -5.301284313201904
    4. 'total' → logprob: -5.676284313201904
    5. 'res' → logprob: -5.676284313201904
    6. ' result' → logprob: -5.676284313201904
    7. 'words' → logprob: -5.676284313201904
    8. ' ' → logprob: -5.801284313201904
    9. 'sum' → logprob: -5.926284313201904
    10. 'tokens' → logprob: -6.426284313201904

Token 15: ' =' (ID: 314)
  Prédit: 'lation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lation' → logprob: -1.173519253730774
    2. 'l' → logprob: -1.923519253730774
    3. ' =' → logprob: -2.0485191345214844
    4. 'lated' → logprob: -2.2985191345214844
    5. 'late' → logprob: -2.5485191345214844
    6. 'form' → logprob: -2.9235191345214844
    7. '=' → logprob: -3.0485191345214844
    8. '_' → logprob: -3.1735191345214844
    9. 'formed' → logprob: -3.1735191345214844
    10. '_table' → logprob: -4.173519134521484

Token 16: ' {' (ID: 354)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9112111926078796
    2. '{' → logprob: -1.1612112522125244
    3. 'dict' → logprob: -1.9112112522125244
    4. '{}' → logprob: -2.7862112522125244
    5. 'lambda' → logprob: -4.036211013793945
    6. '{'' → logprob: -4.161211013793945
    7. 'list' → logprob: -4.661211013793945
    8. '[' → logprob: -5.161211013793945
    9. '[str' → logprob: -5.661211013793945
    10. 'map' → logprob: -5.661211013793945

Token 17: 'ord' (ID: 604)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05661078914999962
    2. ''a' → logprob: -4.181610584259033
    3. ''\' → logprob: -4.181610584259033
    4. ''s' → logprob: -5.056610584259033
    5. '"' → logprob: -5.431610584259033
    6. '}' → logprob: -5.681610584259033
    7. ''}' → logprob: -6.306610584259033
    8. ''i' → logprob: -6.306610584259033
    9. '   ' → logprob: -6.556610584259033
    10. ''"' → logprob: -7.181610584259033

Token 18: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.23882895708084106
    2. '(s' → logprob: -1.7388288974761963
    3. '(c' → logprob: -4.113829135894775
    4. '(i' → logprob: -5.238829135894775
    5. '(char' → logprob: -5.363829135894775
    6. '(ch' → logprob: -5.988829135894775
    7. '(' → logprob: -6.113829135894775
    8. '(x' → logprob: -6.238829135894775
    9. '("("' → logprob: -6.238829135894775
    10. '("' → logprob: -6.988829135894775

Token 19: '9' (ID: 24)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33557599782943726
    2. '0' → logprob: -2.710576057434082
    3. '1' → logprob: -3.335576057434082
    4. 'A' → logprob: -3.335576057434082
    5. '+' → logprob: -3.460576057434082
    6. '('' → logprob: -4.210576057434082
    7. 'а' → logprob: -4.335576057434082
    8. ''' → logprob: -4.960576057434082
    9. 's' → logprob: -5.335576057434082
    10. 'h' → logprob: -5.335576057434082

Token 20: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.15231403708457947
    2. ''' → logprob: -2.7773139476776123
    3. '')' → logprob: -2.9023139476776123
    4. '):' → logprob: -4.027314186096191
    5. ''-' → logprob: -5.777314186096191
    6. ')' → logprob: -7.277314186096191
    7. ''+' → logprob: -7.777314186096191
    8. '':' → logprob: -7.777314186096191
    9. '0' → logprob: -8.027314186096191
    10. ''s' → logprob: -8.152314186096191

Token 21: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8486231565475464
    2. '48' → logprob: -1.3486231565475464
    3. '0' → logprob: -1.9736231565475464
    4. 'ord' → logprob: -2.098623275756836
    5. '10' → logprob: -4.098623275756836
    6. '8' → logprob: -4.473623275756836
    7. '57' → logprob: -5.098623275756836
    8. 'int' → logprob: -6.348623275756836
    9. 'None' → logprob: -6.348623275756836
    10. '49' → logprob: -6.473623275756836

Token 22: 'q' (ID: 80)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5288608074188232
    2. ''' → logprob: -1.5288608074188232
    3. '8' → logprob: -1.9038608074188232
    4. '10' → logprob: -3.7788608074188232
    5. '':' → logprob: -5.778861045837402
    6. ' '' → logprob: -5.778861045837402
    7. '1' → logprob: -6.028861045837402
    8. '':'' → logprob: -6.028861045837402
    9. '"' → logprob: -6.653861045837402
    10. '9' → logprob: -6.653861045837402

Token 23: '',' (ID: 787)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.21718554198741913
    2. '',' → logprob: -2.0921854972839355
    3. 'w' → logprob: -3.2171854972839355
    4. 'u' → logprob: -4.4671854972839355
    5. '9' → logprob: -5.7171854972839355
    6. ''' → logprob: -5.8421854972839355
    7. 'wert' → logprob: -5.8421854972839355
    8. '','' → logprob: -6.4671854972839355
    9. ''},' → logprob: -6.7171854972839355
    10. 'q' → logprob: -6.8421854972839355

Token 24: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.03397727012634277
    2. ' ord' → logprob: -3.4089772701263428
    3. ' ' → logprob: -8.908977508544922
    4. '   ' → logprob: -9.408977508544922
    5. '(ord' → logprob: -10.158977508544922
    6. '}' → logprob: -10.158977508544922
    7. '    ' → logprob: -11.908977508544922
    8. '  ' → logprob: -12.408977508544922
    9. ' }' → logprob: -12.658977508544922
    10. ''' → logprob: -12.658977508544922

Token 25: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001652796781854704
    2. '(' → logprob: -9.000164985656738
    3. ''' → logprob: -10.750164985656738
    4. '('-' → logprob: -12.125164985656738
    5. '('+' → logprob: -12.625164985656738
    6. '(ord' → logprob: -13.250164985656738
    7. '('\' → logprob: -13.375164985656738
    8. '(':' → logprob: -13.375164985656738
    9. '(';' → logprob: -13.500164985656738
    10. ' ('' → logprob: -13.750164985656738

Token 26: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13131020963191986
    2. ''q' → logprob: -3.631310224533081
    3. '0' → logprob: -3.756310224533081
    4. '8' → logprob: -4.131309986114502
    5. '9' → logprob: -4.506309986114502
    6. ''a' → logprob: -4.506309986114502
    7. '1' → logprob: -5.006309986114502
    8. ''s' → logprob: -5.631309986114502
    9. ''z' → logprob: -5.756309986114502
    10. ''p' → logprob: -5.756309986114502

Token 27: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.029964303597807884
    2. '')' → logprob: -4.904964447021484
    3. '0' → logprob: -5.154964447021484
    4. '1' → logprob: -5.529964447021484
    5. '9' → logprob: -5.654964447021484
    6. '2' → logprob: -5.654964447021484
    7. '7' → logprob: -5.779964447021484
    8. '3' → logprob: -7.279964447021484
    9. '6' → logprob: -7.654964447021484
    10. ''' → logprob: -7.904964447021484

Token 28: ' '' (ID: 461)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''q' → logprob: -0.8732979893684387
    2. ''' → logprob: -1.248297929763794
    3. ''w' → logprob: -1.748297929763794
    4. ''p' → logprob: -2.748297929763794
    5. ''u' → logprob: -4.873298168182373
    6. ' '' → logprob: -4.998298168182373
    7. ''a' → logprob: -4.998298168182373
    8. ''i' → logprob: -5.373298168182373
    9. ''z' → logprob: -5.498298168182373
    10. ''e' → logprob: -5.498298168182373

Token 29: '9' (ID: 24)
  Prédit: ''q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''q' → logprob: -1.1347298622131348
    2. 'w' → logprob: -1.2597298622131348
    3. ''w' → logprob: -2.1347298622131348
    4. 'q' → logprob: -2.1347298622131348
    5. ''' → logprob: -2.7597298622131348
    6. ''a' → logprob: -4.259729862213135
    7. '1' → logprob: -4.509729862213135
    8. 'a' → logprob: -4.509729862213135
    9. ''p' → logprob: -4.884729862213135
    10. ''z' → logprob: -5.009729862213135

Token 30: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.542700469493866
    2. ''}' → logprob: -1.0427005290985107
    3. '')' → logprob: -3.5427005290985107
    4. '')}' → logprob: -3.9177005290985107
    5. ''' → logprob: -4.542700290679932
    6. '}' → logprob: -6.292700290679932
    7. '9' → logprob: -6.917700290679932
    8. 'q' → logprob: -7.292700290679932
    9. '7' → logprob: -7.292700290679932
    10. '','' → logprob: -7.917700290679932

Token 31: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.004808295983821154
    2. ' ord' → logprob: -5.37980842590332
    3. '32' → logprob: -9.25480842590332
    4. '(ord' → logprob: -10.25480842590332
    5. '   ' → logprob: -11.00480842590332
    6. ' ' → logprob: -11.62980842590332
    7. '48' → logprob: -11.87980842590332
    8. '49' → logprob: -12.12980842590332
    9. '}' → logprob: -12.50480842590332
    10. '9' → logprob: -13.25480842590332

Token 32: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00021069261129014194
    2. '(' → logprob: -9.125210762023926
    3. '('-' → logprob: -9.750210762023926
    4. '('+' → logprob: -11.500210762023926
    5. '(('' → logprob: -12.750210762023926
    6. '('.')' → logprob: -12.750210762023926
    7. ''' → logprob: -12.875210762023926
    8. '(';' → logprob: -12.875210762023926
    9. '('\' → logprob: -12.875210762023926
    10. '('_' → logprob: -13.000210762023926

Token 33: 'q' (ID: 80)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7284409999847412
    2. 'q' → logprob: -1.1034409999847412
    3. '0' → logprob: -2.103440999984741
    4. '8' → logprob: -3.603440999984741
    5. '7' → logprob: -4.22844123840332
    6. '1' → logprob: -4.47844123840332
    7. 'a' → logprob: -6.10344123840332
    8. '4' → logprob: -6.47844123840332
    9. '3' → logprob: -6.60344123840332
    10. '5' → logprob: -6.85344123840332

Token 34: ''):' (ID: 83830)
  Prédit: ''):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.0018787815934047103
    2. '')' → logprob: -6.37687873840332
    3. ''' → logprob: -9.25187873840332
    4. 'q' → logprob: -11.25187873840332
    5. '9' → logprob: -11.25187873840332
    6. '')}' → logprob: -11.75187873840332
    7. '':' → logprob: -11.87687873840332
    8. ''):
' → logprob: -11.87687873840332
    9. '1' → logprob: -12.50187873840332
    10. ':' → logprob: -12.50187873840332

Token 35: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01956683211028576
    2. ''q' → logprob: -4.769567012786865
    3. ''p' → logprob: -5.394567012786865
    4. ''w' → logprob: -6.894567012786865
    5. ''e' → logprob: -7.019567012786865
    6. '1' → logprob: -7.269567012786865
    7. ''z' → logprob: -7.394567012786865
    8. ''y' → logprob: -7.394567012786865
    9. ''u' → logprob: -7.769567012786865
    10. '49' → logprob: -8.144566535949707

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037650475278496742
    2. '2' → logprob: -6.878765106201172
    3. '9' → logprob: -7.378765106201172
    4. 'w' → logprob: -7.628765106201172
    5. 'u' → logprob: -7.628765106201172
    6. 'e' → logprob: -8.503765106201172
    7. 'a' → logprob: -8.753765106201172
    8. 'q' → logprob: -9.378765106201172
    9. '4' → logprob: -9.378765106201172
    10. ''' → logprob: -9.503765106201172

Token 37: ''}

' (ID: 177722)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.16034790873527527
    2. '}' → logprob: -1.9103479385375977
    3. '',' → logprob: -9.285347938537598
    4. ''' → logprob: -11.785347938537598
    5. '`}' → logprob: -12.410347938537598
    6. '']' → logprob: -12.910347938537598
    7. '"}' → logprob: -13.160347938537598
    8. '')' → logprob: -13.160347938537598
    9. ''})' → logprob: -13.160347938537598
    10. ' }' → logprob: -13.160347938537598

Token 38: 'def' (ID: 1314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5413817763328552
    2. 'r' → logprob: -1.7913818359375
    3. 's' → logprob: -2.5413818359375
    4. 'print' → logprob: -2.6663818359375
    5. 'result' → logprob: -2.7913818359375
    6. 'output' → logprob: -4.1663818359375
    7. 'p' → logprob: -4.4163818359375
    8. 'res' → logprob: -5.9163818359375
    9. 'n' → logprob: -6.0413818359375
    10. 'o' → logprob: -6.7913818359375

Token 39: ' deep' (ID: 8103)
  Prédit: ' translate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' translate' → logprob: -0.7062246203422546
    2. ' transform' → logprob: -0.9562246203422546
    3. 'translate' → logprob: -2.7062246799468994
    4. ' trans' → logprob: -4.20622444152832
    5. 'transform' → logprob: -4.58122444152832
    6. ' transl' → logprob: -4.58122444152832
    7. 'trans' → logprob: -5.20622444152832
    8. ' tr' → logprob: -5.70622444152832
    9. ' replace' → logprob: -5.70622444152832
    10. ' t' → logprob: -6.45622444152832

Token 40: '_replace' (ID: 26234)
  Prédit: '_replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_replace' → logprob: -0.855288565158844
    2. '_map' → logprob: -1.9802885055541992
    3. '_translate' → logprob: -2.105288505554199
    4. '_transform' → logprob: -2.230288505554199
    5. 'map' → logprob: -2.605288505554199
    6. 'replace' → logprob: -2.980288505554199
    7. '_trans' → logprob: -3.105288505554199
    8. 'transform' → logprob: -4.605288505554199
    9. 'trans' → logprob: -4.980288505554199
    10. 'translate' → logprob: -5.480288505554199

Token 41: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4050835967063904
    2. '(s' → logprob: -1.1550836563110352
    3. '(text' → logprob: -4.405083656311035
    4. '(string' → logprob: -6.655083656311035
    5. 's' → logprob: -6.905083656311035
    6. '(word' → logprob: -7.030083656311035
    7. '(x' → logprob: -7.905083656311035
    8. '(obj' → logprob: -8.030083656311035
    9. '(token' → logprob: -8.405083656311035
    10. ' (' → logprob: -8.405083656311035

Token 42: ',' (ID: 11)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.0671527236700058
    2. '):' → logprob: -2.942152738571167
    3. 'uple' → logprob: -4.692152500152588
    4. 'oken' → logprob: -6.567152500152588
    5. ')' → logprob: -7.567152500152588
    6. 'xt' → logprob: -7.942152500152588
    7. ',' → logprob: -8.317152976989746
    8. 'ype' → logprob: -8.567152976989746
    9. 'e' → logprob: -8.817152976989746
    10. 'up' → logprob: -10.067152976989746

Token 43: ' d' (ID: 272)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -1.670810341835022
    2. 'c' → logprob: -1.920810341835022
    3. 'd' → logprob: -2.2958102226257324
    4. 'char' → logprob: -2.4208102226257324
    5. 'trans' → logprob: -2.7958102226257324
    6. 'x' → logprob: -2.9208102226257324
    7. 's' → logprob: -3.0458102226257324
    8. 'key' → logprob: -3.4208102226257324
    9. 't' → logprob: -3.5458102226257324
    10. 'k' → logprob: -3.5458102226257324

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004903609515167773
    2. ')' → logprob: -8.375490188598633
    3. 'ict' → logprob: -9.375490188598633
    4. '):
' → logprob: -10.375490188598633
    5. ':' → logprob: -10.500490188598633
    6. 'ef' → logprob: -10.750490188598633
    7. 'ct' → logprob: -11.000490188598633
    8. ',' → logprob: -11.250490188598633
    9. '}:' → logprob: -11.375490188598633
    10. 'ictionary' → logprob: -11.625490188598633

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013676222413778305
    2. ' if' → logprob: -4.513676166534424
    3. 'if' → logprob: -7.388676166534424
    4. 'r' → logprob: -7.638676166534424
    5. ' ' → logprob: -8.513676643371582
    6. ':' → logprob: -8.513676643371582
    7. ' i' → logprob: -8.763676643371582
    8. '	if' → logprob: -9.138676643371582
    9. 'i' → logprob: -9.263676643371582
    10. '    ' → logprob: -9.638676643371582

Token 46: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1883925348520279
    2. 'return' (adapté à ' return') → logprob: -2.4383926391601562
    3. ' if' → logprob: -2.9383926391601562
    4. '   ' → logprob: -4.438392639160156
    5. 'r' → logprob: -4.938392639160156
    6. 'i' → logprob: -5.688392639160156
    7. ' return' → logprob: -5.688392639160156
    8. 'def' → logprob: -6.563392639160156
    9. 'result' → logprob: -6.563392639160156
    10. ')' → logprob: -7.188392639160156

Token 47: ' reduce' (ID: 10389)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8374221324920654
    2. 'tuple' → logprob: -0.8374221324920654
    3. '''.' → logprob: -2.8374221324920654
    4. 'reduce' → logprob: -3.3374221324920654
    5. '[' → logprob: -4.7124223709106445
    6. 'str' → logprob: -4.9624223709106445
    7. 'dict' → logprob: -5.5874223709106445
    8. '[t' → logprob: -5.7124223709106445
    9. '{' → logprob: -5.7124223709106445
    10. '(t' → logprob: -5.9624223709106445

Token 48: '(add' (ID: 40159)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.20351223647594452
    2. '(' → logprob: -1.703512191772461
    3. '(add' → logprob: -6.578512191772461
    4. '(
' → logprob: -7.328512191772461
    5. '(operator' → logprob: -10.328512191772461
    6. '((' → logprob: -11.828512191772461
    7. 'lambda' → logprob: -12.703512191772461
    8. '(
' → logprob: -13.328512191772461
    9. ' (' → logprob: -13.828512191772461
    10. '(

' → logprob: -14.078512191772461

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031900706235319376
    2. ',[' → logprob: -6.128190040588379
    3. ',(' → logprob: -7.753190040588379
    4. ',map' → logprob: -8.253190040588379
    5. '(' → logprob: -8.753190040588379
    6. '([' → logprob: -9.628190040588379
    7. '[' → logprob: -10.753190040588379
    8. ',
' → logprob: -10.878190040588379
    9. ')' → logprob: -11.753190040588379
    10. ' ,' → logprob: -11.878190040588379

Token 50: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06665133684873581
    2. '[str' → logprob: -4.316651344299316
    3. '[t' → logprob: -4.441651344299316
    4. 'map' → logprob: -4.441651344299316
    5. '[
' → logprob: -4.691651344299316
    6. '[(' → logprob: -5.441651344299316
    7. '(map' → logprob: -5.691651344299316
    8. '['' → logprob: -6.066651344299316
    9. '[list' → logprob: -6.066651344299316
    10. '[[' → logprob: -6.691651344299316

Token 51: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006710976012982428
    2. ' d' → logprob: -8.00067138671875
    3. 'trans' → logprob: -9.50067138671875
    4. '[d' → logprob: -9.62567138671875
    5. '   ' → logprob: -10.12567138671875
    6. '(d' → logprob: -10.37567138671875
    7. 't' → logprob: -11.00067138671875
    8. '```' → logprob: -11.37567138671875
    9. 'chr' → logprob: -11.50067138671875
    10. '[' → logprob: -11.62567138671875

Token 52: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0008681101026013494
    2. '[c' → logprob: -7.375868320465088
    3. 'get' → logprob: -9.75086784362793
    4. '[i' → logprob: -9.87586784362793
    5. '[ch' → logprob: -10.00086784362793
    6. 'c' → logprob: -10.87586784362793
    7. '[t' → logprob: -11.00086784362793
    8. 't' → logprob: -11.37586784362793
    9. '.' → logprob: -11.62586784362793
    10. '].' → logprob: -11.87586784362793

Token 53: '(ord' (ID: 199585)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.246620774269104
    2. '(i' → logprob: -1.996620774269104
    3. '(chr' → logprob: -3.7466206550598145
    4. '(x' → logprob: -3.8716206550598145
    5. '(char' → logprob: -4.6216206550598145
    6. '(ch' → logprob: -4.9966206550598145
    7. 'c' → logprob: -4.9966206550598145
    8. '(ord' → logprob: -5.1216206550598145
    9. 'i' → logprob: -6.3716206550598145
    10. '(k' → logprob: -6.3716206550598145

Token 54: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0629521831870079
    2. '(x' → logprob: -3.5629522800445557
    3. '(ch' → logprob: -4.312952041625977
    4. '(i' → logprob: -4.687952041625977
    5. '(char' → logprob: -5.062952041625977
    6. 'c' → logprob: -6.687952041625977
    7. '(t' → logprob: -7.812952041625977
    8. '(chr' → logprob: -7.812952041625977
    9. '(k' → logprob: -8.187952041625977
    10. '(e' → logprob: -8.312952041625977

Token 55: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0018086989875882864
    2. 'c' → logprob: -7.3768086433410645
    3. '(c' → logprob: -7.8768086433410645
    4. ')' → logprob: -8.126809120178223
    5. ',' → logprob: -8.876809120178223
    6. ''),' → logprob: -9.501809120178223
    7. ')),' → logprob: -10.001809120178223
    8. '()),' → logprob: -10.251809120178223
    9. '))' → logprob: -10.376809120178223
    10. ' ),' → logprob: -10.626809120178223

Token 56: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004320691339671612
    2. 'chr' → logprob: -5.5043206214904785
    3. ' c' → logprob: -8.754321098327637
    4. ')c' → logprob: -10.254321098327637
    5. ')' → logprob: -10.379321098327637
    6. '   ' → logprob: -12.379321098327637
    7. 'ord' → logprob: -12.629321098327637
    8. ' chr' → logprob: -13.129321098327637
    9. 'lambda' → logprob: -13.379321098327637
    10. 'char' → logprob: -13.754321098327637

Token 57: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023103614803403616
    2. ')]' → logprob: -6.252310276031494
    3. ')])' → logprob: -8.877310752868652
    4. '))' → logprob: -9.377310752868652
    5. ' )' → logprob: -10.002310752868652
    6. '])' → logprob: -10.377310752868652
    7. 'for' → logprob: -10.502310752868652
    8. '),' → logprob: -11.127310752868652
    9. ' for' → logprob: -11.627310752868652
    10. ']' → logprob: -11.627310752868652

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2814386487007141
    2. 'for' → logprob: -1.4064385890960693
    3. ' ' → logprob: -9.031438827514648
    4. ']' → logprob: -9.531438827514648
    5. '   ' → logprob: -10.031438827514648
    6. '  ' → logprob: -11.156438827514648
    7. ')' → logprob: -11.531438827514648
    8. '	for' → logprob: -12.156438827514648
    9. ' if' → logprob: -12.406438827514648
    10. 's' → logprob: -12.906438827514648

Token 59: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3202778100967407
    2. ' c' → logprob: -1.3202778100967407
    3. ' t' → logprob: -5.695277690887451
    4. 't' → logprob: -5.695277690887451
    5. ' ' → logprob: -8.69527816772461
    6. '	c' → logprob: -10.69527816772461
    7. '<|end|>' → logprob: -10.94527816772461
    8. ' in' → logprob: -11.32027816772461
    9. ' s' → logprob: -11.57027816772461
    10. '  ' → logprob: -11.57027816772461

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026508476585149765
    2. 'in' → logprob: -3.6515085697174072
    3. 's' → logprob: -8.901508331298828
    4. 't' → logprob: -10.026508331298828
    5. ' ' → logprob: -11.401508331298828
    6. '<|end|>' → logprob: -12.276508331298828
    7. ' t' → logprob: -13.026508331298828
    8. 'import' → logprob: -13.839008331298828
    9. ' s' → logprob: -14.151508331298828
    10. 'In' → logprob: -14.151508331298828

Token 61: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17978565394878387
    2. ' t' → logprob: -1.8047856092453003
    3. 's' → logprob: -11.17978572845459
    4. 'str' → logprob: -11.30478572845459
    5. ' ' → logprob: -12.30478572845459
    6. ' s' → logprob: -12.55478572845459
    7. ' str' → logprob: -12.67978572845459
    8. ' range' → logprob: -14.42978572845459
    9. '	t' → logprob: -14.55478572845459
    10. ' tqdm' → logprob: -14.55478572845459

Token 62: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6354542374610901
    2. '])' → logprob: -0.7604542374610901
    3. '),' → logprob: -6.885454177856445
    4. '))' → logprob: -7.260454177856445
    5. ')])' → logprob: -7.760454177856445
    6. '],' → logprob: -8.010454177856445
    7. ',' → logprob: -9.260454177856445
    8. ' ])' → logprob: -9.510454177856445
    9. ']' → logprob: -9.760454177856445
    10. ' )' → logprob: -10.010454177856445

Token 63: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7439298629760742
    2. 's' → logprob: -1.3689298629760742
    3. '(s' → logprob: -1.8689298629760742
    4. ')' → logprob: -2.368929862976074
    5. '<|end|>' → logprob: -4.493929862976074
    6. '(
' → logprob: -4.993929862976074
    7. '(t' → logprob: -6.868929862976074
    8. '
' → logprob: -7.493929862976074
    9. 'def' → logprob: -7.618929862976074
    10. '()' → logprob: -7.743929862976074

Token 64: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01300221960991621
    2. '(s' → logprob: -4.888002395629883
    3. '(de' → logprob: -6.138002395629883
    4. '("("' → logprob: -6.513002395629883
    5. '('' → logprob: -6.638002395629883
    6. '(trans' → logprob: -9.013002395629883
    7. 's' → logprob: -9.763002395629883
    8. '((' → logprob: -9.888002395629883
    9. '(`' → logprob: -10.513002395629883
    10. 'deep' → logprob: -10.888002395629883

Token 65: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.6080281138420105
    2. 'deep' → logprob: -1.4830281734466553
    3. 's' → logprob: -1.7330281734466553
    4. ''.' → logprob: -3.1080281734466553
    5. ''' → logprob: -5.483027935028076
    6. 'trans' → logprob: -6.733027935028076
    7. 'input' → logprob: -8.233028411865234
    8. ' ''.' → logprob: -8.358028411865234
    9. '"' → logprob: -8.483028411865234
    10. '''' → logprob: -8.858028411865234

Token 66: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.4974866644479334e-05
    2. 'format' → logprob: -11.625015258789062
    3. 'replace' → logprob: -13.500015258789062
    4. 'strip' → logprob: -13.625015258789062
    5. '(join' → logprob: -13.625015258789062
    6. 'concat' → logprob: -14.250015258789062
    7. 'jo' → logprob: -14.500015258789062
    8. 'map' → logprob: -14.875015258789062
    9. ' join' → logprob: -15.375015258789062
    10. 'j' → logprob: -15.875015258789062

Token 67: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.040046531707048416
    2. 'deep' → logprob: -3.415046453475952
    3. '(s' → logprob: -5.415046691894531
    4. '(trans' → logprob: -6.915046691894531
    5. '(' → logprob: -7.415046691894531
    6. '([' → logprob: -8.790046691894531
    7. ')' → logprob: -9.915046691894531
    8. '(list' → logprob: -10.540046691894531
    9. '((' → logprob: -10.790046691894531
    10. ' deep' → logprob: -11.040046691894531

Token 68: 'ep' (ID: 1027)
  Prédit: 'ep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -5.2762428822461516e-05
    2. 'p' → logprob: -9.875052452087402
    3. 'eep' → logprob: -14.125052452087402
    4. 'e' → logprob: -15.500052452087402
    5. 'pth' → logprob: -16.25005340576172
    6. 'pp' → logprob: -16.50005340576172
    7. '[' → logprob: -16.62505340576172
    8. 'f' → logprob: -16.87505340576172
    9. '[p' → logprob: -17.37505340576172
    10. 'eps' → logprob: -17.75005340576172

Token 69: '_replace' (ID: 26234)
  Prédit: '_replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_replace' → logprob: -6.802049756515771e-05
    2. 'replace' → logprob: -9.625067710876465
    3. '_re' → logprob: -14.000067710876465
    4. '_' → logprob: -15.250067710876465
    5. 'Replace' → logprob: -15.500067710876465
    6. '_rep' → logprob: -16.25006866455078
    7. '_r' → logprob: -16.62506866455078
    8. '.replace' → logprob: -16.62506866455078
    9. ')' → logprob: -16.62506866455078
    10. 't' → logprob: -17.37506866455078

Token 70: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00033296257606707513
    2. '(' → logprob: -8.125332832336426
    3. ' (' → logprob: -11.000332832336426
    4. ')' → logprob: -11.750332832336426
    5. ')(' → logprob: -11.875332832336426
    6. 's' → logprob: -12.750332832336426
    7. '(t' → logprob: -14.125332832336426
    8. '))' → logprob: -14.500332832336426
    9. '((' → logprob: -15.125332832336426
    10. '(
' → logprob: -15.125332832336426

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018833002541214228
    2. ')))' → logprob: -6.876883506774902
    3. ')' → logprob: -7.376883506774902
    4. '))' → logprob: -8.751883506774902
    5. ',)' → logprob: -10.501883506774902
    6. ',s' → logprob: -11.001883506774902
    7. '),' → logprob: -11.501883506774902
    8. ' ,' → logprob: -12.001883506774902
    9. ',d' → logprob: -13.126883506774902
    10. '))))' → logprob: -14.626883506774902

Token 72: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.02975500375032425
    2. ' trans' → logprob: -3.529755115509033
    3. '(trans' → logprob: -13.529754638671875
    4. '	trans' → logprob: -14.029754638671875
    5. 'tran' → logprob: -14.654754638671875
    6. ' ' → logprob: -14.654754638671875
    7. 'tr' → logprob: -14.779754638671875
    8. '   ' → logprob: -15.029754638671875
    9. 'tras' → logprob: -15.029754638671875
    10. ')' → logprob: -15.654754638671875

Token 73: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12748496234416962
    2. ')))' → logprob: -2.1274850368499756
    3. ')' → logprob: -7.5024847984313965
    4. '))
' → logprob: -13.002485275268555
    5. '))))' → logprob: -13.252485275268555
    6. ')))
' → logprob: -15.002485275268555
    7. ']))' → logprob: -16.127485275268555
    8. ' ))' → logprob: -16.127485275268555
    9. '),' → logprob: -16.252485275268555
    10. '}))' → logprob: -16.752485275268555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 35.21%
Précision adaptée (1ère position): 35.21%
Précision (top 10): 64.79%
================================================================================
