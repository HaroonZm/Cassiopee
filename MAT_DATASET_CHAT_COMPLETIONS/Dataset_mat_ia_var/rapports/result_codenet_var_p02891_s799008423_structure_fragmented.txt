================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import itertools
import collections
import heapq
import re
import numpy as np

def read_line():
    return sys.stdin.readline().rstrip()

def read_tokens():
    return map(str, sys.stdin.buffer.readline().split())

def read_int():
    return int(sys.stdin.readline())

def read_ints():
    return map(int, sys.stdin.buffer.readline().split())

def read_list():
    return list(map(int, sys.stdin.buffer.readline().split()))

def is_single_char_string(s):
    return len(set(s)) == 1

def pairwise_equal_count(s):
    return count_adjacent_duplicates(s)

def multiply_str(s, times):
    return s * times

def count_adjacent_duplicates(s):
    cnt = 0
    i = 0
    while i < len(s) - 1:
        cnt += increment_if_equal(s, i)
        i += step_increment(s, i)
    return cnt

def increment_if_equal(s, i):
    if s[i] == s[i+1]:
        return 1
    return 0

def step_increment(s, i):
    if s[i] == s[i+1]:
        return 2
    return 1

def calc_special_case_length(s, k):
    return int(len(s) * k / 2)

def get_double_and_single_counts(s):
    cnt_single = count_adjacent_duplicates(s)
    double_s = multiply_str(s, 2)
    cnt_double = count_adjacent_duplicates(double_s)
    return cnt_single, cnt_double

def compute_final_answer(cnt_single, cnt_double, k):
    return (cnt_double - cnt_single) * (k - 1) + cnt_single

def process():
    s = read_line()
    k = read_int()
    if is_single_char_string(s):
        print(calc_special_case_length(s, k))
        return
    cnt_single, cnt_double = get_double_and_single_counts(s)
    print(compute_final_answer(cnt_single, cnt_double, k))

process()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6404924392700195
    2. '.' → logprob: -0.8904924392700195
    3. 'import' → logprob: -4.0154924392700195
    4. 'newline' → logprob: -4.2654924392700195
    5. '\' → logprob: -4.7654924392700195
    6. '<|end|>' → logprob: -5.0154924392700195
    7. '```' → logprob: -5.3904924392700195
    8. '
' → logprob: -5.7654924392700195
    9. '<|end|>' → logprob: -6.5154924392700195
    10. '' → logprob: -6.5154924392700195

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4202059209346771
    2. '\n' → logprob: -2.29520583152771
    3. 'import' → logprob: -2.54520583152771
    4. '
' → logprob: -3.04520583152771
    5. '\' → logprob: -3.42020583152771
    6. '```' → logprob: -3.67020583152771
    7. '<|end|>' → logprob: -3.79520583152771
    8. '

' → logprob: -4.420206069946289
    9. ',' → logprob: -4.545206069946289
    10. '<|end|>' → logprob: -6.170206069946289

Token 7: ' itertools' (ID: 103178)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1645096093416214
    2. ' os' → logprob: -1.914509654045105
    3. 'random' → logprob: -5.9145097732543945
    4. 're' → logprob: -7.6645097732543945
    5. ' random' → logprob: -7.6645097732543945
    6. ' re' → logprob: -8.289509773254395
    7. 'collections' → logprob: -9.289509773254395
    8. 'numpy' → logprob: -10.039509773254395
    9. ' itertools' → logprob: -10.039509773254395
    10. ' numpy' → logprob: -10.164509773254395

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004639334045350552
    2. '\' → logprob: -6.879639148712158
    3. '\n' → logprob: -6.879639148712158
    4. 'import' → logprob: -7.129639148712158
    5. '<|end|>' → logprob: -7.254639148712158
    6. '```' → logprob: -8.379639625549316
    7. '<|end|>' → logprob: -8.379639625549316
    8. '.
' → logprob: -9.004639625549316
    9. ',' → logprob: -9.254639625549316
    10. '
' → logprob: -9.754639625549316

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.054646413773298264
    2. 'import' → logprob: -4.3046464920043945
    3. '```' → logprob: -4.3046464920043945
    4. '\' → logprob: -5.3046464920043945
    5. '\n' → logprob: -5.5546464920043945
    6. '

' → logprob: -5.5546464920043945
    7. '<|end|>' → logprob: -5.6796464920043945
    8. '
' → logprob: -5.8046464920043945
    9. ',' → logprob: -6.0546464920043945
    10. '.

' → logprob: -6.6796464920043945

Token 10: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.638753354549408
    2. ' collections' → logprob: -1.1387534141540527
    3. ' functools' → logprob: -2.6387534141540527
    4. 'os' → logprob: -3.7637534141540527
    5. 'fun' → logprob: -3.8887534141540527
    6. ' operator' → logprob: -4.263753414154053
    7. ' os' → logprob: -4.513753414154053
    8. 'operator' → logprob: -5.013753414154053
    9. 'random' → logprob: -5.888753414154053
    10. ' random' → logprob: -7.138753414154053

Token 11: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 12: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7756122350692749
    2. '

' → logprob: -1.775612235069275
    3. '
' → logprob: -1.900612235069275
    4. '\n' → logprob: -2.5256123542785645
    5. '.' → logprob: -2.7756123542785645
    6. '<|end|>' → logprob: -3.7756123542785645
    7. '```' → logprob: -4.0256123542785645
    8. '\' → logprob: -4.6506123542785645
    9. 'from' → logprob: -5.0256123542785645
    10. 'def' → logprob: -5.1506123542785645

Token 13: ' heap' (ID: 37237)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.3185402154922485
    2. 'fun' → logprob: -1.4435402154922485
    3. ' functools' → logprob: -1.6935402154922485
    4. 'heap' → logprob: -1.9435402154922485
    5. 'operator' → logprob: -2.318540096282959
    6. ' operator' → logprob: -3.943540096282959
    7. ' os' → logprob: -4.068540096282959
    8. ' heap' → logprob: -4.068540096282959
    9. 're' → logprob: -4.693540096282959
    10. 'random' → logprob: -5.693540096282959

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6240566083070007e-06
    2. 'queue' → logprob: -14.375001907348633
    3. 'p' → logprob: -14.625001907348633
    4. 't' → logprob: -14.750001907348633
    5. 'u' → logprob: -16.875001907348633
    6. ' queue' → logprob: -17.000001907348633
    7. 'f' → logprob: -17.125001907348633
    8. 'n' → logprob: -17.625001907348633
    9. 'l' → logprob: -17.875001907348633
    10. '_queue' → logprob: -18.000001907348633

Token 15: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0039043426513672
    2. '\n' → logprob: -1.5039043426513672
    3. 'import' → logprob: -1.6289043426513672
    4. '
' → logprob: -2.378904342651367
    5. '<|end|>' → logprob: -3.128904342651367
    6. '

' → logprob: -3.503904342651367
    7. '\' → logprob: -4.128904342651367
    8. '```' → logprob: -4.378904342651367
    9. '#' → logprob: -5.628904342651367
    10. ',' → logprob: -5.878904342651367

Token 16: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5642004609107971
    2. '
' → logprob: -1.1892004013061523
    3. 'import' → logprob: -2.3142004013061523
    4. '\n' → logprob: -4.189200401306152
    5. '```' → logprob: -5.064200401306152
    6. '
' → logprob: -6.439200401306152
    7. 'def' → logprob: -6.939200401306152
    8. 'from' → logprob: -6.939200401306152
    9. '<|end|>' → logprob: -7.814200401306152
    10. ' 

' → logprob: -7.814200401306152

Token 17: ' re' (ID: 322)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.9568621516227722
    2. ' operator' → logprob: -1.331862211227417
    3. ' functools' → logprob: -1.831862211227417
    4. 'bis' → logprob: -2.206862211227417
    5. 'operator' → logprob: -2.831862211227417
    6. 'random' → logprob: -4.956861972808838
    7. ' os' → logprob: -5.456861972808838
    8. 'os' → logprob: -5.706861972808838
    9. ' random' → logprob: -6.081861972808838
    10. 'fun' → logprob: -6.706861972808838

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22182558476924896
    2. 'import' → logprob: -1.8468255996704102
    3. '
' → logprob: -4.22182559967041
    4. '

' → logprob: -4.84682559967041
    5. '```' → logprob: -5.09682559967041
    6. '<|end|>' → logprob: -5.47182559967041
    7. '\' → logprob: -6.34682559967041
    8. '#' → logprob: -7.09682559967041
    9. '' → logprob: -7.22182559967041
    10. '.' → logprob: -7.22182559967041

Token 19: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1750073879957199
    2. 'import' → logprob: -2.6750073432922363
    3. '
' → logprob: -3.4250073432922363
    4. '```' → logprob: -3.9250073432922363
    5. '<|end|>' → logprob: -4.425007343292236
    6. '#' → logprob: -4.925007343292236
    7. 'n' → logprob: -5.425007343292236
    8. '

' → logprob: -5.550007343292236
    9. '\' → logprob: -5.675007343292236
    10. '' → logprob: -6.050007343292236

Token 20: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.480337530374527
    2. 'os' → logprob: -1.1053375005722046
    3. ' functools' → logprob: -3.855337619781494
    4. 'random' → logprob: -4.730337619781494
    5. 'fun' → logprob: -5.230337619781494
    6. 'operator' → logprob: -5.855337619781494
    7. ' random' → logprob: -5.980337619781494
    8. 'json' → logprob: -6.230337619781494
    9. ' operator' → logprob: -6.480337619781494
    10. ' json' → logprob: -6.730337619781494

Token 21: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0026307078078389168
    2. '<|end|>' → logprob: -6.627630710601807
    3. ' as' → logprob: -6.877630710601807
    4. '.random' → logprob: -9.752630233764648
    5. '.ndarray' → logprob: -9.877630233764648
    6. 'as' → logprob: -9.877630233764648
    7. ' .' → logprob: -10.877630233764648
    8. '.pyplot' → logprob: -11.127630233764648
    9. ' ' → logprob: -11.252630233764648
    10. '.py' → logprob: -12.002630233764648

Token 22: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.00024822709383443
    2. ' ' → logprob: -8.500247955322266
    3. 'np' → logprob: -10.875247955322266
    4. ' numpy' → logprob: -10.875247955322266
    5. ' ' → logprob: -12.625247955322266
    6. ' ndarray' → logprob: -13.125247955322266
    7. ' array' → logprob: -14.375247955322266
    8. ' n' → logprob: -15.500247955322266
    9. ' space' → logprob: -16.000247955322266
    10. ' None' → logprob: -16.125247955322266

Token 23: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34845536947250366
    2. '<|end|>' → logprob: -1.7234554290771484
    3. '
' → logprob: -2.9734554290771484
    4. '\n' → logprob: -4.223455429077148
    5. '#' → logprob: -4.348455429077148
    6. '```' → logprob: -4.473455429077148
    7. 'import' → logprob: -5.223455429077148
    8. '

' → logprob: -5.223455429077148
    9. '\' → logprob: -5.348455429077148
    10. '<|end|>' → logprob: -5.973455429077148

Token 24: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.873445987701416
    2. 'def' → logprob: -1.373445987701416
    3. 'd' → logprob: -1.998445987701416
    4. '.' → logprob: -2.998445987701416
    5. '\' → logprob: -3.498445987701416
    6. 'import' → logprob: -3.623445987701416
    7. '\n' → logprob: -3.873445987701416
    8. 'n' → logprob: -4.248445987701416
    9. 'class' → logprob: -4.623445987701416
    10. 'a' → logprob: -4.998445987701416

Token 25: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001831538276746869
    2. '_' → logprob: -6.501831531524658
    3. ' space' → logprob: -9.376832008361816
    4. ' t' → logprob: -9.876832008361816
    5. ' a' → logprob: -10.501832008361816
    6. ' _' → logprob: -10.501832008361816
    7. '  ' → logprob: -10.626832008361816
    8. '_space' → logprob: -10.876832008361816
    9. ' ' → logprob: -11.376832008361816
    10. ' find' → logprob: -11.626832008361816

Token 26: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3487960696220398
    2. '_' → logprob: -1.2237961292266846
    3. ' (' → logprob: -8.848795890808105
    4. 's' → logprob: -10.473795890808105
    5. '_space' → logprob: -10.598795890808105
    6. ' ' → logprob: -10.723795890808105
    7. '('' → logprob: -11.098795890808105
    8. '```' → logprob: -11.223795890808105
    9. '_line' → logprob: -11.598795890808105
    10. '_a' → logprob: -11.598795890808105

Token 27: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11370569467544556
    2. '()' → logprob: -2.238705635070801
    3. '(' → logprob: -7.238705635070801
    4. 's' → logprob: -9.8637056350708
    5. ' ()' → logprob: -10.8637056350708
    6. '_' → logprob: -11.1137056350708
    7. '():
' → logprob: -11.2387056350708
    8. ' ():' → logprob: -11.6137056350708
    9. ':' → logprob: -11.9887056350708
    10. '()`' → logprob: -11.9887056350708

Token 28: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07625966519117355
    2. '():' → logprob: -2.7012596130371094
    3. '   ' → logprob: -5.826259613037109
    4. ' ()' → logprob: -6.201259613037109
    5. '()
' → logprob: -8.20125961303711
    6. '()\' → logprob: -8.20125961303711
    7. 'return' → logprob: -8.57625961303711
    8. ' return' → logprob: -8.70125961303711
    9. '():
' → logprob: -8.95125961303711
    10. ' ():' → logprob: -9.57625961303711

Token 29: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009126550517976284
    2. ' return' → logprob: -4.884126663208008
    3. '   ' → logprob: -6.759126663208008
    4. 'sys' → logprob: -8.634126663208008
    5. 'input' → logprob: -8.884126663208008
    6. 'line' → logprob: -11.134126663208008
    7. ' sys' → logprob: -12.259126663208008
    8. 'data' → logprob: -12.259126663208008
    9. ' ' → logprob: -12.509126663208008
    10. 's' → logprob: -12.884126663208008

Token 30: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25757333636283875
    2. ' sys' → logprob: -1.5075733661651611
    3. 'input' → logprob: -5.632573127746582
    4. ' ' → logprob: -6.257573127746582
    5. 'sys' → logprob: -9.132573127746582
    6. ' ' → logprob: -11.882573127746582
    7. ' list' → logprob: -12.382573127746582
    8. ' np' → logprob: -12.507573127746582
    9. ' str' → logprob: -13.257573127746582
    10. ' int' → logprob: -13.632573127746582

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012844024458900094
    2. '.' → logprob: -6.751284599304199
    3. '.stdout' → logprob: -9.5012845993042
    4. '.argv' → logprob: -10.8762845993042
    5. '.readline' → logprob: -11.2512845993042
    6. '.std' → logprob: -11.8762845993042
    7. '.st' → logprob: -15.7512845993042
    8. '.input' → logprob: -16.126283645629883
    9. '.stderr' → logprob: -16.251283645629883
    10. ' .' → logprob: -17.376283645629883

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02327762544155121
    2. '.' → logprob: -3.773277521133423
    3. '.read' → logprob: -10.398277282714844
    4. '.readlines' → logprob: -13.648277282714844
    5. ' readline' → logprob: -16.523277282714844
    6. ' .' → logprob: -16.648277282714844
    7. '.rstrip' → logprob: -16.648277282714844
    8. '().' → logprob: -16.773277282714844
    9. '.Read' → logprob: -17.648277282714844
    10. '.​' → logprob: -18.148277282714844

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004670899827033281
    2. '().' → logprob: -5.379671096801758
    3. '()
' → logprob: -10.879671096801758
    4. '(' → logprob: -11.254671096801758
    5. ' ()' → logprob: -11.879671096801758
    6. '()\' → logprob: -12.129671096801758
    7. '()

' → logprob: -12.629671096801758
    8. '())' → logprob: -14.254671096801758
    9. '()(' → logprob: -14.879671096801758
    10. '()`' → logprob: -14.879671096801758

Token 34: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014164921827614307
    2. 'rstrip' → logprob: -4.264164924621582
    3. ' strip' → logprob: -13.639164924621582
    4. '_strip' → logprob: -16.639163970947266
    5. 'str' → logprob: -17.764163970947266
    6. '(strip' → logprob: -18.139163970947266
    7. 'rst' → logprob: -18.139163970947266
    8. 'r' → logprob: -19.389163970947266
    9. 'stripe' → logprob: -19.389163970947266
    10. '```' → logprob: -19.639163970947266

Token 35: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030255557969212532
    2. '(' → logprob: -3.5302555561065674
    3. '()
' → logprob: -8.655255317687988
    4. '()\' → logprob: -9.030255317687988
    5. '\' → logprob: -9.655255317687988
    6. '(\' → logprob: -10.280255317687988
    7. '\n' → logprob: -10.280255317687988
    8. '(
' → logprob: -10.780255317687988
    9. '\(' → logprob: -10.905255317687988
    10. ' ()' → logprob: -11.655255317687988

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045926711754873395
    2. 'd' → logprob: -8.250459671020508
    3. 'class' → logprob: -9.875459671020508
    4. '#' → logprob: -9.875459671020508
    5. '\' → logprob: -10.000459671020508
    6. 'de' → logprob: -10.625459671020508
    7. '```' → logprob: -12.250459671020508
    8. 'n' → logprob: -12.375459671020508
    9. '
' → logprob: -12.750459671020508
    10. 'x' → logprob: -12.875459671020508

Token 37: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2521868348121643
    2. ' read' → logprob: -2.5021867752075195
    3. '_' → logprob: -2.8771867752075195
    4. ' solve' → logprob: -3.8771867752075195
    5. ' ' → logprob: -4.6271867752075195
    6. '_main' → logprob: -4.8771867752075195
    7. ' split' → logprob: -4.8771867752075195
    8. ' calculate' → logprob: -5.6271867752075195
    9. 'main' → logprob: -5.6271867752075195
    10. '_input' → logprob: -5.7521867752075195

Token 38: '_tokens' (ID: 65830)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.02847207896411419
    2. '_' → logprob: -3.6534721851348877
    3. '_int' → logprob: -6.278471946716309
    4. '()' → logprob: -9.403471946716309
    5. '_integer' → logprob: -10.528471946716309
    6. '_word' → logprob: -10.653471946716309
    7. '_val' → logprob: -10.903471946716309
    8. '_token' → logprob: -11.153471946716309
    9. ' _' → logprob: -11.403471946716309
    10. '_n' → logprob: -11.653471946716309

Token 39: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07944377511739731
    2. '(' → logprob: -2.8294436931610107
    3. '():' → logprob: -4.32944393157959
    4. ' ()' → logprob: -5.82944393157959
    5. '().' → logprob: -8.45444393157959
    6. '(){' → logprob: -9.20444393157959
    7. '(split' → logprob: -9.32944393157959
    8. '()*' → logprob: -9.82944393157959
    9. '();' → logprob: -9.95444393157959
    10. '()>' → logprob: -9.95444393157959

Token 40: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4267958998680115
    2. '().' → logprob: -1.1767959594726562
    3. '   ' → logprob: -3.4267959594726562
    4. ' ()' → logprob: -5.301795959472656
    5. '(' → logprob: -7.426795959472656
    6. ' ' → logprob: -8.426795959472656
    7. '()[' → logprob: -8.426795959472656
    8. '.split' → logprob: -8.676795959472656
    9. 'split' → logprob: -9.676795959472656
    10. '  ' → logprob: -9.801795959472656

Token 41: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7703704237937927
    2. ' return' → logprob: -1.1453704833984375
    3. 'sys' → logprob: -2.1453704833984375
    4. ' sys' → logprob: -2.3953704833984375
    5. '   ' → logprob: -4.7703704833984375
    6. ' ' → logprob: -7.0203704833984375
    7. 'list' → logprob: -8.145370483398438
    8. 'read' → logprob: -8.395370483398438
    9. '[]' → logprob: -8.520370483398438
    10. '(sys' → logprob: -8.520370483398438

Token 42: ' map' (ID: 4014)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.762182891368866
    2. ' read' → logprob: -1.0121829509735107
    3. 'read' → logprob: -2.0121829509735107
    4. 'sys' → logprob: -3.5121829509735107
    5. ' list' → logprob: -5.512182712554932
    6. ' input' → logprob: -6.387182712554932
    7. 'list' → logprob: -8.26218318939209
    8. 'input' → logprob: -8.51218318939209
    9. ' readline' → logprob: -9.38718318939209
    10. ' ' → logprob: -9.76218318939209

Token 43: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.3648096024990082
    2. '(' → logprob: -1.6148096323013306
    3. '(int' → logprob: -2.239809513092041
    4. '(lambda' → logprob: -8.6148099899292
    5. '(float' → logprob: -10.8648099899292
    6. '(list' → logprob: -11.1148099899292
    7. '(
' → logprob: -11.7398099899292
    8. '(eval' → logprob: -11.7398099899292
    9. '(

' → logprob: -12.4898099899292
    10. '(s' → logprob: -12.6148099899292

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010771531378850341
    2. ',input' → logprob: -10.125107765197754
    3. ' ,' → logprob: -10.750107765197754
    4. '.strip' → logprob: -10.875107765197754
    5. ',int' → logprob: -11.625107765197754
    6. '.split' → logprob: -12.125107765197754
    7. ',str' → logprob: -12.250107765197754
    8. '.readline' → logprob: -12.625107765197754
    9. ')' → logprob: -13.000107765197754
    10. '.rstrip' → logprob: -14.875107765197754

Token 45: ' sys' (ID: 12228)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03840257227420807
    2. 'read' → logprob: -3.288402557373047
    3. ' sys' → logprob: -8.038402557373047
    4. 'sys' → logprob: -10.913402557373047
    5. '	read' → logprob: -12.038402557373047
    6. ')' → logprob: -12.163402557373047
    7. ' readline' → logprob: -12.163402557373047
    8. ' input' → logprob: -13.788402557373047
    9. ' ' → logprob: -13.788402557373047
    10. '   ' → logprob: -14.413402557373047

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.6934557505883276e-05
    2. '.stdout' → logprob: -10.875057220458984
    3. '.argv' → logprob: -11.125057220458984
    4. '.' → logprob: -11.375057220458984
    5. 'stdin' → logprob: -11.500057220458984
    6. '.std' → logprob: -14.125057220458984
    7. '.stderr' → logprob: -15.000057220458984
    8. '.readline' → logprob: -15.625057220458984
    9. '.in' → logprob: -16.625057220458984
    10. '(stdin' → logprob: -16.750057220458984

Token 47: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001899959403090179
    2. '.' → logprob: -6.7519001960754395
    3. '.stdin' → logprob: -7.3769001960754395
    4. '.read' → logprob: -9.376899719238281
    5. '.readlines' → logprob: -11.751899719238281
    6. ' .' → logprob: -11.751899719238281
    7. '.)' → logprob: -13.626899719238281
    8. ')' → logprob: -14.001899719238281
    9. ').' → logprob: -14.751899719238281
    10. '.argv' → logprob: -15.001899719238281

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005347009282559156
    2. '.read' → logprob: -5.255346775054932
    3. '.' → logprob: -9.63034725189209
    4. '.decode' → logprob: -10.75534725189209
    5. '.readlines' → logprob: -11.63034725189209
    6. '.raw' → logprob: -12.25534725189209
    7. ').' → logprob: -13.00534725189209
    8. '._' → logprob: -13.25534725189209
    9. '.peek' → logprob: -13.25534725189209
    10. '.write' → logprob: -13.50534725189209

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1355748176574707
    2. '())' → logprob: -2.1355748176574707
    3. '()' → logprob: -4.760574817657471
    4. '()).' → logprob: -11.510574340820312
    5. ')' → logprob: -11.635574340820312
    6. ' ())' → logprob: -12.010574340820312
    7. '(' → logprob: -12.260574340820312
    8. '()[' → logprob: -12.260574340820312
    9. '()+' → logprob: -13.260574340820312
    10. '(),' → logprob: -13.510574340820312

Token 50: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.09211859107017517
    2. 'split' → logprob: -3.342118501663208
    3. 'strip' → logprob: -3.342118501663208
    4. 'decode' → logprob: -4.092118740081787
    5. 'read' → logprob: -7.467118740081787
    6. 'raw' → logprob: -13.467118263244629
    7. '.rstrip' → logprob: -14.342118263244629
    8. ' strip' → logprob: -14.842118263244629
    9. '```' → logprob: -14.842118263244629
    10. ' split' → logprob: -15.342118263244629

Token 51: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00869304221123457
    2. '()' → logprob: -4.758693218231201
    3. ' ())' → logprob: -10.633692741394043
    4. '(' → logprob: -11.008692741394043
    5. '()))' → logprob: -11.133692741394043
    6. ')' → logprob: -11.383692741394043
    7. '()]' → logprob: -12.633692741394043
    8. '())
' → logprob: -12.758692741394043
    9. '();)' → logprob: -13.633692741394043
    10. '(),' → logprob: -14.258692741394043

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005068036844022572
    2. '\' → logprob: -8.250506401062012
    3. 'd' → logprob: -9.375506401062012
    4. '#' → logprob: -9.500506401062012
    5. '```' → logprob: -10.000506401062012
    6. 'de' → logprob: -11.125506401062012
    7. '<|end|>' → logprob: -12.750506401062012
    8. ' def' → logprob: -12.750506401062012
    9. '
' → logprob: -12.875506401062012
    10. '(def' → logprob: -12.875506401062012

Token 53: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.42975467443466187
    2. 'read' → logprob: -1.0547547340393066
    3. ' main' → logprob: -8.179754257202148
    4. ' map' → logprob: -8.429754257202148
    5. 'int' → logprob: -8.804754257202148
    6. 'main' → logprob: -9.304754257202148
    7. ' int' → logprob: -9.804754257202148
    8. 'map' → logprob: -9.929754257202148
    9. ' readline' → logprob: -10.304754257202148
    10. ' write' → logprob: -10.679754257202148

Token 54: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.016378141939640045
    2. '_line' → logprob: -4.266377925872803
    3. '_tokens' → logprob: -6.766377925872803
    4. 'int' → logprob: -7.266377925872803
    5. '_in' → logprob: -8.641378402709961
    6. '_' → logprob: -9.391378402709961
    7. '_str' → logprob: -10.391378402709961
    8. '_list' → logprob: -11.641378402709961
    9. '_numbers' → logprob: -11.641378402709961
    10. '()' → logprob: -11.766378402709961

Token 55: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037296530790627003
    2. 's' → logprob: -5.628729820251465
    3. '():' → logprob: -9.253729820251465
    4. 'S' → logprob: -12.128729820251465
    5. ' ()' → logprob: -12.128729820251465
    6. '()]' → logprob: -12.753729820251465
    7. '[]' → logprob: -12.753729820251465
    8. '()`' → logprob: -13.253729820251465
    9. '`()' → logprob: -13.378729820251465
    10. '32' → logprob: -13.503729820251465

Token 56: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.045041199773550034
    2. '(' → logprob: -3.295041084289551
    3. ' ()' → logprob: -5.045041084289551
    4. '_' → logprob: -7.920041084289551
    5. '(int' → logprob: -9.92004108428955
    6. '():' → logprob: -10.92004108428955
    7. 'int' → logprob: -11.17004108428955
    8. '   ' → logprob: -11.29504108428955
    9. '（）' → logprob: -11.54504108428955
    10. '()>' → logprob: -11.79504108428955

Token 57: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44413959980010986
    2. 'int' → logprob: -1.1941395998001099
    3. ' return' → logprob: -2.9441394805908203
    4. 'return' (adapté à ' return') → logprob: -5.94413948059082
    5. '(int' → logprob: -8.56913948059082
    6. '   ' → logprob: -8.69413948059082
    7. ' ' → logprob: -10.81913948059082
    8. '=int' → logprob: -11.94413948059082
    9. '    ' → logprob: -12.81913948059082
    10. '  ' → logprob: -13.19413948059082

Token 58: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0005695947329513729
    2. 'int' → logprob: -7.500569820404053
    3. '(int' → logprob: -11.500569343566895
    4. ' ' → logprob: -12.250569343566895
    5. ' in' → logprob: -13.750569343566895
    6. '  ' → logprob: -15.250569343566895
    7. '	int' → logprob: -15.500569343566895
    8. '   ' → logprob: -16.12557029724121
    9. ' ' → logprob: -16.50057029724121
    10. '[int' → logprob: -16.50057029724121

Token 59: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1291656345129013
    2. '(sys' → logprob: -2.1291656494140625
    3. '(read' → logprob: -6.1291656494140625
    4. '(s' → logprob: -10.379165649414062
    5. ' (' → logprob: -12.379165649414062
    6. '(Sys' → logprob: -12.504165649414062
    7. '(System' → logprob: -12.754165649414062
    8. '(

' → logprob: -13.004165649414062
    9. '(system' → logprob: -13.004165649414062
    10. '()' → logprob: -13.004165649414062

Token 60: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002233640057966113
    2. '.readline' → logprob: -6.252233505249023
    3. '.' → logprob: -9.252233505249023
    4. '._' → logprob: -9.377233505249023
    5. '.stdout' → logprob: -10.127233505249023
    6. '.int' → logprob: -10.252233505249023
    7. '.argv' → logprob: -10.877233505249023
    8. '.randint' → logprob: -11.252233505249023
    9. '.read' → logprob: -12.127233505249023
    10. 'stdin' → logprob: -12.252233505249023

Token 61: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002715873415581882
    2. '.buffer' → logprob: -8.875271797180176
    3. '.read' → logprob: -9.125271797180176
    4. '.' → logprob: -10.875271797180176
    5. '.stdin' → logprob: -12.500271797180176
    6. ' .' → logprob: -17.37527084350586
    7. '.line' → logprob: -18.12527084350586
    8. '.randint' → logprob: -18.12527084350586
    9. '.buf' → logprob: -18.37527084350586
    10. '.)' → logprob: -18.50027084350586

Token 62: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0026811291463673115
    2. '()' → logprob: -6.502681255340576
    3. '().' → logprob: -6.752681255340576
    4. ' ())' → logprob: -12.002680778503418
    5. '())
' → logprob: -13.502680778503418
    6. '();)' → logprob: -14.377680778503418
    7. '()]' → logprob: -14.502680778503418
    8. '())

' → logprob: -14.627680778503418
    9. '()))' → logprob: -14.752680778503418
    10. ')' → logprob: -15.252680778503418

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001016971655189991
    2. '
' → logprob: -8.626016616821289
    3. ' def' → logprob: -8.626016616821289
    4. '

' → logprob: -8.751016616821289
    5. '\' → logprob: -9.001016616821289
    6. '()' → logprob: -9.126016616821289
    7. '```' → logprob: -9.126016616821289
    8. '(' → logprob: -10.376016616821289
    9. '(def' → logprob: -10.501016616821289
    10. '#' → logprob: -10.501016616821289

Token 64: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5256579518318176
    2. 'read' → logprob: -0.9006579518318176
    3. '_read' → logprob: -6.150658130645752
    4. '_' → logprob: -8.525657653808594
    5. ' ' → logprob: -10.150657653808594
    6. 'int' → logprob: -10.650657653808594
    7. '	read' → logprob: -10.650657653808594
    8. ' readline' → logprob: -10.775657653808594
    9. '_int' → logprob: -10.900657653808594
    10. '_float' → logprob: -11.275657653808594

Token 65: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.0556994676589966
    2. '_line' → logprob: -1.0556994676589966
    3. '_' → logprob: -2.055699348449707
    4. '_float' → logprob: -2.930699348449707
    5. '_array' → logprob: -3.305699348449707
    6. '_list' → logprob: -3.430699348449707
    7. 's' → logprob: -4.430699348449707
    8. '_tokens' → logprob: -4.555699348449707
    9. '_space' → logprob: -4.805699348449707
    10. '_uint' → logprob: -5.305699348449707

Token 66: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07281544804573059
    2. '()' → logprob: -2.697815418243408
    3. '_list' → logprob: -6.447815418243408
    4. '_array' → logprob: -6.697815418243408
    5. '_s' → logprob: -11.197815895080566
    6. '_line' → logprob: -11.697815895080566
    7. '_' → logprob: -12.072815895080566
    8. '_vector' → logprob: -12.447815895080566
    9. '()>' → logprob: -12.447815895080566
    10. '32' → logprob: -12.572815895080566

Token 67: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00035333906998857856
    2. '():
' → logprob: -8.000353813171387
    3. '()' → logprob: -11.125353813171387
    4. '():

' → logprob: -13.500353813171387
    5. ' ():' → logprob: -13.750353813171387
    6. '():
' → logprob: -15.625353813171387
    7. '(' → logprob: -15.625353813171387
    8. '()[' → logprob: -16.12535285949707
    9. '().' → logprob: -16.25035285949707
    10. '()>' → logprob: -16.62535285949707

Token 68: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006083441898226738
    2. '():
' → logprob: -5.6310834884643555
    3. '()' → logprob: -6.0060834884643555
    4. '():

' → logprob: -12.131083488464355
    5. '():
' → logprob: -12.881083488464355
    6. '()[' → logprob: -13.131083488464355
    7. ' ():' → logprob: -13.256083488464355
    8. ' ()' → logprob: -13.756083488464355
    9. '   ' → logprob: -14.256083488464355
    10. '(' → logprob: -14.506083488464355

Token 69: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6808561086654663
    2. 'return' (adapté à ' return') → logprob: -1.1808561086654663
    3. 'list' → logprob: -1.8058561086654663
    4. ' return' → logprob: -4.680856227874756
    5. ' map' → logprob: -4.680856227874756
    6. ' list' → logprob: -6.180856227874756
    7. '()' → logprob: -7.180856227874756
    8. '[]' → logprob: -7.930856227874756
    9. '   ' → logprob: -8.555855751037598
    10. 'tuple' → logprob: -8.680855751037598

Token 70: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5407314896583557
    2. ' list' → logprob: -2.040731430053711
    3. '(list' → logprob: -2.290731430053711
    4. 'map' → logprob: -2.290731430053711
    5. '(map' → logprob: -3.040731430053711
    6. ' map' → logprob: -3.540731430053711
    7. '(' → logprob: -4.790731430053711
    8. '[' → logprob: -9.665731430053711
    9. '	list' → logprob: -9.790731430053711
    10. '	map' → logprob: -9.915731430053711

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002477081725373864
    2. '(' → logprob: -6.002477169036865
    3. '<int' → logprob: -14.377476692199707
    4. '(str' → logprob: -14.877476692199707
    5. 'int' → logprob: -15.752476692199707
    6. '(
' → logprob: -16.127477645874023
    7. '=int' → logprob: -16.877477645874023
    8. '[int' → logprob: -17.127477645874023
    9. ' (' → logprob: -17.502477645874023
    10. '(list' → logprob: -17.627477645874023

Token 72: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.6920616626739502
    2. '())' → logprob: -1.5670616626739502
    3. '(),' → logprob: -1.6920616626739502
    4. '()' → logprob: -2.56706166267395
    5. ')' → logprob: -4.442061424255371
    6. ',' → logprob: -4.442061424255371
    7. '(' → logprob: -5.317061424255371
    8. 'sys' → logprob: -7.692061424255371
    9. ' ())' → logprob: -8.317061424255371
    10. ' ()' → logprob: -8.942061424255371

Token 73: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6328744888305664
    2. ' sys' → logprob: -0.7578744888305664
    3. ' read' → logprob: -9.382874488830566
    4. 'read' → logprob: -9.632874488830566
    5. ' ' → logprob: -10.007874488830566
    6. '	sys' → logprob: -10.882874488830566
    7. '(sys' → logprob: -11.007874488830566
    8. ')' → logprob: -11.507874488830566
    9. '   ' → logprob: -11.757874488830566
    10. '=sys' → logprob: -11.882874488830566

Token 74: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011829655850306153
    2. '.readline' → logprob: -7.001183032989502
    3. '.' → logprob: -8.376182556152344
    4. '.stdout' → logprob: -10.251182556152344
    5. '(stdin' → logprob: -13.126182556152344
    6. 'stdin' → logprob: -13.501182556152344
    7. ' .' → logprob: -14.376182556152344
    8. '.argv' → logprob: -14.751182556152344
    9. '._' → logprob: -15.001182556152344
    10. '.readlines' → logprob: -15.876182556152344

Token 75: '.buffer' (ID: 48964)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7316184639930725
    2. '())' → logprob: -0.7316184639930725
    3. '().' → logprob: -3.3566184043884277
    4. ')' → logprob: -6.606618404388428
    5. ' ()' → logprob: -7.481618404388428
    6. '.readline' → logprob: -7.981618404388428
    7. ' ())' → logprob: -8.481618881225586
    8. '()]' → logprob: -9.231618881225586
    9. '()[' → logprob: -9.356618881225586
    10. '(),' → logprob: -9.731618881225586

Token 76: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.939851037808694e-05
    2. '.read' → logprob: -10.875029563903809
    3. '.readlines' → logprob: -12.125029563903809
    4. '.' → logprob: -12.625029563903809
    5. '().' → logprob: -14.250029563903809
    6. ' readline' → logprob: -14.500029563903809
    7. ' .' → logprob: -15.000029563903809
    8. '.split' → logprob: -16.500028610229492
    9. '.decode' → logprob: -16.875028610229492
    10. '   ' → logprob: -17.500028610229492

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008377424674108624
    2. '()' → logprob: -7.375837802886963
    3. '())' → logprob: -8.500837326049805
    4. ' ().' → logprob: -13.000837326049805
    5. ')' → logprob: -13.625837326049805
    6. ' ' → logprob: -13.875837326049805
    7. '   ' → logprob: -14.125837326049805
    8. '.' → logprob: -14.125837326049805
    9. '()).' → logprob: -15.000837326049805
    10. '.split' → logprob: -15.250837326049805

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.729906196298543e-06
    2. ')' → logprob: -11.875009536743164
    3. ' split' → logprob: -13.500009536743164
    4. 'strip' → logprob: -14.625009536743164
    5. '())' → logprob: -14.750009536743164
    6. '(split' → logprob: -15.750009536743164
    7. 'decode' → logprob: -16.250009536743164
    8. 's' → logprob: -16.750009536743164
    9. 'rstrip' → logprob: -17.125009536743164
    10. '.split' → logprob: -17.125009536743164

Token 79: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03167736902832985
    2. ')' → logprob: -3.781677484512329
    3. '()' → logprob: -4.78167724609375
    4. ' ())' → logprob: -11.90667724609375
    5. '())
' → logprob: -12.65667724609375
    6. '()]' → logprob: -13.90667724609375
    7. '(' → logprob: -14.53167724609375
    8. '()))' → logprob: -14.65667724609375
    9. '()
' → logprob: -14.65667724609375
    10. '))' → logprob: -14.78167724609375

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031365033239126205
    2. 'd' → logprob: -3.781364917755127
    3. '
' → logprob: -5.406364917755127
    4. '\' → logprob: -6.156364917755127
    5. '

' → logprob: -7.281364917755127
    6. '\n' → logprob: -8.281365394592285
    7. '#' → logprob: -8.281365394592285
    8. '```' → logprob: -9.031365394592285
    9. 'de' → logprob: -10.156365394592285
    10. 'n' → logprob: -10.906365394592285

Token 81: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01413094811141491
    2. ' ' → logprob: -5.38913106918335
    3. ' main' → logprob: -5.51413106918335
    4. '_' → logprob: -6.26413106918335
    5. ' write' → logprob: -6.26413106918335
    6. 'read' → logprob: -7.51413106918335
    7. ' solve' → logprob: -8.139130592346191
    8. ' space' → logprob: -8.764130592346191
    9. '_read' → logprob: -9.389130592346191
    10. ' decode' → logprob: -9.639130592346191

Token 82: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.39211541414260864
    2. '_str' → logprob: -1.6421153545379639
    3. '_float' → logprob: -2.642115354537964
    4. '_' → logprob: -3.142115354537964
    5. '_string' → logprob: -5.392115592956543
    6. '_list' → logprob: -5.642115592956543
    7. '_array' → logprob: -6.392115592956543
    8. '_s' → logprob: -6.767115592956543
    9. '_char' → logprob: -6.892115592956543
    10. '__' → logprob: -6.892115592956543

Token 83: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030125673860311508
    2. '()' → logprob: -3.530125617980957
    3. '(' → logprob: -8.405125617980957
    4. '_' → logprob: -9.655125617980957
    5. '():
' → logprob: -10.405125617980957
    6. '()>' → logprob: -11.655125617980957
    7. '()">' → logprob: -11.780125617980957
    8. '()]' → logprob: -11.905125617980957
    9. '()[' → logprob: -12.530125617980957
    10. ' ():' → logprob: -13.405125617980957

Token 84: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015693799359723926
    2. '()' → logprob: -7.0015692710876465
    3. ' ():' → logprob: -8.501569747924805
    4. '():
' → logprob: -8.751569747924805
    5. '[]' → logprob: -8.876569747924805
    6. '(' → logprob: -9.251569747924805
    7. ' ()' → logprob: -11.126569747924805
    8. '   ' → logprob: -11.376569747924805
    9. ':' → logprob: -11.501569747924805
    10. '()[' → logprob: -11.876569747924805

Token 85: ' return' (ID: 622)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11215212941169739
    2. '[]' → logprob: -2.862152099609375
    3. 'list' → logprob: -4.112152099609375
    4. '()' → logprob: -4.362152099609375
    5. 'return' (adapté à ' return') → logprob: -4.987152099609375
    6. '   ' → logprob: -5.612152099609375
    7. '():
' → logprob: -5.862152099609375
    8. ' list' → logprob: -6.487152099609375
    9. '=' → logprob: -7.237152099609375
    10. '_list' → logprob: -7.362152099609375

Token 86: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1323520839214325
    2. 'list' → logprob: -2.132352113723755
    3. '[]' → logprob: -6.507351875305176
    4. ' []' → logprob: -6.507351875305176
    5. ' [' → logprob: -6.882351875305176
    6. '[list' → logprob: -6.882351875305176
    7. '[' → logprob: -8.132351875305176
    8. '(list' → logprob: -10.757351875305176
    9. ' ' → logprob: -11.007351875305176
    10. '	list' → logprob: -11.507351875305176

Token 87: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16282077133655548
    2. '(' → logprob: -2.162820816040039
    3. '(sys' → logprob: -3.662820816040039
    4. '(read' → logprob: -5.412820816040039
    5. '()' → logprob: -6.037820816040039
    6. '(int' → logprob: -6.162820816040039
    7. '(np' → logprob: -8.412820816040039
    8. '(eval' → logprob: -8.912820816040039
    9. '(s' → logprob: -9.787820816040039
    10. '(list' → logprob: -10.037820816040039

Token 88: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036341617815196514
    2. '(' → logprob: -5.628633975982666
    3. ')' → logprob: -11.128634452819824
    4. '(str' → logprob: -11.503634452819824
    5. 'int' → logprob: -12.628634452819824
    6. '<int' → logprob: -13.378634452819824
    7. ',int' → logprob: -13.503634452819824
    8. ' (' → logprob: -14.253634452819824
    9. '[int' → logprob: -14.753634452819824
    10. '(float' → logprob: -14.753634452819824

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012167827226221561
    2. ',int' → logprob: -7.376216888427734
    3. '(sys' → logprob: -8.626216888427734
    4. ',s' → logprob: -9.376216888427734
    5. ',(' → logprob: -9.751216888427734
    6. ',System' → logprob: -10.001216888427734
    7. ' ,' → logprob: -10.251216888427734
    8. '(),' → logprob: -10.251216888427734
    9. '))' → logprob: -10.376216888427734
    10. ',input' → logprob: -11.001216888427734

Token 90: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4742497205734253
    2. ' sys' → logprob: -0.9742497205734253
    3. '(sys' → logprob: -10.099249839782715
    4. 'read' → logprob: -10.224249839782715
    5. ' read' → logprob: -10.224249839782715
    6. ')' → logprob: -10.974249839782715
    7. '	sys' → logprob: -10.974249839782715
    8. '=sys' → logprob: -11.724249839782715
    9. ' ' → logprob: -12.599249839782715
    10. '   ' → logprob: -12.724249839782715

Token 91: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0013870239490643144
    2. '.buffer' → logprob: -6.751387119293213
    3. 'stdin' → logprob: -9.126386642456055
    4. 'buffer' → logprob: -9.626386642456055
    5. '.stdout' → logprob: -10.626386642456055
    6. '.readline' → logprob: -11.751386642456055
    7. '.argv' → logprob: -13.376386642456055
    8. '.' → logprob: -13.751386642456055
    9. '```' → logprob: -13.876386642456055
    10. '   ' → logprob: -13.876386642456055

Token 92: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5290732383728027
    2. '.buffer' → logprob: -0.9040732383728027
    3. '().' → logprob: -5.404073238372803
    4. 'buffer' → logprob: -7.654073238372803
    5. '())' → logprob: -8.529073715209961
    6. '()))' → logprob: -8.904073715209961
    7. '()' → logprob: -9.029073715209961
    8. '(buffer' → logprob: -9.154073715209961
    9. '.stdin' → logprob: -9.279073715209961
    10. '.' → logprob: -9.279073715209961

Token 93: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000880973064340651
    2. '.read' → logprob: -7.125881195068359
    3. '.readlines' → logprob: -10.12588119506836
    4. '().' → logprob: -11.00088119506836
    5. '.' → logprob: -11.62588119506836
    6. '   ' → logprob: -11.87588119506836
    7. '.decode' → logprob: -14.12588119506836
    8. ' readline' → logprob: -14.12588119506836
    9. ' .' → logprob: -14.50088119506836
    10. ').' → logprob: -14.75088119506836

Token 94: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.3213025744771585e-05
    2. '()' → logprob: -10.375033378601074
    3. ' ().' → logprob: -14.000033378601074
    4. '   ' → logprob: -15.125033378601074
    5. '.split' → logprob: -15.250033378601074
    6. '(' → logprob: -15.750033378601074
    7. '()[' → logprob: -15.875033378601074
    8. '())' → logprob: -16.250032424926758
    9. '()))' → logprob: -17.125032424926758
    10. '.' → logprob: -17.250032424926758

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.064297824399546e-05
    2. ' split' → logprob: -9.625070571899414
    3. 'strip' → logprob: -13.000070571899414
    4. 'rstrip' → logprob: -13.625070571899414
    5. 'decode' → logprob: -14.625070571899414
    6. ')' → logprob: -15.000070571899414
    7. 'spl' → logprob: -15.625070571899414
    8. '.split' → logprob: -16.250070571899414
    9. '(split' → logprob: -16.750070571899414
    10. ' ' → logprob: -17.625070571899414

Token 96: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03529827669262886
    2. '))' → logprob: -3.5352983474731445
    3. '()' → logprob: -5.4102983474731445
    4. '())' → logprob: -6.9102983474731445
    5. '()))
' → logprob: -10.660298347473145
    6. ')' → logprob: -10.785298347473145
    7. '(' → logprob: -11.285298347473145
    8. '()));' → logprob: -12.910298347473145
    9. '())))' → logprob: -13.410298347473145
    10. '()))

' → logprob: -13.785298347473145

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002925518900156021
    2. 'd' → logprob: -6.002925395965576
    3. 'class' → logprob: -8.627925872802734
    4. '
' → logprob: -9.252925872802734
    5. '\' → logprob: -9.877925872802734
    6. 'de' → logprob: -10.002925872802734
    7. '#' → logprob: -11.127925872802734
    8. '

' → logprob: -11.127925872802734
    9. '```' → logprob: -11.252925872802734
    10. 'D' → logprob: -12.252925872802734

Token 98: ' is' (ID: 382)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.05851057544350624
    2. 'read' → logprob: -2.9335105419158936
    3. ' main' → logprob: -6.558510780334473
    4. ' write' → logprob: -7.433510780334473
    5. ' factorial' → logprob: -8.308510780334473
    6. ' readline' → logprob: -8.308510780334473
    7. 'pow' → logprob: -8.683510780334473
    8. 'write' → logprob: -9.183510780334473
    9. ' pow' → logprob: -9.308510780334473
    10. ' randint' → logprob: -9.683510780334473

Token 99: '_single' (ID: 46053)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.8199359178543091
    2. '_pal' → logprob: -0.8199359178543091
    3. '_' → logprob: -2.4449357986450195
    4. '_valid' → logprob: -4.0699357986450195
    5. '_sorted' → logprob: -5.1949357986450195
    6. '_s' → logprob: -7.1949357986450195
    7. '_lower' → logprob: -7.1949357986450195
    8. '_in' → logprob: -7.3199357986450195
    9. '_digit' → logprob: -7.3199357986450195
    10. 'prime' → logprob: -7.3199357986450195

Token 100: '_char' (ID: 23398)
  Prédit: 'ton'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ton' → logprob: -0.9453056454658508
    2. '_word' → logprob: -0.9453056454658508
    3. '_' → logprob: -1.945305585861206
    4. '_digit' → logprob: -3.570305585861206
    5. '_element' → logprob: -3.945305585861206
    6. '_token' → logprob: -4.695305824279785
    7. '_char' → logprob: -5.320305824279785
    8. '_line' → logprob: -5.570305824279785
    9. '_character' → logprob: -6.070305824279785
    10. '(' → logprob: -6.320305824279785

Token 101: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059159647673368454
    2. '_' → logprob: -3.309159755706787
    3. '()' → logprob: -4.809159755706787
    4. ')' → logprob: -6.184159755706787
    5. 'def' → logprob: -6.434159755706787
    6. '():' → logprob: -6.809159755706787
    7. '(_' → logprob: -6.809159755706787
    8. 's' → logprob: -6.934159755706787
    9. '(char' → logprob: -6.934159755706787
    10. '(a' → logprob: -7.309159755706787

Token 102: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16162841022014618
    2. '(' → logprob: -1.9116283655166626
    3. '(string' → logprob: -6.786628246307373
    4. 's' → logprob: -8.411628723144531
    5. ' (' → logprob: -11.786628723144531
    6. '(str' → logprob: -12.036628723144531
    7. '(x' → logprob: -12.036628723144531
    8. '(char' → logprob: -12.161628723144531
    9. '(word' → logprob: -12.536628723144531
    10. '(a' → logprob: -12.661628723144531

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007410935126245022
    2. '):
' → logprob: -5.882411003112793
    3. ' ):' → logprob: -5.882411003112793
    4. ')' → logprob: -6.507411003112793
    5. '(s' → logprob: -8.507411003112793
    6. 's' → logprob: -9.507411003112793
    7. ' ):
' → logprob: -11.882411003112793
    8. '):

' → logprob: -12.007411003112793
    9. ' ' → logprob: -12.257411003112793
    10. '   ' → logprob: -12.257411003112793

Token 104: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0496981218457222
    2. '(' → logprob: -3.0496981143951416
    3. ':' → logprob: -6.924698352813721
    4. '   ' → logprob: -10.299697875976562
    5. '(
' → logprob: -10.674697875976562
    6. 's' → logprob: -10.674697875976562
    7. '(string' → logprob: -11.174697875976562
    8. '():' → logprob: -11.674697875976562
    9. ' (' → logprob: -12.174697875976562
    10. '(len' → logprob: -12.424697875976562

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17667388916015625
    2. 'return' (adapté à ' return') → logprob: -2.1766738891601562
    3. ' len' → logprob: -3.6766738891601562
    4. 'len' → logprob: -3.8016738891601562
    5. '   ' → logprob: -7.176673889160156
    6. ' s' → logprob: -10.051673889160156
    7. '(len' → logprob: -10.676673889160156
    8. ' ' → logprob: -11.051673889160156
    9. ' isinstance' → logprob: -11.301673889160156
    10. 's' → logprob: -11.426673889160156

Token 106: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5764828324317932
    2. 'len' → logprob: -0.8264828324317932
    3. ' isinstance' → logprob: -7.576482772827148
    4. '(len' → logprob: -10.451482772827148
    5. ' ' → logprob: -14.451482772827148
    6. 'is' → logprob: -14.701482772827148
    7. '	len' → logprob: -15.076482772827148
    8. '   ' → logprob: -15.576482772827148
    9. ' type' → logprob: -15.701482772827148
    10. 'type' → logprob: -15.951482772827148

Token 107: '(set' (ID: 25904)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006717505399137735
    2. '(' → logprob: -5.006717681884766
    3. '(
' → logprob: -13.756717681884766
    4. ' (' → logprob: -14.131717681884766
    5. 's' → logprob: -14.881717681884766
    6. '(

' → logprob: -17.506717681884766
    7. '()' → logprob: -18.756717681884766
    8. ' ' → logprob: -18.881717681884766
    9. '('' → logprob: -19.381717681884766
    10. '(str' → logprob: -20.381717681884766

Token 108: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00023596010578330606
    2. '(' → logprob: -8.375235557556152
    3. ')' → logprob: -12.500235557556152
    4. 's' → logprob: -13.875235557556152
    5. ' (' → logprob: -15.250235557556152
    6. '(
' → logprob: -15.375235557556152
    7. '((' → logprob: -16.12523651123047
    8. ')(' → logprob: -16.12523651123047
    9. '()' → logprob: -17.12523651123047
    10. '('' → logprob: -18.62523651123047

Token 109: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048926498740911484
    2. '())' → logprob: -3.548926591873169
    3. ')==' → logprob: -4.17392635345459
    4. '))' → logprob: -5.67392635345459
    5. ' )' → logprob: -9.04892635345459
    6. '(s' → logprob: -11.17392635345459
    7. ' ())' → logprob: -11.79892635345459
    8. '(' → logprob: -12.04892635345459
    9. '==' → logprob: -12.17392635345459
    10. ')=' → logprob: -12.92392635345459

Token 110: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3543190062046051
    2. '==' → logprob: -1.3543189764022827
    3. '()' → logprob: -3.7293190956115723
    4. '()==' → logprob: -5.104319095611572
    5. '(' → logprob: -5.729319095611572
    6. ')' → logprob: -5.854319095611572
    7. '<|end|>' → logprob: -7.104319095611572
    8. '=' → logprob: -7.104319095611572
    9. '1' → logprob: -7.479319095611572
    10. '(s' → logprob: -7.604319095611572

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. 'len' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.375336647033691
    5. '  ' → logprob: -15.875336647033691
    6. '
' → logprob: -16.750337600708008
    7. '<|end|>' → logprob: -16.812837600708008
    8. ' ' → logprob: -16.937837600708008
    9. '۱' → logprob: -17.250337600708008
    10. '' → logprob: -17.375337600708008

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -14.375032424926758
    4. 'len' → logprob: -15.750032424926758
    5. '```' → logprob: -16.812532424926758
    6. '' → logprob: -17.062532424926758
    7. '0' → logprob: -17.062532424926758
    8. '۱' → logprob: -17.187532424926758
    9. '{' → logprob: -17.562532424926758
    10. '   ' → logprob: -18.062532424926758

Token 113: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3053427040576935
    2. '<|end|>' → logprob: -1.680342674255371
    3. '
' → logprob: -2.680342674255371
    4. '

' → logprob: -5.555342674255371
    5. '\' → logprob: -6.180342674255371
    6. '\n' → logprob: -6.930342674255371
    7. '#' → logprob: -7.930342674255371
    8. '<|end|>' → logprob: -8.180342674255371
    9. ' and' → logprob: -8.930342674255371
    10. ' def' → logprob: -9.180342674255371

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07879327982664108
    2. '
' → logprob: -2.7037932872772217
    3. '<|end|>' → logprob: -5.703793048858643
    4. '#' → logprob: -5.828793048858643
    5. '\' → logprob: -6.703793048858643
    6. '

' → logprob: -7.703793048858643
    7. '\n' → logprob: -8.3287935256958
    8. 'd' → logprob: -9.0787935256958
    9. ' def' → logprob: -9.5787935256958
    10. '<|end|>' → logprob: -9.8287935256958

Token 115: ' pair' (ID: 10610)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5340420007705688
    2. ' count' → logprob: -1.7840420007705688
    3. ' solve' → logprob: -3.1590418815612793
    4. ' check' → logprob: -3.2840418815612793
    5. ' find' → logprob: -3.4090418815612793
    6. ' max' → logprob: -3.9090418815612793
    7. ' main' → logprob: -4.409041881561279
    8. ' all' → logprob: -4.534041881561279
    9. ' calculate' → logprob: -4.659041881561279
    10. ' get' → logprob: -5.034041881561279

Token 116: 'wise' (ID: 7480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3641452193260193
    2. 'wise' → logprob: -1.239145278930664
    3. '(s' → logprob: -4.864145278930664
    4. '(' → logprob: -5.614145278930664
    5. '_s' → logprob: -6.364145278930664
    6. '_' → logprob: -7.114145278930664
    7. '_list' → logprob: -7.864145278930664
    8. '_sum' → logprob: -8.614145278930664
    9. '(a' → logprob: -8.864145278930664
    10. '_first' → logprob: -9.114145278930664

Token 117: '_equal' (ID: 27882)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.08891492336988449
    2. '(' → logprob: -2.7139148712158203
    3. '(it' → logprob: -4.21391487121582
    4. '(iterator' → logprob: -6.33891487121582
    5. '(lst' → logprob: -6.83891487121582
    6. '(s' → logprob: -7.58891487121582
    7. ' itertools' → logprob: -8.21391487121582
    8. '(ls' → logprob: -8.33891487121582
    9. '(l' → logprob: -10.83891487121582
    10. '(_' → logprob: -10.96391487121582

Token 118: '_count' (ID: 7536)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09886961430311203
    2. '(s' → logprob: -2.848869562149048
    3. '(' → logprob: -3.348869562149048
    4. '(lst' → logprob: -7.723869800567627
    5. '(ls' → logprob: -8.973869323730469
    6. '(l' → logprob: -9.098869323730469
    7. ' (' → logprob: -9.223869323730469
    8. '(x' → logprob: -9.223869323730469
    9. '(lhs' → logprob: -9.973869323730469
    10. '(ll' → logprob: -10.473869323730469

Token 119: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.25584572553634644
    2. '(a' → logprob: -1.7558457851409912
    3. '(' → logprob: -3.005845785140991
    4. '(l' → logprob: -6.130845546722412
    5. '(lst' → logprob: -7.005845546722412
    6. '(p' → logprob: -8.88084602355957
    7. '(strings' → logprob: -9.38084602355957
    8. '(x' → logprob: -10.00584602355957
    9. '(ls' → logprob: -10.13084602355957
    10. '(ss' → logprob: -11.50584602355957

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027661214116960764
    2. '):
' → logprob: -6.127766132354736
    3. ' ):' → logprob: -8.127765655517578
    4. ')' → logprob: -8.377765655517578
    5. '(s' → logprob: -10.877765655517578
    6. 's' → logprob: -10.877765655517578
    7. ',' → logprob: -11.377765655517578
    8. '(' → logprob: -13.377765655517578
    9. ':' → logprob: -13.877765655517578
    10. ' ):
' → logprob: -14.002765655517578

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04842383414506912
    2. ':' → logprob: -3.6734237670898438
    3. '(' → logprob: -4.048423767089844
    4. ',' → logprob: -7.048423767089844
    5. '(s' → logprob: -7.048423767089844
    6. '():' → logprob: -7.548423767089844
    7. ' ' → logprob: -7.673423767089844
    8. ':
' → logprob: -8.048423767089844
    9. 's' → logprob: -8.673423767089844
    10. '  ' → logprob: -9.173423767089844

Token 122: ' return' (ID: 622)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3671448528766632
    2. ' sum' → logprob: -1.2421448230743408
    3. ' return' → logprob: -4.74214506149292
    4. 'return' (adapté à ' return') → logprob: -5.24214506149292
    5. '   ' → logprob: -5.49214506149292
    6. ' ' → logprob: -8.867144584655762
    7. '0' → logprob: -9.242144584655762
    8. '
' → logprob: -9.617144584655762
    9. 'count' → logprob: -10.867144584655762
    10. '1' → logprob: -10.992144584655762

Token 123: ' count' (ID: 3605)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6934975385665894
    2. 'sum' → logprob: -0.6934975385665894
    3. '(sum' → logprob: -9.318497657775879
    4. 'len' → logprob: -9.693497657775879
    5. '[' → logprob: -10.068497657775879
    6. ' len' → logprob: -10.193497657775879
    7. '   ' → logprob: -10.193497657775879
    8. ' [' → logprob: -10.568497657775879
    9. ' ' → logprob: -10.568497657775879
    10. 's' → logprob: -11.568497657775879

Token 124: '_adj' (ID: 117293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18452908098697662
    2. '(s' → logprob: -2.1845290660858154
    3. '(sum' → logprob: -3.1845290660858154
    4. '(pair' → logprob: -5.5595293045043945
    5. '(i' → logprob: -5.6845293045043945
    6. '(len' → logprob: -6.1845293045043945
    7. 'sum' → logprob: -6.4345293045043945
    8. '((' → logprob: -6.8095293045043945
    9. '(
' → logprob: -7.4345293045043945
    10. '=' → logprob: -7.6845293045043945

Token 125: 'acent' (ID: 28063)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3391200006008148
    2. 'acent' → logprob: -1.4641200304031372
    3. 'oint' → logprob: -3.9641199111938477
    4. '_pairs' → logprob: -4.964119911193848
    5. '```' → logprob: -5.089119911193848
    6. 'ac' → logprob: -5.214119911193848
    7. 'oints' → logprob: -5.839119911193848
    8. '=' → logprob: -5.839119911193848
    9. 's' → logprob: -6.214119911193848
    10. '=s' → logprob: -6.589119911193848

Token 126: '_duplicates' (ID: 196009)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.10971836000680923
    2. '(s' → logprob: -2.3597183227539062
    3. '_equal' → logprob: -5.859718322753906
    4. '_' → logprob: -6.609718322753906
    5. 's' → logprob: -6.734718322753906
    6. '_chars' → logprob: -6.859718322753906
    7. '_tokens' → logprob: -7.234718322753906
    8. '(' → logprob: -7.359718322753906
    9. '_equals' → logprob: -7.484718322753906
    10. '_matches' → logprob: -8.484718322753906

Token 127: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07901834696531296
    2. '(' → logprob: -2.5790183544158936
    3. ' (' → logprob: -9.329018592834473
    4. '(
' → logprob: -10.579018592834473
    5. '(len' → logprob: -12.204018592834473
    6. '((' → logprob: -13.079018592834473
    7. 's' → logprob: -13.204018592834473
    8. '(ss' → logprob: -13.954018592834473
    9. '(count' → logprob: -14.329018592834473
    10. ' ' → logprob: -14.579018592834473

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5397525429725647
    2. '(' → logprob: -0.9147525429725647
    3. '(s' → logprob: -4.41475248336792
    4. 's' → logprob: -5.66475248336792
    5. ',' → logprob: -8.039752960205078
    6. '(
' → logprob: -8.539752960205078
    7. ' )' → logprob: -9.164752960205078
    8. ' ' → logprob: -9.539752960205078
    9. '[' → logprob: -9.664752960205078
    10. ' (' → logprob: -10.039752960205078

Token 129: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07169272005558014
    2. '(s' → logprob: -3.196692705154419
    3. '(
' → logprob: -4.071692943572998
    4. '(' → logprob: -4.571692943572998
    5. '
' → logprob: -7.446692943572998
    6. '(

' → logprob: -9.19669246673584
    7. '(def' → logprob: -9.44669246673584
    8. ' def' → logprob: -9.82169246673584
    9. 's' → logprob: -10.19669246673584
    10. '

' → logprob: -11.69669246673584

Token 130: ' multiply' (ID: 57388)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.35078853368759155
    2. 'count' → logprob: -1.2257885932922363
    3. ' pair' → logprob: -6.725788593292236
    4. 'def' → logprob: -7.975788593292236
    5. 's' → logprob: -8.350788116455078
    6. 'pair' → logprob: -8.600788116455078
    7. ' def' → logprob: -8.975788116455078
    8. '(count' → logprob: -9.725788116455078
    9. ' is' → logprob: -10.600788116455078
    10. ' s' → logprob: -10.600788116455078

Token 131: '_str' (ID: 6182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027731679379940033
    2. '(a' → logprob: -3.6527316570281982
    3. ' (' → logprob: -7.902731895446777
    4. '(x' → logprob: -8.277731895446777
    5. '(s' → logprob: -9.277731895446777
    6. '<|end|>' → logprob: -9.277731895446777
    7. '(
' → logprob: -9.402731895446777
    8. '(n' → logprob: -9.777731895446777
    9. ' ' → logprob: -10.027731895446777
    10. '('' → logprob: -10.027731895446777

Token 132: '(s' (ID: 1858)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.453385591506958
    2. 'ings' → logprob: -1.328385591506958
    3. '(s' → logprob: -2.953385591506958
    4. '(str' → logprob: -3.703385591506958
    5. '(a' → logprob: -4.453385353088379
    6. 's' → logprob: -4.828385353088379
    7. 'ed' → logprob: -6.828385353088379
    8. '(' → logprob: -7.078385353088379
    9. '(strings' → logprob: -7.578385353088379
    10. 'ingss' → logprob: -9.328385353088379

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005539863486774266
    2. ',n' → logprob: -8.125554084777832
    3. '):' → logprob: -8.875554084777832
    4. ' ,' → logprob: -9.500554084777832
    5. ',s' → logprob: -11.625554084777832
    6. 's' → logprob: -11.875554084777832
    7. ':' → logprob: -12.000554084777832
    8. ',k' → logprob: -12.625554084777832
    9. ',i' → logprob: -13.125554084777832
    10. ',int' → logprob: -13.250554084777832

Token 134: ' times' (ID: 4238)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5812990069389343
    2. 'n' → logprob: -0.8312990069389343
    3. ' k' → logprob: -6.206298828125
    4. ' ' → logprob: -6.581298828125
    5. 'k' → logprob: -6.706298828125
    6. ' times' → logprob: -8.831298828125
    7. 'num' → logprob: -9.081298828125
    8. '2' → logprob: -9.331298828125
    9. 'times' → logprob: -9.706298828125
    10. '3' → logprob: -9.831298828125

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008483405690640211
    2. ')' → logprob: -7.625848293304443
    3. '):
' → logprob: -8.250848770141602
    4. ' ):' → logprob: -9.500848770141602
    5. '=' → logprob: -11.000848770141602
    6. ':' → logprob: -12.750848770141602
    7. '):
' → logprob: -12.875848770141602
    8. '*' → logprob: -14.625848770141602
    9. ' ' → logprob: -15.000848770141602
    10. ' )' → logprob: -15.125848770141602

Token 136: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007492328295484185
    2. '   ' → logprob: -8.250749588012695
    3. ':
' → logprob: -8.250749588012695
    4. '*' → logprob: -8.750749588012695
    5. '):' → logprob: -10.250749588012695
    6. ':return' → logprob: -11.250749588012695
    7. '(' → logprob: -12.000749588012695
    8. ' :' → logprob: -13.125749588012695
    9. '*:' → logprob: -13.125749588012695
    10. '():' → logprob: -13.250749588012695

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5566617250442505
    2. ' return' → logprob: -0.9316617250442505
    3. 'return' (adapté à ' return') → logprob: -3.431661605834961
    4. '	return' → logprob: -7.681661605834961
    5. ' s' → logprob: -9.431661605834961
    6. ' ' → logprob: -10.681661605834961
    7. '    ' → logprob: -10.681661605834961
    8. 's' → logprob: -10.806661605834961
    9. '  ' → logprob: -11.431661605834961
    10. '   ' → logprob: -11.556661605834961

Token 138: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47408103942871094
    2. ' s' → logprob: -0.9740810394287109
    3. '(s' → logprob: -13.224081039428711
    4. 'str' → logprob: -13.849081039428711
    5. '`s' → logprob: -15.224081039428711
    6. ' str' → logprob: -15.224081039428711
    7. '	s' → logprob: -15.474081039428711
    8. '```' → logprob: -16.09908103942871
    9. '   ' → logprob: -16.59908103942871
    10. '_s' → logprob: -16.72408103942871

Token 139: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08921010792255402
    2. ' *' → logprob: -2.464210033416748
    3. '+' → logprob: -8.339210510253906
    4. ' times' → logprob: -11.464210510253906
    5. ' +' → logprob: -11.714210510253906
    6. 'times' → logprob: -12.464210510253906
    7. ' ' → logprob: -13.214210510253906
    8. '(times' → logprob: -13.339210510253906
    9. '[' → logprob: -13.589210510253906
    10. '*t' → logprob: -13.839210510253906

Token 140: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.20142844319343567
    2. ' times' → logprob: -1.7014284133911133
    3. 'time' → logprob: -11.701428413391113
    4. '(times' → logprob: -12.451428413391113
    5. 'tim' → logprob: -13.326428413391113
    6. 't' → logprob: -14.701428413391113
    7. ' ' → logprob: -15.201428413391113
    8. ' time' → logprob: -15.451428413391113
    9. 'ti' → logprob: -15.826428413391113
    10. '```' → logprob: -16.32642936706543

Token 141: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0045433384366333485
    2. '<|end|>' → logprob: -5.504543304443359
    3. '
' → logprob: -8.12954330444336
    4. '<|end|>' → logprob: -9.50454330444336
    5. '#' → logprob: -9.87954330444336
    6. '```' → logprob: -11.75454330444336
    7. ' def' → logprob: -11.75454330444336
    8. '\' → logprob: -12.00454330444336
    9. '\n' → logprob: -12.75454330444336
    10. '(def' → logprob: -13.37954330444336

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.036524842376821e-05
    2. '#' → logprob: -10.500040054321289
    3. 'class' → logprob: -11.500040054321289
    4. 'de' → logprob: -14.250040054321289
    5. '\' → logprob: -14.750040054321289
    6. 'd' → logprob: -15.000040054321289
    7. 'from' → logprob: -15.500040054321289
    8. '```' → logprob: -16.00004005432129
    9. 'import' → logprob: -16.12504005432129
    10. ' def' → logprob: -16.37504005432129

Token 143: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16923443973064423
    2. ' is' → logprob: -3.29423451423645
    3. ' count' → logprob: -3.41923451423645
    4. ' multiply' → logprob: -3.79423451423645
    5. 'main' → logprob: -4.169234275817871
    6. ' pair' → logprob: -5.169234275817871
    7. ' factorial' → logprob: -5.419234275817871
    8. ' reverse' → logprob: -5.544234275817871
    9. ' gcd' → logprob: -5.544234275817871
    10. ' pow' → logprob: -5.794234275817871

Token 144: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.011350308544933796
    2. '_' → logprob: -4.511350154876709
    3. '_ad' → logprob: -8.386350631713867
    4. '_chars' → logprob: -11.386350631713867
    5. '_a' → logprob: -12.136350631713867
    6. 'def' → logprob: -12.261350631713867
    7. '_str' → logprob: -12.511350631713867
    8. 'adj' → logprob: -12.511350631713867
    9. '_def' → logprob: -12.886350631713867
    10. '_s' → logprob: -13.011350631713867

Token 145: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0003721622342709452
    2. 'ac' → logprob: -8.250371932983398
    3. '```' → logprob: -9.875371932983398
    4. 'acency' → logprob: -11.500371932983398
    5. 'cent' → logprob: -11.750371932983398
    6. 'def' → logprob: -12.625371932983398
    7. 'ent' → logprob: -13.000371932983398
    8. 'alent' → logprob: -13.000371932983398
    9. 'acet' → logprob: -13.250371932983398
    10. ')' → logprob: -13.375371932983398

Token 146: '_duplicates' (ID: 196009)
  Prédit: '_duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duplicates' → logprob: -0.011664717458188534
    2. '_' → logprob: -4.511664867401123
    3. '_dup' → logprob: -8.261664390563965
    4. '_duplicate' → logprob: -8.886664390563965
    5. '_equals' → logprob: -10.511664390563965
    6. '_s' → logprob: -10.886664390563965
    7. '_tokens' → logprob: -11.386664390563965
    8. '_neighbors' → logprob: -11.386664390563965
    9. '_chars' → logprob: -11.511664390563965
    10. '_equal' → logprob: -11.511664390563965

Token 147: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003469057264737785
    2. '(' → logprob: -8.000347137451172
    3. ' (' → logprob: -11.625347137451172
    4. 's' → logprob: -13.625347137451172
    5. '(ss' → logprob: -14.625347137451172
    6. '(S' → logprob: -16.000347137451172
    7. '(x' → logprob: -16.125347137451172
    8. '(n' → logprob: -16.250347137451172
    9. '(a' → logprob: -16.250347137451172
    10. 'def' → logprob: -16.500347137451172

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019594402983784676
    2. '):
' → logprob: -6.251959323883057
    3. ' ):' → logprob: -10.876959800720215
    4. ')' → logprob: -11.876959800720215
    5. 's' → logprob: -12.876959800720215
    6. '):
' → logprob: -13.376959800720215
    7. ':' → logprob: -14.501959800720215
    8. '   ' → logprob: -15.876959800720215
    9. '=' → logprob: -16.7519588470459
    10. ' ):
' → logprob: -16.8769588470459

Token 149: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8240914940834045
    2. '   ' → logprob: -0.9490914940834045
    3. 'sum' → logprob: -2.0740914344787598
    4. 'cnt' → logprob: -3.1990914344787598
    5. 'return' → logprob: -5.19909143447876
    6. 'counter' → logprob: -7.07409143447876
    7. 'c' → logprob: -7.57409143447876
    8. '0' → logprob: -8.574091911315918
    9. 'total' → logprob: -8.824091911315918
    10. '7' → logprob: -9.324091911315918

Token 150: ' cnt' (ID: 27340)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0023321169428527355
    2. 'count' → logprob: -6.5023322105407715
    3. ' sum' → logprob: -8.127331733703613
    4. 'return' → logprob: -8.502331733703613
    5. 'cnt' (adapté à ' cnt') → logprob: -9.002331733703613
    6. '   ' → logprob: -9.127331733703613
    7. 'ans' → logprob: -9.627331733703613
    8. 'res' → logprob: -11.252331733703613
    9. 'counter' → logprob: -12.002331733703613
    10. 'result' → logprob: -12.377331733703613

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021702200174332
    2. ' =' → logprob: -2.35021710395813
    3. ' ' → logprob: -11.85021686553955
    4. ',' → logprob: -13.60021686553955
    5. '   ' → logprob: -14.22521686553955
    6. '  ' → logprob: -14.72521686553955
    7. 'er' → logprob: -15.35021686553955
    8. '	' → logprob: -15.47521686553955
    9. '=int' → logprob: -16.100217819213867
    10. ')' → logprob: -16.850217819213867

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '1' → logprob: -15.50407886505127
    4. 'collections' → logprob: -15.50407886505127
    5. '   ' → logprob: -16.879079818725586
    6. 'sum' → logprob: -17.129079818725586
    7. '[' → logprob: -17.629079818725586
    8. '  ' → logprob: -17.754079818725586
    9. ' collections' → logprob: -17.879079818725586
    10. ' ' → logprob: -18.004079818725586

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.027225754223764e-05
    2. '1' → logprob: -9.750060081481934
    3. ' ' → logprob: -13.375060081481934
    4. 'collections' → logprob: -15.500060081481934
    5. '[' → logprob: -15.875060081481934
    6. 'sum' → logprob: -17.50006103515625
    7. 'default' → logprob: -18.00006103515625
    8. '[]' → logprob: -18.00006103515625
    9. '2' → logprob: -18.12506103515625
    10. 'len' → logprob: -18.62506103515625

Token 154: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9822098612785339
    2. '<|end|>' → logprob: -1.4822099208831787
    3. '   ' → logprob: -1.6072099208831787
    4. '
' → logprob: -2.1072099208831787
    5. 'for' → logprob: -3.1072099208831787
    6. ',' → logprob: -4.2322096824646
    7. '	for' → logprob: -4.7322096824646
    8. ' ' → logprob: -5.8572096824646
    9. '<|end|>' → logprob: -6.4822096824646
    10. ',
' → logprob: -7.1072096824646

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00510413758456707
    2. ' for' → logprob: -5.755104064941406
    3. 'for' → logprob: -6.255104064941406
    4. '	for' → logprob: -13.130104064941406
    5. ',' → logprob: -13.505104064941406
    6. 'i' → logprob: -16.130104064941406
    7. 'n' → logprob: -16.630104064941406
    8. '  ' → logprob: -16.630104064941406
    9. ' ' → logprob: -16.630104064941406
    10. '<|end|>' → logprob: -16.755104064941406

Token 156: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4747239649295807
    2. ' for' → logprob: -0.9747239351272583
    3. 'i' (adapté à ' i') → logprob: -8.224723815917969
    4. ' i' → logprob: -8.224723815917969
    5. '   ' → logprob: -9.474723815917969
    6. 'prev' → logprob: -11.099723815917969
    7. ' prev' → logprob: -11.849723815917969
    8. 'n' → logprob: -12.224723815917969
    9. '	for' → logprob: -13.349723815917969
    10. ' ' → logprob: -13.349723815917969

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5701931118965149
    2. '=' → logprob: -1.5701930522918701
    3. ' ' → logprob: -1.5701930522918701
    4. ' +=' → logprob: -4.695193290710449
    5. '+' → logprob: -5.320193290710449
    6. ' in' → logprob: -6.070193290710449
    7. ' +' → logprob: -6.820193290710449
    8. '+=' → logprob: -7.695193290710449
    9. ',' → logprob: -9.07019329071045
    10. '1' → logprob: -9.19519329071045

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4359119236469269
    2. '1' → logprob: -1.0609118938446045
    3. ' ' → logprob: -4.935912132263184
    4. 'len' → logprob: -13.935912132263184
    5. '   ' → logprob: -15.810912132263184
    6. '<|end|>' → logprob: -15.935912132263184
    7. '  ' → logprob: -16.435911178588867
    8. '2' → logprob: -16.685911178588867
    9. '```' → logprob: -16.873411178588867
    10. '(' → logprob: -17.498411178588867

Token 159: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231339931488037
    2. '0' → logprob: -0.8981339931488037
    3. ' ' → logprob: -11.648134231567383
    4. 'len' → logprob: -13.273134231567383
    5. '2' → logprob: -16.773134231567383
    6. '```' → logprob: -17.023134231567383
    7. '(' → logprob: -17.773134231567383
    8. '   ' → logprob: -18.273134231567383
    9. '-' → logprob: -18.398134231567383
    10. '01' → logprob: -18.398134231567383

Token 160: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05061693489551544
    2. ' ' → logprob: -3.800616979598999
    3. '<|end|>' → logprob: -4.67561674118042
    4. ' while' → logprob: -4.80061674118042
    5. 'while' → logprob: -5.80061674118042
    6. '   ' → logprob: -5.92561674118042
    7. ' 
' → logprob: -6.30061674118042
    8. '	while' → logprob: -7.80061674118042
    9. '' → logprob: -8.300617218017578
    10. '  ' → logprob: -8.425617218017578

Token 162: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5241597294807434
    2. '1' → logprob: -1.6491596698760986
    3. 'while' (adapté à ' while') → logprob: -2.0241596698760986
    4. ' len' → logprob: -3.1491596698760986
    5. 'len' → logprob: -3.5241596698760986
    6. ' n' → logprob: -5.149159908294678
    7. ' ' → logprob: -5.899159908294678
    8. 'n' → logprob: -6.024159908294678
    9. '
' → logprob: -9.64915943145752
    10. '(len' → logprob: -10.02415943145752

Token 163: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31448209285736084
    2. ' i' → logprob: -1.3144820928573608
    3. 'len' → logprob: -7.06448221206665
    4. ' len' → logprob: -7.93948221206665
    5. '(i' → logprob: -12.689481735229492
    6. '   ' → logprob: -13.064481735229492
    7. '	i' → logprob: -13.564481735229492
    8. ' ' → logprob: -14.439481735229492
    9. '(len' → logprob: -14.439481735229492
    10. ' ' → logprob: -15.439481735229492

Token 164: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.7418726086616516
    2. ' <' → logprob: -1.1168725490570068
    3. '+' → logprob: -1.9918725490570068
    4. '<' → logprob: -2.991872549057007
    5. 'len' → logprob: -4.991872787475586
    6. ' +' → logprob: -5.991872787475586
    7. ' len' → logprob: -8.491872787475586
    8. '1' → logprob: -9.366872787475586
    9. ' ' → logprob: -9.616872787475586
    10. '(len' → logprob: -10.116872787475586

Token 165: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0280383548888494e-06
    2. ' len' → logprob: -14.000000953674316
    3. '(len' → logprob: -16.000001907348633
    4. '[len' → logprob: -22.250001907348633
    5. '	len' → logprob: -22.375001907348633
    6. '
' → logprob: -23.125001907348633
    7. '   ' → logprob: -23.375001907348633
    8. '=len' → logprob: -24.250001907348633
    9. '<len' → logprob: -24.750001907348633
    10. 'Len' → logprob: -25.375001907348633

Token 166: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.811348480870947e-05
    2. 's' → logprob: -10.37504768371582
    3. '(' → logprob: -11.00004768371582
    4. '(
' → logprob: -16.50004768371582
    5. ')' → logprob: -18.12504768371582
    6. ' s' → logprob: -18.62504768371582
    7. '-' → logprob: -19.25004768371582
    8. '()' → logprob: -19.62504768371582
    9. 'a' → logprob: -20.25004768371582
    10. '(S' → logprob: -20.25004768371582

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08179078996181488
    2. '-' → logprob: -3.3317906856536865
    3. ' -' → logprob: -3.4567906856536865
    4. ')-' → logprob: -4.706790924072266
    5. ' )' → logprob: -6.706790924072266
    6. '   ' → logprob: -7.831790924072266
    7. ' ' → logprob: -8.456790924072266
    8. '()' → logprob: -8.706790924072266
    9. '1' → logprob: -9.456790924072266
    10. '):
' → logprob: -9.706790924072266

Token 168: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6328131556510925
    2. ' -' → logprob: -0.7578131556510925
    3. ' ' → logprob: -9.257813453674316
    4. '   ' → logprob: -10.132813453674316
    5. ':' → logprob: -10.632813453674316
    6. '1' → logprob: -10.882813453674316
    7. ':
' → logprob: -11.132813453674316
    8. '()-' → logprob: -11.382813453674316
    9. ')' → logprob: -12.757813453674316
    10. '()' → logprob: -13.382813453674316

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '
' → logprob: -17.500036239624023
    5. '```' → logprob: -17.500036239624023
    6. '<|end|>' → logprob: -18.625036239624023
    7. '  ' → logprob: -19.062536239624023
    8. '１' → logprob: -19.187536239624023
    9. '2' → logprob: -19.625036239624023
    10. '' → logprob: -19.937536239624023

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -15.750036239624023
    4. '<|end|>' → logprob: -17.250036239624023
    5. '```' → logprob: -17.375036239624023
    6. '2' → logprob: -17.875036239624023
    7. '' → logprob: -17.875036239624023
    8. '१' → logprob: -18.250036239624023
    9. '   ' → logprob: -18.250036239624023
    10. '  ' → logprob: -18.312536239624023

Token 171: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5316392183303833
    2. ' and' → logprob: -1.5316392183303833
    3. ':' → logprob: -1.6566392183303833
    4. 'and' → logprob: -5.781639099121094
    5. '   ' → logprob: -6.156639099121094
    6. '):
' → logprob: -10.031639099121094
    7. ' :
' → logprob: -10.031639099121094
    8. ',' → logprob: -10.656639099121094
    9. '<|end|>' → logprob: -10.906639099121094
    10. ' ' → logprob: -11.406639099121094

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01453942246735096
    2. '   ' → logprob: -4.6395392417907715
    3. ' ' → logprob: -6.7645392417907715
    4. '    ' → logprob: -7.5145392417907715
    5. '<|end|>' → logprob: -7.6395392417907715
    6. '    
' → logprob: -7.7645392417907715
    7. ' if' → logprob: -7.8895392417907715
    8. ' 
' → logprob: -8.13953971862793
    9. '        
' → logprob: -8.38953971862793
    10. 'if' → logprob: -8.76453971862793

Token 173: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4304097592830658
    2. '       ' → logprob: -1.5554097890853882
    3. 'if' → logprob: -2.3054096698760986
    4. '   ' → logprob: -3.8054096698760986
    5. ' ' → logprob: -4.305409908294678
    6. '    ' → logprob: -6.555409908294678
    7. '	if' → logprob: -7.805409908294678
    8. '  ' → logprob: -8.43040943145752
    9. ' 
' → logprob: -8.68040943145752
    10. '        ' → logprob: -9.05540943145752

Token 174: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759517550468445
    2. '+=' → logprob: -0.8259517550468445
    3. '+' → logprob: -12.07595157623291
    4. '   ' → logprob: -12.70095157623291
    5. '=' → logprob: -13.32595157623291
    6. '+=(' → logprob: -14.07595157623291
    7. ']+=' → logprob: -14.70095157623291
    8. ' ' → logprob: -15.32595157623291
    9. '	' → logprob: -15.45095157623291
    10. '    ' → logprob: -16.200952529907227

Token 175: ' increment' (ID: 24032)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23291437327861786
    2. '(s' → logprob: -1.9829143285751343
    3. ' s' → logprob: -3.857914447784424
    4. ' ' → logprob: -3.982914447784424
    5. 's' → logprob: -4.107914447784424
    6. ' (' → logprob: -4.607914447784424
    7. ' int' → logprob: -5.982914447784424
    8. 'int' → logprob: -6.857914447784424
    9. '(' → logprob: -8.857913970947266
    10. '(int' → logprob: -8.857913970947266

Token 176: '_if' (ID: 25821)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5060153603553772
    2. '1' → logprob: -1.2560153007507324
    3. '(s' → logprob: -2.3810153007507324
    4. 's' → logprob: -4.506015300750732
    5. '(int' → logprob: -5.756015300750732
    6. 'int' → logprob: -6.256015300750732
    7. ' ' → logprob: -6.256015300750732
    8. '((' → logprob: -7.506015300750732
    9. ' (' → logprob: -8.00601577758789
    10. '(i' → logprob: -8.25601577758789

Token 177: '_equal' (ID: 27882)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.348652720451355
    2. 's' → logprob: -1.223652720451355
    3. ' s' → logprob: -8.598652839660645
    4. ' (' → logprob: -11.598652839660645
    5. '(' → logprob: -12.098652839660645
    6. '{s' → logprob: -12.723652839660645
    7. ' ' → logprob: -13.348652839660645
    8. '_s' → logprob: -13.598652839660645
    9. 'equal' → logprob: -14.348652839660645
    10. '[s' → logprob: -14.598652839660645

Token 178: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.496052371105179e-05
    2. 's' → logprob: -9.50009536743164
    3. '(' → logprob: -11.00009536743164
    4. '   ' → logprob: -14.12509536743164
    5. '(
' → logprob: -14.37509536743164
    6. ' (' → logprob: -14.62509536743164
    7. ' ' → logprob: -14.75009536743164
    8. '((' → logprob: -14.75009536743164
    9. '(i' → logprob: -15.75009536743164
    10. '  ' → logprob: -16.12509536743164

Token 179: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001560450647957623
    2. ',' → logprob: -7.251560688018799
    3. ',i' → logprob: -7.376560688018799
    4. '[' → logprob: -8.62656021118164
    5. ')' → logprob: -10.75156021118164
    6. ' [' → logprob: -12.25156021118164
    7. '[
' → logprob: -12.50156021118164
    8. '(i' → logprob: -12.75156021118164
    9. ',[' → logprob: -13.12656021118164
    10. ')[' → logprob: -13.25156021118164

Token 180: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030186515301465988
    2. ' i' → logprob: -4.155186653137207
    3. 's' → logprob: -4.405186653137207
    4. ' s' → logprob: -6.530186653137207
    5. '[i' → logprob: -9.155186653137207
    6. ',' → logprob: -9.780186653137207
    7. ')' → logprob: -9.905186653137207
    8. ' ' → logprob: -10.280186653137207
    9. ',i' → logprob: -10.280186653137207
    10. '   ' → logprob: -10.530186653137207

Token 181: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5456099510192871
    2. ')' → logprob: -0.9206099510192871
    3. '+' → logprob: -4.795609951019287
    4. ',i' → logprob: -5.795609951019287
    5. ' ,' → logprob: -5.920609951019287
    6. ' +' → logprob: -6.170609951019287
    7. '   ' → logprob: -6.420609951019287
    8. ' )' → logprob: -6.545609951019287
    9. '<|end|>' → logprob: -6.670609951019287
    10. '<|end|>' → logprob: -8.170610427856445

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009392306208610535
    2. 'i' → logprob: -6.259392261505127
    3. '   ' → logprob: -6.259392261505127
    4. '1' → logprob: -6.509392261505127
    5. 's' → logprob: -7.134392261505127
    6. ' i' → logprob: -7.134392261505127
    7. '(i' → logprob: -8.009392738342285
    8. '
' → logprob: -8.134392738342285
    9. '        
' → logprob: -8.384392738342285
    10. ' s' → logprob: -8.509392738342285

Token 183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0025839817244559526
    2. ' i' → logprob: -6.627583980560303
    3. '       ' → logprob: -7.252583980560303
    4. '   ' → logprob: -7.752583980560303
    5. '1' → logprob: -9.377584457397461
    6. 'def' → logprob: -10.877584457397461
    7. '	i' → logprob: -11.627584457397461
    8. '
' → logprob: -13.627584457397461
    9. '           ' → logprob: -13.752584457397461
    10. '2' → logprob: -13.877584457397461

Token 184: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2606350779533386
    2. '+=' → logprob: -2.1356351375579834
    3. ' +=' → logprob: -2.2606351375579834
    4. ' +' → logprob: -5.010634899139404
    5. '=' → logprob: -8.635635375976562
    6. '++' → logprob: -9.760635375976562
    7. '<|end|>' → logprob: -10.260635375976562
    8. ' ' → logprob: -10.635635375976562
    9. '+
' → logprob: -12.510635375976562
    10. '+='' → logprob: -12.760635375976562

Token 185: ' step' (ID: 5983)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001933277933858335
    2. ' ' → logprob: -6.2519330978393555
    3. '2' → logprob: -13.251933097839355
    4. '  ' → logprob: -14.751933097839355
    5. '   ' → logprob: -14.814433097839355
    6. 'max' → logprob: -14.939433097839355
    7. '```' → logprob: -15.251933097839355
    8. '
' → logprob: -16.064434051513672
    9. '+' → logprob: -16.126934051513672
    10. ' ' → logprob: -16.189434051513672

Token 186: '_increment' (ID: 132160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02112460881471634
    2. ' ' → logprob: -4.021124839782715
    3. '(' → logprob: -6.271124839782715
    4. '()' → logprob: -8.021124839782715
    5. '=' → logprob: -8.396124839782715
    6. '<|end|>' → logprob: -8.396124839782715
    7. 's' → logprob: -9.521124839782715
    8. ' =' → logprob: -10.021124839782715
    9. 'def' → logprob: -10.146124839782715
    10. '   ' → logprob: -10.646124839782715

Token 187: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3555162250995636
    2. '1' → logprob: -1.4805161952972412
    3. '(s' → logprob: -2.730516195297241
    4. '(i' → logprob: -6.10551643371582
    5. 's' → logprob: -6.35551643371582
    6. '()' → logprob: -7.23051643371582
    7. '   ' → logprob: -7.85551643371582
    8. '=' → logprob: -7.85551643371582
    9. ' ' → logprob: -8.23051643371582
    10. 'def' → logprob: -8.73051643371582

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018429918214678764
    2. '[i' → logprob: -5.018429756164551
    3. ',i' → logprob: -5.018429756164551
    4. ' ,' → logprob: -5.643429756164551
    5. ')' → logprob: -6.893429756164551
    6. '(i' → logprob: -8.01842975616455
    7. 's' → logprob: -10.01842975616455
    8. '   ' → logprob: -10.39342975616455
    9. '[' → logprob: -10.89342975616455
    10. ' ' → logprob: -11.89342975616455

Token 189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12750449776649475
    2. ' i' → logprob: -2.127504587173462
    3. 's' → logprob: -8.002504348754883
    4. ' s' → logprob: -9.002504348754883
    5. ')' → logprob: -9.627504348754883
    6. ' ' → logprob: -11.377504348754883
    7. ')i' → logprob: -11.502504348754883
    8. 'cnt' → logprob: -12.127504348754883
    9. '  ' → logprob: -12.627504348754883
    10. '	i' → logprob: -12.627504348754883

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038872790173627436
    2. ')
' → logprob: -8.250389099121094
    3. ' )' → logprob: -9.875389099121094
    4. '+' → logprob: -10.375389099121094
    5. ')+' → logprob: -10.875389099121094
    6. '   ' → logprob: -12.000389099121094
    7. ')

' → logprob: -12.500389099121094
    8. '))' → logprob: -12.625389099121094
    9. '())' → logprob: -12.625389099121094
    10. '+)' → logprob: -13.625389099121094

Token 191: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9869017004966736
    2. '1' → logprob: -1.2369017601013184
    3. '   ' → logprob: -1.3619017601013184
    4. 'return' → logprob: -2.8619017601013184
    5. '
' → logprob: -3.8619017601013184
    6. ' return' → logprob: -6.861901760101318
    7. ' def' → logprob: -7.986901760101318
    8. '+
' → logprob: -7.986901760101318
    9. '```' → logprob: -8.61190128326416
    10. '	return' → logprob: -9.11190128326416

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5195701718330383
    2. 'def' → logprob: -1.2695701122283936
    3. '
' → logprob: -2.7695701122283936
    4. '   ' → logprob: -3.1445701122283936
    5. ' return' → logprob: -4.144570350646973
    6. '1' → logprob: -7.394570350646973
    7. '0' → logprob: -7.519570350646973
    8. '4' → logprob: -7.894570350646973
    9. '7' → logprob: -8.769570350646973
    10. '	return' → logprob: -9.019570350646973

Token 193: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5760644674301147
    2. 'cnt' → logprob: -0.8260644674301147
    3. '(cnt' → logprob: -9.326064109802246
    4. '	cnt' → logprob: -10.576064109802246
    5. 'c' → logprob: -12.576064109802246
    6. '[cnt' → logprob: -12.826064109802246
    7. ' ' → logprob: -13.576064109802246
    8. 'int' → logprob: -14.576064109802246
    9. '_cnt' → logprob: -14.576064109802246
    10. ' ' → logprob: -14.826064109802246

Token 194: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6378468871116638
    2. 'def' → logprob: -0.7628468871116638
    3. '

' → logprob: -5.387846946716309
    4. '
' → logprob: -8.512846946716309
    5. '(' → logprob: -9.387846946716309
    6. '1' → logprob: -9.637846946716309
    7. '(
' → logprob: -9.637846946716309
    8. '```' → logprob: -9.887846946716309
    9. ' def' → logprob: -10.012846946716309
    10. '2' → logprob: -10.762846946716309

Token 195: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011255658231675625
    2. '
' → logprob: -4.636255741119385
    3. ' def' → logprob: -7.386255741119385
    4. '

' → logprob: -7.886255741119385
    5. '(' → logprob: -8.136255264282227
    6. '(
' → logprob: -9.261255264282227
    7. '2' → logprob: -10.761255264282227
    8. '1' → logprob: -10.886255264282227
    9. '```' → logprob: -11.761255264282227
    10. '(

' → logprob: -12.011255264282227

Token 196: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.6330419778823853
    2. 'increment' → logprob: -0.7580419778823853
    3. ' step' → logprob: -7.883041858673096
    4. 'step' → logprob: -10.508042335510254
    5. ' incremental' → logprob: -11.008042335510254
    6. ' def' → logprob: -11.758042335510254
    7. 'def' → logprob: -11.883042335510254
    8. '_increment' → logprob: -13.508042335510254
    9. 'in' → logprob: -13.758042335510254
    10. ' ' → logprob: -14.008042335510254

Token 197: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -3.128163257315464e-07
    2. 'if' → logprob: -15.75
    3. '_' → logprob: -17.125
    4. 'If' → logprob: -17.5
    5. ' if' → logprob: -18.5
    6. '(if' → logprob: -19.125
    7. ' _' → logprob: -19.5
    8. '_i' → logprob: -20.0
    9. '(_' → logprob: -20.125
    10. '_IF' → logprob: -20.25

Token 198: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -5.228561349213123e-05
    2. 'equal' → logprob: -9.875052452087402
    3. '_equals' → logprob: -14.625052452087402
    4. '_equ' → logprob: -15.625052452087402
    5. '_' → logprob: -17.000051498413086
    6. ' equal' → logprob: -17.375051498413086
    7. '_EQUAL' → logprob: -18.125051498413086
    8. '_e' → logprob: -18.250051498413086
    9. '_eq' → logprob: -18.500051498413086
    10. '(s' → logprob: -18.875051498413086

Token 199: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.250045776367188
    4. 's' → logprob: -15.625045776367188
    5. '(
' → logprob: -17.750045776367188
    6. '(a' → logprob: -18.125045776367188
    7. '((' → logprob: -19.875045776367188
    8. ' ' → logprob: -20.875045776367188
    9. '(x' → logprob: -20.875045776367188
    10. '(i' → logprob: -21.000045776367188

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ',i' → logprob: -11.750008583068848
    3. ' ,' → logprob: -13.750008583068848
    4. ',index' → logprob: -17.875009536743164
    5. ',s' → logprob: -18.375009536743164
    6. '   ' → logprob: -19.000009536743164
    7. ',int' → logprob: -19.125009536743164
    8. '‌,' → logprob: -19.250009536743164
    9. ',
' → logprob: -19.750009536743164
    10. 's' → logprob: -20.000009536743164

Token 201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016046451404690742
    2. ' i' → logprob: -4.141046524047852
    3. 'index' → logprob: -12.266046524047852
    4. ' ' → logprob: -13.141046524047852
    5. ')' → logprob: -13.516046524047852
    6. 'idx' → logprob: -13.766046524047852
    7. 's' → logprob: -13.891046524047852
    8. '   ' → logprob: -14.141046524047852
    9. ' index' → logprob: -14.766046524047852
    10. ' idx' → logprob: -15.266046524047852

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029764611274003983
    2. '):
' → logprob: -3.5297646522521973
    3. ' ):' → logprob: -11.904764175415039
    4. '   ' → logprob: -12.904764175415039
    5. '):
' → logprob: -13.154764175415039
    6. ')' → logprob: -13.154764175415039
    7. '):

' → logprob: -14.654764175415039
    8. ' ' → logprob: -15.529764175415039
    9. ' ):
' → logprob: -15.529764175415039
    10. ':' → logprob: -17.27976417541504

Token 203: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03318995237350464
    2. '   ' → logprob: -3.5331900119781494
    3. ' ' → logprob: -6.28318977355957
    4. ' return' → logprob: -7.03318977355957
    5. 'return' → logprob: -7.78318977355957
    6. ' if' → logprob: -9.28318977355957
    7. '2' → logprob: -10.15818977355957
    8. 'if' → logprob: -10.53318977355957
    9. '    ' → logprob: -10.65818977355957
    10. '       ' → logprob: -10.90818977355957

Token 204: ' if' (ID: 538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04806998744606972
    2. 'if' (adapté à ' if') → logprob: -4.048069953918457
    3. '   ' → logprob: -4.048069953918457
    4. 'return' → logprob: -4.673069953918457
    5. ' return' → logprob: -6.673069953918457
    6. ' if' → logprob: -6.673069953918457
    7. ' ' → logprob: -8.923069953918457
    8. '0' → logprob: -12.423069953918457
    9. 'int' → logprob: -12.423069953918457
    10. '    ' → logprob: -13.173069953918457

Token 205: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06430792063474655
    2. 's' → logprob: -2.814307928085327
    3. ' i' → logprob: -6.314307689666748
    4. 'i' → logprob: -7.564307689666748
    5. ' len' → logprob: -12.189308166503906
    6. ' ' → logprob: -13.314308166503906
    7. 'len' → logprob: -13.939308166503906
    8. ' (' → logprob: -14.814308166503906
    9. '	s' → logprob: -15.314308166503906
    10. ' ' → logprob: -15.814308166503906

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.125005722045898
    3. ' [' → logprob: -16.1250057220459
    4. '[
' → logprob: -16.5000057220459
    5. '[I' → logprob: -16.8750057220459
    6. '```' → logprob: -17.6250057220459
    7. '[s' → logprob: -17.8750057220459
    8. '
' → logprob: -17.8750057220459
    9. 'i' → logprob: -18.8750057220459
    10. ' ' → logprob: -19.2500057220459

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026523221284151077
    2. ']==' → logprob: -3.7765231132507324
    3. ' ]' → logprob: -5.776523113250732
    4. '==' → logprob: -8.77652359008789
    5. ' ==' → logprob: -11.90152359008789
    6. ']=' → logprob: -11.90152359008789
    7. '=' → logprob: -12.77652359008789
    8. ' ' → logprob: -13.90152359008789
    9. '']' → logprob: -14.77652359008789
    10. ')' → logprob: -15.27652359008789

Token 208: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6328637003898621
    2. '==' → logprob: -0.7578637003898621
    3. '=' → logprob: -8.632863998413086
    4. ' ' → logprob: -9.632863998413086
    5. ']==' → logprob: -12.257863998413086
    6. '==
' → logprob: -12.882863998413086
    7. ')' → logprob: -13.132863998413086
    8. '===' → logprob: -13.257863998413086
    9. ' =' → logprob: -13.382863998413086
    10. 's' → logprob: -13.507863998413086

Token 209: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008614808320999146
    2. ' s' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.883614540100098
    4. '   ' → logprob: -16.008615493774414
    5. '(s' → logprob: -18.883615493774414
    6. ''s' → logprob: -19.008615493774414
    7. '  ' → logprob: -19.133615493774414
    8. '	s' → logprob: -19.133615493774414
    9. '<|end|>' → logprob: -19.133615493774414
    10. '`s' → logprob: -19.758615493774414

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009286141721531749
    2. 's' → logprob: -7.7509284019470215
    3. 'i' → logprob: -8.00092887878418
    4. ' [' → logprob: -9.25092887878418
    5. ' i' → logprob: -10.25092887878418
    6. ' s' → logprob: -11.62592887878418
    7. '[' → logprob: -12.00092887878418
    8. ']' → logprob: -12.37592887878418
    9. ' ' → logprob: -12.37592887878418
    10. '[
' → logprob: -12.50092887878418

Token 211: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03306771442294121
    2. 'i' → logprob: -3.9080677032470703
    3. ' +' → logprob: -5.15806770324707
    4. '[i' → logprob: -5.15806770324707
    5. '+i' → logprob: -7.65806770324707
    6. ' i' → logprob: -8.15806770324707
    7. '1' → logprob: -9.40806770324707
    8. ' ' → logprob: -10.28306770324707
    9. ']' → logprob: -10.65806770324707
    10. '   ' → logprob: -11.28306770324707

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -16.750019073486328
    4. ']' → logprob: -17.750019073486328
    5. 'i' → logprob: -18.125019073486328
    6. '```' → logprob: -18.312519073486328
    7. '   ' → logprob: -19.437519073486328
    8. '

' → logprob: -19.437519073486328
    9. '۱' → logprob: -20.187519073486328
    10. '१' → logprob: -20.187519073486328

Token 213: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08933570981025696
    2. ']:
' → logprob: -2.4643356800079346
    3. ']' → logprob: -8.464335441589355
    4. ']:
' → logprob: -9.464335441589355
    5. ':' → logprob: -9.714335441589355
    6. ' ]' → logprob: -11.339335441589355
    7. '       ' → logprob: -11.714335441589355
    8. ':
' → logprob: -12.089335441589355
    9. '   ' → logprob: -12.089335441589355
    10. ']:

' → logprob: -12.839335441589355

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006996916141360998
    2. '1' → logprob: -5.381997108459473
    3. ' return' → logprob: -6.756997108459473
    4. 'return' → logprob: -7.131997108459473
    5. ':
' → logprob: -8.631997108459473
    6. '   ' → logprob: -9.631997108459473
    7. ':return' → logprob: -10.006997108459473
    8. ':' → logprob: -10.381997108459473
    9. '	return' → logprob: -10.506997108459473
    10. '
' → logprob: -11.006997108459473

Token 215: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3543025255203247
    2. 'return' (adapté à ' return') → logprob: -1.3543025255203247
    3. ' return' → logprob: -3.354302406311035
    4. '   ' → logprob: -5.604302406311035
    5. '       ' → logprob: -6.729302406311035
    6. ' ' → logprob: -7.979302406311035
    7. '           ' → logprob: -10.354302406311035
    8. '2' → logprob: -11.479302406311035
    9. '
' → logprob: -11.604302406311035
    10. '    ' → logprob: -13.604302406311035

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '2' → logprob: -18.250024795532227
    5. '  ' → logprob: -20.000024795532227
    6. ' ' → logprob: -20.625024795532227
    7. '+' → logprob: -21.250024795532227
    8. '１' → logprob: -21.875024795532227
    9. '
' → logprob: -22.125024795532227
    10. '```' → logprob: -22.125024795532227

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '2' → logprob: -15.250000953674316
    4. '   ' → logprob: -19.0
    5. '１' → logprob: -19.875
    6. 'count' → logprob: -20.3125
    7. '
' → logprob: -20.6875
    8. '10' → logprob: -20.875
    9. '۱' → logprob: -20.875
    10. '+' → logprob: -21.3125

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014197122305631638
    2. '
' → logprob: -4.51419734954834
    3. '    
' → logprob: -6.88919734954834
    4. ' else' → logprob: -7.01419734954834
    5. 'else' → logprob: -8.01419734954834
    6. ' 
' → logprob: -8.01419734954834
    7. '<|end|>' → logprob: -8.88919734954834
    8. '  
' → logprob: -9.01419734954834
    9. '	else' → logprob: -9.38919734954834
    10. ' ' → logprob: -9.63919734954834

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.661626634420827e-05
    2. '
' → logprob: -9.875086784362793
    3. 'return' → logprob: -11.125086784362793
    4. 'else' → logprob: -11.875086784362793
    5. '    
' → logprob: -12.625086784362793
    6. ' else' → logprob: -13.000086784362793
    7. ' return' → logprob: -13.750086784362793
    8. '0' → logprob: -13.875086784362793
    9. '	return' → logprob: -14.000086784362793
    10. '    ' → logprob: -14.250086784362793

Token 220: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01427562814205885
    2. 'else' → logprob: -5.264275550842285
    3. ' else' → logprob: -5.264275550842285
    4. 'return' (adapté à ' return') → logprob: -5.764275550842285
    5. ' return' → logprob: -8.389275550842285
    6. ' ' → logprob: -8.889275550842285
    7. '    
' → logprob: -9.014275550842285
    8. '0' → logprob: -9.514275550842285
    9. '
' → logprob: -10.014275550842285
    10. '	else' → logprob: -11.514275550842285

Token 221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '۰' → logprob: -22.625709533691406
    4. '   ' → logprob: -22.750709533691406
    5. ' ' → logprob: -22.750709533691406
    6. '  ' → logprob: -23.375709533691406
    7. '０' → logprob: -24.250709533691406
    8. ' 
' → logprob: -24.625709533691406
    9. ' ' → logprob: -24.875709533691406
    10. '00' → logprob: -24.875709533691406

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -20.25
    4. '０' → logprob: -22.625
    5. '   ' → logprob: -23.0
    6. '०' → logprob: -23.125
    7. '০' → logprob: -23.1875
    8. '00' → logprob: -23.25
    9. '000' → logprob: -23.5
    10. '٠' → logprob: -23.75

Token 223: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.764977686339989e-05
    2. '<|end|>' → logprob: -10.250057220458984
    3. '
' → logprob: -11.500057220458984
    4. ' def' → logprob: -11.875057220458984
    5. '

' → logprob: -13.250057220458984
    6. '  
' → logprob: -13.875057220458984
    7. '```' → logprob: -14.000057220458984
    8. '    
' → logprob: -14.750057220458984
    9. '1' → logprob: -15.125057220458984
    10. '<|end|>' → logprob: -15.500057220458984

Token 224: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4378848391061183e-05
    2. '<|end|>' → logprob: -11.375014305114746
    3. ' def' → logprob: -12.875014305114746
    4. '```' → logprob: -16.000015258789062
    5. '<|end|>' → logprob: -16.250015258789062
    6. '1' → logprob: -17.125015258789062
    7. '  
' → logprob: -18.750015258789062
    8. '2' → logprob: -19.125015258789062
    9. '	def' → logprob: -19.250015258789062
    10. '    
' → logprob: -19.750015258789062

Token 225: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.018151817843317986
    2. ' step' → logprob: -4.018151760101318
    3. 'def' → logprob: -14.018152236938477
    4. 'increment' → logprob: -14.768152236938477
    5. '	step' → logprob: -15.143152236938477
    6. 'Step' → logprob: -16.143152236938477
    7. '(step' → logprob: -16.518152236938477
    8. 'steps' → logprob: -17.518152236938477
    9. ' ' → logprob: -17.643152236938477
    10. 'is' → logprob: -17.768152236938477

Token 226: '_increment' (ID: 132160)
  Prédit: '_increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_increment' → logprob: -0.0006477446295320988
    2. '_' → logprob: -7.50064754486084
    3. '_in' → logprob: -9.50064754486084
    4. ' _' → logprob: -11.62564754486084
    5. 's' → logprob: -13.50064754486084
    6. '_INCREMENT' → logprob: -13.62564754486084
    7. '_inc' → logprob: -13.87564754486084
    8. '_i' → logprob: -14.25064754486084
    9. '_step' → logprob: -14.25064754486084
    10. '_continue' → logprob: -14.37564754486084

Token 227: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.170270353322849e-05
    2. '(' → logprob: -9.750061988830566
    3. 's' → logprob: -12.625061988830566
    4. ' (' → logprob: -17.62506103515625
    5. '(
' → logprob: -19.25006103515625
    6. '(S' → logprob: -20.62506103515625
    7. '(n' → logprob: -20.62506103515625
    8. '(a' → logprob: -20.87506103515625
    9. '()' → logprob: -21.12506103515625
    10. '(...)' → logprob: -21.25006103515625

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. ',i' → logprob: -11.250017166137695
    3. ' ,' → logprob: -12.500017166137695
    4. ',
' → logprob: -16.375017166137695
    5. '‌,' → logprob: -18.625017166137695
    6. 's' → logprob: -20.125017166137695
    7. '_,' → logprob: -20.750017166137695
    8. '   ' → logprob: -20.750017166137695
    9. ',

' → logprob: -21.125017166137695
    10. 'i' → logprob: -21.250017166137695

Token 229: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009132515988312662
    2. ' i' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.250913619995117
    4. ' ' → logprob: -14.875913619995117
    5. ')' → logprob: -15.750913619995117
    6. '	i' → logprob: -15.750913619995117
    7. ')i' → logprob: -16.000913619995117
    8. '  ' → logprob: -16.750913619995117
    9. 's' → logprob: -16.750913619995117
    10. '_i' → logprob: -17.500913619995117

Token 230: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20141665637493134
    2. '):' → logprob: -1.7014166116714478
    3. '):
' → logprob: -13.201416969299316
    4. '):

' → logprob: -13.576416969299316
    5. ')' → logprob: -16.576416015625
    6. ':' → logprob: -16.576416015625
    7. '():
' → logprob: -16.576416015625
    8. '=' → logprob: -17.201416015625
    9. ' ):
' → logprob: -17.826416015625
    10. 'def' → logprob: -18.326416015625

Token 231: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008294225670397282
    2. '   ' → logprob: -5.383294105529785
    3. '2' → logprob: -5.633294105529785
    4. 'return' → logprob: -10.008294105529785
    5. 'if' → logprob: -10.383294105529785
    6. ' ' → logprob: -11.758294105529785
    7. '
' → logprob: -13.258294105529785
    8. '3' → logprob: -13.883294105529785
    9. '```' → logprob: -14.133294105529785
    10. ' if' → logprob: -14.633294105529785

Token 232: ' if' (ID: 538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014622616581618786
    2. 'return' → logprob: -7.001462459564209
    3. '   ' → logprob: -8.00146198272705
    4. '2' → logprob: -8.62646198272705
    5. 'if' (adapté à ' if') → logprob: -10.75146198272705
    6. ' ' → logprob: -12.25146198272705
    7. '
' → logprob: -12.75146198272705
    8. ' return' → logprob: -12.87646198272705
    9. 'i' → logprob: -13.25146198272705
    10. 'def' → logprob: -13.75146198272705

Token 233: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11306944489479065
    2. 's' → logprob: -2.238069534301758
    3. ' is' → logprob: -9.113069534301758
    4. ' i' → logprob: -9.238069534301758
    5. 'i' → logprob: -10.738069534301758
    6. ' increment' → logprob: -12.863069534301758
    7. 'is' → logprob: -12.988069534301758
    8. ' ' → logprob: -12.988069534301758
    9. ' step' → logprob: -13.113069534301758
    10. 'increment' → logprob: -13.363069534301758

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.375001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '[s' → logprob: -15.500001907348633
    5. '[
' → logprob: -15.875001907348633
    6. '==' → logprob: -16.750001907348633
    7. '
' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. 's' → logprob: -17.000001907348633
    10. ' and' → logprob: -17.250001907348633

Token 235: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5373612642288208
    2. ']' → logprob: -1.1623612642288208
    3. ']==' → logprob: -2.4123611450195312
    4. ' ==' → logprob: -4.412361145019531
    5. 's' → logprob: -7.287361145019531
    6. ')' → logprob: -9.412361145019531
    7. '==
' → logprob: -9.537361145019531
    8. '=' → logprob: -9.662361145019531
    9. ' ]' → logprob: -9.787361145019531
    10. '[' → logprob: -9.787361145019531

Token 236: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00331590767018497
    2. ' ==' → logprob: -5.8783159255981445
    3. 's' → logprob: -7.7533159255981445
    4. '==
' → logprob: -10.128315925598145
    5. '=' → logprob: -10.878315925598145
    6. ']==' → logprob: -11.253315925598145
    7. ')==' → logprob: -12.878315925598145
    8. '[' → logprob: -13.378315925598145
    9. 'i' → logprob: -14.003315925598145
    10. ' ' → logprob: -14.128315925598145

Token 237: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00463945372030139
    2. ' s' → logprob: -5.379639625549316
    3. ''s' → logprob: -11.129639625549316
    4. ' ' → logprob: -12.879639625549316
    5. '   ' → logprob: -14.004639625549316
    6. ''' → logprob: -14.129639625549316
    7. ' '' → logprob: -15.879639625549316
    8. '(s' → logprob: -16.254638671875
    9. '  ' → logprob: -16.379638671875
    10. '_s' → logprob: -16.879638671875

Token 238: '[i' (ID: 1768)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0113241421058774
    2. '[i' → logprob: -4.511323928833008
    3. ' s' → logprob: -8.761323928833008
    4. 'i' → logprob: -9.261323928833008
    5. ''s' → logprob: -11.011323928833008
    6. '[s' → logprob: -12.886323928833008
    7. ''' → logprob: -13.386323928833008
    8. ']' → logprob: -14.011323928833008
    9. '[' → logprob: -14.261323928833008
    10. '']' → logprob: -15.011323928833008

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015622020873706788
    2. ']' → logprob: -9.00015640258789
    3. 'i' → logprob: -11.50015640258789
    4. ' +' → logprob: -12.00015640258789
    5. '+i' → logprob: -12.62515640258789
    6. '[i' → logprob: -12.75015640258789
    7. '+
' → logprob: -12.87515640258789
    8. '1' → logprob: -13.37515640258789
    9. '-' → logprob: -13.62515640258789
    10. ']+' → logprob: -13.62515640258789

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.000003814697266
    3. 'i' → logprob: -14.812503814697266
    4. '+' → logprob: -15.125003814697266
    5. '```' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.437503814697266
    7. '
' → logprob: -16.500003814697266
    8. '0' → logprob: -17.187503814697266
    9. ']' → logprob: -17.562503814697266
    10. '2' → logprob: -17.687503814697266

Token 241: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.016518034040927887
    2. ']:
' → logprob: -4.5165181159973145
    3. '):
' → logprob: -5.8915181159973145
    4. ':' → logprob: -6.3915181159973145
    5. '   ' → logprob: -7.7665181159973145
    6. '       ' → logprob: -8.516517639160156
    7. ' and' → logprob: -9.016517639160156
    8. ':return' → logprob: -9.641517639160156
    9. '():
' → logprob: -10.016517639160156
    10. 'and' → logprob: -10.141517639160156

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19397397339344025
    2. ':
' → logprob: -1.9439740180969238
    3. '2' → logprob: -4.193974018096924
    4. ':' → logprob: -4.693974018096924
    5. '1' → logprob: -4.943974018096924
    6. '   ' → logprob: -6.818974018096924
    7. ' and' → logprob: -8.693973541259766
    8. '3' → logprob: -9.193973541259766
    9. '):
' → logprob: -9.193973541259766
    10. ',' → logprob: -9.818973541259766

Token 243: ' return' (ID: 622)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015220028581097722
    2. '   ' → logprob: -6.501522064208984
    3. '       ' → logprob: -12.001522064208984
    4. '3' → logprob: -12.251522064208984
    5. 'return' (adapté à ' return') → logprob: -12.501522064208984
    6. ' ' → logprob: -12.876522064208984
    7. '
' → logprob: -13.001522064208984
    8. '1' → logprob: -16.001522064208984
    9. '    ' → logprob: -17.876522064208984
    10. ' return' → logprob: -18.126522064208984

Token 244: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.978233846486546e-05
    2. '1' → logprob: -10.000049591064453
    3. ' ' → logprob: -12.375049591064453
    4. '3' → logprob: -16.375049591064453
    5. '   ' → logprob: -17.375049591064453
    6. '
' → logprob: -17.750049591064453
    7. '10' → logprob: -19.312549591064453
    8. '0' → logprob: -20.000049591064453
    9. '```' → logprob: -20.375049591064453
    10. '>' → logprob: -21.062549591064453

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021140782337170094
    2. '1' → logprob: -8.500211715698242
    3. ' ' → logprob: -11.875211715698242
    4. '3' → logprob: -14.250211715698242
    5. '
' → logprob: -16.000211715698242
    6. '   ' → logprob: -17.187711715698242
    7. 'k' → logprob: -18.312711715698242
    8. '0' → logprob: -19.062711715698242
    9. '

' → logprob: -19.375211715698242
    10. 'skip' → logprob: -19.500211715698242

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.87500286102295
    3. 'else' → logprob: -14.12500286102295
    4. 'return' → logprob: -14.62500286102295
    5. '    
' → logprob: -15.25000286102295
    6. '       ' → logprob: -16.625001907348633
    7. ' else' → logprob: -17.625001907348633
    8. ',' → logprob: -17.750001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '1' → logprob: -18.250001907348633

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.981667537620524e-06
    2. 'return' → logprob: -13.750001907348633
    3. 'else' → logprob: -14.250001907348633
    4. '    
' → logprob: -16.500001907348633
    5. '       ' → logprob: -17.375001907348633
    6. '	return' → logprob: -17.500001907348633
    7. '```' → logprob: -17.750001907348633
    8. '
' → logprob: -17.875001907348633
    9. ' else' → logprob: -18.125001907348633
    10. '1' → logprob: -18.125001907348633

Token 248: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07897207885980606
    2. '   ' → logprob: -2.578972101211548
    3. 'else' → logprob: -10.203971862792969
    4. 'return' (adapté à ' return') → logprob: -10.578971862792969
    5. ' ' → logprob: -11.578971862792969
    6. ' else' → logprob: -11.953971862792969
    7. ' return' → logprob: -13.703971862792969
    8. '
' → logprob: -14.078971862792969
    9. '  ' → logprob: -14.078971862792969
    10. '    
' → logprob: -14.203971862792969

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -21.750001907348633
    5. '１' → logprob: -22.000001907348633
    6. '۱' → logprob: -22.250001907348633
    7. ' ' → logprob: -22.875001907348633
    8. '  ' → logprob: -22.875001907348633
    9. '
' → logprob: -23.125001907348633
    10. '१' → logprob: -23.125001907348633

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -21.5
    5. '۱' → logprob: -21.875
    6. '১' → logprob: -22.875
    7. '１' → logprob: -22.875
    8. '१' → logprob: -23.25
    9. '<|end|>' → logprob: -24.5625
    10. 'from' → logprob: -24.8125

Token 251: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014599967980757356
    2. '<|end|>' → logprob: -6.626460075378418
    3. '#' → logprob: -10.126460075378418
    4. '```' → logprob: -10.626460075378418
    5. 's' → logprob: -11.126460075378418
    6. '<|end|>' → logprob: -11.251460075378418
    7. '
' → logprob: -11.376460075378418
    8. 'n' → logprob: -12.251460075378418
    9. ')' → logprob: -12.626460075378418
    10. '\' → logprob: -12.626460075378418

Token 252: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004963174578733742
    2. 'n' → logprob: -8.875495910644531
    3. 'if' → logprob: -8.875495910644531
    4. 's' → logprob: -9.125495910644531
    5. 'N' → logprob: -9.500495910644531
    6. 't' → logprob: -11.750495910644531
    7. 'S' → logprob: -11.750495910644531
    8. 'T' → logprob: -12.125495910644531
    9. '
' → logprob: -12.375495910644531
    10. '#' → logprob: -13.250495910644531

Token 253: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7175236344337463
    2. 'main' → logprob: -0.7175236344337463
    3. 'count' → logprob: -4.717523574829102
    4. 'solve' → logprob: -5.092523574829102
    5. 'process' → logprob: -6.592523574829102
    6. ' solve' → logprob: -6.717523574829102
    7. ' count' → logprob: -6.967523574829102
    8. 'combine' → logprob: -7.092523574829102
    9. ' process' → logprob: -7.342523574829102
    10. 'multiply' → logprob: -7.342523574829102

Token 254: '_special' (ID: 100315)
  Prédit: '_repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_repeat' → logprob: -1.859365701675415
    2. '_string' → logprob: -1.984365701675415
    3. '_final' → logprob: -2.109365701675415
    4. '_count' → logprob: -2.234365701675415
    5. '_double' → logprob: -2.609365701675415
    6. '_max' → logprob: -2.609365701675415
    7. '_concat' → logprob: -2.734365701675415
    8. 'ulate' → logprob: -2.984365701675415
    9. 'ute' → logprob: -4.234365463256836
    10. '_m' → logprob: -4.234365463256836

Token 255: '_case' (ID: 43667)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.9633076786994934
    2. '_case' → logprob: -1.0883076190948486
    3. '_count' → logprob: -2.3383076190948486
    4. '_value' → logprob: -2.3383076190948486
    5. '_sum' → logprob: -2.7133076190948486
    6. '_cases' → logprob: -5.713307857513428
    7. '_strings' → logprob: -5.963307857513428
    8. '_sequence' → logprob: -6.088307857513428
    9. '_char' → logprob: -6.088307857513428
    10. '(s' → logprob: -6.213307857513428

Token 256: '_length' (ID: 11514)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003183182328939438
    2. '(' → logprob: -6.253183364868164
    3. 's' → logprob: -8.003183364868164
    4. '_count' → logprob: -8.003183364868164
    5. '_s' → logprob: -9.378183364868164
    6. '(n' → logprob: -9.503183364868164
    7. '_string' → logprob: -9.503183364868164
    8. '():' → logprob: -9.878183364868164
    9. '(S' → logprob: -10.253183364868164
    10. '(count' → logprob: -10.253183364868164

Token 257: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.020784424617886543
    2. '(' → logprob: -3.895784378051758
    3. '(n' → logprob: -9.270784378051758
    4. ' (' → logprob: -9.895784378051758
    5. '(S' → logprob: -10.770784378051758
    6. 's' → logprob: -10.895784378051758
    7. '(a' → logprob: -11.270784378051758
    8. '(l' → logprob: -12.145784378051758
    9. '(
' → logprob: -12.270784378051758
    10. '(m' → logprob: -12.520784378051758

Token 258: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007048533298075199
    2. ',' → logprob: -5.632048606872559
    3. '):
' → logprob: -5.882048606872559
    4. ')' → logprob: -8.007048606872559
    5. 's' → logprob: -8.507048606872559
    6. ' ):' → logprob: -9.507048606872559
    7. ':' → logprob: -10.757048606872559
    8. ',s' → logprob: -11.882048606872559
    9. '):
' → logprob: -12.632048606872559
    10. '_' → logprob: -13.382048606872559

Token 259: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.43509984016418457
    2. ' k' → logprob: -2.5600998401641846
    3. 'n' → logprob: -2.6850998401641846
    4. 'times' → logprob: -3.1850998401641846
    5. ' times' → logprob: -3.3100998401641846
    6. 't' → logprob: -3.6850998401641846
    7. ' n' → logprob: -3.6850998401641846
    8. 'K' → logprob: -4.3100996017456055
    9. 'm' → logprob: -4.5600996017456055
    10. ' t' → logprob: -5.1850996017456055

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015887735644355416
    2. ',' → logprob: -7.001588821411133
    3. '):
' → logprob: -7.626588821411133
    4. ')' → logprob: -8.626588821411133
    5. ' ):' → logprob: -12.126588821411133
    6. '):
' → logprob: -13.001588821411133
    7. 's' → logprob: -13.626588821411133
    8. ':' → logprob: -15.001588821411133
    9. '   ' → logprob: -15.126588821411133
    10. ',s' → logprob: -15.126588821411133

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.107425062713446e-06
    2. 'if' → logprob: -13.125006675720215
    3. 'n' → logprob: -13.375006675720215
    4. ' if' → logprob: -13.625006675720215
    5. '    
' → logprob: -14.250006675720215
    6. 'length' → logprob: -14.625006675720215
    7. '   ' → logprob: -15.250006675720215
    8. '```' → logprob: -15.375006675720215
    9. ' length' → logprob: -15.875006675720215
    10. '  ' → logprob: -16.12500762939453

Token 262: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030130764469504356
    2. '   ' → logprob: -4.030130863189697
    3. 'n' → logprob: -5.405130863189697
    4. 'length' → logprob: -5.405130863189697
    5. 'count' → logprob: -6.905130863189697
    6. 'cnt' → logprob: -7.405130863189697
    7. 'return' (adapté à ' return') → logprob: -7.655130863189697
    8. 'base' → logprob: -7.905130863189697
    9. ' if' → logprob: -8.530130386352539
    10. 'original' → logprob: -9.405130386352539

Token 263: ' int' (ID: 677)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1264646351337433
    2. ' len' → logprob: -3.126464605331421
    3. '(len' → logprob: -3.501464605331421
    4. 'pair' → logprob: -3.751464605331421
    5. 'count' → logprob: -5.37646484375
    6. 'multiply' → logprob: -5.75146484375
    7. 'min' → logprob: -6.00146484375
    8. '(k' → logprob: -6.25146484375
    9. 'k' → logprob: -6.25146484375
    10. '(pair' → logprob: -6.50146484375

Token 264: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.43757471442222595
    2. '(math' → logprob: -2.187574625015259
    3. '(m' → logprob: -2.437574625015259
    4. '(is' → logprob: -2.812574625015259
    5. '((' → logprob: -3.437574625015259
    6. '(' → logprob: -3.812574625015259
    7. '(k' → logprob: -3.937574625015259
    8. '(s' → logprob: -4.562574863433838
    9. '(bool' → logprob: -4.937574863433838
    10. '(not' → logprob: -6.562574863433838

Token 265: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004194744396954775
    2. '(m' → logprob: -5.629194736480713
    3. 's' → logprob: -7.879194736480713
    4. '(' → logprob: -9.004195213317871
    5. ')' → logprob: -10.754195213317871
    6. 'multiply' → logprob: -11.004195213317871
    7. '(
' → logprob: -11.254195213317871
    8. '((' → logprob: -11.504195213317871
    9. '```' → logprob: -12.004195213317871
    10. '(np' → logprob: -12.629195213317871

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26838916540145874
    2. ')*' → logprob: -1.5183892250061035
    3. ')*(' → logprob: -4.1433892250061035
    4. ' )' → logprob: -8.518388748168945
    5. ')**' → logprob: -9.643388748168945
    6. '*' → logprob: -10.268388748168945
    7. ')+' → logprob: -10.768388748168945
    8. '))' → logprob: -11.018388748168945
    9. '[' → logprob: -11.268388748168945
    10. '()' → logprob: -11.393388748168945

Token 267: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0192687511444092
    2. '*' → logprob: -1.0192687511444092
    3. ' *' → logprob: -1.8942687511444092
    4. ')*' → logprob: -2.269268751144409
    5. '*k' → logprob: -4.019268989562988
    6. '*(' → logprob: -5.894268989562988
    7. '*s' → logprob: -6.769268989562988
    8. '+' → logprob: -7.269268989562988
    9. ' +' → logprob: -7.394268989562988
    10. ')*(' → logprob: -8.019268989562988

Token 268: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01699737459421158
    2. ' k' → logprob: -4.641997337341309
    3. '(k' → logprob: -5.641997337341309
    4. ' math' → logprob: -6.891997337341309
    5. '1' → logprob: -7.016997337341309
    6. 'math' → logprob: -7.516997337341309
    7. ' (' → logprob: -7.641997337341309
    8. '(' → logprob: -8.516997337341309
    9. '0' → logprob: -9.016997337341309
    10. '2' → logprob: -9.141997337341309

Token 269: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008429800509475172
    2. ' *' → logprob: -7.500843048095703
    3. '*' → logprob: -8.500843048095703
    4. ' )' → logprob: -10.500843048095703
    5. ')
' → logprob: -11.750843048095703
    6. ' +' → logprob: -11.875843048095703
    7. '<|end|>' → logprob: -11.875843048095703
    8. '[' → logprob: -12.125843048095703
    9. ' -' → logprob: -12.625843048095703
    10. '+' → logprob: -12.625843048095703

Token 270: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005559232551604509
    2. '1' → logprob: -5.25555944442749
    3. '(' → logprob: -9.005558967590332
    4. '100' → logprob: -9.505558967590332
    5. ' ' → logprob: -10.005558967590332
    6. 'k' → logprob: -10.505558967590332
    7. 'len' → logprob: -10.505558967590332
    8. '3' → logprob: -11.880558967590332
    9. '10' → logprob: -12.255558967590332
    10. 'count' → logprob: -12.255558967590332

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016301682218909264
    2. '1' → logprob: -4.14130163192749
    3. ' ' → logprob: -9.266302108764648
    4. 'len' → logprob: -9.766302108764648
    5. '(' → logprob: -9.891302108764648
    6. '100' → logprob: -10.641302108764648
    7. 'math' → logprob: -12.141302108764648
    8. '3' → logprob: -12.266302108764648
    9. '   ' → logprob: -12.641302108764648
    10. 'g' → logprob: -12.891302108764648

Token 272: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -13.375003814697266
    4. '*' → logprob: -15.750003814697266
    5. '))' → logprob: -16.000003814697266
    6. '*)' → logprob: -17.750003814697266
    7. '+' → logprob: -17.875003814697266
    8. ')#' → logprob: -17.875003814697266
    9. ')`' → logprob: -18.000003814697266
    10. ')return' → logprob: -18.375003814697266

Token 273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00889546424150467
    2. '<|end|>' → logprob: -4.758895397186279
    3. '```' → logprob: -9.133895874023438
    4. '#' → logprob: -9.633895874023438
    5. ')' → logprob: -10.008895874023438
    6. '<|end|>' → logprob: -10.758895874023438
    7. '\' → logprob: -11.508895874023438
    8. '
' → logprob: -12.008895874023438
    9. ' def' → logprob: -12.258895874023438
    10. '(' → logprob: -12.758895874023438

Token 274: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2587204575538635
    2. 'main' → logprob: -2.5087203979492188
    3. ' solve' → logprob: -3.2587203979492188
    4. 'def' → logprob: -3.7587203979492188
    5. ' count' → logprob: -4.133720397949219
    6. ' calc' → logprob: -4.133720397949219
    7. 'solve' → logprob: -4.258720397949219
    8. ' def' → logprob: -4.383720397949219
    9. 'count' → logprob: -4.758720397949219
    10. ' process' → logprob: -5.383720397949219

Token 275: '_double' (ID: 59806)
  Prédit: '_special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_special' → logprob: -0.8931518197059631
    2. '_max' → logprob: -1.7681517601013184
    3. '_final' → logprob: -2.6431517601013184
    4. '_comb' → logprob: -2.8931517601013184
    5. '_unique' → logprob: -3.0181517601013184
    6. '_first' → logprob: -3.1431517601013184
    7. '_pair' → logprob: -3.3931517601013184
    8. '_repeat' → logprob: -3.5181517601013184
    9. '_modified' → logprob: -4.143151760101318
    10. '_re' → logprob: -4.393151760101318

Token 276: '_and' (ID: 18645)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.297682285308838
    2. '_char' → logprob: -1.547682285308838
    3. '_length' → logprob: -1.797682285308838
    4. '_' → logprob: -2.672682285308838
    5. 'd' → logprob: -2.672682285308838
    6. '_chars' → logprob: -3.422682285308838
    7. '_string' → logprob: -3.547682285308838
    8. '_str' → logprob: -4.172682285308838
    9. '_pair' → logprob: -4.297682285308838
    10. '_con' → logprob: -4.422682285308838

Token 277: '_single' (ID: 46053)
  Prédit: '_tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -1.419632911682129
    2. '_single' → logprob: -1.419632911682129
    3. 'single' → logprob: -1.669632911682129
    4. 'tr' → logprob: -2.169632911682129
    5. '_count' → logprob: -3.544632911682129
    6. '_increment' → logprob: -4.044632911682129
    7. 'count' → logprob: -4.169632911682129
    8. '_repeat' → logprob: -4.294632911682129
    9. '_unique' → logprob: -4.544632911682129
    10. '_length' → logprob: -4.544632911682129

Token 278: '_counts' (ID: 61971)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.45930051803588867
    2. '_char' → logprob: -1.2093005180358887
    3. '_counts' → logprob: -3.5843005180358887
    4. '_' → logprob: -4.334300518035889
    5. '_count' → logprob: -4.709300518035889
    6. '(s' → logprob: -4.959300518035889
    7. '_occ' → logprob: -5.334300518035889
    8. '()' → logprob: -6.834300518035889
    9. '_oc' → logprob: -6.834300518035889
    10. 's' → logprob: -7.584300518035889

Token 279: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -14.12502670288086
    4. 's' → logprob: -14.62502670288086
    5. '(n' → logprob: -15.12502670288086
    6. '(S' → logprob: -16.25002670288086
    7. 'def' → logprob: -16.50002670288086
    8. '(def' → logprob: -17.12502670288086
    9. '(ss' → logprob: -17.37502670288086
    10. '(
' → logprob: -17.62502670288086

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032962869852781296
    2. '):
' → logprob: -4.032962799072266
    3. '(s' → logprob: -4.657962799072266
    4. ',' → logprob: -5.407962799072266
    5. 's' → logprob: -7.532962799072266
    6. ',s' → logprob: -9.032962799072266
    7. ' ):' → logprob: -10.407962799072266
    8. '):
' → logprob: -11.157962799072266
    9. ')' → logprob: -11.282962799072266
    10. '   ' → logprob: -11.782962799072266

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014629167504608631
    2. 'double' → logprob: -4.889629364013672
    3. 'counter' → logprob: -6.014629364013672
    4. 'from' → logprob: -6.639629364013672
    5. 'cnt' → logprob: -6.889629364013672
    6. 'counts' → logprob: -7.014629364013672
    7. 'count' → logprob: -7.889629364013672
    8. 'c' → logprob: -8.264629364013672
    9. 'single' → logprob: -8.514629364013672
    10. 'd' → logprob: -8.514629364013672

Token 282: ' cnt' (ID: 27340)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'double' → logprob: -0.4686008393764496
    2. 'd' → logprob: -1.343600869178772
    3. '   ' → logprob: -2.8436007499694824
    4. 'cnt' (adapté à ' cnt') → logprob: -3.3436007499694824
    5. 'count' → logprob: -5.093600749969482
    6. 'from' → logprob: -5.343600749969482
    7. 'counts' → logprob: -5.843600749969482
    8. 'counter' → logprob: -6.343600749969482
    9. ' doubles' → logprob: -7.218600749969482
    10. 'pairs' → logprob: -7.343600749969482

Token 283: '_single' (ID: 46053)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8073027729988098
    2. 's' → logprob: -1.307302713394165
    3. '_double' → logprob: -1.807302713394165
    4. '_' → logprob: -2.682302713394165
    5. '=' → logprob: -3.682302713394165
    6. '_d' → logprob: -4.057302951812744
    7. '_s' → logprob: -5.057302951812744
    8. '_single' → logprob: -7.057302951812744
    9. 'd' → logprob: -7.432302951812744
    10. ' ' → logprob: -9.182302474975586

Token 284: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04003885015845299
    2. ' =' → logprob: -4.0400390625
    3. 's' → logprob: -4.4150390625
    4. '=' → logprob: -4.9150390625
    5. ' ,' → logprob: -6.4150390625
    6. ',s' → logprob: -7.9150390625
    7. ' ' → logprob: -9.6650390625
    8. '_,' → logprob: -10.5400390625
    9. '_s' → logprob: -10.6650390625
    10. '   ' → logprob: -10.9150390625

Token 285: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008830592967569828
    2. 's' → logprob: -5.258830547332764
    3. 'collections' → logprob: -6.133830547332764
    4. ' ' → logprob: -7.133830547332764
    5. 'sum' → logprob: -8.258831024169922
    6. '1' → logprob: -9.258831024169922
    7. 'len' → logprob: -9.508831024169922
    8. ' s' → logprob: -9.758831024169922
    9. ' collections' → logprob: -10.008831024169922
    10. '[' → logprob: -10.883831024169922

Token 286: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.06696957349777222
    2. '(s' → logprob: -2.816969633102417
    3. 's' → logprob: -5.691969394683838
    4. '(lambda' → logprob: -8.066969871520996
    5. '(' → logprob: -8.566969871520996
    6. 'adj' → logprob: -8.691969871520996
    7. '(i' → logprob: -8.816969871520996
    8. '(adj' → logprob: -9.191969871520996
    9. '_single' → logprob: -9.316969871520996
    10. '_duplicates' → logprob: -9.441969871520996

Token 287: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -1.306760805164231e-05
    2. 'ac' → logprob: -12.37501335144043
    3. '(' → logprob: -12.50001335144043
    4. '```' → logprob: -14.37501335144043
    5. 'alent' → logprob: -14.50001335144043
    6. '   ' → logprob: -14.50001335144043
    7. 'oint' → logprob: -15.00001335144043
    8. '[' → logprob: -15.00001335144043
    9. '_adj' → logprob: -15.12501335144043
    10. 's' → logprob: -15.12501335144043

Token 288: '_duplicates' (ID: 196009)
  Prédit: '_duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duplicates' → logprob: -0.000841311237309128
    2. 'duplicates' → logprob: -7.62584114074707
    3. 's' → logprob: -8.37584114074707
    4. '_pairs' → logprob: -10.12584114074707
    5. '_' → logprob: -11.37584114074707
    6. '(s' → logprob: -11.50084114074707
    7. '_occ' → logprob: -11.87584114074707
    8. '_chars' → logprob: -11.87584114074707
    9. '```' → logprob: -12.12584114074707
    10. '_re' → logprob: -12.25084114074707

Token 289: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.703443770878948e-06
    2. ' (' → logprob: -12.500007629394531
    3. '(' → logprob: -12.625007629394531
    4. 's' → logprob: -14.250007629394531
    5. ' ' → logprob: -18.12500762939453
    6. '```' → logprob: -20.12500762939453
    7. '(
' → logprob: -20.25000762939453
    8. ' s' → logprob: -21.00000762939453
    9. '((' → logprob: -21.12500762939453
    10. ',' → logprob: -21.25000762939453

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008965766057372093
    2. ')
' → logprob: -4.758965969085693
    3. '())' → logprob: -8.883965492248535
    4. ' )' → logprob: -9.508965492248535
    5. '()' → logprob: -9.633965492248535
    6. 'def' → logprob: -10.883965492248535
    7. ')+' → logprob: -11.758965492248535
    8. ')//' → logprob: -12.008965492248535
    9. ')

' → logprob: -12.133965492248535
    10. ')/' → logprob: -12.258965492248535

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5362653136253357
    2. 'cnt' → logprob: -1.2862653732299805
    3. '
' → logprob: -2.4112653732299805
    4. ' cnt' → logprob: -3.6612653732299805
    5. ',' → logprob: -4.0362653732299805
    6. '	cnt' → logprob: -5.4112653732299805
    7. '(cnt' → logprob: -7.5362653732299805
    8. '[cnt' → logprob: -8.53626537322998
    9. ',
' → logprob: -9.03626537322998
    10. '_cnt' → logprob: -9.53626537322998

Token 292: ' double' (ID: 3503)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.001985140610486269
    2. 'return' → logprob: -7.3769850730896
    3. 'length' → logprob: -8.251985549926758
    4. 'count' → logprob: -8.376985549926758
    5. 'first' → logprob: -9.126985549926758
    6. 'double' (adapté à ' double') → logprob: -9.251985549926758
    7. 's' → logprob: -9.251985549926758
    8. 'unique' → logprob: -9.501985549926758
    9. 'single' → logprob: -9.626985549926758
    10. 'len' → logprob: -10.001985549926758

Token 293: '_s' (ID: 1278)
  Prédit: '_cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.4746100604534149
    2. '_' → logprob: -1.3496100902557373
    3. '_count' → logprob: -2.9746100902557373
    4. ' =' → logprob: -3.0996100902557373
    5. 's' → logprob: -4.599609851837158
    6. ',' → logprob: -5.224609851837158
    7. '=' → logprob: -6.224609851837158
    8. '_s' → logprob: -6.349609851837158
    9. 'cnt' → logprob: -6.849609851837158
    10. '_counts' → logprob: -7.974609851837158

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020846186205744743
    2. '_cnt' → logprob: -4.895846366882324
    3. 'tr' → logprob: -5.145846366882324
    4. '=' → logprob: -5.270846366882324
    5. '_count' → logprob: -7.395846366882324
    6. '_' → logprob: -8.020846366882324
    7. '_counts' → logprob: -8.020846366882324
    8. 'tring' → logprob: -8.145846366882324
    9. 'cnt' → logprob: -8.270846366882324
    10. 'trs' → logprob: -9.895846366882324

Token 295: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.5445328950881958
    2. ' multiply' → logprob: -0.9195328950881958
    3. 's' → logprob: -4.919532775878906
    4. ' s' → logprob: -5.294532775878906
    5. 'pair' → logprob: -6.169532775878906
    6. 'count' → logprob: -6.419532775878906
    7. ' cnt' → logprob: -6.544532775878906
    8. ' pair' → logprob: -6.669532775878906
    9. 'cnt' → logprob: -6.919532775878906
    10. ' count' → logprob: -8.044532775878906

Token 296: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00013202552509028465
    2. 'str' → logprob: -9.000131607055664
    3. 's' → logprob: -12.000131607055664
    4. '_s' → logprob: -13.875131607055664
    5. '(s' → logprob: -14.750131607055664
    6. '_STR' → logprob: -15.750131607055664
    7. 'Str' → logprob: -15.750131607055664
    8. '```' → logprob: -15.875131607055664
    9. '(str' → logprob: -16.125131607055664
    10. '_' → logprob: -16.250131607055664

Token 297: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.8590300139039755e-05
    2. '(' → logprob: -10.250048637390137
    3. 's' → logprob: -11.375048637390137
    4. ' (' → logprob: -13.750048637390137
    5. '<|end|>' → logprob: -14.500048637390137
    6. '((' → logprob: -16.75004768371582
    7. '(
' → logprob: -17.62504768371582
    8. '(str' → logprob: -18.25004768371582
    9. '('' → logprob: -18.25004768371582
    10. ' ' → logprob: -19.12504768371582

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019844191148877144
    2. ' ,' → logprob: -4.019844055175781
    3. '(s' → logprob: -6.769844055175781
    4. ',s' → logprob: -8.019844055175781
    5. 's' → logprob: -9.644844055175781
    6. '(' → logprob: -9.769844055175781
    7. ' (' → logprob: -10.144844055175781
    8. '2' → logprob: -10.894844055175781
    9. ')' → logprob: -11.769844055175781
    10. ' s' → logprob: -12.019844055175781

Token 299: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001678271684795618
    2. ' ' → logprob: -6.876678466796875
    3. 'k' → logprob: -7.376678466796875
    4. ' k' → logprob: -11.001678466796875
    5. ')' → logprob: -13.751678466796875
    6. '   ' → logprob: -14.751678466796875
    7. '1' → logprob: -14.876678466796875
    8. '  ' → logprob: -15.251678466796875
    9. '    ' → logprob: -15.751678466796875
    10. '3' → logprob: -15.814178466796875

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007617275230586529
    2. 'k' → logprob: -4.882617473602295
    3. ' ' → logprob: -12.382616996765137
    4. ')' → logprob: -13.257616996765137
    5. '1' → logprob: -13.257616996765137
    6. '   ' → logprob: -14.132616996765137
    7. ' k' → logprob: -14.257616996765137
    8. '```' → logprob: -15.132616996765137
    9. '3' → logprob: -15.195116996765137
    10. '(' → logprob: -15.257616996765137

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07894135266542435
    2. ')
' → logprob: -2.5789413452148438
    3. ')
' → logprob: -10.328941345214844
    4. ' )' → logprob: -11.453941345214844
    5. ')

' → logprob: -12.328941345214844
    6. ' )
' → logprob: -12.828941345214844
    7. ')`
' → logprob: -15.078941345214844
    8. ')return' → logprob: -15.203941345214844
    9. ')`' → logprob: -15.828941345214844
    10. '))' → logprob: -16.078941345214844

Token 302: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1823435127735138
    2. '   ' → logprob: -1.8073434829711914
    3. '
' → logprob: -7.057343482971191
    4. ' cnt' → logprob: -7.307343482971191
    5. '	cnt' → logprob: -7.307343482971191
    6. '[cnt' → logprob: -8.932343482971191
    7. 'count' → logprob: -9.432343482971191
    8. '(cnt' → logprob: -9.932343482971191
    9. '    
' → logprob: -10.432343482971191
    10. 'return' → logprob: -10.682343482971191

Token 303: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -1.664371848164592e-05
    2. 'double' → logprob: -11.625016212463379
    3. '   ' → logprob: -12.125016212463379
    4. ' cnt' → logprob: -13.625016212463379
    5. 'count' → logprob: -14.625016212463379
    6. 'return' → logprob: -15.125016212463379
    7. '	cnt' → logprob: -15.125016212463379
    8. 'counter' → logprob: -16.875017166137695
    9. '```' → logprob: -17.500017166137695
    10. 'd' → logprob: -18.000017166137695

Token 304: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.0007158888038247824
    2. 'double' → logprob: -7.750715732574463
    3. '_single' → logprob: -8.375716209411621
    4. '_' → logprob: -10.375716209411621
    5. ' =' → logprob: -11.250716209411621
    6. '=' → logprob: -12.625716209411621
    7. '_d' → logprob: -13.625716209411621
    8. '_adj' → logprob: -13.625716209411621
    9. ' double' → logprob: -13.750716209411621
    10. '_pair' → logprob: -14.875716209411621

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197776645421982
    2. '=' → logprob: -2.8119778633117676
    3. ' ' → logprob: -11.93697738647461
    4. '_single' → logprob: -13.06197738647461
    5. '_' → logprob: -14.31197738647461
    6. 'single' → logprob: -15.18697738647461
    7. ',' → logprob: -15.68697738647461
    8. '＝' → logprob: -15.93697738647461
    9. ' ' → logprob: -16.31197738647461
    10. '  ' → logprob: -17.18697738647461

Token 306: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1602274775505066
    2. ' count' → logprob: -1.9102275371551514
    3. 'pair' → logprob: -13.16022777557373
    4. ' pair' → logprob: -14.41022777557373
    5. ' ' → logprob: -14.78522777557373
    6. '	count' → logprob: -15.53522777557373
    7. '(count' → logprob: -15.91022777557373
    8. '   ' → logprob: -16.285226821899414
    9. 'cnt' → logprob: -16.410226821899414
    10. 'counter' → logprob: -17.785226821899414

Token 307: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -8.53050296427682e-05
    2. '_ad' → logprob: -9.50008487701416
    3. 'adj' → logprob: -11.50008487701416
    4. '_double' → logprob: -15.50008487701416
    5. '(adj' → logprob: -17.000085830688477
    6. '_adapter' → logprob: -17.875085830688477
    7. '_' → logprob: -18.125085830688477
    8. 'Adjacent' → logprob: -18.250085830688477
    9. 's' → logprob: -18.750085830688477
    10. ' adjacent' → logprob: -18.875085830688477

Token 308: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.16733214259147644
    2. '_duplicates' → logprob: -2.167332172393799
    3. 'uplic' → logprob: -3.667332172393799
    4. 'duplicates' → logprob: -5.042332172393799
    5. 'uplicate' → logprob: -5.792332172393799
    6. 'ac' → logprob: -6.292332172393799
    7. 'u' → logprob: -8.04233169555664
    8. 'Duplicates' → logprob: -8.41733169555664
    9. 'ug' → logprob: -8.41733169555664
    10. 'icates' → logprob: -8.41733169555664

Token 309: '_duplicates' (ID: 196009)
  Prédit: '_duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duplicates' → logprob: -0.000628683075774461
    2. 'duplicates' → logprob: -7.375628471374512
    3. ' duplicates' → logprob: -14.125628471374512
    4. 'uplic' → logprob: -14.250628471374512
    5. 'Duplicates' → logprob: -14.625628471374512
    6. '_duplicate' → logprob: -16.250629425048828
    7. '_dup' → logprob: -16.875629425048828
    8. '```' → logprob: -17.125629425048828
    9. '_' → logprob: -17.500629425048828
    10. '_equals' → logprob: -17.750629425048828

Token 310: '(double' (ID: 17684)
  Prédit: '(double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(double' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.750000953674316
    3. ',double' → logprob: -15.375000953674316
    4. '(Double' → logprob: -16.375001907348633
    5. ' (' → logprob: -16.375001907348633
    6. 'double' → logprob: -16.500001907348633
    7. '<double' → logprob: -17.625001907348633
    8. ' double' → logprob: -17.750001907348633
    9. '(s' → logprob: -19.750001907348633
    10. '	double' → logprob: -20.000001907348633

Token 311: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6838859915733337
    2. '(double' → logprob: -1.0588860511779785
    3. '(s' → logprob: -2.3088860511779785
    4. 'double' → logprob: -3.8088860511779785
    5. '_double' → logprob: -4.1838860511779785
    6. 's' → logprob: -5.4338860511779785
    7. ' double' → logprob: -6.1838860511779785
    8. '_(' → logprob: -6.1838860511779785
    9. '(' → logprob: -7.0588860511779785
    10. ')' → logprob: -7.5588860511779785

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017421995289623737
    2. ')
' → logprob: -8.875174522399902
    3. ' )' → logprob: -10.750174522399902
    4. '(s' → logprob: -12.500174522399902
    5. ')s' → logprob: -12.625174522399902
    6. ')return' → logprob: -13.375174522399902
    7. '   ' → logprob: -13.750174522399902
    8. '(' → logprob: -13.875174522399902
    9. '))' → logprob: -14.500174522399902
    10. ')-' → logprob: -15.125174522399902

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001117234816774726
    2. ' return' → logprob: -7.37611722946167
    3. 'return' → logprob: -7.87611722946167
    4. '
' → logprob: -9.251117706298828
    5. '	return' → logprob: -12.001117706298828
    6. '    
' → logprob: -12.251117706298828
    7. ' single' → logprob: -14.001117706298828
    8. ' ' → logprob: -14.251117706298828
    9. ',' → logprob: -14.626117706298828
    10. 'def' → logprob: -14.751117706298828

Token 314: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5927351713180542
    2. 'cnt' → logprob: -1.2177351713180542
    3. '   ' → logprob: -1.9677351713180542
    4. ' return' → logprob: -4.842735290527344
    5. ' cnt' → logprob: -6.592735290527344
    6. 'single' → logprob: -6.717735290527344
    7. '
' → logprob: -8.092735290527344
    8. 'diff' → logprob: -8.342735290527344
    9. ' ' → logprob: -9.092735290527344
    10. '	cnt' → logprob: -9.592735290527344

Token 315: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008144430816173553
    2. ' cnt' → logprob: -5.508144378662109
    3. '(cnt' → logprob: -5.508144378662109
    4. '[cnt' → logprob: -12.75814437866211
    5. ' (' → logprob: -14.25814437866211
    6. '	cnt' → logprob: -14.75814437866211
    7. '   ' → logprob: -16.25814437866211
    8. '(' → logprob: -16.75814437866211
    9. 'cn' → logprob: -18.00814437866211
    10. '(c' → logprob: -18.25814437866211

Token 316: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.008625447750091553
    2. '_double' → logprob: -4.758625507354736
    3. 'single' → logprob: -11.758625030517578
    4. '_s' → logprob: -13.758625030517578
    5. 'double' → logprob: -13.758625030517578
    6. '_' → logprob: -14.633625030517578
    7. '_SINGLE' → logprob: -15.758625030517578
    8. 'Single' → logprob: -16.008625030517578
    9. 's' → logprob: -16.508625030517578
    10. 'ingle' → logprob: -16.758625030517578

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ' ,' → logprob: -11.125020980834961
    3. ',c' → logprob: -12.625020980834961
    4. ',
' → logprob: -13.375020980834961
    5. ',double' → logprob: -14.500020980834961
    6. ',count' → logprob: -16.12502098083496
    7. '[cnt' → logprob: -16.37502098083496
    8. '+' → logprob: -16.37502098083496
    9. 'cnt' → logprob: -16.62502098083496
    10. '<|end|>' → logprob: -16.75002098083496

Token 318: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3868812620639801
    2. ' cnt' → logprob: -1.1368812322616577
    3. '  ' → logprob: -12.511880874633789
    4. '	cnt' → logprob: -13.261880874633789
    5. ' ' → logprob: -13.511880874633789
    6. '(cnt' → logprob: -13.761880874633789
    7. '   ' → logprob: -14.011880874633789
    8. 'double' → logprob: -14.511880874633789
    9. ' double' → logprob: -14.636880874633789
    10. '    ' → logprob: -15.386880874633789

Token 319: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -4.024604277219623e-05
    2. 'double' → logprob: -10.250040054321289
    3. '_single' → logprob: -12.250040054321289
    4. ' double' → logprob: -16.75004005432129
    5. '_d' → logprob: -17.37504005432129
    6. '_DOUBLE' → logprob: -17.75004005432129
    7. 'Double' → logprob: -18.50004005432129
    8. '_' → logprob: -18.75004005432129
    9. 'ouble' → logprob: -19.37504005432129
    10. '_two' → logprob: -20.37504005432129

Token 320: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03296356275677681
    2. '<|end|>' → logprob: -3.532963514328003
    3. '
' → logprob: -5.782963752746582
    4. '```' → logprob: -9.532963752746582
    5. '

' → logprob: -10.407963752746582
    6. '<|end|>' → logprob: -11.032963752746582
    7. ')' → logprob: -13.282963752746582
    8. ' def' → logprob: -13.282963752746582
    9. ',' → logprob: -13.907963752746582
    10. '#' → logprob: -13.907963752746582

Token 321: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.537868779967539e-06
    2. '
' → logprob: -12.875008583068848
    3. '<|end|>' → logprob: -12.875008583068848
    4. '```' → logprob: -13.125008583068848
    5. '#' → logprob: -14.125008583068848
    6. ' def' → logprob: -15.125008583068848
    7. 's' → logprob: -16.25000762939453
    8. 'import' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -16.37500762939453
    10. 'ndef' → logprob: -17.62500762939453

Token 322: ' compute' (ID: 23864)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.2618740797042847
    2. ' main' → logprob: -1.3868740797042847
    3. 'process' → logprob: -2.261874198913574
    4. ' solve' → logprob: -2.511874198913574
    5. 'solve' → logprob: -2.636874198913574
    6. 'main' → logprob: -3.011874198913574
    7. ' calc' → logprob: -3.511874198913574
    8. ' count' → logprob: -3.636874198913574
    9. 'count' → logprob: -3.761874198913574
    10. 'calc' → logprob: -4.136874198913574

Token 323: '_final' (ID: 46468)
  Prédit: '_special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_special' → logprob: -0.323640376329422
    2. '_final' → logprob: -3.1986403465270996
    3. '_double' → logprob: -3.1986403465270996
    4. '_pair' → logprob: -3.3236403465270996
    5. '_max' → logprob: -3.4486403465270996
    6. '_result' → logprob: -3.5736403465270996
    7. '_count' → logprob: -3.9486403465270996
    8. '_total' → logprob: -4.1986403465271
    9. '_cont' → logprob: -4.3236403465271
    10. '_comb' → logprob: -4.6986403465271

Token 324: '_answer' (ID: 65702)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.15997974574565887
    2. '_result' → logprob: -2.159979820251465
    3. '_counts' → logprob: -3.784979820251465
    4. '_answer' → logprob: -4.784979820251465
    5. '_value' → logprob: -7.784979820251465
    6. '_length' → logprob: -8.159979820251465
    7. '(s' → logprob: -8.159979820251465
    8. '_pair' → logprob: -8.784979820251465
    9. '_score' → logprob: -8.909979820251465
    10. '_string' → logprob: -10.284979820251465

Token 325: '(cnt' (ID: 102125)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -11.000027656555176
    3. ' (' → logprob: -11.500027656555176
    4. '(S' → logprob: -15.000027656555176
    5. 'def' → logprob: -15.750027656555176
    6. 's' → logprob: -15.875027656555176
    7. '(
' → logprob: -16.625028610229492
    8. '(def' → logprob: -17.500028610229492
    9. '((' → logprob: -18.375028610229492
    10. '(a' → logprob: -18.500028610229492

Token 326: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0005262265913188457
    2. 'single' → logprob: -8.000526428222656
    3. '_s' → logprob: -9.500526428222656
    4. '_double' → logprob: -9.750526428222656
    5. 's' → logprob: -10.125526428222656
    6. ',' → logprob: -11.875526428222656
    7. '_' → logprob: -12.250526428222656
    8. '_,' → logprob: -13.875526428222656
    9. '_pair' → logprob: -13.875526428222656
    10. ' single' → logprob: -14.375526428222656

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004421127669047564
    2. ' ,' → logprob: -7.750442028045654
    3. ',
' → logprob: -12.875442504882812
    4. 's' → logprob: -12.875442504882812
    5. '_,' → logprob: -12.875442504882812
    6. ',s' → logprob: -13.625442504882812
    7. ',c' → logprob: -13.625442504882812
    8. ' ' → logprob: -15.750442504882812
    9. '‌,' → logprob: -16.000442504882812
    10. '   ' → logprob: -16.125442504882812

Token 328: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.02063426375389099
    2. ' cnt' → logprob: -3.895634174346924
    3. 'k' → logprob: -9.770634651184082
    4. 'double' → logprob: -11.270634651184082
    5. '	cnt' → logprob: -12.270634651184082
    6. 'count' → logprob: -12.645634651184082
    7. ' k' → logprob: -12.645634651184082
    8. ' ' → logprob: -12.770634651184082
    9. ' double' → logprob: -13.520634651184082
    10. '   ' → logprob: -13.520634651184082

Token 329: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.018158607184886932
    2. 'double' → logprob: -4.018158435821533
    3. '_' → logprob: -12.768158912658691
    4. ' double' → logprob: -13.393158912658691
    5. '_single' → logprob: -13.768158912658691
    6. '_d' → logprob: -14.143158912658691
    7. '_DOUBLE' → logprob: -14.893158912658691
    8. 'Double' → logprob: -15.018158912658691
    9. '```' → logprob: -15.518158912658691
    10. '__' → logprob: -15.768158912658691

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002171435859054327
    2. '):' → logprob: -6.377171516418457
    3. '):
' → logprob: -8.002171516418457
    4. ' ,' → logprob: -9.252171516418457
    5. ',
' → logprob: -10.877171516418457
    6. ',k' → logprob: -11.377171516418457
    7. '   ' → logprob: -13.127171516418457
    8. ',s' → logprob: -13.252171516418457
    9. ')' → logprob: -13.752171516418457
    10. '):
' → logprob: -14.502171516418457

Token 331: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013918546959757805
    2. ' k' → logprob: -4.888918399810791
    3. 's' → logprob: -5.388918399810791
    4. 'cnt' → logprob: -7.138918399810791
    5. 'is' → logprob: -8.26391887664795
    6. 'len' → logprob: -8.76391887664795
    7. ' s' → logprob: -9.01391887664795
    8. 'n' → logprob: -9.51391887664795
    9. 'count' → logprob: -9.63891887664795
    10. 'length' → logprob: -9.88891887664795

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015643771039322019
    2. '):
' → logprob: -6.5015645027160645
    3. ',' → logprob: -10.001564025878906
    4. ')' → logprob: -11.876564025878906
    5. ' ):' → logprob: -11.876564025878906
    6. ':' → logprob: -13.501564025878906
    7. '):
' → logprob: -13.876564025878906
    8. '   ' → logprob: -16.126564025878906
    9. '):

' → logprob: -16.501564025878906
    10. '=' → logprob: -16.626564025878906

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005383995361626148
    2. '```' → logprob: -5.3803839683532715
    3. ' if' → logprob: -7.8803839683532715
    4. '<|end|>' → logprob: -8.88038444519043
    5. ',' → logprob: -9.63038444519043
    6. '
' → logprob: -10.25538444519043
    7. '    
' → logprob: -10.50538444519043
    8. '{
' → logprob: -11.00538444519043
    9. '``' → logprob: -11.00538444519043
    10. 'if' → logprob: -11.13038444519043

Token 334: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03405078500509262
    2. '   ' → logprob: -3.409050703048706
    3. 'diff' → logprob: -8.284050941467285
    4. ' if' → logprob: -9.284050941467285
    5. 'return' (adapté à ' return') → logprob: -11.534050941467285
    6. '```' → logprob: -11.534050941467285
    7. 'difference' → logprob: -11.659050941467285
    8. 'cnt' → logprob: -11.909050941467285
    9. 'ans' → logprob: -12.659050941467285
    10. 'result' → logprob: -12.659050941467285

Token 335: ' (' (ID: 350)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07504094392061234
    2. ' cnt' → logprob: -2.7000410556793213
    3. '(cnt' → logprob: -5.325040817260742
    4. ' (' → logprob: -9.700040817260742
    5. 'max' → logprob: -10.075040817260742
    6. 'min' → logprob: -11.075040817260742
    7. '(' → logprob: -11.075040817260742
    8. ' max' → logprob: -11.200040817260742
    9. ' min' → logprob: -11.450040817260742
    10. '   ' → logprob: -11.450040817260742

Token 336: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.016747476533055305
    2. '(cnt' → logprob: -4.39174747467041
    3. 'k' → logprob: -5.51674747467041
    4. '(k' → logprob: -9.26674747467041
    5. ' cnt' → logprob: -9.39174747467041
    6. ' (' → logprob: -11.26674747467041
    7. '[cnt' → logprob: -12.39174747467041
    8. '((' → logprob: -12.64174747467041
    9. 'len' → logprob: -13.01674747467041
    10. '(' → logprob: -13.26674747467041

Token 337: '_double' (ID: 59806)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.3251879811286926
    2. '_double' → logprob: -1.3251879215240479
    3. 'single' → logprob: -5.075188159942627
    4. 'double' → logprob: -5.200188159942627
    5. 'Single' → logprob: -10.950187683105469
    6. ' single' → logprob: -11.450187683105469
    7. '_s' → logprob: -11.700187683105469
    8. '_' → logprob: -11.950187683105469
    9. '_SINGLE' → logprob: -11.950187683105469
    10. ' double' → logprob: -12.075187683105469

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1160496175289154
    2. ' -' → logprob: -2.2410495281219482
    3. ')' → logprob: -5.991049766540527
    4. '*' → logprob: -7.991049766540527
    5. ' *' → logprob: -8.741049766540527
    6. '*(' → logprob: -9.366049766540527
    7. ')*' → logprob: -10.116049766540527
    8. '-(' → logprob: -10.491049766540527
    9. '-k' → logprob: -10.866049766540527
    10. '   ' → logprob: -11.241049766540527

Token 339: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -2.8802491215174086e-05
    2. ' cnt' → logprob: -10.750028610229492
    3. '(cnt' → logprob: -11.875028610229492
    4. '	cnt' → logprob: -15.250028610229492
    5. '[cnt' → logprob: -16.625028610229492
    6. '   ' → logprob: -16.750028610229492
    7. 'count' → logprob: -18.500028610229492
    8. '  ' → logprob: -19.000028610229492
    9. '(' → logprob: -19.250028610229492
    10. ' ' → logprob: -19.500028610229492

Token 340: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0031813981477171183
    2. 'single' → logprob: -5.753181457519531
    3. '_double' → logprob: -13.753181457519531
    4. ' single' → logprob: -13.878181457519531
    5. '_SINGLE' → logprob: -14.253181457519531
    6. '_s' → logprob: -14.878181457519531
    7. 'Single' → logprob: -15.503181457519531
    8. '   ' → logprob: -15.878181457519531
    9. 'double' → logprob: -16.25318145751953
    10. ' ' → logprob: -17.00318145751953

Token 341: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007532857125625014
    2. ')*' → logprob: -7.250753402709961
    3. ')*(' → logprob: -10.875753402709961
    4. ' )' → logprob: -11.750753402709961
    5. '*)' → logprob: -12.125753402709961
    6. '   ' → logprob: -12.500753402709961
    7. ')
' → logprob: -13.375753402709961
    8. '*' → logprob: -13.375753402709961
    9. '+' → logprob: -13.625753402709961
    10. '    ' → logprob: -14.625753402709961

Token 342: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5853175520896912
    2. '*' → logprob: -0.8353175520896912
    3. ')' → logprob: -5.085317611694336
    4. ')*' → logprob: -6.460317611694336
    5. '+' → logprob: -7.210317611694336
    6. '   ' → logprob: -8.335317611694336
    7. ' +' → logprob: -8.460317611694336
    8. ' ' → logprob: -8.960317611694336
    9. '*(' → logprob: -9.585317611694336
    10. '    ' → logprob: -10.085317611694336

Token 343: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.007163585163652897
    2. ' (' → logprob: -5.0071635246276855
    3. 'k' → logprob: -7.8821635246276855
    4. '(' → logprob: -10.257164001464844
    5. '((' → logprob: -10.382164001464844
    6. ' k' → logprob: -13.382164001464844
    7. '(max' → logprob: -14.132164001464844
    8. ' ((' → logprob: -14.632164001464844
    9. 'max' → logprob: -15.007164001464844
    10. ' ' → logprob: -15.007164001464844

Token 344: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012415809032972902
    2. '(k' → logprob: -9.000123977661133
    3. ' k' → logprob: -14.875123977661133
    4. ' (' → logprob: -15.375123977661133
    5. '{k' → logprob: -16.625123977661133
    6. '(' → logprob: -17.000123977661133
    7. '   ' → logprob: -18.000123977661133
    8. '	k' → logprob: -18.750123977661133
    9. ')' → logprob: -18.750123977661133
    10. '[k' → logprob: -19.500123977661133

Token 345: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16169829666614532
    2. ' -' → logprob: -1.911698341369629
    3. ')' → logprob: -6.911698341369629
    4. ' ' → logprob: -8.036698341369629
    5. '<|end|>' → logprob: -9.911698341369629
    6. '1' → logprob: -10.411698341369629
    7. '-)' → logprob: -10.786698341369629
    8. '-
' → logprob: -11.036698341369629
    9. '   ' → logprob: -11.411698341369629
    10. '  ' → logprob: -12.536698341369629

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.625085830688477
    3. '2' → logprob: -10.875085830688477
    4. ')' → logprob: -14.875085830688477
    5. '   ' → logprob: -16.750085830688477
    6. '۱' → logprob: -17.500085830688477
    7. '１' → logprob: -17.875085830688477
    8. '```' → logprob: -17.937585830688477
    9. '  ' → logprob: -18.437585830688477
    10. '<|end|>' → logprob: -19.062585830688477

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. '2' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.250067710876465
    4. ')' → logprob: -16.25006866455078
    5. '   ' → logprob: -18.37506866455078
    6. '１' → logprob: -19.43756866455078
    7. '
' → logprob: -19.81256866455078
    8. '  ' → logprob: -19.93756866455078
    9. '-' → logprob: -20.00006866455078
    10. '

' → logprob: -20.06256866455078

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001914118998683989
    2. ' )' → logprob: -6.626914024353027
    3. ')+' → logprob: -7.751914024353027
    4. '+' → logprob: -9.001914024353027
    5. ' +' → logprob: -10.376914024353027
    6. '+)' → logprob: -13.501914024353027
    7. ')
' → logprob: -14.501914024353027
    8. '   ' → logprob: -14.876914024353027
    9. ')//' → logprob: -14.876914024353027
    10. ' ' → logprob: -15.126914024353027

Token 349: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08062385767698288
    2. '+' → logprob: -2.5806238651275635
    3. '   ' → logprob: -6.455623626708984
    4. 'def' → logprob: -9.705623626708984
    5. '```' → logprob: -11.080623626708984
    6. '<|end|>' → logprob: -11.080623626708984
    7. '    ' → logprob: -11.330623626708984
    8. '  ' → logprob: -11.455623626708984
    9. 'import' → logprob: -11.955623626708984
    10. ' plus' → logprob: -11.955623626708984

Token 350: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.001171056181192398
    2. ' cnt' → logprob: -6.751171112060547
    3. '(cnt' → logprob: -14.126171112060547
    4. '	cnt' → logprob: -16.126171112060547
    5. '[cnt' → logprob: -17.626171112060547
    6. 'k' → logprob: -18.876171112060547
    7. '   ' → logprob: -20.126171112060547
    8. 'cn' → logprob: -20.626171112060547
    9. ' ' → logprob: -20.626171112060547
    10. '_cnt' → logprob: -21.001171112060547

Token 351: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -2.1008713702030946e-06
    2. 'single' → logprob: -13.375001907348633
    3. '_s' → logprob: -14.875001907348633
    4. '_' → logprob: -15.750001907348633
    5. '_SINGLE' → logprob: -17.250001907348633
    6. '_double' → logprob: -17.625001907348633
    7. 'Single' → logprob: -18.375001907348633
    8. ' _' → logprob: -18.750001907348633
    9. ' single' → logprob: -19.125001907348633
    10. '_simple' → logprob: -19.625001907348633

Token 352: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005427035503089428
    2. '<|end|>' → logprob: -5.50542688369751
    3. '
' → logprob: -6.63042688369751
    4. '```' → logprob: -12.005427360534668
    5. '#' → logprob: -12.130427360534668
    6. ' def' → logprob: -12.380427360534668
    7. '<|end|>' → logprob: -12.630427360534668
    8. '  
' → logprob: -12.880427360534668
    9. '

' → logprob: -13.380427360534668
    10. ')' → logprob: -13.505427360534668

Token 353: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004917914047837257
    2. '<|end|>' → logprob: -7.875491619110107
    3. '#' → logprob: -9.625492095947266
    4. '
' → logprob: -11.625492095947266
    5. 'for' → logprob: -11.875492095947266
    6. '\' → logprob: -12.000492095947266
    7. ')' → logprob: -12.500492095947266
    8. '(' → logprob: -12.750492095947266
    9. '```' → logprob: -12.750492095947266
    10. 'print' → logprob: -13.500492095947266

Token 354: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19936542212963104
    2. 'main' → logprob: -2.4493653774261475
    3. 'def' → logprob: -3.1993653774261475
    4. ' def' → logprob: -3.4493653774261475
    5. ' solve' → logprob: -4.199365615844727
    6. 'solve' → logprob: -5.574365615844727
    7. ' process' → logprob: -6.324365615844727
    8. 'process' → logprob: -8.199365615844727
    9. ' solution' → logprob: -8.574365615844727
    10. ' compute' → logprob: -8.949365615844727

Token 355: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9727975130081177
    2. '(s' → logprob: -1.0977975130081177
    3. '_string' → logprob: -1.9727975130081177
    4. '_' → logprob: -2.597797393798828
    5. '_(' → logprob: -3.722797393798828
    6. '_input' → logprob: -4.472797393798828
    7. '_s' → logprob: -4.722797393798828
    8. '(_' → logprob: -4.847797393798828
    9. '_strings' → logprob: -4.972797393798828
    10. '_case' → logprob: -5.847797393798828

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03345388174057007
    2. 's' → logprob: -3.533453941345215
    3. ' s' → logprob: -5.658453941345215
    4. 'n' → logprob: -8.658453941345215
    5. '```' → logprob: -11.658453941345215
    6. 'k' → logprob: -12.033453941345215
    7. '(s' → logprob: -12.033453941345215
    8. ' n' → logprob: -12.533453941345215
    9. '	s' → logprob: -12.533453941345215
    10. '   ' → logprob: -13.408453941345215

Token 357: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.13612054288387299
    2. '   ' → logprob: -2.261120557785034
    3. 'n' → logprob: -4.136120319366455
    4. ' s' → logprob: -5.011120319366455
    5. ' n' → logprob: -8.136120796203613
    6. 'k' → logprob: -10.261120796203613
    7. ' ' → logprob: -11.636120796203613
    8. '	s' → logprob: -11.761120796203613
    9. '_s' → logprob: -12.136120796203613
    10. 't' → logprob: -12.136120796203613

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10061001777648926
    2. '=' → logprob: -2.3506100177764893
    3. ',' → logprob: -7.85060977935791
    4. ' ' → logprob: -11.85060977935791
    5. ' ,' → logprob: -12.22560977935791
    6. ' =
' → logprob: -14.72560977935791
    7. '   ' → logprob: -14.85060977935791
    8. ' s' → logprob: -14.97560977935791
    9. '  ' → logprob: -15.22560977935791
    10. ' =)' → logprob: -15.97560977935791

Token 359: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0005555360112339258
    2. ' read' → logprob: -7.500555515289307
    3. 'input' → logprob: -13.375555992126465
    4. 'sys' → logprob: -14.375555992126465
    5. '	read' → logprob: -15.375555992126465
    6. '   ' → logprob: -16.62555503845215
    7. '(read' → logprob: -17.25055503845215
    8. ' ' → logprob: -17.87555503845215
    9. ' input' → logprob: -17.87555503845215
    10. ' sys' → logprob: -18.37555503845215

Token 360: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00022296691895462573
    2. '_' → logprob: -8.625223159790039
    3. '()' → logprob: -11.250223159790039
    4. '_list' → logprob: -11.500223159790039
    5. '_string' → logprob: -11.625223159790039
    6. '_str' → logprob: -11.875223159790039
    7. '_tokens' → logprob: -13.625223159790039
    8. 'line' → logprob: -14.375223159790039
    9. '_token' → logprob: -14.500223159790039
    10. '_LINE' → logprob: -15.000223159790039

Token 361: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011071049608290195
    2. '()
' → logprob: -4.51107120513916
    3. '   ' → logprob: -10.88607120513916
    4. '()
' → logprob: -13.26107120513916
    5. ')' → logprob: -14.01107120513916
    6. '()\' → logprob: -14.26107120513916
    7. ' ()' → logprob: -15.01107120513916
    8. '().' → logprob: -15.63607120513916
    9. '())' → logprob: -16.011070251464844
    10. '()`' → logprob: -16.261070251464844

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3265852928161621
    2. 'k' → logprob: -1.326585292816162
    3. ' k' → logprob: -4.326585292816162
    4. '
' → logprob: -12.07658576965332
    5. '```' → logprob: -12.20158576965332
    6. '    
' → logprob: -12.45158576965332
    7. '	k' → logprob: -13.07658576965332
    8. '    ' → logprob: -13.32658576965332
    9. ' ' → logprob: -13.82658576965332
    10. '   ' → logprob: -13.95158576965332

Token 363: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.00043519894825294614
    2. '   ' → logprob: -7.7504353523254395
    3. ' k' → logprob: -12.375434875488281
    4. 'if' → logprob: -16.00043487548828
    5. '	k' → logprob: -16.75043487548828
    6. 'cnt' → logprob: -17.25043487548828
    7. '```' → logprob: -17.50043487548828
    8. 'n' → logprob: -17.50043487548828
    9. '
' → logprob: -17.62543487548828
    10. '  ' → logprob: -17.87543487548828

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142298936843872
    2. '=' → logprob: -1.701422929763794
    3. ' ' → logprob: -11.576422691345215
    4. ' ' → logprob: -15.951422691345215
    5. ',' → logprob: -16.20142364501953
    6. ' =
' → logprob: -16.82642364501953
    7. '=int' → logprob: -17.07642364501953
    8. '	' → logprob: -17.57642364501953
    9. ' ,' → logprob: -18.57642364501953
    10. '＝' → logprob: -18.82642364501953

Token 365: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.020127443596720695
    2. 'read' → logprob: -4.020127296447754
    3. ' int' → logprob: -6.270127296447754
    4. 'int' → logprob: -9.395127296447754
    5. ' ' → logprob: -14.770127296447754
    6. '	read' → logprob: -16.39512825012207
    7. '(read' → logprob: -17.14512825012207
    8. ' reads' → logprob: -18.02012825012207
    9. '_read' → logprob: -18.52012825012207
    10. ' write' → logprob: -18.64512825012207

Token 366: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.963691804325208e-05
    2. '_' → logprob: -10.875029563903809
    3. 'int' → logprob: -11.625029563903809
    4. '()' → logprob: -15.000029563903809
    5. ' _' → logprob: -15.000029563903809
    6. '```' → logprob: -15.625029563903809
    7. '(_' → logprob: -15.750029563903809
    8. '(int' → logprob: -15.750029563903809
    9. '_INT' → logprob: -15.875029563903809
    10. '_uint' → logprob: -16.125030517578125

Token 367: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07016950845718384
    2. '   ' → logprob: -2.945169448852539
    3. '<|end|>' → logprob: -4.695169448852539
    4. '    
' → logprob: -5.320169448852539
    5. '()' → logprob: -8.445169448852539
    6. '  
' → logprob: -8.570169448852539
    7. '()
' → logprob: -8.695169448852539
    8. '<|end|>' → logprob: -8.820169448852539
    9. '	
' → logprob: -9.070169448852539
    10. ' 
' → logprob: -10.195169448852539

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032679665833711624
    2. 'if' → logprob: -3.907679557800293
    3. '
' → logprob: -4.532679557800293
    4. '    
' → logprob: -7.532679557800293
    5. ' if' → logprob: -7.782679557800293
    6. '```' → logprob: -8.782679557800293
    7. 'cnt' → logprob: -9.157679557800293
    8. 'n' → logprob: -10.532679557800293
    9. 'count' → logprob: -11.282679557800293
    10. '<|end|>' → logprob: -11.657679557800293

Token 369: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006403613369911909
    2. '   ' → logprob: -7.875640392303467
    3. 'cnt' → logprob: -8.375639915466309
    4. ' if' → logprob: -10.500639915466309
    5. '```' → logprob: -14.125639915466309
    6. 'i' → logprob: -14.375639915466309
    7. 'result' → logprob: -14.875639915466309
    8. 'count' → logprob: -16.000640869140625
    9. 'res' → logprob: -16.250640869140625
    10. 'is' → logprob: -16.375640869140625

Token 370: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004795238375663757
    2. 'is' → logprob: -5.879795074462891
    3. ' len' → logprob: -6.379795074462891
    4. 'len' → logprob: -8.37979507446289
    5. ' not' → logprob: -10.12979507446289
    6. ' s' → logprob: -11.62979507446289
    7. 's' → logprob: -11.75479507446289
    8. '   ' → logprob: -12.87979507446289
    9. '(len' → logprob: -13.87979507446289
    10. 'not' → logprob: -14.00479507446289

Token 371: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -7.660315895918757e-05
    2. 'single' → logprob: -9.750076293945312
    3. '(s' → logprob: -11.500076293945312
    4. '_' → logprob: -13.000076293945312
    5. 's' → logprob: -13.250076293945312
    6. '_s' → logprob: -13.375076293945312
    7. 'Single' → logprob: -14.125076293945312
    8. '_(' → logprob: -14.875076293945312
    9. '_SINGLE' → logprob: -15.250076293945312
    10. 'is' → logprob: -15.875076293945312

Token 372: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.9361264946837764e-07
    2. 'char' → logprob: -17.125
    3. '_chars' → logprob: -17.125
    4. 'Char' → logprob: -17.625
    5. '__' → logprob: -18.25
    6. '_CHAR' → logprob: -18.375
    7. '_character' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '
' → logprob: -18.875
    10. ' _' → logprob: -19.0

Token 373: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.1279553291387856e-05
    2. 'string' → logprob: -11.875011444091797
    3. '(s' → logprob: -12.500011444091797
    4. 's' → logprob: -15.875011444091797
    5. 'tring' → logprob: -15.875011444091797
    6. '_str' → logprob: -16.750011444091797
    7. '_(' → logprob: -17.000011444091797
    8. ' string' → logprob: -17.375011444091797
    9. 'String' → logprob: -17.625011444091797
    10. '_' → logprob: -18.125011444091797

Token 374: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -13.62500286102295
    4. 's' → logprob: -17.375001907348633
    5. '(
' → logprob: -18.875001907348633
    6. ')' → logprob: -20.250001907348633
    7. ' ' → logprob: -20.375001907348633
    8. '((' → logprob: -20.625001907348633
    9. ',' → logprob: -20.750001907348633
    10. ')(' → logprob: -21.625001907348633

Token 375: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00331852282397449
    2. '):
' → logprob: -5.7533183097839355
    3. ' ):' → logprob: -9.253318786621094
    4. ')' → logprob: -10.128318786621094
    5. ':' → logprob: -13.253318786621094
    6. '):
' → logprob: -13.503318786621094
    7. '   ' → logprob: -14.378318786621094
    8. '):

' → logprob: -15.003318786621094
    9. ' ):
' → logprob: -15.253318786621094
    10. '():' → logprob: -16.003318786621094

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002367443637922406
    2. 'print' → logprob: -6.1273674964904785
    3. '   ' → logprob: -9.00236701965332
    4. ' print' → logprob: -9.75236701965332
    5. 'return' → logprob: -14.75236701965332
    6. '```' → logprob: -14.75236701965332
    7. ' return' → logprob: -16.87736701965332
    8. '           ' → logprob: -17.00236701965332
    9. '	print' → logprob: -17.00236701965332
    10. 'result' → logprob: -17.00236701965332

Token 377: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0062924339435994625
    2. '   ' → logprob: -5.631292343139648
    3. ' print' → logprob: -6.006292343139648
    4. 'return' → logprob: -8.631292343139648
    5. '       ' → logprob: -10.256292343139648
    6. '
' → logprob: -12.006292343139648
    7. ' return' → logprob: -13.256292343139648
    8. '	print' → logprob: -13.756292343139648
    9. '```' → logprob: -13.881292343139648
    10. 'length' → logprob: -15.006292343139648

Token 378: '(calc' (ID: 190074)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0029780601616948843
    2. '((' → logprob: -6.3779778480529785
    3. '(' → logprob: -7.2529778480529785
    4. '(k' → logprob: -8.377978324890137
    5. '(m' → logprob: -8.877978324890137
    6. '(s' → logprob: -9.252978324890137
    7. 'len' → logprob: -10.502978324890137
    8. '(int' → logprob: -11.127978324890137
    9. ' (' → logprob: -11.377978324890137
    10. '(cnt' → logprob: -11.627978324890137

Token 379: '_special' (ID: 100315)
  Prédit: '_special'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_special' → logprob: -1.1472419600977446e-06
    2. 'special' → logprob: -13.750000953674316
    3. '(s' → logprob: -17.500001907348633
    4. '_SPECIAL' → logprob: -17.500001907348633
    5. '_single' → logprob: -18.625001907348633
    6. '_s' → logprob: -18.875001907348633
    7. 'pecial' → logprob: -19.375001907348633
    8. '(len' → logprob: -20.000001907348633
    9. 'len' → logprob: -20.500001907348633
    10. ' special' → logprob: -20.625001907348633

Token 380: '_case' (ID: 43667)
  Prédit: '_special'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_special' → logprob: -0.0010412635747343302
    2. '_case' → logprob: -6.876041412353516
    3. 'special' → logprob: -12.126041412353516
    4. '_s' → logprob: -14.001041412353516
    5. '_' → logprob: -14.501041412353516
    6. '```' → logprob: -14.501041412353516
    7. '(s' → logprob: -15.126041412353516
    8. 'case' → logprob: -15.626041412353516
    9. '_SPECIAL' → logprob: -15.876041412353516
    10. '_spec' → logprob: -16.001041412353516

Token 381: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.320199877838604e-07
    2. 'length' → logprob: -15.5
    3. '_l' → logprob: -16.625
    4. '(length' → logprob: -18.625
    5. '_len' → logprob: -19.0
    6. '_LENGTH' → logprob: -20.375
    7. 'ength' → logprob: -20.5
    8. '```' → logprob: -21.0
    9. '_le' → logprob: -21.125
    10. ' length' → logprob: -21.5

Token 382: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.875024795532227
    3. ' (' → logprob: -13.125024795532227
    4. 's' → logprob: -13.125024795532227
    5. ',' → logprob: -13.875024795532227
    6. ')' → logprob: -14.625024795532227
    7. ')(' → logprob: -14.625024795532227
    8. '(
' → logprob: -16.250024795532227
    9. '```' → logprob: -17.250024795532227
    10. '((' → logprob: -17.875024795532227

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005555360112339258
    2. ',k' → logprob: -7.625555515289307
    3. ' ,' → logprob: -9.625555992126465
    4. '   ' → logprob: -14.375555992126465
    5. ',
' → logprob: -14.750555992126465
    6. '	' → logprob: -15.875555992126465
    7. ',s' → logprob: -16.12555503845215
    8. ' ' → logprob: -16.25055503845215
    9. '),' → logprob: -16.87555503845215
    10. 'k' → logprob: -17.00055503845215

Token 384: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759450793266296
    2. 'k' → logprob: -0.8259450793266296
    3. '    ' → logprob: -12.325944900512695
    4. '	k' → logprob: -14.325944900512695
    5. '   ' → logprob: -14.950944900512695
    6. ')' → logprob: -16.075944900512695
    7. ' ' → logprob: -16.575944900512695
    8. '(k' → logprob: -17.075944900512695
    9. ',k' → logprob: -17.325944900512695
    10. ' ' → logprob: -17.700944900512695

Token 385: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.729408323764801
    2. '))
' → logprob: -0.729408323764801
    3. ')' → logprob: -3.3544082641601562
    4. ')
' → logprob: -7.354408264160156
    5. '))
' → logprob: -10.854408264160156
    6. '   ' → logprob: -11.729408264160156
    7. ' ))
' → logprob: -12.229408264160156
    8. ' ' → logprob: -13.229408264160156
    9. '))

' → logprob: -13.229408264160156
    10. ' ))' → logprob: -13.729408264160156

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06995832920074463
    2. '   ' → logprob: -2.694958209991455
    3. 'return' → logprob: -12.319958686828613
    4. '    
' → logprob: -12.444958686828613
    5. '
' → logprob: -12.694958686828613
    6. 'else' → logprob: -13.194958686828613
    7. '      ' → logprob: -13.819958686828613
    8. '	' → logprob: -13.944958686828613
    9. '<|end|>' → logprob: -13.944958686828613
    10. '  ' → logprob: -14.194958686828613

Token 387: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027248164638876915
    2. 'return' (adapté à ' return') → logprob: -3.7772481441497803
    3. '   ' → logprob: -5.527248382568359
    4. ' return' → logprob: -11.15224838256836
    5. '	return' → logprob: -13.40224838256836
    6. 'else' → logprob: -13.77724838256836
    7. '
' → logprob: -14.77724838256836
    8. ' ' → logprob: -16.27724838256836
    9. '     ' → logprob: -16.27724838256836
    10. '      ' → logprob: -16.52724838256836

Token 388: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052524786442518234
    2. 'cnt' → logprob: -3.3025248050689697
    3. '
' → logprob: -4.302524566650391
    4. '    
' → logprob: -7.302524566650391
    5. ' cnt' → logprob: -9.17752456665039
    6. 'count' → logprob: -11.17752456665039
    7. 'single' → logprob: -11.80252456665039
    8. 's' → logprob: -12.05252456665039
    9. '  
' → logprob: -12.05252456665039
    10. '	cnt' → logprob: -12.05252456665039

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040358565747737885
    2. 'cnt' → logprob: -3.290358543395996
    3. '
' → logprob: -6.290358543395996
    4. '    
' → logprob: -8.540358543395996
    5. ' cnt' → logprob: -8.790358543395996
    6. '```' → logprob: -10.415358543395996
    7. 'count' → logprob: -10.665358543395996
    8. '	cnt' → logprob: -11.415358543395996
    9. ' ' → logprob: -11.665358543395996
    10. 'single' → logprob: -11.915358543395996

Token 390: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.2524537742137909
    2. '   ' → logprob: -1.5024538040161133
    3. ' cnt' → logprob: -8.377453804016113
    4. '
' → logprob: -8.877453804016113
    5. 'single' → logprob: -9.502453804016113
    6. '    
' → logprob: -10.627453804016113
    7. '	cnt' → logprob: -11.502453804016113
    8. '```' → logprob: -11.627453804016113
    9. 'double' → logprob: -11.877453804016113
    10. 'count' → logprob: -12.127453804016113

Token 391: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.3856492842023727e-06
    2. 'single' → logprob: -13.875000953674316
    3. '_s' → logprob: -15.750000953674316
    4. '_' → logprob: -16.750001907348633
    5. '_double' → logprob: -16.875001907348633
    6. '_SINGLE' → logprob: -18.000001907348633
    7. ' =' → logprob: -18.250001907348633
    8. 'Single' → logprob: -18.875001907348633
    9. ' single' → logprob: -19.125001907348633
    10. '   ' → logprob: -20.000001907348633

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005239616730250418
    2. '=' → logprob: -7.625524044036865
    3. ' =' → logprob: -10.375523567199707
    4. ' ,' → logprob: -12.750523567199707
    5. ',c' → logprob: -13.875523567199707
    6. ',count' → logprob: -14.250523567199707
    7. '=count' → logprob: -16.750524520874023
    8. ',
' → logprob: -17.250524520874023
    9. 'cnt' → logprob: -17.250524520874023
    10. ',num' → logprob: -17.625524520874023

Token 393: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5759665966033936
    2. ' cnt' → logprob: -0.8259665966033936
    3. ' double' → logprob: -11.325966835021973
    4. '	cnt' → logprob: -12.075966835021973
    5. '(cnt' → logprob: -12.325966835021973
    6. 'double' → logprob: -12.700966835021973
    7. '_cnt' → logprob: -14.200966835021973
    8. '   ' → logprob: -14.700966835021973
    9. ' ' → logprob: -15.200966835021973
    10. '[cnt' → logprob: -15.325966835021973

Token 394: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.00018029935017693788
    2. 'double' → logprob: -8.6251802444458
    3. 'ouble' → logprob: -15.2501802444458
    4. '=' → logprob: -16.000181198120117
    5. '_single' → logprob: -16.250181198120117
    6. ',double' → logprob: -16.750181198120117
    7. '_' → logprob: -16.875181198120117
    8. '_DOUBLE' → logprob: -17.000181198120117
    9. ' double' → logprob: -17.125181198120117
    10. 'Double' → logprob: -17.875181198120117

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694500386714935
    2. '=' → logprob: -2.1269450187683105
    3. ',' → logprob: -11.001944541931152
    4. ' ' → logprob: -16.37694549560547
    5. '<|end|>' → logprob: -16.62694549560547
    6. '=get' → logprob: -16.75194549560547
    7. '=create' → logprob: -17.50194549560547
    8. ')' → logprob: -18.25194549560547
    9. ')=' → logprob: -18.25194549560547
    10. '=count' → logprob: -18.62694549560547

Token 396: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.10020678490400314
    2. ' get' → logprob: -2.3502068519592285
    3. '(get' → logprob: -16.47520637512207
    4. '_get' → logprob: -17.10020637512207
    5. '=get' → logprob: -17.60020637512207
    6. '	get' → logprob: -18.35020637512207
    7. '[get' → logprob: -19.85020637512207
    8. '.get' → logprob: -20.22520637512207
    9. ',get' → logprob: -20.97520637512207
    10. ' ' → logprob: -20.97520637512207

Token 397: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.00023488728038500994
    2. 'double' → logprob: -8.375234603881836
    3. '_single' → logprob: -12.500234603881836
    4. 's' → logprob: -15.125234603881836
    5. '```' → logprob: -17.375234603881836
    6. 'def' → logprob: -17.625234603881836
    7. ' double' → logprob: -17.625234603881836
    8. '__' → logprob: -17.750234603881836
    9. 'Double' → logprob: -17.875234603881836
    10. 'get' → logprob: -18.125234603881836

Token 398: '_and' (ID: 18645)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.1157035231590271
    2. '_and' → logprob: -2.490703582763672
    3. '_single' → logprob: -3.865703582763672
    4. '_s' → logprob: -5.740703582763672
    5. '_count' → logprob: -6.990703582763672
    6. 'and' → logprob: -8.115703582763672
    7. '_double' → logprob: -8.115703582763672
    8. '(s' → logprob: -8.615703582763672
    9. 'counts' → logprob: -8.615703582763672
    10. 's' → logprob: -8.990703582763672

Token 399: '_single' (ID: 46053)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.0006678790668956935
    2. '_single' → logprob: -7.375668048858643
    3. 'double' → logprob: -10.375667572021484
    4. 's' → logprob: -12.125667572021484
    5. '(single' → logprob: -13.250667572021484
    6. ' single' → logprob: -14.000667572021484
    7. 'counts' → logprob: -14.250667572021484
    8. 'count' → logprob: -15.000667572021484
    9. 'string' → logprob: -15.000667572021484
    10. '_counts' → logprob: -15.750667572021484

Token 400: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -6.718606891809031e-05
    2. 'counts' → logprob: -9.875066757202148
    3. 's' → logprob: -11.375066757202148
    4. '_count' → logprob: -13.125066757202148
    5. '(s' → logprob: -13.250066757202148
    6. ' counts' → logprob: -15.375066757202148
    7. 'count' → logprob: -16.62506675720215
    8. '
' → logprob: -17.12506675720215
    9. '```' → logprob: -17.25006675720215
    10. '_cnt' → logprob: -17.75006675720215

Token 401: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.465036105713807e-06
    2. 's' → logprob: -12.125007629394531
    3. '(' → logprob: -13.375007629394531
    4. ' (' → logprob: -14.875007629394531
    5. ',' → logprob: -17.25000762939453
    6. '(
' → logprob: -18.37500762939453
    7. '```' → logprob: -18.75000762939453
    8. '<|end|>' → logprob: -19.00000762939453
    9. '   ' → logprob: -19.12500762939453
    10. ' ' → logprob: -19.25000762939453

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038090262562036514
    2. ')
' → logprob: -3.288090229034424
    3. ',' → logprob: -10.038090705871582
    4. '   ' → logprob: -13.038090705871582
    5. ')
' → logprob: -13.038090705871582
    6. ' )' → logprob: -15.288090705871582
    7. ')

' → logprob: -15.538090705871582
    8. ' ' → logprob: -16.038089752197266
    9. ' )
' → logprob: -16.288089752197266
    10. '),' → logprob: -16.538089752197266

Token 403: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47548404335975647
    2. '   ' → logprob: -0.9754840135574341
    3. '
' → logprob: -7.7254838943481445
    4. ' print' → logprob: -8.225483894348145
    5. '```' → logprob: -8.225483894348145
    6. 'answer' → logprob: -8.475483894348145
    7. 'result' → logprob: -8.475483894348145
    8. 'ans' → logprob: -12.350483894348145
    9. '``' → logprob: -13.225483894348145
    10. 'res' → logprob: -13.600483894348145

Token 404: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07900016754865646
    2. 'ans' → logprob: -3.079000234603882
    3. 'answer' → logprob: -3.579000234603882
    4. '   ' → logprob: -6.703999996185303
    5. 'result' → logprob: -7.453999996185303
    6. 'res' → logprob: -8.454000473022461
    7. ' print' → logprob: -10.829000473022461
    8. ' ans' → logprob: -12.204000473022461
    9. 'final' → logprob: -12.704000473022461
    10. '
' → logprob: -13.079000473022461

Token 405: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -10.000059127807617
    3. 'compute' → logprob: -11.250059127807617
    4. '((' → logprob: -14.625059127807617
    5. '(process' → logprob: -14.875059127807617
    6. '(
' → logprob: -16.000059127807617
    7. ' (' → logprob: -16.500059127807617
    8. '(calc' → logprob: -16.875059127807617
    9. '(comp' → logprob: -17.250059127807617
    10. ' compute' → logprob: -17.625059127807617

Token 406: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -1.723973582556937e-05
    2. 'put' → logprob: -11.000017166137695
    3. 'ute' → logprob: -14.875017166137695
    4. 'pte' → logprob: -17.375017166137695
    5. 'p' → logprob: -17.625017166137695
    6. '(' → logprob: -17.875017166137695
    7. 'pt' → logprob: -18.000017166137695
    8. '
' → logprob: -18.500017166137695
    9. '```' → logprob: -18.750017166137695
    10. 'compute' → logprob: -19.375017166137695

Token 407: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -1.1875571544806007e-05
    2. 'final' → logprob: -11.375011444091797
    3. '_finalize' → logprob: -15.750011444091797
    4. 'Final' → logprob: -16.125011444091797
    5. '_fin' → logprob: -16.750011444091797
    6. '_FINAL' → logprob: -17.500011444091797
    7. ' final' → logprob: -17.625011444091797
    8. '```' → logprob: -18.000011444091797
    9. '_f' → logprob: -18.375011444091797
    10. '_Final' → logprob: -18.750011444091797

Token 408: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.01822017692029476
    2. '_final' → logprob: -4.018219947814941
    3. 'final' → logprob: -10.268219947814941
    4. '_ans' → logprob: -10.893219947814941
    5. 'answer' → logprob: -11.143219947814941
    6. '_' → logprob: -13.893219947814941
    7. ' _' → logprob: -14.518219947814941
    8. '
' → logprob: -15.268219947814941
    9. '_answers' → logprob: -15.768219947814941
    10. '_print' → logprob: -16.018220901489258

Token 409: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -9.567575034452602e-05
    2. '(' → logprob: -9.37509536743164
    3. ' (' → logprob: -11.62509536743164
    4. '[cnt' → logprob: -14.00009536743164
    5. ')' → logprob: -14.62509536743164
    6. '(
' → logprob: -15.37509536743164
    7. '(count' → logprob: -15.62509536743164
    8. '(cont' → logprob: -16.25009536743164
    9. '(counter' → logprob: -16.75009536743164
    10. ')(' → logprob: -17.12509536743164

Token 410: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.014187601394951344
    2. '_double' → logprob: -4.264187812805176
    3. ',' → logprob: -11.389187812805176
    4. 'ingle' → logprob: -12.014187812805176
    5. '_SINGLE' → logprob: -13.139187812805176
    6. '_,' → logprob: -13.264187812805176
    7. '_s' → logprob: -14.139187812805176
    8. ',_' → logprob: -14.264187812805176
    9. '   ' → logprob: -14.389187812805176
    10. '_' → logprob: -14.889187812805176

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014919086243025959
    2. ',c' → logprob: -8.87514877319336
    3. ',
' → logprob: -12.25014877319336
    4. ' ,' → logprob: -12.37514877319336
    5. ',\
' → logprob: -16.25014877319336
    6. ',count' → logprob: -16.87514877319336
    7. ',

' → logprob: -17.37514877319336
    8. '(cnt' → logprob: -17.87514877319336
    9. '[cnt' → logprob: -18.00014877319336
    10. '‌,' → logprob: -18.37514877319336

Token 412: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00033581978641450405
    2. ' cnt' → logprob: -8.000335693359375
    3. '	cnt' → logprob: -15.750335693359375
    4. '   ' → logprob: -16.500335693359375
    5. '(cnt' → logprob: -16.750335693359375
    6. '[cnt' → logprob: -18.500335693359375
    7. '    ' → logprob: -18.750335693359375
    8. 'count' → logprob: -19.250335693359375
    9. '  ' → logprob: -19.625335693359375
    10. '      ' → logprob: -20.250335693359375

Token 413: '_double' (ID: 59806)
  Prédit: '_double'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_double' → logprob: -0.023408757522702217
    2. 'ouble' → logprob: -3.8984086513519287
    3. 'double' → logprob: -6.023408889770508
    4. 'le' → logprob: -8.523408889770508
    5. 'uble' → logprob: -9.148408889770508
    6. 'ble' → logprob: -9.148408889770508
    7. 'ple' → logprob: -12.273408889770508
    8. 'oble' → logprob: -12.398408889770508
    9. '_single' → logprob: -13.148408889770508
    10. '_DOUBLE' → logprob: -13.273408889770508

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004390134708955884
    2. ',k' → logprob: -7.750439167022705
    3. ' ,' → logprob: -11.750438690185547
    4. ',
' → logprob: -14.875438690185547
    5. '   ' → logprob: -18.625438690185547
    6. '
' → logprob: -18.750438690185547
    7. 'k' → logprob: -19.375438690185547
    8. '```' → logprob: -20.375438690185547
    9. ')' → logprob: -20.750438690185547
    10. '	' → logprob: -20.750438690185547

Token 415: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16022545099258423
    2. 'k' → logprob: -1.9102253913879395
    3. ')' → logprob: -13.910225868225098
    4. '(k' → logprob: -15.035225868225098
    5. '	k' → logprob: -16.41022491455078
    6. ',k' → logprob: -17.03522491455078
    7. '```' → logprob: -17.66022491455078
    8. ',' → logprob: -17.91022491455078
    9. ' ' → logprob: -18.66022491455078
    10. '_k' → logprob: -18.66022491455078

Token 416: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0788913294672966
    2. ')' → logprob: -2.5788912773132324
    3. '))
' → logprob: -14.32889175415039
    4. ')
' → logprob: -14.70389175415039
    5. ')))' → logprob: -14.95389175415039
    6. ' ))' → logprob: -15.70389175415039
    7. ' )' → logprob: -16.45389175415039
    8. '),' → logprob: -17.45389175415039
    9. '   ' → logprob: -18.57889175415039
    10. '})' → logprob: -18.70389175415039

Token 417: 'process' (ID: 9139)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006930146832019091
    2. 'process' → logprob: -5.006930351257324
    3. '```' → logprob: -9.381930351257324
    4. '<|end|>' → logprob: -9.756930351257324
    5. '#' → logprob: -10.006930351257324
    6. ' if' → logprob: -11.631930351257324
    7. '
' → logprob: -11.631930351257324
    8. 'print' → logprob: -12.881930351257324
    9. '(process' → logprob: -13.631930351257324
    10. '\n' → logprob: -13.756930351257324

Token 418: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 416
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 195
Tokens correctement prédits (top 10): 364
Précision stricte (1ère position): 43.99%
Précision adaptée (1ère position): 46.88%
Précision (top 10): 87.50%
================================================================================
