================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

n = int(input())
words = [input() for _ in range(n)]

# Vérification de l'unicité via Counter
if max(Counter(words).values(), default=0) > 1:
    print("No")
elif any(a[-1] != b[0] for a, b in zip(words, words[1:])):
    print("No")
else:
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '\n' → logprob: -14.000059127807617
    9. '```' → logprob: -14.000059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001039479160681367
    2. 'a' → logprob: -7.876039505004883
    3. '.' → logprob: -8.376039505004883
    4. '\(' → logprob: -9.251039505004883
    5. '(
' → logprob: -9.376039505004883
    6. 'newline' → logprob: -9.876039505004883
    7. '\' → logprob: -10.001039505004883
    8. '\n' → logprob: -10.001039505004883
    9. ',' → logprob: -10.876039505004883
    10. '```' → logprob: -11.751039505004883

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36824777722358704
    2. ' ' → logprob: -1.7432477474212646
    3. '=' → logprob: -2.1182477474212646
    4. '_' → logprob: -5.618247985839844
    5. 'u' → logprob: -5.743247985839844
    6. ',' → logprob: -6.118247985839844
    7. 'a' → logprob: -6.868247985839844
    8. '  ' → logprob: -7.118247985839844
    9. '.' → logprob: -7.618247985839844
    10. 'e' → logprob: -8.243247985839844

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12609133124351501
    2. ' int' → logprob: -2.251091241836548
    3. 'int' → logprob: -5.001091480255127
    4. '10' → logprob: -5.251091480255127
    5. '5' → logprob: -7.751091480255127
    6. '0' → logprob: -7.751091480255127
    7. '1' → logprob: -8.876091003417969
    8. ' input' → logprob: -9.876091003417969
    9. '20' → logprob: -10.126091003417969
    10. '4' → logprob: -11.001091003417969

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.106736039626412e-05
    2. ' (' → logprob: -11.500031471252441
    3. '(n' → logprob: -11.750031471252441
    4. '('' → logprob: -12.000031471252441
    5. '(input' → logprob: -13.375031471252441
    6. '(`' → logprob: -13.500031471252441
    7. '()' → logprob: -14.000031471252441
    8. '(
' → logprob: -14.625031471252441
    9. '("("' → logprob: -15.125031471252441
    10. '(**' → logprob: -15.250031471252441

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13614562153816223
    2. '()' → logprob: -2.63614559173584
    3. '(' → logprob: -3.38614559173584
    4. '())' → logprob: -3.88614559173584
    5. '))' → logprob: -7.01114559173584
    6. '')' → logprob: -9.13614559173584
    7. '('' → logprob: -9.51114559173584
    8. '(
' → logprob: -9.76114559173584
    9. '`)' → logprob: -9.76114559173584
    10. '")' → logprob: -10.51114559173584

Token 10: 'words' (ID: 10020)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.163864254951477
    2. 's' → logprob: -1.663864254951477
    3. 'a' → logprob: -2.1638641357421875
    4. 'numbers' → logprob: -2.2888641357421875
    5. 'arr' → logprob: -2.4138641357421875
    6. 'counts' → logprob: -2.7888641357421875
    7. 'words' → logprob: -3.6638641357421875
    8. 'array' → logprob: -3.7888641357421875
    9. 'items' → logprob: -4.1638641357421875
    10. ')' → logprob: -4.6638641357421875

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6148426532745361
    2. '=' → logprob: -1.6148426532745361
    3. '.' → logprob: -2.364842653274536
    4. '_counter' → logprob: -2.614842653274536
    5. ' =' → logprob: -3.364842653274536
    6. ')' → logprob: -3.489842653274536
    7. '_counts' → logprob: -4.364842414855957
    8. '_count' → logprob: -5.239842414855957
    9. '_' → logprob: -5.864842414855957
    10. '[]' → logprob: -6.239842414855957

Token 12: ' [' (ID: 723)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.8865935206413269
    2. ' [' → logprob: -1.2615935802459717
    3. ' []' → logprob: -1.5115935802459717
    4. '[' → logprob: -3.2615935802459717
    5. '[]' → logprob: -3.7615935802459717
    6. 'Counter' → logprob: -4.386593341827393
    7. ' ' → logprob: -5.511593341827393
    8. ' input' → logprob: -5.511593341827393
    9. 'input' → logprob: -7.261593341827393
    10. '[input' → logprob: -7.511593341827393

Token 13: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004336493439041078
    2. ' input' → logprob: -7.750433444976807
    3. '(input' → logprob: -13.250433921813965
    4. '   ' → logprob: -13.875433921813965
    5. ')' → logprob: -16.75043296813965
    6. '<input' → logprob: -17.00043296813965
    7. '=input' → logprob: -17.00043296813965
    8. '```' → logprob: -17.87543296813965
    9. ' ' → logprob: -18.00043296813965
    10. ',input' → logprob: -18.12543296813965

Token 14: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2075788378715515
    2. '()]' → logprob: -1.9575788974761963
    3. '())' → logprob: -3.0825788974761963
    4. '().' → logprob: -8.707578659057617
    5. '(' → logprob: -9.207578659057617
    6. '("' → logprob: -10.582578659057617
    7. '()
' → logprob: -10.582578659057617
    8. '()`' → logprob: -10.707578659057617
    9. '('' → logprob: -11.332578659057617
    10. '()+' → logprob: -11.582578659057617

Token 15: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0047272611409425735
    2. '()' → logprob: -5.754727363586426
    3. 'for' → logprob: -7.379727363586426
    4. ' for' → logprob: -8.004727363586426
    5. ')]' → logprob: -8.504727363586426
    6. '())' → logprob: -9.129727363586426
    7. '')' → logprob: -9.504727363586426
    8. ']' → logprob: -9.754727363586426
    9. '")' → logprob: -9.879727363586426
    10. ' )' → logprob: -10.379727363586426

Token 16: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14616718888282776
    2. ' range' → logprob: -2.646167278289795
    3. '_' → logprob: -2.771167278289795
    4. ' ' → logprob: -6.271167278289795
    5. '_range' → logprob: -8.021166801452637
    6. 'range' → logprob: -8.646166801452637
    7. ' i' → logprob: -10.021166801452637
    8. ' in' → logprob: -11.271166801452637
    9. ' ' → logprob: -12.271166801452637
    10. ' xrange' → logprob: -12.271166801452637

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004943408537656069
    2. 'in' → logprob: -5.629943370819092
    3. 'range' → logprob: -7.004943370819092
    4. ' ' → logprob: -8.25494384765625
    5. ' range' → logprob: -8.87994384765625
    6. 'n' → logprob: -10.62994384765625
    7. '  ' → logprob: -13.25494384765625
    8. '_' → logprob: -13.62994384765625
    9. 'i' → logprob: -13.87994384765625
    10. '<|end|>' → logprob: -13.87994384765625

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246292024850845
    2. ' range' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.273246765136719
    4. '	range' → logprob: -15.773246765136719
    5. '```' → logprob: -15.773246765136719
    6. '   ' → logprob: -16.02324676513672
    7. '  ' → logprob: -16.39824676513672
    8. '(range' → logprob: -17.14824676513672
    9. 'ran' → logprob: -17.64824676513672
    10. 'rang' → logprob: -18.14824676513672

Token 19: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043949027894996107
    2. '(' → logprob: -7.750439643859863
    3. 'n' → logprob: -11.750439643859863
    4. ' n' → logprob: -14.125439643859863
    5. ' (' → logprob: -16.375438690185547
    6. '(len' → logprob: -17.500438690185547
    7. ')n' → logprob: -17.750438690185547
    8. ')' → logprob: -18.875438690185547
    9. '(
' → logprob: -19.250438690185547
    10. ' ' → logprob: -20.000438690185547

Token 20: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004387750814203173
    2. ']' → logprob: -8.125438690185547
    3. ')' → logprob: -9.000438690185547
    4. '])]' → logprob: -11.375438690185547
    5. ')])' → logprob: -12.625438690185547
    6. '')]' → logprob: -13.125438690185547
    7. '])' → logprob: -13.875438690185547
    8. ')]
' → logprob: -14.250438690185547
    9. ' )' → logprob: -15.250438690185547
    10. '))' → logprob: -15.750438690185547

Token 21: '#' (ID: 2)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.1277439296245575
    2. 'counts' → logprob: -2.37774395942688
    3. 'count' → logprob: -3.87774395942688
    4. 'word' → logprob: -5.377743721008301
    5. 'c' → logprob: -6.502743721008301
    6. 'cnt' → logprob: -8.6277437210083
    7. 'result' → logprob: -9.2527437210083
    8. 'freq' → logprob: -10.3777437210083
    9. 'frequency' → logprob: -10.8777437210083
    10. ' counter' → logprob: -11.8777437210083

Token 22: ' Vér' (ID: 159169)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.99366295337677
    2. 'counter' → logprob: -0.99366295337677
    3. 'counts' → logprob: -2.1186628341674805
    4. ' counter' → logprob: -2.7436628341674805
    5. ' word' → logprob: -3.8686628341674805
    6. 'cnt' → logprob: -4.1186628341674805
    7. ' counts' → logprob: -4.3686628341674805
    8. ' count' → logprob: -4.9936628341674805
    9. 'word' → logprob: -5.1186628341674805
    10. 'c' → logprob: -5.1186628341674805

Token 23: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.44148361682891846
    2. 'ifie' → logprob: -1.8164836168289185
    3. 'ifi' → logprob: -1.8164836168289185
    4. 'if' → logprob: -4.191483497619629
    5. 'ifier' → logprob: -4.566483497619629
    6. 'i' → logprob: -5.816483497619629
    7. 'al' → logprob: -6.691483497619629
    8. 'ifiez' → logprob: -7.441483497619629
    9. 'ifica' → logprob: -7.816483497619629
    10. '   ' → logprob: -9.191483497619629

Token 24: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1195475235581398
    2. 's' → logprob: -3.1195476055145264
    3. 'c' → logprob: -3.4945476055145264
    4. '_' → logprob: -4.744547367095947
    5. 'counts' → logprob: -4.869547367095947
    6. 'counter' → logprob: -5.494547367095947
    7. '(' → logprob: -5.744547367095947
    8. ':' → logprob: -6.119547367095947
    9. ')' → logprob: -6.244547367095947
    10. 'count' → logprob: -6.494547367095947

Token 25: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0999760851264
    2. ' l' → logprob: -2.474976062774658
    3. ' ' → logprob: -5.349976062774658
    4. 'l' → logprob: -5.974976062774658
    5. 'la' → logprob: -6.099976062774658
    6. ' len' → logprob: -7.224976062774658
    7. 'len' → logprob: -8.474976539611816
    8. 's' → logprob: -9.349976539611816
    9. 'a' → logprob: -10.099976539611816
    10. ' the' → logprob: -10.349976539611816

Token 26: ''un' (ID: 9788)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6813533902168274
    2. 'e' → logprob: -0.8063533902168274
    3. ''' → logprob: -3.1813533306121826
    4. ''é' → logprob: -7.056353569030762
    5. 'es' → logprob: -7.056353569030762
    6. ''espace' → logprob: -7.181353569030762
    7. ''ensemble' → logprob: -7.306353569030762
    8. ' e' → logprob: -8.056353569030762
    9. ''a' → logprob: -8.056353569030762
    10. ''ex' → logprob: -8.056353569030762

Token 27: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.013204706832766533
    2. 'icit' → logprob: -4.888204574584961
    3. 'ique' → logprob: -6.138204574584961
    4. 'iqu' → logprob: -6.763204574584961
    5. 'i' → logprob: -7.013204574584961
    6. 'iq' → logprob: -7.763204574584961
    7. 'ité' → logprob: -8.138204574584961
    8. 'icity' → logprob: -9.388204574584961
    9. 'ïc' → logprob: -9.638204574584961
    10. '\' → logprob: -9.763204574584961

Token 28: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.0005594660760834813
    2. 'it' → logprob: -8.50055980682373
    3. 'é' → logprob: -8.87555980682373
    4. 'i' → logprob: -9.75055980682373
    5. 'ié' → logprob: -9.75055980682373
    6. 'itié' → logprob: -10.12555980682373
    7. 'alité' → logprob: -10.50055980682373
    8. ' it' → logprob: -11.37555980682373
    9. '#' → logprob: -12.12555980682373
    10. 'ités' → logprob: -13.12555980682373

Token 29: ' via' (ID: 4493)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.856277585029602
    2. '_' → logprob: -1.231277585029602
    3. 's' → logprob: -1.606277585029602
    4. ':' → logprob: -3.2312774658203125
    5. 'c' → logprob: -5.3562774658203125
    6. 'unique' → logprob: -5.4812774658203125
    7. 'counts' → logprob: -5.4812774658203125
    8. ')' → logprob: -5.8562774658203125
    9. 'count' → logprob: -6.3562774658203125
    10. 'u' → logprob: -6.3562774658203125

Token 30: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.6961570382118225
    2. ' Counter' → logprob: -0.9461570382118225
    3. ' set' → logprob: -3.1961569786071777
    4. ' len' → logprob: -3.3211569786071777
    5. 'len' → logprob: -3.8211569786071777
    6. 'set' → logprob: -5.321156978607178
    7. ' la' → logprob: -5.696156978607178
    8. ' counter' → logprob: -6.446156978607178
    9. ''' → logprob: -7.071156978607178
    10. ' a' → logprob: -7.446156978607178

Token 31: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.827508807182312
    2. 'counter' → logprob: -1.077508807182312
    3. 'counts' → logprob: -2.2025089263916016
    4. 'count' → logprob: -3.0775089263916016
    5. '
' → logprob: -4.077508926391602
    6. 'word' → logprob: -4.202508926391602
    7. 's' → logprob: -4.577508926391602
    8. 'unique' → logprob: -5.577508926391602
    9. ')' → logprob: -5.577508926391602
    10. 'result' → logprob: -5.827508926391602

Token 32: 'if' (ID: 366)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.2777949273586273
    2. 'counts' → logprob: -2.02779483795166
    3. 'count' → logprob: -2.90279483795166
    4. 'c' → logprob: -3.27779483795166
    5. 'word' → logprob: -4.27779483795166
    6. 'unique' → logprob: -6.65279483795166
    7. 'frequency' → logprob: -6.65279483795166
    8. ' counter' → logprob: -7.52779483795166
    9. 'result' → logprob: -8.27779483795166
    10. '
' → logprob: -8.40279483795166

Token 33: ' max' (ID: 2999)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.20768818259239197
    2. ' len' → logprob: -1.7076882123947144
    3. 'Counter' → logprob: -5.707688331604004
    4. ' ' → logprob: -6.582688331604004
    5. ' not' → logprob: -7.332688331604004
    6. 'len' → logprob: -7.457688331604004
    7. ' ' → logprob: -8.957688331604004
    8. ' all' → logprob: -10.332688331604004
    9. ' words' → logprob: -10.457688331604004
    10. ' counter' → logprob: -10.582688331604004

Token 34: '(C' (ID: 5559)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3144293427467346
    2. '(C' → logprob: -1.3144292831420898
    3. '(words' → logprob: -6.93942928314209
    4. '(word' → logprob: -9.81442928314209
    5. '(counter' → logprob: -9.81442928314209
    6. '(
' → logprob: -10.81442928314209
    7. '(count' → logprob: -11.31442928314209
    8. ' (' → logprob: -11.43942928314209
    9. '(s' → logprob: -11.68942928314209
    10. '((' → logprob: -11.81442928314209

Token 35: 'ounter' (ID: 6265)
  Prédit: 'ounter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.000253591249929741
    2. '(words' → logprob: -9.500253677368164
    3. 'words' → logprob: -9.750253677368164
    4. 'ount' → logprob: -10.250253677368164
    5. 'onter' → logprob: -10.500253677368164
    6. 'unter' → logprob: -11.125253677368164
    7. '(C' → logprob: -11.750253677368164
    8. 'outer' → logprob: -12.125253677368164
    9. 'counter' → logprob: -12.125253677368164
    10. 'oun' → logprob: -12.500253677368164

Token 36: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -4.842555426876061e-06
    2. 'words' → logprob: -13.000004768371582
    3. '(' → logprob: -13.625004768371582
    4. ' words' → logprob: -14.000004768371582
    5. ' (' → logprob: -15.125004768371582
    6. ')' → logprob: -16.0000057220459
    7. '(word' → logprob: -17.3750057220459
    8. ')(' → logprob: -17.6250057220459
    9. '.words' → logprob: -18.6250057220459
    10. '(tokens' → logprob: -19.0000057220459

Token 37: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.07005614787340164
    2. '.values' → logprob: -2.695056200027466
    3. 'values' → logprob: -9.695055961608887
    4. ' ).' → logprob: -10.445055961608887
    5. ')' → logprob: -11.695055961608887
    6. '.' → logprob: -12.320055961608887
    7. '```' → logprob: -12.445055961608887
    8. '`).' → logprob: -13.070055961608887
    9. ' values' → logprob: -13.445055961608887
    10. '").' → logprob: -13.445055961608887

Token 38: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -6.0033853515051305e-05
    2. '.values' → logprob: -10.125060081481934
    3. ' values' → logprob: -10.875060081481934
    4. '	values' → logprob: -14.750060081481934
    5. 'items' → logprob: -15.000060081481934
    6. '```' → logprob: -16.125059127807617
    7. 'valu' → logprob: -16.375059127807617
    8. 'value' → logprob: -17.375059127807617
    9. 'val' → logprob: -17.500059127807617
    10. 'v' → logprob: -18.000059127807617

Token 39: '(),' (ID: 2547)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26225581765174866
    2. '()' → logprob: -1.5122557878494263
    3. ')' → logprob: -4.637255668640137
    4. ' ())' → logprob: -7.637255668640137
    5. '()==' → logprob: -9.762255668640137
    6. ' ()' → logprob: -11.137255668640137
    7. '()>' → logprob: -11.387255668640137
    8. ' )' → logprob: -11.637255668640137
    9. '`()' → logprob: -12.387255668640137
    10. '(' → logprob: -12.762255668640137

Token 40: ' default' (ID: 2787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031604915857315063
    2. ')==' → logprob: -6.75316047668457
    3. ')>' → logprob: -7.00316047668457
    4. ' )' → logprob: -7.00316047668457
    5. '1' → logprob: -9.50316047668457
    6. '```' → logprob: -11.00316047668457
    7. '()' → logprob: -11.12816047668457
    8. '>' → logprob: -11.25316047668457
    9. ' ' → logprob: -11.50316047668457
    10. 'default' → logprob: -12.00316047668457

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4617256056226324e-05
    2. '=None' → logprob: -11.625014305114746
    3. '0' → logprob: -13.125014305114746
    4. '=-' → logprob: -13.500014305114746
    5. ')' → logprob: -13.875014305114746
    6. ' =' → logprob: -14.625014305114746
    7. '=len' → logprob: -15.625014305114746
    8. '=int' → logprob: -15.875014305114746
    9. '=(' → logprob: -16.125015258789062
    10. '=

' → logprob: -16.500015258789062

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017708084487821907
    2. ' ' → logprob: -9.000177383422852
    3. '1' → logprob: -10.500177383422852
    4. 'None' → logprob: -10.625177383422852
    5. ')' → logprob: -14.250177383422852
    6. ' None' → logprob: -15.000177383422852
    7. '   ' → logprob: -15.625177383422852
    8. '```' → logprob: -16.18767738342285
    9. '_' → logprob: -16.68767738342285
    10. '-' → logprob: -16.75017738342285

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09001606702804565
    2. ' )' → logprob: -2.4650161266326904
    3. '>' → logprob: -7.840015888214111
    4. ')>' → logprob: -7.965015888214111
    5. ' >' → logprob: -8.21501636505127
    6. ')==' → logprob: -10.84001636505127
    7. '==' → logprob: -11.09001636505127
    8. '>)' → logprob: -11.34001636505127
    9. ' ==' → logprob: -12.21501636505127
    10. ' ' → logprob: -12.59001636505127

Token 44: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.45834165811538696
    2. '>' → logprob: -1.0833415985107422
    3. '==' → logprob: -4.583341598510742
    4. ' ==' → logprob: -4.583341598510742
    5. ' <=' → logprob: -4.958341598510742
    6. '<=' → logprob: -6.583341598510742
    7. ' <' → logprob: -8.958341598510742
    8. '<' → logprob: -9.458341598510742
    9. ' ' → logprob: -9.458341598510742
    10. ' ' → logprob: -10.833341598510742

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '2' → logprob: -16.188671112060547
    4. '0' → logprob: -16.813671112060547
    5. ' ' → logprob: -16.876171112060547
    6. '```' → logprob: -17.688671112060547
    7. 'n' → logprob: -17.813671112060547
    8. '' → logprob: -18.251171112060547
    9. '   ' → logprob: -18.313671112060547
    10. '۱' → logprob: -18.376171112060547

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -17.125001907348633
    4. '0' → logprob: -17.812501907348633
    5. '```' → logprob: -18.312501907348633
    6. '۱' → logprob: -18.625001907348633
    7. '' → logprob: -18.687501907348633
    8. '१' → logprob: -19.500001907348633
    9. '１' → logprob: -19.625001907348633
    10. '১' → logprob: -19.625001907348633

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008058178937062621
    2. ' :' → logprob: -7.125805854797363
    3. ':**' → logprob: -14.250805854797363
    4. ':
' → logprob: -14.375805854797363
    5. '):' → logprob: -16.500804901123047
    6. ':return' → logprob: -17.375804901123047
    7. '：' → logprob: -18.375804901123047
    8. '>:' → logprob: -19.250804901123047
    9. ' :
' → logprob: -19.250804901123047
    10. ':]' → logprob: -19.250804901123047

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4678890109062195
    2. ' print' → logprob: -1.9678890705108643
    3. ' :
' → logprob: -2.9678890705108643
    4. 'print' → logprob: -3.0928890705108643
    5. '   ' → logprob: -3.2178890705108643
    6. ' :' → logprob: -3.2178890705108643
    7. ':
' → logprob: -3.4678890705108643
    8. ' 
' → logprob: -4.342888832092285
    9. '\n' → logprob: -4.842888832092285
    10. '    ' → logprob: -6.217888832092285

Token 49: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.282803475856781
    2. 'print' (adapté à ' print') → logprob: -1.4078035354614258
    3. '   ' → logprob: -6.782803535461426
    4. ' pass' → logprob: -8.157803535461426
    5. 'pass' → logprob: -9.907803535461426
    6. ' 
' → logprob: -10.032803535461426
    7. '    ' → logprob: -10.282803535461426
    8. ' prin' → logprob: -10.782803535461426
    9. 'pr' → logprob: -11.032803535461426
    10. '    
' → logprob: -11.282803535461426

Token 50: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6024510860443115
    2. '("' → logprob: -0.9774510860443115
    3. '("("' → logprob: -3.1024510860443115
    4. '('' → logprob: -3.4774510860443115
    5. '("")' → logprob: -8.85245132446289
    6. '("(' → logprob: -9.10245132446289
    7. '"' → logprob: -10.10245132446289
    8. '(True' → logprob: -10.22745132446289
    9. '()' → logprob: -10.60245132446289
    10. '(False' → logprob: -11.35245132446289

Token 51: 'No' (ID: 3160)
  Prédit: 'Duplicate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Duplicate' → logprob: -0.2672712206840515
    2. 'NO' → logprob: -2.5172712802886963
    3. 'YES' → logprob: -3.3922712802886963
    4. 'Duplicates' → logprob: -3.5172712802886963
    5. 'Duplic' → logprob: -3.7672712802886963
    6. 'Erreur' → logprob: -5.017271041870117
    7. 'Con' → logprob: -5.142271041870117
    8. 'Non' → logprob: -5.267271041870117
    9. 'Dup' → logprob: -5.267271041870117
    10. 'Error' → logprob: -5.392271041870117

Token 52: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08924587815999985
    2. ' ")' → logprob: -2.8392457962036133
    3. 'e' → logprob: -4.214245796203613
    4. 't' → logprob: -5.214245796203613
    5. 'pe' → logprob: -6.089245796203613
    6. 'ne' → logprob: -6.339245796203613
    7. ')' → logprob: -8.089245796203613
    8. 's' → logprob: -8.089245796203613
    9. ' )' → logprob: -8.089245796203613
    10. ' unique' → logprob: -8.589245796203613

Token 53: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00034118397161364555
    2. ' else' → logprob: -8.000341415405273
    3. 'e' → logprob: -12.875341415405273
    4. '```' → logprob: -14.000341415405273
    5. ')' → logprob: -14.500341415405273
    6. '<|end|>' → logprob: -14.625341415405273
    7. 'elif' → logprob: -15.625341415405273
    8. '
' → logprob: -15.750341415405273
    9. 'el' → logprob: -15.750341415405273
    10. 'elses' → logprob: -15.875341415405273

Token 54: ' any' (ID: 1062)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11487695574760437
    2. ' n' → logprob: -2.6148769855499268
    3. 'len' → logprob: -4.114876747131348
    4. ' max' → logprob: -4.614876747131348
    5. ' all' → logprob: -4.864876747131348
    6. ' ' → logprob: -7.489876747131348
    7. 'all' → logprob: -8.364876747131348
    8. 'n' → logprob: -8.489876747131348
    9. 'max' → logprob: -8.739876747131348
    10. ' not' → logprob: -9.864876747131348

Token 55: '(a' (ID: 6271)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.4727839529514313
    2. '(len' → logprob: -1.2227839231491089
    3. '(' → logprob: -2.9727840423583984
    4. '(words' → logprob: -4.097784042358398
    5. '(lambda' → logprob: -4.972784042358398
    6. '(w' → logprob: -5.972784042358398
    7. '('' → logprob: -5.972784042358398
    8. '("' → logprob: -6.847784042358398
    9. '('_' → logprob: -8.347784042358398
    10. '(not' → logprob: -8.597784042358398

Token 56: '[-' (ID: 17503)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4963386058807373
    2. '==' → logprob: -1.2463386058807373
    3. ' in' → logprob: -2.6213386058807373
    4. ' !=' → logprob: -4.496338844299316
    5. '[i' → logprob: -4.996338844299316
    6. ' >' → logprob: -5.246338844299316
    7. '!=' → logprob: -6.371338844299316
    8. '>' → logprob: -6.746338844299316
    9. ' <' → logprob: -6.871338844299316
    10. ' ' → logprob: -7.121338844299316

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010554999113082886
    2. '2' → logprob: -4.885554790496826
    3. '3' → logprob: -6.760554790496826
    4. 'len' → logprob: -8.010555267333984
    5. ' ' → logprob: -8.260555267333984
    6. 'l' → logprob: -9.010555267333984
    7. 'a' → logprob: -9.198055267333984
    8. '-' → logprob: -9.698055267333984
    9. 's' → logprob: -9.823055267333984
    10. 'n' → logprob: -9.885555267333984

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015187136828899384
    2. ']!=' → logprob: -4.7651872634887695
    3. ']==' → logprob: -5.2651872634887695
    4. 'for' → logprob: -8.26518726348877
    5. ' ]' → logprob: -8.39018726348877
    6. ':]' → logprob: -8.76518726348877
    7. '```' → logprob: -9.01518726348877
    8. '1' → logprob: -9.14018726348877
    9. '()]' → logprob: -9.39018726348877
    10. '].' → logprob: -9.76518726348877

Token 59: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6883682608604431
    2. ' !=' → logprob: -1.438368320465088
    3. '==' → logprob: -1.688368320465088
    4. '!=' → logprob: -3.063368320465088
    5. ' in' → logprob: -4.438368320465088
    6. ' not' → logprob: -4.688368320465088
    7. ' ' → logprob: -5.563368320465088
    8. ' for' → logprob: -6.063368320465088
    9. 'for' → logprob: -7.438368320465088
    10. '[' → logprob: -8.56336784362793

Token 60: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17713762819766998
    2. 'a' → logprob: -1.9271376132965088
    3. ' b' → logprob: -4.302137851715088
    4. ' a' → logprob: -6.302137851715088
    5. 'w' → logprob: -7.927137851715088
    6. 's' → logprob: -8.17713737487793
    7. 'words' → logprob: -8.30213737487793
    8. ' words' → logprob: -8.42713737487793
    9. ''a' → logprob: -9.05213737487793
    10. ' ' → logprob: -10.55213737487793

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006014826241880655
    2. '[-' → logprob: -5.131014823913574
    3. ' [' → logprob: -10.631014823913574
    4. ' for' → logprob: -10.881014823913574
    5. 'for' → logprob: -11.381014823913574
    6. '[i' → logprob: -11.881014823913574
    7. '['' → logprob: -12.756014823913574
    8. '[_' → logprob: -13.006014823913574
    9. '[a' → logprob: -13.131014823913574
    10. ''[' → logprob: -13.256014823913574

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041125001735053957
    2. ' ' → logprob: -8.250411033630371
    3. '-' → logprob: -9.125411033630371
    4. '[' → logprob: -10.625411033630371
    5. '1' → logprob: -12.875411033630371
    6. '   ' → logprob: -13.312911033630371
    7. 'a' → logprob: -13.437911033630371
    8. 'i' → logprob: -13.500411033630371
    9. ':' → logprob: -13.562911033630371
    10. '
' → logprob: -13.812911033630371

Token 63: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24234387278556824
    2. ')' → logprob: -1.7423439025878906
    3. 'for' → logprob: -3.3673439025878906
    4. ' )' → logprob: -5.992343902587891
    5. '):' → logprob: -6.742343902587891
    6. ' ' → logprob: -6.992343902587891
    7. ']' → logprob: -7.742343902587891
    8. ':' → logprob: -8.74234390258789
    9. ' ]' → logprob: -10.11734390258789
    10. ' ):' → logprob: -10.36734390258789

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0913560763001442
    2. 'for' → logprob: -2.466356039047241
    3. ')' → logprob: -6.84135627746582
    4. ' ' → logprob: -7.09135627746582
    5. '(' → logprob: -8.96635627746582
    6. '):' → logprob: -9.46635627746582
    7. ':' → logprob: -9.71635627746582
    8. '  ' → logprob: -10.21635627746582
    9. '    ' → logprob: -10.34135627746582
    10. ' or' → logprob: -10.59135627746582

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14285673201084137
    2. ' a' → logprob: -2.0178568363189697
    3. ',' → logprob: -8.89285659790039
    4. ',a' → logprob: -11.01785659790039
    5. '(a' → logprob: -11.39285659790039
    6. 'i' → logprob: -12.51785659790039
    7. ' (' → logprob: -13.39285659790039
    8. ' i' → logprob: -13.51785659790039
    9. ' ,' → logprob: -13.51785659790039
    10. 'b' → logprob: -13.64285659790039

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004129218868911266
    2. ',b' → logprob: -5.504129409790039
    3. ' ,' → logprob: -10.254129409790039
    4. 'b' → logprob: -11.254129409790039
    5. ' in' → logprob: -13.129129409790039
    6. 'a' → logprob: -14.754129409790039
    7. ',a' → logprob: -15.754129409790039
    8. 'in' → logprob: -16.37912940979004
    9. '_,' → logprob: -16.50412940979004
    10. ' b' → logprob: -17.25412940979004

Token 67: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25193241238594055
    2. ' b' → logprob: -1.5019323825836182
    3. ',b' → logprob: -13.876932144165039
    4. 'z' → logprob: -14.001932144165039
    5. ' in' → logprob: -14.251932144165039
    6. ',' → logprob: -15.251932144165039
    7. '(b' → logprob: -15.751932144165039
    8. ' z' → logprob: -16.12693214416504
    9. ' ' → logprob: -16.25193214416504
    10. '  ' → logprob: -16.62693214416504

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004110934678465128
    2. 'in' → logprob: -5.504110813140869
    3. ')' → logprob: -11.379111289978027
    4. ',' → logprob: -11.754111289978027
    5. ' ' → logprob: -12.379111289978027
    6. '<|end|>' → logprob: -13.004111289978027
    7. 's' → logprob: -13.379111289978027
    8. '  ' → logprob: -14.004111289978027
    9. ' i' → logprob: -14.129111289978027
    10. 'ine' → logprob: -15.129111289978027

Token 69: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.0040862360037863255
    2. 'zip' → logprob: -5.504086017608643
    3. '(zip' → logprob: -11.7540864944458
    4. '.zip' → logprob: -17.379085540771484
    5. '_zip' → logprob: -18.254085540771484
    6. ' pair' → logprob: -19.004085540771484
    7. ' ' → logprob: -20.004085540771484
    8. 'Zip' → logprob: -21.004085540771484
    9. 'pair' → logprob: -21.254085540771484
    10. '```' → logprob: -21.879085540771484

Token 70: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. 'words' → logprob: -17.5
    4. '(word' → logprob: -19.0
    5. '(w' → logprob: -19.625
    6. ' words' → logprob: -20.125
    7. '(parts' → logprob: -20.25
    8. '(weights' → logprob: -20.25
    9. '(users' → logprob: -20.375
    10. '(points' → logprob: -20.75

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2558927834033966
    2. '[' → logprob: -1.8808927536010742
    3. '[:-' → logprob: -2.630892753601074
    4. ')' → logprob: -7.380892753601074
    5. '   ' → logprob: -8.755892753601074
    6. ' ,' → logprob: -8.880892753601074
    7. '(words' → logprob: -9.130892753601074
    8. '1' → logprob: -10.255892753601074
    9. '    ' → logprob: -10.380892753601074
    10. '[:' → logprob: -10.380892753601074

Token 72: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.018535828217864037
    2. ' words' → logprob: -4.018535614013672
    3. '   ' → logprob: -8.018535614013672
    4. '(words' → logprob: -10.893535614013672
    5. ' ' → logprob: -11.018535614013672
    6. '       ' → logprob: -12.143535614013672
    7. '.words' → logprob: -12.643535614013672
    8. '    ' → logprob: -12.768535614013672
    9. '  ' → logprob: -13.018535614013672
    10. 'w' → logprob: -13.018535614013672

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[
' → logprob: -17.125
    3. '   ' → logprob: -17.25
    4. '1' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. '
' → logprob: -17.75
    7. '[:-' → logprob: -17.875
    8. '[::-' → logprob: -18.0
    9. ')' → logprob: -18.25
    10. ' [' → logprob: -18.25

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.000005722045898
    4. '-' → logprob: -15.500005722045898
    5. '```' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.6250057220459
    7. '
' → logprob: -17.0000057220459
    8. '[:-' → logprob: -17.2500057220459
    9. '0' → logprob: -17.8750057220459
    10. '2' → logprob: -18.1250057220459

Token 75: ':' (ID: 25)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.42625194787979126
    2. ':' → logprob: -1.1762518882751465
    3. '):' → logprob: -3.9262518882751465
    4. '))' → logprob: -4.4262518882751465
    5. ']))' → logprob: -5.5512518882751465
    6. ')):
' → logprob: -7.0512518882751465
    7. ']):' → logprob: -7.3012518882751465
    8. ')' → logprob: -7.3012518882751465
    9. '])):
' → logprob: -7.8012518882751465
    10. ')]' → logprob: -9.301252365112305

Token 76: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.12954699993133545
    2. ')):
' → logprob: -2.504547119140625
    3. '))' → logprob: -3.754547119140625
    4. ')' → logprob: -4.379547119140625
    5. ')):
' → logprob: -6.129547119140625
    6. '):' → logprob: -6.504547119140625
    7. '):
' → logprob: -9.754547119140625
    8. ' ))' → logprob: -10.129547119140625
    9. ':' → logprob: -10.254547119140625
    10. ']):' → logprob: -11.504547119140625

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002427144441753626
    2. '       ' → logprob: -6.127427101135254
    3. '    
' → logprob: -9.377427101135254
    4. '    ' → logprob: -10.127427101135254
    5. '<|end|>' → logprob: -10.377427101135254
    6. ' print' → logprob: -10.627427101135254
    7. 'print' → logprob: -10.627427101135254
    8. ' 
' → logprob: -12.002427101135254
    9. '   ' → logprob: -12.252427101135254
    10. ':' → logprob: -12.377427101135254

Token 78: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.633563220500946
    2. 'print' (adapté à ' print') → logprob: -0.883563220500946
    3. ' print' → logprob: -2.883563280105591
    4. '```' → logprob: -10.508563041687012
    5. '	print' → logprob: -10.758563041687012
    6. '       ' → logprob: -11.883563041687012
    7. '    ' → logprob: -13.383563041687012
    8. ' ' → logprob: -13.633563041687012
    9. '  ' → logprob: -14.758563041687012
    10. '``' → logprob: -14.883563041687012

Token 79: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5760193467140198
    2. '(' → logprob: -0.8260193467140198
    3. '("("' → logprob: -9.951019287109375
    4. '('' → logprob: -10.701019287109375
    5. '("")' → logprob: -12.576019287109375
    6. '("""' → logprob: -12.701019287109375
    7. '(""' → logprob: -13.576019287109375
    8. '()' → logprob: -14.451019287109375
    9. '("(' → logprob: -14.951019287109375
    10. '(
' → logprob: -15.326019287109375

Token 80: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0025202499236911535
    2. '"No' → logprob: -6.0025200843811035
    3. '"' → logprob: -10.252520561218262
    4. 'Yes' → logprob: -11.627520561218262
    5. ' No' → logprob: -15.252520561218262
    6. '“No' → logprob: -16.502519607543945
    7. ''' → logprob: -17.877519607543945
    8. '("' → logprob: -18.627519607543945
    9. '(No' → logprob: -18.752519607543945
    10. 'NO' → logprob: -18.877519607543945

Token 81: '")
' (ID: 1896)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3559410870075226
    2. ')' → logprob: -1.3559410572052002
    3. ')
' → logprob: -3.2309410572052
    4. ' else' → logprob: -6.855941295623779
    5. '```' → logprob: -7.855941295623779
    6. '   ' → logprob: -8.105940818786621
    7. '")' → logprob: -8.605940818786621
    8. '
' → logprob: -9.730940818786621
    9. '#else' → logprob: -10.105940818786621
    10. '')' → logprob: -10.230940818786621

Token 82: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0013463040813803673
    2. ' else' → logprob: -6.626346111297607
    3. '```' → logprob: -11.626346588134766
    4. '
' → logprob: -12.501346588134766
    5. '    
' → logprob: -12.876346588134766
    6. '<|end|>' → logprob: -13.751346588134766
    7. '\' → logprob: -14.376346588134766
    8. '	else' → logprob: -14.376346588134766
    9. 'Else' → logprob: -14.501346588134766
    10. '_else' → logprob: -15.001346588134766

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000432695698691532
    2. ':
' → logprob: -7.75043249130249
    3. ' :' → logprob: -13.375432968139648
    4. '   ' → logprob: -15.250432968139648
    5. ':
' → logprob: -16.50043296813965
    6. ':

' → logprob: -16.75043296813965
    7. ' :
' → logprob: -17.12543296813965
    8. '):' → logprob: -17.87543296813965
    9. ':def' → logprob: -18.62543296813965
    10. '：' → logprob: -19.00043296813965

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008240196853876114
    2. ' print' → logprob: -4.883240222930908
    3. 'print' → logprob: -7.383240222930908
    4. '	print' → logprob: -12.38323974609375
    5. '   ' → logprob: -12.63323974609375
    6. '    
' → logprob: -12.88323974609375
    7. '```' → logprob: -14.25823974609375
    8. '<|end|>' → logprob: -14.50823974609375
    9. ' ' → logprob: -15.38323974609375
    10. '(print' → logprob: -15.50823974609375

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006268616300076246
    2. '   ' → logprob: -5.506268501281738
    3. ' print' → logprob: -6.131268501281738
    4. '	print' → logprob: -12.506268501281738
    5. '       ' → logprob: -13.131268501281738
    6. 'Print' → logprob: -13.256268501281738
    7. ' ' → logprob: -13.381268501281738
    8. '    
' → logprob: -13.381268501281738
    9. '```' → logprob: -13.756268501281738
    10. '
' → logprob: -14.006268501281738

Token 86: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10177010297775269
    2. '(' → logprob: -2.3517701625823975
    3. '("("' → logprob: -6.476769924163818
    4. '('' → logprob: -11.101770401000977
    5. '("(' → logprob: -12.226770401000977
    6. '("""' → logprob: -13.851770401000977
    7. '"' → logprob: -14.101770401000977
    8. '(
' → logprob: -14.351770401000977
    9. '("")' → logprob: -15.226770401000977
    10. ' ("' → logprob: -15.601770401000977

Token 87: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.02326131984591484
    2. '"' → logprob: -3.773261308670044
    3. 'Oui' → logprob: -11.398261070251465
    4. 'Ye' → logprob: -13.398261070251465
    5. ''' → logprob: -13.898261070251465
    6. 'YES' → logprob: -14.273261070251465
    7. '""' → logprob: -14.773261070251465
    8. 'Ok' → logprob: -14.898261070251465
    9. '“Yes' → logprob: -15.148261070251465
    10. ' Yes' → logprob: -15.648261070251465

Token 88: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26054301857948303
    2. '")' → logprob: -1.5105429887771606
    3. ')")' → logprob: -4.760542869567871
    4. '()' → logprob: -12.510542869567871
    5. '())' → logprob: -12.635542869567871
    6. ')"' → logprob: -12.885542869567871
    7. '')' → logprob: -13.135542869567871
    8. '`)' → logprob: -14.010542869567871
    9. ' )' → logprob: -14.135542869567871
    10. ')
' → logprob: -14.135542869567871


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 44.19%
Précision adaptée (1ère position): 45.35%
Précision (top 10): 76.74%
================================================================================
