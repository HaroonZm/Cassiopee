================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

r = int(input())
print(2 * math.pi * r)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'r' (ID: 81)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2518482804298401
    2. '.' → logprob: -2.1268482208251953
    3. ')' → logprob: -2.8768482208251953
    4. '(' → logprob: -3.2518482208251953
    5. '.a' → logprob: -6.501848220825195
    6. '=' → logprob: -6.876848220825195
    7. 'adius' → logprob: -7.001848220825195
    8. 'e' → logprob: -7.001848220825195
    9. '[' → logprob: -7.376848220825195
    10. '\(' → logprob: -7.501848220825195

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000895024451892823
    2. ' math' → logprob: -7.625895023345947
    3. '5' → logprob: -8.500895500183105
    4. '1' → logprob: -10.125895500183105
    5. '0' → logprob: -10.125895500183105
    6. '3' → logprob: -10.250895500183105
    7. '2' → logprob: -10.500895500183105
    8. '10' → logprob: -11.125895500183105
    9. '20' → logprob: -11.625895500183105
    10. 'math' → logprob: -11.750895500183105

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006615649326704443
    2. '(r' → logprob: -8.375661849975586
    3. '()' → logprob: -9.000661849975586
    4. 'r' → logprob: -9.500661849975586
    5. ')' → logprob: -9.625661849975586
    6. '('' → logprob: -10.000661849975586
    7. ''' → logprob: -10.750661849975586
    8. '(
' → logprob: -11.000661849975586
    9. ' (' → logprob: -11.375661849975586
    10. '```' → logprob: -11.375661849975586

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10735177248716354
    2. ')' → logprob: -2.357351779937744
    3. '()' → logprob: -5.357351779937744
    4. '())' → logprob: -7.232351779937744
    5. '(
' → logprob: -7.357351779937744
    6. '('' → logprob: -7.732351779937744
    7. '(

' → logprob: -9.357351303100586
    8. '")' → logprob: -9.482351303100586
    9. '))' → logprob: -9.607351303100586
    10. '```' → logprob: -9.857351303100586

Token 8: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052111394703388214
    2. 'print' → logprob: -4.177111625671387
    3. '*' → logprob: -4.427111625671387
    4. '**' → logprob: -4.677111625671387
    5. '"' → logprob: -5.302111625671387
    6. ''' → logprob: -6.052111625671387
    7. 'r' → logprob: -6.927111625671387
    8. '")' → logprob: -7.302111625671387
    9. 'radius' → logprob: -7.427111625671387
    10. 's' → logprob: -7.677111625671387

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002597776474431157
    2. '(math' → logprob: -6.377597808837891
    3. '("("' → logprob: -7.752597808837891
    4. '('' → logprob: -7.752597808837891
    5. '(f' → logprob: -11.00259780883789
    6. '(r' → logprob: -12.00259780883789
    7. '(round' → logprob: -12.25259780883789
    8. '(
' → logprob: -13.62759780883789
    9. '("' → logprob: -13.62759780883789
    10. '((' → logprob: -14.00259780883789

Token 10: '2' (ID: 17)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.016624614596366882
    2. 'r' → logprob: -4.516624450683594
    3. '(math' → logprob: -6.016624450683594
    4. '"' → logprob: -6.516624450683594
    5. 'round' → logprob: -7.266624450683594
    6. ' math' → logprob: -7.641624450683594
    7. 'f' → logprob: -8.766624450683594
    8. ''r' → logprob: -9.516624450683594
    9. ''' → logprob: -9.766624450683594
    10. 'cmath' → logprob: -10.141624450683594

Token 11: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04868115857243538
    2. ' *' → logprob: -3.0486812591552734
    3. '*r' → logprob: -9.673681259155273
    4. ')' → logprob: -10.923681259155273
    5. '*pi' → logprob: -11.798681259155273
    6. '*Math' → logprob: -12.673681259155273
    7. '*)' → logprob: -14.673681259155273
    8. ' ' → logprob: -15.298681259155273
    9. '*object' → logprob: -15.298681259155273
    10. '**' → logprob: -15.423681259155273

Token 12: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5107581615447998
    2. 'r' → logprob: -1.5107581615447998
    3. ' r' → logprob: -2.2607581615448
    4. 'math' → logprob: -2.6357581615448
    5. ' ' → logprob: -6.135758399963379
    6. '*' → logprob: -7.635758399963379
    7. ' *' → logprob: -7.885758399963379
    8. '3' → logprob: -9.010758399963379
    9. 'radius' → logprob: -10.385758399963379
    10. ')' → logprob: -11.010758399963379

Token 13: '.pi' (ID: 55497)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5841008424758911
    2. '.pi' → logprob: -0.8341008424758911
    3. '.sqrt' → logprob: -4.959100723266602
    4. '.sin' → logprob: -7.209100723266602
    5. '.cos' → logprob: -9.084100723266602
    6. ' .' → logprob: -9.209100723266602
    7. '.r' → logprob: -10.209100723266602
    8. '.s' → logprob: -10.334100723266602
    9. '.PI' → logprob: -11.084100723266602
    10. '.pow' → logprob: -11.209100723266602

Token 14: ' *' (ID: 425)
  Prédit: '*r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.7664967775344849
    2. ' *' → logprob: -1.2664967775344849
    3. '*' → logprob: -1.3914967775344849
    4. 'r' → logprob: -5.766496658325195
    5. ')' → logprob: -6.391496658325195
    6. ' r' → logprob: -10.766496658325195
    7. ' ' → logprob: -12.016496658325195
    8. ' )' → logprob: -13.141496658325195
    9. '*)' → logprob: -13.391496658325195
    10. ')*' → logprob: -13.891496658325195

Token 15: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002805467927828431
    2. ' r' → logprob: -5.877805233001709
    3. ')' → logprob: -15.377805709838867
    4. ' ' → logprob: -15.752805709838867
    5. ' ' → logprob: -16.627805709838867
    6. '	r' → logprob: -16.627805709838867
    7. '*r' → logprob: -17.752805709838867
    8. 'radius' → logprob: -18.252805709838867
    9. '```' → logprob: -18.502805709838867
    10. '_r' → logprob: -18.752805709838867

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.750001907348633
    3. '')' → logprob: -14.875001907348633
    4. '`)' → logprob: -15.000001907348633
    5. ' )' → logprob: -15.000001907348633
    6. ')`' → logprob: -16.875001907348633
    7. '*' → logprob: -17.500001907348633
    8. '**' → logprob: -17.750001907348633
    9. ')**' → logprob: -18.000001907348633
    10. '")' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 14
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 21.43%
Précision adaptée (1ère position): 21.43%
Précision (top 10): 57.14%
================================================================================
