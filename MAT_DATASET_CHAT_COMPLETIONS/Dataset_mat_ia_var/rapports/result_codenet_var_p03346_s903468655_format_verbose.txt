================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input_line():
    return sys.stdin.readline().strip()

def create_2d_list(num_rows, num_cols, initial_value):
    return [[initial_value] * num_cols for _ in range(num_rows)]

def create_3d_list(dim1, dim2, dim3, initial_value):
    return [[[initial_value] * dim3 for _ in range(dim2)] for _ in range(dim1)]

def create_4d_list(dim1, dim2, dim3, dim4, initial_value):
    return [[[[initial_value] * dim4 for _ in range(dim3)] for _ in range(dim2)] for _ in range(dim1)]

def ceil_division(numerator, denominator=1):
    return int(-(-numerator // denominator))

def read_integer():
    return int(read_input_line())

def read_integer_map():
    return map(int, read_input_line().split())

def read_integer_list(number_of_elements=None):
    if number_of_elements is None:
        return list(read_integer_map())
    else:
        return [read_integer() for _ in range(number_of_elements)]

def print_yes_lowercase():
    print('Yes')

def print_no_lowercase():
    print('No')

def print_yes_uppercase():
    print('YES')

def print_no_uppercase():
    print('NO')

sys.setrecursionlimit(10 ** 9)
INFINITY_VALUE = 10 ** 18
MODULO_VALUE = 10 ** 9 + 7

element_count = read_integer()
element_list = read_integer_list(element_count)

position_in_sequence = [0] * element_count

for zero_based_index, sequence_value in enumerate(element_list):
    position_in_sequence[sequence_value - 1] = zero_based_index

maximum_consecutive_sorted_length = 1
current_consecutive_length = 1

for position_index in range(element_count - 1):
    if position_in_sequence[position_index] < position_in_sequence[position_index + 1]:
        current_consecutive_length += 1
    else:
        current_consecutive_length = 1

    maximum_consecutive_sorted_length = max(maximum_consecutive_sorted_length, current_consecutive_length)

minimal_operations_to_sort = element_count - maximum_consecutive_sorted_length
print(minimal_operations_to_sort)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2547767758369446
    2. '_' → logprob: -1.5047767162322998
    3. ' (' → logprob: -6.504776954650879
    4. '_line' → logprob: -7.379776954650879
    5. ':' → logprob: -9.504776954650879
    6. '```' → logprob: -9.504776954650879
    7. ' ' → logprob: -9.629776954650879
    8. '_input' → logprob: -9.879776954650879
    9. 's' → logprob: -9.879776954650879
    10. '_data' → logprob: -10.004776954650879

Token 6: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011192589066922665
    2. '_' → logprob: -4.636192798614502
    3. '():' → logprob: -7.136192798614502
    4. ' (' → logprob: -8.761192321777344
    5. '(_' → logprob: -9.261192321777344
    6. ':' → logprob: -9.886192321777344
    7. '```' → logprob: -9.886192321777344
    8. '(_:' → logprob: -9.886192321777344
    9. '):' → logprob: -10.636192321777344
    10. '_:' → logprob: -10.761192321777344

Token 7: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3923501670360565
    2. '(' → logprob: -1.142350196838379
    3. ':' → logprob: -6.642350196838379
    4. '(:' → logprob: -6.767350196838379
    5. '):' → logprob: -7.017350196838379
    6. 's' → logprob: -7.142350196838379
    7. '(s' → logprob: -7.642350196838379
    8. '(":' → logprob: -8.517350196838379
    9. ' ():' → logprob: -8.767350196838379
    10. '(line' → logprob: -8.892350196838379

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09494249522686005
    2. ' return' → logprob: -2.719942569732666
    3. '(' → logprob: -4.719942569732666
    4. 'return' → logprob: -4.969942569732666
    5. '```' → logprob: -6.469942569732666
    6. '    
' → logprob: -6.969942569732666
    7. '\' → logprob: -7.094942569732666
    8. '(return' → logprob: -7.094942569732666
    9. ':return' → logprob: -7.344942569732666
    10. '    ' → logprob: -7.594942569732666

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6714060306549072
    2. 'return' (adapté à ' return') → logprob: -1.1714060306549072
    3. ' line' → logprob: -2.4214060306549072
    4. ' return' → logprob: -3.1714060306549072
    5. 'line' → logprob: -3.4214060306549072
    6. 'try' → logprob: -4.421405792236328
    7. ' try' → logprob: -6.171405792236328
    8. 'input' → logprob: -7.421405792236328
    9. 'data' → logprob: -8.046405792236328
    10. '    ' → logprob: -8.671405792236328

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0035105107817798853
    2. 'sys' → logprob: -5.878510475158691
    3. ' input' → logprob: -7.503510475158691
    4. ' ' → logprob: -9.378510475158691
    5. 'input' → logprob: -9.628510475158691
    6. ' ' → logprob: -13.503510475158691
    7. '(sys' → logprob: -14.003510475158691
    8. '=sys' → logprob: -14.753510475158691
    9. '	sys' → logprob: -14.878510475158691
    10. ' system' → logprob: -15.503510475158691

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01396180409938097
    2. '.stdin' → logprob: -4.6389617919921875
    3. '.stdout' → logprob: -6.3889617919921875
    4. '.argv' → logprob: -6.6389617919921875
    5. '.readline' → logprob: -7.1389617919921875
    6. ' .' → logprob: -8.513961791992188
    7. '.exit' → logprob: -9.888961791992188
    8. '.import' → logprob: -10.138961791992188
    9. '.stderr' → logprob: -10.888961791992188
    10. '.next' → logprob: -10.888961791992188

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009238460334017873
    2. '.' → logprob: -7.6259236335754395
    3. '.read' → logprob: -7.7509236335754395
    4. '.readlines' → logprob: -12.375924110412598
    5. '.Read' → logprob: -14.625924110412598
    6. '.write' → logprob: -15.125924110412598
    7. ' readline' → logprob: -15.500924110412598
    8. 'read' → logprob: -16.37592315673828
    9. ' .' → logprob: -16.75092315673828
    10. '().' → logprob: -17.00092315673828

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00035631912760436535
    2. '().' → logprob: -9.000356674194336
    3. '()
' → logprob: -9.375356674194336
    4. '(' → logprob: -9.500356674194336
    5. ' ()' → logprob: -10.375356674194336
    6. '()(' → logprob: -11.375356674194336
    7. '()

' → logprob: -11.625356674194336
    8. '()\' → logprob: -11.875356674194336
    9. '`()' → logprob: -12.250356674194336
    10. '()`' → logprob: -13.000356674194336

Token 14: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0024762547109276056
    2. 'rstrip' → logprob: -6.002476215362549
    3. '_strip' → logprob: -15.377476692199707
    4. ' strip' → logprob: -15.752476692199707
    5. '```' → logprob: -16.62747573852539
    6. 'replace' → logprob: -16.87747573852539
    7. 'decode' → logprob: -17.00247573852539
    8. 'split' → logprob: -17.50247573852539
    9. 'str' → logprob: -17.75247573852539
    10. '(strip' → logprob: -17.87747573852539

Token 15: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03809669241309166
    2. '(' → logprob: -3.2880966663360596
    3. '(
' → logprob: -11.16309642791748
    4. '()
' → logprob: -11.78809642791748
    5. '()(' → logprob: -12.16309642791748
    6. '(

' → logprob: -12.28809642791748
    7. ' ()' → logprob: -12.53809642791748
    8. '()`' → logprob: -12.53809642791748
    9. '`()' → logprob: -12.53809642791748
    10. '(\' → logprob: -13.16309642791748

Token 16: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2403644621372223
    2. '\n' → logprob: -1.9903644323349
    3. '' → logprob: -3.4903645515441895
    4. '

' → logprob: -4.4903645515441895
    5. '\' → logprob: -4.6153645515441895
    6. '#' → logprob: -4.8653645515441895
    7. '```' → logprob: -5.3653645515441895
    8. '(' → logprob: -5.7403645515441895
    9. '<|end|>' → logprob: -6.4903645515441895
    10. ' ' → logprob: -6.8653645515441895

Token 17: ' create' (ID: 2501)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09750553965568542
    2. '_' → logprob: -3.097505569458008
    3. ' main' → logprob: -4.347505569458008
    4. ' calculate' → logprob: -4.722505569458008
    5. ' read' → logprob: -4.847505569458008
    6. ' space' → logprob: -4.972505569458008
    7. ' process' → logprob: -5.597505569458008
    8. ' write' → logprob: -6.097505569458008
    9. ' add' → logprob: -7.347505569458008
    10. ' compute' → logprob: -7.847505569458008

Token 18: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0048741307109594345
    2. '_user' → logprob: -7.254874229431152
    3. '_function' → logprob: -7.754874229431152
    4. ' _' → logprob: -8.004874229431152
    5. '_token' → logprob: -8.254874229431152
    6. '_line' → logprob: -8.254874229431152
    7. '_element' → logprob: -8.629874229431152
    8. '_table' → logprob: -8.629874229431152
    9. '_space' → logprob: -8.754874229431152
    10. '_database' → logprob: -9.254874229431152

Token 19: '2' (ID: 17)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.9858982563018799
    2. 'matrix' → logprob: -2.36089825630188
    3. 'user' → logprob: -2.61089825630188
    4. 'list' → logprob: -2.98589825630188
    5. 'dict' → logprob: -2.98589825630188
    6. 'dictionary' → logprob: -2.98589825630188
    7. 'array' → logprob: -3.36089825630188
    8. 'database' → logprob: -3.36089825630188
    9. 'directory' → logprob: -3.86089825630188
    10. 'data' → logprob: -3.98589825630188

Token 20: 'd' (ID: 67)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.15685848891735077
    2. '_array' → logprob: -3.156858444213867
    3. '_dim' → logprob: -3.156858444213867
    4. '_d' → logprob: -3.906858444213867
    5. 'd' → logprob: -4.031858444213867
    6. '_' → logprob: -4.156858444213867
    7. '_matrix' → logprob: -6.406858444213867
    8. '_D' → logprob: -6.656858444213867
    9. '_dimension' → logprob: -7.406858444213867
    10. '-dimensional' → logprob: -7.531858444213867

Token 21: '_list' (ID: 4162)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.04380973428487778
    2. '_' → logprob: -3.418809652328491
    3. '_list' → logprob: -4.66880989074707
    4. '_matrix' → logprob: -7.66880989074707
    5. 'array' → logprob: -8.79380989074707
    6. '_arr' → logprob: -10.16880989074707
    7. '_vector' → logprob: -11.54380989074707
    8. '_arrays' → logprob: -11.91880989074707
    9. '```' → logprob: -12.04380989074707
    10. '_a' → logprob: -12.16880989074707

Token 22: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00046558488975279033
    2. '("("' → logprob: -8.375465393066406
    3. '(n' → logprob: -10.125465393066406
    4. ' (' → logprob: -10.125465393066406
    5. '(size' → logprob: -10.375465393066406
    6. '((' → logprob: -10.875465393066406
    7. '_' → logprob: -11.250465393066406
    8. '(
' → logprob: -11.875465393066406
    9. '<|end|>' → logprob: -12.000465393066406
    10. '(name' → logprob: -12.000465393066406

Token 23: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.09000180661678314
    2. '_elements' → logprob: -3.0900018215179443
    3. 's' → logprob: -3.7150018215179443
    4. '_' → logprob: -5.090001583099365
    5. '_s' → logprob: -5.215001583099365
    6. '_cells' → logprob: -6.590001583099365
    7. '_items' → logprob: -7.215001583099365
    8. '_lines' → logprob: -7.340001583099365
    9. '_of' → logprob: -7.840001583099365
    10. ')' → logprob: -8.090002059936523

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.186122770188376e-05
    2. ',num' → logprob: -9.625091552734375
    3. ' ,' → logprob: -11.000091552734375
    4. '‌,' → logprob: -12.875091552734375
    5. ',n' → logprob: -13.000091552734375
    6. ' ' → logprob: -13.875091552734375
    7. '):' → logprob: -14.000091552734375
    8. ')' → logprob: -14.500091552734375
    9. ',size' → logprob: -14.500091552734375
    10. ',int' → logprob: -15.500091552734375

Token 25: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.16023112833499908
    2. ' num' → logprob: -1.910231113433838
    3. '	num' → logprob: -12.910231590270996
    4. ' ' → logprob: -13.910231590270996
    5. '   ' → logprob: -13.910231590270996
    6. ',num' → logprob: -14.035231590270996
    7. '_num' → logprob: -14.285231590270996
    8. '    ' → logprob: -14.785231590270996
    9. ')' → logprob: -15.160231590270996
    10. '<num' → logprob: -15.785231590270996

Token 26: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -0.5760982036590576
    2. '_columns' → logprob: -0.8260982036590576
    3. '_col' → logprob: -9.201098442077637
    4. '_' → logprob: -10.326098442077637
    5. '_cells' → logprob: -11.576098442077637
    6. '_rows' → logprob: -12.076098442077637
    7. '_elements' → logprob: -12.701098442077637
    8. 's' → logprob: -12.951098442077637
    9. '_COLUMNS' → logprob: -13.451098442077637
    10. ' _' → logprob: -14.326098442077637

Token 27: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026151363272219896
    2. ')' → logprob: -6.002614974975586
    3. ' ):' → logprob: -9.627614974975586
    4. ',' → logprob: -9.877614974975586
    5. ':' → logprob: -11.252614974975586
    6. '):
' → logprob: -12.502614974975586
    7. '   ' → logprob: -13.127614974975586
    8. '=' → logprob: -14.002614974975586
    9. '*' → logprob: -14.752614974975586
    10. ' ' → logprob: -15.127614974975586

Token 28: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43739697337150574
    2. ' None' → logprob: -1.4373970031738281
    3. ' value' → logprob: -3.687397003173828
    4. ' ' → logprob: -3.937397003173828
    5. ' default' → logprob: -3.937397003173828
    6. 'value' → logprob: -4.187397003173828
    7. 'None' → logprob: -4.562397003173828
    8. ' )' → logprob: -4.687397003173828
    9. ' initial' → logprob: -5.062397003173828
    10. 'default' → logprob: -5.187397003173828

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0026066910941153765
    2. '_' → logprob: -6.0026068687438965
    3. '_val' → logprob: -9.502606391906738
    4. ')' → logprob: -10.627606391906738
    5. ' _' → logprob: -12.002606391906738
    6. ')_' → logprob: -12.252606391906738
    7. '_=' → logprob: -12.377606391906738
    8. 'value' → logprob: -12.377606391906738
    9. '_)' → logprob: -12.627606391906738
    10. ' value' → logprob: -12.877606391906738

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008932325057685375
    2. ')' → logprob: -5.258932113647461
    3. '=' → logprob: -5.633932113647461
    4. ' ):' → logprob: -9.258932113647461
    5. ':' → logprob: -12.008932113647461
    6. '):
' → logprob: -12.383932113647461
    7. ')=' → logprob: -12.383932113647461
    8. ' ' → logprob: -12.508932113647461
    9. ')：' → logprob: -14.133932113647461
    10. ' =' → logprob: -14.883932113647461

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24310483038425446
    2. '   ' → logprob: -1.8681048154830933
    3. '(' → logprob: -3.868104934692383
    4. '):' → logprob: -3.868104934692383
    5. ' :' → logprob: -4.618104934692383
    6. '():' → logprob: -5.118104934692383
    7. '    ' → logprob: -7.118104934692383
    8. '[:]' → logprob: -7.743104934692383
    9. ' (' → logprob: -7.868104934692383
    10. '  ' → logprob: -8.618104934692383

Token 32: ' return' (ID: 622)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0595157146453857
    2. ' [' → logprob: -1.3095157146453857
    3. ' [
' → logprob: -1.6845157146453857
    4. '[' → logprob: -2.0595157146453857
    5. ' [[' → logprob: -3.6845157146453857
    6. '   ' → logprob: -3.6845157146453857
    7. ' return' → logprob: -4.309515953063965
    8. '[[' → logprob: -5.434515953063965
    9. 'return' (adapté à ' return') → logprob: -6.309515953063965
    10. ' [["' → logprob: -9.559515953063965

Token 33: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6693404912948608
    2. ' [[' → logprob: -0.9193404912948608
    3. '[' → logprob: -2.6693406105041504
    4. ' [' → logprob: -3.9193406105041504
    5. '[
' → logprob: -11.294340133666992
    6. '[['' → logprob: -12.294340133666992
    7. ' [
' → logprob: -14.044340133666992
    8. ' [[]' → logprob: -14.669340133666992
    9. '[]' → logprob: -14.794340133666992
    10. ' ' → logprob: -15.544340133666992

Token 34: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -3.7697225252486533e-06
    2. ' initial' → logprob: -12.500003814697266
    3. '	initial' → logprob: -18.250003814697266
    4. '.initial' → logprob: -19.125003814697266
    5. '(initial' → logprob: -19.750003814697266
    6. '_initial' → logprob: -20.000003814697266
    7. '初' → logprob: -22.000003814697266
    8. 'Initial' → logprob: -22.250003814697266
    9. 'initializer' → logprob: -22.375003814697266
    10. 'int' → logprob: -22.750003814697266

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00020902375399600714
    2. '_' → logprob: -8.500208854675293
    3. ' _' → logprob: -12.500208854675293
    4. '_val' → logprob: -14.125208854675293
    5. 'ize' → logprob: -14.625208854675293
    6. 'ly' → logprob: -16.00020980834961
    7. '_values' → logprob: -16.37520980834961
    8. 'value' → logprob: -16.75020980834961
    9. 'ized' → logprob: -16.87520980834961
    10. 'ization' → logprob: -17.12520980834961

Token 36: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00647496385499835
    2. 'for' → logprob: -5.13147497177124
    3. ']' → logprob: -7.63147497177124
    4. ' ]' → logprob: -10.881474494934082
    5. ')' → logprob: -11.131474494934082
    6. ' ' → logprob: -11.256474494934082
    7. '	for' → logprob: -12.131474494934082
    8. '   ' → logprob: -12.256474494934082
    9. ']*' → logprob: -13.256474494934082
    10. '    ' → logprob: -13.881474494934082

Token 37: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002807963639497757
    2. 'for' → logprob: -5.877808094024658
    3. ' ' → logprob: -13.5028076171875
    4. '    ' → logprob: -14.1278076171875
    5. '   ' → logprob: -15.0028076171875
    6. '	for' → logprob: -15.0028076171875
    7. ']' → logprob: -16.0028076171875
    8. ' ]' → logprob: -16.6278076171875
    9. '        ' → logprob: -17.6278076171875
    10. '  ' → logprob: -17.6278076171875

Token 38: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20141538977622986
    2. ' num' → logprob: -1.7014154195785522
    3. '(num' → logprob: -13.326415061950684
    4. ',num' → logprob: -15.826415061950684
    5. '=num' → logprob: -16.326416015625
    6. '	num' → logprob: -16.326416015625
    7. ' ' → logprob: -16.326416015625
    8. '<num' → logprob: -16.451416015625
    9. '$num' → logprob: -17.576416015625
    10. '[num' → logprob: -18.076416015625

Token 39: '_cols' (ID: 60927)
  Prédit: '_cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cols' → logprob: -9.245724504580721e-05
    2. '_rows' → logprob: -9.375092506408691
    3. '_col' → logprob: -12.500092506408691
    4. '_' → logprob: -12.750092506408691
    5. '-cols' → logprob: -14.875092506408691
    6. '_COL' → logprob: -16.000091552734375
    7. 'cols' → logprob: -16.250091552734375
    8. 'Cols' → logprob: -16.375091552734375
    9. '_columns' → logprob: -16.375091552734375
    10. '_c' → logprob: -16.375091552734375

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02696717344224453
    2. 'for' → logprob: -3.6519672870635986
    3. '   ' → logprob: -7.7769670486450195
    4. ']' → logprob: -8.65196704864502
    5. ' ]' → logprob: -10.02696704864502
    6. '	for' → logprob: -11.02696704864502
    7. '    ' → logprob: -12.27696704864502
    8. ' ' → logprob: -12.77696704864502
    9. ')' → logprob: -13.77696704864502
    10. '  ' → logprob: -13.77696704864502

Token 41: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.042907264083623886
    2. ' range' → logprob: -4.042907238006592
    3. '_' → logprob: -4.292907238006592
    4. ' ' → logprob: -4.792907238006592
    5. '<|end|>' → logprob: -6.792907238006592
    6. '<|end|>' → logprob: -7.542907238006592
    7. ' in' → logprob: -8.16790771484375
    8. 'range' → logprob: -9.04290771484375
    9. ' ' → logprob: -9.16790771484375
    10. ' xrange' → logprob: -9.66790771484375

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0990392416715622
    2. 'in' → logprob: -2.724039316177368
    3. 'range' → logprob: -3.599039316177368
    4. ' range' → logprob: -6.724039077758789
    5. ' ' → logprob: -9.724039077758789
    6. ' xrange' → logprob: -11.349039077758789
    7. '  ' → logprob: -11.474039077758789
    8. '<|end|>' → logprob: -11.849039077758789
    9. 'row' → logprob: -11.974039077758789
    10. '	range' → logprob: -12.099039077758789

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06198034808039665
    2. ' range' → logprob: -2.8119802474975586
    3. '	range' → logprob: -12.186980247497559
    4. ' ' → logprob: -12.686980247497559
    5. ' xrange' → logprob: -13.186980247497559
    6. '   ' → logprob: -13.561980247497559
    7. '  ' → logprob: -15.061980247497559
    8. '_range' → logprob: -15.186980247497559
    9. '(range' → logprob: -15.436980247497559
    10. '_' → logprob: -15.436980247497559

Token 44: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0034121328499168158
    2. '(' → logprob: -5.753412246704102
    3. ' (' → logprob: -8.378412246704102
    4. ' num' → logprob: -13.128412246704102
    5. 'num' → logprob: -13.128412246704102
    6. ',num' → logprob: -14.753412246704102
    7. '<num' → logprob: -15.878412246704102
    8. '=num' → logprob: -17.2534122467041
    9. ')' → logprob: -17.6284122467041
    10. '(number' → logprob: -17.8784122467041

Token 45: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.50001049041748
    3. 'rows' → logprob: -12.62501049041748
    4. '_cols' → logprob: -13.75001049041748
    5. '_ROWS' → logprob: -13.75001049041748
    6. ' ' → logprob: -15.87501049041748
    7. '	rows' → logprob: -16.000009536743164
    8. ' _' → logprob: -16.125009536743164
    9. '_r' → logprob: -16.500009536743164
    10. '   ' → logprob: -16.750009536743164

Token 46: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.3358446166384965e-05
    2. ']' → logprob: -10.000053405761719
    3. ')' → logprob: -12.000053405761719
    4. '   ' → logprob: -14.375053405761719
    5. '])]' → logprob: -15.000053405761719
    6. '])' → logprob: -15.500053405761719
    7. ')])' → logprob: -15.500053405761719
    8. ' )' → logprob: -15.625053405761719
    9. ')]
' → logprob: -16.50005340576172
    10. '')]' → logprob: -16.75005340576172

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04129526764154434
    2. '
' → logprob: -4.041295051574707
    3. 'd' → logprob: -4.541295051574707
    4. '#' → logprob: -4.916295051574707
    5. '```' → logprob: -6.541295051574707
    6. '

' → logprob: -6.791295051574707
    7. '<|end|>' → logprob: -6.916295051574707
    8. '\' → logprob: -7.041295051574707
    9. 'de' → logprob: -9.291295051574707
    10. '\n' → logprob: -9.916295051574707

Token 48: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.029687762260437
    2. ' calculate' → logprob: -1.029687762260437
    3. ' solve' → logprob: -2.6546878814697266
    4. ' process' → logprob: -2.9046878814697266
    5. ' read' → logprob: -3.7796878814697266
    6. ' compute' → logprob: -3.7796878814697266
    7. ' find' → logprob: -4.029687881469727
    8. ' count' → logprob: -4.154687881469727
    9. ' max' → logprob: -4.529687881469727
    10. ' sort' → logprob: -5.154687881469727

Token 49: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005970627069473267
    2. ' _' → logprob: -5.505970478057861
    3. '_list' → logprob: -7.755970478057861
    4. '_set' → logprob: -8.00597095489502
    5. '_s' → logprob: -9.25597095489502
    6. '_a' → logprob: -9.38097095489502
    7. '_mult' → logprob: -9.50597095489502
    8. '_array' → logprob: -10.00597095489502
    9. '_string' → logprob: -10.00597095489502
    10. '_cube' → logprob: -10.13097095489502

Token 50: '3' (ID: 18)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07457371801137924
    2. '2' → logprob: -3.1995737552642822
    3. '3' → logprob: -3.9495737552642822
    4. '1' → logprob: -5.449573516845703
    5. ' ' → logprob: -6.324573516845703
    6. '_list' → logprob: -6.949573516845703
    7. 'dict' → logprob: -7.074573516845703
    8. '_set' → logprob: -7.574573516845703
    9. '_matrix' → logprob: -7.574573516845703
    10. '_rows' → logprob: -8.199573516845703

Token 51: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.062127333134412766
    2. 'd' → logprob: -2.8121273517608643
    3. '_dim' → logprob: -9.437127113342285
    4. 'D' → logprob: -9.937127113342285
    5. '_' → logprob: -11.187127113342285
    6. ' _' → logprob: -12.187127113342285
    7. ' d' → logprob: -12.187127113342285
    8. '```' → logprob: -12.437127113342285
    9. 'def' → logprob: -14.687127113342285
    10. '_def' → logprob: -14.812127113342285

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0066771251149475574
    2. '_' → logprob: -5.131677150726318
    3. '_li' → logprob: -8.75667667388916
    4. ' _' → logprob: -8.88167667388916
    5. '_array' → logprob: -9.25667667388916
    6. '_lists' → logprob: -9.38167667388916
    7. '_lst' → logprob: -9.38167667388916
    8. '_line' → logprob: -10.25667667388916
    9. '_ls' → logprob: -10.50667667388916
    10. '_cube' → logprob: -10.75667667388916

Token 53: '(dim' (ID: 80871)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10333538055419922
    2. '(num' → logprob: -2.353335380554199
    3. ' (' → logprob: -5.978335380554199
    4. '<|end|>' → logprob: -8.4783353805542
    5. '(size' → logprob: -9.4783353805542
    6. '(n' → logprob: -9.7283353805542
    7. '("("' → logprob: -10.3533353805542
    8. '(user' → logprob: -10.6033353805542
    9. '(number' → logprob: -11.1033353805542
    10. '(len' → logprob: -11.3533353805542

Token 54: '1' (ID: 16)
  Prédit: 'ensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensions' → logprob: -0.01997554488480091
    2. 's' → logprob: -4.644975662231445
    3. 'ension' → logprob: -4.644975662231445
    4. 'ENSIONS' → logprob: -7.769975662231445
    5. 'ensiones' → logprob: -10.394975662231445
    6. 'ENSION' → logprob: -10.769975662231445
    7. 'ens' → logprob: -10.769975662231445
    8. '_' → logprob: -11.019975662231445
    9. '```' → logprob: -11.769975662231445
    10. 'e' → logprob: -12.019975662231445

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002581128152087331
    2. ' ,' → logprob: -6.2525811195373535
    3. ',num' → logprob: -7.8775811195373535
    4. '_,' → logprob: -9.002581596374512
    5. ')' → logprob: -9.502581596374512
    6. '   ' → logprob: -10.877581596374512
    7. ',size' → logprob: -11.127581596374512
    8. 's' → logprob: -11.877581596374512
    9. ',n' → logprob: -12.252581596374512
    10. '):' → logprob: -12.502581596374512

Token 56: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.003219184000045061
    2. 'dim' → logprob: -5.753219127655029
    3. '(dim' → logprob: -10.128219604492188
    4. '_dim' → logprob: -13.878219604492188
    5. '.dim' → logprob: -15.003219604492188
    6. ' dims' → logprob: -16.378219604492188
    7. ' ' → logprob: -16.628219604492188
    8. ')' → logprob: -17.378219604492188
    9. 'Dim' → logprob: -17.503219604492188
    10. 'dims' → logprob: -18.003219604492188

Token 57: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4587942361831665
    2. 's' → logprob: -1.2087942361831665
    3. 'ensions' → logprob: -2.833794116973877
    4. 'ension' → logprob: -5.583794116973877
    5. '2' → logprob: -5.708794116973877
    6. '_dims' → logprob: -7.208794116973877
    7. '_' → logprob: -7.333794116973877
    8. '_dim' → logprob: -7.333794116973877
    9. '_rows' → logprob: -7.458794116973877
    10. '_cols' → logprob: -8.708794593811035

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ' ,' → logprob: -9.625068664550781
    3. '_,' → logprob: -14.375068664550781
    4. '‌,' → logprob: -14.375068664550781
    5. ',num' → logprob: -14.750068664550781
    6. ',d' → logprob: -14.875068664550781
    7. ')' → logprob: -15.875068664550781
    8. ' ' → logprob: -16.87506866455078
    9. ',size' → logprob: -17.12506866455078
    10. '‍,' → logprob: -17.12506866455078

Token 59: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.011048528365790844
    2. 'dim' → logprob: -4.511048316955566
    3. '(dim' → logprob: -14.511048316955566
    4. '_dim' → logprob: -15.761048316955566
    5. ' dims' → logprob: -16.386049270629883
    6. '.dim' → logprob: -18.261049270629883
    7. 'dims' → logprob: -18.261049270629883
    8. ' ' → logprob: -18.386049270629883
    9. ' num' → logprob: -18.386049270629883
    10. ' dimens' → logprob: -19.386049270629883

Token 60: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003334440989419818
    2. '1' → logprob: -5.7533345222473145
    3. 's' → logprob: -9.128334045410156
    4. 'ensions' → logprob: -10.128334045410156
    5. '_rows' → logprob: -13.128334045410156
    6. 'ension' → logprob: -13.128334045410156
    7. '2' → logprob: -13.253334045410156
    8. ' ' → logprob: -14.003334045410156
    9. '0' → logprob: -14.128334045410156
    10. '_cols' → logprob: -15.003334045410156

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004942946252413094
    2. '):' → logprob: -8.250494003295898
    3. ' ,' → logprob: -8.375494003295898
    4. ')' → logprob: -14.500494003295898
    5. '_,' → logprob: -14.625494003295898
    6. ' ):' → logprob: -15.000494003295898
    7. ' ' → logprob: -15.250494003295898
    8. '   ' → logprob: -16.0004940032959
    9. '‌,' → logprob: -16.3754940032959
    10. ',size' → logprob: -16.5004940032959

Token 62: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.006735742092132568
    2. 'initial' → logprob: -5.006735801696777
    3. '(initial' → logprob: -12.131735801696777
    4. ' ' → logprob: -12.381735801696777
    5. '_initial' → logprob: -12.506735801696777
    6. '	initial' → logprob: -13.256735801696777
    7. ' inicial' → logprob: -13.506735801696777
    8. ')' → logprob: -13.631735801696777
    9. '   ' → logprob: -14.631735801696777
    10. '  ' → logprob: -14.756735801696777

Token 63: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2828444242477417
    2. '_' → logprob: -1.4078444242477417
    3. '_val' → logprob: -6.907844543457031
    4. ' _' → logprob: -7.907844543457031
    5. ')_' → logprob: -9.282844543457031
    6. '_Value' → logprob: -9.407844543457031
    7. ')' → logprob: -9.657844543457031
    8. '_)' → logprob: -10.907844543457031
    9. '_VALUE' → logprob: -10.907844543457031
    10. '_values' → logprob: -11.282844543457031

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012773419439326972
    2. ')' → logprob: -9.250127792358398
    3. ' ):' → logprob: -10.500127792358398
    4. ']:' → logprob: -13.750127792358398
    5. '):
' → logprob: -14.000127792358398
    6. '   ' → logprob: -14.125127792358398
    7. ':' → logprob: -14.375127792358398
    8. '=' → logprob: -14.625127792358398
    9. '）：' → logprob: -15.750127792358398
    10. ''):' → logprob: -16.6251277923584

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006713286275044084
    2. ' return' → logprob: -7.50067138671875
    3. '[' → logprob: -9.75067138671875
    4. 'return' → logprob: -10.00067138671875
    5. ' [' → logprob: -12.00067138671875
    6. '    ' → logprob: -12.37567138671875
    7. '[[' → logprob: -13.75067138671875
    8. '[
' → logprob: -14.25067138671875
    9. '	return' → logprob: -14.50067138671875
    10. '  ' → logprob: -14.62567138671875

Token 66: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02667226456105709
    2. ' return' → logprob: -3.65167236328125
    3. 'return' (adapté à ' return') → logprob: -8.40167236328125
    4. '    ' → logprob: -9.15167236328125
    5. ' [' → logprob: -10.90167236328125
    6. ' ' → logprob: -11.65167236328125
    7. '[' → logprob: -12.15167236328125
    8. '  ' → logprob: -12.52667236328125
    9. '	return' → logprob: -13.27667236328125
    10. '       ' → logprob: -13.90167236328125

Token 67: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04458391293883324
    2. ' [[[' → logprob: -3.294583797454834
    3. ' [[' → logprob: -5.044583797454834
    4. '[' → logprob: -9.794584274291992
    5. ' [' → logprob: -10.794584274291992
    6. ' ' → logprob: -15.044584274291992
    7. '[['' → logprob: -16.169584274291992
    8. '[
' → logprob: -16.669584274291992
    9. '[]' → logprob: -17.044584274291992
    10. '   ' → logprob: -17.294584274291992

Token 68: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.1472419600977446e-06
    2. ' initial' → logprob: -13.750000953674316
    3. '(initial' → logprob: -18.500001907348633
    4. '	initial' → logprob: -19.125001907348633
    5. '.initial' → logprob: -20.375001907348633
    6. '   ' → logprob: -22.000001907348633
    7. '_initial' → logprob: -22.250001907348633
    8. ' ' → logprob: -23.250001907348633
    9. '初' → logprob: -23.625001907348633
    10. 'INITIAL' → logprob: -24.250001907348633

Token 69: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.014684110297821e-06
    2. '_' → logprob: -11.750008583068848
    3. '_Value' → logprob: -15.125008583068848
    4. 'Value' → logprob: -15.250008583068848
    5. 'value' → logprob: -15.500008583068848
    6. '_VALUE' → logprob: -16.125009536743164
    7. ' _' → logprob: -16.875009536743164
    8. '_val' → logprob: -17.000009536743164
    9. '_values' → logprob: -17.875009536743164
    10. '```' → logprob: -18.000009536743164

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019621781539171934
    2. ' ]' → logprob: -6.251962184906006
    3. ']*' → logprob: -11.126961708068848
    4. ' for' → logprob: -11.376961708068848
    5. '   ' → logprob: -12.376961708068848
    6. ')' → logprob: -14.001961708068848
    7. ']]' → logprob: -14.251961708068848
    8. '']' → logprob: -14.251961708068848
    9. 'for' → logprob: -15.126961708068848
    10. ' ' → logprob: -15.626961708068848

Token 71: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14597560465335846
    2. ' for' → logprob: -2.6459755897521973
    3. ' ]' → logprob: -3.2709755897521973
    4. ']*' → logprob: -3.7709755897521973
    5. ' *' → logprob: -6.020975589752197
    6. 'for' → logprob: -7.270975589752197
    7. '*' → logprob: -7.520975589752197
    8. '    ' → logprob: -9.270976066589355
    9. ' ' → logprob: -9.895976066589355
    10. '   ' → logprob: -10.395976066589355

Token 72: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.0040854052640497684
    2. ' dim' → logprob: -5.504085540771484
    3. '(dim' → logprob: -11.879085540771484
    4. '.dim' → logprob: -19.879085540771484
    5. '_dim' → logprob: -20.254085540771484
    6. ' ' → logprob: -20.629085540771484
    7. '  ' → logprob: -21.254085540771484
    8. '3' → logprob: -21.504085540771484
    9. '    ' → logprob: -22.129085540771484
    10. '   ' → logprob: -22.254085540771484

Token 73: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. ' ' → logprob: -16.625
    5. 'dim' → logprob: -16.875
    6. '1' → logprob: -17.375
    7. '       ' → logprob: -17.5
    8. '2' → logprob: -17.5625
    9. 'cols' → logprob: -18.0
    10. '    ' → logprob: -18.125

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03121265396475792
    2. 'for' → logprob: -3.531212568283081
    3. ']' → logprob: -6.78121280670166
    4. ' ]' → logprob: -9.03121280670166
    5. '   ' → logprob: -9.28121280670166
    6. '       ' → logprob: -10.03121280670166
    7. ' ' → logprob: -10.65621280670166
    8. '    ' → logprob: -11.28121280670166
    9. '           ' → logprob: -11.65621280670166
    10. ')' → logprob: -12.28121280670166

Token 75: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38688918948173523
    2. ' _' → logprob: -1.1368892192840576
    3. '_range' → logprob: -11.886889457702637
    4. '_dim' → logprob: -12.386889457702637
    5. '_in' → logprob: -13.511889457702637
    6. ' in' → logprob: -13.636889457702637
    7. ' ' → logprob: -13.636889457702637
    8. '_j' → logprob: -14.636889457702637
    9. '_col' → logprob: -14.636889457702637
    10. '<|end|>' → logprob: -14.636889457702637

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5757985711097717
    2. '_' → logprob: -1.450798511505127
    3. ' _' → logprob: -2.450798511505127
    4. 'range' → logprob: -2.700798511505127
    5. ' range' → logprob: -3.075798511505127
    6. 'in' → logprob: -6.325798511505127
    7. '_range' → logprob: -6.575798511505127
    8. ' ' → logprob: -7.825798511505127
    9. 'd' → logprob: -9.950798988342285
    10. '	range' → logprob: -9.950798988342285

Token 77: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133561611175537
    2. ' range' → logprob: -1.3133561611175537
    3. '_' → logprob: -10.063356399536133
    4. '	range' → logprob: -10.188356399536133
    5. '_range' → logprob: -12.438356399536133
    6. ' ' → logprob: -12.813356399536133
    7. ' xrange' → logprob: -13.313356399536133
    8. ' in' → logprob: -13.438356399536133
    9. 'ran' → logprob: -13.563356399536133
    10. '(range' → logprob: -13.813356399536133

Token 78: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -1.0087516784551553e-05
    2. 'dim' → logprob: -11.62501049041748
    3. '(' → logprob: -14.12501049041748
    4. ' (' → logprob: -15.12501049041748
    5. ' dim' → logprob: -16.000009536743164
    6. '_dim' → logprob: -18.500009536743164
    7. '(di' → logprob: -20.375009536743164
    8. '.dim' → logprob: -20.625009536743164
    9. '(dm' → logprob: -20.875009536743164
    10. '(dom' → logprob: -20.875009536743164

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. 'dim' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '1' → logprob: -14.750001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '```' → logprob: -16.500001907348633
    7. '(dim' → logprob: -16.500001907348633
    8. '_dim' → logprob: -17.437501907348633
    9. ' dim' → logprob: -17.562501907348633
    10. ')' → logprob: -17.812501907348633

Token 80: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.14404886960983276
    2. ']' → logprob: -2.0190489292144775
    3. ' ]' → logprob: -7.269048690795898
    4. '   ' → logprob: -7.644048690795898
    5. ']]' → logprob: -9.269048690795898
    6. ')' → logprob: -9.769048690795898
    7. '       ' → logprob: -11.019048690795898
    8. ' ' → logprob: -12.019048690795898
    9. ']]]' → logprob: -12.269048690795898
    10. '    ' → logprob: -12.519048690795898

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13957171142101288
    2. 'for' → logprob: -2.1395716667175293
    3. ' in' → logprob: -4.764571666717529
    4. '	for' → logprob: -6.389571666717529
    5. ']' → logprob: -7.264571666717529
    6. '   ' → logprob: -7.264571666717529
    7. '    ' → logprob: -7.764571666717529
    8. 'in' → logprob: -8.139572143554688
    9. ' ]' → logprob: -9.264572143554688
    10. ' ' → logprob: -9.764572143554688

Token 82: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05808110907673836
    2. 'range' → logprob: -2.9330811500549316
    3. '(range' → logprob: -6.308081150054932
    4. '_' → logprob: -7.683081150054932
    5. '	range' → logprob: -7.933081150054932
    6. ' _' → logprob: -8.183080673217773
    7. '_range' → logprob: -8.933080673217773
    8. ' xrange' → logprob: -9.933080673217773
    9. ' in' → logprob: -10.058080673217773
    10. ' dim' → logprob: -11.058080673217773

Token 83: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20968210697174072
    2. 'in' → logprob: -2.209681987762451
    3. ' in' → logprob: -2.584681987762451
    4. ' range' → logprob: -5.584681987762451
    5. '_' → logprob: -9.08468246459961
    6. 'dim' → logprob: -9.45968246459961
    7. '(range' → logprob: -10.33468246459961
    8. 'ange' → logprob: -12.08468246459961
    9. '	range' → logprob: -12.20968246459961
    10. ' xrange' → logprob: -12.33468246459961

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31327468156814575
    2. 'range' → logprob: -1.313274621963501
    3. ' xrange' → logprob: -12.313274383544922
    4. '	range' → logprob: -12.438274383544922
    5. '(range' → logprob: -13.313274383544922
    6. '_' → logprob: -13.688274383544922
    7. '_range' → logprob: -13.688274383544922
    8. ' rang' → logprob: -15.688274383544922
    9. ' ' → logprob: -15.938274383544922
    10. 'rang' → logprob: -16.188274383544922

Token 85: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -0.0005247961380518973
    2. ' dim' → logprob: -7.875524997711182
    3. ' (' → logprob: -9.250524520874023
    4. 'dim' → logprob: -10.000524520874023
    5. '(' → logprob: -12.875524520874023
    6. ' range' → logprob: -14.750524520874023
    7. '(range' → logprob: -16.125524520874023
    8. '_dim' → logprob: -17.125524520874023
    9. ' ' → logprob: -18.000524520874023
    10. 'range' → logprob: -18.000524520874023

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -15.250000953674316
    4. '_rows' → logprob: -15.375000953674316
    5. ')' → logprob: -15.937500953674316
    6. '3' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. '`' → logprob: -17.500001907348633
    9. '_' → logprob: -17.562501907348633
    10. 'dim' → logprob: -18.000001907348633

Token 87: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008237993461079895
    2. ']' → logprob: -7.125823974609375
    3. '])]' → logprob: -11.375823974609375
    4. ')' → logprob: -12.500823974609375
    5. ')])' → logprob: -13.500823974609375
    6. '])' → logprob: -14.000823974609375
    7. ' ]' → logprob: -14.375823974609375
    8. ']]' → logprob: -14.375823974609375
    9. '   ' → logprob: -15.250823974609375
    10. ')],' → logprob: -16.000823974609375

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3024755120277405
    2. '
' → logprob: -1.4274754524230957
    3. '

' → logprob: -4.302475452423096
    4. '#' → logprob: -5.677475452423096
    5. 'd' → logprob: -5.802475452423096
    6. '\' → logprob: -7.927475452423096
    7. '```' → logprob: -8.427475929260254
    8. '<|end|>' → logprob: -9.427475929260254
    9. 'n' → logprob: -9.552475929260254
    10. '
' → logprob: -9.552475929260254

Token 89: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06081352382898331
    2. ' calculate' → logprob: -4.0608134269714355
    3. '_' → logprob: -5.3108134269714355
    4. ' process' → logprob: -5.5608134269714355
    5. ' solve' → logprob: -5.5608134269714355
    6. ' space' → logprob: -5.6858134269714355
    7. ' ' → logprob: -5.6858134269714355
    8. ' max' → logprob: -5.8108134269714355
    9. ' add' → logprob: -6.0608134269714355
    10. ' compute' → logprob: -6.0608134269714355

Token 90: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00047809764510020614
    2. ' _' → logprob: -8.25047779083252
    3. '_list' → logprob: -10.12547779083252
    4. '__' → logprob: -10.50047779083252
    5. '```' → logprob: -10.75047779083252
    6. '2' → logprob: -11.00047779083252
    7. '_s' → logprob: -11.25047779083252
    8. '_a' → logprob: -12.12547779083252
    9. '_mult' → logprob: -12.25047779083252
    10. '_string' → logprob: -12.37547779083252

Token 91: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1507653445005417
    2. '4' → logprob: -2.6507654190063477
    3. '1' → logprob: -3.1507654190063477
    4. '3' → logprob: -3.7757654190063477
    5. 'list' → logprob: -6.275765419006348
    6. 'dict' → logprob: -7.025765419006348
    7. 'nd' → logprob: -9.025765419006348
    8. '_' → logprob: -9.400765419006348
    9. 'default' → logprob: -9.400765419006348
    10. 'tuple' → logprob: -9.775765419006348

Token 92: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.388160765171051
    2. '_d' → logprob: -1.1381607055664062
    3. 'D' → logprob: -6.763160705566406
    4. '_' → logprob: -10.138160705566406
    5. ' d' → logprob: -10.388160705566406
    6. '_dim' → logprob: -10.888160705566406
    7. '```' → logprob: -11.138160705566406
    8. '_list' → logprob: -11.638160705566406
    9. '-d' → logprob: -12.388160705566406
    10. 'def' → logprob: -12.513160705566406

Token 93: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001621622359380126
    2. '_' → logprob: -6.501621723175049
    3. '_lists' → logprob: -10.50162124633789
    4. '_li' → logprob: -10.50162124633789
    5. ' _' → logprob: -10.62662124633789
    6. '_lst' → logprob: -11.25162124633789
    7. '_lista' → logprob: -12.00162124633789
    8. '_array' → logprob: -12.25162124633789
    9. '_line' → logprob: -12.50162124633789
    10. '_List' → logprob: -13.50162124633789

Token 94: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -0.011182219721376896
    2. '(' → logprob: -4.5111823081970215
    3. '(num' → logprob: -9.011181831359863
    4. ' (' → logprob: -11.511181831359863
    5. '(def' → logprob: -14.136181831359863
    6. '(d' → logprob: -14.761181831359863
    7. '(size' → logprob: -15.136181831359863
    8. '(depth' → logprob: -15.636181831359863
    9. '(n' → logprob: -16.01118278503418
    10. '(len' → logprob: -16.13618278503418

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011057964526116848
    2. 's' → logprob: -4.5110578536987305
    3. 'ensions' → logprob: -11.76105785369873
    4. '_' → logprob: -14.26105785369873
    5. ',' → logprob: -14.63605785369873
    6. 'ension' → logprob: -15.26105785369873
    7. ' s' → logprob: -15.51105785369873
    8. '(s' → logprob: -15.76105785369873
    9. '```' → logprob: -15.88605785369873
    10. '_s' → logprob: -16.011058807373047

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ' ,' → logprob: -10.000061988830566
    3. ',num' → logprob: -12.250061988830566
    4. ',d' → logprob: -12.750061988830566
    5. '<|end|>' → logprob: -12.875061988830566
    6. '‌,' → logprob: -13.125061988830566
    7. ',int' → logprob: -13.750061988830566
    8. ',size' → logprob: -14.375061988830566
    9. ',n' → logprob: -14.625061988830566
    10. ',param' → logprob: -15.250061988830566

Token 97: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.25193122029304504
    2. ' dim' → logprob: -1.5019311904907227
    3. '_dim' → logprob: -13.626931190490723
    4. '(dim' → logprob: -14.251931190490723
    5. 'dims' → logprob: -15.626931190490723
    6. '.dim' → logprob: -17.00193214416504
    7. '
' → logprob: -17.75193214416504
    8. 'Dim' → logprob: -17.87693214416504
    9. ' ' → logprob: -18.25193214416504
    10. '    ' → logprob: -18.37693214416504

Token 98: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04366800934076309
    2. '2' → logprob: -3.168668031692505
    3. '<|end|>' → logprob: -8.168667793273926
    4. 'ensions' → logprob: -8.918667793273926
    5. '_rows' → logprob: -9.043667793273926
    6. '_cols' → logprob: -10.668667793273926
    7. '```' → logprob: -11.168667793273926
    8. '_dims' → logprob: -11.418667793273926
    9. '<|end|>' → logprob: -11.418667793273926
    10. 'ension' → logprob: -11.793667793273926

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.000018119812012
    3. '‌,' → logprob: -14.500018119812012
    4. ',d' → logprob: -14.750018119812012
    5. '`,' → logprob: -16.250017166137695
    6. ',num' → logprob: -16.750017166137695
    7. '_,' → logprob: -17.625017166137695
    8. '‍,' → logprob: -17.750017166137695
    9. ',
' → logprob: -17.875017166137695
    10. '<|end|>' → logprob: -18.000017166137695

Token 100: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.20141646265983582
    2. 'dim' → logprob: -1.7014164924621582
    3. '(dim' → logprob: -13.326416015625
    4. '_dim' → logprob: -13.826416015625
    5. 'Dim' → logprob: -15.326416015625
    6. '.dim' → logprob: -16.326416015625
    7. '    ' → logprob: -16.451416015625
    8. 'dims' → logprob: -16.826416015625
    9. ' ' → logprob: -17.326416015625
    10. 'd' → logprob: -17.701416015625

Token 101: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. '_' → logprob: -18.25
    4. '```' → logprob: -19.625
    5. '３' → logprob: -20.0
    6. 'dim' → logprob: -20.75
    7. '2' → logprob: -20.75
    8. 's' → logprob: -20.875
    9. '٣' → logprob: -20.875
    10. ' ' → logprob: -21.0625

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',d' → logprob: -13.250042915344238
    4. '‌,' → logprob: -14.375042915344238
    5. ',num' → logprob: -15.125042915344238
    6. '<|end|>' → logprob: -16.125043869018555
    7. ',line' → logprob: -16.625043869018555
    8. '`,' → logprob: -16.875043869018555
    9. ',
' → logprob: -16.875043869018555
    10. ',param' → logprob: -16.875043869018555

Token 103: ' dim' (ID: 6051)
  Prédit: ' dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dim' → logprob: -0.38688093423843384
    2. 'dim' → logprob: -1.136880874633789
    3. '_dim' → logprob: -11.886880874633789
    4. '(dim' → logprob: -13.386880874633789
    5. 'Dim' → logprob: -14.886880874633789
    6. '.dim' → logprob: -15.011880874633789
    7. '    ' → logprob: -15.261880874633789
    8. 'd' → logprob: -15.261880874633789
    9. ' ' → logprob: -16.01188087463379
    10. 'dims' → logprob: -16.13688087463379

Token 104: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '1' → logprob: -17.875
    3. '' → logprob: -18.25
    4. '```' → logprob: -18.375
    5. '2' → logprob: -18.625
    6. '0' → logprob: -19.125
    7. ' ' → logprob: -19.375
    8. '۴' → logprob: -19.4375
    9. '٤' → logprob: -19.4375
    10. '４' → logprob: -20.0

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -11.625009536743164
    3. '_,' → logprob: -15.875009536743164
    4. '‌,' → logprob: -16.875009536743164
    5. ',
' → logprob: -17.375009536743164
    6. ',int' → logprob: -18.750009536743164
    7. '):' → logprob: -19.000009536743164
    8. ' ' → logprob: -19.000009536743164
    9. ',input' → logprob: -19.000009536743164
    10. 's' → logprob: -19.375009536743164

Token 106: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.011052302084863186
    2. 'initial' → logprob: -4.511052131652832
    3. '   ' → logprob: -13.886052131652832
    4. ' ' → logprob: -13.886052131652832
    5. 'Initial' → logprob: -14.261052131652832
    6. '	initial' → logprob: -14.261052131652832
    7. '_initial' → logprob: -14.386052131652832
    8. ' inicial' → logprob: -15.261052131652832
    9. '  ' → logprob: -15.511052131652832
    10. '(initial' → logprob: -15.636052131652832

Token 107: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00605038134381175
    2. '_' → logprob: -5.1310505867004395
    3. ' _' → logprob: -9.381050109863281
    4. '_values' → logprob: -11.381050109863281
    5. '_val' → logprob: -11.506050109863281
    6. 'value' → logprob: -12.381050109863281
    7. '_Value' → logprob: -12.631050109863281
    8. '```' → logprob: -13.131050109863281
    9. 'Value' → logprob: -13.256050109863281
    10. ')_' → logprob: -13.881050109863281

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001017551330733113
    2. ')' → logprob: -9.375102043151855
    3. ' ):' → logprob: -11.250102043151855
    4. '):
' → logprob: -12.625102043151855
    5. ':' → logprob: -15.000102043151855
    6. '   ' → logprob: -15.750102043151855
    7. '=' → logprob: -16.87510108947754
    8. ''):' → logprob: -17.50010108947754
    9. ']:' → logprob: -18.12510108947754
    10. ' ' → logprob: -18.25010108947754

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014163076411932707
    2. ' return' → logprob: -7.501416206359863
    3. ')' → logprob: -8.001416206359863
    4. 'return' → logprob: -8.626416206359863
    5. '):' → logprob: -9.376416206359863
    6. '[' → logprob: -9.626416206359863
    7. ':' → logprob: -9.626416206359863
    8. '):
' → logprob: -9.626416206359863
    9. '=' → logprob: -10.876416206359863
    10. ':return' → logprob: -11.501416206359863

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05277949199080467
    2. ' return' → logprob: -3.30277943611145
    3. '[[' → logprob: -4.802779674530029
    4. '   ' → logprob: -5.052779674530029
    5. 'def' → logprob: -11.802779197692871
    6. '	return' → logprob: -12.177779197692871
    7. ' [[[' → logprob: -12.677779197692871
    8. ':return' → logprob: -12.677779197692871
    9. ')' → logprob: -12.802779197692871
    10. ' ' → logprob: -12.927779197692871

Token 111: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -4.4060561776859686e-05
    2. ' [[' → logprob: -10.500043869018555
    3. ' [[[' → logprob: -11.125043869018555
    4. '[' → logprob: -13.250043869018555
    5. '   ' → logprob: -17.500043869018555
    6. '[
' → logprob: -17.875043869018555
    7. ' ' → logprob: -18.625043869018555
    8. ' [' → logprob: -18.625043869018555
    9. 'create' → logprob: -18.875043869018555
    10. '[['' → logprob: -19.500043869018555

Token 112: '[[' (ID: 26245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.451116051815916e-05
    2. ' [' → logprob: -11.625024795532227
    3. '[[' → logprob: -11.625024795532227
    4. 'initial' → logprob: -12.125024795532227
    5. 'create' → logprob: -14.250024795532227
    6. '(initial' → logprob: -15.625024795532227
    7. '([' → logprob: -16.750024795532227
    8. '   ' → logprob: -16.875024795532227
    9. '[get' → logprob: -16.875024795532227
    10. '[
' → logprob: -17.000024795532227

Token 113: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -5.512236498361744e-07
    2. ' initial' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.875
    4. '	initial' → logprob: -18.875
    5. '(initial' → logprob: -19.875
    6. '.initial' → logprob: -20.75
    7. '_initial' → logprob: -20.75
    8. ' ' → logprob: -22.75
    9. 'initializer' → logprob: -23.875
    10. '    ' → logprob: -24.25

Token 114: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.791440293658525e-05
    2. 'value' → logprob: -9.625078201293945
    3. '_' → logprob: -11.750078201293945
    4. 'initial' → logprob: -13.500078201293945
    5. 'Value' → logprob: -13.875078201293945
    6. 'alue' → logprob: -13.875078201293945
    7. '_VALUE' → logprob: -15.250078201293945
    8. '-value' → logprob: -16.000078201293945
    9. '_Value' → logprob: -16.250078201293945
    10. '_initial' → logprob: -17.000078201293945

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002214172709500417
    2. ' ]' → logprob: -9.000221252441406
    3. ']*' → logprob: -9.250221252441406
    4. ' for' → logprob: -14.000221252441406
    5. '*' → logprob: -14.750221252441406
    6. '']' → logprob: -15.250221252441406
    7. ' *' → logprob: -15.875221252441406
    8. '"]' → logprob: -16.000221252441406
    9. ')' → logprob: -16.625221252441406
    10. ']]' → logprob: -17.625221252441406

Token 116: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006209854502230883
    2. ']*' → logprob: -5.131209850311279
    3. ' ]' → logprob: -8.506210327148438
    4. '*' → logprob: -10.006210327148438
    5. ' for' → logprob: -10.381210327148438
    6. ' *' → logprob: -13.256210327148438
    7. 'for' → logprob: -14.256210327148438
    8. ']]' → logprob: -15.881210327148438
    9. '"]' → logprob: -16.256210327148438
    10. '']' → logprob: -16.381210327148438

Token 117: ' dim' (ID: 6051)
  Prédit: 'dim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dim' → logprob: -0.001929228543303907
    2. ' dim' → logprob: -6.25192928314209
    3. '(dim' → logprob: -14.37692928314209
    4. '_dim' → logprob: -17.251928329467773
    5. 'd' → logprob: -18.626928329467773
    6. '	d' → logprob: -19.251928329467773
    7. '.dim' → logprob: -19.751928329467773
    8. ' ' → logprob: -19.876928329467773
    9. '4' → logprob: -20.001928329467773
    10. '    ' → logprob: -20.126928329467773

Token 118: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '3' → logprob: -17.5
    3. '```' → logprob: -19.5
    4. '' → logprob: -19.75
    5. '_' → logprob: -19.875
    6. '٤' → logprob: -20.25
    7. '৪' → logprob: -20.5
    8. '_cols' → logprob: -20.5
    9. 'cols' → logprob: -20.625
    10. '1' → logprob: -20.75

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07902154326438904
    2. 'for' → logprob: -2.579021453857422
    3. ' ' → logprob: -9.829021453857422
    4. '	for' → logprob: -10.204021453857422
    5. '   ' → logprob: -11.329021453857422
    6. '    ' → logprob: -12.079021453857422
    7. ')' → logprob: -12.079021453857422
    8. '        ' → logprob: -12.204021453857422
    9. '       ' → logprob: -12.454021453857422
    10. '         ' → logprob: -12.954021453857422

Token 120: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2014288455247879
    2. '_' → logprob: -1.7014288902282715
    3. ' in' → logprob: -11.326428413391113
    4. ' ' → logprob: -12.951428413391113
    5. '_in' → logprob: -14.076428413391113
    6. ' _
' → logprob: -16.20142936706543
    7. '_range' → logprob: -16.45142936706543
    8. '<|end|>' → logprob: -17.07642936706543
    9. '_

' → logprob: -17.95142936706543
    10. '_
' → logprob: -17.95142936706543

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004414332564920187
    2. 'in' → logprob: -5.6294145584106445
    3. '_' → logprob: -7.5044145584106445
    4. ' _' → logprob: -9.004414558410645
    5. 'range' → logprob: -9.129414558410645
    6. ' range' → logprob: -11.379414558410645
    7. 'n' → logprob: -11.754414558410645
    8. ' ' → logprob: -12.254414558410645
    9. 'ange' → logprob: -12.629414558410645
    10. '_in' → logprob: -13.129414558410645

Token 122: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4130634665489197
    2. ' range' → logprob: -1.4130635261535645
    3. 'range' → logprob: -2.4130635261535645
    4. ' _' → logprob: -5.9130635261535645
    5. ' in' → logprob: -6.0380635261535645
    6. '_range' → logprob: -8.038063049316406
    7. '_in' → logprob: -11.288063049316406
    8. 'in' → logprob: -11.913063049316406
    9. 'ange' → logprob: -12.413063049316406
    10. ' ' → logprob: -13.038063049316406

Token 123: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -16.125001907348633
    4. 'dim' → logprob: -16.375001907348633
    5. '(di' → logprob: -19.125001907348633
    6. ' dim' → logprob: -19.875001907348633
    7. '(dom' → logprob: -20.000001907348633
    8. '(depth' → logprob: -20.625001907348633
    9. '(def' → logprob: -20.875001907348633
    10. '(
' → logprob: -21.000001907348633

Token 124: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.661626634420827e-05
    2. '2' → logprob: -9.375086784362793
    3. ' ' → logprob: -14.250086784362793
    4. '1' → logprob: -14.375086784362793
    5. 'dim' → logprob: -16.375085830688477
    6. '   ' → logprob: -16.687585830688477
    7. '_cols' → logprob: -16.687585830688477
    8. '```' → logprob: -17.062585830688477
    9. ')' → logprob: -17.187585830688477
    10. 'cols' → logprob: -17.437585830688477

Token 125: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06249403953552246
    2. ']' → logprob: -2.8124940395355225
    3. ']]' → logprob: -7.562494277954102
    4. ')' → logprob: -12.312494277954102
    5. ' ]' → logprob: -14.312494277954102
    6. ']
' → logprob: -14.562494277954102
    7. '   ' → logprob: -14.812494277954102
    8. ']]]' → logprob: -15.187494277954102
    9. '}]' → logprob: -15.437494277954102
    10. '])' → logprob: -15.937494277954102

Token 126: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021851973608136177
    2. 'for' → logprob: -3.8968520164489746
    3. ' in' → logprob: -7.021852016448975
    4. '    ' → logprob: -8.396851539611816
    5. ']' → logprob: -9.146851539611816
    6. '	for' → logprob: -10.396851539611816
    7. '   ' → logprob: -10.771851539611816
    8. '        ' → logprob: -11.271851539611816
    9. ' ' → logprob: -11.771851539611816
    10. ' ]' → logprob: -12.521851539611816

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004240093287080526
    2. '_' → logprob: -5.504240036010742
    3. ' range' → logprob: -8.879240036010742
    4. ' ' → logprob: -11.129240036010742
    5. ' in' → logprob: -12.129240036010742
    6. '_range' → logprob: -13.254240036010742
    7. '_in' → logprob: -15.379240036010742
    8. '<|end|>' → logprob: -15.504240036010742
    9. 'range' → logprob: -17.379240036010742
    10. ' _
' → logprob: -17.504240036010742

Token 128: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7817650437355042
    2. 'range' → logprob: -0.7817650437355042
    3. ' in' → logprob: -3.0317649841308594
    4. '_' → logprob: -3.4067649841308594
    5. ' _' → logprob: -6.406764984130859
    6. '_range' → logprob: -6.406764984130859
    7. 'in' → logprob: -9.28176498413086
    8. '(range' → logprob: -10.90676498413086
    9. '_in' → logprob: -11.65676498413086
    10. ' xrange' → logprob: -13.03176498413086

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10033143311738968
    2. ' range' → logprob: -2.3503315448760986
    3. '_range' → logprob: -9.22533130645752
    4. '_' → logprob: -10.72533130645752
    5. '(range' → logprob: -12.72533130645752
    6. '	range' → logprob: -14.35033130645752
    7. ' xrange' → logprob: -14.35033130645752
    8. ' _' → logprob: -16.850332260131836
    9. ' ' → logprob: -18.100332260131836
    10. '    ' → logprob: -18.100332260131836

Token 130: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.875
    3. 'dim' → logprob: -16.125
    4. '(' → logprob: -16.25
    5. ' dim' → logprob: -19.75
    6. '(dom' → logprob: -20.125
    7. '(di' → logprob: -20.25
    8. '(diff' → logprob: -20.875
    9. '_dim' → logprob: -21.5
    10. '(depth' → logprob: -21.5

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030185774085111916
    2. 'dim' → logprob: -8.1253023147583
    3. '(dim' → logprob: -12.7503023147583
    4. ' dim' → logprob: -14.7503023147583
    5. '_' → logprob: -14.8753023147583
    6. ' ' → logprob: -15.1253023147583
    7. '_dim' → logprob: -15.2503023147583
    8. '_rows' → logprob: -15.7503023147583
    9. '₂' → logprob: -15.7503023147583
    10. 't' → logprob: -15.8753023147583

Token 132: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2520501911640167
    2. ')]' → logprob: -1.5020501613616943
    3. ']]' → logprob: -9.502050399780273
    4. ' ]' → logprob: -10.127050399780273
    5. ')' → logprob: -13.127050399780273
    6. '}]' → logprob: -13.377050399780273
    7. ']
' → logprob: -13.502050399780273
    8. '],' → logprob: -14.127050399780273
    9. '   ' → logprob: -15.002050399780273
    10. ']}' → logprob: -16.002050399780273

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0380566380918026
    2. 'for' → logprob: -3.2880566120147705
    3. '	for' → logprob: -11.538056373596191
    4. ' in' → logprob: -12.288056373596191
    5. '   ' → logprob: -15.038056373596191
    6. '    ' → logprob: -15.413056373596191
    7. '        ' → logprob: -16.163057327270508
    8. ']' → logprob: -16.538057327270508
    9. ' ' → logprob: -16.663057327270508
    10. '       ' → logprob: -17.038057327270508

Token 134: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0003365350130479783
    2. '_' → logprob: -8.000336647033691
    3. ' range' → logprob: -14.875336647033691
    4. ' ' → logprob: -14.875336647033691
    5. '_range' → logprob: -15.000336647033691
    6. ' ' → logprob: -17.125335693359375
    7. ' in' → logprob: -18.250335693359375
    8. '_in' → logprob: -18.250335693359375
    9. ' _
' → logprob: -19.125335693359375
    10. 'range' → logprob: -20.750335693359375

Token 135: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10487069189548492
    2. ' in' → logprob: -2.7298707962036133
    3. ' range' → logprob: -3.7298707962036133
    4. 'in' → logprob: -4.854870796203613
    5. '_range' → logprob: -6.354870796203613
    6. '_' → logprob: -7.354870796203613
    7. '(range' → logprob: -9.104870796203613
    8. ' _' → logprob: -10.229870796203613
    9. '_in' → logprob: -12.229870796203613
    10. '	range' → logprob: -12.729870796203613

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3145543336868286
    2. ' range' → logprob: -1.3145543336868286
    3. 'dim' → logprob: -6.939554214477539
    4. '_range' → logprob: -8.439554214477539
    5. '(range' → logprob: -9.564554214477539
    6. ' dim' → logprob: -11.064554214477539
    7. '(dim' → logprob: -11.314554214477539
    8. '	range' → logprob: -12.439554214477539
    9. '_' → logprob: -12.814554214477539
    10. ' xrange' → logprob: -13.689554214477539

Token 137: '(dim' (ID: 80871)
  Prédit: '(dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dim' → logprob: -0.1753924936056137
    2. ' range' → logprob: -2.6753923892974854
    3. 'range' → logprob: -3.3003923892974854
    4. 'dim' → logprob: -3.3003923892974854
    5. ' dim' → logprob: -4.0503926277160645
    6. '(range' → logprob: -7.3003926277160645
    7. '_dim' → logprob: -9.675392150878906
    8. '_range' → logprob: -10.175392150878906
    9. ' (' → logprob: -10.300392150878906
    10. '_' → logprob: -11.300392150878906

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '_rows' → logprob: -17.5625
    3. 'dim' → logprob: -17.875
    4. '１' → logprob: -18.25
    5. '```' → logprob: -18.375
    6. '_' → logprob: -18.6875
    7. 'def' → logprob: -19.0
    8. '۱' → logprob: -19.1875
    9. ')' → logprob: -19.375
    10. '১' → logprob: -19.6875

Token 139: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0619741789996624
    2. ']' → logprob: -2.811974287033081
    3. ']]' → logprob: -12.43697452545166
    4. '>]' → logprob: -14.06197452545166
    5. '}]' → logprob: -14.31197452545166
    6. ' ]' → logprob: -15.06197452545166
    7. '])]' → logprob: -15.43697452545166
    8. '()]' → logprob: -15.56197452545166
    9. ']}' → logprob: -15.81197452545166
    10. '])' → logprob: -16.311973571777344

Token 140: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33339911699295044
    2. ':' → logprob: -1.9583990573883057
    3. 'def' → logprob: -2.3333990573883057
    4. '(' → logprob: -3.2083990573883057
    5. '):' → logprob: -6.083399295806885
    6. ':def' → logprob: -6.708399295806885
    7. '():' → logprob: -7.208399295806885
    8. ']' → logprob: -8.083398818969727
    9. '()' → logprob: -8.333398818969727
    10. ' def' → logprob: -9.583398818969727

Token 141: ' ceil' (ID: 35964)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3777865767478943
    2. ' create' → logprob: -2.002786636352539
    3. ' read' → logprob: -3.752786636352539
    4. ' factorial' → logprob: -3.877786636352539
    5. ' parse' → logprob: -4.127786636352539
    6. ' is' → logprob: -4.502786636352539
    7. ' ' → logprob: -4.627786636352539
    8. ' calculate' → logprob: -4.752786636352539
    9. ' max' → logprob: -4.752786636352539
    10. ' solve' → logprob: -4.752786636352539

Token 142: '_div' (ID: 36926)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13646849989891052
    2. '_div' → logprob: -2.1364684104919434
    3. '_' → logprob: -4.761468410491943
    4. 'div' → logprob: -7.511468410491943
    5. '_(' → logprob: -10.261468887329102
    6. '(x' → logprob: -10.261468887329102
    7. '_s' → logprob: -10.511468887329102
    8. '_DIV' → logprob: -10.886468887329102
    9. '(_' → logprob: -11.011468887329102
    10. '_space' → logprob: -11.011468887329102

Token 143: 'ision' (ID: 3625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13430103659629822
    2. '(a' → logprob: -2.634300947189331
    3. 'ision' → logprob: -3.009300947189331
    4. 'ide' → logprob: -5.50930118560791
    5. '(x' → logprob: -8.38430118560791
    6. '(n' → logprob: -8.75930118560791
    7. 'ison' → logprob: -10.63430118560791
    8. '(i' → logprob: -10.63430118560791
    9. '(num' → logprob: -11.13430118560791
    10. ' (' → logprob: -11.50930118560791

Token 144: '(n' (ID: 2406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08280175924301147
    2. '(' → logprob: -2.5828018188476562
    3. '(x' → logprob: -6.207801818847656
    4. '(n' → logprob: -6.707801818847656
    5. '(num' → logprob: -7.832801818847656
    6. '(div' → logprob: -9.082801818847656
    7. '(number' → logprob: -9.457801818847656
    8. ' (' → logprob: -9.832801818847656
    9. '(value' → logprob: -11.207801818847656
    10. 'a' → logprob: -12.457801818847656

Token 145: 'umerator' (ID: 152035)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000511091377120465
    2. 'umerator' → logprob: -8.250511169433594
    3. 'a' → logprob: -9.000511169433594
    4. ',a' → logprob: -10.000511169433594
    5. ' ,' → logprob: -10.500511169433594
    6. ',n' → logprob: -10.625511169433594
    7. ',num' → logprob: -11.125511169433594
    8. 'umer' → logprob: -11.875511169433594
    9. ',
' → logprob: -13.000511169433594
    10. ',x' → logprob: -14.375511169433594

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030697984038852155
    2. ',n' → logprob: -8.125307083129883
    3. ' ,' → logprob: -11.625307083129883
    4. ',num' → logprob: -13.625307083129883
    5. ',
' → logprob: -14.500307083129883
    6. '‌,' → logprob: -16.625307083129883
    7. ',int' → logprob: -17.125307083129883
    8. 'umerator' → logprob: -17.750307083129883
    9. '   ' → logprob: -18.000307083129883
    10. 'n' → logprob: -18.500307083129883

Token 147: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.01112339273095131
    2. ' denominator' → logprob: -4.511123180389404
    3. 'div' → logprob: -9.636123657226562
    4. '   ' → logprob: -12.386123657226562
    5. 'divider' → logprob: -13.136123657226562
    6. '_den' → logprob: -13.386123657226562
    7. ' divisor' → logprob: -14.636123657226562
    8. ' den' → logprob: -14.886123657226562
    9. ',' → logprob: -15.011123657226562
    10. 'numer' → logprob: -15.011123657226562

Token 148: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001438266917830333
    2. ')' → logprob: -8.875144004821777
    3. ' ):' → logprob: -12.875144004821777
    4. '):
' → logprob: -13.750144004821777
    5. ']:' → logprob: -16.00014305114746
    6. ':' → logprob: -16.62514305114746
    7. '   ' → logprob: -17.62514305114746
    8. '）：' → logprob: -18.12514305114746
    9. ')：' → logprob: -18.25014305114746
    10. '):
' → logprob: -18.37514305114746

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034882307052612305
    2. '2' → logprob: -3.9098823070526123
    3. ' ' → logprob: -4.534882545471191
    4. ')' → logprob: -6.159882545471191
    5. '):
' → logprob: -8.034882545471191
    6. ' )' → logprob: -8.284882545471191
    7. '):' → logprob: -8.284882545471191
    8. '   ' → logprob: -8.534882545471191
    9. ')]' → logprob: -8.534882545471191
    10. 'den' → logprob: -10.034882545471191

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021923754829913378
    2. ')' → logprob: -6.127192497253418
    3. ' ):' → logprob: -12.502192497253418
    4. '):
' → logprob: -13.002192497253418
    5. ']:' → logprob: -14.502192497253418
    6. ':' → logprob: -14.752192497253418
    7. '）：' → logprob: -16.7521915435791
    8. '   ' → logprob: -16.7521915435791
    9. ')：' → logprob: -16.8771915435791
    10. ' ' → logprob: -17.0021915435791

Token 151: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04563244432210922
    2. '   ' → logprob: -3.2956323623657227
    3. '):' → logprob: -5.045632362365723
    4. ':
' → logprob: -7.045632362365723
    5. ' :' → logprob: -9.170632362365723
    6. ':return' → logprob: -9.295632362365723
    7. '):
' → logprob: -10.545632362365723
    8. '():' → logprob: -11.920632362365723
    9. ' return' → logprob: -12.045632362365723
    10. '/' → logprob: -12.920632362365723

Token 152: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2635996639728546
    2. '   ' → logprob: -1.5135996341705322
    3. ' return' → logprob: -4.513599872589111
    4. 'import' → logprob: -7.513599872589111
    5. 'if' → logprob: -9.638599395751953
    6. '	return' → logprob: -12.263599395751953
    7. '(n' → logprob: -12.388599395751953
    8. '(return' → logprob: -12.388599395751953
    9. 'from' → logprob: -12.638599395751953
    10. ' ' → logprob: -12.638599395751953

Token 153: ' int' (ID: 677)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2960089445114136
    2. '(n' → logprob: -1.4210089445114136
    3. ' -' → logprob: -4.296009063720703
    4. '-' → logprob: -6.921009063720703
    5. ' ' → logprob: -9.421009063720703
    6. '-(' → logprob: -10.421009063720703
    7. '   ' → logprob: -11.921009063720703
    8. '(num' → logprob: -12.046009063720703
    9. ' -(' → logprob: -12.671009063720703
    10. '  ' → logprob: -13.046009063720703

Token 154: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9123241901397705
    2. '(-' → logprob: -1.0373241901397705
    3. '(' → logprob: -1.5373241901397705
    4. '((' → logprob: -3.6623241901397705
    5. '(n' → logprob: -5.912323951721191
    6. ' -' → logprob: -8.287323951721191
    7. '-(' → logprob: -8.662323951721191
    8. '-n' → logprob: -9.162323951721191
    9. '(
' → logprob: -9.537323951721191
    10. '(-(' → logprob: -10.412323951721191

Token 155: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1653105020523071
    2. '(-' → logprob: -1.2903105020523071
    3. '-n' → logprob: -1.2903105020523071
    4. '-(' → logprob: -2.7903103828430176
    5. '(n' → logprob: -3.0403103828430176
    6. 'numer' → logprob: -4.165310382843018
    7. '(' → logprob: -4.665310382843018
    8. '(-(' → logprob: -6.415310382843018
    9. ' -' → logprob: -7.290310382843018
    10. ' numerator' → logprob: -7.415310382843018

Token 156: 'numer' (ID: 81553)
  Prédit: 'numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.06994210183620453
    2. ' numerator' → logprob: -2.694941997528076
    3. 'umerator' → logprob: -12.694942474365234
    4. 'Numer' → logprob: -14.194942474365234
    5. ' numer' → logprob: -14.694942474365234
    6. 'num' → logprob: -14.944942474365234
    7. 'numeric' → logprob: -14.944942474365234
    8. 'n' → logprob: -15.569942474365234
    9. '   ' → logprob: -15.694942474365234
    10. ' ' → logprob: -15.819942474365234

Token 157: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -9.088346359931165e-07
    2. 'tor' → logprob: -14.500000953674316
    3. 'ATOR' → logprob: -15.250000953674316
    4. 'атор' → logprob: -17.375
    5. 'umerator' → logprob: -17.375
    6. 'or' → logprob: -17.5
    7. 'otor' → logprob: -18.25
    8. 'a' → logprob: -18.375
    9. 'ato' → logprob: -18.5
    10. 's' → logprob: -18.875

Token 158: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.53191077709198
    2. '/' → logprob: -1.28191077709198
    3. '//' → logprob: -2.5319108963012695
    4. ' /' → logprob: -2.9069108963012695
    5. ' ' → logprob: -7.4069108963012695
    6. ' ' → logprob: -8.65691089630127
    7. ')' → logprob: -11.15691089630127
    8. '///' → logprob: -11.40691089630127
    9. '	' → logprob: -11.65691089630127
    10. '```' → logprob: -11.65691089630127

Token 159: ' denominator' (ID: 101279)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.47408369183540344
    2. ' denominator' → logprob: -0.974083662033081
    3. ' ' → logprob: -12.22408390045166
    4. '_den' → logprob: -13.97408390045166
    5. ' den' → logprob: -15.09908390045166
    6. '   ' → logprob: -15.59908390045166
    7. '.den' → logprob: -15.84908390045166
    8. '-den' → logprob: -15.97408390045166
    9. '  ' → logprob: -16.224082946777344
    10. ' numerator' → logprob: -16.724082946777344

Token 160: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04862109199166298
    2. ')' → logprob: -3.04862117767334
    3. ')))' → logprob: -10.54862117767334
    4. '))
' → logprob: -12.29862117767334
    5. ')
' → logprob: -13.17362117767334
    6. ' ))' → logprob: -14.29862117767334
    7. '()))' → logprob: -16.173620223999023
    8. ' )' → logprob: -16.298620223999023
    9. ')}' → logprob: -16.923620223999023
    10. '))))' → logprob: -17.423620223999023

Token 161: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8059706687927246
    2. '<|end|>' → logprob: -1.3059706687927246
    3. '
' → logprob: -1.5559706687927246
    4. 'def' → logprob: -2.9309706687927246
    5. '(' → logprob: -5.555970668792725
    6. '\n' → logprob: -5.680970668792725
    7. '#' → logprob: -6.055970668792725
    8. '<|end|>' → logprob: -6.555970668792725
    9. '()' → logprob: -7.305970668792725
    10. ')
' → logprob: -7.430970668792725

Token 162: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19023895263671875
    2. ' floor' → logprob: -2.3152389526367188
    3. 'main' → logprob: -3.3152389526367188
    4. 'floor' → logprob: -4.315238952636719
    5. ' gcd' → logprob: -5.190238952636719
    6. ' max' → logprob: -5.815238952636719
    7. ' safe' → logprob: -5.815238952636719
    8. ' def' → logprob: -6.565238952636719
    9. ' l' → logprob: -6.815238952636719
    10. ' parse' → logprob: -6.940238952636719

Token 163: '_integer' (ID: 82911)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.9071525931358337
    2. '_line' → logprob: -0.9071525931358337
    3. '_int' → logprob: -1.9071526527404785
    4. '_' → logprob: -3.7821526527404785
    5. '_integer' → logprob: -4.6571526527404785
    6. '()' → logprob: -5.0321526527404785
    7. '_list' → logprob: -6.7821526527404785
    8. '_array' → logprob: -7.0321526527404785
    9. '_number' → logprob: -7.0321526527404785
    10. 'int' → logprob: -7.5321526527404785

Token 164: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002613825025036931
    2. '_line' → logprob: -6.2526140213012695
    3. '()' → logprob: -8.12761402130127
    4. '():
' → logprob: -8.25261402130127
    5. 's' → logprob: -10.25261402130127
    6. ' ():' → logprob: -10.50261402130127
    7. '_list' → logprob: -10.50261402130127
    8. '_input' → logprob: -11.50261402130127
    9. 'line' → logprob: -12.12761402130127
    10. '()>' → logprob: -12.25261402130127

Token 165: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03910406678915024
    2. ' ()' → logprob: -3.2891039848327637
    3. '():' → logprob: -8.164104461669922
    4. '(' → logprob: -8.164104461669922
    5. ' (' → logprob: -8.664104461669922
    6. '   ' → logprob: -9.414104461669922
    7. ' return' → logprob: -9.664104461669922
    8. 'return' → logprob: -10.289104461669922
    9. 'read' → logprob: -10.664104461669922
    10. '()
' → logprob: -10.789104461669922

Token 166: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.190773606300354
    2. ' return' → logprob: -2.6907734870910645
    3. ' int' → logprob: -2.9407734870910645
    4. 'return' (adapté à ' return') → logprob: -2.9407734870910645
    5. '   ' → logprob: -8.565773963928223
    6. ' ' → logprob: -12.065773963928223
    7. '(int' → logprob: -12.815773963928223
    8. '=int' → logprob: -13.190773963928223
    9. '    ' → logprob: -14.940773963928223
    10. '  ' → logprob: -15.190773963928223

Token 167: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029753148555755615
    2. 'int' → logprob: -3.5297532081604004
    3. '(int' → logprob: -13.154752731323242
    4. '	int' → logprob: -14.654752731323242
    5. '<int' → logprob: -16.279752731323242
    6. ' ' → logprob: -16.654752731323242
    7. '=int' → logprob: -16.779752731323242
    8. '   ' → logprob: -17.029752731323242
    9. '[int' → logprob: -17.529752731323242
    10. '  ' → logprob: -17.779752731323242

Token 168: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.47413748502731323
    2. '(' → logprob: -0.9741374850273132
    3. 'read' → logprob: -10.099137306213379
    4. '(sys' → logprob: -11.599137306213379
    5. '(
' → logprob: -12.224137306213379
    6. ' (' → logprob: -14.099137306213379
    7. '(create' → logprob: -14.599137306213379
    8. '(Read' → logprob: -14.599137306213379
    9. '()' → logprob: -14.724137306213379
    10. '('' → logprob: -14.849137306213379

Token 169: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -12.625003814697266
    3. '_in' → logprob: -15.000003814697266
    4. 'input' → logprob: -16.625003814697266
    5. '_line' → logprob: -17.500003814697266
    6. '_output' → logprob: -17.750003814697266
    7. '_integer' → logprob: -17.750003814697266
    8. '_inputs' → logprob: -18.000003814697266
    9. '_INPUT' → logprob: -18.000003814697266
    10. ' _' → logprob: -18.250003814697266

Token 170: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.000000953674316
    3. 'line' → logprob: -15.250000953674316
    4. '_LINE' → logprob: -16.0
    5. '_l' → logprob: -16.875
    6. '()' → logprob: -18.875
    7. '_string' → logprob: -19.0
    8. '_li' → logprob: -19.0
    9. ')_' → logprob: -19.25
    10. '_lines' → logprob: -19.375

Token 171: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007135047344490886
    2. '()' → logprob: -7.250713348388672
    3. ')' → logprob: -13.625713348388672
    4. '())
' → logprob: -14.125713348388672
    5. ' ())' → logprob: -14.375713348388672
    6. '()))' → logprob: -14.500713348388672
    7. '()]' → logprob: -15.750713348388672
    8. '().' → logprob: -15.875713348388672
    9. '();)' → logprob: -16.500713348388672
    10. '()
' → logprob: -16.625713348388672

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04465561360120773
    2. '<|end|>' → logprob: -3.5446555614471436
    3. '
' → logprob: -4.669655799865723
    4. '()' → logprob: -5.794655799865723
    5. '

' → logprob: -7.169655799865723
    6. ' def' → logprob: -7.919655799865723
    7. '(' → logprob: -8.294655799865723
    8. '#' → logprob: -8.919655799865723
    9. '<|end|>' → logprob: -8.919655799865723
    10. ')' → logprob: -9.044655799865723

Token 173: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.11745123565196991
    2. 'read' → logprob: -2.2424511909484863
    3. ' main' → logprob: -5.742451190948486
    4. ' split' → logprob: -7.867451190948486
    5. 'split' → logprob: -8.742451667785645
    6. 'main' → logprob: -8.992451667785645
    7. '_' → logprob: -8.992451667785645
    8. '_read' → logprob: -9.117451667785645
    9. ' parse' → logprob: -9.242451667785645
    10. ' write' → logprob: -9.617451667785645

Token 174: '_integer' (ID: 82911)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.903753936290741
    2. '_integer' → logprob: -0.903753936290741
    3. '_' → logprob: -1.9037539958953857
    4. '_in' → logprob: -3.7787539958953857
    5. '_multiple' → logprob: -5.653753757476807
    6. '_line' → logprob: -5.778753757476807
    7. '_int' → logprob: -5.903753757476807
    8. '_string' → logprob: -6.278753757476807
    9. '_float' → logprob: -6.403753757476807
    10. '_tuple' → logprob: -6.403753757476807

Token 175: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08517485111951828
    2. '_list' → logprob: -2.585174798965454
    3. '_array' → logprob: -5.460175037384033
    4. '()' → logprob: -6.335175037384033
    5. '_s' → logprob: -9.085174560546875
    6. '_line' → logprob: -9.710174560546875
    7. 'list' → logprob: -10.585174560546875
    8. '_tuple' → logprob: -11.085174560546875
    9. '_' → logprob: -11.960174560546875
    10. '_lst' → logprob: -12.335174560546875

Token 176: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00871384609490633
    2. '():
' → logprob: -4.758713722229004
    3. '()' → logprob: -9.758713722229004
    4. ' ():' → logprob: -10.383713722229004
    5. '():

' → logprob: -12.883713722229004
    6. ' ()' → logprob: -13.008713722229004
    7. '(' → logprob: -13.008713722229004
    8. '():
' → logprob: -13.508713722229004
    9. '(lambda' → logprob: -15.008713722229004
    10. '(line' → logprob: -15.133713722229004

Token 177: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.029987666755914688
    2. '():
' → logprob: -3.5299875736236572
    3. '()' → logprob: -8.404987335205078
    4. 'return' → logprob: -12.529987335205078
    5. '):' → logprob: -12.779987335205078
    6. '():
' → logprob: -13.154987335205078
    7. ' ():' → logprob: -13.529987335205078
    8. '   ' → logprob: -13.779987335205078
    9. ':' → logprob: -14.404987335205078
    10. '():

' → logprob: -14.779987335205078

Token 178: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.35912850499153137
    2. 'lambda' → logprob: -1.609128475189209
    3. 'return' (adapté à ' return') → logprob: -2.359128475189209
    4. 'list' → logprob: -5.109128475189209
    5. '   ' → logprob: -6.984128475189209
    6. ' map' → logprob: -9.359128952026367
    7. ' lambda' → logprob: -10.109128952026367
    8. 'def' → logprob: -10.734128952026367
    9. ' return' → logprob: -11.109128952026367
    10. '(lambda' → logprob: -11.609128952026367

Token 179: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5551109313964844
    2. 'map' → logprob: -1.0551109313964844
    3. ' list' → logprob: -2.8051109313964844
    4. ' map' → logprob: -4.055110931396484
    5. '	map' → logprob: -13.805110931396484
    6. '(map' → logprob: -14.180110931396484
    7. 'tuple' → logprob: -14.180110931396484
    8. '   ' → logprob: -14.430110931396484
    9. ' ' → logprob: -15.180110931396484
    10. '	list' → logprob: -15.555110931396484

Token 180: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008074867073446512
    2. '(' → logprob: -7.125807285308838
    3. '<int' → logprob: -13.125807762145996
    4. 'int' → logprob: -14.875807762145996
    5. '=int' → logprob: -15.375807762145996
    6. '(
' → logprob: -15.500807762145996
    7. '(lambda' → logprob: -16.37580680847168
    8. ' (' → logprob: -16.87580680847168
    9. '[int' → logprob: -17.25080680847168
    10. '(

' → logprob: -18.12580680847168

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25659990310668945
    2. '(read' → logprob: -1.5065999031066895
    3. 'read' → logprob: -5.5065999031066895
    4. '(' → logprob: -7.8815999031066895
    5. ' ,' → logprob: -9.381599426269531
    6. '(),' → logprob: -9.631599426269531
    7. ' (' → logprob: -10.631599426269531
    8. ' read' → logprob: -10.756599426269531
    9. ')' → logprob: -11.381599426269531
    10. ',(' → logprob: -12.506599426269531

Token 182: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.018158020451664925
    2. ' read' → logprob: -4.018157958984375
    3. '(read' → logprob: -12.143157958984375
    4. '	read' → logprob: -13.018157958984375
    5. ' ' → logprob: -15.393157958984375
    6. '   ' → logprob: -15.768157958984375
    7. '  ' → logprob: -16.143157958984375
    8. '.read' → logprob: -16.893157958984375
    9. '_read' → logprob: -17.643157958984375
    10. ')' → logprob: -18.143157958984375

Token 183: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.723352049040841e-06
    2. 'input' → logprob: -13.250004768371582
    3. '_' → logprob: -13.875004768371582
    4. '(' → logprob: -14.125004768371582
    5. '(input' → logprob: -14.500004768371582
    6. '(_' → logprob: -14.875004768371582
    7. '(read' → logprob: -15.500004768371582
    8. '_INPUT' → logprob: -16.500003814697266
    9. '()' → logprob: -17.375003814697266
    10. '_inputs' → logprob: -17.750003814697266

Token 184: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -8.77627644513268e-06
    2. 'line' → logprob: -12.000008583068848
    3. '()' → logprob: -13.375008583068848
    4. '().' → logprob: -14.625008583068848
    5. '_LINE' → logprob: -14.875008583068848
    6. ')' → logprob: -16.625009536743164
    7. '_' → logprob: -16.625009536743164
    8. 'Line' → logprob: -17.250009536743164
    9. '_list' → logprob: -17.375009536743164
    10. '-line' → logprob: -17.750009536743164

Token 185: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010962257510982454
    2. '()' → logprob: -9.125109672546387
    3. ' ().' → logprob: -14.375109672546387
    4. '()
' → logprob: -18.00010871887207
    5. '().'' → logprob: -18.25010871887207
    6. '(' → logprob: -18.50010871887207
    7. ' ()' → logprob: -18.62510871887207
    8. '())' → logprob: -18.87510871887207
    9. ' ' → logprob: -19.12510871887207
    10. ')' → logprob: -19.12510871887207

Token 186: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00022082125360611826
    2. 'strip' → logprob: -8.500221252441406
    3. ' split' → logprob: -11.000221252441406
    4. '(split' → logprob: -15.125221252441406
    5. ')' → logprob: -15.875221252441406
    6. 'rstrip' → logprob: -16.000221252441406
    7. '().' → logprob: -17.125221252441406
    8. 'spl' → logprob: -17.250221252441406
    9. '()' → logprob: -18.375221252441406
    10. '.split' → logprob: -18.500221252441406

Token 187: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018302272073924541
    2. '()' → logprob: -7.001830101013184
    3. '()))' → logprob: -7.001830101013184
    4. ')' → logprob: -12.126830101013184
    5. ' ())' → logprob: -14.001830101013184
    6. '(' → logprob: -14.126830101013184
    7. '())
' → logprob: -14.376830101013184
    8. '))' → logprob: -16.0018310546875
    9. '()]' → logprob: -16.1268310546875
    10. '());' → logprob: -16.8768310546875

Token 188: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.778209353797138e-05
    2. '<|end|>' → logprob: -10.125067710876465
    3. '\' → logprob: -11.750067710876465
    4. ')' → logprob: -12.000067710876465
    5. '
' → logprob: -12.125067710876465
    6. '#' → logprob: -13.000067710876465
    7. '()' → logprob: -13.750067710876465
    8. 'de' → logprob: -14.250067710876465
    9. '(' → logprob: -14.625067710876465
    10. '_' → logprob: -14.750067710876465

Token 189: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20320923626422882
    2. 'read' → logprob: -1.7032092809677124
    3. ' list' → logprob: -8.203208923339844
    4. ' main' → logprob: -8.328208923339844
    5. '_read' → logprob: -8.328208923339844
    6. ' create' → logprob: -8.453208923339844
    7. '_' → logprob: -8.453208923339844
    8. 'def' → logprob: -9.203208923339844
    9. ' def' → logprob: -9.703208923339844
    10. 'list' → logprob: -9.953208923339844

Token 190: '_integer' (ID: 82911)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.33890077471733093
    2. '_string' → logprob: -1.7139008045196533
    3. '_line' → logprob: -2.8389008045196533
    4. '_' → logprob: -3.9639008045196533
    5. '_float' → logprob: -4.963900566101074
    6. '_integer' → logprob: -5.088900566101074
    7. '_multiple' → logprob: -6.213900566101074
    8. '_array' → logprob: -6.213900566101074
    9. '_input' → logprob: -6.338900566101074
    10. '_lines' → logprob: -6.588900566101074

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.01245926320552826
    2. 's' → logprob: -4.7624592781066895
    3. 'list' → logprob: -6.6374592781066895
    4. '_array' → logprob: -7.0124592781066895
    5. '()' → logprob: -7.1374592781066895
    6. '_' → logprob: -7.7624592781066895
    7. '_s' → logprob: -8.387458801269531
    8. '_tuple' → logprob: -9.637458801269531
    9. '_lst' → logprob: -10.262458801269531
    10. '_line' → logprob: -11.262458801269531

Token 192: '(number' (ID: 32955)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00026169343618676066
    2. '():
' → logprob: -8.375261306762695
    3. '()' → logprob: -10.500261306762695
    4. ' ():' → logprob: -12.750261306762695
    5. '():

' → logprob: -14.375261306762695
    6. '():
' → logprob: -17.000261306762695
    7. '()>' → logprob: -18.000261306762695
    8. ' ()' → logprob: -18.250261306762695
    9. '()*' → logprob: -19.000261306762695
    10. 'def' → logprob: -19.625261306762695

Token 193: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3470694422721863
    2. '):' → logprob: -1.597069501876831
    3. '()' → logprob: -2.847069501876831
    4. ')' → logprob: -4.597069263458252
    5. 'of' → logprob: -4.722069263458252
    6. '=' → logprob: -5.222069263458252
    7. '_of' → logprob: -5.222069263458252
    8. '():' → logprob: -6.597069263458252
    9. '):
' → logprob: -7.347069263458252
    10. '=None' → logprob: -8.72206974029541

Token 194: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.3970877528190613
    2. 'elements' → logprob: -2.147087812423706
    3. 's' → logprob: -2.272087812423706
    4. '_items' → logprob: -2.522087812423706
    5. '_tokens' → logprob: -4.772087574005127
    6. ')' → logprob: -5.022087574005127
    7. 'items' → logprob: -5.772087574005127
    8. '_values' → logprob: -6.022087574005127
    9. '_' → logprob: -6.397087574005127
    10. '_entries' → logprob: -7.022087574005127

Token 195: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0947924330830574
    2. '()' → logprob: -2.594792366027832
    3. '(n' → logprob: -4.969792366027832
    4. '():' → logprob: -5.219792366027832
    5. '(number' → logprob: -6.219792366027832
    6. ')' → logprob: -7.594792366027832
    7. '(' → logprob: -7.719792366027832
    8. '):
' → logprob: -8.094792366027832
    9. '(size' → logprob: -10.094792366027832
    10. '():
' → logprob: -10.469792366027832

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009895150549709797
    2. '):
' → logprob: -4.634895324707031
    3. '=None' → logprob: -9.634895324707031
    4. '():' → logprob: -10.509895324707031
    5. ',' → logprob: -11.509895324707031
    6. ' ):' → logprob: -11.759895324707031
    7. '   ' → logprob: -11.884895324707031
    8. ')' → logprob: -11.884895324707031
    9. '():
' → logprob: -12.134895324707031
    10. '()' → logprob: -12.884895324707031

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594878077507019
    2. 'def' → logprob: -2.2594878673553467
    3. '(number' → logprob: -2.6344878673553467
    4. '(n' → logprob: -3.5094878673553467
    5. '(' → logprob: -4.384487628936768
    6. 'number' → logprob: -6.509487628936768
    7. '(numbers' → logprob: -6.884487628936768
    8. '():' → logprob: -7.134487628936768
    9. '):' → logprob: -7.134487628936768
    10. '(lst' → logprob: -7.384487628936768

Token 198: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.434804230928421
    2. 'if' (adapté à ' if') → logprob: -1.6848042011260986
    3. 'def' → logprob: -2.8098042011260986
    4. 'return' → logprob: -3.0598042011260986
    5. 'lst' → logprob: -3.1848042011260986
    6. ' lst' → logprob: -5.434804439544678
    7. 'line' → logprob: -5.684804439544678
    8. ' if' → logprob: -5.809804439544678
    9. 'lines' → logprob: -5.934804439544678
    10. 'result' → logprob: -6.809804439544678

Token 199: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.01106881070882082
    2. 'number' → logprob: -4.511068820953369
    3. ' not' → logprob: -10.886068344116211
    4. '	number' → logprob: -13.636068344116211
    5. ' ' → logprob: -14.886068344116211
    6. '(number' → logprob: -15.136068344116211
    7. 'not' → logprob: -15.761068344116211
    8. '_number' → logprob: -15.886068344116211
    9. ' ' → logprob: -16.76106834411621
    10. '[number' → logprob: -17.13606834411621

Token 200: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -6.980854959692806e-05
    2. 'of' → logprob: -9.750069618225098
    3. 's' → logprob: -12.000069618225098
    4. ' _' → logprob: -13.625069618225098
    5. '_' → logprob: -14.000069618225098
    6. '_for' → logprob: -14.125069618225098
    7. '==' → logprob: -14.750069618225098
    8. ' of' → logprob: -15.000069618225098
    9. '__' → logprob: -15.375069618225098
    10. '   ' → logprob: -15.625069618225098

Token 201: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.025368960574269295
    2. 'elements' → logprob: -4.025369167327881
    3. 'None' → logprob: -5.025369167327881
    4. ' None' → logprob: -8.025368690490723
    5. '_none' → logprob: -9.150368690490723
    6. ' elements' → logprob: -9.650368690490723
    7. '_lines' → logprob: -10.525368690490723
    8. 'list' → logprob: -11.025368690490723
    9. 'number' → logprob: -11.025368690490723
    10. '_list' → logprob: -11.275368690490723

Token 202: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007630177307873964
    2. 'is' → logprob: -4.882630348205566
    3. '==' → logprob: -11.007630348205566
    4. ':' → logprob: -12.632630348205566
    5. '	is' → logprob: -13.632630348205566
    6. ' ==' → logprob: -13.882630348205566
    7. ')is' → logprob: -14.257630348205566
    8. '=' → logprob: -14.757630348205566
    9. ')' → logprob: -14.882630348205566
    10. ' ' → logprob: -15.632630348205566

Token 203: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5969932079315186
    2. 'None' → logprob: -0.8469932079315186
    3. ' not' → logprob: -4.096993446350098
    4. 'not' → logprob: -5.471993446350098
    5. '_None' → logprob: -12.346993446350098
    6. '=None' → logprob: -13.346993446350098
    7. ' ' → logprob: -13.971993446350098
    8. 'Not' → logprob: -14.721993446350098
    9. '	not' → logprob: -14.846993446350098
    10. '(None' → logprob: -15.221993446350098

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003695920342579484
    2. ':
' → logprob: -5.628695964813232
    3. ',' → logprob: -9.878695487976074
    4. '   ' → logprob: -11.378695487976074
    5. ':return' → logprob: -11.378695487976074
    6. '):' → logprob: -11.878695487976074
    7. ' :' → logprob: -12.253695487976074
    8. '):
' → logprob: -12.628695487976074
    9. ':def' → logprob: -13.253695487976074
    10. '():' → logprob: -13.378695487976074

Token 205: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010866825468838215
    2. ':
' → logprob: -4.635866641998291
    3. '):' → logprob: -8.01086711883545
    4. '       ' → logprob: -8.38586711883545
    5. '   ' → logprob: -8.51086711883545
    6. ',' → logprob: -8.51086711883545
    7. '():' → logprob: -9.63586711883545
    8. ':return' → logprob: -9.76086711883545
    9. '):
' → logprob: -11.26086711883545
    10. '():
' → logprob: -11.88586711883545

Token 206: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1071540042757988
    2. 'return' (adapté à ' return') → logprob: -2.35715389251709
    3. ' return' → logprob: -4.98215389251709
    4. '       ' → logprob: -10.60715389251709
    5. 'data' → logprob: -11.73215389251709
    6. '    ' → logprob: -12.60715389251709
    7. 'number' → logprob: -12.60715389251709
    8. '  ' → logprob: -12.85715389251709
    9. '	return' → logprob: -12.85715389251709
    10. 'elements' → logprob: -12.85715389251709

Token 207: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011762278154492378
    2. '[list' → logprob: -4.5117621421813965
    3. ' list' → logprob: -7.2617621421813965
    4. '[' → logprob: -11.511762619018555
    5. '[int' → logprob: -14.136762619018555
    6. '[List' → logprob: -14.511762619018555
    7. ' [' → logprob: -15.011762619018555
    8. '(list' → logprob: -15.011762619018555
    9. '[]' → logprob: -15.886762619018555
    10. '[]
' → logprob: -17.011762619018555

Token 208: '(read' (ID: 45738)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5217955112457275
    2. '()' → logprob: -1.2717955112457275
    3. '(read' → logprob: -2.1467955112457275
    4. '(' → logprob: -4.771795272827148
    5. '(int' → logprob: -7.271795272827148
    6. 'read' → logprob: -9.896795272827148
    7. 'map' → logprob: -10.146795272827148
    8. '(range' → logprob: -10.396795272827148
    9. '(split' → logprob: -11.146795272827148
    10. '(Read' → logprob: -12.021795272827148

Token 209: '_integer' (ID: 82911)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.815280696377158e-05
    2. '_integer' → logprob: -9.625078201293945
    3. '(read' → logprob: -12.375078201293945
    4. 'input' → logprob: -12.875078201293945
    5. 'read' → logprob: -13.125078201293945
    6. '_' → logprob: -13.750078201293945
    7. '_read' → logprob: -14.500078201293945
    8. '_INPUT' → logprob: -15.250078201293945
    9. '(_' → logprob: -15.375078201293945
    10. '(input' → logprob: -15.375078201293945

Token 210: '_map' (ID: 11824)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.06626594066619873
    2. '_line' → logprob: -3.0662660598754883
    3. '()' → logprob: -4.066266059875488
    4. 's' → logprob: -8.441266059875488
    5. ')_' → logprob: -10.066266059875488
    6. ')' → logprob: -10.316266059875488
    7. '_map' → logprob: -10.941266059875488
    8. '())' → logprob: -11.316266059875488
    9. '_s' → logprob: -11.691266059875488
    10. '_lines' → logprob: -11.941266059875488

Token 211: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00023524489370174706
    2. '())
' → logprob: -8.625235557556152
    3. '()' → logprob: -9.875235557556152
    4. ' ())' → logprob: -12.875235557556152
    5. ')' → logprob: -14.500235557556152
    6. '()))' → logprob: -15.000235557556152
    7. '())

' → logprob: -15.250235557556152
    8. '())
' → logprob: -15.625235557556152
    9. '();)' → logprob: -16.375234603881836
    10. '()),' → logprob: -16.375234603881836

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.759734732331708e-05
    2. '    
' → logprob: -12.000017166137695
    3. ' else' → logprob: -12.250017166137695
    4. 'else' → logprob: -13.000017166137695
    5. 'def' → logprob: -13.375017166137695
    6. '   ' → logprob: -14.375017166137695
    7. ',' → logprob: -14.375017166137695
    8. '
' → logprob: -14.625017166137695
    9. '<|end|>' → logprob: -15.125017166137695
    10. '	else' → logprob: -15.250017166137695

Token 213: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3415321111679077
    2. 'else' (adapté à ' else') → logprob: -1.4665321111679077
    3. ' else' → logprob: -2.8415322303771973
    4. '    
' → logprob: -9.591531753540039
    5. 'elif' → logprob: -9.716531753540039
    6. 'return' → logprob: -10.091531753540039
    7. '	else' → logprob: -10.216531753540039
    8. '       ' → logprob: -10.841531753540039
    9. '
' → logprob: -11.591531753540039
    10. ' elif' → logprob: -12.091531753540039

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17239375412464142
    2. ':
' → logprob: -2.547393798828125
    3. '       ' → logprob: -2.922393798828125
    4. '   ' → logprob: -4.172393798828125
    5. ' :' → logprob: -5.547393798828125
    6. '(number' → logprob: -5.672393798828125
    7. ' :
' → logprob: -7.422393798828125
    8. ':return' → logprob: -7.422393798828125
    9. '(n' → logprob: -8.297393798828125
    10. '[number' → logprob: -8.422393798828125

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009655343601480126
    2. '   ' → logprob: -7.375965595245361
    3. ' return' → logprob: -8.125965118408203
    4. 'return' → logprob: -11.000965118408203
    5. '	   ' → logprob: -11.250965118408203
    6. '    ' → logprob: -12.250965118408203
    7. '	' → logprob: -13.000965118408203
    8. '   ' → logprob: -13.375965118408203
    9. '           ' → logprob: -13.500965118408203
    10. '     ' → logprob: -14.125965118408203

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18992184102535248
    2. ' return' → logprob: -1.9399218559265137
    3. 'result' → logprob: -3.9399218559265137
    4. ' result' → logprob: -5.564921855926514
    5. 'lst' → logprob: -6.189921855926514
    6. ' lst' → logprob: -6.689921855926514
    7. '       ' → logprob: -7.439921855926514
    8. '   ' → logprob: -7.689921855926514
    9. 'res' → logprob: -7.689921855926514
    10. 'data' → logprob: -8.439921379089355

Token 217: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2177642583847046
    2. ' [' → logprob: -2.092764377593994
    3. ' list' → logprob: -3.342764377593994
    4. 'list' → logprob: -3.467764377593994
    5. '[' → logprob: -5.342764377593994
    6. '[int' → logprob: -7.217764377593994
    7. '[List' → logprob: -8.967763900756836
    8. 'read' → logprob: -10.342763900756836
    9. '[get' → logprob: -10.467763900756836
    10. '[line' → logprob: -11.467763900756836

Token 218: 'read' (ID: 1293)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06204723194241524
    2. 'read' → logprob: -2.812047243118286
    3. ' int' → logprob: -9.937047004699707
    4. '
' → logprob: -11.437047004699707
    5. ' read' → logprob: -11.437047004699707
    6. '(int' → logprob: -13.187047004699707
    7. '   ' → logprob: -13.812047004699707
    8. '<int' → logprob: -13.937047004699707
    9. '[int' → logprob: -14.062047004699707
    10. '    
' → logprob: -14.437047004699707

Token 219: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0018985291244462132
    2. '_input' → logprob: -7.001898765563965
    3. '_' → logprob: -7.626898765563965
    4. 'integer' → logprob: -8.126898765563965
    5. 'int' → logprob: -9.626898765563965
    6. '_int' → logprob: -10.501898765563965
    7. ' _' → logprob: -10.626898765563965
    8. ' integer' → logprob: -11.251898765563965
    9. '
' → logprob: -11.251898765563965
    10. 's' → logprob: -11.376898765563965

Token 220: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01213262788951397
    2. '()]' → logprob: -5.01213264465332
    3. '_list' → logprob: -5.26213264465332
    4. '_map' → logprob: -9.26213264465332
    5. '()>' → logprob: -9.76213264465332
    6. '_line' → logprob: -11.51213264465332
    7. ']' → logprob: -11.76213264465332
    8. '(' → logprob: -11.76213264465332
    9. '())' → logprob: -12.26213264465332
    10. 'int' → logprob: -12.63713264465332

Token 221: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016018999740481377
    2. ' for' → logprob: -4.766018867492676
    3. 'for' → logprob: -5.266018867492676
    4. '()]' → logprob: -6.141018867492676
    5. ' ()' → logprob: -10.891018867492676
    6. '(i' → logprob: -10.891018867492676
    7. '(' → logprob: -11.766018867492676
    8. ']' → logprob: -12.141018867492676
    9. '	for' → logprob: -13.141018867492676
    10. '())' → logprob: -13.641018867492676

Token 222: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003178901970386505
    2. ' _' → logprob: -5.75317907333374
    3. '_range' → logprob: -14.753178596496582
    4. ' range' → logprob: -15.128178596496582
    5. '_in' → logprob: -16.2531795501709
    6. '__' → logprob: -16.5031795501709
    7. ' ' → logprob: -16.5031795501709
    8. '_=' → logprob: -16.8781795501709
    9. '_

' → logprob: -17.1281795501709
    10. '_]' → logprob: -17.2531795501709

Token 223: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002028251619776711
    2. ' range' → logprob: -8.750203132629395
    3. '_' → logprob: -10.125203132629395
    4. '_range' → logprob: -13.000203132629395
    5. 'in' → logprob: -13.500203132629395
    6. '(range' → logprob: -15.000203132629395
    7. '	range' → logprob: -15.625203132629395
    8. ' in' → logprob: -16.625202178955078
    9. ')' → logprob: -17.625202178955078
    10. '[' → logprob: -18.000202178955078

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -16.376928329467773
    4. '(range' → logprob: -17.501928329467773
    5. '_range' → logprob: -18.126928329467773
    6. '_' → logprob: -18.501928329467773
    7. ' ' → logprob: -19.626928329467773
    8. '   ' → logprob: -20.126928329467773
    9. 'rang' → logprob: -20.376928329467773
    10. '
' → logprob: -20.501928329467773

Token 225: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -11.12502670288086
    3. 'number' → logprob: -11.37502670288086
    4. ' number' → logprob: -17.25002670288086
    5. ' (' → logprob: -18.25002670288086
    6. '(
' → logprob: -18.37502670288086
    7. '(n' → logprob: -18.50002670288086
    8. '[number' → logprob: -18.75002670288086
    9. '	number' → logprob: -18.75002670288086
    10. '(num' → logprob: -19.00002670288086

Token 226: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -6.392202976712724e-06
    2. 'of' → logprob: -12.000006675720215
    3. '_elements' → logprob: -16.5000057220459
    4. ' of' → logprob: -16.8750057220459
    5. '	of' → logprob: -17.6250057220459
    6. '_OF' → logprob: -19.2500057220459
    7. '_' → logprob: -19.7500057220459
    8. 'Of' → logprob: -19.8750057220459
    9. '_number' → logprob: -20.7500057220459
    10. ')' → logprob: -21.0000057220459

Token 227: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0004909569397568703
    2. 'elements' → logprob: -7.625491142272949
    3. 'number' → logprob: -13.25049114227295
    4. '_' → logprob: -15.12549114227295
    5. '_ELEMENTS' → logprob: -15.37549114227295
    6. 'lements' → logprob: -15.75049114227295
    7. ' elements' → logprob: -15.87549114227295
    8. 'Elements' → logprob: -16.125490188598633
    9. 's' → logprob: -16.625490188598633
    10. '_items' → logprob: -17.875490188598633

Token 228: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.054500666621607e-06
    2. ']' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.25000286102295
    4. ')]
' → logprob: -14.87500286102295
    5. ')' → logprob: -15.87500286102295
    6. ' )' → logprob: -16.500003814697266
    7. '])]' → logprob: -16.875003814697266
    8. '))' → logprob: -17.625003814697266
    9. ')])' → logprob: -17.750003814697266
    10. '}]' → logprob: -18.250003814697266

Token 229: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002727793762460351
    2. '
' → logprob: -8.500272750854492
    3. '<|end|>' → logprob: -9.625272750854492
    4. '#' → logprob: -13.875272750854492
    5. '```' → logprob: -14.125272750854492
    6. '\' → logprob: -14.875272750854492
    7. ' def' → logprob: -15.125272750854492
    8. '

' → logprob: -15.875272750854492
    9. 'import' → logprob: -16.000272750854492
    10. '<|end|>' → logprob: -16.125272750854492

Token 230: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10298733413219452
    2. 'main' → logprob: -2.977987289428711
    3. ' read' → logprob: -3.477987289428711
    4. 'read' → logprob: -4.852987289428711
    5. ' write' → logprob: -5.227987289428711
    6. 'write' → logprob: -6.977987289428711
    7. ' print' → logprob: -8.102987289428711
    8. ' is' → logprob: -8.227987289428711
    9. ' parse' → logprob: -8.727987289428711
    10. 'print' → logprob: -8.852987289428711

Token 231: '_yes' (ID: 151898)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6331992745399475
    2. '(' → logprob: -0.8831992745399475
    3. '_' → logprob: -4.008199214935303
    4. '(*' → logprob: -5.133199214935303
    5. '_line' → logprob: -5.133199214935303
    6. '_list' → logprob: -5.633199214935303
    7. '_output' → logprob: -5.883199214935303
    8. '_end' → logprob: -6.633199214935303
    9. '("")' → logprob: -7.008199214935303
    10. '(_' → logprob: -7.008199214935303

Token 232: '_lower' (ID: 72335)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.031268104910850525
    2. '():
' → logprob: -3.5312681198120117
    3. '()' → logprob: -6.531268119812012
    4. ' ():' → logprob: -9.906268119812012
    5. ' ()' → logprob: -13.531268119812012
    6. '(' → logprob: -13.531268119812012
    7. '():

' → logprob: -13.531268119812012
    8. '():
' → logprob: -13.656268119812012
    9. '();' → logprob: -14.281268119812012
    10. ':' → logprob: -14.531268119812012

Token 233: 'case' (ID: 9994)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026826869696378708
    2. '()' → logprob: -4.026826858520508
    3. 'case' → logprob: -4.776826858520508
    4. '():
' → logprob: -8.526826858520508
    5. ' ():' → logprob: -11.526826858520508
    6. '():

' → logprob: -12.901826858520508
    7. ':' → logprob: -13.526826858520508
    8. ' ()' → logprob: -13.776826858520508
    9. 'ase' → logprob: -13.776826858520508
    10. '().' → logprob: -14.901826858520508

Token 234: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000193527273950167
    2. ' ():' → logprob: -9.50019359588623
    3. '()' → logprob: -9.62519359588623
    4. '():
' → logprob: -9.87519359588623
    5. '(' → logprob: -14.37519359588623
    6. ' ()' → logprob: -15.25019359588623
    7. '():

' → logprob: -15.62519359588623
    8. '():
' → logprob: -17.375192642211914
    9. '(lower' → logprob: -18.250192642211914
    10. '().' → logprob: -18.750192642211914

Token 235: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7112951874732971
    2. 'print' → logprob: -0.9612951874732971
    3. '('' → logprob: -3.0862951278686523
    4. '():' → logprob: -3.4612951278686523
    5. '()' → logprob: -4.086295127868652
    6. '   ' → logprob: -4.836295127868652
    7. '("' → logprob: -5.211295127868652
    8. '():
' → logprob: -5.211295127868652
    9. '(
' → logprob: -5.461295127868652
    10. '(print' → logprob: -5.586295127868652

Token 236: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' print' → logprob: -15.500006675720215
    4. '```' → logprob: -16.6250057220459
    5. 'def' → logprob: -17.3750057220459
    6. 'pr' → logprob: -18.0000057220459
    7. 'p' → logprob: -19.0000057220459
    8. 'prin' → logprob: -19.2500057220459
    9. 'printf' → logprob: -19.3750057220459
    10. 'return' → logprob: -19.3750057220459

Token 237: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1291189044713974
    2. '('' → logprob: -2.1291189193725586
    3. '(' → logprob: -6.129118919372559
    4. '"' → logprob: -11.629118919372559
    5. 'yes' → logprob: -15.379118919372559
    6. ''' → logprob: -15.379118919372559
    7. ' ("' → logprob: -15.754118919372559
    8. '(
' → logprob: -15.754118919372559
    9. '(("' → logprob: -16.754117965698242
    10. '   ' → logprob: -17.129117965698242

Token 238: 'Yes' (ID: 13022)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -1.8624639324116288e-06
    2. ' yes' → logprob: -14.375001907348633
    3. 'Yes' → logprob: -14.375001907348633
    4. 'y' → logprob: -14.500001907348633
    5. ''' → logprob: -16.500001907348633
    6. 'YES' → logprob: -16.750001907348633
    7. '_yes' → logprob: -17.625001907348633
    8. 'ye' → logprob: -17.750001907348633
    9. '"' → logprob: -18.000001907348633
    10. 'true' → logprob: -18.250001907348633

Token 239: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004672445356845856
    2. ''.' → logprob: -5.379672527313232
    3. '')
' → logprob: -10.379672050476074
    4. ''' → logprob: -11.629672050476074
    5. ')' → logprob: -12.379672050476074
    6. '.lower' → logprob: -12.379672050476074
    7. '")' → logprob: -13.879672050476074
    8. '')

' → logprob: -13.879672050476074
    9. 'lower' → logprob: -14.504672050476074
    10. 's' → logprob: -15.129672050476074

Token 240: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007686520111747086
    2. 'def' → logprob: -7.875768661499023
    3. ' print' → logprob: -7.875768661499023
    4. '_print' → logprob: -12.000768661499023
    5. 'r' → logprob: -13.375768661499023
    6. '
' → logprob: -15.000768661499023
    7. '.print' → logprob: -16.375768661499023
    8. '	print' → logprob: -16.500768661499023
    9. ' def' → logprob: -16.750768661499023
    10. 'println' → logprob: -16.875768661499023

Token 242: '_no' (ID: 13575)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.11213593930006027
    2. '_no' → logprob: -2.862135887145996
    3. '_' → logprob: -3.987135887145996
    4. '_yes' → logprob: -4.237135887145996
    5. '('_' → logprob: -4.862135887145996
    6. '_upper' → logprob: -5.987135887145996
    7. '_low' → logprob: -6.362135887145996
    8. '_false' → logprob: -6.362135887145996
    9. '_error' → logprob: -7.987135887145996
    10. '_none' → logprob: -8.362135887145996

Token 243: '_lower' (ID: 72335)
  Prédit: '_lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.3162972033023834
    2. '()' → logprob: -1.316297173500061
    3. '():' → logprob: -6.9412970542907715
    4. '_' → logprob: -7.1912970542907715
    5. '():
' → logprob: -7.6912970542907715
    6. '_upper' → logprob: -8.69129753112793
    7. '('' → logprob: -9.06629753112793
    8. 'lower' → logprob: -9.06629753112793
    9. '()
' → logprob: -9.06629753112793
    10. '.lower' → logprob: -9.31629753112793

Token 244: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -7.3458322731312364e-06
    2. '_case' → logprob: -12.500007629394531
    3. 'ase' → logprob: -12.750007629394531
    4. '()' → logprob: -15.750007629394531
    5. '()
' → logprob: -16.00000762939453
    6. 'c' → logprob: -16.37500762939453
    7. '```' → logprob: -16.37500762939453
    8. '
' → logprob: -17.25000762939453
    9. 'Case' → logprob: -17.50000762939453
    10. '(case' → logprob: -17.50000762939453

Token 245: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004219436086714268
    2. '():
' → logprob: -5.5042195320129395
    3. '()' → logprob: -8.879219055175781
    4. '():
' → logprob: -13.754219055175781
    5. ' ():' → logprob: -14.504219055175781
    6. '():

' → logprob: -15.879219055175781
    7. ':' → logprob: -17.00421905517578
    8. '(' → logprob: -18.25421905517578
    9. '()
' → logprob: -18.62921905517578
    10. '):' → logprob: -18.75421905517578

Token 246: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38696959614753723
    2. '   ' → logprob: -1.1369695663452148
    3. ' print' → logprob: -9.261969566345215
    4. '	print' → logprob: -13.386969566345215
    5. '(print' → logprob: -14.636969566345215
    6. 'def' → logprob: -14.761969566345215
    7. '```' → logprob: -15.011969566345215
    8. '()' → logprob: -15.636969566345215
    9. '
' → logprob: -15.886969566345215
    10. '(' → logprob: -16.01197052001953

Token 247: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.0948158382670954e-05
    2. ' print' → logprob: -10.500030517578125
    3. '   ' → logprob: -12.625030517578125
    4. '```' → logprob: -17.875030517578125
    5. 'pr' → logprob: -18.125030517578125
    6. '	print' → logprob: -18.250030517578125
    7. 'println' → logprob: -18.750030517578125
    8. 'prin' → logprob: -19.125030517578125
    9. '(print' → logprob: -19.250030517578125
    10. 'printf' → logprob: -19.375030517578125

Token 248: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.375031471252441
    3. '("' → logprob: -14.875031471252441
    4. ' ('' → logprob: -16.000032424926758
    5. ''' → logprob: -16.750032424926758
    6. '(No' → logprob: -17.125032424926758
    7. '()' → logprob: -18.000032424926758
    8. '(False' → logprob: -18.625032424926758
    9. '(('' → logprob: -19.375032424926758
    10. '(`' → logprob: -19.875032424926758

Token 249: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00026169343618676066
    2. ''' → logprob: -8.250261306762695
    3. 'no' → logprob: -15.625261306762695
    4. '"No' → logprob: -16.000261306762695
    5. ' No' → logprob: -16.125261306762695
    6. 'NO' → logprob: -16.625261306762695
    7. 'Yes' → logprob: -19.500261306762695
    8. '_no' → logprob: -19.500261306762695
    9. '_No' → logprob: -19.875261306762695
    10. '')' → logprob: -20.000261306762695

Token 250: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -2.8444881536415778e-05
    2. '()' → logprob: -10.875028610229492
    3. ')' → logprob: -12.250028610229492
    4. '')
' → logprob: -12.375028610229492
    5. '')

' → logprob: -15.250028610229492
    6. '")' → logprob: -15.625028610229492
    7. ''' → logprob: -17.125028610229492
    8. '('' → logprob: -18.000028610229492
    9. '())' → logprob: -18.625028610229492
    10. '')
' → logprob: -18.750028610229492

Token 251: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5946813225746155
    2. '_' → logprob: -0.9696813225746155
    3. '<|end|>' → logprob: -3.4696812629699707
    4. 'd' → logprob: -4.219681262969971
    5. '
' → logprob: -5.094681262969971
    6. 'p' → logprob: -5.594681262969971
    7. 'e' → logprob: -6.094681262969971
    8. '```' → logprob: -6.344681262969971
    9. ')' → logprob: -6.469681262969971
    10. ' ' → logprob: -6.594681262969971

Token 252: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6354365348815918
    2. 'print' → logprob: -0.7604365348815918
    3. 'is' → logprob: -6.385436534881592
    4. ' main' → logprob: -7.010436534881592
    5. ' print' → logprob: -9.13543701171875
    6. 'read' → logprob: -10.26043701171875
    7. 'def' → logprob: -10.51043701171875
    8. 'solve' → logprob: -10.63543701171875
    9. 'debug' → logprob: -12.01043701171875
    10. ' is' → logprob: -12.01043701171875

Token 253: '_yes' (ID: 151898)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.8509683012962341
    2. '_yes' → logprob: -1.225968360900879
    3. '_upper' → logprob: -1.600968360900879
    4. '_' → logprob: -3.100968360900879
    5. '('_' → logprob: -3.475968360900879
    6. '_all' → logprob: -8.100968360900879
    7. '("_' → logprob: -8.225968360900879
    8. '('' → logprob: -8.350968360900879
    9. '_low' → logprob: -8.975968360900879
    10. '()' → logprob: -9.100968360900879

Token 254: '_upper' (ID: 82658)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.15836265683174133
    2. '():' → logprob: -2.033362627029419
    3. '_upper' → logprob: -4.533362865447998
    4. '():
' → logprob: -5.783362865447998
    5. '()' → logprob: -6.533362865447998
    6. 'lower' → logprob: -8.90836238861084
    7. 'uppercase' → logprob: -9.28336238861084
    8. '():

' → logprob: -10.90836238861084
    9. '_' → logprob: -11.78336238861084
    10. '_low' → logprob: -12.53336238861084

Token 255: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.018524713814258575
    2. '()' → logprob: -4.018524646759033
    3. '())' → logprob: -8.018525123596191
    4. '()
' → logprob: -10.518525123596191
    5. '():' → logprob: -12.393525123596191
    6. 'lower' → logprob: -13.518525123596191
    7. '()`' → logprob: -13.768525123596191
    8. 'def' → logprob: -13.893525123596191
    9. '()]' → logprob: -14.018525123596191
    10. '():
' → logprob: -14.018525123596191

Token 256: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038885537069290876
    2. '():
' → logprob: -5.6288886070251465
    3. '()' → logprob: -8.628888130187988
    4. ' ():' → logprob: -9.503888130187988
    5. '():

' → logprob: -10.628888130187988
    6. '_upper' → logprob: -12.253888130187988
    7. '():
' → logprob: -13.253888130187988
    8. '_' → logprob: -13.753888130187988
    9. 'uppercase' → logprob: -14.253888130187988
    10. '(' → logprob: -14.878888130187988

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.288163083605468e-05
    2. 'print' → logprob: -10.250052452087402
    3. ' print' → logprob: -11.750052452087402
    4. 'def' → logprob: -12.125052452087402
    5. '()' → logprob: -12.875052452087402
    6. '    
' → logprob: -15.500052452087402
    7. '(' → logprob: -15.500052452087402
    8. '	print' → logprob: -15.750052452087402
    9. '(print' → logprob: -15.875052452087402
    10. '():
' → logprob: -15.875052452087402

Token 258: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004136818461120129
    2. '   ' → logprob: -5.50413703918457
    3. ' print' → logprob: -9.75413703918457
    4. '	print' → logprob: -15.37913703918457
    5. '```' → logprob: -16.87913703918457
    6. 'println' → logprob: -18.37913703918457
    7. 'def' → logprob: -18.75413703918457
    8. 'Print' → logprob: -19.12913703918457
    9. '(print' → logprob: -19.50413703918457
    10. 'printf' → logprob: -20.25413703918457

Token 259: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.1186566047836095e-05
    2. '("' → logprob: -10.875031471252441
    3. '(' → logprob: -11.625031471252441
    4. ''' → logprob: -13.000031471252441
    5. 'YES' → logprob: -14.500031471252441
    6. '()' → logprob: -15.750031471252441
    7. 'Yes' → logprob: -15.875031471252441
    8. ''S' → logprob: -16.750030517578125
    9. '_' → logprob: -17.375030517578125
    10. '"' → logprob: -18.125030517578125

Token 260: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.2819342315196991
    2. ''' → logprob: -1.5319342613220215
    3. 'Yes' → logprob: -3.5319342613220215
    4. 'print' → logprob: -8.156933784484863
    5. '"' → logprob: -11.156933784484863
    6. 'yes' → logprob: -12.656933784484863
    7. '('' → logprob: -12.656933784484863
    8. '   ' → logprob: -13.906933784484863
    9. ' YES' → logprob: -14.031933784484863
    10. 'Y' → logprob: -14.781933784484863

Token 261: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00020795092859771103
    2. ')' → logprob: -8.750207901000977
    3. '')
' → logprob: -10.000207901000977
    4. '()' → logprob: -13.375207901000977
    5. ''' → logprob: -13.625207901000977
    6. '")' → logprob: -14.125207901000977
    7. '')

' → logprob: -15.125207901000977
    8. '')
' → logprob: -15.750207901000977
    9. '')"' → logprob: -17.250207901000977
    10. '('' → logprob: -17.500207901000977

Token 262: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020470181480050087
    2. '
' → logprob: -4.645470142364502
    3. '()' → logprob: -5.270470142364502
    4. '<|end|>' → logprob: -6.395470142364502
    5. ' def' → logprob: -6.895470142364502
    6. '()
' → logprob: -6.895470142364502
    7. '```' → logprob: -7.520470142364502
    8. '(
' → logprob: -7.895470142364502
    9. '(def' → logprob: -8.52047061920166
    10. '(' → logprob: -8.89547061920166

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008755200542509556
    2. ' print' → logprob: -4.758755207061768
    3. 'def' → logprob: -8.88375473022461
    4. '_print' → logprob: -13.50875473022461
    5. ' def' → logprob: -14.25875473022461
    6. '.print' → logprob: -17.25875473022461
    7. '	print' → logprob: -17.50875473022461
    8. ' ' → logprob: -17.75875473022461
    9. '(print' → logprob: -18.13375473022461
    10. '
' → logprob: -18.50875473022461

Token 264: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.005296127405017614
    2. '('_' → logprob: -5.755296230316162
    3. '_' → logprob: -6.505296230316162
    4. '_lower' → logprob: -8.505295753479004
    5. '_NO' → logprob: -9.255295753479004
    6. '_yes' → logprob: -9.255295753479004
    7. '(' → logprob: -10.005295753479004
    8. '('' → logprob: -10.505295753479004
    9. '_false' → logprob: -10.630295753479004
    10. '_n' → logprob: -10.880295753479004

Token 265: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -4.8232690460281447e-05
    2. '_lower' → logprob: -10.250048637390137
    3. 'uppercase' → logprob: -11.875048637390137
    4. '_' → logprob: -13.000048637390137
    5. '()' → logprob: -13.125048637390137
    6. 'Upper' → logprob: -14.875048637390137
    7. '_up' → logprob: -15.000048637390137
    8. ' uppercase' → logprob: -15.750048637390137
    9. '('_' → logprob: -15.750048637390137
    10. '_uc' → logprob: -16.37504768371582

Token 266: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.003064580261707306
    2. 'CASE' → logprob: -5.8780646324157715
    3. 'ER' → logprob: -9.378064155578613
    4. 'erc' → logprob: -9.753064155578613
    5. '()' → logprob: -10.628064155578613
    6. '```' → logprob: -10.628064155578613
    7. '('' → logprob: -11.128064155578613
    8. '()
' → logprob: -11.128064155578613
    9. 'code' → logprob: -11.878064155578613
    10. '_case' → logprob: -12.378064155578613

Token 267: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.641841820150148e-05
    2. '():
' → logprob: -11.25002670288086
    3. '()' → logprob: -11.37502670288086
    4. ' ():' → logprob: -13.25002670288086
    5. '():
' → logprob: -16.62502670288086
    6. '():

' → logprob: -17.50002670288086
    7. '):' → logprob: -18.37502670288086
    8. '()>' → logprob: -18.87502670288086
    9. ':' → logprob: -19.75002670288086
    10. '()">' → logprob: -19.75002670288086

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07899179309606552
    2. 'print' → logprob: -2.5789918899536133
    3. ' print' → logprob: -9.203991889953613
    4. '	print' → logprob: -13.953991889953613
    5. '(print' → logprob: -15.703991889953613
    6. '```' → logprob: -16.453990936279297
    7. '       ' → logprob: -17.203990936279297
    8. ' ' → logprob: -17.203990936279297
    9. '  ' → logprob: -17.453990936279297
    10. '(' → logprob: -17.953990936279297

Token 269: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008346432005055249
    2. '   ' → logprob: -7.1258344650268555
    3. ' print' → logprob: -10.750834465026855
    4. ''' → logprob: -13.250834465026855
    5. 'YES' → logprob: -13.375834465026855
    6. '()' → logprob: -13.500834465026855
    7. 'PRINT' → logprob: -13.625834465026855
    8. '('' → logprob: -14.000834465026855
    9. '(print' → logprob: -14.500834465026855
    10. '	print' → logprob: -15.375834465026855

Token 270: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01134276669472456
    2. ''' → logprob: -4.511343002319336
    3. '(' → logprob: -8.761343002319336
    4. ''N' → logprob: -9.011343002319336
    5. '("' → logprob: -11.636343002319336
    6. 'NO' → logprob: -12.761343002319336
    7. '()' → logprob: -13.761343002319336
    8. '(
' → logprob: -14.011343002319336
    9. '(NO' → logprob: -14.136343002319336
    10. '('\' → logprob: -14.886343002319336

Token 271: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.001512004528194666
    2. ''' → logprob: -6.501512050628662
    3. 'print' → logprob: -11.751511573791504
    4. 'No' → logprob: -13.626511573791504
    5. '
' → logprob: -15.876511573791504
    6. '   ' → logprob: -16.12651252746582
    7. '"No' → logprob: -16.50151252746582
    8. ' NO' → logprob: -16.62651252746582
    9. '_NO' → logprob: -16.75151252746582
    10. '"' → logprob: -17.50151252746582

Token 272: '')

' (ID: 9735)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7338564395904541
    2. ')' → logprob: -0.8588564395904541
    3. '())' → logprob: -2.983856439590454
    4. '')' → logprob: -3.108856439590454
    5. '():' → logprob: -7.358856201171875
    6. '()
' → logprob: -8.858856201171875
    7. '")' → logprob: -9.358856201171875
    8. '):' → logprob: -9.733856201171875
    9. 'def' → logprob: -10.108856201171875
    10. '())
' → logprob: -11.108856201171875

Token 273: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23599112033843994
    2. '
' → logprob: -1.98599112033844
    3. '_' → logprob: -2.8609910011291504
    4. 'd' → logprob: -5.48599100112915
    5. '<|end|>' → logprob: -5.98599100112915
    6. ' def' → logprob: -6.23599100112915
    7. ' 
' → logprob: -6.36099100112915
    8. '#' → logprob: -7.11099100112915
    9. '\' → logprob: -7.36099100112915
    10. ' ' → logprob: -7.86099100112915

Token 274: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030289221554994583
    2. '.exit' → logprob: -4.030289173126221
    3. '.stdout' → logprob: -4.780289173126221
    4. '.stdin' → logprob: -6.030289173126221
    5. '.argv' → logprob: -6.780289173126221
    6. '.stderr' → logprob: -9.280289649963379
    7. '.setdefault' → logprob: -11.780289649963379
    8. '.path' → logprob: -12.405289649963379
    9. ' .' → logprob: -12.655289649963379
    10. '.import' → logprob: -12.780289649963379

Token 275: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00012654215970542282
    2. '_rec' → logprob: -10.250126838684082
    3. 're' → logprob: -10.625126838684082
    4. 'execution' → logprob: -10.750126838684082
    5. 'trace' → logprob: -11.125126838684082
    6. 'limit' → logprob: -11.875126838684082
    7. ' recursion' → logprob: -12.750126838684082
    8. 'ursion' → logprob: -12.750126838684082
    9. 'set' → logprob: -13.000126838684082
    10. 'ecution' → logprob: -13.125126838684082

Token 276: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.297462171758525e-05
    2. 'limit' → logprob: -11.000033378601074
    3. 'ursive' → logprob: -12.125033378601074
    4. 'urs' → logprob: -12.375033378601074
    5. 'ur' → logprob: -13.375033378601074
    6. 'ursor' → logprob: -13.875033378601074
    7. '_limit' → logprob: -13.875033378601074
    8. 'ision' → logprob: -14.250033378601074
    9. 'urf' → logprob: -14.625033378601074
    10. 't' → logprob: -14.875033378601074

Token 277: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.292907877039397e-06
    2. '_limit' → logprob: -12.87500286102295
    3. ' limit' → logprob: -14.50000286102295
    4. 'lim' → logprob: -15.62500286102295
    5. 'depth' → logprob: -17.875003814697266
    6. 'Limit' → logprob: -19.125003814697266
    7. '.limit' → logprob: -19.625003814697266
    8. '-limit' → logprob: -19.625003814697266
    9. '-' → logprob: -20.750003814697266
    10. '(limit' → logprob: -21.125003814697266

Token 278: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. '(
' → logprob: -14.375000953674316
    3. ' (' → logprob: -14.750000953674316
    4. '((' → logprob: -15.250000953674316
    5. '100' → logprob: -17.875001907348633
    6. '()' → logprob: -18.750001907348633
    7. '(

' → logprob: -19.250001907348633
    8. '(int' → logprob: -19.500001907348633
    9. '(sys' → logprob: -20.125001907348633
    10. '('' → logprob: -20.500001907348633

Token 279: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007161272224038839
    2. '100' → logprob: -7.250716209411621
    3. '200' → logprob: -12.875716209411621
    4. '300' → logprob: -13.625716209411621
    5. '500' → logprob: -13.875716209411621
    6. '150' → logprob: -15.625716209411621
    7. 'pow' → logprob: -15.625716209411621
    8. '999' → logprob: -16.000715255737305
    9. '250' → logprob: -16.000715255737305
    10. '(' → logprob: -16.125715255737305

Token 280: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.038886915892362595
    2. '7' → logprob: -3.2888870239257812
    3. '000' → logprob: -7.413887023925781
    4. '6' → logprob: -8.788887023925781
    5. '07' → logprob: -9.788887023925781
    6. '8' → logprob: -11.163887023925781
    7. '00' → logprob: -11.538887023925781
    8. '007' → logprob: -12.538887023925781
    9. ' **' → logprob: -13.288887023925781
    10. '```' → logprob: -13.538887023925781

Token 281: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0005548207554966211
    2. '9' → logprob: -7.500555038452148
    3. '8' → logprob: -13.250555038452148
    4. '6' → logprob: -16.75055503845215
    5. '**' → logprob: -19.75055503845215
    6. '+' → logprob: -20.00055503845215
    7. '```' → logprob: -20.50055503845215
    8. '

' → logprob: -22.25055503845215
    9. '７' → logprob: -22.62555503845215
    10. ' ' → logprob: -22.87555503845215

Token 282: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031856747809797525
    2. '9' → logprob: -5.753185749053955
    3. '8' → logprob: -12.003185272216797
    4. '6' → logprob: -13.253185272216797
    5. '**' → logprob: -18.628185272216797
    6. '+' → logprob: -19.003185272216797
    7. '

' → logprob: -20.378185272216797
    8. '10' → logprob: -20.753185272216797
    9. '７' → logprob: -21.003185272216797
    10. '
' → logprob: -21.253185272216797

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.25
    3. ')
' → logprob: -17.25
    4. '))' → logprob: -18.25
    5. ')`' → logprob: -19.5
    6. ')

' → logprob: -19.75
    7. '),' → logprob: -20.0
    8. ')}' → logprob: -20.25
    9. '())' → logprob: -20.5
    10. ')#' → logprob: -20.625

Token 284: 'IN' (ID: 965)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: 'FINITY' (ID: 113276)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.09424342215061188
    2. 'PUT' → logprob: -2.4692435264587402
    3. 'FINITY' → logprob: -5.84424352645874
    4. '=' → logprob: -7.21924352645874
    5. ' =' → logprob: -7.59424352645874
    6. 'put' → logprob: -7.84424352645874
    7. 'IT' → logprob: -8.594243049621582
    8. '   ' → logprob: -8.969243049621582
    9. '.put' → logprob: -8.969243049621582
    10. 'FT' → logprob: -10.094243049621582

Token 286: '_VALUE' (ID: 13527)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008622728288173676
    2. '=' → logprob: -4.758622646331787
    3. '_' → logprob: -12.383623123168945
    4. '=int' → logprob: -13.383623123168945
    5. '_INF' → logprob: -13.883623123168945
    6. '=sys' → logprob: -14.883623123168945
    7. ' ' → logprob: -15.133623123168945
    8. '=float' → logprob: -15.258623123168945
    9. '＝' → logprob: -15.883623123168945
    10. '_INT' → logprob: -16.383623123168945

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049585416913033
    2. '=' → logprob: -4.511049747467041
    3. '=int' → logprob: -13.886049270629883
    4. '=sys' → logprob: -15.011049270629883
    5. '=float' → logprob: -15.886049270629883
    6. ' ' → logprob: -16.261049270629883
    7. '＝' → logprob: -16.261049270629883
    8. 'INF' → logprob: -16.511049270629883
    9. '   ' → logprob: -17.136049270629883
    10. ' ' → logprob: -17.636049270629883

Token 288: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.043206311762332916
    2. 'float' → logprob: -3.168206214904785
    3. '1' → logprob: -9.168206214904785
    4. 'int' → logprob: -10.168206214904785
    5. '100' → logprob: -10.418206214904785
    6. ' float' → logprob: -11.918206214904785
    7. '999' → logprob: -12.043206214904785
    8. ' ' → logprob: -12.168206214904785
    9. '9' → logprob: -12.293206214904785
    10. 'pow' → logprob: -13.043206214904785

Token 289: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.048735201358795166
    2. 'float' → logprob: -3.0487351417541504
    3. '1' → logprob: -9.173735618591309
    4. 'int' → logprob: -11.173735618591309
    5. '9' → logprob: -11.923735618591309
    6. '100' → logprob: -11.923735618591309
    7. '999' → logprob: -12.298735618591309
    8. ' float' → logprob: -12.798735618591309
    9. '(' → logprob: -13.423735618591309
    10. ' ' → logprob: -13.548735618591309

Token 290: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.3513641357421875
    2. '10' → logprob: -2.2263641357421875
    3. '15' → logprob: -2.3513641357421875
    4. '9' → logprob: -2.7263641357421875
    5. '12' → logprob: -4.7263641357421875
    6. '16' → logprob: -4.9763641357421875
    7. '+' → logprob: -4.9763641357421875
    8. '20' → logprob: -5.9763641357421875
    9. '**' → logprob: -7.1013641357421875
    10. '100' → logprob: -7.7263641357421875

Token 291: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.46329009532928467
    2. '15' → logprob: -1.0882900953292847
    3. '9' → logprob: -3.838290214538574
    4. '10' → logprob: -4.963290214538574
    5. '16' → logprob: -6.213290214538574
    6. '20' → logprob: -6.338290214538574
    7. '12' → logprob: -6.588290214538574
    8. '7' → logprob: -9.088290214538574
    9. '13' → logprob: -9.463290214538574
    10. '14' → logprob: -9.713290214538574

Token 292: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.47075334191322327
    2. '15' → logprob: -1.0957533121109009
    3. '9' → logprob: -3.7207534313201904
    4. '10' → logprob: -4.720753192901611
    5. '12' → logprob: -5.720753192901611
    6. '16' → logprob: -5.970753192901611
    7. '20' → logprob: -6.595753192901611
    8. '7' → logprob: -8.09575366973877
    9. '14' → logprob: -8.34575366973877
    10. '13' → logprob: -8.59575366973877

Token 293: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: 'MOD' (ID: 52135)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576225221157074
    2. '=' → logprob: -0.826225221157074
    3. '_' → logprob: -8.201225280761719
    4. ',' → logprob: -12.701225280761719
    5. '_=' → logprob: -12.951225280761719
    6. '_VALUE' → logprob: -13.201225280761719
    7. ':' → logprob: -13.451225280761719
    8. '＝' → logprob: -14.201225280761719
    9. '```' → logprob: -15.201225280761719
    10. '.' → logprob: -15.326225280761719

Token 296: '_VALUE' (ID: 13527)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025499016046524
    2. '=' → logprob: -2.350255012512207
    3. '_' → logprob: -10.100255012512207
    4. '_VALUE' → logprob: -12.475255012512207
    5. ',' → logprob: -14.350255012512207
    6. '  ' → logprob: -14.850255012512207
    7. '_=' → logprob: -14.850255012512207
    8. ' ' → logprob: -14.975255012512207
    9. ':' → logprob: -15.100255012512207
    10. '＝' → logprob: -15.475255012512207

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020904988050461
    2. '=' → logprob: -2.3502089977264404
    3. ',' → logprob: -13.72520923614502
    4. ' ' → logprob: -14.97520923614502
    5. '_' → logprob: -14.97520923614502
    6. ':' → logprob: -15.22520923614502
    7. ' =
' → logprob: -15.85020923614502
    8. ' =)' → logprob: -16.600208282470703
    9. ' ,' → logprob: -16.725208282470703
    10. ' ' → logprob: -17.350208282470703

Token 298: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011234297417104244
    2. ' ' → logprob: -7.001123428344727
    3. '998' → logprob: -9.126123428344727
    4. '100' → logprob: -9.251123428344727
    5. '1' → logprob: -11.876123428344727
    6. 'int' → logprob: -16.751123428344727
    7. '(' → logprob: -17.626123428344727
    8. '109' → logprob: -17.751123428344727
    9. '999' → logprob: -17.751123428344727
    10. '   ' → logprob: -18.251123428344727

Token 299: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009880159050226212
    2. '998' → logprob: -5.009880065917969
    3. '100' → logprob: -5.759880065917969
    4. '1' → logprob: -12.009880065917969
    5. 'int' → logprob: -13.759880065917969
    6. ' ' → logprob: -14.759880065917969
    7. '(' → logprob: -15.009880065917969
    8. '999' → logprob: -15.634880065917969
    9. '１０' → logprob: -16.00988006591797
    10. 'pow' → logprob: -17.25988006591797

Token 300: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0008025993593037128
    2. '**' → logprob: -7.375802516937256
    3. '+' → logprob: -9.375802993774414
    4. '09' → logprob: -10.125802993774414
    5. '```' → logprob: -10.625802993774414
    6. ' ' → logprob: -11.375802993774414
    7. '000' → logprob: -12.000802993774414
    8. ' **' → logprob: -12.500802993774414
    9. '7' → logprob: -12.875802993774414
    10. '``' → logprob: -14.250802993774414

Token 301: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.375
    3. '19' → logprob: -15.875
    4. '18' → logprob: -17.5
    5. ' ' → logprob: -17.875
    6. '10' → logprob: -18.75
    7. '```' → logprob: -19.125
    8. '99' → logprob: -19.625
    9. '+' → logprob: -20.25
    10. '15' → logprob: -20.625

Token 302: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '09' → logprob: -15.375000953674316
    3. '19' → logprob: -15.500000953674316
    4. '99' → logprob: -16.625
    5. '18' → logprob: -16.75
    6. ' ' → logprob: -17.875
    7. '10' → logprob: -18.375
    8. '+' → logprob: -18.75
    9. '```' → logprob: -18.75
    10. '15' → logprob: -20.5

Token 303: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023463957477360964
    2. '7' → logprob: -6.752346515655518
    3. ' +' → logprob: -6.752346515655518
    4. '+
' → logprob: -13.00234603881836
    5. '＋' → logprob: -13.12734603881836
    6. 'plus' → logprob: -13.62734603881836
    7. ' plus' → logprob: -14.75234603881836
    8. ' ' → logprob: -14.87734603881836
    9. '```' → logprob: -15.25234603881836
    10. '
' → logprob: -15.37734603881836

Token 304: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.25
    3. ' ' → logprob: -21.0
    4. '   ' → logprob: -21.625
    5. '```' → logprob: -21.75
    6. '７' → logprob: -22.125
    7. '07' → logprob: -23.0
    8. '' → logprob: -23.5
    9. '

' → logprob: -23.625
    10. '  ' → logprob: -23.75

Token 305: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -22.25
    3. '７' → logprob: -22.875
    4. '```' → logprob: -22.875
    5. '+' → logprob: -23.5
    6. '   ' → logprob: -23.5
    7. '

' → logprob: -23.875
    8. '
' → logprob: -24.125
    9. '07' → logprob: -24.375
    10. '' → logprob: -25.5

Token 306: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: 'element' (ID: 13565)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026991849881596863
    2. 'class' → logprob: -8.500269889831543
    3. '#' → logprob: -10.125269889831543
    4. 'from' → logprob: -10.750269889831543
    5. 'import' → logprob: -13.125269889831543
    6. ' def' → logprob: -13.875269889831543
    7. 'for' → logprob: -14.625269889831543
    8. '```' → logprob: -15.125269889831543
    9. 'de' → logprob: -15.250269889831543
    10. 'n' → logprob: -15.625269889831543

Token 308: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07482483237981796
    2. '_s' → logprob: -3.699824810028076
    3. ' =' → logprob: -3.824824810028076
    4. '_' → logprob: -3.824824810028076
    5. '_list' → logprob: -6.574824810028076
    6. '_count' → logprob: -6.949824810028076
    7. '_size' → logprob: -7.949824810028076
    8. '_counts' → logprob: -9.074825286865234
    9. '_index' → logprob: -9.199825286865234
    10. ' s' → logprob: -9.324825286865234

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04425494372844696
    2. '=' → logprob: -3.169255018234253
    3. ',' → logprob: -7.169254779815674
    4. '_' → logprob: -8.419255256652832
    5. ' ' → logprob: -8.544255256652832
    6. ' ,' → logprob: -10.169255256652832
    7. ')' → logprob: -11.294255256652832
    8. '_space' → logprob: -12.794255256652832
    9. '=int' → logprob: -13.169255256652832
    10. ' _' → logprob: -13.169255256652832

Token 310: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.19710056483745575
    2. ' read' → logprob: -1.8221005201339722
    3. 'int' → logprob: -4.322100639343262
    4. ' int' → logprob: -5.572100639343262
    5. '0' → logprob: -9.822100639343262
    6. ' ' → logprob: -10.197100639343262
    7. '10' → logprob: -10.822100639343262
    8. '	read' → logprob: -12.322100639343262
    9. '3' → logprob: -12.572100639343262
    10. '5' → logprob: -13.072100639343262

Token 311: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -2.2200749754119897e-06
    2. 'integer' → logprob: -13.750001907348633
    3. '_input' → logprob: -14.500001907348633
    4. '_' → logprob: -14.750001907348633
    5. '_INTEGER' → logprob: -16.625001907348633
    6. '_element' → logprob: -16.875001907348633
    7. 'Integer' → logprob: -18.250001907348633
    8. '_in' → logprob: -18.250001907348633
    9. '_int' → logprob: -18.750001907348633
    10. '_Integer' → logprob: -19.750001907348633

Token 312: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010803256882354617
    2. ')' → logprob: -7.501080513000488
    3. '(' → logprob: -8.626080513000488
    4. 'elements' → logprob: -8.751080513000488
    5. '_elements' → logprob: -10.251080513000488
    6. '()
' → logprob: -10.626080513000488
    7. 'element' → logprob: -11.001080513000488
    8. 'for' → logprob: -11.376080513000488
    9. '_list' → logprob: -11.501080513000488
    10. ' =' → logprob: -11.876080513000488

Token 313: 'element' (ID: 13565)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.09463931620121002
    2. 'element' → logprob: -2.594639301300049
    3. 'array' → logprob: -5.219639301300049
    4. 'values' → logprob: -5.719639301300049
    5. 'numbers' → logprob: -5.719639301300049
    6. 'data' → logprob: -6.344639301300049
    7. 'sequence' → logprob: -6.844639301300049
    8. 'arr' → logprob: -8.344639778137207
    9. ' elements' → logprob: -9.219639778137207
    10. 'items' → logprob: -9.469639778137207

Token 314: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002847079187631607
    2. '_list' → logprob: -6.002847194671631
    3. '_s' → logprob: -8.502846717834473
    4. '_values' → logprob: -8.752846717834473
    5. ' =' → logprob: -13.002846717834473
    6. '_count' → logprob: -13.252846717834473
    7. ' s' → logprob: -13.502846717834473
    8. '_' → logprob: -13.502846717834473
    9. '_counts' → logprob: -13.627846717834473
    10. 'list' → logprob: -14.502846717834473

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012513183988630772
    2. '=' → logprob: -4.387513160705566
    3. '()' → logprob: -12.762513160705566
    4. '(' → logprob: -15.762513160705566
    5. ',' → logprob: -16.012514114379883
    6. ')' → logprob: -16.012514114379883
    7. ' ' → logprob: -16.387514114379883
    8. '_' → logprob: -16.512514114379883
    9. '.' → logprob: -16.637514114379883
    10. ' ' → logprob: -16.762514114379883

Token 316: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005236956290900707
    2. ' read' → logprob: -5.255237102508545
    3. 'list' → logprob: -12.755236625671387
    4. '[' → logprob: -16.380237579345703
    5. ' list' → logprob: -16.380237579345703
    6. '	read' → logprob: -16.630237579345703
    7. '[]' → logprob: -17.505237579345703
    8. '   ' → logprob: -18.505237579345703
    9. '(read' → logprob: -18.505237579345703
    10. 'create' → logprob: -19.255237579345703

Token 317: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.9146995327901095e-05
    2. '_list' → logprob: -11.000019073486328
    3. '_' → logprob: -13.500019073486328
    4. '_array' → logprob: -14.750019073486328
    5. '_INTEGER' → logprob: -15.375019073486328
    6. '_string' → logprob: -15.500019073486328
    7. '_in' → logprob: -16.500019073486328
    8. '_int' → logprob: -17.625019073486328
    9. '_element' → logprob: -17.750019073486328
    10. '_float' → logprob: -18.125019073486328

Token 318: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.580929347255733e-05
    2. 'list' → logprob: -11.625016212463379
    3. '()' → logprob: -12.000016212463379
    4. '_map' → logprob: -15.250016212463379
    5. 'List' → logprob: -15.750016212463379
    6. '_' → logprob: -15.875016212463379
    7. 's' → logprob: -16.375015258789062
    8. '_l' → logprob: -19.250015258789062
    9. '_lst' → logprob: -19.500015258789062
    10. ' list' → logprob: -19.750015258789062

Token 319: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.00010044389637187123
    2. '()' → logprob: -9.875100135803223
    3. '(' → logprob: -10.375100135803223
    4. 'element' → logprob: -11.125100135803223
    5. ' (' → logprob: -14.000100135803223
    6. '(ele' → logprob: -14.500100135803223
    7. '(
' → logprob: -14.625100135803223
    8. '(elements' → logprob: -14.875100135803223
    9. '(elem' → logprob: -14.875100135803223
    10. '[element' → logprob: -15.750100135803223

Token 320: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -15.25
    3. 's' → logprob: -17.0
    4. '_c' → logprob: -18.625
    5. '_' → logprob: -19.5
    6. '_list' → logprob: -19.5
    7. ')' → logprob: -20.375
    8. '_cnt' → logprob: -20.75
    9. '_COUNT' → logprob: -21.0
    10. '_counts' → logprob: -21.25

Token 321: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004374638374429196
    2. '())' → logprob: -8.37543773651123
    3. '()' → logprob: -8.50043773651123
    4. ' )' → logprob: -12.87543773651123
    5. '(' → logprob: -15.12543773651123
    6. ')
' → logprob: -15.87543773651123
    7. '))' → logprob: -16.375436782836914
    8. '[' → logprob: -16.500436782836914
    9. ']' → logprob: -16.875436782836914
    10. '[])' → logprob: -16.875436782836914

Token 322: 'position' (ID: 4504)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -1.1671327352523804
    2. 'counter' → logprob: -1.7921327352523804
    3. 'result' → logprob: -2.54213285446167
    4. 'count' → logprob: -2.66713285446167
    5. 'answer' → logprob: -2.91713285446167
    6. 'from' → logprob: -3.04213285446167
    7. 'frequency' → logprob: -3.04213285446167
    8. 'max' → logprob: -3.16713285446167
    9. 'counts' → logprob: -3.29213285446167
    10. 'sorted' → logprob: -4.04213285446167

Token 323: '_in' (ID: 2267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0793706551194191
    2. '_counts' → logprob: -3.4543707370758057
    3. '_s' → logprob: -4.329370498657227
    4. '_positions' → logprob: -4.454370498657227
    5. '_map' → logprob: -4.704370498657227
    6. '_count' → logprob: -5.579370498657227
    7. '_dict' → logprob: -6.079370498657227
    8. '_indices' → logprob: -6.704370498657227
    9. '_index' → logprob: -6.829370498657227
    10. '_to' → logprob: -7.204370498657227

Token 324: '_sequence' (ID: 55606)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5608417391777039
    2. 'dex' → logprob: -0.9358417391777039
    3. 'element' → logprob: -4.1858415603637695
    4. 'put' → logprob: -5.1858415603637695
    5. '_array' → logprob: -5.1858415603637695
    6. '_element' → logprob: -5.3108415603637695
    7. 'list' → logprob: -6.1858415603637695
    8. 'g' → logprob: -7.4358415603637695
    9. '_' → logprob: -7.5608415603637695
    10. '_dict' → logprob: -8.06084156036377

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04915907233953476
    2. '=' → logprob: -3.424159049987793
    3. 's' → logprob: -4.174159049987793
    4. '_' → logprob: -12.924159049987793
    5. ' ' → logprob: -13.799159049987793
    6. '[' → logprob: -15.049159049987793
    7. '_positions' → logprob: -15.549159049987793
    8. '＝' → logprob: -15.674159049987793
    9. ' =[' → logprob: -15.674159049987793
    10. ' s' → logprob: -15.924159049987793

Token 326: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1625438928604126
    2. '0' → logprob: -2.537543773651123
    3. '[' → logprob: -3.787543773651123
    4. '{' → logprob: -4.287543773651123
    5. '[-' → logprob: -4.287543773651123
    6. '-' → logprob: -4.662543773651123
    7. '1' → logprob: -5.537543773651123
    8. '[]' → logprob: -5.912543773651123
    9. 'create' → logprob: -6.287543773651123
    10. '[element' → logprob: -6.787543773651123

Token 327: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08218507468700409
    2. '0' → logprob: -2.7071850299835205
    3. '-IN' → logprob: -5.2071852684021
    4. 'IN' → logprob: -5.3321852684021
    5. '-element' → logprob: -6.9571852684021
    6. 'None' → logprob: -8.457184791564941
    7. 'element' → logprob: -8.707184791564941
    8. '[]' → logprob: -9.457184791564941
    9. '-in' → logprob: -9.582184791564941
    10. 'False' → logprob: -9.582184791564941

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024404549039900303
    2. ']*(' → logprob: -6.377440452575684
    3. 'for' → logprob: -8.127440452575684
    4. ' for' → logprob: -8.252440452575684
    5. ']*' → logprob: -8.627440452575684
    6. ' ]' → logprob: -13.877440452575684
    7. ',' → logprob: -14.752440452575684
    8. '*' → logprob: -14.877440452575684
    9. ']+' → logprob: -15.252440452575684
    10. '   ' → logprob: -15.502440452575684

Token 329: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0614566802978516
    2. 'for' → logprob: -1.0614566802978516
    3. ' for' → logprob: -2.1864566802978516
    4. ' *' → logprob: -2.5614566802978516
    5. '*(' → logprob: -3.1864566802978516
    6. ']' → logprob: -3.4364566802978516
    7. ']*(' → logprob: -3.8114566802978516
    8. '(element' → logprob: -4.561456680297852
    9. ']*' → logprob: -5.686456680297852
    10. ')' → logprob: -5.686456680297852

Token 330: ' element' (ID: 3577)
  Prédit: '(element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.5211189985275269
    2. '(IN' → logprob: -1.1461189985275269
    3. 'element' → logprob: -2.7711191177368164
    4. '(' → logprob: -4.396119117736816
    5. '(MAX' → logprob: -4.396119117736816
    6. '(max' → logprob: -8.146119117736816
    7. '(N' → logprob: -8.771119117736816
    8. '(M' → logprob: -8.771119117736816
    9. '(len' → logprob: -9.271119117736816
    10. '(in' → logprob: -9.396119117736816

Token 331: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2664456789934775e-06
    2. '_list' → logprob: -14.000000953674316
    3. 'count' → logprob: -14.875000953674316
    4. 's' → logprob: -18.875001907348633
    5. '_counts' → logprob: -19.125001907348633
    6. '_' → logprob: -19.375001907348633
    7. '_c' → logprob: -20.250001907348633
    8. '_COUNT' → logprob: -20.625001907348633
    9. 'Count' → logprob: -21.500001907348633
    10. '_counter' → logprob: -22.000001907348633

Token 332: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018901104107499123
    2. 'for' → logprob: -5.0189008712768555
    3. 'position' → logprob: -5.5189008712768555
    4. 'current' → logprob: -5.8939008712768555
    5. ' for' → logprob: -6.5189008712768555
    6. ' 
' → logprob: -6.6439008712768555
    7. 'index' → logprob: -7.3939008712768555
    8. '
' → logprob: -8.518900871276855
    9. 'positions' → logprob: -8.768900871276855
    10. 'max' → logprob: -8.893900871276855

Token 333: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47668230533599854
    2. 'current' → logprob: -1.1016823053359985
    3. 'last' → logprob: -3.726682186126709
    4. 'index' → logprob: -4.601682186126709
    5. 'previous' → logprob: -5.101682186126709
    6. 'position' → logprob: -6.101682186126709
    7. 'max' → logprob: -6.476682186126709
    8. 'prev' → logprob: -7.476682186126709
    9. 'sequence' → logprob: -7.851682186126709
    10. 'positions' → logprob: -8.101682662963867

Token 334: ' zero' (ID: 12421)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03398555889725685
    2. ' index' → logprob: -3.9089856147766113
    3. 'i' → logprob: -5.033985614776611
    4. 'index' → logprob: -5.533985614776611
    5. ' idx' → logprob: -6.783985614776611
    6. ' _' → logprob: -7.658985614776611
    7. ' value' → logprob: -8.033985137939453
    8. 'value' → logprob: -8.283985137939453
    9. '_index' → logprob: -8.408985137939453
    10. '_' → logprob: -8.908985137939453

Token 335: '_based' (ID: 167300)
  Prédit: '_based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -0.820090651512146
    2. '_index' → logprob: -1.195090651512146
    3. '_' → logprob: -2.1950907707214355
    4. '_i' → logprob: -3.6950907707214355
    5. ' in' → logprob: -3.6950907707214355
    6. '_idx' → logprob: -3.8200907707214355
    7. '_pos' → logprob: -4.1950907707214355
    8. '_position' → logprob: -4.3200907707214355
    9. '_in' → logprob: -4.5700907707214355
    10. 'based' → logprob: -4.8200907707214355

Token 336: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.01433720625936985
    2. ' _' → logprob: -5.139337062835693
    3. '_idx' → logprob: -5.639337062835693
    4. '_i' → logprob: -6.014337062835693
    5. ' in' → logprob: -6.764337062835693
    6. ' index' → logprob: -8.139337539672852
    7. '_' → logprob: -8.264337539672852
    8. '_position' → logprob: -8.264337539672852
    9. ' i' → logprob: -8.639337539672852
    10. 'index' → logprob: -9.639337539672852

Token 337: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1505514532327652
    2. 'in' → logprob: -2.1505515575408936
    3. ',' → logprob: -3.7755515575408936
    4. ' ,' → logprob: -8.150551795959473
    5. ' ' → logprob: -9.275551795959473
    6. ',in' → logprob: -11.150551795959473
    7. '	in' → logprob: -11.525551795959473
    8. '_in' → logprob: -12.650551795959473
    9. 's' → logprob: -12.900551795959473
    10. ' i' → logprob: -13.150551795959473

Token 338: ' sequence' (ID: 16281)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.13127362728118896
    2. 'value' → logprob: -2.1312737464904785
    3. ' element' → logprob: -5.7562737464904785
    4. ' value' → logprob: -7.3812737464904785
    5. 'number' → logprob: -8.88127326965332
    6. 'a' → logprob: -8.88127326965332
    7. 'elem' → logprob: -9.63127326965332
    8. 'x' → logprob: -9.63127326965332
    9. 'num' → logprob: -10.00627326965332
    10. 'val' → logprob: -10.63127326965332

Token 339: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6264463663101196
    2. '_element' → logprob: -0.8764463663101196
    3. '_number' → logprob: -3.62644624710083
    4. '_index' → logprob: -4.12644624710083
    5. ' in' → logprob: -6.00144624710083
    6. '_' → logprob: -6.37644624710083
    7. '_id' → logprob: -7.37644624710083
    8. 'element' → logprob: -7.87644624710083
    9. ',' → logprob: -8.126446723937988
    10. '_num' → logprob: -9.001446723937988

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.637284517288208
    2. 'in' → logprob: -0.762284517288208
    3. ',' → logprob: -5.387284278869629
    4. ' ' → logprob: -9.762284278869629
    5. '	in' → logprob: -10.887284278869629
    6. ',in' → logprob: -11.637284278869629
    7. ' ,' → logprob: -12.012284278869629
    8. '_in' → logprob: -13.137284278869629
    9. 'import' → logprob: -13.887284278869629
    10. '  ' → logprob: -14.387284278869629

Token 341: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.03804183006286621
    2. ' enumerate' → logprob: -3.288041830062866
    3. 'en' → logprob: -16.163042068481445
    4. 'enum' → logprob: -17.288042068481445
    5. '
' → logprob: -17.538042068481445
    6. 'zip' → logprob: -17.663042068481445
    7. '```' → logprob: -17.663042068481445
    8. ' ' → logprob: -17.788042068481445
    9. '.enumer' → logprob: -18.163042068481445
    10. '(en' → logprob: -18.163042068481445

Token 342: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -6.992775888647884e-05
    2. 'element' → logprob: -9.625069618225098
    3. '(range' → logprob: -12.875069618225098
    4. '(' → logprob: -14.250069618225098
    5. ' (' → logprob: -15.250069618225098
    6. '[element' → logprob: -16.375070571899414
    7. ' element' → logprob: -16.625070571899414
    8. '(en' → logprob: -16.875070571899414
    9. '(elements' → logprob: -17.250070571899414
    10. '(ele' → logprob: -17.250070571899414

Token 343: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. '_count' → logprob: -15.000000953674316
    3. 's' → logprob: -15.375000953674316
    4. '_' → logprob: -17.5
    5. 'List' → logprob: -18.375
    6. 'list' → logprob: -18.625
    7. '_l' → logprob: -19.625
    8. '_List' → logprob: -20.0
    9. '_lists' → logprob: -20.625
    10. ' _' → logprob: -21.25

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005311904475092888
    2. ':' → logprob: -5.255311965942383
    3. '):
' → logprob: -9.630311965942383
    4. ']:' → logprob: -12.005311965942383
    5. '():' → logprob: -12.630311965942383
    6. ' :' → logprob: -14.255311965942383
    7. '>:' → logprob: -14.380311965942383
    8. '}:' → logprob: -14.505311965942383
    9. ' ):' → logprob: -14.880311965942383
    10. ')' → logprob: -14.880311965942383

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003440176835283637
    2. 'position' → logprob: -6.7534403800964355
    3. ' if' → logprob: -7.0034403800964355
    4. ' position' → logprob: -7.2534403800964355
    5. ':' → logprob: -8.253439903259277
    6. 'if' → logprob: -8.753439903259277
    7. ':
' → logprob: -9.128439903259277
    8. '):
' → logprob: -10.003439903259277
    9. '[position' → logprob: -10.378439903259277
    10. ',' → logprob: -11.878439903259277

Token 346: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' (adapté à ' position') → logprob: -0.008092868141829967
    2. 'if' → logprob: -5.258092880249023
    3. '   ' → logprob: -5.883092880249023
    4. ' position' → logprob: -10.258092880249023
    5. 'pos' → logprob: -11.258092880249023
    6. 'positions' → logprob: -12.508092880249023
    7. 'sequence' → logprob: -12.883092880249023
    8. '	position' → logprob: -13.008092880249023
    9. '#' → logprob: -13.383092880249023
    10. 'Position' → logprob: -13.633092880249023

Token 347: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0001951961312443018
    2. '_' → logprob: -9.500195503234863
    3. '[_' → logprob: -10.000195503234863
    4. 's' → logprob: -11.125195503234863
    5. '_[' → logprob: -12.000195503234863
    6. '_s' → logprob: -12.125195503234863
    7. '_position' → logprob: -12.250195503234863
    8. '[in' → logprob: -12.375195503234863
    9. '[position' → logprob: -12.375195503234863
    10. '_at' → logprob: -12.500195503234863

Token 348: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0015187880489975214
    2. 'sequence' → logprob: -6.501518726348877
    3. '_' → logprob: -11.251519203186035
    4. ' sequence' → logprob: -13.001519203186035
    5. '_list' → logprob: -14.626519203186035
    6. '_seq' → logprob: -15.001519203186035
    7. 's' → logprob: -15.126519203186035
    8. '_sequences' → logprob: -16.12651824951172
    9. '_s' → logprob: -16.50151824951172
    10. ' _' → logprob: -16.62651824951172

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.955703818472102e-05
    2. '[position' → logprob: -10.000059127807617
    3. '   ' → logprob: -12.250059127807617
    4. ' [' → logprob: -12.750059127807617
    5. '[element' → logprob: -13.375059127807617
    6. '[
' → logprob: -14.000059127807617
    7. '```' → logprob: -14.500059127807617
    8. '=' → logprob: -14.500059127807617
    9. 'sequence' → logprob: -15.250059127807617
    10. '[s' → logprob: -15.375059127807617

Token 350: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -2.618001053633634e-05
    2. ' sequence' → logprob: -11.000025749206543
    3. 'zero' → logprob: -12.125025749206543
    4. '(sequence' → logprob: -13.250025749206543
    5. '   ' → logprob: -14.250025749206543
    6. '0' → logprob: -14.500025749206543
    7. ' ' → logprob: -14.625025749206543
    8. '
' → logprob: -15.625025749206543
    9. 'sequ' → logprob: -15.750025749206543
    10. 'seq' → logprob: -17.37502670288086

Token 351: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00027432903880253434
    2. '_' → logprob: -8.625274658203125
    3. 'value' → logprob: -9.625274658203125
    4. '=' → logprob: -11.750274658203125
    5. '-' → logprob: -12.125274658203125
    6. ']' → logprob: -12.500274658203125
    7. '_index' → logprob: -13.375274658203125
    8. '_]' → logprob: -13.500274658203125
    9. 'Value' → logprob: -13.750274658203125
    10. '
' → logprob: -14.125274658203125

Token 352: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029947367147542536
    2. ']=' → logprob: -8.500299453735352
    3. ' ]' → logprob: -9.375299453735352
    4. '-' → logprob: -11.625299453735352
    5. ' -' → logprob: -13.500299453735352
    6. ']+=' → logprob: -14.750299453735352
    7. '=' → logprob: -15.500299453735352
    8. ']
' → logprob: -15.875299453735352
    9. ']==' → logprob: -17.25029945373535
    10. ')' → logprob: -17.50029945373535

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -16.50006675720215
    4. ']' → logprob: -16.50006675720215
    5. '<|end|>' → logprob: -17.12506675720215
    6. '```' → logprob: -17.50006675720215
    7. '=' → logprob: -18.12506675720215
    8. ')' → logprob: -18.37506675720215
    9. '１' → logprob: -18.93756675720215
    10. '>' → logprob: -19.00006675720215

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.625
    4. '=' → logprob: -17.75
    5. '<|end|>' → logprob: -18.25
    6. '   ' → logprob: -19.5
    7. '۱' → logprob: -19.875
    8. '１' → logprob: -20.0
    9. '`' → logprob: -20.0
    10. '>' → logprob: -20.0625

Token 355: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010622250847518444
    2. ']=' → logprob: -7.001062393188477
    3. '=' → logprob: -8.876062393188477
    4. ' ]' → logprob: -11.501062393188477
    5. ' =' → logprob: -13.876062393188477
    6. ']+=' → logprob: -17.376062393188477
    7. ')' → logprob: -17.626062393188477
    8. ' ' → logprob: -18.626062393188477
    9. '[' → logprob: -18.751062393188477
    10. '   ' → logprob: -18.876062393188477

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. '=int' → logprob: -15.203890800476074
    4. '＝' → logprob: -15.828890800476074
    5. '=index' → logprob: -15.828890800476074
    6. '.=' → logprob: -16.703889846801758
    7. '=s' → logprob: -16.828889846801758
    8. '=z' → logprob: -17.453889846801758
    9. '+=' → logprob: -17.828889846801758
    10. ',' → logprob: -17.828889846801758

Token 357: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.00012439649435691535
    2. ' zero' → logprob: -9.000123977661133
    3. 'z' → logprob: -14.375123977661133
    4. 'ze' → logprob: -15.500123977661133
    5. '0' → logprob: -16.750123977661133
    6. 'zer' → logprob: -16.875123977661133
    7. '   ' → logprob: -16.875123977661133
    8. ' ' → logprob: -18.375123977661133
    9. '.zero' → logprob: -19.125123977661133
    10. 'zone' → logprob: -19.750123977661133

Token 358: '_based' (ID: 167300)
  Prédit: '_based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -9.376848902320489e-05
    2. '-based' → logprob: -9.750093460083008
    3. '_base' → logprob: -10.750093460083008
    4. ' based' → logprob: -12.125093460083008
    5. 'based' → logprob: -13.000093460083008
    6. '_bas' → logprob: -13.125093460083008
    7. ' _' → logprob: -13.250093460083008
    8. '_' → logprob: -13.375093460083008
    9. '_b' → logprob: -15.375093460083008
    10. ' -' → logprob: -15.750093460083008

Token 359: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.868328920158092e-05
    2. 'index' → logprob: -10.750028610229492
    3. '_idx' → logprob: -12.250028610229492
    4. '_' → logprob: -13.250028610229492
    5. '```' → logprob: -16.000028610229492
    6. ' _' → logprob: -16.250028610229492
    7. '_i' → logprob: -16.625028610229492
    8. 'Index' → logprob: -16.625028610229492
    9. '__' → logprob: -16.750028610229492
    10. '1' → logprob: -17.375028610229492

Token 360: '

' (ID: 279)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2020361423492432
    2. 'expected' → logprob: -1.5770361423492432
    3. 'max' → logprob: -1.7020361423492432
    4. 'answer' → logprob: -2.577036142349243
    5. 'long' → logprob: -2.827036142349243
    6. 'previous' → logprob: -3.327036142349243
    7. 'missing' → logprob: -3.327036142349243
    8. 'correct' → logprob: -3.452036142349243
    9. 'print' → logprob: -4.077035903930664
    10. 'count' → logprob: -4.577035903930664

Token 361: 'maximum' (ID: 78601)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.137534737586975
    2. 'previous' → logprob: -1.887534737586975
    3. 'max' → logprob: -2.0125346183776855
    4. 'print' → logprob: -2.5125346183776855
    5. 'for' → logprob: -2.6375346183776855
    6. 'correct' → logprob: -2.8875346183776855
    7. 'expected' → logprob: -3.0125346183776855
    8. ')' → logprob: -3.5125346183776855
    9. 'answer' → logprob: -3.6375346183776855
    10. 'prev' → logprob: -4.1375346183776855

Token 362: '_con' (ID: 7531)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.07628772407770157
    2. '_sequence' → logprob: -3.7012877464294434
    3. '_chain' → logprob: -4.076287746429443
    4. '_in' → logprob: -4.076287746429443
    5. '_value' → logprob: -5.576287746429443
    6. '_run' → logprob: -6.076287746429443
    7. '_difference' → logprob: -6.076287746429443
    8. '_con' → logprob: -6.576287746429443
    9. '_increment' → logprob: -6.826287746429443
    10. '_sub' → logprob: -7.076287746429443

Token 363: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.1735946089029312
    2. 't' → logprob: -1.92359459400177
    3. 's' → logprob: -4.4235944747924805
    4. 'tin' → logprob: -7.2985944747924805
    5. 'sec' → logprob: -8.67359447479248
    6. 'sect' → logprob: -9.42359447479248
    7. '_' → logprob: -9.79859447479248
    8. 'secut' → logprob: -9.79859447479248
    9. 'seq' → logprob: -10.04859447479248
    10. 'se' → logprob: -10.54859447479248

Token 364: '_sorted' (ID: 104993)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.10436112433671951
    2. '_st' → logprob: -3.104361057281494
    3. '_run' → logprob: -3.354361057281494
    4. '_sequence' → logprob: -4.854361057281494
    5. '_segment' → logprob: -5.354361057281494
    6. '_count' → logprob: -6.229361057281494
    7. '_difference' → logprob: -6.854361057281494
    8. '=' → logprob: -7.104361057281494
    9. '_gap' → logprob: -7.604361057281494
    10. ' =' → logprob: -7.604361057281494

Token 365: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0330529510974884
    2. '=' → logprob: -3.783052921295166
    3. ' =' → logprob: -5.783052921295166
    4. '_count' → logprob: -6.158052921295166
    5. '_st' → logprob: -6.533052921295166
    6. '_run' → logprob: -7.033052921295166
    7. '_sub' → logprob: -7.283052921295166
    8. '_segment' → logprob: -7.408052921295166
    9. '_sequence' → logprob: -7.533052921295166
    10. '_len' → logprob: -8.783053398132324

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. ',' → logprob: -15.701414108276367
    4. ' ' → logprob: -15.951414108276367
    5. ' ' → logprob: -15.951414108276367
    6. '_' → logprob: -17.576414108276367
    7. '＝' → logprob: -17.576414108276367
    8. ' =
' → logprob: -19.326414108276367
    9. '=max' → logprob: -19.451414108276367
    10. '=int' → logprob: -19.701414108276367

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001881996402516961
    2. ' ' → logprob: -6.626882076263428
    3. '0' → logprob: -7.501882076263428
    4. '   ' → logprob: -13.81438159942627
    5. 'ans' → logprob: -14.87688159942627
    6. '１' → logprob: -14.93938159942627
    7. 'max' → logprob: -15.62688159942627
    8. 'current' → logprob: -15.62688159942627
    9. '  ' → logprob: -15.68938159942627
    10. ' ' → logprob: -15.75188159942627

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007157695363275707
    2. '0' → logprob: -7.250715732574463
    3. ' ' → logprob: -12.375716209411621
    4. 'ans' → logprob: -14.875716209411621
    5. 'max' → logprob: -15.750716209411621
    6. 'current' → logprob: -15.875716209411621
    7. 'count' → logprob: -15.875716209411621
    8. '１' → logprob: -16.375715255737305
    9. 'result' → logprob: -16.625715255737305
    10. 'tmp' → logprob: -17.000715255737305

Token 369: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0025529502891004086
    2. 'for' → logprob: -6.2525529861450195
    3. 'con' → logprob: -7.7525529861450195
    4. 'previous' → logprob: -9.62755298614502
    5. 'maximum' → logprob: -10.25255298614502
    6. 'max' → logprob: -10.50255298614502
    7. ',current' → logprob: -10.87755298614502
    8. ' current' → logprob: -11.12755298614502
    9. ',' → logprob: -11.25255298614502
    10. 'counter' → logprob: -12.12755298614502

Token 370: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0008226146455854177
    2. 'for' → logprob: -7.6258225440979
    3. 'con' → logprob: -8.125823020935059
    4. 'maximum' → logprob: -10.750823020935059
    5. 'currently' → logprob: -11.750823020935059
    6. 'temporary' → logprob: -12.000823020935059
    7. 'counter' → logprob: -14.375823020935059
    8. 'temp' → logprob: -14.625823020935059
    9. 'running' → logprob: -14.750823020935059
    10. 'max' → logprob: -15.000823020935059

Token 371: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.7483612895011902
    2. '_length' → logprob: -0.7483612895011902
    3. '_sorted' → logprob: -3.123361349105835
    4. '_max' → logprob: -5.123361110687256
    5. '_sequence' → logprob: -6.498361110687256
    6. '_st' → logprob: -7.498361110687256
    7. '_count' → logprob: -7.623361110687256
    8. '_index' → logprob: -7.873361110687256
    9. '_' → logprob: -8.373361587524414
    10. '_cont' → logprob: -8.623361587524414

Token 372: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.0004842962371185422
    2. 's' → logprob: -7.875484466552734
    3. 'secut' → logprob: -9.500484466552734
    4. 'se' → logprob: -11.750484466552734
    5. 'sequence' → logprob: -12.125484466552734
    6. 'current' → logprob: -12.750484466552734
    7. 'maximum' → logprob: -12.750484466552734
    8. 'sect' → logprob: -12.750484466552734
    9. 't' → logprob: -13.000484466552734
    10. '```' → logprob: -13.375484466552734

Token 373: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.12775400280952454
    2. '_sorted' → logprob: -2.127753973007202
    3. '_count' → logprob: -7.752754211425781
    4. '_max' → logprob: -8.377754211425781
    5. '_sequence' → logprob: -9.627754211425781
    6. '_' → logprob: -10.127754211425781
    7. '_index' → logprob: -10.377754211425781
    8. '_con' → logprob: -11.627754211425781
    9. '_counter' → logprob: -12.377754211425781
    10. 'sorted' → logprob: -13.127754211425781

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '＝' → logprob: -17.136871337890625
    4. ' ' → logprob: -18.261871337890625
    5. '=int' → logprob: -18.386871337890625
    6. '=max' → logprob: -19.011871337890625
    7. 'max' → logprob: -19.011871337890625
    8. ' ' → logprob: -20.011871337890625
    9. ',' → logprob: -20.386871337890625
    10. '   ' → logprob: -20.511871337890625

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.62501335144043
    5. '  ' → logprob: -19.18751335144043
    6. '```' → logprob: -19.18751335144043
    7. '１' → logprob: -19.37501335144043
    8. '۱' → logprob: -19.62501335144043
    9. '' → logprob: -20.37501335144043
    10. '<|end|>' → logprob: -20.43751335144043

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.50000286102295
    4. '' → logprob: -17.062503814697266
    5. '   ' → logprob: -17.250003814697266
    6. '１' → logprob: -17.687503814697266
    7. '```' → logprob: -17.937503814697266
    8. '
' → logprob: -18.312503814697266
    9. '۱' → logprob: -18.500003814697266
    10. '2' → logprob: -18.500003814697266

Token 377: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.125001907348633
    3. '
' → logprob: -15.250001907348633
    4. 'previous' → logprob: -19.000001907348633
    5. 'For' → logprob: -20.125001907348633
    6. '	for' → logprob: -20.125001907348633
    7. '```' → logprob: -20.625001907348633
    8. '_for' → logprob: -20.750001907348633
    9. 'prev' → logprob: -20.875001907348633
    10. 'last' → logprob: -21.125001907348633

Token 378: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.625
    3. 'previous' → logprob: -18.625
    4. '
' → logprob: -20.5
    5. 'last' → logprob: -21.25
    6. 'prev' → logprob: -21.375
    7. 'fo' → logprob: -22.0
    8. 'For' → logprob: -22.25
    9. '	for' → logprob: -22.25
    10. 'f' → logprob: -22.375

Token 379: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31855112314224243
    2. 'index' → logprob: -1.3185510635375977
    3. 'current' → logprob: -5.568551063537598
    4. ' i' → logprob: -7.443551063537598
    5. ' index' → logprob: -7.818551063537598
    6. 'idx' → logprob: -8.568551063537598
    7. 'value' → logprob: -8.693551063537598
    8. 'number' → logprob: -10.818551063537598
    9. 'next' → logprob: -11.068551063537598
    10. ' current' → logprob: -11.318551063537598

Token 380: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2020263820886612
    2. '_in' → logprob: -2.4520263671875
    3. 'in' → logprob: -2.9520263671875
    4. '_index' → logprob: -3.2020263671875
    5. '_idx' → logprob: -6.5770263671875
    6. ' ' → logprob: -7.2020263671875
    7. 'index' → logprob: -7.4520263671875
    8. '   ' → logprob: -7.7020263671875
    9. '	in' → logprob: -9.4520263671875
    10. 'In' → logprob: -9.5770263671875

Token 381: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269860088825226
    2. 'in' → logprob: -2.0176985263824463
    3. ',' → logprob: -11.642698287963867
    4. ' ' → logprob: -12.392698287963867
    5. '	in' → logprob: -12.517698287963867
    6. '_in' → logprob: -13.142698287963867
    7. 'range' → logprob: -13.517698287963867
    8. '   ' → logprob: -14.142698287963867
    9. 'In' → logprob: -14.142698287963867
    10. 'n' → logprob: -14.767698287963867

Token 382: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.723973582556937e-05
    2. ' range' → logprob: -11.000017166137695
    3. 'position' → logprob: -14.500017166137695
    4. '   ' → logprob: -18.250017166137695
    5. '(range' → logprob: -19.125017166137695
    6. ' ' → logprob: -19.750017166137695
    7. '	range' → logprob: -20.125017166137695
    8. 'list' → logprob: -21.125017166137695
    9. 'ran' → logprob: -21.625017166137695
    10. '  ' → logprob: -22.500017166137695

Token 383: '(element' (ID: 22709)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007281353231519461
    2. '1' → logprob: -5.007281303405762
    3. 'element' → logprob: -7.632281303405762
    4. '(element' → logprob: -9.757281303405762
    5. '   ' → logprob: -10.757281303405762
    6. 'len' → logprob: -14.257281303405762
    7. '(len' → logprob: -14.632281303405762
    8. '
' → logprob: -15.257281303405762
    9. ' ' → logprob: -15.507281303405762
    10. ' (' → logprob: -15.757281303405762

Token 384: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.464347173576243e-05
    2. '_index' → logprob: -10.75003433227539
    3. 'count' → logprob: -12.75003433227539
    4. '_length' → logprob: -13.00003433227539
    5. '_in' → logprob: -13.37503433227539
    6. 'Count' → logprob: -14.00003433227539
    7. '1' → logprob: -14.12503433227539
    8. 's' → logprob: -14.37503433227539
    9. '   ' → logprob: -14.50003433227539
    10. ')' → logprob: -14.50003433227539

Token 385: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03900089114904404
    2. '-' → logprob: -3.539000988006592
    3. '1' → logprob: -5.664000988006592
    4. '):' → logprob: -5.789000988006592
    5. '):
' → logprob: -6.664000988006592
    6. '   ' → logprob: -6.789000988006592
    7. ' ' → logprob: -9.039000511169434
    8. '[' → logprob: -9.164000511169434
    9. '2' → logprob: -11.039000511169434
    10. '
' → logprob: -11.789000511169434

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. '```' → logprob: -18.7500057220459
    5. '2' → logprob: -19.8750057220459
    6. '
' → logprob: -19.8750057220459
    7. ')' → logprob: -20.5000057220459
    8. '１' → logprob: -20.6250057220459
    9. 'for' → logprob: -20.8750057220459
    10. '0' → logprob: -21.2500057220459

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.125
    6. '１' → logprob: -20.375
    7. '0' → logprob: -20.375
    8. '۱' → logprob: -20.5
    9. ')' → logprob: -20.875
    10. '2' → logprob: -21.125

Token 388: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00538197997957468
    2. '):' → logprob: -5.255382061004639
    3. ' ):
' → logprob: -8.88038158416748
    4. '):
' → logprob: -11.88038158416748
    5. ')' → logprob: -14.00538158416748
    6. ' ):' → logprob: -14.25538158416748
    7. '   ' → logprob: -14.63038158416748
    8. '):

' → logprob: -16.130382537841797
    9. ':
' → logprob: -16.380382537841797
    10. ':' → logprob: -16.630382537841797

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06282972544431686
    2. ' if' → logprob: -2.8128297328948975
    3. 'if' → logprob: -7.062829494476318
    4. '	if' → logprob: -12.687829971313477
    5. '    
' → logprob: -13.812829971313477
    6. '   ' → logprob: -14.812829971313477
    7. '```' → logprob: -15.312829971313477
    8. '
' → logprob: -15.687829971313477
    9. ' current' → logprob: -16.062829971313477
    10. ' If' → logprob: -16.312829971313477

Token 390: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0921942703134846e-05
    2. ' if' → logprob: -11.75001049041748
    3. '   ' → logprob: -12.75001049041748
    4. 'current' → logprob: -15.75001049041748
    5. 'If' → logprob: -20.000011444091797
    6. 'i' → logprob: -20.125011444091797
    7. '	if' → logprob: -20.500011444091797
    8. '```' → logprob: -21.375011444091797
    9. 'next' → logprob: -21.750011444091797
    10. ' ' → logprob: -22.375011444091797

Token 391: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.6240566083070007e-06
    2. ' position' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.500001907348633
    4. 'pos' → logprob: -17.000001907348633
    5. '	position' → logprob: -20.000001907348633
    6. '(position' → logprob: -20.625001907348633
    7. '[position' → logprob: -22.125001907348633
    8. 'positions' → logprob: -22.375001907348633
    9. ' ' → logprob: -22.375001907348633
    10. '
' → logprob: -22.500001907348633

Token 392: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.000763510703109e-05
    2. 'in' → logprob: -10.625040054321289
    3. '_index' → logprob: -11.750040054321289
    4. 's' → logprob: -12.625040054321289
    5. 'In' → logprob: -14.000040054321289
    6. '   ' → logprob: -14.500040054321289
    7. '[_' → logprob: -14.500040054321289
    8. ' in' → logprob: -15.000040054321289
    9. '[position' → logprob: -15.000040054321289
    10. '
' → logprob: -15.000040054321289

Token 393: '_sequence' (ID: 55606)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.038045622408390045
    2. '_sequence' → logprob: -3.288045644760132
    3. ' sequence' → logprob: -12.538045883178711
    4. 'position' → logprob: -15.413045883178711
    5. 'sequ' → logprob: -15.788045883178711
    6. '[' → logprob: -16.03804588317871
    7. 'Sequence' → logprob: -16.41304588317871
    8. 'quence' → logprob: -16.41304588317871
    9. '(sequence' → logprob: -18.16304588317871
    10. '_' → logprob: -18.16304588317871

Token 394: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -5.657694418914616e-05
    2. '[' → logprob: -9.875056266784668
    3. '[pos' → logprob: -12.500056266784668
    4. ' [' → logprob: -14.125056266784668
    5. '[
' → logprob: -15.000056266784668
    6. 'position' → logprob: -15.875056266784668
    7. '   ' → logprob: -16.875057220458984
    8. '[next' → logprob: -17.625057220458984
    9. '[index' → logprob: -18.125057220458984
    10. '[property' → logprob: -18.500057220458984

Token 395: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.3822154111694545e-05
    2. '_in' → logprob: -10.250043869018555
    3. 'index' → logprob: -12.125043869018555
    4. '+' → logprob: -14.125043869018555
    5. '[index' → logprob: -14.500043869018555
    6. '   ' → logprob: -14.750043869018555
    7. '```' → logprob: -15.000043869018555
    8. 's' → logprob: -15.875043869018555
    9. ']' → logprob: -15.875043869018555
    10. ')' → logprob: -16.250043869018555

Token 396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036120038479566574
    2. '+' → logprob: -3.5361199378967285
    3. '<' → logprob: -5.9111199378967285
    4. ']<' → logprob: -6.1611199378967285
    5. ']+' → logprob: -7.1611199378967285
    6. ' +' → logprob: -7.5361199378967285
    7. ')' → logprob: -9.661120414733887
    8. ' ' → logprob: -9.786120414733887
    9. '   ' → logprob: -10.536120414733887
    10. ' ]' → logprob: -10.786120414733887

Token 397: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.003965485841035843
    2. ' <' → logprob: -5.628965377807617
    3. '+' → logprob: -8.003965377807617
    4. '>' → logprob: -11.253965377807617
    5. ' +' → logprob: -11.253965377807617
    6. '<
' → logprob: -13.128965377807617
    7. ' ' → logprob: -14.003965377807617
    8. '   ' → logprob: -15.003965377807617
    9. '<int' → logprob: -15.378965377807617
    10. '
' → logprob: -15.503965377807617

Token 398: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0001234428636962548
    2. ' position' → logprob: -9.000123023986816
    3. 'pos' → logprob: -17.250123977661133
    4. '	position' → logprob: -17.250123977661133
    5. '   ' → logprob: -17.500123977661133
    6. '[position' → logprob: -21.000123977661133
    7. 'posit' → logprob: -21.125123977661133
    8. '(position' → logprob: -21.125123977661133
    9. '_position' → logprob: -21.250123977661133
    10. ' ' → logprob: -21.500123977661133

Token 399: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.963691804325208e-05
    2. '_index' → logprob: -10.750029563903809
    3. 'in' → logprob: -12.000029563903809
    4. 'In' → logprob: -14.250029563903809
    5. '   ' → logprob: -14.750029563903809
    6. 'index' → logprob: -15.125029563903809
    7. '_position' → logprob: -16.375030517578125
    8. '+' → logprob: -16.500030517578125
    9. ')' → logprob: -16.625030517578125
    10. '_indices' → logprob: -17.125030517578125

Token 400: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.12693534791469574
    2. 'sequence' → logprob: -2.1269352436065674
    3. '_in' → logprob: -12.751935005187988
    4. ' sequence' → logprob: -12.876935005187988
    5. '_index' → logprob: -14.501935005187988
    6. 'quence' → logprob: -14.626935005187988
    7. 'Sequence' → logprob: -15.251935005187988
    8. 'position' → logprob: -16.001935958862305
    9. 'sequ' → logprob: -16.251935958862305
    10. '_SEQUENCE' → logprob: -16.751935958862305

Token 401: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -7.64839569455944e-05
    2. 'position' → logprob: -9.500076293945312
    3. '[' → logprob: -14.000076293945312
    4. ' [' → logprob: -15.125076293945312
    5. '[pos' → logprob: -15.125076293945312
    6. '	position' → logprob: -17.000076293945312
    7. '[
' → logprob: -17.125076293945312
    8. '   ' → logprob: -17.125076293945312
    9. '(position' → logprob: -17.500076293945312
    10. ' position' → logprob: -18.000076293945312

Token 402: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.843177233240567e-05
    2. 'index' → logprob: -11.125018119812012
    3. '+' → logprob: -13.000018119812012
    4. 'Index' → logprob: -14.750018119812012
    5. '_INDEX' → logprob: -14.750018119812012
    6. '```' → logprob: -15.125018119812012
    7. '   ' → logprob: -15.500018119812012
    8. '_' → logprob: -17.750019073486328
    9. '1' → logprob: -18.125019073486328
    10. '_in' → logprob: -18.125019073486328

Token 403: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02977895736694336
    2. ' +' → logprob: -3.5297789573669434
    3. '[' → logprob: -11.529779434204102
    4. '   ' → logprob: -11.904779434204102
    5. '1' → logprob: -12.029779434204102
    6. ']' → logprob: -13.154779434204102
    7. '+]' → logprob: -13.279779434204102
    8. ']+' → logprob: -14.154779434204102
    9. ' ' → logprob: -15.279779434204102
    10. '_plus' → logprob: -15.404779434204102

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -15.125001907348633
    4. '```' → logprob: -16.625001907348633
    5. 'index' → logprob: -17.250001907348633
    6. 'position' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '_index' → logprob: -19.125001907348633
    9. ']' → logprob: -20.500001907348633
    10. '
' → logprob: -20.750001907348633

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.750000953674316
    3. '0' → logprob: -15.000000953674316
    4. 'index' → logprob: -15.875000953674316
    5. 'position' → logprob: -17.5
    6. '_index' → logprob: -18.0
    7. '   ' → logprob: -19.375
    8. '```' → logprob: -19.375
    9. 'Index' → logprob: -20.625
    10. '１' → logprob: -22.375

Token 406: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017314812168478966
    2. '):' → logprob: -4.392314910888672
    3. ' :' → logprob: -6.267314910888672
    4. ':
' → logprob: -6.517314910888672
    5. ']:' → logprob: -6.767314910888672
    6. '>:' → logprob: -9.517314910888672
    7. '):
' → logprob: -9.642314910888672
    8. ' ):' → logprob: -10.142314910888672
    9. '():' → logprob: -10.642314910888672
    10. '   ' → logprob: -11.267314910888672

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047654795343987644
    2. 'current' → logprob: -8.625476837158203
    3. ' current' → logprob: -8.750476837158203
    4. '   ' → logprob: -9.000476837158203
    5. '_current' → logprob: -12.500476837158203
    6. '	   ' → logprob: -12.625476837158203
    7. '
' → logprob: -13.000476837158203
    8. '	current' → logprob: -13.125476837158203
    9. ',current' → logprob: -13.625476837158203
    10. '[current' → logprob: -14.000476837158203

Token 408: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35596561431884766
    2. 'current' (adapté à ' current') → logprob: -1.6059656143188477
    3. ' current' → logprob: -2.3559656143188477
    4. '	current' → logprob: -5.730965614318848
    5. '       ' → logprob: -7.230965614318848
    6. '
' → logprob: -10.980965614318848
    7. '_current' → logprob: -11.480965614318848
    8. '   ' → logprob: -12.980965614318848
    9. '[current' → logprob: -13.480965614318848
    10. '    
' → logprob: -13.730965614318848

Token 409: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -3.7697225252486533e-06
    2. 'Con' → logprob: -12.625003814697266
    3. 'con' → logprob: -15.750003814697266
    4. '_co' → logprob: -16.000003814697266
    5. '_' → logprob: -16.625003814697266
    6. '_cons' → logprob: -17.125003814697266
    7. '```' → logprob: -18.500003814697266
    8. '_CON' → logprob: -18.875003814697266
    9. '_cont' → logprob: -19.125003814697266
    10. '__' → logprob: -19.625003814697266

Token 410: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.021937929093837738
    2. 'ecut' → logprob: -3.896937847137451
    3. 'on' → logprob: -7.271937847137451
    4. 'es' → logprob: -8.39693832397461
    5. 'cut' → logprob: -8.64693832397461
    6. 'ess' → logprob: -9.27193832397461
    7. 'ons' → logprob: -9.39693832397461
    8. 'secut' → logprob: -10.27193832397461
    9. 'utive' → logprob: -11.02193832397461
    10. 'os' → logprob: -11.39693832397461

Token 411: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00012415809032972902
    2. 'length' → logprob: -9.000123977661133
    3. 'ength' → logprob: -15.125123977661133
    4. '_l' → logprob: -16.000123977661133
    5. '_len' → logprob: -16.250123977661133
    6. 'Length' → logprob: -16.875123977661133
    7. '_' → logprob: -16.875123977661133
    8. ' length' → logprob: -18.125123977661133
    9. '__' → logprob: -18.250123977661133
    10. '```' → logprob: -18.875123977661133

Token 412: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759536027908325
    2. '+=' → logprob: -0.8259536027908325
    3. '   ' → logprob: -11.700953483581543
    4. '=' → logprob: -12.575953483581543
    5. '	' → logprob: -13.825953483581543
    6. ']+=' → logprob: -14.325953483581543
    7. ' =' → logprob: -14.950953483581543
    8. ' ' → logprob: -15.075953483581543
    9. '    ' → logprob: -15.575953483581543
    10. ' ' → logprob: -17.20095443725586

Token 413: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -19.250003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '
' → logprob: -22.000003814697266
    6. ' ' → logprob: -22.000003814697266
    7. '<|end|>' → logprob: -22.250003814697266
    8. '１' → logprob: -22.625003814697266
    9. '  ' → logprob: -23.500003814697266
    10. '۱' → logprob: -23.750003814697266

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -22.75
    4. '
' → logprob: -24.0
    5. '   ' → logprob: -24.0
    6. '１' → logprob: -24.875
    7. '۱' → logprob: -25.625
    8. 'current' → logprob: -25.75
    9. '

' → logprob: -26.0
    10. '-' → logprob: -26.25

Token 415: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018328918144106865
    2. 'else' → logprob: -4.01832914352417
    3. ' else' → logprob: -8.643328666687012
    4. '
' → logprob: -13.768328666687012
    5. '	else' → logprob: -13.893328666687012
    6. '```' → logprob: -15.393328666687012
    7. '}else' → logprob: -16.018329620361328
    8. '    
' → logprob: -16.143329620361328
    9. '#else' → logprob: -16.518329620361328
    10. ')' → logprob: -16.768329620361328

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00676107918843627
    2. 'else' → logprob: -5.006761074066162
    3. ' else' → logprob: -10.00676155090332
    4. '	else' → logprob: -14.88176155090332
    5. '
' → logprob: -16.13176155090332
    6. '```' → logprob: -16.13176155090332
    7. ')' → logprob: -17.88176155090332
    8. '    
' → logprob: -18.38176155090332
    9. '}else' → logprob: -18.38176155090332
    10. '<|end|>' → logprob: -18.75676155090332

Token 417: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.038456257432699203
    2. '   ' → logprob: -3.2884562015533447
    3. ' else' → logprob: -7.788456439971924
    4. '	else' → logprob: -15.913455963134766
    5. '_else' → logprob: -17.538455963134766
    6. '
' → logprob: -18.288455963134766
    7. '    
' → logprob: -18.288455963134766
    8. '```' → logprob: -18.913455963134766
    9. '}else' → logprob: -19.038455963134766
    10. 'elif' → logprob: -19.288455963134766

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.387166827917099
    2. ':
' → logprob: -1.1371668577194214
    3. '   ' → logprob: -8.262166976928711
    4. '       ' → logprob: -10.762166976928711
    5. ':
' → logprob: -11.762166976928711
    6. ':

' → logprob: -13.137166976928711
    7. ',' → logprob: -13.512166976928711
    8. '):
' → logprob: -13.762166976928711
    9. '[' → logprob: -14.262166976928711
    10. ' :
' → logprob: -14.262166976928711

Token 419: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3466436266899109
    2. '       ' → logprob: -1.3466436862945557
    3. 'current' → logprob: -3.5966436862945557
    4. ' current' → logprob: -5.221643447875977
    5. '	current' → logprob: -11.471643447875977
    6. '
' → logprob: -12.596643447875977
    7. '_current' → logprob: -14.096643447875977
    8. 'max' → logprob: -14.721643447875977
    9. '```' → logprob: -14.721643447875977
    10. ',current' → logprob: -14.971643447875977

Token 420: ' current' (ID: 2208)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.006484318990260363
    2. 'if' → logprob: -5.506484508514404
    3. 'current' (adapté à ' current') → logprob: -6.881484508514404
    4. 'max' → logprob: -7.131484508514404
    5. ' maximum' → logprob: -7.881484508514404
    6. '   ' → logprob: -8.631484031677246
    7. ' if' → logprob: -11.631484031677246
    8. '       ' → logprob: -11.756484031677246
    9. ' current' → logprob: -13.631484031677246
    10. '
' → logprob: -14.131484031677246

Token 421: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -7.896309739408025e-07
    2. 'Con' → logprob: -15.000000953674316
    3. 'con' → logprob: -15.125000953674316
    4. '_' → logprob: -17.75
    5. '_co' → logprob: -17.875
    6. '_current' → logprob: -19.75
    7. '_cons' → logprob: -19.75
    8. '_CON' → logprob: -20.0
    9. '_max' → logprob: -20.0
    10. '```' → logprob: -20.0

Token 422: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.0014924844726920128
    2. 'ecut' → logprob: -6.751492500305176
    3. 'cut' → logprob: -8.376492500305176
    4. 'current' → logprob: -10.501492500305176
    5. 'sect' → logprob: -10.751492500305176
    6. 'secut' → logprob: -11.251492500305176
    7. '_length' → logprob: -12.126492500305176
    8. 'length' → logprob: -12.501492500305176
    9. '```' → logprob: -12.626492500305176
    10. 's' → logprob: -12.876492500305176

Token 423: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0017101633129641414
    2. 'length' → logprob: -6.376709938049316
    3. 'ength' → logprob: -12.126709938049316
    4. 'Length' → logprob: -13.001709938049316
    5. ' length' → logprob: -16.626710891723633
    6. '   ' → logprob: -16.626710891723633
    7. '_len' → logprob: -17.376710891723633
    8. '_LENGTH' → logprob: -17.626710891723633
    9. '_list' → logprob: -17.751710891723633
    10. '```' → logprob: -17.751710891723633

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -17.139163970947266
    4. '.=' → logprob: -18.889163970947266
    5. ',' → logprob: -19.764163970947266
    6. ' ' → logprob: -20.639163970947266
    7. '_=' → logprob: -20.639163970947266
    8. '=
' → logprob: -22.014163970947266
    9. '=}' → logprob: -22.014163970947266
    10. '=

' → logprob: -22.389163970947266

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.750001907348633
    4. '```' → logprob: -19.750001907348633
    5. '0' → logprob: -20.500001907348633
    6. '１' → logprob: -21.250001907348633
    7. '' → logprob: -21.312501907348633
    8. '  ' → logprob: -22.062501907348633
    9. '۱' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.187501907348633

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '0' → logprob: -19.125
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -20.5
    6. '１' → logprob: -21.125
    7. '' → logprob: -22.0
    8. '۱' → logprob: -22.1875
    9. '१' → logprob: -23.0
    10. 'max' → logprob: -23.0625

Token 427: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.476997971534729
    2. 'maximum' → logprob: -0.976997971534729
    3. 'max' → logprob: -6.6019978523254395
    4. ' maximum' → logprob: -6.6019978523254395
    5. '
' → logprob: -9.351998329162598
    6. 'if' → logprob: -9.726998329162598
    7. 'Maximum' → logprob: -11.226998329162598
    8. '.maximum' → logprob: -11.226998329162598
    9. '_max' → logprob: -11.601998329162598
    10. '```' → logprob: -12.101998329162598

Token 428: '   ' (ID: 271)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.005262218415737152
    2. 'if' → logprob: -5.25526237487793
    3. '   ' → logprob: -11.00526237487793
    4. 'max' → logprob: -11.88026237487793
    5. ' maximum' → logprob: -12.63026237487793
    6. '
' → logprob: -13.63026237487793
    7. ' if' → logprob: -15.88026237487793
    8. 'minimum' → logprob: -16.63026237487793
    9. '```' → logprob: -16.75526237487793
    10. '.maximum' → logprob: -17.50526237487793

Token 429: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' (adapté à ' maximum') → logprob: -0.07890113443136215
    2. 'if' → logprob: -2.5789010524749756
    3. 'max' → logprob: -11.953901290893555
    4. '   ' → logprob: -12.703901290893555
    5. ' maximum' → logprob: -13.703901290893555
    6. ' if' → logprob: -15.328901290893555
    7. 'minimum' → logprob: -15.828901290893555
    8. '       ' → logprob: -16.078901290893555
    9. 'Maximum' → logprob: -16.203901290893555
    10. '.maximum' → logprob: -16.828901290893555

Token 430: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -8.280175097752362e-05
    2. '_' → logprob: -10.250082969665527
    3. 'con' → logprob: -10.500082969665527
    4. 'Con' → logprob: -11.000082969665527
    5. '_max' → logprob: -13.000082969665527
    6. '_cons' → logprob: -16.00008201599121
    7. '_cont' → logprob: -16.12508201599121
    8. '_possible' → logprob: -16.12508201599121
    9. 'maximum' → logprob: -16.50008201599121
    10. '=' → logprob: -16.50008201599121

Token 431: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.0010761572048068047
    2. 'ecut' → logprob: -7.2510762214660645
    3. 'con' → logprob: -8.251075744628906
    4. 'cut' → logprob: -10.376075744628906
    5. '_con' → logprob: -10.376075744628906
    6. 'secut' → logprob: -11.001075744628906
    7. 'es' → logprob: -11.876075744628906
    8. 'on' → logprob: -12.626075744628906
    9. 'utive' → logprob: -12.876075744628906
    10. '```' → logprob: -13.001075744628906

Token 432: '_sorted' (ID: 104993)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.06238687038421631
    2. '_sorted' → logprob: -2.812386989593506
    3. 'length' → logprob: -8.437386512756348
    4. 'sorted' → logprob: -8.562386512756348
    5. '_len' → logprob: -12.437386512756348
    6. '_max' → logprob: -13.187386512756348
    7. '_' → logprob: -13.437386512756348
    8. 'Sorted' → logprob: -13.687386512756348
    9. '```' → logprob: -14.187386512756348
    10. '_con' → logprob: -14.562386512756348

Token 433: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.018155446276068687
    2. 'length' → logprob: -4.018155574798584
    3. 'ength' → logprob: -12.393155097961426
    4. 'Length' → logprob: -14.768155097961426
    5. 'max' → logprob: -14.893155097961426
    6. '_len' → logprob: -16.018156051635742
    7. 'leng' → logprob: -16.518156051635742
    8. 'len' → logprob: -16.518156051635742
    9. '_l' → logprob: -16.643156051635742
    10. ' length' → logprob: -16.768156051635742

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38700324296951294
    2. '=' → logprob: -1.1370031833648682
    3. '=max' → logprob: -9.012002944946289
    4. 'max' → logprob: -11.512002944946289
    5. '＝' → logprob: -16.38700294494629
    6. '	' → logprob: -16.63700294494629
    7. ' max' → logprob: -16.76200294494629
    8. '   ' → logprob: -17.63700294494629
    9. '```' → logprob: -17.88700294494629
    10. '	max' → logprob: -18.26200294494629

Token 435: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16022545099258423
    2. ' max' → logprob: -1.9102253913879395
    3. 'current' → logprob: -14.660225868225098
    4. '	max' → logprob: -14.660225868225098
    5. ' current' → logprob: -15.660225868225098
    6. '(max' → logprob: -15.910225868225098
    7. '=max' → logprob: -17.41022491455078
    8. '   ' → logprob: -17.53522491455078
    9. '[max' → logprob: -18.16022491455078
    10. ',max' → logprob: -18.66022491455078

Token 436: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -10.625024795532227
    3. '(current' → logprob: -15.625024795532227
    4. 'max' → logprob: -16.875024795532227
    5. '	max' → logprob: -17.750024795532227
    6. '(
' → logprob: -17.750024795532227
    7. 'maximum' → logprob: -18.125024795532227
    8. '(min' → logprob: -18.625024795532227
    9. '(Max' → logprob: -19.250024795532227
    10. '(previous' → logprob: -20.250024795532227

Token 437: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.4761601686477661
    2. '_con' → logprob: -0.9761601686477661
    3. 'ax' → logprob: -6.351160049438477
    4. '(max' → logprob: -8.601160049438477
    5. 'con' → logprob: -9.976160049438477
    6. 'Con' → logprob: -10.476160049438477
    7. 'im' → logprob: -11.101160049438477
    8. '(' → logprob: -11.101160049438477
    9. 'maximum' → logprob: -12.226160049438477
    10. 'x' → logprob: -12.226160049438477

Token 438: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.000418875424657017
    2. 'maximum' → logprob: -8.875418663024902
    3. 'con' → logprob: -9.375418663024902
    4. '(max' → logprob: -9.500418663024902
    5. 'Con' → logprob: -10.000418663024902
    6. '_sorted' → logprob: -11.000418663024902
    7. '(' → logprob: -11.500418663024902
    8. '_length' → logprob: -11.750418663024902
    9. '_of' → logprob: -11.875418663024902
    10. '_' → logprob: -11.875418663024902

Token 439: 'secutive' (ID: 165873)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9503858685493469
    2. '_length' → logprob: -1.0753858089447021
    3. 'secutive' → logprob: -1.7003858089447021
    4. '_sorted' → logprob: -2.950385808944702
    5. 'length' → logprob: -3.575385808944702
    6. 't' → logprob: -6.200386047363281
    7. 'orted' → logprob: -6.575386047363281
    8. 'ecut' → logprob: -6.950386047363281
    9. '_con' → logprob: -6.950386047363281
    10. 'con' → logprob: -7.200386047363281

Token 440: '_sorted' (ID: 104993)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0012973772827535868
    2. 'length' → logprob: -6.751297473907471
    3. 'current' → logprob: -10.001296997070312
    4. 'ength' → logprob: -10.251296997070312
    5. 'sorted' → logprob: -10.251296997070312
    6. '_len' → logprob: -13.126296997070312
    7. 'maximum' → logprob: -13.251296997070312
    8. '_sorted' → logprob: -13.251296997070312
    9. 'Length' → logprob: -13.376296997070312
    10. 'max' → logprob: -14.126296997070312

Token 441: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.01703464612364769
    2. 'length' → logprob: -4.267034530639648
    3. 'ength' → logprob: -5.892034530639648
    4. 'Length' → logprob: -10.142034530639648
    5. 'th' → logprob: -10.392034530639648
    6. '_len' → logprob: -11.642034530639648
    7. 'g' → logprob: -12.142034530639648
    8. '```' → logprob: -12.392034530639648
    9. 'ng' → logprob: -12.892034530639648
    10. '_lengths' → logprob: -13.642034530639648

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01816820353269577
    2. ',current' → logprob: -4.018167972564697
    3. ' ,' → logprob: -11.143168449401855
    4. 'current' → logprob: -13.393168449401855
    5. '   ' → logprob: -13.643168449401855
    6. ',
' → logprob: -14.018168449401855
    7. ' current' → logprob: -15.268168449401855
    8. '	current' → logprob: -17.39316749572754
    9. '[current' → logprob: -17.89316749572754
    10. ',max' → logprob: -18.14316749572754

Token 443: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.048587486147880554
    2. ' current' → logprob: -3.0485875606536865
    3. '$current' → logprob: -17.798587799072266
    4. '	current' → logprob: -17.923587799072266
    5. '   ' → logprob: -17.923587799072266
    6. 'cur' → logprob: -19.673587799072266
    7. 'curr' → logprob: -19.673587799072266
    8. '_current' → logprob: -19.798587799072266
    9. '[current' → logprob: -19.798587799072266
    10. '(current' → logprob: -20.423587799072266

Token 444: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.0001097417771234177
    2. 'con' → logprob: -9.125109672546387
    3. 'Con' → logprob: -14.125109672546387
    4. '_in' → logprob: -17.125110626220703
    5. '```' → logprob: -17.125110626220703
    6. '_cons' → logprob: -17.250110626220703
    7. '_co' → logprob: -17.625110626220703
    8. '__' → logprob: -18.250110626220703
    9. '$con' → logprob: -18.375110626220703
    10. '_' → logprob: -18.500110626220703

Token 445: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -4.990154047845863e-05
    2. 's' → logprob: -11.500049591064453
    3. 'ecut' → logprob: -11.500049591064453
    4. 'es' → logprob: -11.750049591064453
    5. 'current' → logprob: -12.125049591064453
    6. 'se' → logprob: -12.375049591064453
    7. '_length' → logprob: -13.000049591064453
    8. 'sect' → logprob: -13.000049591064453
    9. '```' → logprob: -13.125049591064453
    10. 'on' → logprob: -13.875049591064453

Token 446: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.554343366995454e-05
    2. 'length' → logprob: -9.750085830688477
    3. 'ength' → logprob: -11.125085830688477
    4. 'th' → logprob: -12.750085830688477
    5. 'nt' → logprob: -12.750085830688477
    6. 'Length' → logprob: -13.875085830688477
    7. 't' → logprob: -13.875085830688477
    8. '_lengths' → logprob: -13.875085830688477
    9. 'sorted' → logprob: -14.000085830688477
    10. 'ng' → logprob: -14.250085830688477

Token 447: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001521526137366891
    2. ')

' → logprob: -6.876521587371826
    3. ')
' → logprob: -7.626521587371826
    4. ' )' → logprob: -14.001521110534668
    5. 'print' → logprob: -16.001522064208984
    6. ')

' → logprob: -16.251522064208984
    7. ')


' → logprob: -16.376522064208984
    8. '),' → logprob: -16.751522064208984
    9. ')
' → logprob: -17.376522064208984
    10. ')return' → logprob: -17.376522064208984

Token 448: 'minimal' (ID: 194851)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.15310683415737e-05
    2. 'result' → logprob: -10.875021934509277
    3. 'answer' → logprob: -13.625021934509277
    4. 'minimum' → logprob: -14.375021934509277
    5. 'required' → logprob: -14.625021934509277
    6. 'pr' → logprob: -15.625021934509277
    7. 'remaining' → logprob: -16.75002098083496
    8. ' print' → logprob: -17.37502098083496
    9. 'missing' → logprob: -17.50002098083496
    10. 'prin' → logprob: -17.75002098083496

Token 449: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.2102169692516327
    2. '_moves' → logprob: -2.335216999053955
    3. '_rem' → logprob: -3.460216999053955
    4. '_operation' → logprob: -3.585216999053955
    5. '_move' → logprob: -4.585216999053955
    6. '_re' → logprob: -4.960216999053955
    7. '_segments' → logprob: -5.460216999053955
    8. '_break' → logprob: -5.835216999053955
    9. '_cut' → logprob: -6.335216999053955
    10. '_de' → logprob: -6.335216999053955

Token 450: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10045336931943893
    2. '=' → logprob: -2.3504533767700195
    3. '_' → logprob: -8.35045337677002
    4. '_=' → logprob: -12.85045337677002
    5. ' _' → logprob: -13.35045337677002
    6. ' ' → logprob: -13.47545337677002
    7. '_space' → logprob: -13.60045337677002
    8. '=_' → logprob: -13.85045337677002
    9. 's' → logprob: -14.10045337677002
    10. '＝' → logprob: -14.60045337677002

Token 451: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.06438595056533813
    2. 'sort' → logprob: -2.8143858909606934
    3. '_make' → logprob: -6.189385890960693
    4. 'make' → logprob: -8.939386367797852
    5. '_re' → logprob: -10.189386367797852
    6. '_complete' → logprob: -10.314386367797852
    7. '_move' → logprob: -10.564386367797852
    8. '_remove' → logprob: -10.689386367797852
    9. '_sorted' → logprob: -11.064386367797852
    10. '_transform' → logprob: -11.189386367797852

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. '_' → logprob: -13.94314956665039
    4. '＝' → logprob: -15.06814956665039
    5. '=max' → logprob: -15.44314956665039
    6. 's' → logprob: -15.81814956665039
    7. '=int' → logprob: -16.31814956665039
    8. '=_' → logprob: -17.06814956665039
    9. '_=' → logprob: -17.06814956665039
    10. ' ' → logprob: -17.19314956665039

Token 453: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -3.547789674485102e-05
    2. ' element' → logprob: -10.250035285949707
    3. 'ele' → logprob: -17.125036239624023
    4. '[element' → logprob: -18.500036239624023
    5. '	element' → logprob: -19.000036239624023
    6. 'str' → logprob: -19.500036239624023
    7. ' ' → logprob: -20.125036239624023
    8. 'elem' → logprob: -20.375036239624023
    9. '
' → logprob: -20.500036239624023
    10. '(element' → logprob: -21.375036239624023

Token 454: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -16.0
    3. '_max' → logprob: -17.5
    4. '_' → logprob: -17.75
    5. 'lement' → logprob: -18.625
    6. 'Count' → logprob: -18.75
    7. 'ment' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. '_COUNT' → logprob: -19.375
    10. '
' → logprob: -19.375

Token 455: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815345324575901
    2. '-' → logprob: -4.018153667449951
    3. '-max' → logprob: -13.268153190612793
    4. ' -
' → logprob: -13.643153190612793
    5. '-
' → logprob: -15.643153190612793
    6. ' ' → logprob: -15.643153190612793
    7. ' maximum' → logprob: -16.39315414428711
    8. 'max' → logprob: -17.01815414428711
    9. ' ' → logprob: -17.14315414428711
    10. '-min' → logprob: -17.26815414428711

Token 456: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -7.541112427134067e-05
    2. ' maximum' → logprob: -9.500075340270996
    3. 'max' → logprob: -14.500075340270996
    4. ' maximal' → logprob: -21.375076293945312
    5. 'minimum' → logprob: -22.250076293945312
    6. '.maximum' → logprob: -23.625076293945312
    7. '```' → logprob: -24.000076293945312
    8. '最大' → logprob: -24.250076293945312
    9. ' максим' → logprob: -24.250076293945312
    10. 'maximize' → logprob: -24.250076293945312

Token 457: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.0006366660236380994
    2. 'con' → logprob: -7.375636577606201
    3. 'Con' → logprob: -11.62563705444336
    4. 'maximum' → logprob: -14.00063705444336
    5. 'max' → logprob: -15.25063705444336
    6. '$con' → logprob: -18.12563705444336
    7. '```' → logprob: -18.25063705444336
    8. '...' → logprob: -18.75063705444336
    9. '_max' → logprob: -18.87563705444336
    10. '​' → logprob: -19.00063705444336

Token 458: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -0.10054565966129303
    2. 'ecut' → logprob: -2.350545644760132
    3. 'cut' → logprob: -9.475545883178711
    4. 'secut' → logprob: -9.475545883178711
    5. 'utive' → logprob: -9.725545883178711
    6. 'ective' → logprob: -9.850545883178711
    7. 'es' → logprob: -10.350545883178711
    8. 'uctive' → logprob: -11.975545883178711
    9. 'esc' → logprob: -12.225545883178711
    10. '_cut' → logprob: -12.225545883178711

Token 459: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.003178071230649948
    2. 'sorted' → logprob: -5.753178119659424
    3. 'Sorted' → logprob: -15.253177642822266
    4. '```' → logprob: -16.378177642822266
    5. 'max' → logprob: -17.253177642822266
    6. 'con' → logprob: -17.503177642822266
    7. 'orted' → logprob: -17.628177642822266
    8. '_max' → logprob: -17.878177642822266
    9. 'maximum' → logprob: -18.503177642822266
    10. '(sorted' → logprob: -18.503177642822266

Token 460: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.047973521053791046
    2. 'length' → logprob: -3.2979736328125
    3. 'sorted' → logprob: -4.6729736328125
    4. 'ength' → logprob: -8.1729736328125
    5. 'max' → logprob: -9.5479736328125
    6. '_sorted' → logprob: -9.6729736328125
    7. 'maximum' → logprob: -10.1729736328125
    8. '```' → logprob: -11.1729736328125
    9. 'len' → logprob: -11.2979736328125
    10. 'ly' → logprob: -11.6729736328125

Token 461: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07891997694969177
    2. '
' → logprob: -2.5789198875427246
    3. '
' → logprob: -10.578920364379883
    4. '```' → logprob: -13.453920364379883
    5. '\n' → logprob: -13.828920364379883
    6. ' print' → logprob: -13.953920364379883
    7. '' → logprob: -14.953920364379883
    8. '

' → logprob: -15.078920364379883
    9. '(print' → logprob: -15.203920364379883
    10. '.print' → logprob: -15.703920364379883

Token 462: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -16.875
    3. ' print' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '.print' → logprob: -22.875
    6. '#print' → logprob: -22.875
    7. '(print' → logprob: -23.375
    8. '
' → logprob: -24.0
    9. '	print' → logprob: -24.375
    10. 'printf' → logprob: -24.5

Token 463: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. 'minimal' → logprob: -16.75004005432129
    4. ' minimal' → logprob: -17.37504005432129
    5. ' (' → logprob: -18.37504005432129
    6. '(M' → logprob: -18.62504005432129
    7. '_min' → logprob: -18.75004005432129
    8. '(max' → logprob: -18.75004005432129
    9. '=min' → logprob: -19.37504005432129
    10. ',min' → logprob: -19.50004005432129

Token 464: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -2.45848218582978e-06
    2. 'inal' → logprob: -13.00000286102295
    3. 'al' → logprob: -16.125001907348633
    4. 'ial' → logprob: -18.375001907348633
    5. 'iminal' → logprob: -20.750001907348633
    6. 'mal' → logprob: -21.125001907348633
    7. 'imals' → logprob: -21.250001907348633
    8. 'eral' → logprob: -21.250001907348633
    9. 'IMAL' → logprob: -21.375001907348633
    10. 'imum' → logprob: -21.500001907348633

Token 465: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. '_oper' → logprob: -14.875000953674316
    4. '_op' → logprob: -17.000001907348633
    5. '_ops' → logprob: -17.250001907348633
    6. '_
' → logprob: -18.250001907348633
    7. '_actions' → logprob: -18.250001907348633
    8. '_operation' → logprob: -18.250001907348633
    9. 'operations' → logprob: -18.375001907348633
    10. '```' → logprob: -18.500001907348633

Token 466: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -12.250017166137695
    3. 'to' → logprob: -12.375017166137695
    4. '_t' → logprob: -12.750017166137695
    5. '_)' → logprob: -13.125017166137695
    6. ')_' → logprob: -13.250017166137695
    7. ')' → logprob: -13.625017166137695
    8. '__' → logprob: -15.875017166137695
    9. 's' → logprob: -16.125017166137695
    10. '_TO' → logprob: -16.250017166137695

Token 467: '_sort' (ID: 43815)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.02139873616397381
    2. '_sort' → logprob: -4.146398544311523
    3. 'ort' → logprob: -5.271398544311523
    4. 'rt' → logprob: -8.896398544311523
    5. 'r' → logprob: -10.396398544311523
    6. 'print' → logprob: -11.146398544311523
    7. 'Sort' → logprob: -11.521398544311523
    8. '	sort' → logprob: -11.771398544311523
    9. ' sort' → logprob: -12.896398544311523
    10. '(sort' → logprob: -13.146398544311523

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '())' → logprob: -13.875001907348633
    3. '()' → logprob: -14.125001907348633
    4. ' )' → logprob: -15.375001907348633
    5. ')
' → logprob: -15.875001907348633
    6. '))' → logprob: -17.875001907348633
    7. ')`' → logprob: -17.875001907348633
    8. '```' → logprob: -18.125001907348633
    9. '(' → logprob: -19.250001907348633
    10. '`)' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 466
Tokens correctement prédits (1ère position, stricte): 229
Tokens correctement prédits (1ère position, avec adaptation): 240
Tokens correctement prédits (top 10): 404
Précision stricte (1ère position): 49.14%
Précision adaptée (1ère position): 51.50%
Précision (top 10): 86.70%
================================================================================
