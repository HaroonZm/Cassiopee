================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

S = input()
counter = Counter(S)
print(counter["+"] - counter["-"])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015514736878685653
    2. '\(' → logprob: -9.750155448913574
    3. '()' → logprob: -10.875155448913574
    4. '\' → logprob: -10.875155448913574
    5. '```' → logprob: -11.125155448913574
    6. '(
' → logprob: -11.250155448913574
    7. '.' → logprob: -11.750155448913574
    8. ' (' → logprob: -12.125155448913574
    9. 'newline' → logprob: -12.625155448913574
    10. 'import' → logprob: -13.000155448913574

Token 5: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001039479160681367
    2. 'a' → logprob: -7.876039505004883
    3. '.' → logprob: -8.376039505004883
    4. '\(' → logprob: -9.251039505004883
    5. '(
' → logprob: -9.376039505004883
    6. 'newline' → logprob: -9.876039505004883
    7. '\' → logprob: -10.001039505004883
    8. '\n' → logprob: -10.001039505004883
    9. ',' → logprob: -10.876039505004883
    10. '```' → logprob: -11.751039505004883

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.484519124031067
    2. '=' → logprob: -1.484519124031067
    3. ')' → logprob: -2.1095190048217773
    4. 'e' → logprob: -2.3595190048217773
    5. 'u' → logprob: -2.4845190048217773
    6. 't' → logprob: -2.9845190048217773
    7. ' =' → logprob: -2.9845190048217773
    8. '(' → logprob: -2.9845190048217773
    9. 'a' → logprob: -3.6095190048217773
    10. 'tring' → logprob: -4.234519004821777

Token 7: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7189322113990784
    2. ''' → logprob: -1.0939321517944336
    3. ' "' → logprob: -2.0939321517944336
    4. ' '' → logprob: -3.2189321517944336
    5. ' Counter' → logprob: -4.718932151794434
    6. 'Counter' → logprob: -6.593932151794434
    7. ''S' → logprob: -7.218932151794434
    8. ' ' → logprob: -7.343932151794434
    9. ''s' → logprob: -7.843932151794434
    10. 'input' → logprob: -7.843932151794434

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006565583753399551
    2. '('' → logprob: -7.875656604766846
    3. '("("' → logprob: -9.250656127929688
    4. ''' → logprob: -9.750656127929688
    5. '()' → logprob: -10.750656127929688
    6. '`' → logprob: -10.750656127929688
    7. ')' → logprob: -10.750656127929688
    8. '"' → logprob: -11.125656127929688
    9. '```' → logprob: -11.250656127929688
    10. '(
' → logprob: -11.500656127929688

Token 9: 'counter' (ID: 32128)
  Prédit: 'counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -1.0946205854415894
    2. 'count' → logprob: -1.5946205854415894
    3. 'c' → logprob: -1.8446205854415894
    4. '(' → logprob: -2.094620704650879
    5. ')' → logprob: -2.469620704650879
    6. '.' → logprob: -3.469620704650879
    7. 'counts' → logprob: -3.719620704650879
    8. 'C' → logprob: -4.219620704650879
    9. 'result' → logprob: -4.719620704650879
    10. 'Counter' → logprob: -5.719620704650879

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018571268301457167
    2. '.' → logprob: -6.501857280731201
    3. '(S' → logprob: -8.751856803894043
    4. 'S' → logprob: -10.001856803894043
    5. 's' → logprob: -10.126856803894043
    6. '(
' → logprob: -10.251856803894043
    7. '[' → logprob: -10.501856803894043
    8. '(.)' → logprob: -11.251856803894043
    9. '(s' → logprob: -11.501856803894043
    10. ')' → logprob: -11.751856803894043

Token 11: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.47423386573791504
    2. ' Counter' → logprob: -0.974233865737915
    3. ' counter' → logprob: -9.349233627319336
    4. '.Counter' → logprob: -10.349233627319336
    5. 'counter' → logprob: -10.599233627319336
    6. 'C' → logprob: -12.599233627319336
    7. ' ' → logprob: -12.849233627319336
    8. '_counter' → logprob: -12.974233627319336
    9. 'ounter' → logprob: -14.099233627319336
    10. '```' → logprob: -14.224233627319336

Token 12: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1003742441534996
    2. '(S' → logprob: -2.350374221801758
    3. '()' → logprob: -9.100374221801758
    4. '(s' → logprob: -10.475374221801758
    5. '(
' → logprob: -11.725374221801758
    6. '((' → logprob: -11.975374221801758
    7. '('' → logprob: -12.725374221801758
    8. 'S' → logprob: -13.100374221801758
    9. '(user' → logprob: -13.850374221801758
    10. '("("' → logprob: -13.975374221801758

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.125210297293961e-05
    2. '[' → logprob: -9.500081062316895
    3. ' )' → logprob: -13.250081062316895
    4. '))' → logprob: -13.375081062316895
    5. ').' → logprob: -14.000081062316895
    6. ')
' → logprob: -14.375081062316895
    7. '`)' → logprob: -15.250081062316895
    8. ']' → logprob: -15.250081062316895
    9. '')' → logprob: -15.625081062316895
    10. ')[' → logprob: -16.25008201599121

Token 14: 'print' (ID: 1598)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6468175053596497
    2. '(' → logprob: -2.271817445755005
    3. 'print' → logprob: -2.271817445755005
    4. 'for' → logprob: -2.271817445755005
    5. 'm' → logprob: -2.521817445755005
    6. '[' → logprob: -3.896817445755005
    7. ')' → logprob: -4.396817684173584
    8. 'most' → logprob: -4.771817684173584
    9. 'max' → logprob: -5.146817684173584
    10. '#' → logprob: -5.396817684173584

Token 15: '(counter' (ID: 85625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001058771857060492
    2. '(counter' → logprob: -6.876058578491211
    3. '(C' → logprob: -12.001058578491211
    4. '('' → logprob: -12.001058578491211
    5. '((' → logprob: -12.501058578491211
    6. '(count' → logprob: -13.001058578491211
    7. '("("' → logprob: -13.376058578491211
    8. '(len' → logprob: -13.876058578491211
    9. '(S' → logprob: -14.001058578491211
    10. '(
' → logprob: -14.126058578491211

Token 16: '["+' (ID: 161513)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004737822338938713
    2. '[' → logprob: -5.379737854003906
    3. '`)' → logprob: -10.379737854003906
    4. '))' → logprob: -10.629737854003906
    5. '.)' → logprob: -10.629737854003906
    6. '.' → logprob: -11.254737854003906
    7. ' )' → logprob: -12.129737854003906
    8. '(' → logprob: -12.254737854003906
    9. ')`' → logprob: -12.879737854003906
    10. '')' → logprob: -12.879737854003906

Token 17: '"]' (ID: 2601)
  Prédit: '"])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"])' → logprob: -0.002239350927993655
    2. '"]' → logprob: -6.377239227294922
    3. '1' → logprob: -8.002239227294922
    4. '"])
' → logprob: -9.877239227294922
    5. '"]))' → logprob: -10.502239227294922
    6. '"' → logprob: -10.877239227294922
    7. ''])' → logprob: -11.002239227294922
    8. '",' → logprob: -11.127239227294922
    9. '])' → logprob: -11.627239227294922
    10. '"],' → logprob: -11.627239227294922

Token 18: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027567336801439524
    2. '[' → logprob: -6.377756595611572
    3. ']' → logprob: -7.752756595611572
    4. '])' → logprob: -7.877756595611572
    5. '+)' → logprob: -9.50275707244873
    6. '")' → logprob: -10.00275707244873
    7. '+' → logprob: -10.12775707244873
    8. '`)' → logprob: -10.50275707244873
    9. ' )' → logprob: -10.75275707244873
    10. ')
' → logprob: -11.25275707244873

Token 19: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.21835635602474213
    2. ' counter' → logprob: -1.7183563709259033
    3. '1' → logprob: -4.093356132507324
    4. ' ' → logprob: -9.468356132507324
    5. 'count' → logprob: -11.468356132507324
    6. '2' → logprob: -11.843356132507324
    7. '0' → logprob: -12.093356132507324
    8. '(counter' → logprob: -12.718356132507324
    9. '[counter' → logprob: -12.968356132507324
    10. 'Counter' → logprob: -13.343356132507324

Token 20: '["' (ID: 2272)
  Prédit: '["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.033674973994493484
    2. '["+' → logprob: -4.283675193786621
    3. '["_' → logprob: -4.658675193786621
    4. '[' → logprob: -4.908675193786621
    5. '['' → logprob: -7.033675193786621
    6. '("-' → logprob: -7.158675193786621
    7. '["@' → logprob: -8.408675193786621
    8. '"-' → logprob: -8.658675193786621
    9. '"' → logprob: -9.033675193786621
    10. '{"' → logprob: -9.783675193786621

Token 21: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007294370327144861
    2. '"]' → logprob: -5.132294178009033
    3. '"])' → logprob: -7.632294178009033
    4. '"-' → logprob: -7.757294178009033
    5. '"' → logprob: -8.257294654846191
    6. '1' → logprob: -9.382294654846191
    7. '+"]' → logprob: -10.382294654846191
    8. ']' → logprob: -11.007294654846191
    9. ' "]' → logprob: -11.257294654846191
    10. '+' → logprob: -11.632294654846191

Token 22: '"])' (ID: 32765)
  Prédit: '"])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"])' → logprob: -0.0015129582025110722
    2. '"]' → logprob: -6.6265130043029785
    3. ')' → logprob: -9.25151252746582
    4. '])' → logprob: -10.12651252746582
    5. '"' → logprob: -11.25151252746582
    6. '")' → logprob: -11.75151252746582
    7. '"])
' → logprob: -11.87651252746582
    8. '1' → logprob: -12.00151252746582
    9. ''])' → logprob: -12.25151252746582
    10. ']' → logprob: -12.50151252746582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 20
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 20.00%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 65.00%
================================================================================
