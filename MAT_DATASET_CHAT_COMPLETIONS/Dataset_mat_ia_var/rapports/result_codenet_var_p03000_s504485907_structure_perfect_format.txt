================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, X = map(int, input().split())
L_list = [int(e) for e in input().split()]

ans = 1
Before_Di = 0

for i in range(N):
    Di = Before_Di + L_list[i]
    if Di <= X:
        ans += 1
        Before_Di = Di
    else:
        break

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' X' (ID: 2127)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01934913545846939
    2. ' =' → logprob: -4.394349098205566
    3. ',' → logprob: -5.269349098205566
    4. '.' → logprob: -7.144349098205566
    5. '[' → logprob: -7.394349098205566
    6. '_' → logprob: -9.394349098205566
    7. ')' → logprob: -9.769349098205566
    8. ':' → logprob: -10.019349098205566
    9. '+' → logprob: -11.269349098205566
    10. '#' → logprob: -11.394349098205566

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4787496030330658
    2. ' ' → logprob: -1.8537496328353882
    3. '10' → logprob: -2.4787495136260986
    4. 'map' → logprob: -2.6037495136260986
    5. ' input' → logprob: -3.7287495136260986
    6. ' np' → logprob: -4.353749752044678
    7. 'input' → logprob: -4.853749752044678
    8. '5' → logprob: -5.353749752044678
    9. '50' → logprob: -6.103749752044678
    10. '20' → logprob: -6.353749752044678

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002421318320557475
    2. '(lambda' → logprob: -6.2524213790893555
    3. '(int' → logprob: -8.502421379089355
    4. '```' → logprob: -9.627421379089355
    5. '<|end|>' → logprob: -9.877421379089355
    6. '(user' → logprob: -11.002421379089355
    7. ')' → logprob: -11.002421379089355
    8. '(input' → logprob: -11.377421379089355
    9. '(str' → logprob: -11.752421379089355
    10. '[int' → logprob: -11.877421379089355

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0950273647904396
    2. ')' → logprob: -2.720027446746826
    3. 'input' → logprob: -4.095027446746826
    4. ',input' → logprob: -5.595027446746826
    5. '(' → logprob: -6.095027446746826
    6. ',' → logprob: -6.720027446746826
    7. '<input' → logprob: -8.720026969909668
    8. ' input' → logprob: -8.970026969909668
    9. '=input' → logprob: -8.970026969909668
    10. '(int' → logprob: -9.095026969909668

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008626393973827362
    2. ' input' → logprob: -4.758626461029053
    3. '(input' → logprob: -12.008625984191895
    4. ')' → logprob: -12.133625984191895
    5. ',input' → logprob: -15.383625984191895
    6. '=input' → logprob: -17.00862693786621
    7. '<input' → logprob: -17.38362693786621
    8. ' ' → logprob: -17.38362693786621
    9. '```' → logprob: -17.50862693786621
    10. '[input' → logprob: -17.88362693786621

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5362583994865417
    2. '())' → logprob: -1.0362584590911865
    3. '().' → logprob: -3.0362584590911865
    4. ')' → logprob: -4.661258220672607
    5. '`()' → logprob: -7.661258220672607
    6. '(' → logprob: -7.911258220672607
    7. '();)' → logprob: -7.911258220672607
    8. '`)' → logprob: -8.161258697509766
    9. '()`' → logprob: -8.411258697509766
    10. '()))' → logprob: -9.161258697509766

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00035846480750478804
    2. 'strip' → logprob: -8.500358581542969
    3. ')' → logprob: -8.875358581542969
    4. ' split' → logprob: -12.250358581542969
    5. 'rstrip' → logprob: -12.250358581542969
    6. 'read' → logprob: -12.500358581542969
    7. '(split' → logprob: -13.625358581542969
    8. 'spl' → logprob: -15.500358581542969
    9. ')s' → logprob: -15.875358581542969
    10. ').' → logprob: -16.37535858154297

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046971097588539124
    2. '())' → logprob: -3.171971082687378
    3. '))' → logprob: -6.046971321105957
    4. '()' → logprob: -6.671971321105957
    5. '`)' → logprob: -8.546971321105957
    6. '(' → logprob: -9.671971321105957
    7. '()))' → logprob: -10.921971321105957
    8. ')`' → logprob: -11.046971321105957
    9. '```' → logprob: -11.796971321105957
    10. '`()' → logprob: -12.546971321105957

Token 11: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.060291796922683716
    2. 'x' → logprob: -4.435291767120361
    3. 'd' → logprob: -5.310291767120361
    4. '`' → logprob: -5.435291767120361
    5. '.' → logprob: -5.560291767120361
    6. ',' → logprob: -5.560291767120361
    7. '#' → logprob: -5.685291767120361
    8. ' ' → logprob: -5.810291767120361
    9. 'for' → logprob: -5.935291767120361
    10. '[' → logprob: -6.185291767120361

Token 12: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2878347933292389
    2. ' =' → logprob: -2.287834882736206
    3. '.' → logprob: -2.787834882736206
    4. 's' → logprob: -3.537834882736206
    5. 'i' → logprob: -3.787834882736206
    6. ',' → logprob: -4.912834644317627
    7. 'ist' → logprob: -5.037834644317627
    8. '[' → logprob: -5.287834644317627
    9. '[i' → logprob: -5.412834644317627
    10. '_' → logprob: -6.537834644317627

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6325086951255798
    2. '=' → logprob: -1.5075087547302246
    3. ' =' → logprob: -1.8825087547302246
    4. '.' → logprob: -3.0075087547302246
    5. '[:]' → logprob: -3.6325087547302246
    6. '_' → logprob: -4.632508754730225
    7. '[]' → logprob: -6.007508754730225
    8. '.append' → logprob: -6.257508754730225
    9. '=[]' → logprob: -6.632508754730225
    10. '[i' → logprob: -7.007508754730225

Token 14: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.122491478919983
    2. '[' → logprob: -1.747491478919983
    3. ' list' → logprob: -1.872491478919983
    4. ' [' → logprob: -1.997491478919983
    5. '[list' → logprob: -2.4974913597106934
    6. '[input' → logprob: -2.9974913597106934
    7. '[]' → logprob: -3.1224913597106934
    8. ' []' → logprob: -3.8724913597106934
    9. '[int' → logprob: -4.372491359710693
    10. '[List' → logprob: -8.497491836547852

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0014977219980210066
    2. ' int' → logprob: -6.876497745513916
    3. 'map' → logprob: -8.501497268676758
    4. '0' → logprob: -8.626497268676758
    5. '*' → logprob: -9.876497268676758
    6. 'list' → logprob: -11.626497268676758
    7. '(int' → logprob: -12.001497268676758
    8. ']int' → logprob: -12.001497268676758
    9. '[int' → logprob: -12.626497268676758
    10. '```' → logprob: -13.251497268676758

Token 16: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0940936803817749
    2. '(x' → logprob: -2.9690937995910645
    3. '(input' → logprob: -3.3440937995910645
    4. '(token' → logprob: -6.3440937995910645
    5. '(i' → logprob: -6.9690937995910645
    6. '()' → logprob: -9.219093322753906
    7. '(item' → logprob: -9.719093322753906
    8. '(s' → logprob: -9.719093322753906
    9. ')' → logprob: -10.344093322753906
    10. '(line' → logprob: -10.719093322753906

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6321276426315308
    2. '(input' → logprob: -1.2571276426315308
    3. '(x' → logprob: -2.3821277618408203
    4. 'or' → logprob: -3.5071277618408203
    5. '())' → logprob: -3.5071277618408203
    6. '(' → logprob: -3.8821277618408203
    7. '(i' → logprob: -5.88212776184082
    8. 'input' → logprob: -5.88212776184082
    9. ')x' → logprob: -6.88212776184082
    10. 'em' → logprob: -7.00712776184082

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41863691806793213
    2. ' for' → logprob: -2.0436367988586426
    3. ')' → logprob: -2.2936367988586426
    4. '(' → logprob: -2.4186367988586426
    5. '(input' → logprob: -4.293636798858643
    6. '(x' → logprob: -5.918636798858643
    7. ']' → logprob: -6.043636798858643
    8. 'input' → logprob: -7.168636798858643
    9. ')]' → logprob: -7.543636798858643
    10. '()' → logprob: -7.543636798858643

Token 19: ' e' (ID: 319)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.21863248944282532
    2. '_' → logprob: -2.093632459640503
    3. ' range' → logprob: -3.218632459640503
    4. ' ' → logprob: -3.843632459640503
    5. 'input' → logprob: -5.343632698059082
    6. ' e' → logprob: -5.593632698059082
    7. ' in' → logprob: -7.343632698059082
    8. '<|end|>' → logprob: -7.343632698059082
    9. 'range' → logprob: -7.593632698059082
    10. '<|end|>' → logprob: -7.968632698059082

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026417799293994904
    2. 'in' → logprob: -3.6514177322387695
    3. ' ' → logprob: -9.90141773223877
    4. 'e' → logprob: -11.15141773223877
    5. ' e' → logprob: -11.52641773223877
    6. 'input' → logprob: -11.65141773223877
    7. '_' → logprob: -11.90141773223877
    8. '  ' → logprob: -12.52641773223877
    9. '<|end|>' → logprob: -12.65141773223877
    10. 'x' → logprob: -12.77641773223877

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4768829941749573
    2. ' input' → logprob: -0.9768829941749573
    3. ' range' → logprob: -6.3518829345703125
    4. 'range' → logprob: -6.8518829345703125
    5. ' ' → logprob: -14.476882934570312
    6. '(input' → logprob: -15.601882934570312
    7. '=input' → logprob: -16.851882934570312
    8. 'X' → logprob: -16.976882934570312
    9. 'in' → logprob: -17.101882934570312
    10. '[input' → logprob: -17.476882934570312

Token 22: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6821717619895935
    2. '()' → logprob: -0.9321717619895935
    3. '().' → logprob: -2.4321718215942383
    4. '())' → logprob: -5.057171821594238
    5. '(' → logprob: -5.057171821594238
    6. '()].' → logprob: -9.057171821594238
    7. ')]' → logprob: -10.932171821594238
    8. '()],' → logprob: -11.057171821594238
    9. '()][' → logprob: -11.432171821594238
    10. ']' → logprob: -11.682171821594238

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.650518920039758e-06
    2. 'strip' → logprob: -12.750003814697266
    3. 'rstrip' → logprob: -14.500003814697266
    4. ' split' → logprob: -15.375003814697266
    5. 'spl' → logprob: -18.750003814697266
    6. '(split' → logprob: -19.375003814697266
    7. '.split' → logprob: -21.875003814697266
    8. '_split' → logprob: -22.500003814697266
    9. 'sp' → logprob: -23.500003814697266
    10. 'read' → logprob: -24.250003814697266

Token 24: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.12454724311828613
    2. '())' → logprob: -2.374547243118286
    3. '()' → logprob: -3.749547243118286
    4. '(' → logprob: -7.874547004699707
    5. ')]' → logprob: -9.249547004699707
    6. ']' → logprob: -11.874547004699707
    7. '('' → logprob: -11.999547004699707
    8. '()][' → logprob: -12.249547004699707
    9. '()],' → logprob: -12.499547004699707
    10. '()`' → logprob: -12.874547004699707

Token 25: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023503432050347328
    2. ']' → logprob: -4.398503303527832
    3. ')' → logprob: -4.523503303527832
    4. '])' → logprob: -10.898503303527832
    5. '])]' → logprob: -11.023503303527832
    6. ')])' → logprob: -11.148503303527832
    7. ')],' → logprob: -11.523503303527832
    8. '`]' → logprob: -11.648503303527832
    9. '）' → logprob: -12.273503303527832
    10. '')]' → logprob: -12.648503303527832

Token 26: 'ans' (ID: 616)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.235248327255249
    2. 'L' → logprob: -1.735248327255249
    3. 'ans' → logprob: -2.110248327255249
    4. 'result' → logprob: -2.235248327255249
    5. 'for' → logprob: -3.235248327255249
    6. 'dp' → logprob: -3.235248327255249
    7. 's' → logprob: -3.360248327255249
    8. 'max' → logprob: -3.485248327255249
    9. 'sum' → logprob: -3.985248327255249
    10. 'res' → logprob: -4.235248565673828

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3878675103187561
    2. '=' → logprob: -1.3878674507141113
    3. '_' → logprob: -2.6378674507141113
    4. '_space' → logprob: -9.13786792755127
    5. '_=' → logprob: -9.76286792755127
    6. ' ' → logprob: -10.01286792755127
    7. '.' → logprob: -10.38786792755127
    8. ' +=' → logprob: -10.38786792755127
    9. '[' → logprob: -10.38786792755127
    10. ',' → logprob: -11.51286792755127

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1016809493303299
    2. ' ' → logprob: -2.9766809940338135
    3. 'max' → logprob: -3.9766809940338135
    4. ' max' → logprob: -4.226680755615234
    5. 'sum' → logprob: -5.601680755615234
    6. ' sum' → logprob: -6.101680755615234
    7. ' L' → logprob: -6.226680755615234
    8. 'L' → logprob: -7.476680755615234
    9. 'min' → logprob: -7.601680755615234
    10. ' min' → logprob: -7.601680755615234

Token 29: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27581125497817993
    2. 'max' → logprob: -2.025811195373535
    3. 'sum' → logprob: -3.025811195373535
    4. 'min' → logprob: -3.400811195373535
    5. 'float' → logprob: -4.150811195373535
    6. '-' → logprob: -6.025811195373535
    7. 'L' → logprob: -6.150811195373535
    8. '1' → logprob: -6.525811195373535
    9. 'X' → logprob: -6.650811195373535
    10. 'abs' → logprob: -7.275811195373535

Token 30: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18376559019088745
    2. ' for' → logprob: -2.6837656497955322
    3. '
' → logprob: -3.0587656497955322
    4. '+' → logprob: -3.4337656497955322
    5. ' ' → logprob: -4.683765411376953
    6. '0' → logprob: -5.808765411376953
    7. '*' → logprob: -6.058765411376953
    8. '' → logprob: -6.433765411376953
    9. '\' → logprob: -7.433765411376953
    10. '<|end|>' → logprob: -7.808765411376953

Token 31: 'Before' (ID: 13036)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007131385616958141
    2. ' for' → logprob: -5.257131576538086
    3. 'd' → logprob: -7.507131576538086
    4. 'max' → logprob: -7.882131576538086
    5. 'f' → logprob: -8.132131576538086
    6. 'current' → logprob: -8.132131576538086
    7. 'i' → logprob: -9.507131576538086
    8. '+' → logprob: -9.632131576538086
    9. 'min' → logprob: -10.007131576538086
    10. '*' → logprob: -10.257131576538086

Token 32: '_D' (ID: 2958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15917345881462097
    2. ' for' → logprob: -2.6591734886169434
    3. '*' → logprob: -3.2841734886169434
    4. '+' → logprob: -4.034173488616943
    5. '=' → logprob: -5.034173488616943
    6. '_' → logprob: -5.534173488616943
    7. ')' → logprob: -6.034173488616943
    8. ' *' → logprob: -6.409173488616943
    9. ' ' → logprob: -6.659173488616943
    10. 'i' → logprob: -7.034173488616943

Token 33: 'i' (ID: 72)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.10667569190263748
    2. 'istance' → logprob: -2.981675624847412
    3. 'ist' → logprob: -4.231675624847412
    4. 'p' → logprob: -4.981675624847412
    5. 'L' → logprob: -5.856675624847412
    6. 'iff' → logprob: -6.106675624847412
    7. 'D' → logprob: -6.231675624847412
    8. '_' → logprob: -6.356675624847412
    9. '_D' → logprob: -6.481675624847412
    10. 'e' → logprob: -6.481675624847412

Token 34: ' =' (ID: 314)
  Prédit: 'stance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stance' → logprob: -0.03634066879749298
    2. 'st' → logprob: -4.036340713500977
    3. 'ff' → logprob: -4.911340713500977
    4. 'stances' → logprob: -5.286340713500977
    5. 'rection' → logprob: -5.911340713500977
    6. 'f' → logprob: -6.536340713500977
    7. 'r' → logprob: -7.911340713500977
    8. 'stant' → logprob: -8.786340713500977
    9. 't' → logprob: -9.036340713500977
    10. 'STANCE' → logprob: -9.161340713500977

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01166730746626854
    2. ' ' → logprob: -4.886667251586914
    3. 'L' → logprob: -6.261667251586914
    4. '-' → logprob: -6.386667251586914
    5. '1' → logprob: -9.011667251586914
    6. ' -' → logprob: -9.136667251586914
    7. ' L' → logprob: -9.261667251586914
    8. '-L' → logprob: -10.011667251586914
    9. 'None' → logprob: -10.886667251586914
    10. 'X' → logprob: -11.636667251586914

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014720792882144451
    2. 'L' → logprob: -4.889720916748047
    3. '-' → logprob: -5.764720916748047
    4. ' ' → logprob: -5.889720916748047
    5. '1' → logprob: -7.514720916748047
    6. 'X' → logprob: -8.639720916748047
    7. '-L' → logprob: -9.014720916748047
    8. ' L' → logprob: -9.389720916748047
    9. ' -' → logprob: -9.639720916748047
    10. 'N' → logprob: -9.889720916748047

Token 37: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1427614390850067
    2. ' for' → logprob: -2.017761468887329
    3. '
' → logprob: -10.26776123046875
    4. '\n' → logprob: -10.64276123046875
    5. '	for' → logprob: -12.01776123046875
    6. '```' → logprob: -12.26776123046875
    7. 'f' → logprob: -12.39276123046875
    8. 'For' → logprob: -12.51776123046875
    9. '' → logprob: -13.01776123046875
    10. ' 
' → logprob: -13.89276123046875

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06517847627401352
    2. ' _' → logprob: -3.815178394317627
    3. ' L' → logprob: -4.190178394317627
    4. '_' → logprob: -4.565178394317627
    5. ' ' → logprob: -4.690178394317627
    6. 'i' → logprob: -5.690178394317627
    7. ' e' → logprob: -6.440178394317627
    8. ' l' → logprob: -7.940178394317627
    9. '_i' → logprob: -8.565178871154785
    10. 'L' → logprob: -8.690178871154785

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005271822679787874
    2. 'in' → logprob: -5.255271911621094
    3. ' ' → logprob: -10.505271911621094
    4. ',' → logprob: -13.130271911621094
    5. ' i' → logprob: -13.130271911621094
    6. '  ' → logprob: -13.380271911621094
    7. '+' → logprob: -13.880271911621094
    8. 'n' → logprob: -14.755271911621094
    9. '	in' → logprob: -14.755271911621094
    10. ' ,' → logprob: -14.880271911621094

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869100511074066
    2. 'range' → logprob: -1.136910080909729
    3. '(range' → logprob: -10.886910438537598
    4. ' L' → logprob: -12.136910438537598
    5. 'L' → logprob: -12.511910438537598
    6. ')' → logprob: -12.886910438537598
    7. '	range' → logprob: -13.011910438537598
    8. 'X' → logprob: -13.636910438537598
    9. ' xrange' → logprob: -13.636910438537598
    10. ' in' → logprob: -13.761910438537598

Token 42: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3889627456665039
    2. '(N' → logprob: -1.138962745666504
    3. '(len' → logprob: -6.263962745666504
    4. ' (' → logprob: -9.138962745666504
    5. '(i' → logprob: -10.763962745666504
    6. '(range' → logprob: -10.888962745666504
    7. '(n' → logprob: -11.638962745666504
    8. '(L' → logprob: -11.638962745666504
    9. '((' → logprob: -12.638962745666504
    10. ')' → logprob: -13.388962745666504

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010080150241265073
    2. ':' → logprob: -9.750101089477539
    3. ' ):' → logprob: -10.750101089477539
    4. '):
' → logprob: -11.500101089477539
    5. '+' → logprob: -12.375101089477539
    6. ')' → logprob: -13.125101089477539
    7. ',' → logprob: -13.500101089477539
    8. '-' → logprob: -13.750101089477539
    9. '():' → logprob: -14.500101089477539
    10. ']:' → logprob: -14.750101089477539

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08077197521924973
    2. ' ' → logprob: -3.0807719230651855
    3. ' if' → logprob: -4.5807719230651855
    4. '    ' → logprob: -5.9557719230651855
    5. ' space' → logprob: -6.3307719230651855
    6. 'diff' → logprob: -6.3307719230651855
    7. 'distance' → logprob: -6.4557719230651855
    8. '  ' → logprob: -6.8307719230651855
    9. ' ' → logprob: -6.8307719230651855
    10. '    
' → logprob: -6.8307719230651855

Token 45: ' Di' (ID: 9196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478695273399353
    2. ' if' → logprob: -2.2286953926086426
    3. '    ' → logprob: -2.8536953926086426
    4. ' ' → logprob: -3.2286953926086426
    5. 'diff' → logprob: -3.2286953926086426
    6. 'distance' → logprob: -3.4786953926086426
    7. ' x' → logprob: -4.353695392608643
    8. ' for' → logprob: -4.978695392608643
    9. '```' → logprob: -4.978695392608643
    10. ' while' → logprob: -5.103695392608643

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012619240209460258
    2. '=' → logprob: -4.3876190185546875
    3. ' -' → logprob: -9.887619018554688
    4. ',' → logprob: -10.387619018554688
    5. '=int' → logprob: -11.512619018554688
    6. '-' → logprob: -12.262619018554688
    7. ' ' → logprob: -12.387619018554688
    8. ' -=' → logprob: -13.012619018554688
    9. ')' → logprob: -13.762619018554688
    10. '_' → logprob: -13.887619018554688

Token 47: ' Before' (ID: 16935)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07709556818008423
    2. ' L' → logprob: -2.7020955085754395
    3. 'Before' → logprob: -5.2020955085754395
    4. '   ' → logprob: -7.2020955085754395
    5. ' Before' → logprob: -7.2020955085754395
    6. '	L' → logprob: -9.702095985412598
    7. 'Di' → logprob: -10.452095985412598
    8. '    ' → logprob: -12.077095985412598
    9. 'After' → logprob: -12.452095985412598
    10. 'X' → logprob: -12.639595985412598

Token 48: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.0001434690784662962
    2. 'Di' → logprob: -9.375143051147461
    3. '_' → logprob: -10.625143051147461
    4. '+' → logprob: -10.750143051147461
    5. '_L' → logprob: -12.750143051147461
    6. '_S' → logprob: -13.250143051147461
    7. '```' → logprob: -13.750143051147461
    8. '=' → logprob: -14.250143051147461
    9. '_DI' → logprob: -14.250143051147461
    10. '_Dis' → logprob: -14.250143051147461

Token 49: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000111768240458332
    2. '+' → logprob: -9.87511157989502
    3. 'ist' → logprob: -10.75011157989502
    4. 'Di' → logprob: -11.00011157989502
    5. 'di' → logprob: -11.87511157989502
    6. 'is' → logprob: -12.37511157989502
    7. '```' → logprob: -13.62511157989502
    8. '[i' → logprob: -13.87511157989502
    9. 'istance' → logprob: -14.00011157989502
    10. 'if' → logprob: -14.12511157989502

Token 50: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16024920344352722
    2. '+' → logprob: -1.9102492332458496
    3. ' plus' → logprob: -11.910248756408691
    4. ' ' → logprob: -12.410248756408691
    5. '+i' → logprob: -13.160248756408691
    6. ' ' → logprob: -13.285248756408691
    7. '   ' → logprob: -13.785248756408691
    8. ' +=' → logprob: -13.785248756408691
    9. '＋' → logprob: -13.910248756408691
    10. ' +
' → logprob: -13.910248756408691

Token 51: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005924708093516529
    2. ' L' → logprob: -7.5005927085876465
    3. 'X' → logprob: -10.625592231750488
    4. '   ' → logprob: -11.500592231750488
    5. '1' → logprob: -14.000592231750488
    6. '	L' → logprob: -14.125592231750488
    7. ' ' → logprob: -14.250592231750488
    8. 'int' → logprob: -14.375592231750488
    9. '  ' → logprob: -15.438092231750488
    10. '>L' → logprob: -15.563092231750488

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.723352049040841e-06
    2. 'list' → logprob: -12.875004768371582
    3. '[i' → logprob: -13.750004768371582
    4. 'List' → logprob: -14.750004768371582
    5. 'i' → logprob: -15.000004768371582
    6. 's' → logprob: -15.875004768371582
    7. '_i' → logprob: -16.375003814697266
    8. '[_' → logprob: -16.625003814697266
    9. ' _' → logprob: -17.375003814697266
    10. '```' → logprob: -17.875003814697266

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003194589400663972
    2. '[' → logprob: -5.753194808959961
    3. ' [' → logprob: -12.878194808959961
    4. 'i' → logprob: -12.878194808959961
    5. '\[' → logprob: -13.128194808959961
    6. '```' → logprob: -13.378194808959961
    7. '[
' → logprob: -13.628194808959961
    8. '_list' → logprob: -14.128194808959961
    9. '[_' → logprob: -14.378194808959961
    10. '[idx' → logprob: -14.503194808959961

Token 54: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1567966192960739
    2. ' +' → logprob: -2.40679669380188
    3. ')' → logprob: -3.53179669380188
    4. '   ' → logprob: -4.156796455383301
    5. '
' → logprob: -6.156796455383301
    6. '<|end|>' → logprob: -6.281796455383301
    7. '    
' → logprob: -6.656796455383301
    8. ' ' → logprob: -7.031796455383301
    9. '    ' → logprob: -7.531796455383301
    10. ')+' → logprob: -7.906796455383301

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9392087459564209
    2. '
' → logprob: -1.439208745956421
    3. ' if' → logprob: -2.064208745956421
    4. 'if' → logprob: -2.689208745956421
    5. '    
' → logprob: -2.814208745956421
    6. ' 
' → logprob: -3.064208745956421
    7. '+' → logprob: -3.814208745956421
    8. ' ' → logprob: -4.439208984375
    9. '<|end|>' → logprob: -4.564208984375
    10. '   
' → logprob: -4.939208984375

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41451597213745117
    2. 'if' (adapté à ' if') → logprob: -1.5395159721374512
    3. ' ' → logprob: -2.414515972137451
    4. ' 
' → logprob: -5.164515972137451
    5. '+' → logprob: -5.414515972137451
    6. '<|end|>' → logprob: -5.414515972137451
    7. '   ' → logprob: -5.789515972137451
    8. '
' → logprob: -5.914515972137451
    9. '\' → logprob: -5.914515972137451
    10. '\n' → logprob: -6.539515972137451

Token 57: ' Di' (ID: 9196)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.9331033229827881
    2. ' Di' → logprob: -0.9331033229827881
    3. 'Di' → logprob: -2.183103322982788
    4. ' abs' → logprob: -2.808103322982788
    5. 'X' → logprob: -3.683103322982788
    6. 'abs' → logprob: -5.433103561401367
    7. ' ' → logprob: -5.433103561401367
    8. '   ' → logprob: -5.933103561401367
    9. ' (' → logprob: -6.558103561401367
    10. ' L' → logprob: -7.183103561401367

Token 58: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7017853856086731
    2. ' <=' → logprob: -1.0767853260040283
    3. '>' → logprob: -2.5767853260040283
    4. ' >' → logprob: -3.5767853260040283
    5. '<' → logprob: -3.9517853260040283
    6. '+' → logprob: -4.076785564422607
    7. '>=' → logprob: -5.201785564422607
    8. ' <' → logprob: -5.326785564422607
    9. ' +' → logprob: -5.451785564422607
    10. '==' → logprob: -5.701785564422607

Token 59: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10024862736463547
    2. ' X' → logprob: -2.3502485752105713
    3. ' ' → logprob: -10.600248336791992
    4. '   ' → logprob: -11.475248336791992
    5. '  ' → logprob: -12.975248336791992
    6. '	X' → logprob: -13.600248336791992
    7. '>X' → logprob: -13.850248336791992
    8. 'x' → logprob: -15.350248336791992
    9. ' ans' → logprob: -15.475248336791992
    10. '    ' → logprob: -15.787748336791992

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016718693950679153
    2. ' :' → logprob: -9.375166893005371
    3. ' and' → logprob: -10.250166893005371
    4. ':
' → logprob: -10.375166893005371
    5. ' or' → logprob: -12.000166893005371
    6. 'and' → logprob: -12.500166893005371
    7. '-' → logprob: -14.000166893005371
    8. '<|end|>' → logprob: -14.250166893005371
    9. '):' → logprob: -14.250166893005371
    10. ':return' → logprob: -14.750166893005371

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11133766174316406
    2. '   ' → logprob: -2.736337661743164
    3. '    ' → logprob: -3.986337661743164
    4. '        
' → logprob: -5.611337661743164
    5. '    
' → logprob: -5.611337661743164
    6. '
' → logprob: -5.986337661743164
    7. ' ' → logprob: -6.236337661743164
    8. '<|end|>' → logprob: -6.236337661743164
    9. ':' → logprob: -6.736337661743164
    10. ' ans' → logprob: -6.861337661743164

Token 62: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.7550401091575623
    2. ' ans' → logprob: -0.8800401091575623
    3. '   ' → logprob: -2.255040168762207
    4. '	ans' → logprob: -5.505040168762207
    5. '    
' → logprob: -6.380040168762207
    6. 'Before' → logprob: -6.380040168762207
    7. '    ' → logprob: -7.255040168762207
    8. '```' → logprob: -7.755040168762207
    9. '(ans' → logprob: -7.880040168762207
    10. '
' → logprob: -8.255040168762207

Token 63: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.27165061235427856
    2. '+=' → logprob: -1.5216505527496338
    3. '=' → logprob: -5.021650791168213
    4. ' *=' → logprob: -5.021650791168213
    5. ' =' → logprob: -5.146650791168213
    6. '*=' → logprob: -7.646650791168213
    7. '*' → logprob: -11.146650314331055
    8. ' ' → logprob: -11.646650314331055
    9. '+' → logprob: -11.896650314331055
    10. ' ' → logprob: -12.646650314331055

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014188887551426888
    2. ' ' → logprob: -4.264188766479492
    3. 'Before' → logprob: -11.639188766479492
    4. 'Di' → logprob: -11.764188766479492
    5. ' Before' → logprob: -13.139188766479492
    6. 'L' → logprob: -13.514188766479492
    7. '   ' → logprob: -14.201688766479492
    8. ' Di' → logprob: -14.326688766479492
    9. '2' → logprob: -14.389188766479492
    10. ' L' → logprob: -14.639188766479492

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010391215328127146
    2. ' ' → logprob: -7.001039028167725
    3. 'Before' → logprob: -9.876039505004883
    4. 'Di' → logprob: -10.001039505004883
    5. '0' → logprob: -11.376039505004883
    6. 'i' → logprob: -12.126039505004883
    7. 'L' → logprob: -12.501039505004883
    8. 'ans' → logprob: -12.876039505004883
    9. '2' → logprob: -13.376039505004883
    10. '(' → logprob: -13.376039505004883

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8815317153930664
    2. '   ' → logprob: -1.0065317153930664
    3. '    
' → logprob: -2.0065317153930664
    4. ' 
' → logprob: -3.6315317153930664
    5. ' else' → logprob: -4.506531715393066
    6. '<|end|>' → logprob: -4.506531715393066
    7. '  
' → logprob: -4.631531715393066
    8. 'else' → logprob: -4.756531715393066
    9. ' ' → logprob: -5.256531715393066
    10. 'Before' → logprob: -5.881531715393066

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19295932352542877
    2. 'else' → logprob: -2.8179593086242676
    3. ' else' → logprob: -3.0679593086242676
    4. '
' → logprob: -3.5679593086242676
    5. '    
' → logprob: -3.5679593086242676
    6. '<|end|>' → logprob: -5.317959308624268
    7. ' ' → logprob: -6.317959308624268
    8. ' 
' → logprob: -6.567959308624268
    9. '  
' → logprob: -6.692959308624268
    10. '   
' → logprob: -7.317959308624268

Token 68: ' Before' (ID: 16935)
  Prédit: 'Before'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Before' (adapté à ' Before') → logprob: -0.00962504930794239
    2. '   ' → logprob: -4.75962495803833
    3. ' Before' → logprob: -7.50962495803833
    4. '       ' → logprob: -8.759625434875488
    5. 'else' → logprob: -9.134625434875488
    6. '```' → logprob: -10.134625434875488
    7. '
' → logprob: -10.259625434875488
    8. '    
' → logprob: -10.384625434875488
    9. '_before' → logprob: -10.384625434875488
    10. '        
' → logprob: -11.634625434875488

Token 69: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.0002920830447692424
    2. 'Di' → logprob: -8.62529182434082
    3. '_' → logprob: -9.12529182434082
    4. '_di' → logprob: -13.75029182434082
    5. 'D' → logprob: -14.50029182434082
    6. '```' → logprob: -14.75029182434082
    7. ' Di' → logprob: -15.12529182434082
    8. '=' → logprob: -15.50029182434082
    9. '_DI' → logprob: -15.62529182434082
    10. '<|end|>' → logprob: -15.87529182434082

Token 70: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004341221880167723
    2. 'Di' → logprob: -5.629341125488281
    3. '<|end|>' → logprob: -7.754341125488281
    4. '_i' → logprob: -8.754341125488281
    5. ' Di' → logprob: -9.504341125488281
    6. 'e' → logprob: -10.004341125488281
    7. '_' → logprob: -11.129341125488281
    8. 'o' → logprob: -11.504341125488281
    9. '_di' → logprob: -12.379341125488281
    10. ' ' → logprob: -13.754341125488281

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029801636934280396
    2. '=' → logprob: -3.529801607131958
    3. ' +=' → logprob: -9.904801368713379
    4. '+=' → logprob: -14.154801368713379
    5. ' ' → logprob: -14.904801368713379
    6. '＝' → logprob: -16.029802322387695
    7. ' =)' → logprob: -17.904802322387695
    8. ' ' → logprob: -18.404802322387695
    9. '+' → logprob: -18.654802322387695
    10. ',' → logprob: -19.029802322387695

Token 72: ' Di' (ID: 9196)
  Prédit: 'Di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Di' → logprob: -2.2246291337069124e-05
    2. ' Di' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.875021934509277
    4. 'D' → logprob: -15.250021934509277
    5. 'Dj' → logprob: -17.250022888183594
    6. 'Before' → logprob: -17.375022888183594
    7. 'DI' → logprob: -17.875022888183594
    8. 'Da' → logprob: -17.875022888183594
    9. 'Diag' → logprob: -18.000022888183594
    10. 'Diagonal' → logprob: -18.125022888183594

Token 73: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5262386202812195
    2. 'else' → logprob: -1.1512386798858643
    3. '<|end|>' → logprob: -2.4012386798858643
    4. '   ' → logprob: -7.901238441467285
    5. '	else' → logprob: -8.026238441467285
    6. 'elif' → logprob: -8.026238441467285
    7. ' ' → logprob: -8.026238441467285
    8. ' elif' → logprob: -8.276238441467285
    9. '<|end|>' → logprob: -8.526238441467285
    10. '```' → logprob: -8.651238441467285

Token 74: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.36986488103866577
    2. ' else' → logprob: -1.4948649406433105
    3. '<|end|>' → logprob: -2.6198649406433105
    4. 'print' → logprob: -5.1198649406433105
    5. 'elif' → logprob: -5.9948649406433105
    6. '```' → logprob: -6.3698649406433105
    7. ' ' → logprob: -7.7448649406433105
    8. ' elif' → logprob: -7.9948649406433105
    9. '    ' → logprob: -8.244864463806152
    10. ')' → logprob: -8.244864463806152

Token 75: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07908354699611664
    2. ' else' → logprob: -2.5790834426879883
    3. 'elif' → logprob: -9.329083442687988
    4. '<|end|>' → logprob: -9.829083442687988
    5. '```' → logprob: -10.829083442687988
    6. '	else' → logprob: -11.079083442687988
    7. '_else' → logprob: -12.454083442687988
    8. ' elif' → logprob: -12.454083442687988
    9. '   ' → logprob: -13.329083442687988
    10. 'e' → logprob: -13.704083442687988

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20483505725860596
    2. '       ' → logprob: -1.704835057258606
    3. '   ' → logprob: -5.829834938049316
    4. '    ' → logprob: -8.704834938049316
    5. ':
' → logprob: -9.579834938049316
    6. '     ' → logprob: -9.829834938049316
    7. '      ' → logprob: -10.079834938049316
    8. '	break' → logprob: -10.829834938049316
    9. '        ' → logprob: -10.954834938049316
    10. '           ' → logprob: -11.079834938049316

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08217496424913406
    2. 'break' → logprob: -2.9571750164031982
    3. '   ' → logprob: -3.7071750164031982
    4. ' break' → logprob: -6.457174777984619
    5. '	break' → logprob: -7.582174777984619
    6. '```' → logprob: -8.957175254821777
    7. '	   ' → logprob: -10.207175254821777
    8. '    ' → logprob: -10.707175254821777
    9. '           ' → logprob: -10.832175254821777
    10. ' ' → logprob: -11.207175254821777

Token 78: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.003178782993927598
    2. ' break' → logprob: -6.253178596496582
    3. '   ' → logprob: -6.753178596496582
    4. '       ' → logprob: -9.628178596496582
    5. '	break' → logprob: -11.753178596496582
    6. 'Break' → logprob: -12.878178596496582
    7. '```' → logprob: -13.003178596496582
    8. 'print' → logprob: -13.253178596496582
    9. '           ' → logprob: -14.628178596496582
    10. '_break' → logprob: -15.003178596496582

Token 79: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.231182826217264e-05
    2. ' print' → logprob: -9.750072479248047
    3. '<|end|>' → logprob: -11.750072479248047
    4. '#print' → logprob: -13.500072479248047
    5. ')' → logprob: -13.875072479248047
    6. '```' → logprob: -14.000072479248047
    7. '\n' → logprob: -14.750072479248047
    8. '#' → logprob: -14.875072479248047
    9. 'pr' → logprob: -14.875072479248047
    10. 'return' → logprob: -15.000072479248047

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03679497912526131
    2. '<|end|>' → logprob: -3.411794900894165
    3. ')' → logprob: -6.661795139312744
    4. ' print' → logprob: -7.536795139312744
    5. '```' → logprob: -7.661795139312744
    6. '#' → logprob: -7.661795139312744
    7. '#print' → logprob: -8.911794662475586
    8. '\n' → logprob: -9.661794662475586
    9. '
' → logprob: -10.036794662475586
    10. '\' → logprob: -10.161794662475586

Token 81: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10027308762073517
    2. '(ans' → logprob: -2.3502731323242188
    3. '()' → logprob: -9.850273132324219
    4. '('' → logprob: -11.975273132324219
    5. '("("' → logprob: -13.225273132324219
    6. 'ans' → logprob: -13.850273132324219
    7. '(
' → logprob: -13.975273132324219
    8. '(len' → logprob: -14.475273132324219
    9. '(`' → logprob: -14.725273132324219
    10. '("' → logprob: -14.850273132324219

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '))' → logprob: -16.75
    4. ')`' → logprob: -17.125
    5. ')
' → logprob: -18.25
    6. ')}' → logprob: -19.25
    7. '`)' → logprob: -19.5
    8. '）' → logprob: -19.5
    9. '')' → logprob: -19.75
    10. '),' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 38.75%
Précision adaptée (1ère position): 43.75%
Précision (top 10): 80.00%
================================================================================
