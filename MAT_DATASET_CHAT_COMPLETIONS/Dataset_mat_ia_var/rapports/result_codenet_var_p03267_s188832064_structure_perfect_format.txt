================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
l = int(input())
for i in range(21):
    if 2 ** i > l:
        n = i
        break

m = (n - 1) * 2

s = l - 2 ** (n - 1)
value = 2 ** (n - 1)

path_add = [0 for _ in range(n - 1)]
path_add_value = [0 for _ in range(n - 1)]

for i in range(n - 1):
    if s >= 2 ** (n - 2 - i):
        s -= 2 ** (n - 2 - i)
        path_add[-(i + 1)] = 1
        path_add_value[-(i + 1)] = value
        value += 2 ** (n - 2 - i)

print(n, m + sum(path_add))
for i in range(n - 1):
    print(i + 1, i + 2, 0)
    print(i + 1, i + 2, 2 ** i)

for i in range(n - 1):
    if path_add[i] == 1:
        print(i + 1, n, path_add_value[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'l' (ID: 75)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033198304008692503
    2. ''' → logprob: -6.50331974029541
    3. '```' → logprob: -7.75331974029541
    4. '('' → logprob: -7.87831974029541
    5. 'l' → logprob: -8.50331974029541
    6. '`' → logprob: -9.00331974029541
    7. '(l' → logprob: -9.00331974029541
    8. '"' → logprob: -9.00331974029541
    9. '32' → logprob: -9.12831974029541
    10. '("("' → logprob: -9.62831974029541

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23335963487625122
    2. ')' → logprob: -1.6083595752716064
    3. '()' → logprob: -5.2333598136901855
    4. '(
' → logprob: -7.2333598136901855
    5. '())' → logprob: -7.4833598136901855
    6. '))' → logprob: -8.358359336853027
    7. '")' → logprob: -8.483359336853027
    8. '')' → logprob: -8.608359336853027
    9. ''' → logprob: -8.858359336853027
    10. '"' → logprob: -9.608359336853027

Token 5: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7778269648551941
    2. 'if' → logprob: -1.4028270244598389
    3. ' ' → logprob: -2.777827024459839
    4. '*' → logprob: -2.902827024459839
    5. '\n' → logprob: -3.027827024459839
    6. 'n' → logprob: -3.527827024459839
    7. '+' → logprob: -4.15282678604126
    8. 'for' → logprob: -4.27782678604126
    9. ' if' → logprob: -4.40282678604126
    10. 's' → logprob: -4.65282678604126

Token 6: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002008102834224701
    2. '  ' → logprob: -6.502007961273193
    3. ' l' → logprob: -8.252008438110352
    4. ' i' → logprob: -8.377008438110352
    5. ' )' → logprob: -12.877008438110352
    6. 'l' → logprob: -13.002008438110352
    7. ' ' → logprob: -13.127008438110352
    8. '```' → logprob: -13.377008438110352
    9. 'i' → logprob: -13.627008438110352
    10. ' n' → logprob: -14.377008438110352

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2343936264514923
    2. 'in' → logprob: -1.85939359664917
    3. ' ' → logprob: -3.48439359664917
    4. 'n' → logprob: -4.35939359664917
    5. ')' → logprob: -5.73439359664917
    6. ' n' → logprob: -5.98439359664917
    7. '  ' → logprob: -6.48439359664917
    8. ',' → logprob: -7.48439359664917
    9. '_' → logprob: -7.98439359664917
    10. ' i' → logprob: -8.234394073486328

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054940059781074524
    2. 'range' → logprob: -3.0549399852752686
    3. ' ' → logprob: -5.179940223693848
    4. ' l' → logprob: -7.429940223693848
    5. ' in' → logprob: -9.929940223693848
    6. ')' → logprob: -10.679940223693848
    7. '	range' → logprob: -11.429940223693848
    8. '(range' → logprob: -12.054940223693848
    9. ' xrange' → logprob: -12.179940223693848
    10. ''' → logprob: -12.429940223693848

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47418883442878723
    2. '(l' → logprob: -0.9741888046264648
    3. '(len' → logprob: -10.099188804626465
    4. '(i' → logprob: -10.349188804626465
    5. '(n' → logprob: -10.599188804626465
    6. '(`' → logprob: -12.474188804626465
    7. '((' → logprob: -12.974188804626465
    8. '(ll' → logprob: -13.224188804626465
    9. ' (' → logprob: -13.599188804626465
    10. '(length' → logprob: -14.099188804626465

Token 10: '21' (ID: 2040)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0013611861504614353
    2. '1' → logprob: -6.62636137008667
    3. '0' → logprob: -10.626360893249512
    4. ' l' → logprob: -11.876360893249512
    5. '(l' → logprob: -13.251360893249512
    6. 'i' → logprob: -15.001360893249512
    7. '```' → logprob: -15.001360893249512
    8. '(' → logprob: -15.251360893249512
    9. '2' → logprob: -15.251360893249512
    10. ')' → logprob: -15.626360893249512

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10132899135351181
    2. ')' → logprob: -2.3513290882110596
    3. ':' → logprob: -6.9763288497924805
    4. '):
' → logprob: -9.60132884979248
    5. '*' → logprob: -10.72632884979248
    6. '**' → logprob: -11.10132884979248
    7. ':)' → logprob: -11.35132884979248
    8. ''):' → logprob: -11.60132884979248
    9. '-' → logprob: -11.72632884979248
    10. ' ):' → logprob: -11.97632884979248

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01196996308863163
    2. ' :' → logprob: -5.261970043182373
    3. '   ' → logprob: -6.136970043182373
    4. '):' → logprob: -6.636970043182373
    5. '(' → logprob: -7.261970043182373
    6. ':
' → logprob: -7.511970043182373
    7. '':' → logprob: -7.886970043182373
    8. ' ' → logprob: -7.886970043182373
    9. ')' → logprob: -8.761969566345215
    10. '":' → logprob: -9.136969566345215

Token 13: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5653746128082275
    2. ' ' → logprob: -2.0653746128082275
    3. '    ' → logprob: -2.0653746128082275
    4. ':' → logprob: -2.4403746128082275
    5. ' if' → logprob: -3.8153746128082275
    6. ' l' → logprob: -3.9403746128082275
    7. 'if' (adapté à ' if') → logprob: -4.315374374389648
    8. '```' → logprob: -5.065374374389648
    9. ' (' → logprob: -5.815374374389648
    10. '  ' → logprob: -6.065374374389648

Token 14: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.19501769542694092
    2. ' i' → logprob: -1.820017695426941
    3. ' ' → logprob: -4.8200178146362305
    4. 'i' → logprob: -5.5700178146362305
    5. 'l' → logprob: -5.8200178146362305
    6. ' ' → logprob: -9.07001781463623
    7. ' (' → logprob: -9.82001781463623
    8. '(i' → logprob: -10.57001781463623
    9. '  ' → logprob: -10.57001781463623
    10. '(' → logprob: -10.82001781463623

Token 15: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48834285140037537
    2. 'l' → logprob: -1.1133428812026978
    3. ' i' → logprob: -3.238342761993408
    4. ' l' → logprob: -3.988342761993408
    5. '(i' → logprob: -9.988343238830566
    6. 'abs' → logprob: -10.363343238830566
    7. '   ' → logprob: -10.613343238830566
    8. ' ' → logprob: -11.363343238830566
    9. ' abs' → logprob: -11.738343238830566
    10. '(' → logprob: -12.863343238830566

Token 16: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5425705909729004
    2. '**' → logprob: -0.9175705909729004
    3. ' *' → logprob: -5.0425705909729
    4. ' ' → logprob: -5.5425705909729
    5. ' <=' → logprob: -5.7925705909729
    6. '*' → logprob: -6.0425705909729
    7. '*l' → logprob: -6.2925705909729
    8. '*i' → logprob: -6.9175705909729
    9. ' l' → logprob: -8.792570114135742
    10. ' <' → logprob: -8.917570114135742

Token 17: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00041363044874742627
    2. ' i' → logprob: -7.875413417816162
    3. '20' → logprob: -11.12541389465332
    4. 'l' → logprob: -11.25041389465332
    5. ' ' → logprob: -13.12541389465332
    6. '10' → logprob: -13.87541389465332
    7. '21' → logprob: -14.00041389465332
    8. '7' → logprob: -15.25041389465332
    9. '(i' → logprob: -15.25041389465332
    10. '   ' → logprob: -15.50041389465332

Token 18: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8473747968673706
    2. ' >=' → logprob: -1.0973747968673706
    3. ' >' → logprob: -1.7223747968673706
    4. '>' → logprob: -3.72237491607666
    5. '>=' → logprob: -4.47237491607666
    6. '<=' → logprob: -4.72237491607666
    7. ' ' → logprob: -4.97237491607666
    8. ' ==' → logprob: -5.47237491607666
    9. ' <' → logprob: -5.97237491607666
    10. '==' → logprob: -7.72237491607666

Token 19: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17978186905384064
    2. 'l' → logprob: -1.8047819137573242
    3. ' ' → logprob: -10.304781913757324
    4. '	l' → logprob: -14.179781913757324
    5. ' ' → logprob: -14.554781913757324
    6. '20' → logprob: -15.429781913757324
    7. '10' → logprob: -15.429781913757324
    8. '2' → logprob: -15.429781913757324
    9. '  ' → logprob: -15.429781913757324
    10. '0' → logprob: -15.617281913757324

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006002153968438506
    2. ' :' → logprob: -7.500600337982178
    3. ':
' → logprob: -11.12559986114502
    4. '   ' → logprob: -11.12559986114502
    5. '):' → logprob: -11.37559986114502
    6. '       ' → logprob: -13.12559986114502
    7. '    ' → logprob: -13.12559986114502
    8. ':return' → logprob: -14.50059986114502
    9. ':**' → logprob: -14.87559986114502
    10. '  ' → logprob: -15.62559986114502

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005125218303874135
    2. ':' → logprob: -8.50051212310791
    3. ' break' → logprob: -9.00051212310791
    4. '\n' → logprob: -9.12551212310791
    5. '   ' → logprob: -10.87551212310791
    6. '    ' → logprob: -11.00051212310791
    7. '           ' → logprob: -11.25051212310791
    8. '        ' → logprob: -12.25051212310791
    9. 'break' → logprob: -12.37551212310791
    10. ' :' → logprob: -12.50051212310791

Token 22: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2419339269399643
    2. ' break' → logprob: -1.6169339418411255
    3. 'break' → logprob: -4.866933822631836
    4. '           ' → logprob: -4.991933822631836
    5. '\n' → logprob: -6.616933822631836
    6. '   ' → logprob: -8.616933822631836
    7. 'print' → logprob: -8.991933822631836
    8. ' print' → logprob: -10.116933822631836
    9. ' \' → logprob: -10.491933822631836
    10. '\' → logprob: -10.491933822631836

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3909815847873688
    2. ' =' → logprob: -1.1409815549850464
    3. ' ' → logprob: -5.765981674194336
    4. '   ' → logprob: -7.765981674194336
    5. 'e' → logprob: -8.640981674194336
    6. '    ' → logprob: -9.640981674194336
    7. '  ' → logprob: -10.015981674194336
    8. '-' → logprob: -10.140981674194336
    9. '     ' → logprob: -10.265981674194336
    10. '      ' → logprob: -10.765981674194336

Token 24: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4761682450771332
    2. 'i' → logprob: -1.2261682748794556
    3. ' ' → logprob: -3.226168155670166
    4. ' i' → logprob: -3.226168155670166
    5. 'l' → logprob: -6.101168155670166
    6. '0' → logprob: -6.476168155670166
    7. '   ' → logprob: -7.476168155670166
    8. '1' → logprob: -7.476168155670166
    9. ' l' → logprob: -7.476168155670166
    10. '20' → logprob: -8.601168632507324

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009429076453670859
    2. '   ' → logprob: -8.375943183898926
    3. '
' → logprob: -8.500943183898926
    4. '           ' → logprob: -9.125943183898926
    5. ')' → logprob: -9.625943183898926
    6. ':' → logprob: -10.000943183898926
    7. '<|end|>' → logprob: -10.000943183898926
    8. '\n' → logprob: -10.250943183898926
    9. ' break' → logprob: -10.500943183898926
    10. '```' → logprob: -10.750943183898926

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2603901015827432e-05
    2. '   ' → logprob: -11.375022888183594
    3. '           ' → logprob: -12.875022888183594
    4. ' break' → logprob: -13.000022888183594
    5. '```' → logprob: -13.500022888183594
    6. 'break' → logprob: -14.000022888183594
    7. '	break' → logprob: -14.125022888183594
    8. '      ' → logprob: -14.375022888183594
    9. '<|end|>' → logprob: -14.750022888183594
    10. ':' → logprob: -14.875022888183594

Token 27: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006035919301211834
    2. ' break' → logprob: -5.756035804748535
    3. 'break' (adapté à ' break') → logprob: -5.881035804748535
    4. '   ' → logprob: -10.256035804748535
    5. '	break' → logprob: -10.881035804748535
    6. '```' → logprob: -12.256035804748535
    7. '           ' → logprob: -13.756035804748535
    8. '      ' → logprob: -14.506035804748535
    9. ' ' → logprob: -15.006035804748535
    10. '  ' → logprob: -15.506035804748535

Token 28: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33944833278656006
    2. '#' → logprob: -2.2144484519958496
    3. '\n' → logprob: -2.8394484519958496
    4. 'print' → logprob: -3.8394484519958496
    5. ' ' → logprob: -3.8394484519958496
    6. '<|end|>' → logprob: -4.21444845199585
    7. '*' → logprob: -4.33944845199585
    8. ' 
' → logprob: -4.83944845199585
    9. '```' → logprob: -4.83944845199585
    10. ')' → logprob: -4.96444845199585

Token 29: 'm' (ID: 76)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16766901314258575
    2. '#' → logprob: -2.6676690578460693
    3. ' ' → logprob: -3.5426690578460693
    4. '```' → logprob: -4.54266881942749
    5. '\n' → logprob: -4.54266881942749
    6. ':' → logprob: -5.04266881942749
    7. ')' → logprob: -5.16766881942749
    8. 'print' → logprob: -5.16766881942749
    9. '*' → logprob: -5.66766881942749
    10. ' 
' → logprob: -6.29266881942749

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3265107274055481
    2. '=' → logprob: -1.3265106678009033
    3. 'a' → logprob: -5.576510906219482
    4. 'o' → logprob: -6.326510906219482
    5. '+' → logprob: -6.826510906219482
    6. 'odel' → logprob: -6.951510906219482
    7. '*' → logprob: -7.201510906219482
    8. ' ' → logprob: -7.201510906219482
    9. 'ax' → logprob: -7.326510906219482
    10. '-' → logprob: -7.451510906219482

Token 31: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40768319368362427
    2. 'l' → logprob: -1.5326831340789795
    3. 'n' → logprob: -3.2826831340789795
    4. '1' → logprob: -3.7826831340789795
    5. '0' → logprob: -3.9076831340789795
    6. '(' → logprob: -4.032683372497559
    7. 'max' → logprob: -4.532683372497559
    8. ' ' → logprob: -5.657683372497559
    9. ' l' → logprob: -6.657683372497559
    10. ' (' → logprob: -6.907683372497559

Token 32: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7717474699020386
    2. 'l' → logprob: -1.1467474699020386
    3. '1' → logprob: -1.6467474699020386
    4. ' ' → logprob: -4.646747589111328
    5. ' l' → logprob: -5.021747589111328
    6. 'n' → logprob: -5.271747589111328
    7. '(' → logprob: -5.646747589111328
    8. ' (' → logprob: -6.771747589111328
    9. ' n' → logprob: -7.521747589111328
    10. '(l' → logprob: -8.271747589111328

Token 33: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4971369504928589
    2. '+' → logprob: -1.4971369504928589
    3. ' -' → logprob: -1.9971369504928589
    4. ' +' → logprob: -3.7471370697021484
    5. ')' → logprob: -5.372137069702148
    6. ' ' → logprob: -6.372137069702148
    7. '*' → logprob: -7.247137069702148
    8. '+l' → logprob: -7.872137069702148
    9. '-l' → logprob: -8.122137069702148
    10. '/' → logprob: -8.997137069702148

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007035393267869949
    2. ' ' → logprob: -5.132035255432129
    3. 'l' → logprob: -7.632035255432129
    4. '2' → logprob: -8.257035255432129
    5. ' l' → logprob: -8.507035255432129
    6. '3' → logprob: -10.132035255432129
    7. '   ' → logprob: -10.507035255432129
    8. '7' → logprob: -10.882035255432129
    9. '16' → logprob: -11.382035255432129
    10. '4' → logprob: -11.632035255432129

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014382082736119628
    2. 'l' → logprob: -6.876438140869141
    3. ' ' → logprob: -8.37643814086914
    4. '2' → logprob: -9.12643814086914
    5. ' l' → logprob: -11.00143814086914
    6. '3' → logprob: -11.25143814086914
    7. '4' → logprob: -12.25143814086914
    8. '7' → logprob: -12.37643814086914
    9. '   ' → logprob: -12.37643814086914
    10. 'len' → logprob: -12.37643814086914

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002068302594125271
    2. ' )' → logprob: -7.502068519592285
    3. '+' → logprob: -7.627068519592285
    4. ')*' → logprob: -7.877068519592285
    5. ' +' → logprob: -8.252068519592285
    6. ' -' → logprob: -9.627068519592285
    7. ')+' → logprob: -9.627068519592285
    8. '))' → logprob: -9.877068519592285
    9. '-' → logprob: -10.002068519592285
    10. ')/' → logprob: -10.502068519592285

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2612674832344055
    2. ' *' → logprob: -2.1362674236297607
    3. '+' → logprob: -2.8862674236297607
    4. ')' → logprob: -3.5112674236297607
    5. ' +' → logprob: -4.88626766204834
    6. '<|end|>' → logprob: -5.13626766204834
    7. ' ' → logprob: -5.76126766204834
    8. '**' → logprob: -6.26126766204834
    9. '-' → logprob: -6.63626766204834
    10. '>' → logprob: -7.26126766204834

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5108845233917236
    2. '10' → logprob: -1.7608845233917236
    3. '7' → logprob: -2.2608845233917236
    4. '4' → logprob: -2.2608845233917236
    5. '8' → logprob: -2.2608845233917236
    6. '3' → logprob: -2.6358845233917236
    7. '20' → logprob: -3.0108845233917236
    8. '6' → logprob: -3.1358845233917236
    9. '5' → logprob: -3.5108845233917236
    10. '16' → logprob: -3.5108845233917236

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3513699769973755
    2. '4' → logprob: -1.8513699769973755
    3. '10' → logprob: -1.8513699769973755
    4. '7' → logprob: -1.9763699769973755
    5. '8' → logprob: -2.601369857788086
    6. '3' → logprob: -2.726369857788086
    7. '5' → logprob: -3.476369857788086
    8. '6' → logprob: -3.601369857788086
    9. '20' → logprob: -3.601369857788086
    10. '16' → logprob: -3.976369857788086

Token 40: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05976002290844917
    2. '<|end|>' → logprob: -3.434760093688965
    3. '*' → logprob: -4.559760093688965
    4. ' ' → logprob: -5.184760093688965
    5. ')' → logprob: -6.434760093688965
    6. '**' → logprob: -6.684760093688965
    7. '#' → logprob: -6.684760093688965
    8. ' +' → logprob: -7.184760093688965
    9. '\' → logprob: -7.309760093688965
    10. '+
' → logprob: -7.559760093688965

Token 41: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5033180117607117
    2. '<|end|>' → logprob: -1.2533180713653564
    3. 'for' → logprob: -3.1283180713653564
    4. '#' → logprob: -4.503317832946777
    5. ' ' → logprob: -4.628317832946777
    6. '*' → logprob: -5.253317832946777
    7. ' for' → logprob: -5.253317832946777
    8. 's' → logprob: -5.503317832946777
    9. 'print' → logprob: -5.628317832946777
    10. 'n' → logprob: -5.628317832946777

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8874592185020447
    2. ' =' → logprob: -1.0124592781066895
    3. 'um' → logprob: -1.6374592781066895
    4. '_' → logprob: -5.0124592781066895
    5. 'u' → logprob: -5.6374592781066895
    6. 'tr' → logprob: -5.7624592781066895
    7. 't' → logprob: -5.7624592781066895
    8. 'tring' → logprob: -6.1374592781066895
    9. ' ' → logprob: -6.5124592781066895
    10. 'q' → logprob: -6.5124592781066895

Token 43: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3180855512619019
    2. ' ' → logprob: -1.9430855512619019
    3. ''' → logprob: -2.0680856704711914
    4. ' '' → logprob: -2.4430856704711914
    5. '"' → logprob: -2.5680856704711914
    6. 'l' → logprob: -2.8180856704711914
    7. ' (' → logprob: -3.3180856704711914
    8. '0' → logprob: -3.5680856704711914
    9. ' "' → logprob: -3.6930856704711914
    10. '2' → logprob: -3.6930856704711914

Token 44: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.5967330932617188
    2. '-' → logprob: -1.5967330932617188
    3. '+' → logprob: -1.7217330932617188
    4. ' ' → logprob: -1.8467330932617188
    5. ' %' → logprob: -2.7217330932617188
    6. ' -' → logprob: -2.9717330932617188
    7. '*' → logprob: -3.8467330932617188
    8. ' +' → logprob: -3.8467330932617188
    9. '>' → logprob: -4.096733093261719
    10. '**' → logprob: -4.346733093261719

Token 45: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1484745442867279
    2. '(' → logprob: -2.0234744548797607
    3. ' ' → logprob: -5.52347469329834
    4. ' (' → logprob: -6.39847469329834
    5. '1' → logprob: -9.64847469329834
    6. '   ' → logprob: -10.02347469329834
    7. '  ' → logprob: -11.64847469329834
    8. '```' → logprob: -13.52347469329834
    9. '[' → logprob: -13.77347469329834
    10. '256' → logprob: -14.27347469329834

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.062171924859285355
    2. '(' → logprob: -2.8121719360351562
    3. ' ' → logprob: -8.687171936035156
    4. ' (' → logprob: -10.687171936035156
    5. '   ' → logprob: -11.687171936035156
    6. '1' → logprob: -13.187171936035156
    7. '[' → logprob: -13.812171936035156
    8. '  ' → logprob: -14.687171936035156
    9. '```' → logprob: -15.062171936035156
    10. 'pow' → logprob: -15.437171936035156

Token 47: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00048715711454860866
    2. 'm' → logprob: -8.000487327575684
    3. '(m' → logprob: -9.875487327575684
    4. ' **' → logprob: -10.625487327575684
    5. '*m' → logprob: -10.625487327575684
    6. '<m' → logprob: -11.250487327575684
    7. '*' → logprob: -11.625487327575684
    8. '[m' → logprob: -11.625487327575684
    9. '0' → logprob: -12.000487327575684
    10. '`' → logprob: -12.125487327575684

Token 48: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4303551912307739
    2. 'm' → logprob: -1.055355191230774
    3. '(' → logprob: -6.930355072021484
    4. '(n' → logprob: -7.555355072021484
    5. ' (' → logprob: -9.055355072021484
    6. ' m' → logprob: -11.680355072021484
    7. '{' → logprob: -11.805355072021484
    8. '((' → logprob: -12.055355072021484
    9. '(
' → logprob: -12.305355072021484
    10. '```' → logprob: -12.805355072021484

Token 49: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12777025997638702
    2. '(m' → logprob: -2.127770185470581
    3. '(n' → logprob: -8.00277042388916
    4. ' (' → logprob: -8.25277042388916
    5. '(' → logprob: -8.75277042388916
    6. '{' → logprob: -10.37777042388916
    7. 'n' → logprob: -10.50277042388916
    8. ' m' → logprob: -10.62777042388916
    9. '(
' → logprob: -13.25277042388916
    10. '[m' → logprob: -14.12777042388916

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23983646929264069
    2. 'm' → logprob: -1.7398364543914795
    3. '(m' → logprob: -3.3648364543914795
    4. ' -' → logprob: -7.114836692810059
    5. ' ' → logprob: -7.489836692810059
    6. '{' → logprob: -7.614836692810059
    7. '(' → logprob: -8.114836692810059
    8. '(n' → logprob: -8.114836692810059
    9. '   ' → logprob: -8.114836692810059
    10. ' (' → logprob: -8.989836692810059

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. ' ' → logprob: -11.125021934509277
    3. '2' → logprob: -12.000021934509277
    4. '   ' → logprob: -13.875021934509277
    5. '```' → logprob: -15.625021934509277
    6. '-' → logprob: -16.000022888183594
    7. '  ' → logprob: -16.125022888183594
    8. '0' → logprob: -17.812522888183594
    9. '(' → logprob: -18.250022888183594
    10. '    ' → logprob: -18.312522888183594

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '2' → logprob: -12.25001049041748
    3. ' ' → logprob: -12.37501049041748
    4. '   ' → logprob: -15.18751049041748
    5. '１' → logprob: -15.56251049041748
    6. '-' → logprob: -15.81251049041748
    7. '```' → logprob: -15.93751049041748
    8. '۱' → logprob: -16.875009536743164
    9. '  ' → logprob: -17.062509536743164
    10. '0' → logprob: -17.562509536743164

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017863049288280308
    2. ' )' → logprob: -9.000178337097168
    3. '<|end|>' → logprob: -10.500178337097168
    4. '))' → logprob: -12.250178337097168
    5. ')
' → logprob: -12.375178337097168
    6. ')*' → logprob: -12.750178337097168
    7. '```' → logprob: -12.750178337097168
    8. '`)' → logprob: -13.000178337097168
    9. '-' → logprob: -13.500178337097168
    10. '')' → logprob: -13.625178337097168

Token 54: 'value' (ID: 1594)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.174795389175415
    2. 'if' → logprob: -1.424795389175415
    3. 's' → logprob: -1.674795389175415
    4. ' if' → logprob: -2.674795389175415
    5. 'print' → logprob: -2.674795389175415
    6. ' *' → logprob: -3.674795389175415
    7. '(' → logprob: -3.674795389175415
    8. '#' → logprob: -4.924795150756836
    9. '**' → logprob: -5.049795150756836
    10. ')' → logprob: -5.049795150756836

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12710921466350555
    2. '=' → logprob: -2.8771092891693115
    3. 's' → logprob: -3.3771092891693115
    4. '_' → logprob: -3.6271092891693115
    5. ' ' → logprob: -6.752109050750732
    6. ' s' → logprob: -8.12710952758789
    7. '_s' → logprob: -8.37710952758789
    8. '[' → logprob: -8.62710952758789
    9. ' _' → logprob: -9.12710952758789
    10. '_index' → logprob: -9.87710952758789

Token 56: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6403683423995972
    2. ' s' → logprob: -1.5153683423995972
    3. '2' → logprob: -1.8903683423995972
    4. ' ' → logprob: -3.3903684616088867
    5. ' (' → logprob: -3.7653684616088867
    6. '(' → logprob: -4.140368461608887
    7. '(s' → logprob: -4.265368461608887
    8. '0' → logprob: -5.640368461608887
    9. '3' → logprob: -6.015368461608887
    10. 'l' → logprob: -6.140368461608887

Token 57: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40418073534965515
    2. '2' → logprob: -1.2791807651519775
    3. '(s' → logprob: -4.029180526733398
    4. '(' → logprob: -4.029180526733398
    5. '3' → logprob: -5.029180526733398
    6. '1' → logprob: -5.904180526733398
    7. 'l' → logprob: -5.904180526733398
    8. '0' → logprob: -6.279180526733398
    9. 'm' → logprob: -6.654180526733398
    10. '4' → logprob: -7.029180526733398

Token 58: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02915334887802601
    2. '*' → logprob: -4.404153347015381
    3. '*s' → logprob: -4.529153347015381
    4. ' **' → logprob: -5.279153347015381
    5. 's' → logprob: -8.404153823852539
    6. '*m' → logprob: -8.529153823852539
    7. ' *' → logprob: -9.154153823852539
    8. '***' → logprob: -10.529153823852539
    9. '+' → logprob: -11.154153823852539
    10. '*(' → logprob: -11.279153823852539

Token 59: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010443391278386116
    2. '(m' → logprob: -4.760443210601807
    3. '(' → logprob: -6.760443210601807
    4. 's' → logprob: -7.635443210601807
    5. '(s' → logprob: -9.135443687438965
    6. '((' → logprob: -10.510443687438965
    7. ' m' → logprob: -11.010443687438965
    8. '(n' → logprob: -11.135443687438965
    9. ' (' → logprob: -12.135443687438965
    10. 'n' → logprob: -12.510443687438965

Token 60: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00352927902713418
    2. '(m' → logprob: -5.878529071807861
    3. '(' → logprob: -7.753529071807861
    4. 's' → logprob: -8.75352954864502
    5. ' m' → logprob: -10.25352954864502
    6. '((' → logprob: -10.50352954864502
    7. 'n' → logprob: -10.62852954864502
    8. '(n' → logprob: -10.75352954864502
    9. ' (' → logprob: -11.87852954864502
    10. '(s' → logprob: -11.87852954864502

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22999307513237
    2. 'm' → logprob: -2.4799931049346924
    3. ' -' → logprob: -2.8549931049346924
    4. 's' → logprob: -3.9799931049346924
    5. '*' → logprob: -4.854992866516113
    6. ')' → logprob: -4.854992866516113
    7. '0' → logprob: -4.979992866516113
    8. ' ' → logprob: -5.104992866516113
    9. ' m' → logprob: -5.354992866516113
    10. '2' → logprob: -5.479992866516113

Token 62: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.21727505326271057
    2. '1' → logprob: -1.8422750234603882
    3. 's' → logprob: -4.717275142669678
    4. '2' → logprob: -4.842275142669678
    5. '(' → logprob: -4.967275142669678
    6. '(m' → logprob: -4.967275142669678
    7. '0' → logprob: -5.967275142669678
    8. ' m' → logprob: -6.592275142669678
    9. '(s' → logprob: -7.342275142669678
    10. ' ' → logprob: -7.467275142669678

Token 63: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.236849844455719
    2. '1' → logprob: -1.8618497848510742
    3. '2' → logprob: -3.611849784851074
    4. '(m' → logprob: -4.486849784851074
    5. 's' → logprob: -4.611849784851074
    6. '0' → logprob: -5.611849784851074
    7. '(' → logprob: -5.986849784851074
    8. '(s' → logprob: -7.361849784851074
    9. ' m' → logprob: -8.861849784851074
    10. '3' → logprob: -9.361849784851074

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2684895992279053
    2. '+' → logprob: -2.0184895992279053
    3. ' +' → logprob: -2.5184895992279053
    4. '-' → logprob: -5.018489837646484
    5. ' )' → logprob: -5.268489837646484
    6. ')+' → logprob: -5.768489837646484
    7. '*' → logprob: -5.768489837646484
    8. ' -' → logprob: -6.018489837646484
    9. ' ' → logprob: -7.393489837646484
    10. ' *' → logprob: -8.018489837646484

Token 65: 'path' (ID: 4189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5330455303192139
    2. 'if' → logprob: -1.1580455303192139
    3. 's' → logprob: -3.908045530319214
    4. ' if' → logprob: -4.033045768737793
    5. ' for' → logprob: -4.283045768737793
    6. 'print' → logprob: -4.408045768737793
    7. ')' → logprob: -5.158045768737793
    8. 'while' → logprob: -5.283045768737793
    9. '*' → logprob: -5.408045768737793
    10. '+' → logprob: -5.408045768737793

Token 66: '_add' (ID: 8390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015236332081258297
    2. '_' → logprob: -4.8902363777160645
    3. '=' → logprob: -5.0152363777160645
    4. '.' → logprob: -8.390235900878906
    5. ' ' → logprob: -8.640235900878906
    6. '[' → logprob: -8.765235900878906
    7. 's' → logprob: -9.265235900878906
    8. '[:]' → logprob: -9.390235900878906
    9. '.append' → logprob: -9.640235900878906
    10. '=[]' → logprob: -9.890235900878906

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5301716923713684
    2. 's' → logprob: -1.5301716327667236
    3. '=' → logprob: -1.9051716327667236
    4. 'ed' → logprob: -3.2801716327667236
    5. 'ress' → logprob: -6.155171871185303
    6. 'ition' → logprob: -6.155171871185303
    7. 'ing' → logprob: -6.655171871185303
    8. '_' → logprob: -7.280171871185303
    9. 'itional' → logprob: -7.280171871185303
    10. ' +=' → logprob: -8.155171394348145

Token 68: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9871213436126709
    2. ''s' → logprob: -2.112121343612671
    3. ''' → logprob: -2.362121343612671
    4. '[]' → logprob: -2.362121343612671
    5. '"' → logprob: -2.487121343612671
    6. ' s' → logprob: -2.987121343612671
    7. 's' → logprob: -3.237121343612671
    8. '""' → logprob: -3.612121343612671
    9. '''' → logprob: -3.987121343612671
    10. ' "' → logprob: -3.987121343612671

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46328628063201904
    2. ']' → logprob: -1.588286280632019
    3. '1' → logprob: -3.2132863998413086
    4. '(' → logprob: -3.8382863998413086
    5. 's' → logprob: -4.213286399841309
    6. ''s' → logprob: -4.338286399841309
    7. ''' → logprob: -4.463286399841309
    8. 'value' → logprob: -4.838286399841309
    9. '-' → logprob: -4.963286399841309
    10. '[' → logprob: -5.088286399841309

Token 70: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38922908902168274
    2. ',' → logprob: -1.1392290592193604
    3. ' ]' → logprob: -6.2642292976379395
    4. ')]' → logprob: -8.639228820800781
    5. ')' → logprob: -9.389228820800781
    6. ' ,' → logprob: -9.889228820800781
    7. '0' → logprob: -10.139228820800781
    8. '1' → logprob: -10.389228820800781
    9. '][' → logprob: -11.389228820800781
    10. '+' → logprob: -11.514228820800781

Token 71: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02572733536362648
    2. ' _' → logprob: -4.025727272033691
    3. 'range' → logprob: -5.650727272033691
    4. ' range' → logprob: -6.025727272033691
    5. '_range' → logprob: -7.525727272033691
    6. ' in' → logprob: -7.775727272033691
    7. ' ' → logprob: -7.900727272033691
    8. ' i' → logprob: -9.150727272033691
    9. 'in' → logprob: -9.775727272033691
    10. 'i' → logprob: -9.775727272033691

Token 72: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2037343680858612
    2. 'in' → logprob: -1.8287343978881836
    3. ' in' → logprob: -3.9537343978881836
    4. ' range' → logprob: -5.453734397888184
    5. ' ' → logprob: -8.953734397888184
    6. '(range' → logprob: -10.078734397888184
    7. '  ' → logprob: -10.453734397888184
    8. 'ange' → logprob: -10.578734397888184
    9. '	range' → logprob: -12.953734397888184
    10. '_' → logprob: -12.953734397888184

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01106515247374773
    2. ' range' → logprob: -4.5110650062561035
    3. 'path' → logprob: -11.136065483093262
    4. 'ran' → logprob: -14.386065483093262
    5. ' ' → logprob: -14.636065483093262
    6. 'r' → logprob: -14.761065483093262
    7. 's' → logprob: -14.886065483093262
    8. '(range' → logprob: -15.261065483093262
    9. 'rang' → logprob: -15.761065483093262
    10. '   ' → logprob: -16.011064529418945

Token 74: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.03216738998889923
    2. '(n' → logprob: -4.032167434692383
    3. '(' → logprob: -4.282167434692383
    4. '(s' → logprob: -9.657167434692383
    5. ' (' → logprob: -10.657167434692383
    6. '((' → logprob: -11.407167434692383
    7. 'm' → logprob: -12.907167434692383
    8. '(l' → logprob: -13.657167434692383
    9. '](' → logprob: -14.782167434692383
    10. ']' → logprob: -14.907167434692383

Token 75: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007441143970936537
    2. '+' → logprob: -7.875744342803955
    3. ' )' → logprob: -8.375743865966797
    4. ')' → logprob: -9.500743865966797
    5. '-' → logprob: -10.000743865966797
    6. ']' → logprob: -12.500743865966797
    7. ')]
' → logprob: -12.750743865966797
    8. ' +' → logprob: -13.250743865966797
    9. ' -' → logprob: -14.000743865966797
    10. ')][' → logprob: -14.000743865966797

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019866866059601307
    2. '2' → logprob: -6.751986503601074
    3. ' ' → logprob: -7.126986503601074
    4. ')' → logprob: -12.001986503601074
    5. '0' → logprob: -13.001986503601074
    6. '3' → logprob: -13.814486503601074
    7. '   ' → logprob: -14.064486503601074
    8. 'm' → logprob: -14.314486503601074
    9. ' )' → logprob: -14.814486503601074
    10. '```' → logprob: -15.314486503601074

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025633294717408717
    2. ' ' → logprob: -8.875256538391113
    3. '2' → logprob: -9.125256538391113
    4. '0' → logprob: -12.250256538391113
    5. '   ' → logprob: -13.875256538391113
    6. ')' → logprob: -14.750256538391113
    7. 'm' → logprob: -14.937756538391113
    8. '  ' → logprob: -15.750256538391113
    9. '```' → logprob: -15.750256538391113
    10. '3' → logprob: -16.000255584716797

Token 78: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002353640884393826
    2. ']' → logprob: -8.500235557556152
    3. ')' → logprob: -10.625235557556152
    4. '])' → logprob: -12.625235557556152
    5. ' )' → logprob: -13.875235557556152
    6. '])]' → logprob: -13.875235557556152
    7. ' ]' → logprob: -14.375235557556152
    8. ')])' → logprob: -14.500235557556152
    9. '+' → logprob: -14.750235557556152
    10. ')]
' → logprob: -14.750235557556152

Token 79: 'path' (ID: 4189)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.601877748966217
    2. ' for' → logprob: -1.1018776893615723
    3. '<|end|>' → logprob: -2.6018776893615723
    4. 's' → logprob: -4.101877689361572
    5. '[' → logprob: -4.601877689361572
    6. 'i' → logprob: -5.101877689361572
    7. '
' → logprob: -5.976877689361572
    8. ',' → logprob: -6.351877689361572
    9. 'if' → logprob: -6.851877689361572
    10. ']' → logprob: -6.976877689361572

Token 80: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.08339624851942062
    2. '[' → logprob: -2.9583961963653564
    3. '_' → logprob: -3.7083961963653564
    4. '_append' → logprob: -6.9583964347839355
    5. '.append' → logprob: -7.3333964347839355
    6. '.' → logprob: -8.458395957946777
    7. '<|end|>' → logprob: -8.458395957946777
    8. '[:]' → logprob: -8.708395957946777
    9. '[]' → logprob: -9.208395957946777
    10. '[_' → logprob: -9.333395957946777

Token 81: '_value' (ID: 6734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.430361807346344
    2. '=' → logprob: -1.0553617477416992
    3. '[' → logprob: -6.680361747741699
    4. 's' → logprob: -8.6803617477417
    5. '[:]' → logprob: -9.5553617477417
    6. ',' → logprob: -10.0553617477417
    7. ']' → logprob: -10.8053617477417
    8. ' +=' → logprob: -11.0553617477417
    9. '[]' → logprob: -11.3053617477417
    10. ' ' → logprob: -11.3053617477417

Token 83: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12200053781270981
    2. ' ' → logprob: -2.7470004558563232
    3. '[' → logprob: -3.9970004558563232
    4. ' [' → logprob: -4.247000694274902
    5. ' value' → logprob: -4.872000694274902
    6. 'value' → logprob: -4.997000694274902
    7. '[value' → logprob: -5.872000694274902
    8. '[]' → logprob: -8.622000694274902
    9. '2' → logprob: -8.622000694274902
    10. 's' → logprob: -9.372000694274902

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017525337170809507
    2. ' ' → logprob: -6.5017523765563965
    3. 'value' → logprob: -8.751752853393555
    4. '1' → logprob: -11.251752853393555
    5. '-' → logprob: -11.376752853393555
    6. ']' → logprob: -11.626752853393555
    7. ' value' → logprob: -11.626752853393555
    8. ')' → logprob: -11.751752853393555
    9. '(' → logprob: -11.876752853393555
    10. '[' → logprob: -12.251752853393555

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18486981093883514
    2. 'for' → logprob: -1.8098697662353516
    3. ']' → logprob: -5.809869766235352
    4. ')' → logprob: -6.434869766235352
    5. ' ' → logprob: -8.059869766235352
    6. ')]' → logprob: -9.559869766235352
    7. ' ]' → logprob: -9.684869766235352
    8. '	for' → logprob: -10.309869766235352
    9. ' )' → logprob: -12.434869766235352
    10. ',' → logprob: -12.684869766235352

Token 86: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06264510005712509
    2. ' _' → logprob: -2.937645196914673
    3. ' range' → logprob: -4.937644958496094
    4. 'range' → logprob: -7.812644958496094
    5. '_range' → logprob: -9.062644958496094
    6. ' in' → logprob: -10.437644958496094
    7. '(range' → logprob: -12.562644958496094
    8. '_in' → logprob: -13.437644958496094
    9. ' for' → logprob: -13.687644958496094
    10. ' ' → logprob: -13.937644958496094

Token 87: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011065036058425903
    2. ' range' → logprob: -4.5110650062561035
    3. '(range' → logprob: -11.011065483093262
    4. '	range' → logprob: -14.761065483093262
    5. '_range' → logprob: -15.386065483093262
    6. '(' → logprob: -16.386064529418945
    7. '_' → logprob: -18.011064529418945
    8. ' ' → logprob: -18.761064529418945
    9. '<|end|>' → logprob: -19.011064529418945
    10. 'rang' → logprob: -19.136064529418945

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693022191524506
    2. 'range' → logprob: -2.1269302368164062
    3. '(range' → logprob: -13.126930236816406
    4. '	range' → logprob: -17.001930236816406
    5. ' path' → logprob: -17.376930236816406
    6. 'path' → logprob: -17.501930236816406
    7. '_range' → logprob: -17.626930236816406
    8. ' xrange' → logprob: -19.376930236816406
    9. ' ' → logprob: -19.626930236816406
    10. '(' → logprob: -20.376930236816406

Token 89: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7026531100273132
    2. 'range' → logprob: -1.202653169631958
    3. '(range' → logprob: -1.827653169631958
    4. '(n' → logprob: -3.202653169631958
    5. '(' → logprob: -6.452652931213379
    6. '(path' → logprob: -7.452652931213379
    7. ' (' → logprob: -8.202652931213379
    8. 'path' → logprob: -8.577652931213379
    9. ' path' → logprob: -9.202652931213379
    10. '(s' → logprob: -9.452652931213379

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10063868761062622
    2. ' -' → logprob: -2.3506386280059814
    3. ')]' → logprob: -8.350638389587402
    4. ')' → logprob: -8.600638389587402
    5. ')])' → logprob: -12.350638389587402
    6. ' ' → logprob: -13.100638389587402
    7. '1' → logprob: -13.600638389587402
    8. '   ' → logprob: -13.725638389587402
    9. '–' → logprob: -14.350638389587402
    10. ' )' → logprob: -14.600638389587402

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.50004768371582
    3. '2' → logprob: -10.87504768371582
    4. ')' → logprob: -15.00004768371582
    5. '<|end|>' → logprob: -16.00004768371582
    6. '   ' → logprob: -16.06254768371582
    7. '```' → logprob: -16.37504768371582
    8. '-' → logprob: -17.00004768371582
    9. '(' → logprob: -17.37504768371582
    10. '0' → logprob: -17.56254768371582

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012654215970542282
    2. '2' → logprob: -9.000126838684082
    3. ' ' → logprob: -13.750126838684082
    4. '```' → logprob: -14.312626838684082
    5. '-' → logprob: -14.812626838684082
    6. '   ' → logprob: -15.250126838684082
    7. ')' → logprob: -16.250125885009766
    8. '１' → logprob: -16.375125885009766
    9. '3' → logprob: -16.625125885009766
    10. '0' → logprob: -16.687625885009766

Token 93: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011781826615333557
    2. ']' → logprob: -4.761781692504883
    3. ')' → logprob: -5.761781692504883
    4. '])' → logprob: -11.386781692504883
    5. '])]' → logprob: -13.386781692504883
    6. ')])' → logprob: -13.636781692504883
    7. ')]
' → logprob: -14.261781692504883
    8. ' ]' → logprob: -14.761781692504883
    9. ']
' → logprob: -14.886781692504883
    10. ')],' → logprob: -15.386781692504883

Token 94: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00218987581320107
    2. ' for' → logprob: -6.627190113067627
    3. 'i' → logprob: -8.127189636230469
    4. 'f' → logprob: -8.627189636230469
    5. ')' → logprob: -9.377189636230469
    6. 'n' → logprob: -9.752189636230469
    7. 's' → logprob: -10.252189636230469
    8. '
' → logprob: -10.252189636230469
    9. '<|end|>' → logprob: -10.377189636230469
    10. '#' → logprob: -10.627189636230469

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.019243786111474037
    2. ' j' → logprob: -4.6442437171936035
    3. 'i' → logprob: -4.7692437171936035
    4. 'j' → logprob: -7.7692437171936035
    5. ' _' → logprob: -8.769244194030762
    6. ' idx' → logprob: -8.894244194030762
    7. '_' → logprob: -9.394244194030762
    8. ' x' → logprob: -10.019244194030762
    9. ' ' → logprob: -10.269244194030762
    10. ' index' → logprob: -11.019244194030762

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03828120231628418
    2. 'in' → logprob: -3.288281202316284
    3. ' ' → logprob: -8.413281440734863
    4. 'range' → logprob: -12.288281440734863
    5. '_' → logprob: -12.413281440734863
    6. ' range' → logprob: -12.663281440734863
    7. '	in' → logprob: -13.038281440734863
    8. ')' → logprob: -14.163281440734863
    9. ',' → logprob: -14.413281440734863
    10. 'n' → logprob: -14.663281440734863

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687199354171753
    2. 'range' → logprob: -1.1368720531463623
    3. '	range' → logprob: -14.511872291564941
    4. '(range' → logprob: -15.011872291564941
    5. ' ' → logprob: -16.386871337890625
    6. ')' → logprob: -17.511871337890625
    7. '_range' → logprob: -17.511871337890625
    8. ' xrange' → logprob: -17.636871337890625
    9. '```' → logprob: -18.011871337890625
    10. 're' → logprob: -18.261871337890625

Token 98: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10357840359210968
    2. '(' → logprob: -2.6035783290863037
    3. '(m' → logprob: -3.7285783290863037
    4. ' (' → logprob: -8.853578567504883
    5. '(s' → logprob: -9.603578567504883
    6. '(path' → logprob: -9.728578567504883
    7. '(len' → logprob: -10.228578567504883
    8. '((' → logprob: -11.353578567504883
    9. '(
' → logprob: -11.478578567504883
    10. 'n' → logprob: -11.728578567504883

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16888058185577393
    2. ' -' → logprob: -2.0438804626464844
    3. '):' → logprob: -3.7938804626464844
    4. '):
' → logprob: -6.293880462646484
    5. '1' → logprob: -6.543880462646484
    6. '   ' → logprob: -10.418880462646484
    7. ')' → logprob: -10.668880462646484
    8. ' ' → logprob: -12.543880462646484
    9. '2' → logprob: -12.793880462646484
    10. ' ):' → logprob: -12.793880462646484

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005414772895164788
    2. ' ' → logprob: -7.875541687011719
    3. '2' → logprob: -8.750541687011719
    4. '   ' → logprob: -13.688041687011719
    5. '-' → logprob: -14.750541687011719
    6. '```' → logprob: -14.875541687011719
    7. 'm' → logprob: -15.813041687011719
    8. '  ' → logprob: -16.31304168701172
    9. '۱' → logprob: -16.31304168701172
    10. '           ' → logprob: -16.50054168701172

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.384836888173595e-05
    2. '2' → logprob: -10.0000638961792
    3. ' ' → logprob: -11.0000638961792
    4. '```' → logprob: -14.9375638961792
    5. '   ' → logprob: -15.2500638961792
    6. '-' → logprob: -15.4375638961792
    7. 'm' → logprob: -16.062562942504883
    8. '۱' → logprob: -16.125062942504883
    9. '12' → logprob: -16.937562942504883
    10. '１' → logprob: -16.937562942504883

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006024802569299936
    2. '):
' → logprob: -8.250602722167969
    3. ' ):' → logprob: -8.250602722167969
    4. ':' → logprob: -9.625602722167969
    5. ')' → logprob: -11.875602722167969
    6. '+' → logprob: -13.125602722167969
    7. ',' → logprob: -13.875602722167969
    8. '):
' → logprob: -14.000602722167969
    9. ' :' → logprob: -14.125602722167969
    10. '():' → logprob: -14.250602722167969

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008404999040067196
    2. ':' → logprob: -5.6334052085876465
    3. ' if' → logprob: -6.1334052085876465
    4. '<|end|>' → logprob: -6.3834052085876465
    5. ',' → logprob: -8.258404731750488
    6. '    
' → logprob: -8.508404731750488
    7. '<|end|>' → logprob: -9.633404731750488
    8. ' :' → logprob: -9.883404731750488
    9. '```' → logprob: -10.133404731750488
    10. ' for' → logprob: -10.258404731750488

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1160675436258316
    2. ' path' → logprob: -2.74106764793396
    3. '   ' → logprob: -3.49106764793396
    4. 'if' (adapté à ' if') → logprob: -4.491067409515381
    5. 'path' → logprob: -6.116067409515381
    6. ' ' → logprob: -7.866067409515381
    7. ' for' → logprob: -8.241067886352539
    8. ' s' → logprob: -8.991067886352539
    9. '    ' → logprob: -9.241067886352539
    10. ' :' → logprob: -9.491067886352539

Token 105: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20694707334041595
    2. ' (' → logprob: -2.456947088241577
    3. '(s' → logprob: -3.081947088241577
    4. 's' → logprob: -3.081947088241577
    5. ' m' → logprob: -5.956946849822998
    6. '(' → logprob: -5.956946849822998
    7. '(m' → logprob: -6.831946849822998
    8. ' ' → logprob: -6.956946849822998
    9. ' path' → logprob: -7.206946849822998
    10. 'm' → logprob: -7.706946849822998

Token 106: ' >=' (ID: 5064)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.38642677664756775
    2. ' >=' → logprob: -1.2614268064498901
    3. '>=' → logprob: -3.8864266872406006
    4. '&' → logprob: -4.88642692565918
    5. ' >' → logprob: -5.88642692565918
    6. '>' → logprob: -5.88642692565918
    7. ' ' → logprob: -6.13642692565918
    8. '   ' → logprob: -7.76142692565918
    9. ' >>' → logprob: -8.13642692565918
    10. ' <' → logprob: -8.26142692565918

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45973169803619385
    2. 'value' → logprob: -1.5847316980361938
    3. ' value' → logprob: -1.9597316980361938
    4. ' ' → logprob: -3.8347315788269043
    5. '(' → logprob: -8.084732055664062
    6. ' (' → logprob: -8.459732055664062
    7. '   ' → logprob: -8.459732055664062
    8. 'path' → logprob: -9.334732055664062
    9. '    ' → logprob: -10.084732055664062
    10. '1' → logprob: -10.084732055664062

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061100419610738754
    2. 'value' → logprob: -2.936100482940674
    3. ' ' → logprob: -5.811100482940674
    4. ' value' → logprob: -5.936100482940674
    5. '(' → logprob: -8.061100006103516
    6. '   ' → logprob: -8.936100006103516
    7. 'path' → logprob: -10.186100006103516
    8. '1' → logprob: -11.186100006103516
    9. ' (' → logprob: -11.311100006103516
    10. '  ' → logprob: -11.561100006103516

Token 109: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0008526319288648665
    2. ' **' → logprob: -7.500852584838867
    3. '*' → logprob: -8.625852584838867
    4. 'm' → logprob: -10.250852584838867
    5. '*i' → logprob: -10.500852584838867
    6. '*(' → logprob: -11.250852584838867
    7. 'i' → logprob: -11.250852584838867
    8. '(n' → logprob: -11.500852584838867
    9. '*m' → logprob: -12.000852584838867
    10. '```' → logprob: -12.125852584838867

Token 110: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16785265505313873
    2. '(i' → logprob: -2.0428526401519775
    3. 'i' → logprob: -4.417852878570557
    4. '(' → logprob: -5.042852878570557
    5. ' (' → logprob: -5.917852878570557
    6. '(m' → logprob: -6.167852878570557
    7. '((' → logprob: -6.542852878570557
    8. '   ' → logprob: -10.292852401733398
    9. ' i' → logprob: -10.542852401733398
    10. '```' → logprob: -11.417852401733398

Token 111: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1389998495578766
    2. 'i' → logprob: -2.1389999389648438
    3. '(i' → logprob: -5.138999938964844
    4. '(' → logprob: -6.763999938964844
    5. 'm' → logprob: -6.763999938964844
    6. '((' → logprob: -7.013999938964844
    7. ' (' → logprob: -7.013999938964844
    8. 'n' → logprob: -7.138999938964844
    9. '(m' → logprob: -7.138999938964844
    10. '   ' → logprob: -8.638999938964844

Token 112: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3645988702774048
    2. ' -' → logprob: -1.3645988702774048
    3. 'i' → logprob: -3.9895987510681152
    4. ' ' → logprob: -4.114598751068115
    5. ' i' → logprob: -4.864598751068115
    6. '   ' → logprob: -5.364598751068115
    7. '-i' → logprob: -6.989598751068115
    8. '  ' → logprob: -7.239598751068115
    9. '1' → logprob: -7.989598751068115
    10. '(i' → logprob: -8.489599227905273

Token 113: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06455997377634048
    2. 'i' → logprob: -2.8145599365234375
    3. ' ' → logprob: -6.9395599365234375
    4. '(i' → logprob: -7.8145599365234375
    5. '   ' → logprob: -7.9395599365234375
    6. ' i' → logprob: -8.189559936523438
    7. '(' → logprob: -8.314559936523438
    8. '-' → logprob: -8.814559936523438
    9. '1' → logprob: -9.814559936523438
    10. '  ' → logprob: -10.064559936523438

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04375620558857918
    2. 'i' → logprob: -3.1687562465667725
    3. '-' → logprob: -7.543756008148193
    4. '1' → logprob: -9.418756484985352
    5. '(' → logprob: -10.418756484985352
    6. '(i' → logprob: -10.418756484985352
    7. '   ' → logprob: -10.668756484985352
    8. ' ' → logprob: -10.793756484985352
    9. '3' → logprob: -11.418756484985352
    10. ' i' → logprob: -11.543756484985352

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20572185516357422
    2. '-' → logprob: -1.7057218551635742
    3. '-i' → logprob: -5.455721855163574
    4. ' ' → logprob: -10.955721855163574
    5. '   ' → logprob: -11.955721855163574
    6. 'i' → logprob: -13.330721855163574
    7. ' i' → logprob: -13.955721855163574
    8. '  ' → logprob: -14.830721855163574
    9. ')' → logprob: -15.455721855163574
    10. '_i' → logprob: -15.830721855163574

Token 116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003607317106798291
    2. ' i' → logprob: -5.628607273101807
    3. '   ' → logprob: -12.378607749938965
    4. ' ' → logprob: -13.753607749938965
    5. ')' → logprob: -14.003607749938965
    6. '	i' → logprob: -14.378607749938965
    7. '  ' → logprob: -15.628607749938965
    8. ')i' → logprob: -16.62860679626465
    9. '```' → logprob: -16.75360679626465
    10. '_i' → logprob: -17.25360679626465

Token 117: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.080617256462574
    2. '):' → logprob: -2.5806171894073486
    3. ' ):
' → logprob: -6.705617427825928
    4. ')' → logprob: -8.33061695098877
    5. ' ):' → logprob: -8.95561695098877
    6. '):
' → logprob: -9.45561695098877
    7. '):

' → logprob: -10.70561695098877
    8. '   ' → logprob: -10.83061695098877
    9. ' )' → logprob: -12.83061695098877
    10. ':' → logprob: -13.08061695098877

Token 118: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6151762008666992
    2. ':
' → logprob: -0.8651762008666992
    3. ' :
' → logprob: -3.990176200866699
    4. '       ' → logprob: -4.490176200866699
    5. '   ' → logprob: -5.490176200866699
    6. ' :' → logprob: -6.240176200866699
    7. '):
' → logprob: -6.990176200866699
    8. 's' → logprob: -7.615176200866699
    9. '):' → logprob: -8.1151762008667
    10. ' and' → logprob: -8.3651762008667

Token 119: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.08869852870702744
    2. 'path' → logprob: -3.588698625564575
    3. ' s' → logprob: -3.713698625564575
    4. '       ' → logprob: -3.963698625564575
    5. '   ' → logprob: -5.088698387145996
    6. ' path' → logprob: -5.463698387145996
    7. '           ' → logprob: -6.463698387145996
    8. '1' → logprob: -6.713698387145996
    9. ' ' → logprob: -7.588698387145996
    10. '```' → logprob: -10.213698387145996

Token 120: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0037218148354440928
    2. '-=' → logprob: -6.378721714019775
    3. '-' → logprob: -6.753721714019775
    4. ' ' → logprob: -8.253722190856934
    5. '    ' → logprob: -8.253722190856934
    6. ' -' → logprob: -8.378722190856934
    7. '        ' → logprob: -10.378722190856934
    8. ')' → logprob: -11.128722190856934
    9. '   ' → logprob: -11.253722190856934
    10. '>' → logprob: -11.878722190856934

Token 121: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6931482553482056
    2. ' ' → logprob: -0.6931482553482056
    3. ' (' → logprob: -14.818148612976074
    4. '(' → logprob: -15.068148612976074
    5. '   ' → logprob: -15.193148612976074
    6. '1' → logprob: -15.818148612976074
    7. '```' → logprob: -16.693147659301758
    8. '  ' → logprob: -17.443147659301758
    9. '    ' → logprob: -18.068147659301758
    10. 'pow' → logprob: -18.568147659301758

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '(' → logprob: -14.375262260437012
    4. '   ' → logprob: -16.125261306762695
    5. '```' → logprob: -16.625261306762695
    6. ' (' → logprob: -17.875261306762695
    7. '  ' → logprob: -18.375261306762695
    8. '`' → logprob: -18.625261306762695
    9. '1' → logprob: -19.000261306762695
    10. '۲' → logprob: -20.000261306762695

Token 123: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.575955331325531
    2. '**' → logprob: -0.825955331325531
    3. ' *' → logprob: -12.325955390930176
    4. '*' → logprob: -12.700955390930176
    5. ' ' → logprob: -12.825955390930176
    6. ' (' → logprob: -13.575955390930176
    7. '(n' → logprob: -13.700955390930176
    8. ' ' → logprob: -14.075955390930176
    9. ' ^' → logprob: -14.825955390930176
    10. '```' → logprob: -14.950955390930176

Token 124: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00450050039216876
    2. '(' → logprob: -5.754500389099121
    3. ' (' → logprob: -6.629500389099121
    4. 'n' → logprob: -14.879500389099121
    5. '((' → logprob: -15.254500389099121
    6. '(
' → logprob: -15.504500389099121
    7. '<|end|>' → logprob: -16.504501342773438
    8. ' ' → logprob: -16.754501342773438
    9. '(N' → logprob: -17.379501342773438
    10. '(nn' → logprob: -17.879501342773438

Token 125: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03376798704266548
    2. 'n' → logprob: -3.4087679386138916
    3. '(' → logprob: -9.658767700195312
    4. ' (' → logprob: -10.033767700195312
    5. ' n' → logprob: -11.283767700195312
    6. '(
' → logprob: -15.033767700195312
    7. '
' → logprob: -15.033767700195312
    8. '{' → logprob: -15.158767700195312
    9. '<n' → logprob: -15.158767700195312
    10. '	n' → logprob: -15.783767700195312

Token 126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22560232877731323
    2. ' -' → logprob: -1.600602388381958
    3. '2' → logprob: -8.725602149963379
    4. ' ' → logprob: -11.600602149963379
    5. '   ' → logprob: -11.975602149963379
    6. '1' → logprob: -12.350602149963379
    7. '(' → logprob: -13.350602149963379
    8. '       ' → logprob: -13.725602149963379
    9. '           ' → logprob: -13.725602149963379
    10. ' (' → logprob: -14.600602149963379

Token 127: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009949409868568182
    2. '1' → logprob: -7.00099515914917
    3. ' ' → logprob: -9.875994682312012
    4. 'i' → logprob: -10.750994682312012
    5. '(' → logprob: -12.250994682312012
    6. '(i' → logprob: -12.750994682312012
    7. '   ' → logprob: -13.375994682312012
    8. '-' → logprob: -14.250994682312012
    9. '3' → logprob: -15.125994682312012
    10. ' i' → logprob: -16.000995635986328

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010537689086049795
    2. '1' → logprob: -7.001053810119629
    3. ' ' → logprob: -9.501053810119629
    4. '(' → logprob: -10.251053810119629
    5. '(i' → logprob: -11.126053810119629
    6. 'i' → logprob: -11.251053810119629
    7. '-' → logprob: -13.251053810119629
    8. '   ' → logprob: -13.501053810119629
    9. ' (' → logprob: -14.876053810119629
    10. '(n' → logprob: -15.501053810119629

Token 129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5771725177764893
    2. '-' → logprob: -0.8271725177764893
    3. '-i' → logprob: -6.70217227935791
    4. ' ' → logprob: -13.07717227935791
    5. ')' → logprob: -13.70217227935791
    6. '   ' → logprob: -15.07717227935791
    7. '-
' → logprob: -15.57717227935791
    8. '‌' → logprob: -17.077173233032227
    9. ' ' → logprob: -17.202173233032227
    10. '  ' → logprob: -17.202173233032227

Token 130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013267839094623923
    2. ' i' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.501326560974121
    4. '       ' → logprob: -15.751326560974121
    5. '	i' → logprob: -16.001327514648438
    6. '_i' → logprob: -16.501327514648438
    7. ' ' → logprob: -16.626327514648438
    8. ')' → logprob: -16.876327514648438
    9. '(i' → logprob: -16.876327514648438
    10. '-i' → logprob: -17.751327514648438

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760100483894348
    2. ')
' → logprob: -0.8260100483894348
    3. '       ' → logprob: -10.826009750366211
    4. ')
' → logprob: -10.951009750366211
    5. '   ' → logprob: -11.076009750366211
    6. ' )
' → logprob: -11.951009750366211
    7. ')

' → logprob: -12.701009750366211
    8. ' )' → logprob: -12.701009750366211
    9. '):
' → logprob: -14.201009750366211
    10. '           ' → logprob: -14.451009750366211

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022531254217028618
    2. '   ' → logprob: -3.897531270980835
    3. ',' → logprob: -7.147531032562256
    4. '
' → logprob: -7.647531032562256
    5. '        
' → logprob: -8.022531509399414
    6. '```' → logprob: -9.147531509399414
    7. '     ' → logprob: -9.897531509399414
    8. '    
' → logprob: -10.022531509399414
    9. '           ' → logprob: -10.397531509399414
    10. ')' → logprob: -10.772531509399414

Token 133: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -7.016616291366518e-05
    2. ' path' → logprob: -9.750070571899414
    3. '       ' → logprob: -11.625070571899414
    4. '1' → logprob: -13.500070571899414
    5. '   ' → logprob: -13.875070571899414
    6. '```' → logprob: -15.750070571899414
    7. 'value' → logprob: -16.125070571899414
    8. '           ' → logprob: -16.250070571899414
    9. '	path' → logprob: -16.250070571899414
    10. '_path' → logprob: -16.875070571899414

Token 134: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -1.9361264946837764e-07
    2. '_Add' → logprob: -16.25
    3. 'Add' → logprob: -17.0
    4. 'add' → logprob: -17.375
    5. '_ad' → logprob: -17.625
    6. '_added' → logprob: -18.0
    7. '_ADD' → logprob: -19.375
    8. '_append' → logprob: -19.625
    9. '```' → logprob: -19.875
    10. '_fill' → logprob: -20.375

Token 135: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2890574336051941
    2. '_value' → logprob: -1.6640574932098389
    3. '[' → logprob: -2.789057493209839
    4. '[index' → logprob: -10.289057731628418
    5. '```' → logprob: -10.539057731628418
    6. '[n' → logprob: -10.914057731628418
    7. 'value' → logprob: -11.164057731628418
    8. '[value' → logprob: -11.289057731628418
    9. ' [' → logprob: -11.414057731628418
    10. '[j' → logprob: -11.789057731628418

Token 136: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8634775876998901
    2. '(i' → logprob: -0.8634775876998901
    3. '1' → logprob: -1.8634775876998901
    4. 'i' → logprob: -6.73847770690918
    5. '(n' → logprob: -8.23847770690918
    6. ' (' → logprob: -10.73847770690918
    7. '(m' → logprob: -13.36347770690918
    8. ' ' → logprob: -13.61347770690918
    9. '   ' → logprob: -13.61347770690918
    10. '{i' → logprob: -13.73847770690918

Token 137: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16050133109092712
    2. '1' → logprob: -2.41050124168396
    3. '(i' → logprob: -2.91050124168396
    4. '(' → logprob: -5.535501480102539
    5. ' i' → logprob: -9.285501480102539
    6. ' (' → logprob: -11.160501480102539
    7. ' ' → logprob: -12.035501480102539
    8. '{i' → logprob: -12.910501480102539
    9. '-i' → logprob: -13.785501480102539
    10. ')i' → logprob: -14.035501480102539

Token 138: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31594663858413696
    2. '+' → logprob: -1.3159465789794922
    3. ' +' → logprob: -6.065946578979492
    4. ')' → logprob: -8.565946578979492
    5. ' ' → logprob: -8.815946578979492
    6. ')-' → logprob: -12.065946578979492
    7. '2' → logprob: -12.190946578979492
    8. '-' → logprob: -12.440946578979492
    9. '   ' → logprob: -13.190946578979492
    10. '```' → logprob: -13.315946578979492

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.375014305114746
    3. '2' → logprob: -13.125014305114746
    4. '   ' → logprob: -14.875014305114746
    5. ')' → logprob: -15.000014305114746
    6. ')]' → logprob: -15.125014305114746
    7. '  ' → logprob: -16.500015258789062
    8. '```' → logprob: -17.625015258789062
    9. '１' → logprob: -17.812515258789062
    10. '
' → logprob: -17.937515258789062

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. '2' → logprob: -10.75003719329834
    3. ' ' → logprob: -11.25003719329834
    4. ')' → logprob: -14.25003719329834
    5. ')]' → logprob: -14.37503719329834
    6. '   ' → logprob: -15.75003719329834
    7. '```' → logprob: -16.187536239624023
    8. '
' → logprob: -16.187536239624023
    9. '0' → logprob: -16.437536239624023
    10. '3' → logprob: -16.500036239624023

Token 141: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07908950001001358
    2. ']' → logprob: -2.579089403152466
    3. ']]' → logprob: -8.829089164733887
    4. ' ]' → logprob: -10.329089164733887
    5. ')' → logprob: -12.079089164733887
    6. ']=' → logprob: -12.829089164733887
    7. '1' → logprob: -12.954089164733887
    8. '   ' → logprob: -13.079089164733887
    9. '])' → logprob: -13.079089164733887
    10. ' )' → logprob: -13.329089164733887

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003636892419308424
    2. ' =' → logprob: -5.628636837005615
    3. '+=' → logprob: -10.253637313842773
    4. ' +=' → logprob: -13.503637313842773
    5. '<|end|>' → logprob: -17.253637313842773
    6. '=

' → logprob: -17.378637313842773
    7. '＝' → logprob: -17.503637313842773
    8. '=True' → logprob: -17.753637313842773
    9. ')' → logprob: -17.753637313842773
    10. '.=' → logprob: -17.878637313842773

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028970264247618616
    2. '2' → logprob: -8.500289916992188
    3. '-' → logprob: -10.500289916992188
    4. ' ' → logprob: -10.500289916992188
    5. '0' → logprob: -11.750289916992188
    6. 's' → logprob: -12.250289916992188
    7. '   ' → logprob: -12.375289916992188
    8. 'value' → logprob: -13.062789916992188
    9. 'l' → logprob: -13.187789916992188
    10. '(' → logprob: -13.250289916992188

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003622793301474303
    2. '2' → logprob: -8.125362396240234
    3. '-' → logprob: -10.750362396240234
    4. '0' → logprob: -11.375362396240234
    5. ' ' → logprob: -11.500362396240234
    6. 'value' → logprob: -12.125362396240234
    7. 'l' → logprob: -12.375362396240234
    8. 's' → logprob: -12.750362396240234
    9. '   ' → logprob: -13.250362396240234
    10. '(' → logprob: -13.437862396240234

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.05981931462883949
    2. 'value' → logprob: -3.184819221496582
    3. ' path' → logprob: -4.309819221496582
    4. ' value' → logprob: -6.184819221496582
    5. '       ' → logprob: -7.184819221496582
    6. '   ' → logprob: -8.809819221496582
    7. '```' → logprob: -8.934819221496582
    8. '
' → logprob: -9.684819221496582
    9. ')' → logprob: -10.434819221496582
    10. '	path' → logprob: -11.434819221496582

Token 148: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -5.478889215737581e-05
    2. '_value' → logprob: -10.625054359436035
    3. '_' → logprob: -11.625054359436035
    4. 'Add' → logprob: -12.375054359436035
    5. '_append' → logprob: -12.750054359436035
    6. 'add' → logprob: -13.250054359436035
    7. '_continue' → logprob: -13.625054359436035
    8. '<|end|>' → logprob: -13.875054359436035
    9. '_Add' → logprob: -14.125054359436035
    10. '_write' → logprob: -14.125054359436035

Token 149: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.893480243277736e-05
    2. '[-' → logprob: -10.375039100646973
    3. '_Value' → logprob: -13.750039100646973
    4. '[' → logprob: -13.875039100646973
    5. 'value' → logprob: -13.875039100646973
    6. 'Value' → logprob: -14.000039100646973
    7. '_VALUE' → logprob: -14.125039100646973
    8. '_values' → logprob: -14.250039100646973
    9. '```' → logprob: -14.500039100646973
    10. '-value' → logprob: -14.625039100646973

Token 150: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0048295301385223866
    2. '[' → logprob: -5.379829406738281
    3. ' [' → logprob: -9.379829406738281
    4. ' [-' → logprob: -9.879829406738281
    5. '[i' → logprob: -10.129829406738281
    6. '=' → logprob: -11.629829406738281
    7. '[n' → logprob: -11.754829406738281
    8. '   ' → logprob: -12.504829406738281
    9. '[:-' → logprob: -12.629829406738281
    10. ' =' → logprob: -13.254829406738281

Token 151: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4304344356060028
    2. '(' → logprob: -1.0554344654083252
    3. '(n' → logprob: -6.680434226989746
    4. '1' → logprob: -7.805434226989746
    5. ' (' → logprob: -10.430434226989746
    6. '(I' → logprob: -11.680434226989746
    7. '(len' → logprob: -12.055434226989746
    8. '((' → logprob: -12.305434226989746
    9. '(ii' → logprob: -12.680434226989746
    10. 'i' → logprob: -12.805434226989746

Token 152: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07966605573892593
    2. 'i' → logprob: -2.5796661376953125
    3. '(' → logprob: -7.3296661376953125
    4. '1' → logprob: -9.454666137695312
    5. ' (' → logprob: -11.204666137695312
    6. ' i' → logprob: -11.204666137695312
    7. '{i' → logprob: -11.954666137695312
    8. '[i' → logprob: -13.454666137695312
    9. ')i' → logprob: -14.204666137695312
    10. ')' → logprob: -14.204666137695312

Token 153: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5237727165222168
    2. '+' → logprob: -0.8987727165222168
    3. '1' → logprob: -7.648772716522217
    4. ')]' → logprob: -9.023773193359375
    5. ')' → logprob: -10.398773193359375
    6. ' ' → logprob: -12.023773193359375
    7. '-' → logprob: -12.648773193359375
    8. ' -' → logprob: -12.898773193359375
    9. '+i' → logprob: -13.398773193359375
    10. ' )' → logprob: -13.398773193359375

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.825890159234405e-05
    2. ' ' → logprob: -9.625068664550781
    3. '2' → logprob: -14.375068664550781
    4. ')' → logprob: -14.750068664550781
    5. '   ' → logprob: -15.000068664550781
    6. '0' → logprob: -15.500068664550781
    7. '(' → logprob: -16.00006866455078
    8. 'i' → logprob: -16.37506866455078
    9. '<|end|>' → logprob: -16.37506866455078
    10. '```' → logprob: -16.75006866455078

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. ' ' → logprob: -9.625072479248047
    3. '2' → logprob: -12.625072479248047
    4. '0' → logprob: -13.875072479248047
    5. 'i' → logprob: -14.375072479248047
    6. ')' → logprob: -14.375072479248047
    7. '   ' → logprob: -14.750072479248047
    8. '(' → logprob: -15.187572479248047
    9. '(i' → logprob: -15.625072479248047
    10. '-' → logprob: -17.312572479248047

Token 156: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0488780252635479
    2. ')]' → logprob: -3.0488779544830322
    3. ']=' → logprob: -8.423877716064453
    4. ')' → logprob: -9.798877716064453
    5. '`]' → logprob: -12.423877716064453
    6. '()]' → logprob: -12.548877716064453
    7. ' ]' → logprob: -12.923877716064453
    8. ']]' → logprob: -13.423877716064453
    9. '])' → logprob: -14.173877716064453
    10. ']
' → logprob: -14.173877716064453

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006743439007550478
    2. ' =' → logprob: -5.006743431091309
    3. '+=' → logprob: -10.506743431091309
    4. ' +=' → logprob: -14.256743431091309
    5. '=value' → logprob: -17.381744384765625
    6. '=s' → logprob: -17.881744384765625
    7. ')' → logprob: -17.881744384765625
    8. ' ' → logprob: -18.006744384765625
    9. '.=' → logprob: -18.131744384765625
    10. '=}' → logprob: -18.381744384765625

Token 158: ' value' (ID: 1432)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3371545970439911
    2. 'value' → logprob: -1.8371546268463135
    3. ' value' → logprob: -2.7121546268463135
    4. ' ' → logprob: -2.8371546268463135
    5. '(' → logprob: -7.337154388427734
    6. ' (' → logprob: -7.462154388427734
    7. '1' → logprob: -8.462154388427734
    8. '   ' → logprob: -8.712154388427734
    9. '(value' → logprob: -8.712154388427734
    10. '    ' → logprob: -10.712154388427734

Token 159: '
' (ID: 198)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25238358974456787
    2. '//' → logprob: -2.0023837089538574
    3. '>>' → logprob: -3.2523837089538574
    4. '<|end|>' → logprob: -4.252383708953857
    5. '   ' → logprob: -4.377383708953857
    6. ' >>=' → logprob: -5.627383708953857
    7. '<|end|>' → logprob: -5.752383708953857
    8. '
' → logprob: -6.002383708953857
    9. '>>>' → logprob: -6.127383708953857
    10. ' ' → logprob: -6.377383708953857

Token 160: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9208210110664368
    2. '       ' → logprob: -1.170820951461792
    3. 'value' → logprob: -2.170820951461792
    4. ' value' → logprob: -2.545820951461792
    5. ' ' → logprob: -2.670820951461792
    6. '+' → logprob: -4.795821189880371
    7. '<|end|>' → logprob: -5.045821189880371
    8. ')' → logprob: -6.045821189880371
    9. ' 
' → logprob: -6.295821189880371
    10. '  ' → logprob: -6.670821189880371

Token 161: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.014733130112290382
    2. ' value' → logprob: -4.51473331451416
    3. '+' → logprob: -6.26473331451416
    4. '
' → logprob: -7.63973331451416
    5. '+=' → logprob: -7.88973331451416
    6. '       ' → logprob: -8.13973331451416
    7. ' +=' → logprob: -8.63973331451416
    8. '   ' → logprob: -8.63973331451416
    9. '+
' → logprob: -10.01473331451416
    10. '*' → logprob: -10.51473331451416

Token 162: ' +=' (ID: 2757)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.9504091143608093
    2. '=' → logprob: -1.200409173965454
    3. ' *=' → logprob: -2.575409173965454
    4. ' //' → logprob: -2.575409173965454
    5. '//=' → logprob: -2.700409173965454
    6. '+=' → logprob: -2.700409173965454
    7. ' +=' → logprob: -4.450408935546875
    8. '//' → logprob: -4.825408935546875
    9. ' =' → logprob: -5.950408935546875
    10. '*' → logprob: -6.200408935546875

Token 163: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009825033135712147
    2. ' ' → logprob: -4.759825229644775
    3. '1' → logprob: -7.009825229644775
    4. '0' → logprob: -8.509824752807617
    5. 'value' → logprob: -10.009824752807617
    6. 'path' → logprob: -10.759824752807617
    7. '(' → logprob: -10.884824752807617
    8. ' value' → logprob: -12.509824752807617
    9. '  ' → logprob: -12.634824752807617
    10. '   ' → logprob: -13.009824752807617

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019941316917538643
    2. '1' → logprob: -4.144941329956055
    3. ' ' → logprob: -6.394941329956055
    4. 'value' → logprob: -6.769941329956055
    5. 'path' → logprob: -7.394941329956055
    6. '0' → logprob: -8.144941329956055
    7. '(' → logprob: -9.019941329956055
    8. ' value' → logprob: -10.894941329956055
    9. 's' → logprob: -11.769941329956055
    10. ' (' → logprob: -12.269941329956055

Token 165: ' **' (ID: 6240)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8945358991622925
    2. '<|end|>' → logprob: -0.8945358991622925
    3. ' **' → logprob: -2.769536018371582
    4. '1' → logprob: -3.894536018371582
    5. ' )' → logprob: -4.019536018371582
    6. ' (' → logprob: -4.144536018371582
    7. '+' → logprob: -4.519536018371582
    8. '0' → logprob: -4.519536018371582
    9. '**' → logprob: -5.269536018371582
    10. ' +' → logprob: -5.394536018371582

Token 166: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010823077522218227
    2. ' (' → logprob: -4.6358232498168945
    3. '(' → logprob: -6.8858232498168945
    4. 'n' → logprob: -10.260823249816895
    5. '((' → logprob: -12.385823249816895
    6. ' n' → logprob: -13.760823249816895
    7. '[n' → logprob: -14.010823249816895
    8. '(m' → logprob: -14.260823249816895
    9. ' ' → logprob: -14.885823249816895
    10. '(
' → logprob: -14.885823249816895

Token 167: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09091576933860779
    2. '(n' → logprob: -2.4659156799316406
    3. ' n' → logprob: -6.465915679931641
    4. ' (' → logprob: -8.09091567993164
    5. '(' → logprob: -9.34091567993164
    6. '	n' → logprob: -12.59091567993164
    7. 'i' → logprob: -12.59091567993164
    8. 'm' → logprob: -12.71591567993164
    9. '{' → logprob: -12.84091567993164
    10. '[n' → logprob: -12.96591567993164

Token 168: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687369227409363
    2. ' -' → logprob: -1.136873722076416
    3. '-(' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.636873245239258
    5. '1' → logprob: -14.636873245239258
    6. ' -(' → logprob: -15.136873245239258
    7. '   ' → logprob: -15.261873245239258
    8. '2' → logprob: -15.511873245239258
    9. '(' → logprob: -17.386873245239258
    10. '-i' → logprob: -17.511873245239258

Token 169: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010579373920336366
    2. ' ' → logprob: -7.501058101654053
    3. '1' → logprob: -7.626058101654053
    4. '   ' → logprob: -11.876057624816895
    5. 'i' → logprob: -12.251057624816895
    6. '-' → logprob: -13.126057624816895
    7. '  ' → logprob: -13.376057624816895
    8. '3' → logprob: -14.626057624816895
    9. '
' → logprob: -15.188557624816895
    10. 'm' → logprob: -15.376057624816895

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012830912601202726
    2. '1' → logprob: -6.751283168792725
    3. 'i' → logprob: -9.501282691955566
    4. ' ' → logprob: -10.501282691955566
    5. '3' → logprob: -12.126282691955566
    6. '   ' → logprob: -12.876282691955566
    7. '-' → logprob: -13.751282691955566
    8. 'm' → logprob: -14.938782691955566
    9. '  ' → logprob: -15.188782691955566
    10. '(i' → logprob: -15.501282691955566

Token 171: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693282961845398
    2. '-' → logprob: -2.1269328594207764
    3. '-i' → logprob: -12.376933097839355
    4. ' ' → logprob: -15.251933097839355
    5. '<|end|>' → logprob: -16.00193214416504
    6. ')' → logprob: -16.37693214416504
    7. ' -(' → logprob: -17.50193214416504
    8. '   ' → logprob: -17.75193214416504
    9. '-(' → logprob: -17.75193214416504
    10. '−' → logprob: -18.00193214416504

Token 172: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03830517828464508
    2. ' i' → logprob: -3.2883052825927734
    3. '-i' → logprob: -8.663305282592773
    4. ' -' → logprob: -9.913305282592773
    5. '1' → logprob: -10.788305282592773
    6. '-' → logprob: -11.788305282592773
    7. '	i' → logprob: -12.288305282592773
    8. ' ' → logprob: -12.413305282592773
    9. ' (' → logprob: -13.913305282592773
    10. '_i' → logprob: -13.913305282592773

Token 173: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.913265239447355e-05
    2. ' )' → logprob: -9.375099182128906
    3. ')
' → logprob: -11.250099182128906
    4. '<|end|>' → logprob: -15.500099182128906
    5. '))' → logprob: -15.625099182128906
    6. '   ' → logprob: -15.625099182128906
    7. ')}' → logprob: -16.250099182128906
    8. ')#' → logprob: -16.500099182128906
    9. ')}}' → logprob: -16.875099182128906
    10. ')

' → logprob: -16.875099182128906

Token 174: 'print' (ID: 1598)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14470233023166656
    2. '<|end|>' → logprob: -2.894702434539795
    3. ')' → logprob: -3.019702434539795
    4. ' )' → logprob: -5.394702434539795
    5. '   ' → logprob: -5.519702434539795
    6. '[' → logprob: -5.644702434539795
    7. '0' → logprob: -5.769702434539795
    8. '```' → logprob: -6.019702434539795
    9. ' ]' → logprob: -6.644702434539795
    10. ' 
' → logprob: -6.769702434539795

Token 175: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3026919662952423
    2. '(path' → logprob: -1.42769193649292
    3. '('' → logprob: -4.67769193649292
    4. '()' → logprob: -5.92769193649292
    5. '(m' → logprob: -6.05269193649292
    6. '(s' → logprob: -6.42769193649292
    7. '("' → logprob: -6.80269193649292
    8. '(sum' → logprob: -6.92769193649292
    9. '(*' → logprob: -7.17769193649292
    10. '(n' → logprob: -7.42769193649292

Token 176: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05056435614824295
    2. ',' → logprob: -3.5505642890930176
    3. '-' → logprob: -4.425564289093018
    4. '*' → logprob: -5.925564289093018
    5. '+' → logprob: -6.175564289093018
    6. ' -' → logprob: -6.425564289093018
    7. ' )' → logprob: -6.675564289093018
    8. ' +' → logprob: -8.300564765930176
    9. ' *' → logprob: -9.050564765930176
    10. ',)' → logprob: -9.425564765930176

Token 177: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002582081826403737
    2. '*m' → logprob: -7.00258207321167
    3. 'n' → logprob: -7.87758207321167
    4. ' m' → logprob: -8.002582550048828
    5. '2' → logprob: -8.377582550048828
    6. '*' → logprob: -8.627582550048828
    7. 'end' → logprob: -9.377582550048828
    8. 'path' → logprob: -9.627582550048828
    9. 'len' → logprob: -10.002582550048828
    10. ')' → logprob: -10.127582550048828

Token 178: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023680871352553368
    2. ',' → logprob: -3.7736809253692627
    3. ')
' → logprob: -8.773680686950684
    4. ' )' → logprob: -9.148680686950684
    5. ',end' → logprob: -9.773680686950684
    6. ',)' → logprob: -10.023680686950684
    7. '+' → logprob: -10.523680686950684
    8. '*' → logprob: -10.898680686950684
    9. '))' → logprob: -12.523680686950684
    10. ' ,' → logprob: -12.773680686950684

Token 179: ' sum' (ID: 4215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05949273705482483
    2. 'path' → logprob: -3.809492826461792
    3. 'n' → logprob: -4.059492588043213
    4. 'sum' → logprob: -4.559492588043213
    5. ' ' → logprob: -6.434492588043213
    6. ' n' → logprob: -6.809492588043213
    7. ' path' → logprob: -6.934492588043213
    8. '(n' → logprob: -7.184492588043213
    9. ' sum' → logprob: -7.309492588043213
    10. '(' → logprob: -7.434492588043213

Token 180: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0006293982733041048
    2. '(' → logprob: -7.375629425048828
    3. 'path' → logprob: -13.500629425048828
    4. '(value' → logprob: -14.250629425048828
    5. '(
' → logprob: -15.625629425048828
    6. '(s' → logprob: -15.750629425048828
    7. ' (' → logprob: -16.375629425048828
    8. '(_' → logprob: -16.750629425048828
    9. '(`' → logprob: -16.875629425048828
    10. ')' → logprob: -17.000629425048828

Token 181: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -3.128163257315464e-07
    2. '_value' → logprob: -15.625
    3. 'add' → logprob: -16.875
    4. ')_' → logprob: -17.5
    5. ')' → logprob: -17.875
    6. '_Add' → logprob: -18.0
    7. '_added' → logprob: -18.5
    8. '_' → logprob: -18.5
    9. '_ad' → logprob: -19.375
    10. 'Add' → logprob: -19.375

Token 182: '))
' (ID: 2210)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0017391976434737444
    2. '))' → logprob: -7.251739025115967
    3. ')' → logprob: -7.376739025115967
    4. '_path' → logprob: -9.126739501953125
    5. 'value' → logprob: -9.251739501953125
    6. ',' → logprob: -9.626739501953125
    7. '_,' → logprob: -10.501739501953125
    8. '_' → logprob: -10.751739501953125
    9. '),' → logprob: -10.751739501953125
    10. ')+' → logprob: -11.001739501953125

Token 183: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011591781862080097
    2. ' _' → logprob: -4.886591911315918
    3. 'i' → logprob: -5.761591911315918
    4. '_' → logprob: -7.386591911315918
    5. ' j' → logprob: -8.886591911315918
    6. ' ' → logprob: -10.011591911315918
    7. '_i' → logprob: -11.011591911315918
    8. ' ' → logprob: -11.761591911315918
    9. 'j' → logprob: -13.386591911315918
    10. ' x' → logprob: -14.511591911315918

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03386456519365311
    2. 'in' → logprob: -3.4088644981384277
    3. ' ' → logprob: -9.033864974975586
    4. ',' → logprob: -10.658864974975586
    5. '_' → logprob: -11.158864974975586
    6. '(' → logprob: -11.158864974975586
    7. '	in' → logprob: -11.408864974975586
    8. 'range' → logprob: -11.908864974975586
    9. 'n' → logprob: -12.408864974975586
    10. ' range' → logprob: -12.658864974975586

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17977619171142578
    2. ' range' → logprob: -1.8047761917114258
    3. ' ' → logprob: -11.179776191711426
    4. '   ' → logprob: -12.179776191711426
    5. '  ' → logprob: -12.429776191711426
    6. '(range' → logprob: -12.679776191711426
    7. 'path' → logprob: -13.179776191711426
    8. '	range' → logprob: -13.679776191711426
    9. 'r' → logprob: -14.554776191711426
    10. 'rang' → logprob: -14.554776191711426

Token 187: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.16352739930152893
    2. '(n' → logprob: -1.9135273694992065
    3. '(' → logprob: -5.913527488708496
    4. 'm' → logprob: -8.038527488708496
    5. '(len' → logprob: -8.538527488708496
    6. 'n' → logprob: -9.788527488708496
    7. '((' → logprob: -11.663527488708496
    8. '1' → logprob: -12.413527488708496
    9. '   ' → logprob: -13.538527488708496
    10. 'len' → logprob: -14.038527488708496

Token 188: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48298612236976624
    2. ' -' → logprob: -0.9829860925674438
    3. '):' → logprob: -5.232985973358154
    4. '):
' → logprob: -5.857985973358154
    5. '   ' → logprob: -7.732985973358154
    6. '1' → logprob: -9.482986450195312
    7. ')' → logprob: -9.482986450195312
    8. ' ' → logprob: -10.482986450195312
    9. '()-' → logprob: -11.232986450195312
    10. '):

' → logprob: -11.482986450195312

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004166105354670435
    2. '2' → logprob: -8.00041675567627
    3. ' ' → logprob: -9.50041675567627
    4. '   ' → logprob: -12.75041675567627
    5. '-' → logprob: -13.37541675567627
    6. '3' → logprob: -14.62541675567627
    7. '```' → logprob: -15.25041675567627
    8. '0' → logprob: -15.68791675567627
    9. '           ' → logprob: -15.75041675567627
    10. '       ' → logprob: -16.000415802001953

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009331366163678467
    2. '2' → logprob: -7.0009331703186035
    3. ' ' → logprob: -11.125932693481445
    4. '   ' → logprob: -12.625932693481445
    5. '3' → logprob: -13.750932693481445
    6. 'm' → logprob: -14.063432693481445
    7. '-' → logprob: -14.688432693481445
    8. '```' → logprob: -15.250932693481445
    9. ')' → logprob: -15.563432693481445
    10. '0' → logprob: -15.750932693481445

Token 191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1814248114824295
    2. '):' → logprob: -1.806424856185913
    3. '   ' → logprob: -7.681424617767334
    4. '+' → logprob: -8.056425094604492
    5. ')' → logprob: -8.181425094604492
    6. ':' → logprob: -8.431425094604492
    7. ' ):
' → logprob: -8.681425094604492
    8. '):
' → logprob: -9.306425094604492
    9. ' ):' → logprob: -9.806425094604492
    10. ':
' → logprob: -10.431425094604492

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023750975378789008
    2. ' if' → logprob: -9.000237464904785
    3. 'if' → logprob: -9.250237464904785
    4. 'print' → logprob: -11.625237464904785
    5. '	if' → logprob: -12.000237464904785
    6. '       ' → logprob: -13.750237464904785
    7. '   ' → logprob: -14.625237464904785
    8. ' ' → logprob: -15.250237464904785
    9. ' print' → logprob: -15.250237464904785
    10. '	print' → logprob: -15.500237464904785

Token 193: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9621181488037109
    2. 'if' → logprob: -1.587118148803711
    3. 'print' (adapté à ' print') → logprob: -1.587118148803711
    4. ' if' → logprob: -1.712118148803711
    5. ' print' → logprob: -3.587118148803711
    6. ' ' → logprob: -8.587118148803711
    7. 'x' → logprob: -8.712118148803711
    8. ' x' → logprob: -8.962118148803711
    9. 'a' → logprob: -9.462118148803711
    10. 'u' → logprob: -10.712118148803711

Token 194: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10333268344402313
    2. '1' → logprob: -3.603332757949829
    3. '(i' → logprob: -3.728332757949829
    4. 'path' → logprob: -3.853332757949829
    5. '0' → logprob: -4.22833251953125
    6. '2' → logprob: -5.47833251953125
    7. '(' → logprob: -5.85333251953125
    8. 'value' → logprob: -5.85333251953125
    9. '(path' → logprob: -8.22833251953125
    10. 'n' → logprob: -8.47833251953125

Token 195: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.608643114566803
    2. ' +' → logprob: -0.858643114566803
    3. ',' → logprob: -3.483643054962158
    4. ' ,' → logprob: -7.483643054962158
    5. '   ' → logprob: -7.858643054962158
    6. ' *' → logprob: -8.858643531799316
    7. ')' → logprob: -8.858643531799316
    8. '*' → logprob: -9.358643531799316
    9. ' ' → logprob: -10.733643531799316
    10. ' if' → logprob: -10.733643531799316

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041355108842253685
    2. '2' → logprob: -5.879135608673096
    3. ' ' → logprob: -6.629135608673096
    4. '   ' → logprob: -12.379135131835938
    5. '3' → logprob: -12.879135131835938
    6. '  ' → logprob: -14.879135131835938
    7. '(' → logprob: -15.629135131835938
    8. '+' → logprob: -15.754135131835938
    9. ',' → logprob: -15.816635131835938
    10. '0' → logprob: -15.941635131835938

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00600961409509182
    2. '2' → logprob: -5.131009578704834
    3. ' ' → logprob: -9.506010055541992
    4. '3' → logprob: -12.506010055541992
    5. '   ' → logprob: -13.506010055541992
    6. '0' → logprob: -14.506010055541992
    7. '  ' → logprob: -15.631010055541992
    8. '(' → logprob: -15.881010055541992
    9. '4' → logprob: -16.193510055541992
    10. '+' → logprob: -16.631010055541992

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0061429147608578205
    2. ' ,' → logprob: -6.256143093109131
    3. ',end' → logprob: -6.756143093109131
    4. '   ' → logprob: -6.881143093109131
    5. '+' → logprob: -7.131143093109131
    6. ' if' → logprob: -7.881143093109131
    7. 'if' → logprob: -8.006142616271973
    8. ' +' → logprob: -8.381142616271973
    9. ',i' → logprob: -9.256142616271973
    10. '+i' → logprob: -10.506142616271973

Token 199: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010967293754220009
    2. ' i' → logprob: -4.635967254638672
    3. '   ' → logprob: -7.510967254638672
    4. 'n' → logprob: -8.885967254638672
    5. '(i' → logprob: -9.135967254638672
    6. 'm' → logprob: -9.260967254638672
    7. 'path' → logprob: -9.385967254638672
    8. ' ' → logprob: -9.885967254638672
    9. '  ' → logprob: -10.010967254638672
    10. '2' → logprob: -10.635967254638672

Token 200: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931707859039307
    2. ' +' → logprob: -0.6931707859039307
    3. ' ' → logprob: -11.693170547485352
    4. ' +
' → logprob: -12.318170547485352
    5. '1' → logprob: -12.443170547485352
    6. '2' → logprob: -13.318170547485352
    7. '<|end|>' → logprob: -13.568170547485352
    8. '+
' → logprob: -14.318170547485352
    9. '   ' → logprob: -14.568170547485352
    10. ')' → logprob: -14.568170547485352

Token 201: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032048076391220093
    2. ' ' → logprob: -5.753204822540283
    3. '1' → logprob: -11.003204345703125
    4. '+' → logprob: -12.128204345703125
    5. '3' → logprob: -13.003204345703125
    6. '  ' → logprob: -13.503204345703125
    7. '   ' → logprob: -13.878204345703125
    8. ' +' → logprob: -15.190704345703125
    9. 's' → logprob: -17.065704345703125
    10. '0' → logprob: -17.253204345703125

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005451689939945936
    2. ' ' → logprob: -7.625545024871826
    3. '1' → logprob: -10.375545501708984
    4. '3' → logprob: -10.875545501708984
    5. '+' → logprob: -12.750545501708984
    6. '  ' → logprob: -13.125545501708984
    7. '   ' → logprob: -13.375545501708984
    8. '0' → logprob: -16.438045501708984
    9. ' +' → logprob: -16.500545501708984
    10. '    ' → logprob: -16.688045501708984

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05717622861266136
    2. ' ,' → logprob: -2.932176113128662
    3. ')' → logprob: -7.182176113128662
    4. ' +' → logprob: -7.307176113128662
    5. '+' → logprob: -8.05717658996582
    6. ',end' → logprob: -8.80717658996582
    7. ' if' → logprob: -9.05717658996582
    8. ' ' → logprob: -9.80717658996582
    9. ' )' → logprob: -9.93217658996582
    10. '0' → logprob: -10.05717658996582

Token 204: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7976874709129333
    2. '1' → logprob: -1.5476875305175781
    3. 'path' → logprob: -1.5476875305175781
    4. 'value' → logprob: -2.547687530517578
    5. ' ' → logprob: -4.172687530517578
    6. 'i' → logprob: -4.672687530517578
    7. 'm' → logprob: -4.797687530517578
    8. ' value' → logprob: -5.547687530517578
    9. '   ' → logprob: -6.422687530517578
    10. ' i' → logprob: -6.797687530517578

Token 205: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.565754771232605
    2. '2' → logprob: -1.690754771232605
    3. 'path' → logprob: -1.815754771232605
    4. 'value' → logprob: -2.5657548904418945
    5. 'm' → logprob: -5.5657548904418945
    6. 'i' → logprob: -6.6907548904418945
    7. '0' → logprob: -7.4407548904418945
    8. ' ' → logprob: -7.5657548904418945
    9. 'str' → logprob: -7.8157548904418945
    10. '(' → logprob: -8.690754890441895

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008011689060367644
    2. ' )' → logprob: -7.250801086425781
    3. ')
' → logprob: -9.500801086425781
    4. ',' → logprob: -11.750801086425781
    5. '   ' → logprob: -12.750801086425781
    6. ' if' → logprob: -13.500801086425781
    7. ',)' → logprob: -14.125801086425781
    8. '')' → logprob: -14.375801086425781
    9. 'if' → logprob: -14.625801086425781
    10. '))' → logprob: -14.875801086425781

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07550874352455139
    2. '<|end|>' → logprob: -2.9505088329315186
    3. ' if' → logprob: -4.0755085945129395
    4. 'if' → logprob: -6.8255085945129395
    5. ' for' → logprob: -6.9505085945129395
    6. 'for' → logprob: -7.3255085945129395
    7. '    
' → logprob: -7.8255085945129395
    8. '```' → logprob: -9.575509071350098
    9. '
' → logprob: -9.950509071350098
    10. '0' → logprob: -10.075509071350098

Token 208: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03773468732833862
    2. 'if' → logprob: -3.4127347469329834
    3. ' if' → logprob: -5.537734508514404
    4. 'print' (adapté à ' print') → logprob: -9.162734985351562
    5. ' ' → logprob: -11.412734985351562
    6. '+' → logprob: -11.787734985351562
    7. '	if' → logprob: -12.162734985351562
    8. '  ' → logprob: -12.912734985351562
    9. '       ' → logprob: -13.412734985351562
    10. '    ' → logprob: -13.537734985351562

Token 209: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009643423254601657
    2. 'i' → logprob: -7.125964164733887
    3. '(' → logprob: -8.875964164733887
    4. 'path' → logprob: -12.000964164733887
    5. '(path' → logprob: -12.625964164733887
    6. '((' → logprob: -12.875964164733887
    7. ' i' → logprob: -13.500964164733887
    8. '()' → logprob: -13.500964164733887
    9. '1' → logprob: -13.625964164733887
    10. '('' → logprob: -13.750964164733887

Token 210: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602502167224884
    2. '+' → logprob: -1.910250186920166
    3. ',' → logprob: -10.785250663757324
    4. ' ,' → logprob: -12.910250663757324
    5. '1' → logprob: -14.285250663757324
    6. '+,' → logprob: -14.660250663757324
    7. ' ' → logprob: -14.785250663757324
    8. ' +
' → logprob: -14.910250663757324
    9. 's' → logprob: -15.285250663757324
    10. ')' → logprob: -15.660250663757324

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006002153968438506
    2. ' ' → logprob: -7.625600337982178
    3. '2' → logprob: -9.37559986114502
    4. '0' → logprob: -10.87559986114502
    5. 'path' → logprob: -13.12559986114502
    6. '   ' → logprob: -14.50059986114502
    7. 'm' → logprob: -14.50059986114502
    8. '3' → logprob: -14.62559986114502
    9. '+' → logprob: -14.68809986114502
    10. 'i' → logprob: -14.75059986114502

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02061709761619568
    2. '2' → logprob: -3.8956170082092285
    3. ' ' → logprob: -9.520617485046387
    4. 'm' → logprob: -15.145617485046387
    5. '   ' → logprob: -15.270617485046387
    6. '  ' → logprob: -15.708117485046387
    7. '+' → logprob: -15.833117485046387
    8. '3' → logprob: -15.833117485046387
    9. '0' → logprob: -15.895617485046387
    10. 'i' → logprob: -16.02061653137207

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010170908644795418
    2. ' ,' → logprob: -7.001017093658447
    3. ',i' → logprob: -9.876016616821289
    4. '+' → logprob: -10.126016616821289
    5. ',
' → logprob: -12.251016616821289
    6. ' +' → logprob: -13.126016616821289
    7. '+,' → logprob: -13.126016616821289
    8. 'i' → logprob: -13.376016616821289
    9. '   ' → logprob: -13.501016616821289
    10. '(i' → logprob: -14.626016616821289

Token 214: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01270611584186554
    2. ' i' → logprob: -4.387706279754639
    3. '   ' → logprob: -8.88770580291748
    4. ' ' → logprob: -10.01270580291748
    5. 'n' → logprob: -12.01270580291748
    6. '  ' → logprob: -12.63770580291748
    7. '    ' → logprob: -13.63770580291748
    8. '     ' → logprob: -14.51270580291748
    9. ' n' → logprob: -14.51270580291748
    10. '2' → logprob: -14.76270580291748

Token 215: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06736249476671219
    2. ' +' → logprob: -2.9423625469207764
    3. '2' → logprob: -4.442362308502197
    4. ' ' → logprob: -7.942362308502197
    5. ',' → logprob: -8.442362785339355
    6. ' ,' → logprob: -10.942362785339355
    7. '```' → logprob: -10.942362785339355
    8. '  ' → logprob: -12.317362785339355
    9. '+,' → logprob: -12.442362785339355
    10. '   ' → logprob: -12.567362785339355

Token 216: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008203497272916138
    2. ' ' → logprob: -7.125820159912109
    3. '1' → logprob: -11.62582015991211
    4. '3' → logprob: -12.50082015991211
    5. '```' → logprob: -13.62582015991211
    6. '   ' → logprob: -14.87582015991211
    7. '
' → logprob: -14.87582015991211
    8. '  ' → logprob: -15.06332015991211
    9. '+' → logprob: -15.50082015991211
    10. '``' → logprob: -16.25082015991211

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.875032424926758
    3. '3' → logprob: -12.125032424926758
    4. '1' → logprob: -12.375032424926758
    5. '+' → logprob: -13.000032424926758
    6. '```' → logprob: -14.437532424926758
    7. '
' → logprob: -15.750032424926758
    8. 'm' → logprob: -16.437532424926758
    9. '  ' → logprob: -16.750032424926758
    10. '   ' → logprob: -17.250032424926758

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036563649773597717
    2. ' ,' → logprob: -5.628656387329102
    3. '1' → logprob: -10.378656387329102
    4. ')' → logprob: -12.503656387329102
    5. '2' → logprob: -12.753656387329102
    6. ' ' → logprob: -12.753656387329102
    7. '',' → logprob: -12.753656387329102
    8. '   ' → logprob: -12.878656387329102
    9. '0' → logprob: -13.503656387329102
    10. '`,' → logprob: -13.628656387329102

Token 219: ' ' (ID: 220)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.14736555516719818
    2. '2' → logprob: -2.2723655700683594
    3. ' path' → logprob: -4.397365570068359
    4. 'value' → logprob: -4.522365570068359
    5. '1' → logprob: -5.522365570068359
    6. ' ' → logprob: -5.897365570068359
    7. '(path' → logprob: -6.772365570068359
    8. ' value' → logprob: -7.022365570068359
    9. '10' → logprob: -7.147365570068359
    10. '(' → logprob: -7.397365570068359

Token 220: '2' (ID: 17)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8847340941429138
    2. 'value' → logprob: -1.2597341537475586
    3. '1' → logprob: -1.6347341537475586
    4. '2' → logprob: -2.3847341537475586
    5. '(' → logprob: -5.134734153747559
    6. '(path' → logprob: -6.134734153747559
    7. 'pow' → logprob: -6.259734153747559
    8. ' value' → logprob: -6.509734153747559
    9. '(value' → logprob: -6.759734153747559
    10. ' ' → logprob: -7.134734153747559

Token 221: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11227115988731384
    2. '0' → logprob: -2.9872710704803467
    3. '**' → logprob: -3.2372710704803467
    4. ' )' → logprob: -4.487271308898926
    5. ' **' → logprob: -6.112271308898926
    6. ' ' → logprob: -6.612271308898926
    7. ')**' → logprob: -7.612271308898926
    8. ')
' → logprob: -7.862271308898926
    9. '*' → logprob: -8.362271308898926
    10. '^' → logprob: -9.112271308898926

Token 222: ' i' (ID: 575)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.23995238542556763
    2. '(i' → logprob: -1.7399523258209229
    3. '(' → logprob: -3.489952325820923
    4. 'i' → logprob: -4.989952564239502
    5. ' (' → logprob: -8.114952087402344
    6. '(m' → logprob: -8.864952087402344
    7. '((' → logprob: -10.739952087402344
    8. '(N' → logprob: -10.989952087402344
    9. ' i' → logprob: -12.864952087402344
    10. '{i' → logprob: -12.989952087402344

Token 223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.250006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '))' → logprob: -15.500006675720215
    6. '')' → logprob: -17.1250057220459
    7. ')}' → logprob: -17.1250057220459
    8. '),' → logprob: -17.2500057220459
    9. ')`' → logprob: -17.5000057220459
    10. ')")' → logprob: -17.5000057220459

Token 224: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003523813793435693
    2. '```' → logprob: -6.128523826599121
    3. 'if' → logprob: -7.003523826599121
    4. '   ' → logprob: -8.628523826599121
    5. 'print' → logprob: -9.503523826599121
    6. 'i' → logprob: -10.003523826599121
    7. ' for' → logprob: -10.128523826599121
    8. ')' → logprob: -10.378523826599121
    9. '<|end|>' → logprob: -10.628523826599121
    10. '[' → logprob: -11.378523826599121

Token 225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4756176471710205
    2. ' i' → logprob: -0.9756176471710205
    3. '_' → logprob: -6.975617408752441
    4. 'j' → logprob: -8.725617408752441
    5. ' j' → logprob: -8.850617408752441
    6. ' _' → logprob: -9.225617408752441
    7. '_i' → logprob: -9.475617408752441
    8. ' ' → logprob: -9.600617408752441
    9. ' path' → logprob: -11.725617408752441
    10. 'path' → logprob: -12.100617408752441

Token 226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1404072493314743
    2. 'in' → logprob: -2.6404073238372803
    3. ' ' → logprob: -3.0154073238372803
    4. ' range' → logprob: -5.265407085418701
    5. '(' → logprob: -6.390407085418701
    6. ' (' → logprob: -6.515407085418701
    7. '  ' → logprob: -7.515407085418701
    8. '(n' → logprob: -7.515407085418701
    9. 'range' → logprob: -7.890407085418701
    10. ' n' → logprob: -7.890407085418701

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015422382857650518
    2. ' range' → logprob: -6.501542091369629
    3. '(range' → logprob: -10.251542091369629
    4. 'path' → logprob: -12.751542091369629
    5. '(n' → logprob: -13.751542091369629
    6. 'ange' → logprob: -16.126543045043945
    7. ' ' → logprob: -16.251543045043945
    8. '(' → logprob: -16.376543045043945
    9. 'r' → logprob: -16.501543045043945
    10. 'n' → logprob: -16.626543045043945

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012122603366151452
    2. '(' → logprob: -7.376212120056152
    3. '(m' → logprob: -7.501212120056152
    4. '(path' → logprob: -11.126212120056152
    5. '(len' → logprob: -12.251212120056152
    6. 'path' → logprob: -12.251212120056152
    7. 'n' → logprob: -12.501212120056152
    8. '((' → logprob: -13.001212120056152
    9. '(range' → logprob: -14.001212120056152
    10. ' (' → logprob: -14.376212120056152

Token 229: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22578087449073792
    2. ' -' → logprob: -1.6007808446884155
    3. '   ' → logprob: -7.975780963897705
    4. ' ' → logprob: -11.975780487060547
    5. '(' → logprob: -12.225780487060547
    6. '):
' → logprob: -13.100780487060547
    7. '1' → logprob: -13.100780487060547
    8. '  ' → logprob: -13.225780487060547
    9. '-
' → logprob: -13.350780487060547
    10. '):' → logprob: -13.725780487060547

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04874530807137489
    2. '2' → logprob: -3.0487453937530518
    3. ' ' → logprob: -9.298745155334473
    4. '-' → logprob: -10.548745155334473
    5. '   ' → logprob: -11.548745155334473
    6. '3' → logprob: -11.548745155334473
    7. 'm' → logprob: -11.673745155334473
    8. 'path' → logprob: -12.861245155334473
    9. '(' → logprob: -13.423745155334473
    10. '       ' → logprob: -14.048745155334473

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03420250117778778
    2. '2' → logprob: -3.4092025756835938
    3. '-' → logprob: -7.534202575683594
    4. ' ' → logprob: -11.159202575683594
    5. '```' → logprob: -13.159202575683594
    6. '3' → logprob: -13.409202575683594
    7. '   ' → logprob: -14.034202575683594
    8. ' -' → logprob: -14.159202575683594
    9. 'm' → logprob: -14.221702575683594
    10. 'range' → logprob: -14.471702575683594

Token 232: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04281018674373627
    2. ':
' → logprob: -3.2928102016448975
    3. '):
' → logprob: -6.042809963226318
    4. '):' → logprob: -6.167809963226318
    5. '+' → logprob: -9.042810440063477
    6. '+:' → logprob: -9.667810440063477
    7. ' :' → logprob: -10.292810440063477
    8. '   ' → logprob: -10.542810440063477
    9. ',' → logprob: -11.667810440063477
    10. ':
' → logprob: -12.167810440063477

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005978330969810486
    2. ' if' → logprob: -5.130978107452393
    3. 'if' → logprob: -10.00597858428955
    4. '       ' → logprob: -13.50597858428955
    5. '	if' → logprob: -13.75597858428955
    6. '   ' → logprob: -14.38097858428955
    7. ',' → logprob: -14.50597858428955
    8. ' ' → logprob: -14.88097858428955
    9. '  ' → logprob: -15.25597858428955
    10. '    ' → logprob: -15.50597858428955

Token 234: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03283794969320297
    2. '   ' → logprob: -3.5328378677368164
    3. ' if' → logprob: -5.782837867736816
    4. ' ' → logprob: -13.657837867736816
    5. 'print' → logprob: -15.157837867736816
    6. '	if' → logprob: -15.282837867736816
    7. '  ' → logprob: -15.282837867736816
    8. '    
' → logprob: -15.657837867736816
    9. 'If' → logprob: -16.032838821411133
    10. '    ' → logprob: -16.407838821411133

Token 235: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.12697944045066833
    2. ' path' → logprob: -2.126979351043701
    3. '   ' → logprob: -10.00197982788086
    4. '(path' → logprob: -12.37697982788086
    5. '	path' → logprob: -14.25197982788086
    6. ' ' → logprob: -14.62697982788086
    7. '[path' → logprob: -15.37697982788086
    8. 'not' → logprob: -15.75197982788086
    9. '"path' → logprob: -16.62697982788086
    10. '  ' → logprob: -16.75197982788086

Token 236: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: 0.0
    2. '_' → logprob: -18.5
    3. '_added' → logprob: -18.5
    4. '_ad' → logprob: -19.125
    5. '_Add' → logprob: -19.125
    6. '_append' → logprob: -19.25
    7. 'Add' → logprob: -20.25
    8. '+' → logprob: -20.25
    9. '[i' → logprob: -20.25
    10. '_put' → logprob: -20.375

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0044539738446474075
    2. '[-' → logprob: -5.629454135894775
    3. '[' → logprob: -7.254454135894775
    4. '_value' → logprob: -9.004453659057617
    5. '_add' → logprob: -11.629453659057617
    6. '[path' → logprob: -12.004453659057617
    7. '_[' → logprob: -13.379453659057617
    8. ' [' → logprob: -14.129453659057617
    9. '[(' → logprob: -14.254453659057617
    10. '[n' → logprob: -14.254453659057617

Token 238: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3975934684276581
    2. ' ==' → logprob: -1.1475934982299805
    3. ':' → logprob: -5.1475934982299805
    4. ']==' → logprob: -6.0225934982299805
    5. ':
' → logprob: -6.7725934982299805
    6. ']' → logprob: -6.8975934982299805
    7. '=' → logprob: -9.52259349822998
    8. ']:' → logprob: -9.64759349822998
    9. ']:
' → logprob: -10.02259349822998
    10. '):
' → logprob: -10.39759349822998

Token 239: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18406838178634644
    2. ' ==' → logprob: -2.309068441390991
    3. ':' → logprob: -2.684068441390991
    4. ':
' → logprob: -8.30906867980957
    5. '>' → logprob: -9.05906867980957
    6. '=' → logprob: -10.30906867980957
    7. '!=' → logprob: -10.68406867980957
    8. ' :' → logprob: -11.43406867980957
    9. '1' → logprob: -11.80906867980957
    10. '```' → logprob: -11.93406867980957

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013917774776928127
    2. ' ' → logprob: -9.000139236450195
    3. '0' → logprob: -11.375139236450195
    4. '   ' → logprob: -12.375139236450195
    5. '```' → logprob: -17.000139236450195
    6. '  ' → logprob: -17.375139236450195
    7. '>' → logprob: -18.125139236450195
    8. '2' → logprob: -18.187639236450195
    9. '       ' → logprob: -18.625139236450195
    10. '=' → logprob: -18.812639236450195

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -11.000025749206543
    3. '0' → logprob: -11.625025749206543
    4. '   ' → logprob: -15.125025749206543
    5. '```' → logprob: -17.25002670288086
    6. '2' → logprob: -17.62502670288086
    7. '=' → logprob: -18.37502670288086
    8. '  ' → logprob: -18.37502670288086
    9. '>' → logprob: -18.50002670288086
    10. '[' → logprob: -19.06252670288086

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0712380409240723
    2. ':
' → logprob: -1.1962380409240723
    3. '   ' → logprob: -1.6962380409240723
    4. '       ' → logprob: -1.9462380409240723
    5. ',' → logprob: -3.5712380409240723
    6. ' :
' → logprob: -8.446237564086914
    7. ' ,' → logprob: -9.196237564086914
    8. ' :' → logprob: -9.196237564086914
    9. ' print' → logprob: -9.946237564086914
    10. ',
' → logprob: -10.196237564086914

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022683702409267426
    2. '   ' → logprob: -4.522683620452881
    3. ':
' → logprob: -4.647683620452881
    4. ':' → logprob: -6.397683620452881
    5. ' print' → logprob: -8.647684097290039
    6. 'print' → logprob: -9.772684097290039
    7. '     ' → logprob: -10.897684097290039
    8. ',' → logprob: -10.897684097290039
    9. '        
' → logprob: -11.522684097290039
    10. '):
' → logprob: -11.897684097290039

Token 244: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0036645643413066864
    2. ' print' → logprob: -5.753664493560791
    3. '   ' → logprob: -7.628664493560791
    4. '  ' → logprob: -16.128664016723633
    5. ' ' → logprob: -16.503664016723633
    6. '       ' → logprob: -16.503664016723633
    7. '	print' → logprob: -17.378664016723633
    8. '```' → logprob: -17.378664016723633
    9. '    ' → logprob: -18.128664016723633
    10. ',' → logprob: -18.753664016723633

Token 245: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.43826860189437866
    2. 'i' → logprob: -1.3132686614990234
    3. ' i' → logprob: -2.8132686614990234
    4. '(n' → logprob: -4.063268661499023
    5. 'path' → logprob: -5.688268661499023
    6. 'n' → logprob: -5.938268661499023
    7. ' n' → logprob: -7.063268661499023
    8. ' (' → logprob: -7.188268661499023
    9. '1' → logprob: -8.063268661499023
    10. '(' → logprob: -8.188268661499023

Token 246: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519644796848297
    2. '+' → logprob: -1.5019644498825073
    3. '1' → logprob: -10.501964569091797
    4. ' ' → logprob: -12.876964569091797
    5. '2' → logprob: -13.251964569091797
    6. ',' → logprob: -13.626964569091797
    7. ' ,' → logprob: -13.876964569091797
    8. '+,' → logprob: -14.876964569091797
    9. 's' → logprob: -15.126964569091797
    10. ' plus' → logprob: -15.876964569091797

Token 247: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3944650888442993
    2. '2' → logprob: -1.1444650888442993
    3. ' ' → logprob: -4.89446496963501
    4. '3' → logprob: -9.519465446472168
    5. '0' → logprob: -14.456965446472168
    6. '12' → logprob: -14.581965446472168
    7. '  ' → logprob: -14.644465446472168
    8. '   ' → logprob: -14.956965446472168
    9. 's' → logprob: -15.581965446472168
    10. '5' → logprob: -16.08196449279785

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002855159342288971
    2. '2' → logprob: -5.87785530090332
    3. ' ' → logprob: -10.00285530090332
    4. '3' → logprob: -12.37785530090332
    5. '   ' → logprob: -14.94035530090332
    6. '
' → logprob: -15.81535530090332
    7. '  ' → logprob: -16.06535530090332
    8. '0' → logprob: -16.87785530090332
    9. '

' → logprob: -17.69035530090332
    10. '+' → logprob: -17.75285530090332

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00944190938025713
    2. ' ,' → logprob: -4.88444185256958
    3. '+' → logprob: -6.63444185256958
    4. ' +' → logprob: -8.134442329406738
    5. ',i' → logprob: -9.009442329406738
    6. ' i' → logprob: -10.509442329406738
    7. '+,' → logprob: -11.009442329406738
    8. ' ' → logprob: -11.009442329406738
    9. ',n' → logprob: -11.384442329406738
    10. '1' → logprob: -11.384442329406738

Token 250: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014217688702046871
    2. ' n' → logprob: -4.264217853546143
    3. 'i' → logprob: -10.139217376708984
    4. ' ' → logprob: -12.764217376708984
    5. '2' → logprob: -12.764217376708984
    6. '(n' → logprob: -12.889217376708984
    7. '   ' → logprob: -13.014217376708984
    8. ' i' → logprob: -13.139217376708984
    9. '<n' → logprob: -14.764217376708984
    10. '	n' → logprob: -14.889217376708984

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0263530146330595
    2. ' ,' → logprob: -3.651353120803833
    3. ',value' → logprob: -10.526352882385254
    4. '2' → logprob: -11.151352882385254
    5. 'value' → logprob: -13.026352882385254
    6. ' ' → logprob: -13.026352882385254
    7. '0' → logprob: -13.151352882385254
    8. '       ' → logprob: -13.776352882385254
    9. ',path' → logprob: -14.276352882385254
    10. ' value' → logprob: -14.526352882385254

Token 252: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.03836321830749512
    2. ' path' → logprob: -3.288363218307495
    3. '       ' → logprob: -8.538363456726074
    4. '2' → logprob: -9.663363456726074
    5. '   ' → logprob: -10.413363456726074
    6. ' ' → logprob: -11.913363456726074
    7. '    ' → logprob: -12.663363456726074
    8. '           ' → logprob: -12.913363456726074
    9. '"path' → logprob: -12.913363456726074
    10. '1' → logprob: -13.288363456726074

Token 253: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -3.128163257315464e-07
    2. 'add' → logprob: -16.0
    3. '_ad' → logprob: -16.125
    4. '_added' → logprob: -17.375
    5. '_value' → logprob: -18.125
    6. '_' → logprob: -18.125
    7. '_Add' → logprob: -18.125
    8. 'Add' → logprob: -18.375
    9. '+' → logprob: -19.0
    10. '_a' → logprob: -19.125

Token 254: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.0100624169572257e-05
    2. 'value' → logprob: -10.875020027160645
    3. '_add' → logprob: -14.000020027160645
    4. '[i' → logprob: -16.00002098083496
    5. 'Value' → logprob: -17.37502098083496
    6. ' value' → logprob: -17.37502098083496
    7. '_VALUE' → logprob: -18.37502098083496
    8. '_val' → logprob: -18.50002098083496
    9. '_values' → logprob: -18.75002098083496
    10. '_Value' → logprob: -19.25002098083496

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5014188799541444e-05
    2. '[' → logprob: -10.500044822692871
    3. ')' → logprob: -11.375044822692871
    4. 'i' → logprob: -13.375044822692871
    5. ']' → logprob: -13.625044822692871
    6. ' [' → logprob: -13.750044822692871
    7. '[n' → logprob: -14.375044822692871
    8. ')[' → logprob: -15.375044822692871
    9. '   ' → logprob: -15.625044822692871
    10. '[
' → logprob: -15.875044822692871

Token 256: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003117941552773118
    2. '+' → logprob: -6.00311803817749
    3. ' )' → logprob: -7.50311803817749
    4. '+)' → logprob: -9.753117561340332
    5. ' +' → logprob: -10.628117561340332
    6. ')
' → logprob: -12.003117561340332
    7. '}' → logprob: -14.503117561340332
    8. '))' → logprob: -15.003117561340332
    9. ')}' → logprob: -15.128117561340332
    10. '*' → logprob: -15.128117561340332


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 254
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 226
Précision stricte (1ère position): 36.61%
Précision adaptée (1ère position): 38.98%
Précision (top 10): 88.98%
================================================================================
