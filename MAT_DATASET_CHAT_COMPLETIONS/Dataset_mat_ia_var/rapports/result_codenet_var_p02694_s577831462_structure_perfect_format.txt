================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
X = int(input())

dyear = 0
price = 100

while price < X:
    dyear += 1
    price = int(price * 1.01)

print(dyear)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'X' (ID: 55)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007526897243224084
    2. ''' → logprob: -7.625752925872803
    3. 'X' → logprob: -9.625752449035645
    4. '[' → logprob: -10.250752449035645
    5. ')' → logprob: -10.625752449035645
    6. '('' → logprob: -10.625752449035645
    7. '```' → logprob: -10.625752449035645
    8. '(
' → logprob: -11.125752449035645
    9. '(X' → logprob: -11.125752449035645
    10. '"' → logprob: -11.250752449035645

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013028807938098907
    2. ')' → logprob: -5.013028621673584
    3. '()' → logprob: -5.138028621673584
    4. '(
' → logprob: -9.013029098510742
    5. '())' → logprob: -9.263029098510742
    6. '(X' → logprob: -10.388029098510742
    7. '('' → logprob: -10.513029098510742
    8. '```' → logprob: -11.013029098510742
    9. '(

' → logprob: -11.013029098510742
    10. '("("' → logprob: -11.388029098510742

Token 5: 'd' (ID: 67)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14802342653274536
    2. '%' → logprob: -2.5230233669281006
    3. '\n' → logprob: -3.7730233669281006
    4. '*' → logprob: -4.02302360534668
    5. 'if' → logprob: -5.14802360534668
    6. '+
' → logprob: -5.39802360534668
    7. '\' → logprob: -6.64802360534668
    8. '**' → logprob: -7.14802360534668
    9. '```' → logprob: -7.27302360534668
    10. '#' → logprob: -7.27302360534668

Token 6: 'year' (ID: 5682)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4468522369861603
    2. '[' → logprob: -1.946852207183838
    3. 'ef' → logprob: -2.696852207183838
    4. ' =' → logprob: -3.071852207183838
    5. '=' → logprob: -3.321852207183838
    6. 'i' → logprob: -4.071852207183838
    7. 'iv' → logprob: -4.696852207183838
    8. '.' → logprob: -4.821852207183838
    9. '[i' → logprob: -5.071852207183838
    10. '*' → logprob: -5.321852207183838

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7722988128662109
    2. '[' → logprob: -1.772298812866211
    3. 'ef' → logprob: -1.772298812866211
    4. '_' → logprob: -3.022298812866211
    5. 's' → logprob: -3.272298812866211
    6. ' =' → logprob: -3.647298812866211
    7. 'f' → logprob: -3.772298812866211
    8. 'e' → logprob: -4.147298812866211
    9. 'elta' → logprob: -4.522298812866211
    10. 'ay' → logprob: -4.772298812866211

Token 8: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.15464410185813904
    2. ' ' → logprob: -2.404644012451172
    3. 'X' → logprob: -3.779644012451172
    4. ' {}' → logprob: -4.279644012451172
    5. ' {' → logprob: -4.779644012451172
    6. '{}' → logprob: -5.779644012451172
    7. '{' → logprob: -7.154644012451172
    8. '365' → logprob: -7.404644012451172
    9. '202' → logprob: -7.654644012451172
    10. ' d' → logprob: -7.654644012451172

Token 9: '0' (ID: 15)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.39753517508506775
    2. '365' → logprob: -1.1475352048873901
    3. '1' → logprob: -6.14753532409668
    4. '10' → logprob: -6.89753532409668
    5. '366' → logprob: -6.89753532409668
    6. '202' → logprob: -6.89753532409668
    7. '0' → logprob: -7.02253532409668
    8. '360' → logprob: -7.39753532409668
    9. '5' → logprob: -7.52253532409668
    10. '200' → logprob: -7.77253532409668

Token 10: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22430388629436493
    2. ' while' → logprob: -2.099303960800171
    3. '<|end|>' → logprob: -3.849303960800171
    4. 'd' → logprob: -3.849303960800171
    5. '
' → logprob: -4.224303722381592
    6. 'for' → logprob: -4.849303722381592
    7. '' → logprob: -5.599303722381592
    8. 'if' → logprob: -6.724303722381592
    9. ' for' → logprob: -6.974303722381592
    10. '```' → logprob: -6.974303722381592

Token 11: 'price' (ID: 7629)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8383466005325317
    2. 'd' → logprob: -1.3383466005325317
    3. ' while' → logprob: -2.088346481323242
    4. ',' → logprob: -3.088346481323242
    5. '<|end|>' → logprob: -3.838346481323242
    6. ' ' → logprob: -4.088346481323242
    7. 'for' → logprob: -4.213346481323242
    8. '+' → logprob: -4.463346481323242
    9. 'y' → logprob: -4.713346481323242
    10. 'i' → logprob: -4.838346481323242

Token 12: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8743479251861572
    2. ' =' → logprob: -0.9993479251861572
    3. '[' → logprob: -2.1243479251861572
    4. '_' → logprob: -2.7493479251861572
    5. '=' → logprob: -3.7493479251861572
    6. '[:]' → logprob: -6.499347686767578
    7. ' +=' → logprob: -6.874347686767578
    8. ')' → logprob: -7.374347686767578
    9. '[s' → logprob: -7.374347686767578
    10. '[]' → logprob: -7.499347686767578

Token 13: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.2692147493362427
    2. 'X' → logprob: -1.5192147493362427
    3. '100' → logprob: -1.6442147493362427
    4. ' ' → logprob: -1.6442147493362427
    5. '0' → logprob: -2.644214630126953
    6. ' int' → logprob: -4.269214630126953
    7. 'int' → logprob: -4.644214630126953
    8. '1' → logprob: -5.144214630126953
    9. '10' → logprob: -5.644214630126953
    10. '999' → logprob: -6.394214630126953

Token 14: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4522619843482971
    2. 'X' → logprob: -1.2022619247436523
    3. 'int' → logprob: -3.3272619247436523
    4. '0' → logprob: -4.702261924743652
    5. '1' → logprob: -5.827261924743652
    6. '10' → logprob: -6.077261924743652
    7. '500' → logprob: -6.077261924743652
    8. '200' → logprob: -6.202261924743652
    9. '999' → logprob: -6.202261924743652
    10. '250' → logprob: -6.577261924743652

Token 15: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.009420394897461
    2. '
' → logprob: -1.884420394897461
    3. '\n' → logprob: -2.134420394897461
    4. '0' → logprob: -2.884420394897461
    5. '' → logprob: -2.884420394897461
    6. ' ' → logprob: -3.009420394897461
    7. '<|end|>' → logprob: -3.134420394897461
    8. '```' → logprob: -3.259420394897461
    9. '\' → logprob: -3.759420394897461
    10. ' 
' → logprob: -4.009420394897461

Token 16: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05070872604846954
    2. ' while' → logprob: -3.175708770751953
    3. '<|end|>' → logprob: -5.425708770751953
    4. 'for' → logprob: -6.800708770751953
    5. '
' → logprob: -7.300708770751953
    6. '*' → logprob: -7.925708770751953
    7. 'if' → logprob: -8.425708770751953
    8. '+' → logprob: -9.050708770751953
    9. ' 
' → logprob: -9.425708770751953
    10. ' ' → logprob: -9.425708770751953

Token 17: ' price' (ID: 3911)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.0528995618224144
    2. ' d' → logprob: -3.5528995990753174
    3. ' price' → logprob: -4.177899360656738
    4. ' ' → logprob: -5.177899360656738
    5. 'X' → logprob: -6.552899360656738
    6. 'd' → logprob: -8.052899360656738
    7. ' ' → logprob: -9.802899360656738
    8. ' not' → logprob: -10.427899360656738
    9. 'price' → logprob: -10.677899360656738
    10. ' (' → logprob: -11.177899360656738

Token 18: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04975336417555809
    2. '<' → logprob: -3.424753427505493
    3. ' <=' → logprob: -4.174753189086914
    4. '<=' → logprob: -8.549753189086914
    5. ' >' → logprob: -9.549753189086914
    6. '<|end|>' → logprob: -9.549753189086914
    7. ' >=' → logprob: -9.674753189086914
    8. ' *' → logprob: -9.674753189086914
    9. ' ' → logprob: -9.924753189086914
    10. '*' → logprob: -10.049753189086914

Token 19: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.05588236823678017
    2. '200' → logprob: -3.555882453918457
    3. ' X' → logprob: -4.180882453918457
    4. ' ' → logprob: -5.680882453918457
    5. '100' → logprob: -5.930882453918457
    6. '150' → logprob: -6.055882453918457
    7. '300' → logprob: -7.555882453918457
    8. '110' → logprob: -8.305882453918457
    9. '50' → logprob: -8.430882453918457
    10. '500' → logprob: -8.805882453918457

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002000130945816636
    2. ' :' → logprob: -6.252000331878662
    3. ':
' → logprob: -9.626999855041504
    4. ' :
' → logprob: -13.251999855041504
    5. '+:' → logprob: -13.876999855041504
    6. '):' → logprob: -14.001999855041504
    7. ':

' → logprob: -14.626999855041504
    8. '   ' → logprob: -14.626999855041504
    9. ':**' → logprob: -15.376999855041504
    10. '：' → logprob: -16.37700080871582

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7392210364341736
    2. ' price' → logprob: -1.3642210960388184
    3. '    ' → logprob: -2.9892210960388184
    4. ' ' → logprob: -2.9892210960388184
    5. '    
' → logprob: -3.1142210960388184
    6. 'price' → logprob: -3.2392210960388184
    7. '     
' → logprob: -3.6142210960388184
    8. ' 
' → logprob: -3.8642210960388184
    9. '	price' → logprob: -3.8642210960388184
    10. '```' → logprob: -4.989221096038818

Token 22: ' d' (ID: 272)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.476394385099411
    2. 'price' → logprob: -1.2263944149017334
    3. 'd' (adapté à ' d') → logprob: -3.7263944149017334
    4. '    ' → logprob: -4.226394176483154
    5. '   ' → logprob: -4.226394176483154
    6. ' 
' → logprob: -4.726394176483154
    7. '     
' → logprob: -5.351394176483154
    8. '	price' → logprob: -5.351394176483154
    9. '```' → logprob: -5.351394176483154
    10. '    
' → logprob: -5.476394176483154

Token 23: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.02329649217426777
    2. 'price' → logprob: -3.773296594619751
    3. 'ear' → logprob: -11.398296356201172
    4. '_year' → logprob: -11.648296356201172
    5. 'e' → logprob: -11.773296356201172
    6. 'ay' → logprob: -12.523296356201172
    7. ' year' → logprob: -12.648296356201172
    8. '_price' → logprob: -13.273296356201172
    9. '.year' → logprob: -13.398296356201172
    10. '-year' → logprob: -13.648296356201172

Token 24: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3136044144630432
    2. '+=' → logprob: -1.3136043548583984
    3. '+' → logprob: -8.313604354858398
    4. '=' → logprob: -9.563604354858398
    5. '   ' → logprob: -11.688604354858398
    6. ']+=' → logprob: -11.688604354858398
    7. ' +' → logprob: -12.688604354858398
    8. ' ' → logprob: -13.063604354858398
    9. ' =' → logprob: -13.063604354858398
    10. 's' → logprob: -13.938604354858398

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007628988474607468
    2. ' ' → logprob: -4.882628917694092
    3. '10' → logprob: -11.88262939453125
    4. '5' → logprob: -12.25762939453125
    5. '2' → logprob: -12.75762939453125
    6. '3' → logprob: -13.13262939453125
    7. '   ' → logprob: -13.25762939453125
    8. '20' → logprob: -13.88262939453125
    9. '100' → logprob: -13.88262939453125
    10. '4' → logprob: -14.63262939453125

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001532355323433876
    2. ' ' → logprob: -7.501532554626465
    3. '5' → logprob: -8.251532554626465
    4. '2' → logprob: -8.501532554626465
    5. '10' → logprob: -8.501532554626465
    6. '3' → logprob: -9.501532554626465
    7. '100' → logprob: -10.126532554626465
    8. '7' → logprob: -10.376532554626465
    9. '0' → logprob: -10.501532554626465
    10. 'price' → logprob: -10.626532554626465

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19611743092536926
    2. '    
' → logprob: -2.696117401123047
    3. 'price' → logprob: -3.196117401123047
    4. '
' → logprob: -3.321117401123047
    5. ' price' → logprob: -3.571117401123047
    6. '	price' → logprob: -6.321117401123047
    7. '```' → logprob: -6.946117401123047
    8. '_price' → logprob: -7.321117401123047
    9. ' 
' → logprob: -7.321117401123047
    10. '   
' → logprob: -8.446117401123047

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4530963897705078
    2. 'price' → logprob: -1.5780963897705078
    3. ' price' → logprob: -1.9530963897705078
    4. '
' → logprob: -4.578096389770508
    5. '    
' → logprob: -5.828096389770508
    6. '	price' → logprob: -6.703096389770508
    7. '```' → logprob: -6.953096389770508
    8. '_price' → logprob: -8.828096389770508
    9. ' 
' → logprob: -9.328096389770508
    10. '   
' → logprob: -9.453096389770508

Token 29: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.42921003699302673
    2. 'price' (adapté à ' price') → logprob: -1.0542100667953491
    3. '20' → logprob: -9.42920970916748
    4. '100' → logprob: -9.42920970916748
    5. '	price' → logprob: -9.80420970916748
    6. '50' → logprob: -9.92920970916748
    7. '(price' → logprob: -10.55420970916748
    8. '10' → logprob: -10.61670970916748
    9. 'd' → logprob: -11.11670970916748
    10. '   ' → logprob: -11.55420970916748

Token 30: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5380767583847046
    2. ' *=' → logprob: -1.5380767583847046
    3. '+=' → logprob: -2.538076877593994
    4. '=' → logprob: -2.538076877593994
    5. ' +=' → logprob: -3.788076877593994
    6. '*' → logprob: -4.288076877593994
    7. ' =' → logprob: -5.288076877593994
    8. ' *' → logprob: -7.913076877593994
    9. '-=' → logprob: -7.913076877593994
    10. '//=' → logprob: -8.663076400756836

Token 31: ' int' (ID: 677)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.5796160101890564
    2. ' price' → logprob: -1.3296160697937012
    3. 'int' → logprob: -1.9546160697937012
    4. ' int' → logprob: -3.579616069793701
    5. 'round' → logprob: -6.579616069793701
    6. '100' → logprob: -6.579616069793701
    7. '(price' → logprob: -6.704616069793701
    8. '(int' → logprob: -7.204616069793701
    9. ' round' → logprob: -8.329615592956543
    10. '   ' → logprob: -8.829615592956543

Token 32: '(price' (ID: 81279)
  Prédit: '(price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(price' → logprob: -0.007822271436452866
    2. '(' → logprob: -4.882822036743164
    3. 'price' → logprob: -9.382822036743164
    4. ' (' → logprob: -10.007822036743164
    5. ' price' → logprob: -10.257822036743164
    6. '((' → logprob: -10.507822036743164
    7. '(pr' → logprob: -11.132822036743164
    8. '	price' → logprob: -12.882822036743164
    9. '(round' → logprob: -13.257822036743164
    10. '(p' → logprob: -13.632822036743164

Token 33: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.34878140687942505
    2. ' *' → logprob: -1.2237813472747803
    3. ' +' → logprob: -8.59878158569336
    4. '1' → logprob: -9.72378158569336
    5. '+' → logprob: -10.22378158569336
    6. ' ' → logprob: -10.72378158569336
    7. ' /' → logprob: -12.09878158569336
    8. ' *=' → logprob: -12.34878158569336
    9. '/' → logprob: -12.47378158569336
    10. '*(' → logprob: -12.59878158569336

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023374760523438454
    2. ' ' → logprob: -3.8983747959136963
    3. '0' → logprob: -5.898374557495117
    4. '(' → logprob: -10.335874557495117
    5. '   ' → logprob: -11.648374557495117
    6. '.' → logprob: -11.773374557495117
    7. ' (' → logprob: -12.460874557495117
    8. '11' → logprob: -12.585874557495117
    9. '2' → logprob: -12.710874557495117
    10. '110' → logprob: -12.835874557495117

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001205350155942142
    2. '0' → logprob: -7.1262054443359375
    3. ' ' → logprob: -8.626205444335938
    4. '110' → logprob: -9.376205444335938
    5. '11' → logprob: -9.876205444335938
    6. '(' → logprob: -10.688705444335938
    7. '.' → logprob: -12.001205444335938
    8. '105' → logprob: -12.001205444335938
    9. '10' → logprob: -12.313705444335938
    10. '12' → logprob: -12.376205444335938

Token 36: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2418915182352066
    2. '0' → logprob: -1.9918915033340454
    3. '1' → logprob: -2.616891622543335
    4. '2' → logprob: -6.491891384124756
    5. ' .' → logprob: -6.491891384124756
    6. '05' → logprob: -6.866891384124756
    7. '03' → logprob: -8.366891860961914
    8. ' ' → logprob: -8.616891860961914
    9. '04' → logprob: -8.741891860961914
    10. '3' → logprob: -9.116891860961914

Token 37: '01' (ID: 2290)
  Prédit: '05'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '05' → logprob: -0.16525191068649292
    2. '1' → logprob: -2.1652519702911377
    3. '2' → logprob: -3.9152519702911377
    4. '07' → logprob: -5.415251731872559
    5. '5' → logprob: -5.665251731872559
    6. '04' → logprob: -5.665251731872559
    7. '0' → logprob: -5.790251731872559
    8. '03' → logprob: -7.165251731872559
    9. '02' → logprob: -7.665251731872559
    10. '25' → logprob: -7.665251731872559

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ' )' → logprob: -11.000017166137695
    3. ')
' → logprob: -14.625017166137695
    4. '))' → logprob: -16.625017166137695
    5. '`)' → logprob: -17.625017166137695
    6. ')`' → logprob: -17.875017166137695
    7. '')' → logprob: -18.875017166137695
    8. '}' → logprob: -19.000017166137695
    9. ')

' → logprob: -19.000017166137695
    10. '**' → logprob: -19.000017166137695

Token 39: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8029427528381348
    2. '<|end|>' → logprob: -1.3029427528381348
    3. '\n' → logprob: -2.1779427528381348
    4. '#' → logprob: -2.5529427528381348
    5. ')' → logprob: -3.3029427528381348
    6. '
' → logprob: -3.4279427528381348
    7. '\' → logprob: -5.177942752838135
    8. ' print' → logprob: -5.177942752838135
    9. '<|end|>' → logprob: -6.302942752838135
    10. '```' → logprob: -6.427942752838135

Token 40: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004513312131166458
    2. '(X' → logprob: -6.379513263702393
    3. '(price' → logprob: -6.379513263702393
    4. '('' → logprob: -7.129513263702393
    5. '()' → logprob: -8.87951374053955
    6. '("("' → logprob: -9.00451374053955
    7. '("' → logprob: -11.12951374053955
    8. '(d' → logprob: -11.50451374053955
    9. '((' → logprob: -11.62951374053955
    10. '(f' → logprob: -12.37951374053955

Token 41: 'year' (ID: 5682)
  Prédit: 'year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.012600413523614407
    2. 'y' → logprob: -4.387600421905518
    3. ')' → logprob: -10.26259994506836
    4. 'ye' → logprob: -10.51259994506836
    5. 'a' → logprob: -12.01259994506836
    6. 'yer' → logprob: -12.13759994506836
    7. 'ay' → logprob: -12.51259994506836
    8. 'yar' → logprob: -12.76259994506836
    9. 'years' → logprob: -13.26259994506836
    10. '_year' → logprob: -13.26259994506836

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.5
    3. '')' → logprob: -17.25
    4. ' )' → logprob: -17.375
    5. '`)' → logprob: -17.875
    6. ')
' → logprob: -18.5
    7. ')`' → logprob: -18.625
    8. ')}' → logprob: -19.25
    9. '")' → logprob: -19.25
    10. '}' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 82.50%
================================================================================
