================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math  # Importe le module math qui fournit des fonctions mathématiques, bien que non utilisé ici

# Demande à l'utilisateur de saisir une valeur, qui sera interprétée comme une chaîne de caractères (str)
# input() affiche une invite à l'utilisateur et attend qu'il saisisse quelque chose au clavier puis appuie sur 'Entrée'
# float() convertit cette chaîne de caractères en un nombre à virgule flottante (nombre décimal)
L = float(input())

# Calcule le cube de la valeur L, c'est-à-dire L multiplié par L puis multiplié encore par L (L * L * L)
# Utilise l'opérateur d'exponentiation ** pour élever L à la puissance 3
# Divise le résultat par 27.0, qui est un nombre flottant représentant 27 comme décimal (plutôt que 27 entier)
resultat = L ** 3 / 27.0  # Le calcul est effectué ici et stocké dans la variable 'resultat'

# Affiche le résultat précédemment calculé à l'écran
# print() affiche une valeur à la console
# '{:.10f}'.format(resultat) formate le nombre pour l'afficher avec exactement 10 chiffres après la virgule
# {:.10f} est un format de chaîne où {:} indique une valeur à formater, .10f signifie "dix chiffres après la virgule"
print('{:.10f}'.format(resultat))
# La sortie sera donc un nombre à virgule flottante affiché précisément à 10 décimales
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018971276585943997
    2. '\' → logprob: -9.750189781188965
    3. 'import' → logprob: -10.000189781188965
    4. '```' → logprob: -10.375189781188965
    5. '\n' → logprob: -11.000189781188965
    6. '<|end|>' → logprob: -12.250189781188965
    7. '(' → logprob: -12.625189781188965
    8. 'def' → logprob: -12.625189781188965
    9. '.pi' → logprob: -12.750189781188965
    10. '#' → logprob: -12.750189781188965

Token 4: ' Im' (ID: 3133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06823694705963135
    2. ' ' → logprob: -3.443236827850342
    3. ' .' → logprob: -3.693236827850342
    4. '.sqrt' → logprob: -5.193236827850342
    5. '.e' → logprob: -7.068236827850342
    6. '.math' → logprob: -8.0682373046875
    7. '<|end|>' → logprob: -8.0682373046875
    8. ' import' → logprob: -8.1932373046875
    9. '.pi' → logprob: -8.4432373046875
    10. 'import' → logprob: -8.5682373046875

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0010488852858543396
    2. 'p' → logprob: -6.876049041748047
    3. 'ported' → logprob: -12.376049041748047
    4. 'por' → logprob: -12.501049041748047
    5. 'ports' → logprob: -13.001049041748047
    6. 'porter' → logprob: -13.376049041748047
    7. 'po' → logprob: -14.251049041748047
    8. 'ort' → logprob: -14.501049041748047
    9. ' port' → logprob: -14.626049041748047
    10. 'plement' → logprob: -14.751049041748047

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15878024697303772
    2. ' ' → logprob: -2.408780336380005
    3. 's' → logprob: -3.283780336380005
    4. 'd' → logprob: -4.908780097961426
    5. ' r' → logprob: -5.533780097961426
    6. '.' → logprob: -6.033780097961426
    7. 'n' → logprob: -6.658780097961426
    8. 'nt' → logprob: -7.158780097961426
    9. 'm' → logprob: -7.408780097961426
    10. ''s' → logprob: -8.033780097961426

Token 7: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.10955244302749634
    2. 's' → logprob: -2.9845523834228516
    3. 'module' → logprob: -4.109552383422852
    4. 'r' → logprob: -4.984552383422852
    5. ' ' → logprob: -5.234552383422852
    6. ' math' → logprob: -5.359552383422852
    7. ' ' → logprob: -5.734552383422852
    8. 'es' → logprob: -6.109552383422852
    9. '```' → logprob: -6.109552383422852
    10. ' espace' → logprob: -6.359552383422852

Token 8: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.027397338300943375
    2. ',' → logprob: -5.027397155761719
    3. 'import' → logprob: -5.277397155761719
    4. ' as' → logprob: -5.652397155761719
    5. '```' → logprob: -6.027397155761719
    6. 'a' → logprob: -6.402397155761719
    7. '\' → logprob: -7.027397155761719
    8. 'as' → logprob: -7.152397155761719
    9. '.pyplot' → logprob: -7.402397155761719
    10. ' .' → logprob: -7.527397155761719

Token 9: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.019410638138651848
    2. '\n' → logprob: -5.394410610198975
    3. '\' → logprob: -5.519410610198975
    4. 'import' → logprob: -5.644410610198975
    5. '
' → logprob: -6.144410610198975
    6. '.import' → logprob: -6.394410610198975
    7. '```' → logprob: -7.769410610198975
    8. '.e' → logprob: -8.144411087036133
    9. '.a' → logprob: -8.144411087036133
    10. ',' → logprob: -8.394411087036133

Token 10: ' fournit' (ID: 123615)
  Prédit: ' fournit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fournit' → logprob: -0.7447181940078735
    2. ' contient' → logprob: -1.1197181940078735
    3. ' permet' → logprob: -2.369718074798584
    4. ' ' → logprob: -2.494718074798584
    5. ' est' → logprob: -5.244718074798584
    6. ' provides' → logprob: -5.619718074798584
    7. ' provide' → logprob: -5.994718074798584
    8. ' contains' → logprob: -6.369718074798584
    9. ' ' → logprob: -6.619718074798584
    10. ' fourn' → logprob: -6.994718074798584

Token 11: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.006599201820790768
    2. ' les' → logprob: -5.881599426269531
    3. 's' → logprob: -6.506599426269531
    4. 'des' → logprob: -6.881599426269531
    5. ' ' → logprob: -7.131599426269531
    6. ' math' → logprob: -9.256599426269531
    7. ' s' → logprob: -9.756599426269531
    8. ' une' → logprob: -10.006599426269531
    9. ' functions' → logprob: -10.131599426269531
    10. '```' → logprob: -10.631599426269531

Token 12: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.10267241299152374
    2. ' ' → logprob: -2.7276723384857178
    3. ' fonctionnalités' → logprob: -4.102672576904297
    4. 'fon' → logprob: -4.977672576904297
    5. 'fonction' → logprob: -5.727672576904297
    6. 'f' → logprob: -7.352672576904297
    7. ' espaces' → logprob: -7.352672576904297
    8. ' outils' → logprob: -7.477672576904297
    9. ' fonction' → logprob: -7.602672576904297
    10. '  ' → logprob: -7.602672576904297

Token 13: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4575943350791931
    2. 'import' → logprob: -2.082594394683838
    3. ',' → logprob: -2.582594394683838
    4. ' ' → logprob: -2.832594394683838
    5. 'es' → logprob: -3.332594394683838
    6. 's' → logprob: -4.082594394683838
    7. '```' → logprob: -4.207594394683838
    8. '  ' → logprob: -5.332594394683838
    9. ' .' → logprob: -5.457594394683838
    10. ' math' → logprob: -6.082594394683838

Token 14: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0026538937818259
    2. 'ématique' → logprob: -6.252654075622559
    3. '.' → logprob: -8.002654075622559
    4. 'é' → logprob: -8.627654075622559
    5. 'ém' → logprob: -8.877654075622559
    6. '```' → logprob: -10.252654075622559
    7. 'étiques' → logprob: -11.377654075622559
    8. 'éma' → logprob: -11.627654075622559
    9. 's' → logprob: -13.002654075622559
    10. '`' → logprob: -13.377654075622559

Token 15: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6334946751594543
    2. '\' → logprob: -2.0084946155548096
    3. '
' → logprob: -2.2584946155548096
    4. '\n' → logprob: -2.7584946155548096
    5. '

' → logprob: -3.2584946155548096
    6. 'import' → logprob: -3.2584946155548096
    7. ' ' → logprob: -3.2584946155548096
    8. ',' → logprob: -3.8834946155548096
    9. '' → logprob: -5.008494853973389
    10. '<|end|>' → logprob: -5.133494853973389

Token 16: ' bien' (ID: 5340)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4392922520637512
    2. 'import' → logprob: -1.8142921924591064
    3. '.' → logprob: -2.4392921924591064
    4. ' ' → logprob: -3.3142921924591064
    5. '\n' → logprob: -4.4392924308776855
    6. ' ,' → logprob: -4.4392924308776855
    7. ' notamment' → logprob: -4.9392924308776855
    8. '\' → logprob: -5.1892924308776855
    9. ' telles' → logprob: -5.1892924308776855
    10. '```' → logprob: -5.3142924308776855

Token 17: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6185581684112549
    2. ' ' → logprob: -1.1185581684112549
    3. 'que' → logprob: -2.868558168411255
    4. ' sûr' → logprob: -3.368558168411255
    5. ' qu' → logprob: -3.868558168411255
    6. 's' → logprob: -5.118557929992676
    7. '  ' → logprob: -6.243557929992676
    8. '.' → logprob: -6.493557929992676
    9. 'qu' → logprob: -6.618557929992676
    10. 'venue' → logprob: -7.243557929992676

Token 18: ' non' (ID: 2893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10910627990961075
    2. '  ' → logprob: -3.1091063022613525
    3. ' math' → logprob: -3.1091063022613525
    4. ' ' → logprob: -6.109106063842773
    5. '<|end|>' → logprob: -6.609106063842773
    6. '_' → logprob: -6.734106063842773
    7. ' le' → logprob: -6.984106063842773
    8. ' des' → logprob: -6.984106063842773
    9. 'math' → logprob: -6.984106063842773
    10. 'le' → logprob: -6.984106063842773

Token 19: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -1.3168774843215942
    2. ' nécessaire' → logprob: -1.4418774843215942
    3. ' utilisées' → logprob: -1.9418774843215942
    4. ' utilisée' → logprob: -2.4418773651123047
    5. 'import' → logprob: -2.8168773651123047
    6. ' ' → logprob: -3.3168773651123047
    7. ' nécessaires' → logprob: -3.8168773651123047
    8. 'util' → logprob: -3.9418773651123047
    9. 's' → logprob: -3.9418773651123047
    10. '_' → logprob: -4.066877365112305

Token 20: ' ici' (ID: 27994)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37233975529670715
    2. '
' → logprob: -1.9973397254943848
    3. '<|end|>' → logprob: -2.1223397254943848
    4. '\' → logprob: -3.8723397254943848
    5. ' ' → logprob: -4.122339725494385
    6. '

' → logprob: -5.122339725494385
    7. '```' → logprob: -6.372339725494385
    8. '#' → logprob: -6.372339725494385
    9. '<|end|>' → logprob: -6.372339725494385
    10. '' → logprob: -6.497339725494385

Token 21: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6819392442703247
    2. ' ' → logprob: -1.8069392442703247
    3. '\' → logprob: -2.181939125061035
    4. '<|end|>' → logprob: -2.306939125061035
    5. '
' → logprob: -2.431939125061035
    6. '

' → logprob: -4.306939125061035
    7. '#' → logprob: -5.806939125061035
    8. '' → logprob: -5.931939125061035
    9. '<|end|>' → logprob: -6.181939125061035
    10. 'import' → logprob: -6.556939125061035

Token 22: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5498625636100769
    2. '
' → logprob: -1.4248626232147217
    3. ' ' → logprob: -3.1748626232147217
    4. '<|end|>' → logprob: -3.1748626232147217
    5. '\' → logprob: -3.2998626232147217
    6. '

' → logprob: -3.4248626232147217
    7. '#' → logprob: -4.299862384796143
    8. ' 
' → logprob: -5.924862384796143
    9. ' 

' → logprob: -5.924862384796143
    10. '' → logprob: -6.049862384796143

Token 23: ' Dem' (ID: 9458)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0970379114151
    2. '#' → logprob: -1.7220379114151
    3. ' def' → logprob: -2.4720377922058105
    4. 'import' → logprob: -3.2220377922058105
    5. ' #' → logprob: -3.2220377922058105
    6. ' La' → logprob: -3.8470377922058105
    7. ' Ce' → logprob: -3.9720377922058105
    8. ' C' → logprob: -3.9720377922058105
    9. ' Dé' → logprob: -4.0970377922058105
    10. 'Voici' → logprob: -4.0970377922058105

Token 24: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.01754734478890896
    2. 'ander' → logprob: -4.767547130584717
    3. 'andez' → logprob: -5.517547130584717
    4. 'and' → logprob: -5.767547130584717
    5. 'an' → logprob: -6.892547130584717
    6. 'a' → logprob: -7.892547130584717
    7. 'andes' → logprob: -9.642547607421875
    8. 'ar' → logprob: -9.767547607421875
    9. 'arr' → logprob: -10.142547607421875
    10. 'onstr' → logprob: -10.267547607421875

Token 25: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004019633866846561
    2. 's' → logprob: -6.379019737243652
    3. '_' → logprob: -7.379019737243652
    4. 'r' → logprob: -8.004019737243652
    5. 'a' → logprob: -8.129019737243652
    6. ' a' → logprob: -8.504019737243652
    7. ' #' → logprob: -8.504019737243652
    8. ' à' → logprob: -9.004019737243652
    9. '  ' → logprob: -9.504019737243652
    10. ' )' → logprob: -9.504019737243652

Token 26: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08994199335575104
    2. ' l' → logprob: -2.46494197845459
    3. 'util' → logprob: -7.21494197845459
    4. 'user' → logprob: -8.83994197845459
    5. 'la' → logprob: -10.21494197845459
    6. ' utilisateur' → logprob: -10.71494197845459
    7. 'le' → logprob: -11.21494197845459
    8. ''utilisateur' → logprob: -11.58994197845459
    9. ' user' → logprob: -11.83994197845459
    10. ' ' → logprob: -11.96494197845459

Token 27: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.08254044502973557
    2. 'a' → logprob: -2.707540512084961
    3. 'u' → logprob: -4.832540512084961
    4. ''' → logprob: -5.832540512084961
    5. 'util' → logprob: -7.707540512084961
    6. 'e' → logprob: -8.082540512084961
    7. '’utilisateur' → logprob: -8.082540512084961
    8. ''util' → logprob: -8.207540512084961
    9. ' utilisateur' → logprob: -9.207540512084961
    10. ''us' → logprob: -9.582540512084961

Token 28: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8820717930793762
    2. 's' → logprob: -1.7570717334747314
    3. 'd' → logprob: -2.1320717334747314
    4. 'input' → logprob: -2.3820717334747314
    5. ' une' → logprob: -2.7570717334747314
    6. 'l' → logprob: -3.6320717334747314
    7. ' d' → logprob: -4.2570719718933105
    8. 'a' → logprob: -4.5070719718933105
    9. '=input' → logprob: -4.6320719718933105
    10. 'une' → logprob: -4.7570719718933105

Token 29: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6171457171440125
    2. ' saisir' → logprob: -1.3671457767486572
    3. 'entr' → logprob: -2.6171457767486572
    4. 'r' → logprob: -3.3671457767486572
    5. 'calcul' → logprob: -3.3671457767486572
    6. ' entrer' → logprob: -4.117145538330078
    7. 'l' → logprob: -4.492145538330078
    8. 'input' → logprob: -4.492145538330078
    9. 'ent' → logprob: -5.617145538330078
    10. 'contin' → logprob: -5.617145538330078

Token 30: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6111017465591431
    2. ' une' → logprob: -1.236101746559143
    3. ' la' → logprob: -2.9861016273498535
    4. ' un' → logprob: -3.2361016273498535
    5. ' sa' → logprob: -3.4861016273498535
    6. ' le' → logprob: -4.6111016273498535
    7. ' son' → logprob: -4.7361016273498535
    8. ' l' → logprob: -4.8611016273498535
    9. ' a' → logprob: -4.9861016273498535
    10. ' ' → logprob: -5.3611016273498535

Token 31: ' valeur' (ID: 41664)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.8439786434173584
    2. ' nombre' → logprob: -1.2189786434173584
    3. ' ' → logprob: -2.3439786434173584
    4. ' valeur' → logprob: -2.3439786434173584
    5. 'n' → logprob: -3.3439786434173584
    6. ' note' → logprob: -4.5939788818359375
    7. ' phrase' → logprob: -4.5939788818359375
    8. ' chaîne' → logprob: -4.5939788818359375
    9. 'val' → logprob: -5.3439788818359375
    10. 'note' → logprob: -6.0939788818359375

Token 32: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38058140873908997
    2. 'val' → logprob: -1.7555813789367676
    3. 'n' → logprob: -2.8805813789367676
    4. 'value' → logprob: -3.6305813789367676
    5. 's' → logprob: -4.505581378936768
    6. 'user' → logprob: -4.505581378936768
    7. 'v' → logprob: -4.630581378936768
    8. '_' → logprob: -4.880581378936768
    9. 'u' → logprob: -5.505581378936768
    10. 'a' → logprob: -5.630581378936768

Token 33: ' qui' (ID: 2780)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.5428394079208374
    2. 'value' → logprob: -1.6678394079208374
    3. 'x' → logprob: -1.7928394079208374
    4. 'une' → logprob: -3.042839527130127
    5. ' puis' → logprob: -3.167839527130127
    6. 'input' → logprob: -3.417839527130127
    7. 'n' → logprob: -3.417839527130127
    8. ' la' → logprob: -3.667839527130127
    9. ' ' → logprob: -3.792839527130127
    10. ' une' → logprob: -3.917839527130127

Token 34: ' sera' (ID: 15511)
  Prédit: ' sera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.05399945005774498
    2. 'sera' → logprob: -4.053999423980713
    3. 's' → logprob: -4.303999423980713
    4. ' s' → logprob: -5.678999423980713
    5. ' est' → logprob: -5.803999423980713
    6. ' =' → logprob: -6.303999423980713
    7. ' n' → logprob: -6.303999423980713
    8. 'ser' → logprob: -6.303999423980713
    9. '_' → logprob: -6.553999423980713
    10. 'est' → logprob: -7.053999423980713

Token 35: ' interpr' (ID: 106412)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.9542320966720581
    2. ' convert' → logprob: -1.329232096672058
    3. ' stock' → logprob: -1.704232096672058
    4. ' utilisée' → logprob: -2.2042322158813477
    5. 'stock' → logprob: -3.5792322158813477
    6. 'ex' → logprob: -4.579232215881348
    7. 'util' → logprob: -5.454232215881348
    8. ' multip' → logprob: -5.954232215881348
    9. ' ensuite' → logprob: -6.204232215881348
    10. ' évalu' → logprob: -6.329232215881348

Token 36: 'ét' (ID: 3913)
  Prédit: 'ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.055011145770549774
    2. 'é' → logprob: -3.180011034011841
    3. 'été' → logprob: -4.80501127243042
    4. 'et' → logprob: -5.93001127243042
    5. 'êt' → logprob: -7.93001127243042
    6. 'étés' → logprob: -8.430010795593262
    7. 'étation' → logprob: -9.305010795593262
    8. 'éter' → logprob: -9.680010795593262
    9. '"' → logprob: -9.805010795593262
    10. '#' → logprob: -10.305010795593262

Token 37: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11019563674926758
    2. 'e' → logprob: -2.6101956367492676
    3. 'ée' → logprob: -3.4851956367492676
    4. ' ' → logprob: -10.23519515991211
    5. '�' → logprob: -10.23519515991211
    6. '```' → logprob: -10.98519515991211
    7. 'u' → logprob: -11.36019515991211
    8. 'ee' → logprob: -11.61019515991211
    9. ''' → logprob: -12.23519515991211
    10. '`' → logprob: -12.36019515991211

Token 38: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0066965422593057156
    2. ' comme' → logprob: -6.256696701049805
    3. 'comme' → logprob: -7.256696701049805
    4. 's' → logprob: -7.506696701049805
    5. '  ' → logprob: -7.506696701049805
    6. ',' → logprob: -7.631696701049805
    7. '_' → logprob: -7.881696701049805
    8. 'e' → logprob: -7.881696701049805
    9. ' as' → logprob: -8.381696701049805
    10. 'a' → logprob: -8.506696701049805

Token 39: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2366645187139511
    2. 'un' → logprob: -2.9866645336151123
    3. ' une' → logprob: -3.1116645336151123
    4. 'une' → logprob: -3.1116645336151123
    5. ' ' → logprob: -3.3616645336151123
    6. 'l' → logprob: -3.8616645336151123
    7. ' l' → logprob: -5.236664295196533
    8. 'a' → logprob: -5.611664295196533
    9. 'e' → logprob: -6.736664295196533
    10. ' u' → logprob: -7.486664295196533

Token 40: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18363355100154877
    2. ' chaîne' → logprob: -3.18363356590271
    3. ' nombre' → logprob: -3.93363356590271
    4. 'nombre' → logprob: -3.93363356590271
    5. ' espace' → logprob: -4.183633327484131
    6. 'ex' → logprob: -4.933633327484131
    7. ' )' → logprob: -5.058633327484131
    8. ' ' → logprob: -5.183633327484131
    9. ' exponent' → logprob: -5.433633327484131
    10. '.' → logprob: -5.683633327484131

Token 41: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1974327564239502
    2. '\' → logprob: -1.9474327564239502
    3. '_' → logprob: -2.19743275642395
    4. '.' → logprob: -2.82243275642395
    5. 'input' → logprob: -2.82243275642395
    6. 'entrée' → logprob: -2.82243275642395
    7. ' ' → logprob: -3.07243275642395
    8. 'd' → logprob: -3.07243275642395
    9. 'x' → logprob: -3.57243275642395
    10. 'v' → logprob: -3.82243275642395

Token 42: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16199526190757751
    2. ' caractères' → logprob: -1.9119952917099
    3. ' caract' → logprob: -7.4119954109191895
    4. ' caractère' → logprob: -7.7869954109191895
    5. ' car' → logprob: -8.036994934082031
    6. ' caracteres' → logprob: -8.911994934082031
    7. 'texte' → logprob: -9.411994934082031
    8. 's' → logprob: -9.536994934082031
    9. ' ' → logprob: -9.536994934082031
    10. '_car' → logprob: -11.661994934082031

Token 43: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9182312488555908
    2. 'v' → logprob: -1.4182312488555908
    3. 'n' → logprob: -1.9182312488555908
    4. 'user' → logprob: -2.793231248855591
    5. 'val' → logprob: -2.918231248855591
    6. 'u' → logprob: -3.418231248855591
    7. 'value' → logprob: -3.918231248855591
    8. 's' → logprob: -4.293231010437012
    9. 'input' → logprob: -4.793231010437012
    10. 'i' → logprob: -4.918231010437012

Token 44: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055463600903749466
    2. ' )' → logprob: -2.9304635524749756
    3. ' d' → logprob: -9.430463790893555
    4. ').' → logprob: -9.430463790893555
    5. ' pour' → logprob: -10.055463790893555
    6. '')' → logprob: -10.305463790893555
    7. ')s' → logprob: -10.430463790893555
    8. ' ' → logprob: -10.430463790893555
    9. ')d' → logprob: -10.430463790893555
    10. ',' → logprob: -10.805463790893555

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039373442996293306
    2. ' )' → logprob: -8.250393867492676
    3. 'e' → logprob: -9.625393867492676
    4. ',' → logprob: -11.375393867492676
    5. '')' → logprob: -11.500393867492676
    6. 'a' → logprob: -11.500393867492676
    7. '`)' → logprob: -12.000393867492676
    8. ' ' → logprob: -12.250393867492676
    9. '")' → logprob: -12.875393867492676
    10. ').' → logprob: -13.125393867492676

Token 46: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1721551418304443
    2. 'n' → logprob: -1.2971551418304443
    3. 'v' → logprob: -1.5471551418304443
    4. 'val' → logprob: -2.9221551418304443
    5. 'u' → logprob: -3.5471551418304443
    6. 's' → logprob: -3.7971551418304443
    7. 'i' → logprob: -3.7971551418304443
    8. 'user' → logprob: -3.7971551418304443
    9. 'value' → logprob: -3.9221551418304443
    10. '#' → logprob: -4.422155380249023

Token 47: ' input' (ID: 3422)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31156712770462036
    2. 'user' → logprob: -2.5615670680999756
    3. 'value' → logprob: -2.5615670680999756
    4. 'x' → logprob: -2.9365670680999756
    5. 'input' → logprob: -4.311567306518555
    6. 's' → logprob: -4.811567306518555
    7. '#' → logprob: -4.936567306518555
    8. 'nombre' → logprob: -4.936567306518555
    9. 'n' → logprob: -5.186567306518555
    10. 'entrée' → logprob: -5.561567306518555

Token 48: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029618926346302032
    2. '('' → logprob: -6.127962112426758
    3. '("' → logprob: -8.502962112426758
    4. '(
' → logprob: -8.627962112426758
    5. '("")' → logprob: -9.252962112426758
    6. '()' → logprob: -9.252962112426758
    7. '("("' → logprob: -9.752962112426758
    8. ')' → logprob: -10.252962112426758
    9. ' (' → logprob: -10.377962112426758
    10. ' ' → logprob: -11.002962112426758

Token 49: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004346806090325117
    2. ')' → logprob: -6.50434684753418
    3. '(
' → logprob: -6.75434684753418
    4. '('' → logprob: -7.62934684753418
    5. ' (' → logprob: -8.25434684753418
    6. ' ' → logprob: -8.62934684753418
    7. '()' → logprob: -8.75434684753418
    8. ':' → logprob: -9.37934684753418
    9. ',' → logprob: -9.50434684753418
    10. '.' → logprob: -10.00434684753418

Token 50: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23776526749134064
    2. '("' → logprob: -2.487765312194824
    3. '()' → logprob: -2.987765312194824
    4. '('' → logprob: -3.487765312194824
    5. '("")' → logprob: -4.112765312194824
    6. ' une' → logprob: -4.612765312194824
    7. '(prompt' → logprob: -5.237765312194824
    8. ' un' → logprob: -6.112765312194824
    9. 'une' → logprob: -6.737765312194824
    10. ' ' → logprob: -6.862765312194824

Token 51: ' invite' (ID: 26191)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.72614586353302
    2. ' message' → logprob: -1.72614586353302
    3. 'message' → logprob: -2.2261457443237305
    4. ')' → logprob: -2.7261457443237305
    5. '()' → logprob: -3.1011457443237305
    6. 'entrée' → logprob: -4.3511457443237305
    7. ' invite' → logprob: -4.6011457443237305
    8. '('' → logprob: -4.9761457443237305
    9. 's' → logprob: -5.1011457443237305
    10. '(prompt' → logprob: -5.2261457443237305

Token 52: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0958215519785881
    2. ' ' → logprob: -3.3458216190338135
    3. '"' → logprob: -4.345821380615234
    4. ''' → logprob: -4.845821380615234
    5. '('' → logprob: -5.345821380615234
    6. '`' → logprob: -5.345821380615234
    7. ' (' → logprob: -5.470821380615234
    8. ')' → logprob: -5.845821380615234
    9. '("' → logprob: -5.970821380615234
    10. '("")' → logprob: -6.095821380615234

Token 53: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3557712435722351
    2. ' l' → logprob: -1.2307713031768799
    3. '	l' → logprob: -5.355771064758301
    4. ' lâ' → logprob: -7.480771064758301
    5. 'à' → logprob: -7.855771064758301
    6. ' ' → logprob: -8.4807710647583
    7. ' ' → logprob: -8.8557710647583
    8. '­l' → logprob: -8.8557710647583
    9. '```' → logprob: -8.8557710647583
    10. 'la' → logprob: -9.2307710647583

Token 54: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.024788595736026764
    2. ''' → logprob: -4.3997883796691895
    3. 'a' → logprob: -5.3997883796691895
    4. '’utilisateur' → logprob: -6.0247883796691895
    5. 'e' → logprob: -6.5247883796691895
    6. 'u' → logprob: -6.8997883796691895
    7. '')' → logprob: -7.1497883796691895
    8. ''entrée' → logprob: -7.2747883796691895
    9. ''util' → logprob: -8.149788856506348
    10. ''user' → logprob: -8.399788856506348

Token 55: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22085607051849365
    2. ',' → logprob: -3.345856189727783
    3. 's' → logprob: -3.470856189727783
    4. ' ' → logprob: -3.470856189727783
    5. ')' → logprob: -3.720856189727783
    6. '.' → logprob: -3.970856189727783
    7. ':' → logprob: -4.095856189727783
    8. '"' → logprob: -4.720856189727783
    9. ''' → logprob: -5.720856189727783
    10. ' (' → logprob: -5.720856189727783

Token 56: ' attend' (ID: 13384)
  Prédit: ' récup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récup' → logprob: -0.9942686557769775
    2. ' lit' → logprob: -1.3692686557769775
    3. 'lit' → logprob: -1.9942686557769775
    4. 'att' → logprob: -2.7442686557769775
    5. ' attend' → logprob: -3.1192686557769775
    6. 'ren' → logprob: -3.3692686557769775
    7. ' stock' → logprob: -3.7442686557769775
    8. ' retourne' → logprob: -3.7442686557769775
    9. 'r' → logprob: -3.8692686557769775
    10. ' ren' → logprob: -4.494268417358398

Token 57: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2242568731307983
    2. ' une' → logprob: -1.3492568731307983
    3. ' l' → logprob: -1.9742568731307983
    4. ' la' → logprob: -1.9742568731307983
    5. ' que' → logprob: -3.599256992340088
    6. '()' → logprob: -3.599256992340088
    7. 's' → logprob: -3.599256992340088
    8. 'une' → logprob: -3.849256992340088
    9. 'l' → logprob: -4.474256992340088
    10. '  ' → logprob: -4.974256992340088

Token 58: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10461239516735077
    2. ''' → logprob: -3.104612350463867
    3. ''une' → logprob: -3.479612350463867
    4. ' ' → logprob: -4.979612350463867
    5. 'u' → logprob: -5.229612350463867
    6. 'l' → logprob: -6.354612350463867
    7. ''il' → logprob: -6.479612350463867
    8. ''utilisateur' → logprob: -6.479612350463867
    9. ' e' → logprob: -6.604612350463867
    10. ''un' → logprob: -6.604612350463867

Token 59: ' sais' (ID: 30010)
  Prédit: ' sais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.0893760547041893
    2. ' ' → logprob: -2.8393759727478027
    3. ' entre' → logprob: -4.589375972747803
    4. ' frappe' → logprob: -5.464375972747803
    5. ' sa' → logprob: -6.214375972747803
    6. 's' → logprob: -6.339375972747803
    7. ' )' → logprob: -6.464375972747803
    8. ' tape' → logprob: -6.589375972747803
    9. ')' → logprob: -6.964375972747803
    10. ' fournisse' → logprob: -7.214375972747803

Token 60: 'isse' (ID: 6969)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.576109766960144
    2. 's' → logprob: -0.951109766960144
    3. 'se' → logprob: -3.4511098861694336
    4. 'ss' → logprob: -4.201109886169434
    5. 'es' → logprob: -6.201109886169434
    6. 'isse' → logprob: -6.951109886169434
    7. 't' → logprob: -6.951109886169434
    8. 'esse' → logprob: -8.576109886169434
    9. '   ' → logprob: -9.701109886169434
    10. '
' → logprob: -10.076109886169434

Token 61: ' quelque' (ID: 36359)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2805051803588867
    2. ' une' → logprob: -1.9055051803588867
    3. ' un' → logprob: -3.6555051803588867
    4. 'a' → logprob: -4.405505180358887
    5. ''' → logprob: -5.030505180358887
    6. '  ' → logprob: -5.155505180358887
    7. 'u' → logprob: -5.155505180358887
    8. 'e' → logprob: -5.155505180358887
    9. 'une' → logprob: -5.405505180358887
    10. ' :' → logprob: -5.530505180358887

Token 62: ' chose' (ID: 15505)
  Prédit: ' chose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chose' → logprob: -0.2828274369239807
    2. 'ch' → logprob: -1.532827377319336
    3. '_' → logprob: -3.907827377319336
    4. '_ch' → logprob: -5.407827377319336
    5. ' ' → logprob: -5.657827377319336
    6. 'un' → logprob: -7.032827377319336
    7. 'une' → logprob: -7.532827377319336
    8. '   ' → logprob: -8.407827377319336
    9. '```' → logprob: -8.782827377319336
    10. 'n' → logprob: -9.657827377319336

Token 63: ' au' (ID: 2791)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4039714336395264
    2. '#' → logprob: -1.9039714336395264
    3. 'v' → logprob: -2.4039714336395264
    4. '\' → logprob: -2.5289714336395264
    5. 's' → logprob: -2.7789714336395264
    6. 'user' → logprob: -2.7789714336395264
    7. '.' → logprob: -2.9039714336395264
    8. 'n' → logprob: -3.0289714336395264
    9. 'val' → logprob: -3.1539714336395264
    10. '
' → logprob: -3.6539714336395264

Token 64: ' clavier' (ID: 187878)
  Prédit: ' clavier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clavier' → logprob: -0.1821153163909912
    2. 'cl' → logprob: -1.8071153163909912
    3. 't' → logprob: -7.30711555480957
    4. 'keyboard' → logprob: -8.05711555480957
    5. 'terminal' → logprob: -8.43211555480957
    6. 'stdin' → logprob: -8.68211555480957
    7. 'n' → logprob: -8.80711555480957
    8. ' ' → logprob: -9.05711555480957
    9. 'clave' → logprob: -9.30711555480957
    10. 'c' → logprob: -9.55711555480957

Token 65: ' puis' (ID: 18766)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4635117053985596
    2. 'x' → logprob: -1.5885117053985596
    3. 'v' → logprob: -1.8385117053985596
    4. '\' → logprob: -2.3385117053985596
    5. 'val' → logprob: -2.7135117053985596
    6. '#' → logprob: -3.0885117053985596
    7. '\n' → logprob: -3.3385117053985596
    8. '```' → logprob: -3.3385117053985596
    9. 'user' → logprob: -3.4635117053985596
    10. 'value' → logprob: -3.8385117053985596

Token 66: ' app' (ID: 1053)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.2044028490781784
    2. ' return' → logprob: -1.9544028043746948
    3. ' ren' → logprob: -3.8294029235839844
    4. 'return' → logprob: -4.954402923583984
    5. 'ren' → logprob: -5.954402923583984
    6. ' retour' → logprob: -6.079402923583984
    7. ' ' → logprob: -6.329402923583984
    8. '\' → logprob: -6.829402923583984
    9. ' returns' → logprob: -7.204402923583984
    10. 'r' → logprob: -7.204402923583984

Token 67: 'uie' (ID: 123775)
  Prédit: 'ara'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ara' → logprob: -1.0272918939590454
    2. 'end' → logprob: -1.7772918939590454
    3. 'ar' → logprob: -2.277291774749756
    4. 'el' → logprob: -2.402291774749756
    5. 'elle' → logprob: -2.402291774749756
    6. 'e' → logprob: -2.902291774749756
    7. 'a' → logprob: -3.027291774749756
    8. 'ent' → logprob: -4.277291774749756
    9. 'elé' → logprob: -4.652291774749756
    10. 'en' → logprob: -5.152291774749756

Token 68: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04243652895092964
    2. ' sur' → logprob: -3.9174365997314453
    3. '  ' → logprob: -4.417436599731445
    4. '(' → logprob: -5.792436599731445
    5. ')' → logprob: -6.292436599731445
    6. ' (' → logprob: -6.792436599731445
    7. 'sur' → logprob: -6.792436599731445
    8. ''' → logprob: -7.917436599731445
    9. '`' → logprob: -8.042436599731445
    10. ' )' → logprob: -8.292436599731445

Token 69: ' '' (ID: 461)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.3919307589530945
    2. ' Entr' → logprob: -1.3919308185577393
    3. 'entrée' → logprob: -3.1419308185577393
    4. 'Enter' → logprob: -4.64193058013916
    5. ' Enter' → logprob: -4.76693058013916
    6. 'entr' → logprob: -5.01693058013916
    7. ' entrée' → logprob: -5.51693058013916
    8. ' entr' → logprob: -6.89193058013916
    9. ' enter' → logprob: -7.01693058013916
    10. 'enter' → logprob: -7.64193058013916

Token 70: 'Entr' (ID: 46869)
  Prédit: 'Entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.263391375541687
    2. ' Entr' → logprob: -1.888391375541687
    3. 'Enter' → logprob: -2.8883914947509766
    4. ' Enter' → logprob: -4.013391494750977
    5. 'entrée' → logprob: -5.888391494750977
    6. ' entrée' → logprob: -6.763391494750977
    7. ' ' → logprob: -7.013391494750977
    8. 'entr' → logprob: -7.263391494750977
    9. ' entr' → logprob: -8.513391494750977
    10. ' ' → logprob: -8.763391494750977

Token 71: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.018418103456497192
    2. 'é' → logprob: -4.018418312072754
    3. 'er' → logprob: -8.268418312072754
    4. 'e' → logprob: -12.143418312072754
    5. 'ées' → logprob: -12.518418312072754
    6. 'éer' → logprob: -13.518418312072754
    7. 'ee' → logprob: -14.893418312072754
    8. 'rée' → logprob: -14.893418312072754
    9. 'ê' → logprob: -15.268418312072754
    10. 'ė' → logprob: -16.018417358398438

Token 72: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002157518407329917
    2. ' )' → logprob: -6.627157688140869
    3. ')
' → logprob: -8.377157211303711
    4. '#' → logprob: -9.002157211303711
    5. '.' → logprob: -9.377157211303711
    6. '```' → logprob: -9.502157211303711
    7. ',' → logprob: -9.877157211303711
    8. '(' → logprob: -10.127157211303711
    9. '')' → logprob: -10.502157211303711
    10. '()' → logprob: -10.627157211303711

Token 73: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8795308470726013
    2. 'x' → logprob: -1.254530906677246
    3. 'n' → logprob: -2.879530906677246
    4. '#' → logprob: -3.004530906677246
    5. 'v' → logprob: -3.004530906677246
    6. 'value' → logprob: -3.254530906677246
    7. 's' → logprob: -3.629530906677246
    8. 'user' → logprob: -3.754530906677246
    9. '\' → logprob: -4.004530906677246
    10. 'u' → logprob: -5.379530906677246

Token 74: ' float' (ID: 4428)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.882431149482727
    2. '#' → logprob: -1.632431149482727
    3. 'x' → logprob: -2.2574310302734375
    4. 'n' → logprob: -2.5074310302734375
    5. 'value' → logprob: -2.6324310302734375
    6. 'v' → logprob: -3.2574310302734375
    7. 'user' → logprob: -3.5074310302734375
    8. 's' → logprob: -3.8824310302734375
    9. 'a' → logprob: -4.8824310302734375
    10. '\' → logprob: -5.5074310302734375

Token 75: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.864272967912257e-05
    2. '('' → logprob: -9.625088691711426
    3. '(
' → logprob: -12.375088691711426
    4. '("("' → logprob: -12.500088691711426
    5. ' (' → logprob: -12.625088691711426
    6. ',' → logprob: -13.250088691711426
    7. '()' → logprob: -13.375088691711426
    8. '(

' → logprob: -13.625088691711426
    9. ')' → logprob: -14.000088691711426
    10. '("")' → logprob: -14.500088691711426

Token 76: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010783452307805419
    2. ' (' → logprob: -9.750107765197754
    3. ',' → logprob: -11.375107765197754
    4. '('' → logprob: -11.500107765197754
    5. '(
' → logprob: -11.750107765197754
    6. ' ' → logprob: -12.000107765197754
    7. '<|end|>' → logprob: -12.875107765197754
    8. ')' → logprob: -13.000107765197754
    9. '(convert' → logprob: -13.500107765197754
    10. '()' → logprob: -13.750107765197754

Token 77: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.06377513706684113
    2. 'i' → logprob: -3.063775062561035
    3. '(' → logprob: -4.438775062561035
    4. ' (' → logprob: -7.313775062561035
    5. 'e' → logprob: -7.563775062561035
    6. ')' → logprob: -7.688775062561035
    7. ' ' → logprob: -7.938775062561035
    8. 'ie' → logprob: -8.188775062561035
    9. ' it' → logprob: -9.188775062561035
    10. 'issez' → logprob: -9.188775062561035

Token 78: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010186777450144291
    2. ' ' → logprob: -5.010186672210693
    3. ' (' → logprob: -6.135186672210693
    4. ' la' → logprob: -8.135187149047852
    5. 'l' → logprob: -8.760187149047852
    6. '(input' → logprob: -8.760187149047852
    7. 's' → logprob: -9.260187149047852
    8. '<|end|>' → logprob: -9.385187149047852
    9. '(
' → logprob: -9.510187149047852
    10. '(s' → logprob: -10.010187149047852

Token 79: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017114682123064995
    2. '(' → logprob: -4.767114639282227
    3. ' (' → logprob: -5.142114639282227
    4. ' espace' → logprob: -7.267114639282227
    5. ' valeur' → logprob: -7.392114639282227
    6. ' )' → logprob: -7.642114639282227
    7. ' chaîne' → logprob: -8.767114639282227
    8. '  ' → logprob: -8.892114639282227
    9. '<|end|>' → logprob: -9.392114639282227
    10. ' string' → logprob: -9.517114639282227

Token 80: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001289640087634325
    2. 's' → logprob: -8.126289367675781
    3. ',' → logprob: -8.251289367675781
    4. ')' → logprob: -8.751289367675781
    5. '('' → logprob: -8.876289367675781
    6. '<|end|>' → logprob: -9.126289367675781
    7. '```' → logprob: -10.001289367675781
    8. '()' → logprob: -10.126289367675781
    9. '(
' → logprob: -10.251289367675781
    10. ' (' → logprob: -10.376289367675781

Token 81: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.5242170095443726
    2. '<|end|>' → logprob: -1.5242170095443726
    3. ' l' → logprob: -1.8992170095443726
    4. '_' → logprob: -2.149217128753662
    5. ' ' → logprob: -2.399217128753662
    6. ' un' → logprob: -3.649217128753662
    7. 'chaine' → logprob: -4.149217128753662
    8. ' string' → logprob: -4.274217128753662
    9. 'i' → logprob: -4.524217128753662
    10. ' caractère' → logprob: -4.774217128753662

Token 82: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015572358388453722
    2. ',' → logprob: -7.751557350158691
    3. 's' → logprob: -8.001557350158691
    4. '(
' → logprob: -8.626557350158691
    5. ' (' → logprob: -9.001557350158691
    6. '('' → logprob: -9.126557350158691
    7. ')' → logprob: -9.751557350158691
    8. '("""' → logprob: -10.251557350158691
    9. '()' → logprob: -10.376557350158691
    10. '<|end|>' → logprob: -10.501557350158691

Token 83: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5282490849494934
    2. ' ' → logprob: -0.9032490849494934
    3. ' une' → logprob: -5.778249263763428
    4. '  ' → logprob: -7.028249263763428
    5. 'un' → logprob: -7.153249263763428
    6. ' espace' → logprob: -9.27824878692627
    7. ''un' → logprob: -10.15324878692627
    8. ' u' → logprob: -10.27824878692627
    9. ' ' → logprob: -10.65324878692627
    10. ' a' → logprob: -11.15324878692627

Token 84: ' nombre' (ID: 9733)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.30046069622039795
    2. ' ' → logprob: -1.425460696220398
    3. ' nombre' → logprob: -4.3004608154296875
    4. 'es' → logprob: -6.1754608154296875
    5. ' espaces' → logprob: -7.1754608154296875
    6. '  ' → logprob: -7.3004608154296875
    7. 'nombre' → logprob: -7.8004608154296875
    8. ' space' → logprob: -7.8004608154296875
    9. ''espace' → logprob: -8.300460815429688
    10. 'space' → logprob: -8.425460815429688

Token 85: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2164192795753479
    2. 's' → logprob: -3.216419219970703
    3. 'x' → logprob: -3.341419219970703
    4. 'n' → logprob: -3.591419219970703
    5. ',' → logprob: -3.716419219970703
    6. 'a' → logprob: -3.841419219970703
    7. ')' → logprob: -4.591419219970703
    8. 'v' → logprob: -5.841419219970703
    9. '(
' → logprob: -5.841419219970703
    10. '.' → logprob: -5.966419219970703

Token 86: ' virg' (ID: 165362)
  Prédit: ' virg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' virg' → logprob: -1.2375969886779785
    2. '   ' → logprob: -1.3625969886779785
    3. 'vir' → logprob: -1.4875969886779785
    4. '```' → logprob: -1.7375969886779785
    5. '    
' → logprob: -4.2375969886779785
    6. '  ' → logprob: -4.2375969886779785
    7. ' ' → logprob: -5.7375969886779785
    8. ' ' → logprob: -5.7375969886779785
    9. '``' → logprob: -5.9875969886779785
    10. '	' → logprob: -6.3625969886779785

Token 87: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.008830239064991474
    2. 'ale' → logprob: -5.1338300704956055
    3. 'le' → logprob: -7.0088300704956055
    4. 'èle' → logprob: -7.7588300704956055
    5. 'ole' → logprob: -8.133830070495605
    6. '```' → logprob: -8.133830070495605
    7. 'elle' → logprob: -8.258830070495605
    8. 'e' → logprob: -8.383830070495605
    9. 'ile' → logprob: -8.758830070495605
    10. '`' → logprob: -10.258830070495605

Token 88: ' flott' (ID: 108700)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17246870696544647
    2. 'f' → logprob: -3.672468662261963
    3. ')' → logprob: -4.047468662261963
    4. 'i' → logprob: -4.422468662261963
    5. 'e' → logprob: -4.547468662261963
    6. 'c' → logprob: -4.672468662261963
    7. 'space' → logprob: -4.672468662261963
    8. '  ' → logprob: -4.797468662261963
    9. ' i' → logprob: -4.797468662261963
    10. ',' → logprob: -4.922468662261963

Token 89: 'ante' (ID: 2116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.672934889793396
    2. 'é' → logprob: -0.922934889793396
    3. 'e' → logprob: -2.6729350090026855
    4. ' point' → logprob: -4.6729350090026855
    5. 'ée' → logprob: -5.0479350090026855
    6. 'u' → logprob: -6.7979350090026855
    7. 'a' → logprob: -7.1729350090026855
    8. 'ante' → logprob: -7.7979350090026855
    9. 'o' → logprob: -8.047934532165527
    10. 'eture' → logprob: -8.172934532165527

Token 90: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9952079653739929
    2. 'v' → logprob: -0.9952079653739929
    3. 'x' → logprob: -1.4952080249786377
    4. '#' → logprob: -4.620207786560059
    5. '
' → logprob: -4.870207786560059
    6. 'val' → logprob: -5.245207786560059
    7. 'a' → logprob: -5.995207786560059
    8. 'value' → logprob: -6.370207786560059
    9. ' 
' → logprob: -6.620207786560059
    10. '\n' → logprob: -6.745207786560059

Token 91: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1840648055076599
    2. ' )' → logprob: -1.8090648651123047
    3. ' ' → logprob: -5.559064865112305
    4. ' float' → logprob: -8.684064865112305
    5. 'float' → logprob: -9.809064865112305
    6. ' ),' → logprob: -10.059064865112305
    7. ' ' → logprob: -10.559064865112305
    8. ',' → logprob: -10.684064865112305
    9. ').' → logprob: -10.684064865112305
    10. '),' → logprob: -10.809064865112305

Token 92: ' déc' (ID: 8498)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7559294700622559
    2. ' ' → logprob: -1.0059294700622559
    3. ')' → logprob: -1.8809294700622559
    4. ' à' → logprob: -5.005929470062256
    5. '  ' → logprob: -6.255929470062256
    6. ' space' → logprob: -7.005929470062256
    7. ' espace' → logprob: -7.005929470062256
    8. 's' → logprob: -8.005929946899414
    9. ' ),' → logprob: -8.255929946899414
    10. ' a' → logprob: -8.505929946899414

Token 93: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.5272818207740784
    2. 'im' → logprob: -1.0272817611694336
    3. 'al' → logprob: -4.277281761169434
    4. 'om' → logprob: -4.402281761169434
    5. '```' → logprob: -4.402281761169434
    6. 'o' → logprob: -5.152281761169434
    7. 'ale' → logprob: -5.652281761169434
    8. 'm' → logprob: -7.527281761169434
    9. 'i' → logprob: -7.652281761169434
    10. ')' → logprob: -7.777281761169434

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015908108616713434
    2. ' )' → logprob: -8.87515926361084
    3. 'e' → logprob: -12.62515926361084
    4. ').' → logprob: -13.00015926361084
    5. ',' → logprob: -13.25015926361084
    6. '.' → logprob: -13.25015926361084
    7. 'a' → logprob: -13.50015926361084
    8. '')' → logprob: -13.62515926361084
    9. 's' → logprob: -13.62515926361084
    10. '),' → logprob: -14.25015926361084

Token 95: 'L' (ID: 43)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3338179886341095
    2. 'n' → logprob: -1.708817958831787
    3. 'v' → logprob: -2.583817958831787
    4. 'val' → logprob: -4.833817958831787
    5. '#' → logprob: -4.958817958831787
    6. 'value' → logprob: -5.583817958831787
    7. '
' → logprob: -6.333817958831787
    8. 'a' → logprob: -6.583817958831787
    9. 'r' → logprob: -7.083817958831787
    10. '

' → logprob: -7.583817958831787

Token 96: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.920432984828949
    2. 'n' → logprob: -1.6704330444335938
    3. 'e' → logprob: -1.7954330444335938
    4. 'o' → logprob: -2.2954330444335938
    5. 'i' → logprob: -2.6704330444335938
    6. '=' → logprob: -4.045433044433594
    7. ' =' → logprob: -4.670433044433594
    8. '_' → logprob: -4.920433044433594
    9. '1' → logprob: -5.045433044433594
    10. 'u' → logprob: -5.170433044433594

Token 97: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.002151688328012824
    2. 'float' → logprob: -6.2521514892578125
    3. ' input' → logprob: -8.502151489257812
    4. ' ' → logprob: -11.252151489257812
    5. ' ' → logprob: -12.877151489257812
    6. 'input' → logprob: -12.877151489257812
    7. '=float' → logprob: -13.877151489257812
    8. '<float' → logprob: -15.252151489257812
    9. ' floating' → logprob: -15.377151489257812
    10. '(float' → logprob: -15.877151489257812

Token 98: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31336575746536255
    2. '(input' → logprob: -1.3133656978607178
    3. '('' → logprob: -10.063365936279297
    4. ' (' → logprob: -10.438365936279297
    5. '("("' → logprob: -11.313365936279297
    6. '("' → logprob: -12.938365936279297
    7. '(">' → logprob: -12.938365936279297
    8. '(user' → logprob: -13.063365936279297
    9. '(
' → logprob: -13.188365936279297
    10. 'input' → logprob: -13.313365936279297

Token 99: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055508822202682495
    2. '("("' → logprob: -3.305508852005005
    3. '('' → logprob: -4.680508613586426
    4. '("' → logprob: -5.055508613586426
    5. '()' → logprob: -6.805508613586426
    6. '(">' → logprob: -8.555508613586426
    7. '("")' → logprob: -8.930508613586426
    8. '(""))' → logprob: -9.555508613586426
    9. '("(' → logprob: -9.555508613586426
    10. '())' → logprob: -10.555508613586426

Token 100: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3087894022464752
    2. '+' → logprob: -1.8087893724441528
    3. '#' → logprob: -3.0587894916534424
    4. ' ' → logprob: -3.6837894916534424
    5. ' 
' → logprob: -4.433789253234863
    6. ')' → logprob: -5.683789253234863
    7. '**' → logprob: -6.183789253234863
    8. ' *' → logprob: -6.308789253234863
    9. ',' → logprob: -6.433789253234863
    10. '
' → logprob: -6.558789253234863

Token 101: ' Cal' (ID: 4453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42125827074050903
    2. 'print' → logprob: -2.9212582111358643
    3. 'r' → logprob: -3.1712582111358643
    4. 'if' → logprob: -3.2962582111358643
    5. 'pi' → logprob: -4.171258449554443
    6. 'C' → logprob: -4.171258449554443
    7. 'surface' → logprob: -4.171258449554443
    8. 'c' → logprob: -4.421258449554443
    9. ' #' → logprob: -4.421258449554443
    10. 's' → logprob: -4.546258449554443

Token 102: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.3685201406478882
    2. 'c' → logprob: -1.2435201406478882
    3. 'cule' → logprob: -4.118520259857178
    4. 'culate' → logprob: -6.243520259857178
    5. 'culator' → logprob: -7.868520259857178
    6. '
' → logprob: -8.36851978302002
    7. '```' → logprob: -8.61851978302002
    8. '#' → logprob: -9.11851978302002
    9. 'cular' → logprob: -9.49351978302002
    10. '

' → logprob: -9.49351978302002

Token 103: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23550236225128174
    2. ' ' → logprob: -2.985502243041992
    3. 's' → logprob: -3.235502243041992
    4. ' (' → logprob: -3.360502243041992
    5. '_' → logprob: -3.735502243041992
    6. ' la' → logprob: -5.235502243041992
    7. 'a' → logprob: -5.235502243041992
    8. 'L' → logprob: -5.485502243041992
    9. 'e' → logprob: -5.485502243041992
    10. '2' → logprob: -5.610502243041992

Token 104: ' cube' (ID: 46822)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9152251482009888
    2. ' pér' → logprob: -1.2902251482009888
    3. 'volume' → logprob: -2.290225028991699
    4. ' volume' → logprob: -2.540225028991699
    5. 'per' → logprob: -2.915225028991699
    6. ' per' → logprob: -3.540225028991699
    7. ' rayon' → logprob: -4.540225028991699
    8. 'surface' → logprob: -4.915225028991699
    9. 'ray' → logprob: -5.290225028991699
    10. ' cercle' → logprob: -5.415225028991699

Token 105: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31567272543907166
    2. 'L' → logprob: -1.940672755241394
    3. '_' → logprob: -3.5656726360321045
    4. '(' → logprob: -4.065672874450684
    5. ' ' → logprob: -4.065672874450684
    6. 'de' → logprob: -4.190672874450684
    7. ' (' → logprob: -4.190672874450684
    8. ' L' → logprob: -4.315672874450684
    9. 'd' → logprob: -4.815672874450684
    10. '(L' → logprob: -6.190672874450684

Token 106: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20142406225204468
    2. ' L' → logprob: -1.7014241218566895
    3. ' la' → logprob: -12.326423645019531
    4. 'l' → logprob: -12.951423645019531
    5. ' ' → logprob: -12.951423645019531
    6. ' ' → logprob: -14.451423645019531
    7. '(L' → logprob: -15.201423645019531
    8. ' l' → logprob: -15.576423645019531
    9. ' the' → logprob: -15.951423645019531
    10. '	L' → logprob: -16.20142364501953

Token 107: ' valeur' (ID: 41664)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.44536763429641724
    2. ' L' → logprob: -1.0703675746917725
    3. ' nombre' → logprob: -5.070367813110352
    4. ' valeur' → logprob: -5.445367813110352
    5. ' ' → logprob: -6.195367813110352
    6. 'nombre' → logprob: -6.570367813110352
    7. ' longueur' → logprob: -7.070367813110352
    8. ' variable' → logprob: -7.320367813110352
    9. 'val' → logprob: -8.570367813110352
    10. ' cube' → logprob: -9.445367813110352

Token 108: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005728855729103088
    2. '**' → logprob: -6.255728721618652
    3. ' L' → logprob: -6.380728721618652
    4. '*' → logprob: -7.880728721618652
    5. ' **' → logprob: -7.880728721618652
    6. ' ' → logprob: -8.255728721618652
    7. ',' → logprob: -8.380728721618652
    8. '.' → logprob: -8.755728721618652
    9. '#' → logprob: -9.005728721618652
    10. ' (' → logprob: -9.880728721618652

Token 109: ',' (ID: 11)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04644889757037163
    2. 'result' → logprob: -4.421448707580566
    3. '**' → logprob: -4.421448707580566
    4. 'C' → logprob: -5.171448707580566
    5. 'v' → logprob: -5.796448707580566
    6. 'c' → logprob: -6.671448707580566
    7. ' L' → logprob: -6.796448707580566
    8. ' **' → logprob: -6.796448707580566
    9. '*' → logprob: -6.921448707580566
    10. '```' → logprob: -7.171448707580566

Token 110: ' c' (ID: 274)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.40203410387039185
    2. ' L' → logprob: -1.277034044265747
    3. ' ' → logprob: -4.152034282684326
    4. '3' → logprob: -4.402034282684326
    5. '**' → logprob: -5.277034282684326
    6. ' =' → logprob: -5.402034282684326
    7. ' **' → logprob: -5.527034282684326
    8. '*' → logprob: -6.152034282684326
    9. ' ,' → logprob: -6.777034282684326
    10. ' *' → logprob: -6.902034282684326

Token 111: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3776586353778839
    2. '#' → logprob: -2.3776586055755615
    3. ''' → logprob: -2.6276586055755615
    4. 'e' → logprob: -3.1276586055755615
    5. 'alc' → logprob: -3.8776586055755615
    6. 'al' → logprob: -3.8776586055755615
    7. 'alculate' → logprob: -4.627658843994141
    8. 'est' → logprob: -4.877658843994141
    9. '=' → logprob: -5.627658843994141
    10. ''s' → logprob: -5.752658843994141

Token 112: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.3371342420578003
    2. '-' → logprob: -1.3371342420578003
    3. 'à' → logprob: -4.58713436126709
    4. 'L' → logprob: -4.83713436126709
    5. '=' → logprob: -5.96213436126709
    6. ' à' → logprob: -6.21213436126709
    7. ' L' → logprob: -8.46213436126709
    8. 'a' → logprob: -8.58713436126709
    9. ' =' → logprob: -8.83713436126709
    10. 'A' → logprob: -9.71213436126709

Token 113: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.1334875375032425
    2. 'à' → logprob: -2.3834874629974365
    3. '-dire' → logprob: -4.383487701416016
    4. '-à' → logprob: -4.883487701416016
    5. '-' → logprob: -5.008487701416016
    6. ' dire' → logprob: -6.383487701416016
    7. '```' → logprob: -6.633487701416016
    8. 'l' → logprob: -7.383487701416016
    9. 'a' → logprob: -7.508487701416016
    10. 'd' → logprob: -7.758487701416016

Token 114: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2811863422393799
    2. 'L' → logprob: -1.4061863422393799
    3. ' ' → logprob: -10.6561861038208
    4. ' ' → logprob: -12.9061861038208
    5. ' `' → logprob: -12.9061861038208
    6. '  ' → logprob: -13.0311861038208
    7. ' la' → logprob: -13.7811861038208
    8. '```' → logprob: -14.0311861038208
    9. ' le' → logprob: -14.2811861038208
    10. ' (' → logprob: -14.7811861038208

Token 115: ' multip' (ID: 17524)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5059422850608826
    2. ' **' → logprob: -1.0059423446655273
    3. ' *' → logprob: -3.5059423446655273
    4. '*' → logprob: -6.755942344665527
    5. '³' → logprob: -10.005942344665527
    6. ' ' → logprob: -10.255942344665527
    7. ' ***' → logprob: -10.255942344665527
    8. '3' → logprob: -10.880942344665527
    9. ' ' → logprob: -11.005942344665527
    10. '***' → logprob: -11.380942344665527

Token 116: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.0382906012237072
    2. 'li' → logprob: -3.288290500640869
    3. 'lication' → logprob: -9.288290977478027
    4. 'lic' → logprob: -9.913290977478027
    5. 'l' → logprob: -10.038290977478027
    6. 'lique' → logprob: -11.663290977478027
    7. 'lé' → logprob: -11.788290977478027
    8. '*' → logprob: -11.788290977478027
    9. '<li' → logprob: -12.413290977478027
    10. 'liable' → logprob: -12.413290977478027

Token 117: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15537682175636292
    2. '*' → logprob: -2.28037691116333
    3. ' par' → logprob: -4.40537691116333
    4. '<|end|>' → logprob: -4.53037691116333
    5. ' ' → logprob: -5.53037691116333
    6. ' ' → logprob: -5.65537691116333
    7. ' by' → logprob: -5.90537691116333
    8. '```' → logprob: -6.15537691116333
    9. '  ' → logprob: -6.40537691116333
    10. ' trois' → logprob: -7.65537691116333

Token 118: ' L' (ID: 451)
  Prédit: ' lui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lui' → logprob: -0.6208338141441345
    2. ' L' → logprob: -1.1208338737487793
    3. 'L' → logprob: -2.1208338737487793
    4. ' ' → logprob: -4.620833873748779
    5. ' itself' → logprob: -5.870833873748779
    6. ' ' → logprob: -6.370833873748779
    7. '  ' → logprob: -7.870833873748779
    8. 'l' → logprob: -7.870833873748779
    9. 'it' → logprob: -8.495833396911621
    10. '```' → logprob: -8.620833396911621

Token 119: ' puis' (ID: 18766)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5499557852745056
    2. '**' → logprob: -1.6749558448791504
    3. '*' → logprob: -1.7999558448791504
    4. ' **' → logprob: -2.9249558448791504
    5. ' ' → logprob: -4.29995584487915
    6. '3' → logprob: -7.04995584487915
    7. ' *
' → logprob: -7.54995584487915
    8. ' ' → logprob: -8.049955368041992
    9. '  ' → logprob: -8.549955368041992
    10. '³' → logprob: -8.549955368041992

Token 120: ' multip' (ID: 17524)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04349921643733978
    2. ' ' → logprob: -3.668499231338501
    3. ' L' → logprob: -4.668498992919922
    4. '<|end|>' → logprob: -6.293498992919922
    5. ' *' → logprob: -6.668498992919922
    6. ' lui' → logprob: -6.918498992919922
    7. 'L' → logprob: -7.168498992919922
    8. 'par' → logprob: -7.543498992919922
    9. ' multip' → logprob: -7.793498992919922
    10. '*' → logprob: -7.793498992919922

Token 121: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.026592520996928215
    2. 'li' → logprob: -3.651592493057251
    3. 'lé' → logprob: -9.026592254638672
    4. 'l' → logprob: -10.276592254638672
    5. 'lication' → logprob: -10.901592254638672
    6. 'lic' → logprob: -10.901592254638672
    7. 'lie' → logprob: -11.526592254638672
    8. '*' → logprob: -11.901592254638672
    9. '<li' → logprob: -11.964092254638672
    10. 'iqué' → logprob: -12.026592254638672

Token 122: ' encore' (ID: 14043)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.0031568072736263275
    2. 'par' → logprob: -6.003156661987305
    3. ' ' → logprob: -8.128156661987305
    4. '<|end|>' → logprob: -8.628156661987305
    5. '*' → logprob: -9.628156661987305
    6. ' *' → logprob: -10.503156661987305
    7. ' by' → logprob: -10.628156661987305
    8. ' L' → logprob: -10.878156661987305
    9. '_par' → logprob: -11.253156661987305
    10. 'L' → logprob: -11.378156661987305

Token 123: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07050428539514542
    2. 'par' → logprob: -2.6955041885375977
    3. ' ' → logprob: -7.945504188537598
    4. '*' → logprob: -9.195504188537598
    5. ' fois' → logprob: -10.320504188537598
    6. ' L' → logprob: -10.445504188537598
    7. ' *' → logprob: -11.195504188537598
    8. '  ' → logprob: -11.695504188537598
    9. 'L' → logprob: -11.820504188537598
    10. '<|end|>' → logprob: -12.070504188537598

Token 124: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.07126020640134811
    2. 'L' → logprob: -2.6962602138519287
    3. ' ' → logprob: -7.32125997543335
    4. ' ' → logprob: -7.44625997543335
    5. ' lui' → logprob: -11.196260452270508
    6. ' ' → logprob: -11.321260452270508
    7. 'l' → logprob: -11.696260452270508
    8. ' l' → logprob: -11.821260452270508
    9. '  ' → logprob: -12.196260452270508
    10. '```' → logprob: -12.446260452270508

Token 125: ' (' (ID: 350)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.006893923506140709
    2. 'v' → logprob: -5.631894111633301
    3. ' V' → logprob: -7.131894111633301
    4. 'L' → logprob: -7.381894111633301
    5. 'volume' → logprob: -7.506894111633301
    6. 'C' → logprob: -8.1318941116333
    7. 'cube' → logprob: -8.3818941116333
    8. 'result' → logprob: -8.7568941116333
    9. ' volume' → logprob: -9.3818941116333
    10. '  
' → logprob: -9.6318941116333

Token 126: 'L' (ID: 43)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32815539836883545
    2. ' )' → logprob: -1.4531553983688354
    3. '*' → logprob: -3.578155517578125
    4. '**' → logprob: -5.203155517578125
    5. ' *' → logprob: -5.703155517578125
    6. ' ' → logprob: -6.203155517578125
    7. '*)' → logprob: -6.203155517578125
    8. ' L' → logprob: -7.078155517578125
    9. 'L' → logprob: -7.203155517578125
    10. '3' → logprob: -7.328155517578125

Token 127: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.735993504524231
    2. '**' → logprob: -1.360993504524231
    3. ' **' → logprob: -1.860993504524231
    4. '*' → logprob: -2.2359933853149414
    5. ' ' → logprob: -7.485993385314941
    6. ' ' → logprob: -7.735993385314941
    7. ')' → logprob: -7.985993385314941
    8. ' )' → logprob: -8.610993385314941
    9. '***' → logprob: -8.735993385314941
    10. ' ***' → logprob: -9.110993385314941

Token 128: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12708024680614471
    2. ' L' → logprob: -2.127080202102661
    3. ' ' → logprob: -9.002079963684082
    4. '*' → logprob: -11.877079963684082
    5. ')' → logprob: -12.002079963684082
    6. ' *' → logprob: -12.502079963684082
    7. ' ' → logprob: -12.627079963684082
    8. ' )' → logprob: -13.127079963684082
    9. '2' → logprob: -13.252079963684082
    10. '3' → logprob: -13.377079963684082

Token 129: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06199738010764122
    2. '*' → logprob: -2.811997413635254
    3. ' ' → logprob: -11.311997413635254
    4. ')' → logprob: -11.436997413635254
    5. ' ' → logprob: -12.686997413635254
    6. '**' → logprob: -13.436997413635254
    7. ' )' → logprob: -13.811997413635254
    8. '#' → logprob: -15.186997413635254
    9. ' **' → logprob: -15.561997413635254
    10. '*)' → logprob: -15.686997413635254

Token 130: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005931520834565163
    2. ' L' → logprob: -5.130931377410889
    3. ' ' → logprob: -13.005931854248047
    4. ')' → logprob: -14.880931854248047
    5. ' )' → logprob: -16.255931854248047
    6. '  ' → logprob: -16.380931854248047
    7. '<|end|>' → logprob: -16.755931854248047
    8. ' ' → logprob: -17.255931854248047
    9. ')L' → logprob: -17.380931854248047
    10. 'l' → logprob: -17.880931854248047

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006257029599510133
    2. ' )' → logprob: -8.000625610351562
    3. ')
' → logprob: -8.625625610351562
    4. '*' → logprob: -10.375625610351562
    5. '**' → logprob: -10.875625610351562
    6. ')**' → logprob: -11.000625610351562
    7. '))' → logprob: -11.750625610351562
    8. ')

' → logprob: -12.000625610351562
    9. 'L' → logprob: -12.625625610351562
    10. '#' → logprob: -12.750625610351562

Token 132: '#' (ID: 2)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.014464459381997585
    2. 'volume' → logprob: -4.889464378356934
    3. ' V' → logprob: -5.389464378356934
    4. 'v' → logprob: -6.764464378356934
    5. ' volume' → logprob: -7.639464378356934
    6. 'vol' → logprob: -8.639464378356934
    7. 'result' → logprob: -9.389464378356934
    8. 'L' → logprob: -9.514464378356934
    9. 'C' → logprob: -9.889464378356934
    10. 'Volume' → logprob: -9.889464378356934

Token 133: ' Util' (ID: 13564)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.08488655835390091
    2. 'volume' → logprob: -2.9598865509033203
    3. ' V' → logprob: -4.08488655090332
    4. ' volume' → logprob: -5.33488655090332
    5. 'v' → logprob: -5.70988655090332
    6. 'vol' → logprob: -6.20988655090332
    7. 'result' → logprob: -6.83488655090332
    8. 'cube' → logprob: -7.45988655090332
    9. 'C' → logprob: -8.33488655090332
    10. 'Volume' → logprob: -8.83488655090332

Token 134: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.012865237891674042
    2. 'is' → logprob: -5.26286506652832
    3. 'isation' → logprob: -6.01286506652832
    4. 'se' → logprob: -6.76286506652832
    5. 'isez' → logprob: -7.26286506652832
    6. 'ize' → logprob: -7.38786506652832
    7. '```' → logprob: -7.38786506652832
    8. '#' → logprob: -7.76286506652832
    9. 'isant' → logprob: -7.88786506652832
    10. 'e' → logprob: -8.26286506652832

Token 135: ' l' (ID: 305)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02476254478096962
    2. ' la' → logprob: -4.6497626304626465
    3. 'math' → logprob: -4.6497626304626465
    4. ' l' → logprob: -5.6497626304626465
    5. ' ' → logprob: -7.3997626304626465
    6. ' le' → logprob: -7.7747626304626465
    7. 'l' → logprob: -8.524762153625488
    8. '(math' → logprob: -8.899762153625488
    9. ' pow' → logprob: -9.899762153625488
    10. 'pow' → logprob: -10.024762153625488

Token 136: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7500489950180054
    2. ''' → logprob: -1.8750489950180054
    3. '**' → logprob: -2.000049114227295
    4. 'a' → logprob: -2.500049114227295
    5. ''espace' → logprob: -2.875049114227295
    6. ''import' → logprob: -3.750049114227295
    7. ' math' → logprob: -4.250049114227295
    8. ''ex' → logprob: -4.750049114227295
    9. ''s' → logprob: -5.250049114227295
    10. ''op' → logprob: -5.500049114227295

Token 137: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6938661336898804
    2. '()' → logprob: -2.19386625289917
    3. '(math' → logprob: -2.44386625289917
    4. '**' → logprob: -2.56886625289917
    5. 'ér' → logprob: -2.81886625289917
    6. 'ort' → logprob: -3.19386625289917
    7. '(' → logprob: -3.44386625289917
    8. 'pow' → logprob: -3.81886625289917
    9. '(pow' → logprob: -4.06886625289917
    10. 'érateur' → logprob: -4.44386625289917

Token 138: ' d' (ID: 272)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.16868312656879425
    2. '**' → logprob: -1.9186831712722778
    3. ' *' → logprob: -5.293683052062988
    4. '*' → logprob: -6.543683052062988
    5. ' ' → logprob: -7.043683052062988
    6. ' ***' → logprob: -7.668683052062988
    7. ' `' → logprob: -8.418683052062988
    8. ' ' → logprob: -9.043683052062988
    9. '***' → logprob: -9.168683052062988
    10. ' ```' → logprob: -9.918683052062988

Token 139: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.19209793210029602
    2. ''' → logprob: -2.1920979022979736
    3. ''é' → logprob: -4.192098140716553
    4. '**' → logprob: -4.192098140716553
    5. 'e' → logprob: -4.567098140716553
    6. ' exponent' → logprob: -4.942098140716553
    7. 'ex' → logprob: -5.192098140716553
    8. ''espace' → logprob: -6.692098140716553
    9. '’ex' → logprob: -7.067098140716553
    10. '`' → logprob: -7.067098140716553

Token 140: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.033183034509420395
    2. 'p' → logprob: -3.5331830978393555
    3. 'pon' → logprob: -6.6581830978393555
    4. 'pos' → logprob: -7.0331830978393555
    5. '**' → logprob: -7.2831830978393555
    6. 'ponential' → logprob: -8.158183097839355
    7. '```' → logprob: -9.158183097839355
    8. 'pow' → logprob: -10.408183097839355
    9. '-' → logprob: -10.533183097839355
    10. 'ponents' → logprob: -10.783183097839355

Token 141: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.031202595680952072
    2. 'ent' → logprob: -4.281202793121338
    3. 'entation' → logprob: -5.031202793121338
    4. 'enti' → logprob: -5.156202793121338
    5. '**' → logprob: -6.406202793121338
    6. 'ient' → logprob: -6.656202793121338
    7. 'ation' → logprob: -7.906202793121338
    8. 'i' → logprob: -7.906202793121338
    9. 'ia' → logprob: -8.53120231628418
    10. '*' → logprob: -8.90620231628418

Token 142: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5107085108757019
    2. ' **' → logprob: -1.0107085704803467
    3. ' ' → logprob: -3.6357085704803467
    4. ' L' → logprob: -6.260708332061768
    5. ' ' → logprob: -6.510708332061768
    6. 'L' → logprob: -6.510708332061768
    7. '`' → logprob: -7.260708332061768
    8. ',' → logprob: -7.510708332061768
    9. '^' → logprob: -7.635708332061768
    10. ' `' → logprob: -7.885708332061768

Token 143: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0653283596038818
    2. '**' → logprob: -1.1903283596038818
    3. ' ' → logprob: -2.190328359603882
    4. ' =' → logprob: -2.565328359603882
    5. 'L' → logprob: -3.440328359603882
    6. ',' → logprob: -3.440328359603882
    7. ' **' → logprob: -3.565328359603882
    8. '*' → logprob: -3.690328359603882
    9. '.' → logprob: -4.940328598022461
    10. '#' → logprob: -5.565328598022461

Token 144: ' é' (ID: 1212)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.02323429472744465
    2. 'calcul' → logprob: -4.0232343673706055
    3. ' é' → logprob: -5.5232343673706055
    4. 'cal' → logprob: -8.273234367370605
    5. ' calcular' → logprob: -9.148234367370605
    6. ' effectuer' → logprob: -9.398234367370605
    7. ' calculate' → logprob: -9.398234367370605
    8. 'é' → logprob: -9.398234367370605
    9. ' calcula' → logprob: -9.523234367370605
    10. 'Calcul' → logprob: -9.523234367370605

Token 145: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.03917181119322777
    2. 'l' → logprob: -4.1641716957092285
    3. 'lé' → logprob: -4.1641716957092285
    4. 'le' → logprob: -5.6641716957092285
    5. 'crire' → logprob: -7.4141716957092285
    6. '```' → logprob: -7.6641716957092285
    7. 'valuer' → logprob: -7.7891716957092285
    8. 'lev' → logprob: -7.9141716957092285
    9. ' lever' → logprob: -8.039172172546387
    10. 'v' → logprob: -8.414172172546387

Token 146: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.39647313952445984
    2. ' L' → logprob: -1.1464731693267822
    3. '<|end|>' → logprob: -5.146472930908203
    4. ' ' → logprob: -6.271472930908203
    5. ' la' → logprob: -7.146472930908203
    6. ' à' → logprob: -8.146472930908203
    7. ' le' → logprob: -8.271472930908203
    8. ' l' → logprob: -9.646472930908203
    9. ' au' → logprob: -9.896472930908203
    10. ' ' → logprob: -9.896472930908203

Token 147: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3668576776981354
    2. 'L' → logprob: -1.866857647895813
    3. ' L' → logprob: -2.6168577671051025
    4. ' **' → logprob: -3.1168577671051025
    5. '3' → logprob: -4.116857528686523
    6. ' ' → logprob: -4.866857528686523
    7. ' cube' → logprob: -6.366857528686523
    8. ' (' → logprob: -6.866857528686523
    9. '(' → logprob: -7.116857528686523
    10. ' ,' → logprob: -7.366857528686523

Token 148: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.026305874809622765
    2. ' ' → logprob: -3.651305913925171
    3. ' trois' → logprob: -13.02630615234375
    4. '```' → logprob: -14.02630615234375
    5. ' la' → logprob: -14.40130615234375
    6. '³' → logprob: -14.77630615234375
    7. '<|end|>' → logprob: -14.77630615234375
    8. ' ' → logprob: -15.02630615234375
    9. ' the' → logprob: -15.77630615234375
    10. ' l' → logprob: -16.27630615234375

Token 149: ' puissance' (ID: 63494)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -15.6251802444458
    4. 'power' → logprob: -15.7501802444458
    5. 'tro' → logprob: -15.8751802444458
    6. '³' → logprob: -16.125181198120117
    7. ' puissance' → logprob: -16.125181198120117
    8. ' troisième' → logprob: -17.000181198120117
    9. 'pu' → logprob: -17.750181198120117
    10. ' trois' → logprob: -18.250181198120117

Token 150: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004626530222594738
    2. ' ' → logprob: -5.379626750946045
    3. '```' → logprob: -12.504626274108887
    4. ' ' → logprob: -14.254626274108887
    5. '³' → logprob: -14.629626274108887
    6. ' trois' → logprob: -14.879626274108887
    7. '  ' → logprob: -15.129626274108887
    8. ' Trois' → logprob: -15.254626274108887
    9. ' tres' → logprob: -16.254627227783203
    10. '`' → logprob: -16.817127227783203

Token 151: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -14.000075340270996
    4. '³' → logprob: -16.750076293945312
    5. '۳' → logprob: -18.375076293945312
    6. '  ' → logprob: -18.375076293945312
    7. '1' → logprob: -18.625076293945312
    8. '`' → logprob: -18.750076293945312
    9. ' trois' → logprob: -19.000076293945312
    10. '.' → logprob: -19.062576293945312

Token 152: '
' (ID: 198)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.16244813799858093
    2. '
' → logprob: -3.4124481678009033
    3. 'L' → logprob: -3.6624481678009033
    4. 'volume' → logprob: -3.7874481678009033
    5. 'v' → logprob: -3.9124481678009033
    6. 'C' → logprob: -4.037447929382324
    7. 'cube' → logprob: -5.412447929382324
    8. ' volume' → logprob: -5.662447929382324
    9. 'result' → logprob: -5.787447929382324
    10. '#' → logprob: -6.162447929382324

Token 153: '#' (ID: 2)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.12926620244979858
    2. 'volume' → logprob: -2.2542662620544434
    3. 'v' → logprob: -5.379266262054443
    4. 'L' → logprob: -6.129266262054443
    5. 'result' → logprob: -6.129266262054443
    6. 'vol' → logprob: -6.129266262054443
    7. ' volume' → logprob: -6.379266262054443
    8. ' V' → logprob: -7.004266262054443
    9. 'Volume' → logprob: -7.129266262054443
    10. 'cube' → logprob: -7.379266262054443

Token 154: ' Div' (ID: 12302)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.10916175693273544
    2. 'volume' → logprob: -2.734161853790283
    3. 'v' → logprob: -3.859161853790283
    4. ' V' → logprob: -4.859161853790283
    5. 'vol' → logprob: -5.734161853790283
    6. ' volume' → logprob: -5.984161853790283
    7. 'result' → logprob: -6.734161853790283
    8. 'print' → logprob: -6.984161853790283
    9. 'Volume' → logprob: -7.484161853790283
    10. 'cube' → logprob: -8.734161376953125

Token 155: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.009162462316453457
    2. 'e' → logprob: -5.634162425994873
    3. 'isé' → logprob: -5.884162425994873
    4. 'ide' → logprob: -6.634162425994873
    5. 'iser' → logprob: -8.134162902832031
    6. 'isez' → logprob: -8.134162902832031
    7. '=' → logprob: -8.634162902832031
    8. 'ize' → logprob: -9.134162902832031
    9. 'ue' → logprob: -9.384162902832031
    10. 'i' → logprob: -9.634162902832031

Token 156: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.05229876935482025
    2. 'L' → logprob: -3.3022987842559814
    3. ' ' → logprob: -4.802298545837402
    4. ' le' → logprob: -6.177298545837402
    5. ' (' → logprob: -6.302298545837402
    6. ' by' → logprob: -7.802298545837402
    7. ' la' → logprob: -8.427298545837402
    8. '  ' → logprob: -8.802298545837402
    9. ' par' → logprob: -8.802298545837402
    10. '3' → logprob: -8.802298545837402

Token 157: ' résultat' (ID: 62556)
  Prédit: ' volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' volume' → logprob: -0.11490119993686676
    2. ' cube' → logprob: -2.989901304244995
    3. 'volume' → logprob: -3.364901304244995
    4. ' L' → logprob: -4.864901065826416
    5. ' résultat' → logprob: -6.239901065826416
    6. 'cube' → logprob: -6.364901065826416
    7. ' ' → logprob: -6.489901065826416
    8. ' result' → logprob: -6.739901065826416
    9. ' V' → logprob: -6.739901065826416
    10. 'L' → logprob: -6.739901065826416

Token 158: ' par' (ID: 686)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5894759893417358
    2. ' by' → logprob: -1.3394759893417358
    3. ' par' → logprob: -1.9644759893417358
    4. '/' → logprob: -4.089476108551025
    5. 'par' → logprob: -4.839476108551025
    6. ' ' → logprob: -5.214476108551025
    7. 'by' → logprob: -5.464476108551025
    8. '3' → logprob: -5.714476108551025
    9. ' ,' → logprob: -6.964476108551025
    10. '```' → logprob: -7.339476108551025

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48657622933387756
    2. '3' → logprob: -1.2365761995315552
    3. '6' → logprob: -2.3615763187408447
    4. '2' → logprob: -8.611576080322266
    5. ' math' → logprob: -8.986576080322266
    6. '7' → logprob: -9.361576080322266
    7. '9' → logprob: -9.736576080322266
    8. '4' → logprob: -10.674076080322266
    9. '8' → logprob: -10.736576080322266
    10. ' (' → logprob: -10.736576080322266

Token 160: '27' (ID: 2092)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6345595121383667
    2. '3' → logprob: -0.7595595121383667
    3. '2' → logprob: -7.384559631347656
    4. ' ' → logprob: -7.759559631347656
    5. '7' → logprob: -8.384559631347656
    6. '12' → logprob: -8.634559631347656
    7. '4' → logprob: -8.759559631347656
    8. '8' → logprob: -8.884559631347656
    9. '1' → logprob: -10.134559631347656
    10. '9' → logprob: -10.384559631347656

Token 161: '.' (ID: 13)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5127671957015991
    2. ' *' → logprob: -1.7627671957015991
    3. '<|end|>' → logprob: -1.7627671957015991
    4. '
' → logprob: -2.0127673149108887
    5. '**' → logprob: -2.6377673149108887
    6. ' ' → logprob: -2.7627673149108887
    7. '.' → logprob: -3.3877673149108887
    8. ' /' → logprob: -3.6377673149108887
    9. '/' → logprob: -4.512767314910889
    10. '#' → logprob: -4.512767314910889

Token 162: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6894890069961548
    2. '<|end|>' → logprob: -2.0644888877868652
    3. '*' → logprob: -3.0644888877868652
    4. ' 
' → logprob: -3.1894888877868652
    5. '
' → logprob: -3.3144888877868652
    6. '  
' → logprob: -3.6894888877868652
    7. ')' → logprob: -3.8144888877868652
    8. '**' → logprob: -3.9394888877868652
    9. ',' → logprob: -3.9394888877868652
    10. ' (' → logprob: -4.189488887786865

Token 163: ',' (ID: 11)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.9315992593765259
    2. ' (' → logprob: -1.9315992593765259
    3. '*' → logprob: -2.1815991401672363
    4. '<|end|>' → logprob: -2.4315991401672363
    5. ' /' → logprob: -2.4315991401672363
    6. ' *' → logprob: -2.9315991401672363
    7. '/' → logprob: -3.0565991401672363
    8. '**' → logprob: -3.1815991401672363
    9. '(' → logprob: -3.1815991401672363
    10. ' ' → logprob: -3.1815991401672363

Token 164: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24935322999954224
    2. '<|end|>' → logprob: -2.2493531703948975
    3. ' L' → logprob: -3.4993531703948975
    4. '3' → logprob: -4.499353408813477
    5. ')' → logprob: -4.749353408813477
    6. ' )' → logprob: -4.874353408813477
    7. ' math' → logprob: -4.874353408813477
    8. ' "' → logprob: -5.124353408813477
    9. 'L' → logprob: -5.249353408813477
    10. ' #' → logprob: -5.749353408813477

Token 165: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3499741554260254
    2. ' la' → logprob: -1.7249741554260254
    3. '6' → logprob: -2.2249741554260254
    4. '9' → logprob: -2.4749741554260254
    5. ' le' → logprob: -2.7249741554260254
    6. 'le' → logprob: -2.7249741554260254
    7. ' une' → logprob: -2.7249741554260254
    8. '3' → logprob: -2.8499741554260254
    9. ' un' → logprob: -3.3499741554260254
    10. 'la' → logprob: -3.9749741554260254

Token 167: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6843949556350708
    2. 'nombre' → logprob: -1.0593949556350708
    3. 'float' → logprob: -2.6843948364257812
    4. 'number' → logprob: -3.3093948364257812
    5. ' float' → logprob: -3.8093948364257812
    6. ' number' → logprob: -4.309394836425781
    7. ' ' → logprob: -5.684394836425781
    8. ' espace' → logprob: -6.934394836425781
    9. '.' → logprob: -7.684394836425781
    10. '<|end|>' → logprob: -8.059394836425781

Token 168: ' flott' (ID: 108700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3776916563510895
    2. '<|end|>' → logprob: -1.252691626548767
    3. ' ' → logprob: -4.502691745758057
    4. ' à' → logprob: -5.127691745758057
    5. ' .' → logprob: -6.252691745758057
    6. ' flott' → logprob: -6.377691745758057
    7. 'f' → logprob: -6.502691745758057
    8. '  ' → logprob: -6.877691745758057
    9. ' a' → logprob: -7.252691745758057
    10. ')' → logprob: -7.502691745758057

Token 169: 'ant' (ID: 493)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00719956262037158
    2. '27' → logprob: -5.507199764251709
    3. 'é' → logprob: -6.882199764251709
    4. 'e' → logprob: -7.882199764251709
    5. '31' → logprob: -8.38219928741455
    6. '26' → logprob: -8.38219928741455
    7. ' .' → logprob: -8.50719928741455
    8. '47' → logprob: -8.88219928741455
    9. '33' → logprob: -9.25719928741455
    10. '3' → logprob: -9.75719928741455

Token 170: ' représentant' (ID: 136122)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6902719140052795
    2. '<|end|>' → logprob: -1.3152718544006348
    3. '*' → logprob: -2.4402718544006348
    4. '.' → logprob: -3.5652718544006348
    5. ' (' → logprob: -3.9402718544006348
    6. '**' → logprob: -4.065271854400635
    7. ',' → logprob: -4.190271854400635
    8. ' *' → logprob: -4.315271854400635
    9. ' /' → logprob: -5.190271854400635
    10. '(space' → logprob: -5.565271854400635

Token 171: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9653565287590027
    2. '27' → logprob: -1.3403565883636475
    3. '3' → logprob: -1.5903565883636475
    4. ' le' → logprob: -2.5903565883636475
    5. ' la' → logprob: -3.7153565883636475
    6. ' (' → logprob: -4.090356349945068
    7. '9' → logprob: -4.090356349945068
    8. 'le' → logprob: -4.715356349945068
    9. '(' → logprob: -5.340356349945068
    10. '6' → logprob: -6.215356349945068

Token 172: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.4050597548484802
    2. '3' → logprob: -1.405059814453125
    3. ' ' → logprob: -3.280059814453125
    4. 'le' → logprob: -3.905059814453125
    5. 'la' → logprob: -4.530059814453125
    6. 'float' → logprob: -5.530059814453125
    7. '(' → logprob: -5.655059814453125
    8. ' le' → logprob: -6.030059814453125
    9. ' la' → logprob: -6.030059814453125
    10. '26' → logprob: -6.405059814453125

Token 173: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' déc' (ID: 8498)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5482030510902405
    2. '27' → logprob: -1.0482029914855957
    3. ' ' → logprob: -3.2982029914855957
    4. 'un' → logprob: -4.298202991485596
    5. ' une' → logprob: -4.673202991485596
    6. '.' → logprob: -5.423202991485596
    7. 'float' → logprob: -6.548202991485596
    8. ' float' → logprob: -7.173202991485596
    9. ' le' → logprob: -7.298202991485596
    10. 'une' → logprob: -7.298202991485596

Token 175: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.0055350433103740215
    2. 'im' → logprob: -5.255535125732422
    3. '```' → logprob: -8.380535125732422
    4. 'IMAL' → logprob: -11.005535125732422
    5. '.' → logprob: -11.255535125732422
    6. 'i' → logprob: -11.505535125732422
    7. 'imals' → logprob: -11.880535125732422
    8. 'al' → logprob: -12.005535125732422
    9. 'imaal' → logprob: -12.505535125732422
    10. '#' → logprob: -13.005535125732422

Token 176: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8393223285675049
    2. 'V' → logprob: -1.4643223285675049
    3. 'result' → logprob: -2.339322328567505
    4. ' 
' → logprob: -2.839322328567505
    5. '
' → logprob: -3.089322328567505
    6. ',' → logprob: -3.964322328567505
    7. 'volume' → logprob: -4.089322090148926
    8. 'C' → logprob: -4.214322090148926
    9. ' V' → logprob: -4.589322090148926
    10. 'c' → logprob: -4.714322090148926

Token 177: 'pl' (ID: 528)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20275430381298065
    2. ' )' → logprob: -1.702754259109497
    3. ' )
' → logprob: -8.202754020690918
    4. ')
' → logprob: -8.202754020690918
    5. 'L' → logprob: -8.577754020690918
    6. ' ' → logprob: -9.327754020690918
    7. ')L' → logprob: -9.452754020690918
    8. ').' → logprob: -9.577754020690918
    9. '),' → logprob: -9.702754020690918
    10. '3' → logprob: -9.827754020690918

Token 178: 'ut' (ID: 339)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.32606151700019836
    2. 'age' → logprob: -1.951061487197876
    3. 'ut' → logprob: -2.576061487197876
    4. 'u' → logprob: -4.576061725616455
    5. 'ot' → logprob: -4.826061725616455
    6. 'ur' → logprob: -4.826061725616455
    7. 'an' → logprob: -4.951061725616455
    8. 'ace' → logprob: -4.951061725616455
    9. 'a' → logprob: -5.951061725616455
    10. ' )' → logprob: -6.201061725616455

Token 179: 'ôt' (ID: 11060)
  Prédit: 'ôt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ôt' → logprob: -0.028715362772345543
    2. 'ot' → logprob: -3.6537153720855713
    3. 's' → logprob: -7.403715133666992
    4. ')' → logprob: -7.778715133666992
    5. 'o' → logprob: -8.778715133666992
    6. '**' → logprob: -8.778715133666992
    7. 't' → logprob: -9.153715133666992
    8. 'e' → logprob: -9.403715133666992
    9. '```' → logprob: -9.403715133666992
    10. 'òt' → logprob: -9.716215133666992

Token 180: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37610477209091187
    2. ' )' → logprob: -1.7511048316955566
    3. ' ' → logprob: -2.1261048316955566
    4. '.' → logprob: -4.751104831695557
    5. ' que' → logprob: -4.876104831695557
    6. ' qu' → logprob: -6.876104831695557
    7. '  ' → logprob: -7.501104831695557
    8. '<|end|>' → logprob: -7.626104831695557
    9. ',' → logprob: -8.001104354858398
    10. 'que' → logprob: -8.501104354858398

Token 181: ' ' (ID: 220)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1725987046957016
    2. 'un' → logprob: -2.7975986003875732
    3. '27' → logprob: -3.1725986003875732
    4. ' ' → logprob: -3.1725986003875732
    5. 'int' → logprob: -5.047598838806152
    6. ' une' → logprob: -5.547598838806152
    7. ' entier' → logprob: -6.922598838806152
    8. 'ent' → logprob: -7.422598838806152
    9. '```' → logprob: -8.047598838806152
    10. 'une' → logprob: -8.172598838806152

Token 182: '27' (ID: 2092)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.33268627524375916
    2. '27' → logprob: -1.8326863050460815
    3. ' un' → logprob: -2.707686185836792
    4. 'ent' → logprob: -3.707686185836792
    5. 'int' → logprob: -3.832686185836792
    6. ' ' → logprob: -5.332686424255371
    7. 'une' → logprob: -5.957686424255371
    8. 'en' → logprob: -7.582686424255371
    9. '3' → logprob: -7.707686424255371
    10. ' entier' → logprob: -7.707686424255371

Token 183: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027103262022137642
    2. '.' → logprob: -4.152103424072266
    3. ' )' → logprob: -4.652103424072266
    4. ')
' → logprob: -7.277103424072266
    5. '**' → logprob: -8.152103424072266
    6. '*' → logprob: -9.027103424072266
    7. ').' → logprob: -9.152103424072266
    8. '.)' → logprob: -9.902103424072266
    9. ' )
' → logprob: -10.152103424072266
    10. '),' → logprob: -10.652103424072266

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023000126238912344
    2. ' )' → logprob: -6.627299785614014
    3. ')
' → logprob: -7.002299785614014
    4. ')

' → logprob: -10.752300262451172
    5. ').' → logprob: -12.002300262451172
    6. '))' → logprob: -12.127300262451172
    7. ' )
' → logprob: -12.127300262451172
    8. '*' → logprob: -12.877300262451172
    9. '),' → logprob: -13.127300262451172
    10. '()' → logprob: -13.377300262451172

Token 185: 'result' (ID: 2521)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.028192700818181038
    2. 'v' → logprob: -4.028192520141602
    3. 'volume' → logprob: -5.153192520141602
    4. ' V' → logprob: -6.528192520141602
    5. ' volume' → logprob: -7.403192520141602
    6. 'C' → logprob: -8.278192520141602
    7. ' 
' → logprob: -8.653192520141602
    8. ' ' → logprob: -8.903192520141602
    9. 'result' → logprob: -8.903192520141602
    10. 'Volume' → logprob: -9.153192520141602

Token 186: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0334458202123642
    2. '=' → logprob: -3.5334458351135254
    3. 'at' → logprob: -5.658445835113525
    4. ' ' → logprob: -9.158445358276367
    5. '_' → logprob: -10.408445358276367
    6. 's' → logprob: -10.533445358276367
    7. ' ' → logprob: -11.283445358276367
    8. 'ats' → logprob: -11.408445358276367
    9. 'a' → logprob: -11.908445358276367
    10. '1' → logprob: -13.408445358276367

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048612914979457855
    2. '=' → logprob: -3.0486128330230713
    3. ' ' → logprob: -11.048612594604492
    4. ' ' → logprob: -12.173612594604492
    5. '_' → logprob: -13.798612594604492
    6. 's' → logprob: -13.798612594604492
    7. ' =
' → logprob: -14.173612594604492
    8. '1' → logprob: -15.423612594604492
    9. 'space' → logprob: -15.673612594604492
    10. ')' → logprob: -15.923612594604492

Token 188: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7931026220321655
    2. ' L' → logprob: -1.1681026220321655
    3. ' (' → logprob: -1.6681026220321655
    4. '(L' → logprob: -3.043102741241455
    5. '(' → logprob: -8.168102264404297
    6. ' ' → logprob: -11.168102264404297
    7. '	L' → logprob: -12.543102264404297
    8. '((' → logprob: -12.980602264404297
    9. '   ' → logprob: -13.355602264404297
    10. ' ' → logprob: -13.730602264404297

Token 189: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.01815790683031082
    2. ' **' → logprob: -4.018157958984375
    3. '*' → logprob: -12.268157958984375
    4. '***' → logprob: -14.018157958984375
    5. '```' → logprob: -14.143157958984375
    6. '3' → logprob: -14.393157958984375
    7. ' *' → logprob: -14.768157958984375
    8. ' ' → logprob: -15.143157958984375
    9. '***/' → logprob: -15.768157958984375
    10. '³' → logprob: -16.268157958984375

Token 190: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '```' → logprob: -18.254619598388672
    4. '  ' → logprob: -18.379619598388672
    5. '۳' → logprob: -19.004619598388672
    6. ' ' → logprob: -19.629619598388672
    7. '³' → logprob: -19.754619598388672
    8. '３' → logprob: -19.879619598388672
    9. '   ' → logprob: -20.379619598388672
    10. ' trois' → logprob: -20.504619598388672

Token 191: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -19.375001907348633
    4. '۳' → logprob: -20.375001907348633
    5. '³' → logprob: -20.875001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '３' → logprob: -21.500001907348633
    9. '٣' → logprob: -21.500001907348633
    10. '(' → logprob: -22.375001907348633

Token 192: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.079147107899189
    2. '/' → logprob: -2.5791471004486084
    3. '27' → logprob: -8.829147338867188
    4. ' /
' → logprob: -9.329147338867188
    5. ' ' → logprob: -11.329147338867188
    6. ' ' → logprob: -12.829147338867188
    7. '/
' → logprob: -13.079147338867188
    8. '
' → logprob: -13.204147338867188
    9. '```' → logprob: -13.829147338867188
    10. '/
/' → logprob: -15.204147338867188

Token 193: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740777015686035
    2. '27' → logprob: -0.9740777015686035
    3. ' ' → logprob: -14.224077224731445
    4. '```' → logprob: -18.599077224731445
    5. '  ' → logprob: -18.849077224731445
    6. '   ' → logprob: -19.849077224731445
    7. '​' → logprob: -19.974077224731445
    8. '26' → logprob: -20.224077224731445
    9. '28' → logprob: -20.286577224731445
    10. 'space' → logprob: -20.349077224731445

Token 194: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -20.125001907348633
    4. '2' → logprob: -21.750001907348633
    5. '  ' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.250001907348633
    7. '

' → logprob: -22.312501907348633
    8. ' ' → logprob: -22.500001907348633
    9. '37' → logprob: -22.875001907348633
    10. '
' → logprob: -22.875001907348633

Token 195: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3374651372432709
    2. '
' → logprob: -1.3374651670455933
    3. '<|end|>' → logprob: -3.8374650478363037
    4. '#' → logprob: -6.837465286254883
    5. ' print' → logprob: -7.712465286254883
    6. ')' → logprob: -8.212465286254883
    7. '  
' → logprob: -8.587465286254883
    8. '
' → logprob: -9.087465286254883
    9. ' 
' → logprob: -9.462465286254883
    10. '#print' → logprob: -10.212465286254883

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. 'f' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.875000953674316
    4. 'float' → logprob: -16.875
    5. '```' → logprob: -17.25
    6. '۰' → logprob: -18.375
    7. 'o' → logprob: -18.4375
    8. '-' → logprob: -18.6875
    9. '﻿' → logprob: -18.8125
    10. ')' → logprob: -18.9375

Token 197: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11148492991924286
    2. '
' → logprob: -2.486485004425049
    3. '<|end|>' → logprob: -3.861485004425049
    4. '#' → logprob: -7.986485004425049
    5. ' print' → logprob: -8.11148452758789
    6. ')' → logprob: -8.23648452758789
    7. '

' → logprob: -9.11148452758789
    8. '#print' → logprob: -9.61148452758789
    9. '  
' → logprob: -10.36148452758789
    10. ' 
' → logprob: -10.61148452758789

Token 198: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023944417014718056
    2. '
' → logprob: -4.02394437789917
    3. '<|end|>' → logprob: -5.39894437789917
    4. ')' → logprob: -7.02394437789917
    5. '#' → logprob: -8.523944854736328
    6. ' print' → logprob: -9.523944854736328
    7. '#print' → logprob: -10.148944854736328
    8. '  
' → logprob: -11.148944854736328
    9. '```' → logprob: -11.273944854736328
    10. '

' → logprob: -11.898944854736328

Token 199: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14467395842075348
    2. '
' → logprob: -2.019674062728882
    3. ' print' → logprob: -7.394673824310303
    4. '
' → logprob: -7.519673824310303
    5. '#' → logprob: -7.894673824310303
    6. '

' → logprob: -8.519674301147461
    7. '<|end|>' → logprob: -9.019674301147461
    8. ' 
' → logprob: -9.519674301147461
    9. '```' → logprob: -10.769674301147461
    10. '#print' → logprob: -11.144674301147461

Token 200: ' calcul' (ID: 7559)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2537193298339844
    2. 'print' → logprob: -1.2537193298339844
    3. 'result' → logprob: -1.3787193298339844
    4. ' ' → logprob: -2.2537193298339844
    5. ' result' → logprob: -3.3787193298339844
    6. ' print' → logprob: -4.753719329833984
    7. ' #' → logprob: -4.878719329833984
    8. ' résultat' → logprob: -5.253719329833984
    9. 'r' → logprob: -6.253719329833984
    10. '
' → logprob: -6.253719329833984

Token 201: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0325271338224411
    2. '
' → logprob: -4.157526969909668
    3. '<|end|>' → logprob: -4.532526969909668
    4. '#' → logprob: -5.282526969909668
    5. ' print' → logprob: -8.282526969909668
    6. '#print' → logprob: -8.782526969909668
    7. ')' → logprob: -9.657526969909668
    8. '  
' → logprob: -11.407526969909668
    9. '<|end|>' → logprob: -11.532526969909668
    10. '

' → logprob: -11.657526969909668

Token 202: ' effectué' (ID: 131221)
  Prédit: ' effectué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectué' → logprob: -0.33553311228752136
    2. ' ensuite' → logprob: -2.0855331420898438
    3. ' stock' → logprob: -2.7105331420898438
    4. 'result' → logprob: -4.335533142089844
    5. ' effectu' → logprob: -4.585533142089844
    6. ' le' → logprob: -5.210533142089844
    7. ' result' → logprob: -5.335533142089844
    8. 'print' → logprob: -5.335533142089844
    9. ' terminé' → logprob: -5.335533142089844
    10. 'arr' → logprob: -5.460533142089844

Token 203: ' ici' (ID: 27994)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015100134536623955
    2. '
' → logprob: -4.640100002288818
    3. '<|end|>' → logprob: -5.765100002288818
    4. '#' → logprob: -6.765100002288818
    5. ' print' → logprob: -7.140100002288818
    6. ')' → logprob: -8.640100479125977
    7. '#print' → logprob: -10.015100479125977
    8. '  
' → logprob: -12.140100479125977
    9. '

' → logprob: -12.390100479125977
    10. '
' → logprob: -12.765100479125977

Token 204: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002019166946411133
    2. '<|end|>' → logprob: -6.752018928527832
    3. '
' → logprob: -7.252018928527832
    4. ' print' → logprob: -9.877018928527832
    5. '#' → logprob: -9.877018928527832
    6. ')' → logprob: -11.252018928527832
    7. '#print' → logprob: -11.752018928527832
    8. '  
' → logprob: -11.877018928527832
    9. '```' → logprob: -12.502018928527832
    10. '<|end|>' → logprob: -14.127018928527832

Token 205: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0333111509680748
    2. ' print' → logprob: -3.533311128616333
    3. '#' → logprob: -5.908311367034912
    4. '#print' → logprob: -8.033310890197754
    5. '
' → logprob: -8.158310890197754
    6. '

' → logprob: -9.908310890197754
    7. '<|end|>' → logprob: -9.908310890197754
    8. ' #' → logprob: -10.533310890197754
    9. '```' → logprob: -11.158310890197754
    10. '(print' → logprob: -11.533310890197754

Token 206: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.02691970020532608
    2. '=' → logprob: -3.7769196033477783
    3. 'e' → logprob: -7.026919841766357
    4. '_' → logprob: -7.401919841766357
    5. 'er' → logprob: -7.401919841766357
    6. ' =' → logprob: -7.401919841766357
    7. '_result' → logprob: -8.1519193649292
    8. 'ée' → logprob: -8.4019193649292
    9. 'és' → logprob: -9.5269193649292
    10. 'ed' → logprob: -9.5269193649292

Token 207: ' dans' (ID: 2671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8624088168144226
    2. ' ' → logprob: -1.6124088764190674
    3. '<|end|>' → logprob: -1.7374088764190674
    4. ')' → logprob: -2.6124088764190674
    5. '_' → logprob: -3.2374088764190674
    6. '=' → logprob: -3.4874088764190674
    7. '=result' → logprob: -3.8624088764190674
    8. '_result' → logprob: -4.987408638000488
    9. '  ' → logprob: -5.362408638000488
    10. ' result' → logprob: -5.737408638000488

Token 208: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0010634170612320304
    2. ' resultat' → logprob: -7.376063346862793
    3. ' result' → logprob: -7.751063346862793
    4. ' résultat' → logprob: -13.501063346862793
    5. '$result' → logprob: -14.001063346862793
    6. '_result' → logprob: -14.376063346862793
    7. '=result' → logprob: -14.376063346862793
    8. '`' → logprob: -14.501063346862793
    9. 'une' → logprob: -14.501063346862793
    10. 'la' → logprob: -14.876063346862793

Token 209: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004787295591086149
    2. 'variable' → logprob: -6.129787445068359
    3. ' result' → logprob: -6.254787445068359
    4. ' résultat' → logprob: -8.37978744506836
    5. ' resultat' → logprob: -8.62978744506836
    6. ' variable' → logprob: -8.87978744506836
    7. '_result' → logprob: -9.87978744506836
    8. 'res' → logprob: -10.12978744506836
    9. 'rés' → logprob: -11.37978744506836
    10. '_' → logprob: -11.50478744506836

Token 210: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0008386960835196078
    2. ' result' → logprob: -7.375838756561279
    3. ' resultat' → logprob: -8.625838279724121
    4. '`' → logprob: -11.500838279724121
    5. 'rés' → logprob: -11.500838279724121
    6. ' résultat' → logprob: -12.125838279724121
    7. 'res' → logprob: -13.125838279724121
    8. '_result' → logprob: -13.500838279724121
    9. 'r' → logprob: -14.125838279724121
    10. 'resultado' → logprob: -14.250838279724121

Token 211: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9361264946837764e-07
    2. ' resultat' → logprob: -16.375
    3. ' result' → logprob: -17.75
    4. 'res' → logprob: -17.875
    5. 'rés' → logprob: -18.875
    6. 'resultado' → logprob: -19.625
    7. '_result' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '```' → logprob: -21.625
    10. 'r' → logprob: -21.875

Token 212: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0002043748099822551
    2. 'a' → logprob: -9.625204086303711
    3. ')' → logprob: -9.750204086303711
    4. ' at' → logprob: -10.875204086303711
    5. '_at' → logprob: -11.250204086303711
    6. 'result' → logprob: -11.625204086303711
    7. ''at' → logprob: -11.625204086303711
    8. 'e' → logprob: -12.250204086303711
    9. 'ent' → logprob: -12.375204086303711
    10. 'ant' → logprob: -12.875204086303711

Token 213: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000779965310357511
    2. 'print' → logprob: -7.37578010559082
    3. '#' → logprob: -10.00078010559082
    4. ')
' → logprob: -10.25078010559082
    5. '<|end|>' → logprob: -10.50078010559082
    6. ')

' → logprob: -11.37578010559082
    7. ' )' → logprob: -11.50078010559082
    8. '
' → logprob: -12.00078010559082
    9. '```' → logprob: -12.12578010559082
    10. '

' → logprob: -12.75078010559082

Token 214: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. '#' → logprob: -14.25000286102295
    3. ' print' → logprob: -14.37500286102295
    4. '#print' → logprob: -14.37500286102295
    5. 'prin' → logprob: -15.00000286102295
    6. 'pr' → logprob: -15.50000286102295
    7. '```' → logprob: -16.375001907348633
    8. ')' → logprob: -17.000001907348633
    9. 'p' → logprob: -17.250001907348633
    10. '<|end|>' → logprob: -17.500001907348633

Token 215: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008328551193699241
    2. '#' → logprob: -7.125833034515381
    3. '#print' → logprob: -10.625832557678223
    4. ' print' → logprob: -13.875832557678223
    5. 'Print' → logprob: -14.000832557678223
    6. 'prin' → logprob: -14.125832557678223
    7. '```' → logprob: -14.625832557678223
    8. 'aff' → logprob: -15.375832557678223
    9. 'pr' → logprob: -15.375832557678223
    10. 'output' → logprob: -16.37583351135254

Token 216: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0031708183232694864
    2. '#' → logprob: -6.753170967102051
    3. 'ichage' → logprob: -6.878170967102051
    4. 'icher' → logprob: -7.003170967102051
    5. 'ich' → logprob: -10.75317096710205
    6. 'ic' → logprob: -11.37817096710205
    7. '```' → logprob: -11.62817096710205
    8. 'print' → logprob: -11.87817096710205
    9. 'f' → logprob: -12.37817096710205
    10. '   ' → logprob: -13.37817096710205

Token 217: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.12719665467739105
    2. '(' → logprob: -2.1271965503692627
    3. '(print' → logprob: -9.127196311950684
    4. 'result' → logprob: -9.252196311950684
    5. '(res' → logprob: -11.002196311950684
    6. '(
' → logprob: -11.502196311950684
    7. '(resultado' → logprob: -11.752196311950684
    8. '("' → logprob: -12.127196311950684
    9. 'print' → logprob: -12.377196311950684
    10. ' (' → logprob: -12.627196311950684

Token 218: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0006979000172577798
    2. '(result' → logprob: -7.625698089599609
    3. 'rés' → logprob: -9.50069808959961
    4. 'print' → logprob: -9.50069808959961
    5. ' résultat' → logprob: -11.12569808959961
    6. '("' → logprob: -11.75069808959961
    7. ' result' → logprob: -11.87569808959961
    8. 'r' → logprob: -11.87569808959961
    9. 'int' → logprob: -12.12569808959961
    10. 'round' → logprob: -12.25069808959961

Token 219: ' précéd' (ID: 55435)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -15.375001907348633
    4. '(print' → logprob: -16.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. 'prin' → logprob: -18.500001907348633
    7. '#print' → logprob: -18.750001907348633
    8. 'pr' → logprob: -19.125001907348633
    9. '.print' → logprob: -19.750001907348633
    10. 'result' → logprob: -19.875001907348633

Token 220: 'emment' (ID: 58019)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.25737687945365906
    2. 'é' → logprob: -1.5073769092559814
    3. 'ant' → logprob: -5.507376670837402
    4. 'e' → logprob: -7.382376670837402
    5. 'emment' → logprob: -8.382376670837402
    6. 'ed' → logprob: -8.507376670837402
    7. 'ente' → logprob: -8.757376670837402
    8. 'en' → logprob: -10.007376670837402
    9. 'ence' → logprob: -10.257376670837402
    10. 'è' → logprob: -11.007376670837402

Token 221: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.19101256132125854
    2. 'print' → logprob: -1.9410126209259033
    3. ' calcul' → logprob: -3.6910126209259033
    4. 'cal' → logprob: -5.441012382507324
    5. ' obtenu' → logprob: -8.316012382507324
    6. 'calc' → logprob: -8.816012382507324
    7. 'rés' → logprob: -9.191012382507324
    8. ' calculated' → logprob: -9.191012382507324
    9. '#' → logprob: -9.316012382507324
    10. 'computed' → logprob: -9.316012382507324

Token 222: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03617534413933754
    2. 'print' → logprob: -3.66117525100708
    3. 'e' → logprob: -4.66117525100708
    4. '#' → logprob: -9.161175727844238
    5. 'er' → logprob: -9.536175727844238
    6. 'result' → logprob: -9.536175727844238
    7. 'ation' → logprob: -10.161175727844238
    8. ')' → logprob: -10.536175727844238
    9. 'ée' → logprob: -10.911175727844238
    10. '(e' → logprob: -12.161175727844238

Token 223: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.629921436891891e-05
    2. ' print' → logprob: -10.62502670288086
    3. '
' → logprob: -13.50002670288086
    4. '(print' → logprob: -15.37502670288086
    5. '```' → logprob: -15.75002670288086
    6. ')' → logprob: -17.00002670288086
    7. '(' → logprob: -17.25002670288086
    8. 'result' → logprob: -17.37502670288086
    9. '#print' → logprob: -17.62502670288086
    10. 'prin' → logprob: -17.87502670288086

Token 224: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3005990982055664
    2. 'la' → logprob: -1.4255990982055664
    3. 'print' → logprob: -4.550599098205566
    4. ' l' → logprob: -5.675599098205566
    5. '#' → logprob: -6.175599098205566
    6. '```' → logprob: -7.550599098205566
    7. ')' → logprob: -7.800599098205566
    8. 'len' → logprob: -7.925599098205566
    9. ' la' → logprob: -8.050599098205566
    10. 'lac' → logprob: -8.425599098205566

Token 225: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.15215136110782623
    2. 'a' → logprob: -2.027151346206665
    3. ''utilisateur' → logprob: -6.027151584625244
    4. '’écran' → logprob: -6.277151584625244
    5. 'é' → logprob: -6.527151584625244
    6. 'e' → logprob: -6.652151584625244
    7. 'print' → logprob: -6.777151584625244
    8. '#' → logprob: -7.652151584625244
    9. ''aide' → logprob: -8.277151107788086
    10. ' écran' → logprob: -8.652151107788086

Token 226: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.180258191714529e-06
    2. ' print' → logprob: -12.000008583068848
    3. '
' → logprob: -13.250008583068848
    4. '```' → logprob: -16.12500762939453
    5. '(print' → logprob: -16.75000762939453
    6. '#print' → logprob: -18.25000762939453
    7. '.print' → logprob: -18.87500762939453
    8. 'prin' → logprob: -19.00000762939453
    9. '\' → logprob: -19.25000762939453
    10. 'Print' → logprob: -19.50000762939453

Token 227: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.625
    3. '```' → logprob: -18.5
    4. 'prin' → logprob: -21.875
    5. 'pr' → logprob: -22.625
    6. 'Print' → logprob: -24.0
    7. '#print' → logprob: -24.25
    8. 'result' → logprob: -24.375
    9. '
' → logprob: -24.5
    10. 'prit' → logprob: -24.5

Token 228: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. 'prin' → logprob: -21.875
    4. '```' → logprob: -22.125
    5. 'pr' → logprob: -22.375
    6. '#print' → logprob: -22.75
    7. 'Print' → logprob: -23.875
    8. '
' → logprob: -24.0
    9. 'pri' → logprob: -24.625
    10. 'prit' → logprob: -25.375

Token 229: '()' (ID: 416)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.1302429437637329
    2. '(' → logprob: -2.1302428245544434
    3. '()' → logprob: -5.755242824554443
    4. ' (' → logprob: -9.755243301391602
    5. '(print' → logprob: -10.505243301391602
    6. '(resultado' → logprob: -10.880243301391602
    7. '(output' → logprob: -11.505243301391602
    8. '(res' → logprob: -12.005243301391602
    9. '(
' → logprob: -12.630243301391602
    10. 'result' → logprob: -12.630243301391602

Token 230: ' affiche' (ID: 127479)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01879148744046688
    2. '(print' → logprob: -4.518791675567627
    3. '(' → logprob: -4.893791675567627
    4. '()' → logprob: -8.768791198730469
    5. 'print' → logprob: -10.768791198730469
    6. '(output' → logprob: -11.393791198730469
    7. '(resultado' → logprob: -11.393791198730469
    8. '(results' → logprob: -11.768791198730469
    9. 'result' → logprob: -12.018791198730469
    10. ' (' → logprob: -12.643791198730469

Token 231: ' une' (ID: 2463)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00023917861108202487
    2. 'result' → logprob: -8.500239372253418
    3. '(' → logprob: -10.375239372253418
    4. '(round' → logprob: -13.125239372253418
    5. ' (' → logprob: -14.375239372253418
    6. '()' → logprob: -14.500239372253418
    7. '(resultado' → logprob: -14.750239372253418
    8. '("' → logprob: -15.250239372253418
    9. '(res' → logprob: -15.500239372253418
    10. '(f' → logprob: -15.500239372253418

Token 232: ' valeur' (ID: 41664)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.10232177376747131
    2. '(' → logprob: -2.3523218631744385
    3. '("' → logprob: -6.602321624755859
    4. '(
' → logprob: -8.47732162475586
    5. 'result' → logprob: -8.72732162475586
    6. '()' → logprob: -8.72732162475586
    7. '('' → logprob: -9.72732162475586
    8. '("")' → logprob: -10.97732162475586
    9. '(res' → logprob: -11.10232162475586
    10. '(resultado' → logprob: -11.10232162475586

Token 233: ' à' (ID: 1221)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02995527721941471
    2. '(' → logprob: -3.5299553871154785
    3. '()' → logprob: -8.90495491027832
    4. '(print' → logprob: -9.90495491027832
    5. '(
' → logprob: -12.40495491027832
    6. 'result' → logprob: -12.65495491027832
    7. '(resultado' → logprob: -12.65495491027832
    8. ' (' → logprob: -13.02995491027832
    9. '(res' → logprob: -13.27995491027832
    10. '(output' → logprob: -13.65495491027832

Token 234: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.028510896489024162
    2. ' l' → logprob: -3.778510808944702
    3. 'la' → logprob: -5.528511047363281
    4. 'é' → logprob: -8.153511047363281
    5. ' lâ' → logprob: -8.278511047363281
    6. 'à' → logprob: -8.903511047363281
    7. ''écran' → logprob: -9.153511047363281
    8. ' écran' → logprob: -9.278511047363281
    9. 'lac' → logprob: -9.778511047363281
    10. '```' → logprob: -9.903511047363281

Token 235: ' console' (ID: 3887)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2580307126045227
    2. 'console' → logprob: -1.883030652999878
    3. 'l' → logprob: -3.133030652999878
    4. 'à' → logprob: -4.258030891418457
    5. 'screen' → logprob: -4.758030891418457
    6. ''écran' → logprob: -6.008030891418457
    7. 'terminal' → logprob: -6.883030891418457
    8. '```' → logprob: -7.383030891418457
    9. 'vide' → logprob: -7.508030891418457
    10. 'user' → logprob: -7.508030891418457

Token 236: '
' (ID: 198)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.47629472613334656
    2. '(' → logprob: -0.976294755935669
    3. '(print' → logprob: -6.35129451751709
    4. '(
' → logprob: -8.72629451751709
    5. '()' → logprob: -8.72629451751709
    6. 'print' → logprob: -9.60129451751709
    7. 'result' → logprob: -10.22629451751709
    8. '(

' → logprob: -11.22629451751709
    9. '(resultado' → logprob: -11.72629451751709
    10. '(res' → logprob: -12.10129451751709

Token 237: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. '(print' → logprob: -12.250005722045898
    3. ' print' → logprob: -15.375005722045898
    4. '(' → logprob: -16.2500057220459
    5. 'result' → logprob: -16.3750057220459
    6. '```' → logprob: -17.3750057220459
    7. '()' → logprob: -19.1250057220459
    8. '#print' → logprob: -19.1250057220459
    9. '(
' → logprob: -19.8750057220459
    10. 'Print' → logprob: -20.0000057220459

Token 238: ' '{' (ID: 24918)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.7697225252486533e-06
    2. ' print' → logprob: -12.500003814697266
    3. 'pr' → logprob: -19.125003814697266
    4. 'prin' → logprob: -19.125003814697266
    5. '```' → logprob: -20.125003814697266
    6. 'Print' → logprob: -20.625003814697266
    7. 'p' → logprob: -22.250003814697266
    8. 'pri' → logprob: -22.500003814697266
    9. '#print' → logprob: -23.000003814697266
    10. '(print' → logprob: -23.125003814697266

Token 239: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.08653372526168823
    2. 'result' → logprob: -2.961533784866333
    3. ':' → logprob: -3.586533784866333
    4. '0' → logprob: -5.711533546447754
    5. 'value' → logprob: -10.211533546447754
    6. '}' → logprob: -10.586533546447754
    7. ' :.' → logprob: -10.711533546447754
    8. ':^' → logprob: -11.211533546447754
    9. 'L' → logprob: -11.586533546447754
    10. '{' → logprob: -11.836533546447754

Token 240: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08261013776063919
    2. '3' → logprob: -2.7076101303100586
    3. '6' → logprob: -4.832610130310059
    4. '4' → logprob: -5.832610130310059
    5. '5' → logprob: -7.082610130310059
    6. '1' → logprob: -7.332610130310059
    7. '7' → logprob: -9.582610130310059
    8. '8' → logprob: -9.832610130310059
    9. '9' → logprob: -10.707610130310059
    10. '10' → logprob: -10.707610130310059

Token 241: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.123899558791891e-05
    2. 'g' → logprob: -10.25007152557373
    3. 'e' → logprob: -10.50007152557373
    4. '}' → logprob: -12.00007152557373
    5. '
' → logprob: -14.25007152557373
    6. '```' → logprob: -14.25007152557373
    7. '%' → logprob: -15.25007152557373
    8. '

' → logprob: -16.000070571899414
    9. ' f' → logprob: -16.375070571899414
    10. 's' → logprob: -16.500070571899414

Token 242: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -0.0019276861567050219
    2. '}'' → logprob: -6.751927852630615
    3. ''.' → logprob: -7.251927852630615
    4. '}' → logprob: -10.501927375793457
    5. ''' → logprob: -11.501927375793457
    6. ''}' → logprob: -12.126927375793457
    7. '}.' → logprob: -12.626927375793457
    8. '}".' → logprob: -13.376927375793457
    9. '{}'.' → logprob: -15.626927375793457
    10. '''.' → logprob: -16.376928329467773

Token 243: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -3.531315314830863e-06
    2. ' format' → logprob: -12.625003814697266
    3. '	format' → logprob: -16.375003814697266
    4. 'print' → logprob: -19.500003814697266
    5. ' ' → logprob: -19.625003814697266
    6. '```' → logprob: -19.750003814697266
    7. 'form' → logprob: -19.875003814697266
    8. '.format' → logprob: -20.125003814697266
    9. 'forma' → logprob: -21.500003814697266
    10. 'formatter' → logprob: -21.875003814697266

Token 244: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005062076961621642
    2. '(' → logprob: -7.625506401062012
    3. 'result' → logprob: -12.000506401062012
    4. '(resultado' → logprob: -12.375506401062012
    5. '(results' → logprob: -12.750506401062012
    6. ' (' → logprob: -13.000506401062012
    7. '(res' → logprob: -13.375506401062012
    8. '(rest' → logprob: -15.375506401062012
    9. '(
' → logprob: -15.500506401062012
    10. '(value' → logprob: -15.625506401062012

Token 245: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.054500666621607e-06
    2. 'result' → logprob: -13.25000286102295
    3. ')' → logprob: -14.00000286102295
    4. 'ат' → logprob: -15.12500286102295
    5. 'ats' → logprob: -17.500003814697266
    6. 't' → logprob: -18.500003814697266
    7. 'rat' → logprob: -18.750003814697266
    8. 'ant' → logprob: -19.375003814697266
    9. 'a' → logprob: -19.500003814697266
    10. 'atet' → logprob: -19.875003814697266

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003290288441348821
    2. ')}' → logprob: -8.75032901763916
    3. '))' → logprob: -9.25032901763916
    4. '}' → logprob: -10.62532901763916
    5. '})' → logprob: -10.75032901763916
    6. '')' → logprob: -11.50032901763916
    7. ' )' → logprob: -11.75032901763916
    8. ')}}' → logprob: -13.12532901763916
    9. ')
' → logprob: -13.25032901763916
    10. '}')' → logprob: -13.75032901763916

Token 247: ' form' (ID: 1625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14316122233867645
    2. '(' → logprob: -3.0181612968444824
    3. 'print' → logprob: -3.0181612968444824
    4. '('' → logprob: -4.018161296844482
    5. '(print' → logprob: -4.893161296844482
    6. '.format' → logprob: -5.768161296844482
    7. '(format' → logprob: -6.393161296844482
    8. '()' → logprob: -6.643161296844482
    9. '.print' → logprob: -6.768161296844482
    10. '("' → logprob: -7.268161296844482

Token 248: 'ate' (ID: 379)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.01283735316246748
    2. 'ate' → logprob: -4.6378374099731445
    3. 'atte' → logprob: -6.0128374099731445
    4. 'ats' → logprob: -7.8878374099731445
    5. 'atter' → logprob: -9.012837409973145
    6. 'ated' → logprob: -10.512837409973145
    7. 'attes' → logprob: -11.012837409973145
    8. '.at' → logprob: -11.137837409973145
    9. 'ates' → logprob: -11.512837409973145
    10. 'atted' → logprob: -11.512837409973145

Token 249: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004487327300012112
    2. 'result' → logprob: -5.50448751449585
    3. '(' → logprob: -7.87948751449585
    4. '(resultado' → logprob: -10.754487037658691
    5. '(results' → logprob: -12.879487037658691
    6. ' result' → logprob: -13.379487037658691
    7. '(res' → logprob: -13.754487037658691
    8. ' (' → logprob: -14.129487037658691
    9. '=result' → logprob: -14.504487037658691
    10. '(
' → logprob: -15.129487037658691

Token 250: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0003298632800579071
    2. ' result' → logprob: -8.250329971313477
    3. ' resultat' → logprob: -9.875329971313477
    4. ' résultat' → logprob: -11.750329971313477
    5. '{' → logprob: -12.000329971313477
    6. 'rés' → logprob: -13.500329971313477
    7. '(result' → logprob: -14.500329971313477
    8. 'resultado' → logprob: -14.875329971313477
    9. '[result' → logprob: -15.375329971313477
    10. '=result' → logprob: -16.250329971313477

Token 251: ' pour' (ID: 1930)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.047316111624240875
    2. 'result' → logprob: -3.172316074371338
    3. '{' → logprob: -5.547316074371338
    4. '(' → logprob: -9.297316551208496
    5. 'print' → logprob: -9.547316551208496
    6. ' result' → logprob: -9.922316551208496
    7. '("{' → logprob: -10.047316551208496
    8. ' (' → logprob: -10.422316551208496
    9. '```' → logprob: -10.547316551208496
    10. '(resultado' → logprob: -10.672316551208496

Token 252: ' l' (ID: 305)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.48172327876091003
    2. 'aff' → logprob: -1.1067233085632324
    3. 'avoir' → logprob: -3.2317233085632324
    4. ' avoir' → logprob: -4.856723308563232
    5. 'Afficher' → logprob: -6.981723308563232
    6. ''aff' → logprob: -6.981723308563232
    7. ' affich' → logprob: -7.731723308563232
    8. '#' → logprob: -7.981723308563232
    9. '_aff' → logprob: -8.356722831726074
    10. ' aff' → logprob: -8.481722831726074

Token 253: ''aff' (ID: 53397)
  Prédit: ''aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.15054766833782196
    2. 'imiter' → logprob: -2.150547742843628
    3. 'a' → logprob: -4.775547504425049
    4. 'e' → logprob: -5.150547504425049
    5. 'es' → logprob: -6.775547504425049
    6. 'aisser' → logprob: -6.900547504425049
    7. 'im' → logprob: -6.900547504425049
    8. 'print' → logprob: -7.150547504425049
    9. ''impression' → logprob: -7.150547504425049
    10. ''avoir' → logprob: -7.275547504425049

Token 254: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0006707399734295905
    2. 'iche' → logprob: -8.375670433044434
    3. 'icer' → logprob: -9.375670433044434
    4. '#' → logprob: -9.500670433044434
    5. 'ic' → logprob: -9.500670433044434
    6. 'ich' → logprob: -9.625670433044434
    7. '{' → logprob: -9.750670433044434
    8. 'ichage' → logprob: -11.000670433044434
    9. '{'' → logprob: -11.250670433044434
    10. '```' → logprob: -11.375670433044434

Token 255: ' avec' (ID: 3937)
  Prédit: '('{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('{' → logprob: -1.2482253313064575
    2. '(result' → logprob: -1.4982253313064575
    3. '("{' → logprob: -1.4982253313064575
    4. 'result' → logprob: -1.9982253313064575
    5. '{' → logprob: -2.873225212097168
    6. '(' → logprob: -3.498225212097168
    7. '('' → logprob: -4.498225212097168
    8. 'print' → logprob: -4.498225212097168
    9. '("%.' → logprob: -5.623225212097168
    10. '"{' → logprob: -5.873225212097168

Token 256: ' exactement' (ID: 108701)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.013974733650684357
    2. ' ' → logprob: -4.638974666595459
    3. ' {:.' → logprob: -6.013974666595459
    4. '{' → logprob: -6.388974666595459
    5. '.' → logprob: -10.013975143432617
    6. ' .' → logprob: -11.138975143432617
    7. '{:' → logprob: -12.013975143432617
    8. '1' → logprob: -12.388975143432617
    9. ''' → logprob: -12.638975143432617
    10. ''{' → logprob: -12.638975143432617

Token 257: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.043175943195819855
    2. ' ' → logprob: -3.1681759357452393
    3. '.' → logprob: -9.04317569732666
    4. ' {:.' → logprob: -10.16817569732666
    5. ' .' → logprob: -11.79317569732666
    6. '{' → logprob: -11.79317569732666
    7. '1' → logprob: -13.04317569732666
    8. '0' → logprob: -13.91817569732666
    9. ' ten' → logprob: -14.91817569732666
    10. ' {' → logprob: -15.04317569732666

Token 258: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009373087668791413
    2. '.' → logprob: -7.000937461853027
    3. '{' → logprob: -10.875937461853027
    4. ' ' → logprob: -12.000937461853027
    5. '0' → logprob: -14.250937461853027
    6. ' .' → logprob: -16.75093650817871
    7. ''.' → logprob: -17.12593650817871
    8. ' {:.' → logprob: -17.50093650817871
    9. '{:' → logprob: -17.62593650817871
    10. '```' → logprob: -18.25093650817871

Token 259: ' chiffres' (ID: 105565)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' après' (ID: 16460)
  Prédit: ' après'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' après' → logprob: -0.30097147822380066
    2. ' after' → logprob: -2.175971508026123
    3. '.' → logprob: -2.300971508026123
    4. 'after' → logprob: -4.300971508026123
    5. 'After' → logprob: -4.675971508026123
    6. '_after' → logprob: -4.925971508026123
    7. 'd' → logprob: -5.925971508026123
    8. 'Après' → logprob: -6.175971508026123
    9. 'f' → logprob: -6.800971508026123
    10. 'ap' → logprob: -6.925971508026123

Token 261: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' virg' (ID: 165362)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.283232718706131
    2. 'point' → logprob: -1.4082326889038086
    3. 'decimal' → logprob: -6.783232688903809
    4. ' point' → logprob: -7.283232688903809
    5. ',' → logprob: -9.283232688903809
    6. '.point' → logprob: -9.658232688903809
    7. '<|end|>' → logprob: -10.533232688903809
    8. 'period' → logprob: -11.033232688903809
    9. 'vir' → logprob: -11.158232688903809
    10. '-point' → logprob: -11.783232688903809

Token 263: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.4167596697807312
    2. 'ule' → logprob: -1.291759729385376
    3. 'ec' → logprob: -3.416759729385376
    4. 'icale' → logprob: -4.791759490966797
    5. 'iale' → logprob: -4.916759490966797
    6. 'e' → logprob: -4.916759490966797
    7. 'aule' → logprob: -6.166759490966797
    8. 'cale' → logprob: -6.541759490966797
    9. 'iole' → logprob: -6.541759490966797
    10. 'icule' → logprob: -6.791759490966797

Token 264: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005523175350390375
    2. '
' → logprob: -7.875552177429199
    3. ' print' → logprob: -9.6255521774292
    4. '(print' → logprob: -9.6255521774292
    5. '(
' → logprob: -11.0005521774292
    6. '(' → logprob: -11.1255521774292
    7. ')
' → logprob: -12.8755521774292
    8. ')' → logprob: -13.1255521774292
    9. '()
' → logprob: -13.5005521774292
    10. '#print' → logprob: -14.6255521774292

Token 265: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '
' → logprob: -16.75
    5. '(print' → logprob: -16.875
    6. '.print' → logprob: -19.25
    7. '#print' → logprob: -19.625
    8. '\' → logprob: -19.875
    9. '``' → logprob: -20.75
    10. 'pr' → logprob: -21.125

Token 266: ' {:.' (ID: 117746)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. '
' → logprob: -17.875003814697266
    4. 'pr' → logprob: -18.875003814697266
    5. 'prin' → logprob: -19.125003814697266
    6. 'printf' → logprob: -20.875003814697266
    7. '```' → logprob: -21.000003814697266
    8. '#print' → logprob: -21.125003814697266
    9. '.print' → logprob: -21.250003814697266
    10. 'p' → logprob: -21.625003814697266

Token 267: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.4034345187828876e-05
    2. '}' → logprob: -11.75002384185791
    3. '```' → logprob: -12.12502384185791
    4. ' ' → logprob: -12.62502384185791
    5. '{' → logprob: -13.37502384185791
    6. ':' → logprob: -13.37502384185791
    7. '1' → logprob: -13.62502384185791
    8. '0' → logprob: -13.62502384185791
    9. '.' → logprob: -15.00002384185791
    10. 'f' → logprob: -15.37502384185791

Token 268: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3782830137643032e-05
    2. '}' → logprob: -11.37501335144043
    3. ' f' → logprob: -13.50001335144043
    4. '```' → logprob: -14.37501335144043
    5. '
' → logprob: -15.12501335144043
    6. ''f' → logprob: -17.62501335144043
    7. '	f' → logprob: -18.12501335144043
    8. '

' → logprob: -18.75001335144043
    9. '   ' → logprob: -19.12501335144043
    10. '``' → logprob: -19.37501335144043

Token 269: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.025660181418061256
    2. '}'.' → logprob: -4.150660037994385
    3. '}'' → logprob: -5.650660037994385
    4. ''}' → logprob: -5.775660037994385
    5. '}.' → logprob: -6.775660037994385
    6. ')' → logprob: -6.900660037994385
    7. '}')' → logprob: -8.650660514831543
    8. '.format' → logprob: -8.775660514831543
    9. '').' → logprob: -9.025660514831543
    10. ''' → logprob: -9.400660514831543

Token 270: ' est' (ID: 893)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.42883217334747314
    2. ')' → logprob: -1.5538321733474731
    3. '}' → logprob: -2.4288320541381836
    4. 'print' → logprob: -3.3038320541381836
    5. '.' → logprob: -5.053832054138184
    6. 'format' → logprob: -5.928832054138184
    7. '.print' → logprob: -6.928832054138184
    8. '{' → logprob: -7.553832054138184
    9. ''' → logprob: -7.678832054138184
    10. ').' → logprob: -7.803832054138184

Token 271: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7860301733016968
    2. ''' → logprob: -2.1610302925109863
    3. ' une' → logprob: -2.1610302925109863
    4. ' un' → logprob: -2.6610302925109863
    5. ''une' → logprob: -2.6610302925109863
    6. '"' → logprob: -2.6610302925109863
    7. 'f' → logprob: -3.9110302925109863
    8. 'a' → logprob: -4.036030292510986
    9. 'une' → logprob: -4.036030292510986
    10. ' a' → logprob: -4.161030292510986

Token 272: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.009670860134065151
    2. 'f' → logprob: -5.384670734405518
    3. 'string' → logprob: -6.384670734405518
    4. 'specifier' → logprob: -6.759670734405518
    5. ' format' → logprob: -7.384670734405518
    6. 'chaine' → logprob: -7.759670734405518
    7. 'placeholder' → logprob: -8.134671211242676
    8. 'form' → logprob: -8.259671211242676
    9. 'float' → logprob: -9.259671211242676
    10. 'sp' → logprob: -9.384671211242676

Token 273: ' de' (ID: 334)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.23332707583904266
    2. ''}' → logprob: -2.3583271503448486
    3. ''' → logprob: -3.1083271503448486
    4. ')' → logprob: -3.7333271503448486
    5. ':' → logprob: -4.4833269119262695
    6. '.' → logprob: -4.8583269119262695
    7. '"}' → logprob: -5.7333269119262695
    8. '<|end|>' → logprob: -5.9833269119262695
    9. '.format' → logprob: -6.1083269119262695
    10. 'string' → logprob: -6.2333269119262695

Token 274: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2665690779685974
    2. 'format' → logprob: -2.016569137573242
    3. ' chaîne' → logprob: -3.516569137573242
    4. 'string' → logprob: -3.766569137573242
    5. 'cha' → logprob: -4.516569137573242
    6. 'nombre' → logprob: -4.891569137573242
    7. 'f' → logprob: -4.891569137573242
    8. 'float' → logprob: -5.016569137573242
    9. 'chain' → logprob: -6.141569137573242
    10. ' format' → logprob: -6.141569137573242

Token 275: ' où' (ID: 15113)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.7489750385284424
    2. ')' → logprob: -1.2489750385284424
    3. '.format' → logprob: -1.6239750385284424
    4. '.' → logprob: -3.4989750385284424
    5. ''' → logprob: -6.248974800109863
    6. '(' → logprob: -6.373974800109863
    7. '"' → logprob: -6.623974800109863
    8. '{' → logprob: -6.623974800109863
    9. 'format' → logprob: -6.998974800109863
    10. 'print' → logprob: -7.498974800109863

Token 276: ' {:' (ID: 53051)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33188629150390625
    2. 'le' → logprob: -1.9568862915039062
    3. '}' → logprob: -3.4568862915039062
    4. '.' → logprob: -3.9568862915039062
    5. ''' → logprob: -4.206886291503906
    6. '{' → logprob: -4.456886291503906
    7. ' le' → logprob: -4.831886291503906
    8. '0' → logprob: -4.831886291503906
    9. 'f' → logprob: -4.956886291503906
    10. 'la' → logprob: -4.956886291503906

Token 277: '}' (ID: 92)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.800739018013701e-05
    2. ':.' → logprob: -11.0000581741333
    3. '}' → logprob: -11.2500581741333
    4. '0' → logprob: -11.3750581741333
    5. ' .' → logprob: -11.3750581741333
    6. '}.' → logprob: -13.2500581741333
    7. ''.' → logprob: -13.6250581741333
    8. '10' → logprob: -14.3750581741333
    9. ',.' → logprob: -15.0000581741333
    10. '>' → logprob: -15.1250581741333

Token 278: ' indique' (ID: 97324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3823428153991699
    2. ':.' → logprob: -1.88234281539917
    3. '<|end|>' → logprob: -2.50734281539917
    4. '}' → logprob: -3.13234281539917
    5. ':' → logprob: -4.38234281539917
    6. '}.' → logprob: -5.13234281539917
    7. ' .' → logprob: -5.63234281539917
    8. '>' → logprob: -5.63234281539917
    9. '>.' → logprob: -5.88234281539917
    10. '.format' → logprob: -5.88234281539917

Token 279: ' une' (ID: 2463)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.9975922703742981
    2. 'le' → logprob: -0.9975922703742981
    3. 'f' → logprob: -1.9975922107696533
    4. 'la' → logprob: -3.3725922107696533
    5. '>' → logprob: -3.7475922107696533
    6. '.' → logprob: -3.7475922107696533
    7. ' la' → logprob: -4.122592449188232
    8. 'format' → logprob: -5.247592449188232
    9. 'une' → logprob: -5.372592449188232
    10. ' une' → logprob: -6.372592449188232

Token 280: ' valeur' (ID: 41664)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.26934558153152466
    2. 'float' → logprob: -2.76934552192688
    3. 'f' → logprob: -2.89434552192688
    4. '.' → logprob: -3.14434552192688
    5. '}' → logprob: -3.76934552192688
    6. '>' → logprob: -4.269345760345459
    7. ':' → logprob: -5.019345760345459
    8. 'val' → logprob: -5.519345760345459
    9. 'variable' → logprob: -5.644345760345459
    10. 'form' → logprob: -5.769345760345459

Token 281: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9000625610351562
    2. '<|end|>' → logprob: -1.4000625610351562
    3. '}' → logprob: -1.5250625610351562
    4. ':' → logprob: -2.7750625610351562
    5. '>' → logprob: -3.4000625610351562
    6. ':.' → logprob: -4.650062561035156
    7. '{' → logprob: -4.900062561035156
    8. '.format' → logprob: -5.525062561035156
    9. ' .' → logprob: -6.275062561035156
    10. '```' → logprob: -6.650062561035156

Token 282: ' form' (ID: 1625)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.3594655692577362
    2. 'format' → logprob: -1.8594655990600586
    3. 'formatter' → logprob: -2.3594655990600586
    4. 'form' → logprob: -3.4844655990600586
    5. 'f' → logprob: -4.609465599060059
    6. ' afficher' → logprob: -5.734465599060059
    7. 'float' → logprob: -6.234465599060059
    8. 'print' → logprob: -6.734465599060059
    9. '}' → logprob: -7.109465599060059
    10. '.' → logprob: -7.109465599060059

Token 283: 'ater' (ID: 1005)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.000747802434489131
    2. 'atter' → logprob: -7.5007476806640625
    3. 'ater' → logprob: -9.000747680664062
    4. ' at' → logprob: -11.125747680664062
    5. '```' → logprob: -11.500747680664062
    6. 'ат' → logprob: -11.875747680664062
    7. '	at' → logprob: -12.000747680664062
    8. '{' → logprob: -12.125747680664062
    9. 'ormat' → logprob: -12.250747680664062
    10. 'a' → logprob: -12.625747680664062

Token 284: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001281303120777011
    2. ' print' → logprob: -6.876281261444092
    3. ')' → logprob: -8.87628173828125
    4. '}' → logprob: -9.62628173828125
    5. '.print' → logprob: -11.12628173828125
    6. '#print' → logprob: -11.50128173828125
    7. '#' → logprob: -12.00128173828125
    8. '{' → logprob: -13.62628173828125
    9. '.' → logprob: -13.75128173828125
    10. 'result' → logprob: -13.87628173828125

Token 285: ' .' (ID: 887)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.1804576814174652
    2. ''}' → logprob: -2.305457592010498
    3. '.' → logprob: -3.930457592010498
    4. ''' → logprob: -4.680457592010498
    5. 'f' → logprob: -4.805457592010498
    6. '.format' → logprob: -5.555457592010498
    7. ' .' → logprob: -5.805457592010498
    8. ''.' → logprob: -6.055457592010498
    9. 'result' → logprob: -6.180457592010498
    10. ')' → logprob: -6.305457592010498

Token 286: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.717296517104842e-05
    2. '{' → logprob: -11.375057220458984
    3. ':' → logprob: -11.500057220458984
    4. '.' → logprob: -11.750057220458984
    5. ' ' → logprob: -11.750057220458984
    6. '1' → logprob: -12.000057220458984
    7. '2' → logprob: -12.250057220458984
    8. '>' → logprob: -12.875057220458984
    9. '0' → logprob: -13.125057220458984
    10. '4' → logprob: -13.750057220458984

Token 287: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.822646693966817e-06
    2. '```' → logprob: -12.250007629394531
    3. ' f' → logprob: -14.000007629394531
    4. '6' → logprob: -14.750007629394531
    5. '<f' → logprob: -14.750007629394531
    6. 'ff' → logprob: -15.625007629394531
    7. '<|end|>' → logprob: -15.750007629394531
    8. '	f' → logprob: -16.25000762939453
    9. 'flo' → logprob: -16.25000762939453
    10. 'print' → logprob: -16.50000762939453

Token 288: ' signifie' (ID: 81149)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.017446370795369148
    2. ''}' → logprob: -4.392446517944336
    3. ')' → logprob: -6.392446517944336
    4. '}'' → logprob: -6.517446517944336
    5. '.format' → logprob: -6.892446517944336
    6. '}'.' → logprob: -8.517446517944336
    7. '}')' → logprob: -8.892446517944336
    8. 'print' → logprob: -9.642446517944336
    9. '.' → logprob: -9.892446517944336
    10. ''' → logprob: -10.017446517944336

Token 289: ' "' (ID: 392)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.8512018918991089
    2. 'un' → logprob: -1.4762018918991089
    3. ' un' → logprob: -1.7262018918991089
    4. '10' → logprob: -2.2262020111083984
    5. ' afficher' → logprob: -3.4762020111083984
    6. 'nombre' → logprob: -5.351202011108398
    7. 'float' → logprob: -5.351202011108398
    8. 'une' → logprob: -5.601202011108398
    9. 'que' → logprob: -5.601202011108398
    10. ' ' → logprob: -5.726202011108398

Token 290: 'd' (ID: 67)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.12871399521827698
    2. ' afficher' → logprob: -3.128714084625244
    3. 'd' → logprob: -3.753714084625244
    4. 'nombre' → logprob: -3.878714084625244
    5. 'float' → logprob: -4.003714084625244
    6. 'floating' → logprob: -5.753714084625244
    7. 'Afficher' → logprob: -5.878714084625244
    8. '10' → logprob: -6.003714084625244
    9. 'format' → logprob: -6.378714084625244
    10. 'display' → logprob: -6.628714084625244

Token 291: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.0007293514790944755
    2. 'iza' → logprob: -8.62572956085205
    3. '```' → logprob: -8.87572956085205
    4. 'iz' → logprob: -9.37572956085205
    5. 'ixi' → logprob: -10.25072956085205
    6. 'éc' → logprob: -10.25072956085205
    7. 'is' → logprob: -10.50072956085205
    8. 'ixed' → logprob: -10.62572956085205
    9. 'é' → logprob: -10.87572956085205
    10. '{' → logprob: -10.87572956085205

Token 292: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.487425833940506
    2. ' chiffres' → logprob: -0.9874258041381836
    3. 'd' → logprob: -4.862425804138184
    4. 'digits' → logprob: -5.987425804138184
    5. ' digits' → logprob: -7.112425804138184
    6. 'f' → logprob: -7.112425804138184
    7. 'nombre' → logprob: -8.612425804138184
    8. '<|end|>' → logprob: -8.737425804138184
    9. ' chiffre' → logprob: -8.862425804138184
    10. ' ' → logprob: -8.862425804138184

Token 293: ' après' (ID: 16460)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.13244566321372986
    2. ' après' → logprob: -3.0074455738067627
    3. 'apr' → logprob: -3.2574455738067627
    4. 'd' → logprob: -4.632445812225342
    5. ' apr' → logprob: -4.757445812225342
    6. 'after' → logprob: -4.882445812225342
    7. '<|end|>' → logprob: -5.257445812225342
    8. ' apres' → logprob: -6.632445812225342
    9. ' apre' → logprob: -7.382445812225342
    10. 'au' → logprob: -7.382445812225342

Token 294: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.045502036809921265
    2. 'the' → logprob: -3.795501947402954
    3. ' la' → logprob: -4.545502185821533
    4. '<|end|>' → logprob: -5.170502185821533
    5. 'le' → logprob: -5.670502185821533
    6. '.' → logprob: -6.545502185821533
    7. 'l' → logprob: -7.420502185821533
    8. 'f' → logprob: -10.170501708984375
    9. 'decimal' → logprob: -10.295501708984375
    10. ' the' → logprob: -10.295501708984375

Token 295: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.005140307825058699
    2. ' virg' → logprob: -6.13014030456543
    3. 'point' → logprob: -6.25514030456543
    4. '.' → logprob: -7.63014030456543
    5. ',' → logprob: -7.63014030456543
    6. 'decimal' → logprob: -10.25514030456543
    7. ' Virg' → logprob: -11.75514030456543
    8. 'v' → logprob: -12.50514030456543
    9. 'comma' → logprob: -12.88014030456543
    10. '```' → logprob: -13.38014030456543

Token 296: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00045724798110313714
    2. 'але' → logprob: -9.375456809997559
    3. 'le' → logprob: -9.500456809997559
    4. 'alea' → logprob: -9.875456809997559
    5. 'a' → logprob: -10.000456809997559
    6. 'ule' → logprob: -10.250456809997559
    7. ',' → logprob: -10.375456809997559
    8. '```' → logprob: -10.875456809997559
    9. 'al' → logprob: -11.500456809997559
    10. 'ále' → logprob: -11.625456809997559

Token 297: '"
' (ID: 1092)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0062673091888427734
    2. '}'' → logprob: -5.256267547607422
    3. '}')' → logprob: -7.881267547607422
    4. ''}' → logprob: -8.131267547607422
    5. '}"' → logprob: -8.506267547607422
    6. ')' → logprob: -9.756267547607422
    7. '}")' → logprob: -10.256267547607422
    8. '})' → logprob: -11.131267547607422
    9. '"}' → logprob: -11.256267547607422
    10. '}'.' → logprob: -11.256267547607422

Token 298: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. '
' → logprob: -17.500001907348633
    4. '```' → logprob: -19.625001907348633
    5. '(print' → logprob: -19.875001907348633
    6. '#print' → logprob: -20.375001907348633
    7. 'prin' → logprob: -20.500001907348633
    8. '.print' → logprob: -20.625001907348633
    9. 'pr' → logprob: -21.250001907348633
    10. 'Print' → logprob: -21.750001907348633

Token 299: '('{' (ID: 79246)
  Prédit: '('{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('{' → logprob: -0.0021736971102654934
    2. '("{' → logprob: -6.502173900604248
    3. '(' → logprob: -7.502173900604248
    4. '('' → logprob: -9.12717342376709
    5. '(f' → logprob: -11.75217342376709
    6. ' ('' → logprob: -13.87717342376709
    7. '('{}' → logprob: -13.87717342376709
    8. '(format' → logprob: -15.75217342376709
    9. ''{' → logprob: -15.75217342376709
    10. '("' → logprob: -15.75217342376709

Token 300: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.625015258789062
    3. ':' → logprob: -12.250015258789062
    4. ' :.' → logprob: -13.375015258789062
    5. '0' → logprob: -15.750015258789062
    6. 'result' → logprob: -17.375015258789062
    7. ':L' → logprob: -17.375015258789062
    8. ' :' → logprob: -17.875015258789062
    9. ' {:.' → logprob: -18.125015258789062
    10. '.:' → logprob: -18.625015258789062

Token 301: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '```' → logprob: -18.125
    3. ' ' → logprob: -18.75
    4. '010' → logprob: -20.875
    5. '0' → logprob: -21.125
    6. 'f' → logprob: -22.625
    7. '.' → logprob: -22.875
    8. '{' → logprob: -22.875
    9. '１０' → logprob: -23.0
    10. '``' → logprob: -23.0

Token 302: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.896309739408025e-07
    2. ' f' → logprob: -14.875000953674316
    3. '
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375
    5. '	f' → logprob: -17.0
    6. 'ф' → logprob: -17.75
    7. '}' → logprob: -17.875
    8. '

' → logprob: -18.0
    9. ''f' → logprob: -18.75
    10. 'ƒ' → logprob: -18.875

Token 303: '}'.' (ID: 58336)
  Prédit: '}'.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'.' → logprob: -6.587483221665025e-05
    2. '}' → logprob: -10.000065803527832
    3. '}')' → logprob: -11.375065803527832
    4. '}'' → logprob: -11.750065803527832
    5. '}".' → logprob: -14.500065803527832
    6. ''.' → logprob: -14.750065803527832
    7. '}',' → logprob: -16.12506675720215
    8. ''}' → logprob: -17.00006675720215
    9. '}')
' → logprob: -17.87506675720215
    10. '}.' → logprob: -17.87506675720215

Token 304: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: 0.0
    2. ' format' → logprob: -16.75
    3. ')' → logprob: -21.375
    4. '	format' → logprob: -21.5
    5. 'print' → logprob: -22.375
    6. 'f' → logprob: -22.375
    7. 'form' → logprob: -22.375
    8. '.format' → logprob: -22.875
    9. '(format' → logprob: -23.0
    10. 'forma' → logprob: -23.625

Token 305: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.849109119386412e-06
    2. 'result' → logprob: -11.750009536743164
    3. '=result' → logprob: -14.500009536743164
    4. '(resultado' → logprob: -14.500009536743164
    5. ',result' → logprob: -14.875009536743164
    6. '(res' → logprob: -15.250009536743164
    7. '(results' → logprob: -16.375009536743164
    8. '(' → logprob: -16.625009536743164
    9. ' (' → logprob: -16.625009536743164
    10. '/result' → logprob: -18.375009536743164

Token 306: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.7697225252486533e-06
    2. 't' → logprob: -12.750003814697266
    3. 'tat' → logprob: -14.875003814697266
    4. 'ат' → logprob: -15.500003814697266
    5. 'result' → logprob: -16.250003814697266
    6. 'rat' → logprob: -16.750003814697266
    7. 'ant' → logprob: -16.750003814697266
    8. 'a' → logprob: -18.000003814697266
    9. ' at' → logprob: -18.250003814697266
    10. 'atat' → logprob: -18.250003814697266

Token 307: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067182136699557304
    2. ')' → logprob: -5.006718158721924
    3. '))
' → logprob: -13.381718635559082
    4. ')))' → logprob: -13.881718635559082
    5. ' ))' → logprob: -15.506718635559082
    6. ''))' → logprob: -16.881717681884766
    7. ')}' → logprob: -17.131717681884766
    8. '})' → logprob: -17.131717681884766
    9. '));' → logprob: -18.006717681884766
    10. ')
' → logprob: -18.006717681884766

Token 308: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' La' (ID: 3038)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' sortie' (ID: 52761)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04743333160877228
    2. ' ' → logprob: -3.797433376312256
    3. '<|end|>' → logprob: -4.422433376312256
    4. ' #' → logprob: -4.672433376312256
    5. '[' → logprob: -8.047432899475098
    6. ')' → logprob: -8.047432899475098
    7. '```' → logprob: -8.297432899475098
    8. 's' → logprob: -8.422432899475098
    9. '<|end|>' → logprob: -8.672432899475098
    10. 'print' → logprob: -8.922432899475098

Token 311: ' sera' (ID: 15511)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: ' donc' (ID: 14206)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10623522102832794
    2. ' ' → logprob: -2.7312352657318115
    3. '42' → logprob: -4.231235027313232
    4. '10' → logprob: -5.356235027313232
    5. '<|end|>' → logprob: -5.356235027313232
    6. '27' → logprob: -6.606235027313232
    7. '\n' → logprob: -6.856235027313232
    8. ' (' → logprob: -7.106235027313232
    9. '123' → logprob: -7.606235027313232
    10. '.' → logprob: -7.731235027313232

Token 313: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03861065208911896
    2. 'le' → logprob: -4.538610458374023
    3. ' ' → logprob: -4.913610458374023
    4. '000' → logprob: -5.538610458374023
    5. ' le' → logprob: -5.538610458374023
    6. ' un' → logprob: -6.163610458374023
    7. '1' → logprob: -6.663610458374023
    8. '9' → logprob: -7.038610458374023
    9. 'un' → logprob: -7.163610458374023
    10. 'une' → logprob: -7.413610458374023

Token 314: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.11388792842626572
    2. ' nombre' → logprob: -2.2388880252838135
    3. 'cube' → logprob: -7.738887786865234
    4. ' cube' → logprob: -8.363887786865234
    5. 'n' → logprob: -9.238887786865234
    6. 'Nombre' → logprob: -9.613887786865234
    7. ' ' → logprob: -9.738887786865234
    8. ' nombres' → logprob: -10.238887786865234
    9. 'float' → logprob: -10.363887786865234
    10. 'volume' → logprob: -10.988887786865234

Token 315: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.35009604692459106
    2. 'd' → logprob: -1.2250959873199463
    3. '10' → logprob: -7.225096225738525
    4. '```' → logprob: -7.475096225738525
    5. ' virg' → logprob: -8.600095748901367
    6. ' ' → logprob: -10.100095748901367
    7. ' ' → logprob: -10.975095748901367
    8. 'v' → logprob: -11.475095748901367
    9. 'val' → logprob: -11.475095748901367
    10. 'vic' → logprob: -11.600095748901367

Token 317: 'ule' (ID: 1601)
  Prédit: 'ille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.6023125052452087
    2. 'ule' → logprob: -0.8523125052452087
    3. 'ile' → logprob: -3.7273125648498535
    4. 'le' → logprob: -6.8523125648498535
    5. 'ale' → logprob: -7.6023125648498535
    6. 'illes' → logprob: -9.227312088012695
    7. 'lle' → logprob: -9.727312088012695
    8. 'elle' → logprob: -9.727312088012695
    9. 'e' → logprob: -10.102312088012695
    10. 'er' → logprob: -10.852312088012695

Token 318: ' flott' (ID: 108700)
  Prédit: 'fl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.16984760761260986
    2. '.' → logprob: -2.5448474884033203
    3. 'fix' → logprob: -3.5448474884033203
    4. 'float' → logprob: -3.6698474884033203
    5. ' flott' → logprob: -4.66984748840332
    6. 'flo' → logprob: -4.91984748840332
    7. 'floating' → logprob: -6.29484748840332
    8. 'mobile' → logprob: -6.66984748840332
    9. 'faite' → logprob: -7.41984748840332
    10. 'flu' → logprob: -7.66984748840332

Token 319: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0028111785650253296
    2. 'le' → logprob: -6.627810955047607
    3. 'e' → logprob: -7.502810955047607
    4. ' ante' → logprob: -8.252811431884766
    5. 'nte' → logprob: -8.752811431884766
    6. 'Ante' → logprob: -9.252811431884766
    7. 'late' → logprob: -10.127811431884766
    8. 'ente' → logprob: -10.252811431884766
    9. 'ect' → logprob: -10.252811431884766
    10. 'ANTE' → logprob: -10.377811431884766

Token 320: ' affich' (ID: 90179)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5275465250015259
    2. '<|end|>' → logprob: -1.0275465250015259
    3. '\n' → logprob: -3.2775464057922363
    4. '
' → logprob: -4.902546405792236
    5. '```' → logprob: -6.027546405792236
    6. ' ' → logprob: -6.652546405792236
    7. ' )' → logprob: -6.777546405792236
    8. '\' → logprob: -7.902546405792236
    9. '<|end|>' → logprob: -8.152546882629395
    10. '#' → logprob: -8.527546882629395

Token 321: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00036299455678090453
    2. 'ée' → logprob: -8.00036334991455
    3. 'e' → logprob: -11.12536334991455
    4. 'ant' → logprob: -11.37536334991455
    5. '#' → logprob: -15.00036334991455
    6. '�' → logprob: -15.62536334991455
    7. 'a' → logprob: -15.62536334991455
    8. 'age' → logprob: -15.87536334991455
    9. 'è' → logprob: -16.250362396240234
    10. 'É' → logprob: -16.500362396240234

Token 322: ' précisément' (ID: 139179)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.4198494553565979
    2. ' with' → logprob: -1.9198493957519531
    3. '<|end|>' → logprob: -2.044849395751953
    4. 'avec' → logprob: -3.294849395751953
    5. 'with' → logprob: -3.669849395751953
    6. ' au' → logprob: -6.669849395751953
    7. ' ' → logprob: -7.794849395751953
    8. 'au' → logprob: -7.919849395751953
    9. '10' → logprob: -7.919849395751953
    10. '.' → logprob: -7.919849395751953

Token 323: ' à' (ID: 1221)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.5511024594306946
    2. ' with' → logprob: -1.9261023998260498
    3. '<|end|>' → logprob: -2.17610239982605
    4. '\n' → logprob: -2.92610239982605
    5. '10' → logprob: -3.55110239982605
    6. ' au' → logprob: -3.67610239982605
    7. '.' → logprob: -4.051102638244629
    8. ' ' → logprob: -4.426102638244629
    9. 'with' → logprob: -4.801102638244629
    10. '0' → logprob: -5.176102638244629

Token 324: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03833683207631111
    2. '10' → logprob: -3.288336753845215
    3. ' ' → logprob: -8.413336753845215
    4. ' dix' → logprob: -9.538336753845215
    5. ' ' → logprob: -14.913336753845215
    6. '	d' → logprob: -15.163336753845215
    7. '1' → logprob: -15.288336753845215
    8. '```' → logprob: -15.538336753845215
    9. 'D' → logprob: -15.663336753845215
    10. 'l' → logprob: -16.66333770751953

Token 325: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38688623905181885
    2. 'd' → logprob: -1.1368862390518188
    3. ' dix' → logprob: -11.136886596679688
    4. ' ' → logprob: -15.011886596679688
    5. '```' → logprob: -15.636886596679688
    6. '1' → logprob: -16.136886596679688
    7. 'ten' → logprob: -17.261886596679688
    8. '۱۰' → logprob: -17.886886596679688
    9. '１０' → logprob: -18.011886596679688
    10. '``' → logprob: -18.261886596679688

Token 326: ' déc' (ID: 8498)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4720418155193329
    2. 'ch' → logprob: -1.0970418453216553
    3. ' chiffres' → logprob: -3.3470418453216553
    4. 'digits' → logprob: -6.097041606903076
    5. 'places' → logprob: -6.222041606903076
    6. '<|end|>' → logprob: -7.347041606903076
    7. 'decimal' → logprob: -7.847041606903076
    8. 'car' → logprob: -7.972041606903076
    9. 'c' → logprob: -7.972041606903076
    10. '.' → logprob: -8.222042083740234

Token 327: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.01577097550034523
    2. 'imal' → logprob: -4.39077091217041
    3. 'ales' → logprob: -6.51577091217041
    4. 'imals' → logprob: -7.26577091217041
    5. '```' → logprob: -7.51577091217041
    6. 'imes' → logprob: -9.64077091217041
    7. '{' → logprob: -10.01577091217041
    8. 'places' → logprob: -10.14077091217041
    9. 'ima' → logprob: -10.51577091217041
    10. 'import' → logprob: -10.51577091217041

Token 328: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0006640645442530513
    2. 'es' → logprob: -7.500664234161377
    3. 'al' → logprob: -10.375663757324219
    4. 'ale' → logprob: -10.500663757324219
    5. 'als' → logprob: -11.625663757324219
    6. '```' → logprob: -11.625663757324219
    7. 'les' → logprob: -12.750663757324219
    8. 'places' → logprob: -13.125663757324219
    9. '%' → logprob: -13.250663757324219
    10. 'alles' → logprob: -13.375663757324219


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 27.91%
Précision adaptée (1ère position): 27.91%
Précision (top 10): 59.51%
================================================================================
