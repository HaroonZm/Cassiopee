================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une valeur entière
# La fonction input() affiche une invite à l'utilisateur et retourne la saisie sous forme de chaîne de caractères
# int() convertit cette chaîne de caractères en un entier (nombre entier)
L = int(input())

# Calcule le cube de L, c'est-à-dire L * L * L (ce qui revient à élever L à la puissance 3)
# Puis divise ce résultat par 27
# L'opérateur * est utilisé pour la multiplication
# L'opérateur / est utilisé pour la division et donne un résultat à virgule flottante
# print() affiche le résultat final à l'écran
print(L * L * L / 27)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5264374613761902
    2. ' de' → logprob: -2.026437520980835
    3. ' ' → logprob: -2.401437520980835
    4. ':' → logprob: -2.526437520980835
    5. '_' → logprob: -3.151437520980835
    6. ' :' → logprob: -3.901437520980835
    7. '```' → logprob: -4.526437282562256
    8. ' =' → logprob: -4.901437282562256
    9. ' d' → logprob: -4.901437282562256
    10. ''' → logprob: -5.151437282562256

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009819366969168186
    2. ' l' → logprob: -4.759819507598877
    3. 'user' → logprob: -7.509819507598877
    4. '#' → logprob: -8.509819030761719
    5. 'util' → logprob: -8.509819030761719
    6. 'la' → logprob: -9.884819030761719
    7. '```' → logprob: -10.009819030761719
    8. '`' → logprob: -10.384819030761719
    9. 'un' → logprob: -10.384819030761719
    10. ' ' → logprob: -11.384819030761719

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6810790300369263
    2. 'nom' → logprob: -1.4310790300369263
    3. 'input' → logprob: -2.5560789108276367
    4. 'user' → logprob: -2.9310789108276367
    5. 'n' → logprob: -3.0560789108276367
    6. 'print' → logprob: -3.6810789108276367
    7. 's' → logprob: -3.9310789108276367
    8. 'username' → logprob: -4.556078910827637
    9. 'age' → logprob: -5.181078910827637
    10. 'prenom' → logprob: -6.056078910827637

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009455247782170773
    2. 'r' → logprob: -5.63445520401001
    3. 'entr' → logprob: -5.88445520401001
    4. '```' → logprob: -6.88445520401001
    5. ' saisir' → logprob: -7.38445520401001
    6. 'input' → logprob: -7.75945520401001
    7. '#' → logprob: -8.509455680847168
    8. 'sa' → logprob: -8.884455680847168
    9. 'contin' → logprob: -9.134455680847168
    10. 'entrée' → logprob: -9.259455680847168

Token 8: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7834512591362
    2. ' une' → logprob: -1.1584513187408447
    3. ' son' → logprob: -2.2834513187408447
    4. ' ' → logprob: -3.0334513187408447
    5. ' le' → logprob: -3.9084513187408447
    6. 'un' → logprob: -5.158451080322266
    7. 'une' → logprob: -5.158451080322266
    8. '_' → logprob: -5.283451080322266
    9. ''un' → logprob: -5.283451080322266
    10. 'le' → logprob: -5.408451080322266

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3380856513977051
    2. ' chaîne' → logprob: -2.088085651397705
    3. ' phrase' → logprob: -2.463085651397705
    4. 'chaine' → logprob: -3.588085651397705
    5. 'phrase' → logprob: -4.088085651397705
    6. ' ligne' → logprob: -4.963085651397705
    7. ' chaine' → logprob: -5.338085651397705
    8. 'space' → logprob: -5.588085651397705
    9. ' valeur' → logprob: -6.088085651397705
    10. ' ' → logprob: -6.338085651397705

Token 10: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2572648227214813
    2. 'val' → logprob: -2.6322648525238037
    3. 'value' → logprob: -3.0072648525238037
    4. 'x' → logprob: -3.5072648525238037
    5. '_' → logprob: -3.8822648525238037
    6. 's' → logprob: -4.132264614105225
    7. 'input' → logprob: -4.382264614105225
    8. 'i' → logprob: -5.257264614105225
    9. 'user' → logprob: -5.257264614105225
    10. '#' → logprob: -5.882264614105225

Token 11: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9335655570030212
    2. 'x' → logprob: -1.558565616607666
    3. 'v' → logprob: -1.683565616607666
    4. 'i' → logprob: -1.683565616607666
    5. 'value' → logprob: -5.308565616607666
    6. 'a' → logprob: -5.933565616607666
    7. '\n' → logprob: -5.933565616607666
    8. '#' → logprob: -6.058565616607666
    9. '`' → logprob: -6.058565616607666
    10. 'input' → logprob: -6.058565616607666

Token 12: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41373252868652344
    2. 'x' → logprob: -2.4137325286865234
    3. 'v' → logprob: -2.5387325286865234
    4. 'i' → logprob: -3.4137325286865234
    5. '\' → logprob: -3.6637325286865234
    6. 'val' → logprob: -3.6637325286865234
    7. '\n' → logprob: -4.288732528686523
    8. '_' → logprob: -4.288732528686523
    9. 's' → logprob: -4.413732528686523
    10. '```' → logprob: -4.413732528686523

Token 13: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.24577783048152924
    2. 'value' → logprob: -2.3707778453826904
    3. 'n' → logprob: -2.8707778453826904
    4. 'nombre' → logprob: -3.7457778453826904
    5. 'ent' → logprob: -4.120777606964111
    6. 'x' → logprob: -4.995777606964111
    7. ' valeur' → logprob: -5.495777606964111
    8. 'user' → logprob: -5.620777606964111
    9. 'v' → logprob: -5.870777606964111
    10. 's' → logprob: -6.120777606964111

Token 14: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10868323594331741
    2. ' valeur' → logprob: -2.4836833477020264
    3. 'value' → logprob: -4.358683109283447
    4. ' val' → logprob: -6.483683109283447
    5. 'n' → logprob: -6.858683109283447
    6. 's' → logprob: -6.983683109283447
    7. 'v' → logprob: -6.983683109283447
    8. ' value' → logprob: -7.233683109283447
    9. '#' → logprob: -7.983683109283447
    10. ' ' → logprob: -8.108683586120605

Token 15: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3493468165397644
    2. 's' → logprob: -2.474346876144409
    3. ' input' → logprob: -2.599346876144409
    4. ' ' → logprob: -2.724346876144409
    5. ' def' → logprob: -3.349346876144409
    6. 'd' → logprob: -4.09934663772583
    7. 'input' → logprob: -4.59934663772583
    8. ' d' → logprob: -5.34934663772583
    9. 'n' → logprob: -7.72434663772583
    10. ' est' → logprob: -8.099347114562988

Token 16: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013274075172375888
    2. '(
' → logprob: -10.00013256072998
    3. '('' → logprob: -10.12513256072998
    4. '()' → logprob: -11.12513256072998
    5. 's' → logprob: -11.25013256072998
    6. ' (' → logprob: -12.37513256072998
    7. '("' → logprob: -12.75013256072998
    8. ''' → logprob: -13.12513256072998
    9. '"' → logprob: -13.37513256072998
    10. '("""' → logprob: -13.75013256072998

Token 17: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059413325041532516
    2. ' ' → logprob: -3.559413433074951
    3. ' (' → logprob: -4.184413433074951
    4. '()' → logprob: -5.559413433074951
    5. 's' → logprob: -6.059413433074951
    6. ')' → logprob: -6.434413433074951
    7. ' )' → logprob: -6.934413433074951
    8. '_' → logprob: -6.934413433074951
    9. ',' → logprob: -7.184413433074951
    10. '.' → logprob: -7.309413433074951

Token 18: ' une' (ID: 2463)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8456293344497681
    2. '(' → logprob: -1.845629334449768
    3. '("' → logprob: -2.3456292152404785
    4. ' la' → logprob: -2.5956292152404785
    5. ''' → logprob: -2.8456292152404785
    6. ' ' → logprob: -2.8456292152404785
    7. '()' → logprob: -3.2206292152404785
    8. ' une' → logprob: -3.2206292152404785
    9. '('' → logprob: -4.0956292152404785
    10. ' un' → logprob: -4.8456292152404785

Token 19: ' invite' (ID: 26191)
  Prédit: 'invite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invite' → logprob: -0.3329417407512665
    2. ' invite' → logprob: -1.5829417705535889
    3. 'inv' → logprob: -3.707941770553589
    4. 'chaine' → logprob: -4.08294153213501
    5. ' chaîne' → logprob: -4.70794153213501
    6. 'cha' → logprob: -4.70794153213501
    7. 'message' → logprob: -4.95794153213501
    8. 'phrase' → logprob: -6.20794153213501
    9. 'question' → logprob: -6.20794153213501
    10. 'entrée' → logprob: -6.45794153213501

Token 20: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2205909788608551
    2. '"' → logprob: -2.4705910682678223
    3. ''' → logprob: -2.9705910682678223
    4. '_' → logprob: -4.720591068267822
    5. ',' → logprob: -4.970591068267822
    6. 's' → logprob: -4.970591068267822
    7. '.' → logprob: -4.970591068267822
    8. '(' → logprob: -5.595591068267822
    9. '`' → logprob: -5.595591068267822
    10. ' )' → logprob: -5.845591068267822

Token 21: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05712016299366951
    2. ' l' → logprob: -3.0571200847625732
    3. '	l' → logprob: -5.182120323181152
    4. ' ' → logprob: -6.682120323181152
    5. '­l' → logprob: -8.557120323181152
    6. '```' → logprob: -8.807120323181152
    7. '-l' → logprob: -8.932120323181152
    8. ' ' → logprob: -8.932120323181152
    9. '   ' → logprob: -9.057120323181152
    10. '  ' → logprob: -9.182120323181152

Token 22: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.031027181074023247
    2. ''' → logprob: -4.531027317047119
    3. ''entrée' → logprob: -5.031027317047119
    4. 'a' → logprob: -5.531027317047119
    5. 'u' → logprob: -5.906027317047119
    6. 'util' → logprob: -6.406027317047119
    7. '’utilisateur' → logprob: -6.406027317047119
    8. '')' → logprob: -7.156027317047119
    9. ''util' → logprob: -7.281027317047119
    10. ''user' → logprob: -7.531027317047119

Token 23: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3367990255355835
    2. 'v' → logprob: -1.5867990255355835
    3. 'i' → logprob: -1.9617990255355835
    4. 'n' → logprob: -2.086799144744873
    5. 'val' → logprob: -2.336799144744873
    6. 'value' → logprob: -3.336799144744873
    7. 's' → logprob: -3.461799144744873
    8. ' ' → logprob: -3.586799144744873
    9. 'x' → logprob: -3.961799144744873
    10. ',' → logprob: -4.586799144744873

Token 24: ' retourne' (ID: 178818)
  Prédit: ' récup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récup' → logprob: -0.422385036945343
    2. ' lit' → logprob: -2.2973849773406982
    3. ' retourne' → logprob: -2.2973849773406982
    4. 'r' → logprob: -2.5473849773406982
    5. 'lit' → logprob: -3.5473849773406982
    6. 'ren' → logprob: -4.672385215759277
    7. 'att' → logprob: -5.172385215759277
    8. ' ren' → logprob: -5.422385215759277
    9. ' reçoit' → logprob: -5.547385215759277
    10. ' attend' → logprob: -5.797385215759277

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6068220138549805
    2. ' une' → logprob: -0.8568220138549805
    3. ' ' → logprob: -4.7318220138549805
    4. ' ce' → logprob: -4.9818220138549805
    5. 'la' → logprob: -5.7318220138549805
    6. ' l' → logprob: -5.7318220138549805
    7. 'une' → logprob: -6.2318220138549805
    8. ' sa' → logprob: -6.4818220138549805
    9. ' ' → logprob: -6.9818220138549805
    10. ' le' → logprob: -7.1068220138549805

Token 26: ' sais' (ID: 30010)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1318066269159317
    2. ' valeur' → logprob: -2.3818066120147705
    3. 's' → logprob: -4.25680685043335
    4. 'chaine' → logprob: -4.75680685043335
    5. ' chaine' → logprob: -5.00680685043335
    6. ' sais' → logprob: -7.38180685043335
    7. ' ' → logprob: -8.256806373596191
    8. 'cha' → logprob: -8.381806373596191
    9. 'val' → logprob: -9.006806373596191
    10. 'string' → logprob: -9.131806373596191

Token 27: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.000496436667162925
    2. 'es' → logprob: -8.500496864318848
    3. 's' → logprob: -8.500496864318848
    4. 'ie' → logprob: -10.000496864318848
    5. 'sie' → logprob: -11.125496864318848
    6. 'é' → logprob: -11.625496864318848
    7. 'd' → logprob: -12.125496864318848
    8. ' ' → logprob: -12.500496864318848
    9. 'ée' → logprob: -13.000496864318848
    10. ' e' → logprob: -13.250496864318848

Token 28: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8071911931037903
    2. 'v' → logprob: -1.5571911334991455
    3. 'val' → logprob: -1.6821911334991455
    4. 'x' → logprob: -3.1821911334991455
    5. '_' → logprob: -3.6821911334991455
    6. 'i' → logprob: -3.9321911334991455
    7. 'value' → logprob: -4.057191371917725
    8. '#' → logprob: -4.307191371917725
    9. 's' → logprob: -4.432191371917725
    10. 'ent' → logprob: -4.682191371917725

Token 29: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.25595414638519287
    2. 'forme' → logprob: -1.5059541463851929
    3. 'form' → logprob: -5.630954265594482
    4. 'chaine' → logprob: -8.380953788757324
    5. 'forma' → logprob: -8.880953788757324
    6. ' form' → logprob: -10.630953788757324
    7. 'la' → logprob: -11.505953788757324
    8. ' ' → logprob: -12.005953788757324
    9. '<form' → logprob: -12.755953788757324
    10. 'str' → logprob: -12.755953788757324

Token 30: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.00899718888103962
    2. ' de' → logprob: -4.883996963500977
    3. 'd' → logprob: -6.633996963500977
    4. 'de' → logprob: -9.758996963500977
    5. ''' → logprob: -12.633996963500977
    6. ''d' → logprob: -12.758996963500977
    7. ' ' → logprob: -13.008996963500977
    8. ' ' → logprob: -13.258996963500977
    9. 'str' → logprob: -13.508996963500977
    10. 's' → logprob: -13.633996963500977

Token 31: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4018687307834625
    2. 'chaine' → logprob: -1.6518687009811401
    3. 'cha' → logprob: -2.0268688201904297
    4. ' chaine' → logprob: -5.40186882019043
    5. 'str' → logprob: -6.40186882019043
    6. 'string' → logprob: -7.65186882019043
    7. 's' → logprob: -8.15186882019043
    8. 'texte' → logprob: -8.52686882019043
    9. ' chaînes' → logprob: -9.15186882019043
    10. ' string' → logprob: -9.65186882019043

Token 32: ' de' (ID: 334)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7003214359283447
    2. 'n' → logprob: -1.5753214359283447
    3. 'val' → logprob: -1.7003214359283447
    4. '#' → logprob: -3.5753214359283447
    5. 'i' → logprob: -3.7003214359283447
    6. 'x' → logprob: -4.075321197509766
    7. 'ent' → logprob: -4.575321197509766
    8. 'value' → logprob: -4.575321197509766
    9. 'e' → logprob: -5.075321197509766
    10. 's' → logprob: -5.200321197509766

Token 33: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.043782565742731094
    2. ' caractères' → logprob: -3.1687824726104736
    3. 'texte' → logprob: -7.793782711029053
    4. '#' → logprob: -8.293782234191895
    5. ' caracteres' → logprob: -9.293782234191895
    6. ' caract' → logprob: -11.668782234191895
    7. ' caractère' → logprob: -12.043782234191895
    8. 'chars' → logprob: -12.668782234191895
    9. 'char' → logprob: -13.043782234191895
    10. 'characters' → logprob: -13.918782234191895

Token 34: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3452799916267395
    2. 'n' → logprob: -1.9702799320220947
    3. 'val' → logprob: -2.8452799320220947
    4. 'x' → logprob: -3.0952799320220947
    5. '#' → logprob: -4.095280170440674
    6. 'i' → logprob: -4.345280170440674
    7. 'value' → logprob: -4.595280170440674
    8. '```' → logprob: -6.470280170440674
    9. 'ent' → logprob: -6.720280170440674
    10. 'u' → logprob: -6.720280170440674

Token 35: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7041215300559998
    2. 'n' → logprob: -1.3291215896606445
    3. 'x' → logprob: -2.2041215896606445
    4. 'v' → logprob: -2.4541215896606445
    5. 'value' → logprob: -4.3291215896606445
    6. 'ent' → logprob: -4.3291215896606445
    7. 'nombre' → logprob: -5.0791215896606445
    8. 's' → logprob: -6.3291215896606445
    9. '```' → logprob: -6.3291215896606445
    10. '#' → logprob: -6.3291215896606445

Token 36: ' int' (ID: 677)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.547002911567688
    2. 'n' → logprob: -1.922002911567688
    3. 'val' → logprob: -2.0470027923583984
    4. '#' → logprob: -2.4220027923583984
    5. 'value' → logprob: -4.047002792358398
    6. 'x' → logprob: -4.672002792358398
    7. 'i' → logprob: -4.672002792358398
    8. 'ent' → logprob: -4.922002792358398
    9. 's' → logprob: -5.422002792358398
    10. 'a' → logprob: -6.172002792358398

Token 37: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038014890742488205
    2. '()' → logprob: -8.000380516052246
    3. '(
' → logprob: -10.875380516052246
    4. '(input' → logprob: -12.125380516052246
    5. '(convert' → logprob: -12.750380516052246
    6. '('' → logprob: -12.875380516052246
    7. '(user' → logprob: -12.875380516052246
    8. '(int' → logprob: -13.500380516052246
    9. ' (' → logprob: -13.625380516052246
    10. ')' → logprob: -13.750380516052246

Token 38: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.098748053773306e-05
    2. '(
' → logprob: -10.50006103515625
    3. ' (' → logprob: -11.50006103515625
    4. '()' → logprob: -12.00006103515625
    5. ')' → logprob: -12.37506103515625
    6. '(convert' → logprob: -13.00006103515625
    7. '<|end|>' → logprob: -13.00006103515625
    8. '(int' → logprob: -13.50006103515625
    9. '(input' → logprob: -14.12506103515625
    10. 's' → logprob: -14.25006103515625

Token 39: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.019211282953619957
    2. 'i' → logprob: -4.019211292266846
    3. ' it' → logprob: -7.519211292266846
    4. '()' → logprob: -8.644210815429688
    5. '```' → logprob: -9.519210815429688
    6. 'ie' → logprob: -9.769210815429688
    7. 't' → logprob: -10.394210815429688
    8. 'e' → logprob: -10.394210815429688
    9. '(' → logprob: -10.769210815429688
    10. '#' → logprob: -11.269210815429688

Token 40: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.514523446559906
    2. ' la' → logprob: -1.0145235061645508
    3. ' (' → logprob: -4.514523506164551
    4. ' ' → logprob: -5.014523506164551
    5. '()' → logprob: -5.389523506164551
    6. ' une' → logprob: -5.514523506164551
    7. ' l' → logprob: -5.639523506164551
    8. 's' → logprob: -6.014523506164551
    9. 'l' → logprob: -7.014523506164551
    10. 'la' → logprob: -7.264523506164551

Token 41: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.013732659630477428
    2. ' valeur' → logprob: -5.013732433319092
    3. ' chaine' → logprob: -5.388732433319092
    4. ' ' → logprob: -7.013732433319092
    5. 'chaine' → logprob: -7.263732433319092
    6. ' string' → logprob: -8.26373291015625
    7. ' dernière' → logprob: -9.13873291015625
    8. ' sais' → logprob: -9.26373291015625
    9. 's' → logprob: -9.51373291015625
    10. ' chaînes' → logprob: -10.13873291015625

Token 42: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004670899827033281
    2. '(
' → logprob: -6.504671096801758
    3. 's' → logprob: -6.504671096801758
    4. '#' → logprob: -8.254671096801758
    5. ')' → logprob: -8.254671096801758
    6. ',' → logprob: -8.504671096801758
    7. '()' → logprob: -8.879671096801758
    8. ' (' → logprob: -8.879671096801758
    9. '_' → logprob: -9.254671096801758
    10. 'a' → logprob: -9.379671096801758

Token 43: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.06683889776468277
    2. 'car' → logprob: -3.4418389797210693
    3. ' type' → logprob: -4.69183874130249
    4. ' caracteres' → logprob: -4.81683874130249
    5. ' caractère' → logprob: -6.06683874130249
    6. 'chaine' → logprob: -6.19183874130249
    7. ' car' → logprob: -6.31683874130249
    8. ' caract' → logprob: -6.44183874130249
    9. ' ' → logprob: -6.94183874130249
    10. 'int' → logprob: -7.31683874130249

Token 44: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10401086509227753
    2. ',' → logprob: -3.229010820388794
    3. ')' → logprob: -4.229011058807373
    4. 'val' → logprob: -4.604011058807373
    5. 'n' → logprob: -4.854011058807373
    6. 'v' → logprob: -4.979011058807373
    7. '#' → logprob: -5.729011058807373
    8. 's' → logprob: -5.979011058807373
    9. 'x' → logprob: -6.229011058807373
    10. '.' → logprob: -6.354011058807373

Token 45: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4732441306114197
    2. ' ' → logprob: -1.4732441902160645
    3. ' entier' → logprob: -2.0982441902160645
    4. ' nombre' → logprob: -4.9732441902160645
    5. 'un' → logprob: -5.0982441902160645
    6. 'ent' → logprob: -5.3482441902160645
    7. ' int' → logprob: -5.7232441902160645
    8. ' une' → logprob: -6.4732441902160645
    9. 'int' → logprob: -7.0982441902160645
    10. ' ent' → logprob: -8.223243713378906

Token 46: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.5976541042327881
    2. ' nombre' → logprob: -0.9726541042327881
    3. ' espace' → logprob: -3.472654104232788
    4. ' ' → logprob: -3.597654104232788
    5. 'e' → logprob: -4.597654342651367
    6. 'ent' → logprob: -7.097654342651367
    7. 'nombre' → logprob: -7.472654342651367
    8. ' ent' → logprob: -7.722654342651367
    9. ' entière' → logprob: -7.972654342651367
    10. ' e' → logprob: -8.347654342651367

Token 47: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2658008933067322
    2. 'v' → logprob: -2.265800952911377
    3. 'x' → logprob: -2.890800952911377
    4. 'val' → logprob: -3.515800952911377
    5. '#' → logprob: -3.765800952911377
    6. 'nombre' → logprob: -4.640800952911377
    7. 'value' → logprob: -5.890800952911377
    8. '```' → logprob: -5.890800952911377
    9. 'a' → logprob: -6.765800952911377
    10. '\n' → logprob: -7.140800952911377

Token 48: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000607602356467396
    2. ' )' → logprob: -7.500607490539551
    3. ' entier' → logprob: -11.25060749053955
    4. 'ent' → logprob: -12.00060749053955
    5. ').' → logprob: -12.12560749053955
    6. 'int' → logprob: -12.12560749053955
    7. ')#' → logprob: -12.25060749053955
    8. ',' → logprob: -12.25060749053955
    9. '#' → logprob: -13.37560749053955
    10. '),' → logprob: -13.75060749053955

Token 49: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04283279925584793
    2. ' )' → logprob: -3.417832851409912
    3. ' entier' → logprob: -5.042832851409912
    4. 'ent' → logprob: -6.542832851409912
    5. '_ent' → logprob: -7.292832851409912
    6. ' ' → logprob: -8.167832374572754
    7. ' ent' → logprob: -9.167832374572754
    8. ' ' → logprob: -10.667832374572754
    9. '_' → logprob: -10.667832374572754
    10. ' entière' → logprob: -10.917832374572754

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017684244085103273
    2. ' )' → logprob: -8.875176429748535
    3. '#' → logprob: -11.125176429748535
    4. ')#' → logprob: -12.125176429748535
    5. '`)' → logprob: -12.875176429748535
    6. 'def' → logprob: -13.250176429748535
    7. 'e' → logprob: -13.625176429748535
    8. ')
' → logprob: -13.625176429748535
    9. '')' → logprob: -13.750176429748535
    10. ')`' → logprob: -14.000176429748535

Token 51: 'L' (ID: 43)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7836354374885559
    2. 'n' → logprob: -1.5336353778839111
    3. 'x' → logprob: -1.7836353778839111
    4. 'v' → logprob: -2.033635377883911
    5. 'value' → logprob: -4.28363561630249
    6. 'nombre' → logprob: -5.65863561630249
    7. '#' → logprob: -6.03363561630249
    8. 's' → logprob: -6.15863561630249
    9. 'a' → logprob: -6.40863561630249
    10. 'ent' → logprob: -6.53363561630249

Token 52: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32476186752319336
    2. 'e' → logprob: -2.0747618675231934
    3. 'a' → logprob: -2.6997618675231934
    4. 'o' → logprob: -2.9497618675231934
    5. 'u' → logprob: -4.949761867523193
    6. '#' → logprob: -5.449761867523193
    7. 'n' → logprob: -5.574761867523193
    8. ' =' → logprob: -5.574761867523193
    9. '=' → logprob: -6.074761867523193
    10. '1' → logprob: -6.324761867523193

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.039460986852645874
    2. 'int' → logprob: -3.2894608974456787
    3. ' input' → logprob: -6.664461135864258
    4. 'input' → logprob: -8.914461135864258
    5. ' ' → logprob: -12.539461135864258
    6. ' ' → logprob: -13.164461135864258
    7. '=int' → logprob: -13.289461135864258
    8. '[int' → logprob: -14.289461135864258
    9. '<int' → logprob: -15.664461135864258
    10. '(int' → logprob: -16.289461135864258

Token 54: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16033755242824554
    2. '(input' → logprob: -1.9103375673294067
    3. '(user' → logprob: -10.035337448120117
    4. ' (' → logprob: -10.910337448120117
    5. 'input' → logprob: -11.160337448120117
    6. '('' → logprob: -11.410337448120117
    7. '(
' → logprob: -11.410337448120117
    8. '()' → logprob: -11.910337448120117
    9. '(Input' → logprob: -14.285337448120117
    10. '(in' → logprob: -14.285337448120117

Token 55: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13870622217655182
    2. '("("' → logprob: -3.0137062072753906
    3. '('' → logprob: -3.2637062072753906
    4. '()' → logprob: -4.263706207275391
    5. '())' → logprob: -4.638706207275391
    6. '("' → logprob: -4.638706207275391
    7. '(""))' → logprob: -5.138706207275391
    8. '("")' → logprob: -6.638706207275391
    9. '(">' → logprob: -7.013706207275391
    10. ')' → logprob: -8.26370620727539

Token 56: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07984887808561325
    2. '+' → logprob: -3.2048487663269043
    3. ' ' → logprob: -4.079848766326904
    4. ')' → logprob: -5.079848766326904
    5. ' +' → logprob: -5.954848766326904
    6. '*' → logprob: -6.079848766326904
    7. '(
' → logprob: -6.704848766326904
    8. ',' → logprob: -6.829848766326904
    9. ' (' → logprob: -6.829848766326904
    10. ' *' → logprob: -6.829848766326904

Token 57: ' Cal' (ID: 4453)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.0141412019729614
    2. ' ' → logprob: -1.1391412019729614
    3. ' if' → logprob: -1.7641412019729614
    4. 'L' → logprob: -2.389141082763672
    5. 'if' → logprob: -3.389141082763672
    6. 'print' → logprob: -4.764141082763672
    7. ' print' → logprob: -5.764141082763672
    8. '#' → logprob: -6.139141082763672
    9. ' #' → logprob: -6.389141082763672
    10. ''' → logprob: -7.139141082763672

Token 58: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.1287713348865509
    2. 'cule' → logprob: -2.1287713050842285
    3. 'c' → logprob: -6.8787713050842285
    4. 'culate' → logprob: -7.7537713050842285
    5. 'cules' → logprob: -8.878771781921387
    6. '```' → logprob: -9.628771781921387
    7. '#' → logprob: -10.128771781921387
    8. ' cul' → logprob: -11.003771781921387
    9. 'culator' → logprob: -11.003771781921387
    10. 'cula' → logprob: -11.503771781921387

Token 59: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03634342551231384
    2. '_' → logprob: -4.161343574523926
    3. 'L' → logprob: -4.911343574523926
    4. ' ' → logprob: -5.786343574523926
    5. ' (' → logprob: -6.411343574523926
    6. ' =' → logprob: -6.411343574523926
    7. 'a' → logprob: -7.161343574523926
    8. '(L' → logprob: -7.286343574523926
    9. ' L' → logprob: -7.411343574523926
    10. 's' → logprob: -7.536343574523926

Token 60: ' cube' (ID: 46822)
  Prédit: ' carré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' carré' → logprob: -0.09335590153932571
    2. 'c' → logprob: -3.218355894088745
    3. ' carre' → logprob: -3.593355894088745
    4. 'car' → logprob: -5.218356132507324
    5. 's' → logprob: -5.468356132507324
    6. ' carr' → logprob: -5.593356132507324
    7. 'Carr' → logprob: -5.968356132507324
    8. ' facteur' → logprob: -6.968356132507324
    9. ' car' → logprob: -7.468356132507324
    10. 'nombre' → logprob: -7.843356132507324

Token 61: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2260904312133789
    2. 'L' → logprob: -1.726090431213379
    3. '(L' → logprob: -4.226090431213379
    4. ' (' → logprob: -5.976090431213379
    5. ' de' → logprob: -6.101090431213379
    6. '()' → logprob: -6.226090431213379
    7. ' L' → logprob: -7.601090431213379
    8. '(
' → logprob: -7.851090431213379
    9. ')' → logprob: -7.976090431213379
    10. 'de' → logprob: -7.976090431213379

Token 62: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5236960649490356
    2. 'L' → logprob: -0.8986960649490356
    3. ' ' → logprob: -7.648695945739746
    4. 'l' → logprob: -10.398695945739746
    5. ' la' → logprob: -10.648695945739746
    6. ' l' → logprob: -11.273695945739746
    7. ' ' → logprob: -12.148695945739746
    8. 'a' → logprob: -12.398695945739746
    9. '  ' → logprob: -12.836195945739746
    10. '```' → logprob: -13.211195945739746

Token 63: ',' (ID: 11)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.41023191809654236
    2. '**' → logprob: -1.1602319478988647
    3. '*' → logprob: -4.785232067108154
    4. ' **' → logprob: -5.035232067108154
    5. ' L' → logprob: -5.285232067108154
    6. '**
' → logprob: -7.660232067108154
    7. 's' → logprob: -8.160231590270996
    8. ' ' → logprob: -8.285231590270996
    9. ' *' → logprob: -8.410231590270996
    10. '\' → logprob: -8.410231590270996

Token 64: ' c' (ID: 274)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2946849465370178
    2. ' L' → logprob: -1.419684886932373
    3. ' ' → logprob: -5.419684886932373
    4. 'c' → logprob: -5.794684886932373
    5. '3' → logprob: -6.669684886932373
    6. ' c' → logprob: -6.669684886932373
    7. '```' → logprob: -7.669684886932373
    8. ' ' → logprob: -8.044685363769531
    9. 's' → logprob: -8.294685363769531
    10. ')' → logprob: -8.732185363769531

Token 65: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.06593656539917
    2. 'ar' → logprob: -1.19093656539917
    3. '#' → logprob: -2.44093656539917
    4. '=' → logprob: -2.69093656539917
    5. 'est' → logprob: -3.44093656539917
    6. '```' → logprob: -3.44093656539917
    7. '`' → logprob: -3.81593656539917
    8. 'e' → logprob: -4.06593656539917
    9. ''' → logprob: -4.31593656539917
    10. ' =' → logprob: -4.31593656539917

Token 66: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.4667779803276062
    2. 'à' → logprob: -1.466778039932251
    3. ' à' → logprob: -2.716778039932251
    4. ' L' → logprob: -3.466778039932251
    5. 'L' → logprob: -3.591778039932251
    6. '#' → logprob: -5.216777801513672
    7. '-' → logprob: -5.716777801513672
    8. 'a' → logprob: -5.841777801513672
    9. ''' → logprob: -6.716777801513672
    10. ''à' → logprob: -6.841777801513672

Token 67: '-dire' (ID: 76064)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2343321442604065
    2. 'à' → logprob: -2.1093320846557617
    3. '#' → logprob: -3.2343320846557617
    4. '-à' → logprob: -3.4843320846557617
    5. '```' → logprob: -5.484332084655762
    6. '`' → logprob: -5.734332084655762
    7. ' L' → logprob: -5.984332084655762
    8. 'dire' → logprob: -6.359332084655762
    9. 'la' → logprob: -7.109332084655762
    10. '=' → logprob: -7.109332084655762

Token 68: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.1617247611284256
    2. 'L' → logprob: -1.9117248058319092
    3. ' ' → logprob: -6.66172456741333
    4. '  ' → logprob: -9.536725044250488
    5. ' ' → logprob: -10.161725044250488
    6. '```' → logprob: -11.286725044250488
    7. ' la' → logprob: -11.411725044250488
    8. ' ' → logprob: -11.411725044250488
    9. '3' → logprob: -11.661725044250488
    10. ' `' → logprob: -11.786725044250488

Token 69: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03707347437739372
    2. ' **' → logprob: -3.5370733737945557
    3. '*' → logprob: -5.287073612213135
    4. ' *' → logprob: -6.287073612213135
    5. '***' → logprob: -8.662073135375977
    6. '³' → logprob: -9.037073135375977
    7. '3' → logprob: -10.162073135375977
    8. ' ***' → logprob: -10.662073135375977
    9. ' ' → logprob: -11.662073135375977
    10. '```' → logprob: -12.162073135375977

Token 70: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1798161268234253
    2. ' L' → logprob: -1.8048161268234253
    3. ' ' → logprob: -10.304816246032715
    4. '*' → logprob: -11.054816246032715
    5. '3' → logprob: -11.179816246032715
    6. ' *' → logprob: -12.929816246032715
    7. '**' → logprob: -13.054816246032715
    8. '```' → logprob: -13.804816246032715
    9. ' ' → logprob: -14.054816246032715
    10. '  ' → logprob: -14.679816246032715

Token 71: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12705041468143463
    2. '*' → logprob: -2.1270503997802734
    3. '**' → logprob: -9.252050399780273
    4. ' ' → logprob: -11.377050399780273
    5. ' **' → logprob: -12.127050399780273
    6. '<|end|>' → logprob: -12.377050399780273
    7. ' ' → logprob: -13.377050399780273
    8. '***' → logprob: -14.627050399780273
    9. ' *
' → logprob: -14.752050399780273
    10. ' *

' → logprob: -14.877050399780273

Token 72: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0003802680876106024
    2. ' L' → logprob: -7.875380039215088
    3. ' ' → logprob: -15.750380516052246
    4. '<|end|>' → logprob: -17.25037956237793
    5. ' ' → logprob: -17.75037956237793
    6. '>L' → logprob: -18.12537956237793
    7. '  ' → logprob: -18.12537956237793
    8. '	L' → logprob: -18.12537956237793
    9. 'l' → logprob: -19.00037956237793
    10. '`' → logprob: -19.12537956237793

Token 73: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.08309251815080643
    2. 'C' → logprob: -3.583092451095581
    3. 'c' → logprob: -4.45809268951416
    4. '  
' → logprob: -4.83309268951416
    5. ' 
' → logprob: -4.95809268951416
    6. '
' → logprob: -4.95809268951416
    7. 'result' → logprob: -5.45809268951416
    8. 'cube' → logprob: -6.20809268951416
    9. '   
' → logprob: -6.45809268951416
    10. '\' → logprob: -6.45809268951416

Token 74: 'ce' (ID: 400)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01668405719101429
    2. ' )' → logprob: -4.266684055328369
    3. 'L' → logprob: -6.141684055328369
    4. ' L' → logprob: -8.766684532165527
    5. ').' → logprob: -10.141684532165527
    6. '')' → logprob: -10.266684532165527
    7. ')L' → logprob: -10.766684532165527
    8. '`)' → logprob: -10.891684532165527
    9. '#' → logprob: -11.141684532165527
    10. '*' → logprob: -11.391684532165527

Token 75: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.883770227432251
    2. '#' → logprob: -2.008770227432251
    3. '**' → logprob: -2.258770227432251
    4. ' **' → logprob: -2.508770227432251
    5. ' qui' → logprob: -3.508770227432251
    6. '*' → logprob: -3.633770227432251
    7. 'n' → logprob: -3.883770227432251
    8. '```' → logprob: -3.883770227432251
    9. ' )' → logprob: -4.008769989013672
    10. '^' → logprob: -4.133769989013672

Token 76: ' revient' (ID: 95900)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.3822100162506104
    2. ' )' → logprob: -1.3822100162506104
    3. ')' → logprob: -2.0072100162506104
    4. ' correspond' → logprob: -2.2572100162506104
    5. '**' → logprob: -3.5072100162506104
    6. ' ' → logprob: -3.5072100162506104
    7. ' **' → logprob: -3.6322100162506104
    8. ' revient' → logprob: -3.6322100162506104
    9. ' ' → logprob: -3.7572100162506104
    10. ' fait' → logprob: -4.257209777832031

Token 77: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2540454566478729
    2. 'à' → logprob: -1.5040454864501953
    3. '```' → logprob: -6.879045486450195
    4. ''à' → logprob: -8.254045486450195
    5. 'au' → logprob: -8.379045486450195
    6. ' ' → logprob: -8.879045486450195
    7. ' ' → logprob: -9.504045486450195
    8. ' au' → logprob: -9.504045486450195
    9. ')' → logprob: -9.754045486450195
    10. 'a' → logprob: -9.754045486450195

Token 78: ' é' (ID: 1212)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.21375872194766998
    2. ' L' → logprob: -1.8387587070465088
    3. 'é' → logprob: -4.213758945465088
    4. ' multiplier' → logprob: -5.338758945465088
    5. 'mult' → logprob: -5.713758945465088
    6. 'calcul' → logprob: -6.338758945465088
    7. ' é' → logprob: -6.588758945465088
    8. ' calcul' → logprob: -6.713758945465088
    9. '```' → logprob: -6.713758945465088
    10. 'élé' → logprob: -7.088758945465088

Token 79: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.710050642490387
    2. 'q' → logprob: -1.4600505828857422
    3. 'l' → logprob: -2.835050582885742
    4. 'crire' → logprob: -2.960050582885742
    5. 'le' → logprob: -3.585050582885742
    6. '=' → logprob: -3.710050582885742
    7. 'gal' → logprob: -3.710050582885742
    8. 'g' → logprob: -3.835050582885742
    9. 'lé' → logprob: -4.210050582885742
    10. 'qu' → logprob: -4.585050582885742

Token 80: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.719001293182373
    2. 'L' → logprob: -1.594001293182373
    3. ' ' → logprob: -1.719001293182373
    4. ' à' → logprob: -2.094001293182373
    5. ' au' → logprob: -5.969001293182373
    6. ' a' → logprob: -6.469001293182373
    7. '```' → logprob: -7.469001293182373
    8. ')' → logprob: -7.594001293182373
    9. 'à' → logprob: -7.844001293182373
    10. 'a' → logprob: -8.094001770019531

Token 81: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.4441514313220978
    2. ' à' → logprob: -1.1941514015197754
    3. 'au' → logprob: -3.8191514015197754
    4. ' **' → logprob: -4.319151401519775
    5. '**' → logprob: -4.694151401519775
    6. 'à' → logprob: -4.944151401519775
    7. ' ' → logprob: -6.319151401519775
    8. ')' → logprob: -7.069151401519775
    9. ')**' → logprob: -7.569151401519775
    10. ' )' → logprob: -8.194151878356934

Token 82: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007101201452314854
    2. ' ' → logprob: -5.132101058959961
    3. ' la' → logprob: -7.632101058959961
    4. '³' → logprob: -8.382101058959961
    5. ' trois' → logprob: -8.632101058959961
    6. ')' → logprob: -9.382101058959961
    7. ' )' → logprob: -9.632101058959961
    8. ' ' → logprob: -9.757101058959961
    9. '```' → logprob: -10.882101058959961
    10. '**' → logprob: -11.257101058959961

Token 83: ' puissance' (ID: 63494)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006876522093079984
    2. ' ' → logprob: -7.500687599182129
    3. ' puissance' → logprob: -9.500687599182129
    4. '³' → logprob: -10.125687599182129
    5. 'power' → logprob: -12.000687599182129
    6. ' troisième' → logprob: -12.250687599182129
    7. 'pu' → logprob: -12.375687599182129
    8. 'pow' → logprob: -13.250687599182129
    9. 'tro' → logprob: -13.500687599182129
    10. '```' → logprob: -14.375687599182129

Token 84: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07074233144521713
    2. ' ' → logprob: -2.69574236869812
    3. ')' → logprob: -7.820742130279541
    4. ' )' → logprob: -7.945742130279541
    5. ' ' → logprob: -11.0707426071167
    6. '```' → logprob: -11.3207426071167
    7. '³' → logprob: -11.5707426071167
    8. ' trois' → logprob: -12.0707426071167
    9. ' ```' → logprob: -13.4457426071167
    10. '  ' → logprob: -13.8207426071167

Token 85: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004928641719743609
    2. ' ' → logprob: -7.625493049621582
    3. ')' → logprob: -12.875493049621582
    4. '```' → logprob: -13.375493049621582
    5. ' )' → logprob: -15.000493049621582
    6. '³' → logprob: -15.375493049621582
    7. ' ' → logprob: -17.375492095947266
    8. '`' → logprob: -17.750492095947266
    9. ' trois' → logprob: -18.000492095947266
    10. '33' → logprob: -18.125492095947266

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048524985322728753
    2. ')
' → logprob: -9.00048542022705
    3. ' )' → logprob: -9.00048542022705
    4. '*' → logprob: -9.75048542022705
    5. '**' → logprob: -9.87548542022705
    6. ')**' → logprob: -10.25048542022705
    7. 'L' → logprob: -10.75048542022705
    8. '*)' → logprob: -10.87548542022705
    9. ')L' → logprob: -11.25048542022705
    10. ')

' → logprob: -12.00048542022705

Token 87: '#' (ID: 2)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.26429298520088196
    2. 'C' → logprob: -1.8892929553985596
    3. 'c' → logprob: -3.2642929553985596
    4. 'cube' → logprob: -4.264293193817139
    5. 'result' → logprob: -4.514293193817139
    6. '```' → logprob: -5.514293193817139
    7. 'print' → logprob: -6.014293193817139
    8. '#' → logprob: -6.639293193817139
    9. 'R' → logprob: -6.639293193817139
    10. 'v' → logprob: -6.889293193817139

Token 88: ' Puis' (ID: 87717)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.6041290760040283
    2. 'L' → logprob: -1.4791290760040283
    3. 'C' → logprob: -2.4791290760040283
    4. 'result' → logprob: -2.7291290760040283
    5. 'c' → logprob: -3.7291290760040283
    6. 'print' → logprob: -3.9791290760040283
    7. ' cube' → logprob: -4.229128837585449
    8. 'volume' → logprob: -4.979128837585449
    9. 'cub' → logprob: -5.604128837585449
    10. 'v' → logprob: -5.979128837585449

Token 89: ' div' (ID: 4223)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47206857800483704
    2. ' print' → logprob: -1.4720685482025146
    3. ' affiche' → logprob: -2.4720685482025146
    4. 'aff' → logprob: -3.3470685482025146
    5. '#' → logprob: -4.972068786621094
    6. ' imprime' → logprob: -5.347068786621094
    7. 'p' → logprob: -5.722068786621094
    8. 'pr' → logprob: -5.847068786621094
    9. ' afficher' → logprob: -6.722068786621094
    10. ' calc' → logprob: -6.847068786621094

Token 90: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.01985938474535942
    2. 'i' → logprob: -4.519859313964844
    3. 'e' → logprob: -5.894859313964844
    4. 'ide' → logprob: -6.769859313964844
    5. 'isé' → logprob: -7.019859313964844
    6. 'id' → logprob: -7.769859313964844
    7. 'u' → logprob: -7.769859313964844
    8. '#' → logprob: -7.769859313964844
    9. '```' → logprob: -7.769859313964844
    10. '-' → logprob: -8.269859313964844

Token 91: ' ce' (ID: 2357)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.19895553588867188
    2. 'L' → logprob: -2.573955535888672
    3. ' par' → logprob: -3.198955535888672
    4. ' /' → logprob: -3.573955535888672
    5. ' le' → logprob: -4.698955535888672
    6. ' by' → logprob: -5.073955535888672
    7. ' )' → logprob: -5.948955535888672
    8. 'par' → logprob: -6.073955535888672
    9. ' (' → logprob: -6.323955535888672
    10. 'e' → logprob: -6.323955535888672

Token 92: ' résultat' (ID: 62556)
  Prédit: ' cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.18131940066814423
    2. 'cube' → logprob: -2.93131947517395
    3. 'u' → logprob: -4.056319236755371
    4. ' L' → logprob: -4.556319236755371
    5. ' résultat' → logprob: -4.681319236755371
    6. ' code' → logprob: -4.681319236755371
    7. ' ' → logprob: -4.681319236755371
    8. '=' → logprob: -4.681319236755371
    9. ' espace' → logprob: -5.306319236755371
    10. 'L' → logprob: -5.306319236755371

Token 93: ' par' (ID: 686)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4402609169483185
    2. ' /' → logprob: -1.065260887145996
    3. ' by' → logprob: -5.315260887145996
    4. 'by' → logprob: -6.690260887145996
    5. ' ' → logprob: -7.315260887145996
    6. 'e' → logprob: -7.440260887145996
    7. '```' → logprob: -7.815260887145996
    8. ')' → logprob: -7.940260887145996
    9. '1' → logprob: -8.065260887145996
    10. ' ' → logprob: -8.065260887145996

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3951128423213959
    2. '3' → logprob: -1.1451128721237183
    3. '2' → logprob: -5.395112991333008
    4. '6' → logprob: -5.770112991333008
    5. '7' → logprob: -8.395112991333008
    6. '9' → logprob: -9.270112991333008
    7. '4' → logprob: -9.645112991333008
    8. ' (' → logprob: -10.270112991333008
    9. '8' → logprob: -10.520112991333008
    10. '1' → logprob: -10.770112991333008

Token 95: '27' (ID: 2092)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.09225154668092728
    2. '2' → logprob: -3.0922515392303467
    3. '6' → logprob: -3.3422515392303467
    4. ' ' → logprob: -5.217251777648926
    5. '4' → logprob: -7.592251777648926
    6. '7' → logprob: -7.967251777648926
    7. '9' → logprob: -7.967251777648926
    8. '1' → logprob: -8.842251777648926
    9. '8' → logprob: -8.842251777648926
    10. '27' → logprob: -8.842251777648926

Token 96: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6472600698471069
    2. ')' → logprob: -2.2722601890563965
    3. '/' → logprob: -2.3972601890563965
    4. '.' → logprob: -2.8972601890563965
    5. '
' → logprob: -3.6472601890563965
    6. ',' → logprob: -3.7722601890563965
    7. '```' → logprob: -3.7722601890563965
    8. ' ' → logprob: -3.8972601890563965
    9. ' *' → logprob: -4.0222601890563965
    10. ' /' → logprob: -4.0222601890563965

Token 97: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.10466730594635
    2. '*' → logprob: -1.47966730594635
    3. '
' → logprob: -1.97966730594635
    4. ')' → logprob: -2.9796671867370605
    5. 'L' → logprob: -2.9796671867370605
    6. 'print' → logprob: -3.1046671867370605
    7. '/' → logprob: -3.6046671867370605
    8. '#' → logprob: -3.7296671867370605
    9. ',' → logprob: -3.8546671867370605
    10. '.' → logprob: -4.7296671867370605

Token 98: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.881898045539856
    2. ' ' → logprob: -1.881898045539856
    3. ',' → logprob: -2.8818979263305664
    4. '*' → logprob: -3.0068979263305664
    5. ' 
' → logprob: -3.3818979263305664
    6. '.' → logprob: -3.5068979263305664
    7. 'L' → logprob: -3.8818979263305664
    8. ')' → logprob: -3.8818979263305664
    9. '
' → logprob: -4.006897926330566
    10. '' → logprob: -4.131897926330566

Token 99: ''op' (ID: 70747)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5884484648704529
    2. '**' → logprob: -0.9634484648704529
    3. ' ' → logprob: -3.9634485244750977
    4. ' /' → logprob: -4.338448524475098
    5. '3' → logprob: -4.588448524475098
    6. '_' → logprob: -5.213448524475098
    7. '/' → logprob: -5.463448524475098
    8. '*' → logprob: -6.338448524475098
    9. '³' → logprob: -6.338448524475098
    10. ' *' → logprob: -6.588448524475098

Token 100: 'érateur' (ID: 108528)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2739722728729248
    2. 'a' → logprob: -2.898972272872925
    3. 'er' → logprob: -3.523972272872925
    4. ' résultat' → logprob: -4.023972511291504
    5. 'ération' → logprob: -4.148972511291504
    6. ''op' → logprob: -4.148972511291504
    7. 'ui' → logprob: -4.398972511291504
    8. 'p' → logprob: -4.773972511291504
    9. 'u' → logprob: -4.898972511291504
    10. 'n' → logprob: -4.898972511291504

Token 101: ' *' (ID: 425)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6466606259346008
    2. '/' → logprob: -0.7716606259346008
    3. ' **' → logprob: -5.146660804748535
    4. '**' → logprob: -5.521660804748535
    5. ' ' → logprob: -5.896660804748535
    6. '%' → logprob: -8.146660804748535
    7. ' de' → logprob: -8.521660804748535
    8. ' %' → logprob: -8.771660804748535
    9. '_' → logprob: -9.021660804748535
    10. ' //' → logprob: -9.646660804748535

Token 102: ' est' (ID: 893)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.17199566960334778
    2. ' ' → logprob: -2.4219956398010254
    3. '*' → logprob: -3.0469956398010254
    4. '<|end|>' → logprob: -4.671995639801025
    5. ' /' → logprob: -5.921995639801025
    6. ')' → logprob: -6.171995639801025
    7. ' *' → logprob: -6.421995639801025
    8. '**' → logprob: -7.171995639801025
    9. ' (' → logprob: -7.296995639801025
    10. ' **' → logprob: -7.796995639801025

Token 103: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.35104307532310486
    2. ' l' → logprob: -2.2260429859161377
    3. '*' → logprob: -2.6010429859161377
    4. ' utilisée' → logprob: -3.9760429859161377
    5. ' ' → logprob: -4.226043224334717
    6. ' un' → logprob: -4.476043224334717
    7. ' *' → logprob: -4.851043224334717
    8. ' le' → logprob: -4.976043224334717
    9. 'l' → logprob: -5.226043224334717
    10. '<|end|>' → logprob: -5.226043224334717

Token 104: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9479939937591553
    2. ' ' → logprob: -1.4479939937591553
    3. '/' → logprob: -2.3229939937591553
    4. ' *' → logprob: -2.3229939937591553
    5. ' /' → logprob: -2.6979939937591553
    6. ')' → logprob: -3.3229939937591553
    7. '<|end|>' → logprob: -3.6979939937591553
    8. ',' → logprob: -4.822994232177734
    9. ' )' → logprob: -5.197994232177734
    10. '.' → logprob: -5.572994232177734

Token 105: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5271295309066772
    2. ' la' → logprob: -1.1521295309066772
    3. 'mult' → logprob: -2.902129650115967
    4. 'l' → logprob: -4.402129650115967
    5. ' multiplier' → logprob: -4.902129650115967
    6. ' effectuer' → logprob: -4.902129650115967
    7. 'multip' → logprob: -5.277129650115967
    8. 'le' → logprob: -5.902129650115967
    9. 'faire' → logprob: -6.902129650115967
    10. 'effect' → logprob: -8.027129173278809

Token 106: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.04481007531285286
    2. ' multiplication' → logprob: -3.1698100566864014
    3. 'mult' → logprob: -7.2948102951049805
    4. 'pu' → logprob: -7.6698102951049805
    5. ' multip' → logprob: -8.29481029510498
    6. 'mul' → logprob: -9.16981029510498
    7. 'division' → logprob: -9.29481029510498
    8. 'm' → logprob: -9.91981029510498
    9. 'ex' → logprob: -10.54481029510498
    10. ' puissance' → logprob: -10.79481029510498

Token 107: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4664132595062256
    2. 'result' → logprob: -1.4664132595062256
    3. ')' → logprob: -3.3414132595062256
    4. '#' → logprob: -3.8414132595062256
    5. '/' → logprob: -3.8414132595062256
    6. 'r' → logprob: -4.466413497924805
    7. '.' → logprob: -4.716413497924805
    8. ' 
' → logprob: -4.966413497924805
    9. ',' → logprob: -5.091413497924805
    10. 'L' → logprob: -5.591413497924805

Token 108: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10876385122537613
    2. 'r' → logprob: -3.6087639331817627
    3. '*' → logprob: -4.108763694763184
    4. 'c' → logprob: -4.233763694763184
    5. 'res' → logprob: -4.733763694763184
    6. 'L' → logprob: -5.108763694763184
    7. 'C' → logprob: -5.108763694763184
    8. 'R' → logprob: -5.483763694763184
    9. 'v' → logprob: -6.108763694763184
    10. '#' → logprob: -6.108763694763184

Token 109: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07475382834672928
    2. 'C' → logprob: -3.824753761291504
    3. 'c' → logprob: -4.199753761291504
    4. 'r' → logprob: -4.949753761291504
    5. ' result' → logprob: -5.324753761291504
    6. 'R' → logprob: -5.324753761291504
    7. 'L' → logprob: -5.574753761291504
    8. 'res' → logprob: -5.574753761291504
    9. 'cube' → logprob: -5.824753761291504
    10. 'rés' → logprob: -6.324753761291504

Token 110: ''op' (ID: 70747)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2391856908798218
    2. ' *' → logprob: -1.4891856908798218
    3. '_' → logprob: -2.1141858100891113
    4. ' =' → logprob: -2.2391858100891113
    5. ' **' → logprob: -2.2391858100891113
    6. '**' → logprob: -2.8641858100891113
    7. ' ' → logprob: -3.1141858100891113
    8. '=' → logprob: -4.239185810089111
    9. '#' → logprob: -5.114185810089111
    10. '[' → logprob: -5.364185810089111

Token 111: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.2712443172931671
    2. 'ér' → logprob: -1.8962442874908447
    3. 'é' → logprob: -3.5212442874908447
    4. '*' → logprob: -4.146244525909424
    5. 'ération' → logprob: -4.521244525909424
    6. 'er' → logprob: -4.521244525909424
    7. 'èr' → logprob: -5.021244525909424
    8. 'ré' → logprob: -5.271244525909424
    9. '#' → logprob: -6.146244525909424
    10. 'ère' → logprob: -6.771244525909424

Token 112: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3196542263031006
    2. ' /' → logprob: -1.4446542263031006
    3. '**' → logprob: -3.5696542263031006
    4. ' **' → logprob: -5.19465446472168
    5. '*' → logprob: -6.31965446472168
    6. ' ' → logprob: -6.44465446472168
    7. ' *' → logprob: -8.81965446472168
    8. '/**' → logprob: -9.06965446472168
    9. '=' → logprob: -9.31965446472168
    10. ' /**' → logprob: -10.19465446472168

Token 113: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2120039016008377
    2. '<|end|>' → logprob: -1.9620039463043213
    3. ' ' → logprob: -3.4620039463043213
    4. ' (' → logprob: -5.962003707885742
    5. ' is' → logprob: -6.087003707885742
    6. 'est' → logprob: -6.462003707885742
    7. ' réalise' → logprob: -6.462003707885742
    8. ' effect' → logprob: -6.587003707885742
    9. '<|end|>' → logprob: -6.587003707885742
    10. ' /' → logprob: -6.837003707885742

Token 114: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.04571204259991646
    2. ' utilisée' → logprob: -3.5457119941711426
    3. ' used' → logprob: -5.545711994171143
    4. ' l' → logprob: -5.795711994171143
    5. '<|end|>' → logprob: -6.420711994171143
    6. 'util' → logprob: -6.420711994171143
    7. '/' → logprob: -7.045711994171143
    8. 'used' → logprob: -7.420711994171143
    9. ' utiliser' → logprob: -7.795711994171143
    10. 's' → logprob: -7.795711994171143

Token 115: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4729031026363373
    2. ' pour' → logprob: -1.7229031324386597
    3. '<|end|>' → logprob: -2.59790301322937
    4. ' /' → logprob: -3.84790301322937
    5. 'pour' → logprob: -3.97290301322937
    6. '/' → logprob: -3.97290301322937
    7. 'for' → logprob: -4.222903251647949
    8. ' ' → logprob: -4.222903251647949
    9. ' to' → logprob: -4.472903251647949
    10. ' à' → logprob: -4.722903251647949

Token 116: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20003651082515717
    2. ' effectuer' → logprob: -2.0750365257263184
    3. ' l' → logprob: -3.3250365257263184
    4. ' faire' → logprob: -5.450036525726318
    5. 'la' → logprob: -5.825036525726318
    6. 'l' → logprob: -6.200036525726318
    7. ' /' → logprob: -6.325036525726318
    8. ' réaliser' → logprob: -6.325036525726318
    9. ' ' → logprob: -6.575036525726318
    10. 'div' → logprob: -6.825036525726318

Token 117: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.05022600665688515
    2. 'div' → logprob: -3.3002259731292725
    3. ' division' → logprob: -4.425226211547852
    4. 'd' → logprob: -10.050226211547852
    5. ' /' → logprob: -10.675226211547852
    6. '/' → logprob: -11.425226211547852
    7. ' ' → logprob: -11.425226211547852
    8. 'multip' → logprob: -11.800226211547852
    9. ' div' → logprob: -12.050226211547852
    10. 'm' → logprob: -12.800226211547852

Token 118: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2503998279571533
    2. 'r' → logprob: -2.2503998279571533
    3. '
' → logprob: -3.7503998279571533
    4. '*' → logprob: -3.8753998279571533
    5. 'c' → logprob: -4.375399589538574
    6. '#' → logprob: -4.500399589538574
    7. ' 
' → logprob: -5.000399589538574
    8. 'C' → logprob: -5.375399589538574
    9. '' → logprob: -5.375399589538574
    10. ',' → logprob: -5.500399589538574

Token 119: ' donne' (ID: 30004)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.9717277884483337
    2. ' ren' → logprob: -1.4717278480529785
    3. 'ren' → logprob: -1.9717278480529785
    4. 'aff' → logprob: -3.0967278480529785
    5. 'ret' → logprob: -3.0967278480529785
    6. ' donne' → logprob: -3.7217278480529785
    7. ' affiche' → logprob: -3.7217278480529785
    8. ' ' → logprob: -4.2217278480529785
    9. 'le' → logprob: -4.5967278480529785
    10. '#' → logprob: -4.8467278480529785

Token 120: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.012400982901453972
    2. ' une' → logprob: -4.762401103973389
    3. ' ' → logprob: -6.137401103973389
    4. 'un' → logprob: -6.887401103973389
    5. ' a' → logprob: -9.01240062713623
    6. ' ' → logprob: -9.13740062713623
    7. ' toujours' → logprob: -9.38740062713623
    8. 'a' → logprob: -9.63740062713623
    9. '<|end|>' → logprob: -9.76240062713623
    10. ' résultat' → logprob: -11.13740062713623

Token 121: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -1.2106552124023438
    2. ' flott' → logprob: -1.3356552124023438
    3. ' float' → logprob: -1.5856552124023438
    4. ' nombre' → logprob: -2.3356552124023438
    5. 'float' → logprob: -2.5856552124023438
    6. 'nombre' → logprob: -3.4606552124023438
    7. 'rés' → logprob: -3.9606552124023438
    8. ' floating' → logprob: -6.085655212402344
    9. ' ' → logprob: -6.335655212402344
    10. 'result' → logprob: -6.835655212402344

Token 122: ' à' (ID: 1221)
  Prédit: ' flott'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.26904377341270447
    2. 'fl' → logprob: -2.1440436840057373
    3. 'float' → logprob: -3.2690436840057373
    4. 'f' → logprob: -3.7690436840057373
    5. 'flo' → logprob: -4.644043922424316
    6. ' en' → logprob: -4.894043922424316
    7. ' de' → logprob: -5.019043922424316
    8. ' float' → logprob: -5.144043922424316
    9. '_fl' → logprob: -6.019043922424316
    10. ' =' → logprob: -6.019043922424316

Token 123: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.5822700262069702
    2. ' virg' → logprob: -1.4572700262069702
    3. '```' → logprob: -1.9572700262069702
    4. 'float' → logprob: -3.3322701454162598
    5. ' ' → logprob: -4.70727014541626
    6. 'val' → logprob: -5.33227014541626
    7. 'fl' → logprob: -5.83227014541626
    8. '   ' → logprob: -6.08227014541626
    9. 'nombre' → logprob: -6.33227014541626
    10. ' ' → logprob: -6.45727014541626

Token 124: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0010480545461177826
    2. 'e' → logprob: -7.6260480880737305
    3. 'ale' → logprob: -8.50104808807373
    4. 'ulaire' → logprob: -9.12604808807373
    5. 'es' → logprob: -9.87604808807373
    6. 'é' → logprob: -10.25104808807373
    7. 'ée' → logprob: -10.62604808807373
    8. 'ile' → logprob: -10.75104808807373
    9. 'ula' → logprob: -10.87604808807373
    10. 'a' → logprob: -11.12604808807373

Token 125: ' flott' (ID: 108700)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09227752685546875
    2. 'r' → logprob: -3.0922775268554688
    3. 'R' → logprob: -4.342277526855469
    4. 'C' → logprob: -5.092277526855469
    5. ' result' → logprob: -5.092277526855469
    6. 'c' → logprob: -5.217277526855469
    7. 'v' → logprob: -5.842277526855469
    8. 'res' → logprob: -5.967277526855469
    9. 'rés' → logprob: -6.842277526855469
    10. ' résultat' → logprob: -7.217277526855469

Token 126: 'ante' (ID: 2116)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.7845849394798279
    2. 'e' → logprob: -1.2845849990844727
    3. 'é' → logprob: -1.4095849990844727
    4. '.' → logprob: -4.159584999084473
    5. 'ante' → logprob: -5.534584999084473
    6. 'ect' → logprob: -7.409584999084473
    7. 'ette' → logprob: -8.159584999084473
    8. 'a' → logprob: -8.534584999084473
    9. 'ale' → logprob: -8.534584999084473
    10. 'age' → logprob: -8.534584999084473

Token 127: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3037378489971161
    2. 'C' → logprob: -1.6787378787994385
    3. 'R' → logprob: -3.4287378787994385
    4. ' result' → logprob: -4.678737640380859
    5. 'c' → logprob: -4.928737640380859
    6. 'L' → logprob: -5.178737640380859
    7. 'cube' → logprob: -5.178737640380859
    8. 'v' → logprob: -5.553737640380859
    9. 'r' → logprob: -5.803737640380859
    10. 'res' → logprob: -7.053737640380859

Token 128: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29397472739219666
    2. 'C' → logprob: -1.918974757194519
    3. 'R' → logprob: -3.4189746379852295
    4. 'c' → logprob: -3.6689746379852295
    5. 'v' → logprob: -4.418974876403809
    6. ' result' → logprob: -4.918974876403809
    7. 'cube' → logprob: -5.043974876403809
    8. 'r' → logprob: -5.168974876403809
    9. 'L' → logprob: -5.293974876403809
    10. 'res' → logprob: -6.043974876403809

Token 129: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09283174574375153
    2. 'C' → logprob: -3.96783185005188
    3. 'cube' → logprob: -4.717831611633301
    4. 'c' → logprob: -4.717831611633301
    5. ' result' → logprob: -4.717831611633301
    6. 'V' → logprob: -4.842831611633301
    7. 'R' → logprob: -4.967831611633301
    8. 'res' → logprob: -5.092831611633301
    9. 'v' → logprob: -5.217831611633301
    10. 'volume' → logprob: -5.342831611633301

Token 130: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00701811071485281
    2. '(L' → logprob: -5.007018089294434
    3. '()' → logprob: -8.882018089294434
    4. '((' → logprob: -9.007018089294434
    5. '("' → logprob: -11.507018089294434
    6. '(
' → logprob: -11.507018089294434
    7. '('' → logprob: -11.757018089294434
    8. '(f' → logprob: -12.757018089294434
    9. '(

' → logprob: -13.132018089294434
    10. ' (' → logprob: -13.257018089294434

Token 131: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04967225342988968
    2. '(L' → logprob: -3.0496723651885986
    3. '()' → logprob: -7.0496721267700195
    4. '((' → logprob: -9.17467212677002
    5. '('' → logprob: -10.67467212677002
    6. '(
' → logprob: -10.79967212677002
    7. '("' → logprob: -10.79967212677002
    8. '(f' → logprob: -11.92467212677002
    9. '(C' → logprob: -12.29967212677002
    10. '(s' → logprob: -12.42467212677002

Token 132: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021444130688905716
    2. '(L' → logprob: -3.896444082260132
    3. '((' → logprob: -7.896444320678711
    4. '(
' → logprob: -8.646444320678711
    5. '("' → logprob: -8.646444320678711
    6. '()' → logprob: -9.271444320678711
    7. '(l' → logprob: -10.646444320678711
    8. '('' → logprob: -10.896444320678711
    9. '(

' → logprob: -11.271444320678711
    10. '(s' → logprob: -12.271444320678711

Token 133: ' résultat' (ID: 62556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1549360603094101
    2. 'cube' → logprob: -3.1549360752105713
    3. ' cube' → logprob: -3.5299360752105713
    4. 'rés' → logprob: -4.029935836791992
    5. ' résultat' → logprob: -4.029935836791992
    6. 'result' → logprob: -4.029935836791992
    7. '()' → logprob: -4.779935836791992
    8. '(L' → logprob: -6.029935836791992
    9. ' (' → logprob: -6.779935836791992
    10. '(result' → logprob: -7.029935836791992

Token 134: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06880944222211838
    2. '
' → logprob: -3.5688095092773438
    3. 'result' → logprob: -4.068809509277344
    4. '  
' → logprob: -4.693809509277344
    5. '(' → logprob: -6.068809509277344
    6. ' 
' → logprob: -6.443809509277344
    7. '```' → logprob: -6.693809509277344
    8. '*' → logprob: -6.693809509277344
    9. '\' → logprob: -7.318809509277344
    10. ' print' → logprob: -7.443809509277344

Token 135: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.206004336476326
    2. '
' → logprob: -2.2060043811798096
    3. 'result' → logprob: -3.3310043811798096
    4. '  
' → logprob: -3.8310043811798096
    5. ' 
' → logprob: -5.4560041427612305
    6. '(' → logprob: -6.0810041427612305
    7. '```' → logprob: -6.0810041427612305
    8. '\' → logprob: -6.3310041427612305
    9. ' print' → logprob: -6.9560041427612305
    10. 'L' → logprob: -6.9560041427612305

Token 136: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09196104854345322
    2. ' l' → logprob: -2.716961145401001
    3. 'la' → logprob: -4.716960906982422
    4. 'à' → logprob: -5.341960906982422
    5. 'é' → logprob: -6.216960906982422
    6. 'a' → logprob: -6.341960906982422
    7. ' la' → logprob: -6.966960906982422
    8. ' ' → logprob: -7.716960906982422
    9. ''écran' → logprob: -7.966960906982422
    10. '```' → logprob: -7.966960906982422

Token 137: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5288957953453064
    2. ''écran' → logprob: -0.9038957953453064
    3. 'e' → logprob: -5.653895854949951
    4. '’écran' → logprob: -6.778895854949951
    5. 'é' → logprob: -7.403895854949951
    6. ''utilisateur' → logprob: -8.403895378112793
    7. ''é' → logprob: -9.528895378112793
    8. ' écran' → logprob: -9.778895378112793
    9. 'screen' → logprob: -11.028895378112793
    10. 'à' → logprob: -11.153895378112793

Token 138: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35595816373825073
    2. '(' → logprob: -1.3559582233428955
    3. '
' → logprob: -4.230957984924316
    4. '(
' → logprob: -4.480957984924316
    5. '  
' → logprob: -5.855957984924316
    6. '(print' → logprob: -5.855957984924316
    7. ' print' → logprob: -6.105957984924316
    8. '*' → logprob: -6.230957984924316
    9. ' 
' → logprob: -6.730957984924316
    10. '\' → logprob: -6.855957984924316

Token 139: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011149736819788814
    2. '
' → logprob: -6.876114845275879
    3. ' print' → logprob: -10.001114845275879
    4. '```' → logprob: -11.126114845275879
    5. 'result' → logprob: -11.626114845275879
    6. '  
' → logprob: -12.501114845275879
    7. ' 
' → logprob: -13.126114845275879
    8. 'r' → logprob: -13.751114845275879
    9. '
' → logprob: -13.751114845275879
    10. 'p' → logprob: -14.126114845275879

Token 140: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008085413835942745
    2. '(L' → logprob: -4.883085250854492
    3. '((' → logprob: -7.758085250854492
    4. ' (' → logprob: -10.258085250854492
    5. '()' → logprob: -11.633085250854492
    6. '(
' → logprob: -13.008085250854492
    7. '(s' → logprob: -13.258085250854492
    8. '(round' → logprob: -14.383085250854492
    9. '(((' → logprob: -14.633085250854492
    10. '('' → logprob: -14.633085250854492

Token 141: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03963252156972885
    2. '*' → logprob: -3.539632558822632
    3. ' **' → logprob: -4.914632320404053
    4. ' *' → logprob: -6.039632320404053
    5. '***' → logprob: -9.414632797241211
    6. ' ' → logprob: -11.289632797241211
    7. ' ***' → logprob: -11.539632797241211
    8. '```' → logprob: -12.789632797241211
    9. '3' → logprob: -13.289632797241211
    10. ')' → logprob: -13.539632797241211

Token 142: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6931570768356323
    2. ' L' → logprob: -0.6931570768356323
    3. ' ' → logprob: -11.568157196044922
    4. ' ' → logprob: -15.693157196044922
    5. '	L' → logprob: -16.193157196044922
    6. '  ' → logprob: -16.193157196044922
    7. '3' → logprob: -16.443157196044922
    8. '```' → logprob: -18.818157196044922
    9. '   ' → logprob: -19.318157196044922
    10. ')' → logprob: -19.693157196044922

Token 143: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10021228343248367
    2. '*' → logprob: -2.350212335586548
    3. ' ' → logprob: -12.600212097167969
    4. ')' → logprob: -14.100212097167969
    5. ' ' → logprob: -14.725212097167969
    6. '**' → logprob: -15.225212097167969
    7. ' *
' → logprob: -15.225212097167969
    8. 'L' → logprob: -15.600212097167969
    9. '*K' → logprob: -16.47521209716797
    10. ' **' → logprob: -16.97521209716797

Token 144: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00029601677670143545
    2. ' L' → logprob: -8.125295639038086
    3. ' ' → logprob: -17.500295639038086
    4. ')' → logprob: -18.375295639038086
    5. '	L' → logprob: -19.250295639038086
    6. ')L' → logprob: -19.625295639038086
    7. 'l' → logprob: -20.500295639038086
    8. '>L' → logprob: -20.750295639038086
    9. '  ' → logprob: -20.812795639038086
    10. '3' → logprob: -20.937795639038086

Token 145: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5762579441070557
    2. '/' → logprob: -0.8262579441070557
    3. ')' → logprob: -8.076257705688477
    4. ' ' → logprob: -13.076257705688477
    5. ')/' → logprob: -13.326257705688477
    6. ' )' → logprob: -13.576257705688477
    7. '27' → logprob: -14.201257705688477
    8. ' ' → logprob: -14.201257705688477
    9. ' /
' → logprob: -14.326257705688477
    10. '```' → logprob: -15.201257705688477

Token 146: ' ' (ID: 220)
  Prédit: '27'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '```' → logprob: -17.375911712646484
    4. '3' → logprob: -17.875911712646484
    5. ' ' → logprob: -18.125911712646484
    6. '   ' → logprob: -18.625911712646484
    7. '  ' → logprob: -18.750911712646484
    8. '273' → logprob: -19.250911712646484
    9. '2' → logprob: -19.688411712646484
    10. '	' → logprob: -19.750911712646484

Token 147: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.25
    4. '3' → logprob: -18.625
    5. '2' → logprob: -19.125
    6. '273' → logprob: -19.625
    7. '   ' → logprob: -20.625
    8. '37' → logprob: -21.0625
    9. '`' → logprob: -21.1875
    10. '9' → logprob: -21.3125

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -16.250001907348633
    4. ')
' → logprob: -17.500001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '')' → logprob: -19.375001907348633
    7. ')#' → logprob: -20.125001907348633
    8. '）' → logprob: -20.250001907348633
    9. '),' → logprob: -20.250001907348633
    10. '`)' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 23.97%
Précision adaptée (1ère position): 23.97%
Précision (top 10): 63.70%
================================================================================
