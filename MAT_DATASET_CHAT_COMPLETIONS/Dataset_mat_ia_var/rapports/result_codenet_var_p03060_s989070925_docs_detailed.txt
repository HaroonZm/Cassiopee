================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    """
    Lit les entrées depuis la console.

    Demande à l'utilisateur d'entrer :
    - Le nombre d'éléments n
    - Une liste d'entiers v de taille n
    - Une liste d'entiers c de taille n

    Returns:
        tuple: Un tuple (n, v, c) où :
            n (int) : Le nombre d'éléments
            v (list of int): La première liste d'entiers
            c (list of int): La seconde liste d'entiers
    """
    n = int(input())  # Lire le nombre d'éléments
    v = list(map(int, input().split()))  # Lire la première liste d'entiers
    c = list(map(int, input().split()))  # Lire la seconde liste d'entiers
    return n, v, c

def calculate_positive_score(n, v, c):
    """
    Calcule la somme des différences positives entre les éléments correspondants de deux listes.

    Pour chaque index i de 0 à n-1, calcule score = v[i] - c[i].
    Si score est supérieur à 0, l'ajoute au résultat final.

    Args:
        n (int): Le nombre d'éléments dans les listes.
        v (list of int): La première liste d'entiers.
        c (list of int): La seconde liste d'entiers.

    Returns:
        int: La somme de toutes les différences positives (v[i] - c[i]) pour lesquelles cette différence est strictement positive.
    """
    result = 0  # Variable pour stocker la somme finale
    for i in range(n):
        score = v[i] - c[i]  # Calcul de la différence pour l'élément i
        if score > 0:
            result += score  # Ajouter si la différence est positive
    return result

def main():
    """
    Fonction principale qui orchestre la lecture des entrées, 
    le calcul et l'affichage du résultat.
    """
    n, v, c = read_input()  # Lecture des entrées utilisateur
    result = calculate_positive_score(n, v, c)  # Calcul du résultat
    print(result)  # Affichage du résultat

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019743215292692184
    2. '_' → logprob: -4.2697434425354
    3. '():' → logprob: -5.6447434425354
    4. '(:' → logprob: -7.3947434425354
    5. '```' → logprob: -7.6447434425354
    6. '(_:' → logprob: -7.8947434425354
    7. '(_' → logprob: -8.769742965698242
    8. ':' → logprob: -8.894742965698242
    9. ' (' → logprob: -9.519742965698242
    10. '_:' → logprob: -10.144742965698242

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0286009311676025
    2. 'return' → logprob: -1.0286009311676025
    3. 'input' → logprob: -2.6536009311676025
    4. 'r' → logprob: -2.9036009311676025
    5. '```' → logprob: -3.1536009311676025
    6. 'x' → logprob: -3.2786009311676025
    7. 'data' → logprob: -4.153600692749023
    8. 'i' → logprob: -4.278600692749023
    9. ' ' → logprob: -4.778600692749023
    10. 'n' → logprob: -4.903600692749023

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.07262977957725525
    2. '   ' → logprob: -3.197629690170288
    3. 'Reads' → logprob: -4.697629928588867
    4. ' reads' → logprob: -5.197629928588867
    5. '""' → logprob: -5.572629928588867
    6. ' Reads' → logprob: -5.822629928588867
    7. ' """' → logprob: -6.197629928588867
    8. 'Read' → logprob: -6.197629928588867
    9. ''''' → logprob: -6.572629928588867
    10. '```' → logprob: -7.697629928588867

Token 7: ' Lit' (ID: 45595)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.4955403804779053
    2. 'Reads' → logprob: -0.9955403804779053
    3. '   ' → logprob: -4.745540618896484
    4. '"""' → logprob: -5.745540618896484
    5. '       ' → logprob: -6.120540618896484
    6. 'reads' → logprob: -6.745540618896484
    7. 'Return' → logprob: -7.245540618896484
    8. 'Returns' → logprob: -7.370540618896484
    9. 'Get' → logprob: -7.620540618896484
    10. ' Reads' → logprob: -7.620540618896484

Token 8: ' les' (ID: 1341)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6998112797737122
    2. '   ' → logprob: -1.4498112201690674
    3. '_input' → logprob: -2.3248112201690674
    4. 'e' → logprob: -2.5748112201690674
    5. ' les' → logprob: -4.4498114585876465
    6. ' input' → logprob: -4.4498114585876465
    7. ' ' → logprob: -4.4498114585876465
    8. 'ure' → logprob: -4.5748114585876465
    9. '_' → logprob: -4.6998114585876465
    10. '  ' → logprob: -5.1998114585876465

Token 9: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3682536482810974
    2. ' données' → logprob: -1.3682537078857422
    3. '   ' → logprob: -4.243253707885742
    4. ' ' → logprob: -4.493253707885742
    5. ' lignes' → logprob: -4.743253707885742
    6. 'l' → logprob: -5.118253707885742
    7. ' entr' → logprob: -5.493253707885742
    8. 'don' → logprob: -6.243253707885742
    9. ' caractères' → logprob: -6.243253707885742
    10. 'entrée' → logprob: -6.743253707885742

Token 10: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.010055077262222767
    2. 'ée' → logprob: -4.635055065155029
    3. 'é' → logprob: -8.260055541992188
    4. 'és' → logprob: -10.760055541992188
    5. 'ees' → logprob: -11.260055541992188
    6. 'ê' → logprob: -13.385055541992188
    7. '   ' → logprob: -14.010055541992188
    8. '�' → logprob: -14.010055541992188
    9. 'es' → logprob: -14.135055541992188
    10. 'e' → logprob: -14.760055541992188

Token 11: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20084409415721893
    2. ' du' → logprob: -2.5758440494537354
    3. ' de' → logprob: -3.0758440494537354
    4. '    ' → logprob: -4.2008442878723145
    5. ' et' → logprob: -4.8258442878723145
    6. '```' → logprob: -4.9508442878723145
    7. ' ' → logprob: -5.2008442878723145
    8. ' en' → logprob: -5.3258442878723145
    9. 'def' → logprob: -5.7008442878723145
    10. ' d' → logprob: -6.2008442878723145

Token 12: ' la' (ID: 557)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.4878077507019043
    2. '   ' → logprob: -2.1128077507019043
    3. 'stdin' → logprob: -2.3628077507019043
    4. ' input' → logprob: -2.8628077507019043
    5. 'l' → logprob: -3.1128077507019043
    6. 'le' → logprob: -4.362807750701904
    7. ' l' → logprob: -4.487807750701904
    8. ' sys' → logprob: -4.487807750701904
    9. ' la' → logprob: -4.737807750701904
    10. 'sys' → logprob: -5.112807750701904

Token 13: ' console' (ID: 3887)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.2676432132720947
    2. 'stdin' → logprob: -1.7676432132720947
    3. ' entrée' → logprob: -2.3926432132720947
    4. '   ' → logprob: -2.3926432132720947
    5. ' stdin' → logprob: -2.5176432132720947
    6. 'f' → logprob: -2.8926432132720947
    7. ' input' → logprob: -3.3926432132720947
    8. ' standard' → logprob: -3.3926432132720947
    9. 's' → logprob: -3.3926432132720947
    10. ' clavier' → logprob: -3.8926432132720947

Token 14: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01894262433052063
    2. '\n' → logprob: -4.268942832946777
    3. '    
' → logprob: -6.643942832946777
    4. '"""' → logprob: -7.268942832946777
    5. '```' → logprob: -7.393942832946777
    6. '
' → logprob: -7.518942832946777
    7. '    ' → logprob: -8.268942832946777
    8. '.' → logprob: -8.268942832946777
    9. ' ' → logprob: -8.393942832946777
    10. '\' → logprob: -8.518942832946777

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005189528223127127
    2. '"""' → logprob: -6.380189418792725
    3. '    ' → logprob: -6.630189418792725
    4. '```' → logprob: -7.255189418792725
    5. ' ' → logprob: -7.880189418792725
    6. 'return' → logprob: -8.505189895629883
    7. '       ' → logprob: -9.005189895629883
    8. '    
' → logprob: -9.130189895629883
    9. 'r' → logprob: -9.505189895629883
    10. '`' → logprob: -9.630189895629883

Token 16: ' Dem' (ID: 9458)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03244992718100548
    2. 'return' → logprob: -3.907449960708618
    3. '"""' → logprob: -4.657449722290039
    4. '```' → logprob: -7.407449722290039
    5. 'r' → logprob: -7.907449722290039
    6. 'input' → logprob: -8.157449722290039
    7. '""' → logprob: -8.532449722290039
    8. '       ' → logprob: -8.782449722290039
    9. '    ' → logprob: -9.157449722290039
    10. ' ' → logprob: -9.282449722290039

Token 17: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.03782341629266739
    2. 'a' → logprob: -3.537823438644409
    3. 'an' → logprob: -5.16282320022583
    4. 'and' → logprob: -6.41282320022583
    5. '   ' → logprob: -9.162823677062988
    6. ' and' → logprob: -9.287823677062988
    7. 'ander' → logprob: -9.287823677062988
    8. 'andez' → logprob: -9.412823677062988
    9. 'e' → logprob: -9.537823677062988
    10. 'andes' → logprob: -10.287823677062988

Token 18: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12695635855197906
    2. ' ' → logprob: -3.6269564628601074
    3. ' des' → logprob: -3.8769564628601074
    4. ' la' → logprob: -4.876956462860107
    5. 'à' → logprob: -5.126956462860107
    6. 's' → logprob: -5.126956462860107
    7. ' a' → logprob: -5.251956462860107
    8. ' l' → logprob: -5.251956462860107
    9. '   ' → logprob: -5.376956462860107
    10. ' au' → logprob: -5.376956462860107

Token 19: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6332313418388367
    2. ' l' → logprob: -0.7582313418388367
    3. ' la' → logprob: -8.633231163024902
    4. '   ' → logprob: -9.258231163024902
    5. ' user' → logprob: -9.258231163024902
    6. ' ' → logprob: -10.008231163024902
    7. 'user' → logprob: -10.258231163024902
    8. ' utilisateur' → logprob: -10.383231163024902
    9. 'u' → logprob: -11.008231163024902
    10. ' chaque' → logprob: -11.008231163024902

Token 20: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17855779826641083
    2. 'a' → logprob: -2.553557872772217
    3. 'u' → logprob: -2.803557872772217
    4. ' utilisateur' → logprob: -4.678557872772217
    5. '’utilisateur' → logprob: -4.678557872772217
    6. ''' → logprob: -5.803557872772217
    7. 'e' → logprob: -6.053557872772217
    8. 'util' → logprob: -7.928557872772217
    9. ''util' → logprob: -8.178557395935059
    10. ' a' → logprob: -9.553557395935059

Token 21: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1376112550497055
    2. '   ' → logprob: -2.887611150741577
    3. ' d' → logprob: -4.137611389160156
    4. 's' → logprob: -4.262611389160156
    5. ' ' → logprob: -4.637611389160156
    6. ' un' → logprob: -4.887611389160156
    7. '    ' → logprob: -5.637611389160156
    8. ' la' → logprob: -5.637611389160156
    9. '```' → logprob: -6.137611389160156
    10. ' des' → logprob: -6.262611389160156

Token 22: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06413957476615906
    2. ''' → logprob: -2.8141396045684814
    3. 'a' → logprob: -7.064139366149902
    4. 'u' → logprob: -7.564139366149902
    5. ''entrée' → logprob: -8.814139366149902
    6. ''ent' → logprob: -8.939139366149902
    7. ''une' → logprob: -9.439139366149902
    8. 'es' → logprob: -9.564139366149902
    9. ''un' → logprob: -9.689139366149902
    10. ' e' → logprob: -9.814139366149902

Token 23: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.026457741856575012
    2. 'ent' → logprob: -4.901457786560059
    3. 'entrée' → logprob: -5.026457786560059
    4. 'e' → logprob: -5.776457786560059
    5. ''' → logprob: -6.151457786560059
    6. ' entrer' → logprob: -6.151457786560059
    7. 's' → logprob: -6.901457786560059
    8. '`' → logprob: -7.401457786560059
    9. 'a' → logprob: -8.151457786560059
    10. ' saisir' → logprob: -8.276457786560059

Token 24: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0001577698567416519
    2. 'e' → logprob: -8.875157356262207
    3. 'erer' → logprob: -11.875157356262207
    4. 'eer' → logprob: -12.375157356262207
    5. 'ée' → logprob: -13.125157356262207
    6. 'éer' → logprob: -13.625157356262207
    7. 'é' → logprob: -13.750157356262207
    8. 'er's' → logprob: -14.250157356262207
    9. '   ' → logprob: -15.375157356262207
    10. '```' → logprob: -15.375157356262207

Token 25: ' :
' (ID: 10039)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8052829504013062
    2. ' un' → logprob: -0.9302829504013062
    3. ' la' → logprob: -2.8052830696105957
    4. ' ' → logprob: -3.5552830696105957
    5. '   ' → logprob: -3.5552830696105957
    6. 's' → logprob: -4.430283069610596
    7. 'une' → logprob: -4.805283069610596
    8. ' le' → logprob: -5.180283069610596
    9. 'un' → logprob: -6.305283069610596
    10. ' des' → logprob: -6.430283069610596

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31067323684692383
    2. ' un' → logprob: -2.935673236846924
    3. ' une' → logprob: -3.185673236846924
    4. '    ' → logprob: -3.310673236846924
    5. 'l' → logprob: -4.185673236846924
    6. ' )' → logprob: -4.310673236846924
    7. '```' → logprob: -4.310673236846924
    8. ' la' → logprob: -4.310673236846924
    9. ')' → logprob: -4.560673236846924
    10. 'une' → logprob: -4.560673236846924

Token 27: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.091705322265625
    2. ' un' → logprob: -1.716705322265625
    3. ' une' → logprob: -1.841705322265625
    4. '    ' → logprob: -2.091705322265625
    5. 'une' → logprob: -3.341705322265625
    6. 'l' → logprob: -3.966705322265625
    7. ' a' → logprob: -4.216705322265625
    8. ' ' → logprob: -4.466705322265625
    9. ' des' → logprob: -4.466705322265625
    10. 'u' → logprob: -4.591705322265625

Token 28: ' Le' (ID: 2018)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4756240844726562
    2. ' une' → logprob: -1.7256240844726562
    3. ' la' → logprob: -1.9756240844726562
    4. ' l' → logprob: -2.2256240844726562
    5. ' un' → logprob: -2.3506240844726562
    6. ' le' → logprob: -2.8506240844726562
    7. 'une' → logprob: -2.9756240844726562
    8. 'u' → logprob: -3.8506240844726562
    9. 'le' → logprob: -3.9756240844726562
    10. '   ' → logprob: -4.350624084472656

Token 29: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2832062244415283
    2. 'nombre' → logprob: -1.6582062244415283
    3. ' type' → logprob: -3.5332062244415283
    4. 's' → logprob: -4.783205986022949
    5. ' nom' → logprob: -5.158205986022949
    6. 'nom' → logprob: -5.908205986022949
    7. 'type' → logprob: -5.908205986022949
    8. ' code' → logprob: -6.283205986022949
    9. '   ' → logprob: -6.533205986022949
    10. 'n' → logprob: -6.908205986022949

Token 30: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.504758894443512
    2. '_' → logprob: -1.8797588348388672
    3. ' ' → logprob: -1.8797588348388672
    4. ' de' → logprob: -2.629758834838867
    5. '   ' → logprob: -5.129758834838867
    6. '_de' → logprob: -5.504758834838867
    7. 'd' → logprob: -6.129758834838867
    8. ' total' → logprob: -6.504758834838867
    9. 'de' → logprob: -7.004758834838867
    10. '    ' → logprob: -7.129758834838867

Token 31: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22791358828544617
    2. '_' → logprob: -1.6029136180877686
    3. 'e' → logprob: -7.1029133796691895
    4. ' espaces' → logprob: -8.102913856506348
    5. ''' → logprob: -8.352913856506348
    6. 'é' → logprob: -8.852913856506348
    7. '_space' → logprob: -9.352913856506348
    8. ' _' → logprob: -9.352913856506348
    9. ' e' → logprob: -9.352913856506348
    10. '_e' → logprob: -9.477913856506348

Token 32: 'élé' (ID: 15228)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3182848691940308
    2. 'élé' → logprob: -1.6932848691940308
    3. 'util' → logprob: -1.9432848691940308
    4. 'é' → logprob: -1.9432848691940308
    5. ''util' → logprob: -2.9432849884033203
    6. 'a' → logprob: -3.9432849884033203
    7. 'e' → logprob: -3.9432849884033203
    8. 'él' → logprob: -4.19328498840332
    9. ''é' → logprob: -4.19328498840332
    10. 'ind' → logprob: -4.31828498840332

Token 33: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -6.349075556499884e-05
    2. 'ment' → logprob: -10.2500638961792
    3. 'm' → logprob: -10.8750638961792
    4. 'me' → logprob: -13.0000638961792
    5. 'nts' → logprob: -13.0000638961792
    6. '```' → logprob: -13.3750638961792
    7. 'phants' → logprob: -13.8750638961792
    8. 'ements' → logprob: -15.1250638961792
    9. '   ' → logprob: -15.2500638961792
    10. 'ents' → logprob: -15.3750638961792

Token 34: ' n' (ID: 297)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1332240104675293
    2. ' ' → logprob: -2.1332240104675293
    3. ' a' → logprob: -6.383224010467529
    4. ' (' → logprob: -6.758224010467529
    5. '   ' → logprob: -7.008224010467529
    6. ' `' → logprob: -8.133224487304688
    7. ' de' → logprob: -8.383224487304688
    8. '```' → logprob: -8.383224487304688
    9. 's' → logprob: -8.508224487304688
    10. ' to' → logprob: -8.633224487304688

Token 35: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6340229511260986
    2. 'b' → logprob: -2.0090229511260986
    3. '_' → logprob: -2.1340229511260986
    4. 'umer' → logprob: -2.5090229511260986
    5. ')' → logprob: -3.5090229511260986
    6. 'é' → logprob: -4.5090227127075195
    7. ' à' → logprob: -4.6340227127075195
    8. ' )' → logprob: -4.6340227127075195
    9. 'ombres' → logprob: -4.7590227127075195
    10. 'e' → logprob: -5.1340227127075195

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021129164844751358
    2. ' ' → logprob: -4.646129131317139
    3. ')' → logprob: -6.021129131317139
    4. ',' → logprob: -6.896129131317139
    5. '       ' → logprob: -6.896129131317139
    6. '    ' → logprob: -7.146129131317139
    7. ''' → logprob: -7.271129131317139
    8. '"' → logprob: -7.271129131317139
    9. '  ' → logprob: -7.271129131317139
    10. ' (' → logprob: -7.521129131317139

Token 37: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26265862584114075
    2. ' ' → logprob: -2.1376585960388184
    3. '```' → logprob: -3.5126585960388184
    4. ''' → logprob: -4.012658596038818
    5. '"' → logprob: -4.512658596038818
    6. '       ' → logprob: -4.762658596038818
    7. '"""
' → logprob: -4.887658596038818
    8. ')' → logprob: -5.012658596038818
    9. ' 
' → logprob: -5.387658596038818
    10. '\' → logprob: -5.762658596038818

Token 38: ' Une' (ID: 19758)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3844316899776459
    2. 'n' → logprob: -2.0094316005706787
    3. ' l' → logprob: -3.1344316005706787
    4. 'L' → logprob: -3.2594316005706787
    5. '   ' → logprob: -3.7594316005706787
    6. ' L' → logprob: -4.259431838989258
    7. 'u' → logprob: -4.634431838989258
    8. 'le' → logprob: -4.884431838989258
    9. 'Le' → logprob: -5.009431838989258
    10. ' la' → logprob: -5.259431838989258

Token 39: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.33471983671188354
    2. 'liste' → logprob: -1.4597198963165283
    3. ' ' → logprob: -3.0847198963165283
    4. '   ' → logprob: -6.959719657897949
    5. ' list' → logprob: -7.084719657897949
    6. 'list' → logprob: -7.209719657897949
    7. 's' → logprob: -7.209719657897949
    8. 'l' → logprob: -7.209719657897949
    9. 'ligne' → logprob: -7.709719657897949
    10. ' ligne' → logprob: -8.08471965789795

Token 40: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.19228699803352356
    2. ' d' → logprob: -2.317286968231201
    3. ' de' → logprob: -3.067286968231201
    4. '   ' → logprob: -4.567286968231201
    5. ' ' → logprob: -5.692286968231201
    6. '[' → logprob: -5.817286968231201
    7. 'de' → logprob: -5.942286968231201
    8. ' complète' → logprob: -6.067286968231201
    9. ' of' → logprob: -6.567286968231201
    10. '[]' → logprob: -6.692286968231201

Token 41: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8961239457130432
    2. ''' → logprob: -1.1461238861083984
    3. 'es' → logprob: -1.7711238861083984
    4. ''ent' → logprob: -3.5211238861083984
    5. ''espace' → logprob: -3.8961238861083984
    6. 'élé' → logprob: -4.021123886108398
    7. ''esp' → logprob: -4.521123886108398
    8. ''é' → logprob: -5.146123886108398
    9. '_' → logprob: -5.271123886108398
    10. '`' → logprob: -6.146123886108398

Token 42: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04419939965009689
    2. 'i' → logprob: -3.1691994667053223
    3. 'ières' → logprob: -7.044199466705322
    4. 'ié' → logprob: -8.419198989868164
    5. 'ier' → logprob: -9.794198989868164
    6. 'ités' → logprob: -11.044198989868164
    7. 'é' → logprob: -12.044198989868164
    8. '```' → logprob: -12.169198989868164
    9. 'ière' → logprob: -12.544198989868164
    10. 'í' → logprob: -12.669198989868164

Token 43: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014522737823426723
    2. 'n' → logprob: -5.139522552490234
    3. '\n' → logprob: -5.639522552490234
    4. ')' → logprob: -6.389522552490234
    5. '
' → logprob: -7.389522552490234
    6. '    
' → logprob: -7.389522552490234
    7. '```' → logprob: -7.764522552490234
    8. ' ' → logprob: -8.514522552490234
    9. '\' → logprob: -8.639522552490234
    10. '"""' → logprob: -8.764522552490234

Token 44: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9036394953727722
    2. 'al' → logprob: -1.903639554977417
    3. 'e' → logprob: -2.153639554977417
    4. 's' → logprob: -2.653639554977417
    5. '[' → logprob: -2.778639554977417
    6. 'ale' → logprob: -3.153639554977417
    7. ')' → logprob: -3.778639554977417
    8. 'als' → logprob: -3.903639554977417
    9. 'ales' → logprob: -3.903639554977417
    10. '[]' → logprob: -4.278639316558838

Token 45: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.5273221135139465
    2. 'long' → logprob: -1.7773220539093018
    3. 'n' → logprob: -2.6523220539093018
    4. ' longueur' → logprob: -3.0273220539093018
    5. ' n' → logprob: -3.1523220539093018
    6. ' taille' → logprob: -3.2773220539093018
    7. ' la' → logprob: -4.652322292327881
    8. ' long' → logprob: -4.652322292327881
    9. 'length' → logprob: -5.277322292327881
    10. ' longue' → logprob: -5.777322292327881

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18483731150627136
    2. 'n' → logprob: -1.8098373413085938
    3. ' ' → logprob: -5.309837341308594
    4. ' \' → logprob: -9.809837341308594
    5. ' ' → logprob: -10.434837341308594
    6. ' `' → logprob: -11.059837341308594
    7. ' \(' → logprob: -11.809837341308594
    8. '\n' → logprob: -11.809837341308594
    9. '_' → logprob: -12.809837341308594
    10. '(n' → logprob: -13.059837341308594

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026253391057252884
    2. '\n' → logprob: -3.9012534618377686
    3. '\' → logprob: -6.6512532234191895
    4. '"""' → logprob: -6.9012532234191895
    5. '"""
' → logprob: -7.1512532234191895
    6. '"' → logprob: -7.2762532234191895
    7. '    
' → logprob: -7.4012532234191895
    8. '```' → logprob: -8.151253700256348
    9. '"\' → logprob: -8.401253700256348
    10. '
' → logprob: -8.526253700256348

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038732677698135376
    2. '"""' → logprob: -3.2887327671051025
    3. '"' → logprob: -8.163732528686523
    4. '"""
' → logprob: -8.788732528686523
    5. '```' → logprob: -8.788732528686523
    6. '""' → logprob: -10.163732528686523
    7. '\n' → logprob: -10.913732528686523
    8. ')' → logprob: -11.663732528686523
    9. '`' → logprob: -11.913732528686523
    10. '
' → logprob: -12.288732528686523

Token 49: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2568304240703583
    2. '"""' → logprob: -1.5068304538726807
    3. '"' → logprob: -6.381830215454102
    4. '"""
' → logprob: -6.881830215454102
    5. '\n' → logprob: -7.381830215454102
    6. '""' → logprob: -7.506830215454102
    7. '```' → logprob: -7.506830215454102
    8. 'n' → logprob: -8.756830215454102
    9. '`' → logprob: -10.131830215454102
    10. ' ' → logprob: -10.506830215454102

Token 50: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16102945804595947
    2. 'n' → logprob: -3.41102933883667
    3. 'Le' → logprob: -3.91102933883667
    4. ' """' → logprob: -4.16102933883667
    5. '"""' → logprob: -4.28602933883667
    6. 'La' → logprob: -4.53602933883667
    7. 'L' → logprob: -4.66102933883667
    8. 'r' → logprob: -4.91102933883667
    9. 'Retour' → logprob: -5.53602933883667
    10. ' Le' → logprob: -5.53602933883667

Token 51: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7641746401786804
    2. ' liste' → logprob: -1.6391746997833252
    3. 'chaine' → logprob: -1.8891746997833252
    4. 'ligne' → logprob: -3.639174699783325
    5. ' chaîne' → logprob: -3.764174699783325
    6. 'l' → logprob: -3.889174699783325
    7. 'val' → logprob: -3.889174699783325
    8. 's' → logprob: -4.264174461364746
    9. 'phrase' → logprob: -4.264174461364746
    10. 'cha' → logprob: -5.014174461364746

Token 52: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6584592461585999
    2. 'd' → logprob: -0.7834592461585999
    3. 's' → logprob: -4.408459186553955
    4. '[' → logprob: -5.283459186553955
    5. ' des' → logprob: -6.283459186553955
    6. 'des' → logprob: -6.533459186553955
    7. '<|end|>' → logprob: -6.533459186553955
    8. ' de' → logprob: -7.158459186553955
    9. 'de' → logprob: -7.158459186553955
    10. '[int' → logprob: -8.158459663391113

Token 53: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.0434584766626358
    2. 'e' → logprob: -4.293458461761475
    3. '_' → logprob: -4.543458461761475
    4. ''' → logprob: -5.168458461761475
    5. ''esp' → logprob: -6.043458461761475
    6. ''espace' → logprob: -6.043458461761475
    7. ''e' → logprob: -6.293458461761475
    8. ''ex' → logprob: -6.418458461761475
    9. '_ent' → logprob: -7.918458461761475
    10. '’ent' → logprob: -8.168458938598633

Token 54: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5872125625610352
    2. 'iers' → logprob: -0.8372125625610352
    3. 'ières' → logprob: -4.962212562561035
    4. 'í' → logprob: -6.462212562561035
    5. 'ié' → logprob: -6.962212562561035
    6. 'ier' → logprob: -7.212212562561035
    7. '```' → logprob: -8.462212562561035
    8. 'î' → logprob: -8.587212562561035
    9. '_i' → logprob: -9.212212562561035
    10. 'r' → logprob: -9.462212562561035

Token 55: ' c' (ID: 274)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.991509735584259
    2. ' u' → logprob: -1.9915096759796143
    3. ' c' → logprob: -2.2415096759796143
    4. ' w' → logprob: -2.4915096759796143
    5. ' d' → logprob: -2.8665096759796143
    6. ' s' → logprob: -3.2415096759796143
    7. 'c' → logprob: -3.4915096759796143
    8. ' v' → logprob: -3.7415096759796143
    9. 't' → logprob: -3.9915096759796143
    10. 'u' → logprob: -4.116509914398193

Token 56: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057058680802583694
    2. ')' → logprob: -4.057058811187744
    3. '```' → logprob: -4.557058811187744
    4. 'n' → logprob: -5.307058811187744
    5. 'def' → logprob: -5.432058811187744
    6. 's' → logprob: -5.807058811187744
    7. ',' → logprob: -6.182058811187744
    8. '_' → logprob: -6.432058811187744
    9. '.' → logprob: -6.682058811187744
    10. 'e' → logprob: -6.807058811187744

Token 57: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.3207623064517975
    2. 'tail' → logprob: -1.570762276649475
    3. ' ta' → logprob: -3.8207623958587646
    4. 'ta' → logprob: -4.0707621574401855
    5. ' la' → logprob: -4.1957621574401855
    6. ' même' → logprob: -4.8207621574401855
    7. ' tail' → logprob: -6.1957621574401855
    8. ' tailles' → logprob: -7.3207621574401855
    9. ' longueur' → logprob: -8.195762634277344
    10. 't' → logprob: -8.820762634277344

Token 58: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048694103956222534
    2. 'n' → logprob: -3.048694133758545
    3. ' ' → logprob: -9.173693656921387
    4. '_n' → logprob: -13.923693656921387
    5. '	n' → logprob: -14.798693656921387
    6. ' ' → logprob: -15.423693656921387
    7. ',' → logprob: -15.548693656921387
    8. '<n' → logprob: -16.298694610595703
    9. ''n' → logprob: -16.423694610595703
    10. ' `' → logprob: -16.548694610595703

Token 59: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016841016709804535
    2. '"""' → logprob: -4.266840934753418
    3. '"""
' → logprob: -7.016840934753418
    4. '\n' → logprob: -7.641840934753418
    5. '```' → logprob: -8.016840934753418
    6. '"' → logprob: -8.391840934753418
    7. '\' → logprob: -8.641840934753418
    8. 'def' → logprob: -8.891840934753418
    9. '""' → logprob: -9.266840934753418
    10. '    
' → logprob: -9.391840934753418

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035022176802158356
    2. '"""' → logprob: -3.410022258758545
    3. '"""
' → logprob: -7.410022258758545
    4. '"' → logprob: -8.035021781921387
    5. '```' → logprob: -8.410021781921387
    6. '""' → logprob: -9.410021781921387
    7. '    
' → logprob: -10.535021781921387
    8. '
' → logprob: -10.535021781921387
    9. '`' → logprob: -11.160021781921387
    10. '\n' → logprob: -11.160021781921387

Token 61: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1859978884458542
    2. '"""' → logprob: -1.8109978437423706
    3. 'n' → logprob: -5.93599796295166
    4. '```' → logprob: -6.56099796295166
    5. '"""
' → logprob: -7.18599796295166
    6. ' """' → logprob: -7.93599796295166
    7. '""' → logprob: -8.43599796295166
    8. 'r' → logprob: -8.68599796295166
    9. ' ' → logprob: -9.18599796295166
    10. '#' → logprob: -9.31099796295166

Token 62: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.10353359580039978
    2. ':' → logprob: -2.3535335063934326
    3. '   ' → logprob: -6.603533744812012
    4. '    ' → logprob: -7.353533744812012
    5. '```' → logprob: -7.478533744812012
    6. ' ```' → logprob: -9.103533744812012
    7. ' ' → logprob: -9.478533744812012
    8. ' ):' → logprob: -9.478533744812012
    9. ' ' → logprob: -9.603533744812012
    10. 'n' → logprob: -9.728533744812012

Token 63: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0824262797832489
    2. '    ' → logprob: -3.5824263095855713
    3. ' n' → logprob: -4.082426071166992
    4. ' List' → logprob: -5.082426071166992
    5. '```' → logprob: -5.457426071166992
    6. ' `' → logprob: -5.582426071166992
    7. ' int' → logprob: -5.832426071166992
    8. ' []' → logprob: -5.832426071166992
    9. ' """' → logprob: -6.207426071166992
    10. 'n' → logprob: -6.207426071166992

Token 64: ' tuple' (ID: 31311)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.6483689546585083
    2. ' tuple' → logprob: -1.7733689546585083
    3. 'tuple' (adapté à ' tuple') → logprob: -1.8983689546585083
    4. ' Tuple' → logprob: -2.5233688354492188
    5. 'List' → logprob: -3.3983688354492188
    6. 'list' → logprob: -3.6483688354492188
    7. ' List' → logprob: -5.523368835449219
    8. '   ' → logprob: -5.648368835449219
    9. ' list' → logprob: -5.898368835449219
    10. 'dict' → logprob: -6.023368835449219

Token 65: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3564150929450989
    2. ':' → logprob: -1.856415033340454
    3. '[' → logprob: -2.856415033340454
    4. ' (' → logprob: -2.856415033340454
    5. '(
' → logprob: -4.606415271759033
    6. '(tuple' → logprob: -5.731415271759033
    7. '[int' → logprob: -5.856415271759033
    8. ')' → logprob: -6.106415271759033
    9. ',' → logprob: -6.356415271759033
    10. ' of' → logprob: -6.731415271759033

Token 66: ' Un' (ID: 1367)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11400111019611359
    2. '(int' → logprob: -2.8640010356903076
    3. '(n' → logprob: -3.8640010356903076
    4. '(' → logprob: -4.489001274108887
    5. '(tuple' → logprob: -4.739001274108887
    6. ' tuple' → logprob: -5.364001274108887
    7. ' int' → logprob: -6.614001274108887
    8. 'int' → logprob: -6.864001274108887
    9. 'tuple' → logprob: -7.114001274108887
    10. 'n' → logprob: -7.864001274108887

Token 67: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.9174971580505371
    2. ' (' → logprob: -1.042497158050537
    3. ' des' → logprob: -2.542497158050537
    4. 's' → logprob: -3.167497158050537
    5. ' ' → logprob: -3.542497158050537
    6. ' espace' → logprob: -3.917497158050537
    7. '<|end|>' → logprob: -4.417497158050537
    8. 'es' → logprob: -4.667497158050537
    9. ' n' → logprob: -4.667497158050537
    10. ' )' → logprob: -5.042497158050537

Token 68: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.093528151512146
    2. ' des' → logprob: -1.718528151512146
    3. '   ' → logprob: -1.843528151512146
    4. '<|end|>' → logprob: -2.2185282707214355
    5. '(' → logprob: -3.2185282707214355
    6. ')' → logprob: -3.7185282707214355
    7. ' consisting' → logprob: -3.9685282707214355
    8. '[' → logprob: -4.2185282707214355
    9. ' contenant' → logprob: -4.3435282707214355
    10. '('' → logprob: -4.8435282707214355

Token 69: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00802392978221178
    2. ' n' → logprob: -5.258023738861084
    3. 'int' → logprob: -6.008023738861084
    4. ' int' → logprob: -8.508024215698242
    5. '   ' → logprob: -9.633024215698242
    6. ')' → logprob: -10.383024215698242
    7. '	n' → logprob: -12.258024215698242
    8. '(n' → logprob: -12.258024215698242
    9. '(int' → logprob: -12.508024215698242
    10. ')n' → logprob: -12.883024215698242

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ' ,' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -15.625001907348633
    4. ',int' → logprob: -15.875001907348633
    5. '‌,' → logprob: -16.125001907348633
    6. 's' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. ')' → logprob: -16.500001907348633
    9. ',
' → logprob: -16.875001907348633
    10. ',v' → logprob: -17.625001907348633

Token 71: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.042224448174238205
    2. 'v' → logprob: -3.417224407196045
    3. ' ' → logprob: -4.792224407196045
    4. ' )' → logprob: -9.542224884033203
    5. ')' → logprob: -9.792224884033203
    6. 'space' → logprob: -10.417224884033203
    7. ' ' → logprob: -10.792224884033203
    8. ' space' → logprob: -11.042224884033203
    9. ' ```' → logprob: -11.792224884033203
    10. ' `' → logprob: -11.917224884033203

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027230256819166243
    2. ')' → logprob: -8.250272750854492
    3. ' ,' → logprob: -11.875272750854492
    4. ',n' → logprob: -13.500272750854492
    5. '   ' → logprob: -14.000272750854492
    6. '),' → logprob: -14.625272750854492
    7. ',v' → logprob: -14.750272750854492
    8. 's' → logprob: -15.250272750854492
    9. ',)' → logprob: -15.375272750854492
    10. '```' → logprob: -16.125272750854492

Token 73: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.055143702775239944
    2. 'c' → logprob: -2.9301435947418213
    3. ' ' → logprob: -8.680143356323242
    4. '    ' → logprob: -9.805143356323242
    5. ' ' → logprob: -11.555143356323242
    6. ')' → logprob: -11.805143356323242
    7. '	c' → logprob: -12.180143356323242
    8. ',' → logprob: -12.805143356323242
    9. ' )' → logprob: -13.180143356323242
    10. '   ' → logprob: -13.305143356323242

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -14.500000953674316
    3. '),' → logprob: -15.125000953674316
    4. ')`' → logprob: -15.375000953674316
    5. ' )' → logprob: -15.750000953674316
    6. ')
' → logprob: -17.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. '):' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ').' → logprob: -18.125001907348633

Token 75: ' où' (ID: 15113)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.41366466879844666
    2. '   ' → logprob: -1.788664698600769
    3. '
' → logprob: -2.5386645793914795
    4. '    
' → logprob: -3.6636645793914795
    5. '\' → logprob: -3.7886645793914795
    6. '' → logprob: -4.163664817810059
    7. ')' → logprob: -4.288664817810059
    8. '  
' → logprob: -5.413664817810059
    9. ' 
' → logprob: -6.163664817810059
    10. '```' → logprob: -6.288664817810059

Token 76: ' :
' (ID: 10039)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34508001804351807
    2. ' n' → logprob: -1.470080018043518
    3. '   ' → logprob: -2.9700798988342285
    4. ' la' → logprob: -5.9700798988342285
    5. '```' → logprob: -6.0950798988342285
    6. '(n' → logprob: -6.4700798988342285
    7. ' `' → logprob: -6.7200798988342285
    8. ' le' → logprob: -7.7200798988342285
    9. '    ' → logprob: -7.7200798988342285
    10. ')' → logprob: -7.9700798988342285

Token 77: '           ' (ID: 352)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5227853655815125
    2. 'n' → logprob: -1.6477854251861572
    3. '   ' → logprob: -2.2727854251861572
    4. ' n' → logprob: -2.5227854251861572
    5. ' (' → logprob: -4.147785186767578
    6. '    ' → logprob: -4.647785186767578
    7. '       ' → logprob: -5.397785186767578
    8. '(' → logprob: -7.897785186767578
    9. ')' → logprob: -8.272785186767578
    10. ' ' → logprob: -8.397785186767578

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.18685178458690643
    2. '(n' → logprob: -2.186851739883423
    3. ' n' → logprob: -3.061851739883423
    4. '   ' → logprob: -5.061851978302002
    5. '           ' → logprob: -6.186851978302002
    6. ' (' → logprob: -6.561851978302002
    7. '```' → logprob: -6.936851978302002
    8. '(' → logprob: -8.311851501464844
    9. '(int' → logprob: -9.561851501464844
    10. '       ' → logprob: -9.811851501464844

Token 79: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7315879464149475
    2. '<|end|>' → logprob: -0.9815879464149475
    3. ' =' → logprob: -2.8565878868103027
    4. ',' → logprob: -3.2315878868103027
    5. ' ,' → logprob: -4.606587886810303
    6. ' is' → logprob: -4.856587886810303
    7. '  ' → logprob: -5.106587886810303
    8. ')' → logprob: -5.231587886810303
    9. ' est' → logprob: -5.606587886810303
    10. '=' → logprob: -5.981587886810303

Token 80: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2015000730752945
    2. ' int' → logprob: -1.7015000581741333
    3. ' i' → logprob: -10.201499938964844
    4. 'i' → logprob: -10.451499938964844
    5. '   ' → logprob: -11.326499938964844
    6. ' `' → logprob: -13.576499938964844
    7. ')' → logprob: -13.576499938964844
    8. '```' → logprob: -13.576499938964844
    9. ' in' → logprob: -13.826499938964844
    10. 'in' → logprob: -13.826499938964844

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002798222005367279
    2. ',' → logprob: -6.377798080444336
    3. ' )' → logprob: -6.877798080444336
    4. '   ' → logprob: -10.877798080444336
    5. ',)' → logprob: -11.252798080444336
    6. ' ' → logprob: -11.502798080444336
    7. ')n' → logprob: -12.377798080444336
    8. '),' → logprob: -12.627798080444336
    9. ' ,' → logprob: -12.627798080444336
    10. 'n' → logprob: -13.002798080444336

Token 82: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005751033313572407
    2. ')' → logprob: -6.130751132965088
    3. '=' → logprob: -6.630751132965088
    4. ' ,' → logprob: -6.880751132965088
    5. '   ' → logprob: -7.630751132965088
    6. ' =' → logprob: -7.755751132965088
    7. 'n' → logprob: -9.75575065612793
    8. ',int' → logprob: -9.75575065612793
    9. ',
' → logprob: -9.88075065612793
    10. '```' → logprob: -10.25575065612793

Token 83: ' Le' (ID: 2018)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.08206075429916382
    2. ' nombre' → logprob: -3.4570608139038086
    3. ' l' → logprob: -3.9570608139038086
    4. ' Le' → logprob: -4.832060813903809
    5. ' la' → logprob: -5.082060813903809
    6. ' ' → logprob: -5.457060813903809
    7. '   ' → logprob: -6.082060813903809
    8. 'le' → logprob: -6.582060813903809
    9. 'Le' → logprob: -6.582060813903809
    10. 'l' → logprob: -6.707060813903809

Token 84: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04373236373066902
    2. 'nombre' → logprob: -3.1687324047088623
    3. ' ' → logprob: -7.543732166290283
    4. '   ' → logprob: -8.918732643127441
    5. ' nombres' → logprob: -10.293732643127441
    6. 'n' → logprob: -11.543732643127441
    7. ' n' → logprob: -12.043732643127441
    8. ' ' → logprob: -12.168732643127441
    9. '_nombre' → logprob: -12.918732643127441
    10. ' nom' → logprob: -13.168732643127441

Token 85: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17662042379379272
    2. ' ' → logprob: -1.9266204833984375
    3. ' de' → logprob: -5.0516204833984375
    4. 'd' → logprob: -5.5516204833984375
    5. ' des' → logprob: -6.0516204833984375
    6. '_' → logprob: -6.4266204833984375
    7. ')' → logprob: -7.3016204833984375
    8. ' )' → logprob: -7.6766204833984375
    9. '_d' → logprob: -8.676620483398438
    10. 's' → logprob: -8.926620483398438

Token 86: ''' (ID: 6)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0804925337433815
    2. 'élé' → logprob: -3.0804924964904785
    3. '_' → logprob: -4.3304924964904785
    4. ''' → logprob: -5.0804924964904785
    5. 'd' → logprob: -5.4554924964904785
    6. ' éléments' → logprob: -5.7054924964904785
    7. ' ' → logprob: -5.9554924964904785
    8. ''é' → logprob: -7.0804924964904785
    9. 'é' → logprob: -8.080492973327637
    10. 'él' → logprob: -9.455492973327637

Token 87: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05665764957666397
    2. 'é' → logprob: -2.931657552719116
    3. ''' → logprob: -7.056657791137695
    4. 'él' → logprob: -7.431657791137695
    5. ''é' → logprob: -8.431657791137695
    6. '_' → logprob: -10.556657791137695
    7. ''él' → logprob: -10.806657791137695
    8. 'éc' → logprob: -11.056657791137695
    9. 'è' → logprob: -11.306657791137695
    10. 'ê' → logprob: -11.931657791137695

Token 88: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.16104255616664886
    2. 'm' → logprob: -1.91104257106781
    3. 'ment' → logprob: -7.1610426902771
    4. 'men' → logprob: -10.786042213439941
    5. 'me' → logprob: -11.786042213439941
    6. 'м' → logprob: -12.661042213439941
    7. ')' → logprob: -13.161042213439941
    8. 'mé' → logprob: -13.661042213439941
    9. 's' → logprob: -13.786042213439941
    10. 'mente' → logprob: -14.036042213439941

Token 89: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003787846537306905
    2. ',
' → logprob: -6.378787994384766
    3. ')' → logprob: -6.628787994384766
    4. '   ' → logprob: -8.503787994384766
    5. ' ,' → logprob: -9.128787994384766
    6. ',n' → logprob: -9.128787994384766
    7. 'n' → logprob: -9.253787994384766
    8. '```' → logprob: -9.378787994384766
    9. '\' → logprob: -10.253787994384766
    10. '\n' → logprob: -10.378787994384766

Token 90: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005359567701816559
    2. ' ,' → logprob: -6.005359649658203
    3. ')' → logprob: -6.255359649658203
    4. ',
' → logprob: -7.255359649658203
    5. '```' → logprob: -9.380359649658203
    6. '   ' → logprob: -9.630359649658203
    7. '           ' → logprob: -10.630359649658203
    8. 'n' → logprob: -11.255359649658203
    9. ' ' → logprob: -11.380359649658203
    10. ' ,
' → logprob: -11.755359649658203

Token 91: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4741194546222687
    2. 'v' (adapté à ' v') → logprob: -0.9741194248199463
    3. '   ' → logprob: -10.974119186401367
    4. '    ' → logprob: -11.599119186401367
    5. '	v' → logprob: -12.849119186401367
    6. '           ' → logprob: -13.099119186401367
    7. '(v' → logprob: -13.724119186401367
    8. ' ' → logprob: -13.849119186401367
    9. ' tuple' → logprob: -13.849119186401367
    10. 'n' → logprob: -13.974119186401367

Token 92: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03786817938089371
    2. ' (' → logprob: -3.4128682613372803
    3. ' ,' → logprob: -5.787868022918701
    4. '(' → logprob: -8.28786849975586
    5. ' ' → logprob: -8.41286849975586
    6. ')' → logprob: -8.53786849975586
    7. '[' → logprob: -9.28786849975586
    8. '<|end|>' → logprob: -9.28786849975586
    9. '_' → logprob: -9.53786849975586
    10. ':' → logprob: -10.03786849975586

Token 93: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11111654341220856
    2. 'int' → logprob: -2.486116647720337
    3. 'List' → logprob: -4.236116409301758
    4. ')' → logprob: -5.736116409301758
    5. ' list' → logprob: -5.986116409301758
    6. '[int' → logprob: -7.111116409301758
    7. ',' → logprob: -7.611116409301758
    8. 'ist' → logprob: -8.986116409301758
    9. ' int' → logprob: -10.236116409301758
    10. ' List' → logprob: -10.361116409301758

Token 94: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0024590103421360254
    2. ')' → logprob: -6.2524590492248535
    3. '[' → logprob: -8.252458572387695
    4. '<int' → logprob: -8.377458572387695
    5. '[str' → logprob: -10.377458572387695
    6. ' of' → logprob: -12.502458572387695
    7. ',' → logprob: -13.752458572387695
    8. '```' → logprob: -14.627458572387695
    9. '[Int' → logprob: -14.752458572387695
    10. '(int' → logprob: -14.752458572387695

Token 95: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3873003125190735
    2. 'int' → logprob: -1.1373002529144287
    3. ' integers' → logprob: -8.387300491333008
    4. ' ints' → logprob: -8.762300491333008
    5. '[int' → logprob: -11.387300491333008
    6. '<int' → logprob: -11.512300491333008
    7. 'ints' → logprob: -11.637300491333008
    8. ']int' → logprob: -12.137300491333008
    9. '<|end|>' → logprob: -13.012300491333008
    10. ' )' → logprob: -13.637300491333008

Token 96: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019499406917020679
    2. 's' → logprob: -6.626949787139893
    3. ',' → logprob: -8.50195026397705
    4. '[' → logprob: -8.62695026397705
    5. ' )' → logprob: -8.62695026397705
    6. ']' → logprob: -10.25195026397705
    7. '),' → logprob: -12.12695026397705
    8. ' ' → logprob: -12.37695026397705
    9. ')>' → logprob: -12.75195026397705
    10. 'v' → logprob: -13.25195026397705

Token 97: ' La' (ID: 3038)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' première' (ID: 23423)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6499321460723877
    2. 'val' → logprob: -1.5249321460723877
    3. ' valeur' → logprob: -1.8999321460723877
    4. ' valeurs' → logprob: -2.8999321460723877
    5. 'liste' → logprob: -4.274931907653809
    6. ' val' → logprob: -4.274931907653809
    7. ' quantité' → logprob: -4.899931907653809
    8. 's' → logprob: -5.149931907653809
    9. ' listes' → logprob: -5.274931907653809
    10. ' taille' → logprob: -5.899931907653809

Token 99: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.01238179486244917
    2. ' des' → logprob: -4.8873820304870605
    3. 'liste' → logprob: -6.5123820304870605
    4. ' ' → logprob: -6.7623820304870605
    5. ' list' → logprob: -7.1373820304870605
    6. 's' → logprob: -7.6373820304870605
    7. ' listes' → logprob: -8.012381553649902
    8. ' valeur' → logprob: -9.387381553649902
    9. 'élé' → logprob: -9.887381553649902
    10. '   ' → logprob: -10.262381553649902

Token 100: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03289032354950905
    2. '<|end|>' → logprob: -4.532890319824219
    3. ' de' → logprob: -4.907890319824219
    4. ')' → logprob: -5.157890319824219
    5. ' complète' → logprob: -5.657890319824219
    6. ' )' → logprob: -6.782890319824219
    7. ' d' → logprob: -7.032890319824219
    8. 'des' → logprob: -7.532890319824219
    9. ',' → logprob: -7.532890319824219
    10. 's' → logprob: -7.782890319824219

Token 101: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.3004419803619385
    2. ' ent' → logprob: -1.4254419803619385
    3. 'ent' → logprob: -4.675441741943359
    4. ''' → logprob: -5.550441741943359
    5. '’ent' → logprob: -6.175441741943359
    6. 'élé' → logprob: -6.550441741943359
    7. ' integers' → logprob: -7.925441741943359
    8. '_ent' → logprob: -7.925441741943359
    9. 'e' → logprob: -8.30044174194336
    10. ' éléments' → logprob: -8.42544174194336

Token 102: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.027104191482067108
    2. 't' → logprob: -4.277104377746582
    3. 'ières' → logprob: -4.527104377746582
    4. 'i' → logprob: -7.277104377746582
    5. 'ière' → logprob: -7.652104377746582
    6. 'ités' → logprob: -8.527104377746582
    7. '```' → logprob: -8.652104377746582
    8. 'e' → logprob: -9.902104377746582
    9. 'és' → logprob: -10.027104377746582
    10. 'ti' → logprob: -10.152104377746582

Token 103: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3190040588378906
    2. ',' → logprob: -2.0690040588378906
    3. '   ' → logprob: -2.1940040588378906
    4. ' ' → logprob: -4.444004058837891
    5. '[' → logprob: -5.319004058837891
    6. ' ,' → logprob: -5.569004058837891
    7. ' )' → logprob: -5.819004058837891
    8. 'v' → logprob: -5.819004058837891
    9. '```' → logprob: -6.569004058837891
    10. '  ' → logprob: -6.944004058837891

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14783155918121338
    2. '   ' → logprob: -2.022831439971924
    3. ',' → logprob: -6.147831439971924
    4. '       ' → logprob: -7.022831439971924
    5. '    ' → logprob: -7.522831439971924
    6. '            
' → logprob: -8.272831916809082
    7. '  ' → logprob: -8.397831916809082
    8. ' ' → logprob: -8.522831916809082
    9. 'c' → logprob: -8.647831916809082
    10. ' ,' → logprob: -8.897831916809082

Token 105: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.31596705317497253
    2. ' c' → logprob: -1.315967082977295
    3. '   ' → logprob: -5.940967082977295
    4. '           ' → logprob: -10.190966606140137
    5. ' ' → logprob: -11.065966606140137
    6. '    ' → logprob: -11.690966606140137
    7. '	c' → logprob: -12.690966606140137
    8. '  ' → logprob: -12.815966606140137
    9. '
' → logprob: -13.065966606140137
    10. '       ' → logprob: -14.065966606140137

Token 106: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0009320637909695506
    2. '(' → logprob: -7.250932216644287
    3. '(list' → logprob: -8.500931739807129
    4. ')' → logprob: -12.375931739807129
    5. ' ' → logprob: -12.625931739807129
    6. 's' → logprob: -13.000931739807129
    7. '(space' → logprob: -13.250931739807129
    8. '```' → logprob: -13.250931739807129
    9. '(int' → logprob: -13.875931739807129
    10. ':' → logprob: -14.375931739807129

Token 107: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011044171638786793
    2. ' list' → logprob: -4.636044025421143
    3. ')' → logprob: -7.261044025421143
    4. 'l' → logprob: -7.886044025421143
    5. ' )' → logprob: -9.1360445022583
    6. ' (' → logprob: -10.7610445022583
    7. '(list' → logprob: -10.8860445022583
    8. 'int' → logprob: -11.2610445022583
    9. 'liste' → logprob: -11.3860445022583
    10. 'li' → logprob: -11.3860445022583

Token 108: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.014612720347940922
    2. ' de' → logprob: -5.139612674713135
    3. ')' → logprob: -5.264612674713135
    4. ' d' → logprob: -6.014612674713135
    5. 'of' → logprob: -8.264613151550293
    6. '[int' → logprob: -8.639613151550293
    7. ' des' → logprob: -8.764613151550293
    8. '   ' → logprob: -9.264613151550293
    9. 'de' → logprob: -9.264613151550293
    10. 'd' → logprob: -9.639613151550293

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5231389403343201
    2. 'int' → logprob: -0.8981389403343201
    3. '[int' → logprob: -12.648138999938965
    4. '<int' → logprob: -12.898138999938965
    5. ')' → logprob: -13.523138999938965
    6. 'ent' → logprob: -13.648138999938965
    7. ' ' → logprob: -13.773138999938965
    8. ']int' → logprob: -13.773138999938965
    9. '(int' → logprob: -13.898138999938965
    10. ' ' → logprob: -14.273138999938965

Token 110: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14272144436836243
    2. ')' → logprob: -2.01772141456604
    3. ' ):' → logprob: -11.142721176147461
    4. '):
' → logprob: -11.267721176147461
    5. ' )' → logprob: -12.017721176147461
    6. '):

' → logprob: -12.517721176147461
    7. ')>' → logprob: -14.017721176147461
    8. ':' → logprob: -14.017721176147461
    9. '[]):' → logprob: -14.017721176147461
    10. '[' → logprob: -14.267721176147461

Token 111: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.04345231503248215
    2. 'La' → logprob: -3.168452262878418
    3. ' la' → logprob: -8.543452262878418
    4. ' The' → logprob: -8.793452262878418
    5. ' ' → logprob: -10.293452262878418
    6. ' ' → logprob: -10.793452262878418
    7. 'The' → logprob: -10.918452262878418
    8. '    ' → logprob: -11.168452262878418
    9. '   ' → logprob: -12.168452262878418
    10. ' L' → logprob: -12.918452262878418

Token 112: ' seconde' (ID: 66204)
  Prédit: ' deuxième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.7952354550361633
    2. 'de' → logprob: -0.9202354550361633
    3. ' seconde' → logprob: -2.4202353954315186
    4. 'se' → logprob: -3.1702353954315186
    5. 'prem' → logprob: -4.795235633850098
    6. ' deux' → logprob: -5.920235633850098
    7. ' liste' → logprob: -6.170235633850098
    8. ' longueur' → logprob: -6.670235633850098
    9. '   ' → logprob: -7.170235633850098
    10. ' première' → logprob: -7.295235633850098

Token 113: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.03988124430179596
    2. 'liste' → logprob: -3.5398812294006348
    3. ' list' → logprob: -4.914881229400635
    4. 'list' → logprob: -6.664881229400635
    5. ')' → logprob: -7.414881229400635
    6. '   ' → logprob: -7.914881229400635
    7. ' ' → logprob: -9.414881706237793
    8. ' des' → logprob: -9.414881706237793
    9. ' )' → logprob: -10.039881706237793
    10. '_list' → logprob: -10.164881706237793

Token 114: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.008914840407669544
    2. 'd' → logprob: -4.758914947509766
    3. ' des' → logprob: -8.883914947509766
    4. '_d' → logprob: -10.008914947509766
    5. '<|end|>' → logprob: -10.633914947509766
    6. ' ' → logprob: -10.758914947509766
    7. '   ' → logprob: -11.133914947509766
    8. ')' → logprob: -11.508914947509766
    9. '_' → logprob: -11.633914947509766
    10. ' de' → logprob: -11.758914947509766

Token 115: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.009991341270506382
    2. '_ent' → logprob: -5.25999116897583
    3. ''' → logprob: -6.00999116897583
    4. 'ent' → logprob: -6.75999116897583
    5. ''int' → logprob: -8.009991645812988
    6. ''intégr' → logprob: -8.509991645812988
    7. '’ent' → logprob: -9.259991645812988
    8. ''entre' → logprob: -9.384991645812988
    9. '_' → logprob: -9.634991645812988
    10. '_int' → logprob: -10.134991645812988

Token 116: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.006934286095201969
    2. 'i' → logprob: -5.88193416595459
    3. 't' → logprob: -6.13193416595459
    4. 'ières' → logprob: -7.00693416595459
    5. 'ier' → logprob: -7.13193416595459
    6. 'ités' → logprob: -9.50693416595459
    7. 'tiers' → logprob: -10.50693416595459
    8. 'ti' → logprob: -10.63193416595459
    9. 'ière' → logprob: -10.88193416595459
    10. 'er' → logprob: -11.00693416595459

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23728255927562714
    2. ')' → logprob: -1.7372825145721436
    3. '"""
' → logprob: -3.6122825145721436
    4. ')
' → logprob: -5.237282752990723
    5. '"""' → logprob: -6.112282752990723
    6. '
' → logprob: -8.112282752990723
    7. '```' → logprob: -8.987282752990723
    8. ' """
' → logprob: -9.987282752990723
    9. '")' → logprob: -9.987282752990723
    10. '    ' → logprob: -9.987282752990723

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02884417027235031
    2. '"""' → logprob: -4.153844356536865
    3. '"""
' → logprob: -4.528844356536865
    4. '"' → logprob: -6.653844356536865
    5. ' """
' → logprob: -8.153843879699707
    6. ')' → logprob: -9.028843879699707
    7. ' """' → logprob: -9.028843879699707
    8. '""' → logprob: -10.778843879699707
    9. '  ' → logprob: -10.778843879699707
    10. '    ' → logprob: -10.778843879699707

Token 119: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5050954222679138
    2. '   ' → logprob: -1.2550954818725586
    3. '"""
' (adapté à ' """
') → logprob: -2.2550954818725586
    4. '"' → logprob: -5.630095481872559
    5. '""' → logprob: -7.005095481872559
    6. '```' → logprob: -7.130095481872559
    7. '
' → logprob: -7.880095481872559
    8. ' """' → logprob: -7.880095481872559
    9. ' """
' → logprob: -8.505095481872559
    10. ')' → logprob: -8.880095481872559

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027694689109921455
    2. 'n' → logprob: -3.6526947021484375
    3. '    
' → logprob: -7.1526947021484375
    4. ' n' → logprob: -8.027694702148438
    5. '
' → logprob: -8.527694702148438
    6. 'try' → logprob: -10.152694702148438
    7. ' 
' → logprob: -11.402694702148438
    8. '    ' → logprob: -11.777694702148438
    9. '	n' → logprob: -12.027694702148438
    10. '       ' → logprob: -12.527694702148438

Token 121: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002146216109395027
    2. '   ' → logprob: -6.627146244049072
    3. 'try' → logprob: -7.127146244049072
    4. '
' → logprob: -11.877145767211914
    5. '    
' → logprob: -12.752145767211914
    6. '#' → logprob: -13.002145767211914
    7. 'return' → logprob: -13.127145767211914
    8. ' n' → logprob: -13.627145767211914
    9. '```' → logprob: -14.127145767211914
    10. 'while' → logprob: -14.752145767211914

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009765060618519783
    2. '=' → logprob: -4.634765148162842
    3. ',' → logprob: -12.384764671325684
    4. ' ' → logprob: -13.134764671325684
    5. '=int' → logprob: -13.634764671325684
    6. ' =
' → logprob: -14.509764671325684
    7. '   ' → logprob: -14.634764671325684
    8. '=input' → logprob: -15.134764671325684
    9. ' ' → logprob: -15.509764671325684
    10. '  ' → logprob: -16.009765625

Token 123: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001943514565937221
    2. 'int' → logprob: -6.251943588256836
    3. ' input' → logprob: -11.376943588256836
    4. ' ' → logprob: -13.376943588256836
    5. '   ' → logprob: -14.751943588256836
    6. '=int' → logprob: -14.876943588256836
    7. ' ' → logprob: -15.126943588256836
    8. ' in' → logprob: -15.126943588256836
    9. 'input' → logprob: -16.001943588256836
    10. ' None' → logprob: -16.126943588256836

Token 124: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31340235471725464
    2. '(input' → logprob: -1.3134024143218994
    3. 'input' → logprob: -9.43840217590332
    4. '(
' → logprob: -10.06340217590332
    5. ' (' → logprob: -11.56340217590332
    6. '()' → logprob: -12.56340217590332
    7. '('' → logprob: -13.31340217590332
    8. ' input' → logprob: -13.93840217590332
    9. '(

' → logprob: -14.43840217590332
    10. ' ' → logprob: -14.43840217590332

Token 125: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09024439752101898
    2. '(' → logprob: -3.2152442932128906
    3. '())' → logprob: -3.5902442932128906
    4. '("' → logprob: -4.590244293212891
    5. '("("' → logprob: -4.840244293212891
    6. '('' → logprob: -8.84024429321289
    7. '("")' → logprob: -9.59024429321289
    8. '("(' → logprob: -9.71524429321289
    9. '(""))' → logprob: -9.84024429321289
    10. ')' → logprob: -9.84024429321289

Token 126: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0986504778265953
    2. '
' → logprob: -2.5986504554748535
    3. 'n' → logprob: -5.0986504554748535
    4. ' v' → logprob: -5.3486504554748535
    5. ' 
' → logprob: -5.7236504554748535
    6. '    
' → logprob: -6.2236504554748535
    7. '   ' → logprob: -6.8486504554748535
    8. '\n' → logprob: -6.9736504554748535
    9. '  
' → logprob: -7.0986504554748535
    10. '   
' → logprob: -8.973650932312012

Token 127: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06236950680613518
    2. '
' → logprob: -3.1873695850372314
    3. '\n' → logprob: -4.187369346618652
    4. '    
' → logprob: -6.687369346618652
    5. 'n' → logprob: -6.937369346618652
    6. '  
' → logprob: -7.562369346618652
    7. ' v' → logprob: -7.812369346618652
    8. ' 
' → logprob: -7.937369346618652
    9. '' → logprob: -9.187369346618652
    10. '\' → logprob: -9.687369346618652

Token 128: ' Lire' (ID: 57624)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9565587043762207
    2. ' n' → logprob: -0.9565587043762207
    3. ' ' → logprob: -2.5815587043762207
    4. ' v' → logprob: -3.0815587043762207
    5. ' 
' → logprob: -3.0815587043762207
    6. 'v' → logprob: -3.4565587043762207
    7. '  
' → logprob: -4.706558704376221
    8. '<|end|>' → logprob: -4.956558704376221
    9. '
' → logprob: -5.206558704376221
    10. ')' → logprob: -6.206558704376221

Token 129: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9688133001327515
    2. ' un' → logprob: -1.5938133001327515
    3. ' la' → logprob: -2.218813419342041
    4. 'n' → logprob: -2.718813419342041
    5. ' l' → logprob: -2.968813419342041
    6. ' n' → logprob: -3.218813419342041
    7. ' ' → logprob: -3.218813419342041
    8. ' le' → logprob: -3.343813419342041
    9. ' une' → logprob: -3.843813419342041
    10. '(' → logprob: -4.218813419342041

Token 130: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.07547414302825928
    2. 'nombre' → logprob: -3.325474262237549
    3. ' ' → logprob: -3.450474262237549
    4. ' n' → logprob: -5.950474262237549
    5. 'n' → logprob: -6.325474262237549
    6. ' nombres' → logprob: -8.95047378540039
    7. '  ' → logprob: -9.20047378540039
    8. '_nombre' → logprob: -9.45047378540039
    9. 'ombre' → logprob: -10.20047378540039
    10. 'Nombre' → logprob: -10.20047378540039

Token 131: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6651769876480103
    2. ' ' → logprob: -0.9151769876480103
    3. '<|end|>' → logprob: -3.0401768684387207
    4. ' des' → logprob: -4.790176868438721
    5. ' de' → logprob: -4.790176868438721
    6. ' )' → logprob: -5.040176868438721
    7. '  ' → logprob: -5.165176868438721
    8. '<|end|>' → logprob: -5.915176868438721
    9. ')' → logprob: -6.665176868438721
    10. '    ' → logprob: -6.790176868438721

Token 132: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5064548254013062
    2. ''' → logprob: -1.7564548254013062
    3. ' éléments' → logprob: -1.7564548254013062
    4. ' espaces' → logprob: -4.256454944610596
    5. ' ' → logprob: -4.881454944610596
    6. '_' → logprob: -5.131454944610596
    7. '<|end|>' → logprob: -5.631454944610596
    8. ''espace' → logprob: -5.631454944610596
    9. 'es' → logprob: -5.881454944610596
    10. 'e' → logprob: -6.256454944610596

Token 133: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07080630213022232
    2. ''' → logprob: -2.9458062648773193
    3. ' éléments' → logprob: -5.070806503295898
    4. 'é' → logprob: -5.195806503295898
    5. 'él' → logprob: -6.570806503295898
    6. ''é' → logprob: -6.695806503295898
    7. ''él' → logprob: -7.820806503295898
    8. ' ' → logprob: -7.820806503295898
    9. '’' → logprob: -8.320806503295898
    10. ' él' → logprob: -10.445806503295898

Token 134: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -4.096126576769166e-05
    2. 'ment' → logprob: -10.250041007995605
    3. 'm' → logprob: -12.750041007995605
    4. 'éments' → logprob: -13.500041007995605
    5. 'ents' → logprob: -14.500041007995605
    6. 'nts' → logprob: -15.000041007995605
    7. 'ements' → logprob: -15.625041007995605
    8. 'mé' → logprob: -16.50004005432129
    9. '```' → logprob: -17.25004005432129
    10. 'men' → logprob: -17.50004005432129

Token 135: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3781391978263855
    2. '
' → logprob: -1.2531392574310303
    3. 'n' → logprob: -4.503139019012451
    4. '   ' → logprob: -5.003139019012451
    5. '    
' → logprob: -5.378139019012451
    6. ' v' → logprob: -5.503139019012451
    7. ' 
' → logprob: -6.503139019012451
    8. '\n' → logprob: -7.628139019012451
    9. '   
' → logprob: -8.12813949584961
    10. '  
' → logprob: -8.50313949584961

Token 136: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03605427220463753
    2. ' v' → logprob: -3.9110543727874756
    3. '
' → logprob: -4.9110541343688965
    4. '   ' → logprob: -5.2860541343688965
    5. '    
' → logprob: -6.5360541343688965
    6. ' 
' → logprob: -6.9110541343688965
    7. 'n' → logprob: -8.286054611206055
    8. '  
' → logprob: -9.411054611206055
    9. '   
' → logprob: -9.661054611206055
    10. '\n' → logprob: -10.036054611206055

Token 137: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.10021205991506577
    2. ' v' → logprob: -2.3502120971679688
    3. ' 
' → logprob: -12.600212097167969
    4. '	v' → logprob: -13.975212097167969
    5. 'n' → logprob: -14.975212097167969
    6. ' ' → logprob: -15.100212097167969
    7. '    
' → logprob: -15.600212097167969
    8. '.v' → logprob: -16.60021209716797
    9. '_v' → logprob: -16.85021209716797
    10. ' `' → logprob: -17.10021209716797

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012550151906907558
    2. '=' → logprob: -4.387550354003906
    3. 's' → logprob: -11.262550354003906
    4. ',' → logprob: -12.262550354003906
    5. ' ' → logprob: -12.512550354003906
    6. '_' → logprob: -12.512550354003906
    7. '_list' → logprob: -12.887550354003906
    8. '.' → logprob: -13.012550354003906
    9. ' =
' → logprob: -13.262550354003906
    10. '_values' → logprob: -13.387550354003906

Token 139: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.057761043310165405
    2. 'list' → logprob: -2.9327609539031982
    3. ' [' → logprob: -5.932761192321777
    4. '[' → logprob: -9.182761192321777
    5. '[list' → logprob: -9.182761192321777
    6. ' []' → logprob: -11.807761192321777
    7. ' ' → logprob: -12.182761192321777
    8. '[]' → logprob: -12.932761192321777
    9. '	list' → logprob: -14.432761192321777
    10. '[input' → logprob: -14.557761192321777

Token 140: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2525613009929657
    2. '(' → logprob: -1.502561330795288
    3. '(int' → logprob: -7.627561092376709
    4. '(input' → logprob: -9.877561569213867
    5. '(eval' → logprob: -10.127561569213867
    6. '()' → logprob: -11.252561569213867
    7. '(
' → logprob: -11.502561569213867
    8. '(range' → logprob: -11.627561569213867
    9. 'map' → logprob: -11.877561569213867
    10. ' (' → logprob: -12.377561569213867

Token 141: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20219634473323822
    2. '(' → logprob: -1.7021963596343994
    3. '(
' → logprob: -7.57719612121582
    4. '(lambda' → logprob: -8.70219612121582
    5. '(input' → logprob: -9.95219612121582
    6. '<int' → logprob: -10.70219612121582
    7. 'int' → logprob: -11.32719612121582
    8. ' (' → logprob: -12.20219612121582
    9. '[int' → logprob: -12.32719612121582
    10. '(str' → logprob: -12.82719612121582

Token 142: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.025480298325419426
    2. 'input' → logprob: -4.650480270385742
    3. ',input' → logprob: -4.650480270385742
    4. '(' → logprob: -5.775480270385742
    5. ',' → logprob: -6.275480270385742
    6. '(
' → logprob: -7.525480270385742
    7. ' input' → logprob: -8.900480270385742
    8. '   ' → logprob: -9.150480270385742
    9. ' (' → logprob: -9.150480270385742
    10. ')' → logprob: -9.650480270385742

Token 143: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3500366508960724
    2. ' input' → logprob: -1.22503662109375
    3. '(input' → logprob: -6.47503662109375
    4. ',input' → logprob: -10.97503662109375
    5. '=input' → logprob: -11.60003662109375
    6. '	input' → logprob: -11.72503662109375
    7. ' ' → logprob: -12.22503662109375
    8. '_input' → logprob: -13.22503662109375
    9. '[input' → logprob: -13.47503662109375
    10. '   ' → logprob: -13.60003662109375

Token 144: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007238718098960817
    2. '()' → logprob: -7.250723838806152
    3. '()
' → logprob: -11.875723838806152
    4. '()))' → logprob: -12.625723838806152
    5. ' ().' → logprob: -13.500723838806152
    6. '(' → logprob: -14.500723838806152
    7. '   ' → logprob: -14.750723838806152
    8. '())' → logprob: -14.875723838806152
    9. '())))' → logprob: -15.500723838806152
    10. '()));' → logprob: -15.750723838806152

Token 145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005252018105238676
    2. 'strip' → logprob: -5.255251884460449
    3. 'rstrip' → logprob: -11.25525188446045
    4. ' split' → logprob: -12.25525188446045
    5. '(split' → logprob: -15.38025188446045
    6. 'spl' → logprob: -15.88025188446045
    7. 'read' → logprob: -16.130252838134766
    8. '.split' → logprob: -17.380252838134766
    9. 's' → logprob: -17.630252838134766
    10. ' strip' → logprob: -17.630252838134766

Token 146: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16273538768291473
    2. '()' → logprob: -1.9127353429794312
    3. '())' → logprob: -6.162735462188721
    4. '(' → logprob: -8.287734985351562
    5. '())))' → logprob: -9.787734985351562
    6. '()))
' → logprob: -10.037734985351562
    7. '))' → logprob: -10.412734985351562
    8. '()));' → logprob: -12.162734985351562
    9. '()
' → logprob: -12.537734985351562
    10. '('' → logprob: -12.662734985351562

Token 147: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38600921630859375
    2. '   ' → logprob: -1.8860092163085938
    3. '  
' → logprob: -2.7610092163085938
    4. '    
' → logprob: -3.5110092163085938
    5. ')' → logprob: -3.7610092163085938
    6. ' 
' → logprob: -4.261009216308594
    7. '   
' → logprob: -4.261009216308594
    8. 'c' → logprob: -4.636009216308594
    9. 'v' → logprob: -5.511009216308594
    10. ' ' → logprob: -6.386009216308594

Token 149: ' Lire' (ID: 57624)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.0370101928710938
    2. '<|end|>' → logprob: -1.1620101928710938
    3. 'read' → logprob: -1.6620101928710938
    4. 'v' → logprob: -3.0370101928710938
    5. ' v' → logprob: -3.4120101928710938
    6. 'split' → logprob: -4.412010192871094
    7. ' ' → logprob: -4.662010192871094
    8. 'Lire' → logprob: -4.912010192871094
    9. ' split' → logprob: -5.412010192871094
    10. 'list' → logprob: -5.662010192871094

Token 150: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07833759486675262
    2. '<|end|>' → logprob: -2.7033376693725586
    3. ')' → logprob: -6.078337669372559
    4. '(input' → logprob: -6.453337669372559
    5. '())' → logprob: -6.578337669372559
    6. 'v' → logprob: -6.953337669372559
    7. 'input' → logprob: -7.328337669372559
    8. 'the' → logprob: -7.828337669372559
    9. '(' → logprob: -8.078337669372559
    10. ' la' → logprob: -8.953337669372559

Token 151: ' première' (ID: 23423)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.78868168592453
    2. ' liste' → logprob: -1.6636817455291748
    3. 'val' → logprob: -2.788681745529175
    4. ' v' → logprob: -2.913681745529175
    5. ' deuxième' → logprob: -3.038681745529175
    6. ' première' → logprob: -3.038681745529175
    7. 'prem' → logprob: -3.538681745529175
    8. 'liste' → logprob: -3.663681745529175
    9. ' valeur' → logprob: -3.913681745529175
    10. ' valeurs' → logprob: -4.163681507110596

Token 152: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.00874989852309227
    2. ' ' → logprob: -5.508749961853027
    3. 'liste' → logprob: -5.633749961853027
    4. ' ligne' → logprob: -8.008749961853027
    5. ' list' → logprob: -8.633749961853027
    6. '   ' → logprob: -9.133749961853027
    7. ' Liste' → logprob: -9.383749961853027
    8. 'v' → logprob: -9.633749961853027
    9. ' listes' → logprob: -9.633749961853027
    10. '  ' → logprob: -10.633749961853027

Token 153: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.25651273131370544
    2. 'élé' → logprob: -1.6315127611160278
    3. ''' → logprob: -3.6315126419067383
    4. ''entre' → logprob: -7.256512641906738
    5. ''entrée' → logprob: -7.256512641906738
    6. '’ent' → logprob: -7.381512641906738
    7. 'ent' → logprob: -7.631512641906738
    8. ''é' → logprob: -8.131512641906738
    9. 'elements' → logprob: -8.256512641906738
    10. ''él' → logprob: -8.631512641906738

Token 155: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0017501497641205788
    2. 'ières' → logprob: -6.6267499923706055
    3. 'i' → logprob: -8.501749992370605
    4. 'ités' → logprob: -9.876749992370605
    5. 'er' → logprob: -10.126749992370605
    6. 'ier' → logprob: -10.376749992370605
    7. 't' → logprob: -10.376749992370605
    8. 'ière' → logprob: -11.251749992370605
    9. 'e' → logprob: -11.751749992370605
    10. 'érés' → logprob: -11.876749992370605

Token 156: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1523100584745407
    2. '   ' → logprob: -2.7773101329803467
    3. '<|end|>' → logprob: -2.9023101329803467
    4. ' )' → logprob: -5.027309894561768
    5. 'c' → logprob: -5.402309894561768
    6. '    
' → logprob: -5.652309894561768
    7. '
' → logprob: -6.027309894561768
    8. '  
' → logprob: -6.527309894561768
    9. ')c' → logprob: -6.777309894561768
    10. 'v' → logprob: -6.777309894561768

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6171718239784241
    2. 'c' → logprob: -0.8671718239784241
    3. ' c' → logprob: -4.242171764373779
    4. ' 
' → logprob: -4.617171764373779
    5. '    
' → logprob: -4.742171764373779
    6. '
' → logprob: -5.492171764373779
    7. '  
' → logprob: -6.992171764373779
    8. 'v' → logprob: -7.117171764373779
    9. '   
' → logprob: -7.617171764373779
    10. ' ' → logprob: -7.867171764373779

Token 158: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.03393128886818886
    2. ' c' → logprob: -3.408931255340576
    3. '   ' → logprob: -8.408931732177734
    4. ' 
' → logprob: -10.283931732177734
    5. ' ' → logprob: -11.158931732177734
    6. '	c' → logprob: -11.658931732177734
    7. '    
' → logprob: -13.283931732177734
    8. '    ' → logprob: -13.783931732177734
    9. '  ' → logprob: -14.408931732177734
    10. ' ' → logprob: -14.533931732177734

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718690041452646
    2. '=' → logprob: -5.006718635559082
    3. ' ' → logprob: -12.756718635559082
    4. ' =
' → logprob: -15.631718635559082
    5. ')' → logprob: -16.2567195892334
    6. '=list' → logprob: -16.5067195892334
    7. ',' → logprob: -16.8817195892334
    8. 's' → logprob: -17.3817195892334
    9. ' ' → logprob: -17.6317195892334
    10. '_' → logprob: -17.7567195892334

Token 160: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0007099286303855479
    2. 'list' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.125709533691406
    4. ' ' → logprob: -19.125709533691406
    5. '=list' → logprob: -19.250709533691406
    6. '(list' → logprob: -20.375709533691406
    7. '	list' → logprob: -20.625709533691406
    8. ' liste' → logprob: -21.250709533691406
    9. ' li' → logprob: -21.500709533691406
    10. ' l' → logprob: -21.875709533691406

Token 161: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10426425188779831
    2. '(' → logprob: -2.354264259338379
    3. ' (' → logprob: -6.354264259338379
    4. '(int' → logprob: -6.854264259338379
    5. '(list' → logprob: -6.854264259338379
    6. '(m' → logprob: -9.604264259338379
    7. '(mapping' → logprob: -10.354264259338379
    8. '(tuple' → logprob: -10.854264259338379
    9. '(
' → logprob: -10.854264259338379
    10. '(ma' → logprob: -11.604264259338379

Token 162: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01431534718722105
    2. '(' → logprob: -4.264315128326416
    3. ' (' → logprob: -9.139315605163574
    4. '(
' → logprob: -11.139315605163574
    5. 'int' → logprob: -11.389315605163574
    6. '<int' → logprob: -11.389315605163574
    7. '[int' → logprob: -12.889315605163574
    8. ' int' → logprob: -13.014315605163574
    9. '=int' → logprob: -13.639315605163574
    10. ',int' → logprob: -14.264315605163574

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008168928325176239
    2. ',input' → logprob: -7.375816822052002
    3. ',int' → logprob: -9.00081729888916
    4. '(' → logprob: -10.00081729888916
    5. '(input' → logprob: -11.50081729888916
    6. ' ,' → logprob: -11.62581729888916
    7. '(int' → logprob: -13.25081729888916
    8. 'input' → logprob: -14.87581729888916
    9. 'int' → logprob: -15.62581729888916
    10. '   ' → logprob: -16.250816345214844

Token 164: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06802915036678314
    2. ' input' → logprob: -2.8180291652679443
    3. 'int' → logprob: -5.193028926849365
    4. '(input' → logprob: -7.693028926849365
    5. ' int' → logprob: -10.443029403686523
    6. '(int' → logprob: -13.818029403686523
    7. '<input' → logprob: -14.693029403686523
    8. '=input' → logprob: -14.693029403686523
    9. '[input' → logprob: -14.818029403686523
    10. ',input' → logprob: -15.193029403686523

Token 165: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -16.500009536743164
    4. '()).' → logprob: -18.125009536743164
    5. '.' → logprob: -18.250009536743164
    6. '(),' → logprob: -18.750009536743164
    7. '().'' → logprob: -19.000009536743164
    8. '()].' → logprob: -19.125009536743164
    9. ').' → logprob: -19.500009536743164
    10. '()
' → logprob: -19.750009536743164

Token 166: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.2987729102605954e-05
    2. ' split' → logprob: -11.125042915344238
    3. '.split' → logprob: -11.375042915344238
    4. ')' → logprob: -12.000042915344238
    5. '().' → logprob: -12.125042915344238
    6. '(split' → logprob: -13.000042915344238
    7. ').' → logprob: -13.750042915344238
    8. 'strip' → logprob: -14.750042915344238
    9. 'spl' → logprob: -15.000042915344238
    10. '   ' → logprob: -15.625042915344238

Token 167: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00443640910089016
    2. '()' → logprob: -5.504436492919922
    3. '())' → logprob: -8.879436492919922
    4. '))' → logprob: -9.254436492919922
    5. '()))
' → logprob: -9.254436492919922
    6. '(' → logprob: -12.004436492919922
    7. '()))

' → logprob: -12.504436492919922
    8. '()));' → logprob: -12.504436492919922
    9. '())))' → logprob: -12.754436492919922
    10. '()
' → logprob: -12.754436492919922

Token 168: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034550365060567856
    2. ')' → logprob: -3.909550428390503
    3. 'return' → logprob: -5.034550189971924
    4. '   ' → logprob: -5.159550189971924
    5. ' return' → logprob: -6.909550189971924
    6. '()
' → logprob: -8.409550666809082
    7. '())' → logprob: -8.659550666809082
    8. ' ' → logprob: -9.409550666809082
    9. ' ()' → logprob: -10.034550666809082
    10. ' )' → logprob: -10.284550666809082

Token 169: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5833039879798889
    2. '()' → logprob: -0.8333039879798889
    3. '())' → logprob: -5.208303928375244
    4. '#' → logprob: -7.083303928375244
    5. 'return' → logprob: -7.458303928375244
    6. ')#' → logprob: -8.208304405212402
    7. '()
' → logprob: -9.583304405212402
    8. 'def' → logprob: -10.458304405212402
    9. '(' → logprob: -10.458304405212402
    10. ' )' → logprob: -10.833304405212402

Token 170: ' Lire' (ID: 57624)
  Prédit: 'Lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lire' → logprob: -0.5784804224967957
    2. '<|end|>' → logprob: -1.8284804821014404
    3. ' Lire' → logprob: -2.2034804821014404
    4. ' read' → logprob: -2.3284804821014404
    5. ' lire' → logprob: -3.2034804821014404
    6. 'Read' → logprob: -4.328480243682861
    7. 'read' → logprob: -5.328480243682861
    8. ' ' → logprob: -5.828480243682861
    9. ' readline' → logprob: -6.828480243682861
    10. '<|end|>' → logprob: -6.828480243682861

Token 171: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0438854806125164
    2. 'la' → logprob: -3.2938854694366455
    3. '<|end|>' → logprob: -5.918885707855225
    4. '_la' → logprob: -6.668885707855225
    5. 'La' → logprob: -7.418885707855225
    6. '(' → logprob: -8.043885231018066
    7. 'c' → logprob: -8.043885231018066
    8. 'the' → logprob: -8.418885231018066
    9. 'l' → logprob: -8.918885231018066
    10. '()' → logprob: -9.418885231018066

Token 172: ' seconde' (ID: 66204)
  Prédit: ' seconde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seconde' → logprob: -0.25088146328926086
    2. 'se' → logprob: -1.6258814334869385
    3. ' deuxième' → logprob: -3.8758814334869385
    4. 'de' → logprob: -5.500881671905518
    5. 'second' → logprob: -8.50088119506836
    6. ' second' → logprob: -10.12588119506836
    7. ' secondes' → logprob: -10.50088119506836
    8. ' ' → logprob: -10.75088119506836
    9. ' secon' → logprob: -11.50088119506836
    10. 's' → logprob: -12.12588119506836

Token 173: ' liste' (ID: 31719)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.39973974227905273
    2. ' liste' → logprob: -1.8997397422790527
    3. ' list' → logprob: -2.3997397422790527
    4. ')' → logprob: -3.6497397422790527
    5. 'c' → logprob: -3.8997397422790527
    6. ' )' → logprob: -4.024739742279053
    7. ' ' → logprob: -4.524739742279053
    8. ' listes' → logprob: -5.774739742279053
    9. ' Liste' → logprob: -6.274739742279053
    10. '()' → logprob: -6.524739742279053

Token 174: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.856820285320282
    2. 'd' → logprob: -1.2318203449249268
    3. '<|end|>' → logprob: -1.3568203449249268
    4. '   ' → logprob: -4.731820106506348
    5. ' of' → logprob: -5.231820106506348
    6. ')' → logprob: -5.481820106506348
    7. '<|end|>' → logprob: -5.481820106506348
    8. '()' → logprob: -7.231820106506348
    9. '  ' → logprob: -7.606820106506348
    10. ' ' → logprob: -7.606820106506348

Token 175: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.08384722471237183
    2. 'ent' → logprob: -3.5838472843170166
    3. '_' → logprob: -3.7088472843170166
    4. '_ent' → logprob: -4.2088470458984375
    5. ''' → logprob: -5.3338470458984375
    6. 'élé' → logprob: -5.4588470458984375
    7. ''int' → logprob: -6.9588470458984375
    8. '’ent' → logprob: -7.2088470458984375
    9. 'int' → logprob: -7.4588470458984375
    10. ')' → logprob: -8.083847045898438

Token 176: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00026288547087460756
    2. 'ières' → logprob: -9.000263214111328
    3. 'i' → logprob: -9.125263214111328
    4. 'ier' → logprob: -10.750263214111328
    5. 'ers' → logprob: -12.875263214111328
    6. '```' → logprob: -13.375263214111328
    7. '   ' → logprob: -13.750263214111328
    8. 'ents' → logprob: -14.375263214111328
    9. 'ié' → logprob: -14.875263214111328
    10. 'és' → logprob: -15.000263214111328

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03474633768200874
    2. '   ' → logprob: -3.5347464084625244
    3. '    
' → logprob: -5.909746170043945
    4. 'return' → logprob: -6.409746170043945
    5. ' return' → logprob: -8.409746170043945
    6. '  
' → logprob: -8.909746170043945
    7. ' 
' → logprob: -9.159746170043945
    8. '
' → logprob: -9.909746170043945
    9. '   
' → logprob: -10.284746170043945
    10. '<|end|>' → logprob: -10.284746170043945

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11366929113864899
    2. '
' → logprob: -2.3636693954467773
    3. '    
' → logprob: -4.613669395446777
    4. 'return' → logprob: -5.738669395446777
    5. ' return' → logprob: -8.863669395446777
    6. ' 
' → logprob: -9.738669395446777
    7. '  
' → logprob: -11.613669395446777
    8. '	return' → logprob: -11.613669395446777
    9. '   
' → logprob: -11.738669395446777
    10. '
' → logprob: -12.613669395446777

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3207763433456421
    2. '   ' → logprob: -1.320776343345642
    3. ' return' → logprob: -5.070776462554932
    4. '
' → logprob: -6.820776462554932
    5. '    
' → logprob: -9.195775985717773
    6. '	return' → logprob: -11.570775985717773
    7. ' ' → logprob: -13.570775985717773
    8. 'ret' → logprob: -13.695775985717773
    9. ' 
' → logprob: -13.695775985717773
    10. '  ' → logprob: -13.820775985717773

Token 180: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4926428496837616
    2. ' (' → logprob: -0.992642879486084
    3. '(n' → logprob: -4.742642879486084
    4. 'n' → logprob: -4.742642879486084
    5. '(' → logprob: -6.992642879486084
    6. ' ' → logprob: -10.242642402648926
    7. ' ' → logprob: -11.867642402648926
    8. '	n' → logprob: -13.992642402648926
    9. '   ' → logprob: -14.492642402648926
    10. '_n' → logprob: -15.867642402648926

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008465526043437421
    2. ' ,' → logprob: -7.1258463859558105
    3. ',v' → logprob: -10.125846862792969
    4. '‌,' → logprob: -14.125846862792969
    5. ',
' → logprob: -14.625846862792969
    6. ',n' → logprob: -15.000846862792969
    7. ' v' → logprob: -16.00084686279297
    8. ' ' → logprob: -16.00084686279297
    9. 'v' → logprob: -16.50084686279297
    10. ',\
' → logprob: -16.62584686279297

Token 182: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16022492945194244
    2. 'v' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.160224914550781
    4. '	v' → logprob: -15.160224914550781
    5. ' ' → logprob: -15.535224914550781
    6. 'space' → logprob: -17.78522491455078
    7. '_v' → logprob: -18.28522491455078
    8. '.v' → logprob: -18.66022491455078
    9. ',v' → logprob: -19.16022491455078
    10. ' ' → logprob: -19.41022491455078

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011115256696939468
    2. ' ,' → logprob: -4.511115074157715
    3. ',c' → logprob: -9.886115074157715
    4. ' c' → logprob: -11.511115074157715
    5. ',
' → logprob: -13.261115074157715
    6. ' ' → logprob: -13.386115074157715
    7. ' ,
' → logprob: -14.011115074157715
    8. 'c' → logprob: -14.011115074157715
    9. ',v' → logprob: -14.386115074157715
    10. '‌,' → logprob: -14.636115074157715

Token 184: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.061967913061380386
    2. 'c' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. ' ' → logprob: -16.311967849731445
    5. '	c' → logprob: -17.186967849731445
    6. 'space' → logprob: -18.186967849731445
    7. 's' → logprob: -18.436967849731445
    8. '_c' → logprob: -19.561967849731445
    9. ''' → logprob: -19.686967849731445
    10. '"' → logprob: -20.311967849731445

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35975825786590576
    2. '<|end|>' → logprob: -1.3597582578659058
    3. '\n' → logprob: -3.2347583770751953
    4. 'newline' → logprob: -6.109758377075195
    5. '```' → logprob: -7.234758377075195
    6. '

' → logprob: -7.609758377075195
    7. '<|end|>' → logprob: -7.859758377075195
    8. '()' → logprob: -8.109758377075195
    9. '  
' → logprob: -8.359758377075195
    10. ' 
' → logprob: -8.359758377075195

Token 186: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045809727162122726
    2. 'n' → logprob: -4.170809745788574
    3. '<|end|>' → logprob: -4.545809745788574
    4. '\n' → logprob: -5.045809745788574
    5. 'def' → logprob: -5.295809745788574
    6. '#' → logprob: -5.670809745788574
    7. '

' → logprob: -6.545809745788574
    8. '' → logprob: -7.295809745788574
    9. '```' → logprob: -7.795809745788574
    10. '  
' → logprob: -8.170809745788574

Token 187: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8121635317802429
    2. ' solve' → logprob: -0.9371635317802429
    3. ' max' → logprob: -2.8121635913848877
    4. ' calculate' → logprob: -3.1871635913848877
    5. ' maximize' → logprob: -3.1871635913848877
    6. ' compute' → logprob: -4.437163352966309
    7. ' process' → logprob: -6.187163352966309
    8. ' maximum' → logprob: -6.312163352966309
    9. ' solution' → logprob: -6.687163352966309
    10. ' calcul' → logprob: -6.812163352966309

Token 188: '_positive' (ID: 137937)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.3313356935977936
    2. '_max' → logprob: -2.0813357830047607
    3. '_scores' → logprob: -2.5813357830047607
    4. '_' → logprob: -3.8313357830047607
    5. '_value' → logprob: -4.331335544586182
    6. '_opt' → logprob: -5.081335544586182
    7. '_points' → logprob: -5.206335544586182
    8. '_difference' → logprob: -5.581335544586182
    9. '_profit' → logprob: -5.581335544586182
    10. '_gain' → logprob: -5.581335544586182

Token 189: '_score' (ID: 22555)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.9922618865966797
    2. '_scores' → logprob: -1.6172618865966797
    3. '_sum' → logprob: -2.2422618865966797
    4. '_s' → logprob: -2.3672618865966797
    5. '_prefix' → logprob: -2.4922618865966797
    6. '_score' → logprob: -2.8672618865966797
    7. '_subset' → logprob: -3.4922618865966797
    8. '_values' → logprob: -4.24226188659668
    9. '_difference' → logprob: -4.24226188659668
    10. '_diff' → logprob: -5.11726188659668

Token 190: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16629211604595184
    2. '(n' → logprob: -1.9162920713424683
    3. '():' → logprob: -5.416292190551758
    4. 's' → logprob: -7.541292190551758
    5. '(v' → logprob: -8.166292190551758
    6. '(s' → logprob: -9.041292190551758
    7. '()' → logprob: -9.416292190551758
    8. '_' → logprob: -9.416292190551758
    9. ' (' → logprob: -9.791292190551758
    10. '_sum' → logprob: -10.041292190551758

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ',v' → logprob: -12.250009536743164
    3. ' ,' → logprob: -12.375009536743164
    4. ',n' → logprob: -16.000009536743164
    5. '‌,' → logprob: -16.125009536743164
    6. ')' → logprob: -17.250009536743164
    7. 'v' → logprob: -17.250009536743164
    8. '):' → logprob: -17.625009536743164
    9. ',
' → logprob: -17.750009536743164
    10. '،' → logprob: -18.750009536743164

Token 192: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11282570660114288
    2. ' v' → logprob: -2.237825632095337
    3. '   ' → logprob: -13.612825393676758
    4. '	v' → logprob: -14.737825393676758
    5. 'scores' → logprob: -14.737825393676758
    6. ' ' → logprob: -15.362825393676758
    7. 's' → logprob: -15.737825393676758
    8. 'score' → logprob: -15.987825393676758
    9. 've' → logprob: -16.112825393676758
    10. ')' → logprob: -16.237825393676758

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002457238151691854
    2. ' ,' → logprob: -8.750246047973633
    3. ',c' → logprob: -9.375246047973633
    4. ',
' → logprob: -14.375246047973633
    5. 'c' → logprob: -15.000246047973633
    6. '   ' → logprob: -15.125246047973633
    7. '‌,' → logprob: -15.375246047973633
    8. ' c' → logprob: -15.750246047973633
    9. 'def' → logprob: -16.000246047973633
    10. ')' → logprob: -16.000246047973633

Token 194: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31326884031295776
    2. 'c' → logprob: -1.3132688999176025
    3. ' ' → logprob: -12.563268661499023
    4. '    ' → logprob: -13.813268661499023
    5. '   ' → logprob: -14.063268661499023
    6. '	c' → logprob: -14.938268661499023
    7. ')c' → logprob: -15.188268661499023
    8. '  ' → logprob: -15.438268661499023
    9. 'v' → logprob: -15.563268661499023
    10. '<|end|>' → logprob: -15.938268661499023

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032116140937432647
    2. '):
' → logprob: -8.125321388244629
    3. ')' → logprob: -10.750321388244629
    4. ':' → logprob: -13.750321388244629
    5. ',' → logprob: -13.875321388244629
    6. '   ' → logprob: -14.000321388244629
    7. '):
' → logprob: -14.875321388244629
    8. ' ):' → logprob: -15.000321388244629
    9. 'def' → logprob: -17.375320434570312
    10. '):

' → logprob: -17.625320434570312

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07019340246915817
    2. '
' → logprob: -3.195193290710449
    3. ':' → logprob: -4.070193290710449
    4. '    
' → logprob: -5.570193290710449
    5. ':
' → logprob: -5.570193290710449
    6. '```' → logprob: -7.695193290710449
    7. ' 
' → logprob: -8.19519329071045
    8. '  
' → logprob: -8.19519329071045
    9. '   
' → logprob: -8.44519329071045
    10. '\' → logprob: -9.07019329071045

Token 197: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18718114495277405
    2. ' scores' → logprob: -2.562181234359741
    3. 'scores' → logprob: -3.187181234359741
    4. 'score' → logprob: -4.187180995941162
    5. ' score' → logprob: -5.062180995941162
    6. ' positive' → logprob: -5.062180995941162
    7. '    
' → logprob: -5.437180995941162
    8. ' result' → logprob: -5.687180995941162
    9. 'result' → logprob: -5.812180995941162
    10. '
' → logprob: -5.937180995941162

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011922369711101055
    2. ' """
' → logprob: -6.261922359466553
    3. 'score' → logprob: -6.386922359466553
    4. '"""
' → logprob: -6.636922359466553
    5. '
' → logprob: -7.011922359466553
    6. '  ' → logprob: -7.136922359466553
    7. '    
' → logprob: -7.136922359466553
    8. 'result' → logprob: -7.386922359466553
    9. '"' → logprob: -7.386922359466553
    10. ' ' → logprob: -7.636922359466553

Token 199: ' Cal' (ID: 4453)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.0575308799743652
    2. '   ' → logprob: -1.1825308799743652
    3. 'result' → logprob: -1.9325308799743652
    4. 'scores' → logprob: -2.4325308799743652
    5. 'positive' → logprob: -3.6825308799743652
    6. ' result' → logprob: -3.9325308799743652
    7. ' scores' → logprob: -4.807530879974365
    8. ' score' → logprob: -4.807530879974365
    9. '#' → logprob: -4.807530879974365
    10. ' positive' → logprob: -4.932530879974365

Token 200: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.20020954310894012
    2. 'cul' → logprob: -1.8252094984054565
    3. 'culate' → logprob: -4.200209617614746
    4. 'c' → logprob: -5.450209617614746
    5. 'cula' → logprob: -7.575209617614746
    6. 'cules' → logprob: -8.700209617614746
    7. 'cular' → logprob: -9.200209617614746
    8. 'cut' → logprob: -10.450209617614746
    9. '```' → logprob: -10.450209617614746
    10. 'culator' → logprob: -10.950209617614746

Token 201: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02808467485010624
    2. '    
' → logprob: -5.278084754943848
    3. ' le' → logprob: -5.528084754943848
    4. 'scores' → logprob: -5.528084754943848
    5. ' scores' → logprob: -6.028084754943848
    6. 'score' → logprob: -6.403084754943848
    7. ' la' → logprob: -6.528084754943848
    8. ' les' → logprob: -6.653084754943848
    9. '_scores' → logprob: -7.028084754943848
    10. '
' → logprob: -7.028084754943848

Token 202: ' somme' (ID: 64484)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.37295714020729065
    2. 'me' → logprob: -1.6229571104049683
    3. 's' → logprob: -2.872957229614258
    4. 'scores' → logprob: -3.622957229614258
    5. 'max' → logprob: -4.247957229614258
    6. ' score' → logprob: -5.747957229614258
    7. 'positive' → logprob: -5.872957229614258
    8. 'maximum' → logprob: -6.247957229614258
    9. ' meilleure' → logprob: -6.622957229614258
    10. 'liste' → logprob: -6.747957229614258

Token 203: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0660206079483032
    2. '(' → logprob: -1.4410206079483032
    3. ' maximale' → logprob: -1.8160206079483032
    4. ' des' → logprob: -2.3160204887390137
    5. 'max' → logprob: -2.6910204887390137
    6. '_positive' → logprob: -3.9410204887390137
    7. '_des' → logprob: -4.316020488739014
    8. 'des' → logprob: -4.316020488739014
    9. '   ' → logprob: -4.316020488739014
    10. '_max' → logprob: -4.691020488739014

Token 204: ' différences' (ID: 175718)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0557120144367218
    2. ' max' → logprob: -3.5557119846343994
    3. 'score' → logprob: -5.0557122230529785
    4. 'scores' → logprob: -5.1807122230529785
    5. '(max' → logprob: -5.5557122230529785
    6. '[max' → logprob: -6.1807122230529785
    7. '[i' → logprob: -6.4307122230529785
    8. 'i' → logprob: -6.6807122230529785
    9. 'v' → logprob: -7.0557122230529785
    10. 'val' → logprob: -7.6807122230529785

Token 205: ' positives' (ID: 95584)
  Prédit: ' positives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positives' → logprob: -1.0974582433700562
    2. 'posit' → logprob: -1.7224582433700562
    3. ' positive' → logprob: -2.0974583625793457
    4. 'positive' → logprob: -2.2224583625793457
    5. 'max' → logprob: -2.7224583625793457
    6. ' entre' → logprob: -3.4724583625793457
    7. ' posit' → logprob: -3.8474583625793457
    8. '   ' → logprob: -3.8474583625793457
    9. ' v' → logprob: -3.9724583625793457
    10. ' max' → logprob: -4.222458362579346

Token 206: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.07524540275335312
    2. ' between' → logprob: -2.9502453804016113
    3. 'entre' → logprob: -4.575245380401611
    4. '   ' → logprob: -5.575245380401611
    5. 'between' → logprob: -5.825245380401611
    6. ' (' → logprob: -6.825245380401611
    7. 'v' → logprob: -7.700245380401611
    8. ' v' → logprob: -7.825245380401611
    9. '(v' → logprob: -8.20024585723877
    10. '_' → logprob: -9.20024585723877

Token 207: ' les' (ID: 1341)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5765326023101807
    2. 'v' → logprob: -0.8265326023101807
    3. '   ' → logprob: -8.451532363891602
    4. 'vi' → logprob: -9.076532363891602
    5. ' vi' → logprob: -9.201532363891602
    6. ' les' → logprob: -10.576532363891602
    7. ' la' → logprob: -10.576532363891602
    8. ' ' → logprob: -11.076532363891602
    9. '	v' → logprob: -11.326532363891602
    10. 'i' → logprob: -11.451532363891602

Token 208: ' éléments' (ID: 57375)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6207048892974854
    2. 'élé' → logprob: -1.1207048892974854
    3. ' éléments' → logprob: -2.7457048892974854
    4. ' v' → logprob: -3.2457048892974854
    5. 'val' → logprob: -4.245704650878906
    6. ' valeurs' → logprob: -4.870704650878906
    7. 'de' → logprob: -5.620704650878906
    8. ' elements' → logprob: -6.245704650878906
    9. 'elements' → logprob: -6.370704650878906
    10. 'values' → logprob: -7.495704650878906

Token 209: ' correspond' (ID: 11095)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4869402348995209
    2. ' v' → logprob: -1.4869402647018433
    3. 'v' → logprob: -2.1119401454925537
    4. 'de' → logprob: -4.236940383911133
    5. '   ' → logprob: -4.361940383911133
    6. ',' → logprob: -4.986940383911133
    7. 'def' → logprob: -6.986940383911133
    8. ' ,' → logprob: -7.361940383911133
    9. ' ' → logprob: -7.486940383911133
    10. 'n' → logprob: -7.486940383911133

Token 210: 'ants' (ID: 2027)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.22598345577716827
    2. 'ants' → logprob: -1.8509835004806519
    3. 'à' → logprob: -3.7259833812713623
    4. 'ant' → logprob: -5.100983619689941
    5. ' aux' → logprob: -5.350983619689941
    6. ' à' → logprob: -5.350983619689941
    7. '   ' → logprob: -6.475983619689941
    8. 'a' → logprob: -6.600983619689941
    9. 'ance' → logprob: -6.975983619689941
    10. 'au' → logprob: -7.725983619689941

Token 211: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27283644676208496
    2. '   ' → logprob: -1.647836446762085
    3. '    ' → logprob: -4.397836685180664
    4. 'de' → logprob: -4.397836685180664
    5. ' v' → logprob: -4.647836685180664
    6. 'v' → logprob: -5.397836685180664
    7. ' des' → logprob: -5.897836685180664
    8. ',' → logprob: -6.397836685180664
    9. ' ' → logprob: -7.647836685180664
    10. '  ' → logprob: -7.772836685180664

Token 212: ' deux' (ID: 10301)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2811874449253082
    2. 'v' → logprob: -1.4061874151229858
    3. ' la' → logprob: -10.906187057495117
    4. ' ' → logprob: -11.906187057495117
    5. '	v' → logprob: -12.656187057495117
    6. '   ' → logprob: -13.156187057495117
    7. ' `' → logprob: -13.281187057495117
    8. 'la' → logprob: -13.656187057495117
    9. 'n' → logprob: -14.156187057495117
    10. ' n' → logprob: -14.656187057495117

Token 213: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.12009835243225098
    2. 'list' → logprob: -3.120098352432251
    3. ' lists' → logprob: -3.495098352432251
    4. 'lists' → logprob: -3.495098352432251
    5. ' list' → logprob: -5.745098114013672
    6. 'liste' → logprob: -6.245098114013672
    7. ' liste' → logprob: -6.620098114013672
    8. '   ' → logprob: -6.745098114013672
    9. ' listas' → logprob: -8.620098114013672
    10. ' ' → logprob: -8.870098114013672

Token 214: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4488234519958496
    2. '   ' → logprob: -1.3238234519958496
    3. ' v' → logprob: -3.3238234519958496
    4. '.' → logprob: -3.6988234519958496
    5. ' ,' → logprob: -4.32382345199585
    6. 'v' → logprob: -4.57382345199585
    7. 'def' → logprob: -5.57382345199585
    8. ' (' → logprob: -5.94882345199585
    9. ' def' → logprob: -7.19882345199585
    10. '  ' → logprob: -7.32382345199585

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014226377941668034
    2. '    
' → logprob: -4.76422643661499
    3. '
' → logprob: -5.88922643661499
    4. ' 
' → logprob: -6.88922643661499
    5. '  
' → logprob: -7.51422643661499
    6. '\n' → logprob: -7.88922643661499
    7. '   
' → logprob: -8.139225959777832
    8. 'n' → logprob: -8.264225959777832
    9. '```' → logprob: -9.389225959777832
    10. 'def' → logprob: -9.889225959777832

Token 216: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48431363701820374
    2. 'result' → logprob: -1.1093136072158813
    3. ' result' → logprob: -3.234313726425171
    4. '    
' → logprob: -4.859313488006592
    5. '
' → logprob: -5.984313488006592
    6. 'res' → logprob: -6.484313488006592
    7. 'score' → logprob: -7.484313488006592
    8. ' 
' → logprob: -8.10931396484375
    9. 'rés' → logprob: -8.10931396484375
    10. 'results' → logprob: -8.23431396484375

Token 217: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2015102058649063
    2. 'i' → logprob: -1.7015101909637451
    3. ' ' → logprob: -9.326510429382324
    4. '   ' → logprob: -12.451510429382324
    5. ' ' → logprob: -13.326510429382324
    6. '  ' → logprob: -13.826510429382324
    7. '	i' → logprob: -14.701510429382324
    8. '```' → logprob: -15.201510429382324
    9. '    ' → logprob: -16.451509475708008
    10. 'v' → logprob: -16.576509475708008

Token 218: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10146600008010864
    2. 'i' → logprob: -2.351465940475464
    3. ' index' → logprob: -7.226466178894043
    4. ' ' → logprob: -8.476466178894043
    5. 'index' → logprob: -9.226466178894043
    6. 'indice' → logprob: -9.476466178894043
    7. ' indice' → logprob: -9.601466178894043
    8. ' ' → logprob: -11.351466178894043
    9. ' élément' → logprob: -11.351466178894043
    10. 'élé' → logprob: -11.726466178894043

Token 219: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007142513524740934
    2. 'i' → logprob: -5.007142543792725
    3. '   ' → logprob: -8.257142066955566
    4. ',' → logprob: -9.382142066955566
    5. ' ,' → logprob: -10.507142066955566
    6. ' ' → logprob: -10.757142066955566
    7. ' in' → logprob: -11.632142066955566
    8. ' de' → logprob: -12.007142066955566
    9. ' ' → logprob: -13.007142066955566
    10. ' `' → logprob: -13.257142066955566

Token 220: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1777317076921463
    2. ' in' → logprob: -2.55273175239563
    3. '   ' → logprob: -3.17773175239563
    4. ' en' → logprob: -4.052731513977051
    5. ' ,' → logprob: -4.302731513977051
    6. ':' → logprob: -5.302731513977051
    7. ' de' → logprob: -5.802731513977051
    8. ' dans' → logprob: -6.427731513977051
    9. ' :' → logprob: -6.927731513977051
    10. 'in' → logprob: -7.427731513977051

Token 221: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048662763088941574
    2. 'range' → logprob: -3.0486626625061035
    3. ' la' → logprob: -10.173663139343262
    4. '   ' → logprob: -11.048663139343262
    5. ' ' → logprob: -11.298663139343262
    6. 'n' → logprob: -13.548663139343262
    7. ' v' → logprob: -13.673663139343262
    8. ' gamme' → logprob: -13.798663139343262
    9. ' rang' → logprob: -14.048663139343262
    10. ' n' → logprob: -14.173663139343262

Token 222: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.182190554682165e-05
    2. ' range' → logprob: -9.875061988830566
    3. '   ' → logprob: -12.500061988830566
    4. 'la' → logprob: -12.875061988830566
    5. 'rang' → logprob: -13.500061988830566
    6. ' ' → logprob: -13.875061988830566
    7. '
' → logprob: -14.625061988830566
    8. 'r' → logprob: -14.875061988830566
    9. 'n' → logprob: -15.250061988830566
    10. '```' → logprob: -15.625061988830566

Token 223: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08812706172466278
    2. 'à' → logprob: -3.0881271362304688
    3. ' ' → logprob: -4.088127136230469
    4. ',' → logprob: -4.338127136230469
    5. '   ' → logprob: -5.213127136230469
    6. ' ,' → logprob: -6.713127136230469
    7. ' in' → logprob: -7.088127136230469
    8. '  ' → logprob: -8.338127136230469
    9. ' a' → logprob: -8.463127136230469
    10. ' n' → logprob: -8.588127136230469

Token 224: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20147065818309784
    2. 'n' → logprob: -1.7014706134796143
    3. '   ' → logprob: -9.826470375061035
    4. '	n' → logprob: -13.076470375061035
    5. ' ' → logprob: -14.826470375061035
    6. '(n' → logprob: -14.826470375061035
    7. '```' → logprob: -16.45147132873535
    8. ' ' → logprob: -16.57647132873535
    9. '
' → logprob: -16.57647132873535
    10. '  ' → logprob: -16.82647132873535

Token 225: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5781420469284058
    2. ':' → logprob: -0.9531420469284058
    3. ' -' → logprob: -3.3281421661376953
    4. ' :' → logprob: -4.828142166137695
    5. '   ' → logprob: -4.953142166137695
    6. ':
' → logprob: -6.703142166137695
    7. '):' → logprob: -7.828142166137695
    8. ',' → logprob: -7.828142166137695
    9. ' :
' → logprob: -8.828142166137695
    10. '):
' → logprob: -9.203142166137695

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008783325552940369
    2. ' ' → logprob: -4.883783340454102
    3. '-' → logprob: -7.008783340454102
    4. ' -' → logprob: -9.133783340454102
    5. ')' → logprob: -9.508783340454102
    6. '   ' → logprob: -10.383783340454102
    7. ' n' → logprob: -10.883783340454102
    8. 'n' → logprob: -11.383783340454102
    9. '```' → logprob: -11.883783340454102
    10. '  ' → logprob: -12.133783340454102

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02583572454750538
    2. ':' → logprob: -4.2758355140686035
    3. '   ' → logprob: -4.6508355140686035
    4. ' :' → logprob: -6.9008355140686035
    5. ' ,' → logprob: -7.5258355140686035
    6. ',
' → logprob: -8.275835990905762
    7. ':
' → logprob: -8.525835990905762
    8. ' :
' → logprob: -10.400835990905762
    9. ',:' → logprob: -12.025835990905762
    10. '```' → logprob: -12.400835990905762

Token 228: ' calc' (ID: 25691)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5276644229888916
    2. '   ' → logprob: -1.4026644229888916
    3. ' si' → logprob: -3.1526644229888916
    4. ' on' → logprob: -3.5276644229888916
    5. ' la' → logprob: -3.5276644229888916
    6. ' calculate' → logprob: -4.4026641845703125
    7. ' s' → logprob: -4.9026641845703125
    8. ' result' → logprob: -5.0276641845703125
    9. 'if' → logprob: -5.5276641845703125
    10. ' ' → logprob: -5.9026641845703125

Token 229: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0002969703928101808
    2. 'ul' → logprob: -8.875296592712402
    3. 'ulé' → logprob: -10.125296592712402
    4. 'cule' → logprob: -10.250296592712402
    5. '```' → logprob: -11.750296592712402
    6. 'l' → logprob: -11.875296592712402
    7. 'u' → logprob: -12.000296592712402
    8. '\' → logprob: -12.000296592712402
    9. '   ' → logprob: -12.125296592712402
    10. 'le' → logprob: -12.250296592712402

Token 230: ' score' (ID: 8429)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.17030106484889984
    2. ' v' → logprob: -3.1703009605407715
    3. ' la' → logprob: -3.1703009605407715
    4. 'max' → logprob: -3.1703009605407715
    5. ' (' → logprob: -4.0453009605407715
    6. ' ' → logprob: -5.4203009605407715
    7. '(max' → logprob: -6.0453009605407715
    8. '(v' → logprob: -6.1703009605407715
    9. 'v' → logprob: -6.2953009605407715
    10. ' le' → logprob: -7.2953009605407715

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018266693223267794
    2. '=' → logprob: -7.001826763153076
    3. 's' → logprob: -7.376826763153076
    4. '_i' → logprob: -8.751826286315918
    5. '[i' → logprob: -10.126826286315918
    6. ' +=' → logprob: -10.376826286315918
    7. '_' → logprob: -10.876826286315918
    8. ' ' → logprob: -11.001826286315918
    9. ' if' → logprob: -11.876826286315918
    10. '   ' → logprob: -12.501826286315918

Token 232: ' v' (ID: 323)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5926538109779358
    2. 'max' → logprob: -0.8426538109779358
    3. 'v' → logprob: -4.592653751373291
    4. ' v' → logprob: -5.092653751373291
    5. '(max' → logprob: -9.21765422821045
    6. ' ' → logprob: -9.84265422821045
    7. '   ' → logprob: -10.09265422821045
    8. '
' → logprob: -10.34265422821045
    9. ' (' → logprob: -10.59265422821045
    10. '(v' → logprob: -11.21765422821045

Token 233: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08898919820785522
    2. '[' → logprob: -2.4639892578125
    3. '[I' → logprob: -10.9639892578125
    4. '[u' → logprob: -11.7139892578125
    5. '[
' → logprob: -12.5889892578125
    6. ' [' → logprob: -12.7139892578125
    7. '[n' → logprob: -12.9639892578125
    8. '[user' → logprob: -13.0889892578125
    9. '[idx' → logprob: -13.3389892578125
    10. '[e' → logprob: -13.7139892578125

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05072028934955597
    2. '-' → logprob: -3.67572021484375
    3. ' -' → logprob: -4.30072021484375
    4. '[' → logprob: -5.17572021484375
    5. '[i' → logprob: -6.05072021484375
    6. ' ]' → logprob: -6.80072021484375
    7. ')' → logprob: -7.42572021484375
    8. '>' → logprob: -8.17572021484375
    9. ']-' → logprob: -8.92572021484375
    10. '   ' → logprob: -9.55072021484375

Token 235: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1132025197148323
    2. '-' → logprob: -2.2382025718688965
    3. 'if' → logprob: -8.988202095031738
    4. '[' → logprob: -9.113202095031738
    5. ' ' → logprob: -9.863202095031738
    6. ' if' → logprob: -10.613202095031738
    7. '[i' → logprob: -10.988202095031738
    8. '>' → logprob: -10.988202095031738
    9. '   ' → logprob: -11.238202095031738
    10. '"' → logprob: -13.113202095031738

Token 236: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20142056047916412
    2. 'c' → logprob: -1.701420545578003
    3. '	c' → logprob: -12.701420783996582
    4. '   ' → logprob: -13.576420783996582
    5. ' ' → logprob: -13.576420783996582
    6. ' ' → logprob: -14.451420783996582
    7. '
' → logprob: -14.826420783996582
    8. '    ' → logprob: -15.951420783996582
    9. ' 
' → logprob: -16.076419830322266
    10. '  ' → logprob: -16.326419830322266

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019310165662318468
    2. '[' → logprob: -6.251931190490723
    3. 'i' → logprob: -14.376931190490723
    4. ' [' → logprob: -14.501931190490723
    5. '\[' → logprob: -14.876931190490723
    6. '[
' → logprob: -15.126931190490723
    7. '[I' → logprob: -16.126930236816406
    8. '[]' → logprob: -16.376930236816406
    9. ' i' → logprob: -16.876930236816406
    10. 'if' → logprob: -16.876930236816406

Token 238: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06578363478183746
    2. '   ' → logprob: -3.065783739089966
    3. ' if' → logprob: -4.940783500671387
    4. '),' → logprob: -5.565783500671387
    5. ' )' → logprob: -6.315783500671387
    6. '
' → logprob: -6.440783500671387
    7. ')
' → logprob: -6.815783500671387
    8. ').' → logprob: -7.940783500671387
    9. 'if' → logprob: -8.190783500671387
    10. ',' → logprob: -8.190783500671387

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02207215316593647
    2. '
' → logprob: -4.6470723152160645
    3. ' if' → logprob: -5.7720723152160645
    4. '    
' → logprob: -5.7720723152160645
    5. ' 
' → logprob: -6.6470723152160645
    6. ' Si' → logprob: -6.7720723152160645
    7. '  
' → logprob: -6.8970723152160645
    8. 'if' → logprob: -7.3970723152160645
    9. ' ' → logprob: -7.7720723152160645
    10. '    ' → logprob: -8.272071838378906

Token 240: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25012099742889404
    2. ' Si' → logprob: -1.750120997428894
    3. 'Si' (adapté à ' Si') → logprob: -3.6251211166381836
    4. '
' → logprob: -5.125121116638184
    5. ' S' → logprob: -6.000121116638184
    6. ' if' → logprob: -6.250121116638184
    7. 'If' → logprob: -6.375121116638184
    8. ' If' → logprob: -6.750121116638184
    9. ' Le' → logprob: -7.250121116638184
    10. ' Se' → logprob: -7.250121116638184

Token 241: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.03813467174768448
    2. 'score' → logprob: -3.2881345748901367
    3. ' ' → logprob: -10.038134574890137
    4. '	score' → logprob: -10.788134574890137
    5. ' le' → logprob: -11.413134574890137
    6. '(score' → logprob: -12.038134574890137
    7. '   ' → logprob: -12.288134574890137
    8. ' ce' → logprob: -13.663134574890137
    9. ' ' → logprob: -14.163134574890137
    10. ' s' → logprob: -14.413134574890137

Token 242: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07892944663763046
    2. '>' → logprob: -2.5789294242858887
    3. ' ' → logprob: -10.578929901123047
    4. '   ' → logprob: -12.078929901123047
    5. ' >
' → logprob: -13.203929901123047
    6. '<|end|>' → logprob: -13.578929901123047
    7. '">' → logprob: -13.953929901123047
    8. 's' → logprob: -14.078929901123047
    9. ' est' → logprob: -14.703929901123047
    10. ' <' → logprob: -15.203929901123047

Token 243: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7053418159484863
    2. ' >' → logprob: -0.8303418159484863
    3. ' positif' → logprob: -3.2053418159484863
    4. ' supérieur' → logprob: -3.9553418159484863
    5. ' positive' → logprob: -4.830341815948486
    6. 'positive' → logprob: -7.455341815948486
    7. 'posit' → logprob: -7.830341815948486
    8. ' ' → logprob: -8.205341339111328
    9. 'sup' → logprob: -8.580341339111328
    10. ' supérieure' → logprob: -8.705341339111328

Token 244: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.028105884790420532
    2. '0' → logprob: -4.028105735778809
    3. '   ' → logprob: -5.278105735778809
    4. 'à' → logprob: -5.778105735778809
    5. ' ' → logprob: -7.403105735778809
    6. ' a' → logprob: -7.528105735778809
    7. '    ' → logprob: -8.528105735778809
    8. '  ' → logprob: -8.903105735778809
    9. ',' → logprob: -9.278105735778809
    10. '>' → logprob: -10.903105735778809

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038091517984867096
    2. ' ' → logprob: -3.2880914211273193
    3. ' zéro' → logprob: -10.538091659545898
    4. ' z' → logprob: -11.413091659545898
    5. 'z' → logprob: -11.913091659545898
    6. ' zero' → logprob: -12.663091659545898
    7. 'zero' → logprob: -14.163091659545898
    8. ' ' → logprob: -14.788091659545898
    9. '```' → logprob: -15.475591659545898
    10. '  ' → logprob: -15.475591659545898

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002714681322686374
    2. ' ' → logprob: -8.250271797180176
    3. 'z' → logprob: -11.625271797180176
    4. ' zéro' → logprob: -14.625271797180176
    5. 'zero' → logprob: -14.625271797180176
    6. ' z' → logprob: -15.000271797180176
    7. '```' → logprob: -16.75027084350586
    8. 'c' → logprob: -16.87527084350586
    9. ' zero' → logprob: -17.62527084350586
    10. '  ' → logprob: -18.37527084350586

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3960786759853363
    2. ':' → logprob: -1.1460787057876587
    3. ' :' → logprob: -5.396078586578369
    4. ' ,' → logprob: -5.896078586578369
    5. '   ' → logprob: -6.396078586578369
    6. ':
' → logprob: -8.771079063415527
    7. ':,' → logprob: -10.896079063415527
    8. '):' → logprob: -11.521079063415527
    9. ' :
' → logprob: -12.146079063415527
    10. ',
' → logprob: -12.521079063415527

Token 248: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11831904202699661
    2. ' total' → logprob: -3.743319034576416
    3. ' score' → logprob: -4.243319034576416
    4. '    ' → logprob: -4.243319034576416
    5. ' on' → logprob: -4.368319034576416
    6. ' result' → logprob: -4.743319034576416
    7. '       ' → logprob: -4.993319034576416
    8. ' sum' → logprob: -4.993319034576416
    9. ' ajoute' → logprob: -5.618319034576416
    10. 'score' → logprob: -5.868319034576416

Token 249: ''aj' (ID: 116735)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29262396693229675
    2. '   ' → logprob: -2.292623996734619
    3. 'e' → logprob: -2.542623996734619
    4. ' score' → logprob: -2.792623996734619
    5. 'score' → logprob: -4.917623996734619
    6. ' a' → logprob: -5.917623996734619
    7. 'es' → logprob: -8.042623519897461
    8. ' y' → logprob: -8.292623519897461
    9. ' sum' → logprob: -8.667623519897461
    10. '
' → logprob: -8.667623519897461

Token 250: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.005065110512077808
    2. 'outer' → logprob: -6.130064964294434
    3. 'oue' → logprob: -6.755064964294434
    4. 'e' → logprob: -7.255064964294434
    5. 'out' → logprob: -7.505064964294434
    6. 'score' → logprob: -9.005064964294434
    7. 'ou' → logprob: -9.130064964294434
    8. 'uste' → logprob: -10.005064964294434
    9. 'outez' → logprob: -10.255064964294434
    10. 'oueur' → logprob: -10.380064964294434

Token 251: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6081804633140564
    2. ' au' → logprob: -1.1081805229187012
    3. '   ' → logprob: -2.108180522918701
    4. '    ' → logprob: -6.608180522918701
    5. ' a' → logprob: -6.608180522918701
    6. 'au' → logprob: -7.233180522918701
    7. ' ' → logprob: -8.233180046081543
    8. 'à' → logprob: -9.233180046081543
    9. '  ' → logprob: -9.483180046081543
    10. ' to' → logprob: -9.983180046081543

Token 252: ' résultat' (ID: 62556)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.648347020149231
    2. 'total' → logprob: -0.898347020149231
    3. 'result' → logprob: -3.6483469009399414
    4. 'score' → logprob: -3.7733469009399414
    5. 's' → logprob: -4.898346900939941
    6. ' score' → logprob: -4.898346900939941
    7. ' result' → logprob: -5.523346900939941
    8. 'r' → logprob: -7.398346900939941
    9. ' résultat' → logprob: -8.148346900939941
    10. 't' → logprob: -8.648346900939941

Token 253: ' final' (ID: 1721)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2978343963623047
    2. '   ' → logprob: -1.5478343963623047
    3. '.
' → logprob: -3.5478343963623047
    4. '
' → logprob: -5.172834396362305
    5. 'final' → logprob: -5.547834396362305
    6. '    
' → logprob: -6.422834396362305
    7. ' final' → logprob: -6.422834396362305
    8. 'def' → logprob: -6.797834396362305
    9. ',' → logprob: -6.797834396362305
    10. 'total' → logprob: -8.547834396362305

Token 254: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3809204697608948
    2. '.' → logprob: -1.25592041015625
    3. ',' → logprob: -4.25592041015625
    4. '    
' → logprob: -4.88092041015625
    5. '
' → logprob: -5.00592041015625
    6. 'def' → logprob: -7.13092041015625
    7. '.
' → logprob: -7.13092041015625
    8. '    ' → logprob: -7.38092041015625
    9. ' ' → logprob: -7.75592041015625
    10. '  ' → logprob: -8.75592041015625

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005078765680082142
    2. '    
' → logprob: -8.000508308410645
    3. '
' → logprob: -8.750508308410645
    4. '"""' → logprob: -12.250508308410645
    5. 'def' → logprob: -13.000508308410645
    6. '    ' → logprob: -13.500508308410645
    7. '   
' → logprob: -13.750508308410645
    8. '```' → logprob: -14.000508308410645
    9. '"""
' → logprob: -14.250508308410645
    10. ')' → logprob: -14.375508308410645

Token 256: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05924224480986595
    2. '
' → logprob: -3.6842422485351562
    3. '    
' → logprob: -4.309242248535156
    4. 'result' → logprob: -4.309242248535156
    5. '"""
' → logprob: -6.059242248535156
    6. ' result' → logprob: -6.184242248535156
    7. ' """
' → logprob: -8.434242248535156
    8. '"""' → logprob: -8.559242248535156
    9. '\n' → logprob: -9.059242248535156
    10. '   
' → logprob: -9.184242248535156

Token 257: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6612328290939331
    2. ':' → logprob: -1.161232829093933
    3. ',' → logprob: -2.5362329483032227
    4. '=' → logprob: -3.5362329483032227
    5. '):' → logprob: -3.9112329483032227
    6. '(n' → logprob: -4.036232948303223
    7. ')' → logprob: -4.286232948303223
    8. '(' → logprob: -5.911232948303223
    9. ' :' → logprob: -6.036232948303223
    10. '):
' → logprob: -6.286232948303223

Token 258: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004424667276907712
    2. 'n' → logprob: -7.8754425048828125
    3. ' n' → logprob: -10.000442504882812
    4. '       ' → logprob: -11.875442504882812
    5. '    ' → logprob: -12.500442504882812
    6. '    
' → logprob: -13.500442504882812
    7. '
' → logprob: -13.625442504882812
    8. '```' → logprob: -13.625442504882812
    9. '	n' → logprob: -14.125442504882812
    10. '  ' → logprob: -14.750442504882812

Token 259: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1673203408718109
    2. '   ' → logprob: -2.4173202514648438
    3. ' n' → logprob: -2.7923202514648438
    4. 'self' → logprob: -5.792320251464844
    5. ' self' → logprob: -7.917320251464844
    6. ')' → logprob: -9.917320251464844
    7. '
' → logprob: -9.917320251464844
    8. '	n' → logprob: -10.542320251464844
    9. ' ' → logprob: -11.042320251464844
    10. 'def' → logprob: -11.167320251464844

Token 260: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8895084261894226
    2. ':' → logprob: -1.2645084857940674
    3. ':int' → logprob: -2.0145084857940674
    4. '):' → logprob: -2.1395084857940674
    5. '   ' → logprob: -4.139508247375488
    6. '(int' → logprob: -4.389508247375488
    7. ' int' → logprob: -5.389508247375488
    8. '<|end|>' → logprob: -5.514508247375488
    9. '):
' → logprob: -5.639508247375488
    10. 'int' → logprob: -5.764508247375488

Token 261: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015242677181959152
    2. ' int' → logprob: -6.501524448394775
    3. '   ' → logprob: -10.876523971557617
    4. ')' → logprob: -13.001523971557617
    5. '):' → logprob: -15.251523971557617
    6. ':int' → logprob: -15.876523971557617
    7. '       ' → logprob: -16.751523971557617
    8. '):
' → logprob: -16.751523971557617
    9. '[int' → logprob: -16.876523971557617
    10. '=int' → logprob: -17.376523971557617

Token 262: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22089774906635284
    2. ')' → logprob: -1.7208977937698364
    3. ',' → logprob: -4.095897674560547
    4. '):
' → logprob: -6.470897674560547
    5. '   ' → logprob: -6.970897674560547
    6. ' ):' → logprob: -9.970897674560547
    7. '),' → logprob: -10.095897674560547
    8. ':' → logprob: -10.470897674560547
    9. '<|end|>' → logprob: -11.595897674560547
    10. ' ' → logprob: -11.720897674560547

Token 263: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -1.1060043573379517
    2. ' n' → logprob: -1.6060043573379517
    3. ' The' → logprob: -1.9810043573379517
    4. ' int' → logprob: -2.606004238128662
    5. 'The' → logprob: -2.981004238128662
    6. ' La' → logprob: -3.231004238128662
    7. ' number' → logprob: -3.356004238128662
    8. 'Le' → logprob: -3.856004238128662
    9. '   ' → logprob: -3.981004238128662
    10. 'n' → logprob: -3.981004238128662

Token 264: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.15429353713989258
    2. 'nombre' → logprob: -2.0292935371398926
    3. ' number' → logprob: -4.779293537139893
    4. 'n' → logprob: -6.529293537139893
    5. ' n' → logprob: -7.404293537139893
    6. 'number' → logprob: -7.529293537139893
    7. ' ' → logprob: -8.154293060302734
    8. ' nombres' → logprob: -8.779293060302734
    9. '   ' → logprob: -10.904293060302734
    10. '...' → logprob: -11.529293060302734

Token 265: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11787902563810349
    2. ' d' → logprob: -3.2428789138793945
    3. ' )' → logprob: -3.3678789138793945
    4. '   ' → logprob: -4.7428789138793945
    5. ' des' → logprob: -5.1178789138793945
    6. '<|end|>' → logprob: -5.4928789138793945
    7. ',' → logprob: -5.6178789138793945
    8. ' de' → logprob: -5.7428789138793945
    9. ' ' → logprob: -5.9928789138793945
    10. '    ' → logprob: -5.9928789138793945

Token 266: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.356009840965271
    2. ' éléments' → logprob: -1.231009840965271
    3. ' elements' → logprob: -5.2310099601745605
    4. 'elements' → logprob: -6.8560099601745605
    5. ')' → logprob: -7.8560099601745605
    6. ' ' → logprob: -8.106009483337402
    7. ' él' → logprob: -8.481009483337402
    8. ' élément' → logprob: -9.481009483337402
    9. ' )' → logprob: -10.231009483337402
    10. ''' → logprob: -10.481009483337402

Token 267: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0037322607822716236
    2. ' éléments' → logprob: -5.628732204437256
    3. 'elements' → logprob: -9.878732681274414
    4. 'él' → logprob: -10.128732681274414
    5. '
' → logprob: -10.878732681274414
    6. 'é' → logprob: -11.503732681274414
    7. ')' → logprob: -12.378732681274414
    8. ' ' → logprob: -13.628732681274414
    9. ' elements' → logprob: -13.753732681274414
    10. '   ' → logprob: -14.003732681274414

Token 268: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -2.856408536899835e-05
    2. 'éments' → logprob: -10.750028610229492
    3. 'ment' → logprob: -13.125028610229492
    4. 'ents' → logprob: -13.750028610229492
    5. 'ements' → logprob: -13.750028610229492
    6. 'mé' → logprob: -14.000028610229492
    7. 'm' → logprob: -14.125028610229492
    8. 'lements' → logprob: -14.250028610229492
    9. 'nts' → logprob: -15.625028610229492
    10. '   ' → logprob: -16.375028610229492

Token 269: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03049413301050663
    2. '   ' → logprob: -3.530494213104248
    3. '```' → logprob: -8.53049373626709
    4. ')
' → logprob: -9.03049373626709
    5. '):
' → logprob: -9.03049373626709
    6. '):' → logprob: -9.40549373626709
    7. '<|end|>' → logprob: -9.78049373626709
    8. '
' → logprob: -10.15549373626709
    9. ',' → logprob: -10.40549373626709
    10. ')\' → logprob: -10.90549373626709

Token 270: ' les' (ID: 1341)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6393693089485168
    2. ' v' → logprob: -0.8893693089485168
    3. ')' → logprob: -3.514369249343872
    4. 'n' → logprob: -4.264369487762451
    5. ' la' → logprob: -5.014369487762451
    6. ' n' → logprob: -5.514369487762451
    7. ' les' → logprob: -6.764369487762451
    8. ' the' → logprob: -6.889369487762451
    9. '   ' → logprob: -7.014369487762451
    10. 'the' → logprob: -7.014369487762451

Token 271: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019139941781759262
    2. 'lists' → logprob: -5.019139766693115
    3. ' listes' → logprob: -5.394139766693115
    4. 'de' → logprob: -5.894139766693115
    5. ' ' → logprob: -6.269139766693115
    6. '   ' → logprob: -7.019139766693115
    7. 'liste' → logprob: -7.144139766693115
    8. ' deux' → logprob: -8.144140243530273
    9. 'listas' → logprob: -8.144140243530273
    10. ' list' → logprob: -8.394140243530273

Token 272: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7066230177879333
    2. '   ' → logprob: -0.7066230177879333
    3. ',' → logprob: -5.081623077392578
    4. '
' → logprob: -5.581623077392578
    5. '):' → logprob: -6.581623077392578
    6. '    
' → logprob: -7.706623077392578
    7. '):
' → logprob: -7.831623077392578
    8. '```' → logprob: -8.206623077392578
    9. ')
' → logprob: -8.331623077392578
    10. '  ' → logprob: -9.206623077392578

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006701634731143713
    2. ')' → logprob: -5.881701469421387
    3. '```' → logprob: -6.381701469421387
    4. '
' → logprob: -7.131701469421387
    5. '    
' → logprob: -7.506701469421387
    6. 'v' → logprob: -8.756701469421387
    7. '  ' → logprob: -9.131701469421387
    8. ' ' → logprob: -9.381701469421387
    9. '"""' → logprob: -9.506701469421387
    10. '       ' → logprob: -9.631701469421387

Token 274: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.024600179865956306
    2. ' v' → logprob: -4.149600028991699
    3. '   ' → logprob: -4.774600028991699
    4. '
' → logprob: -10.0246000289917
    5. '	v' → logprob: -11.2746000289917
    6. '       ' → logprob: -11.7746000289917
    7. 'result' → logprob: -12.0246000289917
    8. '  ' → logprob: -12.6496000289917
    9. 'def' → logprob: -12.6496000289917
    10. ' ' → logprob: -12.8996000289917

Token 275: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7367051243782043
    2. '   ' → logprob: -1.6117050647735596
    3. '):' → logprob: -1.8617050647735596
    4. ')' → logprob: -1.9867050647735596
    5. ':' → logprob: -4.111705303192139
    6. '):
' → logprob: -5.236705303192139
    7. ' ,' → logprob: -5.486705303192139
    8. ' :' → logprob: -6.861705303192139
    9. ' ):' → logprob: -7.111705303192139
    10. '  ' → logprob: -8.73670482635498

Token 276: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07266348600387573
    2. ')' → logprob: -3.4476635456085205
    3. 'int' → logprob: -3.4476635456085205
    4. ' list' → logprob: -6.322663307189941
    5. '   ' → logprob: -6.447663307189941
    6. '):' → logprob: -6.697663307189941
    7. 'n' → logprob: -7.072663307189941
    8. '):
' → logprob: -8.197663307189941
    9. ',' → logprob: -8.947663307189941
    10. ':' → logprob: -9.447663307189941

Token 277: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.17859101295471191
    2. '[int' → logprob: -1.928591012954712
    3. 'of' → logprob: -4.053590774536133
    4. '   ' → logprob: -8.428590774536133
    5. '[' → logprob: -8.678590774536133
    6. ')' → logprob: -8.678590774536133
    7. '<int' → logprob: -8.928590774536133
    8. 'int' → logprob: -9.928590774536133
    9. '(int' → logprob: -10.678590774536133
    10. '```' → logprob: -10.803590774536133

Token 278: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0036037517711520195
    2. ' int' → logprob: -5.628603935241699
    3. '[int' → logprob: -13.3786039352417
    4. ')' → logprob: -13.7536039352417
    5. '<int' → logprob: -14.8786039352417
    6. '(int' → logprob: -15.8786039352417
    7. 'ints' → logprob: -16.253602981567383
    8. ']int' → logprob: -16.378602981567383
    9. ',int' → logprob: -16.503602981567383
    10. '   ' → logprob: -16.503602981567383

Token 279: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010104998014867306
    2. ')' → logprob: -4.635105133056641
    3. '):
' → logprob: -8.51010513305664
    4. '   ' → logprob: -9.51010513305664
    5. ' ):' → logprob: -9.88510513305664
    6. '[int' → logprob: -12.01010513305664
    7. ':' → logprob: -12.13510513305664
    8. '[' → logprob: -13.51010513305664
    9. ')):' → logprob: -13.63510513305664
    10. '):

' → logprob: -13.76010513305664

Token 280: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.236738920211792
    2. ' list' → logprob: -1.736738920211792
    3. ' def' → logprob: -4.861739158630371
    4. 'list' → logprob: -4.986739158630371
    5. 'def' → logprob: -5.111739158630371
    6. ' La' → logprob: -5.486739158630371
    7. 'The' → logprob: -6.486739158630371
    8. 'La' → logprob: -6.611739158630371
    9. ' v' → logprob: -6.736739158630371
    10. ')' → logprob: -6.986739158630371

Token 281: ' première' (ID: 23423)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.046937424689531326
    2. 'prem' → logprob: -3.7969374656677246
    3. 'values' → logprob: -4.921937465667725
    4. 'liste' → logprob: -5.296937465667725
    5. 'scores' → logprob: -5.421937465667725
    6. ' valeurs' → logprob: -6.796937465667725
    7. 'list' → logprob: -7.046937465667725
    8. 'cor' → logprob: -7.671937465667725
    9. 'score' → logprob: -7.796937465667725
    10. ' liste' → logprob: -7.796937465667725

Token 282: ' liste' (ID: 31719)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8005905151367188
    2. ',' → logprob: -2.0505905151367188
    3. '   ' → logprob: -2.5505905151367188
    4. '[int' → logprob: -2.5505905151367188
    5. '):' → logprob: -2.5505905151367188
    6. ':' → logprob: -3.5505905151367188
    7. '):
' → logprob: -3.8005905151367188
    8. 'int' → logprob: -4.175590515136719
    9. 'def' → logprob: -4.175590515136719
    10. '[' → logprob: -4.300590515136719

Token 283: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09922093152999878
    2. '):' → logprob: -2.9742209911346436
    3. ' of' → logprob: -4.3492207527160645
    4. '   ' → logprob: -4.5992207527160645
    5. ')' → logprob: -4.8492207527160645
    6. ',' → logprob: -5.5992207527160645
    7. '):
' → logprob: -5.9742207527160645
    8. 'of' → logprob: -6.2242207527160645
    9. '<int' → logprob: -6.5992207527160645
    10. '<|end|>' → logprob: -7.2242207527160645

Token 284: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.7200469970703125
    2. 'int' → logprob: -0.8450469970703125
    3. 'ent' → logprob: -2.9700469970703125
    4. 'ints' → logprob: -4.2200469970703125
    5. ''int' → logprob: -4.3450469970703125
    6. ')' → logprob: -6.7200469970703125
    7. ' ent' → logprob: -7.2200469970703125
    8. 'inte' → logprob: -7.5950469970703125
    9. '’ent' → logprob: -7.7200469970703125
    10. 'n' → logprob: -7.9700469970703125

Token 285: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.06093589961528778
    2. 't' → logprob: -3.5609359741210938
    3. 'ents' → logprob: -4.060935974121094
    4. 'ts' → logprob: -6.185935974121094
    5. 'ters' → logprob: -6.185935974121094
    6. 'ints' → logprob: -6.560935974121094
    7. 'ants' → logprob: -6.685935974121094
    8. 'ières' → logprob: -6.935935974121094
    9. 'ités' → logprob: -7.310935974121094
    10. 'eurs' → logprob: -7.560935974121094

Token 286: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0807880312204361
    2. ')' → logprob: -3.5807881355285645
    3. ')
' → logprob: -3.5807881355285645
    4. '):
' → logprob: -4.0807881355285645
    5. ',' → logprob: -6.2057881355285645
    6. 'def' → logprob: -6.8307881355285645
    7. '):' → logprob: -6.9557881355285645
    8. '
' → logprob: -7.9557881355285645
    9. ',
' → logprob: -8.330787658691406
    10. '"""
' → logprob: -9.080787658691406

Token 287: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5341123938560486
    2. 'c' → logprob: -0.9091123938560486
    3. ' c' → logprob: -4.534112453460693
    4. '       ' → logprob: -9.909111976623535
    5. '	c' → logprob: -10.034111976623535
    6. ' ' → logprob: -10.159111976623535
    7. '  ' → logprob: -10.909111976623535
    8. '
' → logprob: -11.034111976623535
    9. '    ' → logprob: -11.659111976623535
    10. 'def' → logprob: -11.784111976623535

Token 288: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.11567050218582153
    2. ' c' → logprob: -2.2406704425811768
    3. '   ' → logprob: -5.865670680999756
    4. '
' → logprob: -12.365670204162598
    5. ' ' → logprob: -13.115670204162598
    6. 'def' → logprob: -14.240670204162598
    7. '	c' → logprob: -14.240670204162598
    8. '  ' → logprob: -14.365670204162598
    9. '       ' → logprob: -14.490670204162598
    10. '    ' → logprob: -16.115671157836914

Token 289: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0008034338243305683
    2. ')' → logprob: -8.125802993774414
    3. '(list' → logprob: -8.500802993774414
    4. ':' → logprob: -8.625802993774414
    5. '   ' → logprob: -9.875802993774414
    6. '(int' → logprob: -10.125802993774414
    7. ' :' → logprob: -11.625802993774414
    8. ' of' → logprob: -12.375802993774414
    9. '):' → logprob: -12.500802993774414
    10. ',' → logprob: -12.625802993774414

Token 290: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001269162748940289
    2. ' list' → logprob: -7.251269340515137
    3. 'int' → logprob: -7.501269340515137
    4. '   ' → logprob: -12.501269340515137
    5. ')' → logprob: -13.501269340515137
    6. '       ' → logprob: -14.876269340515137
    7. '[list' → logprob: -15.501269340515137
    8. '(list' → logprob: -16.12626838684082
    9. ' int' → logprob: -16.12626838684082
    10. '  ' → logprob: -16.12626838684082

Token 291: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.39016225934028625
    2. 'of' → logprob: -1.1401622295379639
    3. '   ' → logprob: -6.515162467956543
    4. '):' → logprob: -7.140162467956543
    5. 'int' → logprob: -7.890162467956543
    6. ')' → logprob: -8.265162467956543
    7. '[int' → logprob: -8.265162467956543
    8. '):
' → logprob: -10.390162467956543
    9. ',' → logprob: -11.015162467956543
    10. 'def' → logprob: -11.140162467956543

Token 292: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009770254604518414
    2. ' int' → logprob: -4.634770393371582
    3. '[int' → logprob: -12.134770393371582
    4. ' ' → logprob: -12.634770393371582
    5. '(int' → logprob: -13.884770393371582
    6. '   ' → logprob: -14.009770393371582
    7. '<int' → logprob: -14.259770393371582
    8. ']int' → logprob: -14.384770393371582
    9. 'def' → logprob: -14.634770393371582
    10. ')' → logprob: -14.759770393371582

Token 293: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04974224418401718
    2. '):
' → logprob: -3.0497422218322754
    3. ')' → logprob: -7.799742221832275
    4. '   ' → logprob: -8.174742698669434
    5. ':' → logprob: -8.174742698669434
    6. '):

' → logprob: -9.424742698669434
    7. ' ):' → logprob: -10.049742698669434
    8. 'def' → logprob: -10.674742698669434
    9. '):
' → logprob: -12.174742698669434
    10. ':list' → logprob: -12.549742698669434

Token 294: ' La' (ID: 3038)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5742794871330261
    2. ' list' → logprob: -0.9492794871330261
    3. 'int' → logprob: -3.699279546737671
    4. '   ' → logprob: -3.824279546737671
    5. 'def' → logprob: -6.074279308319092
    6. ' int' → logprob: -8.07427978515625
    7. ' def' → logprob: -8.07427978515625
    8. 'List' → logprob: -8.69927978515625
    9. 'n' → logprob: -10.57427978515625
    10. '
' → logprob: -10.69927978515625

Token 295: ' seconde' (ID: 66204)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06439567357301712
    2. ' list' → logprob: -3.0643956661224365
    3. 'def' → logprob: -5.064395904541016
    4. 'second' → logprob: -5.814395904541016
    5. 'int' → logprob: -6.439395904541016
    6. 'for' → logprob: -6.939395904541016
    7. 'liste' → logprob: -7.064395904541016
    8. 'range' → logprob: -7.689395904541016
    9. ' liste' → logprob: -7.814395904541016
    10. 'c' → logprob: -7.939395904541016

Token 296: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7870792746543884
    2. 'list' → logprob: -0.9120792746543884
    3. '(list' → logprob: -2.662079334259033
    4. ' of' → logprob: -3.787079334259033
    5. '_list' → logprob: -4.537079334259033
    6. '[list' → logprob: -4.662079334259033
    7. 'of' → logprob: -5.037079334259033
    8. 'def' → logprob: -5.287079334259033
    9. '[int' → logprob: -5.287079334259033
    10. '```' → logprob: -5.537079334259033

Token 297: ' d' (ID: 272)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07162169367074966
    2. 'of' → logprob: -3.1966216564178467
    3. ' d' → logprob: -4.946621894836426
    4. '[int' → logprob: -5.196621894836426
    5. '   ' → logprob: -5.446621894836426
    6. 'def' → logprob: -5.696621894836426
    7. 'int' → logprob: -5.821621894836426
    8. 'd' → logprob: -5.946621894836426
    9. ':' → logprob: -6.696621894836426
    10. '):' → logprob: -7.946621894836426

Token 298: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0063964310102164745
    2. ' int' → logprob: -5.131396293640137
    3. '[int' → logprob: -8.131396293640137
    4. 'ints' → logprob: -9.631396293640137
    5. '(int' → logprob: -10.381396293640137
    6. ',int' → logprob: -10.881396293640137
    7. '=int' → logprob: -11.256396293640137
    8. '<int' → logprob: -11.381396293640137
    9. 'ent' → logprob: -11.881396293640137
    10. ']int' → logprob: -12.131396293640137

Token 299: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3600021302700043
    2. 'ints' → logprob: -1.6100021600723267
    3. 'ents' → logprob: -3.610002040863037
    4. '   ' → logprob: -4.110002040863037
    5. 'ières' → logprob: -4.860002040863037
    6. 'ieurs' → logprob: -4.860002040863037
    7. 'aires' → logprob: -4.985002040863037
    8. 'érieurs' → logprob: -5.235002040863037
    9. 'ers' → logprob: -5.610002040863037
    10. 'éros' → logprob: -5.860002040863037

Token 300: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2911159098148346
    2. '   ' → logprob: -1.7911158800125122
    3. '):' → logprob: -2.6661159992218018
    4. ')' → logprob: -4.166115760803223
    5. ')
' → logprob: -8.041115760803223
    6. '
' → logprob: -8.416115760803223
    7. '):
' → logprob: -9.416115760803223
    8. '):

' → logprob: -9.666115760803223
    9. '"""
' → logprob: -11.291115760803223
    10. '```' → logprob: -11.291115760803223

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000815466046333313
    2. '
' → logprob: -7.750815391540527
    3. 'result' → logprob: -8.500815391540527
    4. '"""
' → logprob: -9.625815391540527
    5. '    
' → logprob: -9.750815391540527
    6. '"""' → logprob: -10.750815391540527
    7. '```' → logprob: -10.875815391540527
    8. ' result' → logprob: -12.125815391540527
    9. ')' → logprob: -13.000815391540527
    10. 'Returns' → logprob: -13.125815391540527

Token 302: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.20388944447040558
    2. '   ' → logprob: -1.9538894891738892
    3. '"""
' → logprob: -3.2038893699645996
    4. 'returns' → logprob: -7.0788893699646
    5. '
' → logprob: -7.4538893699646
    6. '"""' → logprob: -7.8288893699646
    7. 'result' → logprob: -9.078889846801758
    8. 'return' → logprob: -10.203889846801758
    9. ' Returns' → logprob: -10.203889846801758
    10. '    
' → logprob: -10.453889846801758

Token 303: ':
' (ID: 734)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11857996135950089
    2. '   ' → logprob: -2.618579864501953
    3. 'int' → logprob: -3.993579864501953
    4. ':' → logprob: -4.618579864501953
    5. '(int' → logprob: -5.618579864501953
    6. ':
' → logprob: -6.493579864501953
    7. '[int' → logprob: -6.493579864501953
    8. ':int' → logprob: -6.868579864501953
    9. '    ' → logprob: -6.993579864501953
    10. ' :' → logprob: -7.618579864501953

Token 304: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18175536394119263
    2. 'int' → logprob: -2.181755304336548
    3. '   ' → logprob: -2.931755304336548
    4. '
' → logprob: -11.181755065917969
    5. ' sum' → logprob: -11.681755065917969
    6. '(int' → logprob: -11.931755065917969
    7. 'sum' → logprob: -12.431755065917969
    8. '    ' → logprob: -12.681755065917969
    9. '  ' → logprob: -13.056755065917969
    10. '0' → logprob: -13.556755065917969

Token 305: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.002566979732364416
    2. ' int' → logprob: -6.127566814422607
    3. '   ' → logprob: -7.877566814422607
    4. '
' → logprob: -13.127567291259766
    5. '(int' → logprob: -15.252567291259766
    6. '```' → logprob: -15.627567291259766
    7. '[int' → logprob: -16.502567291259766
    8. '	int' → logprob: -17.127567291259766
    9. '    
' → logprob: -17.252567291259766
    10. '       ' → logprob: -17.502567291259766

Token 306: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019212529296055436
    2. '   ' → logprob: -6.7519211769104
    3. ':
' → logprob: -7.6269211769104
    4. ' :' → logprob: -8.501921653747559
    5. ':return' → logprob: -11.251921653747559
    6. '):' → logprob: -11.376921653747559
    7. 'result' → logprob: -11.751921653747559
    8. ')' → logprob: -12.001921653747559
    9. ' =' → logprob: -12.626921653747559
    10. '):
' → logprob: -13.001921653747559

Token 307: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.8497464656829834
    2. '   ' → logprob: -0.9747464656829834
    3. 'La' → logprob: -1.7247464656829834
    4. ' Le' → logprob: -4.8497467041015625
    5. ' la' → logprob: -5.0997467041015625
    6. 'Le' → logprob: -5.9747467041015625
    7. ' sum' → logprob: -8.724746704101562
    8. '    ' → logprob: -9.349746704101562
    9. ' le' → logprob: -9.724746704101562
    10. ' result' → logprob: -10.099746704101562

Token 308: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07716310769319534
    2. ' somme' → logprob: -2.8271632194519043
    3. 'sum' → logprob: -4.327163219451904
    4. 'som' → logprob: -7.327163219451904
    5. '   ' → logprob: -7.327163219451904
    6. ' sum' → logprob: -8.952162742614746
    7. 'score' → logprob: -8.952162742614746
    8. 'positive' → logprob: -9.327162742614746
    9. ' positive' → logprob: -9.952162742614746
    10. 'total' → logprob: -10.327162742614746

Token 309: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15377408266067505
    2. 'des' → logprob: -2.1537740230560303
    3. 'max' → logprob: -4.278774261474609
    4. '(' → logprob: -5.153774261474609
    5. '   ' → logprob: -5.903774261474609
    6. '(max' → logprob: -6.778774261474609
    7. '(
' → logprob: -7.028774261474609
    8. '(score' → logprob: -7.653774261474609
    9. ' maximale' → logprob: -7.903774261474609
    10. '_des' → logprob: -8.65377426147461

Token 310: ' toutes' (ID: 17502)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.7330383658409119
    2. 'scores' → logprob: -1.4830384254455566
    3. 'max' → logprob: -2.1080384254455566
    4. ' score' → logprob: -3.1080384254455566
    5. ' max' → logprob: -3.8580384254455566
    6. 'les' → logprob: -3.8580384254455566
    7. 't' → logprob: -3.9830384254455566
    8. ' scores' → logprob: -4.108038425445557
    9. 's' → logprob: -4.483038425445557
    10. ' tous' → logprob: -4.608038425445557

Token 311: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.47103357315063477
    2. 'les' → logprob: -1.9710335731506348
    3. ' des' → logprob: -2.0960335731506348
    4. '(score' → logprob: -3.0960335731506348
    5. 'score' → logprob: -3.8460335731506348
    6. '   ' → logprob: -4.346033573150635
    7. 'scores' → logprob: -4.471033573150635
    8. ' score' → logprob: -5.221033573150635
    9. 'des' → logprob: -5.471033573150635
    10. 'max' → logprob: -5.596033573150635

Token 312: ' différences' (ID: 175718)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.25255268812179565
    2. 'scores' → logprob: -2.3775527477264404
    3. 'dif' → logprob: -3.2525527477264404
    4. '   ' → logprob: -3.5025527477264404
    5. ' différences' → logprob: -3.8775527477264404
    6. 'val' → logprob: -4.252552509307861
    7. ' diff' → logprob: -4.627552509307861
    8. ' scores' → logprob: -5.127552509307861
    9. ' valeurs' → logprob: -6.002552509307861
    10. 'part' → logprob: -6.752552509307861

Token 313: ' positives' (ID: 95584)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.47702956199645996
    2. ' positives' → logprob: -1.22702956199646
    3. '   ' → logprob: -2.85202956199646
    4. ' positive' → logprob: -4.727029800415039
    5. 'positive' → logprob: -4.727029800415039
    6. '>' → logprob: -5.852029800415039
    7. ' posit' → logprob: -6.352029800415039
    8. 'pos' → logprob: -6.727029800415039
    9. ' positivas' → logprob: -7.102029800415039
    10. '```' → logprob: -7.602029800415039

Token 314: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07583995908498764
    2. '.' → logprob: -2.9508399963378906
    3. '
' → logprob: -4.575839996337891
    4. '       ' → logprob: -5.950839996337891
    5. '    
' → logprob: -6.575839996337891
    6. '.
' → logprob: -6.700839996337891
    7. 'def' → logprob: -7.075839996337891
    8. ')' → logprob: -7.700839996337891
    9. '\n' → logprob: -8.07583999633789
    10. ' entre' → logprob: -8.07583999633789

Token 315: 'v' (ID: 85)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17994409799575806
    2. 'v' → logprob: -2.3049440383911133
    3. ' )' → logprob: -3.8049440383911133
    4. '   ' → logprob: -3.9299440383911133
    5. ' v' → logprob: -4.929944038391113
    6. 'scores' → logprob: -5.054944038391113
    7. 'score' → logprob: -5.679944038391113
    8. ')v' → logprob: -6.179944038391113
    9. '       ' → logprob: -7.304944038391113
    10. ' des' → logprob: -8.179944038391113

Token 316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.15441757265944e-05
    2. '[' → logprob: -10.625031471252441
    3. 'if' → logprob: -13.375031471252441
    4. 'i' → logprob: -13.500031471252441
    5. '   ' → logprob: -13.750031471252441
    6. '>' → logprob: -14.250031471252441
    7. 'import' → logprob: -14.500031471252441
    8. ')' → logprob: -15.000031471252441
    9. '[
' → logprob: -15.000031471252441
    10. 'def' → logprob: -15.250031471252441

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007411993574351072
    2. '[i' → logprob: -5.132411956787109
    3. ' -' → logprob: -7.382411956787109
    4. '   ' → logprob: -8.38241195678711
    5. ']-' → logprob: -8.38241195678711
    6. '-' → logprob: -8.63241195678711
    7. ' ]' → logprob: -8.88241195678711
    8. '>' → logprob: -11.00741195678711
    9. ']>' → logprob: -11.25741195678711
    10. ' ' → logprob: -11.50741195678711

Token 318: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11405939608812332
    2. '-' → logprob: -2.2390594482421875
    3. '>' → logprob: -7.7390594482421875
    4. '   ' → logprob: -8.114059448242188
    5. ' >' → logprob: -8.364059448242188
    6. '[i' → logprob: -9.364059448242188
    7. ' ' → logprob: -9.739059448242188
    8. ')' → logprob: -10.114059448242188
    9. 'if' → logprob: -11.114059448242188
    10. '-c' → logprob: -11.614059448242188

Token 319: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5772939324378967
    2. ' c' → logprob: -0.8272939324378967
    3. '   ' → logprob: -6.702293872833252
    4. '    ' → logprob: -10.70229434967041
    5. ')c' → logprob: -10.70229434967041
    6. '       ' → logprob: -10.95229434967041
    7. ')' → logprob: -11.20229434967041
    8. ' ' → logprob: -11.32729434967041
    9. '	c' → logprob: -11.57729434967041
    10. '           ' → logprob: -12.45229434967041

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. ')[' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.500006675720215
    4. ')' → logprob: -14.125006675720215
    5. 'i' → logprob: -14.375006675720215
    6. 'if' → logprob: -15.125006675720215
    7. '[' → logprob: -16.1250057220459
    8. ' [' → logprob: -16.3750057220459
    9. '
' → logprob: -17.1250057220459
    10. '[
' → logprob: -17.3750057220459

Token 321: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5872357487678528
    2. ')' → logprob: -0.8372357487678528
    3. ']' → logprob: -5.212235927581787
    4. '[i' → logprob: -6.587235927581787
    5. '))' → logprob: -6.712235927581787
    6. '])
' → logprob: -6.837235927581787
    7. ']).' → logprob: -7.712235927581787
    8. 'if' → logprob: -8.337235450744629
    9. ')
' → logprob: -8.337235450744629
    10. ' if' → logprob: -8.337235450744629

Token 322: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14473894238471985
    2. '
' → logprob: -2.5197389125823975
    3. '.' → logprob: -3.5197389125823975
    4. ')' → logprob: -4.519739151000977
    5. ')
' → logprob: -5.644739151000977
    6. '.
' → logprob: -6.269739151000977
    7. 'def' → logprob: -6.519739151000977
    8. '    
' → logprob: -6.519739151000977
    9. ').' → logprob: -6.644739151000977
    10. ' if' → logprob: -7.019739151000977

Token 323: ' lesquelles' (ID: 116062)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6103686094284058
    2. 'i' → logprob: -1.3603686094284058
    3. ' lesquelles' → logprob: -2.1103687286376953
    4. ' which' → logprob: -3.3603687286376953
    5. ' lesquels' → logprob: -4.360368728637695
    6. 'which' → logprob: -4.485368728637695
    7. ' laquelle' → logprob: -4.860368728637695
    8. '   ' → logprob: -5.235368728637695
    9. ' lequel' → logprob: -5.485368728637695
    10. ' les' → logprob: -7.235368728637695

Token 324: ' cette' (ID: 7696)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.1450725644826889
    2. ' score' → logprob: -2.2700724601745605
    3. 'v' → logprob: -3.7700724601745605
    4. ' v' → logprob: -4.8950724601745605
    5. '(score' → logprob: -7.2700724601745605
    6. ' (' → logprob: -8.770072937011719
    7. '(v' → logprob: -8.895072937011719
    8. '```' → logprob: -9.895072937011719
    9. ' le' → logprob: -10.770072937011719
    10. ' ' → logprob: -11.145072937011719

Token 325: ' différence' (ID: 79196)
  Prédit: ' différence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différence' → logprob: -0.43464168906211853
    2. 'diff' → logprob: -2.0596415996551514
    3. 'difference' → logprob: -3.0596415996551514
    4. '>' → logprob: -3.5596415996551514
    5. ' is' → logprob: -3.8096415996551514
    6. ' valeur' → logprob: -3.9346415996551514
    7. ' difference' → logprob: -4.0596418380737305
    8. 'score' → logprob: -4.6846418380737305
    9. 'val' → logprob: -4.8096418380737305
    10. ' condition' → logprob: -4.9346418380737305

Token 326: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14287729561328888
    2. '>' → logprob: -2.0178773403167725
    3. ' est' → logprob: -9.392877578735352
    4. '">' → logprob: -10.142877578735352
    5. 'est' → logprob: -10.892877578735352
    6. '   ' → logprob: -11.267877578735352
    7. ' dépasse' → logprob: -11.392877578735352
    8. ' ' → logprob: -11.517877578735352
    9. ' is' → logprob: -12.392877578735352
    10. ' ' → logprob: -12.517877578735352

Token 327: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3375473916530609
    2. ' positive' → logprob: -1.8375474214553833
    3. 'positive' → logprob: -2.7125473022460938
    4. ' >' → logprob: -3.3375473022460938
    5. 'strict' → logprob: -3.9625473022460938
    6. ' supérieure' → logprob: -5.712547302246094
    7. 'sup' → logprob: -6.712547302246094
    8. '   ' → logprob: -6.962547302246094
    9. ' strict' → logprob: -8.087547302246094
    10. 'posit' → logprob: -9.212547302246094

Token 328: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0011755822924897075
    2. 'ly' → logprob: -7.126175403594971
    3. '>' → logprob: -8.626175880432129
    4. 'ment' → logprob: -9.501175880432129
    5. 'lement' → logprob: -9.876175880432129
    6. 'e' → logprob: -10.251175880432129
    7. 'ely' → logprob: -11.501175880432129
    8. 'ements' → logprob: -12.251175880432129
    9. 'emente' → logprob: -12.876175880432129
    10. 'ément' → logprob: -13.126175880432129

Token 329: ' positive' (ID: 8841)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.023595651611685753
    2. ' >' → logprob: -4.648595809936523
    3. 'positive' → logprob: -5.148595809936523
    4. 'sup' → logprob: -6.023595809936523
    5. ' positive' → logprob: -6.148595809936523
    6. ' supérieure' → logprob: -6.148595809936523
    7. 'greater' → logprob: -7.773595809936523
    8. ')' → logprob: -8.273595809936523
    9. ' ' → logprob: -9.273595809936523
    10. '">' → logprob: -9.648595809936523

Token 330: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10646726936101913
    2. ')' → logprob: -3.3564672470092773
    3. '
' → logprob: -3.4814672470092773
    4. '   ' → logprob: -3.6064672470092773
    5. '.
' → logprob: -5.481467247009277
    6. 'def' → logprob: -6.856467247009277
    7. ',' → logprob: -6.856467247009277
    8. ').' → logprob: -7.856467247009277
    9. '}' → logprob: -7.981467247009277
    10. '\n' → logprob: -7.981467247009277

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018259541830047965
    2. ')' → logprob: -7.50182580947876
    3. '
' → logprob: -7.50182580947876
    4. '    
' → logprob: -8.376826286315918
    5. 'result' → logprob: -8.626826286315918
    6. '"""' → logprob: -9.251826286315918
    7. '```' → logprob: -9.376826286315918
    8. ' result' → logprob: -9.626826286315918
    9. 'def' → logprob: -11.126826286315918
    10. '"""
' → logprob: -11.251826286315918

Token 332: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013310716021806002
    2. '"""' → logprob: -7.001330852508545
    3. '
' → logprob: -9.001331329345703
    4. ')' → logprob: -9.376331329345703
    5. '"""
' (adapté à ' """
') → logprob: -9.751331329345703
    6. '    
' → logprob: -10.126331329345703
    7. 'def' → logprob: -10.251331329345703
    8. 'result' → logprob: -10.376331329345703
    9. '```' → logprob: -10.376331329345703
    10. '  ' → logprob: -12.626331329345703

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.395346075296402
    2. 'result' → logprob: -1.1453460454940796
    3. ' result' → logprob: -5.145346164703369
    4. 'total' → logprob: -6.145346164703369
    5. 'score' → logprob: -8.020345687866211
    6. ' total' → logprob: -9.895345687866211
    7. 'def' → logprob: -10.395345687866211
    8. 's' → logprob: -11.145345687866211
    9. 'sum' → logprob: -11.270345687866211
    10. '
' → logprob: -11.770345687866211

Token 334: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3522683382034302
    2. 'total' → logprob: -1.3522683382034302
    3. 'score' → logprob: -3.3522682189941406
    4. '   ' → logprob: -5.852268218994141
    5. ' result' → logprob: -8.97726821899414
    6. 'positive' → logprob: -9.22726821899414
    7. ' total' → logprob: -9.85226821899414
    8. 'return' → logprob: -10.22726821899414
    9. 'res' → logprob: -10.22726821899414
    10. 's' → logprob: -11.85226821899414

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.725207328796387
    4. '   ' → logprob: -15.850207328796387
    5. '_' → logprob: -16.85020637512207
    6. ' +=' → logprob: -17.85020637512207
    7. 's' → logprob: -17.97520637512207
    8. '  ' → logprob: -18.60020637512207
    9. ' ' → logprob: -18.72520637512207
    10. ')' → logprob: -19.10020637512207

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.000015258789062
    4. 'sum' → logprob: -21.125015258789062
    5. '  ' → logprob: -23.250015258789062
    6. '۰' → logprob: -23.375015258789062
    7. ' ' → logprob: -23.625015258789062
    8. '00' → logprob: -23.625015258789062
    9. '000' → logprob: -24.250015258789062
    10. '```' → logprob: -24.250015258789062

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'sum' → logprob: -18.125
    4. '   ' → logprob: -19.625
    5. '000' → logprob: -22.25
    6. '00' → logprob: -22.375
    7. '۰' → logprob: -23.0
    8. '  ' → logprob: -23.5
    9. '０' → logprob: -23.5
    10. '```' → logprob: -23.75

Token 338: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4788185954093933
    2. '
' → logprob: -0.9788185954093933
    3. ' for' → logprob: -5.853818416595459
    4. 'for' → logprob: -6.728818416595459
    5. '    
' → logprob: -7.353818416595459
    6. ' 
' → logprob: -12.228818893432617
    7. '\n' → logprob: -12.228818893432617
    8. '	for' → logprob: -12.228818893432617
    9. '	
' → logprob: -12.728818893432617
    10. '
' → logprob: -12.978818893432617

Token 339: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.373591810464859
    2. 'for' → logprob: -1.3735917806625366
    3. '   ' → logprob: -2.873591899871826
    4. ' for' → logprob: -6.248591899871826
    5. '    
' → logprob: -9.248591423034668
    6. '	for' → logprob: -11.748591423034668
    7. ' 
' → logprob: -12.373591423034668
    8. '\n' → logprob: -13.123591423034668
    9. '   
' → logprob: -13.123591423034668
    10. '
' → logprob: -13.123591423034668

Token 340: ' Variable' (ID: 36336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009401659481227398
    2. ' for' → logprob: -7.000940322875977
    3. '   ' → logprob: -10.500940322875977
    4. 'i' → logprob: -15.000940322875977
    5. '
' → logprob: -15.250940322875977
    6. 'result' → logprob: -15.375940322875977
    7. ' ' → logprob: -16.125940322875977
    8. '0' → logprob: -16.875940322875977
    9. '_' → logprob: -17.250940322875977
    10. '	for' → logprob: -17.500940322875977

Token 341: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1166014671325684
    2. '   ' → logprob: -1.2416014671325684
    3. '=' → logprob: -1.3666014671325684
    4. 'for' → logprob: -2.9916014671325684
    5. ' for' → logprob: -3.4916014671325684
    6. ' +=' → logprob: -3.8666014671325684
    7. ' ' → logprob: -4.241601467132568
    8. '_' → logprob: -4.741601467132568
    9. '  ' → logprob: -6.991601467132568
    10. ')' → logprob: -7.491601467132568

Token 342: ' stock' (ID: 6546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0040513277053833
    2. ' i' → logprob: -1.0040513277053833
    3. '_' → logprob: -1.6290513277053833
    4. ' _' → logprob: -4.379051208496094
    5. 'sum' → logprob: -4.379051208496094
    6. 'score' → logprob: -4.879051208496094
    7. ' score' → logprob: -4.879051208496094
    8. ' result' → logprob: -5.129051208496094
    9. 'result' → logprob: -5.504051208496094
    10. ' ' → logprob: -5.754051208496094

Token 343: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.039406318217515945
    2. '   ' → logprob: -3.2894062995910645
    3. '=' → logprob: -7.1644062995910645
    4. ' ' → logprob: -8.664406776428223
    5. '  ' → logprob: -9.289406776428223
    6. ' =' → logprob: -9.414406776428223
    7. 'e' → logprob: -9.414406776428223
    8. 'ation' → logprob: -10.164406776428223
    9. 'iner' → logprob: -10.289406776428223
    10. '    ' → logprob: -11.539406776428223

Token 344: ' la' (ID: 557)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.9025859832763672
    2. 'result' → logprob: -1.1525859832763672
    3. ' la' → logprob: -2.027585983276367
    4. ' ' → logprob: -3.027585983276367
    5. '   ' → logprob: -3.527585983276367
    6. ' i' → logprob: -3.777585983276367
    7. ' le' → logprob: -3.902585983276367
    8. 'i' → logprob: -4.777585983276367
    9. ' the' → logprob: -5.652585983276367
    10. ' les' → logprob: -6.027585983276367

Token 345: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030525585636496544
    2. 'som' → logprob: -4.9055256843566895
    3. 'total' → logprob: -4.9055256843566895
    4. ' somme' → logprob: -5.1555256843566895
    5. 'score' → logprob: -5.2805256843566895
    6. 'sum' → logprob: -5.6555256843566895
    7. 'for' → logprob: -7.9055256843566895
    8. 'result' → logprob: -8.780525207519531
    9. '   ' → logprob: -9.280525207519531
    10. '
' → logprob: -9.655525207519531

Token 346: ' finale' (ID: 37759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05350779369473457
    2. '
' → logprob: -3.3035078048706055
    3. ' for' → logprob: -4.6785078048706055
    4. 'for' → logprob: -5.3035078048706055
    5. '    
' → logprob: -7.0535078048706055
    6. '	for' → logprob: -9.553507804870605
    7. '  
' → logprob: -10.428507804870605
    8. ' ' → logprob: -10.678507804870605
    9. '\n' → logprob: -10.678507804870605
    10. '  ' → logprob: -10.803507804870605

Token 347: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06866676360368729
    2. '
' → logprob: -2.818666696548462
    3. '    
' → logprob: -5.318666934967041
    4. 'for' → logprob: -6.943666934967041
    5. ' for' → logprob: -7.318666934967041
    6. '\n' → logprob: -9.443666458129883
    7. '  
' → logprob: -11.068666458129883
    8. ' 
' → logprob: -11.318666458129883
    9. '   
' → logprob: -11.318666458129883
    10. '	for' → logprob: -11.568666458129883

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035554397851228714
    2. 'for' → logprob: -3.5355544090270996
    3. ' for' → logprob: -5.1605544090271
    4. '
' → logprob: -10.660553932189941
    5. '	for' → logprob: -10.910553932189941
    6. '    
' → logprob: -12.160553932189941
    7. '  ' → logprob: -15.035553932189941
    8. '   ' → logprob: -15.035553932189941
    9. '```' → logprob: -15.410553932189941
    10. ' ' → logprob: -15.410553932189941

Token 349: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00046630011638626456
    2. '   ' → logprob: -7.750466346740723
    3. ' for' → logprob: -10.250466346740723
    4. '	for' → logprob: -16.000465393066406
    5. '
' → logprob: -16.875465393066406
    6. 'i' → logprob: -17.000465393066406
    7. '```' → logprob: -18.125465393066406
    8. ' ' → logprob: -18.625465393066406
    9. '    
' → logprob: -18.750465393066406
    10. 'fo' → logprob: -19.125465393066406

Token 350: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16023194789886475
    2. ' i' → logprob: -1.9102319478988647
    3. '	i' → logprob: -12.160231590270996
    4. ' ' → logprob: -13.785231590270996
    5. '   ' → logprob: -13.910231590270996
    6. '_i' → logprob: -15.910231590270996
    7. '```' → logprob: -16.660232543945312
    8. 'I' → logprob: -16.785232543945312
    9. ' ' → logprob: -17.035232543945312
    10. '  ' → logprob: -17.285232543945312

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005261033773422241
    2. 'in' → logprob: -5.255260944366455
    3. ' ' → logprob: -10.630261421203613
    4. 'range' → logprob: -13.880261421203613
    5. ',' → logprob: -14.880261421203613
    6. ' i' → logprob: -15.005261421203613
    7. ' range' → logprob: -15.505261421203613
    8. '   ' → logprob: -15.505261421203613
    9. ')' → logprob: -15.755261421203613
    10. '	in' → logprob: -16.130260467529297

Token 352: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.69315105676651
    2. 'range' → logprob: -0.69315105676651
    3. '(range' → logprob: -13.943151473999023
    4. '	range' → logprob: -13.943151473999023
    5. ' ' → logprob: -14.068151473999023
    6. '   ' → logprob: -14.818151473999023
    7. ' xrange' → logprob: -15.068151473999023
    8. ' in' → logprob: -15.443151473999023
    9. ')' → logprob: -16.318151473999023
    10. 'rang' → logprob: -16.818151473999023

Token 353: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01816680282354355
    2. '(' → logprob: -4.018167018890381
    3. ' (' → logprob: -11.268166542053223
    4. '(
' → logprob: -12.518166542053223
    5. 'n' → logprob: -15.393166542053223
    6. ' n' → logprob: -15.893166542053223
    7. ')' → logprob: -17.26816749572754
    8. '(len' → logprob: -17.64316749572754
    9. '(i' → logprob: -17.64316749572754
    10. '(nn' → logprob: -18.39316749572754

Token 354: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030697984038852155
    2. '):
' → logprob: -8.250307083129883
    3. ' ):' → logprob: -10.875307083129883
    4. ')' → logprob: -11.125307083129883
    5. '   ' → logprob: -12.000307083129883
    6. ':' → logprob: -12.125307083129883
    7. '):
' → logprob: -15.375307083129883
    8. '():' → logprob: -17.125307083129883
    9. '):

' → logprob: -17.375307083129883
    10. ' ' → logprob: -17.500307083129883

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00275602238252759
    2. ' score' → logprob: -6.627756118774414
    3. 'score' → logprob: -7.377756118774414
    4. ' if' → logprob: -7.627756118774414
    5. '   ' → logprob: -9.252756118774414
    6. 'if' → logprob: -9.752756118774414
    7. '
' → logprob: -10.252756118774414
    8. 'result' → logprob: -10.377756118774414
    9. ' result' → logprob: -10.502756118774414
    10. '        
' → logprob: -10.502756118774414

Token 356: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.002083047293126583
    2. ' score' → logprob: -6.377082824707031
    3. '       ' → logprob: -8.002082824707031
    4. '   ' → logprob: -10.502082824707031
    5. 'diff' → logprob: -11.627082824707031
    6. 'result' → logprob: -12.377082824707031
    7. 'difference' → logprob: -12.627082824707031
    8. '	score' → logprob: -14.127082824707031
    9. 'if' → logprob: -14.627082824707031
    10. '           ' → logprob: -16.25208282470703

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048593275249004364
    2. '=' → logprob: -3.048593282699585
    3. ' ' → logprob: -12.548593521118164
    4. '>' → logprob: -14.048593521118164
    5. '   ' → logprob: -14.548593521118164
    6. '    ' → logprob: -15.423593521118164
    7. ' +=' → logprob: -15.673593521118164
    8. '	' → logprob: -15.798593521118164
    9. ' =
' → logprob: -15.798593521118164
    10. '_' → logprob: -16.423593521118164

Token 358: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20141421258449554
    2. 'v' → logprob: -1.7014142274856567
    3. '	v' → logprob: -14.201414108276367
    4. '   ' → logprob: -15.951414108276367
    5. '(v' → logprob: -16.201414108276367
    6. '    ' → logprob: -17.076414108276367
    7. '_v' → logprob: -17.576414108276367
    8. ' ' → logprob: -17.826414108276367
    9. ' ' → logprob: -17.951414108276367
    10. ' (' → logprob: -18.326414108276367

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.602024900028482e-05
    2. '[' → logprob: -9.375085830688477
    3. ' [' → logprob: -13.750085830688477
    4. '[I' → logprob: -17.000085830688477
    5. '[
' → logprob: -17.375085830688477
    6. '[idx' → logprob: -19.375085830688477
    7. '[index' → logprob: -19.500085830688477
    8. 'i' → logprob: -19.625085830688477
    9. '```' → logprob: -19.750085830688477
    10. '   ' → logprob: -20.000085830688477

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01319035142660141
    2. ')' → logprob: -4.888190269470215
    3. ' -' → logprob: -5.638190269470215
    4. '-' → logprob: -6.388190269470215
    5. ' ]' → logprob: -8.513190269470215
    6. '       ' → logprob: -10.513190269470215
    7. '[' → logprob: -10.763190269470215
    8. '   ' → logprob: -10.763190269470215
    9. ']-' → logprob: -11.138190269470215
    10. ' ' → logprob: -11.388190269470215

Token 361: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08894743025302887
    2. '-' → logprob: -2.4639475345611572
    3. ' ' → logprob: -11.963947296142578
    4. ' ' → logprob: -13.713947296142578
    5. '   ' → logprob: -16.463947296142578
    6. '[' → logprob: -16.713947296142578
    7. ')' → logprob: -16.838947296142578
    8. ' -
' → logprob: -16.838947296142578
    9. '
' → logprob: -17.338947296142578
    10. '_' → logprob: -17.713947296142578

Token 362: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31326815485954285
    2. ' c' → logprob: -1.3132681846618652
    3. '   ' → logprob: -12.313267707824707
    4. '	c' → logprob: -14.438267707824707
    5. '       ' → logprob: -14.813267707824707
    6. ' ' → logprob: -15.438267707824707
    7. '    ' → logprob: -15.938267707824707
    8. '```' → logprob: -15.938267707824707
    9. ')c' → logprob: -16.438268661499023
    10. ' ' → logprob: -16.813268661499023

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013309523928910494
    2. '[' → logprob: -6.626330852508545
    3. 'i' → logprob: -13.126331329345703
    4. '[
' → logprob: -13.501331329345703
    5. ' [' → logprob: -14.251331329345703
    6. '[I' → logprob: -15.126331329345703
    7. ']' → logprob: -16.001331329345703
    8. '[j' → logprob: -16.001331329345703
    9. ' i' → logprob: -16.376331329345703
    10. ' ' → logprob: -16.376331329345703

Token 364: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2525677978992462
    2. ')
' → logprob: -1.5025677680969238
    3. '       ' → logprob: -7.877567768096924
    4. '<|end|>' → logprob: -9.002568244934082
    5. '   ' → logprob: -9.752568244934082
    6. ']' → logprob: -11.377568244934082
    7. ' )' → logprob: -11.752568244934082
    8. ' )
' → logprob: -11.877568244934082
    9. '```' → logprob: -11.877568244934082
    10. ')

' → logprob: -12.127568244934082

Token 365: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5237975120544434
    2. '
' → logprob: -0.8987975120544434
    3. '<|end|>' → logprob: -8.773797988891602
    4. ' if' → logprob: -8.898797988891602
    5. '        
' → logprob: -8.898797988891602
    6. 'if' → logprob: -9.773797988891602
    7. '
' → logprob: -9.898797988891602
    8. '  
' → logprob: -10.023797988891602
    9. ' 
' → logprob: -10.023797988891602
    10. '   ' → logprob: -11.148797988891602

Token 366: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768895745277405
    2. '
' → logprob: -0.8268895745277405
    3. 'if' → logprob: -7.951889514923096
    4. '
' → logprob: -8.326889991760254
    5. ' if' → logprob: -8.826889991760254
    6. '        
' → logprob: -9.326889991760254
    7. '   ' → logprob: -10.826889991760254
    8. '  
' → logprob: -10.951889991760254
    9. '<|end|>' → logprob: -10.951889991760254
    10. ' 
' → logprob: -11.451889991760254

Token 367: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19272753596305847
    2. ' if' → logprob: -2.317727565765381
    3. '       ' → logprob: -2.567727565765381
    4. '
' → logprob: -10.317727088928223
    5. 'result' → logprob: -10.817727088928223
    6. '   ' → logprob: -11.442727088928223
    7. '           ' → logprob: -11.942727088928223
    8. 'If' → logprob: -12.192727088928223
    9. '```' → logprob: -12.942727088928223
    10. 'max' → logprob: -13.692727088928223

Token 368: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' la' (ID: 557)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.18557843565940857
    2. ' score' → logprob: -1.810578465461731
    3. ' la' → logprob: -5.935578346252441
    4. '(score' → logprob: -6.935578346252441
    5. 'v' → logprob: -7.310578346252441
    6. ' ' → logprob: -7.810578346252441
    7. ' v' → logprob: -7.935578346252441
    8. ' the' → logprob: -9.060578346252441
    9. 'l' → logprob: -9.310578346252441
    10. 'la' → logprob: -9.310578346252441

Token 370: ' différence' (ID: 79196)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.008802825585007668
    2. ' score' → logprob: -5.008802890777588
    3. 'max' → logprob: -7.008802890777588
    4. 'difference' → logprob: -7.133802890777588
    5. 'diff' → logprob: -8.50880241394043
    6. ' max' → logprob: -10.25880241394043
    7. ' difference' → logprob: -10.50880241394043
    8. 'result' → logprob: -10.75880241394043
    9. '   ' → logprob: -11.00880241394043
    10. 's' → logprob: -11.00880241394043

Token 371: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010830636601895094
    2. '<|end|>' → logprob: -7.126082897186279
    3. '
' → logprob: -8.501083374023438
    4. '        
' → logprob: -10.751083374023438
    5. '<|end|>' → logprob: -11.251083374023438
    6. '   ' → logprob: -11.501083374023438
    7. ')' → logprob: -12.626083374023438
    8. '           ' → logprob: -12.751083374023438
    9. '>' → logprob: -12.751083374023438
    10. ' if' → logprob: -12.876083374023438

Token 372: ' l' (ID: 305)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.082411028444767
    2. 'a' → logprob: -3.582411050796509
    3. ' i' → logprob: -4.08241081237793
    4. ''' → logprob: -4.58241081237793
    5. ''i' → logprob: -4.70741081237793
    6. 'e' → logprob: -4.70741081237793
    7. '[i' → logprob: -6.33241081237793
    8. 'indice' → logprob: -6.58241081237793
    9. 'index' → logprob: -6.70741081237793
    10. '   ' → logprob: -7.83241081237793

Token 374: 'élé' (ID: 15228)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25065937638282776
    2. 'indice' → logprob: -2.125659465789795
    3. 'index' → logprob: -2.375659465789795
    4. 'élé' → logprob: -4.875659465789795
    5. ' i' → logprob: -8.000658988952637
    6. '   ' → logprob: -8.375658988952637
    7. ''i' → logprob: -8.750658988952637
    8. 'idx' → logprob: -9.125658988952637
    9. 'ith' → logprob: -9.375658988952637
    10. '
' → logprob: -9.500658988952637

Token 375: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -2.8802491215174086e-05
    2. 'm' → logprob: -11.625028610229492
    3. 'men' → logprob: -12.625028610229492
    4. 'ments' → logprob: -12.875028610229492
    5. 'me' → logprob: -13.250028610229492
    6. 'mentation' → logprob: -13.375028610229492
    7. '   ' → logprob: -13.500028610229492
    8. ' ment' → logprob: -13.625028610229492
    9. '```' → logprob: -13.750028610229492
    10. 'мент' → logprob: -14.375028610229492

Token 376: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.40582627058029175
    2. '[i' → logprob: -1.6558263301849365
    3. 'i' → logprob: -2.6558263301849365
    4. '       ' → logprob: -3.1558263301849365
    5. '   ' → logprob: -3.6558263301849365
    6. ' if' → logprob: -7.405826091766357
    7. '    ' → logprob: -7.405826091766357
    8. ' ' → logprob: -7.655826091766357
    9. '[' → logprob: -8.155826568603516
    10. 's' → logprob: -8.405826568603516

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020889393985271454
    2. '
' → logprob: -4.0208892822265625
    3. '<|end|>' → logprob: -6.1458892822265625
    4. '        
' → logprob: -8.020889282226562
    5. '   ' → logprob: -9.520889282226562
    6. '<|end|>' → logprob: -10.270889282226562
    7. ' if' → logprob: -10.270889282226562
    8. ')' → logprob: -10.520889282226562
    9. 'if' → logprob: -11.645889282226562
    10. '    
' → logprob: -11.895889282226562

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.371605948312208e-05
    2. ' if' → logprob: -10.750053405761719
    3. '        
' → logprob: -11.500053405761719
    4. '   ' → logprob: -11.875053405761719
    5. '
' → logprob: -12.125053405761719
    6. 'if' → logprob: -12.250053405761719
    7. ' 
' → logprob: -13.375053405761719
    8. '           ' → logprob: -14.000053405761719
    9. '<|end|>' → logprob: -14.125053405761719
    10. '      ' → logprob: -15.000053405761719

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004790496081113815
    2. '       ' → logprob: -5.504790306091309
    3. ' if' → logprob: -7.254790306091309
    4. '   ' → logprob: -12.379790306091309
    5. 'result' → logprob: -14.379790306091309
    6. 'If' → logprob: -16.504791259765625
    7. '	if' → logprob: -16.754791259765625
    8. '           ' → logprob: -17.254791259765625
    9. '
' → logprob: -17.754791259765625
    10. '```' → logprob: -17.879791259765625

Token 380: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.12693114578723907
    2. 'score' → logprob: -2.1269311904907227
    3. '(score' → logprob: -13.376931190490723
    4. '	score' → logprob: -13.626931190490723
    5. '       ' → logprob: -15.751931190490723
    6. '   ' → logprob: -16.126930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '_score' → logprob: -17.501930236816406
    9. ' scores' → logprob: -18.126930236816406
    10. '.score' → logprob: -18.376930236816406

Token 381: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31328365206718445
    2. '>' → logprob: -1.3132836818695068
    3. ' ' → logprob: -10.813283920288086
    4. ' ' → logprob: -14.063283920288086
    5. '[' → logprob: -14.938283920288086
    6. ' >
' → logprob: -16.063283920288086
    7. '&gt' → logprob: -16.563283920288086
    8. '   ' → logprob: -16.563283920288086
    9. '">' → logprob: -16.813283920288086
    10. ')' → logprob: -16.938283920288086

Token 382: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868716359138489
    2. ' ' → logprob: -1.136871576309204
    3. '   ' → logprob: -15.011871337890625
    4. '  ' → logprob: -16.011871337890625
    5. ' ' → logprob: -16.261871337890625
    6. '    ' → logprob: -17.824371337890625
    7. '```' → logprob: -18.011871337890625
    8. '>' → logprob: -18.074371337890625
    9. '۰' → logprob: -18.136871337890625
    10. '<|end|>' → logprob: -18.199371337890625

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.375085830688477
    4. '  ' → logprob: -20.125085830688477
    5. '<|end|>' → logprob: -20.875085830688477
    6. '۰' → logprob: -21.250085830688477
    7. '```' → logprob: -21.375085830688477
    8. '    ' → logprob: -22.625085830688477
    9. ' ' → logprob: -23.125085830688477
    10. '00' → logprob: -23.250085830688477

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03388669341802597
    2. ':
' → logprob: -3.408886671066284
    3. '           ' → logprob: -8.658886909484863
    4. '       ' → logprob: -9.783886909484863
    5. ' :' → logprob: -12.158886909484863
    6. '):
' → logprob: -13.658886909484863
    7. '):' → logprob: -13.783886909484863
    8. ' :
' → logprob: -13.783886909484863
    9. ':
' → logprob: -14.283886909484863
    10. ',' → logprob: -14.658886909484863

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09798620641231537
    2. 'result' → logprob: -2.7229862213134766
    3. ' result' → logprob: -3.5979862213134766
    4. '       ' → logprob: -8.597986221313477
    5. '
' → logprob: -9.597986221313477
    6. '            
' → logprob: -11.847986221313477
    7. '               ' → logprob: -12.722986221313477
    8. '(result' → logprob: -13.097986221313477
    9. '          ' → logprob: -13.097986221313477
    10. ',result' → logprob: -13.097986221313477

Token 386: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.12727653980255127
    2. ' result' → logprob: -2.1272764205932617
    3. '           ' → logprob: -8.002276420593262
    4. '               ' → logprob: -11.502276420593262
    5. '       ' → logprob: -13.377276420593262
    6. '	result' → logprob: -15.002276420593262
    7. ' resultat' → logprob: -15.252276420593262
    8. '   ' → logprob: -15.377276420593262
    9. '_result' → logprob: -15.502276420593262
    10. '(result' → logprob: -15.627276420593262

Token 387: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029754191637039185
    2. '+=' → logprob: -3.529754161834717
    3. '    ' → logprob: -13.279754638671875
    4. '   ' → logprob: -13.779754638671875
    5. '+' → logprob: -14.779754638671875
    6. ']+=' → logprob: -15.029754638671875
    7. '```' → logprob: -17.029754638671875
    8. '       ' → logprob: -17.654754638671875
    9. '        ' → logprob: -18.279754638671875
    10. '+='' → logprob: -18.279754638671875

Token 388: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.005233763717114925
    2. ' score' → logprob: -5.2552337646484375
    3. '	score' → logprob: -19.255233764648438
    4. '(score' → logprob: -20.255233764648438
    5. '_score' → logprob: -21.130233764648438
    6. 'Score' → logprob: -21.130233764648438
    7. ' ' → logprob: -21.505233764648438
    8. 'scores' → logprob: -22.380233764648438
    9. '   ' → logprob: -22.630233764648438
    10. '.score' → logprob: -23.380233764648438

Token 389: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0494452603161335
    2. '   ' → logprob: -3.174445152282715
    3. 'return' → logprob: -5.674445152282715
    4. ' return' → logprob: -6.299445152282715
    5. '    
' → logprob: -6.924445152282715
    6. '  
' → logprob: -9.424445152282715
    7. ' 
' → logprob: -9.799445152282715
    8. '
' → logprob: -11.174445152282715
    9. '   
' → logprob: -11.924445152282715
    10. '	return' → logprob: -12.424445152282715

Token 390: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07893242686986923
    2. '   ' → logprob: -2.953932523727417
    3. 'return' → logprob: -3.953932523727417
    4. ' return' → logprob: -5.578932285308838
    5. '    
' → logprob: -7.453932285308838
    6. ' 
' → logprob: -9.328932762145996
    7. '  
' → logprob: -9.578932762145996
    8. '
' → logprob: -10.328932762145996
    9. '        
' → logprob: -11.578932762145996
    10. '	return' → logprob: -11.828932762145996

Token 391: ' Ajouter' (ID: 165754)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.421843558549881
    2. 'result' → logprob: -1.6718435287475586
    3. ' score' → logprob: -2.5468435287475586
    4. ' return' → logprob: -3.0468435287475586
    5. 'score' → logprob: -3.6718435287475586
    6. 'return' → logprob: -5.546843528747559
    7. '```' → logprob: -8.546843528747559
    8. '   ' → logprob: -9.046843528747559
    9. ' continue' → logprob: -9.046843528747559
    10. '0' → logprob: -9.171843528747559

Token 392: ' si' (ID: 1784)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.31701919436454773
    2. 'score' → logprob: -1.3170192241668701
    3. '<|end|>' → logprob: -6.067018985748291
    4. '(score' → logprob: -7.067018985748291
    5. ' ' → logprob: -8.31701946258545
    6. 'result' → logprob: -8.94201946258545
    7. '
' → logprob: -9.56701946258545
    8. ' result' → logprob: -10.06701946258545
    9. ' 
' → logprob: -10.31701946258545
    10. '	score' → logprob: -10.69201946258545

Token 393: ' la' (ID: 557)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.018340859562158585
    2. 'score' → logprob: -4.018341064453125
    3. '<|end|>' → logprob: -10.018341064453125
    4. ' le' → logprob: -10.143341064453125
    5. '(score' → logprob: -10.268341064453125
    6. ' la' → logprob: -11.018341064453125
    7. ' ' → logprob: -11.018341064453125
    8. '	score' → logprob: -11.518341064453125
    9. ' positive' → logprob: -12.143341064453125
    10. ' ' → logprob: -12.268341064453125

Token 394: ' différence' (ID: 79196)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5515081286430359
    2. 'score' → logprob: -0.9265081286430359
    3. ' différence' → logprob: -4.801507949829102
    4. ' difference' → logprob: -5.051507949829102
    5. 'difference' → logprob: -5.051507949829102
    6. '<|end|>' → logprob: -6.051507949829102
    7. 'diff' → logprob: -6.426507949829102
    8. ' result' → logprob: -8.176507949829102
    9. ' 
' → logprob: -8.301507949829102
    10. '>' → logprob: -8.426507949829102

Token 395: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10011500120162964
    2. ' est' → logprob: -2.8501150608062744
    3. '>' → logprob: -3.6001150608062744
    4. ' is' → logprob: -5.350114822387695
    5. ' ' → logprob: -6.350114822387695
    6. '<|end|>' → logprob: -6.725114822387695
    7. ' positive' → logprob: -7.350114822387695
    8. '   ' → logprob: -7.725114822387695
    9. 'est' → logprob: -7.975114822387695
    10. 'positive' → logprob: -8.225114822387695

Token 396: ' positive' (ID: 8841)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -1.0280907154083252
    2. ' positive' → logprob: -1.1530907154083252
    3. 'strict' → logprob: -1.1530907154083252
    4. ' strict' → logprob: -4.778090476989746
    5. 'posit' → logprob: -6.403090476989746
    6. ' strictly' → logprob: -7.778090476989746
    7. '>' → logprob: -8.653090476989746
    8. '   ' → logprob: -10.028090476989746
    9. 'pos' → logprob: -10.278090476989746
    10. 'sup' → logprob: -10.403090476989746

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0680461898446083
    2. '
' → logprob: -2.8180460929870605
    3. 'return' → logprob: -5.6930460929870605
    4. '    
' → logprob: -6.4430460929870605
    5. ' return' → logprob: -6.9430460929870605
    6. '  
' → logprob: -9.943046569824219
    7. ' 
' → logprob: -10.568046569824219
    8. '\n' → logprob: -11.193046569824219
    9. '<|end|>' → logprob: -11.193046569824219
    10. '	return' → logprob: -11.943046569824219

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011162848677486181
    2. '
' → logprob: -7.0011162757873535
    3. 'return' → logprob: -8.876116752624512
    4. ' return' → logprob: -9.751116752624512
    5. '    
' → logprob: -12.001116752624512
    6. '	return' → logprob: -15.126116752624512
    7. '       ' → logprob: -16.251115798950195
    8. '  
' → logprob: -16.376115798950195
    9. ' 
' → logprob: -16.501115798950195
    10. '
' → logprob: -16.751115798950195

Token 399: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08117963373661041
    2. '   ' → logprob: -2.581179618835449
    3. ' return' → logprob: -6.081179618835449
    4. '	return' → logprob: -13.83117961883545
    5. '
' → logprob: -14.70617961883545
    6. '```' → logprob: -15.45617961883545
    7. ':return' → logprob: -16.706180572509766
    8. '    
' → logprob: -17.081180572509766
    9. ' ' → logprob: -17.456180572509766
    10. 'eturn' → logprob: -17.456180572509766

Token 400: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2014133334159851
    2. ' result' → logprob: -1.7014133930206299
    3. '(result' → logprob: -19.826414108276367
    4. ' resultat' → logprob: -20.201414108276367
    5. '	result' → logprob: -20.326414108276367
    6. 'res' → logprob: -21.576414108276367
    7. '_result' → logprob: -21.951414108276367
    8. 'results' → logprob: -21.951414108276367
    9. '   ' → logprob: -21.951414108276367
    10. ' ' → logprob: -22.076414108276367

Token 401: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4891563355922699
    2. '
' → logprob: -1.4891563653945923
    3. '<|end|>' → logprob: -1.8641563653945923
    4. 'n' → logprob: -5.989156246185303
    5. '```' → logprob: -6.739156246185303
    6. '#' → logprob: -7.114156246185303
    7. '  
' → logprob: -7.614156246185303
    8. '\n' → logprob: -7.739156246185303
    9. '

' → logprob: -7.989156246185303
    10. 'if' → logprob: -8.739156723022461

Token 402: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01019374467432499
    2. 'if' → logprob: -5.260193824768066
    3. 'n' → logprob: -5.885193824768066
    4. '#' → logprob: -6.260193824768066
    5. '```' → logprob: -9.260193824768066
    6. '<|end|>' → logprob: -9.385193824768066
    7. '
' → logprob: -9.885193824768066
    8. 'print' → logprob: -12.010193824768066
    9. '\n' → logprob: -12.260193824768066
    10. '\' → logprob: -12.510193824768066

Token 403: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0013186928117647767
    2. ' solve' → logprob: -7.376318454742432
    3. 'main' → logprob: -7.376318454742432
    4. ' compute' → logprob: -11.37631893157959
    5. ' maximize' → logprob: -11.37631893157959
    6. ' calculate' → logprob: -11.87631893157959
    7. 'solve' → logprob: -11.87631893157959
    8. ' run' → logprob: -12.50131893157959
    9. ' process' → logprob: -12.62631893157959
    10. ' sum' → logprob: -12.62631893157959

Token 404: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8206473871250637e-05
    2. ' ():' → logprob: -10.750028610229492
    3. '()' → logprob: -12.750028610229492
    4. '(' → logprob: -13.125028610229492
    5. '():
' → logprob: -13.500028610229492
    6. '()>' → logprob: -15.375028610229492
    7. '():
' → logprob: -16.125028610229492
    8. '_' → logprob: -16.750028610229492
    9. '(:' → logprob: -17.250028610229492
    10. ':' → logprob: -17.750028610229492

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01639644242823124
    2. 'n' → logprob: -4.141396522521973
    3. ' n' → logprob: -8.266396522521973
    4. '(n' → logprob: -9.641396522521973
    5. '
' → logprob: -10.766396522521973
    6. '	n' → logprob: -11.266396522521973
    7. '    
' → logprob: -12.141396522521973
    8. ',n' → logprob: -15.266396522521973
    9. '   ' → logprob: -15.766396522521973
    10. '(' → logprob: -16.266395568847656

Token 406: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0220435857772827
    2. ' n' → logprob: -1.0220435857772827
    3. 'n' → logprob: -1.2720435857772827
    4. '	n' → logprob: -11.147043228149414
    5. '    
' → logprob: -12.647043228149414
    6. '
' → logprob: -12.772043228149414
    7. '  ' → logprob: -13.522043228149414
    8. '    ' → logprob: -14.022043228149414
    9. ' 
' → logprob: -14.647043228149414
    10. ' ' → logprob: -15.022043228149414

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1696544587612152
    2. 'n' → logprob: -1.9196544885635376
    3. ' n' → logprob: -4.669654369354248
    4. '	n' → logprob: -12.419654846191406
    5. 'def' → logprob: -13.169654846191406
    6. '    
' → logprob: -13.794654846191406
    7. '#' → logprob: -14.044654846191406
    8. '  ' → logprob: -14.169654846191406
    9. ' ' → logprob: -14.294654846191406
    10. '       ' → logprob: -14.794654846191406

Token 408: ' Fonction' (ID: 189149)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22903835773468018
    2. ' n' → logprob: -1.7290383577346802
    3. '   ' → logprob: -3.6040382385253906
    4. '	n' → logprob: -11.72903823852539
    5. '#' → logprob: -12.10403823852539
    6. '
' → logprob: -12.22903823852539
    7. '    ' → logprob: -12.22903823852539
    8. '    
' → logprob: -12.47903823852539
    9. ' #' → logprob: -13.35403823852539
    10. '  ' → logprob: -13.97903823852539

Token 409: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -1.1485249996185303
    2. ' main' → logprob: -1.5235249996185303
    3. '   ' → logprob: -1.6485249996185303
    4. ' read' → logprob: -2.5235249996185303
    5. ' de' → logprob: -2.5235249996185303
    6. ' ' → logprob: -3.6485249996185303
    7. 'def' → logprob: -3.8985249996185303
    8. ' def' → logprob: -4.148525238037109
    9. ' principal' → logprob: -4.523525238037109
    10. ' to' → logprob: -5.273525238037109

Token 410: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3189866244792938
    2. '():
' → logprob: -1.3189866542816162
    3. '   ' → logprob: -6.068986415863037
    4. ':' → logprob: -6.443986415863037
    5. '()' → logprob: -6.693986415863037
    6. 'def' → logprob: -8.068986892700195
    7. ':
' → logprob: -8.443986892700195
    8. ' :' → logprob: -11.568986892700195
    9. ' ():' → logprob: -11.818986892700195
    10. '()
' → logprob: -12.193986892700195

Token 411: ' orch' (ID: 64344)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.06442820280790329
    2. ' appelle' → logprob: -3.1894280910491943
    3. '   ' → logprob: -5.564428329467773
    4. 'if' → logprob: -5.689428329467773
    5. ' lance' → logprob: -5.689428329467773
    6. ' utilise' → logprob: -5.939428329467773
    7. ' récup' → logprob: -6.314428329467773
    8. 'lit' → logprob: -6.439428329467773
    9. ' ex' → logprob: -6.689428329467773
    10. ' if' → logprob: -7.564428329467773

Token 412: 'estre' (ID: 39655)
  Prédit: 'estre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estre' → logprob: -2.141186450899113e-05
    2. 'estr' → logprob: -11.250020980834961
    3. 'estra' → logprob: -12.125020980834961
    4. 'es' → logprob: -13.125020980834961
    5. 'est' → logprob: -14.625020980834961
    6. 'e' → logprob: -16.00002098083496
    7. 'este' → logprob: -16.12502098083496
    8. 'estres' → logprob: -16.12502098083496
    9. 'istre' → logprob: -17.25002098083496
    10. ' estre' → logprob: -17.25002098083496

Token 413: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3593601882457733
    2. '   ' → logprob: -2.2343602180480957
    3. ' le' → logprob: -2.3593602180480957
    4. ' l' → logprob: -2.4843602180480957
    5. 'l' → logprob: -5.359360218048096
    6. 'le' → logprob: -5.609360218048096
    7. '()' → logprob: -5.859360218048096
    8. ' les' → logprob: -6.109360218048096
    9. '():
' → logprob: -6.984360218048096
    10. 'def' → logprob: -7.109360218048096

Token 414: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.34229689836502075
    2. ' lecture' → logprob: -1.342296838760376
    3. 'suite' → logprob: -3.967296838760376
    4. 'ex' → logprob: -5.467297077178955
    5. 'lect' → logprob: -6.967297077178955
    6. 'execution' → logprob: -7.092297077178955
    7. 'gestion' → logprob: -7.092297077178955
    8. '   ' → logprob: -7.467297077178955
    9. ' suite' → logprob: -7.592297077178955
    10. 'log' → logprob: -7.842297077178955

Token 415: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7092569470405579
    2. ' des' → logprob: -0.8342569470405579
    3. '_' → logprob: -3.334256887435913
    4. 'des' → logprob: -3.959256887435913
    5. ',' → logprob: -4.834257125854492
    6. '_des' → logprob: -5.709257125854492
    7. ' ' → logprob: -5.959257125854492
    8. '    ' → logprob: -6.584257125854492
    9. '_input' → logprob: -6.959257125854492
    10. '()' → logprob: -7.084257125854492

Token 416: ' entr' (ID: 7072)
  Prédit: ' entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entr' → logprob: -0.7490519881248474
    2. 'd' → logprob: -1.4990520477294922
    3. 'entr' → logprob: -1.8740520477294922
    4. ' données' → logprob: -2.124052047729492
    5. 'entrée' → logprob: -4.499052047729492
    6. 'inputs' → logprob: -4.624052047729492
    7. ' inputs' → logprob: -4.999052047729492
    8. 'n' → logprob: -6.749052047729492
    9. 'input' → logprob: -7.249052047729492
    10. ' input' → logprob: -7.874052047729492

Token 417: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.02071717567741871
    2. 'ees' → logprob: -4.020717144012451
    3. 'ée' → logprob: -6.395717144012451
    4. 'e' → logprob: -7.145717144012451
    5. 'es' → logprob: -10.02071762084961
    6. '   ' → logprob: -10.89571762084961
    7. '```' → logprob: -11.52071762084961
    8. 'é' → logprob: -11.64571762084961
    9. 'ee' → logprob: -12.64571762084961
    10. 'ies' → logprob: -13.27071762084961

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030469495803117752
    2. '   ' → logprob: -3.5304694175720215
    3. ',
' → logprob: -8.40546989440918
    4. ' ,' → logprob: -8.40546989440918
    5. ' et' → logprob: -8.78046989440918
    6. '()' → logprob: -10.28046989440918
    7. '(),' → logprob: -10.65546989440918
    8. 'def' → logprob: -10.90546989440918
    9. 'et' → logprob: -10.90546989440918
    10. ' ' → logprob: -12.40546989440918

Token 419: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2152286022901535
    2. ' la' → logprob: -2.34022855758667
    3. ' le' → logprob: -2.59022855758667
    4. '    
' → logprob: -4.71522855758667
    5. ' l' → logprob: -4.96522855758667
    6. 'l' → logprob: -6.21522855758667
    7. '    ' → logprob: -6.71522855758667
    8. ' puis' → logprob: -6.96522855758667
    9. 'le' → logprob: -7.96522855758667
    10. '   
' → logprob: -8.090229034423828

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042002152651548386
    2. ' la' → logprob: -4.417002201080322
    3. ' n' → logprob: -4.792002201080322
    4. ' l' → logprob: -5.167002201080322
    5. 'n' → logprob: -5.417002201080322
    6. ' le' → logprob: -5.667002201080322
    7. '    ' → logprob: -5.792002201080322
    8. 'l' → logprob: -6.292002201080322
    9. '    
' → logprob: -6.792002201080322
    10. '  ' → logprob: -8.542001724243164

Token 421: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.63935786485672
    2. ' le' → logprob: -1.1393578052520752
    3. ' la' → logprob: -3.139357805252075
    4. 'le' (adapté à ' le') → logprob: -3.389357805252075
    5. 'l' → logprob: -4.014358043670654
    6. 'cal' → logprob: -4.514358043670654
    7. '    
' → logprob: -4.514358043670654
    8. 'calcul' → logprob: -4.639358043670654
    9. ' puis' → logprob: -4.764358043670654
    10. 'la' → logprob: -5.014358043670654

Token 422: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.2575094997882843
    2. 'calcul' → logprob: -1.507509469985962
    3. '   ' → logprob: -5.882509708404541
    4. ' traitement' → logprob: -6.382509708404541
    5. 'cal' → logprob: -7.882509708404541
    6. 'trait' → logprob: -8.007509231567383
    7. 'calc' → logprob: -9.507509231567383
    8. 'score' → logprob: -10.257509231567383
    9. ' calc' → logprob: -10.507509231567383
    10. '    
' → logprob: -10.507509231567383

Token 423: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8246458172798157
    2. ' de' → logprob: -0.8246458172798157
    3. ' et' → logprob: -2.824645757675171
    4. ' du' → logprob: -3.574645757675171
    5. ' des' → logprob: -4.57464599609375
    6. '    ' → logprob: -4.57464599609375
    7. ',' → logprob: -4.69964599609375
    8. 'de' → logprob: -6.19964599609375
    9. ' ' → logprob: -6.82464599609375
    10. ' ,' → logprob: -7.07464599609375

Token 424: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.019562972709536552
    2. 'l' → logprob: -4.2695631980896
    3. '   ' → logprob: -5.7695631980896
    4. ' ' → logprob: -7.2695631980896
    5. '	l' → logprob: -8.144562721252441
    6. ' la' → logprob: -8.144562721252441
    7. ' ' → logprob: -8.269562721252441
    8. '    ' → logprob: -9.144562721252441
    9. 'aff' → logprob: -9.394562721252441
    10. ' affiche' → logprob: -9.394562721252441

Token 425: ''aff' (ID: 53397)
  Prédit: ''aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.07208488881587982
    2. 'a' → logprob: -3.322084903717041
    3. 'aff' → logprob: -3.572084903717041
    4. ''impression' → logprob: -6.197084903717041
    5. ' affich' → logprob: -7.197084903717041
    6. '_aff' → logprob: -7.822084903717041
    7. '```' → logprob: -8.072084426879883
    8. 'e' → logprob: -8.197084426879883
    9. ''' → logprob: -8.322084426879883
    10. ''''' → logprob: -8.447084426879883

Token 426: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.00041172682540491223
    2. 'ich' → logprob: -8.125411987304688
    3. 'ic' → logprob: -9.875411987304688
    4. 'iche' → logprob: -10.000411987304688
    5. '   ' → logprob: -11.500411987304688
    6. '#' → logprob: -13.000411987304688
    7. '```' → logprob: -13.625411987304688
    8. '**' → logprob: -14.125411987304688
    9. '
' → logprob: -14.625411987304688
    10. '>' → logprob: -14.750411987304688

Token 427: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6662765145301819
    2. ' du' → logprob: -1.291276454925537
    3. '()' → logprob: -2.416276454925537
    4. '   ' → logprob: -2.916276454925537
    5. ' de' → logprob: -3.416276454925537
    6. '(' → logprob: -4.416276454925537
    7. 'du' → logprob: -4.541276454925537
    8. 'des' → logprob: -5.041276454925537
    9. 'de' → logprob: -6.041276454925537
    10. ' ' → logprob: -7.666276454925537

Token 428: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1799159198999405
    2. ' résultat' → logprob: -2.5549159049987793
    3. ' result' → logprob: -3.0549159049987793
    4. 'rés' → logprob: -4.679915904998779
    5. 'score' → logprob: -4.929915904998779
    6. 'calculate' → logprob: -4.929915904998779
    7. ' resultat' → logprob: -5.179915904998779
    8. '"' → logprob: -5.429915904998779
    9. ' score' → logprob: -5.804915904998779
    10. ' calculate' → logprob: -6.179915904998779

Token 429: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0461224801838398
    2. '.' → logprob: -3.2961225509643555
    3. ':' → logprob: -6.0461225509643555
    4. '
' → logprob: -6.2961225509643555
    5. '    
' → logprob: -7.0461225509643555
    6. ')' → logprob: -7.2961225509643555
    7. '):
' → logprob: -7.4211225509643555
    8. '```' → logprob: -7.7961225509643555
    9. '.
' → logprob: -7.9211225509643555
    10. '):' → logprob: -8.421122550964355

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013586864806711674
    2. 'n' → logprob: -6.876358509063721
    3. '
' → logprob: -8.626358985900879
    4. '    
' → logprob: -8.876358985900879
    5. '(n' → logprob: -12.876358985900879
    6. ' n' → logprob: -13.501358985900879
    7. '  
' → logprob: -13.751358985900879
    8. '```' → logprob: -14.626358985900879
    9. '   
' → logprob: -15.001358985900879
    10. '	n' → logprob: -15.001358985900879

Token 431: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031023140996694565
    2. 'n' → logprob: -3.9060230255126953
    3. '
' → logprob: -4.656023025512695
    4. '    
' → logprob: -7.031023025512695
    5. ' n' → logprob: -10.656023025512695
    6. '  
' → logprob: -12.406023025512695
    7. ' 
' → logprob: -12.781023025512695
    8. '	n' → logprob: -13.281023025512695
    9. '(n' → logprob: -13.406023025512695
    10. '   
' → logprob: -13.531023025512695

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005254156421869993
    2. 'n' → logprob: -5.25525426864624
    3. ' n' → logprob: -10.880253791809082
    4. '
' → logprob: -14.505253791809082
    5. '    
' → logprob: -14.505253791809082
    6. '	n' → logprob: -14.630253791809082
    7. '```' → logprob: -18.0052547454834
    8. '       ' → logprob: -18.8802547454834
    9. '(n' → logprob: -19.2552547454834
    10. '   ' → logprob: -20.0052547454834

Token 433: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0007454255828633904
    2. '   ' → logprob: -7.2507452964782715
    3. ' n' → logprob: -10.25074577331543
    4. '	n' → logprob: -16.75074577331543
    5. '  ' → logprob: -18.37574577331543
    6. '```' → logprob: -18.50074577331543
    7. '
' → logprob: -18.87574577331543
    8. ' ' → logprob: -19.50074577331543
    9. '    
' → logprob: -19.62574577331543
    10. '(n' → logprob: -20.37574577331543

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. '=' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. ' =' → logprob: -15.000004768371582
    5. ',v' → logprob: -15.000004768371582
    6. ',n' → logprob: -15.625004768371582
    7. '<|end|>' → logprob: -16.0000057220459
    8. ')' → logprob: -16.2500057220459
    9. '‌,' → logprob: -16.6250057220459
    10. ',
' → logprob: -17.5000057220459

Token 435: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.043207570910453796
    2. 'v' → logprob: -3.1682076454162598
    3. '*v' → logprob: -8.918207168579102
    4. ',v' → logprob: -10.168207168579102
    5. ' *' → logprob: -10.918207168579102
    6. '	v' → logprob: -11.793207168579102
    7. '*' → logprob: -12.793207168579102
    8. '<|end|>' → logprob: -13.043207168579102
    9. ',' → logprob: -13.418207168579102
    10. '(v' → logprob: -14.168207168579102

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',c' → logprob: -14.875008583068848
    4. '<|end|>' → logprob: -15.625008583068848
    5. '‌,' → logprob: -16.250009536743164
    6. ',v' → logprob: -16.250009536743164
    7. 'c' → logprob: -16.875009536743164
    8. '_,' → logprob: -17.750009536743164
    9. 'v' → logprob: -19.125009536743164
    10. '=' → logprob: -19.250009536743164

Token 437: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03804171830415726
    2. 'c' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.038042068481445
    4. '	c' → logprob: -16.038042068481445
    5. '<|end|>' → logprob: -17.538042068481445
    6. '_c' → logprob: -18.038042068481445
    7. '    ' → logprob: -18.163042068481445
    8. '  ' → logprob: -18.663042068481445
    9. ' ' → logprob: -18.663042068481445
    10. 's' → logprob: -19.288042068481445

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759403705596924
    2. '=' → logprob: -0.8259403705596924
    3. ',' → logprob: -14.200940132141113
    4. '<|end|>' → logprob: -16.20094108581543
    5. ')' → logprob: -16.57594108581543
    6. '=
' → logprob: -17.70094108581543
    7. '.' → logprob: -17.82594108581543
    8. ' ' → logprob: -17.95094108581543
    9. ' =
' → logprob: -18.07594108581543
    10. '  ' → logprob: -18.07594108581543

Token 439: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01814994215965271
    2. 'read' → logprob: -4.0181498527526855
    3. '	read' → logprob: -20.268150329589844
    4. '_read' → logprob: -23.643150329589844
    5. '(read' → logprob: -23.643150329589844
    6. '.read' → logprob: -24.018150329589844
    7. '   ' → logprob: -24.893150329589844
    8. ' reading' → logprob: -25.268150329589844
    9. ' reads' → logprob: -25.518150329589844
    10. 'Read' → logprob: -26.643150329589844

Token 440: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.000017166137695
    3. '_inputs' → logprob: -15.000017166137695
    4. ' _' → logprob: -15.500017166137695
    5. '_in' → logprob: -16.250017166137695
    6. 'input' → logprob: -16.250017166137695
    7. '_output' → logprob: -16.750017166137695
    8. '```' → logprob: -17.500017166137695
    9. '_Input' → logprob: -18.375017166137695
    10. '_INPUT' → logprob: -18.500017166137695

Token 441: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014174441806972027
    2. '()
' → logprob: -4.264174461364746
    3. '   ' → logprob: -12.014174461364746
    4. '()
' → logprob: -12.764174461364746
    5. '()\' → logprob: -13.764174461364746
    6. '()

' → logprob: -14.264174461364746
    7. '(' → logprob: -15.889174461364746
    8. '()`' → logprob: -16.13917350769043
    9. '())' → logprob: -17.26417350769043
    10. ')' → logprob: -17.38917350769043

Token 442: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009088042192161083
    2. '   ' → logprob: -5.009088039398193
    3. '    
' → logprob: -6.509088039398193
    4. 'result' → logprob: -7.634088039398193
    5. '  
' → logprob: -8.384088516235352
    6. ' 
' → logprob: -9.259088516235352
    7. '   
' → logprob: -10.759088516235352
    8. '
' → logprob: -10.884088516235352
    9. ' result' → logprob: -11.259088516235352
    10. '\n' → logprob: -11.759088516235352

Token 443: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13609234988689423
    2. '   ' → logprob: -2.1360924243927
    3. 'score' → logprob: -5.261092185974121
    4. 'print' → logprob: -5.886092185974121
    5. '
' → logprob: -7.011092185974121
    6. ' result' → logprob: -9.011092185974121
    7. '    
' → logprob: -9.261092185974121
    8. '```' → logprob: -12.011092185974121
    9. 'res' → logprob: -12.261092185974121
    10. '  
' → logprob: -12.386092185974121

Token 444: ' Lecture' (ID: 106534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12559014558792114
    2. ' result' → logprob: -2.5005900859832764
    3. 'score' → logprob: -3.3755900859832764
    4. ' score' → logprob: -6.3755903244018555
    5. 'print' → logprob: -10.375590324401855
    6. '   ' → logprob: -10.750590324401855
    7. 'res' → logprob: -11.500590324401855
    8. ' resultat' → logprob: -12.125590324401855
    9. 'total' → logprob: -12.875590324401855
    10. 'answer' → logprob: -12.875590324401855

Token 445: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009457378648221493
    2. '   ' → logprob: -4.759457588195801
    3. '(n' → logprob: -8.5094575881958
    4. ',' → logprob: -8.7594575881958
    5. '(' → logprob: -8.8844575881958
    6. '<|end|>' → logprob: -9.1344575881958
    7. '()
' → logprob: -10.0094575881958
    8. ' ()' → logprob: -10.2594575881958
    9. '(),' → logprob: -10.2594575881958
    10. ')' → logprob: -10.7594575881958

Token 446: ' entr' (ID: 7072)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.5574417114257812
    2. 'entr' → logprob: -1.5574417114257812
    3. 'n' → logprob: -2.5574417114257812
    4. ' inputs' → logprob: -2.9324417114257812
    5. ' entr' → logprob: -3.1824417114257812
    6. 'input' → logprob: -3.8074417114257812
    7. 'd' → logprob: -4.682441711425781
    8. ' données' → logprob: -5.682441711425781
    9. 'entrée' → logprob: -5.682441711425781
    10. ' input' → logprob: -6.557441711425781

Token 447: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00019376569252926856
    2. 'es' → logprob: -9.37519359588623
    3. 'ees' → logprob: -10.25019359588623
    4. 't' → logprob: -10.75019359588623
    5. 'és' → logprob: -11.12519359588623
    6. 'ée' → logprob: -11.62519359588623
    7. '   ' → logprob: -12.12519359588623
    8. 'nées' → logprob: -12.25019359588623
    9. 'r' → logprob: -12.62519359588623
    10. 'e' → logprob: -12.75019359588623

Token 448: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7150808572769165
    2. 'result' → logprob: -0.7150808572769165
    3. '
' → logprob: -3.965080738067627
    4. ' result' → logprob: -6.340080738067627
    5. '    
' → logprob: -7.340080738067627
    6. 'score' → logprob: -8.965081214904785
    7. '```' → logprob: -9.340081214904785
    8. 'print' → logprob: -10.465081214904785
    9. '  
' → logprob: -11.215081214904785
    10. 'res' → logprob: -11.465081214904785

Token 449: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13507388532161713
    2. 'result' → logprob: -2.1350739002227783
    3. '
' → logprob: -5.010073661804199
    4. ' result' → logprob: -7.010073661804199
    5. '    
' → logprob: -7.760073661804199
    6. 'score' → logprob: -9.8850736618042
    7. '```' → logprob: -10.2600736618042
    8. 'res' → logprob: -12.3850736618042
    9. 'resultado' → logprob: -12.3850736618042
    10. '	result' → logprob: -12.6350736618042

Token 450: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37765181064605713
    2. '   ' → logprob: -1.3776518106460571
    3. ' result' → logprob: -2.8776516914367676
    4. 'score' → logprob: -5.252651691436768
    5. 'print' → logprob: -7.877651691436768
    6. ' score' → logprob: -8.002652168273926
    7. 'res' → logprob: -10.252652168273926
    8. ' resultat' → logprob: -10.627652168273926
    9. '```' → logprob: -10.752652168273926
    10. ' print' → logprob: -11.002652168273926

Token 451: ' result' (ID: 1534)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.3895277678966522
    2. 'result' (adapté à ' result') → logprob: -1.1395277976989746
    3. 'print' → logprob: -6.764527797698975
    4. ' result' → logprob: -7.389527797698975
    5. ' score' → logprob: -7.889527797698975
    6. 'positive' → logprob: -8.389527320861816
    7. 'answer' → logprob: -9.264527320861816
    8. 'res' → logprob: -9.389527320861816
    9. '   ' → logprob: -9.889527320861816
    10. 'total' → logprob: -10.139527320861816

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. '   ' → logprob: -16.768150329589844
    5. '_' → logprob: -17.268150329589844
    6. ')' → logprob: -17.518150329589844
    7. ' =
' → logprob: -18.268150329589844
    8. '  ' → logprob: -19.018150329589844
    9. '	' → logprob: -19.268150329589844
    10. '    ' → logprob: -19.268150329589844

Token 453: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.06196768581867218
    2. ' calculate' → logprob: -2.811967611312866
    3. '   ' → logprob: -18.061967849731445
    4. '.calculate' → logprob: -19.561967849731445
    5. 'calc' → logprob: -20.686967849731445
    6. 'alculate' → logprob: -20.936967849731445
    7. 'calcul' → logprob: -21.061967849731445
    8. 'compute' → logprob: -21.311967849731445
    9. ' ' → logprob: -21.811967849731445
    10. 'cal' → logprob: -22.186967849731445

Token 454: '_positive' (ID: 137937)
  Prédit: '_positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positive' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. 'positive' → logprob: -14.875001907348633
    4. '_negative' → logprob: -16.625001907348633
    5. '_pos' → logprob: -17.250001907348633
    6. '```' → logprob: -17.750001907348633
    7. '_possible' → logprob: -18.000001907348633
    8. ' positive' → logprob: -18.750001907348633
    9. ' _' → logprob: -18.875001907348633
    10. '_total' → logprob: -19.375001907348633

Token 455: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.750005722045898
    3. '_scores' → logprob: -13.125005722045898
    4. ' _' → logprob: -15.625005722045898
    5. '_s' → logprob: -16.1250057220459
    6. '_sc' → logprob: -16.3750057220459
    7. 'score' → logprob: -16.5000057220459
    8. '```' → logprob: -18.5000057220459
    9. '
' → logprob: -18.8750057220459
    10. '"_' → logprob: -19.1250057220459

Token 456: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.12501049041748
    4. '(
' → logprob: -16.125011444091797
    5. '   ' → logprob: -17.875011444091797
    6. 'n' → logprob: -19.750011444091797
    7. '```' → logprob: -20.000011444091797
    8. '
' → logprob: -20.375011444091797
    9. '(len' → logprob: -20.500011444091797
    10. ' n' → logprob: -21.875011444091797

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.469590491382405e-05
    2. ',v' → logprob: -9.62507438659668
    3. ' ,' → logprob: -11.87507438659668
    4. ',
' → logprob: -14.12507438659668
    5. 'v' → logprob: -14.25007438659668
    6. '   ' → logprob: -16.37507438659668
    7. ')' → logprob: -16.62507438659668
    8. '```' → logprob: -17.75007438659668
    9. ',

' → logprob: -18.62507438659668
    10. '‌,' → logprob: -18.62507438659668

Token 458: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029750604182481766
    2. ' v' → logprob: -3.5297505855560303
    3. '	v' → logprob: -16.90475082397461
    4. ')v' → logprob: -18.40475082397461
    5. '   ' → logprob: -18.90475082397461
    6. '<|end|>' → logprob: -19.52975082397461
    7. '    ' → logprob: -19.65475082397461
    8. ')' → logprob: -19.65475082397461
    9. ',v' → logprob: -19.90475082397461
    10. '_v' → logprob: -20.15475082397461

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. ',c' → logprob: -9.875073432922363
    3. ' ,' → logprob: -10.750073432922363
    4. '   ' → logprob: -16.000072479248047
    5. ',
' → logprob: -16.000072479248047
    6. 'c' → logprob: -16.500072479248047
    7. '```' → logprob: -18.875072479248047
    8. ' c' → logprob: -19.250072479248047
    9. '‌,' → logprob: -19.750072479248047
    10. ')' → logprob: -19.875072479248047

Token 460: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06196824833750725
    2. ' c' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.686967849731445
    4. '	c' → logprob: -15.811967849731445
    5. ' ' → logprob: -17.186967849731445
    6. ')c' → logprob: -17.186967849731445
    7. '    ' → logprob: -17.686967849731445
    8. '  ' → logprob: -18.311967849731445
    9. '_c' → logprob: -19.186967849731445
    10. '$c' → logprob: -19.311967849731445

Token 461: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2933163344860077
    2. ')
' → logprob: -1.41831636428833
    3. '   ' → logprob: -4.41831636428833
    4. '
' → logprob: -11.293315887451172
    5. ')
' → logprob: -11.418315887451172
    6. '()' → logprob: -12.793315887451172
    7. ' )
' → logprob: -12.793315887451172
    8. ' ' → logprob: -13.043315887451172
    9. '()
' → logprob: -13.543315887451172
    10. '    
' → logprob: -13.543315887451172

Token 462: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20504872500896454
    2. '
' → logprob: -1.705048680305481
    3. '    
' → logprob: -5.830048561096191
    4. 'print' → logprob: -7.330048561096191
    5. ' print' → logprob: -11.455048561096191
    6. '
' → logprob: -11.955048561096191
    7. '  
' → logprob: -12.205048561096191
    8. ' 
' → logprob: -12.205048561096191
    9. '' → logprob: -13.080048561096191
    10. '   
' → logprob: -13.080048561096191

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02061452530324459
    2. 'print' → logprob: -4.0206146240234375
    3. '
' → logprob: -6.0206146240234375
    4. '    
' → logprob: -10.895614624023438
    5. ' print' → logprob: -11.270614624023438
    6. '```' → logprob: -13.395614624023438
    7. '
' → logprob: -14.770614624023438
    8. '	print' → logprob: -15.645614624023438
    9. '  
' → logprob: -17.145614624023438
    10. '       ' → logprob: -17.770614624023438

Token 464: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014704519708175212
    2. ' print' → logprob: -9.000146865844727
    3. '   ' → logprob: -10.750146865844727
    4. '
' → logprob: -13.125146865844727
    5. '```' → logprob: -15.750146865844727
    6. '    
' → logprob: -18.500146865844727
    7. 'pr' → logprob: -18.875146865844727
    8. '
' → logprob: -18.875146865844727
    9. '	print' → logprob: -19.625146865844727
    10. '#print' → logprob: -19.750146865844727

Token 465: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002244938863441348
    2. '(' → logprob: -6.12724494934082
    3. 'print' → logprob: -10.75224494934082
    4. '()' → logprob: -11.12724494934082
    5. '(result' → logprob: -11.62724494934082
    6. '(print' → logprob: -12.12724494934082
    7. ' print' → logprob: -12.75224494934082
    8. '(
' → logprob: -13.50224494934082
    9. '    
' → logprob: -14.00224494934082
    10. '()
' → logprob: -14.25224494934082

Token 466: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0015029559144750237
    2. ' result' → logprob: -6.501502990722656
    3. 'score' → logprob: -15.001502990722656
    4. ' résultat' → logprob: -15.751502990722656
    5. ' resultat' → logprob: -16.126502990722656
    6. 'resultado' → logprob: -18.376502990722656
    7. 'rés' → logprob: -18.501502990722656
    8. ' score' → logprob: -19.001502990722656
    9. '_result' → logprob: -19.376502990722656
    10. 'r' → logprob: -19.501502990722656

Token 467: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008221378084272146
    2. 'print' → logprob: -7.500822067260742
    3. '
' → logprob: -8.250822067260742
    4. '    
' → logprob: -12.125822067260742
    5. '```' → logprob: -13.000822067260742
    6. ' print' → logprob: -15.000822067260742
    7. '
' → logprob: -17.375822067260742
    8. '	print' → logprob: -17.875822067260742
    9. '       ' → logprob: -18.000822067260742
    10. '``' → logprob: -19.625822067260742

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023729538545012474
    2. 'print' → logprob: -3.7737295627593994
    3. '
' → logprob: -8.02372932434082
    4. ' print' → logprob: -9.02372932434082
    5. '    
' → logprob: -10.27372932434082
    6. '```' → logprob: -14.14872932434082
    7. '	print' → logprob: -16.02372932434082
    8. '
' → logprob: -16.02372932434082
    9. '  
' → logprob: -16.89872932434082
    10. '       ' → logprob: -16.89872932434082

Token 469: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001105683040805161
    2. '   ' → logprob: -7.501105785369873
    3. ' print' → logprob: -7.501105785369873
    4. '
' → logprob: -16.12610626220703
    5. '```' → logprob: -17.37610626220703
    6. '	print' → logprob: -18.87610626220703
    7. 'pr' → logprob: -19.00110626220703
    8. '    
' → logprob: -19.37610626220703
    9. '.print' → logprob: -21.25110626220703
    10. '_print' → logprob: -21.37610626220703

Token 470: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.006717863027006388
    2. '(' → logprob: -5.006717681884766
    3. '(res' → logprob: -14.006717681884766
    4. '()' → logprob: -14.631717681884766
    5. '(results' → logprob: -14.756717681884766
    6. '(f' → logprob: -15.256717681884766
    7. 'result' → logprob: -15.881717681884766
    8. '(resultado' → logprob: -16.006717681884766
    9. '((' → logprob: -16.256717681884766
    10. ' (' → logprob: -16.506717681884766

Token 471: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.375000953674316
    3. '())' → logprob: -15.750000953674316
    4. ')`' → logprob: -16.75
    5. ' )' → logprob: -17.25
    6. '))' → logprob: -18.375
    7. '')' → logprob: -18.5
    8. '(' → logprob: -19.0
    9. '`)' → logprob: -19.5
    10. '")' → logprob: -19.75

Token 472: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015922220423817635
    2. '\n' → logprob: -4.2659220695495605
    3. 'if' → logprob: -7.2659220695495605
    4. '<|end|>' → logprob: -7.2659220695495605
    5. '

' → logprob: -8.640922546386719
    6. '  
' → logprob: -10.265922546386719
    7. ' 
' → logprob: -10.390922546386719
    8. '    
' → logprob: -10.890922546386719
    9. '
' → logprob: -10.890922546386719
    10. '' → logprob: -11.265922546386719

Token 473: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3410893678665161
    2. '<|end|>' → logprob: -1.3410893678665161
    3. 'if' → logprob: -3.7160892486572266
    4. '\n' → logprob: -6.091089248657227
    5. '```' → logprob: -7.591089248657227
    6. '<|end|>' → logprob: -8.966089248657227
    7. '

' → logprob: -9.341089248657227
    8. ' if' → logprob: -9.591089248657227
    9. '  
' → logprob: -11.091089248657227
    10. '
' → logprob: -11.841089248657227

Token 474: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003416889812797308
    2. 'result' → logprob: -5.878417015075684
    3. ' print' → logprob: -7.753417015075684
    4. 'return' → logprob: -9.628417015075684
    5. '<|end|>' → logprob: -10.128417015075684
    6. ' result' → logprob: -10.628417015075684
    7. '```' → logprob: -11.378417015075684
    8. '   ' → logprob: -11.628417015075684
    9. 'output' → logprob: -11.628417015075684
    10. '#' → logprob: -12.253417015075684

Token 475: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0001955537445610389
    2. 'ich' → logprob: -9.125195503234863
    3. 'iche' → logprob: -10.125195503234863
    4. 'ic' → logprob: -10.750195503234863
    5. '#' → logprob: -11.375195503234863
    6. 'ichage' → logprob: -12.250195503234863
    7. '   ' → logprob: -12.625195503234863
    8. 'cher' → logprob: -13.375195503234863
    9. 'i' → logprob: -14.625195503234863
    10. 'ichier' → logprob: -14.625195503234863

Token 476: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3649802803993225
    2. '(result' → logprob: -1.6149802207946777
    3. '(' → logprob: -2.2399802207946777
    4. '("")' → logprob: -8.114980697631836
    5. 'result' → logprob: -9.364980697631836
    6. '("\' → logprob: -11.739980697631836
    7. '()
' → logprob: -11.989980697631836
    8. '(
' → logprob: -11.989980697631836
    9. '   ' → logprob: -12.239980697631836
    10. '(results' → logprob: -12.739980697631836

Token 477: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0006413076189346611
    2. ' result' → logprob: -7.375641345977783
    3. ' résultat' → logprob: -11.250640869140625
    4. ' resultat' → logprob: -13.750640869140625
    5. '(result' → logprob: -15.625640869140625
    6. 'rés' → logprob: -15.750640869140625
    7. 'resultado' → logprob: -16.500640869140625
    8. ' ' → logprob: -17.500640869140625
    9. '	result' → logprob: -17.750640869140625
    10. '
' → logprob: -17.875640869140625

Token 478: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001993109006434679
    2. '<|end|>' → logprob: -6.751993179321289
    3. '\n' → logprob: -7.251993179321289
    4. '

' → logprob: -9.876993179321289
    5. 'if' → logprob: -10.626993179321289
    6. '```' → logprob: -11.001993179321289
    7. '
' → logprob: -12.126993179321289
    8. '' → logprob: -12.251993179321289
    9. '  
' → logprob: -12.876993179321289
    10. '<|end|>' → logprob: -12.876993179321289

Token 479: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002181987656513229
    2. '
' → logprob: -8.500218391418457
    3. 'main' → logprob: -11.375218391418457
    4. ' if' → logprob: -13.000218391418457
    5. '\n' → logprob: -14.375218391418457
    6. '```' → logprob: -15.500218391418457
    7. '#' → logprob: -17.00021743774414
    8. 'i' → logprob: -17.50021743774414
    9. '    
' → logprob: -17.75021743774414
    10. '\' → logprob: -17.75021743774414

Token 480: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2856886684894562
    2. '__' → logprob: -1.4106886386871338
    3. '_' → logprob: -5.785688877105713
    4. ' ' → logprob: -6.785688877105713
    5. ' ' → logprob: -9.535688400268555
    6. ' ' → logprob: -9.535688400268555
    7. '_name' → logprob: -10.160688400268555
    8. ' True' → logprob: -10.285688400268555
    9. ' _' → logprob: -10.410688400268555
    10. '​' → logprob: -10.910688400268555

Token 481: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.057368289679288864
    2. ' ==' → logprob: -3.182368278503418
    3. '==' → logprob: -4.557368278503418
    4. ' __' → logprob: -5.807368278503418
    5. 'name' → logprob: -8.307368278503418
    6. '_' → logprob: -8.682368278503418
    7. '.__' → logprob: -9.682368278503418
    8. '[' → logprob: -9.682368278503418
    9. '=="' → logprob: -10.057368278503418
    10. '__.__' → logprob: -10.432368278503418

Token 482: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.771655115589965e-05
    2. '__.__' → logprob: -11.125018119812012
    3. '==' → logprob: -13.500018119812012
    4. '=="' → logprob: -14.875018119812012
    5. '__.' → logprob: -15.250018119812012
    6. '__["' → logprob: -15.375018119812012
    7. '___' → logprob: -15.625018119812012
    8. '____' → logprob: -16.250017166137695
    9. ' ==' → logprob: -16.375017166137695
    10. '__('' → logprob: -16.500017166137695

Token 483: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012981504201889038
    2. '==' → logprob: -4.637981414794922
    3. ' ==' → logprob: -5.887981414794922
    4. '=="' → logprob: -7.762981414794922
    5. '__.__' → logprob: -12.137981414794922
    6. '=='' → logprob: -12.262981414794922
    7. '_' → logprob: -12.387981414794922
    8. '"' → logprob: -13.137981414794922
    9. '___' → logprob: -13.637981414794922
    10. '=' → logprob: -13.637981414794922

Token 484: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014226377941668034
    2. ''' → logprob: -4.26422643661499
    3. ' "__' → logprob: -9.764225959777832
    4. '__' → logprob: -12.389225959777832
    5. ' '__' → logprob: -14.639225959777832
    6. '"user' → logprob: -14.764225959777832
    7. '"name' → logprob: -15.139225959777832
    8. ' "' → logprob: -16.01422691345215
    9. '"_' → logprob: -17.13922691345215
    10. '"class' → logprob: -18.01422691345215

Token 485: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009151478880085051
    2. '__' → logprob: -7.000915050506592
    3. '_main' → logprob: -13.12591552734375
    4. ' main' → logprob: -13.75091552734375
    5. 'name' → logprob: -15.00091552734375
    6. '"' → logprob: -15.37591552734375
    7. '	main' → logprob: -17.62591552734375
    8. '-main' → logprob: -17.62591552734375
    9. 'm' → logprob: -17.75091552734375
    10. '_MAIN' → logprob: -18.00091552734375

Token 486: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03805583342909813
    2. '__' → logprob: -3.288055896759033
    3. '__':
' → logprob: -11.163055419921875
    4. '__["' → logprob: -16.038055419921875
    5. '_' → logprob: -16.663055419921875
    6. '__("' → logprob: -17.788055419921875
    7. '__.__' → logprob: -17.788055419921875
    8. '__.' → logprob: -18.288055419921875
    9. '"' → logprob: -18.663055419921875
    10. '```' → logprob: -18.663055419921875

Token 487: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0038830959238111973
    2. ' main' → logprob: -5.753882884979248
    3. '__' → logprob: -7.503882884979248
    4. '"' → logprob: -9.128883361816406
    5. '   ' → logprob: -10.378883361816406
    6. '	main' → logprob: -12.378883361816406
    7. '_main' → logprob: -12.628883361816406
    8. ' __' → logprob: -13.003883361816406
    9. ''' → logprob: -13.378883361816406
    10. ' ' → logprob: -14.003883361816406

Token 488: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001584850688232109
    2. ' main' → logprob: -8.750158309936523
    3. '	main' → logprob: -17.625158309936523
    4. '   ' → logprob: -18.250158309936523
    5. 'ma' → logprob: -18.500158309936523
    6. 'm' → logprob: -18.750158309936523
    7. 'mai' → logprob: -20.250158309936523
    8. '_main' → logprob: -20.625158309936523
    9. 'maine' → logprob: -21.000158309936523
    10. '(main' → logprob: -22.250158309936523

Token 489: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 487
Tokens correctement prédits (1ère position, stricte): 215
Tokens correctement prédits (1ère position, avec adaptation): 235
Tokens correctement prédits (top 10): 370
Précision stricte (1ère position): 44.15%
Précision adaptée (1ère position): 48.25%
Précision (top 10): 75.98%
================================================================================
