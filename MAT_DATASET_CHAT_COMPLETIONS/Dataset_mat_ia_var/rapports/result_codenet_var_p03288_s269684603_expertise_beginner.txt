================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
if a < 1200:
    print("ABC")
elif a < 2800:
    print("ARC")
else:
    print("AGC")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11533945053815842
    2. ')' → logprob: -2.240339517593384
    3. '()' → logprob: -6.865339279174805
    4. '())' → logprob: -7.990339279174805
    5. '(
' → logprob: -8.865339279174805
    6. '))' → logprob: -9.115339279174805
    7. '```' → logprob: -9.115339279174805
    8. '(a' → logprob: -9.240339279174805
    9. 'a' → logprob: -9.740339279174805
    10. '`' → logprob: -9.865339279174805

Token 5: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03134123980998993
    2. '*' → logprob: -3.656341314315796
    3. '%' → logprob: -6.406341075897217
    4. '\n' → logprob: -6.656341075897217
    5. '#' → logprob: -7.531341075897217
    6. '+
' → logprob: -8.156341552734375
    7. 'a' → logprob: -8.406341552734375
    8. '\' → logprob: -8.531341552734375
    9. '**' → logprob: -8.656341552734375
    10. ')' → logprob: -8.906341552734375

Token 6: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2271365225315094
    2. ' a' → logprob: -1.602136492729187
    3. 'a' → logprob: -6.477136611938477
    4. '  ' → logprob: -8.852136611938477
    5. ' ' → logprob: -11.352136611938477
    6. ' )' → logprob: -11.727136611938477
    7. ' (' → logprob: -12.602136611938477
    8. ' not' → logprob: -12.852136611938477
    9. ''' → logprob: -12.977136611938477
    10. ' '' → logprob: -13.477136611938477

Token 7: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25324225425720215
    2. ' ' → logprob: -1.7532422542572021
    3. ' <' → logprob: -3.753242254257202
    4. '>' → logprob: -4.503242492675781
    5. ' >=' → logprob: -4.878242492675781
    6. ' ==' → logprob: -5.128242492675781
    7. '  ' → logprob: -7.503242492675781
    8. ' <=' → logprob: -7.878242492675781
    9. ' %' → logprob: -8.128242492675781
    10. '<' → logprob: -8.253242492675781

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06692542135715485
    2. '10' → logprob: -2.941925525665283
    3. '5' → logprob: -5.316925525665283
    4. '0' → logprob: -5.566925525665283
    5. '20' → logprob: -6.816925525665283
    6. '100' → logprob: -7.066925525665283
    7. '=' → logprob: -7.191925525665283
    8. '50' → logprob: -8.316925048828125
    9. '1' → logprob: -9.191925048828125
    10. '40' → logprob: -10.441925048828125

Token 9: '120' (ID: 6106)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5989431738853455
    2. '0' → logprob: -1.3489432334899902
    3. '5' → logprob: -1.8489432334899902
    4. ' ' → logprob: -3.7239432334899902
    5. '1' → logprob: -5.47394323348999
    6. '100' → logprob: -5.97394323348999
    7. '20' → logprob: -6.97394323348999
    8. '50' → logprob: -6.97394323348999
    9. '=' → logprob: -7.84894323348999
    10. '2' → logprob: -7.97394323348999

Token 10: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4736459888808895e-05
    2. '':' → logprob: -12.375014305114746
    3. ':
' → logprob: -12.500014305114746
    4. '':'' → logprob: -13.250014305114746
    5. '>:' → logprob: -13.375014305114746
    6. ' :' → logprob: -13.750014305114746
    7. ':**' → logprob: -14.375014305114746
    8. '):' → logprob: -14.875014305114746
    9. '":' → logprob: -14.875014305114746
    10. '":"' → logprob: -15.250014305114746

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.457669562427327e-05
    2. '':' → logprob: -10.25007438659668
    3. '':'' → logprob: -10.75007438659668
    4. '>:' → logprob: -12.12507438659668
    5. ':**' → logprob: -12.37507438659668
    6. ':
' → logprob: -13.37507438659668
    7. '":' → logprob: -13.50007438659668
    8. '":"' → logprob: -13.50007438659668
    9. '):' → logprob: -13.50007438659668
    10. ' :' → logprob: -13.75007438659668

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08600126951932907
    2. 'print' → logprob: -3.33600115776062
    3. '    ' → logprob: -4.086001396179199
    4. ' print' → logprob: -4.336001396179199
    5. '    
' → logprob: -5.961001396179199
    6. '\n' → logprob: -6.086001396179199
    7. ''' → logprob: -6.086001396179199
    8. ':' → logprob: -6.211001396179199
    9. ' ' → logprob: -6.211001396179199
    10. '\' → logprob: -7.086001396179199

Token 13: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2292519360780716
    2. 'print' (adapté à ' print') → logprob: -1.6042519807815552
    3. '   ' → logprob: -5.604251861572266
    4. ''' → logprob: -10.604251861572266
    5. ' ' → logprob: -10.604251861572266
    6. '    ' → logprob: -10.729251861572266
    7. '	print' → logprob: -10.979251861572266
    8. '```' → logprob: -11.229251861572266
    9. '\n' → logprob: -12.229251861572266
    10. '`' → logprob: -12.354251861572266

Token 14: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010110549628734589
    2. '("' → logprob: -5.385110378265381
    3. '('' → logprob: -5.510110378265381
    4. '("("' → logprob: -6.760110378265381
    5. '()' → logprob: -8.510110855102539
    6. '(a' → logprob: -10.385110855102539
    7. '("")' → logprob: -10.635110855102539
    8. '(">' → logprob: -12.385110855102539
    9. '("(' → logprob: -13.260110855102539
    10. '("""' → logprob: -13.260110855102539

Token 15: 'ABC' (ID: 44197)
  Prédit: 'Bron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bron' → logprob: -0.8145017027854919
    2. 'New' → logprob: -2.4395017623901367
    3. 'Begin' → logprob: -2.9395017623901367
    4. 'Нов' → logprob: -3.0645017623901367
    5. 'No' → logprob: -3.1895017623901367
    6. 'Nov' → logprob: -3.5645017623901367
    7. 'Am' → logprob: -3.6895017623901367
    8. 'Hello' → logprob: -3.9395017623901367
    9. '"' → logprob: -4.564501762390137
    10. 'Un' → logprob: -4.689501762390137

Token 16: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0014787978725507855
    2. ')' → logprob: -6.626478672027588
    3. ')")' → logprob: -9.251479148864746
    4. 'A' → logprob: -10.751479148864746
    5. '"' → logprob: -11.126479148864746
    6. 'D' → logprob: -12.376479148864746
    7. '")
' → logprob: -12.876479148864746
    8. 'C' → logprob: -13.376479148864746
    9. '\")' → logprob: -13.376479148864746
    10. '"){' → logprob: -13.626479148864746

Token 17: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.581804633140564
    2. 'elif' → logprob: -0.831804633140564
    3. ' else' → logprob: -5.5818047523498535
    4. '```' → logprob: -6.7068047523498535
    5. ' elif' → logprob: -7.3318047523498535
    6. 'el' → logprob: -10.206804275512695
    7. '
' → logprob: -10.456804275512695
    8. '\n' → logprob: -10.831804275512695
    9. '    
' → logprob: -10.831804275512695
    10. '<|end|>' → logprob: -11.081804275512695

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.026787634938955307
    2. ' ' → logprob: -3.651787519454956
    3. 'a' → logprob: -7.776787757873535
    4. ' ' → logprob: -9.901787757873535
    5. '  ' → logprob: -12.151787757873535
    6. '    ' → logprob: -13.401787757873535
    7. ' space' → logprob: -13.776787757873535
    8. ' ' → logprob: -14.026787757873535
    9. ' (' → logprob: -14.151787757873535
    10. '"' → logprob: -14.214287757873535

Token 19: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0756494402885437
    2. ' >=' → logprob: -2.9506494998931885
    3. '<' → logprob: -4.450649261474609
    4. ' <=' → logprob: -4.950649261474609
    5. ' ' → logprob: -6.825649261474609
    6. '>=' → logprob: -7.825649261474609
    7. '<=' → logprob: -9.20064926147461
    8. ' ==' → logprob: -9.20064926147461
    9. ' >' → logprob: -9.70064926147461
    10. '   ' → logprob: -11.45064926147461

Token 20: ' ' (ID: 220)
  Prédit: '280'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.8926905989646912
    2. ' ' → logprob: -2.017690658569336
    3. '210' → logprob: -2.142690658569336
    4. '220' → logprob: -2.267690658569336
    5. '180' → logprob: -2.517690658569336
    6. '200' → logprob: -3.142690658569336
    7. '140' → logprob: -3.642690658569336
    8. '190' → logprob: -3.892690658569336
    9. '160' → logprob: -4.017690658569336
    10. '150' → logprob: -5.017690658569336

Token 21: '280' (ID: 17713)
  Prédit: '280'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.034420792013406754
    2. '210' → logprob: -4.784420967102051
    3. '180' → logprob: -5.034420967102051
    4. '190' → logprob: -5.034420967102051
    5. '220' → logprob: -5.659420967102051
    6. '140' → logprob: -6.159420967102051
    7. ' ' → logprob: -6.659420967102051
    8. '170' → logprob: -6.659420967102051
    9. '160' → logprob: -6.784420967102051
    10. '200' → logprob: -7.284420967102051

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.598092684522271e-05
    2. '1' → logprob: -11.000056266784668
    3. '4' → logprob: -11.000056266784668
    4. '8' → logprob: -11.750056266784668
    5. '   ' → logprob: -12.750056266784668
    6. '9' → logprob: -12.812556266784668
    7. '00' → logprob: -13.062556266784668
    8. '2' → logprob: -14.000056266784668
    9. '5' → logprob: -14.187556266784668
    10. '3' → logprob: -14.375056266784668

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.6060808522743173e-05
    2. ':
' → logprob: -10.875025749206543
    3. '):' → logprob: -12.750025749206543
    4. '+:' → logprob: -13.500025749206543
    5. ' :' → logprob: -13.750025749206543
    6. '>:' → logprob: -13.875025749206543
    7. ':**' → logprob: -15.500025749206543
    8. ' and' → logprob: -16.25002670288086
    9. ':return' → logprob: -16.37502670288086
    10. '':' → logprob: -16.87502670288086

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00920239370316267
    2. '"' → logprob: -5.384202480316162
    3. ' print' → logprob: -6.259202480316162
    4. '    ' → logprob: -6.509202480316162
    5. 'print' → logprob: -7.259202480316162
    6. '       ' → logprob: -8.509202003479004
    7. ' ' → logprob: -9.384202003479004
    8. ''' → logprob: -9.509202003479004
    9. '  ' → logprob: -11.009202003479004
    10. '```' → logprob: -11.134202003479004

Token 25: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006874741520732641
    2. ' print' → logprob: -5.0068745613098145
    3. '   ' → logprob: -9.131875038146973
    4. '"' → logprob: -10.756875038146973
    5. ' ' → logprob: -11.381875038146973
    6. '	print' → logprob: -12.506875038146973
    7. '  ' → logprob: -12.631875038146973
    8. 'pr' → logprob: -13.006875038146973
    9. '    ' → logprob: -13.131875038146973
    10. '       ' → logprob: -14.006875038146973

Token 26: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007481922395527363
    2. '(' → logprob: -5.132482051849365
    3. '("("' → logprob: -6.507482051849365
    4. '("(' → logprob: -9.882481575012207
    5. '("")' → logprob: -12.632481575012207
    6. '('' → logprob: -13.132481575012207
    7. '(""' → logprob: -13.507481575012207
    8. '("\"' → logprob: -14.007481575012207
    9. '("""' → logprob: -14.507481575012207
    10. '(">' → logprob: -16.007482528686523

Token 27: 'ARC' (ID: 64758)
  Prédit: 'ARC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARC' → logprob: -0.02080252207815647
    2. ' ARC' → logprob: -4.5208024978637695
    3. '"' → logprob: -4.6458024978637695
    4. 'AG' → logprob: -10.14580249786377
    5. '""' → logprob: -10.52080249786377
    6. ''' → logprob: -12.52080249786377
    7. '-' → logprob: -13.14580249786377
    8. 'arc' → logprob: -13.27080249786377
    9. '   ' → logprob: -13.27080249786377
    10. 'CODE' → logprob: -13.39580249786377

Token 28: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00010044389637187123
    2. '")
' → logprob: -9.750100135803223
    3. ')' → logprob: -10.500100135803223
    4. '"' → logprob: -11.750100135803223
    5. '()' → logprob: -13.750100135803223
    6. 'C' → logprob: -13.875100135803223
    7. 'B' → logprob: -14.375100135803223
    8. '```' → logprob: -14.500100135803223
    9. '')' → logprob: -14.625100135803223
    10. 'A' → logprob: -14.750100135803223

Token 29: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0013219076208770275
    2. ' else' → logprob: -7.001321792602539
    3. 'elif' → logprob: -7.876321792602539
    4. '_else' → logprob: -11.001321792602539
    5. '```' → logprob: -12.001321792602539
    6. 'elser' → logprob: -13.126321792602539
    7. '	else' → logprob: -13.376321792602539
    8. '<|end|>' → logprob: -13.751321792602539
    9. 'els' → logprob: -14.376321792602539
    10. 'elses' → logprob: -14.376321792602539

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.226628895296017e-06
    2. ':
' → logprob: -12.625007629394531
    3. ' :' → logprob: -12.750007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '():' → logprob: -15.625007629394531
    6. '):' → logprob: -16.00000762939453
    7. ':**' → logprob: -16.37500762939453
    8. '：' → logprob: -17.25000762939453
    9. ':return' → logprob: -17.37500762939453
    10. ':
' → logprob: -17.62500762939453

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002271820092573762
    2. ' print' → logprob: -6.50227165222168
    3. 'print' → logprob: -7.25227165222168
    4. '"' → logprob: -10.62727165222168
    5. '```' → logprob: -11.37727165222168
    6. '    ' → logprob: -11.75227165222168
    7. '       ' → logprob: -11.87727165222168
    8. ' ' → logprob: -12.50227165222168
    9. '  ' → logprob: -13.62727165222168
    10. '    
' → logprob: -13.87727165222168

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02272004634141922
    2. ' print' → logprob: -4.022719860076904
    3. '   ' → logprob: -5.397719860076904
    4. '"' → logprob: -11.397720336914062
    5. ' ' → logprob: -12.272720336914062
    6. '	print' → logprob: -12.272720336914062
    7. '       ' → logprob: -12.522720336914062
    8. '    ' → logprob: -13.522720336914062
    9. '  ' → logprob: -13.647720336914062
    10. 'D' → logprob: -13.772720336914062

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2817232608795166
    2. '("' → logprob: -1.5317232608795166
    3. '("("' → logprob: -3.5317232608795166
    4. '("")' → logprob: -10.031723022460938
    5. '("(' → logprob: -10.656723022460938
    6. '('' → logprob: -11.156723022460938
    7. '()' → logprob: -11.906723022460938
    8. '("""' → logprob: -12.406723022460938
    9. '(">' → logprob: -13.281723022460938
    10. '(""' → logprob: -13.406723022460938

Token 34: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.058348096907138824
    2. '"' → logprob: -2.9333481788635254
    3. ' AG' → logprob: -6.808348178863525
    4. 'ABC' → logprob: -7.183348178863525
    5. '   ' → logprob: -7.933348178863525
    6. 'AGN' → logprob: -8.433347702026367
    7. '"""' → logprob: -8.808347702026367
    8. '"A' → logprob: -9.183347702026367
    9. '""' → logprob: -9.183347702026367
    10. ''' → logprob: -9.433347702026367

Token 35: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.166338137816638e-05
    2. 'I' → logprob: -12.000031471252441
    3. 'Ｃ' → logprob: -12.375031471252441
    4. '")' → logprob: -12.500031471252441
    5. '"C' → logprob: -12.750031471252441
    6. ' C' → logprob: -12.875031471252441
    7. 'CO' → logprob: -13.125031471252441
    8. 'CODE' → logprob: -13.875031471252441
    9. 'E' → logprob: -13.875031471252441
    10. '```' → logprob: -14.000031471252441

Token 36: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.8908587662735954e-05
    2. ')' → logprob: -11.250019073486328
    3. '"' → logprob: -12.500019073486328
    4. '")
' → logprob: -13.750019073486328
    5. ')")' → logprob: -13.875019073486328
    6. '```' → logprob: -16.875019073486328
    7. '')' → logprob: -17.500019073486328
    8. '")
' → logprob: -18.375019073486328
    9. '");' → logprob: -18.625019073486328
    10. '}")' → logprob: -18.625019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 82.35%
================================================================================
