================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return map(int, input().split())

def read_steps(m):
    return [int(input()) for _ in range(m)]

def init_dp(n):
    return [0 for _ in range(n+10)]

def set_base_case(dp):
    dp[0] = 1

def set_broken_steps(dp, a):
    for x in a:
        mark_broken_step(dp, x)

def mark_broken_step(dp, x):
    dp[x] = -1

def get_mod():
    return 10**9 + 7

def update_dp(i, dp, mod):
    if dp[i] < 0:
        return
    increment_step(i+1, dp, mod, dp[i])
    increment_step(i+2, dp, mod, dp[i])

def increment_step(idx, dp, mod, value):
    if dp[idx] >= 0:
        dp[idx] += value
        dp[idx] %= mod

def compute_result(n, dp, mod):
    for i in range(n):
        update_dp(i, dp, mod)
    return dp[n]

def print_result(res):
    print(res)

def main():
    n, m = read_input()
    a = read_steps(m)
    dp = init_dp(n)
    set_base_case(dp)
    set_broken_steps(dp, a)
    mod = get_mod()
    result = compute_result(n, dp, mod)
    print_result(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013885974884033203
    2. '():' → logprob: -4.513885974884033
    3. '_' → logprob: -6.388885974884033
    4. '(:' → logprob: -7.888885974884033
    5. '(_:' → logprob: -8.138885498046875
    6. '```' → logprob: -8.388885498046875
    7. ':' → logprob: -10.013885498046875
    8. '()' → logprob: -10.138885498046875
    9. '(_' → logprob: -10.388885498046875
    10. ' (' → logprob: -10.388885498046875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.618809163570404
    2. '   ' → logprob: -1.3688092231750488
    3. 'input' → logprob: -2.493809223175049
    4. 'r' → logprob: -3.618809223175049
    5. 'data' → logprob: -3.743809223175049
    6. 'x' → logprob: -4.118809223175049
    7. '```' → logprob: -4.493809223175049
    8. 'i' → logprob: -4.868809223175049
    9. 'user' → logprob: -4.993809223175049
    10. 'n' → logprob: -5.118809223175049

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20023325085639954
    2. ' input' → logprob: -2.200233221054077
    3. 'input' → logprob: -2.825233221054077
    4. '"' → logprob: -4.950233459472656
    5. '  ' → logprob: -6.575233459472656
    6. ''' → logprob: -6.700233459472656
    7. ' []' → logprob: -7.575233459472656
    8. ' None' → logprob: -8.700233459472656
    9. '(input' → logprob: -8.825233459472656
    10. '(' → logprob: -8.950233459472656

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006852007936686277
    2. '(lambda' → logprob: -5.381852149963379
    3. '<|end|>' → logprob: -6.756852149963379
    4. ' (' → logprob: -7.381852149963379
    5. '```' → logprob: -9.381852149963379
    6. '(
' → logprob: -10.506852149963379
    7. '('' → logprob: -10.881852149963379
    8. '(user' → logprob: -10.881852149963379
    9. '("("' → logprob: -11.006852149963379
    10. '<|end|>' → logprob: -11.006852149963379

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6519303321838379
    2. ')' → logprob: -1.401930332183838
    3. '(' → logprob: -1.526930332183838
    4. 'input' → logprob: -5.651930332183838
    5. '```' → logprob: -6.526930332183838
    6. ' input' → logprob: -6.776930332183838
    7. '(stdin' → logprob: -6.776930332183838
    8. '(read' → logprob: -7.026930332183838
    9. '())' → logprob: -7.151930332183838
    10. '(
' → logprob: -7.401930332183838

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38696375489234924
    2. 'input' → logprob: -1.1369637250900269
    3. '(input' → logprob: -9.511963844299316
    4. ')' → logprob: -11.636963844299316
    5. '=input' → logprob: -13.636963844299316
    6. '	input' → logprob: -13.636963844299316
    7. '[input' → logprob: -13.636963844299316
    8. '<|end|>' → logprob: -13.886963844299316
    9. ' iter' → logprob: -14.011963844299316
    10. ',input' → logprob: -14.261963844299316

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09545417875051498
    2. '()' → logprob: -2.470454216003418
    3. '(' → logprob: -6.345454216003418
    4. ')' → logprob: -6.345454216003418
    5. ' ())' → logprob: -6.845454216003418
    6. '()))' → logprob: -7.345454216003418
    7. '(()' → logprob: -7.595454216003418
    8. '`()' → logprob: -8.595454216003418
    9. '('' → logprob: -8.970454216003418
    10. '(""))' → logprob: -9.220454216003418

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011116556823253632
    2. 'strip' → logprob: -4.5111165046691895
    3. ' split' → logprob: -10.261116981506348
    4. 'rstrip' → logprob: -10.636116981506348
    5. ')' → logprob: -11.761116981506348
    6. 'read' → logprob: -14.261116981506348
    7. ' strip' → logprob: -14.386116981506348
    8. '(split' → logprob: -14.636116981506348
    9. '().' → logprob: -16.13611602783203
    10. '_split' → logprob: -17.26111602783203

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20327742397785187
    2. '()))' → logprob: -1.7032774686813354
    3. '()' → logprob: -6.828277587890625
    4. ')' → logprob: -7.453277587890625
    5. '))' → logprob: -8.828277587890625
    6. '(' → logprob: -11.078277587890625
    7. ' ())' → logprob: -11.578277587890625
    8. '()),' → logprob: -11.828277587890625
    9. '())
' → logprob: -12.203277587890625
    10. '())))' → logprob: -12.578277587890625

Token 13: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4394218921661377
    2. '(' → logprob: -1.6894218921661377
    3. 'def' → logprob: -2.0644218921661377
    4. '#' → logprob: -2.3144218921661377
    5. '\' → logprob: -2.4394218921661377
    6. '```' → logprob: -2.9394218921661377
    7. 'x' → logprob: -3.1894218921661377
    8. ')' → logprob: -3.6894218921661377
    9. '[' → logprob: -3.6894218921661377
    10. 'n' → logprob: -4.189421653747559

Token 14: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7215670347213745
    2. ' solve' → logprob: -1.0965670347213745
    3. ' process' → logprob: -2.471567153930664
    4. ' write' → logprob: -3.096567153930664
    5. ' calculate' → logprob: -3.471567153930664
    6. ' compute' → logprob: -5.346567153930664
    7. ' factorial' → logprob: -5.596567153930664
    8. ' sum' → logprob: -5.846567153930664
    9. ' solution' → logprob: -6.846567153930664
    10. ' binary' → logprob: -6.846567153930664

Token 15: '_steps' (ID: 52120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23544715344905853
    2. '_line' → logprob: -1.9854471683502197
    3. '_input' → logprob: -3.1104471683502197
    4. '_array' → logprob: -4.735446929931641
    5. '_int' → logprob: -4.985446929931641
    6. 'int' → logprob: -6.360446929931641
    7. '_list' → logprob: -6.485446929931641
    8. 'line' → logprob: -6.610446929931641
    9. '_output' → logprob: -6.735446929931641
    10. '(' → logprob: -7.110446929931641

Token 16: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03189412131905556
    2. '(' → logprob: -3.5318942070007324
    3. '()' → logprob: -6.906894207000732
    4. '_' → logprob: -7.281894207000732
    5. '```' → logprob: -9.656893730163574
    6. ' ():' → logprob: -10.281893730163574
    7. '[]' → logprob: -10.406893730163574
    8. '_:' → logprob: -10.906893730163574
    9. '_to' → logprob: -10.906893730163574
    10. '**' → logprob: -11.156893730163574

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13736678659915924
    2. ')' → logprob: -2.137366771697998
    3. '_' → logprob: -5.762366771697998
    4. '_steps' → logprob: -5.887366771697998
    5. 'e' → logprob: -6.512366771697998
    6. '):
' → logprob: -8.137367248535156
    7. 'a' → logprob: -8.137367248535156
    8. ')_' → logprob: -8.262367248535156
    9. ')):' → logprob: -8.262367248535156
    10. ' ):' → logprob: -8.387367248535156

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2750801146030426
    2. '```' → logprob: -2.9000802040100098
    3. '    ' → logprob: -3.0250802040100098
    4. '    
' → logprob: -3.4000802040100098
    5. ' for' → logprob: -4.15008020401001
    6. '\n' → logprob: -4.15008020401001
    7. '[' → logprob: -4.40008020401001
    8. '\' → logprob: -5.02508020401001
    9. '
' → logprob: -5.27508020401001
    10. ' 
' → logprob: -5.27508020401001

Token 19: ' return' (ID: 622)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.6432910561561584
    2. '   ' → logprob: -1.1432909965515137
    3. ' for' → logprob: -2.6432909965515137
    4. 'steps' → logprob: -3.3932909965515137
    5. ' result' → logprob: -3.7682909965515137
    6. ' return' → logprob: -4.768290996551514
    7. 'result' → logprob: -5.018290996551514
    8. 'for' → logprob: -5.393290996551514
    9. ' step' → logprob: -5.518290996551514
    10. 'return' (adapté à ' return') → logprob: -6.893290996551514

Token 20: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20052924752235413
    2. '[' → logprob: -2.3255293369293213
    3. ' []' → logprob: -2.8255293369293213
    4. '[m' → logprob: -4.950529098510742
    5. '[]' → logprob: -5.075529098510742
    6. '[int' → logprob: -5.575529098510742
    7. ' map' → logprob: -6.200529098510742
    8. ' [(' → logprob: -7.200529098510742
    9. ' list' → logprob: -7.450529098510742
    10. '[i' → logprob: -7.575529098510742

Token 21: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05922471359372139
    2. 'map' → logprob: -3.6842246055603027
    3. 'tuple' → logprob: -4.184224605560303
    4. 'list' → logprob: -4.434224605560303
    5. 'm' → logprob: -6.809224605560303
    6. '(int' → logprob: -7.184224605560303
    7. ' int' → logprob: -7.434224605560303
    8. 'input' → logprob: -7.434224605560303
    9. '[]' → logprob: -7.559224605560303
    10. '0' → logprob: -7.559224605560303

Token 22: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.030950909480452538
    2. '(input' → logprob: -4.030951023101807
    3. '(i' → logprob: -4.655951023101807
    4. '(' → logprob: -6.780951023101807
    5. '(s' → logprob: -7.530951023101807
    6. '(_)' → logprob: -7.780951023101807
    7. 'input' → logprob: -8.155950546264648
    8. ']' → logprob: -8.530950546264648
    9. '_]' → logprob: -8.780950546264648
    10. '()]' → logprob: -8.905950546264648

Token 23: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00033951509976759553
    2. '()' → logprob: -8.37533950805664
    3. '()]' → logprob: -9.87533950805664
    4. ')' → logprob: -11.37533950805664
    5. '().' → logprob: -11.50033950805664
    6. '()))' → logprob: -11.62533950805664
    7. ' ())' → logprob: -11.62533950805664
    8. '())
' → logprob: -12.00033950805664
    9. ')]' → logprob: -12.12533950805664
    10. '()),' → logprob: -12.50033950805664

Token 24: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011686748825013638
    2. ')]' → logprob: -5.2616868019104
    3. ' for' → logprob: -6.0116868019104
    4. '()' → logprob: -6.2616868019104
    5. 'for' → logprob: -6.5116868019104
    6. '())' → logprob: -8.761686325073242
    7. ' )' → logprob: -8.761686325073242
    8. ']' → logprob: -9.511686325073242
    9. '   ' → logprob: -9.886686325073242
    10. ' ' → logprob: -9.886686325073242

Token 25: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.49356067180633545
    2. '_' → logprob: -1.1185606718063354
    3. ' range' → logprob: -2.868560791015625
    4. ' ' → logprob: -5.243560791015625
    5. '_range' → logprob: -7.868560791015625
    6. 'range' → logprob: -8.118560791015625
    7. ' in' → logprob: -10.743560791015625
    8. ' xrange' → logprob: -10.993560791015625
    9. '	range' → logprob: -11.868560791015625
    10. ' ' → logprob: -12.118560791015625

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004660099744796753
    2. 'in' → logprob: -5.379660129547119
    3. ' ' → logprob: -10.879659652709961
    4. 'm' → logprob: -11.629659652709961
    5. 'range' → logprob: -12.004659652709961
    6. 'i' → logprob: -12.504659652709961
    7. '  ' → logprob: -14.254659652709961
    8. 'n' → logprob: -15.254659652709961
    9. 'step' → logprob: -15.629659652709961
    10. '	in' → logprob: -15.629659652709961

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018280261429026723
    2. ' range' → logprob: -8.62518310546875
    3. 'ange' → logprob: -13.25018310546875
    4. 'm' → logprob: -13.75018310546875
    5. '	range' → logprob: -16.00018310546875
    6. '(range' → logprob: -16.12518310546875
    7. '[' → logprob: -17.62518310546875
    8. ')' → logprob: -17.87518310546875
    9. 'rang' → logprob: -18.37518310546875
    10. '.range' → logprob: -18.75018310546875

Token 28: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. 'm' → logprob: -15.375335693359375
    4. ' (' → logprob: -16.125335693359375
    5. ' m' → logprob: -17.125335693359375
    6. '(n' → logprob: -18.000335693359375
    7. '(s' → logprob: -19.000335693359375
    8. ')m' → logprob: -19.375335693359375
    9. '(M' → logprob: -20.125335693359375
    10. '(
' → logprob: -20.625335693359375

Token 29: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.4987974029500037e-05
    2. ')' → logprob: -11.375024795532227
    3. ']' → logprob: -11.750024795532227
    4. ' )' → logprob: -13.375024795532227
    5. ')]
' → logprob: -13.625024795532227
    6. ')])' → logprob: -14.000024795532227
    7. '])]' → logprob: -14.500024795532227
    8. '   ' → logprob: -14.500024795532227
    9. '')]' → logprob: -15.375024795532227
    10. '))' → logprob: -15.500024795532227

Token 30: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019519487395882607
    2. '
' → logprob: -5.144519329071045
    3. '#' → logprob: -5.394519329071045
    4. '

' → logprob: -5.519519329071045
    5. '<|end|>' → logprob: -6.644519329071045
    6. 'm' → logprob: -7.019519329071045
    7. 'for' → logprob: -7.144519329071045
    8. '```' → logprob: -7.269519329071045
    9. 'n' → logprob: -7.519519329071045
    10. '<|end|>' → logprob: -8.894519805908203

Token 31: ' init' (ID: 6327)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06521632522344589
    2. ' solve' → logprob: -4.065216541290283
    3. 'main' → logprob: -4.065216541290283
    4. ' bfs' → logprob: -5.315216541290283
    5. ' count' → logprob: -5.440216541290283
    6. ' rotate' → logprob: -5.940216541290283
    7. 'solve' → logprob: -6.440216541290283
    8. ' move' → logprob: -6.565216541290283
    9. ' process' → logprob: -6.690216541290283
    10. ' fibonacci' → logprob: -6.815216541290283

Token 32: '_dp' (ID: 133252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6548055410385132
    2. '_array' → logprob: -0.9048055410385132
    3. '(' → logprob: -4.154805660247803
    4. '_data' → logprob: -4.779805660247803
    5. '_matrix' → logprob: -5.279805660247803
    6. '_buffer' → logprob: -5.529805660247803
    7. '_list' → logprob: -5.654805660247803
    8. '_queue' → logprob: -5.654805660247803
    9. '_map' → logprob: -5.654805660247803
    10. '_state' → logprob: -5.779805660247803

Token 33: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11973082274198532
    2. '(n' → logprob: -2.6197307109832764
    3. '_' → logprob: -3.9947307109832764
    4. '(size' → logprob: -4.7447309494018555
    5. '(len' → logprob: -5.1197309494018555
    6. '_(' → logprob: -5.7447309494018555
    7. '(_' → logprob: -6.9947309494018555
    8. '(num' → logprob: -7.9947309494018555
    9. '((' → logprob: -8.119730949401855
    10. '_array' → logprob: -8.119730949401855

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025749478954821825
    2. ',' → logprob: -6.377574920654297
    3. ' ):' → logprob: -7.627574920654297
    4. ')' → logprob: -8.002574920654297
    5. '):
' → logprob: -10.627574920654297
    6. '+' → logprob: -11.377574920654297
    7. ',n' → logprob: -12.127574920654297
    8. '   ' → logprob: -13.002574920654297
    9. ' ' → logprob: -14.127574920654297
    10. ')：' → logprob: -14.252574920654297

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05535949766635895
    2. '[' → logprob: -3.6803596019744873
    3. ' return' → logprob: -4.555359363555908
    4. 'return' → logprob: -4.930359363555908
    5. 'dp' → logprob: -5.180359363555908
    6. ' [' → logprob: -5.555359363555908
    7. '[
' → logprob: -7.305359363555908
    8. ' dp' → logprob: -8.430359840393066
    9. '_dp' → logprob: -9.430359840393066
    10. '[[' → logprob: -9.930359840393066

Token 36: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5748125314712524
    2. '   ' → logprob: -1.5748125314712524
    3. 'return' (adapté à ' return') → logprob: -2.199812412261963
    4. ' [' → logprob: -2.449812412261963
    5. ' return' → logprob: -3.824812412261963
    6. 'dp' → logprob: -5.574812412261963
    7. '[[' → logprob: -6.074812412261963
    8. '[n' → logprob: -6.199812412261963
    9. '[
' → logprob: -6.324812412261963
    10. ' [[' → logprob: -7.324812412261963

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25649306178092957
    2. '[[' → logprob: -1.506493091583252
    3. ' [[' → logprob: -6.006493091583252
    4. ' [' → logprob: -6.381493091583252
    5. '[n' → logprob: -8.256492614746094
    6. '[-' → logprob: -9.131492614746094
    7. '[int' → logprob: -12.131492614746094
    8. '[m' → logprob: -12.506492614746094
    9. '[(' → logprob: -12.881492614746094
    10. '{' → logprob: -13.131492614746094

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07586505264043808
    2. 'float' → logprob: -3.0758650302886963
    3. '[' → logprob: -4.200865268707275
    4. 'False' → logprob: -5.075865268707275
    5. '-' → logprob: -5.575865268707275
    6. '1' → logprob: -6.950865268707275
    7. '[-' → logprob: -8.825864791870117
    8. '(' → logprob: -8.950864791870117
    9. ' ' → logprob: -9.075864791870117
    10. ' [' → logprob: -9.200864791870117

Token 39: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012572570703923702
    2. ']*(' → logprob: -7.001257419586182
    3. ']*' → logprob: -8.376256942749023
    4. ' for' → logprob: -9.626256942749023
    5. ' ]' → logprob: -10.376256942749023
    6. 'for' → logprob: -11.501256942749023
    7. ']+' → logprob: -12.126256942749023
    8. '   ' → logprob: -13.626256942749023
    9. '+' → logprob: -15.126256942749023
    10. ')' → logprob: -15.251256942749023

Token 40: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.254543274641037
    2. '_' → logprob: -1.5045433044433594
    3. ' range' → logprob: -6.379543304443359
    4. ' ' → logprob: -7.504543304443359
    5. 'range' → logprob: -8.62954330444336
    6. '_range' → logprob: -9.62954330444336
    7. ' i' → logprob: -9.75454330444336
    8. '<|end|>' → logprob: -10.62954330444336
    9. ' in' → logprob: -10.87954330444336
    10. '<|end|>' → logprob: -11.87954330444336

Token 41: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02839456871151924
    2. ' range' → logprob: -4.15339469909668
    3. 'in' → logprob: -5.02839469909668
    4. ' in' → logprob: -5.40339469909668
    5. 'n' → logprob: -6.90339469909668
    6. 'ange' → logprob: -9.15339469909668
    7. '_' → logprob: -9.90339469909668
    8. ' xrange' → logprob: -10.52839469909668
    9. '(range' → logprob: -11.27839469909668
    10. '	range' → logprob: -11.52839469909668

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193455815315247
    2. 'range' → logprob: -1.50193452835083
    3. '(range' → logprob: -12.376935005187988
    4. ' xrange' → logprob: -14.126935005187988
    5. '	range' → logprob: -14.626935005187988
    6. ' ' → logprob: -16.501934051513672
    7. '_range' → logprob: -18.376934051513672
    8. '.range' → logprob: -19.001934051513672
    9. 'Range' → logprob: -20.251934051513672
    10. ')' → logprob: -20.251934051513672

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002476604888215661
    2. '(' → logprob: -6.002476692199707
    3. ' (' → logprob: -14.002476692199707
    4. '(range' → logprob: -17.37747573852539
    5. 'n' → logprob: -17.62747573852539
    6. ')' → logprob: -17.62747573852539
    7. ' ' → logprob: -18.37747573852539
    8. '(

' → logprob: -18.37747573852539
    9. '(
' → logprob: -18.50247573852539
    10. ')n' → logprob: -19.00247573852539

Token 44: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.166338137816638e-05
    2. ' )' → logprob: -10.625031471252441
    3. ']' → logprob: -12.875031471252441
    4. ')' → logprob: -13.125031471252441
    5. '+' → logprob: -13.875031471252441
    6. ' ]' → logprob: -14.375031471252441
    7. ')]
' → logprob: -14.875031471252441
    8. '])]' → logprob: -15.875031471252441
    9. ')])' → logprob: -16.000032424926758
    10. '   ' → logprob: -16.000032424926758

Token 45: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.221884101862088e-05
    2. ' ' → logprob: -9.375092506408691
    3. '2' → logprob: -12.375092506408691
    4. '0' → logprob: -12.875092506408691
    5. ')' → logprob: -15.375092506408691
    6. '5' → logprob: -16.125091552734375
    7. '10' → logprob: -16.500091552734375
    8. '  ' → logprob: -16.500091552734375
    9. '3' → logprob: -16.625091552734375
    10. '   ' → logprob: -17.500091552734375

Token 46: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.310693111619912e-05
    2. ']' → logprob: -10.750042915344238
    3. ')' → logprob: -11.000042915344238
    4. ' )' → logprob: -12.500042915344238
    5. ')]
' → logprob: -15.625042915344238
    6. ' ]' → logprob: -15.750042915344238
    7. '])' → logprob: -15.750042915344238
    8. ')])' → logprob: -15.750042915344238
    9. '])]' → logprob: -15.875042915344238
    10. '   ' → logprob: -16.000043869018555

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005274149589240551
    2. '<|end|>' → logprob: -8.875527381896973
    3. 'd' → logprob: -9.250527381896973
    4. '```' → logprob: -9.750527381896973
    5. '
' → logprob: -9.875527381896973
    6. ']' → logprob: -10.375527381896973
    7. '\' → logprob: -10.375527381896973
    8. '

' → logprob: -10.750527381896973
    9. '#' → logprob: -10.750527381896973
    10. 'n' → logprob: -11.125527381896973

Token 48: ' set' (ID: 920)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4632228910923004
    2. ' main' → logprob: -2.2132229804992676
    3. ' max' → logprob: -3.0882229804992676
    4. ' calculate' → logprob: -3.2132229804992676
    5. ' jump' → logprob: -3.9632229804992676
    6. ' compute' → logprob: -3.9632229804992676
    7. ' dp' → logprob: -4.088222980499268
    8. ' stair' → logprob: -4.213222980499268
    9. ' count' → logprob: -4.463222980499268
    10. ' climb' → logprob: -4.588222980499268

Token 49: '_base' (ID: 17096)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.15334856510162354
    2. '_' → logprob: -2.028348445892334
    3. '(' → logprob: -6.403348445892334
    4. '_up' → logprob: -6.653348445892334
    5. '_step' → logprob: -7.153348445892334
    6. '_value' → logprob: -7.278348445892334
    7. '_max' → logprob: -7.403348445892334
    8. '_steps' → logprob: -7.653348445892334
    9. '_diff' → logprob: -7.653348445892334
    10. '_p' → logprob: -7.653348445892334

Token 50: '_case' (ID: 43667)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7610490918159485
    2. '_case' → logprob: -1.5110490322113037
    3. '(' → logprob: -2.1360490322113037
    4. '_line' → logprob: -2.2610490322113037
    5. '(dp' → logprob: -3.6360490322113037
    6. '_dp' → logprob: -3.7610490322113037
    7. '_(' → logprob: -4.511049270629883
    8. '_values' → logprob: -4.511049270629883
    9. '_state' → logprob: -5.136049270629883
    10. '_value' → logprob: -5.511049270629883

Token 51: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.47677716612815857
    2. '(' → logprob: -0.976777195930481
    3. '(n' → logprob: -6.101777076721191
    4. ' (' → logprob: -8.476777076721191
    5. '()' → logprob: -9.226777076721191
    6. '_dp' → logprob: -9.601777076721191
    7. 'dp' → logprob: -11.351777076721191
    8. '(df' → logprob: -11.351777076721191
    9. '_' → logprob: -11.726777076721191
    10. '(s' → logprob: -11.976777076721191

Token 52: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7446368932723999
    2. '):' → logprob: -0.7446368932723999
    3. ')' → logprob: -4.1196370124816895
    4. '[' → logprob: -4.4946370124816895
    5. '(' → logprob: -4.6196370124816895
    6. ')]' → logprob: -5.2446370124816895
    7. '(dp' → logprob: -6.2446370124816895
    8. ' ,' → logprob: -6.6196370124816895
    9. '):
' → logprob: -6.9946370124816895
    10. ' ):' → logprob: -7.2446370124816895

Token 53: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6276000738143921
    2. '   ' → logprob: -0.8776000738143921
    3. ' dp' → logprob: -3.0026001930236816
    4. '(dp' → logprob: -8.502599716186523
    5. '```' → logprob: -8.752599716186523
    6. '	dp' → logprob: -8.877599716186523
    7. '[' → logprob: -9.002599716186523
    8. ' ' → logprob: -11.127599716186523
    9. '       ' → logprob: -11.377599716186523
    10. '_dp' → logprob: -11.502599716186523

Token 54: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.189217671751976
    2. ' dp' → logprob: -1.9392176866531372
    3. '   ' → logprob: -3.5642175674438477
    4. '	dp' → logprob: -9.439217567443848
    5. '[' → logprob: -9.564217567443848
    6. ' ' → logprob: -10.564217567443848
    7. '    ' → logprob: -10.814217567443848
    8. '```' → logprob: -11.564217567443848
    9. '(dp' → logprob: -11.689217567443848
    10. '  ' → logprob: -11.814217567443848

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.875000953674316
    3. '\[' → logprob: -15.125000953674316
    4. '```' → logprob: -15.250000953674316
    5. '[-' → logprob: -16.625001907348633
    6. '0' → logprob: -16.625001907348633
    7. '[
' → logprob: -17.000001907348633
    8. '1' → logprob: -18.375001907348633
    9. '[len' → logprob: -18.500001907348633
    10. 'def' → logprob: -18.500001907348633

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006971586495637894
    2. '1' → logprob: -5.00697135925293
    3. '2' → logprob: -9.25697135925293
    4. '5' → logprob: -10.13197135925293
    5. '3' → logprob: -10.25697135925293
    6. '4' → logprob: -11.00697135925293
    7. ' ' → logprob: -11.13197135925293
    8. '[' → logprob: -11.25697135925293
    9. ']' → logprob: -11.50697135925293
    10. '-' → logprob: -11.75697135925293

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037844041362404823
    2. ']=' → logprob: -5.6287841796875
    3. ' ]' → logprob: -8.6287841796875
    4. '=' → logprob: -12.7537841796875
    5. ']+=' → logprob: -13.8787841796875
    6. ']>' → logprob: -14.5037841796875
    7. ']==' → logprob: -14.6287841796875
    8. ' =' → logprob: -16.1287841796875
    9. '[' → logprob: -16.1287841796875
    10. ']
' → logprob: -16.6287841796875

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804241120815277
    2. ' =' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.913042068481445
    4. '=

' → logprob: -15.663042068481445
    5. '+=' → logprob: -16.163042068481445
    6. '=True' → logprob: -16.663042068481445
    7. '=}' → logprob: -16.788042068481445
    8. ']=' → logprob: -16.913042068481445
    9. '＝' → logprob: -17.038042068481445
    10. '<|end|>' → logprob: -17.038042068481445

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001126026691053994
    2. '0' → logprob: -9.375112533569336
    3. ' ' → logprob: -10.875112533569336
    4. 'dp' → logprob: -13.125112533569336
    5. '   ' → logprob: -13.812612533569336
    6. '10' → logprob: -14.125112533569336
    7. '2' → logprob: -14.312612533569336
    8. '100' → logprob: -14.437612533569336
    9. '-' → logprob: -14.437612533569336
    10. '  ' → logprob: -15.000112533569336

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. '0' → logprob: -10.37503433227539
    3. ' ' → logprob: -13.37503433227539
    4. '   ' → logprob: -15.37503433227539
    5. '-' → logprob: -15.43753433227539
    6. '100' → logprob: -16.00003433227539
    7. '2' → logprob: -16.25003433227539
    8. '10' → logprob: -16.37503433227539
    9. 'dp' → logprob: -16.75003433227539
    10. '  ' → logprob: -16.81253433227539

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7242531776428223
    2. '<|end|>' → logprob: -0.7242531776428223
    3. '\n' → logprob: -4.724253177642822
    4. '```' → logprob: -5.224253177642822
    5. '<|end|>' → logprob: -5.224253177642822
    6. 'newline' → logprob: -5.724253177642822
    7. '' → logprob: -6.224253177642822
    8. '\' → logprob: -6.849253177642822
    9. '   ' → logprob: -7.099253177642822
    10. ' ' → logprob: -7.224253177642822

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002649119414854795
    2. '<|end|>' → logprob: -9.375265121459961
    3. '
' → logprob: -10.125265121459961
    4. '<|end|>' → logprob: -10.250265121459961
    5. ' def' → logprob: -10.375265121459961
    6. '```' → logprob: -10.625265121459961
    7. '\' → logprob: -10.875265121459961
    8. '\n' → logprob: -11.625265121459961
    9. 'ndef' → logprob: -12.375265121459961
    10. '(def' → logprob: -12.500265121459961

Token 63: ' set' (ID: 920)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.33044999837875366
    2. ' main' → logprob: -1.7054500579833984
    3. ' count' → logprob: -4.205450057983398
    4. ' jump' → logprob: -4.455450057983398
    5. ' compute' → logprob: -4.455450057983398
    6. ' climb' → logprob: -4.580450057983398
    7. ' process' → logprob: -4.830450057983398
    8. ' calculate' → logprob: -4.955450057983398
    9. 'solve' → logprob: -4.955450057983398
    10. ' update' → logprob: -5.330450057983398

Token 64: '_b' (ID: 1535)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.21481315791606903
    2. '_dp' → logprob: -2.464813232421875
    3. '_' → logprob: -2.839813232421875
    4. '_steps' → logprob: -3.964813232421875
    5. '_max' → logprob: -4.714813232421875
    6. '_step' → logprob: -6.339813232421875
    7. 'dp' → logprob: -6.464813232421875
    8. '_target' → logprob: -6.464813232421875
    9. '_up' → logprob: -6.589813232421875
    10. ' dp' → logprob: -6.589813232421875

Token 65: 'roken' (ID: 98226)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.0040818434208631516
    2. 'ound' → logprob: -5.754081726074219
    3. 'ounds' → logprob: -8.504081726074219
    4. 'p' → logprob: -8.879081726074219
    5. 'ases' → logprob: -8.879081726074219
    6. 'reak' → logprob: -9.504081726074219
    7. 'y' → logprob: -10.129081726074219
    8. 'a' → logprob: -10.129081726074219
    9. ' ase' → logprob: -10.504081726074219
    10. 'ack' → logprob: -10.629081726074219

Token 66: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.36424520611763
    2. '_positions' → logprob: -1.9892451763153076
    3. '(' → logprob: -2.3642451763153076
    4. '_cases' → logprob: -4.489245414733887
    5. '_indices' → logprob: -4.614245414733887
    6. '_points' → logprob: -4.614245414733887
    7. '_tiles' → logprob: -4.739245414733887
    8. '_cells' → logprob: -5.114245414733887
    9. '_case' → logprob: -5.239245414733887
    10. '_st' → logprob: -5.614245414733887

Token 67: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5817606449127197
    2. '(' → logprob: -0.8317606449127197
    3. ' (' → logprob: -5.831760406494141
    4. '(n' → logprob: -6.831760406494141
    5. '(s' → logprob: -7.331760406494141
    6. '(df' → logprob: -8.45676040649414
    7. '(d' → logprob: -8.83176040649414
    8. '(def' → logprob: -8.83176040649414
    9. '(b' → logprob: -9.45676040649414
    10. '():' → logprob: -9.83176040649414

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001149867384810932
    2. '):' → logprob: -9.375115394592285
    3. ' ,' → logprob: -10.875115394592285
    4. ',b' → logprob: -12.750115394592285
    5. ')' → logprob: -13.000115394592285
    6. ',:' → logprob: -13.500115394592285
    7. ',)' → logprob: -13.750115394592285
    8. ',n' → logprob: -14.000115394592285
    9. ',
' → logprob: -15.250115394592285
    10. ',int' → logprob: -15.375115394592285

Token 69: ' a' (ID: 261)
  Prédit: 'broken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'broken' → logprob: -0.3281892240047455
    2. ' broken' → logprob: -1.3281892538070679
    3. 'b' → logprob: -5.078189373016357
    4. '   ' → logprob: -5.953189373016357
    5. ' steps' → logprob: -6.453189373016357
    6. 'break' → logprob: -6.953189373016357
    7. 'steps' → logprob: -7.078189373016357
    8. ' b' → logprob: -7.828189373016357
    9. '    ' → logprob: -8.0781888961792
    10. ' breaks' → logprob: -8.0781888961792

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13324059545993805
    2. ',' → logprob: -2.3832406997680664
    3. '):
' → logprob: -4.008240699768066
    4. 'rr' → logprob: -5.258240699768066
    5. ' ):' → logprob: -5.383240699768066
    6. 's' → logprob: -7.258240699768066
    7. 'rray' → logprob: -7.633240699768066
    8. ']):' → logprob: -7.758240699768066
    9. '_list' → logprob: -7.883240699768066
    10. ' ,' → logprob: -8.133240699768066

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021662020590156317
    2. ' for' → logprob: -6.377166271209717
    3. '<|end|>' → logprob: -8.627165794372559
    4. 'for' → logprob: -9.252165794372559
    5. '    
' → logprob: -9.627165794372559
    6. ',' → logprob: -9.752165794372559
    7. '	for' → logprob: -10.627165794372559
    8. ':' → logprob: -11.002165794372559
    9. ')' → logprob: -11.377165794372559
    10. '
' → logprob: -12.627165794372559

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11412172019481659
    2. '   ' → logprob: -2.614121675491333
    3. ' for' → logprob: -3.364121675491333
    4. '```' → logprob: -11.489121437072754
    5. ' ' → logprob: -11.739121437072754
    6. '	for' → logprob: -12.239121437072754
    7. '  ' → logprob: -13.739121437072754
    8. '    
' → logprob: -14.114121437072754
    9. '``' → logprob: -14.489121437072754
    10. '
' → logprob: -15.489121437072754

Token 73: ' x' (ID: 1215)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5294088125228882
    2. ' i' → logprob: -1.0294088125228882
    3. ' x' → logprob: -3.9044089317321777
    4. 'i' → logprob: -4.404408931732178
    5. ' idx' → logprob: -5.154408931732178
    6. 'step' → logprob: -5.279408931732178
    7. ' index' → logprob: -5.404408931732178
    8. ' broken' → logprob: -5.654408931732178
    9. 'x' → logprob: -7.029408931732178
    10. ' b' → logprob: -7.654408931732178

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009859500452876091
    2. 'in' → logprob: -4.634859561920166
    3. ',' → logprob: -10.009859085083008
    4. ' ' → logprob: -10.259859085083008
    5. '	in' → logprob: -12.384859085083008
    6. 'x' → logprob: -12.634859085083008
    7. ' ,' → logprob: -12.759859085083008
    8. 'a' → logprob: -12.884859085083008
    9. ',in' → logprob: -13.134859085083008
    10. 's' → logprob: -13.134859085083008

Token 75: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2811759114265442
    2. 'a' → logprob: -1.4061758518218994
    3. '	a' → logprob: -12.28117561340332
    4. 'x' → logprob: -12.40617561340332
    5. '   ' → logprob: -12.53117561340332
    6. '(a' → logprob: -12.78117561340332
    7. ' ' → logprob: -12.78117561340332
    8. ' range' → logprob: -13.90617561340332
    9. ' x' → logprob: -13.90617561340332
    10. '>a' → logprob: -13.90617561340332

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006731167086400092
    2. ':
' → logprob: -7.625673294067383
    3. ' :' → logprob: -8.625673294067383
    4. ',' → logprob: -14.000673294067383
    5. '):' → logprob: -14.000673294067383
    6. '=' → logprob: -14.250673294067383
    7. '   ' → logprob: -14.500673294067383
    8. '[' → logprob: -14.625673294067383
    9. '<|end|>' → logprob: -14.875673294067383
    10. ':

' → logprob: -15.125673294067383

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39901405572891235
    2. 'dp' → logprob: -1.5240139961242676
    3. ' dp' → logprob: -2.2740139961242676
    4. '   ' → logprob: -5.149013996124268
    5. '	dp' → logprob: -6.274013996124268
    6. '    
' → logprob: -9.149014472961426
    7. '_dp' → logprob: -9.149014472961426
    8. '<|end|>' → logprob: -9.774014472961426
    9. ':' → logprob: -10.399014472961426
    10. '(dp' → logprob: -10.399014472961426

Token 78: ' mark' (ID: 1983)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38780662417411804
    2. ' dp' → logprob: -1.1378066539764404
    3. '	dp' → logprob: -7.137806415557861
    4. '       ' → logprob: -9.63780689239502
    5. '   ' → logprob: -10.13780689239502
    6. '           ' → logprob: -10.38780689239502
    7. ' ' → logprob: -13.51280689239502
    8. '_dp' → logprob: -13.63780689239502
    9. '(dp' → logprob: -13.88780689239502
    10. '.dp' → logprob: -14.63780689239502

Token 79: '_b' (ID: 1535)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.240949034690857
    2. 's' → logprob: -1.615949034690857
    3. '=' → logprob: -1.740949034690857
    4. '[x' → logprob: -2.1159491539001465
    5. '[' → logprob: -2.6159491539001465
    6. ' =' → logprob: -3.1159491539001465
    7. 'dp' → logprob: -3.4909491539001465
    8. '_' → logprob: -4.6159491539001465
    9. 'x' → logprob: -4.6159491539001465
    10. 'ing' → logprob: -5.3659491539001465

Token 80: 'roken' (ID: 98226)
  Prédit: 'roken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roken' → logprob: -0.004205070901662111
    2. 'ken' → logprob: -6.879205226898193
    3. 'p' → logprob: -7.004205226898193
    4. 'oken' → logprob: -7.379205226898193
    5. 'rok' → logprob: -8.004204750061035
    6. '[' → logprob: -8.004204750061035
    7. 'roke' → logprob: -8.129204750061035
    8. 'r' → logprob: -8.504204750061035
    9. 'reak' → logprob: -8.504204750061035
    10. 'broken' → logprob: -9.254204750061035

Token 81: '_step' (ID: 27360)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.9741434454917908
    2. '_steps' → logprob: -1.8491435050964355
    3. '[' → logprob: -2.3491435050964355
    4. 'ed' → logprob: -2.5991435050964355
    5. 'dp' → logprob: -3.0991435050964355
    6. '=' → logprob: -3.0991435050964355
    7. 'd' → logprob: -3.2241435050964355
    8. ' =' → logprob: -3.2241435050964355
    9. '_step' → logprob: -3.5991435050964355
    10. 'x' → logprob: -4.3491435050964355

Token 82: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0984437465667725
    2. 'dp' → logprob: -1.2234437465667725
    3. ' dp' → logprob: -1.7234437465667725
    4. '[' → logprob: -2.4734437465667725
    5. '[x' → logprob: -3.0984437465667725
    6. '(x' → logprob: -3.7234437465667725
    7. ' =' → logprob: -4.473443984985352
    8. 's' → logprob: -4.723443984985352
    9. '=' → logprob: -5.348443984985352
    10. ' (' → logprob: -5.473443984985352

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17547540366649628
    2. '[x' → logprob: -1.9254753589630127
    3. '[' → logprob: -4.675475597381592
    4. ',x' → logprob: -6.050475597381592
    5. ')' → logprob: -6.425475597381592
    6. ' ,' → logprob: -6.800475597381592
    7. '(x' → logprob: -8.175475120544434
    8. ']' → logprob: -8.675475120544434
    9. ',[' → logprob: -9.425475120544434
    10. '][' → logprob: -10.175475120544434

Token 84: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31330353021621704
    2. ' x' → logprob: -1.3133034706115723
    3. ')' → logprob: -10.93830394744873
    4. '<|end|>' → logprob: -11.31330394744873
    5. ')x' → logprob: -11.81330394744873
    6. ' ' → logprob: -13.31330394744873
    7. '	x' → logprob: -13.93830394744873
    8. ' )' → logprob: -14.06330394744873
    9. ' 
' → logprob: -15.68830394744873
    10. '"x' → logprob: -15.81330394744873

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012749963207170367
    2. ',' → logprob: -6.751275062561035
    3. ' )' → logprob: -9.376275062561035
    4. ',)' → logprob: -11.876275062561035
    5. '<|end|>' → logprob: -12.376275062561035
    6. ')
' → logprob: -12.876275062561035
    7. '   ' → logprob: -13.251275062561035
    8. '),' → logprob: -14.126275062561035
    9. ')`' → logprob: -14.501275062561035
    10. '       ' → logprob: -14.751275062561035

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002610974188428372
    2. '
' → logprob: -9.000261306762695
    3. ' def' → logprob: -9.500261306762695
    4. '<|end|>' → logprob: -10.625261306762695
    5. ':def' → logprob: -10.750261306762695
    6. '```' → logprob: -12.000261306762695
    7. 'ndef' → logprob: -13.250261306762695
    8. ':' → logprob: -13.500261306762695
    9. '    
' → logprob: -13.625261306762695
    10. ' 
' → logprob: -13.750261306762695

Token 87: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.004844834562391043
    2. 'mark' → logprob: -6.004844665527344
    3. '(mark' → logprob: -7.004844665527344
    4. '_mark' → logprob: -7.254844665527344
    5. ' ' → logprob: -8.504844665527344
    6. '_' → logprob: -8.629844665527344
    7. ' def' → logprob: -8.754844665527344
    8. ' set' → logprob: -9.629844665527344
    9. ' ' → logprob: -10.379844665527344
    10. 'def' → logprob: -10.754844665527344

Token 88: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.250001907348633
    3. '_break' → logprob: -16.000001907348633
    4. 'broken' → logprob: -16.875001907348633
    5. '_step' → logprob: -17.750001907348633
    6. '_bad' → logprob: -17.750001907348633
    7. 'ed' → logprob: -17.875001907348633
    8. 'Broken' → logprob: -18.250001907348633
    9. '##_' → logprob: -18.500001907348633
    10. '_failed' → logprob: -18.875001907348633

Token 89: 'roken' (ID: 98226)
  Prédit: 'roken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roken' → logprob: -0.0005583931924775243
    2. 'roke' → logprob: -8.250558853149414
    3. 'ro' → logprob: -9.000558853149414
    4. 'rok' → logprob: -9.125558853149414
    5. '_' → logprob: -9.750558853149414
    6. '_ro' → logprob: -12.875558853149414
    7. 'broken' → logprob: -13.625558853149414
    8. 'r' → logprob: -14.125558853149414
    9. 'roker' → logprob: -14.750558853149414
    10. 'ropped' → logprob: -15.000558853149414

Token 90: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -5.1093578804284334e-05
    2. '_' → logprob: -10.125051498413086
    3. '_steps' → logprob: -11.500051498413086
    4. '_s' → logprob: -15.250051498413086
    5. '```' → logprob: -16.000051498413086
    6. ' _' → logprob: -16.250051498413086
    7. '_(' → logprob: -16.750051498413086
    8. '(_' → logprob: -17.375051498413086
    9. '(step' → logprob: -17.750051498413086
    10. 's' → logprob: -17.750051498413086

Token 91: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0024793429765850306
    2. '(' → logprob: -6.002479553222656
    3. ' (' → logprob: -13.502479553222656
    4. '(def' → logprob: -15.002479553222656
    5. '(ds' → logprob: -15.127479553222656
    6. '(df' → logprob: -15.127479553222656
    7. '(
' → logprob: -15.252479553222656
    8. 'dp' → logprob: -15.377479553222656
    9. '(d' → logprob: -15.627479553222656
    10. '(dx' → logprob: -15.877479553222656

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3080716346157715e-05
    2. ',x' → logprob: -10.875022888183594
    3. ' ,' → logprob: -13.250022888183594
    4. ',n' → logprob: -14.250022888183594
    5. ',index' → logprob: -15.250022888183594
    6. '<|end|>' → logprob: -15.375022888183594
    7. ',int' → logprob: -15.625022888183594
    8. ',value' → logprob: -16.250022888183594
    9. '‌,' → logprob: -16.375022888183594
    10. '_,' → logprob: -16.500022888183594

Token 93: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04417386278510094
    2. ' x' → logprob: -3.4191739559173584
    3. ')' → logprob: -4.919173717498779
    4. 'index' → logprob: -7.294173717498779
    5. 'step' → logprob: -7.669173717498779
    6. ' )' → logprob: -7.669173717498779
    7. '<|end|>' → logprob: -7.669173717498779
    8. ' step' → logprob: -7.919173717498779
    9. ')x' → logprob: -8.669174194335938
    10. ' index' → logprob: -9.169174194335938

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006906322669237852
    2. ')' → logprob: -7.625690460205078
    3. ' ):' → logprob: -8.625690460205078
    4. ':' → logprob: -11.875690460205078
    5. ',' → logprob: -12.000690460205078
    6. '):
' → logprob: -12.125690460205078
    7. ']:' → logprob: -13.000690460205078
    8. ')=' → logprob: -14.375690460205078
    9. '=' → logprob: -14.625690460205078
    10. ' )' → logprob: -14.750690460205078

Token 95: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3212471008300781
    2. 'dp' → logprob: -2.196247100830078
    3. '   ' → logprob: -2.321247100830078
    4. '	dp' → logprob: -3.321247100830078
    5. ' =' → logprob: -4.196247100830078
    6. '=' → logprob: -4.446247100830078
    7. ' ' → logprob: -6.946247100830078
    8. '    ' → logprob: -7.071247100830078
    9. '	' → logprob: -8.321247100830078
    10. '(dp' → logprob: -8.571247100830078

Token 96: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.014321102760732174
    2. '-' → logprob: -5.014321327209473
    3. ' dp' → logprob: -5.139321327209473
    4. '0' → logprob: -7.014321327209473
    5. '   ' → logprob: -7.389321327209473
    6. ' -' → logprob: -8.889321327209473
    7. '	dp' → logprob: -10.264321327209473
    8. ' ' → logprob: -12.014321327209473
    9. '(dp' → logprob: -12.264321327209473
    10. '-d' → logprob: -12.889321327209473

Token 97: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.635164754698053e-05
    2. '[' → logprob: -9.625066757202148
    3. '[-' → logprob: -16.37506675720215
    4. 'x' → logprob: -17.00006675720215
    5. '[int' → logprob: -17.00006675720215
    6. ' [' → logprob: -17.12506675720215
    7. '```' → logprob: -17.37506675720215
    8. '[i' → logprob: -17.75006675720215
    9. '[
' → logprob: -17.87506675720215
    10. '[]' → logprob: -18.12506675720215

Token 98: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005280950106680393
    2. ']' → logprob: -5.7552809715271
    3. ' =' → logprob: -6.6302809715271
    4. ']=' → logprob: -7.6302809715271
    5. ')' → logprob: -9.005280494689941
    6. '=-' → logprob: -9.255280494689941
    7. ']=-' → logprob: -9.880280494689941
    8. '-' → logprob: -11.130280494689941
    9. ')=' → logprob: -11.755280494689941
    10. '-=' → logprob: -13.630280494689941

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004895264864899218
    2. '=-' → logprob: -7.750489711761475
    3. ' =' → logprob: -9.750489234924316
    4. '-=' → logprob: -15.625489234924316
    5. '=int' → logprob: -15.625489234924316
    6. '*=' → logprob: -16.000490188598633
    7. '=None' → logprob: -16.875490188598633
    8. '+=' → logprob: -17.000490188598633
    9. '=(-' → logprob: -17.000490188598633
    10. '=False' → logprob: -17.625490188598633

Token 100: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008190888911485672
    2. '-' → logprob: -5.008191108703613
    3. ' ' → logprob: -6.633191108703613
    4. ' -' → logprob: -8.758191108703613
    5. '  ' → logprob: -15.508191108703613
    6. '-s' → logprob: -16.195690155029297
    7. '   ' → logprob: -16.258190155029297
    8. '00' → logprob: -16.258190155029297
    9. '-f' → logprob: -16.633190155029297
    10. 'None' → logprob: -17.008190155029297

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. 'float' → logprob: -12.125011444091797
    3. '10' → logprob: -12.625011444091797
    4. '100' → logprob: -13.750011444091797
    5. '2' → logprob: -14.000011444091797
    6. '999' → logprob: -14.625011444091797
    7. 'int' → logprob: -15.125011444091797
    8. ' ' → logprob: -15.500011444091797
    9. '-' → logprob: -16.125011444091797
    10. 'inf' → logprob: -16.125011444091797

Token 102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6428707242012024
    2. '<|end|>' → logprob: -0.7678707242012024
    3. '<|end|>' → logprob: -5.642870903015137
    4. 'def' → logprob: -5.892870903015137
    5. '

' → logprob: -6.392870903015137
    6. '\n' → logprob: -6.892870903015137
    7. '```' → logprob: -7.517870903015137
    8. '
' → logprob: -8.767870903015137
    9. '  
' → logprob: -9.017870903015137
    10. '\' → logprob: -9.267870903015137

Token 103: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035525585990399122
    2. '
' → logprob: -5.753552436828613
    3. '<|end|>' → logprob: -8.503552436828613
    4. '

' → logprob: -9.003552436828613
    5. '```' → logprob: -10.878552436828613
    6. '\' → logprob: -11.753552436828613
    7. '  
' → logprob: -12.003552436828613
    8. '<|end|>' → logprob: -12.503552436828613
    9. ' def' → logprob: -13.003552436828613
    10. '    
' → logprob: -13.128552436828613

Token 104: ' get' (ID: 717)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.22801674902439117
    2. ' solve' → logprob: -2.1030168533325195
    3. ' calc' → logprob: -3.7280168533325195
    4. 'count' → logprob: -4.1030168533325195
    5. ' climb' → logprob: -4.3530168533325195
    6. ' compute' → logprob: -4.8530168533325195
    7. ' calculate' → logprob: -5.3530168533325195
    8. 'solve' → logprob: -5.4780168533325195
    9. ' main' → logprob: -5.7280168533325195
    10. ' update' → logprob: -5.8530168533325195

Token 105: '_mod' (ID: 15325)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.4028005003929138
    2. '_next' → logprob: -1.7778005599975586
    3. '_' → logprob: -3.0278005599975586
    4. '_max' → logprob: -3.1528005599975586
    5. '_possible' → logprob: -3.7778005599975586
    6. '_steps' → logprob: -4.027800559997559
    7. '_result' → logprob: -4.652800559997559
    8. '_valid' → logprob: -5.277800559997559
    9. '_value' → logprob: -5.652800559997559
    10. '_step' → logprob: -5.652800559997559

Token 106: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03093935176730156
    2. '():' → logprob: -3.9059393405914307
    3. ':' → logprob: -5.40593957901001
    4. '(n' → logprob: -6.53093957901001
    5. '<|end|>' → logprob: -7.15593957901001
    6. '_' → logprob: -7.65593957901001
    7. '_value' → logprob: -7.78093957901001
    8. '(value' → logprob: -8.405939102172852
    9. '(x' → logprob: -8.530939102172852
    10. '()' → logprob: -8.780939102172852

Token 107: '   ' (ID: 271)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6550308465957642
    2. ' ' → logprob: -0.9050308465957642
    3. '   ' → logprob: -2.9050307273864746
    4. '10' → logprob: -3.9050307273864746
    5. '(' → logprob: -7.655030727386475
    6. ' (' → logprob: -8.530031204223633
    7. '998' → logprob: -8.655031204223633
    8. '1' → logprob: -9.030031204223633
    9. ' return' → logprob: -9.905031204223633
    10. '999' → logprob: -11.155031204223633

Token 108: ' return' (ID: 622)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11657192558050156
    2. '10' → logprob: -2.2415719032287598
    3. ' ' → logprob: -5.61657190322876
    4. '998' → logprob: -9.616572380065918
    5. '1' → logprob: -10.366572380065918
    6. 'mod' → logprob: -12.866572380065918
    7. '   ' → logprob: -13.741572380065918
    8. '101' → logprob: -13.991572380065918
    9. ' mod' → logprob: -14.241572380065918
    10. '999' → logprob: -14.616572380065918

Token 109: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.18912215530872345
    2. '10' → logprob: -1.939122200012207
    3. ' ' → logprob: -3.564122200012207
    4. '998' → logprob: -9.814122200012207
    5. '1' → logprob: -9.939122200012207
    6. '(' → logprob: -10.064122200012207
    7. 'int' → logprob: -11.314122200012207
    8. ' (' → logprob: -13.689122200012207
    9. '   ' → logprob: -14.064122200012207
    10. ' ' → logprob: -14.314122200012207

Token 110: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16044478118419647
    2. '10' → logprob: -1.910444736480713
    3. '(' → logprob: -9.160445213317871
    4. 'int' → logprob: -10.035445213317871
    5. '998' → logprob: -10.410445213317871
    6. '1' → logprob: -10.410445213317871
    7. ' ' → logprob: -11.535445213317871
    8. 'mod' → logprob: -14.910445213317871
    9. '(int' → logprob: -15.285445213317871
    10. '   ' → logprob: -15.785445213317871

Token 111: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.8060294389724731
    2. '**' → logprob: -1.4310294389724731
    3. '9' → logprob: -1.5560294389724731
    4. '000' → logprob: -3.1810293197631836
    5. '09' → logprob: -4.056029319763184
    6. '0' → logprob: -4.056029319763184
    7. '7' → logprob: -4.556029319763184
    8. '6' → logprob: -4.556029319763184
    9. '07' → logprob: -5.931029319763184
    10. '06' → logprob: -6.056029319763184

Token 112: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.500000953674316
    3. '９' → logprob: -18.875
    4. '+' → logprob: -19.125
    5. '```' → logprob: -19.25
    6. '**' → logprob: -19.875
    7. '8' → logprob: -20.25
    8. '10' → logprob: -20.5
    9. '4' → logprob: -20.5
    10. '
' → logprob: -21.0

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010370950913056731
    2. ' +' → logprob: -6.876037120819092
    3. '+
' → logprob: -12.626036643981934
    4. '＋' → logprob: -15.126036643981934
    5. ' plus' → logprob: -15.626036643981934
    6. '7' → logprob: -15.626036643981934
    7. ' +
' → logprob: -16.37603759765625
    8. '+

' → logprob: -16.50103759765625
    9. 'plus' → logprob: -16.50103759765625
    10. '+</' → logprob: -17.12603759765625

Token 114: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.875
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -20.25
    5. '

' → logprob: -21.875
    6. '   ' → logprob: -22.0
    7. '9' → logprob: -22.25
    8. '07' → logprob: -22.375
    9. ' ' → logprob: -22.5
    10. '
' → logprob: -23.125

Token 115: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.25
    3. '```' → logprob: -21.0
    4. ' ' → logprob: -21.25
    5. '

' → logprob: -21.5
    6. '07' → logprob: -21.75
    7. '７' → logprob: -22.0
    8. '   ' → logprob: -22.25
    9. '9' → logprob: -23.0
    10. '
' → logprob: -23.125

Token 116: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.053549718111753464
    2. '<|end|>' → logprob: -3.0535497665405273
    3. '
' → logprob: -6.053549766540527
    4. '<|end|>' → logprob: -6.553549766540527
    5. '```' → logprob: -7.803549766540527
    6. '\' → logprob: -8.053549766540527
    7. '\n' → logprob: -9.053549766540527
    8. '  
' → logprob: -9.053549766540527
    9. '#' → logprob: -9.803549766540527
    10. ' 
' → logprob: -10.428549766540527

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010600793175399303
    2. '<|end|>' → logprob: -6.8760600090026855
    3. '<|end|>' → logprob: -11.376060485839844
    4. '
' → logprob: -11.751060485839844
    5. '```' → logprob: -13.001060485839844
    6. '\' → logprob: -13.126060485839844
    7. ' def' → logprob: -13.501060485839844
    8. '#' → logprob: -13.876060485839844
    9. '  
' → logprob: -14.501060485839844
    10. '\n' → logprob: -15.876060485839844

Token 118: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5956293344497681
    2. ' solve' → logprob: -1.095629334449768
    3. ' count' → logprob: -2.4706292152404785
    4. 'solve' → logprob: -4.3456292152404785
    5. 'main' → logprob: -4.8456292152404785
    6. ' calculate' → logprob: -5.9706292152404785
    7. ' calc' → logprob: -6.2206292152404785
    8. ' compute' → logprob: -6.4706292152404785
    9. 'count' → logprob: -6.5956292152404785
    10. ' climb' → logprob: -7.5956292152404785

Token 119: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.04115741699934006
    2. '(dp' → logprob: -3.2911574840545654
    3. '_' → logprob: -6.291157245635986
    4. 'dp' → logprob: -8.041157722473145
    5. '_(' → logprob: -8.166157722473145
    6. '_step' → logprob: -8.541157722473145
    7. '_steps' → logprob: -8.666157722473145
    8. '(' → logprob: -8.666157722473145
    9. '(_' → logprob: -11.416157722473145
    10. '_DP' → logprob: -11.541157722473145

Token 120: '(i' (ID: 3649)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.023248272016644478
    2. '(' → logprob: -3.7732481956481934
    3. '(n' → logprob: -13.898248672485352
    4. ' (' → logprob: -14.523248672485352
    5. '(df' → logprob: -14.773248672485352
    6. '(lp' → logprob: -15.523248672485352
    7. '(p' → logprob: -15.773248672485352
    8. '(i' → logprob: -15.898248672485352
    9. '(dt' → logprob: -16.02324867248535
    10. '(
' → logprob: -17.02324867248535

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038956227945163846
    2. ' ,' → logprob: -7.875389575958252
    3. '):' → logprob: -12.500389099121094
    4. '   ' → logprob: -13.125389099121094
    5. ',d' → logprob: -13.625389099121094
    6. 'dp' → logprob: -14.500389099121094
    7. ',
' → logprob: -14.625389099121094
    8. '(dp' → logprob: -15.250389099121094
    9. '_,' → logprob: -15.375389099121094
    10. '):
' → logprob: -15.625389099121094

Token 122: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4294411540031433
    2. ' dp' → logprob: -1.054441213607788
    3. 'j' → logprob: -8.929441452026367
    4. ',' → logprob: -9.429441452026367
    5. '   ' → logprob: -9.554441452026367
    6. ')' → logprob: -9.679441452026367
    7. 'steps' → logprob: -9.929441452026367
    8. ' ' → logprob: -10.054441452026367
    9. 'n' → logprob: -10.179441452026367
    10. '	dp' → logprob: -10.304441452026367

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003171121352352202
    2. '):' → logprob: -8.250317573547363
    3. ' ,' → logprob: -10.000317573547363
    4. '   ' → logprob: -12.625317573547363
    5. '):
' → logprob: -13.500317573547363
    6. ',n' → logprob: -13.875317573547363
    7. ',i' → logprob: -14.250317573547363
    8. ',
' → logprob: -14.625317573547363
    9. ',j' → logprob: -14.625317573547363
    10. ',d' → logprob: -14.625317573547363

Token 124: ' mod' (ID: 1812)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7728237509727478
    2. ')' → logprob: -1.8978238105773926
    3. 'n' → logprob: -1.8978238105773926
    4. ' dp' → logprob: -3.0228238105773926
    5. 'dp' → logprob: -3.2728238105773926
    6. ' steps' → logprob: -3.2728238105773926
    7. ' mod' → logprob: -3.7728238105773926
    8. '):
' → logprob: -4.022823810577393
    9. ' )' → logprob: -4.397823810577393
    10. ' m' → logprob: -4.397823810577393

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05139156058430672
    2. ',' → logprob: -3.0513916015625
    3. '):
' → logprob: -5.9263916015625
    4. ' ):' → logprob: -9.5513916015625
    5. ')' → logprob: -10.5513916015625
    6. '   ' → logprob: -11.5513916015625
    7. '):
' → logprob: -12.0513916015625
    8. ' ,' → logprob: -12.5513916015625
    9. '):

' → logprob: -12.5513916015625
    10. ':' → logprob: -12.8013916015625

Token 126: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11934325098991394
    2. '   ' → logprob: -2.3693432807922363
    3. ',' → logprob: -4.744343280792236
    4. '):' → logprob: -5.494343280792236
    5. ':
' → logprob: -6.119343280792236
    6. ' if' → logprob: -6.869343280792236
    7. ' ' → logprob: -7.244343280792236
    8. '):
' → logprob: -7.369343280792236
    9. 'if' → logprob: -7.994343280792236
    10. ')' → logprob: -8.369342803955078

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18531344830989838
    2. ' if' → logprob: -1.8103134632110596
    3. '   ' → logprob: -5.3103132247924805
    4. 'for' → logprob: -7.8103132247924805
    5. ' for' → logprob: -9.31031322479248
    6. ' 
' → logprob: -10.68531322479248
    7. '    
' → logprob: -10.68531322479248
    8. '
' → logprob: -10.81031322479248
    9. '```' → logprob: -11.31031322479248
    10. 'return' → logprob: -11.43531322479248

Token 128: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0043191490694880486
    2. ' dp' → logprob: -5.504319190979004
    3. 'i' → logprob: -8.754319190979004
    4. '   ' → logprob: -10.129319190979004
    5. ' i' → logprob: -10.629319190979004
    6. '0' → logprob: -11.129319190979004
    7. ' ' → logprob: -13.129319190979004
    8. '	dp' → logprob: -14.379319190979004
    9. '(dp' → logprob: -14.504319190979004
    10. '  ' → logprob: -14.754319190979004

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. 'i' → logprob: -11.750009536743164
    3. '[' → logprob: -14.500009536743164
    4. '[
' → logprob: -16.125009536743164
    5. 'dp' → logprob: -16.250009536743164
    6. '```' → logprob: -16.500009536743164
    7. '[x' → logprob: -16.750009536743164
    8. '
' → logprob: -17.000009536743164
    9. ' i' → logprob: -17.125009536743164
    10. '[-' → logprob: -17.125009536743164

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46180546283721924
    2. '-' → logprob: -1.0868054628372192
    3. ']==' → logprob: -3.8368053436279297
    4. '==' → logprob: -5.08680534362793
    5. ']!=' → logprob: -5.58680534362793
    6. '!=' → logprob: -7.33680534362793
    7. ' -' → logprob: -9.33680534362793
    8. '```' → logprob: -9.58680534362793
    9. ']>=' → logprob: -9.83680534362793
    10. '==-' → logprob: -10.33680534362793

Token 131: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12145886570215225
    2. '==' → logprob: -2.4964587688446045
    3. ' !=' → logprob: -4.246459007263184
    4. '>=' → logprob: -4.371459007263184
    5. '!=-' → logprob: -5.871459007263184
    6. '>' → logprob: -7.121459007263184
    7. ' ==' → logprob: -7.621459007263184
    8. '=' → logprob: -7.996459007263184
    9. '==-' → logprob: -8.246459007263184
    10. ' ' → logprob: -9.496459007263184

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032371324487030506
    2. '>' → logprob: -5.878237247467041
    3. ' ' → logprob: -7.753237247467041
    4. '=' → logprob: -14.003236770629883
    5. '1' → logprob: -14.128236770629883
    6. '>=' → logprob: -15.628236770629883
    7. '>
' → logprob: -15.753236770629883
    8. '-' → logprob: -15.753236770629883
    9. '```' → logprob: -16.003236770629883
    10. '>-' → logprob: -16.253236770629883

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003918271977454424
    2. ' ' → logprob: -8.250391960144043
    3. '>' → logprob: -9.000391960144043
    4. '1' → logprob: -12.125391960144043
    5. '-' → logprob: -14.625391960144043
    6. '```' → logprob: -14.875391960144043
    7. '   ' → logprob: -15.250391960144043
    8. '`' → logprob: -16.000391006469727
    9. '=' → logprob: -16.125391006469727
    10. '
' → logprob: -17.125391006469727

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006150142289698124
    2. ' :' → logprob: -5.756150245666504
    3. ' or' → logprob: -6.381150245666504
    4. ':return' → logprob: -7.256150245666504
    5. ':
' → logprob: -8.631150245666504
    6. '   ' → logprob: -8.631150245666504
    7. '       ' → logprob: -8.756150245666504
    8. '):' → logprob: -10.381150245666504
    9. ' ' → logprob: -11.756150245666504
    10. ' :
' → logprob: -12.881150245666504

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.560299813747406
    2. '   ' → logprob: -1.3102998733520508
    3. 'return' → logprob: -2.435299873352051
    4. ' return' → logprob: -2.935299873352051
    5. '
' → logprob: -5.435299873352051
    6. ' ' → logprob: -5.685299873352051
    7. '```' → logprob: -5.935299873352051
    8. ':return' → logprob: -6.060299873352051
    9. '	return' → logprob: -6.435299873352051
    10. '    ' → logprob: -6.935299873352051

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04933904856443405
    2. ' return' → logprob: -3.4243390560150146
    3. '   ' → logprob: -4.7993388175964355
    4. '       ' → logprob: -4.9243388175964355
    5. '	return' → logprob: -9.799339294433594
    6. '
' → logprob: -12.549339294433594
    7. ' ' → logprob: -12.924339294433594
    8. ':return' → logprob: -13.299339294433594
    9. 'dp' → logprob: -13.674339294433594
    10. '0' → logprob: -14.049339294433594

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15821674466133118
    2. '   ' → logprob: -2.408216714859009
    3. ' 
' → logprob: -3.908216714859009
    4. '    
' → logprob: -4.158216953277588
    5. ' for' → logprob: -5.533216953277588
    6. ' None' → logprob: -5.658216953277588
    7. '  
' → logprob: -5.908216953277588
    8. 'dp' → logprob: -6.158216953277588
    9. ' dp' → logprob: -6.283216953277588
    10. 'if' → logprob: -6.658216953277588

Token 138: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4089184105396271
    2. 'dp' → logprob: -1.9089183807373047
    3. '   ' → logprob: -2.2839183807373047
    4. 'for' → logprob: -2.5339183807373047
    5. ' if' → logprob: -5.783918380737305
    6. ' for' → logprob: -6.908918380737305
    7. ' dp' → logprob: -7.283918380737305
    8. '    
' → logprob: -7.283918380737305
    9. 'else' → logprob: -8.283918380737305
    10. 'elif' → logprob: -9.533918380737305

Token 139: ' increment' (ID: 24032)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2829306721687317
    2. 'for' → logprob: -2.157930612564087
    3. 'if' → logprob: -2.407930612564087
    4. 'total' → logprob: -4.157930850982666
    5. '   ' → logprob: -4.782930850982666
    6. 'left' → logprob: -5.032930850982666
    7. 'ways' → logprob: -5.407930850982666
    8. 's' → logprob: -6.532930850982666
    9. 'res' → logprob: -6.657930850982666
    10. 'val' → logprob: -7.157930850982666

Token 140: '_step' (ID: 27360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6056211590766907
    2. '=' → logprob: -1.355621099472046
    3. 's' → logprob: -2.855621099472046
    4. '_value' → logprob: -3.355621099472046
    5. 'dp' → logprob: -3.605621099472046
    6. '1' → logprob: -3.605621099472046
    7. '_val' → logprob: -4.105621337890625
    8. ' dp' → logprob: -5.230621337890625
    9. '   ' → logprob: -5.605621337890625
    10. '0' → logprob: -5.855621337890625

Token 141: '(i' (ID: 3649)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20064522325992584
    2. ' =' → logprob: -2.0756452083587646
    3. '1' → logprob: -2.9506452083587646
    4. '0' → logprob: -6.825645446777344
    5. '_' → logprob: -7.200645446777344
    6. '=' → logprob: -7.325645446777344
    7. '_value' → logprob: -7.575645446777344
    8. '(i' → logprob: -8.075645446777344
    9. '   ' → logprob: -9.450645446777344
    10. 'dp' → logprob: -9.575645446777344

Token 142: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4183730483055115
    2. ' -' → logprob: -1.7933731079101562
    3. '-' → logprob: -1.9183731079101562
    4. ' ,' → logprob: -4.043373107910156
    5. '+' → logprob: -5.918373107910156
    6. '   ' → logprob: -5.918373107910156
    7. ')' → logprob: -6.668373107910156
    8. '1' → logprob: -6.918373107910156
    9. ' ' → logprob: -6.918373107910156
    10. ' +' → logprob: -7.168373107910156

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018765167333185673
    2. ' ' → logprob: -6.376876354217529
    3. '2' → logprob: -9.376876831054688
    4. '-' → logprob: -10.501876831054688
    5. '   ' → logprob: -10.501876831054688
    6. ')' → logprob: -11.251876831054688
    7. '  ' → logprob: -11.876876831054688
    8. '
' → logprob: -12.814376831054688
    9. ',' → logprob: -12.939376831054688
    10. '```' → logprob: -14.126876831054688

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007054025190882385
    2. ' ,' → logprob: -7.500705242156982
    3. '   ' → logprob: -9.87570571899414
    4. 'dp' → logprob: -10.00070571899414
    5. ')' → logprob: -10.62570571899414
    6. '(dp' → logprob: -11.50070571899414
    7. '],' → logprob: -11.87570571899414
    8. '),' → logprob: -12.25070571899414
    9. ' dp' → logprob: -12.87570571899414
    10. ']' → logprob: -13.37570571899414

Token 145: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016078360378742218
    2. ' dp' → logprob: -4.141078472137451
    3. '   ' → logprob: -10.641077995300293
    4. '	dp' → logprob: -12.141077995300293
    5. '(dp' → logprob: -12.391077995300293
    6. ')' → logprob: -13.016077995300293
    7. ' ' → logprob: -13.516077995300293
    8. '1' → logprob: -13.766077995300293
    9. '```' → logprob: -13.766077995300293
    10. 'i' → logprob: -13.891077995300293

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007160080131143332
    2. ' ,' → logprob: -7.250716209411621
    3. '   ' → logprob: -12.375716209411621
    4. ',
' → logprob: -14.625716209411621
    5. ')' → logprob: -14.875716209411621
    6. ' ' → logprob: -15.125716209411621
    7. '  ' → logprob: -15.875716209411621
    8. '),' → logprob: -16.375715255737305
    9. '[' → logprob: -16.500715255737305
    10. '`,' → logprob: -17.000715255737305

Token 147: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012937966734170914
    2. ' mod' → logprob: -4.387938022613525
    3. 'dp' → logprob: -8.512937545776367
    4. '   ' → logprob: -8.637937545776367
    5. ' ' → logprob: -10.762937545776367
    6. ' dp' → logprob: -11.387937545776367
    7. '  ' → logprob: -11.887937545776367
    8. '	mod' → logprob: -12.512937545776367
    9. '    ' → logprob: -13.262937545776367
    10. '(mod' → logprob: -13.512937545776367

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01607918180525303
    2. ')' → logprob: -4.266078948974609
    3. ' ,' → logprob: -6.516078948974609
    4. '   ' → logprob: -8.51607894897461
    5. ')
' → logprob: -9.01607894897461
    6. ' )' → logprob: -10.01607894897461
    7. ',i' → logprob: -10.39107894897461
    8. ',
' → logprob: -11.39107894897461
    9. ',)' → logprob: -12.01607894897461
    10. ' ' → logprob: -12.51607894897461

Token 149: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.72447669506073
    2. 'dp' → logprob: -1.47447669506073
    3. ' i' → logprob: -1.84947669506073
    4. ' dp' → logprob: -2.8494768142700195
    5. ')' → logprob: -3.3494768142700195
    6. '   ' → logprob: -3.5994768142700195
    7. '  ' → logprob: -5.8494768142700195
    8. ' ' → logprob: -6.3494768142700195
    9. '1' → logprob: -7.2244768142700195
    10. ' )' → logprob: -7.3494768142700195

Token 150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5597102396423e-05
    2. ')' → logprob: -10.750035285949707
    3. '[' → logprob: -11.875035285949707
    4. 'i' → logprob: -13.000035285949707
    5. ',i' → logprob: -13.500035285949707
    6. ',' → logprob: -13.625035285949707
    7. '[
' → logprob: -13.875035285949707
    8. '```' → logprob: -14.625035285949707
    9. ')i' → logprob: -15.250035285949707
    10. '[I' → logprob: -16.000036239624023

Token 151: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.43696001172065735
    2. '])
' → logprob: -1.061959981918335
    3. ']' → logprob: -6.311960220336914
    4. ' ])
' → logprob: -6.311960220336914
    5. ' ])' → logprob: -6.561960220336914
    6. ')' → logprob: -6.811960220336914
    7. '])
' → logprob: -6.936960220336914
    8. '])

' → logprob: -7.561960220336914
    9. ')
' → logprob: -8.061960220336914
    10. ' )' → logprob: -9.811960220336914

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604045569896698
    2. '
' → logprob: -2.135404586791992
    3. '    
' → logprob: -3.135404586791992
    4. '  
' → logprob: -3.260404586791992
    5. ' 
' → logprob: -4.385404586791992
    6. ' ' → logprob: -5.385404586791992
    7. '   
' → logprob: -5.885404586791992
    8. '<|end|>' → logprob: -6.260404586791992
    9. '<|end|>' → logprob: -6.260404586791992
    10. ',' → logprob: -6.885404586791992

Token 153: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' (adapté à ' increment') → logprob: -0.005252372473478317
    2. '   ' → logprob: -5.505252361297607
    3. ' increment' → logprob: -6.755252361297607
    4. 'in' → logprob: -13.130252838134766
    5. '.increment' → logprob: -13.380252838134766
    6. 'increments' → logprob: -13.380252838134766
    7. '_increment' → logprob: -14.255252838134766
    8. '	in' → logprob: -14.505252838134766
    9. ' ' → logprob: -14.755252838134766
    10. '(in' → logprob: -15.130252838134766

Token 154: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.375009536743164
    3. '_steps' → logprob: -12.625009536743164
    4. 'step' → logprob: -14.875009536743164
    5. 'Step' → logprob: -15.500009536743164
    6. ' _' → logprob: -15.500009536743164
    7. '```' → logprob: -15.500009536743164
    8. '_s' → logprob: -15.875009536743164
    9. '\' → logprob: -16.000009536743164
    10. '(_' → logprob: -16.250009536743164

Token 155: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.077528764260933e-05
    2. '(' → logprob: -9.500081062316895
    3. ' (' → logprob: -12.250081062316895
    4. '((' → logprob: -14.625081062316895
    5. 'i' → logprob: -15.000081062316895
    6. '(
' → logprob: -15.625081062316895
    7. ' ' → logprob: -16.625080108642578
    8. '(ii' → logprob: -17.125080108642578
    9. '```' → logprob: -17.375080108642578
    10. '(I' → logprob: -18.375080108642578

Token 156: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014280942268669605
    2. ' +' → logprob: -7.126428127288818
    3. '-' → logprob: -7.501428127288818
    4. '+
' → logprob: -10.25142765045166
    5. '2' → logprob: -11.87642765045166
    6. '+i' → logprob: -12.00142765045166
    7. ' ' → logprob: -12.50142765045166
    8. ' -' → logprob: -12.62642765045166
    9. ')' → logprob: -13.12642765045166
    10. '
' → logprob: -13.25142765045166

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.8351892473874614e-05
    2. ' ' → logprob: -10.000048637390137
    3. '-' → logprob: -14.312548637390137
    4. '
' → logprob: -14.562548637390137
    5. '1' → logprob: -15.125048637390137
    6. '２' → logprob: -15.187548637390137
    7. ')' → logprob: -15.875048637390137
    8. '3' → logprob: -15.937548637390137
    9. '```' → logprob: -16.12504768371582
    10. '   ' → logprob: -16.18754768371582

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ')' → logprob: -13.62503433227539
    4. ',d' → logprob: -14.50003433227539
    5. '(dp' → logprob: -14.62503433227539
    6. '(' → logprob: -14.87503433227539
    7. '   ' → logprob: -15.12503433227539
    8. '),' → logprob: -16.37503433227539
    9. '`,' → logprob: -17.00003433227539
    10. '‌,' → logprob: -17.62503433227539

Token 159: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.0035791685804724693
    2. 'dp' → logprob: -5.753579139709473
    3. '(dp' → logprob: -7.878579139709473
    4. '	dp' → logprob: -11.753579139709473
    5. '_dp' → logprob: -12.003579139709473
    6. '<|end|>' → logprob: -12.253579139709473
    7. ',' → logprob: -13.003579139709473
    8. ')' → logprob: -14.128579139709473
    9. '.dp' → logprob: -14.628579139709473
    10. ' dsp' → logprob: -15.878579139709473

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ' ,' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.625045776367188
    4. '‌,' → logprob: -17.375045776367188
    5. ',
' → logprob: -17.500045776367188
    6. ')' → logprob: -17.750045776367188
    7. '```' → logprob: -18.000045776367188
    8. '`,' → logprob: -18.500045776367188
    9. ',d' → logprob: -19.000045776367188
    10. ' dp' → logprob: -19.750045776367188

Token 161: ' mod' (ID: 1812)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5910395979881287
    2. 'dp' → logprob: -1.0910396575927734
    3. 'mod' → logprob: -2.5910396575927734
    4. ' mod' → logprob: -3.3410396575927734
    5. 'd' → logprob: -11.216039657592773
    6. ')' → logprob: -11.966039657592773
    7. '```' → logprob: -12.341039657592773
    8. '_dp' → logprob: -12.591039657592773
    9. '(dp' → logprob: -12.966039657592773
    10. '	dp' → logprob: -13.216039657592773

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.50001335144043
    4. ')' → logprob: -16.62501335144043
    5. ',
' → logprob: -17.50001335144043
    6. '),' → logprob: -18.00001335144043
    7. ',d' → logprob: -19.25001335144043
    8. '`,' → logprob: -19.37501335144043
    9. '‌,' → logprob: -19.50001335144043
    10. ' ' → logprob: -19.50001335144043

Token 163: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.048599183559417725
    2. ' dp' → logprob: -3.0485992431640625
    3. '   ' → logprob: -12.048599243164062
    4. ' ' → logprob: -12.423599243164062
    5. '	dp' → logprob: -13.923599243164062
    6. '  ' → logprob: -15.173599243164062
    7. '(dp' → logprob: -15.673599243164062
    8. '    ' → logprob: -15.923599243164062
    9. '```' → logprob: -16.173599243164062
    10. '_dp' → logprob: -16.673599243164062

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. 'i' → logprob: -12.875008583068848
    4. '[I' → logprob: -17.250009536743164
    5. ')' → logprob: -17.500009536743164
    6. '[
' → logprob: -18.000009536743164
    7. ']' → logprob: -18.625009536743164
    8. '```' → logprob: -18.750009536743164
    9. '][' → logprob: -19.875009536743164
    10. '(i' → logprob: -20.250009536743164

Token 165: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0053206817246973515
    2. ')' → logprob: -5.2553205490112305
    3. ' ])' → logprob: -10.50532054901123
    4. '])
' → logprob: -10.88032054901123
    5. '))' → logprob: -11.50532054901123
    6. ']' → logprob: -11.63032054901123
    7. ')])' → logprob: -12.13032054901123
    8. ')]' → logprob: -12.13032054901123
    9. ' )' → logprob: -12.63032054901123
    10. ''])' → logprob: -13.50532054901123

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010166140273213387
    2. '
' → logprob: -7.001016616821289
    3. ')' → logprob: -9.876016616821289
    4. ' def' → logprob: -10.876016616821289
    5. '    
' → logprob: -11.376016616821289
    6. '  
' → logprob: -11.626016616821289
    7. '	def' → logprob: -12.751016616821289
    8. ' 
' → logprob: -13.001016616821289
    9. '   ' → logprob: -13.751016616821289
    10. '<|end|>' → logprob: -14.001016616821289

Token 167: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.26636841893196106
    2. ' main' → logprob: -2.0163683891296387
    3. 'increment' → logprob: -2.5163683891296387
    4. ' update' → logprob: -4.266368389129639
    5. 'main' → logprob: -6.391368389129639
    6. ' def' → logprob: -6.391368389129639
    7. ' for' → logprob: -7.141368389129639
    8. 'def' → logprob: -7.766368389129639
    9. 'update' → logprob: -7.766368389129639
    10. ' read' → logprob: -8.266368865966797

Token 168: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00017755765293259174
    2. '_steps' → logprob: -8.750177383422852
    3. '_' → logprob: -11.375177383422852
    4. '_s' → logprob: -13.250177383422852
    5. '(' → logprob: -14.250177383422852
    6. '_st' → logprob: -14.250177383422852
    7. '_dp' → logprob: -14.625177383422852
    8. '_value' → logprob: -14.875177383422852
    9. ' _' → logprob: -14.875177383422852
    10. '(_' → logprob: -15.375177383422852

Token 169: '(idx' (ID: 42793)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.009465057402849197
    2. '(step' → logprob: -4.884465217590332
    3. '(' → logprob: -6.634465217590332
    4. '(index' → logprob: -7.759465217590332
    5. '(idx' → logprob: -9.134465217590332
    6. '(target' → logprob: -13.384465217590332
    7. ' (' → logprob: -13.884465217590332
    8. '(pos' → logprob: -13.884465217590332
    9. '(ii' → logprob: -13.884465217590332
    10. '(dp' → logprob: -14.134465217590332

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.000021934509277
    4. '‌,' → logprob: -16.125022888183594
    5. '_,' → logprob: -17.000022888183594
    6. ',
' → logprob: -17.500022888183594
    7. '(dp' → logprob: -17.500022888183594
    8. '):' → logprob: -17.500022888183594
    9. ',d' → logprob: -17.750022888183594
    10. 's' → logprob: -18.125022888183594

Token 171: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38687434792518616
    2. ' dp' → logprob: -1.1368743181228638
    3. '	dp' → logprob: -13.386874198913574
    4. '_dp' → logprob: -13.636874198913574
    5. '(dp' → logprob: -14.511874198913574
    6. 'd' → logprob: -17.51187515258789
    7. '   ' → logprob: -17.51187515258789
    8. 'DP' → logprob: -18.13687515258789
    9. '.dp' → logprob: -18.26187515258789
    10. ',' → logprob: -19.51187515258789

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.750007629394531
    3. ',
' → logprob: -17.87500762939453
    4. ',int' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.62500762939453
    6. '‌,' → logprob: -19.62500762939453
    7. '_,' → logprob: -20.00000762939453
    8. '[],' → logprob: -20.00000762939453
    9. 'def' → logprob: -20.62500762939453
    10. ',value' → logprob: -20.75000762939453

Token 173: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.31326204538345337
    2. ' mod' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.938261985778809
    4. '	mod' → logprob: -16.188262939453125
    5. ' idx' → logprob: -17.188262939453125
    6. '   ' → logprob: -17.688262939453125
    7. '(mod' → logprob: -17.938262939453125
    8. 'm' → logprob: -18.313262939453125
    9. ' modulus' → logprob: -18.563262939453125
    10. 'idx' → logprob: -18.813262939453125

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ',
' → logprob: -17.250001907348633
    5. ',

' → logprob: -19.000001907348633
    6. '‌,' → logprob: -19.000001907348633
    7. '_,' → logprob: -19.125001907348633
    8. ',value' → logprob: -19.875001907348633
    9. ',int' → logprob: -20.250001907348633
    10. ',
' → logprob: -20.625001907348633

Token 175: ' value' (ID: 1432)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3917131721973419
    2. 'value' → logprob: -1.3917131423950195
    3. ' val' → logprob: -2.8917131423950195
    4. ' value' → logprob: -4.5167131423950195
    5. 'inc' → logprob: -5.0167131423950195
    6. 'increment' → logprob: -6.5167131423950195
    7. 'amount' → logprob: -7.5167131423950195
    8. 'delta' → logprob: -9.01671314239502
    9. ' increment' → logprob: -9.64171314239502
    10. 'count' → logprob: -10.14171314239502

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16024839878082275
    2. '):
' → logprob: -1.9102483987808228
    3. '):
' → logprob: -11.160248756408691
    4. '):

' → logprob: -12.660248756408691
    5. '   ' → logprob: -12.785248756408691
    6. ',' → logprob: -13.535248756408691
    7. ')' → logprob: -13.660248756408691
    8. ' ):' → logprob: -13.785248756408691
    9. ':' → logprob: -15.160248756408691
    10. ' ):
' → logprob: -16.535247802734375

Token 177: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6114243268966675
    2. '   ' → logprob: -0.8614243268966675
    3. ' if' → logprob: -3.361424446105957
    4. '	if' → logprob: -9.611424446105957
    5. ' ' → logprob: -9.986424446105957
    6. '  ' → logprob: -10.986424446105957
    7. '+' → logprob: -10.986424446105957
    8. '<|end|>' → logprob: -11.361424446105957
    9. '```' → logprob: -11.736424446105957
    10. '    ' → logprob: -13.236424446105957

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018796122167259455
    2. ' if' → logprob: -6.751879692077637
    3. '   ' → logprob: -7.251879692077637
    4. '```' → logprob: -15.251879692077637
    5. '	if' → logprob: -16.00187873840332
    6. 'If' → logprob: -16.87687873840332
    7. ' ' → logprob: -17.50187873840332
    8. '  ' → logprob: -20.00187873840332
    9. '
' → logprob: -20.37687873840332
    10. '``' → logprob: -21.25187873840332

Token 179: ' dp' (ID: 21546)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12360133975744247
    2. '0' → logprob: -2.4986014366149902
    3. 'dp' → logprob: -3.4986014366149902
    4. ' idx' → logprob: -5.62360143661499
    5. ' ' → logprob: -9.248600959777832
    6. ' dp' → logprob: -9.748600959777832
    7. '(idx' → logprob: -10.498600959777832
    8. '	idx' → logprob: -11.498600959777832
    9. '(dp' → logprob: -12.373600959777832
    10. '(' → logprob: -12.623600959777832

Token 180: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.07005780935287476
    2. 'idx' → logprob: -2.6950578689575195
    3. '0' → logprob: -9.69505786895752
    4. '_idx' → logprob: -10.94505786895752
    5. ' idx' → logprob: -11.69505786895752
    6. 'and' → logprob: -11.69505786895752
    7. '	idx' → logprob: -11.94505786895752
    8. '(idx' → logprob: -12.19505786895752
    9. '```' → logprob: -12.69505786895752
    10. 'Idx' → logprob: -13.32005786895752

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48006799817085266
    2. '>=' → logprob: -1.6050679683685303
    3. '<' → logprob: -2.1050679683685303
    4. '==' → logprob: -3.7300679683685303
    5. ']>=' → logprob: -3.8550679683685303
    6. ']==' → logprob: -4.980068206787109
    7. ')' → logprob: -5.480068206787109
    8. ']<' → logprob: -7.230068206787109
    9. '!=' → logprob: -7.605068206787109
    10. ']!=' → logprob: -8.35506820678711

Token 182: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07427516579627991
    2. '==' → logprob: -3.074275255203247
    3. '<' → logprob: -3.824275255203247
    4. '!=' → logprob: -5.824275016784668
    5. ' >=' → logprob: -8.449275016784668
    6. '==-' → logprob: -8.824275016784668
    7. ' ==' → logprob: -9.824275016784668
    8. '!=-' → logprob: -9.824275016784668
    9. '>' → logprob: -10.449275016784668
    10. '=' → logprob: -10.449275016784668

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.750158309936523
    4. '۰' → logprob: -18.125158309936523
    5. '00' → logprob: -19.375158309936523
    6. '  ' → logprob: -19.500158309936523
    7. '<|end|>' → logprob: -19.500158309936523
    8. '000' → logprob: -20.250158309936523
    9. ' ' → logprob: -20.500158309936523
    10. 'zero' → logprob: -20.500158309936523

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -16.87506675720215
    4. '０' → logprob: -19.12506675720215
    5. '00' → logprob: -19.62506675720215
    6. ' ' → logprob: -20.00006675720215
    7. '  ' → logprob: -20.25006675720215
    8. '   ' → logprob: -20.37506675720215
    9. 'zero' → logprob: -20.50006675720215
    10. '०' → logprob: -20.75006675720215

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019018186256289482
    2. ':
' → logprob: -4.019018173217773
    3. '):' → logprob: -7.769018173217773
    4. '       ' → logprob: -8.519018173217773
    5. '):
' → logprob: -8.894018173217773
    6. '   ' → logprob: -10.519018173217773
    7. ' and' → logprob: -10.769018173217773
    8. ' :' → logprob: -10.894018173217773
    9. ':def' → logprob: -11.519018173217773
    10. ':return' → logprob: -12.394018173217773

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7337575554847717
    2. 'dp' → logprob: -0.7337575554847717
    3. ' dp' → logprob: -3.233757495880127
    4. '   ' → logprob: -8.358757972717285
    5. '	dp' → logprob: -9.483757972717285
    6. '(dp' → logprob: -9.733757972717285
    7. '_dp' → logprob: -11.108757972717285
    8. '      ' → logprob: -14.358757972717285
    9. '.dp' → logprob: -14.858757972717285
    10. '           ' → logprob: -15.108757972717285

Token 187: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.024235008284449577
    2. ' dp' → logprob: -3.7742350101470947
    3. '(dp' → logprob: -7.649234771728516
    4. '       ' → logprob: -8.149234771728516
    5. '   ' → logprob: -8.524234771728516
    6. '	dp' → logprob: -10.649234771728516
    7. '_dp' → logprob: -14.149234771728516
    8. ' (' → logprob: -15.649234771728516
    9. ' ' → logprob: -16.274234771728516
    10. '           ' → logprob: -16.274234771728516

Token 188: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2664456789934775e-06
    2. 'idx' → logprob: -14.000000953674316
    3. '[' → logprob: -15.000000953674316
    4. '```' → logprob: -18.250001907348633
    5. '	idx' → logprob: -18.375001907348633
    6. '[index' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '[
' → logprob: -19.875001907348633
    9. ' idx' → logprob: -20.125001907348633
    10. '
' → logprob: -20.125001907348633

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006238756701350212
    2. ']+=' → logprob: -5.25623893737793
    3. ']=' → logprob: -7.13123893737793
    4. '=' → logprob: -8.75623893737793
    5. ']=(' → logprob: -10.63123893737793
    6. ' ]' → logprob: -11.38123893737793
    7. '+=' → logprob: -11.88123893737793
    8. ')' → logprob: -13.50623893737793
    9. '   ' → logprob: -13.50623893737793
    10. ' =' → logprob: -13.63123893737793

Token 190: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005497461184859276
    2. '+=' → logprob: -5.255497455596924
    3. ' =' → logprob: -8.255497932434082
    4. '=(' → logprob: -13.505497932434082
    5. '%=' → logprob: -13.505497932434082
    6. ' +=' → logprob: -13.880497932434082
    7. '=

' → logprob: -18.130496978759766
    8. '   ' → logprob: -18.505496978759766
    9. '+=(' → logprob: -18.630496978759766
    10. ']+=' → logprob: -18.755496978759766

Token 191: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.01815076172351837
    2. ' value' → logprob: -4.018150806427002
    3. '(value' → logprob: -14.643150329589844
    4. '   ' → logprob: -15.018150329589844
    5. ' ' → logprob: -17.018150329589844
    6. '	value' → logprob: -17.893150329589844
    7. '"value' → logprob: -18.643150329589844
    8. '  ' → logprob: -18.893150329589844
    9. ')value' → logprob: -19.143150329589844
    10. '$value' → logprob: -19.518150329589844

Token 192: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6441308856010437
    2. '%' → logprob: -0.7691308856010437
    3. ' %=' → logprob: -5.144130706787109
    4. '
' → logprob: -5.894130706787109
    5. '   ' → logprob: -6.269130706787109
    6. ' dp' → logprob: -7.894130706787109
    7. '       ' → logprob: -8.26913070678711
    8. '%=' → logprob: -9.51913070678711
    9. 'dp' → logprob: -10.01913070678711
    10. '<|end|>' → logprob: -10.39413070678711

Token 193: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31969109177589417
    2. ' %' → logprob: -1.3196910619735718
    3. '   ' → logprob: -5.944691181182861
    4. ' %=' → logprob: -6.319691181182861
    5. '       ' → logprob: -6.944691181182861
    6. '
' → logprob: -7.444691181182861
    7. '%=' → logprob: -8.694690704345703
    8. ' dp' → logprob: -9.194690704345703
    9. '%
' → logprob: -9.819690704345703
    10. 'dp' → logprob: -10.319690704345703

Token 194: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1602792739868164
    2. ' dp' → logprob: -1.9102792739868164
    3. 'if' → logprob: -10.410279273986816
    4. ' if' → logprob: -11.035279273986816
    5. '       ' → logprob: -12.285279273986816
    6. '	dp' → logprob: -13.160279273986816
    7. '%' → logprob: -14.035279273986816
    8. '   ' → logprob: -14.785279273986816
    9. '%=' → logprob: -15.160279273986816
    10. '(dp' → logprob: -15.660279273986816

Token 195: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.750036239624023
    3. '%' → logprob: -11.375036239624023
    4. 'idx' → logprob: -13.375036239624023
    5. '%=' → logprob: -14.750036239624023
    6. '```' → logprob: -15.375036239624023
    7. '[i' → logprob: -15.750036239624023
    8. '	idx' → logprob: -15.875036239624023
    9. '[index' → logprob: -16.000036239624023
    10. '[%' → logprob: -16.000036239624023

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003824895014986396
    2. ')' → logprob: -5.628824710845947
    3. '%=' → logprob: -9.003825187683105
    4. '%' → logprob: -10.128825187683105
    5. ' %=' → logprob: -10.253825187683105
    6. ']%' → logprob: -11.128825187683105
    7. ')%' → logprob: -11.753825187683105
    8. ' ]' → logprob: -13.253825187683105
    9. '}' → logprob: -13.878825187683105
    10. '```' → logprob: -14.503825187683105

Token 197: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5780093669891357
    2. '%=' → logprob: -0.8280093669891357
    3. '%' → logprob: -6.203009605407715
    4. ' ' → logprob: -11.203009605407715
    5. ' %' → logprob: -11.203009605407715
    6. '=' → logprob: -11.578009605407715
    7. '	' → logprob: -12.953009605407715
    8. ')' → logprob: -13.078009605407715
    9. ')%' → logprob: -13.828009605407715
    10. '%i' → logprob: -14.203009605407715

Token 198: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.15310683415737e-05
    2. ' mod' → logprob: -10.750021934509277
    3. '(mod' → logprob: -18.00002098083496
    4. '	mod' → logprob: -21.37502098083496
    5. 'md' → logprob: -24.00002098083496
    6. ' ' → logprob: -24.25002098083496
    7. '
' → logprob: -25.00002098083496
    8. '   ' → logprob: -25.00002098083496
    9. 'moder' → logprob: -25.25002098083496
    10. 'modal' → logprob: -25.50002098083496

Token 199: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5157466530799866
    2. 'n' → logprob: -1.5157465934753418
    3. 'for' → logprob: -1.7657465934753418
    4. '```' → logprob: -5.640746593475342
    5. ' for' → logprob: -6.265746593475342
    6. '<|end|>' → logprob: -6.640746593475342
    7. 'if' → logprob: -7.015746593475342
    8. 'i' → logprob: -7.015746593475342
    9. 'm' → logprob: -7.140746593475342
    10. 'steps' → logprob: -7.890746593475342

Token 200: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00238837581127882
    2. 'for' → logprob: -6.1273884773254395
    3. 'n' → logprob: -9.377388000488281
    4. 'i' → logprob: -10.377388000488281
    5. '```' → logprob: -10.627388000488281
    6. '<|end|>' → logprob: -10.877388000488281
    7. ')' → logprob: -11.252388000488281
    8. '#' → logprob: -11.627388000488281
    9. 'if' → logprob: -12.002388000488281
    10. '
' → logprob: -12.377388000488281

Token 201: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003791769267991185
    2. ' main' → logprob: -5.628791809082031
    3. 'solve' → logprob: -8.628791809082031
    4. 'count' → logprob: -11.878791809082031
    5. ' solve' → logprob: -12.753791809082031
    6. 'def' → logprob: -13.378791809082031
    7. 'calculate' → logprob: -14.128791809082031
    8. 'compute' → logprob: -15.003791809082031
    9. '	main' → logprob: -16.62879180908203
    10. '```' → logprob: -17.25379180908203

Token 202: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6668877005577087
    2. '_dp' → logprob: -0.9168877005577087
    3. '(n' → logprob: -3.4168877601623535
    4. '_steps' → logprob: -3.5418877601623535
    5. '_result' → logprob: -4.5418877601623535
    6. '_total' → logprob: -5.0418877601623535
    7. '(' → logprob: -5.9168877601623535
    8. '_paths' → logprob: -7.0418877601623535
    9. '(dp' → logprob: -7.2918877601623535
    10. '_max' → logprob: -7.5418877601623535

Token 203: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002780981594696641
    2. '(dp' → logprob: -6.252780914306641
    3. '():' → logprob: -7.377780914306641
    4. '(' → logprob: -8.87778091430664
    5. ' (' → logprob: -9.50278091430664
    6. '():
' → logprob: -13.25278091430664
    7. '(N' → logprob: -13.25278091430664
    8. '()' → logprob: -13.50278091430664
    9. '(def' → logprob: -13.62778091430664
    10. '(m' → logprob: -13.87778091430664

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. '):' → logprob: -11.750011444091797
    3. ' ,' → logprob: -13.000011444091797
    4. ',
' → logprob: -14.000011444091797
    5. '):
' → logprob: -16.250011444091797
    6. '_,' → logprob: -16.375011444091797
    7. '‌,' → logprob: -16.375011444091797
    8. '   ' → logprob: -17.125011444091797
    9. ')' → logprob: -17.125011444091797
    10. ',d' → logprob: -17.750011444091797

Token 205: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10362923890352249
    2. 'm' → logprob: -2.4786293506622314
    3. ' dp' → logprob: -4.728629112243652
    4. ' m' → logprob: -6.103629112243652
    5. 'a' → logprob: -6.353629112243652
    6. 'steps' → logprob: -6.478629112243652
    7. ' steps' → logprob: -9.228629112243652
    8. ' a' → logprob: -9.353629112243652
    9. 'M' → logprob: -12.041129112243652
    10. 'k' → logprob: -12.478629112243652

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016089389100670815
    2. '):' → logprob: -4.14108943939209
    3. '):
' → logprob: -10.01608943939209
    4. ' ,' → logprob: -12.51608943939209
    5. ' ):' → logprob: -13.01608943939209
    6. '   ' → logprob: -13.76608943939209
    7. ')' → logprob: -14.01608943939209
    8. ',
' → logprob: -14.01608943939209
    9. '):

' → logprob: -15.51608943939209
    10. ',n' → logprob: -15.64108943939209

Token 207: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.24988679587841034
    2. 'm' → logprob: -1.8748867511749268
    3. ' mod' → logprob: -3.2498867511749268
    4. ' m' → logprob: -4.624886989593506
    5. 'steps' → logprob: -4.624886989593506
    6. 'a' → logprob: -5.374886989593506
    7. ' steps' → logprob: -5.749886989593506
    8. ' a' → logprob: -6.749886989593506
    9. 'dp' → logprob: -8.749886512756348
    10. ')' → logprob: -8.999886512756348

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016718494007363915
    2. '):
' → logprob: -6.75167179107666
    3. ',' → logprob: -7.62667179107666
    4. '   ' → logprob: -11.50167179107666
    5. ':' → logprob: -13.62667179107666
    6. ')' → logprob: -13.87667179107666
    7. '):
' → logprob: -14.00167179107666
    8. ' ):' → logprob: -14.50167179107666
    9. '):

' → logprob: -15.37667179107666
    10. 'def' → logprob: -16.626672744750977

Token 209: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40975573658943176
    2. '   ' → logprob: -1.6597557067871094
    3. 'result' → logprob: -2.1597557067871094
    4. 'for' → logprob: -3.6597557067871094
    5. 'res' → logprob: -5.659755706787109
    6. ' return' → logprob: -7.159755706787109
    7. 'total' → logprob: -8.03475570678711
    8. '```' → logprob: -8.78475570678711
    9. ' result' → logprob: -9.40975570678711
    10. ' for' → logprob: -9.90975570678711

Token 210: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013344217091798782
    2. 'for' (adapté à ' for') → logprob: -5.1383442878723145
    3. 'result' → logprob: -5.6383442878723145
    4. 'if' → logprob: -6.2633442878723145
    5. 'res' → logprob: -6.6383442878723145
    6. ' return' → logprob: -8.388343811035156
    7. '   ' → logprob: -8.638343811035156
    8. 'total' → logprob: -8.638343811035156
    9. 'ans' → logprob: -11.763343811035156
    10. 'print' → logprob: -12.263343811035156

Token 211: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023250950500369072
    2. ' i' → logprob: -3.7732510566711426
    3. '   ' → logprob: -12.773250579833984
    4. ' ' → logprob: -13.523250579833984
    5. '`' → logprob: -15.273250579833984
    6. '```' → logprob: -15.398250579833984
    7. '	i' → logprob: -15.398250579833984
    8. '(i' → logprob: -15.898250579833984
    9. 'step' → logprob: -16.023250579833984
    10. 'idx' → logprob: -16.648250579833984

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026331651955842972
    2. 'in' → logprob: -3.651331663131714
    3. ' ' → logprob: -11.401331901550293
    4. ',' → logprob: -12.151331901550293
    5. '   ' → logprob: -12.776331901550293
    6. 'n' → logprob: -12.901331901550293
    7. '+' → logprob: -13.026331901550293
    8. '	in' → logprob: -13.026331901550293
    9. 'range' → logprob: -14.026331901550293
    10. '_' → logprob: -14.776331901550293

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015045057516545057
    2. ' range' → logprob: -6.501504421234131
    3. '   ' → logprob: -13.626504898071289
    4. '(range' → logprob: -15.001504898071289
    5. ' ' → logprob: -15.376504898071289
    6. 'n' → logprob: -16.00150489807129
    7. '  ' → logprob: -16.12650489807129
    8. '	range' → logprob: -16.37650489807129
    9. '
' → logprob: -17.50150489807129
    10. 'r' → logprob: -17.75150489807129

Token 214: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023163497447968
    2. '(n' → logprob: -1.910231590270996
    3. '1' → logprob: -12.660231590270996
    4. '(len' → logprob: -13.160231590270996
    5. 'n' → logprob: -13.285231590270996
    6. ' (' → logprob: -14.785231590270996
    7. ' ' → logprob: -15.410231590270996
    8. '(
' → logprob: -17.160232543945312
    9. '(m' → logprob: -17.910232543945312
    10. ' n' → logprob: -18.160232543945312

Token 215: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6414929628372192
    2. '):
' → logprob: -0.8914929628372192
    3. '):' → logprob: -3.0164928436279297
    4. ' +' → logprob: -4.39149284362793
    5. '-' → logprob: -6.51649284362793
    6. ' ):
' → logprob: -8.39149284362793
    7. ' -' → logprob: -8.89149284362793
    8. ' ):' → logprob: -9.14149284362793
    9. '   ' → logprob: -9.64149284362793
    10. '1' → logprob: -10.39149284362793

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12277968972921371
    2. '   ' → logprob: -2.872779607772827
    3. ' if' → logprob: -2.997779607772827
    4. 'if' → logprob: -5.122779846191406
    5. ' update' → logprob: -5.997779846191406
    6. 'update' → logprob: -7.372779846191406
    7. '```' → logprob: -11.247779846191406
    8. 'def' → logprob: -12.497779846191406
    9. ',' → logprob: -12.747779846191406
    10. '    ' → logprob: -12.872779846191406

Token 217: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.022195635363459587
    2. ' update' → logprob: -4.022195816040039
    3. '   ' → logprob: -5.522195816040039
    4. 'if' → logprob: -10.897195816040039
    5. '       ' → logprob: -11.147195816040039
    6. '	update' → logprob: -12.647195816040039
    7. ' ' → logprob: -13.522195816040039
    8. ' if' → logprob: -13.647195816040039
    9. '  ' → logprob: -13.772195816040039
    10. '
' → logprob: -15.522195816040039

Token 218: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.3229786455631256
    2. '(i' → logprob: -1.3229786157608032
    3. 'dp' → logprob: -4.822978496551514
    4. '_' → logprob: -7.697978496551514
    5. 'i' → logprob: -8.072978973388672
    6. '(' → logprob: -8.697978973388672
    7. '(dp' → logprob: -8.947978973388672
    8. '[i' → logprob: -9.322978973388672
    9. '_(' → logprob: -9.572978973388672
    10. '```' → logprob: -9.572978973388672

Token 219: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0015045057516545057
    2. '(' → logprob: -6.501504421234131
    3. '(
' → logprob: -13.376504898071289
    4. ' (' → logprob: -14.501504898071289
    5. '```' → logprob: -16.87650489807129
    6. 'i' → logprob: -17.12650489807129
    7. '((' → logprob: -18.25150489807129
    8. '(ii' → logprob: -18.87650489807129
    9. '(

' → logprob: -18.87650489807129
    10. ' ' → logprob: -19.00150489807129

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',
' → logprob: -16.250019073486328
    4. ')' → logprob: -16.375019073486328
    5. '‌,' → logprob: -17.875019073486328
    6. ',d' → logprob: -18.250019073486328
    7. '+,' → logprob: -18.500019073486328
    8. '),' → logprob: -19.000019073486328
    9. '(dp' → logprob: -19.000019073486328
    10. '```' → logprob: -19.125019073486328

Token 221: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014163747429847717
    2. ' dp' → logprob: -4.264163970947266
    3. '	dp' → logprob: -15.764163970947266
    4. '_dp' → logprob: -16.389163970947266
    5. '(dp' → logprob: -16.639163970947266
    6. ')' → logprob: -18.139163970947266
    7. '
' → logprob: -18.764163970947266
    8. '```' → logprob: -19.139163970947266
    9. '.dp' → logprob: -19.389163970947266
    10. ' ' → logprob: -19.514163970947266

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013929695705883205
    2. ' ,' → logprob: -9.000139236450195
    3. ')' → logprob: -11.125139236450195
    4. ',
' → logprob: -15.375139236450195
    5. '   ' → logprob: -15.500139236450195
    6. '),' → logprob: -16.375139236450195
    7. ' ' → logprob: -16.375139236450195
    8. ',)' → logprob: -16.625139236450195
    9. '```' → logprob: -16.875139236450195
    10. ',n' → logprob: -16.875139236450195

Token 223: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.018150994554162025
    2. ' mod' → logprob: -4.018150806427002
    3. ')' → logprob: -14.51815128326416
    4. 'm' → logprob: -15.76815128326416
    5. '	mod' → logprob: -15.76815128326416
    6. '
' → logprob: -16.268150329589844
    7. ' ' → logprob: -16.643150329589844
    8. '(mod' → logprob: -17.018150329589844
    9. '<|end|>' → logprob: -17.268150329589844
    10. '    ' → logprob: -18.393150329589844

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002821158617734909
    2. ')
' → logprob: -5.87782096862793
    3. '   ' → logprob: -11.75282096862793
    4. ')

' → logprob: -12.37782096862793
    5. ' )' → logprob: -13.12782096862793
    6. ')return' → logprob: -13.62782096862793
    7. ')n' → logprob: -14.87782096862793
    8. ')
' → logprob: -15.50282096862793
    9. '
' → logprob: -16.50282096862793
    10. ' ' → logprob: -16.62782096862793

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7740750312805176
    2. 'return' → logprob: -0.7740750312805176
    3. 'def' → logprob: -2.7740750312805176
    4. ' return' → logprob: -4.274075031280518
    5. '
' → logprob: -7.149075031280518
    6. '```' → logprob: -8.14907455444336
    7. '	return' → logprob: -8.39907455444336
    8. ' def' → logprob: -10.39907455444336
    9. '    
' → logprob: -10.64907455444336
    10. ' ' → logprob: -11.39907455444336

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010141143575310707
    2. ' return' → logprob: -7.001014232635498
    3. '   ' → logprob: -9.50101375579834
    4. 'if' → logprob: -11.37601375579834
    5. 'result' → logprob: -11.37601375579834
    6. 'for' → logprob: -13.25101375579834
    7. 'def' → logprob: -13.75101375579834
    8. '```' → logprob: -13.75101375579834
    9. '
' → logprob: -14.75101375579834
    10. '	return' → logprob: -15.50101375579834

Token 227: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006715728435665369
    2. ' dp' → logprob: -5.006715774536133
    3. '(dp' → logprob: -15.006715774536133
    4. '	dp' → logprob: -18.381715774536133
    5. '_dp' → logprob: -19.381715774536133
    6. '[' → logprob: -19.506715774536133
    7. 'sum' → logprob: -19.631715774536133
    8. '   ' → logprob: -19.631715774536133
    9. 'max' → logprob: -19.756715774536133
    10. ' ' → logprob: -21.256715774536133

Token 228: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5949809551239014
    2. '[' → logprob: -1.3449809551239014
    3. '[-' → logprob: -1.8449809551239014
    4. '[len' → logprob: -3.9699809551239014
    5. '<|end|>' → logprob: -4.8449811935424805
    6. 'def' → logprob: -6.2199811935424805
    7. '```' → logprob: -7.5949811935424805
    8. '(n' → logprob: -9.46998119354248
    9. '[end' → logprob: -9.46998119354248
    10. '[N' → logprob: -9.71998119354248

Token 229: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010163593105971813
    2. ')' → logprob: -10.250102043151855
    3. ' ]' → logprob: -10.625102043151855
    4. ']
' → logprob: -10.750102043151855
    5. ')]' → logprob: -11.375102043151855
    6. '])' → logprob: -11.875102043151855
    7. '<|end|>' → logprob: -14.000102043151855
    8. '}' → logprob: -15.000102043151855
    9. '[' → logprob: -15.375102043151855
    10. ']

' → logprob: -16.25010108947754

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01882050186395645
    2. 'n' → logprob: -4.643820285797119
    3. 'if' → logprob: -5.268820285797119
    4. '<|end|>' → logprob: -6.143820285797119
    5. '```' → logprob: -7.018820285797119
    6. 'print' → logprob: -7.893820285797119
    7. '#' → logprob: -8.518820762634277
    8. '
' → logprob: -9.143820762634277
    9. '(n' → logprob: -9.893820762634277
    10. '(' → logprob: -10.768820762634277

Token 231: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2310798615217209
    2. ' main' → logprob: -1.9810798168182373
    3. 'def' → logprob: -2.9810798168182373
    4. '__' → logprob: -4.731080055236816
    5. 'read' → logprob: -5.106080055236816
    6. ' __' → logprob: -6.981080055236816
    7. ' def' → logprob: -7.106080055236816
    8. ' read' → logprob: -7.106080055236816
    9. 'if' → logprob: -9.606080055236816
    10. '_main' → logprob: -9.856080055236816

Token 232: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03443875163793564
    2. '_result' → logprob: -3.6594388484954834
    3. '(result' → logprob: -5.159438610076904
    4. 'result' → logprob: -6.909438610076904
    5. '_' → logprob: -8.034439086914062
    6. '("("' → logprob: -8.284439086914062
    7. '("_' → logprob: -8.534439086914062
    8. '()' → logprob: -8.784439086914062
    9. '_results' → logprob: -9.659439086914062
    10. '_(' → logprob: -10.034439086914062

Token 233: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6683884859085083
    2. '():' → logprob: -1.1683884859085083
    3. '()' → logprob: -1.7933884859085083
    4. '(dp' → logprob: -4.793388366699219
    5. '(result' → logprob: -6.543388366699219
    6. '(n' → logprob: -9.668388366699219
    7. '():
' → logprob: -9.918388366699219
    8. '(print' → logprob: -10.168388366699219
    9. '(def' → logprob: -10.293388366699219
    10. '(:' → logprob: -10.418388366699219

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22603222727775574
    2. '):
' → logprob: -1.6010322570800781
    3. ')' → logprob: -7.601032257080078
    4. '():
' → logprob: -10.726032257080078
    5. '):
' → logprob: -10.851032257080078
    6. ' ):' → logprob: -10.976032257080078
    7. '():' → logprob: -11.476032257080078
    8. 'res' → logprob: -11.601032257080078
    9. '(res' → logprob: -11.726032257080078
    10. '()' → logprob: -11.851032257080078

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06692530959844589
    2. 'print' → logprob: -2.816925287246704
    3. ' print' → logprob: -5.316925525665283
    4. '```' → logprob: -10.191925048828125
    5. 'def' → logprob: -16.941925048828125
    6. '`' → logprob: -17.066925048828125
    7. '``' → logprob: -18.066925048828125
    8. '   ' → logprob: -18.191925048828125
    9. '	print' → logprob: -18.316925048828125
    10. '    ' → logprob: -18.566925048828125

Token 236: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -18.75
    5. 'pr' → logprob: -23.125
    6. '`' → logprob: -23.5
    7. 'pass' → logprob: -24.0
    8. 'def' → logprob: -24.25
    9. 'prin' → logprob: -24.625
    10. '
' → logprob: -25.5

Token 237: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.005238975863903761
    2. '(' → logprob: -5.255239009857178
    3. 'res' → logprob: -12.38023853302002
    4. '(
' → logprob: -14.50523853302002
    5. '()' → logprob: -15.50523853302002
    6. '(result' → logprob: -16.005239486694336
    7. '(f' → logprob: -16.755239486694336
    8. ' res' → logprob: -16.755239486694336
    9. ' (' → logprob: -17.505239486694336
    10. '(

' → logprob: -18.505239486694336

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.25
    3. ')`' → logprob: -16.5
    4. ')
' → logprob: -17.125
    5. '))' → logprob: -18.0
    6. '()' → logprob: -18.25
    7. '`)' → logprob: -18.5
    8. '())' → logprob: -18.625
    9. '')' → logprob: -19.5
    10. '),' → logprob: -20.25

Token 239: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.052377623040229e-05
    2. 'if' → logprob: -9.625070571899414
    3. '```' → logprob: -12.500070571899414
    4. 'n' → logprob: -15.000070571899414
    5. 'for' → logprob: -15.375070571899414
    6. ' def' → logprob: -16.625070571899414
    7. 'ndef' → logprob: -16.875070571899414
    8. '
' → logprob: -16.875070571899414
    9. '#' → logprob: -18.500070571899414
    10. '    
' → logprob: -19.250070571899414

Token 240: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07933024317026138
    2. 'main' → logprob: -2.5793302059173584
    3. 'def' → logprob: -8.079330444335938
    4. ' def' → logprob: -9.204330444335938
    5. ' __' → logprob: -11.204330444335938
    6. '__' → logprob: -11.454330444335938
    7. 'if' → logprob: -12.579330444335938
    8. '_main' → logprob: -13.704330444335938
    9. ' run' → logprob: -14.204330444335938
    10. ' ' → logprob: -16.079330444335938

Token 241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.392824874026701e-05
    2. '():
' → logprob: -10.87503433227539
    3. ' ():' → logprob: -11.37503433227539
    4. '()' → logprob: -13.00003433227539
    5. '(' → logprob: -13.87503433227539
    6. '():
' → logprob: -16.37503433227539
    7. '()>' → logprob: -16.50003433227539
    8. '():

' → logprob: -17.62503433227539
    9. '(":' → logprob: -17.87503433227539
    10. '_' → logprob: -17.87503433227539

Token 242: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2645570933818817
    2. '   ' → logprob: -1.889557123184204
    3. ' n' → logprob: -2.514557123184204
    4. '(n' → logprob: -8.639556884765625
    5. '	n' → logprob: -8.889556884765625
    6. '_n' → logprob: -10.389556884765625
    7. '()' → logprob: -10.764556884765625
    8. '
' → logprob: -11.764556884765625
    9. '    
' → logprob: -11.889556884765625
    10. ',n' → logprob: -11.889556884765625

Token 243: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.009319789707660675
    2. ' n' → logprob: -4.75931978225708
    3. '   ' → logprob: -7.25931978225708
    4. '	n' → logprob: -13.884320259094238
    5. '
' → logprob: -15.134320259094238
    6. ' ' → logprob: -16.384319305419922
    7. '```' → logprob: -16.884319305419922
    8. '    
' → logprob: -17.009319305419922
    9. '  ' → logprob: -17.384319305419922
    10. '_n' → logprob: -18.259319305419922

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003442832676228136
    2. ' =' → logprob: -8.500344276428223
    3. ',m' → logprob: -9.250344276428223
    4. '=' → logprob: -10.125344276428223
    5. ' ,' → logprob: -12.375344276428223
    6. 'm' → logprob: -14.875344276428223
    7. ',M' → logprob: -16.75034523010254
    8. ',k' → logprob: -17.62534523010254
    9. ',s' → logprob: -17.87534523010254
    10. ',n' → logprob: -18.25034523010254

Token 245: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001035191467963159
    2. ' m' → logprob: -6.876035213470459
    3. '_' → logprob: -14.0010347366333
    4. '_m' → logprob: -14.1260347366333
    5. '=' → logprob: -15.5010347366333
    6. 'k' → logprob: -16.001035690307617
    7. '	m' → logprob: -16.251035690307617
    8. ' =' → logprob: -16.376035690307617
    9. '   ' → logprob: -16.376035690307617
    10. 'M' → logprob: -16.501035690307617

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520207166671753
    2. ' =' → logprob: -1.5020207166671753
    3. ',' → logprob: -9.377020835876465
    4. '=input' → logprob: -12.127020835876465
    5. ')' → logprob: -15.127020835876465
    6. ' ' → logprob: -15.627020835876465
    7. ')=' → logprob: -15.877020835876465
    8. '=int' → logprob: -15.877020835876465
    9. '   ' → logprob: -16.12701988220215
    10. '=

' → logprob: -16.37701988220215

Token 247: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.48572874069213867
    2. ' map' → logprob: -1.4857287406921387
    3. 'read' → logprob: -1.9857287406921387
    4. 'map' → logprob: -3.8607287406921387
    5. ' tuple' → logprob: -10.110729217529297
    6. '   ' → logprob: -11.235729217529297
    7. ' ' → logprob: -11.485729217529297
    8. 'tuple' → logprob: -12.110729217529297
    9. '	read' → logprob: -12.360729217529297
    10. '  ' → logprob: -12.485729217529297

Token 248: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04495743289589882
    2. '()' → logprob: -3.169957399368286
    3. '_' → logprob: -6.794957637786865
    4. '(' → logprob: -7.669957637786865
    5. 'input' → logprob: -8.544957160949707
    6. '(_' → logprob: -9.794957160949707
    7. '()
' → logprob: -10.794957160949707
    8. '_inputs' → logprob: -10.919957160949707
    9. '("_' → logprob: -11.544957160949707
    10. '('_' → logprob: -11.669957160949707

Token 249: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.637786231702194e-05
    2. '()
' → logprob: -9.375086784362793
    3. ' ()' → logprob: -14.375086784362793
    4. '()`' → logprob: -15.500086784362793
    5. '()
' → logprob: -15.625086784362793
    6. '()

' → logprob: -15.750086784362793
    7. '()\' → logprob: -16.000085830688477
    8. '(' → logprob: -16.125085830688477
    9. '();' → logprob: -16.750085830688477
    10. ')' → logprob: -16.750085830688477

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08294901251792908
    2. 'a' → logprob: -3.207948923110962
    3. '
' → logprob: -3.332948923110962
    4. '    
' → logprob: -6.082949161529541
    5. '	a' → logprob: -7.957949161529541
    6. '```' → logprob: -8.457948684692383
    7. ' a' → logprob: -8.832948684692383
    8. '  
' → logprob: -9.082948684692383
    9. '<|end|>' → logprob: -10.082948684692383
    10. ',a' → logprob: -10.082948684692383

Token 251: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1822076141834259
    2. 'dp' → logprob: -2.0572075843811035
    3. '   ' → logprob: -3.4322075843811035
    4. ' a' → logprob: -5.9322075843811035
    5. 'steps' → logprob: -5.9322075843811035
    6. ' dp' → logprob: -7.1822075843811035
    7. ' steps' → logprob: -8.432208061218262
    8. 'm' → logprob: -9.057208061218262
    9. ' ' → logprob: -11.557208061218262
    10. 's' → logprob: -11.807208061218262

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.438261032104492
    4. '   ' → logprob: -17.938261032104492
    5. '=set' → logprob: -17.938261032104492
    6. ',' → logprob: -18.938261032104492
    7. '=get' → logprob: -19.063261032104492
    8. '＝' → logprob: -19.313261032104492
    9. ' ' → logprob: -19.313261032104492
    10. 'b' → logprob: -19.813261032104492

Token 253: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3868952691555023
    2. 'read' → logprob: -1.1368952989578247
    3. '[]' → logprob: -11.136895179748535
    4. ' []' → logprob: -12.636895179748535
    5. '[' → logprob: -12.886895179748535
    6. '	read' → logprob: -13.886895179748535
    7. ' [' → logprob: -14.261895179748535
    8. '(read' → logprob: -14.761895179748535
    9. 'set' → logprob: -15.011895179748535
    10. ' set' → logprob: -15.136895179748535

Token 254: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -4.842555426876061e-06
    2. 'steps' → logprob: -12.375004768371582
    3. '_step' → logprob: -16.1250057220459
    4. '(' → logprob: -16.6250057220459
    5. 's' → logprob: -16.7500057220459
    6. '_s' → logprob: -17.0000057220459
    7. '```' → logprob: -17.0000057220459
    8. '_' → logprob: -17.3750057220459
    9. '_m' → logprob: -17.5000057220459
    10. '_input' → logprob: -17.6250057220459

Token 255: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.7432603272027336e-06
    2. 'm' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.625001907348633
    4. '(' → logprob: -15.625001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(M' → logprob: -19.625001907348633
    7. '	m' → logprob: -19.625001907348633
    8. ')m' → logprob: -19.625001907348633
    9. ' m' → logprob: -19.875001907348633
    10. '```' → logprob: -20.625001907348633

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010306637705070898
    2. ')
' → logprob: -9.500102996826172
    3. '())' → logprob: -11.000102996826172
    4. '()' → logprob: -11.500102996826172
    5. ' )' → logprob: -14.375102996826172
    6. '   ' → logprob: -14.375102996826172
    7. '))' → logprob: -16.750102996826172
    8. ')`' → logprob: -16.875102996826172
    9. '()
' → logprob: -17.750102996826172
    10. ' ' → logprob: -17.875102996826172

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0329945906996727
    2. 'dp' → logprob: -3.782994508743286
    3. '
' → logprob: -5.032994747161865
    4. '    
' → logprob: -6.782994747161865
    5. '	dp' → logprob: -7.032994747161865
    6. ' dp' → logprob: -7.282994747161865
    7. '```' → logprob: -8.407994270324707
    8. '[' → logprob: -10.157994270324707
    9. '(dp' → logprob: -10.282994270324707
    10. 'def' → logprob: -10.407994270324707

Token 258: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04042898863554001
    2. ' dp' → logprob: -3.290428876876831
    3. '   ' → logprob: -6.04042911529541
    4. '	dp' → logprob: -13.16542911529541
    5. '```' → logprob: -13.54042911529541
    6. '
' → logprob: -15.04042911529541
    7. '(dp' → logprob: -15.66542911529541
    8. '_dp' → logprob: -15.79042911529541
    9. ' ' → logprob: -15.91542911529541
    10. '  ' → logprob: -16.665428161621094

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '＝' → logprob: -19.001928329467773
    4. '```' → logprob: -19.001928329467773
    5. '=create' → logprob: -19.126928329467773
    6. ',' → logprob: -19.376928329467773
    7. '=n' → logprob: -19.501928329467773
    8. ')' → logprob: -19.501928329467773
    9. 'init' → logprob: -19.876928329467773
    10. ' ' → logprob: -19.876928329467773

Token 260: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07889044284820557
    2. ' init' → logprob: -2.578890323638916
    3. '(init' → logprob: -15.078890800476074
    4. '_init' → logprob: -15.203890800476074
    5. '	init' → logprob: -17.328889846801758
    6. '   ' → logprob: -17.453889846801758
    7. 'initialize' → logprob: -18.078889846801758
    8. '/init' → logprob: -19.078889846801758
    9. '.init' → logprob: -19.328889846801758
    10. ':init' → logprob: -19.328889846801758

Token 261: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.3425219549390022e-05
    2. 'dp' → logprob: -11.37501335144043
    3. '(dp' → logprob: -14.00001335144043
    4. '```' → logprob: -15.87501335144043
    5. '_' → logprob: -16.00001335144043
    6. '(n' → logprob: -16.25001335144043
    7. '_lp' → logprob: -16.25001335144043
    8. '(' → logprob: -16.37501335144043
    9. '_dn' → logprob: -17.00001335144043
    10. '_DP' → logprob: -17.25001335144043

Token 262: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.375012397766113
    3. 'n' → logprob: -15.000012397766113
    4. ' (' → logprob: -16.500011444091797
    5. '(
' → logprob: -17.250011444091797
    6. '	n' → logprob: -19.000011444091797
    7. '```' → logprob: -19.250011444091797
    8. '\(' → logprob: -19.750011444091797
    9. '<n' → logprob: -20.125011444091797
    10. ' n' → logprob: -20.125011444091797

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024793429765850306
    2. ')
' → logprob: -6.002479553222656
    3. '   ' → logprob: -13.127479553222656
    4. ')
' → logprob: -14.377479553222656
    5. ' )' → logprob: -14.377479553222656
    6. ')

' → logprob: -15.627479553222656
    7. ')n' → logprob: -15.877479553222656
    8. ' ' → logprob: -17.377479553222656
    9. '),' → logprob: -17.502479553222656
    10. ')\
' → logprob: -17.877479553222656

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012410163879394531
    2. 'set' → logprob: -4.8874101638793945
    3. ' set' → logprob: -5.3874101638793945
    4. '	set' → logprob: -9.137410163879395
    5. 'mod' → logprob: -9.762410163879395
    6. '(set' → logprob: -11.387410163879395
    7. '   ' → logprob: -11.887410163879395
    8. '```' → logprob: -11.887410163879395
    9. ')set' → logprob: -12.012410163879395
    10. '
' → logprob: -12.012410163879395

Token 265: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.1014641672372818
    2. 'mod' → logprob: -2.35146427154541
    3. ' set' → logprob: -7.22646427154541
    4. '   ' → logprob: -7.60146427154541
    5. ' mod' → logprob: -11.10146427154541
    6. '```' → logprob: -11.35146427154541
    7. ' ' → logprob: -13.85146427154541
    8. 'm' → logprob: -14.10146427154541
    9. '	set' → logprob: -15.10146427154541
    10. '
' → logprob: -15.47646427154541

Token 266: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.014189710840582848
    2. '_b' → logprob: -4.264189720153809
    3. 'broken' → logprob: -10.764189720153809
    4. 'base' → logprob: -12.514189720153809
    5. 'b' → logprob: -14.514189720153809
    6. '_break' → logprob: -14.889189720153809
    7. '_' → logprob: -16.014188766479492
    8. '_bas' → logprob: -16.139188766479492
    9. '_basis' → logprob: -16.514188766479492
    10. ' broken' → logprob: -16.764188766479492

Token 267: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. '_cases' → logprob: -15.750000953674316
    4. ' _' → logprob: -16.000001907348633
    5. '_code' → logprob: -16.500001907348633
    6. 'case' → logprob: -16.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '_line' → logprob: -18.000001907348633
    9. '_space' → logprob: -18.750001907348633
    10. '_base' → logprob: -18.750001907348633

Token 268: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -17.0000057220459
    4. '(dt' → logprob: -17.8750057220459
    5. '(df' → logprob: -18.7500057220459
    6. '(
' → logprob: -19.6250057220459
    7. '(dx' → logprob: -20.3750057220459
    8. '(lp' → logprob: -20.6250057220459
    9. '(db' → logprob: -20.7500057220459
    10. '(ds' → logprob: -20.8750057220459

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004081724211573601
    2. ')
' → logprob: -5.504081726074219
    3. '   ' → logprob: -13.254081726074219
    4. ')

' → logprob: -14.129081726074219
    5. ' )' → logprob: -15.004081726074219
    6. ')
' → logprob: -15.504081726074219
    7. '),' → logprob: -17.12908172607422
    8. ')`' → logprob: -17.12908172607422
    9. ')\
' → logprob: -17.75408172607422
    10. ' ' → logprob: -17.75408172607422

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022171033546328545
    2. 'set' → logprob: -4.0221710205078125
    3. ' set' → logprob: -5.5221710205078125
    4. '```' → logprob: -11.522171020507812
    5. '	set' → logprob: -13.522171020507812
    6. 'a' → logprob: -13.647171020507812
    7. ' a' → logprob: -14.522171020507812
    8. ')set' → logprob: -14.522171020507812
    9. '(set' → logprob: -14.897171020507812
    10. '       ' → logprob: -14.897171020507812

Token 271: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.0002989968634210527
    2. '   ' → logprob: -8.750299453735352
    3. ' set' → logprob: -8.875299453735352
    4. '```' → logprob: -14.375299453735352
    5. '	set' → logprob: -17.00029945373535
    6. '#set' → logprob: -17.50029945373535
    7. ')set' → logprob: -17.62529945373535
    8. '(set' → logprob: -17.87529945373535
    9. ' ' → logprob: -18.00029945373535
    10. '  ' → logprob: -18.75029945373535

Token 272: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.228561349213123e-05
    2. 'broken' → logprob: -9.875052452087402
    3. 'Broken' → logprob: -14.375052452087402
    4. '(b' → logprob: -16.375051498413086
    5. 'b' → logprob: -16.625051498413086
    6. ' broken' → logprob: -17.875051498413086
    7. '_break' → logprob: -18.000051498413086
    8. 'bro' → logprob: -19.750051498413086
    9. '```' → logprob: -20.375051498413086
    10. '(' → logprob: -20.625051498413086

Token 273: 'roken' (ID: 98226)
  Prédit: 'roken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roken' → logprob: -3.7697225252486533e-06
    2. 'ro' → logprob: -12.750003814697266
    3. 'rok' → logprob: -14.500003814697266
    4. 'broken' → logprob: -15.125003814697266
    5. 'roke' → logprob: -17.750003814697266
    6. 'roker' → logprob: -17.750003814697266
    7. 'ork' → logprob: -18.250003814697266
    8. '_ro' → logprob: -19.125003814697266
    9. '_' → logprob: -19.250003814697266
    10. 'reak' → logprob: -19.500003814697266

Token 274: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.282920129597187e-05
    2. '_step' → logprob: -11.500012397766113
    3. '_' → logprob: -13.250012397766113
    4. '_s' → logprob: -15.125012397766113
    5. '```' → logprob: -15.125012397766113
    6. 'steps' → logprob: -16.50001335144043
    7. '_sn' → logprob: -16.75001335144043
    8. ''_' → logprob: -17.00001335144043
    9. ' _' → logprob: -17.62501335144043
    10. '_cases' → logprob: -17.62501335144043

Token 275: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. ' (' → logprob: -15.25000286102295
    4. '```' → logprob: -16.250001907348633
    5. '(
' → logprob: -16.875001907348633
    6. '	dp' → logprob: -17.125001907348633
    7. 'dp' → logprob: -17.625001907348633
    8. ' dp' → logprob: -17.750001907348633
    9. '(dt' → logprob: -18.500001907348633
    10. '(df' → logprob: -18.875001907348633

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020589184015989304
    2. '(dp' → logprob: -3.8955891132354736
    3. '(' → logprob: -10.895588874816895
    4. ')' → logprob: -11.520588874816895
    5. ' ,' → logprob: -11.895588874816895
    6. 'dp' → logprob: -11.895588874816895
    7. ',
' → logprob: -13.020588874816895
    8. '```' → logprob: -13.770588874816895
    9. ' dp' → logprob: -14.520588874816895
    10. ',(' → logprob: -14.645588874816895

Token 277: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06196768581867218
    2. ' a' → logprob: -2.811967611312866
    3. '	a' → logprob: -17.311967849731445
    4. ')a' → logprob: -17.436967849731445
    5. '[a' → logprob: -17.811967849731445
    6. '(a' → logprob: -18.186967849731445
    7. '_a' → logprob: -18.311967849731445
    8. '   ' → logprob: -18.436967849731445
    9. ')' → logprob: -18.561967849731445
    10. ',a' → logprob: -19.061967849731445

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.672236824873835e-05
    2. ')
' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.625076293945312
    4. ')

' → logprob: -14.500076293945312
    5. ' )' → logprob: -15.875076293945312
    6. '))' → logprob: -17.750076293945312
    7. ')n' → logprob: -17.875076293945312
    8. ')#' → logprob: -18.625076293945312
    9. '),' → logprob: -19.125076293945312
    10. ' ' → logprob: -19.250076293945312

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2581859529018402
    2. 'mod' → logprob: -1.5081859827041626
    3. '
' → logprob: -5.758185863494873
    4. ' mod' → logprob: -6.008185863494873
    5. '```' → logprob: -8.008186340332031
    6. '	mod' → logprob: -8.758186340332031
    7. '    
' → logprob: -10.008186340332031
    8. '  ' → logprob: -10.758186340332031
    9. ' ' → logprob: -11.133186340332031
    10. 'def' → logprob: -11.258186340332031

Token 280: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -10.750022888183594
    3. 'res' → logprob: -13.625022888183594
    4. ' mod' → logprob: -14.875022888183594
    5. 'print' → logprob: -16.250022888183594
    6. '```' → logprob: -17.875022888183594
    7. 'result' → logprob: -18.125022888183594
    8. '
' → logprob: -19.750022888183594
    9. '	mod' → logprob: -20.250022888183594
    10. ' ' → logprob: -20.500022888183594

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889606058597565
    2. '=' → logprob: -2.5788960456848145
    3. '=get' → logprob: -12.703896522521973
    4. '()' → logprob: -12.953896522521973
    5. '(' → logprob: -14.078896522521973
    6. '(get' → logprob: -17.578895568847656
    7. '＝' → logprob: -17.578895568847656
    8. '	' → logprob: -18.078895568847656
    9. ' ' → logprob: -18.578895568847656
    10. '_' → logprob: -18.578895568847656

Token 282: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.006715370807796717
    2. ' get' → logprob: -5.006715297698975
    3. '10' → logprob: -16.756715774536133
    4. '(get' → logprob: -17.506715774536133
    5. '	get' → logprob: -19.756715774536133
    6. '_get' → logprob: -20.756715774536133
    7. '=get' → logprob: -21.006715774536133
    8. ' ' → logprob: -22.256715774536133
    9. ',get' → logprob: -22.631715774536133
    10. '[get' → logprob: -22.881715774536133

Token 283: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. 'mod' → logprob: -15.75
    3. '_MOD' → logprob: -19.0
    4. '_' → logprob: -19.375
    5. ')_' → logprob: -20.25
    6. '_mode' → logprob: -20.5
    7. '_Mod' → logprob: -20.875
    8. ' _' → logprob: -21.25
    9. '_m' → logprob: -21.375
    10. '()' → logprob: -21.75

Token 284: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002357094781473279
    2. ' res' → logprob: -6.502357006072998
    3. 'res' → logprob: -7.252357006072998
    4. 'result' → logprob: -9.127357482910156
    5. ' result' → logprob: -11.002357482910156
    6. '
' → logprob: -11.502357482910156
    7. '```' → logprob: -12.002357482910156
    8. '	res' → logprob: -13.002357482910156
    9. '    
' → logprob: -14.002357482910156
    10. '<|end|>' → logprob: -14.752357482910156

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2700427174568176
    2. 'res' → logprob: -1.7700426578521729
    3. ' res' → logprob: -2.770042657852173
    4. 'result' → logprob: -5.645042896270752
    5. ' result' → logprob: -9.145042419433594
    6. '	res' → logprob: -11.270042419433594
    7. '```' → logprob: -11.520042419433594
    8. '    
' → logprob: -13.895042419433594
    9. 'print' → logprob: -14.270042419433594
    10. '	result' → logprob: -15.145042419433594

Token 286: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005270280409604311
    2. 'result' (adapté à ' result') → logprob: -5.255270481109619
    3. ' res' → logprob: -10.255270004272461
    4. '   ' → logprob: -13.755270004272461
    5. ' result' → logprob: -15.505270004272461
    6. '```' → logprob: -19.50527000427246
    7. 'print' → logprob: -19.63027000427246
    8. 'r' → logprob: -20.13027000427246
    9. '	res' → logprob: -21.00527000427246
    10. '
' → logprob: -21.00527000427246

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ')' → logprob: -14.62692928314209
    4. '_' → logprob: -15.75192928314209
    5. ' =)' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.001930236816406
    7. ',' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.126930236816406
    9. ' =
' → logprob: -16.626930236816406
    10. '	' → logprob: -16.626930236816406

Token 288: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.06196768581867218
    2. ' compute' → logprob: -2.811967611312866
    3. '   ' → logprob: -19.186967849731445
    4. '.compute' → logprob: -19.686967849731445
    5. '_compute' → logprob: -19.686967849731445
    6. 'computer' → logprob: -20.311967849731445
    7. 'comput' → logprob: -20.436967849731445
    8. ' ' → logprob: -20.436967849731445
    9. 'calculate' → logprob: -21.811967849731445
    10. 'com' → logprob: -22.436967849731445

Token 289: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.704273118884885e-07
    2. '_res' → logprob: -14.625000953674316
    3. 'result' → logprob: -16.125
    4. '_results' → logprob: -17.125
    5. '_RESULT' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '_' → logprob: -19.75
    8. ' _' → logprob: -19.875
    9. '_Result' → logprob: -20.625
    10. '(_' → logprob: -21.25

Token 290: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6405310816480778e-05
    2. ' (' → logprob: -11.500016212463379
    3. '(' → logprob: -12.000016212463379
    4. '(
' → logprob: -17.000017166137695
    5. '((' → logprob: -17.750017166137695
    6. '```' → logprob: -18.000017166137695
    7. '(N' → logprob: -18.250017166137695
    8. '<n' → logprob: -18.625017166137695
    9. '(noun' → logprob: -18.750017166137695
    10. 'n' → logprob: -19.250017166137695

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2471589798224159e-05
    2. ' ,' → logprob: -11.375012397766113
    3. '(dp' → logprob: -14.000012397766113
    4. '(' → logprob: -17.00001335144043
    5. ',
' → logprob: -18.00001335144043
    6. 'dp' → logprob: -18.25001335144043
    7. ')' → logprob: -18.25001335144043
    8. ',d' → logprob: -19.50001335144043
    9. '```' → logprob: -19.62501335144043
    10. '   ' → logprob: -19.75001335144043

Token 292: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -18.500335693359375
    4. '(dp' → logprob: -19.250335693359375
    5. '   ' → logprob: -20.125335693359375
    6. '_dp' → logprob: -20.500335693359375
    7. '```' → logprob: -21.625335693359375
    8. ')' → logprob: -21.750335693359375
    9. 'd' → logprob: -22.875335693359375
    10. '.dp' → logprob: -22.875335693359375

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -13.625000953674316
    3. ',
' → logprob: -17.375001907348633
    4. ')' → logprob: -18.750001907348633
    5. '```' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '[' → logprob: -20.625001907348633
    8. '‌,' → logprob: -21.000001907348633
    9. ',d' → logprob: -21.250001907348633
    10. ',

' → logprob: -21.375001907348633

Token 294: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006715370807796717
    2. ' mod' → logprob: -5.006715297698975
    3. '(mod' → logprob: -17.506715774536133
    4. '	mod' → logprob: -17.506715774536133
    5. ' ' → logprob: -18.506715774536133
    6. '   ' → logprob: -21.756715774536133
    7. ' мод' → logprob: -22.131715774536133
    8. ')' → logprob: -22.256715774536133
    9. '.mod' → logprob: -22.381715774536133
    10. '
' → logprob: -22.631715774536133

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2679460644721985
    2. ')
' → logprob: -1.5179460048675537
    3. '   ' → logprob: -4.142946243286133
    4. ')
' → logprob: -11.767946243286133
    5. '
' → logprob: -13.392946243286133
    6. ' )' → logprob: -13.892946243286133
    7. '```' → logprob: -14.142946243286133
    8. ' )
' → logprob: -14.517946243286133
    9. ')

' → logprob: -15.642946243286133
    10. ' ' → logprob: -15.892946243286133

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012190911918878555
    2. 'print' → logprob: -4.512190818786621
    3. ' print' → logprob: -7.137190818786621
    4. '
' → logprob: -8.137190818786621
    5. '```' → logprob: -10.137190818786621
    6. '	print' → logprob: -11.637190818786621
    7. '    
' → logprob: -12.887190818786621
    8. '(print' → logprob: -12.887190818786621
    9. '_print' → logprob: -14.512190818786621
    10. '``' → logprob: -15.262190818786621

Token 297: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7835754988482222e-05
    2. ' print' → logprob: -11.250018119812012
    3. '   ' → logprob: -12.250018119812012
    4. '```' → logprob: -19.250017166137695
    5. '
' → logprob: -20.125017166137695
    6. '	print' → logprob: -21.750017166137695
    7. '(print' → logprob: -21.875017166137695
    8. ' ' → logprob: -22.000017166137695
    9. '  ' → logprob: -22.125017166137695
    10. '.print' → logprob: -22.250017166137695

Token 298: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -9.491498531133402e-06
    2. '(result' → logprob: -11.625009536743164
    3. '_' → logprob: -15.000009536743164
    4. '(' → logprob: -16.375009536743164
    5. 'result' → logprob: -16.500009536743164
    6. '(_' → logprob: -16.875009536743164
    7. '_RESULT' → logprob: -18.500009536743164
    8. '_results' → logprob: -18.875009536743164
    9. '```' → logprob: -19.000009536743164
    10. '_Result' → logprob: -19.125009536743164

Token 299: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00026848804554902017
    2. '(' → logprob: -8.250268936157227
    3. '(res' → logprob: -12.125268936157227
    4. '(results' → logprob: -14.125268936157227
    5. ' (' → logprob: -14.500268936157227
    6. '(resultado' → logprob: -15.500268936157227
    7. '(response' → logprob: -16.500268936157227
    8. '=result' → logprob: -16.750268936157227
    9. '(
' → logprob: -17.000268936157227
    10. '(return' → logprob: -17.000268936157227

Token 300: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -13.000003814697266
    3. '())' → logprob: -14.000003814697266
    4. ' )' → logprob: -15.625003814697266
    5. '))' → logprob: -16.250003814697266
    6. '()' → logprob: -16.250003814697266
    7. ')`' → logprob: -16.500003814697266
    8. ')

' → logprob: -18.500003814697266
    9. ')#' → logprob: -18.750003814697266
    10. '`)' → logprob: -18.875003814697266

Token 301: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.8325677703833207e-05
    2. '
' → logprob: -11.500028610229492
    3. 'main' → logprob: -12.000028610229492
    4. '```' → logprob: -12.000028610229492
    5. ' if' → logprob: -12.250028610229492
    6. '#' → logprob: -14.250028610229492
    7. '\n' → logprob: -15.875028610229492
    8. '\' → logprob: -15.875028610229492
    9. '    
' → logprob: -17.500028610229492
    10. '  
' → logprob: -17.875028610229492

Token 302: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 300
Tokens correctement prédits (1ère position, stricte): 134
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 260
Précision stricte (1ère position): 44.67%
Précision adaptée (1ère position): 51.33%
Précision (top 10): 86.67%
================================================================================
