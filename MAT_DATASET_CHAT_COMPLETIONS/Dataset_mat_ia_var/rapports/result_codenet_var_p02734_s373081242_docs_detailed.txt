================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import string
import itertools
import fractions
import heapq
import collections
import re
import array
import bisect
import sys
import copy
import functools
import time
import random

# Augmente la limite de récursion pour supporter des appels récursifs profonds
sys.setrecursionlimit(10 ** 7)

# Constantes utiles pour les problèmes mathématiques et algorithmiques
inf = 10 ** 20                 # Représente "l'infini"
eps = 1.0 / (10 ** 10)         # Précision epsilon pour comparaison de flottants
mod = 10 ** 9 + 7              # Modulo fréquemment utilisé (nombre premier)
mod2 = 998244353               # Autre modulo souvent utilisé (nombre premier)

# Déplacements sur une grille à 4 directions (haut, droite, bas, gauche)
dd = [(-1, 0), (0, 1), (1, 0), (0, -1)]
# Déplacements sur une grille à 8 directions (y compris diagonales)
ddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]

def LI():
    """
    Lit une ligne depuis l'entrée standard, la sépare par espaces, la convertit en entiers et retourne la liste d'entiers.
    Returns:
        list of int: Liste des entiers lus sur la ligne standard.
    """
    return list(map(int, sys.stdin.readline().split()))

def LLI():
    """
    Lit toutes les lignes restantes depuis l'entrée standard. Pour chaque ligne, la sépare par espaces et la convertit en liste d'entiers.
    Returns:
        list of list of int: Liste de listes d'entiers pour chaque ligne d'entrée.
    """
    return [list(map(int, l.split())) for l in sys.stdin.readlines()]

def LI_():
    """
    Lit une ligne depuis l'entrée standard, sépare par espaces, convertit en entiers en soustrayant 1 à chacun (pour obtenir des indices base zéro), et retourne la liste.
    Returns:
        list of int: Liste des entiers (chaque valeur d'entrée diminuée de 1).
    """
    return [int(x) - 1 for x in sys.stdin.readline().split()]

def LF():
    """
    Lit une ligne depuis l'entrée standard, la sépare par espaces, la convertit en flottants et retourne la liste.
    Returns:
        list of float: Liste des flottants lus sur la ligne standard.
    """
    return [float(x) for x in sys.stdin.readline().split()]

def LS():
    """
    Lit une ligne depuis l'entrée standard et la sépare en une liste de chaînes de caractères par espaces.
    Returns:
        list of str: Liste des chaînes (mots) lues.
    """
    return sys.stdin.readline().split()

def I():
    """
    Lit une ligne depuis l'entrée standard et la convertit en entier.
    Returns:
        int: L'entier lu.
    """
    return int(sys.stdin.readline())

def F():
    """
    Lit une ligne depuis l'entrée standard et la convertit en flottant.
    Returns:
        float: Le flottant lu.
    """
    return float(sys.stdin.readline())

def S():
    """
    Lit une ligne de l'entrée utilisateur via la fonction input().
    Returns:
        str: La chaîne entrée par l'utilisateur.
    """
    return input()

def pf(s):
    """
    Affiche la chaîne s et force la vidange du buffer de sortie (flush).
    Args:
        s (str): La chaîne à afficher.
    """
    return print(s, flush=True)

def pe(s):
    """
    Affiche une chaîne s sur la sortie d'erreur (stderr).
    Args:
        s (str): La chaîne à afficher sur stderr.
    """
    return print(str(s), file=sys.stderr)

def JA(a, sep):
    """
    Convertit tous les éléments d'une liste en chaînes de caractères et les joint avec un séparateur donné.
    Args:
        a (list): Liste d'éléments à joindre.
        sep (str): Séparateur utilisé.
    Returns:
        str: Chaîne résultante.
    """
    return sep.join(map(str, a))

def JAA(a, s, t):
    """
    Pour une liste de listes, convertit chaque élément en str, joint les éléments internes de chaque sous-liste avec `t`, puis joint chaque sous-chaîne obtenue avec `s`.
    Args:
        a (list of list): Liste de listes à joindre.
        s (str): Séparateur entre les sous-listes.
        t (str): Séparateur à l'intérieur de chaque sous-liste.
    Returns:
        str: Chaîne résultante de la jointure.
    """
    return s.join(t.join(map(str, b)) for b in a)

def main():
    """
    Fonction principale du programme. Lit les données d'entrée, exécute le traitement dynamique et retourne le résultat final modulo mod2.
    Retour:
        int: Résultat du calcul dynamique (voir description ci-dessous).
    
    Description algorithmique:
        - Lit deux entiers n et s.
        - Lit une liste de n entiers a.
        - Met en place un tableau dynamique dp où dp[x] représente le nombre de façons d'obtenir la somme x avec les éléments de a considérés jusqu'ici.
        - Effectue des transitions dynamiques pour chaque élément de a, en considérant leur valeur et leur position.
        - Le résultat final est dp[s] modulo mod2.
    """
    n, s = LI()          # Lecture de deux entiers : n (taille de la liste), s (cible de la somme)
    a = LI()             # Lecture de la liste d'entiers de taille n
    r = 0                # Variable inutilisée (peut servir à debugger/usage futur)
    dp = [0] * (s + 1)   # Tableau dynamique, dp[x] = nombre de façons d'obtenir la somme x
    dp[0] = 1            # Il y a 1 façon de faire la somme 0 : en choisissant rien

    for i in range(n):
        ai = a[i]        # Valeur du i-ème élément
        if ai > s:
            # Si la valeur courante est supérieure à s, elle ne peut contribuer à aucune somme <= s
            dp[0] += 1   # On incrémente dp[0] (pour comptabiliser le fait d'ignorer cet élément)
            continue

        # Mise à jour spéciale pour dp[s] en tenant compte de l'élément courant et de sa position
        dp[s] += dp[s - ai] * (n - i)
        dp[s] %= mod2    # On prend le résultat modulo mod2 à chaque mise à jour

        # On met à jour dp[x] pour toutes les sommes possibles en descendant, 
        # pour éviter les interférences lors de l'itération
        for j in range(s - 1, ai - 1, -1):
            dp[j] += dp[j - ai]
            dp[j] %= mod2

        dp[0] += 1       # On incrémente dp[0] à chaque itération (compte du "choix vide" itératif)

    return dp[-1] % mod2 # On retourne dp[s] modulo mod2, nombre total de façons d'obtenir la somme s

print(main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009952515363693237
    2. '\n' → logprob: -6.009952545166016
    3. '<|end|>' → logprob: -6.259952545166016
    4. '\' → logprob: -6.634952545166016
    5. '```' → logprob: -6.634952545166016
    6. 'import' → logprob: -6.759952545166016
    7. '.pi' → logprob: -8.259952545166016
    8. 'def' → logprob: -8.384952545166016
    9. 'newline' → logprob: -8.759952545166016
    10. '<|end|>' → logprob: -8.884952545166016

Token 4: ' string' (ID: 1621)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.48352178931236267
    2. ' os' → logprob: -0.9835218191146851
    3. ' numpy' → logprob: -4.983521938323975
    4. ' random' → logprob: -6.733521938323975
    5. 'sys' → logprob: -7.983521938323975
    6. ' ' → logprob: -8.233521461486816
    7. 'os' → logprob: -8.233521461486816
    8. ' re' → logprob: -8.608521461486816
    9. ' statistics' → logprob: -8.983521461486816
    10. ' cm' → logprob: -10.108521461486816

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5175415277481079
    2. '.' → logprob: -1.892541527748108
    3. '
' → logprob: -2.7675414085388184
    4. '\' → logprob: -3.1425414085388184
    5. 'import' → logprob: -3.2675414085388184
    6. '#' → logprob: -3.2675414085388184
    7. ',' → logprob: -3.5175414085388184
    8. '<|end|>' → logprob: -4.142541408538818
    9. '

' → logprob: -4.642541408538818
    10. '```' → logprob: -4.767541408538818

Token 6: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5044866800308228
    2. '\' → logprob: -2.254486560821533
    3. 'import' → logprob: -2.254486560821533
    4. 'def' → logprob: -2.379486560821533
    5. '
' → logprob: -3.379486560821533
    6. ',' → logprob: -4.379486560821533
    7. '```' → logprob: -4.379486560821533
    8. '#' → logprob: -4.754486560821533
    9. '

' → logprob: -5.254486560821533
    10. '.' → logprob: -5.379486560821533

Token 7: ' itertools' (ID: 103178)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.187389612197876
    2. ' random' → logprob: -1.312389612197876
    3. 're' → logprob: -1.437389612197876
    4. ' re' → logprob: -2.812389612197876
    5. ' sys' → logprob: -2.937389612197876
    6. ' os' → logprob: -3.562389612197876
    7. 'sys' → logprob: -3.687389612197876
    8. 'os' → logprob: -3.937389612197876
    9. 'collections' → logprob: -6.812389373779297
    10. ' collections' → logprob: -7.187389373779297

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007511737756431103
    2. ',' → logprob: -6.382511615753174
    3. '#' → logprob: -6.882511615753174
    4. 'import' → logprob: -6.882511615753174
    5. 'as' → logprob: -7.507511615753174
    6. '\' → logprob: -7.507511615753174
    7. '(' → logprob: -7.882511615753174
    8. 'def' → logprob: -8.007512092590332
    9. '\n' → logprob: -8.257512092590332
    10. '_' → logprob: -8.382512092590332

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09201019257307053
    2. '\' → logprob: -3.592010259628296
    3. 'def' → logprob: -3.717010259628296
    4. '\n' → logprob: -4.592010021209717
    5. '```' → logprob: -4.967010021209717
    6. 'import' → logprob: -5.217010021209717
    7. '#' → logprob: -5.842010021209717
    8. ',' → logprob: -6.342010021209717
    9. '(' → logprob: -6.467010021209717
    10. '.
' → logprob: -6.467010021209717

Token 10: ' fractions' (ID: 110523)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5684452056884766
    2. ' collections' → logprob: -1.9434452056884766
    3. 're' → logprob: -2.0684452056884766
    4. 'random' → logprob: -2.3184452056884766
    5. 'fun' → logprob: -3.6934452056884766
    6. ' random' → logprob: -4.193445205688477
    7. ' re' → logprob: -4.693445205688477
    8. 'os' → logprob: -5.193445205688477
    9. ' functools' → logprob: -5.193445205688477
    10. 'sys' → logprob: -6.318445205688477

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4385060966014862
    2. 'import' → logprob: -2.0635061264038086
    3. '
' → logprob: -2.3135061264038086
    4. '\n' → logprob: -3.3135061264038086
    5. '

' → logprob: -3.8135061264038086
    6. '\' → logprob: -4.063506126403809
    7. '#' → logprob: -4.438506126403809
    8. ',' → logprob: -4.813506126403809
    9. 'def' → logprob: -4.938506126403809
    10. '<|end|>' → logprob: -5.063506126403809

Token 12: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8304657936096191
    2. '.' → logprob: -1.4554657936096191
    3. 'def' → logprob: -2.705465793609619
    4. '#' → logprob: -2.830465793609619
    5. '\' → logprob: -3.080465793609619
    6. '\n' → logprob: -3.205465793609619
    7. 'from' → logprob: -3.330465793609619
    8. ',' → logprob: -3.455465793609619
    9. '
' → logprob: -4.080465793609619
    10. '```' → logprob: -4.330465793609619

Token 13: ' heap' (ID: 37237)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.3182233572006226
    2. 'random' → logprob: -1.5682233572006226
    3. 'decimal' → logprob: -1.9432233572006226
    4. 'operator' → logprob: -1.9432233572006226
    5. 'fun' → logprob: -2.818223476409912
    6. ' functools' → logprob: -2.943223476409912
    7. ' decimal' → logprob: -3.568223476409912
    8. ' collections' → logprob: -3.818223476409912
    9. ' operator' → logprob: -4.068223476409912
    10. 'cmath' → logprob: -4.193223476409912

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0564331205387134e-05
    2. 'queue' → logprob: -11.87501049041748
    3. 'u' → logprob: -13.50001049041748
    4. '#' → logprob: -15.25001049041748
    5. '<|end|>' → logprob: -15.25001049041748
    6. ' queue' → logprob: -15.37501049041748
    7. '```' → logprob: -15.75001049041748
    8. ' ' → logprob: -15.75001049041748
    9. 't' → logprob: -16.000011444091797
    10. 'i' → logprob: -16.250011444091797

Token 15: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8575562834739685
    2. 'import' → logprob: -1.7325563430786133
    3. '\n' → logprob: -1.8575563430786133
    4. '
' → logprob: -2.1075563430786133
    5. '<|end|>' → logprob: -3.2325563430786133
    6. '#' → logprob: -3.4825563430786133
    7. '\' → logprob: -4.357556343078613
    8. ',' → logprob: -4.482556343078613
    9. '

' → logprob: -4.607556343078613
    10. 'def' → logprob: -5.232556343078613

Token 16: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7465831637382507
    2. '#' → logprob: -2.1215832233428955
    3. '.' → logprob: -2.1215832233428955
    4. 'def' → logprob: -2.3715832233428955
    5. '
' → logprob: -3.2465832233428955
    6. '\n' → logprob: -3.2465832233428955
    7. ',' → logprob: -3.4965832233428955
    8. 'from' → logprob: -3.7465832233428955
    9. '\' → logprob: -3.7465832233428955
    10. '```' → logprob: -4.621582984924316

Token 17: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.4779829680919647
    2. ' collections' → logprob: -1.102982997894287
    3. ' operator' → logprob: -3.852982997894287
    4. 'operator' → logprob: -4.102982997894287
    5. 'random' → logprob: -5.727982997894287
    6. 'bis' → logprob: -6.352982997894287
    7. ' random' → logprob: -6.977982997894287
    8. ' bis' → logprob: -7.102982997894287
    9. ' functools' → logprob: -7.102982997894287
    10. 'os' → logprob: -7.227982997894287

Token 18: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3111934959888458
    2. 'import' → logprob: -1.9361934661865234
    3. '
' → logprob: -3.1861934661865234
    4. '\n' → logprob: -3.6861934661865234
    5. '\' → logprob: -4.061193466186523
    6. '<|end|>' → logprob: -4.436193466186523
    7. '

' → logprob: -4.811193466186523
    8. '#' → logprob: -5.061193466186523
    9. '```' → logprob: -5.686193466186523
    10. ',' → logprob: -5.811193466186523

Token 19: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42589184641838074
    2. '
' → logprob: -2.425891876220703
    3. '\n' → logprob: -2.675891876220703
    4. '.' → logprob: -3.175891876220703
    5. 'def' → logprob: -3.425891876220703
    6. '\' → logprob: -3.800891876220703
    7. '#' → logprob: -3.800891876220703
    8. 'from' → logprob: -3.925891876220703
    9. '

' → logprob: -4.175891876220703
    10. '```' → logprob: -4.175891876220703

Token 20: ' re' (ID: 322)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.1335029602050781
    2. ' functools' → logprob: -1.2585029602050781
    3. 'operator' → logprob: -1.3835029602050781
    4. 'fun' → logprob: -3.383502960205078
    5. 'random' → logprob: -3.758502960205078
    6. 'os' → logprob: -4.008502960205078
    7. 'bis' → logprob: -4.008502960205078
    8. 're' → logprob: -4.133502960205078
    9. ' bis' → logprob: -4.258502960205078
    10. ' re' → logprob: -5.758502960205078

Token 21: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16350187361240387
    2. 'import' → logprob: -2.4135019779205322
    3. '
' → logprob: -3.5385019779205322
    4. '```' → logprob: -4.288501739501953
    5. '

' → logprob: -4.913501739501953
    6. '\' → logprob: -5.663501739501953
    7. '<|end|>' → logprob: -6.163501739501953
    8. '#' → logprob: -6.538501739501953
    9. 'def' → logprob: -7.163501739501953
    10. ',' → logprob: -7.663501739501953

Token 22: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0360734462738037
    2. 'def' → logprob: -1.6610734462738037
    3. '#' → logprob: -1.9110734462738037
    4. '.' → logprob: -2.7860734462738037
    5. 'import' → logprob: -2.7860734462738037
    6. '\' → logprob: -2.7860734462738037
    7. 'd' → logprob: -3.5360734462738037
    8. '_' → logprob: -3.9110734462738037
    9. '[' → logprob: -4.161073684692383
    10. 'a' → logprob: -4.911073684692383

Token 23: ' array' (ID: 2644)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.36969277262687683
    2. 'sys' → logprob: -2.244692802429199
    3. ' functools' → logprob: -2.369692802429199
    4. ' os' → logprob: -2.994692802429199
    5. 'os' → logprob: -3.869692802429199
    6. 'random' → logprob: -4.119692802429199
    7. ' random' → logprob: -4.619692802429199
    8. 'fun' → logprob: -5.244692802429199
    9. ' operator' → logprob: -6.619692802429199
    10. ' typing' → logprob: -6.869692802429199

Token 24: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.917512059211731
    2. '
' → logprob: -1.792512059211731
    3. '<|end|>' → logprob: -1.917512059211731
    4. 'import' → logprob: -2.1675119400024414
    5. '\n' → logprob: -2.4175119400024414
    6. '#' → logprob: -4.042511940002441
    7. '\' → logprob: -4.542511940002441
    8. '' → logprob: -4.667511940002441
    9. '[' → logprob: -4.792511940002441
    10. '<|end|>' → logprob: -4.917511940002441

Token 25: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7647517323493958
    2. '
' → logprob: -2.139751672744751
    3. '\n' → logprob: -2.514751672744751
    4. '#' → logprob: -2.639751672744751
    5. '<|end|>' → logprob: -2.639751672744751
    6. '

' → logprob: -2.639751672744751
    7. '.' → logprob: -3.889751672744751
    8. ',' → logprob: -4.13975191116333
    9. 'from' → logprob: -4.38975191116333
    10. '\' → logprob: -4.51475191116333

Token 26: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.3517783582210541
    2. ' bis' → logprob: -1.3517783880233765
    3. 'os' → logprob: -4.351778507232666
    4. 'sys' → logprob: -4.601778507232666
    5. ' functools' → logprob: -5.101778507232666
    6. ' sys' → logprob: -5.851778507232666
    7. ' os' → logprob: -6.601778507232666
    8. 'random' → logprob: -6.601778507232666
    9. 'io' → logprob: -7.601778507232666
    10. 'fun' → logprob: -7.726778507232666

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.6240566083070007e-06
    2. 'e' → logprob: -14.625001907348633
    3. 'ec' → logprob: -14.750001907348633
    4. 'ected' → logprob: -15.000001907348633
    5. 't' → logprob: -15.250001907348633
    6. 'ectl' → logprob: -16.750001907348633
    7. 'ection' → logprob: -16.750001907348633
    8. 'ects' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'ector' → logprob: -18.250001907348633

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5581587553024292
    2. 'import' → logprob: -2.4331588745117188
    3. '
' → logprob: -2.5581588745117188
    4. '\n' → logprob: -2.9331588745117188
    5. '#' → logprob: -3.0581588745117188
    6. '' → logprob: -3.1831588745117188
    7. '_' → logprob: -3.5581588745117188
    8. '<|end|>' → logprob: -4.058158874511719
    9. '\' → logprob: -4.183158874511719
    10. ',' → logprob: -4.433158874511719

Token 30: ' sys' (ID: 12228)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.1730114221572876
    2. 'math' → logprob: -1.7980114221572876
    3. 'copy' → logprob: -2.173011302947998
    4. 'sys' → logprob: -2.173011302947998
    5. ' functools' → logprob: -2.423011302947998
    6. 'cmath' → logprob: -2.923011302947998
    7. ' sys' → logprob: -3.173011302947998
    8. ' math' → logprob: -3.173011302947998
    9. ' random' → logprob: -3.798011302947998
    10. ' copy' → logprob: -4.423011302947998

Token 31: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49063801765441895
    2. '\n' → logprob: -1.240638017654419
    3. '
' → logprob: -3.740638017654419
    4. '<|end|>' → logprob: -4.11563777923584
    5. 'import' → logprob: -4.36563777923584
    6. '\' → logprob: -4.36563777923584
    7. 'def' → logprob: -4.74063777923584
    8. '

' → logprob: -5.24063777923584
    9. '#' → logprob: -5.74063777923584
    10. '' → logprob: -5.86563777923584

Token 32: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7236984968185425
    2. '\n' → logprob: -1.5986984968185425
    3. '#' → logprob: -2.223698616027832
    4. '

' → logprob: -2.348698616027832
    5. '.' → logprob: -3.848698616027832
    6. '\' → logprob: -3.973698616027832
    7. 'def' → logprob: -4.223698616027832
    8. '<|end|>' → logprob: -4.348698616027832
    9. '```' → logprob: -4.598698616027832
    10. '' → logprob: -4.848698616027832

Token 33: ' copy' (ID: 5150)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.18587495386600494
    2. ' os' → logprob: -1.8108749389648438
    3. 'io' → logprob: -6.060874938964844
    4. 'operator' → logprob: -7.060874938964844
    5. ' io' → logprob: -7.185874938964844
    6. ' functools' → logprob: -7.435874938964844
    7. 'random' → logprob: -7.685874938964844
    8. 'time' → logprob: -8.185874938964844
    9. ' operator' → logprob: -8.310874938964844
    10. ' threading' → logprob: -8.685874938964844

Token 34: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7481076717376709
    2. '
' → logprob: -0.9981076717376709
    3. '

' → logprob: -2.748107671737671
    4. '<|end|>' → logprob: -3.248107671737671
    5. '\n' → logprob: -4.24810791015625
    6. '' → logprob: -4.62310791015625
    7. '#' → logprob: -4.99810791015625
    8. '\' → logprob: -5.12310791015625
    9. '```' → logprob: -5.99810791015625
    10. '[' → logprob: -5.99810791015625

Token 35: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1576313972473145
    2. '#' → logprob: -1.2826313972473145
    3. '

' → logprob: -1.6576313972473145
    4. '<|end|>' → logprob: -2.6576313972473145
    5. '\n' → logprob: -2.9076313972473145
    6. 'def' → logprob: -3.7826313972473145
    7. 'import' → logprob: -4.0326313972473145
    8. '' → logprob: -4.6576313972473145
    9. '.' → logprob: -5.2826313972473145
    10. ',' → logprob: -5.4076313972473145

Token 36: ' functools' (ID: 142636)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.3326672315597534
    2. 'random' → logprob: -1.3326672315597534
    3. 'operator' → logprob: -1.8326672315597534
    4. ' functools' → logprob: -2.582667350769043
    5. 'math' → logprob: -2.832667350769043
    6. 'thread' → logprob: -3.082667350769043
    7. 'fun' → logprob: -3.707667350769043
    8. 'datetime' → logprob: -3.707667350769043
    9. 'decimal' → logprob: -4.207667350769043
    10. 'json' → logprob: -4.457667350769043

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.651236891746521
    2. '\n' → logprob: -1.776236891746521
    3. 'import' → logprob: -2.5262370109558105
    4. '<|end|>' → logprob: -2.6512370109558105
    5. '#' → logprob: -3.1512370109558105
    6. '.' → logprob: -3.9012370109558105
    7. '\' → logprob: -4.0262370109558105
    8. '

' → logprob: -4.4012370109558105
    9. 'def' → logprob: -4.4012370109558105
    10. 'd' → logprob: -4.9012370109558105

Token 39: ' time' (ID: 1058)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.38888823986053467
    2. 'operator' → logprob: -1.1388882398605347
    3. 'random' → logprob: -7.138888359069824
    4. ' random' → logprob: -7.263888359069824
    5. 'os' → logprob: -8.513888359069824
    6. ' decimal' → logprob: -9.638888359069824
    7. ' threading' → logprob: -9.638888359069824
    8. 'decimal' → logprob: -10.263888359069824
    9. ' os' → logprob: -10.388888359069824
    10. 'math' → logprob: -10.638888359069824

Token 40: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1535704135894775
    2. '\n' → logprob: -1.1535704135894775
    3. '#' → logprob: -2.1535704135894775
    4. '
' → logprob: -2.2785704135894775
    5. 'def' → logprob: -3.1535704135894775
    6. '.' → logprob: -3.5285704135894775
    7. 'd' → logprob: -3.6535704135894775
    8. '<|end|>' → logprob: -4.028570175170898
    9. 'n' → logprob: -4.778570175170898
    10. '' → logprob: -4.778570175170898

Token 41: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9584031105041504
    2. '\n' → logprob: -1.2084031105041504
    3. '#' → logprob: -2.2084031105041504
    4. 'd' → logprob: -2.8334031105041504
    5. 'def' → logprob: -2.8334031105041504
    6. '\' → logprob: -3.8334031105041504
    7. '<|end|>' → logprob: -4.20840311050415
    8. '

' → logprob: -4.70840311050415
    9. 'import' → logprob: -4.70840311050415
    10. '' → logprob: -4.95840311050415

Token 42: ' random' (ID: 7526)
  Prédit: ' random'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -1.1810986995697021
    2. ' os' → logprob: -1.3060986995697021
    3. 'random' → logprob: -1.8060986995697021
    4. 'os' → logprob: -2.306098699569702
    5. ' threading' → logprob: -2.806098699569702
    6. ' datetime' → logprob: -3.306098699569702
    7. ' operator' → logprob: -3.431098699569702
    8. 'datetime' → logprob: -4.431098937988281
    9. 'operator' → logprob: -4.431098937988281
    10. 'thread' → logprob: -6.681098937988281

Token 43: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8952944278717041
    2. '<|end|>' → logprob: -1.020294427871704
    3. '
' → logprob: -2.520294427871704
    4. '.' → logprob: -2.645294427871704
    5. '\' → logprob: -3.145294427871704
    6. '#' → logprob: -4.145294189453125
    7. '```' → logprob: -5.020294189453125
    8. 'n' → logprob: -6.270294189453125
    9. 'import' → logprob: -6.395294189453125
    10. '' → logprob: -6.395294189453125

Token 44: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.099160075187683
    2. '#' → logprob: -1.349160075187683
    3. 'def' → logprob: -1.724160075187683
    4. '\n' → logprob: -2.3491601943969727
    5. '\' → logprob: -3.2241601943969727
    6. '
' → logprob: -3.7241601943969727
    7. 'a' → logprob: -3.8491601943969727
    8. 'n' → logprob: -4.724160194396973
    9. '.' → logprob: -5.224160194396973
    10. 'import' → logprob: -5.724160194396973

Token 45: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0880611389875412
    2. 'd' → logprob: -2.9630610942840576
    3. 'def' → logprob: -4.088061332702637
    4. '#' → logprob: -4.713061332702637
    5. '_' → logprob: -5.338061332702637
    6. ' 
' → logprob: -7.713061332702637
    7. '\' → logprob: -8.088061332702637
    8. 'de' → logprob: -8.463061332702637
    9. '-' → logprob: -8.713061332702637
    10. ' def' → logprob: -8.963061332702637

Token 46: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.09175258129835129
    2. 'mented' → logprob: -2.466752529144287
    3. 'mentation' → logprob: -6.091752529144287
    4. 'm' → logprob: -8.966753005981445
    5. 'mentor' → logprob: -9.341753005981445
    6. '#' → logprob: -9.341753005981445
    7. 'ments' → logprob: -9.966753005981445
    8. '_' → logprob: -9.966753005981445
    9. 'ument' → logprob: -10.216753005981445
    10. 'ement' → logprob: -10.341753005981445

Token 47: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0048133921809494495
    2. 'r' → logprob: -6.254813194274902
    3. 's' → logprob: -6.504813194274902
    4. '_' → logprob: -7.254813194274902
    5. 'm' → logprob: -8.629813194274902
    6. 'n' → logprob: -8.754813194274902
    7. 'z' → logprob: -9.129813194274902
    8. '#' → logprob: -9.754813194274902
    9. ' d' → logprob: -10.754813194274902
    10. 'u' → logprob: -10.754813194274902

Token 48: ' limite' (ID: 48939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6658604741096497
    2. ' vitesse' → logprob: -1.7908604145050049
    3. ' performance' → logprob: -2.165860414505005
    4. ' taille' → logprob: -2.415860414505005
    5. 'performance' → logprob: -3.665860414505005
    6. '  ' → logprob: -4.290860652923584
    7. ' qualité' → logprob: -4.915860652923584
    8. '   ' → logprob: -5.040860652923584
    9. 't' → logprob: -5.040860652923584
    10. ' fréquence' → logprob: -5.665860652923584

Token 49: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00047964724944904447
    2. 's' → logprob: -8.750479698181152
    3. 'd' → logprob: -9.375479698181152
    4. 'import' → logprob: -10.125479698181152
    5. 'sys' → logprob: -10.375479698181152
    6. '_sys' → logprob: -10.375479698181152
    7. 'ur' → logprob: -10.500479698181152
    8. '_s' → logprob: -11.000479698181152
    9. 'u' → logprob: -11.000479698181152
    10. 'e' → logprob: -11.250479698181152

Token 50: ' réc' (ID: 36254)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.6537343859672546
    2. 'rec' → logprob: -1.0287344455718994
    3. ' recursion' → logprob: -2.6537344455718994
    4. 'l' → logprob: -4.02873420715332
    5. ' l' → logprob: -4.65373420715332
    6. '_' → logprob: -4.65373420715332
    7. ' la' → logprob: -5.27873420715332
    8. ' ' → logprob: -6.52873420715332
    9. 'r' → logprob: -6.52873420715332
    10. '_recursive' → logprob: -6.77873420715332

Token 51: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.023016594350337982
    2. 'urs' → logprob: -3.8980166912078857
    3. 'ur' → logprob: -6.648016452789307
    4. 'ursive' → logprob: -6.773016452789307
    5. 'urse' → logprob: -12.023016929626465
    6. 'urrence' → logprob: -12.148016929626465
    7. '```' → logprob: -12.648016929626465
    8. 'u' → logprob: -13.148016929626465
    9. 'usion' → logprob: -13.148016929626465
    10. '**' → logprob: -13.273016929626465

Token 52: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.14488498866558075
    2. '_' → logprob: -2.8948850631713867
    3. '\' → logprob: -3.3948850631713867
    4. 'import' → logprob: -3.8948850631713867
    5. '\n' → logprob: -4.894885063171387
    6. ' sys' → logprob: -5.144885063171387
    7. 's' → logprob: -5.644885063171387
    8. '(sys' → logprob: -5.644885063171387
    9. '_sys' → logprob: -7.394885063171387
    10. '`' → logprob: -7.519885063171387

Token 53: ' supporter' (ID: 71061)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0195087268948555
    2. '100' → logprob: -5.0195088386535645
    3. ' l' → logprob: -5.2695088386535645
    4. ' la' → logprob: -5.7695088386535645
    5. 'sys' → logprob: -6.2695088386535645
    6. ' ' → logprob: -6.8945088386535645
    7. ' les' → logprob: -7.8945088386535645
    8. ' ' → logprob: -8.644508361816406
    9. ' le' → logprob: -9.144508361816406
    10. ' recursion' → logprob: -9.269508361816406

Token 54: ' des' (ID: 731)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0048978328704834
    2. ' ' → logprob: -1.3798978328704834
    3. '10' → logprob: -1.3798978328704834
    4. ' sys' → logprob: -3.1298978328704834
    5. ' la' → logprob: -3.5048978328704834
    6. ' l' → logprob: -4.1298980712890625
    7. 'sys' → logprob: -5.0048980712890625
    8. ' les' → logprob: -5.1298980712890625
    9. ' une' → logprob: -5.5048980712890625
    10. ' plus' → logprob: -5.7548980712890625

Token 55: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.6856383681297302
    2. ' réc' → logprob: -1.060638427734375
    3. 'rec' → logprob: -3.185638427734375
    4. ' cas' → logprob: -3.560638427734375
    5. ' des' → logprob: -4.810638427734375
    6. ' recursion' → logprob: -4.935638427734375
    7. 'cas' → logprob: -5.185638427734375
    8. 'r' → logprob: -5.435638427734375
    9. ' les' → logprob: -5.435638427734375
    10. 'les' → logprob: -5.560638427734375

Token 56: ' réc' (ID: 36254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7768144011497498
    2. ' ' → logprob: -1.4018144607543945
    3. ' _' → logprob: -2.2768144607543945
    4. ' de' → logprob: -3.0268144607543945
    5. '_de' → logprob: -3.7768144607543945
    6. 's' → logprob: -3.7768144607543945
    7. '_stack' → logprob: -3.9018144607543945
    8. '_recursive' → logprob: -4.1518144607543945
    9. ' profond' → logprob: -4.4018144607543945
    10. '  ' → logprob: -5.0268144607543945

Token 57: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.040359485894441605
    2. 'ursion' → logprob: -3.4153594970703125
    3. 'ur' → logprob: -5.2903594970703125
    4. 'ursive' → logprob: -6.9153594970703125
    5. 'u' → logprob: -8.290359497070312
    6. '_' → logprob: -9.290359497070312
    7. '##' → logprob: -9.540359497070312
    8. 'c' → logprob: -10.290359497070312
    9. '```' → logprob: -10.290359497070312
    10. 'urrent' → logprob: -10.540359497070312

Token 58: 'ifs' (ID: 14119)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.364413321018219
    2. 'ifs' → logprob: -1.8644132614135742
    3. 'ions' → logprob: -2.489413261413574
    4. 's' → logprob: -2.864413261413574
    5. 'if' → logprob: -5.614413261413574
    6. 'urs' → logprob: -6.364413261413574
    7. 'ives' → logprob: -6.614413261413574
    8. '#' → logprob: -6.739413261413574
    9. '##' → logprob: -6.989413261413574
    10. 'ive' → logprob: -7.864413261413574

Token 59: ' prof' (ID: 1915)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08165588974952698
    2. '_' → logprob: -3.206655979156494
    3. '(sys' → logprob: -4.081655979156494
    4. ' sys' → logprob: -4.706655979156494
    5. 'import' → logprob: -5.831655979156494
    6. '_sys' → logprob: -5.956655979156494
    7. '\' → logprob: -6.206655979156494
    8. '(' → logprob: -7.331655979156494
    9. '_rec' → logprob: -7.831655979156494
    10. '_recursive' → logprob: -7.831655979156494

Token 60: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.0762130543589592
    2. 'ondes' → logprob: -3.0762131214141846
    3. 'onde' → logprob: -3.9512131214141846
    4. 'ond' → logprob: -4.9512128829956055
    5. 'on' → logprob: -7.4512128829956055
    6. 'o' → logprob: -9.951212882995605
    7. '```' → logprob: -10.076212882995605
    8. '_' → logprob: -10.076212882995605
    9. 'onda' → logprob: -10.576212882995605
    10. 'ons' → logprob: -10.701212882995605

Token 61: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005144450813531876
    2. ' sys' → logprob: -6.3801445960998535
    3. '(sys' → logprob: -6.6301445960998535
    4. '
' → logprob: -7.0051445960998535
    5. '\' → logprob: -7.2551445960998535
    6. 'import' → logprob: -8.505144119262695
    7. '\n' → logprob: -9.005144119262695
    8. '```' → logprob: -10.255144119262695
    9. '' → logprob: -10.505144119262695
    10. '_sys' → logprob: -10.755144119262695

Token 62: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0016785101033747196
    2. 'import' → logprob: -7.001678466796875
    3. ' sys' → logprob: -7.501678466796875
    4. '(sys' → logprob: -9.751678466796875
    5. '\n' → logprob: -10.001678466796875
    6. '
' → logprob: -10.126678466796875
    7. '=sys' → logprob: -10.501678466796875
    8. '\' → logprob: -10.751678466796875
    9. '```' → logprob: -12.376678466796875
    10. '.sys' → logprob: -13.001678466796875

Token 63: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0057141659781336784
    2. '.setdefault' → logprob: -5.755713939666748
    3. '.' → logprob: -6.005713939666748
    4. ' .' → logprob: -10.505714416503906
    5. '.stdout' → logprob: -10.630714416503906
    6. '.stdin' → logprob: -11.630714416503906
    7. '.argv' → logprob: -12.630714416503906
    8. '.stderr' → logprob: -13.255714416503906
    9. '.get' → logprob: -14.005714416503906
    10. '.exit' → logprob: -14.505714416503906

Token 64: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.013851647265255451
    2. 'ursion' → logprob: -4.513851642608643
    3. 'limit' → logprob: -6.888851642608643
    4. '_rec' → logprob: -7.138851642608643
    5. 'ault' → logprob: -8.2638521194458
    6. '_' → logprob: -8.7638521194458
    7. ' recursion' → logprob: -9.5138521194458
    8. '_limit' → logprob: -10.0138521194458
    9. '_c' → logprob: -10.5138521194458
    10. 'ult' → logprob: -10.6388521194458

Token 65: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -9.491498531133402e-06
    2. '_limit' → logprob: -12.500009536743164
    3. 'ursive' → logprob: -13.000009536743164
    4. 'ur' → logprob: -13.250009536743164
    5. 'urs' → logprob: -14.500009536743164
    6. 'limit' → logprob: -14.625009536743164
    7. 'usion' → logprob: -14.750009536743164
    8. '_' → logprob: -15.625009536743164
    9. 'ision' → logprob: -17.250009536743164
    10. 'ursor' → logprob: -17.375009536743164

Token 66: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0003159201005473733
    2. '_limit' → logprob: -8.12531566619873
    3. 'depth' → logprob: -11.37531566619873
    4. 'lim' → logprob: -11.87531566619873
    5. '-' → logprob: -14.50031566619873
    6. '_' → logprob: -14.62531566619873
    7. '_depth' → logprob: -15.12531566619873
    8. ' limit' → logprob: -16.250316619873047
    9. 'al' → logprob: -16.750316619873047
    10. 'ursion' → logprob: -17.625316619873047

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9743012671824545e-05
    2. ' (' → logprob: -11.250020027160645
    3. '(
' → logprob: -12.500020027160645
    4. '(

' → logprob: -13.500020027160645
    5. '((' → logprob: -14.000020027160645
    6. '()' → logprob: -14.750020027160645
    7. '('' → logprob: -16.250019073486328
    8. '("("' → logprob: -16.375019073486328
    9. '(int' → logprob: -17.000019073486328
    10. '(()' → logprob: -17.125019073486328

Token 68: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04860338568687439
    2. '100' → logprob: -3.0486032962799072
    3. ' ' → logprob: -11.673603057861328
    4. '500' → logprob: -12.298603057861328
    5. '200' → logprob: -13.798603057861328
    6. '300' → logprob: -14.298603057861328
    7. '400' → logprob: -14.423603057861328
    8. '250' → logprob: -15.048603057861328
    9. '1' → logprob: -15.673603057861328
    10. '999' → logprob: -16.298603057861328

Token 69: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.06406321376562119
    2. '**' → logprob: -3.439063310623169
    3. '00' → logprob: -3.564063310623169
    4. '6' → logprob: -7.18906307220459
    5. '7' → logprob: -7.56406307220459
    6. '0' → logprob: -8.93906307220459
    7. '5' → logprob: -9.18906307220459
    8. '007' → logprob: -9.31406307220459
    9. '4' → logprob: -10.93906307220459
    10. '006' → logprob: -11.81406307220459

Token 70: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0009743517730385065
    2. '9' → logprob: -7.000974178314209
    3. '6' → logprob: -10.250974655151367
    4. '8' → logprob: -10.500974655151367
    5. '**' → logprob: -17.125974655151367
    6. '```' → logprob: -20.250974655151367
    7. '

' → logprob: -21.125974655151367
    8. '+' → logprob: -22.000974655151367
    9. '  ' → logprob: -22.000974655151367
    10. '``' → logprob: -22.250974655151367

Token 71: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0037484178319573402
    2. '9' → logprob: -5.628748416900635
    3. '6' → logprob: -8.878748893737793
    4. '8' → logprob: -11.628748893737793
    5. '**' → logprob: -16.253747940063477
    6. '```' → logprob: -18.878747940063477
    7. '

' → logprob: -19.003747940063477
    8. '+' → logprob: -19.128747940063477
    9. '  ' → logprob: -19.878747940063477
    10. '``' → logprob: -20.128747940063477

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ' )' → logprob: -12.125005722045898
    3. ')
' → logprob: -14.375005722045898
    4. ')
' → logprob: -17.7500057220459
    5. ')

' → logprob: -18.1250057220459
    6. '))' → logprob: -18.6250057220459
    7. '),' → logprob: -19.1250057220459
    8. '0' → logprob: -19.6250057220459
    9. ')`' → logprob: -19.6250057220459
    10. '}' → logprob: -19.7500057220459

Token 73: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4808945953845978
    2. '

' → logprob: -0.9808945655822754
    3. '
' → logprob: -5.605894565582275
    4. '#' → logprob: -6.855894565582275
    5. 'def' → logprob: -7.105894565582275
    6. '


' → logprob: -7.480894565582275
    7. '\n' → logprob: -8.480895042419434
    8. 'class' → logprob: -8.855895042419434
    9. 'n' → logprob: -9.230895042419434
    10. '' → logprob: -9.980895042419434

Token 74: ' Const' (ID: 19594)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06640461087226868
    2. 'input' → logprob: -3.0664045810699463
    3. ' input' → logprob: -5.066404819488525
    4. '#' → logprob: -5.316404819488525
    5. ' def' → logprob: -5.941404819488525
    6. 'class' → logprob: -6.691404819488525
    7. 'n' → logprob: -6.941404819488525
    8. 'INF' → logprob: -8.191404342651367
    9. 'import' → logprob: -8.566404342651367
    10. 'd' → logprob: -8.566404342651367

Token 75: 'antes' (ID: 5193)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.2996712923049927
    2. 'a' → logprob: -2.549671173095703
    3. '_' → logprob: -2.924671173095703
    4. 'ant' → logprob: -3.549671173095703
    5. '_ant' → logprob: -3.799671173095703
    6. '=' → logprob: -4.299671173095703
    7. ' =' → logprob: -4.299671173095703
    8. 'antes' → logprob: -4.549671173095703
    9. 'anst' → logprob: -4.674671173095703
    10. '_a' → logprob: -4.674671173095703

Token 76: ' utiles' (ID: 121161)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3357716202735901
    2. 'MAX' → logprob: -2.8357715606689453
    3. ' =' → logprob: -3.3357715606689453
    4. '=' → logprob: -3.5857715606689453
    5. 'S' → logprob: -3.5857715606689453
    6. '#' → logprob: -3.7107715606689453
    7. 'N' → logprob: -3.7107715606689453
    8. 'PI' → logprob: -4.585771560668945
    9. 'A' → logprob: -4.710771560668945
    10. '_' → logprob: -4.835771560668945

Token 77: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46664193272590637
    2. 'MAX' → logprob: -2.716641902923584
    3. 'S' → logprob: -2.966641902923584
    4. '#' → logprob: -3.091641902923584
    5. 'PI' → logprob: -3.216641902923584
    6. 'N' → logprob: -3.591641902923584
    7. '
' → logprob: -3.716641902923584
    8. '

' → logprob: -4.341641902923584
    9. '=' → logprob: -4.341641902923584
    10. ' =' → logprob: -4.466641902923584

Token 78: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4205939471721649
    2. ' l' → logprob: -1.9205939769744873
    3. ' les' → logprob: -2.2955939769744873
    4. ' le' → logprob: -2.6705939769744873
    5. 'l' → logprob: -4.170593738555908
    6. ' ' → logprob: -5.545593738555908
    7. ' math' → logprob: -6.295593738555908
    8. 'la' → logprob: -6.420593738555908
    9. 'les' → logprob: -7.170593738555908
    10. 'le' → logprob: -7.545593738555908

Token 79: ' problèmes' (ID: 49822)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.3169916570186615
    2. ' problème' → logprob: -2.1919915676116943
    3. ' math' → logprob: -2.5669915676116943
    4. ' problèmes' → logprob: -3.1919915676116943
    5. ' code' → logprob: -4.566991806030273
    6. ' la' → logprob: -5.316991806030273
    7. ' le' → logprob: -5.441991806030273
    8. ' nombres' → logprob: -5.816991806030273
    9. 'calcul' → logprob: -6.691991806030273
    10. ' les' → logprob: -6.691991806030273

Token 80: ' math' (ID: 13324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4000084400177002
    2. ':' → logprob: -1.6500084400177002
    3. ' ' → logprob: -1.6500084400177002
    4. 'S' → logprob: -2.4000084400177
    5. '_' → logprob: -2.5250084400177
    6. '=' → logprob: -3.1500084400177
    7. ',' → logprob: -3.4000084400177
    8. ' :' → logprob: -3.4000084400177
    9. '```' → logprob: -4.400008201599121
    10. 'import' → logprob: -4.775008201599121

Token 81: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0027417545206844807
    2. 'ématique' → logprob: -6.127741813659668
    3. 'ém' → logprob: -8.252741813659668
    4. 'é' → logprob: -8.252741813659668
    5. 'étiques' → logprob: -11.377741813659668
    6. 'éma' → logprob: -11.752741813659668
    7. 'è' → logprob: -12.252741813659668
    8. 'e' → logprob: -12.752741813659668
    9. 's' → logprob: -12.752741813659668
    10. 'èm' → logprob: -14.127741813659668

Token 82: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10313379764556885
    2. 'PI' → logprob: -3.4781336784362793
    3. ':
' → logprob: -3.9781336784362793
    4. 'MAX' → logprob: -4.353133678436279
    5. 'MOD' → logprob: -4.728133678436279
    6. ' :' → logprob: -5.478133678436279
    7. 'S' → logprob: -5.603133678436279
    8. 'EPS' → logprob: -5.978133678436279
    9. 'N' → logprob: -6.228133678436279
    10. '=' → logprob: -6.228133678436279

Token 83: ' alg' (ID: 4485)
  Prédit: 'alg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -1.1920647621154785
    2. ' la' → logprob: -1.6920647621154785
    3. ' les' → logprob: -2.3170647621154785
    4. ' l' → logprob: -2.3170647621154785
    5. 'l' → logprob: -2.6920647621154785
    6. 'les' → logprob: -2.9420647621154785
    7. 'la' → logprob: -2.9420647621154785
    8. ' alg' → logprob: -3.3170647621154785
    9. 'd' → logprob: -3.8170647621154785
    10. ' algorithm' → logprob: -3.9420647621154785

Token 84: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.3684817850589752
    2. 'è' → logprob: -2.1184818744659424
    3. 'é' → logprob: -2.6184818744659424
    4. 'orithms' → logprob: -3.1184818744659424
    5. 'éb' → logprob: -3.6184818744659424
    6. 'e' → logprob: -3.9934818744659424
    7. '#' → logprob: -5.618481636047363
    8. 'orithm' → logprob: -5.618481636047363
    9. '```' → logprob: -5.618481636047363
    10. '|' → logprob: -6.118481636047363

Token 85: 'miques' (ID: 172066)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4781516492366791
    2. 'miques' → logprob: -1.2281516790390015
    3. 'étiques' → logprob: -3.978151559829712
    4. 'mes' → logprob: -3.978151559829712
    5. 'met' → logprob: -4.353151798248291
    6. 'th' → logprob: -4.478151798248291
    7. 'metic' → logprob: -4.978151798248291
    8. '```' → logprob: -5.728151798248291
    9. 't' → logprob: -6.103151798248291
    10. 'b' → logprob: -6.603151798248291

Token 86: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4533681571483612
    2. ' :' → logprob: -1.5783681869506836
    3. 'MAX' → logprob: -2.9533681869506836
    4. 'PI' → logprob: -3.7033681869506836
    5. 'S' → logprob: -4.203368186950684
    6. 'N' → logprob: -4.828368186950684
    7. ' =' → logprob: -5.203368186950684
    8. 'MOD' → logprob: -5.328368186950684
    9. '_' → logprob: -5.453368186950684
    10. 'INF' → logprob: -5.453368186950684

Token 87: 'inf' (ID: 22226)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5088760852813721
    2. 'MAX' → logprob: -1.258876085281372
    3. 'PI' → logprob: -2.758876085281372
    4. 'EPS' → logprob: -3.633876085281372
    5. 'INF' → logprob: -4.258875846862793
    6. 'N' → logprob: -5.383875846862793
    7. 'E' → logprob: -6.133875846862793
    8. '#' → logprob: -6.883875846862793
    9. 'M' → logprob: -7.508875846862793
    10. '_' → logprob: -8.258875846862793

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1210654154419899
    2. '=' → logprob: -2.246065378189087
    3. 'inity' → logprob: -5.746065616607666
    4. 'initely' → logprob: -6.246065616607666
    5. 'inite' → logprob: -6.496065616607666
    6. '_' → logprob: -7.496065616607666
    7. '=np' → logprob: -8.496065139770508
    8. '  ' → logprob: -9.121065139770508
    9. 'inty' → logprob: -9.371065139770508
    10. ' ' → logprob: -9.996065139770508

Token 89: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.44459930062294006
    2. 'float' → logprob: -1.4445992708206177
    3. ' ' → logprob: -2.5695993900299072
    4. '10' → logprob: -3.0695993900299072
    5. '1' → logprob: -10.694599151611328
    6. '	float' → logprob: -10.944599151611328
    7. 'int' → logprob: -11.569599151611328
    8. ' math' → logprob: -12.444599151611328
    9. ' int' → logprob: -12.569599151611328
    10. 'math' → logprob: -12.694599151611328

Token 90: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3133154809474945
    2. '10' → logprob: -1.313315510749817
    3. '1' → logprob: -10.938315391540527
    4. ' float' → logprob: -11.188315391540527
    5. 'math' → logprob: -11.438315391540527
    6. 'int' → logprob: -11.563315391540527
    7. ' ' → logprob: -14.438315391540527
    8. '	float' → logprob: -14.938315391540527
    9. '100' → logprob: -15.313315391540527
    10. '(float' → logprob: -15.563315391540527

Token 91: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21776866912841797
    2. '18' → logprob: -1.717768669128418
    3. '**' → logprob: -4.342768669128418
    4. '12' → logprob: -6.342768669128418
    5. '10' → logprob: -7.467768669128418
    6. '15' → logprob: -7.592768669128418
    7. '20' → logprob: -8.592768669128418
    8. '19' → logprob: -8.967768669128418
    9. '16' → logprob: -11.092768669128418
    10. '09' → logprob: -11.342768669128418

Token 92: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1035367026925087
    2. '18' → logprob: -2.353536605834961
    3. '15' → logprob: -6.353536605834961
    4. '10' → logprob: -6.978536605834961
    5. '16' → logprob: -8.603536605834961
    6. '12' → logprob: -8.728536605834961
    7. '1' → logprob: -9.103536605834961
    8. '19' → logprob: -9.228536605834961
    9. '20' → logprob: -9.478536605834961
    10. '17' → logprob: -11.353536605834961

Token 93: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.035280440002679825
    2. '18' → logprob: -3.410280466079712
    3. '15' → logprob: -7.035280227661133
    4. '10' → logprob: -7.410280227661133
    5. '12' → logprob: -9.660280227661133
    6. '1' → logprob: -10.285280227661133
    7. '16' → logprob: -10.785280227661133
    8. '20' → logprob: -11.160280227661133
    9. '19' → logprob: -11.660280227661133
    10. '14' → logprob: -12.785280227661133

Token 94: '                ' (ID: 408)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6158157587051392
    2. '0' → logprob: -1.8658157587051392
    3. '' → logprob: -2.2408156394958496
    4. '<|end|>' → logprob: -2.7408156394958496
    5. ' ' → logprob: -3.4908156394958496
    6. ' 
' → logprob: -4.24081563949585
    7. '+' → logprob: -4.24081563949585
    8. '#' → logprob: -4.24081563949585
    9. '6' → logprob: -4.49081563949585
    10. ',' → logprob: -4.61581563949585

Token 95: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7291948199272156
    2. '<|end|>' → logprob: -1.8541948795318604
    3. '0' → logprob: -2.4791948795318604
    4. ' ' → logprob: -2.6041948795318604
    5. '#' (adapté à ' #') → logprob: -2.7291948795318604
    6. '+' → logprob: -3.2291948795318604
    7. '' → logprob: -3.3541948795318604
    8. ' 
' → logprob: -3.8541948795318604
    9. '  
' → logprob: -4.604194641113281
    10. '6' → logprob: -4.979194641113281

Token 96: ' Re' (ID: 907)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47460681200027466
    2. '<|end|>' → logprob: -1.9746067523956299
    3. ' ' → logprob: -2.47460675239563
    4. '#' → logprob: -2.47460675239563
    5. ' #' → logprob: -3.59960675239563
    6. '  
' → logprob: -5.224606990814209
    7. '<|end|>' → logprob: -5.224606990814209
    8. '6' → logprob: -5.599606990814209
    9. '' → logprob: -5.724606990814209
    10. '9' → logprob: -5.849606990814209

Token 97: 'prés' (ID: 61592)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5075828433036804
    2. 'f' → logprob: -3.007582902908325
    3. 'turn' → logprob: -3.257582902908325
    4. 'e' → logprob: -3.382582902908325
    5. 'a' → logprob: -3.695082902908325
    6. 't' → logprob: -3.757582902908325
    7. '
' → logprob: -4.132582664489746
    8. 'd' → logprob: -4.195082664489746
    9. '9' → logprob: -4.382582664489746
    10. 'al' → logprob: -4.445082664489746

Token 98: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6447144150733948
    2. 'entation' → logprob: -0.7697144150733948
    3. 'ented' → logprob: -4.89471435546875
    4. 'sent' → logprob: -6.64471435546875
    5. 'esent' → logprob: -6.76971435546875
    6. 'e' → logprob: -7.01971435546875
    7. 'ente' → logprob: -7.51971435546875
    8. 'enter' → logprob: -8.01971435546875
    9. 'é' → logprob: -9.14471435546875
    10. 'ént' → logprob: -10.51971435546875

Token 99: ' "' (ID: 392)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12904514372348785
    2. ' un' → logprob: -2.504045248031616
    3. ' l' → logprob: -3.379045248031616
    4. 'l' → logprob: -6.129045009613037
    5. ' ' → logprob: -6.254045009613037
    6. 'une' → logprob: -8.004045486450195
    7. 'un' → logprob: -8.004045486450195
    8. ' float' → logprob: -8.254045486450195
    9. '+' → logprob: -9.879045486450195
    10. 'float' → logprob: -10.379045486450195

Token 100: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04504074156284332
    2. ' l' → logprob: -3.5450408458709717
    3. 'une' → logprob: -4.670040607452393
    4. ' une' → logprob: -5.545040607452393
    5. 'un' → logprob: -7.170040607452393
    6. '+' → logprob: -7.295040607452393
    7. 'in' → logprob: -8.79504108428955
    8. ' ' → logprob: -9.17004108428955
    9. 'float' → logprob: -10.17004108428955
    10. ' un' → logprob: -10.54504108428955

Token 101: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.16731439530849457
    2. ''' → logprob: -1.9173144102096558
    3. ''i' → logprob: -5.917314529418945
    4. 'e' → logprob: -6.417314529418945
    5. 'a' → logprob: -6.667314529418945
    6. '''' → logprob: -8.292314529418945
    7. ''a' → logprob: -8.792314529418945
    8. ' '' → logprob: -9.042314529418945
    9. ''é' → logprob: -9.167314529418945
    10. '’in' → logprob: -9.167314529418945

Token 102: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21753641963005066
    2. 'fi' → logprob: -2.467536449432373
    3. 'fin' → logprob: -2.717536449432373
    4. 'finity' → logprob: -3.217536449432373
    5. 'finite' → logprob: -5.467536449432373
    6. 'fty' → logprob: -8.967535972595215
    7. 'fit' → logprob: -10.342535972595215
    8. 'fine' → logprob: -10.592535972595215
    9. '```' → logprob: -10.717535972595215
    10. 'ff' → logprob: -11.092535972595215

Token 103: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.027248280122876167
    2. 'inity' → logprob: -4.027248382568359
    3. 'i' → logprob: -5.652248382568359
    4. 'init' → logprob: -6.527248382568359
    5. 'in' → logprob: -6.652248382568359
    6. 'inie' → logprob: -7.152248382568359
    7. 'inite' → logprob: -7.277248382568359
    8. 'iny' → logprob: -8.15224838256836
    9. 'ity' → logprob: -8.40224838256836
    10. 'inty' → logprob: -9.02724838256836

Token 104: '"
' (ID: 1092)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.234937071800232
    2. '<|end|>' → logprob: -1.359937071800232
    3. ')' → logprob: -1.484937071800232
    4. '"' → logprob: -1.859937071800232
    5. ',' → logprob: -4.3599371910095215
    6. '+' → logprob: -4.3599371910095215
    7. ' )' → logprob: -4.4849371910095215
    8. '
' → logprob: -5.1099371910095215
    9. '```' → logprob: -5.6099371910095215
    10. '<|end|>' → logprob: -5.8599371910095215

Token 105: 'eps' (ID: 12967)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8866474032402039
    2. '
' → logprob: -1.3866474628448486
    3. 'n' → logprob: -2.3866474628448486
    4. 'max' → logprob: -2.3866474628448486
    5. '' → logprob: -3.7616474628448486
    6. 'mod' → logprob: -4.1366472244262695
    7. '
' → logprob: -4.2616472244262695
    8. '_' → logprob: -4.6366472244262695
    9. '\' → logprob: -4.7616472244262695
    10. 's' → logprob: -5.0116472244262695

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023943020030856133
    2. '=' → logprob: -3.7739429473876953
    3. ' ' → logprob: -8.273942947387695
    4. 'il' → logprob: -8.398942947387695
    5. 'ilon' → logprob: -9.398942947387695
    6. 'ILON' → logprob: -10.398942947387695
    7. ' ' → logprob: -11.023942947387695
    8. 'a' → logprob: -11.398942947387695
    9. 'alon' → logprob: -11.648942947387695
    10. 'ion' → logprob: -12.023942947387695

Token 107: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17986543476581573
    2. '1' → logprob: -1.8048654794692993
    3. '10' → logprob: -9.054865837097168
    4. '0' → logprob: -12.929865837097168
    5. '=' → logprob: -14.304865837097168
    6. ' ' → logprob: -15.554865837097168
    7. '  ' → logprob: -15.929865837097168
    8. ' =' → logprob: -16.17986488342285
    9. '(' → logprob: -16.24236488342285
    10. '2' → logprob: -16.42986488342285

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. '10' → logprob: -13.375022888183594
    4. '0' → logprob: -17.250022888183594
    5. '(' → logprob: -19.250022888183594
    6. '  ' → logprob: -19.500022888183594
    7. '=' → logprob: -19.625022888183594
    8. '   ' → logprob: -19.750022888183594
    9. '-' → logprob: -20.500022888183594
    10. '```' → logprob: -20.875022888183594

Token 109: '.' (ID: 13)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4293373227119446
    2. 'e' → logprob: -1.0543372631072998
    3. ' -' → logprob: -8.054337501525879
    4. '.' → logprob: -8.304337501525879
    5. ' ' → logprob: -10.804337501525879
    6. '0' → logprob: -11.304337501525879
    7. '**' → logprob: -11.429337501525879
    8. '*' → logprob: -11.804337501525879
    9. '^-' → logprob: -12.304337501525879
    10. '```' → logprob: -12.304337501525879

Token 110: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002198676229454577
    2. '9' → logprob: -9.50022029876709
    3. '0' → logprob: -9.75022029876709
    4. '1' → logprob: -10.37522029876709
    5. 'e' → logprob: -10.87522029876709
    6. '8' → logprob: -11.50022029876709
    7. '2' → logprob: -11.62522029876709
    8. '6' → logprob: -12.00022029876709
    9. '5' → logprob: -12.62522029876709
    10. '7' → logprob: -12.87522029876709

Token 111: ' /' (ID: 820)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012714473530650139
    2. ' -' → logprob: -4.762714385986328
    3. 'e' → logprob: -5.512714385986328
    4. ' ' → logprob: -9.887714385986328
    5. '^-' → logprob: -13.512714385986328
    6. ' **' → logprob: -13.637714385986328
    7. ' *' → logprob: -14.262714385986328
    8. '**' → logprob: -14.762714385986328
    9. ' /' → logprob: -15.387714385986328
    10. ' -*-' → logprob: -15.762714385986328

Token 112: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2959531843662262
    2. '10' → logprob: -1.6709531545639038
    3. ' (' → logprob: -3.1709532737731934
    4. ' ' → logprob: -4.170953273773193
    5. '1' → logprob: -5.045953273773193
    6. '100' → logprob: -5.545953273773193
    7. '2' → logprob: -8.795952796936035
    8. '3' → logprob: -9.795952796936035
    9. '0' → logprob: -10.045952796936035
    10. '123' → logprob: -10.670952796936035

Token 113: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.028550047427415848
    2. '(' → logprob: -4.153550148010254
    3. '1' → logprob: -4.528550148010254
    4. ' ' → logprob: -7.028550148010254
    5. '2' → logprob: -7.528550148010254
    6. ' (' → logprob: -9.278550148010254
    7. '100' → logprob: -9.403550148010254
    8. '3' → logprob: -10.653550148010254
    9. '0' → logprob: -11.653550148010254
    10. ')' → logprob: -13.278550148010254

Token 114: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.9093049168586731
    2. '12' → logprob: -1.0343048572540283
    3. '7' → logprob: -1.5343048572540283
    4. '10' → logprob: -4.409305095672607
    5. '15' → logprob: -5.159305095672607
    6. '8' → logprob: -5.909305095672607
    7. '**' → logprob: -6.409305095672607
    8. '14' → logprob: -6.909305095672607
    9. '11' → logprob: -7.034305095672607
    10. ' ' → logprob: -7.284305095672607

Token 115: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21576158702373505
    2. '7' → logprob: -1.8407615423202515
    3. '12' → logprob: -3.465761661529541
    4. '10' → logprob: -5.840761661529541
    5. '8' → logprob: -7.090761661529541
    6. '15' → logprob: -9.090761184692383
    7. ' ' → logprob: -9.465761184692383
    8. '14' → logprob: -9.590761184692383
    9. '16' → logprob: -10.090761184692383
    10. '6' → logprob: -10.090761184692383

Token 116: '10' (ID: 702)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.47753652930259705
    2. '9' → logprob: -0.9775365591049194
    3. '12' → logprob: -6.102536678314209
    4. '10' → logprob: -7.227536678314209
    5. '8' → logprob: -7.727536678314209
    6. '6' → logprob: -10.97753620147705
    7. ' ' → logprob: -11.22753620147705
    8. '15' → logprob: -11.60253620147705
    9. '14' → logprob: -12.22753620147705
    10. '16' → logprob: -13.47753620147705

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0381661131978035
    2. ' )' → logprob: -3.288166046142578
    3. ')
' → logprob: -9.288166046142578
    4. ' )
' → logprob: -10.413166046142578
    5. '
' → logprob: -14.288166046142578
    6. ')

' → logprob: -15.413166046142578
    7. '0' → logprob: -15.663166046142578
    8. ')#' → logprob: -15.913166046142578
    9. '<|end|>' → logprob: -16.038166046142578
    10. ')
' → logprob: -16.038166046142578

Token 118: '        ' (ID: 269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08049726486206055
    2. '<|end|>' → logprob: -3.3304972648620605
    3. ' 
' → logprob: -4.0804972648620605
    4. '#' → logprob: -4.5804972648620605
    5. ' ' → logprob: -4.9554972648620605
    6. '  
' → logprob: -5.5804972648620605
    7. '<|end|>' → logprob: -7.2054972648620605
    8. '\n' → logprob: -7.2054972648620605
    9. '
' → logprob: -7.4554972648620605
    10. '' → logprob: -7.4554972648620605

Token 119: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06546948105096817
    2. '#' (adapté à ' #') → logprob: -3.69046950340271
    3. '<|end|>' → logprob: -3.81546950340271
    4. ' 
' → logprob: -4.565469264984131
    5. ' ' → logprob: -5.815469264984131
    6. '  
' → logprob: -6.440469264984131
    7. '
' → logprob: -7.815469264984131
    8. '<|end|>' → logprob: -8.065469741821289
    9. '' → logprob: -8.565469741821289
    10. '

' → logprob: -9.190469741821289

Token 120: ' Pr' (ID: 2284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4268399178981781
    2. ' #' → logprob: -1.3018399477005005
    3. ' ' → logprob: -3.301839828491211
    4. 'epsilon' → logprob: -3.926839828491211
    5. ' epsilon' → logprob: -4.801839828491211
    6. 'eps' → logprob: -5.426839828491211
    7. '<|end|>' → logprob: -6.926839828491211
    8. '1' → logprob: -6.926839828491211
    9. ' eps' → logprob: -7.301839828491211
    10. 'e' → logprob: -7.301839828491211

Token 121: 'éc' (ID: 5675)
  Prédit: 'ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.017893662676215172
    2. 'éc' → logprob: -4.1428937911987305
    3. 'e' → logprob: -7.1428937911987305
    4. 'cision' → logprob: -7.1428937911987305
    5. '#' → logprob: -10.01789379119873
    6. 'ecs' → logprob: -10.01789379119873
    7. 'éci' → logprob: -10.14289379119873
    8. 'é' → logprob: -10.26789379119873
    9. 'eci' → logprob: -10.26789379119873
    10. 'es' → logprob: -11.89289379119873

Token 122: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.004188213497400284
    2. 'cision' → logprob: -5.629188060760498
    3. 'isio' → logprob: -8.129188537597656
    4. 'isi' → logprob: -9.629188537597656
    5. 'isions' → logprob: -9.754188537597656
    6. 'isión' → logprob: -9.879188537597656
    7. 'is' → logprob: -10.004188537597656
    8. 's' → logprob: -10.879188537597656
    9. 'ISION' → logprob: -11.254188537597656
    10. 'ission' → logprob: -11.879188537597656

Token 123: ' epsilon' (ID: 73311)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04121004417538643
    2. '<|end|>' → logprob: -3.7912099361419678
    3. '#' → logprob: -4.791210174560547
    4. '

' → logprob: -5.291210174560547
    5. '<|end|>' → logprob: -6.791210174560547
    6. '\n' → logprob: -7.291210174560547
    7. ' ' → logprob: -7.416210174560547
    8. '
' → logprob: -7.541210174560547
    9. '  
' → logprob: -7.666210174560547
    10. '' → logprob: -8.291210174560547

Token 125: ' comparaison' (ID: 170508)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09045546501874924
    2. 'les' → logprob: -2.7154555320739746
    3. ' comparer' → logprob: -5.090455532073975
    4. 'compar' → logprob: -5.465455532073975
    5. ' des' → logprob: -6.090455532073975
    6. 'l' → logprob: -6.465455532073975
    7. ' comparisons' → logprob: -6.465455532073975
    8. ' la' → logprob: -6.715455532073975
    9. ' l' → logprob: -6.965455532073975
    10. '<|end|>' → logprob: -7.465455532073975

Token 126: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7987021207809448
    2. '#' → logprob: -1.1737021207809448
    3. '<|end|>' → logprob: -2.9237022399902344
    4. ',' → logprob: -3.2987022399902344
    5. 's' → logprob: -3.5487022399902344
    6. '

' → logprob: -3.9237022399902344
    7. '\n' → logprob: -4.173702239990234
    8. ' ' → logprob: -4.423702239990234
    9. '=' → logprob: -4.548702239990234
    10. '0' → logprob: -5.048702239990234

Token 127: ' flott' (ID: 108700)
  Prédit: ' flott'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.5939437747001648
    2. ' nombres' → logprob: -1.4689438343048096
    3. 'float' → logprob: -2.0939438343048096
    4. ' float' → logprob: -3.0939438343048096
    5. 'flo' → logprob: -3.7189438343048096
    6. 'fl' → logprob: -5.3439435958862305
    7. 'n' → logprob: -5.4689435958862305
    8. ' floats' → logprob: -5.4689435958862305
    9. ' floating' → logprob: -5.5939435958862305
    10. 'floating' → logprob: -6.0939435958862305

Token 128: 'ants' (ID: 2027)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0487221479415894
    2. 'o' → logprob: -1.6737221479415894
    3. '-point' → logprob: -2.048722267150879
    4. 'point' → logprob: -2.298722267150879
    5. 'ants' → logprob: -2.798722267150879
    6. 'eurs' → logprob: -3.298722267150879
    7. 'e' → logprob: -3.548722267150879
    8. '```' → logprob: -3.923722267150879
    9. 'oint' → logprob: -4.048722267150879
    10. 'a' → logprob: -4.548722267150879

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022311056032776833
    2. '

' → logprob: -4.772311210632324
    3. '#' → logprob: -5.397311210632324
    4. '\n' → logprob: -5.647311210632324
    5. '
' → logprob: -6.022311210632324
    6. '' → logprob: -6.897311210632324
    7. 'newline' → logprob: -7.397311210632324
    8. '<|end|>' → logprob: -7.772311210632324
    9. ' ' → logprob: -8.772311210632324
    10. ' 
' → logprob: -8.897311210632324

Token 130: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1390232890844345
    2. '\n' → logprob: -3.5140233039855957
    3. '

' → logprob: -3.6390233039855957
    4. '#' → logprob: -3.6390233039855957
    5. 'newline' → logprob: -4.264023303985596
    6. '
' → logprob: -5.139023303985596
    7. 'n' → logprob: -5.264023303985596
    8. '' → logprob: -5.389023303985596
    9. 'max' → logprob: -5.389023303985596
    10. '\' → logprob: -5.764023303985596

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004707565065473318
    2. '=' → logprob: -5.379707336425781
    3. ' ' → logprob: -9.629707336425781
    4. ' =
' → logprob: -11.629707336425781
    5. '<|end|>' → logprob: -12.129707336425781
    6. ' ' → logprob: -13.379707336425781
    7. '  ' → logprob: -14.379707336425781
    8. 'ulus' → logprob: -14.504707336425781
    9. 'ules' → logprob: -14.754707336425781
    10. '_' → logprob: -14.879707336425781

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002190352650359273
    2. '10' → logprob: -6.127190589904785
    3. '100' → logprob: -12.502190589904785
    4. '1' → logprob: -13.877190589904785
    5. '998' → logprob: -14.877190589904785
    6. ' int' → logprob: -16.00218963623047
    7. ' ' → logprob: -17.12718963623047
    8. ' (' → logprob: -17.62718963623047
    9. 'int' → logprob: -17.87718963623047
    10. '109' → logprob: -18.12718963623047

Token 133: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010678142309188843
    2. ' ' → logprob: -5.135678291320801
    3. '100' → logprob: -5.885678291320801
    4. '998' → logprob: -6.260678291320801
    5. '1' → logprob: -10.5106782913208
    6. '(' → logprob: -10.8856782913208
    7. 'int' → logprob: -13.1356782913208
    8. ' (' → logprob: -14.8856782913208
    9. '999' → logprob: -15.3856782913208
    10. '```' → logprob: -15.5106782913208

Token 134: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5257893204689026
    2. '**' → logprob: -0.9007893204689026
    3. ' ' → logprob: -6.400789260864258
    4. ' **' → logprob: -7.650789260864258
    5. '+' → logprob: -7.775789260864258
    6. '^' → logprob: -10.150789260864258
    7. '09' → logprob: -10.525789260864258
    8. '```' → logprob: -11.275789260864258
    9. ' ' → logprob: -11.900789260864258
    10. '*' → logprob: -11.900789260864258

Token 135: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '09' → logprob: -17.000024795532227
    4. '+' → logprob: -17.500024795532227
    5. '```' → logprob: -19.000024795532227
    6. '
' → logprob: -19.750024795532227
    7. '10' → logprob: -20.000024795532227
    8. '_' → logprob: -20.750024795532227
    9. '   ' → logprob: -21.062524795532227
    10. '９' → logprob: -21.125024795532227

Token 136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.5
    3. ' ' → logprob: -17.125
    4. '+' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. '10' → logprob: -19.5
    7. '
' → logprob: -19.75
    8. '_' → logprob: -21.25
    9. '９' → logprob: -21.375
    10. '4' → logprob: -21.375

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815907657146454
    2. ' +' → logprob: -4.018158912658691
    3. '7' → logprob: -11.768158912658691
    4. '+
' → logprob: -15.018158912658691
    5. ' ' → logprob: -15.143158912658691
    6. ' plus' → logprob: -15.143158912658691
    7. ' ' → logprob: -16.143159866333008
    8. '＋' → logprob: -16.143159866333008
    9. '
' → logprob: -16.643159866333008
    10. '9' → logprob: -17.018159866333008

Token 138: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '+' → logprob: -16.125
    4. '9' → logprob: -18.5
    5. '07' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. '' → logprob: -20.0
    8. '   ' → logprob: -20.375
    9. '79' → logprob: -20.5625
    10. '  ' → logprob: -20.6875

Token 139: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -20.0
    3. '```' → logprob: -21.5
    4. '9' → logprob: -21.625
    5. '07' → logprob: -22.0
    6. '79' → logprob: -22.375
    7. '+' → logprob: -22.75
    8. '   ' → logprob: -22.875
    9. '۷' → logprob: -22.875
    10. '７' → logprob: -23.25

Token 140: '             ' (ID: 1698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25586166977882385
    2. '<|end|>' → logprob: -1.5058616399765015
    3. '<|end|>' → logprob: -6.130861759185791
    4. '#' → logprob: -7.505861759185791
    5. '

' → logprob: -7.630861759185791
    6. ' ' → logprob: -8.630861282348633
    7. '
' → logprob: -8.755861282348633
    8. ' 
' → logprob: -9.130861282348633
    9. '' → logprob: -9.255861282348633
    10. '  
' → logprob: -10.130861282348633

Token 141: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041903041303157806
    2. '<|end|>' → logprob: -3.791903018951416
    3. '1' → logprob: -5.541903018951416
    4. 'mod' → logprob: -5.916903018951416
    5. ' 
' → logprob: -6.291903018951416
    6. '10' → logprob: -6.291903018951416
    7. ' "' → logprob: -6.541903018951416
    8. ' mod' → logprob: -6.791903018951416
    9. '  ' → logprob: -7.166903018951416
    10. '
' → logprob: -7.541903018951416

Token 143: 'ulo' (ID: 5953)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' fré' (ID: 52465)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: 'quem' (ID: 43507)
  Prédit: 'quent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quent' → logprob: -0.0009448148775845766
    2. 'quence' → logprob: -8.625945091247559
    3. 'q' → logprob: -8.875945091247559
    4. 'qu' → logprob: -8.875945091247559
    5. '```' → logprob: -9.250945091247559
    6. 'quency' → logprob: -9.500945091247559
    7. 'uent' → logprob: -9.625945091247559
    8. 'quem' → logprob: -9.750945091247559
    9. 'quently' → logprob: -10.000945091247559
    10. 'quement' → logprob: -10.750945091247559

Token 146: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.1291622817516327
    2. 'ent' → logprob: -2.504162311553955
    3. 't' → logprob: -3.254162311553955
    4. 'emment' → logprob: -7.504162311553955
    5. 'ently' → logprob: -9.879161834716797
    6. 'nt' → logprob: -10.004161834716797
    7. 'ement' → logprob: -10.254161834716797
    8. '```' → logprob: -11.004161834716797
    9. 'ented' → logprob: -11.379161834716797
    10. 'rement' → logprob: -11.379161834716797

Token 147: ' utilisé' (ID: 53138)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.21085838973522186
    2. 'used' → logprob: -2.2108583450317383
    3. ' utilisé' → logprob: -2.9608583450317383
    4. ' utilisée' → logprob: -5.210858345031738
    5. '_used' → logprob: -5.210858345031738
    6. '<|end|>' → logprob: -5.335858345031738
    7. ' use' → logprob: -6.210858345031738
    8. ' utilisés' → logprob: -6.210858345031738
    9. 'util' → logprob: -6.210858345031738
    10. 'use' → logprob: -6.585858345031738

Token 148: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11591649800539017
    2. '<|end|>' → logprob: -2.7409164905548096
    3. '

' → logprob: -3.4909164905548096
    4. '#' → logprob: -4.990916728973389
    5. '<|end|>' → logprob: -6.115916728973389
    6. '\n' → logprob: -6.740916728973389
    7. ' 
' → logprob: -6.990916728973389
    8. '' → logprob: -7.240916728973389
    9. ' ' → logprob: -7.365916728973389
    10. '
' → logprob: -7.490916728973389

Token 149: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010083276778459549
    2. ' )' → logprob: -4.635083198547363
    3. ' ' → logprob: -8.635083198547363
    4. '<|end|>' → logprob: -9.135083198547363
    5. '')' → logprob: -11.510083198547363
    6. ' ' → logprob: -12.135083198547363
    7. '1' → logprob: -12.260083198547363
    8. '```' → logprob: -12.635083198547363
    9. '<|end|>' → logprob: -13.135083198547363
    10. ')
' → logprob: -13.385083198547363

Token 150: ' premier' (ID: 15506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4702727198600769
    2. '=' → logprob: -1.3452727794647217
    3. '<|end|>' → logprob: -2.7202727794647217
    4. ' )' → logprob: -3.7202727794647217
    5. '_' → logprob: -4.470272541046143
    6. ' =' → logprob: -5.095272541046143
    7. ' ' → logprob: -6.220272541046143
    8. ',' → logprob: -6.470272541046143
    9. ' ' → logprob: -7.845272541046143
    10. '<|end|>' → logprob: -7.970272541046143

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006011629477143288
    2. ' )' → logprob: -5.131011486053467
    3. '<|end|>' → logprob: -10.131011962890625
    4. ',' → logprob: -11.506011962890625
    5. ' ' → logprob: -12.006011962890625
    6. '#' → logprob: -12.006011962890625
    7. '<|end|>' → logprob: -12.381011962890625
    8. ')
' → logprob: -13.006011962890625
    9. ' ' → logprob: -13.006011962890625
    10. ')#' → logprob: -13.756011962890625

Token 152: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26280930638313293
    2. '

' → logprob: -1.5128092765808105
    3. '
' → logprob: -5.5128092765808105
    4. '#' → logprob: -5.6378092765808105
    5. '<|end|>' → logprob: -7.1378092765808105
    6. '\n' → logprob: -7.2628092765808105
    7. '' → logprob: -7.5128092765808105
    8. '


' → logprob: -8.137809753417969
    9. 'newline' → logprob: -9.012809753417969
    10. '<|end|>' → logprob: -9.262809753417969

Token 153: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9334630370140076
    2. '2' → logprob: -1.3084630966186523
    3. ' =' → logprob: -1.3084630966186523
    4. '_' → logprob: -3.1834630966186523
    5. 'pow' → logprob: -5.433463096618652
    6. '1' → logprob: -5.558463096618652
    7. ' ' → logprob: -6.308463096618652
    8. '998' → logprob: -6.683463096618652
    9. 'd' → logprob: -7.308463096618652
    10. '_prime' → logprob: -7.308463096618652

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005062025971710682
    2. ' ' → logprob: -5.505062103271484
    3. '=' → logprob: -7.005062103271484
    4. '0' → logprob: -10.630062103271484
    5. ',' → logprob: -11.630062103271484
    6. ' ,' → logprob: -11.755062103271484
    7. '  ' → logprob: -12.255062103271484
    8. '3' → logprob: -12.505062103271484
    9. '2' → logprob: -12.880062103271484
    10. ' ' → logprob: -13.067562103271484

Token 155: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009941655211150646
    2. '10' → logprob: -4.634941577911377
    3. ' (' → logprob: -9.134942054748535
    4. '2' → logprob: -10.384942054748535
    5. '198' → logprob: -11.634942054748535
    6. '  ' → logprob: -12.009942054748535
    7. '1' → logprob: -12.134942054748535
    8. '998' → logprob: -12.134942054748535
    9. '100' → logprob: -12.759942054748535
    10. '(' → logprob: -12.884942054748535

Token 156: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3274727165699005
    2. '998' → logprob: -1.3274726867675781
    3. '2' → logprob: -5.452472686767578
    4. ' ' → logprob: -5.452472686767578
    5. '100' → logprob: -5.577472686767578
    6. '(' → logprob: -6.702472686767578
    7. '1' → logprob: -7.952472686767578
    8. ' (' → logprob: -10.577472686767578
    9. 'int' → logprob: -10.952472686767578
    10. '```' → logprob: -11.202472686767578

Token 157: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -5.512236498361744e-07
    2. '245' → logprob: -15.625000953674316
    3. '243' → logprob: -15.750000953674316
    4. '247' → logprob: -16.625
    5. '254' → logprob: -16.75
    6. '242' → logprob: -17.0
    7. '944' → logprob: -17.25
    8. '259' → logprob: -17.5
    9. '544' → logprob: -18.0
    10. '344' → logprob: -18.0

Token 158: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -5.860340752406046e-05
    2. '853' → logprob: -9.7500581741333
    3. '3' → logprob: -15.7500581741333
    4. '35' → logprob: -16.500059127807617
    5. '352' → logprob: -18.125059127807617
    6. '53' → logprob: -19.375059127807617
    7. ' ' → logprob: -19.812559127807617
    8. '349' → logprob: -20.125059127807617
    9. '351' → logprob: -20.125059127807617
    10. '```' → logprob: -20.437559127807617

Token 159: '              ' (ID: 4442)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33751046657562256
    2. '<|end|>' → logprob: -1.9625104665756226
    3. ' ' → logprob: -2.212510585784912
    4. ' 
' → logprob: -3.587510585784912
    5. '<|end|>' → logprob: -5.837510585784912
    6. '#' → logprob: -5.837510585784912
    7. '  
' → logprob: -7.087510585784912
    8. '

' → logprob: -7.587510585784912
    9. '
' → logprob: -7.962510585784912
    10. '' → logprob: -8.087510108947754

Token 160: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23942144215106964
    2. '
' → logprob: -1.8644214868545532
    3. '<|end|>' → logprob: -3.3644213676452637
    4. ' 
' → logprob: -4.489421367645264
    5. '#' (adapté à ' #') → logprob: -4.614421367645264
    6. ' 

' → logprob: -7.114421367645264
    7. '<|end|>' → logprob: -7.864421367645264
    8. '

' → logprob: -8.114421844482422
    9. '' → logprob: -9.114421844482422
    10. '  
' → logprob: -9.239421844482422

Token 161: ' Aut' (ID: 8517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03915943205356598
    2. '<|end|>' → logprob: -3.2891595363616943
    3. '  ' → logprob: -7.789159297943115
    4. ' 
' → logprob: -8.664159774780273
    5. '<|end|>' → logprob: -8.789159774780273
    6. '#' → logprob: -9.039159774780273
    7. ' #' → logprob: -9.539159774780273
    8. '
' → logprob: -10.414159774780273
    9. ' 

' → logprob: -10.664159774780273
    10. ' mod' → logprob: -10.664159774780273

Token 162: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.2812303304672241
    2. 'res' → logprob: -1.4062303304672241
    3. 'es' → logprob: -10.906229972839355
    4. 'r' → logprob: -10.906229972839355
    5. '#' → logprob: -11.906229972839355
    6. 'rès' → logprob: -12.531229972839355
    7. 'reur' → logprob: -12.531229972839355
    8. 'rement' → logprob: -12.656229972839355
    9. 'e' → logprob: -12.906229972839355
    10. 'or' → logprob: -13.031229972839355

Token 163: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' souvent' (ID: 28137)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' utilisé' (ID: 53138)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48245930671691895
    2. '#' → logprob: -1.232459306716919
    3. '<|end|>' → logprob: -2.857459306716919
    4. ' ' → logprob: -4.48245906829834
    5. ')' → logprob: -4.73245906829834
    6. '

' → logprob: -5.10745906829834
    7. '<|end|>' → logprob: -6.10745906829834
    8. '
' → logprob: -6.98245906829834
    9. '\n' → logprob: -7.10745906829834
    10. '' → logprob: -7.48245906829834

Token 167: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010006214492022991
    2. ' )' → logprob: -4.635006427764893
    3. '')' → logprob: -9.385005950927734
    4. '<|end|>' → logprob: -10.010005950927734
    5. ' ' → logprob: -10.260005950927734
    6. ')
' → logprob: -10.260005950927734
    7. '")' → logprob: -11.635005950927734
    8. '`)' → logprob: -12.385005950927734
    9. ')#' → logprob: -12.510005950927734
    10. ' ' → logprob: -12.635005950927734

Token 168: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.0064061470329761505
    2. 'prem' → logprob: -5.131406307220459
    3. ' primo' → logprob: -8.1314058303833
    4. ' prime' → logprob: -9.3814058303833
    5. ' premiers' → logprob: -10.3814058303833
    6. '_' → logprob: -11.0064058303833
    7. ' ' → logprob: -11.3814058303833
    8. ' ' → logprob: -11.7564058303833
    9. ' premi' → logprob: -12.0064058303833
    10. 'prime' → logprob: -12.0064058303833

Token 169: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002476604888215661
    2. ' )' → logprob: -6.002476692199707
    3. ')
' → logprob: -15.002476692199707
    4. ')#' → logprob: -15.002476692199707
    5. '#' → logprob: -15.377476692199707
    6. ' ' → logprob: -17.00247573852539
    7. ')

' → logprob: -17.12747573852539
    8. '))' → logprob: -17.75247573852539
    9. '')' → logprob: -18.12747573852539
    10. ' )
' → logprob: -18.37747573852539

Token 170: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3765120804309845
    2. '#' → logprob: -2.251512050628662
    3. 'def' → logprob: -2.251512050628662
    4. '

' → logprob: -3.126512050628662
    5. '\n' → logprob: -3.501512050628662
    6. 'n' → logprob: -4.126512050628662
    7. '\' → logprob: -5.501512050628662
    8. '' → logprob: -6.626512050628662
    9. ' ' → logprob: -6.751512050628662
    10. 'a' → logprob: -6.876512050628662

Token 171: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006455535534769297
    2. '#' → logprob: -5.131455421447754
    3. 'class' → logprob: -7.881455421447754
    4. 'from' → logprob: -9.256455421447754
    5. 'input' → logprob: -11.256455421447754
    6. ' def' → logprob: -11.381455421447754
    7. 'DEBUG' → logprob: -11.506455421447754
    8. 'n' → logprob: -13.131455421447754
    9. 'INF' → logprob: -13.131455421447754
    10. 'import' → logprob: -13.256455421447754

Token 172: 'placements' (ID: 72793)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.030028508976101875
    2. 'fin' → logprob: -3.5300285816192627
    3. 'fi' → logprob: -8.530028343200684
    4. '#' → logprob: -10.655028343200684
    5. 'fine' → logprob: -10.905028343200684
    6. '
' → logprob: -11.405028343200684
    7. 'finite' → logprob: -11.905028343200684
    8. 'ff' → logprob: -13.030028343200684
    9. 'def' → logprob: -13.155028343200684
    10. 'fic' → logprob: -13.405028343200684

Token 173: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04804772511124611
    2. 'dire' → logprob: -3.4230477809906006
    3. 's' → logprob: -5.1730475425720215
    4. '<|end|>' → logprob: -6.2980475425720215
    5. 'd' → logprob: -6.7980475425720215
    6. '=' → logprob: -6.9230475425720215
    7. ' ' → logprob: -7.0480475425720215
    8. 'dx' → logprob: -7.4230475425720215
    9. ' directions' → logprob: -7.5480475425720215
    10. '4' → logprob: -8.42304801940918

Token 174: ' une' (ID: 2463)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2397505044937134
    2. ' les' → logprob: -1.3647505044937134
    3. ' une' → logprob: -1.8647505044937134
    4. ' ' → logprob: -2.239750385284424
    5. '2' → logprob: -2.489750385284424
    6. 'les' → logprob: -3.239750385284424
    7. 'une' → logprob: -3.489750385284424
    8. ' la' → logprob: -3.989750385284424
    9. 'la' → logprob: -5.989750385284424
    10. '[]' → logprob: -6.114750385284424

Token 175: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.27603504061698914
    2. 'gr' → logprob: -1.5260350704193115
    3. ' ' → logprob: -4.026034832000732
    4. '2' → logprob: -6.151034832000732
    5. ' ' → logprob: -6.776034832000732
    6. '   ' → logprob: -7.276034832000732
    7. 's' → logprob: -8.02603530883789
    8. 'ligne' → logprob: -8.27603530883789
    9. '```' → logprob: -8.27603530883789
    10. '8' → logprob: -8.52603530883789

Token 176: ' à' (ID: 1221)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.6111029982566833
    2. 'dx' → logprob: -0.9861029982566833
    3. 'D' → logprob: -3.736103057861328
    4. ' =' → logprob: -3.986103057861328
    5. 'd' → logprob: -4.611103057861328
    6. 'dirs' → logprob: -4.736103057861328
    7. '4' → logprob: -4.861103057861328
    8. ' directions' → logprob: -5.111103057861328
    9. 'DIR' → logprob: -5.861103057861328
    10. ' dx' → logprob: -6.361103057861328

Token 177: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3945845067501068
    2. '8' → logprob: -1.1445845365524292
    3. ' ' → logprob: -5.519584655761719
    4. '2' → logprob: -7.144584655761719
    5. 'l' → logprob: -7.269584655761719
    6. '6' → logprob: -7.769584655761719
    7. 'x' → logprob: -8.144584655761719
    8. 'h' → logprob: -8.269584655761719
    9. ' quatre' → logprob: -8.519584655761719
    10. ' huit' → logprob: -8.644584655761719

Token 178: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01463269256055355
    2. '8' → logprob: -4.764632701873779
    3. '[' → logprob: -6.389632701873779
    4. 'dire' → logprob: -7.014632701873779
    5. ' ' → logprob: -7.639632701873779
    6. 'vo' → logprob: -7.764632701873779
    7. 'adj' → logprob: -8.139632225036621
    8. 'qu' → logprob: -8.264632225036621
    9. 'dro' → logprob: -8.264632225036621
    10. 'h' → logprob: -8.889632225036621

Token 179: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.4439566731452942
    2. 'dire' → logprob: -1.1939566135406494
    3. '-direction' → logprob: -3.5689566135406494
    4. '-dire' → logprob: -3.9439566135406494
    5. '-' → logprob: -5.1939568519592285
    6. 'direction' → logprob: -6.5689568519592285
    7. ' Directions' → logprob: -8.19395637512207
    8. 'd' → logprob: -8.44395637512207
    9. 'direct' → logprob: -8.69395637512207
    10. 'Directions' → logprob: -9.31895637512207

Token 180: ' (' (ID: 350)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.7514349818229675
    2. 'dire' → logprob: -0.7514349818229675
    3. 'D' → logprob: -3.7514350414276123
    4. 'd' → logprob: -3.8764350414276123
    5. 'dirs' → logprob: -5.876434803009033
    6. 'direction' → logprob: -6.501434803009033
    7. ' directions' → logprob: -6.501434803009033
    8. '
' → logprob: -6.751434803009033
    9. '4' → logprob: -7.001434803009033
    10. 'delta' → logprob: -7.126434803009033

Token 181: 'haut' (ID: 134423)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.024765800684690475
    2. '(dx' → logprob: -5.024765968322754
    3. ' dx' → logprob: -5.149765968322754
    4. 'dy' → logprob: -5.524765968322754
    5. 'up' → logprob: -6.899765968322754
    6. ')' → logprob: -6.899765968322754
    7. 'dr' → logprob: -7.024765968322754
    8. 'd' → logprob: -7.024765968322754
    9. 'DX' → logprob: -7.274765968322754
    10. 'D' → logprob: -7.399765968322754

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006553700077347457
    2. ' ,' → logprob: -7.625655174255371
    3. ')' → logprob: -9.750655174255371
    4. ',
' → logprob: -10.875655174255371
    5. ',d' → logprob: -11.000655174255371
    6. 'dx' → logprob: -11.250655174255371
    7. 'd' → logprob: -11.750655174255371
    8. '),' → logprob: -12.250655174255371
    9. '=' → logprob: -12.250655174255371
    10. ':' → logprob: -12.250655174255371

Token 183: ' droite' (ID: 61428)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.014616011641919613
    2. ' bas' → logprob: -4.264616012573242
    3. 'dro' → logprob: -8.264616012573242
    4. 'down' → logprob: -9.264616012573242
    5. ' droite' → logprob: -10.889616012573242
    6. '_bas' → logprob: -11.014616012573242
    7. ' down' → logprob: -11.514616012573242
    8. 'b' → logprob: -11.639616012573242
    9. '```' → logprob: -11.639616012573242
    10. ' ' → logprob: -11.764616012573242

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002457238151691854
    2. ' ,' → logprob: -8.500246047973633
    3. 'bas' → logprob: -11.000246047973633
    4. ')' → logprob: -12.125246047973633
    5. ',b' → logprob: -12.250246047973633
    6. ',d' → logprob: -12.625246047973633
    7. ',
' → logprob: -12.625246047973633
    8. '),' → logprob: -14.000246047973633
    9. ',
' → logprob: -14.000246047973633
    10. 'd' → logprob: -14.125246047973633

Token 185: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.009951218962669373
    2. ' bas' → logprob: -4.634951114654541
    3. 'b' → logprob: -9.1349515914917
    4. 'down' → logprob: -10.1349515914917
    5. ' down' → logprob: -11.5099515914917
    6. ' gauche' → logprob: -11.7599515914917
    7. ' ' → logprob: -12.3849515914917
    8. '```' → logprob: -12.5099515914917
    9. ' basse' → logprob: -12.6349515914917
    10. '_bas' → logprob: -12.7599515914917

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004311460361350328
    2. ')' → logprob: -8.250431060791016
    3. ' ,' → logprob: -8.750431060791016
    4. ',
' → logprob: -12.625431060791016
    5. ',)' → logprob: -13.125431060791016
    6. ',
' → logprob: -13.625431060791016
    7. ',d' → logprob: -14.125431060791016
    8. ' et' → logprob: -14.625431060791016
    9. 'd' → logprob: -14.750431060791016
    10. ',

' → logprob: -15.000431060791016

Token 187: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1798381507396698
    2. ' gauche' → logprob: -1.8048381805419922
    3. 'left' → logprob: -10.429838180541992
    4. ' gau' → logprob: -10.679838180541992
    5. 'gau' → logprob: -11.054838180541992
    6. ' ' → logprob: -11.304838180541992
    7. '```' → logprob: -12.179838180541992
    8. ' g' → logprob: -12.804838180541992
    9. ' ' → logprob: -13.804838180541992
    10. ' left' → logprob: -14.179838180541992

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25322699546813965
    2. ')
' → logprob: -1.5032269954681396
    3. ')
' → logprob: -7.378227233886719
    4. 'dire' → logprob: -7.503227233886719
    5. 'dx' → logprob: -10.253227233886719
    6. 'd' → logprob: -10.753227233886719
    7. ' )' → logprob: -12.003227233886719
    8. ' directions' → logprob: -12.128227233886719
    9. ')

' → logprob: -12.128227233886719
    10. ']' → logprob: -12.128227233886719

Token 189: 'dd' (ID: 1183)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.37648525834083557
    2. 'dire' → logprob: -1.3764852285385132
    3. 'dy' → logprob: -3.8764853477478027
    4. 'd' → logprob: -4.126485347747803
    5. 'D' → logprob: -4.751485347747803
    6. 'dirs' → logprob: -5.126485347747803
    7. 'DIR' → logprob: -5.501485347747803
    8. 'DX' → logprob: -6.001485347747803
    9. 'dir' → logprob: -7.126485347747803
    10. ' directions' → logprob: -7.251485347747803

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.064985752105713
    2. 'x' → logprob: -1.564985752105713
    3. '=' → logprob: -1.689985752105713
    4. 'ir' → logprob: -1.939985752105713
    5. 'r' → logprob: -2.314985752105713
    6. 'dr' → logprob: -5.564985752105713
    7. 'xy' → logprob: -5.689985752105713
    8. ' ' → logprob: -5.939985752105713
    9. 'irs' → logprob: -6.314985752105713
    10. 'd' → logprob: -6.439985752105713

Token 191: ' [' (ID: 723)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.2721894383430481
    2. '[(' → logprob: -2.0221893787384033
    3. ' [' → logprob: -2.7721893787384033
    4. '[' → logprob: -3.1471893787384033
    5. ' [-' → logprob: -9.522189140319824
    6. ' =' → logprob: -9.647189140319824
    7. ' ' → logprob: -9.647189140319824
    8. ' [[' → logprob: -9.772189140319824
    9. '[-' → logprob: -9.897189140319824
    10. ' [
' → logprob: -10.647189140319824

Token 192: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2032136172056198
    2. '(' → logprob: -1.7032135725021362
    3. '-' → logprob: -6.953213691711426
    4. '[-' → logprob: -7.578213691711426
    5. '[' → logprob: -8.078213691711426
    6. '(+' → logprob: -11.578213691711426
    7. ' (' → logprob: -12.078213691711426
    8. '0' → logprob: -12.828213691711426
    9. ' (-' → logprob: -13.078213691711426
    10. '1' → logprob: -13.703213691711426

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -19.500001907348633
    4. '2' → logprob: -20.875001907348633
    5. '１' → logprob: -20.875001907348633
    6. ')' → logprob: -21.812501907348633
    7. '১' → logprob: -21.937501907348633
    8. '१' → logprob: -22.187501907348633
    9. '-' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.250001907348633

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003872974484693259
    2. ' ,' → logprob: -8.000387191772461
    3. '0' → logprob: -9.875387191772461
    4. '),' → logprob: -16.00038719177246
    5. ' ' → logprob: -16.25038719177246
    6. ',
' → logprob: -16.37538719177246
    7. ')' → logprob: -16.62538719177246
    8. ',),' → logprob: -17.62538719177246
    9. '1' → logprob: -18.00038719177246
    10. ' ),' → logprob: -18.50038719177246

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. ')' → logprob: -18.00037956237793
    4. ' ' → logprob: -18.75037956237793
    5. '  ' → logprob: -20.00037956237793
    6. '۰' → logprob: -20.00037956237793
    7. '０' → logprob: -20.87537956237793
    8. '00' → logprob: -21.25037956237793
    9. '1' → logprob: -21.75037956237793
    10. '٠' → logprob: -22.06287956237793

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -18.875045776367188
    4. '  ' → logprob: -20.625045776367188
    5. ' ' → logprob: -20.875045776367188
    6. '۰' → logprob: -20.875045776367188
    7. '０' → logprob: -21.500045776367188
    8. '00' → logprob: -22.125045776367188
    9. '   ' → logprob: -22.375045776367188
    10. '٠' → logprob: -22.500045776367188

Token 197: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008771585416980088
    2. ')' → logprob: -7.875877380371094
    3. '),(' → logprob: -8.000877380371094
    4. '),
' → logprob: -9.250877380371094
    5. ' ),' → logprob: -9.750877380371094
    6. '),

' → logprob: -12.125877380371094
    7. ',' → logprob: -13.625877380371094
    8. ',),' → logprob: -15.375877380371094
    9. '),
' → logprob: -16.000877380371094
    10. ' ' → logprob: -16.000877380371094

Token 198: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40991470217704773
    2. ' (' → logprob: -1.1599147319793701
    3. '0' → logprob: -3.90991473197937
    4. ' ' → logprob: -5.909914493560791
    5. '1' → logprob: -11.53491497039795
    6. '<|end|>' → logprob: -11.53491497039795
    7. '  
' → logprob: -12.78491497039795
    8. '  ' → logprob: -13.90991497039795
    9. ')' → logprob: -14.28491497039795
    10. ' 
' → logprob: -14.65991497039795

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00287049263715744
    2. '1' → logprob: -6.377870559692383
    3. ' ' → logprob: -6.752870559692383
    4. '  ' → logprob: -16.377870559692383
    5. '01' → logprob: -16.752870559692383
    6. ')' → logprob: -17.627870559692383
    7. '  
' → logprob: -18.127870559692383
    8. ' ' → logprob: -18.502870559692383
    9. '   ' → logprob: -18.752870559692383
    10. '```' → logprob: -18.815370559692383

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019054718723054975
    2. ' ,' → logprob: -8.750190734863281
    3. '1' → logprob: -10.375190734863281
    4. ' ' → logprob: -14.750190734863281
    5. ')' → logprob: -15.750190734863281
    6. '<|end|>' → logprob: -16.25019073486328
    7. ',
' → logprob: -17.00019073486328
    8. '-' → logprob: -17.25019073486328
    9. '2' → logprob: -17.93769073486328
    10. '),' → logprob: -18.31269073486328

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006514362758025527
    2. ' ' → logprob: -7.3756513595581055
    3. '-' → logprob: -10.625651359558105
    4. '+' → logprob: -15.000651359558105
    5. ' -' → logprob: -15.750651359558105
    6. '```' → logprob: -17.375652313232422
    7. '  ' → logprob: -17.500652313232422
    8. ')' → logprob: -18.250652313232422
    9. '   ' → logprob: -18.250652313232422
    10. ' ' → logprob: -20.313152313232422

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.250041007995605
    3. '-' → logprob: -12.125041007995605
    4. '+' → logprob: -15.750041007995605
    5. '```' → logprob: -18.37504005432129
    6. ' -' → logprob: -18.50004005432129
    7. '  ' → logprob: -18.87504005432129
    8. ')' → logprob: -19.12504005432129
    9. '１' → logprob: -20.00004005432129
    10. '   ' → logprob: -20.12504005432129

Token 203: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00038360210601240396
    2. ' ),' → logprob: -8.125383377075195
    3. ')' → logprob: -9.375383377075195
    4. '),(' → logprob: -13.625383377075195
    5. '),
' → logprob: -14.250383377075195
    6. ',' → logprob: -15.375383377075195
    7. '0' → logprob: -15.875383377075195
    8. ' ' → logprob: -16.250383377075195
    9. '),

' → logprob: -16.500383377075195
    10. ',),' → logprob: -16.500383377075195

Token 204: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007142199319787323
    2. ' (' → logprob: -7.250714302062988
    3. '1' → logprob: -12.375714302062988
    4. ' ' → logprob: -16.500713348388672
    5. '0' → logprob: -18.125713348388672
    6. '{' → logprob: -18.875713348388672
    7. '(+' → logprob: -21.125713348388672
    8. '[' → logprob: -21.375713348388672
    9. ' ' → logprob: -21.375713348388672
    10. '  ' → logprob: -21.750713348388672

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002166913589462638
    2. '0' → logprob: -6.377166748046875
    3. '-' → logprob: -8.252166748046875
    4. ' ' → logprob: -8.502166748046875
    5. ' -' → logprob: -14.502166748046875
    6. '```' → logprob: -15.002166748046875
    7. '(' → logprob: -16.752166748046875
    8. '  ' → logprob: -17.127166748046875
    9. '   ' → logprob: -17.252166748046875
    10. '+' → logprob: -17.252166748046875

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007548353751190007
    2. '0' → logprob: -7.3757548332214355
    3. ' ,' → logprob: -9.000755310058594
    4. ' ' → logprob: -12.250755310058594
    5. ')' → logprob: -16.625755310058594
    6. '<|end|>' → logprob: -17.125755310058594
    7. '```' → logprob: -18.938255310058594
    8. ',
' → logprob: -19.125755310058594
    9. '‌,' → logprob: -19.375755310058594
    10. '1' → logprob: -19.500755310058594

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033646389842033386
    2. ' ' → logprob: -3.40864634513855
    3. ')' → logprob: -15.533646583557129
    4. ' ' → logprob: -15.658646583557129
    5. '  ' → logprob: -16.471145629882812
    6. '   ' → logprob: -16.721145629882812
    7. '۰' → logprob: -16.908645629882812
    8. '```' → logprob: -17.783645629882812
    9. ',' → logprob: -18.158645629882812
    10. '<|end|>' → logprob: -18.533645629882812

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. ' ' → logprob: -17.25020408630371
    4. '۰' → logprob: -17.68770408630371
    5. '```' → logprob: -18.00020408630371
    6. ')' → logprob: -18.31270408630371
    7. '   ' → logprob: -18.62520408630371
    8. '  ' → logprob: -18.81270408630371
    9. ',' → logprob: -19.00020408630371
    10. '０' → logprob: -19.50020408630371

Token 209: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00013619766104966402
    2. ' ),' → logprob: -9.000136375427246
    3. ',' → logprob: -11.625136375427246
    4. '),(' → logprob: -13.125136375427246
    5. ')' → logprob: -13.625136375427246
    6. ' ,' → logprob: -15.500136375427246
    7. '],' → logprob: -15.750136375427246
    8. '),
' → logprob: -16.12513542175293
    9. ',),' → logprob: -16.50013542175293
    10. ')]' → logprob: -17.12513542175293

Token 210: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048667192459106445
    2. ' (' → logprob: -3.0486671924591064
    3. '0' → logprob: -9.548666954040527
    4. ' ' → logprob: -11.673666954040527
    5. '(-' → logprob: -18.423667907714844
    6. ')' → logprob: -18.548667907714844
    7. ',' → logprob: -19.048667907714844
    8. ' ' → logprob: -19.048667907714844
    9. '(
' → logprob: -19.798667907714844
    10. ' (
' → logprob: -20.298667907714844

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006070286966860294
    2. '-' → logprob: -5.256070137023926
    3. '(' → logprob: -7.256070137023926
    4. ' ' → logprob: -9.006070137023926
    5. ')' → logprob: -12.881070137023926
    6. '(-' → logprob: -13.131070137023926
    7. ' -' → logprob: -13.381070137023926
    8. '[' → logprob: -15.006070137023926
    9. ',' → logprob: -15.006070137023926
    10. ' (' → logprob: -15.131070137023926

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002553307916969061
    2. '-' → logprob: -6.127553462982178
    3. ',-' → logprob: -8.00255298614502
    4. ' ,' → logprob: -11.00255298614502
    5. ',
' → logprob: -11.62755298614502
    6. ' -' → logprob: -12.00255298614502
    7. ' ,-' → logprob: -14.50255298614502
    8. ',
' → logprob: -15.25255298614502
    9. '```' → logprob: -15.94005298614502
    10. ' ' → logprob: -15.94005298614502

Token 213: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.339278580620885e-06
    2. ' -' → logprob: -13.000001907348633
    3. '1' → logprob: -18.125001907348633
    4. '```' → logprob: -18.500001907348633
    5. '-
' → logprob: -18.875001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '‑' → logprob: -19.750001907348633
    8. '−' → logprob: -19.875001907348633
    9. ')-' → logprob: -19.875001907348633
    10. ')' → logprob: -20.125001907348633

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ')]' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.25000286102295
    4. ')' → logprob: -16.250001907348633
    5. '```' → logprob: -17.625001907348633
    6. '１' → logprob: -18.437501907348633
    7. '   ' → logprob: -18.625001907348633
    8. '
' → logprob: -18.750001907348633
    9. ')]
' → logprob: -18.750001907348633
    10. ']]' → logprob: -18.750001907348633

Token 215: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016504127415828407
    2. ')' → logprob: -9.000164985656738
    3. ']' → logprob: -10.125164985656738
    4. '),' → logprob: -14.375164985656738
    5. ' )' → logprob: -14.625164985656738
    6. ')]
' → logprob: -15.875164985656738
    7. '])' → logprob: -16.000165939331055
    8. ')],' → logprob: -16.250165939331055
    9. '))' → logprob: -16.500165939331055
    10. ')}' → logprob: -17.250165939331055

Token 216: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42255905270576477
    2. 'def' → logprob: -1.1725590229034424
    3. '

' → logprob: -5.0475592613220215
    4. 'n' → logprob: -5.4225592613220215
    5. 'dd' → logprob: -5.4225592613220215
    6. '
' → logprob: -5.5475592613220215
    7. '
' → logprob: -5.6725592613220215
    8. 'dx' → logprob: -6.1725592613220215
    9. 'class' → logprob: -6.6725592613220215
    10. '' → logprob: -7.0475592613220215

Token 217: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5341184735298157
    2. '#' → logprob: -1.159118413925171
    3. 'dd' → logprob: -2.784118413925171
    4. 'dx' → logprob: -4.78411865234375
    5. 'D' → logprob: -5.03411865234375
    6. 'DD' → logprob: -5.53411865234375
    7. 'DIR' → logprob: -5.78411865234375
    8. 'd' → logprob: -5.90911865234375
    9. '
' → logprob: -6.15911865234375
    10. 'class' → logprob: -6.78411865234375

Token 218: 'placements' (ID: 72793)
  Prédit: 'placements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.017650658264756203
    2. 'f' → logprob: -4.517650604248047
    3. 'placement' → logprob: -6.142650604248047
    4. 'pl' → logprob: -6.767650604248047
    5. 'cal' → logprob: -6.892650604248047
    6. 'plac' → logprob: -7.267650604248047
    7. 'pla' → logprob: -8.017650604248047
    8. 'place' → logprob: -8.267650604248047
    9. 'places' → logprob: -8.892650604248047
    10. 'fin' → logprob: -8.892650604248047

Token 219: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46301186084747314
    2. 'sur' → logprob: -1.9630118608474731
    3. '=' → logprob: -2.5880117416381836
    4. 'di' → logprob: -3.0880117416381836
    5. ' diagon' → logprob: -3.8380117416381836
    6. '_di' → logprob: -4.088011741638184
    7. '8' → logprob: -4.588011741638184
    8. '[' → logprob: -4.838011741638184
    9. 's' → logprob: -4.963011741638184
    10. ' ' → logprob: -4.963011741638184

Token 220: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2393903136253357
    2. ' [' → logprob: -2.3643903732299805
    3. ' une' → logprob: -2.6143903732299805
    4. 'une' → logprob: -4.1143903732299805
    5. ' ' → logprob: -4.2393903732299805
    6. '[(' → logprob: -5.1143903732299805
    7. ' [(' → logprob: -5.3643903732299805
    8. 'a' → logprob: -6.8643903732299805
    9. ' a' → logprob: -7.9893903732299805
    10. ' des' → logprob: -8.11439037322998

Token 221: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.14341285824775696
    2. ' grille' → logprob: -2.0184128284454346
    3. 'grid' → logprob: -8.643412590026855
    4. '8' → logprob: -8.643412590026855
    5. ' ' → logprob: -9.518412590026855
    6. 'liste' → logprob: -9.768412590026855
    7. 'ligne' → logprob: -9.893412590026855
    8. '#' → logprob: -10.018412590026855
    9. '```' → logprob: -10.268412590026855
    10. '[' → logprob: -10.268412590026855

Token 222: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.055362991988658905
    2. 'à' → logprob: -3.3053629398345947
    3. '#' → logprob: -4.555363178253174
    4. ' en' → logprob: -6.555363178253174
    5. '8' → logprob: -6.680363178253174
    6. ' ' → logprob: -6.930363178253174
    7. 'dd' → logprob: -6.930363178253174
    8. ' a' → logprob: -7.430363178253174
    9. ' #' → logprob: -7.930363178253174
    10. 'a' → logprob: -8.305362701416016

Token 223: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.13418376445770264
    2. ' ' → logprob: -2.259183883666992
    3. '[' → logprob: -3.884183883666992
    4. ' [' → logprob: -7.634183883666992
    5. '4' → logprob: -10.009183883666992
    6. '[(' → logprob: -11.384183883666992
    7. '9' → logprob: -11.884183883666992
    8. '[]' → logprob: -12.009183883666992
    9. '(' → logprob: -12.509183883666992
    10. ' [(' → logprob: -12.884183883666992

Token 224: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0005159787251614034
    2. ' ' → logprob: -8.125515937805176
    3. '[' → logprob: -9.125515937805176
    4. 'di' → logprob: -9.750515937805176
    5. '4' → logprob: -10.875515937805176
    6. '```' → logprob: -12.000515937805176
    7. 'diag' → logprob: -12.250515937805176
    8. '6' → logprob: -12.500515937805176
    9. ' diagon' → logprob: -12.500515937805176
    10. 'dr' → logprob: -13.625515937805176

Token 225: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.0789351761341095
    2. 'dire' → logprob: -2.578935146331787
    3. 'direction' → logprob: -10.203935623168945
    4. '-dire' → logprob: -12.453935623168945
    5. 'Directions' → logprob: -13.703935623168945
    6. 'd' → logprob: -13.828935623168945
    7. ' direction' → logprob: -14.203935623168945
    8. '-direction' → logprob: -14.453935623168945
    9. ',' → logprob: -14.828935623168945
    10. ' ' → logprob: -15.578935623168945

Token 226: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21580374240875244
    2. '=' → logprob: -2.340803623199463
    3. 'dd' → logprob: -2.340803623199463
    4. ' dd' → logprob: -6.840803623199463
    5. '#' → logprob: -8.715804100036621
    6. ',' → logprob: -8.965804100036621
    7. '(dd' → logprob: -9.840804100036621
    8. '=
' → logprob: -9.965804100036621
    9. '_dd' → logprob: -10.340804100036621
    10. ' =
' → logprob: -10.465804100036621

Token 227: 'y' (ID: 88)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.21876928210258484
    2. '[' → logprob: -2.3437693119049072
    3. ' (-' → logprob: -2.3437693119049072
    4. ' [' → logprob: -5.968769073486328
    5. '[(' → logprob: -7.093769073486328
    6. '[
' → logprob: -8.343769073486328
    7. '(' → logprob: -8.343769073486328
    8. ' (' → logprob: -8.843769073486328
    9. ' ' → logprob: -9.218769073486328
    10. '
' → logprob: -9.343769073486328

Token 228: ' compris' (ID: 49173)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004699853248894215
    2. ' =' → logprob: -6.25469970703125
    3. ' ,' → logprob: -6.50469970703125
    4. '=' → logprob: -7.50469970703125
    5. ',-' → logprob: -8.62969970703125
    6. '-' → logprob: -8.62969970703125
    7. '+' → logprob: -9.12969970703125
    8. '=-' → logprob: -9.37969970703125
    9. '[-' → logprob: -11.12969970703125
    10. '=[' → logprob: -11.12969970703125

Token 229: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.7885431051254272
    2. ' diagon' → logprob: -1.4135431051254272
    3. 'les' → logprob: -1.6635431051254272
    4. ' les' → logprob: -2.663543224334717
    5. '(-' → logprob: -3.788543224334717
    6. 'diag' → logprob: -5.413543224334717
    7. ' diagonal' → logprob: -5.788543224334717
    8. ',' → logprob: -6.163543224334717
    9. ' (-' → logprob: -6.413543224334717
    10. '-' → logprob: -6.538543224334717

Token 230: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.11329267919063568
    2. 'ale' → logprob: -2.488292694091797
    3. 'al' → logprob: -3.738292694091797
    4. 'als' → logprob: -8.738292694091797
    5. 'aux' → logprob: -10.363292694091797
    6. 'a' → logprob: -10.988292694091797
    7. 'es' → logprob: -11.613292694091797
    8. '
' → logprob: -11.863292694091797
    9. '

' → logprob: -12.113292694091797
    10. '#' → logprob: -12.613292694091797

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17840780317783356
    2. ',' → logprob: -1.9284077882766724
    3. ')
' → logprob: -5.178407669067383
    4. ' ,' → logprob: -5.178407669067383
    5. ' )' → logprob: -5.553407669067383
    6. ']' → logprob: -6.928407669067383
    7. ')]' → logprob: -6.928407669067383
    8. 'dd' → logprob: -8.428407669067383
    9. '])' → logprob: -8.428407669067383
    10. ' )
' → logprob: -9.178407669067383

Token 232: 'dd' (ID: 1183)
  Prédit: 'dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.0037462865002453327
    2. 'd' → logprob: -6.628746509552002
    3. 'ddi' → logprob: -7.128746509552002
    4. 'di' → logprob: -7.753746509552002
    5. 'dde' → logprob: -7.878746509552002
    6. ' dd' → logprob: -8.253746032714844
    7. 'dh' → logprob: -8.628746032714844
    8. 'dx' → logprob: -9.503746032714844
    9. 'ddl' → logprob: -9.878746032714844
    10. 'de' → logprob: -10.253746032714844

Token 233: 'n' (ID: 77)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17670214176177979
    2. '8' → logprob: -2.0517020225524902
    3. '=' → logprob: -3.4267020225524902
    4. '_' → logprob: -7.55170202255249
    5. 'd' → logprob: -8.301702499389648
    6. '2' → logprob: -9.176702499389648
    7. ' ' → logprob: -10.801702499389648
    8. '=[' → logprob: -11.676702499389648
    9. '4' → logprob: -12.051702499389648
    10. ' =[' → logprob: -12.051702499389648

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148798823356628
    2. ' =' → logprob: -1.7014880180358887
    3. '8' → logprob: -9.70148754119873
    4. 'd' → logprob: -12.32648754119873
    5. '=[' → logprob: -12.70148754119873
    6. 'n' → logprob: -13.57648754119873
    7. ' ' → logprob: -13.82648754119873
    8. 'e' → logprob: -13.82648754119873
    9. 'eight' → logprob: -14.82648754119873
    10. '=
' → logprob: -15.07648754119873

Token 235: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16026221215724945
    2. ' [' → logprob: -1.9102622270584106
    3. '[
' → logprob: -11.160262107849121
    4. '[(' → logprob: -11.410262107849121
    5. 'dd' → logprob: -11.535262107849121
    6. ' dd' → logprob: -13.660262107849121
    7. ' ' → logprob: -13.660262107849121
    8. ' [
' → logprob: -14.910262107849121
    9. ' [(' → logprob: -15.660262107849121
    10. '[((' → logprob: -16.160263061523438

Token 236: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (-' → logprob: -15.000000953674316
    4. '-' → logprob: -18.25
    5. '[-' → logprob: -20.5
    6. '   ' → logprob: -20.75
    7. '(+' → logprob: -21.25
    8. ' ' → logprob: -22.875
    9. '(i' → logprob: -22.875
    10. '(x' → logprob: -23.125

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '-' → logprob: -17.0
    4. '১' → logprob: -18.8125
    5. '```' → logprob: -19.5625
    6. '2' → logprob: -19.5625
    7. '１' → logprob: -19.625
    8. ' -' → logprob: -19.6875
    9. '१' → logprob: -19.8125
    10. '
' → logprob: -19.875

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043448375072330236
    2. ',-' → logprob: -8.250434875488281
    3. ' ,' → logprob: -8.875434875488281
    4. '-' → logprob: -10.500434875488281
    5. ' -' → logprob: -12.875434875488281
    6. '<|end|>' → logprob: -13.750434875488281
    7. ',
' → logprob: -14.125434875488281
    8. '1' → logprob: -15.000434875488281
    9. ' ,-' → logprob: -15.000434875488281
    10. ',n' → logprob: -15.375434875488281

Token 239: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028869023080915213
    2. '1' → logprob: -5.877886772155762
    3. ' -' → logprob: -9.502886772155762
    4. ' ' → logprob: -12.002886772155762
    5. '0' → logprob: -13.627886772155762
    6. '(-' → logprob: -18.252887725830078
    7. ')' → logprob: -18.377887725830078
    8. '   ' → logprob: -19.502887725830078
    9. '−' → logprob: -19.565387725830078
    10. '(' → logprob: -19.877887725830078

Token 240: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804895281791687
    2. '1' → logprob: -3.2880489826202393
    3. '0' → logprob: -12.53804874420166
    4. ' ' → logprob: -12.91304874420166
    5. ' -' → logprob: -13.53804874420166
    6. '(-' → logprob: -17.788049697875977
    7. '   ' → logprob: -19.163049697875977
    8. ',' → logprob: -19.413049697875977
    9. '−' → logprob: -19.600549697875977
    10. ')' → logprob: -19.663049697875977

Token 241: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00010735770774772391
    2. ')' → logprob: -9.750107765197754
    3. ',' → logprob: -10.500107765197754
    4. ' ),' → logprob: -11.500107765197754
    5. '),(' → logprob: -12.125107765197754
    6. '),
' → logprob: -12.375107765197754
    7. ',),' → logprob: -13.625107765197754
    8. '),

' → logprob: -15.250107765197754
    9. '7' → logprob: -16.750106811523438
    10. ' ,' → logprob: -16.875106811523438

Token 242: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0002835040504578501
    2. ' (-' → logprob: -8.750283241271973
    3. '-' → logprob: -9.000283241271973
    4. '(' → logprob: -13.375283241271973
    5. ' -' → logprob: -17.50028419494629
    6. ' ' → logprob: -18.75028419494629
    7. '[-' → logprob: -20.37528419494629
    8. ' (' → logprob: -21.00028419494629
    9. '1' → logprob: -21.12528419494629
    10. '0' → logprob: -21.87528419494629

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '-' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -16.625001907348633
    5. '১' → logprob: -17.437501907348633
    6. '१' → logprob: -17.687501907348633
    7. '
' → logprob: -17.875001907348633
    8. '۱' → logprob: -17.937501907348633
    9. ',' → logprob: -18.312501907348633
    10. ' -' → logprob: -18.437501907348633

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008366581052541733
    2. '-' → logprob: -4.883366584777832
    3. ',-' → logprob: -7.508366584777832
    4. '1' → logprob: -8.883366584777832
    5. ' ,' → logprob: -10.133366584777832
    6. ' -' → logprob: -10.383366584777832
    7. '-,' → logprob: -14.633366584777832
    8. ',
' → logprob: -15.133366584777832
    9. '+' → logprob: -15.133366584777832
    10. '7' → logprob: -15.383366584777832

Token 245: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011714138090610504
    2. '1' → logprob: -6.751171588897705
    3. ' ' → logprob: -14.126171112060547
    4. ' -' → logprob: -14.501171112060547
    5. '+' → logprob: -20.001171112060547
    6. '−' → logprob: -20.751171112060547
    7. ')' → logprob: -22.126171112060547
    8. '[' → logprob: -22.751171112060547
    9. ' ' → logprob: -22.751171112060547
    10. '-
' → logprob: -23.001171112060547

Token 246: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804493322968483
    2. '1' → logprob: -3.2880449295043945
    3. ' ' → logprob: -12.913044929504395
    4. ' -' → logprob: -13.788044929504395
    5. '+' → logprob: -17.41304588317871
    6. '−' → logprob: -18.66304588317871
    7. '[' → logprob: -18.91304588317871
    8. '-
' → logprob: -19.28804588317871
    9. '–' → logprob: -20.03804588317871
    10. '```' → logprob: -20.22554588317871

Token 247: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.9875325708417222e-05
    2. ')' → logprob: -10.875029563903809
    3. ' ),' → logprob: -12.250029563903809
    4. '),
' → logprob: -12.500029563903809
    5. '),(' → logprob: -13.750029563903809
    6. ',' → logprob: -14.000029563903809
    7. ',),' → logprob: -16.125030517578125
    8. '],' → logprob: -16.125030517578125
    9. '),

' → logprob: -17.000030517578125
    10. '(' → logprob: -17.250030517578125

Token 248: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.10935776680707932
    2. '(' → logprob: -2.3593578338623047
    3. ' (-' → logprob: -4.859357833862305
    4. ' (' → logprob: -6.609357833862305
    5. '0' → logprob: -12.859357833862305
    6. ' ' → logprob: -13.109357833862305
    7. '-' → logprob: -13.359357833862305
    8. ' -' → logprob: -18.234357833862305
    9. ',' → logprob: -18.359357833862305
    10. '（' → logprob: -18.609357833862305

Token 249: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06358464807271957
    2. '0' → logprob: -2.813584566116333
    3. '(-' → logprob: -7.063584804534912
    4. ' -' → logprob: -7.813584804534912
    5. ' ' → logprob: -8.063584327697754
    6. '(' → logprob: -10.188584327697754
    7. ' (-' → logprob: -13.438584327697754
    8. '1' → logprob: -14.438584327697754
    9. ',' → logprob: -14.938584327697754
    10. '),' → logprob: -15.063584327697754

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. '1' → logprob: -11.375029563903809
    3. '-' → logprob: -11.500029563903809
    4. ' ,' → logprob: -12.250029563903809
    5. ',-' → logprob: -12.875029563903809
    6. ')' → logprob: -15.500029563903809
    7. ' -' → logprob: -15.875029563903809
    8. '```' → logprob: -16.375030517578125
    9. '),' → logprob: -16.750030517578125
    10. ' ' → logprob: -16.750030517578125

Token 251: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5853093266487122
    2. '1' → logprob: -0.8353093266487122
    3. ' ' → logprob: -4.8353095054626465
    4. ' -' → logprob: -6.5853095054626465
    5. '```' → logprob: -14.085309028625488
    6. '0' → logprob: -15.085309028625488
    7. '−' → logprob: -16.335309982299805
    8. '  ' → logprob: -16.960309982299805
    9. '   ' → logprob: -17.210309982299805
    10. ')' → logprob: -17.210309982299805

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01608387380838394
    2. '-' → logprob: -4.141083717346191
    3. ' ' → logprob: -10.016083717346191
    4. ' -' → logprob: -12.266083717346191
    5. '```' → logprob: -16.016084671020508
    6. '
' → logprob: -16.141084671020508
    7. '0' → logprob: -17.766084671020508
    8. '−' → logprob: -17.891084671020508
    9. '  ' → logprob: -18.016084671020508
    10. ')' → logprob: -18.078584671020508

Token 253: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -6.988221684878226e-06
    2. ')' → logprob: -12.125006675720215
    3. '),
' → logprob: -14.000006675720215
    4. ' ),' → logprob: -14.750006675720215
    5. '),(' → logprob: -16.37500762939453
    6. ',' → logprob: -16.62500762939453
    7. '],' → logprob: -16.75000762939453
    8. '),

' → logprob: -17.37500762939453
    9. ')]' → logprob: -17.62500762939453
    10. ')],' → logprob: -18.00000762939453

Token 254: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2007883671903983e-05
    2. ' (' → logprob: -10.750021934509277
    3. '(-' → logprob: -14.875021934509277
    4. '1' → logprob: -16.500022888183594
    5. ' ' → logprob: -20.875022888183594
    6. '(+' → logprob: -21.875022888183594
    7. '（' → logprob: -22.375022888183594
    8. '(True' → logprob: -23.125022888183594
    9. '{' → logprob: -23.250022888183594
    10. ',' → logprob: -23.500022888183594

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001126026691053994
    2. '(' → logprob: -9.125112533569336
    3. '-' → logprob: -12.875112533569336
    4. '(-' → logprob: -14.500112533569336
    5. ' ' → logprob: -14.875112533569336
    6. '0' → logprob: -15.000112533569336
    7. ' (' → logprob: -17.750112533569336
    8. '
' → logprob: -19.750112533569336
    9. '{' → logprob: -20.250112533569336
    10. '```' → logprob: -20.250112533569336

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003000696888193488
    2. '-' → logprob: -8.625300407409668
    3. '1' → logprob: -10.125300407409668
    4. ' ,' → logprob: -10.500300407409668
    5. ',-' → logprob: -10.500300407409668
    6. '0' → logprob: -10.750300407409668
    7. ' -' → logprob: -12.875300407409668
    8. ' ' → logprob: -14.625300407409668
    9. '```' → logprob: -14.875300407409668
    10. '2' → logprob: -16.50029945373535

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7246379852294922
    2. '1' → logprob: -0.7246379852294922
    3. ' ' → logprob: -3.474637985229492
    4. '-' → logprob: -10.724637985229492
    5. ' -' → logprob: -12.474637985229492
    6. '```' → logprob: -14.787137985229492
    7. '   ' → logprob: -15.662137985229492
    8. '  ' → logprob: -15.849637985229492
    9. ' ' → logprob: -16.412137985229492
    10. ')' → logprob: -16.474637985229492

Token 258: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5770641565322876
    2. '1' → logprob: -0.8270641565322876
    3. ' ' → logprob: -6.827064037322998
    4. '-' → logprob: -10.202064514160156
    5. ' -' → logprob: -13.639564514160156
    6. '```' → logprob: -14.264564514160156
    7. '   ' → logprob: -15.514564514160156
    8. ' ' → logprob: -15.764564514160156
    9. '  ' → logprob: -16.202064514160156
    10. ')' → logprob: -16.389564514160156

Token 259: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1994775377388578e-05
    2. ')' → logprob: -12.000012397766113
    3. ',' → logprob: -13.000012397766113
    4. '),(' → logprob: -13.125012397766113
    5. '(' → logprob: -13.875012397766113
    6. '),
' → logprob: -14.875012397766113
    7. ' ),' → logprob: -15.875012397766113
    8. ',),' → logprob: -16.750011444091797
    9. '],' → logprob: -16.875011444091797
    10. '),

' → logprob: -17.625011444091797

Token 260: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. ' (' → logprob: -11.125015258789062
    3. '1' → logprob: -14.875015258789062
    4. ',' → logprob: -20.375015258789062
    5. '   ' → logprob: -22.000015258789062
    6. ' ' → logprob: -22.000015258789062
    7. '```' → logprob: -22.250015258789062
    8. '（' → logprob: -22.500015258789062
    9. '(True' → logprob: -22.500015258789062
    10. '﻿' → logprob: -22.875015258789062

Token 261: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38740524649620056
    2. '1' → logprob: -1.137405276298523
    3. '0' → logprob: -7.8874053955078125
    4. ' (' → logprob: -8.762405395507812
    5. ' ' → logprob: -13.137405395507812
    6. '```' → logprob: -15.762405395507812
    7. ',' → logprob: -17.887405395507812
    8. ')' → logprob: -18.637405395507812
    9. '   ' → logprob: -18.637405395507812
    10. '（' → logprob: -18.637405395507812

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001530216890387237
    2. '0' → logprob: -6.501530170440674
    3. ' ,' → logprob: -10.501530647277832
    4. ' ' → logprob: -15.876530647277832
    5. '1' → logprob: -16.751529693603516
    6. ',
' → logprob: -16.751529693603516
    7. ')' → logprob: -18.314029693603516
    8. '```' → logprob: -19.314029693603516
    9. '﻿' → logprob: -19.376529693603516
    10. '2' → logprob: -19.376529693603516

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '1' → logprob: -15.626032829284668
    4. '-' → logprob: -16.626033782958984
    5. ' ' → logprob: -17.126033782958984
    6. '۰' → logprob: -17.938533782958984
    7. '```' → logprob: -18.501033782958984
    8. ' -' → logprob: -18.563533782958984
    9. '   ' → logprob: -18.688533782958984
    10. '  ' → logprob: -19.063533782958984

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '-' → logprob: -17.000179290771484
    4. ' ' → logprob: -17.250179290771484
    5. '1' → logprob: -17.312679290771484
    6. '```' → logprob: -17.437679290771484
    7. '۰' → logprob: -17.625179290771484
    8. '   ' → logprob: -18.062679290771484
    9. '
' → logprob: -19.125179290771484
    10. '  ' → logprob: -19.250179290771484

Token 265: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02068447880446911
    2. ',' → logprob: -3.8956844806671143
    3. ')' → logprob: -9.020684242248535
    4. ' ),' → logprob: -11.145684242248535
    5. ' ,' → logprob: -13.020684242248535
    6. '),(' → logprob: -13.020684242248535
    7. ',),' → logprob: -13.395684242248535
    8. '),
' → logprob: -14.020684242248535
    9. '],' → logprob: -16.27068519592285
    10. '(' → logprob: -16.39568519592285

Token 266: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5716304410016164e-05
    2. ' (' → logprob: -10.250035285949707
    3. '1' → logprob: -15.250035285949707
    4. ',' → logprob: -20.000036239624023
    5. ' ' → logprob: -20.875036239624023
    6. '(
' → logprob: -21.000036239624023
    7. '```' → logprob: -22.000036239624023
    8. '0' → logprob: -22.500036239624023
    9. '(-' → logprob: -22.750036239624023
    10. '
' → logprob: -23.375036239624023

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.334533878136426e-05
    2. ' ' → logprob: -10.250042915344238
    3. '(' → logprob: -12.000042915344238
    4. '0' → logprob: -13.375042915344238
    5. '```' → logprob: -16.875043869018555
    6. ' (' → logprob: -17.750043869018555
    7. '-' → logprob: -19.375043869018555
    8. '   ' → logprob: -20.125043869018555
    9. ',' → logprob: -20.250043869018555
    10. '	' → logprob: -20.500043869018555

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.417976379045285e-05
    2. ',-' → logprob: -10.500043869018555
    3. '1' → logprob: -11.375043869018555
    4. '-' → logprob: -13.000043869018555
    5. ' ,' → logprob: -13.375043869018555
    6. ' -' → logprob: -14.375043869018555
    7. ',
' → logprob: -15.000043869018555
    8. '0' → logprob: -15.625043869018555
    9. ')' → logprob: -16.625043869018555
    10. '```' → logprob: -17.000043869018555

Token 269: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.9186317482963204e-05
    2. '1' → logprob: -10.000049591064453
    3. ' -' → logprob: -12.500049591064453
    4. ' ' → logprob: -17.125049591064453
    5. '```' → logprob: -18.250049591064453
    6. '−' → logprob: -18.875049591064453
    7. '0' → logprob: -19.875049591064453
    8. ')' → logprob: -20.625049591064453
    9. '–' → logprob: -21.125049591064453
    10. '-
' → logprob: -21.750049591064453

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. ',' → logprob: -16.750059127807617
    4. '```' → logprob: -17.312559127807617
    5. ' ' → logprob: -18.187559127807617
    6. ')' → logprob: -18.187559127807617
    7. '
' → logprob: -18.250059127807617
    8. '１' → logprob: -19.000059127807617
    9. '-' → logprob: -19.125059127807617
    10. '0' → logprob: -19.437559127807617

Token 271: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008151084766723216
    2. ',' → logprob: -7.125814914703369
    3. ')' → logprob: -12.500815391540527
    4. ' ),' → logprob: -12.625815391540527
    5. '),(' → logprob: -12.750815391540527
    6. '(' → logprob: -15.500815391540527
    7. ',),' → logprob: -15.625815391540527
    8. '],' → logprob: -15.875815391540527
    9. '},' → logprob: -16.50081443786621
    10. ' ,' → logprob: -16.75081443786621

Token 272: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5332478142227046e-05
    2. ' (' → logprob: -11.125015258789062
    3. '0' → logprob: -14.625015258789062
    4. '(-' → logprob: -18.375015258789062
    5. ',' → logprob: -20.875015258789062
    6. ' ' → logprob: -21.375015258789062
    7. '[' → logprob: -23.125015258789062
    8. ')' → logprob: -23.250015258789062
    9. ' ' → logprob: -23.250015258789062
    10. '(
' → logprob: -23.750015258789062

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20143039524555206
    2. '(' → logprob: -1.7014304399490356
    3. '(-' → logprob: -11.326430320739746
    4. ' (' → logprob: -12.326430320739746
    5. ' ' → logprob: -15.451430320739746
    6. '
' → logprob: -16.201431274414062
    7. '[' → logprob: -16.576431274414062
    8. '```' → logprob: -16.701431274414062
    9. ',' → logprob: -16.826431274414062
    10. '-' → logprob: -17.201431274414062

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.315936429426074e-05
    2. '-' → logprob: -9.625082969665527
    3. ',-' → logprob: -11.625082969665527
    4. ' ,' → logprob: -12.750082969665527
    5. ' -' → logprob: -12.750082969665527
    6. '1' → logprob: -13.000082969665527
    7. ',
' → logprob: -17.000083923339844
    8. '0' → logprob: -17.375083923339844
    9. '```' → logprob: -17.625083923339844
    10. ' ' → logprob: -18.875083923339844

Token 275: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4418171455617994e-05
    2. ' -' → logprob: -10.250044822692871
    3. '1' → logprob: -11.625044822692871
    4. ' ' → logprob: -18.500043869018555
    5. '```' → logprob: -19.875043869018555
    6. '−' → logprob: -20.500043869018555
    7. '0' → logprob: -20.750043869018555
    8. '   ' → logprob: -22.000043869018555
    9. '‑' → logprob: -22.375043869018555
    10. ')' → logprob: -22.750043869018555

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.5
    3. ' ' → logprob: -18.0
    4. '```' → logprob: -19.0
    5. '0' → logprob: -19.9375
    6. '
' → logprob: -20.0625
    7. '2' → logprob: -20.3125
    8. '4' → logprob: -20.75
    9. '7' → logprob: -21.0
    10. '3' → logprob: -21.0625

Token 277: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00018363336857873946
    2. ',' → logprob: -8.750184059143066
    3. ' ),' → logprob: -10.875184059143066
    4. '),(' → logprob: -13.000184059143066
    5. '],' → logprob: -13.250184059143066
    6. ')' → logprob: -14.125184059143066
    7. ',),' → logprob: -14.375184059143066
    8. ')]' → logprob: -14.500184059143066
    9. ' ,' → logprob: -16.25018310546875
    10. ')],' → logprob: -16.75018310546875

Token 278: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.4868770196917467e-05
    2. '-' → logprob: -10.625024795532227
    3. ' (-' → logprob: -14.750024795532227
    4. '(' → logprob: -16.000024795532227
    5. '   ' → logprob: -17.625024795532227
    6. '{-' → logprob: -19.250024795532227
    7. '[-' → logprob: -19.375024795532227
    8. '
' → logprob: -20.125024795532227
    9. ')' → logprob: -20.250024795532227
    10. ' ' → logprob: -20.375024795532227

Token 279: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005261272192001343
    2. '1' → logprob: -5.255261421203613
    3. ' -' → logprob: -10.880261421203613
    4. '0' → logprob: -12.005261421203613
    5. '(-' → logprob: -13.005261421203613
    6. '{-' → logprob: -16.255260467529297
    7. '−' → logprob: -16.755260467529297
    8. '```' → logprob: -16.880260467529297
    9. ')' → logprob: -17.005260467529297
    10. '(' → logprob: -17.505260467529297

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022117885237094015
    2. '0' → logprob: -8.750221252441406
    3. '1' → logprob: -10.250221252441406
    4. '-' → logprob: -10.750221252441406
    5. ',-' → logprob: -12.750221252441406
    6. ' -' → logprob: -14.000221252441406
    7. ' ,' → logprob: -14.000221252441406
    8. ',
' → logprob: -14.250221252441406
    9. ')' → logprob: -14.750221252441406
    10. '2' → logprob: -17.000221252441406

Token 281: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006585574708878994
    2. '0' → logprob: -5.506585597991943
    3. '1' → logprob: -6.006585597991943
    4. ' -' → logprob: -10.131585121154785
    5. ' ' → logprob: -14.006585121154785
    6. ')' → logprob: -14.506585121154785
    7. '\-' → logprob: -16.0065860748291
    8. '```' → logprob: -16.0065860748291
    9. '−' → logprob: -16.8815860748291
    10. '–' → logprob: -17.2565860748291

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.375
    4. ')' → logprob: -18.875
    5. ']' → logprob: -19.8125
    6. '-' → logprob: -19.8125
    7. '}' → logprob: -20.9375
    8. '１' → logprob: -21.0
    9. '4' → logprob: -21.0625
    10. '2' → logprob: -21.1875

Token 283: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8219583075260743e-05
    2. ']' → logprob: -10.625038146972656
    3. ')' → logprob: -11.250038146972656
    4. ')]
' → logprob: -14.750038146972656
    5. '')]' → logprob: -15.875038146972656
    6. '),' → logprob: -16.125038146972656
    7. ' )' → logprob: -16.125038146972656
    8. '])' → logprob: -17.000038146972656
    9. ')]

' → logprob: -17.500038146972656
    10. '])]' → logprob: -17.500038146972656

Token 284: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041148843592964113
    2. 'class' → logprob: -8.625411033630371
    3. '#' → logprob: -8.875411033630371
    4. 'n' → logprob: -10.000411033630371
    5. '
' → logprob: -11.250411033630371
    6. 'import' → logprob: -11.625411033630371
    7. '

' → logprob: -11.875411033630371
    8. 'from' → logprob: -12.000411033630371
    9. 'N' → logprob: -13.250411033630371
    10. '\' → logprob: -13.500411033630371

Token 285: ' LI' (ID: 14875)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.44463473558425903
    2. ' gcd' → logprob: -1.6946346759796143
    3. ' factorial' → logprob: -2.8196346759796143
    4. ' dfs' → logprob: -3.0696346759796143
    5. ' pow' → logprob: -4.194634914398193
    6. ' solve' → logprob: -4.444634914398193
    7. ' is' → logprob: -5.069634914398193
    8. ' binary' → logprob: -5.194634914398193
    9. ' def' → logprob: -5.444634914398193
    10. ' fast' → logprob: -5.569634914398193

Token 286: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7453454732894897
    2. 'ST' → logprob: -1.6203454732894897
    3. 'st' → logprob: -2.4953455924987793
    4. 'ne' → logprob: -2.6203455924987793
    5. '()' → logprob: -2.7453455924987793
    6. 'N' → logprob: -2.8703455924987793
    7. 'NE' → logprob: -3.6203455924987793
    8. '():
' → logprob: -4.245345592498779
    9. 'n' → logprob: -5.495345592498779
    10. 'Ne' → logprob: -6.495345592498779

Token 287: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5794758796691895
    2. ' return' → logprob: -0.8294758796691895
    3. ':return' → logprob: -6.8294758796691895
    4. '()' → logprob: -7.2044758796691895
    5. ':' → logprob: -7.5794758796691895
    6. '():' → logprob: -7.7044758796691895
    7. 'eturn' → logprob: -8.204475402832031
    8. '	return' → logprob: -8.829475402832031
    9. ' =' → logprob: -9.204475402832031
    10. '=' → logprob: -9.704475402832031

Token 288: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0024819616228342056
    2. ' return' → logprob: -6.002481937408447
    3. 'eturn' → logprob: -12.502482414245605
    4. 'ret' → logprob: -13.877482414245605
    5. '   ' → logprob: -14.127482414245605
    6. 'list' → logprob: -14.877482414245605
    7. '	return' → logprob: -15.252482414245605
    8. ' ' → logprob: -15.502482414245605
    9. 'map' → logprob: -17.12748146057129
    10. '  ' → logprob: -18.12748146057129

Token 289: '   ' (ID: 271)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.5760145783424377
    2. 'return' → logprob: -0.8260145783424377
    3. ' return' → logprob: -10.701014518737793
    4. 'et' → logprob: -11.201014518737793
    5. 'urn' → logprob: -11.826014518737793
    6. 'list' → logprob: -11.826014518737793
    7. '   ' → logprob: -11.951014518737793
    8. 'turn' → logprob: -12.326014518737793
    9. 'ist' → logprob: -12.451014518737793
    10. 'st' → logprob: -12.951014518737793

Token 290: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005207431968301535
    2. ' return' → logprob: -7.625520706176758
    3. 'ret' → logprob: -11.000520706176758
    4. '   ' → logprob: -11.750520706176758
    5. 'eturn' → logprob: -12.750520706176758
    6. 'r' → logprob: -12.750520706176758
    7. '"""' → logprob: -14.625520706176758
    8. ':return' → logprob: -14.625520706176758
    9. 're' → logprob: -14.875520706176758
    10. '	return' → logprob: -15.375520706176758

Token 291: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1649293154478073
    2. 'ne' → logprob: -2.4149293899536133
    3. 'n' → logprob: -4.289929389953613
    4. 'nt' → logprob: -4.414929389953613
    5. 'e' → logprob: -4.664929389953613
    6. 'st' → logprob: -5.289929389953613
    7. '   ' → logprob: -5.664929389953613
    8. ' la' → logprob: -5.789929389953613
    9. 'map' → logprob: -5.789929389953613
    10. ' ()' → logprob: -6.289929389953613

Token 292: ' ligne' (ID: 19583)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2762588262557983
    2. 'ligne' → logprob: -1.4012588262557983
    3. 'liste' → logprob: -1.7762588262557983
    4. 'l' → logprob: -1.7762588262557983
    5. 'list' → logprob: -3.151258945465088
    6. 'map' → logprob: -3.151258945465088
    7. 'line' → logprob: -3.901258945465088
    8. ' ligne' → logprob: -4.401258945465088
    9. ' liste' → logprob: -5.901258945465088
    10. '()' → logprob: -6.026258945465088

Token 293: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25330954790115356
    2. '().' → logprob: -1.5033094882965088
    3. '.strip' → logprob: -7.378309726715088
    4. '()
' → logprob: -8.37830924987793
    5. ' ()' → logprob: -9.00330924987793
    6. '()

' → logprob: -9.37830924987793
    7. '.' → logprob: -9.62830924987793
    8. '():' → logprob: -9.75330924987793
    9. ' =' → logprob: -10.25330924987793
    10. ' ' → logprob: -11.00330924987793

Token 294: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.33596375584602356
    2. 'stdin' → logprob: -1.9609637260437012
    3. 'l' → logprob: -2.835963726043701
    4. 'input' → logprob: -2.960963726043701
    5. 'la' → logprob: -3.585963726043701
    6. ' sys' → logprob: -5.585963726043701
    7. ' stdin' → logprob: -6.710963726043701
    8. ' la' → logprob: -7.210963726043701
    9. ' input' → logprob: -7.960963726043701
    10. ' l' → logprob: -8.33596420288086

Token 295: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04945841804146767
    2. 'input' → logprob: -3.5494585037231445
    3. 'entrée' → logprob: -4.0494585037231445
    4. 'a' → logprob: -6.7994585037231445
    5. 'stdin' → logprob: -8.049458503723145
    6. ''' → logprob: -8.424458503723145
    7. 'e' → logprob: -9.174458503723145
    8. 'sys' → logprob: -9.174458503723145
    9. ''ent' → logprob: -9.549458503723145
    10. '’entrée' → logprob: -10.549458503723145

Token 296: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08251222968101501
    2. '().' → logprob: -2.582512140274048
    3. '():' → logprob: -7.082512378692627
    4. '   ' → logprob: -7.832512378692627
    5. ' ()' → logprob: -7.957512378692627
    6. 'n' → logprob: -8.082511901855469
    7. '()
' → logprob: -8.207511901855469
    8. '(),' → logprob: -8.582511901855469
    9. '(stdin' → logprob: -8.832511901855469
    10. 'strip' → logprob: -9.707511901855469

Token 297: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6618787050247192
    2. '().' → logprob: -1.1618787050247192
    3. ' et' → logprob: -2.5368785858154297
    4. '   ' → logprob: -2.9118785858154297
    5. ',' → logprob: -4.53687858581543
    6. '()
' → logprob: -4.91187858581543
    7. 'et' → logprob: -5.28687858581543
    8. ' =' → logprob: -5.66187858581543
    9. '.' → logprob: -5.78687858581543
    10. '():' → logprob: -6.28687858581543

Token 298: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43619078397750854
    2. 'return' → logprob: -1.1861908435821533
    3. '   ' → logprob: -3.3111908435821533
    4. ' retourne' → logprob: -4.686190605163574
    5. 'ret' → logprob: -7.811190605163574
    6. ' retour' → logprob: -8.311190605163574
    7. 'split' → logprob: -8.686190605163574
    8. ' list' → logprob: -8.686190605163574
    9. ' et' → logprob: -8.686190605163574
    10. 'strip' → logprob: -8.811190605163574

Token 299: ' sé' (ID: 7462)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07977546751499176
    2. 'ret' → logprob: -2.95477557182312
    3. ' return' → logprob: -3.82977557182312
    4. ' retourne' → logprob: -6.829775333404541
    5. 'strip' → logprob: -7.204775333404541
    6. 'r' → logprob: -8.3297758102417
    7. 'split' → logprob: -8.5797758102417
    8. 'rstrip' → logprob: -8.9547758102417
    9. 'ren' → logprob: -9.0797758102417
    10. 'liste' → logprob: -9.5797758102417

Token 300: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0651087760925293
    2. 'quence' → logprob: -3.6901087760925293
    3. 'r' → logprob: -3.9401087760925293
    4. 'par' → logprob: -4.940108776092529
    5. 'lect' → logprob: -5.815108776092529
    6. 'rie' → logprob: -6.315108776092529
    7. 'parer' → logprob: -7.065108776092529
    8. 'ri' → logprob: -7.190108776092529
    9. 'rap' → logprob: -7.815108776092529
    10. 'Par' → logprob: -7.940108776092529

Token 301: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046360474079847336
    2. 'en' → logprob: -3.546360492706299
    3. ' en' → logprob: -4.671360492706299
    4. 'et' → logprob: -5.921360492706299
    5. 'par' → logprob: -6.546360492706299
    6. '=' → logprob: -6.796360492706299
    7. '().' → logprob: -7.796360492706299
    8. 'strip' → logprob: -8.42136001586914
    9. '()
' → logprob: -8.54636001586914
    10. ' =' → logprob: -8.54636001586914

Token 302: ' espaces' (ID: 98361)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1090608686208725
    2. 'des' → logprob: -2.484060764312744
    3. ''' → logprob: -5.234060764312744
    4. ' espaces' → logprob: -5.359060764312744
    5. 'spaces' → logprob: -6.234060764312744
    6. 'un' → logprob: -6.359060764312744
    7. ' un' → logprob: -6.609060764312744
    8. 'les' → logprob: -7.359060764312744
    9. ' spaces' → logprob: -7.609060764312744
    10. '"' → logprob: -7.859060764312744

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2971545457839966
    2. ' et' → logprob: -1.4221545457839966
    3. ')' → logprob: -5.547154426574707
    4. 'et' → logprob: -5.797154426574707
    5. '   ' → logprob: -5.922154426574707
    6. '()' → logprob: -6.047154426574707
    7. ' ,' → logprob: -7.172154426574707
    8. '.' → logprob: -7.297154426574707
    9. ' and' → logprob: -7.422154426574707
    10. ' puis' → logprob: -8.047154426574707

Token 304: ' la' (ID: 557)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.6965248584747314
    2. ' et' → logprob: -0.9465248584747314
    3. '   ' → logprob: -2.9465248584747314
    4. 'return' → logprob: -3.8215248584747314
    5. ' return' → logprob: -3.8215248584747314
    6. ' puis' → logprob: -4.571524620056152
    7. ' retourne' → logprob: -5.696524620056152
    8. ' and' → logprob: -6.696524620056152
    9. 'p' → logprob: -6.821524620056152
    10. 'ret' → logprob: -7.446524620056152

Token 305: ' convert' (ID: 8452)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.134115070104599
    2. 'return' → logprob: -3.009114980697632
    3. ' map' → logprob: -3.134114980697632
    4. 'ret' → logprob: -4.384115219116211
    5. ' retourne' → logprob: -4.634115219116211
    6. 'liste' → logprob: -5.509115219116211
    7. ' return' → logprob: -6.384115219116211
    8. 'ren' → logprob: -6.509115219116211
    9. 'list' → logprob: -6.759115219116211
    10. ' liste' → logprob: -7.259115219116211

Token 306: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00020509003661572933
    2. ' it' → logprob: -8.750205039978027
    3. '_it' → logprob: -11.375205039978027
    4. '```' → logprob: -12.000205039978027
    5. '   ' → logprob: -12.125205039978027
    6. 'i' → logprob: -12.125205039978027
    7. 't' → logprob: -12.250205039978027
    8. 'ie' → logprob: -13.500205039978027
    9. '
' → logprob: -13.625205039978027
    10. '[it' → logprob: -13.625205039978027

Token 307: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.02975662797689438
    2. ' en' → logprob: -3.529756546020508
    3. ' ' → logprob: -13.654756546020508
    4. '_en' → logprob: -13.779756546020508
    5. '()' → logprob: -14.029756546020508
    6. '[]' → logprob: -14.529756546020508
    7. '(en' → logprob: -14.529756546020508
    8. '```' → logprob: -14.529756546020508
    9. '   ' → logprob: -14.779756546020508
    10. '	en' → logprob: -15.279756546020508

Token 308: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3737050294876099
    2. 'list' → logprob: -1.3737050294876099
    3. 'ints' → logprob: -1.9987050294876099
    4. ' des' → logprob: -2.1237049102783203
    5. 'des' → logprob: -2.2487049102783203
    6. 'une' → logprob: -2.9987049102783203
    7. 'liste' → logprob: -3.3737049102783203
    8. ' une' → logprob: -4.12370491027832
    9. ' list' → logprob: -4.37370491027832
    10. 'inte' → logprob: -4.62370491027832

Token 309: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00033188972156494856
    2. 'ier' → logprob: -8.37533187866211
    3. 'ières' → logprob: -9.37533187866211
    4. 't' → logprob: -11.62533187866211
    5. 'i' → logprob: -12.62533187866211
    6. 'ière' → logprob: -13.00033187866211
    7. 'ers' → logprob: -14.75033187866211
    8. 'ités' → logprob: -15.00033187866211
    9. '```' → logprob: -15.50033187866211
    10. 'ires' → logprob: -15.87533187866211

Token 310: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.4393366575241089
    2. ',' → logprob: -1.5643366575241089
    3. '()' → logprob: -2.5643367767333984
    4. 'et' → logprob: -3.3143367767333984
    5. 'list' → logprob: -4.939336776733398
    6. ' list' → logprob: -5.064336776733398
    7. '[]' → logprob: -5.564336776733398
    8. '   ' → logprob: -5.689336776733398
    9. '.' → logprob: -6.064336776733398
    10. ')' → logprob: -6.064336776733398

Token 311: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5248084664344788
    2. ' retourne' → logprob: -1.399808406829834
    3. 'return' → logprob: -1.899808406829834
    4. ' les' → logprob: -4.649808406829834
    5. ' retour' → logprob: -7.024808406829834
    6. ' returns' → logprob: -7.274808406829834
    7. ' ren' → logprob: -7.649808406829834
    8. ' la' → logprob: -8.399808883666992
    9. 'ret' → logprob: -10.024808883666992
    10. ' revient' → logprob: -10.399808883666992

Token 312: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.008151751011610031
    2. 'la' → logprob: -5.508151531219482
    3. ' une' → logprob: -5.758151531219482
    4. '[]' → logprob: -7.883151531219482
    5. ' list' → logprob: -8.25815200805664
    6. ' ' → logprob: -9.25815200805664
    7. 'une' → logprob: -10.63315200805664
    8. 'list' → logprob: -10.63315200805664
    9. ' ' → logprob: -10.75815200805664
    10. ' leur' → logprob: -10.75815200805664

Token 313: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.16241328418254852
    2. 'liste' → logprob: -2.4124133586883545
    3. ' list' → logprob: -3.1624133586883545
    4. 'list' → logprob: -4.037413120269775
    5. ' lista' → logprob: -9.287413597106934
    6. 'lst' → logprob: -9.662413597106934
    7. 'lista' → logprob: -10.037413597106934
    8. 's' → logprob: -10.412413597106934
    9. '[]' → logprob: -10.412413597106934
    10. ' listes' → logprob: -10.912413597106934

Token 314: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1378674954175949
    2. '[int' → logprob: -2.7628674507141113
    3. '()' → logprob: -3.3878674507141113
    4. '[' → logprob: -4.762867450714111
    5. ' de' → logprob: -5.262867450714111
    6. 'des' → logprob: -5.387867450714111
    7. ' of' → logprob: -5.887867450714111
    8. ' ' → logprob: -6.387867450714111
    9. '[]' → logprob: -6.762867450714111
    10. '(
' → logprob: -6.887867450714111

Token 315: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.3207954466342926
    2. 'e' → logprob: -2.3207955360412598
    3. 'int' → logprob: -3.1957955360412598
    4. 'ent' → logprob: -3.3207955360412598
    5. 'es' → logprob: -3.9457955360412598
    6. '[int' → logprob: -4.07079553604126
    7. ''int' → logprob: -4.19579553604126
    8. 'inte' → logprob: -4.44579553604126
    9. 'ints' → logprob: -4.44579553604126
    10. ' int' → logprob: -5.69579553604126

Token 316: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01214380282908678
    2. 't' → logprob: -5.137143611907959
    3. 'ières' → logprob: -5.137143611907959
    4. 'i' → logprob: -9.387144088745117
    5. 'ités' → logprob: -9.637144088745117
    6. 'ti' → logprob: -10.512144088745117
    7. 'er' → logprob: -10.762144088745117
    8. 'tes' → logprob: -10.887144088745117
    9. 'ieres' → logprob: -11.387144088745117
    10. 'etes' → logprob: -11.387144088745117

Token 317: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.27586156129837036
    2. ':' → logprob: -2.1508615016937256
    3. '()' → logprob: -2.5258615016937256
    4. ':
' → logprob: -4.400861740112305
    5. '():
' → logprob: -4.900861740112305
    6. '()
' → logprob: -5.025861740112305
    7. '   ' → logprob: -5.525861740112305
    8. ' :' → logprob: -6.150861740112305
    9. '):' → logprob: -6.275861740112305
    10. '.' → logprob: -6.400861740112305

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04536590725183487
    2. '"""' → logprob: -3.420365810394287
    3. 'return' → logprob: -5.045365810394287
    4. '"""
' → logprob: -5.920365810394287
    5. ' return' → logprob: -6.795365810394287
    6. '""' → logprob: -7.420365810394287
    7. '    
' → logprob: -8.545366287231445
    8. ')' → logprob: -9.045366287231445
    9. '
' → logprob: -9.170366287231445
    10. 'def' → logprob: -9.420366287231445

Token 319: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3035753071308136
    2. ' return' → logprob: -1.9285752773284912
    3. '   ' → logprob: -2.678575277328491
    4. ')' → logprob: -3.303575277328491
    5. '):' → logprob: -5.80357551574707
    6. ':return' → logprob: -6.17857551574707
    7. '"""' → logprob: -6.30357551574707
    8. '()' → logprob: -7.05357551574707
    9. '():' → logprob: -7.80357551574707
    10. '"""
' → logprob: -7.92857551574707

Token 320: ':
' (ID: 734)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06479060649871826
    2. ' []' → logprob: -3.439790725708008
    3. ':list' → logprob: -4.814790725708008
    4. 'list' → logprob: -5.064790725708008
    5. ' List' → logprob: -5.564790725708008
    6. ' [' → logprob: -5.689790725708008
    7. 'List' → logprob: -6.064790725708008
    8. ':' → logprob: -6.064790725708008
    9. ' :' → logprob: -6.814790725708008
    10. '[]' → logprob: -7.064790725708008

Token 321: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8617850542068481
    2. ' list' → logprob: -1.1117850542068481
    3. ' List' → logprob: -2.2367849349975586
    4. 'List' → logprob: -2.2367849349975586
    5. 'list' → logprob: -3.3617849349975586
    6. '[List' → logprob: -8.236784934997559
    7. '[list' → logprob: -10.236784934997559
    8. '    ' → logprob: -10.986784934997559
    9. ' [' → logprob: -12.236784934997559
    10. ' ' → logprob: -12.361784934997559

Token 322: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.31359925866127014
    2. 'list' (adapté à ' list') → logprob: -1.3135992288589478
    3. ' list' → logprob: -8.313599586486816
    4. ' List' → logprob: -9.313599586486816
    5. '   ' → logprob: -13.563599586486816
    6. '[List' → logprob: -14.313599586486816
    7. '_list' → logprob: -16.0635986328125
    8. '[list' → logprob: -16.6885986328125
    9. 'int' → logprob: -17.8135986328125
    10. 'typing' → logprob: -17.9385986328125

Token 323: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.4259644558478612e-05
    2. '<int' → logprob: -11.250014305114746
    3. 'int' → logprob: -14.500014305114746
    4. '(int' → logprob: -14.750014305114746
    5. ' of' → logprob: -15.375014305114746
    6. '[' → logprob: -17.37501335144043
    7. '=int' → logprob: -17.37501335144043
    8. '[Int' → logprob: -17.87501335144043
    9. ']int' → logprob: -18.00001335144043
    10. 'of' → logprob: -18.87501335144043

Token 324: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.541112427134067e-05
    2. ' int' → logprob: -9.500075340270996
    3. '[int' → logprob: -15.000075340270996
    4. 'ints' → logprob: -16.000076293945312
    5. '   ' → logprob: -18.375076293945312
    6. '<int' → logprob: -19.125076293945312
    7. '	int' → logprob: -19.500076293945312
    8. 'inte' → logprob: -19.625076293945312
    9. '(int' → logprob: -19.750076293945312
    10. ':int' → logprob: -20.125076293945312

Token 325: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6367274522781372
    2. ':
' → logprob: -0.7617274522781372
    3. '
' → logprob: -7.136727333068848
    4. '():' → logprob: -7.261727333068848
    5. '[int' → logprob: -7.386727333068848
    6. '():
' → logprob: -7.636727333068848
    7. ':return' → logprob: -7.761727333068848
    8. '   ' → logprob: -7.886727333068848
    9. '):
' → logprob: -9.261727333068848
    10. ' :
' → logprob: -9.386727333068848

Token 326: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0652540773153305
    2. ' return' → logprob: -3.065253973007202
    3. 'return' → logprob: -4.565254211425781
    4. ' list' → logprob: -5.565254211425781
    5. '[int' → logprob: -7.065254211425781
    6. 'list' → logprob: -7.315254211425781
    7. 'int' → logprob: -8.690254211425781
    8. '       ' → logprob: -8.940254211425781
    9. ' map' → logprob: -9.065254211425781
    10. '    ' → logprob: -9.565254211425781

Token 327: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03965876251459122
    2. ' des' → logprob: -4.164658546447754
    3. '(map' → logprob: -4.664658546447754
    4. ' of' → logprob: -4.914658546447754
    5. '[' → logprob: -6.414658546447754
    6. '(int' → logprob: -6.539658546447754
    7. ' integers' → logprob: -7.164658546447754
    8. ' de' → logprob: -7.289658546447754
    9. '<int' → logprob: -7.539658546447754
    10. '<|end|>' → logprob: -8.039658546447754

Token 328: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2952233850955963
    2. 'int' → logprob: -1.920223355293274
    3. ' ent' → logprob: -2.4202234745025635
    4. 'ints' → logprob: -4.795223236083984
    5. ' integers' → logprob: -5.920223236083984
    6. 'inte' → logprob: -5.920223236083984
    7. ' int' → logprob: -5.920223236083984
    8. ' nombres' → logprob: -6.295223236083984
    9. 'val' → logprob: -7.420223236083984
    10. ' valeurs' → logprob: -7.545223236083984

Token 329: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0002547832846175879
    2. 'ières' → logprob: -8.50025463104248
    3. 'i' → logprob: -10.00025463104248
    4. 't' → logprob: -13.12525463104248
    5. '```' → logprob: -13.87525463104248
    6. 'ier' → logprob: -13.87525463104248
    7. 'ti' → logprob: -15.00025463104248
    8. 'I' → logprob: -15.00025463104248
    9. 'ière' → logprob: -15.12525463104248
    10. '   ' → logprob: -15.37525463104248

Token 330: ' lus' (ID: 54762)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0576504468917847
    2. '():' → logprob: -1.4326504468917847
    3. '()' → logprob: -1.9326504468917847
    4. ':' → logprob: -2.557650566101074
    5. '   ' → logprob: -3.057650566101074
    6. ':
' → logprob: -3.057650566101074
    7. '=' → logprob: -3.057650566101074
    8. '():
' → logprob: -3.932650566101074
    9. '()
' → logprob: -4.557650566101074
    10. 'def' → logprob: -5.807650566101074

Token 331: ' sur' (ID: 1512)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.43846359848976135
    2. ':' → logprob: -1.688463568687439
    3. ':
' → logprob: -2.1884636878967285
    4. '():
' → logprob: -3.0634636878967285
    5. '   ' → logprob: -5.3134636878967285
    6. '()' → logprob: -5.4384636878967285
    7. '):' → logprob: -7.4384636878967285
    8. '):
' → logprob: -7.5634636878967285
    9. '
' → logprob: -8.43846321105957
    10. ' =' → logprob: -8.81346321105957

Token 332: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07876408100128174
    2. 'la' → logprob: -3.078763961791992
    3. ' une' → logprob: -3.828763961791992
    4. 'une' → logprob: -5.203763961791992
    5. 'l' → logprob: -6.703763961791992
    6. ' ' → logprob: -8.328763961791992
    7. 'a' → logprob: -8.828763961791992
    8. ' input' → logprob: -8.828763961791992
    9. 'input' → logprob: -8.953763961791992
    10. 'line' → logprob: -9.203763961791992

Token 333: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4602704644203186
    2. ' input' → logprob: -1.7102704048156738
    3. ' line' → logprob: -2.335270404815674
    4. 'stdin' → logprob: -3.335270404815674
    5. 'ligne' → logprob: -3.960270404815674
    6. ' stdin' → logprob: -4.960270404815674
    7. ' ligne' → logprob: -5.085270404815674
    8. 'line' → logprob: -5.085270404815674
    9. ' standard' → logprob: -6.085270404815674
    10. 'l' → logprob: -6.085270404815674

Token 334: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.344868540763855
    2. '():' → logprob: -1.344868540763855
    3. '():
' → logprob: -1.594868540763855
    4. '   ' → logprob: -1.594868540763855
    5. '()
' → logprob: -3.5948686599731445
    6. ':' → logprob: -4.3448686599731445
    7. ':
' → logprob: -4.4698686599731445
    8. '):' → logprob: -4.9698686599731445
    9. '):
' → logprob: -5.0948686599731445
    10. ')' → logprob: -5.7198686599731445

Token 335: '.
' (ID: 558)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.47822511196136475
    2. '()' → logprob: -2.2282252311706543
    3. '():
' → logprob: -2.2282252311706543
    4. '():' → logprob: -2.3532252311706543
    5. '   ' → logprob: -3.7282252311706543
    6. '
' → logprob: -4.353225231170654
    7. ':
' → logprob: -4.353225231170654
    8. 'def' → logprob: -5.353225231170654
    9. ':' → logprob: -5.353225231170654
    10. '().' → logprob: -5.603225231170654

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06472938507795334
    2. ')' → logprob: -3.0647294521331787
    3. ' return' → logprob: -4.5647292137146
    4. 'return' → logprob: -5.6897292137146
    5. '    
' → logprob: -7.3147292137146
    6. '):' → logprob: -7.5647292137146
    7. '"""' → logprob: -8.064729690551758
    8. ':return' → logprob: -9.064729690551758
    9. ' )' → logprob: -9.189729690551758
    10. '):
' → logprob: -9.314729690551758

Token 337: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06784125417470932
    2. ')' → logprob: -3.4428412914276123
    3. 'return' → logprob: -3.5678412914276123
    4. ' return' → logprob: -6.192841053009033
    5. '):' → logprob: -6.692841053009033
    6. '):
' → logprob: -7.567841053009033
    7. '"""' → logprob: -7.692841053009033
    8. ':return' → logprob: -8.692841529846191
    9. '    
' → logprob: -8.817841529846191
    10. '"""
' (adapté à ' """
') → logprob: -8.942841529846191

Token 338: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16968917846679688
    2. '   ' → logprob: -1.9196891784667969
    3. ' return' → logprob: -4.669689178466797
    4. '	return' → logprob: -10.044689178466797
    5. ' ' → logprob: -14.419689178466797
    6. '   ' → logprob: -15.044689178466797
    7. '  ' → logprob: -15.169689178466797
    8. '    ' → logprob: -15.419689178466797
    9. 'ret' → logprob: -15.794689178466797
    10. '    
' → logprob: -16.169689178466797

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.650518920039758e-06
    2. ' return' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.750003814697266
    4. 'ret' → logprob: -17.000003814697266
    5. '	return' → logprob: -18.125003814697266
    6. 'list' → logprob: -19.750003814697266
    7. 'import' → logprob: -19.750003814697266
    8. 'Return' → logprob: -21.250003814697266
    9. 's' → logprob: -21.750003814697266
    10. ':return' → logprob: -22.000003814697266

Token 340: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007119550718925893
    2. ' list' → logprob: -7.250711917877197
    3. 'map' → logprob: -13.500712394714355
    4. '[list' → logprob: -14.375712394714355
    5. '[' → logprob: -17.25071144104004
    6. '	list' → logprob: -17.87571144104004
    7. '=list' → logprob: -19.12571144104004
    8. '(list' → logprob: -19.87571144104004
    9. '   ' → logprob: -19.87571144104004
    10. ':list' → logprob: -21.00071144104004

Token 341: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.662937372922897e-05
    2. '(' → logprob: -9.250096321105957
    3. 'map' → logprob: -15.000096321105957
    4. '(m' → logprob: -17.000097274780273
    5. '(int' → logprob: -17.500097274780273
    6. '(
' → logprob: -17.875097274780273
    7. ' map' → logprob: -18.125097274780273
    8. '()' → logprob: -18.625097274780273
    9. '	map' → logprob: -18.625097274780273
    10. '.map' → logprob: -19.625097274780273

Token 342: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020056030189152807
    2. 'int' → logprob: -8.625200271606445
    3. '(' → logprob: -10.875200271606445
    4. ',int' → logprob: -14.125200271606445
    5. ' int' → logprob: -14.375200271606445
    6. '=int' → logprob: -15.000200271606445
    7. '<int' → logprob: -15.750200271606445
    8. '	int' → logprob: -16.000200271606445
    9. ']int' → logprob: -16.625200271606445
    10. '(
' → logprob: -17.250200271606445

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04363924264907837
    2. ',input' → logprob: -3.1686391830444336
    3. '(sys' → logprob: -8.293639183044434
    4. 'input' → logprob: -8.543639183044434
    5. 'sys' → logprob: -8.918639183044434
    6. ' ,' → logprob: -10.418639183044434
    7. '(input' → logprob: -10.668639183044434
    8. '   ' → logprob: -13.043639183044434
    9. ' sys' → logprob: -13.168639183044434
    10. '(' → logprob: -14.043639183044434

Token 344: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02494698390364647
    2. 'input' → logprob: -4.024947166442871
    3. ' sys' → logprob: -5.024947166442871
    4. ' input' → logprob: -8.524947166442871
    5. 'stdin' → logprob: -12.774947166442871
    6. '=sys' → logprob: -15.149947166442871
    7. '(sys' → logprob: -15.274947166442871
    8. '	sys' → logprob: -15.524947166442871
    9. '   ' → logprob: -16.524946212768555
    10. ' ' → logprob: -17.774946212768555

Token 345: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.460291767027229e-05
    2. '.' → logprob: -9.375094413757324
    3. '.stdout' → logprob: -12.375094413757324
    4. '.readline' → logprob: -12.750094413757324
    5. '.std' → logprob: -13.625094413757324
    6. '.argv' → logprob: -14.000094413757324
    7. 'stdin' → logprob: -15.125094413757324
    8. '.st' → logprob: -15.625094413757324
    9. ' .' → logprob: -16.62509536743164
    10. '(stdin' → logprob: -17.00009536743164

Token 346: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.12500286102295
    3. '.read' → logprob: -13.75000286102295
    4. '.readlines' → logprob: -16.625003814697266
    5. '.stdin' → logprob: -17.750003814697266
    6. '.buffer' → logprob: -17.875003814697266
    7. ').' → logprob: -18.625003814697266
    8. ' .' → logprob: -19.000003814697266
    9. '.)' → logprob: -19.500003814697266
    10. ')' → logprob: -19.500003814697266

Token 347: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.87500286102295
    3. '()))' → logprob: -15.75000286102295
    4. ' ().' → logprob: -16.125003814697266
    5. '(' → logprob: -18.500003814697266
    6. '())' → logprob: -19.125003814697266
    7. '.strip' → logprob: -20.250003814697266
    8. '.readline' → logprob: -20.625003814697266
    9. '))' → logprob: -21.250003814697266
    10. '())))' → logprob: -21.500003814697266

Token 348: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07894101738929749
    2. 'rstrip' → logprob: -2.5789411067962646
    3. 'read' → logprob: -10.078941345214844
    4. ' strip' → logprob: -12.453941345214844
    5. 'decode' → logprob: -12.453941345214844
    6. 'split' → logprob: -14.078941345214844
    7. 'replace' → logprob: -15.453941345214844
    8. '.rstrip' → logprob: -15.578941345214844
    9. '(strip' → logprob: -16.203941345214844
    10. ')' → logprob: -16.453941345214844

Token 349: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04904398322105408
    2. '()' → logprob: -3.049043893814087
    3. '))' → logprob: -8.424043655395508
    4. '())' → logprob: -8.674043655395508
    5. '(' → logprob: -10.049043655395508
    6. '()))
' → logprob: -11.424043655395508
    7. '())))' → logprob: -11.799043655395508
    8. '()));' → logprob: -13.174043655395508
    9. '(),' → logprob: -14.299043655395508
    10. '()
' → logprob: -14.799043655395508

Token 350: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001290454383706674
    2. '
' → logprob: -9.000128746032715
    3. '

' → logprob: -13.500128746032715
    4. '    
' → logprob: -14.250128746032715
    5. '```' → logprob: -14.375128746032715
    6. '  
' → logprob: -14.625128746032715
    7. '#' → logprob: -14.875128746032715
    8. ' def' → logprob: -14.875128746032715
    9. '\' → logprob: -15.250128746032715
    10. 'D' → logprob: -15.375128746032715

Token 351: ' L' (ID: 451)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.45917171239852905
    2. 'LS' → logprob: -1.0841717720031738
    3. 'S' → logprob: -3.584171772003174
    4. ' LS' → logprob: -6.959171772003174
    5. 'IS' → logprob: -8.209171295166016
    6. 'II' → logprob: -8.209171295166016
    7. ' I' → logprob: -8.334171295166016
    8. 'L' → logprob: -8.459171295166016
    9. 'SI' → logprob: -9.334171295166016
    10. ' S' → logprob: -9.834171295166016

Token 352: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.0219828002154827e-05
    2. '()' → logprob: -12.125020027160645
    3. '```' → logprob: -13.125020027160645
    4. '()
' → logprob: -13.250020027160645
    5. '[]' → logprob: -13.375020027160645
    6. 'S' → logprob: -13.375020027160645
    7. ' I' → logprob: -13.875020027160645
    8. 'A' → logprob: -14.000020027160645
    9. 'ist' → logprob: -14.000020027160645
    10. 'IST' → logprob: -14.125020027160645

Token 353: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003442832676228136
    2. '():
' → logprob: -8.000344276428223
    3. '()' → logprob: -12.125344276428223
    4. ' ():' → logprob: -12.625344276428223
    5. '():
' → logprob: -17.37534523010254
    6. '():

' → logprob: -18.62534523010254
    7. '()[' → logprob: -18.87534523010254
    8. '()>' → logprob: -19.25034523010254
    9. ' ()' → logprob: -19.50034523010254
    10. '):' → logprob: -19.75034523010254

Token 354: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03162447363138199
    2. '():
' → logprob: -4.0316243171691895
    3. '()' → logprob: -5.4066243171691895
    4. 'def' → logprob: -5.5316243171691895
    5. '(n' → logprob: -5.9066243171691895
    6. 'return' → logprob: -6.7816243171691895
    7. 'n' → logprob: -7.4066243171691895
    8. ':' → logprob: -8.656624794006348
    9. '   ' → logprob: -9.656624794006348
    10. ':return' → logprob: -9.906624794006348

Token 355: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6146031022071838
    2. 'def' → logprob: -1.489603042602539
    3. 'list' → logprob: -1.739603042602539
    4. 'int' → logprob: -3.239603042602539
    5. '[int' → logprob: -4.739603042602539
    6. '   ' → logprob: -5.989603042602539
    7. ' return' → logprob: -6.614603042602539
    8. '[
' → logprob: -6.614603042602539
    9. 'lambda' → logprob: -7.239603042602539
    10. '[]
' → logprob: -7.239603042602539

Token 356: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44254475831985474
    2. '   ' → logprob: -1.56754469871521
    3. ' return' → logprob: -2.56754469871521
    4. 'def' → logprob: -3.31754469871521
    5. '):
' → logprob: -3.94254469871521
    6. 'list' → logprob: -5.442544937133789
    7. ':
' → logprob: -5.567544937133789
    8. '():
' → logprob: -5.942544937133789
    9. '):' → logprob: -6.442544937133789
    10. ')' → logprob: -6.692544937133789

Token 357: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47383004426956177
    2. 'def' → logprob: -1.098829984664917
    3. '   ' → logprob: -3.598829984664917
    4. 'n' → logprob: -5.473830223083496
    5. '"""
' → logprob: -5.723830223083496
    6. ' return' → logprob: -5.973830223083496
    7. 'list' → logprob: -6.348830223083496
    8. 'lines' → logprob: -6.848830223083496
    9. '()' → logprob: -7.223830223083496
    10. 'size' → logprob: -7.848830223083496

Token 358: ' toutes' (ID: 17502)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.45195457339286804
    2. 'int' → logprob: -1.5769546031951904
    3. '()' → logprob: -1.9519546031951904
    4. ' list' → logprob: -5.576954364776611
    5. '[]' → logprob: -6.076954364776611
    6. 'def' → logprob: -6.451954364776611
    7. '(int' → logprob: -6.451954364776611
    8. '[int' → logprob: -6.576954364776611
    9. '[list' → logprob: -6.951954364776611
    10. '(list' → logprob: -7.076954364776611

Token 359: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035841748118400574
    2. 'les' → logprob: -4.660841941833496
    3. 'lines' → logprob: -4.660841941833496
    4. 'l' → logprob: -4.910841941833496
    5. '_lines' → logprob: -5.410841941833496
    6. ' les' → logprob: -6.035841941833496
    7. '():' → logprob: -7.410841941833496
    8. ' lignes' → logprob: -8.035841941833496
    9. 'la' → logprob: -8.910841941833496
    10. ' lines' → logprob: -9.035841941833496

Token 360: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09417659044265747
    2. 'lines' → logprob: -2.9691765308380127
    3. ' lignes' → logprob: -3.3441765308380127
    4. 'sys' → logprob: -7.469176769256592
    5. 'list' → logprob: -7.469176769256592
    6. 'import' → logprob: -7.844176769256592
    7. 'ligne' → logprob: -8.094176292419434
    8. 'li' → logprob: -8.469176292419434
    9. '[' → logprob: -8.594176292419434
    10. 'line' → logprob: -8.844176292419434

Token 361: ' restantes' (ID: 159241)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07059016078710556
    2. 'du' → logprob: -4.070590019226074
    3. '(n' → logprob: -4.070590019226074
    4. 'from' → logprob: -5.070590019226074
    5. 'def' → logprob: -5.320590019226074
    6. 'de' → logprob: -5.445590019226074
    7. 'import' → logprob: -5.945590019226074
    8. '().' → logprob: -5.945590019226074
    9. '():' → logprob: -6.695590019226074
    10. 'des' → logprob: -6.945590019226074

Token 362: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15089964866638184
    2. '():' → logprob: -2.775899648666382
    3. 'du' → logprob: -3.525899648666382
    4. 'from' → logprob: -4.525899887084961
    5. '():
' → logprob: -4.650899887084961
    6. 'de' → logprob: -5.025899887084961
    7. '()
' → logprob: -5.275899887084961
    8. '().' → logprob: -5.650899887084961
    9. 'def' → logprob: -5.900899887084961
    10. '   ' → logprob: -6.400899887084961

Token 363: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008747059851884842
    2. ' sys' → logprob: -4.883747100830078
    3. '(sys' → logprob: -7.133747100830078
    4. '()' → logprob: -8.633747100830078
    5. 'l' → logprob: -9.633747100830078
    6. '=sys' → logprob: -10.258747100830078
    7. 'la' → logprob: -10.508747100830078
    8. '   ' → logprob: -11.508747100830078
    9. '	sys' → logprob: -12.008747100830078
    10. 'le' → logprob: -12.008747100830078

Token 364: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0052564069628715515
    2. 'entrée' → logprob: -6.755256175994873
    3. 'sys' → logprob: -6.755256175994873
    4. 'stdin' → logprob: -7.005256175994873
    5. 'a' → logprob: -7.505256175994873
    6. ''import' → logprob: -7.880256175994873
    7. 'import' → logprob: -8.005256652832031
    8. '=sys' → logprob: -8.380256652832031
    9. 'e' → logprob: -8.630256652832031
    10. 'es' → logprob: -9.130256652832031

Token 365: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.19531406462192535
    2. ' standard' → logprob: -1.8203140497207642
    3. '()' → logprob: -4.195313930511475
    4. '().' → logprob: -8.695314407348633
    5. '_standard' → logprob: -9.570314407348633
    6. '标准' → logprob: -10.695314407348633
    7. 'std' → logprob: -10.695314407348633
    8. '()
' → logprob: -10.820314407348633
    9. 'sys' → logprob: -11.070314407348633
    10. '.standard' → logprob: -11.195314407348633

Token 366: '.' (ID: 13)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.9123534560203552
    2. '()' → logprob: -1.162353515625
    3. '():
' → logprob: -1.412353515625
    4. 'def' → logprob: -4.162353515625
    5. '().' → logprob: -4.662353515625
    6. '   ' → logprob: -5.037353515625
    7. '):' → logprob: -5.662353515625
    8. ')' → logprob: -6.162353515625
    9. ',' → logprob: -6.412353515625
    10. '):
' → logprob: -7.287353515625

Token 367: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01178642176091671
    2. 'def' → logprob: -4.886786460876465
    3. '()
' → logprob: -6.761786460876465
    4. '()' → logprob: -6.886786460876465
    5. '    
' → logprob: -7.386786460876465
    6. 'return' → logprob: -8.136786460876465
    7. ' return' → logprob: -8.136786460876465
    8. '
' → logprob: -8.636786460876465
    9. ' def' → logprob: -9.136786460876465
    10. '[]
' → logprob: -9.511786460876465

Token 368: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.9996154308319092
    2. ' i' → logprob: -2.124615430831909
    3. 'l' → logprob: -2.249615430831909
    4. ' l' → logprob: -2.249615430831909
    5. ' line' → logprob: -2.249615430831909
    6. '_li' → logprob: -2.749615430831909
    7. ' la' → logprob: -2.874615430831909
    8. 'i' → logprob: -2.874615430831909
    9. '_' → logprob: -3.124615430831909
    10. '_line' → logprob: -3.249615430831909

Token 369: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.8301213979721069
    2. 'ligne' → logprob: -1.330121397972107
    3. 'line' → logprob: -1.580121397972107
    4. ' line' → logprob: -2.4551215171813965
    5. 'l' → logprob: -6.2051215171813965
    6. '_' → logprob: -6.4551215171813965
    7. 'sys' → logprob: -7.0801215171813965
    8. ' sys' → logprob: -7.7051215171813965
    9. '_line' → logprob: -7.8301215171813965
    10. ' readline' → logprob: -7.8301215171813965

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07861170172691345
    2. '   ' → logprob: -2.9536116123199463
    3. '(),' → logprob: -4.078611850738525
    4. ' in' → logprob: -5.828611850738525
    5. '()' → logprob: -7.078611850738525
    6. ' ,' → logprob: -7.453611850738525
    7. ':' → logprob: -7.703611850738525
    8. ' return' → logprob: -8.078611373901367
    9. 'return' → logprob: -8.203611373901367
    10. 'def' → logprob: -8.453611373901367

Token 371: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0473302602767944
    2. 'return' → logprob: -1.0473302602767944
    3. ' return' → logprob: -1.4223302602767944
    4. 'yield' → logprob: -3.297330379486084
    5. ' yield' → logprob: -4.547330379486084
    6. '[]' → logprob: -5.172330379486084
    7. '    ' → logprob: -7.547330379486084
    8. ' yields' → logprob: -7.672330379486084
    9. 'split' → logprob: -8.297329902648926
    10. '       ' → logprob: -8.422329902648926

Token 372: ' sé' (ID: 7462)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.45754483342170715
    2. 'split' → logprob: -1.7075448036193848
    3. ' return' → logprob: -2.3325448036193848
    4. 's' → logprob: -4.457544803619385
    5. ' liste' → logprob: -4.457544803619385
    6. 'strip' → logprob: -4.707544803619385
    7. 'def' → logprob: -4.957544803619385
    8. ' retourne' → logprob: -5.082544803619385
    9. '.split' → logprob: -5.582544803619385
    10. ' split' → logprob: -5.707544803619385

Token 373: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00884217582643032
    2. 'p' → logprob: -4.7588419914245605
    3. 'part' → logprob: -10.008842468261719
    4. 'par' → logprob: -10.133842468261719
    5. 'parate' → logprob: -10.758842468261719
    6. 'pa' → logprob: -11.258842468261719
    7. '
' → logprob: -11.258842468261719
    8. 'quence' → logprob: -11.633842468261719
    9. 'parer' → logprob: -11.758842468261719
    10. '```' → logprob: -11.758842468261719

Token 374: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.10459060221910477
    2. '()' → logprob: -2.854590654373169
    3. 'par' → logprob: -3.354590654373169
    4. '   ' → logprob: -5.72959041595459
    5. '(par' → logprob: -7.22959041595459
    6. ' en' → logprob: -7.72959041595459
    7. ' ()' → logprob: -7.72959041595459
    8. '()[' → logprob: -7.72959041595459
    9. ' ' → logprob: -8.60459041595459
    10. 'int' → logprob: -8.85459041595459

Token 375: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.26005426049232483
    2. ' espaces' → logprob: -1.7600542306900024
    3. 'spaces' → logprob: -3.010054349899292
    4. 'es' → logprob: -5.635054111480713
    5. 'sys' → logprob: -5.760054111480713
    6. ' spaces' → logprob: -7.760054111480713
    7. ''esp' → logprob: -8.885054588317871
    8. ' sys' → logprob: -9.135054588317871
    9. 'lines' → logprob: -9.885054588317871
    10. '(sys' → logprob: -10.385054588317871

Token 376: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011473117396235466
    2. '   ' → logprob: -4.511473178863525
    3. ' et' → logprob: -8.636472702026367
    4. 'et' → logprob: -8.761472702026367
    5. ' ,' → logprob: -10.136472702026367
    6. ',
' → logprob: -11.261472702026367
    7. 'def' → logprob: -11.386472702026367
    8. '(),' → logprob: -11.511472702026367
    9. '    
' → logprob: -12.136472702026367
    10. '()' → logprob: -13.136472702026367

Token 377: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4999420642852783
    2. ' retourne' → logprob: -2.1249420642852783
    3. 'ret' → logprob: -2.4999420642852783
    4. ' return' → logprob: -2.4999420642852783
    5. 'convert' → logprob: -3.4999420642852783
    6. 'la' → logprob: -3.7499420642852783
    7. '   ' → logprob: -3.8749420642852783
    8. ' convert' → logprob: -4.374941825866699
    9. ' la' → logprob: -4.374941825866699
    10. ' les' → logprob: -5.124941825866699

Token 378: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.17630746960639954
    2. 'return' → logprob: -2.051307439804077
    3. ' retourne' → logprob: -4.176307678222656
    4. ' convert' → logprob: -4.801307678222656
    5. 'ret' → logprob: -5.426307678222656
    6. ' return' → logprob: -5.676307678222656
    7. 'map' → logprob: -7.051307678222656
    8. ' transforme' → logprob: -8.551307678222656
    9. 'con' → logprob: -9.176307678222656
    10. 'ren' → logprob: -9.426307678222656

Token 379: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.9981420336989686e-05
    2. ' it' → logprob: -11.625020027160645
    3. 't' → logprob: -12.000020027160645
    4. 'ит' → logprob: -14.000020027160645
    5. 'tit' → logprob: -14.250020027160645
    6. 'e' → logprob: -14.375020027160645
    7. 'et' → logprob: -15.000020027160645
    8. 'ist' → logprob: -15.000020027160645
    9. '```' → logprob: -15.000020027160645
    10. 'ert' → logprob: -15.250020027160645

Token 380: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0019489870173856616
    2. 'en' → logprob: -6.501948833465576
    3. '   ' → logprob: -8.376949310302734
    4. '_en' → logprob: -9.501949310302734
    5. '(en' → logprob: -10.501949310302734
    6. 'int' → logprob: -10.876949310302734
    7. 'ent' → logprob: -11.251949310302734
    8. 'list' → logprob: -11.251949310302734
    9. ' ' → logprob: -11.376949310302734
    10. 'En' → logprob: -11.626949310302734

Token 381: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.640593409538269
    2. 'int' → logprob: -1.015593409538269
    3. '[int' → logprob: -2.8905935287475586
    4. 'ent' → logprob: -3.8905935287475586
    5. ' list' → logprob: -3.8905935287475586
    6. 'ints' → logprob: -5.015593528747559
    7. '[list' → logprob: -6.015593528747559
    8. ' int' → logprob: -6.515593528747559
    9. '[' → logprob: -6.890593528747559
    10. 'lists' → logprob: -7.015593528747559

Token 382: ' d' (ID: 272)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8540153503417969
    2. '(int' → logprob: -1.4790153503417969
    3. ' of' → logprob: -1.7290153503417969
    4. '[int' → logprob: -2.104015350341797
    5. '(list' → logprob: -4.104015350341797
    6. 's' → logprob: -4.979015350341797
    7. '   ' → logprob: -5.104015350341797
    8. '<int' → logprob: -5.354015350341797
    9. '```' → logprob: -5.979015350341797
    10. 'int' → logprob: -6.229015350341797

Token 383: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03039226122200489
    2. 'ints' → logprob: -3.9053921699523926
    3. '[int' → logprob: -5.155392169952393
    4. 'ent' → logprob: -6.155392169952393
    5. '(int' → logprob: -7.530392169952393
    6. ''ent' → logprob: -7.655392169952393
    7. 'list' → logprob: -7.780392169952393
    8. ''int' → logprob: -8.03039264678955
    9. '<int' → logprob: -10.28039264678955
    10. 'inte' → logprob: -10.40539264678955

Token 384: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0007455448503606021
    2. 'ières' → logprob: -7.75074577331543
    3. 't' → logprob: -8.75074577331543
    4. 'i' → logprob: -9.25074577331543
    5. 'ier' → logprob: -11.00074577331543
    6. 'er' → logprob: -11.87574577331543
    7. 'I' → logprob: -12.12574577331543
    8. 'e' → logprob: -12.12574577331543
    9. 'eurs' → logprob: -12.50074577331543
    10. 'ers' → logprob: -12.50074577331543

Token 385: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0207252502441406
    2. 'def' → logprob: -1.3957252502441406
    3. '():
' → logprob: -1.5207252502441406
    4. '()' → logprob: -2.7707252502441406
    5. '():' → logprob: -2.7707252502441406
    6. '):' → logprob: -4.020725250244141
    7. '):
' → logprob: -4.895725250244141
    8. '()
' → logprob: -5.395725250244141
    9. ')' → logprob: -5.645725250244141
    10. ' def' → logprob: -5.770725250244141

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017546292394399643
    2. 'def' → logprob: -4.1425461769104
    3. '
' → logprob: -7.5175461769104
    4. ' def' → logprob: -8.017546653747559
    5. '():' → logprob: -8.892546653747559
    6. '()
' → logprob: -9.267546653747559
    7. '()' → logprob: -9.267546653747559
    8. '():
' → logprob: -9.267546653747559
    9. '    
' → logprob: -9.392546653747559
    10. ' ' → logprob: -10.642546653747559

Token 387: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024638830218464136
    2. 'def' → logprob: -6.6274638175964355
    3. '():' → logprob: -7.7524638175964355
    4. '()' → logprob: -8.752464294433594
    5. 'return' → logprob: -8.877464294433594
    6. '
' → logprob: -9.627464294433594
    7. '():
' → logprob: -9.752464294433594
    8. '    
' → logprob: -10.627464294433594
    9. '()
' → logprob: -10.627464294433594
    10. ' return' → logprob: -10.752464294433594

Token 388: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2298915535211563
    2. ':' → logprob: -2.354891538619995
    3. ':
' → logprob: -3.354891538619995
    4. '[
' → logprob: -3.979891538619995
    5. '[List' → logprob: -4.479891777038574
    6. 'List' → logprob: -4.479891777038574
    7. 'def' → logprob: -4.729891777038574
    8. ':list' → logprob: -4.979891777038574
    9. '[' → logprob: -5.479891777038574
    10. ' list' → logprob: -5.479891777038574

Token 389: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03499915078282356
    2. ' list' → logprob: -3.659999132156372
    3. 'list' → logprob: -4.784999370574951
    4. '[list' → logprob: -8.909998893737793
    5. ' [' → logprob: -10.284998893737793
    6. '[' → logprob: -10.409998893737793
    7. '[List' → logprob: -10.534998893737793
    8. 'def' → logprob: -11.034998893737793
    9. '[
' → logprob: -11.159998893737793
    10. 'List' → logprob: -11.534998893737793

Token 390: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.009559988044202328
    2. ' list' → logprob: -4.7595601081848145
    3. 'List' → logprob: -7.3845601081848145
    4. '[list' → logprob: -8.259559631347656
    5. '   ' → logprob: -9.884559631347656
    6. '[List' → logprob: -11.384559631347656
    7. ' List' → logprob: -13.884559631347656
    8. '_list' → logprob: -13.884559631347656
    9. '[' → logprob: -14.759559631347656
    10. 'generator' → logprob: -15.759559631347656

Token 391: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.22945408523082733
    2. '[list' → logprob: -1.9794540405273438
    3. 'of' → logprob: -2.7294540405273438
    4. '   ' → logprob: -6.729454040527344
    5. '[List' → logprob: -8.604454040527344
    6. 'list' → logprob: -9.479454040527344
    7. '(list' → logprob: -10.104454040527344
    8. '2' → logprob: -10.354454040527344
    9. ' ' → logprob: -10.604454040527344
    10. '<List' → logprob: -11.104454040527344

Token 392: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004505725810304284
    2. ' list' → logprob: -7.750450611114502
    3. 'lists' → logprob: -11.000450134277344
    4. 'int' → logprob: -13.125450134277344
    5. ' lists' → logprob: -14.625450134277344
    6. '[list' → logprob: -14.875450134277344
    7. '(list' → logprob: -15.375450134277344
    8. 'List' → logprob: -16.125450134277344
    9. '   ' → logprob: -17.000450134277344
    10. ' ' → logprob: -18.375450134277344

Token 393: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.40576499700546265
    2. ' of' → logprob: -1.1557650566101074
    3. 'of' → logprob: -4.030765056610107
    4. '<int' → logprob: -7.155765056610107
    5. 'int' → logprob: -8.90576457977295
    6. '(int' → logprob: -11.03076457977295
    7. '   ' → logprob: -12.28076457977295
    8. '[' → logprob: -12.53076457977295
    9. '[list' → logprob: -12.53076457977295
    10. 's' → logprob: -12.90576457977295

Token 394: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014165744185447693
    2. ' int' → logprob: -4.264165878295898
    3. '[int' → logprob: -13.139165878295898
    4. '(int' → logprob: -15.764165878295898
    5. '<int' → logprob: -16.5141658782959
    6. 'ints' → logprob: -17.1391658782959
    7. '	int' → logprob: -17.8891658782959
    8. ']int' → logprob: -17.8891658782959
    9. '=int' → logprob: -18.0141658782959
    10. ':int' → logprob: -18.5141658782959

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37720248103141785
    2. '():' → logprob: -1.3772025108337402
    3. '():
' → logprob: -3.7522025108337402
    4. ':
' → logprob: -3.8772025108337402
    5. '):' → logprob: -4.37720251083374
    6. ']:' → logprob: -6.50220251083374
    7. '   ' → logprob: -6.75220251083374
    8. '):
' → logprob: -6.75220251083374
    9. '()' → logprob: -7.00220251083374
    10. ']:
' → logprob: -8.877202033996582

Token 396: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015956943854689598
    2. '[]' → logprob: -4.765956878662109
    3. '[]
' → logprob: -5.890956878662109
    4. '[List' → logprob: -6.640956878662109
    5. '[' → logprob: -7.140956878662109
    6. 'List' → logprob: -7.265956878662109
    7. ' return' → logprob: -7.640956878662109
    8. 'return' → logprob: -8.51595687866211
    9. '[
' → logprob: -8.64095687866211
    10. ' [' → logprob: -8.89095687866211

Token 397: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1747970581054688
    2. '(map' → logprob: -1.1747970581054688
    3. '[' → logprob: -2.4247970581054688
    4. 'of' → logprob: -2.7997970581054688
    5. '[list' → logprob: -2.7997970581054688
    6. ' des' → logprob: -2.9247970581054688
    7. '[]' → logprob: -3.1747970581054688
    8. 'des' → logprob: -3.7997970581054688
    9. 'def' → logprob: -4.799797058105469
    10. ' de' → logprob: -5.299797058105469

Token 398: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10696130990982056
    2. 'lists' → logprob: -2.356961250305176
    3. ' lists' → logprob: -5.606961250305176
    4. ' list' → logprob: -6.106961250305176
    5. 'all' → logprob: -8.356961250305176
    6. ' listes' → logprob: -8.481961250305176
    7. 'liste' → logprob: -8.731961250305176
    8. '[list' → logprob: -9.356961250305176
    9. 'int' → logprob: -10.231961250305176
    10. '(list' → logprob: -10.356961250305176

Token 399: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.28139448165893555
    2. ' of' → logprob: -2.4063944816589355
    3. 'of' → logprob: -2.5313944816589355
    4. '[list' → logprob: -3.1563944816589355
    5. '[List' → logprob: -3.9063944816589355
    6. ' des' → logprob: -5.6563944816589355
    7. '[' → logprob: -6.4063944816589355
    8. 'des' → logprob: -6.5313944816589355
    9. '   ' → logprob: -6.5313944816589355
    10. '<int' → logprob: -7.0313944816589355

Token 400: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10288280993700027
    2. '[int' → logprob: -3.2278828620910645
    3. 'ent' → logprob: -3.8528828620910645
    4. ' int' → logprob: -4.3528828620910645
    5. '<int' → logprob: -4.7278828620910645
    6. 'ints' → logprob: -5.2278828620910645
    7. 'inte' → logprob: -5.4778828620910645
    8. ' integers' → logprob: -6.4778828620910645
    9. '(int' → logprob: -6.6028828620910645
    10. 'list' → logprob: -7.1028828620910645

Token 401: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.258053183555603
    2. 'iers' → logprob: -1.508053183555603
    3. 'tes' → logprob: -5.883053302764893
    4. 'te' → logprob: -7.008053302764893
    5. 'tiers' → logprob: -7.508053302764893
    6. 'ts' → logprob: -7.758053302764893
    7. 'ents' → logprob: -7.883053302764893
    8. 'ints' → logprob: -8.008052825927734
    9. 'ti' → logprob: -8.508052825927734
    10. 'ters' → logprob: -9.508052825927734

Token 402: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2608660459518433
    2. '()' → logprob: -1.5108660459518433
    3. ':' → logprob: -1.7608660459518433
    4. ')' → logprob: -2.010866165161133
    5. '   ' → logprob: -3.010866165161133
    6. '():' → logprob: -3.385866165161133
    7. '):' → logprob: -3.510866165161133
    8. '()]' → logprob: -4.260866165161133
    9. ']:' → logprob: -4.885866165161133
    10. ':
' → logprob: -4.885866165161133

Token 403: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7192559838294983
    2. 'sys' → logprob: -1.5942559242248535
    3. ' les' → logprob: -2.5942559242248535
    4. 'all' → logprob: -2.7192559242248535
    5. ' toutes' → logprob: -2.8442559242248535
    6. 'l' → logprob: -3.8442559242248535
    7. 'la' → logprob: -3.9692559242248535
    8. ' chaque' → logprob: -4.0942559242248535
    9. ' sys' → logprob: -4.5942559242248535
    10. 'each' → logprob: -4.5942559242248535

Token 404: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.18867488205432892
    2. ' ligne' → logprob: -1.8136749267578125
    3. 'line' → logprob: -5.5636749267578125
    4. ' lignes' → logprob: -6.3136749267578125
    5. 'l' → logprob: -6.5636749267578125
    6. 'sys' → logprob: -7.4386749267578125
    7. 'lines' → logprob: -7.8136749267578125
    8. 'la' → logprob: -8.938674926757812
    9. ' line' → logprob: -9.313674926757812
    10. ' ' → logprob: -9.563674926757812

Token 405: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8003261089324951
    2. '   ' → logprob: -1.1753261089324951
    3. 'def' → logprob: -2.425326108932495
    4. '():' → logprob: -2.550326108932495
    5. '[]' → logprob: -3.550326108932495
    6. ':' → logprob: -4.300326347351074
    7. '()
' → logprob: -4.425326347351074
    8. '():
' → logprob: -4.800326347351074
    9. '=sys' → logprob: -6.675326347351074
    10. ':
' → logprob: -6.800326347351074

Token 406: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1231708899140358
    2. 'e' → logprob: -2.748170852661133
    3. 'es' → logprob: -3.373170852661133
    4. 'entrée' → logprob: -4.623170852661133
    5. 'input' → logprob: -5.748170852661133
    6. 'sys' → logprob: -6.498170852661133
    7. ''ent' → logprob: -7.373170852661133
    8. ''' → logprob: -7.873170852661133
    9. 'i' → logprob: -7.998170852661133
    10. 's' → logprob: -8.748170852661133

Token 407: '.
' (ID: 558)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4798310697078705
    2. '():' → logprob: -1.4798310995101929
    3. '   ' → logprob: -2.6048309803009033
    4. '()' → logprob: -2.8548309803009033
    5. '):
' → logprob: -4.479831218719482
    6. ')' → logprob: -5.979831218719482
    7. '):' → logprob: -6.104831218719482
    8. ':
' → logprob: -6.229831218719482
    9. ':' → logprob: -6.854831218719482
    10. '()):
' → logprob: -7.479831218719482

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021371750626713037
    2. '
' → logprob: -7.752137184143066
    3. '):
' → logprob: -8.127137184143066
    4. ':
' → logprob: -8.502137184143066
    5. '():
' → logprob: -8.502137184143066
    6. ':' → logprob: -8.502137184143066
    7. '):' → logprob: -8.627137184143066
    8. '():' → logprob: -8.627137184143066
    9. ')' → logprob: -9.252137184143066
    10. '    
' → logprob: -9.377137184143066

Token 409: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009130921214818954
    2. '"""
' (adapté à ' """
') → logprob: -5.634130954742432
    3. ')' → logprob: -5.759130954742432
    4. '):
' → logprob: -7.259130954742432
    5. '"""' → logprob: -7.259130954742432
    6. '```' → logprob: -8.884130477905273
    7. '):' → logprob: -9.009130477905273
    8. ':
' → logprob: -9.134130477905273
    9. ')
' → logprob: -9.134130477905273
    10. 'def' → logprob: -9.134130477905273

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020926215802319348
    2. 'return' → logprob: -8.500208854675293
    3. ' return' → logprob: -12.875208854675293
    4. '	return' → logprob: -13.875208854675293
    5. 'data' → logprob: -13.875208854675293
    6. 'result' → logprob: -14.875208854675293
    7. 'def' → logprob: -15.125208854675293
    8. 'lines' → logprob: -15.500208854675293
    9. '   ' → logprob: -15.875208854675293
    10. '       ' → logprob: -16.00020980834961

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012771383626386523
    2. '   ' → logprob: -7.376276969909668
    3. ' return' → logprob: -7.376276969909668
    4. 'res' → logprob: -11.001276969909668
    5. 'lines' → logprob: -12.501276969909668
    6. 'result' → logprob: -13.251276969909668
    7. 'data' → logprob: -14.001276969909668
    8. 'ret' → logprob: -14.626276969909668
    9. '	return' → logprob: -15.001276969909668
    10. 'lst' → logprob: -16.251277923583984

Token 412: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0004154185007791966
    2. '[' → logprob: -8.250415802001953
    3. '[List' → logprob: -9.250415802001953
    4. 'list' → logprob: -10.000415802001953
    5. '[line' → logprob: -12.250415802001953
    6. ' [' → logprob: -12.625415802001953
    7. '[int' → logprob: -13.500415802001953
    8. '[l' → logprob: -13.750415802001953
    9. 'sys' → logprob: -14.750415802001953
    10. '[array' → logprob: -15.000415802001953

Token 413: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16023844480514526
    2. 'LI' → logprob: -1.91023850440979
    3. ' list' → logprob: -12.285238265991211
    4. 'li' → logprob: -12.785238265991211
    5. 'List' → logprob: -13.160238265991211
    6. 'LIST' → logprob: -13.535238265991211
    7. ' LI' → logprob: -13.785238265991211
    8. 'map' → logprob: -14.035238265991211
    9. '[list' → logprob: -14.660238265991211
    10. 'L' → logprob: -14.785238265991211

Token 414: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.306760805164231e-05
    2. 'map' → logprob: -11.75001335144043
    3. '(' → logprob: -12.25001335144043
    4. ' map' → logprob: -16.62501335144043
    5. '(
' → logprob: -16.87501335144043
    6. '	map' → logprob: -17.00001335144043
    7. ']' → logprob: -17.25001335144043
    8. '.map' → logprob: -17.87501335144043
    9. ',map' → logprob: -18.37501335144043
    10. '(m' → logprob: -19.75001335144043

Token 415: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03836379572749138
    2. 'int' → logprob: -3.2883636951446533
    3. ' int' → logprob: -8.163363456726074
    4. ',int' → logprob: -11.163363456726074
    5. ' (' → logprob: -11.663363456726074
    6. '[int' → logprob: -11.913363456726074
    7. '<int' → logprob: -12.913363456726074
    8. '   ' → logprob: -13.288363456726074
    9. '=int' → logprob: -13.538363456726074
    10. ']int' → logprob: -13.913363456726074

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045665193465538323
    2. '(sys' → logprob: -7.875456809997559
    3. ',line' → logprob: -10.125456809997559
    4. ' ,' → logprob: -11.375456809997559
    5. 'sys' → logprob: -11.375456809997559
    6. '(line' → logprob: -12.625456809997559
    7. '(' → logprob: -13.000456809997559
    8. ',x' → logprob: -13.000456809997559
    9. '=sys' → logprob: -13.000456809997559
    10. ',s' → logprob: -14.000456809997559

Token 417: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.15937453508377075
    2. 'line' → logprob: -2.034374475479126
    3. ' sys' → logprob: -4.284374713897705
    4. ' line' → logprob: -5.909374713897705
    5. 'x' → logprob: -10.784374237060547
    6. 'row' → logprob: -11.284374237060547
    7. '(sys' → logprob: -11.409374237060547
    8. '   ' → logprob: -12.034374237060547
    9. 'l' → logprob: -12.284374237060547
    10. '(line' → logprob: -13.409374237060547

Token 418: '.split' (ID: 10347)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.009579473175108433
    2. 'in' → logprob: -5.759579658508301
    3. 'sys' → logprob: -6.009579658508301
    4. '=sys' → logprob: -6.134579658508301
    5. '(sys' → logprob: -6.759579658508301
    6. '.strip' → logprob: -8.7595796585083
    7. '(line' → logprob: -9.1345796585083
    8. ')' → logprob: -9.3845796585083
    9. '.split' → logprob: -9.6345796585083
    10. 'line' → logprob: -10.5095796585083

Token 419: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005742375273257494
    2. '()' → logprob: -5.38074254989624
    3. '))' → logprob: -7.38074254989624
    4. '())' → logprob: -8.130742073059082
    5. 'sys' → logprob: -9.255742073059082
    6. '().' → logprob: -10.255742073059082
    7. '()))
' → logprob: -10.505742073059082
    8. '()
' → logprob: -11.630742073059082
    9. '(sys' → logprob: -11.630742073059082
    10. '())))' → logprob: -11.755742073059082

Token 420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6820104718208313
    2. '()' → logprob: -1.0570104122161865
    3. ' for' → logprob: -1.9320104122161865
    4. '   ' → logprob: -6.307010650634766
    5. '(sys' → logprob: -9.432010650634766
    6. 'sys' → logprob: -9.557010650634766
    7. ' sys' → logprob: -10.682010650634766
    8. ' ()' → logprob: -11.432010650634766
    9. 'in' → logprob: -11.682010650634766
    10. '       ' → logprob: -11.807010650634766

Token 421: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005274668801575899
    2. ' sys' → logprob: -5.255274772644043
    3. 'l' → logprob: -10.130274772644043
    4. '	sys' → logprob: -14.880274772644043
    5. ' l' → logprob: -15.005274772644043
    6. 'line' → logprob: -16.005273818969727
    7. '=sys' → logprob: -16.255273818969727
    8. '(sys' → logprob: -16.630273818969727
    9. ' ' → logprob: -17.005273818969727
    10. '   ' → logprob: -17.380273818969727

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06201406568288803
    2. 'in' → logprob: -2.812014102935791
    3. 'import' → logprob: -10.687013626098633
    4. 'sys' → logprob: -11.437013626098633
    5. 's' → logprob: -12.312013626098633
    6. 'n' → logprob: -12.562013626098633
    7. '
' → logprob: -13.937013626098633
    8. 'i' → logprob: -14.062013626098633
    9. ' ' → logprob: -14.312013626098633
    10. 'ine' → logprob: -14.687013626098633

Token 423: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.7610454708337784e-05
    2. ' sys' → logprob: -10.500027656555176
    3. '	sys' → logprob: -17.12502670288086
    4. '   ' → logprob: -19.12502670288086
    5. '(sys' → logprob: -19.12502670288086
    6. '=sys' → logprob: -19.25002670288086
    7. 'iter' → logprob: -19.87502670288086
    8. ' ' → logprob: -19.87502670288086
    9. '```' → logprob: -21.87502670288086
    10. '

' → logprob: -22.37502670288086

Token 424: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2948405128554441e-05
    2. 'stdin' → logprob: -11.62501335144043
    3. 'sys' → logprob: -13.00001335144043
    4. 'in' → logprob: -13.87501335144043
    5. '.stdout' → logprob: -15.37501335144043
    6. '.sys' → logprob: -15.50001335144043
    7. '=sys' → logprob: -15.62501335144043
    8. '.in' → logprob: -16.00001335144043
    9. '(stdin' → logprob: -17.12501335144043
    10. ' stdin' → logprob: -17.50001335144043

Token 425: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.09104084223508835
    2. '.readline' → logprob: -2.466040849685669
    3. ']' → logprob: -6.21604061126709
    4. '.stdin' → logprob: -10.09104061126709
    5. 'stdin' → logprob: -10.96604061126709
    6. '.' → logprob: -11.59104061126709
    7. '.read' → logprob: -12.21604061126709
    8. 'read' → logprob: -12.46604061126709
    9. 'buffer' → logprob: -12.59104061126709
    10. 'import' → logprob: -12.71604061126709

Token 426: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.6789137084269896e-05
    2. '()' → logprob: -10.25003719329834
    3. '())' → logprob: -14.12503719329834
    4. ']' → logprob: -14.75003719329834
    5. '()]
' → logprob: -16.750036239624023
    6. '()}' → logprob: -17.500036239624023
    7. ')]' → logprob: -17.625036239624023
    8. '()][' → logprob: -17.625036239624023
    9. ' ()' → logprob: -17.875036239624023
    10. '()],' → logprob: -18.125036239624023

Token 427: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0007121934904716909
    2. ']' → logprob: -7.2507123947143555
    3. '()' → logprob: -13.625712394714355
    4. ']()' → logprob: -14.125712394714355
    5. ')]' → logprob: -15.250712394714355
    6. ' ]' → logprob: -16.37571144104004
    7. '()]
' → logprob: -16.75071144104004
    8. '(' → logprob: -18.25071144104004
    9. '())' → logprob: -18.25071144104004
    10. ' ()' → logprob: -19.00071144104004

Token 428: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003759824438020587
    2. '#' → logprob: -6.378759860992432
    3. '<|end|>' → logprob: -6.878759860992432
    4. 'class' → logprob: -8.503759384155273
    5. '
' → logprob: -8.503759384155273
    6. '\' → logprob: -8.753759384155273
    7. '\n' → logprob: -9.378759384155273
    8. '

' → logprob: -9.628759384155273
    9. '<|end|>' → logprob: -9.878759384155273
    10. 'import' → logprob: -10.128759384155273

Token 429: ' LI' (ID: 14875)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5161396265029907
    2. 'I' → logprob: -1.0161396265029907
    3. ' S' → logprob: -4.766139507293701
    4. 'input' → logprob: -4.891139507293701
    5. 'LS' → logprob: -5.141139507293701
    6. 'SI' → logprob: -5.391139507293701
    7. 'IS' → logprob: -5.766139507293701
    8. 'print' → logprob: -6.016139507293701
    9. 'int' → logprob: -6.141139507293701
    10. ' input' → logprob: -6.641139507293701

Token 430: '_' (ID: 62)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7114322185516357
    2. 'ne' → logprob: -0.9614322185516357
    3. '()' → logprob: -2.4614322185516357
    4. 'st' → logprob: -4.336432456970215
    5. 'ST' → logprob: -4.336432456970215
    6. 'N' → logprob: -4.836432456970215
    7. 'S' → logprob: -6.336432456970215
    8. 'NE' → logprob: -6.711432456970215
    9. 'nt' → logprob: -6.836432456970215
    10. '_' → logprob: -7.211432456970215

Token 431: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6894216537475586
    2. 's' → logprob: -1.3144216537475586
    3. 'nt' → logprob: -3.3144216537475586
    4. '()' → logprob: -3.4394216537475586
    5. '0' → logprob: -3.6894216537475586
    6. 'd' → logprob: -3.8144216537475586
    7. 'strip' → logprob: -3.9394216537475586
    8. 'list' → logprob: -4.439421653747559
    9. 'str' → logprob: -4.564421653747559
    10. 'r' → logprob: -5.064421653747559

Token 432: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3456707000732422
    2. '():' → logprob: -1.5956707000732422
    3. '   ' → logprob: -3.220670700073242
    4. '()' → logprob: -4.220670700073242
    5. '):
' → logprob: -4.595670700073242
    6. 'def' → logprob: -4.720670700073242
    7. '):' → logprob: -5.595670700073242
    8. 'lambda' → logprob: -5.720670700073242
    9. 'list' → logprob: -6.845670700073242
    10. '(lambda' → logprob: -6.845670700073242

Token 433: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2820780277252197
    2. 'return' → logprob: -1.6570780277252197
    3. '():
' → logprob: -2.1570780277252197
    4. '()[' → logprob: -2.2820780277252197
    5. 'def' → logprob: -2.4070780277252197
    6. 'list' → logprob: -2.9070780277252197
    7. '()' → logprob: -2.9070780277252197
    8. '[' → logprob: -3.2820780277252197
    9. '   ' → logprob: -3.2820780277252197
    10. '[]' → logprob: -4.407077789306641

Token 434: '   ' (ID: 271)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -1.4350703954696655
    2. 'return' → logprob: -1.5600703954696655
    3. '[' → logprob: -1.9350703954696655
    4. 'def' → logprob: -2.185070514678955
    5. '[int' → logprob: -2.810070514678955
    6. '[]' → logprob: -2.810070514678955
    7. 'list' → logprob: -3.060070514678955
    8. '   ' → logprob: -3.560070514678955
    9. '[
' → logprob: -3.685070514678955
    10. '[]
' → logprob: -4.060070514678955

Token 435: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5900222659111023
    2. 'return' → logprob: -0.8400222659111023
    3. 'list' → logprob: -5.090022087097168
    4. ' return' → logprob: -5.465022087097168
    5. '[]' → logprob: -6.965022087097168
    6. 'import' → logprob: -7.215022087097168
    7. '"""
' → logprob: -7.340022087097168
    8. '   ' → logprob: -8.215022087097168
    9. '[]
' → logprob: -8.215022087097168
    10. '"""' → logprob: -8.465022087097168

Token 436: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2005682736635208
    2. '()' → logprob: -1.8255683183670044
    3. '<|end|>' → logprob: -4.825568199157715
    4. '())' → logprob: -5.700568199157715
    5. '().' → logprob: -6.325568199157715
    6. '<|end|>' → logprob: -6.950568199157715
    7. '()[' → logprob: -7.575568199157715
    8. '[]' → logprob: -7.825568199157715
    9. 'int' → logprob: -7.825568199157715
    10. ']()' → logprob: -8.200568199157715

Token 437: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.668874204158783
    2. 'ligne' → logprob: -1.0438742637634277
    3. 'int' → logprob: -2.7938742637634277
    4. 'line' → logprob: -3.0438742637634277
    5. ' ligne' → logprob: -4.293874263763428
    6. 'l' → logprob: -5.293874263763428
    7. 'list' → logprob: -6.043874263763428
    8. '().' → logprob: -6.168874263763428
    9. 'liste' → logprob: -7.168874263763428
    10. '_' → logprob: -7.793874263763428

Token 438: ' depuis' (ID: 16277)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05543416365981102
    2. '()' → logprob: -2.930434226989746
    3. '().__' → logprob: -8.555434226989746
    4. '()[' → logprob: -9.680434226989746
    5. ' ().' → logprob: -10.430434226989746
    6. ' ()' → logprob: -10.555434226989746
    7. '()-' → logprob: -10.555434226989746
    8. '.' → logprob: -10.805434226989746
    9. ')' → logprob: -10.930434226989746
    10. '_' → logprob: -11.055434226989746

Token 439: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.013739717192947865
    2. 'input' → logprob: -4.763739585876465
    3. 'l' → logprob: -5.638739585876465
    4. ' sys' → logprob: -7.763739585876465
    5. '()' → logprob: -8.013739585876465
    6. 'stdin' → logprob: -8.138739585876465
    7. '(sys' → logprob: -8.263739585876465
    8. 'int' → logprob: -9.888739585876465
    9. 'la' → logprob: -10.013739585876465
    10. 'import' → logprob: -10.013739585876465

Token 440: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7665668725967407
    2. ''entrée' → logprob: -1.6415668725967407
    3. 'entrée' → logprob: -1.8915668725967407
    4. 'sys' → logprob: -2.266566753387451
    5. '=sys' → logprob: -4.016566753387451
    6. '()' → logprob: -4.391566753387451
    7. '().' → logprob: -4.391566753387451
    8. 'stdin' → logprob: -4.641566753387451
    9. 'l' → logprob: -4.766566753387451
    10. '(sys' → logprob: -5.266566753387451

Token 441: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08048781007528305
    2. '()' → logprob: -2.5804877281188965
    3. ')' → logprob: -6.9554877281188965
    4. 'def' → logprob: -8.830488204956055
    5. '().__' → logprob: -9.080488204956055
    6. '():' → logprob: -9.955488204956055
    7. '_' → logprob: -10.080488204956055
    8. '())' → logprob: -10.205488204956055
    9. ' ()' → logprob: -10.580488204956055
    10. ' ().' → logprob: -10.705488204956055

Token 442: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7196105718612671
    2. '().' → logprob: -0.8446105718612671
    3. '():' → logprob: -2.5946106910705566
    4. ')' → logprob: -6.344610691070557
    5. '[:-' → logprob: -6.969610691070557
    6. 'def' → logprob: -7.094610691070557
    7. 'return' → logprob: -7.469610691070557
    8. '():
' → logprob: -7.469610691070557
    9. ':' → logprob: -7.469610691070557
    10. '()[' → logprob: -7.844610691070557

Token 443: ' sé' (ID: 7462)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9212966561317444
    2. '   ' → logprob: -1.4212965965270996
    3. 'lambda' → logprob: -2.7962965965270996
    4. 'strip' → logprob: -3.0462965965270996
    5. 'split' → logprob: -3.0462965965270996
    6. 'map' → logprob: -3.1712965965270996
    7. ' return' → logprob: -3.7962965965270996
    8. 'def' → logprob: -3.9212965965270996
    9. '()' → logprob: -4.2962965965271
    10. '[' → logprob: -4.4212965965271

Token 444: 'pare' (ID: 6900)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.17654699087142944
    2. 'p' → logprob: -2.051547050476074
    3. 'pare' → logprob: -3.551547050476074
    4. 'Par' → logprob: -6.301547050476074
    5. '_par' → logprob: -6.676547050476074
    6. 'parated' → logprob: -8.301547050476074
    7. 'r' → logprob: -8.801547050476074
    8. 'parer' → logprob: -8.801547050476074
    9. 'parable' → logprob: -8.801547050476074
    10. 'pa' → logprob: -9.176547050476074

Token 445: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023524570278823376
    2. '().' → logprob: -6.377352237701416
    3. '()[' → logprob: -9.127352714538574
    4. 'int' → logprob: -9.377352714538574
    5. '('_' → logprob: -9.752352714538574
    6. '())' → logprob: -9.877352714538574
    7. '_' → logprob: -10.002352714538574
    8. ' ()' → logprob: -10.877352714538574
    9. '()
' → logprob: -11.377352714538574
    10. 'la' → logprob: -11.377352714538574

Token 446: ' espaces' (ID: 98361)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.055134791880846024
    2. 'int' → logprob: -3.9301347732543945
    3. 'spaces' → logprob: -3.9301347732543945
    4. 'str' → logprob: -5.0551347732543945
    5. '_' → logprob: -6.4301347732543945
    6. 's' → logprob: -6.6801347732543945
    7. ' spaces' → logprob: -7.1801347732543945
    8. 'string' → logprob: -7.4301347732543945
    9. ' espaces' → logprob: -7.6801347732543945
    10. ' ()' → logprob: -7.9301347732543945

Token 447: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5850725769996643
    2. ',' → logprob: -1.7100725173950195
    3. '().' → logprob: -1.7100725173950195
    4. '(),' → logprob: -2.8350725173950195
    5. 'def' → logprob: -4.2100725173950195
    6. ')' → logprob: -5.8350725173950195
    7. 'and' → logprob: -6.9600725173950195
    8. '.' → logprob: -6.9600725173950195
    9. ' and' → logprob: -8.08507251739502
    10. 'return' → logprob: -8.08507251739502

Token 448: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4996233284473419
    2. 'return' → logprob: -1.2496232986450195
    3. ' return' → logprob: -2.9996232986450195
    4. '   ' → logprob: -3.2496232986450195
    5. 'map' → logprob: -4.4996232986450195
    6. ' def' → logprob: -6.2496232986450195
    7. ' map' → logprob: -6.6246232986450195
    8. 'import' → logprob: -6.8746232986450195
    9. 'lambda' → logprob: -7.4996232986450195
    10. 'list' → logprob: -8.12462329864502

Token 449: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -7.290784560609609e-05
    2. ' it' → logprob: -9.625072479248047
    3. 'i' → logprob: -13.250072479248047
    4. '(it' → logprob: -13.250072479248047
    5. '_it' → logprob: -13.750072479248047
    6. 't' → logprob: -14.500072479248047
    7. 'ît' → logprob: -15.000072479248047
    8. '[it' → logprob: -15.000072479248047
    9. 'int' → logprob: -15.500072479248047
    10. 'et' → logprob: -16.250072479248047

Token 450: ' en' (ID: 469)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.056954752653837204
    2. '(int' → logprob: -3.931954860687256
    3. 'lambda' → logprob: -4.556954860687256
    4. 'les' → logprob: -4.556954860687256
    5. 'en' → logprob: -5.181954860687256
    6. 'la' → logprob: -6.431954860687256
    7. '=lambda' → logprob: -6.556954860687256
    8. 'int' → logprob: -6.806954860687256
    9. '(' → logprob: -7.056954860687256
    10. '(str' → logprob: -7.431954860687256

Token 451: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07370471954345703
    2. 'lambda' → logprob: -3.573704719543457
    3. '[int' → logprob: -4.073704719543457
    4. 'ent' → logprob: -4.448704719543457
    5. 'ints' → logprob: -4.573704719543457
    6. ' lambda' → logprob: -7.073704719543457
    7. '(int' → logprob: -7.323704719543457
    8. 'inte' → logprob: -7.573704719543457
    9. '(lambda' → logprob: -7.698704719543457
    10. '[' → logprob: -7.823704719543457

Token 452: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013586379587650299
    2. 'ier' → logprob: -4.388586521148682
    3. 'ières' → logprob: -7.013586521148682
    4. 'ière' → logprob: -9.263586044311523
    5. 'er' → logprob: -10.263586044311523
    6. '_' → logprob: -11.263586044311523
    7. 'ieres' → logprob: -11.388586044311523
    8. 'rees' → logprob: -12.888586044311523
    9. 'iert' → logprob: -13.013586044311523
    10. 'IER' → logprob: -13.013586044311523

Token 453: ' en' (ID: 469)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6494806408882141
    2. '(lambda' → logprob: -1.8994805812835693
    3. 'def' → logprob: -2.0244805812835693
    4. '=lambda' → logprob: -2.5244805812835693
    5. '()' → logprob: -2.7744805812835693
    6. ' lambda' → logprob: -3.6494805812835693
    7. ',' → logprob: -5.149480819702148
    8. 'import' → logprob: -5.524480819702148
    9. '_lambda' → logprob: -5.649480819702148
    10. '   ' → logprob: -6.024480819702148

Token 454: ' sou' (ID: 4069)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.3674844801425934
    2. 'levant' → logprob: -1.867484450340271
    3. ' lis' → logprob: -3.3674845695495605
    4. 'sou' → logprob: -3.6174845695495605
    5. ' sou' → logprob: -4.4924845695495605
    6. 'lé' → logprob: -4.6174845695495605
    7. 'd' → logprob: -4.8674845695495605
    8. 'l' → logprob: -4.8674845695495605
    9. 's' → logprob: -5.1174845695495605
    10. 'f' → logprob: -5.2424845695495605

Token 455: 'str' (ID: 689)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8521488904953003
    2. 't' → logprob: -1.1021488904953003
    3. 'tract' → logprob: -1.6021488904953003
    4. '1' → logprob: -4.47714900970459
    5. 'tant' → logprob: -4.97714900970459
    6. '-' → logprob: -5.60214900970459
    7. 'té' → logprob: -6.10214900970459
    8. 'f' → logprob: -6.22714900970459
    9. 'tra' → logprob: -6.35214900970459
    10. 'def' → logprob: -6.60214900970459

Token 456: 'ayant' (ID: 130896)
  Prédit: 'tra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tra' → logprob: -1.1168440580368042
    2. 'ra' → logprob: -1.2418440580368042
    3. 'ayant' → logprob: -2.2418441772460938
    4. '1' → logprob: -2.6168441772460938
    5. 'tr' → logprob: -3.2418441772460938
    6. 'ais' → logprob: -3.7418441772460938
    7. 'raî' → logprob: -3.8668441772460938
    8. 'stract' → logprob: -4.116844177246094
    9. 'tract' → logprob: -4.116844177246094
    10. 'iant' → logprob: -4.366844177246094

Token 457: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38699379563331604
    2. ' ' → logprob: -1.1369937658309937
    3. '(' → logprob: -10.386993408203125
    4. ' one' → logprob: -10.386993408203125
    5. ' ' → logprob: -10.386993408203125
    6. '_' → logprob: -12.136993408203125
    7. '   ' → logprob: -12.386993408203125
    8. '
' → logprob: -12.386993408203125
    9. '	' → logprob: -13.011993408203125
    10. '  ' → logprob: -13.386993408203125

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001328095211647451
    2. ' ' → logprob: -6.626327991485596
    3. ' one' → logprob: -13.751328468322754
    4. '   ' → logprob: -14.626328468322754
    5. '
' → logprob: -15.751328468322754
    6. 'un' → logprob: -16.376327514648438
    7. '_' → logprob: -16.501327514648438
    8. ' ' → logprob: -16.501327514648438
    9. 'one' → logprob: -16.626327514648438
    10. '１' → logprob: -16.876327514648438

Token 459: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030134467408061028
    2. ')' → logprob: -4.155134677886963
    3. '(' → logprob: -4.530134677886963
    4. '())' → logprob: -6.030134677886963
    5. '(),' → logprob: -8.030134201049805
    6. ',' → logprob: -8.155134201049805
    7. '()]' → logprob: -9.530134201049805
    8. ' ()' → logprob: -10.905134201049805
    9. '());' → logprob: -10.905134201049805
    10. 'def' → logprob: -11.030134201049805

Token 460: ' chacun' (ID: 52136)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9425123333930969
    2. 'x' → logprob: -1.1925122737884521
    3. 'l' → logprob: -2.692512273788452
    4. ' x' → logprob: -3.192512273788452
    5. 'each' → logprob: -3.192512273788452
    6. ' chaque' → logprob: -3.317512273788452
    7. ' each' → logprob: -3.567512273788452
    8. 'e' → logprob: -4.067512512207031
    9. '_' → logprob: -4.317512512207031
    10. ' la' → logprob: -4.692512512207031

Token 461: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06462769955396652
    2. ')' → logprob: -3.1896276473999023
    3. '()' → logprob: -4.189627647399902
    4. ',' → logprob: -5.564627647399902
    5. '(
' → logprob: -7.189627647399902
    6. '(int' → logprob: -7.814627647399902
    7. '())' → logprob: -8.189627647399902
    8. '   ' → logprob: -8.439627647399902
    9. ' (' → logprob: -8.564627647399902
    10. '(token' → logprob: -9.439627647399902

Token 462: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47605717182159424
    2. '))' → logprob: -0.9760571718215942
    3. '):' → logprob: -6.851057052612305
    4. ')))' → logprob: -8.226057052612305
    5. '()))' → logprob: -8.601057052612305
    6. '()' → logprob: -8.976057052612305
    7. ')):' → logprob: -8.976057052612305
    8. '())' → logprob: -9.351057052612305
    9. '   ' → logprob: -10.351057052612305
    10. ' )' → logprob: -10.976057052612305

Token 463: ' obtenir' (ID: 54423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19805698096752167
    2. 'i' → logprob: -1.823056936264038
    3. 'x' → logprob: -5.198057174682617
    4. '_i' → logprob: -5.198057174682617
    5. ' i' → logprob: -5.948057174682617
    6. ' _' → logprob: -6.323057174682617
    7. '_x' → logprob: -7.573057174682617
    8. 'index' → logprob: -7.573057174682617
    9. '()' → logprob: -8.823057174682617
    10. ')' → logprob: -8.823057174682617

Token 464: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1708630323410034
    2. '_' → logprob: -1.2958630323410034
    3. 'indices' → logprob: -2.545863151550293
    4. 'l' → logprob: -2.670863151550293
    5. ')' → logprob: -2.795863151550293
    6. 'la' → logprob: -3.920863151550293
    7. '[i' → logprob: -4.045863151550293
    8. '[]' → logprob: -4.045863151550293
    9. '[' → logprob: -4.170863151550293
    10. ' la' → logprob: -4.670863151550293

Token 465: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4848243296146393
    2. 'index' → logprob: -1.609824299812317
    3. ' indices' → logprob: -2.3598244190216064
    4. 'indexes' → logprob: -3.4848244190216064
    5. 'x' → logprob: -4.109824180603027
    6. '_' → logprob: -4.609824180603027
    7. 'indice' → logprob: -5.109824180603027
    8. 'i' → logprob: -5.109824180603027
    9. ' index' → logprob: -5.484824180603027
    10. 'idx' → logprob: -5.609824180603027

Token 466: ' base' (ID: 3611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07185947895050049
    2. '<|end|>' → logprob: -3.071859359741211
    3. '_' → logprob: -4.196859359741211
    4. ' )' → logprob: -5.696859359741211
    5. '[' → logprob: -6.696859359741211
    6. 's' → logprob: -7.821859359741211
    7. ',' → logprob: -7.821859359741211
    8. '()' → logprob: -7.946859359741211
    9. '<|end|>' → logprob: -8.196859359741211
    10. ' _' → logprob: -8.321859359741211

Token 467: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03034183569252491
    2. ' ' → logprob: -3.530341863632202
    3. 'd' → logprob: -7.530341625213623
    4. '_' → logprob: -11.405342102050781
    5. ' zéro' → logprob: -11.405342102050781
    6. 'de' → logprob: -11.905342102050781
    7. 'e' → logprob: -12.030342102050781
    8. 'z' → logprob: -12.655342102050781
    9. '-' → logprob: -12.780342102050781
    10. ' zero' → logprob: -12.780342102050781

Token 468: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7016912698745728
    2. ')' → logprob: -0.9516912698745728
    3. '()]' → logprob: -2.701691150665283
    4. '()' → logprob: -3.576691150665283
    5. '())' → logprob: -4.201691150665283
    6. '):' → logprob: -5.076691150665283
    7. ']' → logprob: -7.576691150665283
    8. ')])' → logprob: -7.576691150665283
    9. '():' → logprob: -7.951691150665283
    10. ']()' → logprob: -8.951691627502441

Token 469: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39496487379074097
    2. ')' → logprob: -1.7699649333953857
    3. '()' → logprob: -2.1449649333953857
    4. '():' → logprob: -4.144964694976807
    5. '):' → logprob: -4.519964694976807
    6. 'def' → logprob: -4.894964694976807
    7. '():
' → logprob: -6.769964694976807
    8. '):
' → logprob: -7.394964694976807
    9. '()
' → logprob: -7.644964694976807
    10. '  ' → logprob: -7.769964694976807

Token 470: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25375184416770935
    2. ' return' → logprob: -1.5037518739700317
    3. ' retourne' → logprob: -6.378751754760742
    4. ' returns' → logprob: -10.378751754760742
    5. ' retour' → logprob: -10.503751754760742
    6. ' retourner' → logprob: -11.003751754760742
    7. 'def' → logprob: -11.253751754760742
    8. ':return' → logprob: -12.003751754760742
    9. 'returns' → logprob: -12.503751754760742
    10. 'list' → logprob: -12.628751754760742

Token 471: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01843729056417942
    2. ' list' → logprob: -4.018437385559082
    3. '[' → logprob: -9.268437385559082
    4. '[list' → logprob: -9.393437385559082
    5. '_list' → logprob: -9.893437385559082
    6. '[]' → logprob: -11.643437385559082
    7. '_' → logprob: -11.768437385559082
    8. ' ' → logprob: -11.768437385559082
    9. 'liste' → logprob: -12.018437385559082
    10. ' [' → logprob: -12.018437385559082

Token 472: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3554915487766266
    2. ' list' → logprob: -1.3554915189743042
    3. '_list' → logprob: -4.230491638183594
    4. ' liste' → logprob: -4.355491638183594
    5. 'liste' → logprob: -4.355491638183594
    6. '[]' → logprob: -7.605491638183594
    7. '_' → logprob: -8.730491638183594
    8. '[' → logprob: -9.105491638183594
    9. 'lis' → logprob: -9.605491638183594
    10. 'li' → logprob: -10.105491638183594

Token 473: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010543649550527334
    2. '(
' → logprob: -7.501054286956787
    3. ' (' → logprob: -8.376054763793945
    4. '(map' → logprob: -9.001054763793945
    5. '([' → logprob: -10.126054763793945
    6. ' of' → logprob: -10.376054763793945
    7. '[' → logprob: -10.876054763793945
    8. 'of' → logprob: -11.501054763793945
    9. '('' → logprob: -12.001054763793945
    10. 's' → logprob: -12.126054763793945

Token 474: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22739151120185852
    2. '   ' → logprob: -1.6023914813995361
    3. '[]' → logprob: -7.352391719818115
    4. 'return' → logprob: -7.727391719818115
    5. ')' → logprob: -8.227391242980957
    6. '(' → logprob: -8.477391242980957
    7. '()
' → logprob: -8.727391242980957
    8. ' ()' → logprob: -8.977391242980957
    9. ' return' → logprob: -10.102391242980957
    10. 'def' → logprob: -10.477391242980957

Token 475: ' Returns' (ID: 9609)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.062230177223682404
    2. '()' → logprob: -2.812230110168457
    3. '():
' → logprob: -8.312230110168457
    4. '()
' → logprob: -12.437230110168457
    5. ' ()' → logprob: -12.937230110168457
    6. ' ():' → logprob: -13.187230110168457
    7. 'return' → logprob: -13.312230110168457
    8. '()[' → logprob: -13.312230110168457
    9. 'def' → logprob: -13.437230110168457
    10. ':' → logprob: -13.562230110168457

Token 476: ':
' (ID: 734)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0281991958618164
    2. '[]' → logprob: -1.0281991958618164
    3. '[' → logprob: -3.0281991958618164
    4. '   ' → logprob: -3.1531991958618164
    5. '<|end|>' → logprob: -3.2781991958618164
    6. 'list' → logprob: -3.4031991958618164
    7. '(list' → logprob: -3.7781991958618164
    8. '(' → logprob: -4.028199195861816
    9. ':list' → logprob: -4.278199195861816
    10. '[:]' → logprob: -4.403199195861816

Token 477: '       ' (ID: 309)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6217232942581177
    2. '   ' → logprob: -1.2467232942581177
    3. ' list' → logprob: -1.7467232942581177
    4. 'LI' → logprob: -7.621723175048828
    5. '[]' → logprob: -8.871723175048828
    6. '[list' → logprob: -8.996723175048828
    7. ':list' → logprob: -9.121723175048828
    8. ' LI' → logprob: -9.246723175048828
    9. '=list' → logprob: -9.246723175048828
    10. '(list' → logprob: -9.996723175048828

Token 478: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -3.690834273584187e-05
    2. ' list' → logprob: -10.25003719329834
    3. 'List' → logprob: -13.50003719329834
    4. '[list' → logprob: -19.500036239624023
    5. '   ' → logprob: -19.625036239624023
    6. 'int' → logprob: -19.750036239624023
    7. 'li' → logprob: -21.375036239624023
    8. '_list' → logprob: -21.875036239624023
    9. 'lists' → logprob: -22.000036239624023
    10. 'lis' → logprob: -22.250036239624023

Token 479: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23056691884994507
    2. '(map' → logprob: -1.9805669784545898
    3. '[int' → logprob: -3.60556697845459
    4. '[' → logprob: -3.60556697845459
    5. '(int' → logprob: -5.35556697845459
    6. 'of' → logprob: -6.10556697845459
    7. ' (' → logprob: -6.23056697845459
    8. '<|end|>' → logprob: -6.23056697845459
    9. '(' → logprob: -6.35556697845459
    10. '(
' → logprob: -8.48056697845459

Token 480: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5094070477061905e-05
    2. '[int' → logprob: -11.500015258789062
    3. ' int' → logprob: -12.250015258789062
    4. '(int' → logprob: -16.250015258789062
    5. '<int' → logprob: -17.125015258789062
    6. 'ints' → logprob: -18.250015258789062
    7. '	int' → logprob: -20.250015258789062
    8. ']int' → logprob: -20.375015258789062
    9. '=int' → logprob: -20.625015258789062
    10. '```' → logprob: -20.625015258789062

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7032282948493958
    2. '():' → logprob: -0.7032282948493958
    3. '()' → logprob: -5.32822847366333
    4. '):' → logprob: -6.32822847366333
    5. '   ' → logprob: -6.82822847366333
    6. '[]' → logprob: -6.95322847366333
    7. '[' → logprob: -7.95322847366333
    8. ']:' → logprob: -8.578227996826172
    9. ' :' → logprob: -8.703227996826172
    10. '[:]' → logprob: -8.828227996826172

Token 482: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06197071075439453
    2. 'list' → logprob: -2.8119707107543945
    3. ' return' → logprob: -13.186970710754395
    4. 'return' → logprob: -14.686970710754395
    5. 'List' → logprob: -14.811970710754395
    6. ' li' → logprob: -15.686970710754395
    7. 'li' → logprob: -17.061969757080078
    8. '   ' → logprob: -17.311969757080078
    9. '_list' → logprob: -17.311969757080078
    10. 'LI' → logprob: -17.436969757080078

Token 483: ' des' (ID: 731)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.031233450397849083
    2. '(' → logprob: -3.531233549118042
    3. '(
' → logprob: -7.156233310699463
    4. ' (' → logprob: -7.656233310699463
    5. '([' → logprob: -9.406233787536621
    6. 'of' → logprob: -10.531233787536621
    7. ' of' → logprob: -10.656233787536621
    8. '[' → logprob: -10.781233787536621
    9. '=' → logprob: -11.156233787536621
    10. '(int' → logprob: -11.531233787536621

Token 484: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.34664151072502136
    2. 'int' → logprob: -1.8466415405273438
    3. '[int' → logprob: -2.4716415405273438
    4. 'indices' → logprob: -3.5966415405273438
    5. ' ent' → logprob: -5.346641540527344
    6. 'val' → logprob: -6.096641540527344
    7. 'ents' → logprob: -6.096641540527344
    8. '(int' → logprob: -6.221641540527344
    9. 'ints' → logprob: -6.471641540527344
    10. ' indices' → logprob: -6.471641540527344

Token 485: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -7.862962229410186e-05
    2. 'ier' → logprob: -9.875078201293945
    3. '[i' → logprob: -12.125078201293945
    4. '[' → logprob: -12.500078201293945
    5. 'ieurs' → logprob: -12.625078201293945
    6. 'ints' → logprob: -12.875078201293945
    7. '(i' → logprob: -13.125078201293945
    8. 'i' → logprob: -13.250078201293945
    9. 'ents' → logprob: -13.625078201293945
    10. 'ières' → logprob: -13.750078201293945

Token 486: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9296214580535889
    2. '([' → logprob: -1.1796214580535889
    3. '_' → logprob: -2.304621458053589
    4. '(map' → logprob: -2.804621458053589
    5. '(' → logprob: -3.054621458053589
    6. '[i' → logprob: -3.804621458053589
    7. '<|end|>' → logprob: -4.679621696472168
    8. ')' → logprob: -4.929621696472168
    9. '[int' → logprob: -5.054621696472168
    10. '   ' → logprob: -5.054621696472168

Token 487: 'cha' (ID: 3836)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.7031250596046448
    2. 'int' → logprob: -1.203125
    3. 'x' → logprob: -2.453125
    4. 'map' → logprob: -3.078125
    5. '[i' → logprob: -3.578125
    6. '[x' → logprob: -4.203125
    7. 'i' → logprob: -4.953125
    8. '(int' → logprob: -5.703125
    9. '[' → logprob: -5.703125
    10. 'n' → logprob: -6.078125

Token 488: 'que' (ID: 1126)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6599143147468567
    2. '[' → logprob: -1.534914255142212
    3. '   ' → logprob: -2.409914255142212
    4. 've' → logprob: -3.409914255142212
    5. '[-' → logprob: -4.034914493560791
    6. 'que' → logprob: -4.034914493560791
    7. 'e' → logprob: -4.534914493560791
    8. 'x' → logprob: -4.659914493560791
    9. '```' → logprob: -5.034914493560791
    10. '[n' → logprob: -5.159914493560791

Token 489: ' valeur' (ID: 41664)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.14935441315174103
    2. '(' → logprob: -3.0243544578552246
    3. '(i' → logprob: -3.3993544578552246
    4. 'x' → logprob: -4.274354457855225
    5. '(map' → logprob: -4.774354457855225
    6. '([' → logprob: -5.024354457855225
    7. '-' → logprob: -5.024354457855225
    8. '(val' → logprob: -5.899354457855225
    9. '(elem' → logprob: -6.149354457855225
    10. 'élé' → logprob: -6.649354457855225

Token 490: ' d' (ID: 272)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2699037194252014
    2. ' -' → logprob: -1.7699036598205566
    3. '()' → logprob: -3.5199036598205566
    4. ')' → logprob: -4.644903659820557
    5. '[' → logprob: -4.769903659820557
    6. '()-' → logprob: -5.269903659820557
    7. '(x' → logprob: -6.019903659820557
    8. '=' → logprob: -6.269903659820557
    9. '_' → logprob: -6.519903659820557
    10. '([' → logprob: -6.644903659820557

Token 491: ''entrée' (ID: 115820)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4384477138519287
    2. 'LI' → logprob: -2.0634477138519287
    3. '(x' → logprob: -2.1884477138519287
    4. 'e' → logprob: -2.5634477138519287
    5. '(sys' → logprob: -2.6884477138519287
    6. 'map' → logprob: -2.9384477138519287
    7. '(int' → logprob: -3.4384477138519287
    8. 'x' → logprob: -3.6884477138519287
    9. '(li' → logprob: -3.8134477138519287
    10. '(map' → logprob: -3.8134477138519287

Token 492: ' diminu' (ID: 80939)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6440080404281616
    2. ' -' → logprob: -1.0190080404281616
    3. '()' → logprob: -2.894008159637451
    4. ')' → logprob: -3.144008159637451
    5. '()-' → logprob: -4.644008159637451
    6. ' ' → logprob: -7.269008159637451
    7. 'def' → logprob: -7.519008159637451
    8. ']' → logprob: -7.644008159637451
    9. '   ' → logprob: -7.644008159637451
    10. 's' → logprob: -7.769008159637451

Token 493: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.006224901415407658
    2. 'é' → logprob: -5.131225109100342
    3. 'e' → logprob: -8.881224632263184
    4. 'ed' → logprob: -9.756224632263184
    5. 'ee' → logprob: -10.006224632263184
    6. 'ées' → logprob: -10.506224632263184
    7. '```' → logprob: -11.881224632263184
    8. 'uée' → logprob: -12.256224632263184
    9. '1' → logprob: -12.381224632263184
    10. 'és' → logprob: -13.381224632263184

Token 494: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3024075925350189
    2. '()' → logprob: -1.9274076223373413
    3. ')' → logprob: -3.3024075031280518
    4. '1' → logprob: -3.8024075031280518
    5. '(
' → logprob: -3.8024075031280518
    6. ' de' → logprob: -4.302407741546631
    7. 'de' → logprob: -5.552407741546631
    8. '=' → logprob: -5.677407741546631
    9. ' ' → logprob: -6.302407741546631
    10. '   ' → logprob: -6.302407741546631

Token 495: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. ')' → logprob: -14.884757041931152
    4. 'un' → logprob: -15.009757041931152
    5. ' ' → logprob: -15.634757041931152
    6. ' un' → logprob: -16.13475799560547
    7. '```' → logprob: -16.63475799560547
    8. '   ' → logprob: -17.00975799560547
    9. '_' → logprob: -17.00975799560547
    10. ' one' → logprob: -17.00975799560547

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. 'un' → logprob: -16.000261306762695
    4. ')' → logprob: -16.750261306762695
    5. '
' → logprob: -17.250261306762695
    6. ' ' → logprob: -17.250261306762695
    7. '   ' → logprob: -17.375261306762695
    8. '_' → logprob: -18.000261306762695
    9. '```' → logprob: -18.250261306762695
    10. '１' → logprob: -18.375261306762695

Token 497: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13387352228164673
    2. ')]' → logprob: -2.258873462677002
    3. '()' → logprob: -4.758873462677002
    4. '()]' → logprob: -5.633873462677002
    5. '())' → logprob: -6.008873462677002
    6. ')])' → logprob: -6.133873462677002
    7. ']' → logprob: -6.383873462677002
    8. '])' → logprob: -6.508873462677002
    9. ' )' → logprob: -7.633873462677002
    10. '   ' → logprob: -9.00887393951416

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016910118283703923
    2. '()' → logprob: -6.751690864562988
    3. '():' → logprob: -8.126690864562988
    4. ')' → logprob: -8.751690864562988
    5. ':' → logprob: -11.251690864562988
    6. '():
' → logprob: -11.626690864562988
    7. 'def' → logprob: -11.751690864562988
    8. '[]' → logprob: -11.751690864562988
    9. '  ' → logprob: -11.876690864562988
    10. '):' → logprob: -12.626690864562988

Token 499: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18007542192935944
    2. '   ' → logprob: -2.1800754070281982
    3. '()' → logprob: -3.1800754070281982
    4. ':' → logprob: -5.055075645446777
    5. '():
' → logprob: -5.805075645446777
    6. '):' → logprob: -8.180075645446777
    7. ')' → logprob: -8.930075645446777
    8. '()
' → logprob: -9.055075645446777
    9. '[]' → logprob: -9.555075645446777
    10. ':
' → logprob: -9.805075645446777

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008628524839878082
    2. 'return' → logprob: -4.7586283683776855
    3. ' return' → logprob: -11.383628845214844
    4. '	return' → logprob: -13.383628845214844
    5. 'def' → logprob: -14.133628845214844
    6. 'list' → logprob: -15.758628845214844
    7. '  ' → logprob: -16.758628845214844
    8. ' ' → logprob: -17.258628845214844
    9. '[]' → logprob: -18.133628845214844
    10. '       ' → logprob: -18.133628845214844

Token 501: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005581548321060836
    2. ' return' → logprob: -7.500558376312256
    3. '   ' → logprob: -12.250557899475098
    4. 'list' → logprob: -15.000557899475098
    5. '	return' → logprob: -16.750558853149414
    6. ' ' → logprob: -17.250558853149414
    7. 'def' → logprob: -18.500558853149414
    8. '  ' → logprob: -19.375558853149414
    9. 'import' → logprob: -20.500558853149414
    10. '
' → logprob: -20.500558853149414

Token 502: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.12652157247066498
    2. 'list' → logprob: -2.376521587371826
    3. ' [' → logprob: -3.876521587371826
    4. '[' → logprob: -5.876521587371826
    5. ' list' → logprob: -6.126521587371826
    6. '[l' → logprob: -9.251521110534668
    7. '[line' → logprob: -10.876521110534668
    8. '[x' → logprob: -11.001521110534668
    9. '[int' → logprob: -11.001521110534668
    10. '[_' → logprob: -11.001521110534668

Token 503: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13287702202796936
    2. 'x' → logprob: -2.1328771114349365
    3. 'a' → logprob: -5.132876873016357
    4. 'i' → logprob: -10.757877349853516
    5. 'e' → logprob: -12.507877349853516
    6. 'b' → logprob: -13.132877349853516
    7. 'k' → logprob: -13.632877349853516
    8. 'n' → logprob: -13.882877349853516
    9. '(int' → logprob: -14.382877349853516
    10. 'v' → logprob: -14.757877349853516

Token 504: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004446124075911939
    2. 'x' → logprob: -7.750444412231445
    3. '(sys' → logprob: -12.500444412231445
    4. '(a' → logprob: -13.000444412231445
    5. '(i' → logprob: -13.500444412231445
    6. '(' → logprob: -13.500444412231445
    7. 'a' → logprob: -13.750444412231445
    8. '(s' → logprob: -13.750444412231445
    9. '(_)' → logprob: -13.750444412231445
    10. '(_' → logprob: -14.000444412231445

Token 505: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2836189866065979
    2. '()-' → logprob: -1.6586189270019531
    3. '(sys' → logprob: -3.283618927001953
    4. ')-' → logprob: -5.158618927001953
    5. '())' → logprob: -5.408618927001953
    6. ')' → logprob: -5.533618927001953
    7. '(x' → logprob: -5.658618927001953
    8. '-' → logprob: -7.658618927001953
    9. '(input' → logprob: -8.408618927001953
    10. '(' → logprob: -8.533618927001953

Token 506: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07580935209989548
    2. '()-' → logprob: -2.8258092403411865
    3. '()' → logprob: -4.575809478759766
    4. ' -' → logprob: -6.700809478759766
    5. '(sys' → logprob: -6.700809478759766
    6. '(x' → logprob: -7.325809478759766
    7. '(' → logprob: -8.700809478759766
    8. 'for' → logprob: -9.950809478759766
    9. 'sys' → logprob: -10.325809478759766
    10. ')-' → logprob: -10.825809478759766

Token 507: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -18.75004005432129
    4. '   ' → logprob: -20.12504005432129
    5. '```' → logprob: -20.62504005432129
    6. '  ' → logprob: -20.62504005432129
    7. '１' → logprob: -20.87504005432129
    8. '
' → logprob: -21.25004005432129
    9. '0' → logprob: -21.25004005432129
    10. ')' → logprob: -21.43754005432129

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '１' → logprob: -21.625
    4. '   ' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. '১' → logprob: -23.5
    7. '0' → logprob: -24.0
    8. 'for' → logprob: -24.25
    9. '१' → logprob: -24.375
    10. '' → logprob: -24.375

Token 509: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868783116340637
    2. 'for' → logprob: -1.136878252029419
    3. '	for' → logprob: -12.26187801361084
    4. ' ' → logprob: -13.01187801361084
    5. ')' → logprob: -15.13687801361084
    6. ' ' → logprob: -17.386878967285156
    7. '<|end|>' → logprob: -17.761878967285156
    8. 'x' → logprob: -18.761878967285156
    9. '  ' → logprob: -18.886878967285156
    10. '   ' → logprob: -19.136878967285156

Token 510: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10021141171455383
    2. 'x' → logprob: -2.3502113819122314
    3. '	x' → logprob: -12.475211143493652
    4. ' ' → logprob: -15.225211143493652
    5. '(x' → logprob: -15.225211143493652
    6. '_x' → logprob: -16.22521209716797
    7. ' ' → logprob: -16.60021209716797
    8. '_' → logprob: -16.85021209716797
    9. ' sys' → logprob: -16.85021209716797
    10. '"x' → logprob: -17.72521209716797

Token 511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812787592411041
    2. 'in' → logprob: -1.4062787294387817
    3. 'x' → logprob: -9.031278610229492
    4. ' x' → logprob: -12.906278610229492
    5. 'sys' → logprob: -13.656278610229492
    6. '
' → logprob: -14.156278610229492
    7. 'n' → logprob: -14.281278610229492
    8. 's' → logprob: -14.281278610229492
    9. 'inp' → logprob: -14.531278610229492
    10. ' ' → logprob: -14.531278610229492

Token 512: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008052219054661691
    2. ' sys' → logprob: -7.125805377960205
    3. '	sys' → logprob: -15.375804901123047
    4. '=sys' → logprob: -15.375804901123047
    5. '(sys' → logprob: -16.000804901123047
    6. 'system' → logprob: -16.875804901123047
    7. 'LI' → logprob: -17.125804901123047
    8. 'input' → logprob: -17.500804901123047
    9. 's' → logprob: -17.875804901123047
    10. ' ' → logprob: -18.000804901123047

Token 513: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.05431801453232765
    2. '().' → logprob: -3.4293179512023926
    3. 'stdin' → logprob: -4.304317951202393
    4. '(stdin' → logprob: -5.304317951202393
    5. '.readline' → logprob: -7.429317951202393
    6. '()' → logprob: -7.679317951202393
    7. '()]' → logprob: -8.30431842803955
    8. '())' → logprob: -8.67931842803955
    9. 'in' → logprob: -8.80431842803955
    10. '().__' → logprob: -9.55431842803955

Token 514: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: 0.0
    2. '.' → logprob: -17.25
    3. ' readline' → logprob: -19.0
    4. '.readlines' → logprob: -19.625
    5. '.read' → logprob: -21.375
    6. '.stdin' → logprob: -21.625
    7. ' .' → logprob: -21.875
    8. '].' → logprob: -22.25
    9. '().' → logprob: -22.375
    10. 'read' → logprob: -22.75

Token 515: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.13388703338569e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -16.500009536743164
    4. '()]' → logprob: -17.125009536743164
    5. '(' → logprob: -18.250009536743164
    6. '())' → logprob: -19.250009536743164
    7. '()].' → logprob: -19.625009536743164
    8. '.split' → logprob: -19.875009536743164
    9. '().__' → logprob: -20.125009536743164
    10. '()
' → logprob: -20.500009536743164

Token 516: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.641841820150148e-05
    2. 'strip' → logprob: -10.62502670288086
    3. ' split' → logprob: -13.50002670288086
    4. 'rstrip' → logprob: -14.62502670288086
    5. 'read' → logprob: -15.62502670288086
    6. 'decode' → logprob: -16.87502670288086
    7. 'spl' → logprob: -18.37502670288086
    8. '(split' → logprob: -18.87502670288086
    9. '().' → logprob: -19.50002670288086
    10. ' ' → logprob: -19.50002670288086

Token 517: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.650518920039758e-06
    2. '()' → logprob: -12.750003814697266
    3. ']' → logprob: -14.500003814697266
    4. '(' → logprob: -16.625003814697266
    5. ']()' → logprob: -17.000003814697266
    6. '())' → logprob: -17.125003814697266
    7. '()]
' → logprob: -17.875003814697266
    8. ' ()' → logprob: -18.000003814697266
    9. ')]' → logprob: -18.875003814697266
    10. '()][' → logprob: -20.500003814697266

Token 518: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03816187009215355
    2. '()]' → logprob: -3.2881617546081543
    3. ')]' → logprob: -9.913162231445312
    4. ']()' → logprob: -10.163162231445312
    5. ' ]' → logprob: -10.538162231445312
    6. '()' → logprob: -12.663162231445312
    7. ']
' → logprob: -14.038162231445312
    8. '   ' → logprob: -14.913162231445312
    9. '']' → logprob: -15.038162231445312
    10. ')' → logprob: -15.288162231445312

Token 519: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013240495463833213
    2. '#' → logprob: -7.37632417678833
    3. ':' → logprob: -7.75132417678833
    4. ')' → logprob: -8.751323699951172
    5. '<|end|>' → logprob: -10.001323699951172
    6. ':def' → logprob: -11.126323699951172
    7. '```' → logprob: -11.376323699951172
    8. '\' → logprob: -12.501323699951172
    9. 'de' → logprob: -12.751323699951172
    10. 'newline' → logprob: -12.751323699951172

Token 520: ' LF' (ID: 107653)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.06517411768436432
    2. 'LS' → logprob: -3.315174102783203
    3. 'S' → logprob: -3.815174102783203
    4. 'input' → logprob: -6.440174102783203
    5. 'L' → logprob: -6.940174102783203
    6. 'II' → logprob: -7.565174102783203
    7. 'IN' → logprob: -8.315174102783203
    8. 'IS' → logprob: -8.440174102783203
    9. 'int' → logprob: -8.440174102783203
    10. 'INT' → logprob: -8.565174102783203

Token 521: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011425851844251156
    2. '():
' → logprob: -4.511425971984863
    3. '()' → logprob: -7.886425971984863
    4. ' ():' → logprob: -14.011425971984863
    5. '():
' → logprob: -14.261425971984863
    6. '():

' → logprob: -14.761425971984863
    7. '()>' → logprob: -16.386425018310547
    8. '(' → logprob: -17.011425018310547
    9. 'def' → logprob: -17.511425018310547
    10. ' ()' → logprob: -17.511425018310547

Token 522: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06365948170423508
    2. '():
' → logprob: -2.813659429550171
    3. '()' → logprob: -6.68865966796875
    4. 'def' → logprob: -7.93865966796875
    5. '():
' → logprob: -10.06365966796875
    6. '):' → logprob: -11.18865966796875
    7. '   ' → logprob: -11.68865966796875
    8. ' ():' → logprob: -12.18865966796875
    9. '):
' → logprob: -12.56365966796875
    10. ':' → logprob: -12.56365966796875

Token 523: ' """
' (ID: 7037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7295937538146973
    2. 'return' → logprob: -1.2295937538146973
    3. 'def' → logprob: -1.8545937538146973
    4. '():
' → logprob: -3.3545937538146973
    5. '():' → logprob: -3.6045937538146973
    6. '()
' → logprob: -5.854593753814697
    7. ' return' → logprob: -5.979593753814697
    8. ')' → logprob: -7.354593753814697
    9. ':return' → logprob: -8.729593276977539
    10. '   ' → logprob: -8.854593276977539

Token 524: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5238614082336426
    2. '   ' → logprob: -1.5238614082336426
    3. 'def' → logprob: -2.1488614082336426
    4. ')' → logprob: -2.8988614082336426
    5. ' return' → logprob: -4.398861408233643
    6. '()' → logprob: -5.898861408233643
    7. '):
' → logprob: -6.523861408233643
    8. '"""
' → logprob: -7.148861408233643
    9. '):' → logprob: -8.773860931396484
    10. '"""' → logprob: -9.023860931396484

Token 525: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06289151310920715
    2. 'def' → logprob: -3.0628914833068848
    3. '   ' → logprob: -4.812891483306885
    4. '"""
' → logprob: -5.312891483306885
    5. '"""' → logprob: -6.937891483306885
    6. ' return' → logprob: -8.812891960144043
    7. '()' → logprob: -11.937891960144043
    8. '""' → logprob: -11.937891960144043
    9. ':return' → logprob: -12.687891960144043
    10. ' ' → logprob: -12.937891960144043

Token 526: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008261365815997124
    2. 'une' → logprob: -5.383261203765869
    3. ' une' → logprob: -6.508261203765869
    4. 'a' → logprob: -6.883261203765869
    5. '[]' → logprob: -8.258261680603027
    6. '():' → logprob: -8.383261680603027
    7. ' ()' → logprob: -8.383261680603027
    8. '().' → logprob: -9.383261680603027
    9. '()=>' → logprob: -10.133261680603027
    10. 'float' → logprob: -10.633261680603027

Token 527: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.025205183774232864
    2. 'line' → logprob: -4.150205135345459
    3. ' ligne' → logprob: -4.775205135345459
    4. 'liste' → logprob: -8.025205612182617
    5. 'float' → logprob: -8.650205612182617
    6. 'l' → logprob: -9.275205612182617
    7. 'ine' → logprob: -10.275205612182617
    8. 'list' → logprob: -11.025205612182617
    9. ' line' → logprob: -11.275205612182617
    10. '()' → logprob: -11.525205612182617

Token 528: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001450948417186737
    2. '().' → logprob: -7.501451015472412
    3. 'from' → logprob: -7.876451015472412
    4. ' ()' → logprob: -8.376450538635254
    5. '()
' → logprob: -9.751450538635254
    6. '():' → logprob: -10.001450538635254
    7. '   ' → logprob: -10.376450538635254
    8. 'def' → logprob: -10.501450538635254
    9. ' depuis' → logprob: -10.876450538635254
    10. '()[' → logprob: -11.126450538635254

Token 529: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.400577187538147
    2. 'l' → logprob: -1.150577187538147
    3. ' sys' → logprob: -4.775577068328857
    4. '(sys' → logprob: -6.150577068328857
    5. ' l' → logprob: -6.275577068328857
    6. '=sys' → logprob: -7.650577068328857
    7. 'la' → logprob: -7.900577068328857
    8. ' la' → logprob: -9.150577545166016
    9. '()' → logprob: -9.775577545166016
    10. 'le' → logprob: -10.025577545166016

Token 530: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.004738295450806618
    2. 'entrée' → logprob: -5.5047383308410645
    3. ''import' → logprob: -8.254737854003906
    4. ''ent' → logprob: -9.129737854003906
    5. 'input' → logprob: -9.254737854003906
    6. '’entrée' → logprob: -9.754737854003906
    7. 'stdin' → logprob: -10.879737854003906
    8. ''' → logprob: -10.879737854003906
    9. 'import' → logprob: -11.129737854003906
    10. '_input' → logprob: -11.129737854003906

Token 531: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.0808778628706932
    2. ' standard' → logprob: -2.5808777809143066
    3. '()' → logprob: -6.830877780914307
    4. '().' → logprob: -7.955877780914307
    5. '.standard' → logprob: -8.830878257751465
    6. 'def' → logprob: -9.580878257751465
    7. '_standard' → logprob: -9.580878257751465
    8. '()
' → logprob: -9.705878257751465
    9. 'std' → logprob: -9.705878257751465
    10. 'sys' → logprob: -10.330878257751465

Token 532: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.895373523235321
    2. '():
' → logprob: -1.0203735828399658
    3. '():' → logprob: -1.5203735828399658
    4. '().' → logprob: -5.020373344421387
    5. '   ' → logprob: -5.770373344421387
    6. 'def' → logprob: -6.520373344421387
    7. '()
' → logprob: -8.270373344421387
    8. ',' → logprob: -8.520373344421387
    9. '():
' → logprob: -8.770373344421387
    10. ' =' → logprob: -9.145373344421387

Token 533: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5455689430236816
    2. 'def' → logprob: -0.9205689430236816
    3. ' return' → logprob: -4.420568943023682
    4. '   ' → logprob: -4.670568943023682
    5. 'la' → logprob: -7.670568943023682
    6. ' la' → logprob: -9.170568466186523
    7. 'lambda' → logprob: -9.295568466186523
    8. ' def' → logprob: -10.170568466186523
    9. ' retourne' → logprob: -10.420568466186523
    10. 'list' → logprob: -11.170568466186523

Token 534: ' sé' (ID: 7462)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.035842783749103546
    2. 'sé' → logprob: -3.9108428955078125
    3. ' sé' → logprob: -4.7858428955078125
    4. 'convert' → logprob: -6.1608428955078125
    5. ' split' → logprob: -6.4108428955078125
    6. 's' → logprob: -7.0358428955078125
    7. 'spl' → logprob: -7.2858428955078125
    8. 'map' → logprob: -7.7858428955078125
    9. 'return' → logprob: -8.035842895507812
    10. ' retourne' → logprob: -8.160842895507812

Token 535: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0017318216850981116
    2. 'part' → logprob: -6.501731872558594
    3. 'p' → logprob: -8.751731872558594
    4. 'parte' → logprob: -10.001731872558594
    5. 'parate' → logprob: -12.126731872558594
    6. 'par' → logprob: -12.126731872558594
    7. 'parse' → logprob: -12.376731872558594
    8. '
' → logprob: -13.501731872558594
    9. '_p' → logprob: -13.626731872558594
    10. 'pat' → logprob: -14.126731872558594

Token 536: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.21596024930477142
    2. '()' → logprob: -2.2159602642059326
    3. 'par' → logprob: -2.4659602642059326
    4. '(par' → logprob: -9.465960502624512
    5. '   ' → logprob: -10.340960502624512
    6. '().' → logprob: -10.715960502624512
    7. '	par' → logprob: -10.715960502624512
    8. '.par' → logprob: -10.840960502624512
    9. '_par' → logprob: -11.465960502624512
    10. '()
' → logprob: -11.465960502624512

Token 537: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.04451049119234085
    2. 'spaces' → logprob: -3.41951060295105
    3. ' espaces' → logprob: -4.544510364532471
    4. 'float' → logprob: -9.294510841369629
    5. 'es' → logprob: -9.794510841369629
    6. ''esp' → logprob: -11.044510841369629
    7. 'flo' → logprob: -12.169510841369629
    8. 'space' → logprob: -13.294510841369629
    9. 'sys' → logprob: -13.294510841369629
    10. ' spaces' → logprob: -13.544510841369629

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002264328533783555
    2. '   ' → logprob: -6.252264499664307
    3. 'def' → logprob: -8.502264022827148
    4. '(),' → logprob: -9.877264022827148
    5. ' ,' → logprob: -10.377264022827148
    6. 'return' → logprob: -10.502264022827148
    7. '()' → logprob: -12.002264022827148
    8. ',
' → logprob: -12.002264022827148
    9. ')' → logprob: -12.627264022827148
    10. '),' → logprob: -12.877264022827148

Token 539: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.210696741938591
    2. 'return' → logprob: -1.7106966972351074
    3. ' la' → logprob: -5.585696697235107
    4. 'def' → logprob: -5.835696697235107
    5. ' return' → logprob: -6.585696697235107
    6. 'ret' → logprob: -6.960696697235107
    7. ' retourne' → logprob: -8.960697174072266
    8. '   ' → logprob: -9.585697174072266
    9. 'La' → logprob: -11.085697174072266
    10. 'convert' → logprob: -11.960697174072266

Token 540: ' convert' (ID: 8452)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5668982863426208
    2. 'map' → logprob: -1.0668983459472656
    3. 'convert' → logprob: -2.6918983459472656
    4. 'return' → logprob: -4.316898345947266
    5. 'list' → logprob: -5.691898345947266
    6. 'flo' → logprob: -6.566898345947266
    7. 'split' → logprob: -7.691898345947266
    8. 'liste' → logprob: -7.816898345947266
    9. 'car' → logprob: -8.066898345947266
    10. ' map' → logprob: -8.316898345947266

Token 541: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -4.584861744660884e-05
    2. 'issant' → logprob: -10.875045776367188
    3. 't' → logprob: -11.250045776367188
    4. 'e' → logprob: -12.875045776367188
    5. 'It' → logprob: -13.000045776367188
    6. 'ît' → logprob: -13.750045776367188
    7. 'is' → logprob: -13.875045776367188
    8. '[it' → logprob: -14.000045776367188
    9. 'eit' → logprob: -14.250045776367188
    10. 'ist' → logprob: -14.250045776367188

Token 542: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0017290873220190406
    2. 'en' → logprob: -7.2517290115356445
    3. 'float' → logprob: -8.001729011535645
    4. '(float' → logprob: -9.001729011535645
    5. 'def' → logprob: -9.001729011535645
    6. '=lambda' → logprob: -9.876729011535645
    7. '()' → logprob: -10.126729011535645
    8. 'flo' → logprob: -10.126729011535645
    9. '=float' → logprob: -10.251729011535645
    10. 'import' → logprob: -10.376729011535645

Token 543: ' flott' (ID: 108700)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.27024832367897034
    2. 'flo' → logprob: -1.520248293876648
    3. 'fl' → logprob: -4.2702484130859375
    4. 'list' → logprob: -5.5202484130859375
    5. 'liste' → logprob: -9.145248413085938
    6. 'floating' → logprob: -10.020248413085938
    7. ' flott' → logprob: -11.895248413085938
    8. ' float' → logprob: -12.895248413085938
    9. 'f' → logprob: -13.020248413085938
    10. '```' → logprob: -13.020248413085938

Token 544: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.1034793108701706
    2. 'ats' → logprob: -3.1034793853759766
    3. 'ots' → logprob: -3.8534793853759766
    4. 'ot' → logprob: -4.728479385375977
    5. 't' → logprob: -5.603479385375977
    6. 'at' → logprob: -5.853479385375977
    7. 'ant' → logprob: -5.978479385375977
    8. 'o' → logprob: -6.103479385375977
    9. 'ints' → logprob: -6.103479385375977
    10. 'oints' → logprob: -6.353479385375977

Token 545: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021629150433000177
    2. '().' → logprob: -9.375216484069824
    3. '.' → logprob: -10.375216484069824
    4. ')' → logprob: -10.500216484069824
    5. ' ()' → logprob: -10.875216484069824
    6. '()
' → logprob: -10.875216484069824
    7. 'def' → logprob: -11.500216484069824
    8. ',' → logprob: -11.750216484069824
    9. '   ' → logprob: -12.500216484069824
    10. '()]' → logprob: -12.625216484069824

Token 546: ' retourne' (ID: 178818)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.352651447057724
    2. 'return' → logprob: -1.6026514768600464
    3. ' retourne' → logprob: -2.352651357650757
    4. ' return' → logprob: -7.727651596069336
    5. 'returns' → logprob: -9.477651596069336
    6. ' ret' → logprob: -9.727651596069336
    7. ' retour' → logprob: -9.977651596069336
    8. 'ren' → logprob: -11.102651596069336
    9. '   ' → logprob: -11.477651596069336
    10. ' returns' → logprob: -11.602651596069336

Token 547: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06197037547826767
    2. ' list' → logprob: -2.8119704723358154
    3. '(list' → logprob: -13.686970710754395
    4. 'lambda' → logprob: -13.936970710754395
    5. 'la' → logprob: -15.186970710754395
    6. ' la' → logprob: -15.561970710754395
    7. 'float' → logprob: -15.936970710754395
    8. 'liste' → logprob: -16.811969757080078
    9. '	list' → logprob: -17.436969757080078
    10. '=list' → logprob: -17.936969757080078

Token 548: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.26253265142440796
    2. 'liste' → logprob: -2.0125327110290527
    3. ' list' → logprob: -2.7625327110290527
    4. ' liste' → logprob: -3.3875327110290527
    5. 'float' → logprob: -8.137532234191895
    6. ' ' → logprob: -11.512532234191895
    7. 'lista' → logprob: -11.887532234191895
    8. '```' → logprob: -12.387532234191895
    9. ' float' → logprob: -12.762532234191895
    10. 'Liste' → logprob: -13.137532234191895

Token 549: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.4192871175473556e-05
    2. '(' → logprob: -11.125054359436035
    3. '()
' → logprob: -11.500054359436035
    4. ' ()' → logprob: -11.875054359436035
    5. '[]' → logprob: -12.500054359436035
    6. 'def' → logprob: -12.500054359436035
    7. '().' → logprob: -12.625054359436035
    8. '();' → logprob: -12.875054359436035
    9. '()]' → logprob: -13.125054359436035
    10. '   ' → logprob: -13.375054359436035

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062577024102211
    2. '()' → logprob: -2.81257700920105
    3. '()
' → logprob: -8.437577247619629
    4. 'return' → logprob: -8.687577247619629
    5. '():' → logprob: -9.437577247619629
    6. '():
' → logprob: -9.687577247619629
    7. ')' → logprob: -10.562577247619629
    8. 'def' → logprob: -10.687577247619629
    9. '[]' → logprob: -11.562577247619629
    10. ' return' → logprob: -11.937577247619629

Token 551: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026015799958258867
    2. 'return' → logprob: -6.002601623535156
    3. 'def' → logprob: -9.002601623535156
    4. ' return' → logprob: -12.877601623535156
    5. '```' → logprob: -16.002601623535156
    6. '	return' → logprob: -16.377601623535156
    7. '
' → logprob: -17.377601623535156
    8. ':return' → logprob: -17.502601623535156
    9. '  ' → logprob: -17.877601623535156
    10. '       ' → logprob: -18.752601623535156

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9360190033912659
    2. '   ' → logprob: -1.061018943786621
    3. '():' → logprob: -1.436018943786621
    4. '()' → logprob: -4.436018943786621
    5. '():
' → logprob: -5.811018943786621
    6. ':
' → logprob: -5.936018943786621
    7. 'def' → logprob: -6.936018943786621
    8. '=' → logprob: -7.061018943786621
    9. '(
' → logprob: -7.061018943786621
    10. '(' → logprob: -7.061018943786621

Token 553: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008632888086140156
    2. ' list' → logprob: -5.008632659912109
    3. 'list' → logprob: -6.258632659912109
    4. 'List' → logprob: -13.88363265991211
    5. 'return' → logprob: -15.63363265991211
    6. '[]' → logprob: -15.75863265991211
    7. '	list' → logprob: -15.75863265991211
    8. 'def' → logprob: -16.13363265991211
    9. '  ' → logprob: -16.50863265991211
    10. '```' → logprob: -17.13363265991211

Token 554: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -5.8961017202818766e-05
    2. ' list' → logprob: -9.750059127807617
    3. 'List' → logprob: -15.125059127807617
    4. 'float' → logprob: -15.375059127807617
    5. 'return' → logprob: -16.000059127807617
    6. 'def' → logprob: -19.375059127807617
    7. '[]' → logprob: -20.000059127807617
    8. '[' → logprob: -20.750059127807617
    9. '[list' → logprob: -21.000059127807617
    10. 'lst' → logprob: -21.375059127807617

Token 555: ' of' (ID: 328)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3520395755767822
    2. '(' → logprob: -1.2270395755767822
    3. '(float' → logprob: -5.852039337158203
    4. 'of' → logprob: -8.102039337158203
    5. '(
' → logprob: -8.852039337158203
    6. ' (' → logprob: -9.227039337158203
    7. ' of' → logprob: -9.602039337158203
    8. 'map' → logprob: -10.727039337158203
    9. ' map' → logprob: -10.977039337158203
    10. '(list' → logprob: -11.352039337158203

Token 556: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00015860427811276168
    2. ' float' → logprob: -8.750158309936523
    3. 'flo' → logprob: -15.625158309936523
    4. '(float' → logprob: -18.875158309936523
    5. '<float' → logprob: -19.625158309936523
    6. 'f' → logprob: -19.625158309936523
    7. '=float' → logprob: -19.875158309936523
    8. '	float' → logprob: -20.750158309936523
    9. '_float' → logprob: -21.750158309936523
    10. ',float' → logprob: -21.875158309936523

Token 557: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06383397430181503
    2. ':' → logprob: -2.8138339519500732
    3. '):' → logprob: -6.813834190368652
    4. '()' → logprob: -8.063834190368652
    5. '():
' → logprob: -8.563834190368652
    6. ']:' → logprob: -8.938834190368652
    7. ' ():' → logprob: -9.688834190368652
    8. ' :' → logprob: -11.063834190368652
    9. 'def' → logprob: -11.813834190368652
    10. '   ' → logprob: -11.938834190368652

Token 558: ' Liste' (ID: 61030)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31326353549957275
    2. ' list' → logprob: -1.3132635354995728
    3. 'map' → logprob: -14.313263893127441
    4. 'float' → logprob: -14.313263893127441
    5. 'return' → logprob: -15.063263893127441
    6. 'List' → logprob: -15.938263893127441
    7. '   ' → logprob: -16.688262939453125
    8. ' map' → logprob: -17.313262939453125
    9. ' ' → logprob: -17.688262939453125
    10. ' float' → logprob: -18.188262939453125

Token 559: ' des' (ID: 731)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0027051314245909452
    2. '(' → logprob: -6.127705097198486
    3. 'map' → logprob: -8.252705574035645
    4. '(float' → logprob: -8.502705574035645
    5. '(
' → logprob: -11.002705574035645
    6. '(math' → logprob: -11.502705574035645
    7. 'of' → logprob: -11.502705574035645
    8. ' (' → logprob: -12.127705574035645
    9. ' map' → logprob: -12.377705574035645
    10. 'flo' → logprob: -12.752705574035645

Token 560: ' flott' (ID: 108700)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.0154443979263306
    2. 'flo' → logprob: -1.0154443979263306
    3. ' floats' → logprob: -2.015444278717041
    4. 'map' → logprob: -2.140444278717041
    5. ' map' → logprob: -4.390444278717041
    6. ' float' → logprob: -4.640444278717041
    7. ' flott' → logprob: -6.265444278717041
    8. 'fl' → logprob: -7.390444278717041
    9. '(map' → logprob: -10.3904447555542
    10. 'f' → logprob: -11.1404447555542

Token 561: 'ants' (ID: 2027)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.09197039157152176
    2. 'ats' → logprob: -2.841970443725586
    3. 'ots' → logprob: -3.841970443725586
    4. 'ants' → logprob: -6.216970443725586
    5. 'e' → logprob: -6.216970443725586
    6. 'aints' → logprob: -6.716970443725586
    7. 'oints' → logprob: -7.216970443725586
    8. 'aits' → logprob: -7.841970443725586
    9. 'auts' → logprob: -7.841970443725586
    10. 'aats' → logprob: -7.841970443725586

Token 562: ' lus' (ID: 54762)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3518152236938477
    2. 'read' → logprob: -1.3518152236938477
    3. '<|end|>' → logprob: -2.3518152236938477
    4. '(read' → logprob: -2.4768152236938477
    5. '(map' → logprob: -3.1018152236938477
    6. '(' → logprob: -3.6018152236938477
    7. '.' → logprob: -3.7268152236938477
    8. '```' → logprob: -3.8518152236938477
    9. ']' → logprob: -3.9768152236938477
    10. 'import' → logprob: -4.101815223693848

Token 563: ' sur' (ID: 1512)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.4191654920578003
    2. '(' → logprob: -1.6691654920578003
    3. '()' → logprob: -2.16916561126709
    4. 'from' → logprob: -3.66916561126709
    5. '(float' → logprob: -6.16916561126709
    6. ')' → logprob: -6.29416561126709
    7. ' (' → logprob: -6.79416561126709
    8. 'import' → logprob: -6.91916561126709
    9. 'sys' → logprob: -6.91916561126709
    10. '.' → logprob: -7.04416561126709

Token 564: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002038914244621992
    2. ' sys' → logprob: -6.377038955688477
    3. 'la' → logprob: -8.252038955688477
    4. '(sys' → logprob: -9.752038955688477
    5. 'l' → logprob: -11.627038955688477
    6. ' la' → logprob: -12.127038955688477
    7. 'le' → logprob: -14.127038955688477
    8. 's' → logprob: -14.252038955688477
    9. 'list' → logprob: -14.502038955688477
    10. '=sys' → logprob: -15.002038955688477

Token 565: ' ligne' (ID: 19583)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08027715235948563
    2. ' sys' → logprob: -2.58027720451355
    3. 'line' → logprob: -7.955276966094971
    4. '(sys' → logprob: -8.080277442932129
    5. '=sys' → logprob: -8.205277442932129
    6. 'ligne' → logprob: -8.330277442932129
    7. 'l' → logprob: -9.580277442932129
    8. ' line' → logprob: -10.205277442932129
    9. 'float' → logprob: -10.330277442932129
    10. 'input' → logprob: -10.580277442932129

Token 566: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007785839028656483
    2. ')' → logprob: -6.132785797119141
    3. '()]' → logprob: -6.382785797119141
    4. 'standard' → logprob: -6.507785797119141
    5. '[]' → logprob: -7.132785797119141
    6. ']' → logprob: -7.382785797119141
    7. '())' → logprob: -7.632785797119141
    8. ' standard' → logprob: -9.50778579711914
    9. ']()' → logprob: -10.00778579711914
    10. '.' → logprob: -10.00778579711914

Token 567: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.044085800647735596
    2. '()]' → logprob: -3.169085741043091
    3. ']' → logprob: -7.29408597946167
    4. '())' → logprob: -8.544085502624512
    5. ')' → logprob: -8.919085502624512
    6. '   ' → logprob: -10.294085502624512
    7. '()
' → logprob: -10.919085502624512
    8. ']()' → logprob: -11.794085502624512
    9. ' ()' → logprob: -12.044085502624512
    10. 'def' → logprob: -12.044085502624512

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005852030590176582
    2. ')' → logprob: -7.625585079193115
    3. 'return' → logprob: -9.875585556030273
    4. 'def' → logprob: -11.125585556030273
    5. ' return' → logprob: -12.000585556030273
    6. '<|end|>' → logprob: -12.000585556030273
    7. '  ' → logprob: -12.375585556030273
    8. '[]' → logprob: -12.625585556030273
    9. '```' → logprob: -12.750585556030273
    10. '	return' → logprob: -13.250585556030273

Token 569: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024810345843434334
    2. 'return' → logprob: -3.774810314178467
    3. ')' → logprob: -7.274810314178467
    4. ' return' → logprob: -7.399810314178467
    5. 'def' → logprob: -9.649810791015625
    6. '```' → logprob: -10.024810791015625
    7. '	return' → logprob: -10.274810791015625
    8. '"""
' (adapté à ' """
') → logprob: -10.274810791015625
    9. '"""' → logprob: -10.774810791015625
    10. '
' → logprob: -11.524810791015625

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048620183020830154
    2. 'return' → logprob: -3.0486202239990234
    3. ' return' → logprob: -10.423620223999023
    4. 'def' → logprob: -13.173620223999023
    5. '```' → logprob: -14.048620223999023
    6. '	return' → logprob: -14.673620223999023
    7. '
' → logprob: -17.673620223999023
    8. '   ' → logprob: -17.798620223999023
    9. '  ' → logprob: -18.423620223999023
    10. '`' → logprob: -18.798620223999023

Token 571: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.0100624169572257e-05
    2. ' return' → logprob: -11.250020027160645
    3. 'def' → logprob: -12.000020027160645
    4. '   ' → logprob: -14.000020027160645
    5. '	return' → logprob: -19.62502098083496
    6. '
' → logprob: -20.12502098083496
    7. '```' → logprob: -21.12502098083496
    8. 'float' → logprob: -22.87502098083496
    9. 'eturn' → logprob: -23.50002098083496
    10. 'Return' → logprob: -23.75002098083496

Token 572: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001170225441455841
    2. ' list' → logprob: -6.7511701583862305
    3. 'map' → logprob: -18.126171112060547
    4. '[' → logprob: -21.626171112060547
    5. 'List' → logprob: -21.751171112060547
    6. '[list' → logprob: -21.876171112060547
    7. 'float' → logprob: -22.376171112060547
    8. '	list' → logprob: -22.876171112060547
    9. ' ' → logprob: -23.126171112060547
    10. '(list' → logprob: -23.501171112060547

Token 573: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.512236498361744e-07
    2. ' float' → logprob: -14.500000953674316
    3. 'flo' → logprob: -19.625
    4. '	float' → logprob: -21.375
    5. '```' → logprob: -23.0
    6. '
' → logprob: -23.0
    7. '(float' → logprob: -23.5
    8. 'fl' → logprob: -23.625
    9. 'f' → logprob: -23.875
    10. '=float' → logprob: -24.5

Token 574: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.125018119812012
    3. ' (' → logprob: -12.875018119812012
    4. '(s' → logprob: -14.250018119812012
    5. 'x' → logprob: -16.250017166137695
    6. ']' → logprob: -18.125017166137695
    7. 's' → logprob: -18.750017166137695
    8. '(sys' → logprob: -18.875017166137695
    9. '(i' → logprob: -19.125017166137695
    10. '(
' → logprob: -19.125017166137695

Token 575: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6628443598747253
    2. ')' → logprob: -0.7878443598747253
    3. 'for' → logprob: -3.78784441947937
    4. ' for' → logprob: -5.037844181060791
    5. '(x' → logprob: -7.787844181060791
    6. ' ()' → logprob: -10.03784465789795
    7. 'sys' → logprob: -10.28784465789795
    8. 's' → logprob: -10.66284465789795
    9. '())' → logprob: -10.66284465789795
    10. 'in' → logprob: -10.78784465789795

Token 576: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6400328278541565
    2. 'for' → logprob: -0.7650328278541565
    3. '()' → logprob: -5.015032768249512
    4. 'sys' → logprob: -8.515032768249512
    5. '(sys' → logprob: -8.640032768249512
    6. ' sys' → logprob: -8.765032768249512
    7. ')' → logprob: -9.015032768249512
    8. '=sys' → logprob: -9.640032768249512
    9. ' ()' → logprob: -10.890032768249512
    10. ' ' → logprob: -11.890032768249512

Token 577: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31336504220962524
    2. 'sys' → logprob: -1.3133649826049805
    3. '(sys' → logprob: -10.43836498260498
    4. '=sys' → logprob: -10.43836498260498
    5. 'x' → logprob: -10.68836498260498
    6. ' x' → logprob: -11.06336498260498
    7. '	sys' → logprob: -12.43836498260498
    8. ' ' → logprob: -14.31336498260498
    9. '/sys' → logprob: -14.81336498260498
    10. ' in' → logprob: -15.06336498260498

Token 578: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08908221125602722
    2. 'in' → logprob: -2.4640822410583496
    3. 'import' → logprob: -9.464081764221191
    4. '(' → logprob: -11.089081764221191
    5. 'sys' → logprob: -11.464081764221191
    6. '   ' → logprob: -11.589081764221191
    7. '(sys' → logprob: -11.839081764221191
    8. '=sys' → logprob: -12.089081764221191
    9. '()' → logprob: -12.214081764221191
    10. 's' → logprob: -13.089081764221191

Token 579: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004306692280806601
    2. ' sys' → logprob: -7.750430583953857
    3. '(sys' → logprob: -18.750431060791016
    4. '	sys' → logprob: -19.500431060791016
    5. '=sys' → logprob: -19.750431060791016
    6. '
' → logprob: -19.875431060791016
    7. '.sys' → logprob: -21.375431060791016
    8. ' ' → logprob: -21.750431060791016
    9. 'map' → logprob: -23.000431060791016
    10. '   ' → logprob: -23.125431060791016

Token 580: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0013269031187519431
    2. '().' → logprob: -7.001327037811279
    3. 'stdin' → logprob: -8.376326560974121
    4. '(stdin' → logprob: -9.251326560974121
    5. '.readline' → logprob: -10.251326560974121
    6. '.stdout' → logprob: -10.501326560974121
    7. 'd' → logprob: -12.126326560974121
    8. 'sys' → logprob: -12.376326560974121
    9. 'in' → logprob: -12.751326560974121
    10. '._' → logprob: -13.376326560974121

Token 581: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.048612114042043686
    2. '().' → logprob: -3.048612117767334
    3. '()' → logprob: -11.173611640930176
    4. '.' → logprob: -11.548611640930176
    5. '()]' → logprob: -15.048611640930176
    6. '()[' → logprob: -15.173611640930176
    7. '.readlines' → logprob: -16.298612594604492
    8. '].' → logprob: -16.548612594604492
    9. '().__' → logprob: -16.923612594604492
    10. 'import' → logprob: -17.173612594604492

Token 582: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -16.625
    4. '.split' → logprob: -20.125
    5. '(' → logprob: -20.75
    6. '.' → logprob: -21.375
    7. ' .' → logprob: -21.625
    8. '()]' → logprob: -22.875
    9. '()].' → logprob: -23.0
    10. '()
' → logprob: -23.125

Token 583: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. 'strip' → logprob: -13.125003814697266
    3. ' split' → logprob: -13.375003814697266
    4. '.split' → logprob: -16.625003814697266
    5. '(split' → logprob: -17.625003814697266
    6. 'rstrip' → logprob: -18.250003814697266
    7. '().' → logprob: -18.375003814697266
    8. 'read' → logprob: -19.750003814697266
    9. 'decode' → logprob: -19.750003814697266
    10. 'spl' → logprob: -20.625003814697266

Token 584: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.250000953674316
    3. ']' → logprob: -16.875
    4. '()]
' → logprob: -17.25
    5. ']()' → logprob: -19.0
    6. '())' → logprob: -19.375
    7. ' ()' → logprob: -20.25
    8. '(' → logprob: -20.75
    9. '()].' → logprob: -21.625
    10. '()],' → logprob: -21.75

Token 585: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0015165306394919753
    2. ']' → logprob: -6.501516342163086
    3. ')]' → logprob: -11.501516342163086
    4. ']()' → logprob: -13.126516342163086
    5. '()' → logprob: -13.376516342163086
    6. '()]
' → logprob: -14.876516342163086
    7. ' ]' → logprob: -16.751516342163086
    8. '())' → logprob: -17.251516342163086
    9. '`]' → logprob: -18.126516342163086
    10. '']' → logprob: -19.126516342163086

Token 586: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.319370302458992e-06
    2. 'D' → logprob: -12.625005722045898
    3. '#' → logprob: -14.875005722045898
    4. '    
' → logprob: -15.000005722045898
    5. ' def' → logprob: -15.125005722045898
    6. '\' → logprob: -15.500005722045898
    7. '  
' → logprob: -15.625005722045898
    8. 'S' → logprob: -16.5000057220459
    9. 'N' → logprob: -16.5000057220459
    10. ' 
' → logprob: -16.6250057220459

Token 587: ' LS' (ID: 60790)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5607925653457642
    2. 'S' → logprob: -1.1857925653457642
    3. 'LS' → logprob: -2.9357924461364746
    4. 's' → logprob: -3.1857924461364746
    5. 'SI' → logprob: -4.310792446136475
    6. 'input' → logprob: -5.435792446136475
    7. 'print' → logprob: -5.435792446136475
    8. 'IS' → logprob: -5.935792446136475
    9. 'INT' → logprob: -7.185792446136475
    10. 'II' → logprob: -7.185792446136475

Token 588: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004181329160928726
    2. '()' → logprob: -6.004181385040283
    3. '():
' → logprob: -6.379181385040283
    4. ' ():' → logprob: -12.254180908203125
    5. '():
' → logprob: -13.254180908203125
    6. ' ()' → logprob: -14.504180908203125
    7. '():

' → logprob: -15.254180908203125
    8. 'tring' → logprob: -16.004180908203125
    9. '()>' → logprob: -16.504180908203125
    10. '().' → logprob: -16.879180908203125

Token 589: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07993417233228683
    2. '():
' → logprob: -2.5799341201782227
    3. '()' → logprob: -6.954934120178223
    4. 'def' → logprob: -10.079934120178223
    5. '():
' → logprob: -10.829934120178223
    6. ' ():' → logprob: -11.204934120178223
    7. '   ' → logprob: -11.579934120178223
    8. '()[' → logprob: -13.579934120178223
    9. '():

' → logprob: -14.204934120178223
    10. '()>' → logprob: -14.704934120178223

Token 590: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7852638959884644
    2. 'def' → logprob: -1.0352638959884644
    3. '():
' → logprob: -2.410264015197754
    4. '():' → logprob: -2.535264015197754
    5. '()' → logprob: -4.410264015197754
    6. '   ' → logprob: -5.535264015197754
    7. 'sys' → logprob: -6.160264015197754
    8. ' return' → logprob: -7.160264015197754
    9. ':
' → logprob: -8.410264015197754
    10. '):
' → logprob: -8.535264015197754

Token 591: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08308868110179901
    2. '   ' → logprob: -3.2080886363983154
    3. '()' → logprob: -3.4580886363983154
    4. 'return' → logprob: -5.4580888748168945
    5. '()
' → logprob: -6.3330888748168945
    6. ' def' → logprob: -7.5830888748168945
    7. ' return' → logprob: -7.5830888748168945
    8. '"""
' → logprob: -8.333088874816895
    9. '():' → logprob: -8.708088874816895
    10. '():
' → logprob: -8.833088874816895

Token 592: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004701514728367329
    2. 'def' → logprob: -5.504701614379883
    3. ' return' → logprob: -7.754701614379883
    4. '"""
' → logprob: -9.004701614379883
    5. '"""' → logprob: -10.004701614379883
    6. '   ' → logprob: -10.754701614379883
    7. '```' → logprob: -12.754701614379883
    8. '
' → logprob: -13.754701614379883
    9. 's' → logprob: -15.504701614379883
    10. '""' → logprob: -15.879701614379883

Token 593: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12019740045070648
    2. '():' → logprob: -2.995197296142578
    3. 'a' → logprob: -3.495197296142578
    4. '().' → logprob: -4.745197296142578
    5. 'une' → logprob: -4.870197296142578
    6. ' ()' → logprob: -5.995197296142578
    7. '()
' → logprob: -5.995197296142578
    8. ' une' → logprob: -6.245197296142578
    9. 'line' → logprob: -6.370197296142578
    10. ' =' → logprob: -6.620197296142578

Token 594: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.487601637840271
    2. 'ligne' → logprob: -1.112601637840271
    3. 'ine' → logprob: -2.9876017570495605
    4. ' ligne' → logprob: -5.3626017570495605
    5. '():
' → logprob: -7.2376017570495605
    6. '()
' → logprob: -7.7376017570495605
    7. 'string' → logprob: -8.487601280212402
    8. '):
' → logprob: -8.612601280212402
    9. '()' → logprob: -8.987601280212402
    10. 'l' → logprob: -9.487601280212402

Token 595: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012266279198229313
    2. '().' → logprob: -4.512266159057617
    3. '()[' → logprob: -7.012266159057617
    4. '()
' → logprob: -8.512266159057617
    5. ' ()' → logprob: -10.012266159057617
    6. 'from' → logprob: -10.262266159057617
    7. '   ' → logprob: -11.387266159057617
    8. '[]' → logprob: -12.512266159057617
    9. 'def' → logprob: -12.762266159057617
    10. '()

' → logprob: -13.137266159057617

Token 596: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47518739104270935
    2. 'l' → logprob: -0.9751874208450317
    3. ' sys' → logprob: -7.100187301635742
    4. ' l' → logprob: -8.600187301635742
    5. '(sys' → logprob: -10.350187301635742
    6. 'la' → logprob: -10.475187301635742
    7. '=sys' → logprob: -10.850187301635742
    8. '```' → logprob: -11.100187301635742
    9. ' la' → logprob: -13.850187301635742
    10. '
' → logprob: -13.975187301635742

Token 597: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5989640951156616
    2. ''entrée' → logprob: -1.3489640951156616
    3. '=sys' → logprob: -2.723964214324951
    4. '(sys' → logprob: -3.098964214324951
    5. 'entrée' → logprob: -3.598964214324951
    6. 'input' → logprob: -3.973964214324951
    7. 'stdin' → logprob: -4.473964214324951
    8. 'import' → logprob: -5.098964214324951
    9. 'e' → logprob: -5.348964214324951
    10. ' sys' → logprob: -5.973964214324951

Token 598: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.014929505065083504
    2. '()' → logprob: -4.389929294586182
    3. ' standard' → logprob: -6.889929294586182
    4. '()
' → logprob: -7.389929294586182
    5. '().' → logprob: -7.639929294586182
    6. 'sys' → logprob: -9.76492977142334
    7. '_standard' → logprob: -10.01492977142334
    8. '.standard' → logprob: -10.13992977142334
    9. '```' → logprob: -10.13992977142334
    10. '标准' → logprob: -10.63992977142334

Token 599: ' et' (ID: 859)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.34898841381073
    2. '()' → logprob: -1.34898841381073
    3. '().' → logprob: -4.0989885330200195
    4. '():
' → logprob: -4.2239885330200195
    5. 'def' → logprob: -5.7239885330200195
    6. '   ' → logprob: -7.7239885330200195
    7. ':' → logprob: -10.47398853302002
    8. '):' → logprob: -10.72398853302002
    9. '():
' → logprob: -10.72398853302002
    10. '()
' → logprob: -10.97398853302002

Token 600: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4611060321331024
    2. ' return' → logprob: -1.2111060619354248
    3. ' retourne' → logprob: -2.836106061935425
    4. 'rstrip' → logprob: -4.836105823516846
    5. '   ' → logprob: -6.086105823516846
    6. 'ret' → logprob: -6.586105823516846
    7. 'strip' → logprob: -7.586105823516846
    8. 'def' → logprob: -7.961105823516846
    9. ' returns' → logprob: -9.336106300354004
    10. 'returns' → logprob: -9.461106300354004

Token 601: ' sé' (ID: 7462)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006748766638338566
    2. 'rstrip' → logprob: -5.006748676300049
    3. '.strip' → logprob: -10.756749153137207
    4. 'return' → logprob: -11.631749153137207
    5. ' strip' → logprob: -13.506749153137207
    6. '_strip' → logprob: -14.131749153137207
    7. '.rstrip' → logprob: -14.256749153137207
    8. '(strip' → logprob: -15.756749153137207
    9. 'split' → logprob: -16.13174819946289
    10. 'str' → logprob: -16.75674819946289

Token 602: 'pare' (ID: 6900)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4678054451942444
    2. 'nt' → logprob: -2.0928053855895996
    3. 'rv' → logprob: -2.2178053855895996
    4. 'rstrip' → logprob: -3.0928053855895996
    5. 'arch' → logprob: -3.2178053855895996
    6. 'p' → logprob: -4.3428053855896
    7. 'ne' → logprob: -5.4678053855896
    8. 'pr' → logprob: -5.4678053855896
    9. 'rch' → logprob: -5.7178053855896
    10. 'strip' → logprob: -5.7178053855896

Token 603: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007516357582062483
    2. '().' → logprob: -5.382516384124756
    3. '()[' → logprob: -6.132516384124756
    4. '()
' → logprob: -7.757516384124756
    5. '('' → logprob: -9.882515907287598
    6. 'def' → logprob: -10.007515907287598
    7. '('\' → logprob: -10.132515907287598
    8. 'strip' → logprob: -10.882515907287598
    9. 'par' → logprob: -11.382515907287598
    10. ')' → logprob: -11.382515907287598

Token 604: ' une' (ID: 2463)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6955763101577759
    2. 'm' → logprob: -1.6955763101577759
    3. 'list' → logprob: -1.6955763101577759
    4. ' mots' → logprob: -2.8205761909484863
    5. 'liste' → logprob: -3.4455761909484863
    6. 'str' → logprob: -4.445576190948486
    7. 'strings' → logprob: -4.945576190948486
    8. 'chain' → logprob: -5.070576190948486
    9. 'chaine' → logprob: -5.320576190948486
    10. ' tokens' → logprob: -5.820576190948486

Token 605: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.027668718248605728
    2. 'list' → logprob: -4.0276689529418945
    3. 'chaine' → logprob: -5.5276689529418945
    4. ' liste' → logprob: -5.7776689529418945
    5. 'str' → logprob: -6.2776689529418945
    6. 'string' → logprob: -8.527668952941895
    7. 'chain' → logprob: -9.402668952941895
    8. 'ligne' → logprob: -9.527668952941895
    9. 'Liste' → logprob: -10.027668952941895
    10. 'strings' → logprob: -10.152668952941895

Token 606: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10017097741365433
    2. 'str' → logprob: -3.7251710891723633
    3. '()
' → logprob: -3.8501710891723633
    4. '[str' → logprob: -4.225171089172363
    5. 'de' → logprob: -4.600171089172363
    6. '().' → logprob: -4.725171089172363
    7. '   ' → logprob: -5.100171089172363
    8. 'def' → logprob: -5.725171089172363
    9. '()[' → logprob: -6.100171089172363
    10. '```' → logprob: -6.225171089172363

Token 607: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.21702934801578522
    2. 'strings' → logprob: -1.717029333114624
    3. 'string' → logprob: -4.467029571533203
    4. 'm' → logprob: -5.967029571533203
    5. 'chaine' → logprob: -7.217029571533203
    6. 'chain' → logprob: -7.592029571533203
    7. 'mot' → logprob: -9.342029571533203
    8. 'cha' → logprob: -9.967029571533203
    9. 'sys' → logprob: -10.217029571533203
    10. ' chaînes' → logprob: -10.967029571533203

Token 608: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1793171614408493
    2. 'de' → logprob: -1.9293171167373657
    3. '   ' → logprob: -4.929316997528076
    4. '()
' → logprob: -5.304316997528076
    5. ' de' → logprob: -5.929316997528076
    6. 'def' → logprob: -6.304316997528076
    7. '().' → logprob: -7.429316997528076
    8. '[str' → logprob: -8.429317474365234
    9. '[]' → logprob: -8.679317474365234
    10. 's' → logprob: -8.929317474365234

Token 609: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0007238718098960817
    2. ' caractères' → logprob: -7.500723838806152
    3. 'chaine' → logprob: -9.750723838806152
    4. 'char' → logprob: -10.125723838806152
    5. 'str' → logprob: -10.250723838806152
    6. 'chars' → logprob: -11.125723838806152
    7. 'string' → logprob: -12.125723838806152
    8. 'cha' → logprob: -12.375723838806152
    9. 'chain' → logprob: -12.750723838806152
    10. 'texte' → logprob: -13.250723838806152

Token 610: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.019140362739563
    2. '().' → logprob: -1.144140362739563
    3. '()' → logprob: -1.394140362739563
    4. '()
' → logprob: -2.7691402435302734
    5. '.' → logprob: -5.144140243530273
    6. 'def' → logprob: -6.269140243530273
    7. '()[' → logprob: -7.269140243530273
    8. 'return' → logprob: -7.894140243530273
    9. '().
' → logprob: -8.394140243530273
    10. '.
' → logprob: -9.144140243530273

Token 611: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.8576042056083679
    2. 'split' → logprob: -1.6076042652130127
    3. 'spaces' → logprob: -2.2326042652130127
    4. ' espaces' → logprob: -2.2326042652130127
    5. 'sys' → logprob: -2.7326042652130127
    6. 'strip' → logprob: -3.9826042652130127
    7. 'space' → logprob: -3.9826042652130127
    8. 'def' → logprob: -4.482604026794434
    9. 'rstrip' → logprob: -4.857604026794434
    10. 'str' → logprob: -4.857604026794434

Token 612: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31125113368034363
    2. '()' → logprob: -1.436251163482666
    3. '()
' → logprob: -4.561251163482666
    4. '.' → logprob: -4.936251163482666
    5. '().' → logprob: -5.561251163482666
    6. 'return' → logprob: -5.561251163482666
    7. 'def' → logprob: -5.936251163482666
    8. '():
' → logprob: -7.561251163482666
    9. '.
' → logprob: -7.936251163482666
    10. ')' → logprob: -8.436250686645508

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003980184264946729
    2. 'def' → logprob: -8.000397682189941
    3. 'return' → logprob: -9.750397682189941
    4. '```' → logprob: -13.125397682189941
    5. '
' → logprob: -14.250397682189941
    6. ' return' → logprob: -14.875397682189941
    7. '    
' → logprob: -15.375397682189941
    8. '()
' → logprob: -15.500397682189941
    9. '()' → logprob: -15.750397682189941
    10. '	return' → logprob: -15.875397682189941

Token 614: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011572468793019652
    2. 'return' → logprob: -7.126157283782959
    3. 'def' → logprob: -8.0011568069458
    4. '```' → logprob: -11.2511568069458
    5. ' return' → logprob: -12.6261568069458
    6. '	return' → logprob: -14.2511568069458
    7. '
' → logprob: -15.2511568069458
    8. '       ' → logprob: -16.126157760620117
    9. '    
' → logprob: -16.501157760620117
    10. '   ' → logprob: -16.876157760620117

Token 615: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3371744155883789
    2. '   ' → logprob: -2.087174415588379
    3. '()' → logprob: -2.087174415588379
    4. '=' → logprob: -4.212174415588379
    5. ':' → logprob: -4.337174415588379
    6. '():
' → logprob: -5.087174415588379
    7. '[]' → logprob: -6.587174415588379
    8. 'def' → logprob: -6.837174415588379
    9. ' =' → logprob: -7.212174415588379
    10. '()
' → logprob: -7.837174415588379

Token 616: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003107130527496338
    2. 'list' → logprob: -6.003107070922852
    3. 'def' → logprob: -7.878107070922852
    4. '[]' → logprob: -9.003107070922852
    5. ' list' → logprob: -10.003107070922852
    6. 'sys' → logprob: -10.503107070922852
    7. '```' → logprob: -11.128107070922852
    8. '[]
' → logprob: -11.503107070922852
    9. '[' → logprob: -11.878107070922852
    10. 'return' → logprob: -12.128107070922852

Token 617: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.002200336428359151
    2. 'sys' → logprob: -6.252200126647949
    3. ' list' → logprob: -8.25220012664795
    4. '[list' → logprob: -12.62720012664795
    5. '[str' → logprob: -12.75220012664795
    6. 'str' → logprob: -12.87720012664795
    7. 'List' → logprob: -13.87720012664795
    8. '   ' → logprob: -14.62720012664795
    9. '[' → logprob: -14.75220012664795
    10. ' sys' → logprob: -15.00220012664795

Token 618: ' of' (ID: 328)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.19877789914608002
    2. ' of' → logprob: -1.8237779140472412
    3. '(str' → logprob: -4.198777675628662
    4. 'of' → logprob: -5.823777675628662
    5. 'str' → logprob: -7.323777675628662
    6. '```' → logprob: -10.07377815246582
    7. '[' → logprob: -10.19877815246582
    8. '(' → logprob: -10.32377815246582
    9. 'def' → logprob: -10.82377815246582
    10. '<|end|>' → logprob: -10.94877815246582

Token 619: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -2.7848862373502925e-05
    2. ' str' → logprob: -10.500027656555176
    3. '[str' → logprob: -15.750027656555176
    4. 'string' → logprob: -16.375028610229492
    5. '(str' → logprob: -17.250028610229492
    6. 'def' → logprob: -21.000028610229492
    7. 'strings' → logprob: -21.250028610229492
    8. '	str' → logprob: -22.250028610229492
    9. 'stri' → logprob: -22.625028610229492
    10. '=str' → logprob: -22.750028610229492

Token 620: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00877859815955162
    2. '()' → logprob: -5.2587785720825195
    3. ':' → logprob: -5.7587785720825195
    4. '():
' → logprob: -8.25877857208252
    5. '):' → logprob: -9.38377857208252
    6. ']:' → logprob: -11.00877857208252
    7. '()]' → logprob: -12.00877857208252
    8. ']' → logprob: -12.63377857208252
    9. ' =' → logprob: -13.25877857208252
    10. ' ():' → logprob: -13.50877857208252

Token 621: ' Liste' (ID: 61030)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004999986384063959
    2. ' sys' → logprob: -5.505000114440918
    3. 'return' → logprob: -7.005000114440918
    4. ' return' → logprob: -11.630000114440918
    5. '   ' → logprob: -12.880000114440918
    6. '```' → logprob: -13.380000114440918
    7. 'list' → logprob: -15.005000114440918
    8. '(sys' → logprob: -15.255000114440918
    9. '=sys' → logprob: -16.5049991607666
    10. '	sys' → logprob: -16.8799991607666

Token 622: ' des' (ID: 731)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20860600471496582
    2. '(' → logprob: -2.458606004714966
    3. '()' → logprob: -2.583606004714966
    4. '   ' → logprob: -5.208605766296387
    5. '=sys' → logprob: -5.333605766296387
    6. '<|end|>' → logprob: -5.833605766296387
    7. ' of' → logprob: -6.083605766296387
    8. '(split' → logprob: -6.333605766296387
    9. 'of' → logprob: -6.583605766296387
    10. '=' → logprob: -7.083605766296387

Token 623: ' chaînes' (ID: 179904)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.024900931864976883
    2. 'strings' → logprob: -4.024900913238525
    3. 'string' → logprob: -5.524900913238525
    4. 'str' → logprob: -6.899900913238525
    5. 'chaine' → logprob: -7.149900913238525
    6. 'chain' → logprob: -7.649900913238525
    7. '(sys' → logprob: -8.774901390075684
    8. ' chaînes' → logprob: -9.149901390075684
    9. 'cha' → logprob: -9.524901390075684
    10. ' sys' → logprob: -9.524901390075684

Token 624: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: 'm' (ID: 76)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02921355701982975
    2. ')' → logprob: -4.2792134284973145
    3. 'str' → logprob: -4.2792134284973145
    4. 'strings' → logprob: -7.9042134284973145
    5. '(sys' → logprob: -8.404213905334473
    6. ' sys' → logprob: -9.029213905334473
    7. '=sys' → logprob: -9.404213905334473
    8. '[str' → logprob: -9.404213905334473
    9. 'x' → logprob: -9.654213905334473
    10. '```' → logprob: -9.654213905334473

Token 626: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.0035298748407512903
    2. 'ot' → logprob: -5.753530025482178
    3. '=sys' → logprob: -8.50352954864502
    4. 'essages' → logprob: -9.87852954864502
    5. 'string' → logprob: -11.50352954864502
    6. 'lines' → logprob: -11.87852954864502
    7. 'line' → logprob: -12.00352954864502
    8. '=' → logprob: -12.00352954864502
    9. 'ligne' → logprob: -12.12852954864502
    10. '=input' → logprob: -12.12852954864502

Token 627: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23615501821041107
    2. '())' → logprob: -1.6111550331115723
    3. '()' → logprob: -4.736155033111572
    4. '   ' → logprob: -7.361155033111572
    5. '()]' → logprob: -7.611155033111572
    6. ' )' → logprob: -8.611154556274414
    7. ')]' → logprob: -9.611154556274414
    8. 'split' → logprob: -9.611154556274414
    9. ').' → logprob: -9.736154556274414
    10. 'de' → logprob: -9.861154556274414

Token 628: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008946627378463745
    2. '   ' → logprob: -5.383946418762207
    3. '()
' → logprob: -6.008946418762207
    4. '().' → logprob: -6.883946418762207
    5. ' =' → logprob: -9.008946418762207
    6. '()]' → logprob: -9.008946418762207
    7. '(sys' → logprob: -9.258946418762207
    8. '.' → logprob: -9.633946418762207
    9. ']' → logprob: -9.758946418762207
    10. '()[' → logprob: -10.008946418762207

Token 629: 'ues' (ID: 1406)
  Prédit: 'ines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.5788276791572571
    2. 'ine' → logprob: -1.8288276195526123
    3. 'ignes' → logprob: -2.4538276195526123
    4. '```' → logprob: -3.2038276195526123
    5. 'iné' → logprob: -3.7038276195526123
    6. 'es' → logprob: -4.078827857971191
    7. 'inea' → logprob: -4.078827857971191
    8. '()' → logprob: -4.578827857971191
    9. 'a' → logprob: -4.578827857971191
    10. 'iste' → logprob: -5.078827857971191

Token 630: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021092280745506287
    2. '().' → logprob: -4.146092414855957
    3. 'sur' → logprob: -6.021092414855957
    4. ' sur' → logprob: -7.146092414855957
    5. '()
' → logprob: -7.646092414855957
    6. '<|end|>' → logprob: -7.771092414855957
    7. '.' → logprob: -8.646092414855957
    8. ' ()' → logprob: -9.021092414855957
    9. '()[' → logprob: -9.021092414855957
    10. '```' → logprob: -9.396092414855957

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006448837229982018
    2. '```' → logprob: -8.25064468383789
    3. 'return' → logprob: -8.75064468383789
    4. 'def' → logprob: -9.00064468383789
    5. '[]' → logprob: -10.12564468383789
    6. '()' → logprob: -10.12564468383789
    7. ')' → logprob: -12.37564468383789
    8. ' return' → logprob: -12.75064468383789
    9. '    
' → logprob: -13.00064468383789
    10. '	return' → logprob: -13.00064468383789

Token 632: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00611507473513484
    2. 'return' → logprob: -5.381114959716797
    3. '```' → logprob: -6.631114959716797
    4. 'def' → logprob: -9.506114959716797
    5. '"""' → logprob: -10.131114959716797
    6. ')' → logprob: -11.006114959716797
    7. ' return' → logprob: -11.381114959716797
    8. '"""
' (adapté à ' """
') → logprob: -11.506114959716797
    9. '()' → logprob: -12.256114959716797
    10. '  ' → logprob: -12.756114959716797

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03811504691839218
    2. 'return' → logprob: -3.2881150245666504
    3. 'def' → logprob: -9.663115501403809
    4. ' return' → logprob: -11.663115501403809
    5. '```' → logprob: -13.788115501403809
    6. '	return' → logprob: -14.788115501403809
    7. '       ' → logprob: -17.413114547729492
    8. '   ' → logprob: -18.413114547729492
    9. '    ' → logprob: -19.413114547729492
    10. '  ' → logprob: -19.538114547729492

Token 634: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.8789383830153383e-05
    2. ' return' → logprob: -11.375019073486328
    3. '   ' → logprob: -12.250019073486328
    4. 'def' → logprob: -13.000019073486328
    5. '```' → logprob: -15.500019073486328
    6. '	return' → logprob: -18.000019073486328
    7. 'sys' → logprob: -18.625019073486328
    8. 's' → logprob: -19.250019073486328
    9. '
' → logprob: -19.875019073486328
    10. '``' → logprob: -21.000019073486328

Token 635: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.4868770196917467e-05
    2. ' sys' → logprob: -11.000024795532227
    3. 'list' → logprob: -11.750024795532227
    4. '[' → logprob: -15.250024795532227
    5. '(sys' → logprob: -17.625024795532227
    6. '	sys' → logprob: -20.375024795532227
    7. '=sys' → logprob: -20.750024795532227
    8. '[s' → logprob: -21.125024795532227
    9. ' list' → logprob: -21.500024795532227
    10. 'input' → logprob: -21.500024795532227

Token 636: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009336133953183889
    2. '.stdout' → logprob: -7.000933647155762
    3. '.' → logprob: -11.500933647155762
    4. '.argv' → logprob: -11.750933647155762
    5. '.std' → logprob: -13.250933647155762
    6. 'stdin' → logprob: -13.750933647155762
    7. '.readline' → logprob: -14.125933647155762
    8. '.stderr' → logprob: -15.000933647155762
    9. '(stdin' → logprob: -17.000932693481445
    10. '.version' → logprob: -17.125932693481445

Token 637: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1472419600977446e-06
    2. '.stdin' → logprob: -14.250000953674316
    3. '.' → logprob: -14.625000953674316
    4. '.stdout' → logprob: -17.000001907348633
    5. '.readlines' → logprob: -17.125001907348633
    6. 'stdin' → logprob: -18.625001907348633
    7. ' readline' → logprob: -19.250001907348633
    8. 'stdout' → logprob: -20.000001907348633
    9. '.read' → logprob: -20.125001907348633
    10. ' .' → logprob: -20.375001907348633

Token 638: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004883344518020749
    2. '()' → logprob: -7.62548828125
    3. ' ().' → logprob: -16.25048828125
    4. '.strip' → logprob: -16.87548828125
    5. '(' → logprob: -17.37548828125
    6. '.split' → logprob: -17.62548828125
    7. '()[' → logprob: -18.12548828125
    8. '.rstrip' → logprob: -18.75048828125
    9. '().'' → logprob: -19.00048828125
    10. '.readline' → logprob: -19.50048828125

Token 639: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04308208450675011
    2. 'split' → logprob: -3.2930819988250732
    3. 'rstrip' → logprob: -5.293082237243652
    4. 'decode' → logprob: -13.543082237243652
    5. ' strip' → logprob: -15.168082237243652
    6. 'str' → logprob: -16.168081283569336
    7. 'read' → logprob: -17.293081283569336
    8. 'rs' → logprob: -18.168081283569336
    9. 'spl' → logprob: -19.793081283569336
    10. ' split' → logprob: -19.918081283569336

Token 640: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0445127372804563e-05
    2. '()
' → logprob: -12.50001049041748
    3. '(' → logprob: -12.87501049041748
    4. '()\' → logprob: -13.25001049041748
    5. '()]' → logprob: -14.12501049041748
    6. '()`' → logprob: -14.62501049041748
    7. '()[' → logprob: -15.00001049041748
    8. ' ()' → logprob: -15.37501049041748
    9. '()

' → logprob: -15.50001049041748
    10. '())' → logprob: -16.375009536743164

Token 641: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015871046343818307
    2. '#' → logprob: -6.8765869140625
    3. 'class' → logprob: -8.6265869140625
    4. '<|end|>' → logprob: -8.8765869140625
    5. '\' → logprob: -9.3765869140625
    6. '
' → logprob: -9.7515869140625
    7. 'd' → logprob: -11.3765869140625
    8. 'D' → logprob: -11.7515869140625
    9. '\n' → logprob: -11.7515869140625
    10. ' 
' → logprob: -11.8765869140625

Token 642: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6831679344177246
    2. 's' → logprob: -0.9331679344177246
    3. 'S' → logprob: -2.8081679344177246
    4. 'print' → logprob: -3.4331679344177246
    5. 'II' → logprob: -5.683167934417725
    6. 'int' → logprob: -6.558167934417725
    7. 'input' → logprob: -6.933167934417725
    8. 'Yes' → logprob: -7.558167934417725
    9. 'INT' → logprob: -7.558167934417725
    10. 'def' → logprob: -7.808167934417725

Token 643: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4387102425098419
    2. 'nt' → logprob: -1.0637102127075195
    3. 'N' → logprob: -5.3137102127075195
    4. '()' → logprob: -5.4387102127075195
    5. 'ndef' → logprob: -8.68871021270752
    6. 'nit' → logprob: -8.93871021270752
    7. 'nd' → logprob: -9.31371021270752
    8. 'ntl' → logprob: -9.43871021270752
    9. 'NT' → logprob: -9.56371021270752
    10. 'np' → logprob: -9.81371021270752

Token 644: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6481389999389648
    2. 'nt' → logprob: -1.1481389999389648
    3. 'n' → logprob: -2.023138999938965
    4. 'int' → logprob: -4.523138999938965
    5. 'def' → logprob: -5.148138999938965
    6. 'return' → logprob: -5.648138999938965
    7. '   ' → logprob: -6.523138999938965
    8. 't' → logprob: -6.773138999938965
    9. ')' → logprob: -7.148138999938965
    10. ' =' → logprob: -7.273138999938965

Token 645: ' """
' (ID: 7037)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03292515501379967
    2. 'nt' → logprob: -3.5329251289367676
    3. 'return' → logprob: -5.907925128936768
    4. 'n' → logprob: -8.782925605773926
    5. ' return' → logprob: -9.032925605773926
    6. ' int' → logprob: -9.407925605773926
    7. '=int' → logprob: -10.657925605773926
    8. 't' → logprob: -11.032925605773926
    9. '(int' → logprob: -11.407925605773926
    10. 'def' → logprob: -11.532925605773926

Token 646: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2604089677333832
    2. 'n' → logprob: -2.260408878326416
    3. 'nt' → logprob: -2.260408878326416
    4. 'int' → logprob: -4.010408878326416
    5. ' return' → logprob: -6.135408878326416
    6. 'sys' → logprob: -8.510409355163574
    7. '   ' → logprob: -9.260409355163574
    8. 'def' → logprob: -10.510409355163574
    9. ' n' → logprob: -11.760409355163574
    10. 'ns' → logprob: -12.010409355163574

Token 647: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011761783389374614
    2. ' return' → logprob: -6.751176357269287
    3. 'def' → logprob: -12.126175880432129
    4. '   ' → logprob: -15.626175880432129
    5. '
' → logprob: -16.251176834106445
    6. '"""' → logprob: -16.501176834106445
    7. 'Return' → logprob: -16.751176834106445
    8. 'int' → logprob: -17.751176834106445
    9. 'ret' → logprob: -18.126176834106445
    10. 'eturn' → logprob: -18.501176834106445

Token 648: ' une' (ID: 2463)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.11607487499713898
    2. 'int' → logprob: -2.366074800491333
    3. '()' → logprob: -4.866075038909912
    4. 'n' → logprob: -5.241075038909912
    5. 't' → logprob: -5.991075038909912
    6. ' nt' → logprob: -9.366074562072754
    7. '(int' → logprob: -9.866074562072754
    8. 'nte' → logprob: -10.741074562072754
    9. '=int' → logprob: -10.991074562072754
    10. ' int' → logprob: -11.116074562072754

Token 649: ' ligne' (ID: 19583)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3878723978996277
    2. 'n' → logprob: -1.6378724575042725
    3. '()' → logprob: -2.7628724575042725
    4. 'ligne' → logprob: -3.7628724575042725
    5. 'nt' → logprob: -3.8878724575042725
    6. 'line' → logprob: -4.262872219085693
    7. 'single' → logprob: -5.637872219085693
    8. 'l' → logprob: -7.137872219085693
    9. '()
' → logprob: -8.012872695922852
    10. 'ingle' → logprob: -8.262872695922852

Token 650: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003117229789495468
    2. '<|end|>' → logprob: -6.878117084503174
    3. ' =' → logprob: -7.503117084503174
    4. '().' → logprob: -7.753117084503174
    5. '()
' → logprob: -8.003117561340332
    6. '=' → logprob: -9.128117561340332
    7. '<|end|>' → logprob: -9.128117561340332
    8. 'int' → logprob: -9.503117561340332
    9. '.readline' → logprob: -9.503117561340332
    10. ')' → logprob: -9.753117561340332

Token 651: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0220646895468235
    2. 'int' → logprob: -3.897064685821533
    3. ' sys' → logprob: -7.022064685821533
    4. '=sys' → logprob: -8.272065162658691
    5. 'l' → logprob: -8.647065162658691
    6. 'input' → logprob: -8.772065162658691
    7. '()' → logprob: -11.022065162658691
    8. '(sys' → logprob: -11.272065162658691
    9. 'stdin' → logprob: -12.022065162658691
    10. ')' → logprob: -13.522065162658691

Token 652: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.832434892654419
    2. 'stdin' → logprob: -1.832434892654419
    3. 'input' → logprob: -2.082434892654419
    4. 'e' → logprob: -2.707434892654419
    5. '(stdin' → logprob: -2.957434892654419
    6. 'n' → logprob: -3.082434892654419
    7. ''entrée' → logprob: -3.082434892654419
    8. '_input' → logprob: -3.332434892654419
    9. '(sys' → logprob: -3.332434892654419
    10. '()
' → logprob: -3.457434892654419

Token 653: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017813296290114522
    2. 'standard' → logprob: -6.751781463623047
    3. ' ()' → logprob: -8.001781463623047
    4. '()
' → logprob: -9.251781463623047
    5. 'sys' → logprob: -9.501781463623047
    6. ' standard' → logprob: -9.876781463623047
    7. '().' → logprob: -11.001781463623047
    8. '()`' → logprob: -11.876781463623047
    9. ')' → logprob: -12.001781463623047
    10. 'def' → logprob: -13.126781463623047

Token 654: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004122803919017315
    2. '().' → logprob: -5.754122734069824
    3. ')' → logprob: -7.254122734069824
    4. 'def' → logprob: -9.504122734069824
    5. '()
' → logprob: -9.754122734069824
    6. 'return' → logprob: -10.629122734069824
    7. '())' → logprob: -11.004122734069824
    8. 'int' → logprob: -11.379122734069824
    9. '.readline' → logprob: -11.504122734069824
    10. '.' → logprob: -11.629122734069824

Token 655: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06225525960326195
    2. ' return' → logprob: -2.8122551441192627
    3. 'int' → logprob: -8.187254905700684
    4. ' int' → logprob: -12.187254905700684
    5. '   ' → logprob: -13.562254905700684
    6. 'ret' → logprob: -14.312254905700684
    7. 'returns' → logprob: -14.437254905700684
    8. ' retourne' → logprob: -14.562254905700684
    9. '_return' → logprob: -15.312254905700684
    10. '@return' → logprob: -15.437254905700684

Token 656: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02185884490609169
    2. 'strip' → logprob: -4.3968586921691895
    3. 'eturn' → logprob: -5.1468586921691895
    4. 'int' → logprob: -6.3968586921691895
    5. 'returns' → logprob: -6.8968586921691895
    6. ' return' → logprob: -8.021859169006348
    7. 'rstrip' → logprob: -8.271859169006348
    8. 'n' → logprob: -9.021859169006348
    9. 'def' → logprob: -10.521859169006348
    10. 'r' → logprob: -11.771859169006348

Token 657: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.2200749754119897e-06
    2. ' it' → logprob: -13.625001907348633
    3. '_it' → logprob: -15.875001907348633
    4. 't' → logprob: -15.875001907348633
    5. 'i' → logprob: -16.125001907348633
    6. 'It' → logprob: -16.375001907348633
    7. 'ît' → logprob: -16.500001907348633
    8. 'ist' → logprob: -16.500001907348633
    9. '```' → logprob: -17.000001907348633
    10. 'is' → logprob: -17.125001907348633

Token 658: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0701805055141449
    2. ' en' → logprob: -2.6951804161071777
    3. '()' → logprob: -9.320180892944336
    4. 'int' → logprob: -9.445180892944336
    5. 'in' → logprob: -10.445180892944336
    6. '(en' → logprob: -10.695180892944336
    7. '(int' → logprob: -11.070180892944336
    8. 'into' → logprob: -13.570180892944336
    9. '   ' → logprob: -13.570180892944336
    10. 'import' → logprob: -13.945180892944336

Token 659: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019297054968774319
    2. ' int' → logprob: -6.251929759979248
    3. '
' → logprob: -14.75192928314209
    4. 'ent' → logprob: -15.00192928314209
    5. '(int' → logprob: -15.87692928314209
    6. '[int' → logprob: -16.126930236816406
    7. 'integer' → logprob: -16.751930236816406
    8. '=int' → logprob: -16.876930236816406
    9. ' entier' → logprob: -17.376930236816406
    10. 'un' → logprob: -17.501930236816406

Token 660: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.013994814362377e-05
    2. '().' → logprob: -10.37505054473877
    3. '()
' → logprob: -11.62505054473877
    4. ' ()' → logprob: -12.37505054473877
    5. '():' → logprob: -13.00005054473877
    6. '.' → logprob: -13.87505054473877
    7. 'return' → logprob: -14.25005054473877
    8. '(' → logprob: -14.62505054473877
    9. '();' → logprob: -14.87505054473877
    10. '()`' → logprob: -15.00005054473877

Token 661: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1671910583972931
    2. '   ' → logprob: -2.0421910285949707
    3. 'return' → logprob: -4.417191028594971
    4. 'def' → logprob: -4.917191028594971
    5. ' return' → logprob: -6.417191028594971
    6. ')' → logprob: -6.667191028594971
    7. '():' → logprob: -7.167191028594971
    8. ' ()' → logprob: -7.542191028594971
    9. '()
' → logprob: -8.417191505432129
    10. '(' → logprob: -8.542191505432129

Token 662: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055610418319702
    2. 'return' → logprob: -0.7055610418319702
    3. 'def' → logprob: -4.70556116104126
    4. ' return' → logprob: -5.83056116104126
    5. '()' → logprob: -8.330560684204102
    6. ':return' → logprob: -10.330560684204102
    7. ')' → logprob: -10.580560684204102
    8. '	return' → logprob: -10.705560684204102
    9. '```' → logprob: -11.330560684204102
    10. '"""' → logprob: -12.205560684204102

Token 663: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046606384217739105
    2. '():' → logprob: -3.2966063022613525
    3. ' ()' → logprob: -5.546606540679932
    4. '   ' → logprob: -6.296606540679932
    5. ':' → logprob: -6.796606540679932
    6. '(' → logprob: -7.671606540679932
    7. ' =' → logprob: -7.796606540679932
    8. '=' → logprob: -8.921606063842773
    9. 'def' → logprob: -8.921606063842773
    10. '[]' → logprob: -9.421606063842773

Token 664: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.039174336940050125
    2. '   ' → logprob: -3.2891743183135986
    3. ' int' → logprob: -6.789174556732178
    4. '  ' → logprob: -13.78917407989502
    5. '	int' → logprob: -13.91417407989502
    6. ' ' → logprob: -14.16417407989502
    7. '    ' → logprob: -14.16417407989502
    8. ':int' → logprob: -14.16417407989502
    9. '=int' → logprob: -14.66417407989502
    10. '(int' → logprob: -14.91417407989502

Token 665: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. '[int' → logprob: -23.0
    4. '   ' → logprob: -23.25
    5. '
' → logprob: -23.5
    6. '(int' → logprob: -23.875
    7. '=int' → logprob: -24.5
    8. '```' → logprob: -25.625
    9. '	int' → logprob: -25.875
    10. ':int' → logprob: -26.125

Token 666: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002713215071707964
    2. '()
' → logprob: -7.377713203430176
    3. '<|end|>' → logprob: -7.377713203430176
    4. ' ()' → logprob: -7.627713203430176
    5. '():' → logprob: -8.252713203430176
    6. ')' → logprob: -8.877713203430176
    7. '   ' → logprob: -9.127713203430176
    8. '(' → logprob: -9.127713203430176
    9. '()\' → logprob: -9.252713203430176
    10. ':' → logprob: -10.377713203430176

Token 667: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009115827269852161
    2. ' int' → logprob: -7.000911712646484
    3. '(int' → logprob: -17.750911712646484
    4. '[int' → logprob: -19.750911712646484
    5. '=int' → logprob: -19.875911712646484
    6. '   ' → logprob: -20.500911712646484
    7. '<int' → logprob: -20.500911712646484
    8. 'Int' → logprob: -21.250911712646484
    9. '	int' → logprob: -21.625911712646484
    10. 'in' → logprob: -21.875911712646484

Token 668: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0014238066505640745
    2. '=int' → logprob: -7.5014238357543945
    3. 'ine' → logprob: -8.251423835754395
    4. ' int' → logprob: -8.626423835754395
    5. '[int' → logprob: -9.126423835754395
    6. 'return' → logprob: -9.376423835754395
    7. 'eturn' → logprob: -9.626423835754395
    8. '(int' → logprob: -10.001423835754395
    9. '   ' → logprob: -10.626423835754395
    10. 'e' → logprob: -11.001423835754395

Token 669: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0776444673538208
    2. 'int' → logprob: -3.3276443481445312
    3. 'er' → logprob: -4.452644348144531
    4. 'iert' → logprob: -4.952644348144531
    5. 'eger' → logprob: -5.327644348144531
    6. '   ' → logprob: -5.702644348144531
    7. 'e' → logprob: -5.952644348144531
    8. '=int' → logprob: -6.452644348144531
    9. '```' → logprob: -6.577644348144531
    10. 'iers' → logprob: -7.077644348144531

Token 670: ' lu' (ID: 8620)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011862293817102909
    2. '(' → logprob: -4.636862277984619
    3. ')' → logprob: -7.136862277984619
    4. '()
' → logprob: -8.386862754821777
    5. '=' → logprob: -8.761862754821777
    6. '.' → logprob: -9.011862754821777
    7. '(
' → logprob: -9.011862754821777
    8. ']' → logprob: -9.636862754821777
    9. '```' → logprob: -9.636862754821777
    10. '<|end|>' → logprob: -9.886862754821777

Token 671: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013798571308143437
    2. '()
' → logprob: -9.000138282775879
    3. ' ()' → logprob: -12.375138282775879
    4. '().' → logprob: -12.500138282775879
    5. '()`' → logprob: -13.375138282775879
    6. '()\' → logprob: -13.750138282775879
    7. 'def' → logprob: -14.125138282775879
    8. ')' → logprob: -14.500138282775879
    9. '   ' → logprob: -14.500138282775879
    10. '()]' → logprob: -14.750138282775879

Token 672: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.032836101949214935
    2. '   ' → logprob: -3.9078361988067627
    3. ')' → logprob: -4.782835960388184
    4. ' ()' → logprob: -6.657835960388184
    5. '(' → logprob: -7.407835960388184
    6. 'def' → logprob: -7.532835960388184
    7. 'return' → logprob: -7.657835960388184
    8. '()\' → logprob: -8.282835960388184
    9. '():' → logprob: -8.532835960388184
    10. '()
' → logprob: -8.907835960388184

Token 673: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08448776602745056
    2. 'return' → logprob: -2.5844876766204834
    3. ' return' → logprob: -5.2094879150390625
    4. 'def' → logprob: -9.209487915039062
    5. ')' → logprob: -11.584487915039062
    6. '	return' → logprob: -13.334487915039062
    7. '    ' → logprob: -13.334487915039062
    8. ' ' → logprob: -13.459487915039062
    9. '"""' → logprob: -13.709487915039062
    10. '  ' → logprob: -13.959487915039062

Token 674: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39274704456329346
    2. '   ' → logprob: -1.1427470445632935
    3. ' return' → logprob: -5.142746925354004
    4. 'def' → logprob: -11.142746925354004
    5. '```' → logprob: -13.267746925354004
    6. '	return' → logprob: -14.642746925354004
    7. ' ' → logprob: -15.642746925354004
    8. '  ' → logprob: -15.767746925354004
    9. '    ' → logprob: -17.14274787902832
    10. '`' → logprob: -17.51774787902832

Token 675: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.9875325708417222e-05
    2. 'int' → logprob: -10.500029563903809
    3. ' return' → logprob: -13.000029563903809
    4. '   ' → logprob: -19.250030517578125
    5. '```' → logprob: -20.875030517578125
    6. '	return' → logprob: -21.750030517578125
    7. 'Return' → logprob: -22.625030517578125
    8. '
' → logprob: -22.750030517578125
    9. 'ret' → logprob: -22.875030517578125
    10. 'eturn' → logprob: -23.250030517578125

Token 676: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. '	int' → logprob: -17.506715774536133
    4. '(int' → logprob: -17.756715774536133
    5. '   ' → logprob: -18.881715774536133
    6. '=int' → logprob: -19.381715774536133
    7. ' ' → logprob: -19.506715774536133
    8. '<int' → logprob: -20.256715774536133
    9. '  ' → logprob: -20.506715774536133
    10. ' ' → logprob: -20.756715774536133

Token 677: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -9.710618905955926e-05
    2. '(' → logprob: -9.250097274780273
    3. 'sys' → logprob: -13.875097274780273
    4. '(Sys' → logprob: -17.250097274780273
    5. '=sys' → logprob: -17.625097274780273
    6. '()' → logprob: -18.000097274780273
    7. '(system' → logprob: -18.250097274780273
    8. ' sys' → logprob: -18.250097274780273
    9. '(s' → logprob: -18.750097274780273
    10. ' (' → logprob: -19.375097274780273

Token 678: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5570885807392187e-05
    2. 'stdin' → logprob: -12.000015258789062
    3. '.' → logprob: -12.250015258789062
    4. '.readline' → logprob: -12.750015258789062
    5. '.stdout' → logprob: -14.250015258789062
    6. '.std' → logprob: -14.375015258789062
    7. ' .' → logprob: -16.000015258789062
    8. '.argv' → logprob: -16.250015258789062
    9. '(stdin' → logprob: -16.500015258789062
    10. ' stdin' → logprob: -18.125015258789062

Token 679: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0019491063430905342
    2. '.stdin' → logprob: -6.251949310302734
    3. '.' → logprob: -11.001949310302734
    4. 'stdin' → logprob: -12.626949310302734
    5. '.stdout' → logprob: -14.876949310302734
    6. '(stdin' → logprob: -16.251949310302734
    7. ' .' → logprob: -16.751949310302734
    8. ' readline' → logprob: -17.251949310302734
    9. '```' → logprob: -18.251949310302734
    10. '.setdefault' → logprob: -18.751949310302734

Token 680: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06294211000204086
    2. '().' → logprob: -2.8129420280456543
    3. '()' → logprob: -6.937942028045654
    4. ' ())' → logprob: -13.312942504882812
    5. ')' → logprob: -14.187942504882812
    6. '();)' → logprob: -14.437942504882812
    7. '())
' → logprob: -15.062942504882812
    8. '()]' → logprob: -15.687942504882812
    9. '())

' → logprob: -16.562942504882812
    10. '.readline' → logprob: -16.687942504882812

Token 681: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07637828588485718
    2. '
' → logprob: -3.576378345489502
    3. '\n' → logprob: -4.076378345489502
    4. '#' → logprob: -4.201378345489502
    5. '\' → logprob: -4.826378345489502
    6. '

' → logprob: -6.576378345489502
    7. '' → logprob: -6.826378345489502
    8. ' 
' → logprob: -7.451378345489502
    9. '  
' → logprob: -7.826378345489502
    10. '@' → logprob: -8.201377868652344

Token 682: ' F' (ID: 454)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.024109337478876114
    2. 's' → logprob: -4.524109363555908
    3. 'print' → logprob: -4.524109363555908
    4. 'SI' → logprob: -6.524109363555908
    5. 'main' → logprob: -8.64910888671875
    6. 'YES' → logprob: -9.14910888671875
    7. 'def' → logprob: -9.27410888671875
    8. 'P' → logprob: -10.02410888671875
    9. 'O' → logprob: -10.27410888671875
    10. 'SO' → logprob: -10.39910888671875

Token 683: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3552195727825165
    2. '():' → logprob: -1.2302196025848389
    3. '():
' → logprob: -5.10521936416626
    4. '(' → logprob: -9.105219841003418
    5. 'unction' → logprob: -9.605219841003418
    6. '():
' → logprob: -9.980219841003418
    7. '(){' → logprob: -10.105219841003418
    8. '()>' → logprob: -10.105219841003418
    9. '():

' → logprob: -10.230219841003418
    10. '()
' → logprob: -10.355219841003418

Token 684: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47447556257247925
    2. '()' → logprob: -0.9744755625724792
    3. 'def' → logprob: -8.599475860595703
    4. '():
' → logprob: -8.724475860595703
    5. ' ()' → logprob: -10.849475860595703
    6. 'return' → logprob: -11.974475860595703
    7. '(' → logprob: -12.724475860595703
    8. '()`' → logprob: -12.724475860595703
    9. ' ():' → logprob: -12.974475860595703
    10. '(){' → logprob: -13.224475860595703

Token 685: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2697129547595978
    2. '()' → logprob: -1.5197129249572754
    3. 'float' → logprob: -4.644712924957275
    4. 'def' → logprob: -5.019712924957275
    5. '   ' → logprob: -7.894712924957275
    6. ' return' → logprob: -8.019713401794434
    7. '()
' → logprob: -8.644713401794434
    8. ')' → logprob: -9.269713401794434
    9. '```' → logprob: -9.769713401794434
    10. 'sys' → logprob: -9.894713401794434

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015057147480547428
    2. 'return' → logprob: -4.51505708694458
    3. 'def' → logprob: -5.76505708694458
    4. '()' → logprob: -8.390057563781738
    5. '"""' → logprob: -8.515057563781738
    6. ' return' → logprob: -9.015057563781738
    7. 'float' → logprob: -9.265057563781738
    8. ')' → logprob: -9.390057563781738
    9. '"""
' → logprob: -10.015057563781738
    10. '  ' → logprob: -10.390057563781738

Token 687: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08049780875444412
    2. 'return' → logprob: -2.5804977416992188
    3. '"""' → logprob: -7.330497741699219
    4. '   ' → logprob: -7.330497741699219
    5. '"""
' → logprob: -8.955497741699219
    6. '()' → logprob: -9.955497741699219
    7. ' return' → logprob: -10.455497741699219
    8. '```' → logprob: -10.955497741699219
    9. 'Return' → logprob: -11.080497741699219
    10. 'float' → logprob: -11.205497741699219

Token 688: ' une' (ID: 2463)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.026532966643571854
    2. '(float' → logprob: -4.651533126831055
    3. 'sys' → logprob: -4.901533126831055
    4. ' float' → logprob: -6.151533126831055
    5. '=float' → logprob: -6.276533126831055
    6. 'loat' → logprob: -6.401533126831055
    7. '()' → logprob: -6.401533126831055
    8. 'a' → logprob: -7.026533126831055
    9. '<|end|>' → logprob: -8.526533126831055
    10. '_float' → logprob: -8.526533126831055

Token 689: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.25210902094841003
    2. ' ligne' → logprob: -1.5021090507507324
    3. 'l' → logprob: -8.877108573913574
    4. 'line' → logprob: -11.127108573913574
    5. 'float' → logprob: -11.627108573913574
    6. ' ' → logprob: -11.627108573913574
    7. ' float' → logprob: -12.752108573913574
    8. ' line' → logprob: -13.627108573913574
    9. 'lig' → logprob: -14.502108573913574
    10. ' l' → logprob: -14.502108573913574

Token 690: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006217082031071186
    2. 'from' → logprob: -6.006217002868652
    3. '()[' → logprob: -6.131217002868652
    4. '<|end|>' → logprob: -7.881217002868652
    5. '().' → logprob: -8.756217002868652
    6. '()
' → logprob: -9.506217002868652
    7. ' ()' → logprob: -9.631217002868652
    8. '()='' → logprob: -9.756217002868652
    9. '<|end|>' → logprob: -9.756217002868652
    10. '()=>' → logprob: -9.881217002868652

Token 691: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00014072739577386528
    2. 'float' → logprob: -9.000141143798828
    3. ' sys' → logprob: -11.375141143798828
    4. '=sys' → logprob: -13.000141143798828
    5. '(sys' → logprob: -13.375141143798828
    6. 'l' → logprob: -13.500141143798828
    7. 'la' → logprob: -16.000141143798828
    8. 'stdin' → logprob: -16.125141143798828
    9. '```' → logprob: -16.250141143798828
    10. '	sys' → logprob: -16.875141143798828

Token 692: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.008507021702826023
    2. 'entrée' → logprob: -5.008507251739502
    3. '=sys' → logprob: -7.508507251739502
    4. 'stdin' → logprob: -8.258506774902344
    5. 'sys' → logprob: -8.508506774902344
    6. '_input' → logprob: -8.883506774902344
    7. ''import' → logprob: -8.883506774902344
    8. '’entrée' → logprob: -9.383506774902344
    9. ''ent' → logprob: -9.383506774902344
    10. ''espace' → logprob: -9.883506774902344

Token 693: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.09475871920585632
    2. 'sys' → logprob: -2.8447587490081787
    3. '()' → logprob: -3.7197587490081787
    4. '=sys' → logprob: -6.0947585105896
    5. ' standard' → logprob: -6.2197585105896
    6. '(sys' → logprob: -6.4697585105896
    7. 'std' → logprob: -7.3447585105896
    8. ' sys' → logprob: -7.7197585105896
    9. '_standard' → logprob: -8.094758987426758
    10. '()
' → logprob: -8.719758987426758

Token 694: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001977764768525958
    2. '().' → logprob: -6.376977920532227
    3. ')' → logprob: -9.376977920532227
    4. '<|end|>' → logprob: -9.876977920532227
    5. '()[' → logprob: -10.251977920532227
    6. '()
' → logprob: -11.126977920532227
    7. '())' → logprob: -11.251977920532227
    8. '()==' → logprob: -11.501977920532227
    9. '()='' → logprob: -11.751977920532227
    10. 'def' → logprob: -11.876977920532227

Token 695: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2912665605545044
    2. 'float' → logprob: -1.2912665605545044
    3. ' float' → logprob: -1.6662665605545044
    4. ' return' → logprob: -2.416266441345215
    5. 'def' → logprob: -3.041266441345215
    6. 'eturn' → logprob: -3.041266441345215
    7. '   ' → logprob: -3.166266441345215
    8. '=float' → logprob: -3.791266441345215
    9. ' returns' → logprob: -5.666266441345215
    10. 'returns' → logprob: -6.166266441345215

Token 696: ' convert' (ID: 8452)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006930146832019091
    2. 'return' → logprob: -5.631930351257324
    3. 'strip' → logprob: -6.506930351257324
    4. '=float' → logprob: -7.381930351257324
    5. ' float' → logprob: -7.506930351257324
    6. '_float' → logprob: -8.131930351257324
    7. 'convert' → logprob: -9.756930351257324
    8. 'split' → logprob: -9.756930351257324
    9. 'eturn' → logprob: -9.881930351257324
    10. 'def' → logprob: -10.006930351257324

Token 697: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -3.893480243277736e-05
    2. 'ert' → logprob: -11.125039100646973
    3. 'ît' → logprob: -12.375039100646973
    4. 'eit' → logprob: -12.500039100646973
    5. 't' → logprob: -12.750039100646973
    6. '_it' → logprob: -12.750039100646973
    7. 'int' → logprob: -13.250039100646973
    8. 'iert' → logprob: -13.500039100646973
    9. 'ist' → logprob: -13.875039100646973
    10. 'e' → logprob: -13.875039100646973

Token 698: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.01250541117042303
    2. '()' → logprob: -4.512505531311035
    3. ' in' → logprob: -6.762505531311035
    4. '   ' → logprob: -9.387505531311035
    5. ' ' → logprob: -10.262505531311035
    6. 'en' → logprob: -10.262505531311035
    7. 'import' → logprob: -10.762505531311035
    8. 'in' → logprob: -10.887505531311035
    9. 'def' → logprob: -11.137505531311035
    10. ' ()' → logprob: -11.637505531311035

Token 699: ' flott' (ID: 108700)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.5597102396423e-05
    2. ' float' → logprob: -10.250035285949707
    3. 'fl' → logprob: -16.125036239624023
    4. 'flo' → logprob: -17.875036239624023
    5. 'f' → logprob: -18.750036239624023
    6. '=float' → logprob: -19.000036239624023
    7. '	float' → logprob: -19.500036239624023
    8. '(float' → logprob: -20.250036239624023
    9. '_float' → logprob: -20.750036239624023
    10. 'flt' → logprob: -21.250036239624023

Token 700: 'ant' (ID: 493)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.003367231460288167
    2. 'loat' → logprob: -6.6283674240112305
    3. 'float' → logprob: -7.0033674240112305
    4. 'ot' → logprob: -7.7533674240112305
    5. 'oint' → logprob: -8.00336742401123
    6. 'at' → logprob: -8.87836742401123
    7. 't' → logprob: -10.12836742401123
    8. 'ort' → logprob: -10.25336742401123
    9. 'oot' → logprob: -10.25336742401123
    10. 'oit' → logprob: -10.50336742401123

Token 701: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.975612187583465e-05
    2. '()
' → logprob: -10.750029563903809
    3. '().' → logprob: -12.625029563903809
    4. ' ()' → logprob: -13.250029563903809
    5. '())' → logprob: -13.625029563903809
    6. '()\' → logprob: -14.375029563903809
    7. ')' → logprob: -14.875029563903809
    8. '(' → logprob: -15.375029563903809
    9. '()`' → logprob: -15.375029563903809
    10. '()]' → logprob: -15.500029563903809

Token 702: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0172090083360672
    2. '():' → logprob: -4.142209053039551
    3. 'return' → logprob: -7.767209053039551
    4. '   ' → logprob: -8.14220905303955
    5. 'def' → logprob: -8.76720905303955
    6. '():
' → logprob: -9.01720905303955
    7. ' ()' → logprob: -9.26720905303955
    8. '()
' → logprob: -10.01720905303955
    9. ')' → logprob: -10.76720905303955
    10. ' return' → logprob: -12.51720905303955

Token 703: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23279781639575958
    2. 'return' → logprob: -1.7327978610992432
    3. ' return' → logprob: -3.482797861099243
    4. '	return' → logprob: -9.357797622680664
    5. 'def' → logprob: -9.732797622680664
    6. ' ' → logprob: -10.982797622680664
    7. '
' → logprob: -11.982797622680664
    8. '  ' → logprob: -12.982797622680664
    9. '```' → logprob: -13.357797622680664
    10. '    ' → logprob: -14.357797622680664

Token 704: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.579462468624115
    2. '():' → logprob: -0.829462468624115
    3. '(' → logprob: -6.70446252822876
    4. ':' → logprob: -6.82946252822876
    5. '():
' → logprob: -7.70446252822876
    6. ' ()' → logprob: -7.95446252822876
    7. '   ' → logprob: -9.079462051391602
    8. '=' → logprob: -9.079462051391602
    9. '()
' → logprob: -10.704462051391602
    10. '()`' → logprob: -11.079462051391602

Token 705: '       ' (ID: 309)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.030098605901002884
    2. '   ' → logprob: -3.5300986766815186
    3. ' float' → logprob: -8.030098915100098
    4. 'return' → logprob: -11.405098915100098
    5. 'int' → logprob: -12.405098915100098
    6. 'def' → logprob: -13.155098915100098
    7. '  ' → logprob: -13.280098915100098
    8. '=float' → logprob: -13.530098915100098
    9. '```' → logprob: -14.155098915100098
    10. ' ' → logprob: -15.155098915100098

Token 706: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -1.9361264946837764e-07
    2. ' float' → logprob: -15.75
    3. 'f' → logprob: -20.5
    4. 'flo' → logprob: -20.875
    5. '=float' → logprob: -21.5
    6. 'fl' → logprob: -21.75
    7. '	float' → logprob: -22.0
    8. '(float' → logprob: -22.375
    9. '<float' → logprob: -23.0
    10. 'int' → logprob: -24.25

Token 707: ':' (ID: 25)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0058751096948981285
    2. '(' → logprob: -5.630875110626221
    3. '(float' → logprob: -7.130875110626221
    4. '=sys' → logprob: -7.380875110626221
    5. 'sys' → logprob: -8.005874633789062
    6. '()' → logprob: -8.005874633789062
    7. '(
' → logprob: -9.255874633789062
    8. '(math' → logprob: -10.755874633789062
    9. '   ' → logprob: -11.755874633789062
    10. '(s' → logprob: -11.755874633789062

Token 708: ' Le' (ID: 2018)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.306760805164231e-05
    2. ' float' → logprob: -11.25001335144043
    3. 'f' → logprob: -17.75001335144043
    4. 'flo' → logprob: -18.87501335144043
    5. '
' → logprob: -19.37501335144043
    6. '   ' → logprob: -19.37501335144043
    7. '=float' → logprob: -19.62501335144043
    8. '(float' → logprob: -19.75001335144043
    9. 'Float' → logprob: -20.75001335144043
    10. '<float' → logprob: -21.25001335144043

Token 709: ' flott' (ID: 108700)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -8.458980300929397e-05
    2. ' float' → logprob: -9.75008487701416
    3. 'loat' → logprob: -10.62508487701416
    4. 'sys' → logprob: -13.37508487701416
    5. '=float' → logprob: -15.87508487701416
    6. '(float' → logprob: -16.250083923339844
    7. 'f' → logprob: -16.750083923339844
    8. ' ' → logprob: -17.875083923339844
    9. 'floating' → logprob: -18.125083923339844
    10. '
' → logprob: -18.375083923339844

Token 710: 'ant' (ID: 493)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.014963106252253056
    2. 'loat' → logprob: -4.764963150024414
    3. 'at' → logprob: -5.389963150024414
    4. 'a' → logprob: -6.639963150024414
    5. 'ot' → logprob: -9.139963150024414
    6. 'oint' → logprob: -9.264963150024414
    7. ')' → logprob: -10.639963150024414
    8. 'oad' → logprob: -10.639963150024414
    9. 'ort' → logprob: -10.639963150024414
    10. 'ost' → logprob: -10.639963150024414

Token 711: ' lu' (ID: 8620)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33476370573043823
    2. '(sys' → logprob: -1.334763765335083
    3. '(' → logprob: -4.334763526916504
    4. '(x' → logprob: -5.709763526916504
    5. '(stdin' → logprob: -6.959763526916504
    6. '=sys' → logprob: -7.209763526916504
    7. 'sys' → logprob: -7.334763526916504
    8. '(s' → logprob: -7.584763526916504
    9. ')' → logprob: -7.709763526916504
    10. '(
' → logprob: -8.084763526916504

Token 712: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2842308680992573e-05
    2. '()
' → logprob: -11.125022888183594
    3. ')' → logprob: -13.125022888183594
    4. '().' → logprob: -13.125022888183594
    5. '())' → logprob: -13.375022888183594
    6. ' ()' → logprob: -14.125022888183594
    7. '()]' → logprob: -14.750022888183594
    8. '()`' → logprob: -14.875022888183594
    9. '()\' → logprob: -15.375022888183594
    10. '()<' → logprob: -16.250022888183594

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4588302969932556
    2. '()' → logprob: -1.0838303565979004
    3. 'return' → logprob: -4.5838303565979
    4. 'def' → logprob: -4.8338303565979
    5. ')' → logprob: -5.3338303565979
    6. '()
' → logprob: -6.2088303565979
    7. '():
' → logprob: -6.4588303565979
    8. ' return' → logprob: -6.5838303565979
    9. '```' → logprob: -7.9588303565979
    10. '():' → logprob: -8.083829879760742

Token 714: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022091630846261978
    2. ')' → logprob: -4.397091865539551
    3. 'return' → logprob: -4.897091865539551
    4. ' return' → logprob: -6.772091865539551
    5. '	return' → logprob: -7.772091865539551
    6. '):' → logprob: -9.02209186553955
    7. ':return' → logprob: -9.27209186553955
    8. 'def' → logprob: -9.64709186553955
    9. ' ' → logprob: -10.27209186553955
    10. '):
' → logprob: -10.39709186553955

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10390482097864151
    2. 'return' → logprob: -2.3539047241210938
    3. ' return' → logprob: -5.603904724121094
    4. '	return' → logprob: -11.978904724121094
    5. '```' → logprob: -14.478904724121094
    6. '
' → logprob: -15.103904724121094
    7. ' ' → logprob: -15.228904724121094
    8. '  ' → logprob: -15.478904724121094
    9. 'def' → logprob: -15.603904724121094
    10. '    
' → logprob: -16.853904724121094

Token 716: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0087516784551553e-05
    2. ' return' → logprob: -12.25001049041748
    3. 'float' → logprob: -12.25001049041748
    4. '   ' → logprob: -14.50001049041748
    5. '
' → logprob: -17.375009536743164
    6. 'def' → logprob: -17.875009536743164
    7. '```' → logprob: -20.375009536743164
    8. 'eturn' → logprob: -20.750009536743164
    9. '	return' → logprob: -20.875009536743164
    10. 'ret' → logprob: -21.625009536743164

Token 717: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.1472419600977446e-06
    2. ' float' → logprob: -13.750000953674316
    3. 'f' → logprob: -21.750001907348633
    4. '	float' → logprob: -23.125001907348633
    5. '=float' → logprob: -23.125001907348633
    6. 'flo' → logprob: -23.125001907348633
    7. '   ' → logprob: -23.375001907348633
    8. '
' → logprob: -23.500001907348633
    9. '(float' → logprob: -23.875001907348633
    10. 'fl' → logprob: -24.375001907348633

Token 718: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. 'sys' → logprob: -15.250000953674316
    4. '=sys' → logprob: -17.25
    5. '(s' → logprob: -17.375
    6. ' (' → logprob: -17.875
    7. '(system' → logprob: -18.375
    8. ' sys' → logprob: -20.0
    9. '/sys' → logprob: -20.625
    10. '(Sys' → logprob: -20.625

Token 719: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005979516077786684
    2. '().' → logprob: -5.505979537963867
    3. '.readline' → logprob: -6.880979537963867
    4. 'stdin' → logprob: -8.005979537963867
    5. '(stdin' → logprob: -8.130979537963867
    6. '.stdout' → logprob: -8.630979537963867
    7. '.' → logprob: -10.380979537963867
    8. '.std' → logprob: -11.505979537963867
    9. ' .' → logprob: -12.130979537963867
    10. '.sys' → logprob: -13.005979537963867

Token 720: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.045427657663822174
    2. '().' → logprob: -3.1704275608062744
    3. '()' → logprob: -6.2954277992248535
    4. '())' → logprob: -7.6704277992248535
    5. '.stdin' → logprob: -10.045427322387695
    6. '()[' → logprob: -10.795427322387695
    7. '.' → logprob: -11.545427322387695
    8. '().__' → logprob: -11.670427322387695
    9. '()).' → logprob: -11.795427322387695
    10. ')' → logprob: -12.420427322387695

Token 721: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00015574338613077998
    2. '()' → logprob: -8.875155448913574
    3. ')' → logprob: -11.875155448913574
    4. '())
' → logprob: -12.625155448913574
    5. ' ())' → logprob: -12.750155448913574
    6. '().' → logprob: -13.000155448913574
    7. '()]' → logprob: -16.00015640258789
    8. '()[' → logprob: -16.12515640258789
    9. '();)' → logprob: -16.50015640258789
    10. '()))' → logprob: -17.25015640258789

Token 722: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002183095784857869
    2. '#' → logprob: -6.502182960510254
    3. '\' → logprob: -8.002182960510254
    4. '\n' → logprob: -8.627182960510254
    5. 'class' → logprob: -9.752182960510254
    6. '
' → logprob: -9.877182960510254
    7. '  
' → logprob: -11.627182960510254
    8. 'import' → logprob: -11.877182960510254
    9. '```' → logprob: -11.877182960510254
    10. '@' → logprob: -11.877182960510254

Token 723: ' S' (ID: 336)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1668662428855896
    2. 'main' → logprob: -2.5418663024902344
    3. 's' → logprob: -4.166866302490234
    4. 'O' → logprob: -4.666866302490234
    5. 'S' → logprob: -4.666866302490234
    6. 'def' → logprob: -4.791866302490234
    7. 'g' → logprob: -4.916866302490234
    8. 'G' → logprob: -5.541866302490234
    9. 'YES' → logprob: -5.916866302490234
    10. 'max' → logprob: -6.166866302490234

Token 724: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001155697274953127
    2. '():
' → logprob: -7.001155853271484
    3. '()' → logprob: -8.376155853271484
    4. ' ():' → logprob: -11.626155853271484
    5. '():
' → logprob: -13.126155853271484
    6. '():

' → logprob: -13.876155853271484
    7. '(' → logprob: -14.876155853271484
    8. 's' → logprob: -15.001155853271484
    9. '()>' → logprob: -15.001155853271484
    10. '().' → logprob: -15.626155853271484

Token 725: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004127911292016506
    2. '():
' → logprob: -5.5041279792785645
    3. '()' → logprob: -10.004127502441406
    4. '():
' → logprob: -13.254127502441406
    5. ' ():' → logprob: -13.379127502441406
    6. '():

' → logprob: -14.879127502441406
    7. '().' → logprob: -15.379127502441406
    8. '):' → logprob: -15.629127502441406
    9. '(' → logprob: -16.129127502441406
    10. '()*' → logprob: -17.129127502441406

Token 726: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09910769015550613
    2. '()' → logprob: -3.0991077423095703
    3. '   ' → logprob: -3.9741077423095703
    4. '():' → logprob: -4.22410774230957
    5. 'sys' → logprob: -4.72410774230957
    6. ' return' → logprob: -6.22410774230957
    7. 'def' → logprob: -6.34910774230957
    8. '()
' → logprob: -6.72410774230957
    9. '():
' → logprob: -6.84910774230957
    10. '(sys' → logprob: -8.47410774230957

Token 727: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41298311948776245
    2. '   ' → logprob: -2.2879831790924072
    3. 'return' → logprob: -2.2879831790924072
    4. '):
' → logprob: -3.4129831790924072
    5. '():
' → logprob: -3.5379831790924072
    6. '():' → logprob: -3.7879831790924072
    7. '()' → logprob: -3.7879831790924072
    8. 'sys' → logprob: -4.412982940673828
    9. '"""
' → logprob: -4.912982940673828
    10. '):' → logprob: -6.162982940673828

Token 728: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -8.85235276655294e-05
    2. ' return' → logprob: -9.750088691711426
    3. '   ' → logprob: -11.125088691711426
    4. 'def' → logprob: -11.750088691711426
    5. '"""' → logprob: -12.125088691711426
    6. '"""
' → logprob: -14.125088691711426
    7. 'sys' → logprob: -14.125088691711426
    8. '```' → logprob: -15.125088691711426
    9. '
' → logprob: -16.25008773803711
    10. 's' → logprob: -16.37508773803711

Token 729: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05686703696846962
    2. 'sys' → logprob: -3.0568671226501465
    3. '():' → logprob: -5.0568671226501465
    4. '().' → logprob: -7.5568671226501465
    5. 'a' → logprob: -7.9318671226501465
    6. '=sys' → logprob: -8.056866645812988
    7. 's' → logprob: -9.306866645812988
    8. ' ()' → logprob: -9.306866645812988
    9. '()
' → logprob: -9.556866645812988
    10. 'line' → logprob: -9.556866645812988

Token 730: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0432414673268795
    2. 'line' → logprob: -3.918241500854492
    3. ' ligne' → logprob: -3.918241500854492
    4. 'une' → logprob: -6.418241500854492
    5. 'l' → logprob: -7.918241500854492
    6. 'chaine' → logprob: -9.043241500854492
    7. 'ine' → logprob: -9.418241500854492
    8. 'a' → logprob: -9.543241500854492
    9. ' une' → logprob: -9.668241500854492
    10. '()' → logprob: -10.043241500854492

Token 731: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00885836686939001
    2. ' =' → logprob: -6.0088582038879395
    3. '().' → logprob: -6.0088582038879395
    4. '=' → logprob: -6.3838582038879395
    5. '   ' → logprob: -7.2588582038879395
    6. '()
' → logprob: -8.008858680725098
    7. '()[' → logprob: -8.383858680725098
    8. 'return' → logprob: -8.383858680725098
    9. '=sys' → logprob: -9.133858680725098
    10. '():' → logprob: -9.383858680725098

Token 732: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6014389395713806
    2. 'chaine' → logprob: -1.1014389991760254
    3. 'input' → logprob: -2.9764389991760254
    4. 'code' → logprob: -4.101438999176025
    5. 'l' → logprob: -4.226438999176025
    6. 'string' → logprob: -4.976438999176025
    7. 'entrée' → logprob: -5.351438999176025
    8. 'texte' → logprob: -5.351438999176025
    9. '()' → logprob: -5.476438999176025
    10. ' sys' → logprob: -5.601438999176025

Token 733: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4540795683860779
    2. 'a' → logprob: -1.2040796279907227
    3. 'entrée' → logprob: -3.3290796279907227
    4. 'input' → logprob: -4.329079627990723
    5. 'sys' → logprob: -4.954079627990723
    6. 'e' → logprob: -5.454079627990723
    7. '=sys' → logprob: -5.954079627990723
    8. 'es' → logprob: -7.079079627990723
    9. 'stdin' → logprob: -8.204079627990723
    10. ''' → logprob: -8.704079627990723

Token 734: ' utilisateur' (ID: 115595)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.08445622026920319
    2. ' standard' → logprob: -2.959456205368042
    3. '()' → logprob: -3.584456205368042
    4. '_standard' → logprob: -7.709456443786621
    5. '()
' → logprob: -8.584456443786621
    6. '   ' → logprob: -8.834456443786621
    7. 'std' → logprob: -9.459456443786621
    8. '().' → logprob: -9.584456443786621
    9. '_std' → logprob: -9.709456443786621
    10. 'sys' → logprob: -9.709456443786621

Token 735: ' via' (ID: 4493)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01869847998023033
    2. '()' → logprob: -4.143698692321777
    3. ' =' → logprob: -6.643698692321777
    4. '=' → logprob: -7.393698692321777
    5. ')' → logprob: -8.393698692321777
    6. ').' → logprob: -8.518698692321777
    7. '.' → logprob: -8.893698692321777
    8. '.strip' → logprob: -9.643698692321777
    9. '()
' → logprob: -10.018698692321777
    10. '=sys' → logprob: -10.893698692321777

Token 736: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011606394313275814
    2. 'input' → logprob: -4.511606216430664
    3. ' sys' → logprob: -7.511606216430664
    4. ' input' → logprob: -11.511606216430664
    5. '=sys' → logprob: -13.761606216430664
    6. '(sys' → logprob: -14.886606216430664
    7. 'stdin' → logprob: -15.636606216430664
    8. '	sys' → logprob: -17.386606216430664
    9. '```' → logprob: -17.386606216430664
    10. 's' → logprob: -17.886606216430664

Token 737: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3414379060268402
    2. 'sys' → logprob: -1.3414379358291626
    3. 'stdin' → logprob: -3.591437816619873
    4. ' input' → logprob: -9.216438293457031
    5. ' sys' → logprob: -9.966438293457031
    6. 'entrée' → logprob: -10.216438293457031
    7. 'standard' → logprob: -10.841438293457031
    8. 'import' → logprob: -12.841438293457031
    9. '=sys' → logprob: -12.841438293457031
    10. 'r' → logprob: -13.091438293457031

Token 738: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011847454123198986
    2. 'input' → logprob: -4.511847496032715
    3. ' sys' → logprob: -7.386847496032715
    4. '(sys' → logprob: -9.386847496032715
    5. 'stdin' → logprob: -9.886847496032715
    6. '=sys' → logprob: -10.761847496032715
    7. ' input' → logprob: -11.261847496032715
    8. '()' → logprob: -12.636847496032715
    9. 's' → logprob: -12.886847496032715
    10. '`' → logprob: -13.636847496032715

Token 739: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010700009443098679
    2. '().' → logprob: -9.750106811523438
    3. '()
' → logprob: -11.125106811523438
    4. ' ()' → logprob: -11.125106811523438
    5. '():' → logprob: -11.625106811523438
    6. '()`' → logprob: -12.625106811523438
    7. '(),' → logprob: -13.250106811523438
    8. '())' → logprob: -13.625106811523438
    9. '(' → logprob: -14.000106811523438
    10. '()]' → logprob: -14.250106811523438

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019079595804214478
    2. 'def' → logprob: -4.894079685211182
    3. ')' → logprob: -5.394079685211182
    4. ' return' → logprob: -5.894079685211182
    5. '()' → logprob: -6.019079685211182
    6. 'return' → logprob: -7.269079685211182
    7. ' ' → logprob: -8.144079208374023
    8. '<|end|>' → logprob: -8.394079208374023
    9. ' def' → logprob: -9.769079208374023
    10. ':return' → logprob: -9.769079208374023

Token 741: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007448321674019098
    2. ' return' → logprob: -5.257448196411133
    3. 'return' → logprob: -6.382448196411133
    4. 'def' → logprob: -8.007448196411133
    5. ' ' → logprob: -9.382448196411133
    6. '	return' → logprob: -10.507448196411133
    7. '    ' → logprob: -10.757448196411133
    8. '  ' → logprob: -11.132448196411133
    9. '()' → logprob: -11.507448196411133
    10. ' 
' → logprob: -12.007448196411133

Token 742: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6890240907669067
    2. '()' → logprob: -1.1890240907669067
    3. ':' → logprob: -1.8140240907669067
    4. ' =' → logprob: -4.439023971557617
    5. ' :' → logprob: -5.064023971557617
    6. ' ()' → logprob: -6.064023971557617
    7. '=' → logprob: -6.314023971557617
    8. '(' → logprob: -6.439023971557617
    9. '   ' → logprob: -6.564023971557617
    10. ')' → logprob: -7.064023971557617

Token 743: '       ' (ID: 309)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5989464521408081
    2. 'input' → logprob: -0.9739464521408081
    3. ' str' → logprob: -2.9739465713500977
    4. 'str' → logprob: -4.348946571350098
    5. '   ' → logprob: -4.723946571350098
    6. '    ' → logprob: -9.723946571350098
    7. '=input' → logprob: -10.848946571350098
    8. ' ' → logprob: -11.598946571350098
    9. 's' → logprob: -11.723946571350098
    10. '(input' → logprob: -12.348946571350098

Token 744: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.000556012790184468
    2. ' str' → logprob: -7.500555992126465
    3. 'input' → logprob: -12.750555992126465
    4. 'string' → logprob: -16.50055694580078
    5. '[str' → logprob: -17.25055694580078
    6. '(str' → logprob: -18.62555694580078
    7. ' input' → logprob: -19.75055694580078
    8. '	str' → logprob: -19.87555694580078
    9. '   ' → logprob: -20.62555694580078
    10. 'Str' → logprob: -20.87555694580078

Token 745: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10026533901691437
    2. '()' → logprob: -2.3502652645111084
    3. '().' → logprob: -10.600265502929688
    4. '():
' → logprob: -10.725265502929688
    5. '()`' → logprob: -12.100265502929688
    6. ':' → logprob: -13.100265502929688
    7. ' ():' → logprob: -13.350265502929688
    8. '()
' → logprob: -13.725265502929688
    9. ' ()' → logprob: -14.225265502929688
    10. '(' → logprob: -15.225265502929688

Token 746: ' La' (ID: 3038)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. 'str' → logprob: -18.375911712646484
    4. '(input' → logprob: -19.000911712646484
    5. '   ' → logprob: -19.750911712646484
    6. 's' → logprob: -20.250911712646484
    7. 'sys' → logprob: -20.375911712646484
    8. '=input' → logprob: -20.500911712646484
    9. ' ' → logprob: -20.625911712646484
    10. '<input' → logprob: -20.875911712646484

Token 747: ' chaîne' (ID: 89288)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.019683143123984337
    2. ' input' → logprob: -4.769683361053467
    3. 'string' → logprob: -5.269683361053467
    4. 'line' → logprob: -6.769683361053467
    5. 'n' → logprob: -6.894683361053467
    6. 'tring' → logprob: -6.894683361053467
    7. 's' → logprob: -7.144683361053467
    8. '(input' → logprob: -7.269683361053467
    9. '=input' → logprob: -8.144682884216309
    10. 'user' → logprob: -8.894682884216309

Token 748: ' entrée' (ID: 95590)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002931583672761917
    2. 'input' → logprob: -6.752931594848633
    3. '()
' → logprob: -7.252931594848633
    4. '().' → logprob: -7.877931594848633
    5. '("")' → logprob: -8.877931594848633
    6. ' =' → logprob: -9.002931594848633
    7. '(' → logprob: -9.377931594848633
    8. ')' → logprob: -9.877931594848633
    9. ' ()' → logprob: -10.252931594848633
    10. '=input' → logprob: -10.377931594848633

Token 749: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018717315047979355
    2. '()
' → logprob: -4.018717288970947
    3. '().' → logprob: -7.893717288970947
    4. '()`' → logprob: -9.893717765808105
    5. '.' → logprob: -10.643717765808105
    6. ')' → logprob: -10.893717765808105
    7. 'input' → logprob: -11.143717765808105
    8. '`()' → logprob: -11.393717765808105
    9. '()
' → logprob: -11.768717765808105
    10. '()]' → logprob: -11.768717765808105

Token 750: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023037444800138474
    2. 'l' → logprob: -4.273037433624268
    3. ' input' → logprob: -5.023037433624268
    4. ' l' → logprob: -6.148037433624268
    5. 'user' → logprob: -9.648037910461426
    6. '=input' → logprob: -11.148037910461426
    7. 'the' → logprob: -11.523037910461426
    8. 'util' → logprob: -11.773037910461426
    9. '(input' → logprob: -12.398037910461426
    10. '()' → logprob: -13.023037910461426

Token 751: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.19309723377227783
    2. 'util' → logprob: -1.8180972337722778
    3. 'input' → logprob: -5.318097114562988
    4. '’utilisateur' → logprob: -5.443097114562988
    5. 'user' → logprob: -5.818097114562988
    6. ' utilisateur' → logprob: -7.193097114562988
    7. 'Utilisateur' → logprob: -9.443097114562988
    8. 'ut' → logprob: -9.818097114562988
    9. ''user' → logprob: -10.193097114562988
    10. ''util' → logprob: -10.693097114562988

Token 752: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010867553064599633
    2. '()
' → logprob: -7.376086711883545
    3. '():' → logprob: -8.751087188720703
    4. ')' → logprob: -8.876087188720703
    5. '().' → logprob: -9.251087188720703
    6. '())' → logprob: -11.376087188720703
    7. '   ' → logprob: -11.376087188720703
    8. '()`' → logprob: -11.501087188720703
    9. ' ()' → logprob: -11.626087188720703
    10. '():
' → logprob: -12.251087188720703

Token 753: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013578047975897789
    2. '():
' → logprob: -5.013577938079834
    3. '()' → logprob: -5.138577938079834
    4. '   ' → logprob: -7.388577938079834
    5. '):' → logprob: -8.763578414916992
    6. ':' → logprob: -9.888578414916992
    7. ')' → logprob: -10.013578414916992
    8. 'return' → logprob: -10.513578414916992
    9. 'def' → logprob: -10.513578414916992
    10. ' ():' → logprob: -11.138578414916992

Token 754: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06221235916018486
    2. 'return' → logprob: -2.9372124671936035
    3. ' return' → logprob: -5.1872124671936035
    4. ')' → logprob: -7.5622124671936035
    5. 'def' → logprob: -7.8122124671936035
    6. ':return' → logprob: -7.9372124671936035
    7. '()' → logprob: -9.062211990356445
    8. ':' → logprob: -9.437211990356445
    9. ' ' → logprob: -9.937211990356445
    10. '	return' → logprob: -10.062211990356445

Token 755: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09202813357114792
    2. '   ' → logprob: -2.5920281410217285
    3. ' return' → logprob: -4.3420281410217285
    4. 'input' → logprob: -10.21702766418457
    5. '	return' → logprob: -12.84202766418457
    6. '```' → logprob: -14.09202766418457
    7. 'import' → logprob: -14.34202766418457
    8. 'def' → logprob: -14.59202766418457
    9. '
' → logprob: -15.21702766418457
    10. '    
' → logprob: -15.46702766418457

Token 756: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.292907877039397e-06
    2. ' return' → logprob: -12.75000286102295
    3. 'input' → logprob: -15.12500286102295
    4. 's' → logprob: -16.875003814697266
    5. '   ' → logprob: -18.625003814697266
    6. 'ret' → logprob: -19.625003814697266
    7. 'import' → logprob: -20.000003814697266
    8. '	return' → logprob: -20.250003814697266
    9. 'S' → logprob: -20.625003814697266
    10. 'eturn' → logprob: -21.125003814697266

Token 757: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.7697225252486533e-06
    2. ' input' → logprob: -12.500003814697266
    3. '(input' → logprob: -20.000003814697266
    4. 'str' → logprob: -20.625003814697266
    5. '<input' → logprob: -21.625003814697266
    6. '=input' → logprob: -21.625003814697266
    7. 'sys' → logprob: -22.000003814697266
    8. '	input' → logprob: -22.750003814697266
    9. 'inp' → logprob: -23.125003814697266
    10. 'in' → logprob: -24.750003814697266

Token 758: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2842308680992573e-05
    2. '().' → logprob: -11.500022888183594
    3. '(' → logprob: -12.250022888183594
    4. ' ()' → logprob: -12.500022888183594
    5. '())' → logprob: -13.750022888183594
    6. '()
' → logprob: -14.250022888183594
    7. '()]' → logprob: -14.500022888183594
    8. '()`' → logprob: -14.875022888183594
    9. '()\' → logprob: -15.125022888183594
    10. '（）' → logprob: -15.500022888183594

Token 759: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19358563423156738
    2. '
' → logprob: -1.9435856342315674
    3. '<|end|>' → logprob: -4.193585395812988
    4. '#' → logprob: -4.318585395812988
    5. ':' → logprob: -5.943585395812988
    6. ' def' → logprob: -8.193585395812988
    7. ' 
' → logprob: -8.693585395812988
    8. '```' → logprob: -8.693585395812988
    9. 'import' → logprob: -8.818585395812988
    10. '\' → logprob: -9.068585395812988

Token 760: ' pf' (ID: 27291)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4236295223236084
    2. 'main' → logprob: -1.9236295223236084
    3. 'Y' → logprob: -2.9236295223236084
    4. 'YES' → logprob: -3.0486295223236084
    5. 'input' → logprob: -3.4236295223236084
    6. 'P' → logprob: -4.4236297607421875
    7. 'T' → logprob: -4.5486297607421875
    8. 'def' → logprob: -5.0486297607421875
    9. 'pr' → logprob: -5.4236297607421875
    10. 'Yes' → logprob: -5.5486297607421875

Token 761: '(s' (ID: 1858)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.43454745411872864
    2. '()' → logprob: -2.3095474243164062
    3. '(' → logprob: -2.4345474243164062
    4. '("' → logprob: -3.1845474243164062
    5. '('' → logprob: -3.6845474243164062
    6. 'mt' → logprob: -3.6845474243164062
    7. '("")' → logprob: -4.309547424316406
    8. 'ormat' → logprob: -4.559547424316406
    9. 'print' → logprob: -4.684547424316406
    10. 'm' → logprob: -4.684547424316406

Token 762: '):
' (ID: 1883)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18643388152122498
    2. '):
' → logprob: -2.686433792114258
    3. '):' → logprob: -3.311433792114258
    4. '(' → logprob: -3.561433792114258
    5. '('' → logprob: -4.561433792114258
    6. 'ormat' → logprob: -4.936433792114258
    7. '(r' → logprob: -5.186433792114258
    8. ',' → logprob: -5.436433792114258
    9. '("' → logprob: -6.311433792114258
    10. '()):
' → logprob: -6.436433792114258

Token 763: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42103660106658936
    2. '(s' → logprob: -1.2960366010665894
    3. '(' → logprob: -3.546036720275879
    4. 'def' → logprob: -3.671036720275879
    5. '   ' → logprob: -5.046036720275879
    6. ' print' → logprob: -5.546036720275879
    7. '(
' → logprob: -6.171036720275879
    8. '(print' → logprob: -6.796036720275879
    9. ' (' → logprob: -7.671036720275879
    10. '):' → logprob: -8.171036720275879

Token 764: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017121860291808844
    2. 's' → logprob: -7.501712322235107
    3. ' print' → logprob: -7.501712322235107
    4. '(s' → logprob: -7.751712322235107
    5. '   ' → logprob: -8.87671184539795
    6. 'def' → logprob: -11.00171184539795
    7. '(print' → logprob: -11.25171184539795
    8. ' s' → logprob: -12.87671184539795
    9. '(' → logprob: -13.12671184539795
    10. '    
' → logprob: -14.25171184539795

Token 765: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1476389616727829
    2. 's' → logprob: -2.272639036178589
    3. ' print' → logprob: -4.27263879776001
    4. '   ' → logprob: -4.89763879776001
    5. ' s' → logprob: -4.89763879776001
    6. ''' → logprob: -6.64763879776001
    7. '"""' → logprob: -7.14763879776001
    8. ')' → logprob: -7.27263879776001
    9. 'str' → logprob: -7.27263879776001
    10. 'def' → logprob: -7.27263879776001

Token 766: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001652796781854704
    2. 'def' → logprob: -8.750164985656738
    3. ' print' → logprob: -12.500164985656738
    4. '   ' → logprob: -13.000164985656738
    5. 'return' → logprob: -15.125164985656738
    6. '"""' → logprob: -15.750164985656738
    7. 'pass' → logprob: -16.500165939331055
    8. 'import' → logprob: -16.750165939331055
    9. '"""
' → logprob: -17.000165939331055
    10. 'sys' → logprob: -17.125165939331055

Token 767: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5902701020240784
    2. 'r' → logprob: -1.2152700424194336
    3. 'pr' → logprob: -2.7152700424194336
    4. ')' → logprob: -3.3402700424194336
    5. 'int' → logprob: -3.4652700424194336
    6. 'def' → logprob: -5.965270042419434
    7. '   ' → logprob: -6.090270042419434
    8. '#print' → logprob: -6.215270042419434
    9. 'ormat' → logprob: -6.340270042419434
    10. 't' → logprob: -6.465270042419434

Token 768: ' la' (ID: 557)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003670971840620041
    2. '(' → logprob: -5.628671169281006
    3. 's' → logprob: -9.878670692443848
    4. '(f' → logprob: -11.628670692443848
    5. '(str' → logprob: -12.003670692443848
    6. '(
' → logprob: -13.753670692443848
    7. '()' → logprob: -14.378670692443848
    8. 'print' → logprob: -14.628670692443848
    9. '((' → logprob: -14.753670692443848
    10. ' (' → logprob: -14.753670692443848

Token 769: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20191748440265656
    2. '(s' → logprob: -1.7019175291061401
    3. '(' → logprob: -8.45191764831543
    4. 'print' → logprob: -8.95191764831543
    5. 'str' → logprob: -9.32691764831543
    6. 'string' → logprob: -10.07691764831543
    7. '(str' → logprob: -11.45191764831543
    8. ' s' → logprob: -12.20191764831543
    9. 'f' → logprob: -12.32691764831543
    10. '%s' → logprob: -12.95191764831543

Token 770: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006997507996857166
    2. '(' → logprob: -5.006997585296631
    3. '(f' → logprob: -9.006997108459473
    4. 's' → logprob: -9.381997108459473
    5. 'print' → logprob: -11.381997108459473
    6. '("("' → logprob: -11.381997108459473
    7. '(
' → logprob: -11.506997108459473
    8. '()' → logprob: -11.756997108459473
    9. 'f' → logprob: -11.881997108459473
    10. '(str' → logprob: -12.381997108459473

Token 771: ' et' (ID: 859)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2368716597557068
    2. ',' → logprob: -1.8618717193603516
    3. '(' → logprob: -3.2368717193603516
    4. ')' → logprob: -5.236871719360352
    5. '(end' → logprob: -5.486871719360352
    6. '("")' → logprob: -6.611871719360352
    7. 'end' → logprob: -6.611871719360352
    8. '(str' → logprob: -6.986871719360352
    9. ',end' → logprob: -7.236871719360352
    10. 'print' → logprob: -7.361871719360352

Token 772: ' force' (ID: 9578)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6653982996940613
    2. 'print' → logprob: -1.665398359298706
    3. 'flush' → logprob: -2.290398359298706
    4. ' end' → logprob: -2.790398359298706
    5. '()' → logprob: -3.165398359298706
    6. '...' → logprob: -3.540398359298706
    7. ' flush' → logprob: -3.540398359298706
    8. 'exit' → logprob: -4.290398120880127
    9. '(end' → logprob: -5.290398120880127
    10. ')' → logprob: -5.415398120880127

Token 773: ' la' (ID: 557)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.6434534192085266
    2. ' flush' → logprob: -1.0184533596038818
    3. '(fl' → logprob: -2.768453359603882
    4. '.flush' → logprob: -4.143453598022461
    5. '_flush' → logprob: -4.268453598022461
    6. ' flushed' → logprob: -5.018453598022461
    7. 'l' → logprob: -5.518453598022461
    8. '()' → logprob: -6.143453598022461
    9. ' la' → logprob: -6.643453598022461
    10. ' le' → logprob: -7.018453598022461

Token 774: ' vid' (ID: 11217)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.017132263630628586
    2. ' flush' → logprob: -4.64213228225708
    3. 'print' → logprob: -5.51713228225708
    4. 'sys' → logprob: -6.39213228225708
    5. '.flush' → logprob: -6.76713228225708
    6. 'stdout' → logprob: -7.89213228225708
    7. ' sys' → logprob: -10.142131805419922
    8. 'output' → logprob: -11.017131805419922
    9. 's' → logprob: -11.267131805419922
    10. 'import' → logprob: -11.517131805419922

Token 775: 'ange' (ID: 1052)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.2604720890522003
    2. 'f' → logprob: -2.885472059249878
    3. 'er' → logprob: -3.260472059249878
    4. ' flush' → logprob: -3.635472059249878
    5. '_flush' → logprob: -3.760472059249878
    6. '.flush' → logprob: -4.385472297668457
    7. 'e' → logprob: -4.510472297668457
    8. '()' → logprob: -4.635472297668457
    9. 'n' → logprob: -5.010472297668457
    10. 'ff' → logprob: -5.135472297668457

Token 776: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001924352254718542
    2. '()
' → logprob: -7.126924514770508
    3. '(' → logprob: -7.626924514770508
    4. ' ()' → logprob: -8.001924514770508
    5. '(stdout' → logprob: -9.751924514770508
    6. '(s' → logprob: -10.251924514770508
    7. '   ' → logprob: -10.376924514770508
    8. '```' → logprob: -10.751924514770508
    9. '()\' → logprob: -11.001924514770508
    10. '();' → logprob: -11.126924514770508

Token 777: ' buffer' (ID: 8573)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3829575181007385
    2. 'stdout' → logprob: -1.3829574584960938
    3. ' sys' → logprob: -2.7579574584960938
    4. '=sys' → logprob: -5.882957458496094
    5. '(sys' → logprob: -8.257957458496094
    6. ' stdout' → logprob: -8.257957458496094
    7. 'output' → logprob: -8.882957458496094
    8. 'print' → logprob: -9.257957458496094
    9. 'flush' → logprob: -9.382957458496094
    10. 'stderr' → logprob: -9.757957458496094

Token 778: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3184414207935333
    2. '(s' → logprob: -2.068441390991211
    3. '(stdout' → logprob: -3.068441390991211
    4. 'print' → logprob: -3.443441390991211
    5. '(' → logprob: -4.068441390991211
    6. '(print' → logprob: -4.318441390991211
    7. '(sys' → logprob: -5.068441390991211
    8. 'stdout' → logprob: -5.318441390991211
    9. '   ' → logprob: -5.818441390991211
    10. ',' → logprob: -5.818441390991211

Token 779: ' sortie' (ID: 52761)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.015285168774425983
    2. 'sys' → logprob: -4.640285015106201
    3. ' stdout' → logprob: -6.265285015106201
    4. 'output' → logprob: -6.390285015106201
    5. 'print' → logprob: -6.515285015106201
    6. '(stdout' → logprob: -9.14028549194336
    7. ' sys' → logprob: -9.14028549194336
    8. '```' → logprob: -9.89028549194336
    9. ' output' → logprob: -10.39028549194336
    10. 's' → logprob: -10.39028549194336

Token 780: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.022702809423208237
    2. 'print' → logprob: -4.522702693939209
    3. '(print' → logprob: -5.522702693939209
    4. '(' → logprob: -6.022702693939209
    5. '   ' → logprob: -6.147702693939209
    6. ',' → logprob: -6.522702693939209
    7. ')' → logprob: -8.147703170776367
    8. ' (' → logprob: -8.272703170776367
    9. '(
' → logprob: -8.647703170776367
    10. '(sys' → logprob: -9.022703170776367

Token 781: 'flush' (ID: 49766)
  Prédit: 'flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.07720779627561569
    2. ')' → logprob: -2.7022078037261963
    3. ' flush' → logprob: -5.952207565307617
    4. ')
' → logprob: -6.452207565307617
    5. '   ' → logprob: -6.577207565307617
    6. 'stdout' → logprob: -7.577207565307617
    7. 'end' → logprob: -7.827207565307617
    8. 'file' → logprob: -8.702207565307617
    9. ',' → logprob: -9.077207565307617
    10. 's' → logprob: -9.452207565307617

Token 782: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09894854575395584
    2. ')
' → logprob: -3.2239484786987305
    3. '=True' → logprob: -3.2239484786987305
    4. '(s' → logprob: -5.2239484786987305
    5. '())' → logprob: -5.4739484786987305
    6. '()' → logprob: -6.3489484786987305
    7. '=' → logprob: -6.5989484786987305
    8. '())
' → logprob: -6.7239484786987305
    9. '=s' → logprob: -8.34894847869873
    10. '(True' → logprob: -9.22394847869873

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7204012870788574
    2. '(s' → logprob: -1.0954012870788574
    3. '):' → logprob: -2.0954012870788574
    4. 'print' → logprob: -4.220401287078857
    5. 'def' → logprob: -4.470401287078857
    6. ')' → logprob: -4.720401287078857
    7. '):
' → logprob: -4.720401287078857
    8. '():' → logprob: -5.595401287078857
    9. '(' → logprob: -6.345401287078857
    10. ':' → logprob: -6.345401287078857

Token 784: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336864113807678
    2. 'def' → logprob: -1.833686351776123
    3. 'print' → logprob: -3.458686351776123
    4. '):' → logprob: -3.458686351776123
    5. '(s' → logprob: -3.458686351776123
    6. '):
' → logprob: -3.958686351776123
    7. ')' → logprob: -5.958686351776123
    8. '
' → logprob: -6.208686351776123
    9. '    
' → logprob: -6.333686351776123
    10. ' print' → logprob: -6.708686351776123

Token 785: ':
' (ID: 734)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.020083626732230186
    2. '(' → logprob: -4.020083427429199
    3. ':' → logprob: -6.645083427429199
    4. '   ' → logprob: -8.3950834274292
    5. ' (' → logprob: -8.8950834274292
    6. ',' → logprob: -9.2700834274292
    7. '):' → logprob: -9.7700834274292
    8. 's' → logprob: -10.5200834274292
    9. '(
' → logprob: -10.5200834274292
    10. ')' → logprob: -10.6450834274292

Token 786: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10661054402589798
    2. ' s' → logprob: -2.7316105365753174
    3. '   ' → logprob: -3.3566105365753174
    4. '(s' → logprob: -7.1066107749938965
    5. 'string' → logprob: -8.856610298156738
    6. '    ' → logprob: -9.481610298156738
    7. 'def' → logprob: -10.356610298156738
    8. ' def' → logprob: -10.731610298156738
    9. ' string' → logprob: -10.981610298156738
    10. '    
' → logprob: -11.731610298156738

Token 787: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -6.0391463193809614e-05
    2. ' s' → logprob: -10.125060081481934
    3. 'string' → logprob: -11.500060081481934
    4. '   ' → logprob: -11.750060081481934
    5. 'str' → logprob: -14.375060081481934
    6. 'message' → logprob: -14.500060081481934
    7. ')' → logprob: -15.500060081481934
    8. '):' → logprob: -15.500060081481934
    9. '(s' → logprob: -15.750060081481934
    10. 'text' → logprob: -16.00006103515625

Token 788: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01379463355988264
    2. '):
' → logprob: -5.013794422149658
    3. ':' → logprob: -5.388794422149658
    4. ')' → logprob: -6.013794422149658
    5. ':str' → logprob: -10.888794898986816
    6. '):

' → logprob: -11.888794898986816
    7. ' ):' → logprob: -12.013794898986816
    8. '   ' → logprob: -12.888794898986816
    9. '):
' → logprob: -13.388794898986816
    10. '=' → logprob: -13.638794898986816

Token 789: 'str' (ID: 689)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07446450740098953
    2. ')' → logprob: -2.8244645595550537
    3. 'str' → logprob: -4.949464321136475
    4. 's' → logprob: -5.574464321136475
    5. '):
' → logprob: -6.699464321136475
    6. ' str' → logprob: -9.074464797973633
    7. ':str' → logprob: -9.074464797973633
    8. ')s' → logprob: -11.074464797973633
    9. '):

' → logprob: -11.199464797973633
    10. ' s' → logprob: -11.324464797973633

Token 790: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012378494255244732
    2. ')' → logprob: -4.512378692626953
    3. '):
' → logprob: -6.637378692626953
    4. '):

' → logprob: -11.387378692626953
    5. ':' → logprob: -12.512378692626953
    6. ' ):' → logprob: -12.887378692626953
    7. '=None' → logprob: -14.637378692626953
    8. '):
' → logprob: -14.637378692626953
    9. ',' → logprob: -15.512378692626953
    10. '),' → logprob: -15.887378692626953

Token 791: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007147129625082016
    2. ' s' → logprob: -5.257147312164307
    3. 'str' → logprob: -6.632147312164307
    4. ')' → logprob: -7.632147312164307
    5. '(s' → logprob: -9.507146835327148
    6. 'print' → logprob: -11.632146835327148
    7. '   ' → logprob: -11.757146835327148
    8. ')s' → logprob: -11.757146835327148
    9. ' str' → logprob: -12.007146835327148
    10. '):' → logprob: -13.007146835327148

Token 792: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19322636723518372
    2. ')' → logprob: -3.0682263374328613
    3. 'string' → logprob: -3.1932263374328613
    4. 'str' → logprob: -3.3182263374328613
    5. '):' → logprob: -3.6932263374328613
    6. ' s' → logprob: -4.068226337432861
    7. 'print' → logprob: -6.068226337432861
    8. '   ' → logprob: -6.193226337432861
    9. ' string' → logprob: -6.443226337432861
    10. ' )' → logprob: -6.943226337432861

Token 793: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043321382254362106
    2. '):' → logprob: -3.543321371078491
    3. 'print' → logprob: -5.04332160949707
    4. '(s' → logprob: -6.29332160949707
    5. '   ' → logprob: -6.66832160949707
    6. 's' → logprob: -6.66832160949707
    7. ':' → logprob: -7.66832160949707
    8. '):
' → logprob: -7.79332160949707
    9. ',' → logprob: -7.91832160949707
    10. 'end' → logprob: -8.16832160949707

Token 794: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008557165856473148
    2. ' print' → logprob: -7.125855922698975
    3. 'aff' → logprob: -10.625855445861816
    4. ' afficher' → logprob: -11.000855445861816
    5. 'pr' → logprob: -12.375855445861816
    6. 'printer' → logprob: -12.500855445861816
    7. '_print' → logprob: -14.500855445861816
    8. 'prin' → logprob: -14.750855445861816
    9. ')' → logprob: -15.250855445861816
    10. ' aff' → logprob: -16.125856399536133

Token 795: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36016330122947693
    2. ')' → logprob: -1.3601633310317993
    3. '):
' → logprob: -3.1101632118225098
    4. ',' → logprob: -7.23516321182251
    5. '   ' → logprob: -8.485163688659668
    6. ')
' → logprob: -9.360163688659668
    7. '):

' → logprob: -9.610163688659668
    8. '):
' → logprob: -9.610163688659668
    9. ')**' → logprob: -10.110163688659668
    10. '),' → logprob: -11.735163688659668

Token 796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031878530979156494
    2. '):
' → logprob: -3.9068784713745117
    3. '):' → logprob: -4.531878471374512
    4. ')' → logprob: -8.156878471374512
    5. 'print' → logprob: -8.906878471374512
    6. '    
' → logprob: -9.781878471374512
    7. ' print' → logprob: -11.656878471374512
    8. '    ' → logprob: -12.531878471374512
    9. ',' → logprob: -12.906878471374512
    10. '
' → logprob: -13.031878471374512

Token 797: ' """
' (ID: 7037)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0951507091522217
    2. '):' → logprob: -1.2201507091522217
    3. '   ' → logprob: -1.3451507091522217
    4. 'print' → logprob: -2.4701507091522217
    5. ')' → logprob: -4.095150947570801
    6. ' print' → logprob: -4.970150947570801
    7. 'def' → logprob: -7.720150947570801
    8. '    
' → logprob: -7.970150947570801
    9. '```' → logprob: -8.4701509475708
    10. ')
' → logprob: -8.7201509475708

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04874667152762413
    2. 'print' → logprob: -3.0487465858459473
    3. ' print' → logprob: -8.798747062683105
    4. '	print' → logprob: -11.798747062683105
    5. '```' → logprob: -15.048747062683105
    6. 'import' → logprob: -15.673747062683105
    7. '    ' → logprob: -16.04874610900879
    8. '   ' → logprob: -16.67374610900879
    9. '       ' → logprob: -17.04874610900879
    10. '    
' → logprob: -17.67374610900879

Token 799: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. 'import' → logprob: -20.75
    4. '   ' → logprob: -21.75
    5. '	print' → logprob: -22.25
    6. 'sys' → logprob: -23.75
    7. '(print' → logprob: -23.875
    8. '```' → logprob: -24.25
    9. '_print' → logprob: -24.5
    10. 'pr' → logprob: -24.5

Token 800: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.165027217415627e-05
    2. ' print' → logprob: -10.750021934509277
    3. '(print' → logprob: -15.875021934509277
    4. 'sys' → logprob: -18.87502098083496
    5. 'pr' → logprob: -20.00002098083496
    6. '_print' → logprob: -20.12502098083496
    7. '__' → logprob: -21.12502098083496
    8. 'flush' → logprob: -21.87502098083496
    9. '	print' → logprob: -22.12502098083496
    10. '#print' → logprob: -22.12502098083496

Token 801: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0046545229852199554
    2. '(' → logprob: -5.379654407501221
    3. 's' → logprob: -10.879654884338379
    4. '(f' → logprob: -11.504654884338379
    5. ' (' → logprob: -12.754654884338379
    6. '(
' → logprob: -14.254654884338379
    7. '()' → logprob: -14.254654884338379
    8. '((' → logprob: -14.754654884338379
    9. '(end' → logprob: -14.879654884338379
    10. '(...' → logprob: -15.254654884338379

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003673940955195576
    2. ',end' → logprob: -8.000367164611816
    3. ' ,' → logprob: -11.000367164611816
    4. 'flush' → logprob: -11.375367164611816
    5. ',f' → logprob: -13.750367164611816
    6. '(),' → logprob: -13.750367164611816
    7. ' flush' → logprob: -14.250367164611816
    8. ',s' → logprob: -15.250367164611816
    9. '   ' → logprob: -15.375367164611816
    10. ')' → logprob: -15.875367164611816

Token 803: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.0009122979827225208
    2. ' flush' → logprob: -7.000912189483643
    3. 'end' → logprob: -14.1259126663208
    4. '.flush' → logprob: -17.750911712646484
    5. '_flush' → logprob: -18.000911712646484
    6. ' ' → logprob: -18.000911712646484
    7. 'fl' → logprob: -18.750911712646484
    8. '   ' → logprob: -19.500911712646484
    9. 'Flush' → logprob: -19.625911712646484
    10. '  ' → logprob: -20.000911712646484

Token 804: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00020354038861114532
    2. '=' → logprob: -8.500203132629395
    3. '=
' → logprob: -18.50020408630371
    4. '=False' → logprob: -19.12520408630371
    5. 'True' → logprob: -19.25020408630371
    6. '=T' → logprob: -20.75020408630371
    7. '(True' → logprob: -20.87520408630371
    8. ')=' → logprob: -21.62520408630371
    9. '=sys' → logprob: -22.12520408630371
    10. ')' → logprob: -22.50020408630371

Token 805: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -17.375
    4. ')`' → logprob: -18.0
    5. '))' → logprob: -18.25
    6. ')

' → logprob: -19.5
    7. '),' → logprob: -19.875
    8. ');' → logprob: -20.375
    9. ')#' → logprob: -20.375
    10. '   ' → logprob: -20.875

Token 806: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' pe' (ID: 1045)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12581554055213928
    2. 'g' → logprob: -4.000815391540527
    3. 'yes' → logprob: -4.250815391540527
    4. 'p' → logprob: -4.500815391540527
    5. 'debug' → logprob: -4.625815391540527
    6. 'max' → logprob: -5.125815391540527
    7. 'dfs' → logprob: -5.500815391540527
    8. 'range' → logprob: -5.500815391540527
    9. 'ceil' → logprob: -5.625815391540527
    10. 'mp' → logprob: -5.625815391540527

Token 808: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.8223893642425537
    2. 'r' → logprob: -1.1973893642425537
    3. 'p' → logprob: -2.4473893642425537
    4. '()' → logprob: -2.6973893642425537
    5. 'rror' → logprob: -3.9473893642425537
    6. 'f' → logprob: -3.9473893642425537
    7. 'rf' → logprob: -4.072389602661133
    8. '(r' → logprob: -4.697389602661133
    9. '(p' → logprob: -4.697389602661133
    10. 'rr' → logprob: -5.322389602661133

Token 809: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2554143965244293
    2. '):
' → logprob: -1.505414366722107
    3. '(s' → logprob: -6.1304144859313965
    4. ')' → logprob: -6.8804144859313965
    5. '=' → logprob: -9.005414009094238
    6. '=s' → logprob: -9.880414009094238
    7. 's' → logprob: -10.130414009094238
    8. '):
' → logprob: -10.255414009094238
    9. '):

' → logprob: -11.380414009094238
    10. '=None' → logprob: -12.630414009094238

Token 810: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002754472428932786
    2. '(' → logprob: -6.5027546882629395
    3. 's' → logprob: -7.0027546882629395
    4. '(
' → logprob: -8.502754211425781
    5. '   ' → logprob: -9.252754211425781
    6. ')' → logprob: -11.627754211425781
    7. 'def' → logprob: -11.752754211425781
    8. ':' → logprob: -12.377754211425781
    9. '(stderr' → logprob: -12.627754211425781
    10. '#' → logprob: -12.877754211425781

Token 811: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39333903789520264
    2. 'return' → logprob: -1.2683390378952026
    3. '   ' → logprob: -4.018339157104492
    4. '"""
' (adapté à ' """
') → logprob: -4.518339157104492
    5. 'def' → logprob: -5.518339157104492
    6. 's' → logprob: -5.643339157104492
    7. '(s' → logprob: -5.768339157104492
    8. ' return' → logprob: -6.018339157104492
    9. 'raise' → logprob: -7.143339157104492
    10. 'sys' → logprob: -7.893339157104492

Token 812: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0947500467300415
    2. '   ' → logprob: -1.0947500467300415
    3. '"""
' → logprob: -1.8447500467300415
    4. '(s' → logprob: -2.219749927520752
    5. '):
' → logprob: -3.344749927520752
    6. ' s' → logprob: -4.344749927520752
    7. 'r' → logprob: -5.344749927520752
    8. ')' → logprob: -5.969749927520752
    9. ')
' → logprob: -6.219749927520752
    10. '"):
' → logprob: -6.469749927520752

Token 813: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11253974586725235
    2. '"""
' → logprob: -3.112539768218994
    3. 'return' → logprob: -3.237539768218994
    4. 'def' → logprob: -4.237539768218994
    5. 'import' → logprob: -4.987539768218994
    6. 'raise' → logprob: -7.487539768218994
    7. '
' → logprob: -8.237539291381836
    8. 'pass' → logprob: -8.487539291381836
    9. '   ' → logprob: -8.487539291381836
    10. '"""' → logprob: -8.862539291381836

Token 814: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0002205828350270167
    2. 'ich' → logprob: -8.62522029876709
    3. 'ache' → logprob: -11.50022029876709
    4. 'f' → logprob: -11.75022029876709
    5. 'ic' → logprob: -11.87522029876709
    6. 'icher' → logprob: -12.50022029876709
    7. 'print' → logprob: -12.75022029876709
    8. 'che' → logprob: -13.37522029876709
    9. 'ixe' → logprob: -13.50022029876709
    10. 'ichage' → logprob: -13.75022029876709

Token 815: ' une' (ID: 2463)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014227320440113544
    2. 's' → logprob: -4.264227390289307
    3. '(str' → logprob: -10.014226913452148
    4. '(' → logprob: -11.764226913452148
    5. 'e' → logprob: -12.889226913452148
    6. 'str' → logprob: -12.889226913452148
    7. '   ' → logprob: -14.514226913452148
    8. '#' → logprob: -14.514226913452148
    9. '(
' → logprob: -14.514226913452148
    10. 'def' → logprob: -14.639226913452148

Token 816: ' chaîne' (ID: 89288)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06602191925048828
    2. 'rror' → logprob: -3.6910219192504883
    3. 's' → logprob: -3.9410219192504883
    4. 'string' → logprob: -5.066021919250488
    5. 'tring' → logprob: -5.566021919250488
    6. 'n' → logprob: -5.816021919250488
    7. ')' → logprob: -6.691021919250488
    8. 'r' → logprob: -7.191021919250488
    9. 'nd' → logprob: -7.316021919250488
    10. 'ction' → logprob: -7.566021919250488

Token 817: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.012303492054343224
    2. '(' → logprob: -4.512303352355957
    3. 's' → logprob: -7.137303352355957
    4. '(stderr' → logprob: -8.137303352355957
    5. '("")' → logprob: -10.637303352355957
    6. '(
' → logprob: -10.637303352355957
    7. 'e' → logprob: -11.512303352355957
    8. '(f' → logprob: -11.512303352355957
    9. '#' → logprob: -11.512303352355957
    10. '()' → logprob: -11.762303352355957

Token 818: ' sur' (ID: 1512)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0018619995098561049
    2. '(' → logprob: -7.501862049102783
    3. '(f' → logprob: -8.126861572265625
    4. 'end' → logprob: -8.876861572265625
    5. '("")' → logprob: -8.876861572265625
    6. 'r' → logprob: -9.126861572265625
    7. '(stderr' → logprob: -9.126861572265625
    8. '(str' → logprob: -9.376861572265625
    9. '=' → logprob: -9.876861572265625
    10. 'rror' → logprob: -10.251861572265625

Token 819: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16158348321914673
    2. 'la' → logprob: -2.286583423614502
    3. 'l' → logprob: -3.661583423614502
    4. 'stderr' → logprob: -4.286583423614502
    5. '(sys' → logprob: -5.161583423614502
    6. 's' → logprob: -6.786583423614502
    7. 'le' → logprob: -7.661583423614502
    8. '=sys' → logprob: -8.78658390045166
    9. ' sys' → logprob: -9.41158390045166
    10. 'e' → logprob: -9.41158390045166

Token 820: ' sortie' (ID: 52761)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0621761754155159
    2. 'stderr' → logprob: -2.81217622756958
    3. '=sys' → logprob: -9.437175750732422
    4. 'file' → logprob: -9.937175750732422
    5. 'print' → logprob: -11.062175750732422
    6. 'er' → logprob: -11.187175750732422
    7. ' sys' → logprob: -11.187175750732422
    8. 'import' → logprob: -11.437175750732422
    9. 'stdout' → logprob: -11.437175750732422
    10. '(sys' → logprob: -12.937175750732422

Token 821: ' d' (ID: 272)
  Prédit: 'stderr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stderr' → logprob: -0.9320520162582397
    2. 'd' → logprob: -1.4320520162582397
    3. 'standard' → logprob: -1.9320520162582397
    4. 'sys' → logprob: -2.3070521354675293
    5. 's' → logprob: -3.0570521354675293
    6. 'er' → logprob: -3.1820521354675293
    7. '(stderr' → logprob: -3.9320521354675293
    8. '(sys' → logprob: -5.682052135467529
    9. 'e' → logprob: -6.557052135467529
    10. '=sys' → logprob: -6.807052135467529

Token 822: ''er' (ID: 88929)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0491628646850586
    2. ''er' → logprob: -1.5491628646850586
    3. 'e' → logprob: -1.7991628646850586
    4. 'sys' → logprob: -1.9241628646850586
    5. '=sys' → logprob: -3.2991628646850586
    6. 'eux' → logprob: -3.6741628646850586
    7. 'stderr' → logprob: -4.049162864685059
    8. 'es' → logprob: -4.799162864685059
    9. 'une' → logprob: -4.799162864685059
    10. 'ef' → logprob: -5.174162864685059

Token 823: 'reur' (ID: 56784)
  Prédit: 'reur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reur' → logprob: -0.004748387262225151
    2. 'ror' → logprob: -5.754748344421387
    3. 'r' → logprob: -6.504748344421387
    4. 'rror' → logprob: -10.879748344421387
    5. '"' → logprob: -11.254748344421387
    6. 'rr' → logprob: -11.629748344421387
    7. 'er' → logprob: -11.754748344421387
    8. '```' → logprob: -11.754748344421387
    9. 'reurs' → logprob: -12.379748344421387
    10. 'f' → logprob: -13.129748344421387

Token 824: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.14939342439174652
    2. ',' → logprob: -2.149393320083618
    3. '(' → logprob: -4.774393558502197
    4. '()' → logprob: -5.524393558502197
    5. 's' → logprob: -5.774393558502197
    6. '("")' → logprob: -6.149393558502197
    7. '.' → logprob: -6.774393558502197
    8. ')' → logprob: -7.274393558502197
    9. '(sys' → logprob: -7.649393558502197
    10. '(stderr' → logprob: -7.899393558502197

Token 825: 'stderr' (ID: 96670)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7418638467788696
    2. 'stderr' → logprob: -0.8668638467788696
    3. 'sys' → logprob: -2.99186372756958
    4. '):' → logprob: -4.49186372756958
    5. 's' → logprob: -4.49186372756958
    6. '=sys' → logprob: -4.61686372756958
    7. ')
' → logprob: -4.86686372756958
    8. '),' → logprob: -6.11686372756958
    9. ' stderr' → logprob: -6.36686372756958
    10. '):
' → logprob: -6.99186372756958

Token 826: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.607728123664856
    2. ',' → logprob: -1.107728123664856
    3. ')' → logprob: -2.4827280044555664
    4. '):' → logprob: -3.8577280044555664
    5. ')
' → logprob: -3.9827280044555664
    6. '   ' → logprob: -7.107728004455566
    7. '):

' → logprob: -7.982728004455566
    8. '(s' → logprob: -8.357728004455566
    9. '),' → logprob: -9.232728004455566
    10. 's' → logprob: -9.482728004455566

Token 827: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.026768146082758904
    2. 's' → logprob: -4.526768207550049
    3. '   ' → logprob: -4.526768207550049
    4. 'def' → logprob: -5.776768207550049
    5. '):
' → logprob: -7.776768207550049
    6. ')' → logprob: -8.02676773071289
    7. ',' → logprob: -8.27676773071289
    8. '):' → logprob: -8.77676773071289
    9. '(' → logprob: -9.02676773071289
    10. ' (' → logprob: -9.27676773071289

Token 828: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09221218526363373
    2. '   ' → logprob: -2.592212200164795
    3. '(s' → logprob: -5.342212200164795
    4. 'import' → logprob: -5.717212200164795
    5. 's' → logprob: -5.842212200164795
    6. ' def' → logprob: -6.592212200164795
    7. 'return' → logprob: -7.967212200164795
    8. ')' → logprob: -8.967211723327637
    9. '):
' → logprob: -9.092211723327637
    10. 'print' → logprob: -9.592211723327637

Token 829: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28275781869888306
    2. '(s' → logprob: -2.0327577590942383
    3. '):' → logprob: -2.7827577590942383
    4. '):
' → logprob: -3.7827577590942383
    5. ' s' → logprob: -4.657757759094238
    6. ',' → logprob: -4.907757759094238
    7. 's' → logprob: -5.157757759094238
    8. '=s' → logprob: -6.282757759094238
    9. '=' → logprob: -6.407757759094238
    10. ':' → logprob: -6.532757759094238

Token 830: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01374807022511959
    2. '   ' → logprob: -4.5137481689453125
    3. ' s' → logprob: -6.3887481689453125
    4. '(s' → logprob: -7.3887481689453125
    5. '       ' → logprob: -7.8887481689453125
    6. '    ' → logprob: -11.888748168945312
    7. 'msg' → logprob: -12.638748168945312
    8. '           ' → logprob: -13.138748168945312
    9. '):
' → logprob: -13.388748168945312
    10. '	s' → logprob: -13.513748168945312

Token 831: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -4.024604277219623e-05
    2. ' s' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. 'str' → logprob: -19.87504005432129
    5. '
' → logprob: -20.12504005432129
    6. 'msg' → logprob: -20.12504005432129
    7. '(s' → logprob: -20.75004005432129
    8. 'message' → logprob: -21.00004005432129
    9. '	s' → logprob: -21.37504005432129
    10. ')' → logprob: -21.50004005432129

Token 832: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017582019791007042
    2. '):
' → logprob: -4.392581939697266
    3. ':' → logprob: -5.517581939697266
    4. ')' → logprob: -7.517581939697266
    5. ' ):' → logprob: -8.142581939697266
    6. ':str' → logprob: -9.017581939697266
    7. ' :' → logprob: -10.517581939697266
    8. '   ' → logprob: -10.892581939697266
    9. '):
' → logprob: -11.517581939697266
    10. '(s' → logprob: -11.642581939697266

Token 833: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.001026735408231616
    2. '):' → logprob: -7.251026630401611
    3. 's' → logprob: -8.75102710723877
    4. '(str' → logprob: -9.37602710723877
    5. ')' → logprob: -10.00102710723877
    6. ':str' → logprob: -11.00102710723877
    7. '):
' → logprob: -12.12602710723877
    8. ' str' → logprob: -12.37602710723877
    9. '=str' → logprob: -14.00102710723877
    10. '[str' → logprob: -14.62602710723877

Token 834: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2526521384716034
    2. '):
' → logprob: -1.5026521682739258
    3. ')' → logprob: -7.877652168273926
    4. '):
' → logprob: -8.502652168273926
    5. '   ' → logprob: -9.127652168273926
    6. ':' → logprob: -11.002652168273926
    7. ' ):' → logprob: -12.127652168273926
    8. '):

' → logprob: -13.002652168273926
    9. ':str' → logprob: -13.127652168273926
    10. ')**' → logprob: -13.627652168273926

Token 835: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06217338144779205
    2. ' s' → logprob: -3.312173366546631
    3. 'str' → logprob: -4.062173366546631
    4. ' str' → logprob: -5.187173366546631
    5. '   ' → logprob: -6.937173366546631
    6. ')' → logprob: -9.812173843383789
    7. '):' → logprob: -11.437173843383789
    8. ' ' → logprob: -13.312173843383789
    9. '(s' → logprob: -13.562173843383789
    10. '    ' → logprob: -13.687173843383789

Token 836: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08071688562631607
    2. 'string' → logprob: -3.330716848373413
    3. ' str' → logprob: -3.705716848373413
    4. '):' → logprob: -4.955717086791992
    5. 's' → logprob: -5.080717086791992
    6. ' string' → logprob: -6.330717086791992
    7. ':str' → logprob: -7.330717086791992
    8. '   ' → logprob: -7.455717086791992
    9. ')' → logprob: -8.705717086791992
    10. 'tring' → logprob: -8.830717086791992

Token 837: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02673681080341339
    2. ')' → logprob: -4.026736736297607
    3. '   ' → logprob: -5.776736736297607
    4. ':' → logprob: -5.901736736297607
    5. '):
' → logprob: -6.776736736297607
    6. '<|end|>' → logprob: -7.776736736297607
    7. '=None' → logprob: -8.526737213134766
    8. ' ):' → logprob: -8.526737213134766
    9. ',' → logprob: -8.776737213134766
    10. 'print' → logprob: -9.026737213134766

Token 838: ' afficher' (ID: 146524)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5803772211074829
    2. 'print' → logprob: -0.8303772211074829
    3. 'string' → logprob: -5.830377101898193
    4. 'aff' → logprob: -8.205377578735352
    5. 'sys' → logprob: -8.330377578735352
    6. 'stderr' → logprob: -8.455377578735352
    7. 'st' → logprob: -8.830377578735352
    8. 'logger' → logprob: -8.955377578735352
    9. 'printer' → logprob: -9.080377578735352
    10. 'write' → logprob: -9.705377578735352

Token 839: ' sur' (ID: 1512)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40284594893455505
    2. '):
' → logprob: -1.1528459787368774
    3. ')' → logprob: -4.277845859527588
    4. '   ' → logprob: -6.277845859527588
    5. '):
' → logprob: -9.402846336364746
    6. ')**' → logprob: -11.902846336364746
    7. '):

' → logprob: -13.152846336364746
    8. 'print' → logprob: -13.652846336364746
    9. ' ):' → logprob: -14.277846336364746
    10. '    ' → logprob: -14.277846336364746

Token 840: ' stderr' (ID: 65281)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009610046399757266
    2. 'stderr' → logprob: -7.000960826873779
    3. ' sys' → logprob: -10.875961303710938
    4. 's' → logprob: -11.000961303710938
    5. '=sys' → logprob: -11.875961303710938
    6. 'import' → logprob: -12.625961303710938
    7. ')' → logprob: -12.875961303710938
    8. '
' → logprob: -15.125961303710938
    9. '	sys' → logprob: -15.125961303710938
    10. '   ' → logprob: -15.625961303710938

Token 841: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3216836154460907
    2. '):' → logprob: -1.321683645248413
    3. ')' → logprob: -4.821683406829834
    4. '   ' → logprob: -8.321683883666992
    5. '):
' → logprob: -9.571683883666992
    6. ')
' → logprob: -11.946683883666992
    7. ')**' → logprob: -12.196683883666992
    8. '):

' → logprob: -12.446683883666992
    9. '"):
' → logprob: -13.446683883666992
    10. ' ):
' → logprob: -14.321683883666992

Token 842: '   ' (ID: 271)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03801348805427551
    2. '   ' → logprob: -3.663013458251953
    3. '):' → logprob: -4.663013458251953
    4. ')' → logprob: -6.163013458251953
    5. '"""
' → logprob: -10.413013458251953
    6. '):
' → logprob: -11.163013458251953
    7. ')
' → logprob: -11.413013458251953
    8. '(s' → logprob: -11.413013458251953
    9. 'def' → logprob: -11.913013458251953
    10. '"):
' → logprob: -11.913013458251953

Token 843: ' """
' (ID: 7037)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07461641728878021
    2. '):' → logprob: -3.3246164321899414
    3. '"""
' (adapté à ' """
') → logprob: -4.199616432189941
    4. ')' → logprob: -4.449616432189941
    5. '   ' → logprob: -5.074616432189941
    6. '"):
' → logprob: -6.199616432189941
    7. '"""' → logprob: -8.324616432189941
    8. ''):
' → logprob: -9.074616432189941
    9. '")' → logprob: -9.574616432189941
    10. 'def' → logprob: -9.699616432189941

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02963557466864586
    2. 'sys' → logprob: -4.529635429382324
    3. 'print' → logprob: -4.779635429382324
    4. 'import' → logprob: -4.779635429382324
    5. 'return' → logprob: -7.404635429382324
    6. 'def' → logprob: -7.529635429382324
    7. ' sys' → logprob: -9.029635429382324
    8. '```' → logprob: -9.154635429382324
    9. ')' → logprob: -9.654635429382324
    10. '=sys' → logprob: -10.029635429382324

Token 845: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001441780710592866
    2. 'sys' → logprob: -6.751441955566406
    3. 'return' (adapté à ' return') → logprob: -8.251441955566406
    4. 'import' → logprob: -11.626441955566406
    5. 'def' → logprob: -14.501441955566406
    6. 'e' → logprob: -14.501441955566406
    7. ' print' → logprob: -14.876441955566406
    8. 'fprintf' → logprob: -16.001441955566406
    9. 'file' → logprob: -16.126441955566406
    10. ' sys' → logprob: -18.251441955566406

Token 846: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. ' print' → logprob: -12.250005722045898
    3. 'sys' → logprob: -14.625005722045898
    4. 'file' → logprob: -18.6250057220459
    5. 'fprintf' → logprob: -21.6250057220459
    6. 'e' → logprob: -21.7500057220459
    7. '__' → logprob: -22.2500057220459
    8. '(print' → logprob: -22.3750057220459
    9. ' sys' → logprob: -22.5000057220459
    10. 'pr' → logprob: -22.7500057220459

Token 847: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00018220659694634378
    2. '(' → logprob: -8.625182151794434
    3. '(f' → logprob: -13.250182151794434
    4. 's' → logprob: -14.875182151794434
    5. '(
' → logprob: -15.875182151794434
    6. ' (' → logprob: -16.12518310546875
    7. '(...' → logprob: -16.25018310546875
    8. '((' → logprob: -17.75018310546875
    9. '(stderr' → logprob: -17.87518310546875
    10. '(string' → logprob: -18.00018310546875

Token 848: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.246537173457909e-06
    2. 's' → logprob: -12.625003814697266
    3. '(' → logprob: -14.000003814697266
    4. ' (' → logprob: -17.750003814697266
    5. ')' → logprob: -18.375003814697266
    6. '(
' → logprob: -19.500003814697266
    7. '```' → logprob: -20.250003814697266
    8. ')s' → logprob: -20.750003814697266
    9. 'a' → logprob: -20.875003814697266
    10. '[s' → logprob: -21.000003814697266

Token 849: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12864965200424194
    2. '),' → logprob: -2.1286497116088867
    3. ',file' → logprob: -6.753649711608887
    4. '(),' → logprob: -7.878649711608887
    5. ')' → logprob: -9.878649711608887
    6. ',s' → logprob: -10.128649711608887
    7. ' ,' → logprob: -10.628649711608887
    8. '=sys' → logprob: -10.753649711608887
    9. ',end' → logprob: -11.378649711608887
    10. '},' → logprob: -12.628649711608887

Token 850: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -9.639096970204264e-05
    2. ' file' → logprob: -9.500096321105957
    3. 'flush' → logprob: -10.750096321105957
    4. ' flush' → logprob: -16.875097274780273
    5. 'fil' → logprob: -20.500097274780273
    6. 'end' → logprob: -21.750097274780273
    7. '	file' → logprob: -22.125097274780273
    8. 'File' → logprob: -22.625097274780273
    9. ' ' → logprob: -22.750097274780273
    10. 'sys' → logprob: -22.875097274780273

Token 851: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -4.320199877838604e-07
    2. 'sys' → logprob: -15.125
    3. '=' → logprob: -16.375
    4. '=subprocess' → logprob: -17.25
    5. '=file' → logprob: -18.5
    6. '(sys' → logprob: -18.875
    7. ' =' → logprob: -19.125
    8. ' sys' → logprob: -20.125
    9. '	sys' → logprob: -20.5
    10. '=os' → logprob: -21.625

Token 852: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -7.076218025758862e-05
    2. '=sys' → logprob: -10.250070571899414
    3. 'stderr' → logprob: -10.750070571899414
    4. '.stdout' → logprob: -12.125070571899414
    5. '.' → logprob: -12.500070571899414
    6. '(stderr' → logprob: -13.000070571899414
    7. '.__' → logprob: -13.750070571899414
    8. '.stdin' → logprob: -14.750070571899414
    9. '.sys' → logprob: -15.375070571899414
    10. ' stderr' → logprob: -15.750070571899414

Token 853: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. ',' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.875032424926758
    4. '))' → logprob: -15.250032424926758
    5. '),' → logprob: -16.000032424926758
    6. '())' → logprob: -16.625032424926758
    7. ',)' → logprob: -16.875032424926758
    8. ')`' → logprob: -17.125032424926758
    9. '   ' → logprob: -17.250032424926758
    10. '<|end|>' → logprob: -17.250032424926758

Token 854: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37250879406929016
    2. 'def' → logprob: -1.2475087642669678
    3. '<|end|>' → logprob: -4.372509002685547
    4. 'class' → logprob: -5.497509002685547
    5. 'if' → logprob: -5.747509002685547
    6. '<|end|>' → logprob: -6.372509002685547
    7. 'import' → logprob: -7.622509002685547
    8. '@' → logprob: -7.872509002685547
    9. '
' → logprob: -8.622509002685547
    10. 'pass' → logprob: -8.747509002685547

Token 855: ' JA' (ID: 84944)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8600718379020691
    2. 'd' → logprob: -1.4850718975067139
    3. 'dbg' → logprob: -1.9850718975067139
    4. 'debug' → logprob: -2.610071897506714
    5. 'max' → logprob: -3.110071897506714
    6. 'exit' → logprob: -3.985071897506714
    7. 'g' → logprob: -4.235071659088135
    8. 'dp' → logprob: -4.735071659088135
    9. 'yes' → logprob: -5.110071659088135
    10. 'is' → logprob: -5.485071659088135

Token 856: '(a' (ID: 6271)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.1713809967041016
    2. 'C' → logprob: -1.4213809967041016
    3. 'N' → logprob: -1.5463809967041016
    4. 'CK' → logprob: -2.0463809967041016
    5. 'W' → logprob: -3.5463809967041016
    6. 'V' → logprob: -4.296380996704102
    7. '()' → logprob: -4.296380996704102
    8. 'K' → logprob: -5.046380996704102
    9. '():' → logprob: -6.171380996704102
    10. 'R' → logprob: -6.233880996704102

Token 857: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5766171813011169
    2. '):
' → logprob: -1.7016172409057617
    3. 'rr' → logprob: -1.8266172409057617
    4. ',' → logprob: -3.2016172409057617
    5. 'RR' → logprob: -4.326617240905762
    6. '[' → logprob: -4.451617240905762
    7. 'rray' → logprob: -4.826617240905762
    8. ')' → logprob: -5.701617240905762
    9. 'r' → logprob: -5.701617240905762
    10. 'rg' → logprob: -6.076617240905762

Token 858: ' sep' (ID: 31529)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01877826265990734
    2. ' b' → logprob: -5.268778324127197
    3. 'sep' → logprob: -5.393778324127197
    4. 'n' → logprob: -5.893778324127197
    5. 'l' → logprob: -6.143778324127197
    6. 'k' → logprob: -7.143778324127197
    7. 'lst' → logprob: -7.768778324127197
    8. '*' → logprob: -7.893778324127197
    9. 's' → logprob: -7.893778324127197
    10. 'x' → logprob: -8.143777847290039

Token 859: '):
' (ID: 1883)
  Prédit: '=','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=',' → logprob: -0.5797014236450195
    2. '='' → logprob: -1.5797014236450195
    3. '=",' → logprob: -1.5797014236450195
    4. '=' → logprob: -4.0797014236450195
    5. '=None' → logprob: -5.0797014236450195
    6. '="' → logprob: -5.5797014236450195
    7. '='.' → logprob: -8.32970142364502
    8. '='_' → logprob: -8.57970142364502
    9. '='\' → logprob: -8.70470142364502
    10. '=".' → logprob: -9.70470142364502

Token 860: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.17107874155044556
    2. '(*' → logprob: -3.296078681945801
    3. ':' → logprob: -3.796078681945801
    4. '():' → logprob: -3.796078681945801
    5. '):' → logprob: -4.171078681945801
    6. '(se' → logprob: -4.796078681945801
    7. '(s' → logprob: -4.796078681945801
    8. '(separator' → logprob: -4.796078681945801
    9. '   ' → logprob: -4.921078681945801
    10. 'return' → logprob: -5.296078681945801

Token 861: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05946623533964157
    2. 'a' → logprob: -3.8094661235809326
    3. '(a' → logprob: -4.434466361999512
    4. 'join' → logprob: -4.934466361999512
    5. 'print' → logprob: -5.309466361999512
    6. '   ' → logprob: -5.934466361999512
    7. 'sep' → logprob: -6.059466361999512
    8. ' return' → logprob: -6.434466361999512
    9. '(' → logprob: -6.934466361999512
    10. '.join' → logprob: -7.434466361999512

Token 862: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011615118943154812
    2. ' return' → logprob: -4.76161527633667
    3. '   ' → logprob: -6.51161527633667
    4. ''' → logprob: -7.76161527633667
    5. '"""
' → logprob: -8.136614799499512
    6. '"' → logprob: -8.261614799499512
    7. 'def' → logprob: -8.886614799499512
    8. 'join' → logprob: -9.511614799499512
    9. '"""' → logprob: -9.761614799499512
    10. ''''
' → logprob: -10.011614799499512

Token 863: ' Convert' (ID: 15629)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.019026024267077446
    2. ' return' → logprob: -4.019025802612305
    3. 'print' → logprob: -7.769025802612305
    4. '   ' → logprob: -7.894025802612305
    5. '"""
' → logprob: -10.269025802612305
    6. 'def' → logprob: -10.769025802612305
    7. '"""' → logprob: -10.894025802612305
    8. 'join' → logprob: -12.644025802612305
    9. '	return' → logprob: -14.019025802612305
    10. ' print' → logprob: -14.894025802612305

Token 864: 'it' (ID: 278)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09647081047296524
    2. 's' → logprob: -2.846470832824707
    3. 'a' → logprob: -4.596470832824707
    4. 'e' → logprob: -4.971470832824707
    5. '(' → logprob: -5.346470832824707
    6. ' a' → logprob: -6.096470832824707
    7. 'list' → logprob: -6.221470832824707
    8. '(str' → logprob: -6.846470832824707
    9. '(e' → logprob: -7.346470832824707
    10. 'es' → logprob: -7.471470832824707

Token 865: ' tous' (ID: 10688)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06166253238916397
    2. '(a' → logprob: -2.936662435531616
    3. 'list' → logprob: -5.936662673950195
    4. ' a' → logprob: -6.811662673950195
    5. ''a' → logprob: -6.936662673950195
    6. '[a' → logprob: -7.686662673950195
    7. ''' → logprob: -7.811662673950195
    8. 'str' → logprob: -8.186662673950195
    9. '(list' → logprob: -8.561662673950195
    10. '''.' → logprob: -9.061662673950195

Token 866: ' les' (ID: 1341)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4111118018627167
    2. '(elem' → logprob: -1.786111831665039
    3. '(x' → logprob: -2.411111831665039
    4. '(e' → logprob: -3.286111831665039
    5. '(element' → logprob: -3.911111831665039
    6. '(el' → logprob: -5.161111831665039
    7. '(str' → logprob: -5.661111831665039
    8. '(ele' → logprob: -5.661111831665039
    9. 'elem' → logprob: -6.536111831665039
    10. '(item' → logprob: -6.536111831665039

Token 867: ' éléments' (ID: 57375)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12789814174175262
    2. 'a' → logprob: -2.5028982162475586
    3. 'map' → logprob: -3.5028982162475586
    4. 'x' → logprob: -5.752898216247559
    5. 'elem' → logprob: -5.752898216247559
    6. '(str' → logprob: -7.127898216247559
    7. 'element' → logprob: -7.752898216247559
    8. '(a' → logprob: -9.252898216247559
    9. '(map' → logprob: -9.377898216247559
    10. ' str' → logprob: -9.502898216247559

Token 868: ' d' (ID: 272)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015395039226859808
    2. '(' → logprob: -6.876539707183838
    3. 'a' → logprob: -8.00153923034668
    4. '(list' → logprob: -9.50153923034668
    5. ' (' → logprob: -10.37653923034668
    6. 'to' → logprob: -11.37653923034668
    7. '(
' → logprob: -11.75153923034668
    8. '(iter' → logprob: -11.75153923034668
    9. '(str' → logprob: -11.87653923034668
    10. '(map' → logprob: -12.12653923034668

Token 869: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0010119688231498003
    2. '(a' → logprob: -7.501011848449707
    3. 'list' → logprob: -8.876011848449707
    4. ' a' → logprob: -8.876011848449707
    5. 'str' → logprob: -9.376011848449707
    6. '[a' → logprob: -9.751011848449707
    7. 'map' → logprob: -10.501011848449707
    8. '(str' → logprob: -12.751011848449707
    9. '(list' → logprob: -13.751011848449707
    10. '(map' → logprob: -14.126011848449707

Token 870: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0186441820114851
    2. 'map' → logprob: -4.393644332885742
    3. 'str' → logprob: -5.643644332885742
    4. 'list' → logprob: -6.268644332885742
    5. ' a' → logprob: -7.643644332885742
    6. ' map' → logprob: -9.768644332885742
    7. '(a' → logprob: -10.268644332885742
    8. '[a' → logprob: -10.518644332885742
    9. '(str' → logprob: -10.893644332885742
    10. ' str' → logprob: -11.268644332885742

Token 871: ' en' (ID: 469)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010344297625124454
    2. 'a' → logprob: -4.760344505310059
    3. '(' → logprob: -6.635344505310059
    4. 'to' → logprob: -8.760344505310059
    5. 'into' → logprob: -10.135344505310059
    6. '[a' → logprob: -10.385344505310059
    7. ',' → logprob: -10.635344505310059
    8. '_a' → logprob: -11.010344505310059
    9. ' into' → logprob: -11.135344505310059
    10. '(
' → logprob: -11.260344505310059

Token 872: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.596781946020201e-05
    2. 'string' → logprob: -10.875045776367188
    3. ' str' → logprob: -11.000045776367188
    4. 'strings' → logprob: -11.750045776367188
    5. '[str' → logprob: -13.625045776367188
    6. '(str' → logprob: -14.125045776367188
    7. 'chaine' → logprob: -15.500045776367188
    8. 'a' → logprob: -15.750045776367188
    9. '_str' → logprob: -17.375045776367188
    10. 'stri' → logprob: -17.375045776367188

Token 873: ' de' (ID: 334)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011576583608984947
    2. 'a' → logprob: -5.3865766525268555
    3. '   ' → logprob: -5.8865766525268555
    4. '(' → logprob: -6.1365766525268555
    5. '(map' → logprob: -7.8865766525268555
    6. ')' → logprob: -8.136576652526855
    7. '(str' → logprob: -8.261576652526855
    8. 'str' → logprob: -9.136576652526855
    9. '```' → logprob: -9.136576652526855
    10. '(
' → logprob: -9.261576652526855

Token 874: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1292841136455536
    2. 'str' → logprob: -2.129284143447876
    3. ' caractères' → logprob: -6.254283905029297
    4. 'chars' → logprob: -8.504283905029297
    5. 'char' → logprob: -9.379283905029297
    6. 'chaine' → logprob: -9.879283905029297
    7. 'string' → logprob: -10.254283905029297
    8. 'characters' → logprob: -11.754283905029297
    9. '```' → logprob: -11.754283905029297
    10. 'a' → logprob: -11.879283905029297

Token 875: ' et' (ID: 859)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014981773681938648
    2. '(' → logprob: -4.889981746673584
    3. 'a' → logprob: -6.139981746673584
    4. ',' → logprob: -6.139981746673584
    5. ')' → logprob: -6.639981746673584
    6. '   ' → logprob: -7.639981746673584
    7. '(
' → logprob: -7.889981746673584
    8. '([' → logprob: -9.014982223510742
    9. '[a' → logprob: -9.139982223510742
    10. ',a' → logprob: -9.389982223510742

Token 876: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27589067816734314
    2. 'sep' → logprob: -1.9008907079696655
    3. ' return' → logprob: -2.900890588760376
    4. 'print' → logprob: -3.525890588760376
    5. 'join' → logprob: -5.650890827178955
    6. ' sep' → logprob: -6.150890827178955
    7. 'joined' → logprob: -7.525890827178955
    8. ')' → logprob: -7.525890827178955
    9. 'separator' → logprob: -8.775890350341797
    10. ' print' → logprob: -8.900890350341797

Token 877: ' joint' (ID: 14585)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.21823254227638245
    2. '.join' → logprob: -1.71823251247406
    3. 'print' → logprob: -4.59323263168335
    4. 'joined' → logprob: -5.59323263168335
    5. 'return' → logprob: -6.46823263168335
    6. ' join' → logprob: -7.96823263168335
    7. '_join' → logprob: -8.343232154846191
    8. 'sep' → logprob: -8.468232154846191
    9. 'str' → logprob: -9.593232154846191
    10. ' joined' → logprob: -9.718232154846191

Token 878: ' avec' (ID: 3937)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0035900946240872145
    2. 'sep' → logprob: -5.878590106964111
    3. 'with' → logprob: -7.878590106964111
    4. 'se' → logprob: -8.753589630126953
    5. '(separator' → logprob: -9.128589630126953
    6. '(' → logprob: -9.628589630126953
    7. 'by' → logprob: -10.128589630126953
    8. 'avec' → logprob: -12.003589630126953
    9. ' sep' → logprob: -12.378589630126953
    10. '(join' → logprob: -12.378589630126953

Token 879: ' un' (ID: 537)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -1.4736459888808895e-05
    2. ' sep' → logprob: -12.250014305114746
    3. 'se' → logprob: -12.500014305114746
    4. '(se' → logprob: -12.625014305114746
    5. 'separator' → logprob: -13.000014305114746
    6. 'str' → logprob: -14.500014305114746
    7. 'sept' → logprob: -16.000015258789062
    8. '_sep' → logprob: -17.375015258789062
    9. '.sep' → logprob: -18.750015258789062
    10. '(separator' → logprob: -18.750015258789062

Token 880: ' sépar' (ID: 97160)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -4.4418171455617994e-05
    2. 'separator' → logprob: -10.250044822692871
    3. ' sep' → logprob: -12.125044822692871
    4. 'se' → logprob: -13.250044822692871
    5. 'str' → logprob: -13.500044822692871
    6. 'sept' → logprob: -15.250044822692871
    7. '(se' → logprob: -17.000043869018555
    8. 's' → logprob: -17.375043869018555
    9. '_sep' → logprob: -17.750043869018555
    10. 'SEP' → logprob: -18.625043869018555

Token 881: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.021957872435450554
    2. 'ar' → logprob: -4.396957874298096
    3. 'ator' → logprob: -5.021957874298096
    4. 'eur' → logprob: -6.646957874298096
    5. '"' → logprob: -7.896957874298096
    6. 'a' → logprob: -8.021957397460938
    7. 'ate' → logprob: -8.146957397460938
    8. '```' → logprob: -8.896957397460938
    9. 'acteur' → logprob: -9.646957397460938
    10. '"""' → logprob: -9.771957397460938

Token 882: ' donné' (ID: 52079)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.4545223116874695
    2. '(se' → logprob: -1.2045223712921143
    3. '=' → logprob: -2.8295223712921143
    4. 'se' → logprob: -5.704522132873535
    5. '(separator' → logprob: -6.079522132873535
    6. '(' → logprob: -7.954522132873535
    7. 'separator' → logprob: -8.329522132873535
    8. ' sep' → logprob: -9.954522132873535
    9. '.sep' → logprob: -10.579522132873535
    10. 'sept' → logprob: -10.829522132873535

Token 883: '.
' (ID: 558)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0002100965939462185
    2. 'sep' → logprob: -9.25020980834961
    3. '(' → logprob: -9.62520980834961
    4. '(separator' → logprob: -10.87520980834961
    5. 'se' → logprob: -11.12520980834961
    6. ')' → logprob: -12.12520980834961
    7. ',' → logprob: -12.75020980834961
    8. '(
' → logprob: -13.50020980834961
    9. '   ' → logprob: -13.87520980834961
    10. ' (' → logprob: -13.87520980834961

Token 884: '   ' (ID: 271)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.8065135478973389
    2. 'def' → logprob: -1.3065135478973389
    3. '   ' → logprob: -2.806513547897339
    4. '(s' → logprob: -2.806513547897339
    5. '(separator' → logprob: -2.931513547897339
    6. '(' → logprob: -3.556513547897339
    7. 'sep' → logprob: -4.181513786315918
    8. 'return' → logprob: -4.681513786315918
    9. '(a' → logprob: -4.806513786315918
    10. '(str' → logprob: -5.056513786315918

Token 885: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8468971848487854
    2. '   ' → logprob: -0.9718971848487854
    3. 'return' → logprob: -2.3468971252441406
    4. ' return' → logprob: -2.7218971252441406
    5. ')' → logprob: -3.5968971252441406
    6. 's' → logprob: -6.971897125244141
    7. ' def' → logprob: -7.096897125244141
    8. 'sep' → logprob: -7.471897125244141
    9. ' )' → logprob: -8.47189712524414
    10. '    ' → logprob: -8.72189712524414

Token 886: ':
' (ID: 734)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4498133957386017
    2. '   ' → logprob: -1.8248133659362793
    3. '=' → logprob: -2.0748133659362793
    4. ' (' → logprob: -3.1998133659362793
    5. ',' → logprob: -3.8248133659362793
    6. ' =' → logprob: -5.699813365936279
    7. '(s' → logprob: -6.324813365936279
    8. '(' → logprob: -6.324813365936279
    9. '(list' → logprob: -6.699813365936279
    10. ')' → logprob: -7.324813365936279

Token 887: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009808271192014217
    2. ' a' → logprob: -4.88480806350708
    3. '   ' → logprob: -7.25980806350708
    4. 's' → logprob: -7.63480806350708
    5. 'list' → logprob: -8.134808540344238
    6. 'lst' → logprob: -8.134808540344238
    7. '(a' → logprob: -8.884808540344238
    8. ' lst' → logprob: -9.509808540344238
    9. 'l' → logprob: -10.009808540344238
    10. ' list' → logprob: -10.384808540344238

Token 888: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0016491144197061658
    2. 'lst' → logprob: -7.001648902893066
    3. ' a' → logprob: -7.626648902893066
    4. 'l' → logprob: -8.501648902893066
    5. 'list' → logprob: -10.626648902893066
    6. ' lst' → logprob: -11.376648902893066
    7. 'sep' → logprob: -12.126648902893066
    8. 'arr' → logprob: -13.626648902893066
    9. ' l' → logprob: -13.626648902893066
    10. 'ls' → logprob: -13.751648902893066

Token 889: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012772731482982635
    2. ')' → logprob: -5.262772560119629
    3. ' (' → logprob: -5.762772560119629
    4. ' ,' → logprob: -6.387772560119629
    5. '):' → logprob: -6.637772560119629
    6. '):
' → logprob: -8.512772560119629
    7. ':' → logprob: -8.512772560119629
    8. '=' → logprob: -8.762772560119629
    9. ' :' → logprob: -9.387772560119629
    10. '(list' → logprob: -9.387772560119629

Token 890: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.431207682704553e-05
    2. 'str' → logprob: -10.875054359436035
    3. ' list' → logprob: -11.125054359436035
    4. ')' → logprob: -11.375054359436035
    5. '(list' → logprob: -12.625054359436035
    6. 'a' → logprob: -12.875054359436035
    7. ',' → logprob: -13.875054359436035
    8. 'iter' → logprob: -14.125054359436035
    9. '[list' → logprob: -14.625054359436035
    10. '=list' → logprob: -15.125054359436035

Token 891: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6130067110061646
    2. ',' → logprob: -1.1130067110061646
    3. ')' → logprob: -2.238006591796875
    4. '):
' → logprob: -3.863006591796875
    5. '   ' → logprob: -7.113006591796875
    6. '),' → logprob: -7.738006591796875
    7. '[str' → logprob: -7.988006591796875
    8. '[int' → logprob: -8.738006591796875
    9. ',
' → logprob: -9.988006591796875
    10. ')
' → logprob: -10.363006591796875

Token 892: ' Liste' (ID: 61030)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.022124623879790306
    2. 'a' → logprob: -3.8971245288848877
    3. ' list' → logprob: -6.647124767303467
    4. '[list' → logprob: -9.147124290466309
    5. 'str' → logprob: -9.522124290466309
    6. '[]' → logprob: -10.522124290466309
    7. '<|end|>' → logprob: -10.647124290466309
    8. '[str' → logprob: -11.897124290466309
    9. 'sequence' → logprob: -11.897124290466309
    10. '[a' → logprob: -11.897124290466309

Token 893: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 894: ''' (ID: 6)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5610799193382263
    2. '[str' → logprob: -1.811079978942871
    3. 'a' → logprob: -2.311079978942871
    4. 'elements' → logprob: -2.436079978942871
    5. 'objects' → logprob: -3.686079978942871
    6. 'items' → logprob: -4.436079978942871
    7. 'tokens' → logprob: -4.561079978942871
    8. 'élé' → logprob: -4.936079978942871
    9. 'strings' → logprob: -5.186079978942871
    10. '(str' → logprob: -5.311079978942871

Token 895: 'élé' (ID: 15228)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.22223766148090363
    2. 'élé' → logprob: -2.0972375869750977
    3. 'obj' → logprob: -2.7222375869750977
    4. 'objects' → logprob: -4.722237586975098
    5. 'elements' → logprob: -7.472237586975098
    6. '[str' → logprob: -7.472237586975098
    7. 'strings' → logprob: -8.222237586975098
    8. 'items' → logprob: -8.972237586975098
    9. 'object' → logprob: -9.597237586975098
    10. 'objs' → logprob: -9.722237586975098

Token 896: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.4997369945049286
    2. 'ements' → logprob: -1.124737024307251
    3. 'ment' → logprob: -3.499737024307251
    4. 'lements' → logprob: -4.749736785888672
    5. 'lems' → logprob: -4.874736785888672
    6. 'lé' → logprob: -5.124736785888672
    7. 'ement' → logprob: -5.499736785888672
    8. 'le' → logprob: -5.749736785888672
    9. 'str' → logprob: -5.999736785888672
    10. 'éments' → logprob: -6.249736785888672

Token 897: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8652312755584717
    2. ',' → logprob: -0.9902312755584717
    3. '<|end|>' → logprob: -1.8652312755584717
    4. '   ' → logprob: -3.9902312755584717
    5. ',
' → logprob: -4.490231513977051
    6. 'a' → logprob: -5.365231513977051
    7. '
' → logprob: -5.365231513977051
    8. '),' → logprob: -5.615231513977051
    9. '<|end|>' → logprob: -6.365231513977051
    10. '```' → logprob: -7.615231513977051

Token 898: ' joindre' (ID: 194638)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00122844276484102
    2. ' str' → logprob: -6.751228332519531
    3. ' convertir' → logprob: -10.876228332519531
    4. 'a' → logprob: -11.001228332519531
    5. 'convert' → logprob: -12.001228332519531
    6. '[str' → logprob: -12.626228332519531
    7. 'string' → logprob: -12.626228332519531
    8. '   ' → logprob: -12.876228332519531
    9. '```' → logprob: -13.501228332519531
    10. 'repr' → logprob: -14.001228332519531

Token 899: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5052657127380371
    2. ')' → logprob: -1.005265712738037
    3. ',
' → logprob: -4.005265712738037
    4. 'a' → logprob: -5.380265712738037
    5. '   ' → logprob: -5.630265712738037
    6. 'str' → logprob: -6.630265712738037
    7. '(str' → logprob: -6.755265712738037
    8. ')
' → logprob: -7.380265712738037
    9. '[str' → logprob: -7.880265712738037
    10. '),' → logprob: -9.505266189575195

Token 900: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016124693676829338
    2. ',' → logprob: -4.391124725341797
    3. 'def' → logprob: -6.641124725341797
    4. 'sep' → logprob: -7.266124725341797
    5. 'str' → logprob: -7.891124725341797
    6. 'separator' → logprob: -8.266124725341797
    7. ')' → logprob: -8.516124725341797
    8. '       ' → logprob: -8.766124725341797
    9. '
' → logprob: -9.016124725341797
    10. 'return' → logprob: -9.141124725341797

Token 901: ' sep' (ID: 31529)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0415077805519104
    2. 'sep' (adapté à ' sep') → logprob: -3.2915077209472656
    3. ' str' → logprob: -6.166507720947266
    4. 'separator' → logprob: -7.291507720947266
    5. '   ' → logprob: -8.291507720947266
    6. 's' → logprob: -8.541507720947266
    7. '       ' → logprob: -8.666507720947266
    8. 'se' → logprob: -10.666507720947266
    9. ' sep' → logprob: -10.791507720947266
    10. '        
' → logprob: -12.666507720947266

Token 902: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8654352426528931
    2. ')' → logprob: -1.240435242652893
    3. '=' → logprob: -1.740435242652893
    4. '):' → logprob: -2.4904351234436035
    5. '   ' → logprob: -4.2404351234436035
    6. ',' → logprob: -5.3654351234436035
    7. '=None' → logprob: -6.2404351234436035
    8. '=str' → logprob: -6.2404351234436035
    9. '='' → logprob: -6.7404351234436035
    10. 's' → logprob: -6.8654351234436035

Token 903: 'str' (ID: 689)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.042938560247421265
    2. ')' → logprob: -3.667938470840454
    3. '"' → logprob: -4.542938709259033
    4. 'str' → logprob: -5.167938709259033
    5. ''s' → logprob: -9.917938232421875
    6. ' '' → logprob: -10.167938232421875
    7. '')' → logprob: -10.417938232421875
    8. ''a' → logprob: -11.917938232421875
    9. '''' → logprob: -12.042938232421875
    10. ' str' → logprob: -12.167938232421875

Token 904: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25258490443229675
    2. '):' → logprob: -1.6275849342346191
    3. '):
' → logprob: -3.627584934234619
    4. '=' → logprob: -9.627584457397461
    5. ')=' → logprob: -10.252584457397461
    6. '):

' → logprob: -10.502584457397461
    7. ')**' → logprob: -10.502584457397461
    8. '   ' → logprob: -10.877584457397461
    9. ')
' → logprob: -11.502584457397461
    10. '=None' → logprob: -12.127584457397461

Token 905: ' Sé' (ID: 53058)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0022339976858347654
    2. 'separator' → logprob: -6.627233982086182
    3. ''' → logprob: -8.50223445892334
    4. 'se' → logprob: -8.50223445892334
    5. ' sep' → logprob: -8.75223445892334
    6. ')' → logprob: -9.00223445892334
    7. '"' → logprob: -9.75223445892334
    8. 'str' → logprob: -10.00223445892334
    9. '<|end|>' → logprob: -10.00223445892334
    10. '_sep' → logprob: -10.25223445892334

Token 906: 'par' (ID: 796)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009106707759201527
    2. 'parator' → logprob: -4.759106636047363
    3. 'par' → logprob: -8.134106636047363
    4. 'pa' → logprob: -9.009106636047363
    5. 'perator' → logprob: -10.509106636047363
    6. 'PARATOR' → logprob: -10.634106636047363
    7. ''p' → logprob: -11.384106636047363
    8. ''' → logprob: -12.759106636047363
    9. '"' → logprob: -13.009106636047363
    10. 'pard' → logprob: -13.134106636047363

Token 907: 'ateur' (ID: 12477)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013131992891430855
    2. 'par' → logprob: -4.388132095336914
    3. 'parator' → logprob: -7.888132095336914
    4. 'ateur' → logprob: -10.013132095336914
    5. 'r' → logprob: -10.138132095336914
    6. 'ar' → logprob: -10.138132095336914
    7. 'pa' → logprob: -10.263132095336914
    8. 'a' → logprob: -10.763132095336914
    9. '"' → logprob: -11.263132095336914
    10. 'PARATOR' → logprob: -11.388132095336914

Token 908: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007384424563497305
    2. '=' → logprob: -5.757384300231934
    3. '<|end|>' → logprob: -6.007384300231934
    4. '):' → logprob: -7.132384300231934
    5. '='' → logprob: -8.007384300231934
    6. '.join' → logprob: -8.257384300231934
    7. ' =' → logprob: -9.632384300231934
    8. '):
' → logprob: -9.882384300231934
    9. '<|end|>' → logprob: -10.132384300231934
    10. '=''' → logprob: -10.632384300231934

Token 909: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16319571435451508
    2. '.join' → logprob: -1.9131957292556763
    3. '=' → logprob: -6.663195610046387
    4. '.' → logprob: -6.788195610046387
    5. 'join' → logprob: -7.788195610046387
    6. ').' → logprob: -9.538195610046387
    7. '='' → logprob: -11.038195610046387
    8. '   ' → logprob: -11.788195610046387
    9. ')
' → logprob: -11.913195610046387
    10. '),' → logprob: -12.413195610046387

Token 910: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05889434739947319
    2. '):
' → logprob: -3.683894395828247
    3. 'return' → logprob: -3.933894395828247
    4. ')' → logprob: -4.808894157409668
    5. ')
' → logprob: -5.933894157409668
    6. '"""
' → logprob: -7.308894157409668
    7. '):' → logprob: -7.558894157409668
    8. 'def' → logprob: -8.683894157409668
    9. '")' → logprob: -8.933894157409668
    10. ' return' → logprob: -9.433894157409668

Token 911: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1786816418170929
    2. 'return' → logprob: -2.5536816120147705
    3. ')' → logprob: -3.5536816120147705
    4. '):
' → logprob: -3.8036816120147705
    5. '"""
' → logprob: -3.9286816120147705
    6. ')
' → logprob: -4.80368185043335
    7. 'def' → logprob: -5.67868185043335
    8. ' return' → logprob: -6.17868185043335
    9. '):' → logprob: -6.92868185043335
    10. '"""' → logprob: -7.67868185043335

Token 912: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04021841660141945
    2. ' =' → logprob: -3.4152183532714844
    3. ' return' → logprob: -6.040218353271484
    4. '=' → logprob: -6.290218353271484
    5. 'return' → logprob: -7.540218353271484
    6. '    ' → logprob: -7.915218353271484
    7. ' str' → logprob: -8.040218353271484
    8. '"' → logprob: -8.415218353271484
    9. ''' → logprob: -8.415218353271484
    10. '=str' → logprob: -8.415218353271484

Token 913: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1342574656009674
    2. 'str' → logprob: -3.0092575550079346
    3. ' str' → logprob: -3.1342575550079346
    4. ''' → logprob: -4.0092573165893555
    5. '"' → logprob: -4.2592573165893555
    6. ' '' → logprob: -9.384257316589355
    7. 'return' → logprob: -9.759257316589355
    8. '  ' → logprob: -9.884257316589355
    9. '    ' → logprob: -10.009257316589355
    10. ' ' → logprob: -10.259257316589355

Token 914: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -3.547789674485102e-05
    2. ' str' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.125036239624023
    4. 'string' → logprob: -16.875036239624023
    5. '
' → logprob: -17.500036239624023
    6. 'return' → logprob: -17.750036239624023
    7. '[str' → logprob: -18.250036239624023
    8. '(str' → logprob: -20.375036239624023
    9. 's' → logprob: -20.625036239624023
    10. '    
' → logprob: -20.750036239624023

Token 915: ':' (ID: 25)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0016379313310608268
    2. 'join' → logprob: -6.626637935638428
    3. '   ' → logprob: -9.50163745880127
    4. '().' → logprob: -9.87663745880127
    5. '(join' → logprob: -10.12663745880127
    6. ' join' → logprob: -10.37663745880127
    7. ' =' → logprob: -10.37663745880127
    8. ':' → logprob: -11.12663745880127
    9. ')' → logprob: -11.25163745880127
    10. 'return' → logprob: -11.37663745880127

Token 916: ' Cha' (ID: 37219)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -2.5776860184123507e-06
    2. ' sep' → logprob: -13.00000286102295
    3. 'return' → logprob: -15.62500286102295
    4. 'separator' → logprob: -17.875001907348633
    5. 'str' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '.sep' → logprob: -19.375001907348633
    8. '```' → logprob: -19.375001907348633
    9. 'sept' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 917: 'îne' (ID: 55188)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10368941724300385
    2. 'sep' → logprob: -2.728689432144165
    3. 'ep' → logprob: -3.728689432144165
    4. 'ap' → logprob: -5.728689193725586
    5. 'par' → logprob: -6.353689193725586
    6. '```' → logprob: -7.103689193725586
    7. 'parator' → logprob: -7.353689193725586
    8. '   ' → logprob: -7.603689193725586
    9. 'e' → logprob: -7.978689193725586
    10. 'pper' → logprob: -8.603689193725586

Token 918: ' résult' (ID: 31657)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.02990090660750866
    2. '.join' → logprob: -4.154901027679443
    3. 'join' → logprob: -5.279901027679443
    4. '(se' → logprob: -5.654901027679443
    5. '.sep' → logprob: -6.279901027679443
    6. ' sep' → logprob: -6.404901027679443
    7. '   ' → logprob: -7.529901027679443
    8. 'separator' → logprob: -8.154900550842285
    9. '```' → logprob: -8.654900550842285
    10. 'se' → logprob: -8.654900550842285

Token 919: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4978505373001099
    2. 'ur' → logprob: -1.8728505373001099
    3. 'e' → logprob: -2.1228504180908203
    4. 'née' → logprob: -2.3728504180908203
    5. 'urée' → logprob: -2.4978504180908203
    6. 'eur' → logprob: -3.1228504180908203
    7. 'join' → logprob: -3.4978504180908203
    8. '"' → logprob: -3.4978504180908203
    9. '```' → logprob: -3.7478504180908203
    10. '       ' → logprob: -4.12285041809082

Token 920: '.
' (ID: 558)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.004507020115852356
    2. 'join' → logprob: -5.629507064819336
    3. '.' → logprob: -7.629507064819336
    4. '=' → logprob: -9.879507064819336
    5. '(join' → logprob: -9.879507064819336
    6. ' =' → logprob: -10.004507064819336
    7. ').' → logprob: -10.004507064819336
    8. '   ' → logprob: -10.129507064819336
    9. '.sep' → logprob: -10.254507064819336
    10. 'sep' → logprob: -10.254507064819336

Token 921: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11555178463459015
    2. 'return' → logprob: -2.240551710128784
    3. ' return' → logprob: -6.240551948547363
    4. '```' → logprob: -7.990551948547363
    5. '	return' → logprob: -9.490551948547363
    6. '
' → logprob: -9.740551948547363
    7. '"""
' → logprob: -9.865551948547363
    8. '):
' → logprob: -9.990551948547363
    9. ')' → logprob: -9.990551948547363
    10. '"' → logprob: -10.990551948547363

Token 922: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25335365533828735
    2. 'return' → logprob: -1.5033535957336426
    3. ' return' → logprob: -7.503353595733643
    4. 'def' → logprob: -7.753353595733643
    5. '"""
' (adapté à ' """
') → logprob: -8.5033540725708
    6. ')' → logprob: -9.2533540725708
    7. '"""' → logprob: -9.5033540725708
    8. ')
' → logprob: -10.6283540725708
    9. '):
' → logprob: -11.1283540725708
    10. '```' → logprob: -12.1283540725708

Token 923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6932280659675598
    2. 'return' → logprob: -0.6932280659675598
    3. ' return' → logprob: -9.568227767944336
    4. '```' → logprob: -12.068227767944336
    5. 'def' → logprob: -12.568227767944336
    6. '	return' → logprob: -13.318227767944336
    7. '    ' → logprob: -17.193227767944336
    8. '       ' → logprob: -17.693227767944336
    9. '    
' → logprob: -17.693227767944336
    10. '  ' → logprob: -17.818227767944336

Token 924: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.7697225252486533e-06
    2. ' return' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '	return' → logprob: -19.625003814697266
    5. 'def' → logprob: -20.875003814697266
    6. ':return' → logprob: -22.625003814697266
    7. '```' → logprob: -22.625003814697266
    8. '
' → logprob: -22.750003814697266
    9. 'eturn' → logprob: -22.750003814697266
    10. 'Return' → logprob: -22.875003814697266

Token 925: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -4.127333340875339e-06
    2. ' sep' → logprob: -12.500003814697266
    3. 'str' → logprob: -15.000003814697266
    4. 'se' → logprob: -18.750003814697266
    5. 'sept' → logprob: -19.375003814697266
    6. '   ' → logprob: -20.625003814697266
    7. 'separator' → logprob: -21.000003814697266
    8. ' ' → logprob: -21.500003814697266
    9. '_sep' → logprob: -21.500003814697266
    10. '.sep' → logprob: -21.500003814697266

Token 926: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0019348275382071733
    2. '.' → logprob: -6.251935005187988
    3. 'join' → logprob: -12.751935005187988
    4. '.j' → logprob: -13.501935005187988
    5. ' .' → logprob: -13.751935005187988
    6. '.sep' → logprob: -14.626935005187988
    7. ').' → logprob: -15.251935005187988
    8. '.s' → logprob: -16.626934051513672
    9. '.Join' → logprob: -16.751934051513672
    10. '.to' → logprob: -17.376934051513672

Token 927: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07898661494255066
    2. '(str' → logprob: -2.578986644744873
    3. 'map' → logprob: -9.703986167907715
    4. '([' → logprob: -10.703986167907715
    5. 'str' → logprob: -11.703986167907715
    6. '[str' → logprob: -13.078986167907715
    7. '(' → logprob: -13.578986167907715
    8. ' map' → logprob: -13.703986167907715
    9. '(list' → logprob: -14.703986167907715
    10. '	map' → logprob: -16.20398712158203

Token 928: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.018151935189962387
    2. 'str' → logprob: -4.018151760101318
    3. '=str' → logprob: -13.643152236938477
    4. '[str' → logprob: -14.893152236938477
    5. ' str' → logprob: -15.268152236938477
    6. '	str' → logprob: -15.643152236938477
    7. '```' → logprob: -17.018152236938477
    8. ',str' → logprob: -17.893152236938477
    9. '(' → logprob: -18.018152236938477
    10. ':str' → logprob: -18.768152236938477

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12842008471488953
    2. ',a' → logprob: -2.128420114517212
    3. '(a' → logprob: -6.628419876098633
    4. 'a' → logprob: -8.753419876098633
    5. ' ,' → logprob: -12.128419876098633
    6. '(' → logprob: -13.128419876098633
    7. ' a' → logprob: -13.628419876098633
    8. ',(' → logprob: -14.003419876098633
    9. '#a' → logprob: -14.753419876098633
    10. ',
' → logprob: -15.128419876098633

Token 930: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.250000953674316
    3. '	a' → logprob: -20.125
    4. '(a' → logprob: -20.5
    5. ')a' → logprob: -21.75
    6. '#a' → logprob: -23.0
    7. '_a' → logprob: -23.25
    8. '   ' → logprob: -23.375
    9. '[a' → logprob: -23.625
    10. 'а' → logprob: -23.875

Token 931: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.36574100604048e-06
    2. '))
' → logprob: -13.750004768371582
    3. ')))' → logprob: -13.750004768371582
    4. ' ))' → logprob: -14.000004768371582
    5. '()))' → logprob: -14.250004768371582
    6. ')' → logprob: -14.375004768371582
    7. '))

' → logprob: -17.875003814697266
    8. '));' → logprob: -17.875003814697266
    9. ' ' → logprob: -18.125003814697266
    10. '__))' → logprob: -18.500003814697266

Token 932: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026941976975649595
    2. '#' → logprob: -6.752694129943848
    3. 'class' → logprob: -6.752694129943848
    4. '
' → logprob: -8.627694129943848
    5. '<|end|>' → logprob: -9.252694129943848
    6. 'from' → logprob: -11.252694129943848
    7. 'import' → logprob: -11.627694129943848
    8. '' → logprob: -12.002694129943848
    9. '@' → logprob: -12.002694129943848
    10. '\' → logprob: -12.377694129943848

Token 933: ' J' (ID: 643)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.010567545890808
    2. 'JI' → logprob: -2.2605676651000977
    3. 'main' → logprob: -2.5105676651000977
    4. 'J' → logprob: -2.6355676651000977
    5. 'JA' → logprob: -2.8855676651000977
    6. ' join' → logprob: -3.5105676651000977
    7. 'range' → logprob: -3.6355676651000977
    8. 'YES' → logprob: -3.7605676651000977
    9. 'int' → logprob: -3.8855676651000977
    10. 'input' → logprob: -4.260567665100098

Token 934: 'AA' (ID: 8857)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02622714638710022
    2. 'OIN' → logprob: -3.9012272357940674
    3. 'O' → logprob: -5.526226997375488
    4. 'oin' → logprob: -7.151226997375488
    5. 'AO' → logprob: -7.651226997375488
    6. 'OI' → logprob: -8.151226997375488
    7. 'S' → logprob: -10.026226997375488
    8. 'AI' → logprob: -10.276226997375488
    9. 'OA' → logprob: -11.401226997375488
    10. '()' → logprob: -11.651226997375488

Token 935: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0012214169837534428
    2. '(A' → logprob: -6.876221179962158
    3. '(' → logprob: -9.876221656799316
    4. 'A' → logprob: -9.876221656799316
    5. '(*' → logprob: -11.126221656799316
    6. '((' → logprob: -11.251221656799316
    7. '([' → logprob: -11.626221656799316
    8. '(arr' → logprob: -11.751221656799316
    9. 'a' → logprob: -12.001221656799316
    10. ' (' → logprob: -12.126221656799316

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008711368776857853
    2. ',a' → logprob: -4.758711338043213
    3. 'a' → logprob: -10.633711814880371
    4. ',n' → logprob: -11.508711814880371
    5. '(a' → logprob: -12.008711814880371
    6. ',s' → logprob: -12.008711814880371
    7. ',(' → logprob: -12.258711814880371
    8. ',list' → logprob: -12.383711814880371
    9. ',j' → logprob: -12.758711814880371
    10. ',[' → logprob: -12.883711814880371

Token 937: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0024835076183080673
    2. ' sep' → logprob: -6.002483367919922
    3. 'se' → logprob: -12.502483367919922
    4. '(se' → logprob: -13.127483367919922
    5. '[' → logprob: -14.002483367919922
    6. 'list' → logprob: -15.377483367919922
    7. ')' → logprob: -15.377483367919922
    8. '_sep' → logprob: -15.752483367919922
    9. '.sep' → logprob: -15.877483367919922
    10. 'Sep' → logprob: -16.127483367919922

Token 938: ',' (ID: 11)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.00026503115077503026
    2. 'e' → logprob: -8.250265121459961
    3. 'eq' → logprob: -12.625265121459961
    4. '):
' → logprob: -16.25026512145996
    5. ',' → logprob: -16.50026512145996
    6. ')' → logprob: -16.75026512145996
    7. '(ep' → logprob: -16.75026512145996
    8. '):' → logprob: -18.12526512145996
    9. 'ec' → logprob: -18.25026512145996
    10. 'eep' → logprob: -18.50026512145996

Token 939: ' t' (ID: 260)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0015794939827173948
    2. 'e' → logprob: -7.126579284667969
    3. 'd' → logprob: -8.126579284667969
    4. 'se' → logprob: -8.876579284667969
    5. ' sep' → logprob: -9.001579284667969
    6. 'n' → logprob: -10.126579284667969
    7. 't' → logprob: -10.376579284667969
    8. 'b' → logprob: -10.376579284667969
    9. 'start' → logprob: -10.876579284667969
    10. 'ss' → logprob: -11.126579284667969

Token 940: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20154450833797455
    2. '):' → logprob: -1.7015445232391357
    3. ')' → logprob: -10.076544761657715
    4. ',' → logprob: -10.076544761657715
    5. '):
' → logprob: -10.576544761657715
    6. '):

' → logprob: -11.076544761657715
    7. '=' → logprob: -12.576544761657715
    8. '=None' → logprob: -14.326544761657715
    9. ' ):
' → logprob: -14.826544761657715
    10. ' ):' → logprob: -15.326544761657715

Token 941: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4161895513534546
    2. 'return' → logprob: -1.9161895513534546
    3. 'a' → logprob: -2.541189670562744
    4. '):' → logprob: -3.041189670562744
    5. 'def' → logprob: -3.666189670562744
    6. ' return' → logprob: -4.791189670562744
    7. ')' → logprob: -5.541189670562744
    8. '   ' → logprob: -5.666189670562744
    9. 's' → logprob: -5.666189670562744
    10. '):
' → logprob: -5.791189670562744

Token 942: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023760972544550896
    2. 'def' → logprob: -4.148760795593262
    3. ' return' → logprob: -5.148760795593262
    4. '"""
' (adapté à ' """
') → logprob: -6.523760795593262
    5. '   ' → logprob: -8.523760795593262
    6. 'a' → logprob: -9.148760795593262
    7. 'for' → logprob: -10.398760795593262
    8. '"""' → logprob: -11.023760795593262
    9. '):
' → logprob: -11.148760795593262
    10. 'sep' → logprob: -11.523760795593262

Token 943: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5062231421470642
    2. '   ' → logprob: -1.131223201751709
    3. 'def' → logprob: -2.631223201751709
    4. 'a' → logprob: -6.881223201751709
    5. '"""' → logprob: -7.506223201751709
    6. 'return' → logprob: -7.881223201751709
    7. '"' → logprob: -8.63122272491455
    8. 'for' → logprob: -9.25622272491455
    9. '"
' → logprob: -9.38122272491455
    10. ' """
' → logprob: -10.13122272491455

Token 944: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.058866921812295914
    2. '"""
' → logprob: -3.0588669776916504
    3. 'def' → logprob: -4.80886697769165
    4. 'for' → logprob: -6.55886697769165
    5. ' return' → logprob: -7.43386697769165
    6. '"""' → logprob: -10.433866500854492
    7. '   ' → logprob: -11.433866500854492
    8. 'if' → logprob: -12.308866500854492
    9. ' """
' → logprob: -12.808866500854492
    10. '"' → logprob: -13.058866500854492

Token 945: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8694987893104553
    2. 'a' → logprob: -1.3694987297058105
    3. 'x' → logprob: -1.8694987297058105
    4. 'row' → logprob: -2.8694987297058105
    5. 'ligne' → logprob: -2.9944987297058105
    6. 'arr' → logprob: -3.6194987297058105
    7. 'l' → logprob: -4.2444987297058105
    8. 'aa' → logprob: -4.8694987297058105
    9. ' i' → logprob: -5.4944987297058105
    10. 'r' → logprob: -5.7444987297058105

Token 946: ' liste' (ID: 31719)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5563722252845764
    2. 'row' → logprob: -1.4313721656799316
    3. 'ligne' → logprob: -2.5563721656799316
    4. 'l' → logprob: -3.4313721656799316
    5. 'a' → logprob: -3.6813721656799316
    6. 'arr' → logprob: -4.556372165679932
    7. 'sub' → logprob: -4.681372165679932
    8. 'x' → logprob: -4.806372165679932
    9. 'liste' → logprob: -4.931372165679932
    10. 'lst' → logprob: -5.306372165679932

Token 947: ' de' (ID: 334)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6599939465522766
    2. 'a' → logprob: -1.6599938869476318
    3. 'of' → logprob: -2.784993886947632
    4. '(list' → logprob: -2.909993886947632
    5. '(a' → logprob: -2.909993886947632
    6. 'de' → logprob: -3.409993886947632
    7. ' of' → logprob: -3.409993886947632
    8. '[a' → logprob: -3.784993886947632
    9. 'd' → logprob: -4.784994125366211
    10. '[' → logprob: -4.784994125366211

Token 948: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0145679647102952
    2. 'lists' → logprob: -4.264567852020264
    3. 'a' → logprob: -7.889567852020264
    4. 'liste' → logprob: -11.389568328857422
    5. '[list' → logprob: -11.514568328857422
    6. 'iter' → logprob: -12.889568328857422
    7. 'lst' → logprob: -13.389568328857422
    8. 'lista' → logprob: -13.889568328857422
    9. ' list' → logprob: -14.014568328857422
    10. 'l' → logprob: -14.639568328857422

Token 949: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21186086535453796
    2. ',' → logprob: -2.3368608951568604
    3. 'def' → logprob: -2.4618608951568604
    4. 'a' → logprob: -5.336860656738281
    5. '   ' → logprob: -6.711860656738281
    6. '[a' → logprob: -8.086860656738281
    7. ',a' → logprob: -8.461860656738281
    8. ' of' → logprob: -8.461860656738281
    9. '...' → logprob: -8.586860656738281
    10. '(list' → logprob: -8.711860656738281

Token 950: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35532504320144653
    2. 'return' → logprob: -1.6053249835968018
    3. ' return' → logprob: -2.8553249835968018
    4. ' def' → logprob: -3.4803249835968018
    5. 'lambda' → logprob: -5.230325222015381
    6. 'a' → logprob: -6.730325222015381
    7. 'res' → logprob: -7.105325222015381
    8. ' lambda' → logprob: -7.230325222015381
    9. 'b' → logprob: -7.855325222015381
    10. ' res' → logprob: -7.980325222015381

Token 951: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -9.491498531133402e-06
    2. 'is' → logprob: -12.500009536743164
    3. 'i' → logprob: -12.625009536743164
    4. 't' → logprob: -13.875009536743164
    5. ' it' → logprob: -14.250009536743164
    6. '(it' → logprob: -15.500009536743164
    7. 'ît' → logprob: -16.250009536743164
    8. '```' → logprob: -16.250009536743164
    9. '[it' → logprob: -16.375009536743164
    10. '
' → logprob: -16.875009536743164

Token 952: ' chaque' (ID: 21194)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.16630089282989502
    2. 'each' → logprob: -3.0413007736206055
    3. '(a' → logprob: -3.4163007736206055
    4. 'a' → logprob: -3.5413007736206055
    5. '([[' → logprob: -4.2913007736206055
    6. '[[' → logprob: -5.0413007736206055
    7. 'les' → logprob: -5.1663007736206055
    8. 't' → logprob: -5.9163007736206055
    9. 'tout' → logprob: -6.0413007736206055
    10. 'l' → logprob: -6.2913007736206055

Token 953: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6413514614105225
    2. 'sub' → logprob: -2.0163514614105225
    3. 'elem' → logprob: -2.5163514614105225
    4. 'ligne' → logprob: -2.8913514614105225
    5. 'list' → logprob: -3.0163514614105225
    6. 'row' → logprob: -3.3913514614105225
    7. 'inner' → logprob: -3.6413514614105225
    8. 'l' → logprob: -3.8913514614105225
    9. 'line' → logprob: -4.141351699829102
    10. 'liste' → logprob: -4.391351699829102

Token 954: ' en' (ID: 469)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21390262246131897
    2. 'a' → logprob: -1.9639025926589966
    3. '(list' → logprob: -3.713902711868286
    4. '(map' → logprob: -5.213902473449707
    5. '(' → logprob: -5.338902473449707
    6. '(lambda' → logprob: -5.463902473449707
    7. 'list' → logprob: -5.838902473449707
    8. '(s' → logprob: -5.963902473449707
    9. 's' → logprob: -6.213902473449707
    10. '(row' → logprob: -6.838902473449707

Token 955: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.026454955339431763
    2. 'chaine' → logprob: -3.7764549255371094
    3. 'string' → logprob: -6.026454925537109
    4. 'cha' → logprob: -8.15145492553711
    5. ' chaîne' → logprob: -8.27645492553711
    6. ' str' → logprob: -9.65145492553711
    7. 'chain' → logprob: -10.02645492553711
    8. 's' → logprob: -10.27645492553711
    9. ' chaine' → logprob: -10.40145492553711
    10. 'strings' → logprob: -10.77645492553711

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7308383584022522
    2. '(a' → logprob: -1.1058382987976074
    3. 'et' → logprob: -3.3558382987976074
    4. ')' → logprob: -3.4808382987976074
    5. 'map' → logprob: -3.7308382987976074
    6. 'a' → logprob: -3.8558382987976074
    7. '(e' → logprob: -4.230838298797607
    8. 'and' → logprob: -4.355838298797607
    9. '(map' → logprob: -4.355838298797607
    10. 's' → logprob: -4.855838298797607

Token 957: ' joint' (ID: 14585)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.04052102938294411
    2. 't' → logprob: -4.290521144866943
    3. 's' → logprob: -4.790521144866943
    4. 'a' → logprob: -5.290521144866943
    5. '   ' → logprob: -5.915521144866943
    6. 'return' → logprob: -6.165521144866943
    7. 'def' → logprob: -6.290521144866943
    8. 'lambda' → logprob: -6.415521144866943
    9. 'join' → logprob: -6.665521144866943
    10. ' sep' → logprob: -6.915521144866943

Token 958: ' les' (ID: 1341)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -1.0749746561050415
    2. '(s' → logprob: -1.1999746561050415
    3. '(t' → logprob: -1.8249746561050415
    4. 'sep' → logprob: -2.324974536895752
    5. 's' → logprob: -2.824974536895752
    6. 't' → logprob: -4.449974536895752
    7. '(' → logprob: -4.574974536895752
    8. '(map' → logprob: -5.324974536895752
    9. 'map' → logprob: -5.824974536895752
    10. '(row' → logprob: -6.324974536895752

Token 959: ' éléments' (ID: 57375)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.14556407928466797
    2. 's' → logprob: -2.520564079284668
    3. 't' → logprob: -3.645564079284668
    4. '[s' → logprob: -3.895564079284668
    5. '[t' → logprob: -5.395564079284668
    6. '[' → logprob: -5.895564079284668
    7. '(t' → logprob: -8.520564079284668
    8. 'map' → logprob: -8.895564079284668
    9. 'JA' → logprob: -9.270564079284668
    10. '(s' → logprob: -9.395564079284668

Token 960: ' internes' (ID: 183434)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.01695435680449009
    2. 'par' → logprob: -5.14195442199707
    3. ' avec' → logprob: -5.39195442199707
    4. 'with' → logprob: -5.64195442199707
    5. 's' → logprob: -6.89195442199707
    6. 't' → logprob: -7.51695442199707
    7. '(par' → logprob: -7.76695442199707
    8. '(s' → logprob: -8.14195442199707
    9. ' par' → logprob: -8.26695442199707
    10. ' with' → logprob: -9.51695442199707

Token 961: ' de' (ID: 334)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.5121481418609619
    2. 'sep' → logprob: -1.512148141860962
    3. 'with' → logprob: -2.887148141860962
    4. 's' → logprob: -3.387148141860962
    5. '(s' → logprob: -3.387148141860962
    6. 'se' → logprob: -3.887148141860962
    7. 't' → logprob: -4.012147903442383
    8. '(t' → logprob: -4.262147903442383
    9. ')' → logprob: -6.512147903442383
    10. ' with' → logprob: -6.762147903442383

Token 962: ' chaque' (ID: 21194)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.33596307039260864
    2. 'a' → logprob: -2.210963010787964
    3. 't' → logprob: -2.835963010787964
    4. 's' → logprob: -3.085963010787964
    5. 'l' → logprob: -3.210963010787964
    6. 'list' → logprob: -4.835963249206543
    7. 'lst' → logprob: -5.585963249206543
    8. 'elem' → logprob: -5.710963249206543
    9. 'line' → logprob: -5.960963249206543
    10. 'str' → logprob: -6.085963249206543

Token 963: ' sous' (ID: 14487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12063726782798767
    2. 'liste' → logprob: -2.6206371784210205
    3. 'ligne' → logprob: -3.7456371784210205
    4. 's' → logprob: -5.1206374168396
    5. 'list' → logprob: -5.3706374168396
    6. 't' → logprob: -5.9956374168396
    7. 'l' → logprob: -6.1206374168396
    8. 'range' → logprob: -7.3706374168396
    9. 'la' → logprob: -8.620636940002441
    10. 'line' → logprob: -8.745636940002441

Token 964: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.035268817096948624
    2. 'list' → logprob: -3.410268783569336
    3. 'a' → logprob: -6.785268783569336
    4. '```' → logprob: -8.535268783569336
    5. ' liste' → logprob: -9.285268783569336
    6. 'l' → logprob: -10.160268783569336
    7. 'lista' → logprob: -10.285268783569336
    8. 'Liste' → logprob: -10.660268783569336
    9. 'la' → logprob: -10.910268783569336
    10. 'lst' → logprob: -11.035268783569336

Token 965: 'iste' (ID: 4872)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.2256859540939331
    2. 'iste' → logprob: -1.725685954093933
    3. 'a' → logprob: -3.8506860733032227
    4. 'is' → logprob: -6.475686073303223
    5. 'ista' → logprob: -8.100686073303223
    6. 'e' → logprob: -8.100686073303223
    7. 'i' → logprob: -8.975686073303223
    8. 'st' → logprob: -9.225686073303223
    9. '```' → logprob: -9.600686073303223
    10. 's' → logprob: -9.975686073303223

Token 966: ' avec' (ID: 3937)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.4322119355201721
    2. 'with' → logprob: -1.8072118759155273
    3. 'sep' → logprob: -2.4322118759155273
    4. ' avec' → logprob: -3.3072118759155273
    5. '(se' → logprob: -3.3072118759155273
    6. ' with' → logprob: -4.432211875915527
    7. 's' → logprob: -5.682211875915527
    8. '(s' → logprob: -5.807211875915527
    9. 'a' → logprob: -6.057211875915527
    10. 'se' → logprob: -6.432211875915527

Token 967: ' `' (ID: 2700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08227796107530594
    2. 't' → logprob: -2.58227801322937
    3. 'sep' → logprob: -5.707277774810791
    4. ' s' → logprob: -10.58227825164795
    5. 'se' → logprob: -11.20727825164795
    6. ' t' → logprob: -11.58227825164795
    7. '(s' → logprob: -11.70727825164795
    8. '(t' → logprob: -12.70727825164795
    9. '
' → logprob: -15.08227825164795
    10. 'separator' → logprob: -15.45727825164795

Token 968: 't' (ID: 83)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00031985383247956634
    2. 't' → logprob: -8.125319480895996
    3. ' s' → logprob: -10.750319480895996
    4. 'sep' → logprob: -13.500319480895996
    5. 'str' → logprob: -15.000319480895996
    6. '(s' → logprob: -15.750319480895996
    7. '`s' → logprob: -15.875319480895996
    8. ' t' → logprob: -16.000320434570312
    9. '
' → logprob: -16.250320434570312
    10. ' ' → logprob: -16.875320434570312

Token 969: '`,' (ID: 15007)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -0.8173037767410278
    2. ')' → logprob: -1.1923037767410278
    3. 'sep' → logprob: -2.6923036575317383
    4. '),' → logprob: -2.8173036575317383
    5. '`)' → logprob: -2.8173036575317383
    6. '`,' → logprob: -3.8173036575317383
    7. ')`' → logprob: -3.8173036575317383
    8. 's' → logprob: -4.692303657531738
    9. '(s' → logprob: -5.567303657531738
    10. ',' → logprob: -6.067303657531738

Token 970: ' puis' (ID: 18766)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.008316687308251858
    2. ' sep' → logprob: -5.133316516876221
    3. '   ' → logprob: -6.883316516876221
    4. 's' → logprob: -7.133316516876221
    5. '`' → logprob: -7.883316516876221
    6. ')' → logprob: -10.383316993713379
    7. ' s' → logprob: -10.508316993713379
    8. '       ' → logprob: -10.633316993713379
    9. 't' → logprob: -10.758316993713379
    10. 'separator' → logprob: -10.883316993713379

Token 971: ' joint' (ID: 14585)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0006022418383508921
    2. 'join' → logprob: -8.000601768493652
    3. ' sep' → logprob: -9.000601768493652
    4. 's' → logprob: -9.375601768493652
    5. 'return' → logprob: -10.750601768493652
    6. '
' → logprob: -10.875601768493652
    7. 'joins' → logprob: -12.500601768493652
    8. '```' → logprob: -12.625601768493652
    9. 'se' → logprob: -13.375601768493652
    10. 'sec' → logprob: -13.750601768493652

Token 972: ' chaque' (ID: 21194)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04025975242257118
    2. 'the' → logprob: -3.665259838104248
    3. 'each' → logprob: -5.290259838104248
    4. '(se' → logprob: -6.040259838104248
    5. 'a' → logprob: -6.790259838104248
    6. '[a' → logprob: -7.290259838104248
    7. '([' → logprob: -7.540259838104248
    8. '(the' → logprob: -7.665259838104248
    9. 'them' → logprob: -8.04025936126709
    10. ' the' → logprob: -8.16525936126709

Token 973: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.242930293083191
    2. 'e' → logprob: -1.742930293083191
    3. 'élé' → logprob: -1.742930293083191
    4. 'ligne' → logprob: -1.742930293083191
    5. 'a' → logprob: -3.1179304122924805
    6. 'l' → logprob: -3.2429304122924805
    7. 'ss' → logprob: -3.7429304122924805
    8. 'element' → logprob: -3.8679304122924805
    9. 'elem' → logprob: -3.8679304122924805
    10. 'chaine' → logprob: -5.3679304122924805

Token 974: '-cha' (ID: 163177)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4830605983734131
    2. 's' → logprob: -1.733060598373413
    3. 'liste' → logprob: -2.108060598373413
    4. 'a' → logprob: -3.608060598373413
    5. 'sep' → logprob: -3.858060598373413
    6. 'l' → logprob: -4.608060836791992
    7. '(s' → logprob: -4.983060836791992
    8. 'lists' → logprob: -5.233060836791992
    9. 'es' → logprob: -5.608060836791992
    10. 'lista' → logprob: -6.608060836791992

Token 975: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.004846022464334965
    2. 'î' → logprob: -6.504846096038818
    3. 'ïne' → logprob: -6.504846096038818
    4. 'r' → logprob: -6.629846096038818
    5. 'înes' → logprob: -8.37984561920166
    6. 'ne' → logprob: -9.37984561920166
    7. 'ine' → logprob: -9.50484561920166
    8. 'rne' → logprob: -9.75484561920166
    9. 'în' → logprob: -11.00484561920166
    10. '```' → logprob: -11.37984561920166

Token 976: ' obten' (ID: 28150)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.581706702709198
    2. ' avec' → logprob: -0.831706702709198
    3. '(a' → logprob: -6.331706523895264
    4. 'a' → logprob: -7.081706523895264
    5. ' with' → logprob: -7.206706523895264
    6. 'e' → logprob: -7.706706523895264
    7. 's' → logprob: -7.831706523895264
    8. ' par' → logprob: -7.956706523895264
    9. 'ex' → logprob: -7.956706523895264
    10. 'with' → logprob: -8.081707000732422

Token 977: 'ue' (ID: 466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8099539875984192
    2. 'r' → logprob: -2.1849539279937744
    3. 'p' → logprob: -2.3099539279937744
    4. 't' → logprob: -2.5599539279937744
    5. '`' → logprob: -3.0599539279937744
    6. 'e' → logprob: -3.1849539279937744
    7. '```' → logprob: -3.4349539279937744
    8. 'a' → logprob: -3.8099539279937744
    9. 'with' → logprob: -4.0599541664123535
    10. 'f' → logprob: -4.5599541664123535

Token 978: ' avec' (ID: 3937)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.044548675417900085
    2. ' avec' → logprob: -3.169548749923706
    3. 'par' → logprob: -7.419548511505127
    4. 'with' → logprob: -7.544548511505127
    5. ' par' → logprob: -8.419548988342285
    6. '(s' → logprob: -9.044548988342285
    7. ' with' → logprob: -10.294548988342285
    8. '(par' → logprob: -11.294548988342285
    9. 'Avec' → logprob: -11.294548988342285
    10. 'au' → logprob: -11.919548988342285

Token 979: ' `' (ID: 2700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015247372211888433
    2. 'sep' → logprob: -6.876524925231934
    3. ' s' → logprob: -7.751524925231934
    4. '`s' → logprob: -10.501524925231934
    5. '(s' → logprob: -10.751524925231934
    6. '`' → logprob: -12.626524925231934
    7. '
' → logprob: -12.626524925231934
    8. 'se' → logprob: -12.876524925231934
    9. ' sep' → logprob: -13.876524925231934
    10. '```' → logprob: -14.751524925231934

Token 980: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.547789674485102e-05
    2. 'sep' → logprob: -10.500035285949707
    3. '`s' → logprob: -12.625035285949707
    4. '`' → logprob: -13.250035285949707
    5. ' s' → logprob: -13.250035285949707
    6. '\n' → logprob: -15.125035285949707
    7. ''\' → logprob: -15.500035285949707
    8. 'a' → logprob: -15.875035285949707
    9. '`
' → logprob: -15.875035285949707
    10. '(s' → logprob: -16.000036239624023

Token 981: '`.
' (ID: 36060)
  Prédit: ')`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')`' → logprob: -0.39829012751579285
    2. '`' → logprob: -1.5232901573181152
    3. ')' → logprob: -2.2732901573181152
    4. '`)' → logprob: -5.523290157318115
    5. ')`
' → logprob: -6.398290157318115
    6. ',' → logprob: -7.398290157318115
    7. '`,' → logprob: -7.773290157318115
    8. '`.' → logprob: -7.898290157318115
    9. '`
' → logprob: -8.648289680480957
    10. 'sep' → logprob: -9.648289680480957

Token 982: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6829491257667542
    2. '   ' → logprob: -1.3079490661621094
    3. 'def' → logprob: -1.6829490661621094
    4. ')' → logprob: -4.557949066162109
    5. 'return' → logprob: -4.682949066162109
    6. ')
' → logprob: -5.307949066162109
    7. '(
' → logprob: -5.307949066162109
    8. 'a' → logprob: -5.682949066162109
    9. '"""
' → logprob: -5.682949066162109
    10. '```' → logprob: -7.682949066162109

Token 983: ' Args' (ID: 39185)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.692375898361206
    2. 'def' → logprob: -1.442375898361206
    3. '   ' → logprob: -1.692375898361206
    4. 'return' → logprob: -3.067375898361206
    5. '(
' → logprob: -4.192376136779785
    6. '"""
' → logprob: -4.817376136779785
    7. 'a' → logprob: -5.567376136779785
    8. '`' → logprob: -5.942376136779785
    9. ')' → logprob: -7.567376136779785
    10. ' return' → logprob: -8.067376136779785

Token 984: ':
' (ID: 734)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00719411950558424
    2. ',' → logprob: -5.2571940422058105
    3. '   ' → logprob: -7.2571940422058105
    4. ' (' → logprob: -7.6321940422058105
    5. '(' → logprob: -8.132194519042969
    6. 'def' → logprob: -8.757194519042969
    7. '(
' → logprob: -9.632194519042969
    8. '):' → logprob: -10.132194519042969
    9. '):
' → logprob: -10.257194519042969
    10. ')' → logprob: -10.382194519042969

Token 985: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02501045912504196
    2. '   ' → logprob: -4.025010585784912
    3. 's' → logprob: -5.650010585784912
    4. '(a' → logprob: -6.150010585784912
    5. ' a' → logprob: -7.025010585784912
    6. 't' → logprob: -10.025010108947754
    7. '#a' → logprob: -10.150010108947754
    8. '       ' → logprob: -10.525010108947754
    9. ',a' → logprob: -10.650010108947754
    10. '(s' → logprob: -10.775010108947754

Token 986: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.001068654702976346
    2. 's' → logprob: -6.876068592071533
    3. ' a' → logprob: -11.126069068908691
    4. 't' → logprob: -12.626069068908691
    5. 'list' → logprob: -12.876069068908691
    6. '<|end|>' → logprob: -12.876069068908691
    7. 'l' → logprob: -13.626069068908691
    8. 'sep' → logprob: -13.688569068908691
    9. '#' → logprob: -13.813569068908691
    10. '   ' → logprob: -14.126069068908691

Token 987: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06277453154325485
    2. '(list' → logprob: -2.812774419784546
    3. ',' → logprob: -7.187774658203125
    4. '(lst' → logprob: -10.812774658203125
    5. ':' → logprob: -12.437774658203125
    6. '(a' → logprob: -12.562774658203125
    7. '(lista' → logprob: -12.937774658203125
    8. '(array' → logprob: -13.062774658203125
    9. '(List' → logprob: -13.187774658203125
    10. '(' → logprob: -13.187774658203125

Token 988: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.255023956531659e-05
    2. '(list' → logprob: -9.875072479248047
    3. '[list' → logprob: -11.125072479248047
    4. ' list' → logprob: -12.500072479248047
    5. 'str' → logprob: -13.250072479248047
    6. 'a' → logprob: -14.500072479248047
    7. ',list' → logprob: -16.000072479248047
    8. ')' → logprob: -17.500072479248047
    9. '=list' → logprob: -17.500072479248047
    10. ':list' → logprob: -17.625072479248047

Token 989: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7519810199737549
    2. '):' → logprob: -0.8769810199737549
    3. '<|end|>' → logprob: -2.626981019973755
    4. ')' → logprob: -3.751981019973755
    5. '[' → logprob: -5.001980781555176
    6. '),' → logprob: -5.501980781555176
    7. '):
' → logprob: -6.376980781555176
    8. ' of' → logprob: -7.251980781555176
    9. '[list' → logprob: -7.876980781555176
    10. ':' → logprob: -8.001980781555176

Token 990: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.676292231422849e-05
    2. 'lists' → logprob: -11.000017166137695
    3. ' list' → logprob: -17.000017166137695
    4. 'str' → logprob: -17.750017166137695
    5. '[list' → logprob: -17.750017166137695
    6. '(list' → logprob: -18.000017166137695
    7. ')' → logprob: -19.875017166137695
    8. '
' → logprob: -21.500017166137695
    9. '	list' → logprob: -21.625017166137695
    10. ' lists' → logprob: -21.750017166137695

Token 991: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049987103790044785
    2. ',' → logprob: -3.5499870777130127
    3. '[int' → logprob: -4.174987316131592
    4. '[str' → logprob: -6.299987316131592
    5. '):
' → logprob: -6.549987316131592
    6. ' of' → logprob: -8.424986839294434
    7. '[' → logprob: -8.924986839294434
    8. '[Any' → logprob: -9.049986839294434
    9. ')' → logprob: -9.299986839294434
    10. '   ' → logprob: -9.424986839294434

Token 992: ' Liste' (ID: 61030)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001240348443388939
    2. ' list' → logprob: -7.376240253448486
    3. '[list' → logprob: -8.001240730285645
    4. 'a' → logprob: -8.501240730285645
    5. '(list' → logprob: -9.876240730285645
    6. 'A' → logprob: -12.626240730285645
    7. 'lists' → logprob: -12.751240730285645
    8. 'List' → logprob: -12.876240730285645
    9. '	list' → logprob: -13.001240730285645
    10. 'str' → logprob: -13.251240730285645

Token 993: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1030849739909172
    2. 'of' → logprob: -2.7280850410461426
    3. '[list' → logprob: -3.8530850410461426
    4. ',' → logprob: -5.978085041046143
    5. '   ' → logprob: -5.978085041046143
    6. '<|end|>' → logprob: -6.478085041046143
    7. '[' → logprob: -6.728085041046143
    8. '(list' → logprob: -7.228085041046143
    9. '[int' → logprob: -7.603085041046143
    10. 'a' → logprob: -8.228084564208984

Token 994: ' listes' (ID: 179198)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6482836604118347
    2. 'elements' → logprob: -1.2732837200164795
    3. 'list' → logprob: -2.3982837200164795
    4. 'str' → logprob: -3.0232837200164795
    5. 'lists' → logprob: -3.7732837200164795
    6. 'iter' → logprob: -3.8982837200164795
    7. 'a' → logprob: -4.7732834815979
    8. ' éléments' → logprob: -7.0232834815979
    9. ' elements' → logprob: -7.1482834815979
    10. 'liste' → logprob: -7.1482834815979

Token 995: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: ' joindre' (ID: 194638)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2204446792602539
    2. 'str' → logprob: -1.845444679260254
    3. 'a' → logprob: -4.220444679260254
    4. 'map' → logprob: -5.220444679260254
    5. 'lists' → logprob: -5.470444679260254
    6. 'join' → logprob: -5.470444679260254
    7. '[list' → logprob: -5.595444679260254
    8. '
' → logprob: -5.845444679260254
    9. ' list' → logprob: -6.595444679260254
    10. ' lists' → logprob: -7.845444679260254

Token 997: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7072551846504211
    2. ',
' → logprob: -1.5822551250457764
    3. '   ' → logprob: -1.5822551250457764
    4. ')' → logprob: -3.4572551250457764
    5. '
' → logprob: -3.4572551250457764
    6. 'a' → logprob: -4.0822553634643555
    7. '):
' → logprob: -4.7072553634643555
    8. ')
' → logprob: -6.2072553634643555
    9. '),' → logprob: -6.4572553634643555
    10. 'def' → logprob: -6.4572553634643555

Token 998: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16981089115142822
    2. ',' → logprob: -2.0448107719421387
    3. ',
' → logprob: -4.419810771942139
    4. ')' → logprob: -5.044810771942139
    5. 'def' → logprob: -6.294810771942139
    6. '
' → logprob: -6.294810771942139
    7. '(list' → logprob: -6.294810771942139
    8. '):
' → logprob: -6.669810771942139
    9. 'list' → logprob: -7.794810771942139
    10. '):' → logprob: -8.419811248779297

Token 999: ' s' (ID: 265)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.028536492725834e-05
    2. 'sep' → logprob: -10.000070571899414
    3. 's' (adapté à ' s') → logprob: -11.375070571899414
    4. ' str' → logprob: -11.625070571899414
    5. 't' → logprob: -12.625070571899414
    6. '   ' → logprob: -15.500070571899414
    7. '[str' → logprob: -15.875070571899414
    8. '
' → logprob: -16.000070571899414
    9. 'list' → logprob: -16.250070571899414
    10. 'def' → logprob: -16.375070571899414

Token 1000: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008278146386146545
    2. '<|end|>' → logprob: -5.5082783699035645
    3. ',
' → logprob: -6.6332783699035645
    4. ' ,' → logprob: -7.2582783699035645
    5. ')' → logprob: -7.2582783699035645
    6. '   ' → logprob: -7.7582783699035645
    7. '(str' → logprob: -8.008277893066406
    8. ' (' → logprob: -8.508277893066406
    9. '):' → logprob: -9.258277893066406
    10. ':' → logprob: -9.258277893066406

Token 1001: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.229872087715194e-05
    2. ')' → logprob: -9.875061988830566
    3. ' str' → logprob: -11.625061988830566
    4. 'sep' → logprob: -14.250061988830566
    5. 's' → logprob: -14.750061988830566
    6. '[str' → logprob: -15.500061988830566
    7. '(str' → logprob: -15.625061988830566
    8. '	str' → logprob: -15.875061988830566
    9. '')' → logprob: -16.500062942504883
    10. '=str' → logprob: -16.625062942504883

Token 1002: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017620481085032225
    2. ')' → logprob: -6.8767619132995605
    3. '   ' → logprob: -7.7517619132995605
    4. '):
' → logprob: -9.001762390136719
    5. '),' → logprob: -9.751762390136719
    6. ',
' → logprob: -10.001762390136719
    7. '):' → logprob: -10.001762390136719
    8. ')
' → logprob: -11.501762390136719
    9. ' ,' → logprob: -12.126762390136719
    10. 'def' → logprob: -13.751762390136719

Token 1003: ' Sé' (ID: 53058)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.8006037473678589
    2. 'sep' → logprob: -1.0506037473678589
    3. 't' → logprob: -1.6756037473678589
    4. 's' → logprob: -4.675603866577148
    5. 'separator' → logprob: -6.300603866577148
    6. ' str' → logprob: -7.175603866577148
    7. ')' → logprob: -7.425603866577148
    8. 'se' → logprob: -7.550603866577148
    9. ' t' → logprob: -7.550603866577148
    10. 'a' → logprob: -8.675603866577148

Token 1004: 'par' (ID: 796)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.895480277715251e-06
    2. 'parator' → logprob: -12.750008583068848
    3. 'perator' → logprob: -12.875008583068848
    4. 'PARATOR' → logprob: -13.875008583068848
    5. 'par' → logprob: -13.875008583068848
    6. '	p' → logprob: -14.750008583068848
    7. 'pa' → logprob: -15.125008583068848
    8. 'п' → logprob: -15.875008583068848
    9. 'パ' → logprob: -16.000009536743164
    10. 'پ' → logprob: -16.250009536743164

Token 1005: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.6341621279716492
    2. 'ator' → logprob: -0.7591621279716492
    3. 'ate' → logprob: -7.509161949157715
    4. '
' → logprob: -8.634161949157715
    5. 'at' → logprob: -9.134161949157715
    6. 'атор' → logprob: -9.384161949157715
    7. '   ' → logprob: -10.009161949157715
    8. ')' → logprob: -10.009161949157715
    9. 'eur' → logprob: -10.134161949157715
    10. 'a' → logprob: -10.134161949157715

Token 1006: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10578876733779907
    2. ')' → logprob: -3.6057887077331543
    3. ',
' → logprob: -3.6057887077331543
    4. 'between' → logprob: -3.9807887077331543
    5. ' between' → logprob: -4.980788707733154
    6. '):
' → logprob: -4.980788707733154
    7. '):' → logprob: -4.980788707733154
    8. '=' → logprob: -5.855788707733154
    9. '),' → logprob: -6.730788707733154
    10. '   ' → logprob: -7.230788707733154

Token 1007: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.559775710105896
    2. 'les' → logprob: -1.809775710105896
    3. 'a' → logprob: -2.5597758293151855
    4. 'sub' → logprob: -2.8097758293151855
    5. 'l' → logprob: -3.1847758293151855
    6. 'élé' → logprob: -3.6847758293151855
    7. 'list' → logprob: -3.8097758293151855
    8. 'liste' → logprob: -4.1847758293151855
    9. 'lists' → logprob: -4.6847758293151855
    10. '```' → logprob: -5.4347758293151855

Token 1008: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5024744868278503
    2. 's' → logprob: -1.0024745464324951
    3. 'list' → logprob: -4.377474308013916
    4. 'sub' → logprob: -5.127474308013916
    5. 'group' → logprob: -5.377474308013916
    6. 'liste' → logprob: -6.377474308013916
    7. 'elements' → logprob: -6.752474308013916
    8. 'lists' → logprob: -8.252474784851074
    9. 'items' → logprob: -8.627474784851074
    10. '```' → logprob: -8.877474784851074

Token 1009: '-list' (ID: 18463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011909999884665012
    2. 'listas' → logprob: -5.2619099617004395
    3. 'lists' → logprob: -6.0119099617004395
    4. 'liste' → logprob: -6.7619099617004395
    5. '-l' → logprob: -6.7619099617004395
    6. 'l' → logprob: -7.0119099617004395
    7. '_list' → logprob: -8.136910438537598
    8. 'List' → logprob: -9.261910438537598
    9. '-list' → logprob: -9.636910438537598
    10. 's' → logprob: -9.761910438537598

Token 1010: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0037743125576525927
    2. 'istes' → logprob: -5.753774166107178
    3. 'tes' → logprob: -8.378774642944336
    4. 's' → logprob: -9.378774642944336
    5. 'ist' → logprob: -9.503774642944336
    6. '```' → logprob: -9.503774642944336
    7. 'ists' → logprob: -10.003774642944336
    8. 'stes' → logprob: -10.503774642944336
    9. ']' → logprob: -11.503774642944336
    10. 'êtes' → logprob: -11.628774642944336

Token 1011: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.708225429058075
    2. ')
' → logprob: -0.708225429058075
    3. '   ' → logprob: -4.583225250244141
    4. '):
' → logprob: -5.583225250244141
    5. ',' → logprob: -7.458225250244141
    6. '):' → logprob: -8.83322525024414
    7. 'def' → logprob: -9.45822525024414
    8. '),' → logprob: -9.83322525024414
    9. ',
' → logprob: -10.20822525024414
    10. 's' → logprob: -10.95822525024414

Token 1012: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01141937356442213
    2. ')' → logprob: -4.761419296264648
    3. '):
' → logprob: -6.261419296264648
    4. '       ' → logprob: -8.011419296264648
    5. 't' → logprob: -8.261419296264648
    6. ')
' → logprob: -9.886419296264648
    7. '):' → logprob: -9.886419296264648
    8. ' t' → logprob: -9.886419296264648
    9. 'def' → logprob: -9.886419296264648
    10. '"""
' → logprob: -10.136419296264648

Token 1013: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -6.704273118884885e-07
    2. ' t' → logprob: -14.375000953674316
    3. '
' → logprob: -18.25
    4. 'return' → logprob: -20.0
    5. '   ' → logprob: -20.75
    6. '	t' → logprob: -21.375
    7. '`t' → logprob: -21.625
    8. '_t' → logprob: -23.375
    9. '       ' → logprob: -23.875
    10. '(t' → logprob: -24.625

Token 1014: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06667821109294891
    2. '(str' → logprob: -2.816678285598755
    3. ':str' → logprob: -6.441678047180176
    4. ')' → logprob: -7.066678047180176
    5. ':' → logprob: -7.191678047180176
    6. '):
' → logprob: -7.441678047180176
    7. '=str' → logprob: -8.066678047180176
    8. '=' → logprob: -8.316678047180176
    9. '('' → logprob: -9.316678047180176
    10. '):' → logprob: -9.941678047180176

Token 1015: 'str' (ID: 689)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7101436853408813
    2. 'str' → logprob: -0.8351436853408813
    3. 'sep' → logprob: -3.460143566131592
    4. ''' → logprob: -3.710143566131592
    5. ''t' → logprob: -4.210143566131592
    6. ')' → logprob: -5.835143566131592
    7. '')' → logprob: -8.08514404296875
    8. '''' → logprob: -8.83514404296875
    9. ')t' → logprob: -9.21014404296875
    10. ' str' → logprob: -9.71014404296875

Token 1016: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038891393691301346
    2. '):
' → logprob: -3.663891315460205
    3. ')' → logprob: -4.788891315460205
    4. ',' → logprob: -6.163891315460205
    5. ':' → logprob: -7.038891315460205
    6. '   ' → logprob: -7.663891315460205
    7. ''):' → logprob: -8.163891792297363
    8. ' ):' → logprob: -9.038891792297363
    9. '=' → logprob: -9.788891792297363
    10. ')
' → logprob: -9.913891792297363

Token 1017: ' Sé' (ID: 53058)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.3435588777065277
    2. 't' → logprob: -1.34355890750885
    3. ')' → logprob: -4.4685587882995605
    4. 'se' → logprob: -5.0935587882995605
    5. 'separator' → logprob: -5.4685587882995605
    6. '<|end|>' → logprob: -5.9685587882995605
    7. '.sep' → logprob: -7.2185587882995605
    8. 'str' → logprob: -7.3435587882995605
    9. '(t' → logprob: -7.5935587882995605
    10. '(se' → logprob: -8.093559265136719

Token 1018: 'par' (ID: 796)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006535819848068058
    2. 'par' → logprob: -7.3756537437438965
    3. 'pa' → logprob: -11.250653266906738
    4. '
' → logprob: -12.750653266906738
    5. 'parator' → logprob: -12.875653266906738
    6. 'パ' → logprob: -13.125653266906738
    7. '```' → logprob: -13.750653266906738
    8. '"' → logprob: -14.000653266906738
    9. 'pp' → logprob: -14.000653266906738
    10. 'PARATOR' → logprob: -14.375653266906738

Token 1019: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.031890079379081726
    2. 'ar' → logprob: -3.9068901538848877
    3. 'par' → logprob: -5.406889915466309
    4. 'parator' → logprob: -6.281889915466309
    5. 'a' → logprob: -6.406889915466309
    6. 'ate' → logprob: -7.406889915466309
    7. 'ator' → logprob: -7.531889915466309
    8. 'at' → logprob: -7.531889915466309
    9. 'p' → logprob: -8.031889915466309
    10. ')' → logprob: -8.531889915466309

Token 1020: ' à' (ID: 1221)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.22494608163833618
    2. 'entre' → logprob: -1.9749460220336914
    3. ' between' → logprob: -3.0999460220336914
    4. 'inter' → logprob: -4.224946022033691
    5. ' entre' → logprob: -6.349946022033691
    6. 'in' → logprob: -8.099946022033691
    7. 'within' → logprob: -8.224946022033691
    8. ''entre' → logprob: -9.099946022033691
    9. '_between' → logprob: -9.099946022033691
    10. 'inner' → logprob: -9.224946022033691

Token 1021: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44481173157691956
    2. 'between' → logprob: -1.6948117017745972
    3. ')' → logprob: -2.1948118209838867
    4. 'join' → logprob: -4.444811820983887
    5. 'inner' → logprob: -4.694811820983887
    6. 'l' → logprob: -4.944811820983887
    7. ' between' → logprob: -4.944811820983887
    8. 'token' → logprob: -5.319811820983887
    9. '<|end|>' → logprob: -5.694811820983887
    10. ''t' → logprob: -6.069811820983887

Token 1022: ''intérieur' (ID: 102083)
  Prédit: ''intérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérieur' → logprob: -0.06542962789535522
    2. ''inter' → logprob: -3.8154296875
    3. 'inter' → logprob: -3.9404296875
    4. 'between' → logprob: -5.4404296875
    5. '```' → logprob: -5.6904296875
    6. '’intérieur' → logprob: -6.0654296875
    7. 'int' → logprob: -6.1904296875
    8. 't' → logprob: -6.4404296875
    9. '`' → logprob: -6.5654296875
    10. ''int' → logprob: -6.9404296875

Token 1023: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.36741286516189575
    2. 'a' → logprob: -2.367412805557251
    3. ' des' → logprob: -2.742412805557251
    4. 'between' → logprob: -2.992412805557251
    5. 'entre' → logprob: -2.992412805557251
    6. ')' → logprob: -4.99241304397583
    7. ' entre' → logprob: -5.11741304397583
    8. '(a' → logprob: -5.24241304397583
    9. 'of' → logprob: -5.24241304397583
    10. 's' → logprob: -5.36741304397583

Token 1024: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11234191805124283
    2. 't' → logprob: -3.11234188079834
    3. 's' → logprob: -3.36234188079834
    4. 'sub' → logprob: -4.36234188079834
    5. 'each' → logprob: -4.61234188079834
    6. 'la' → logprob: -6.36234188079834
    7. 'the' → logprob: -7.11234188079834
    8. 'l' → logprob: -7.23734188079834
    9. 'les' → logprob: -8.11234188079834
    10. 'liste' → logprob: -9.48734188079834

Token 1025: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0256297588348389
    2. 's' → logprob: -1.1506297588348389
    3. 'sub' → logprob: -2.150629758834839
    4. 'l' → logprob: -2.900629758834839
    5. 'liste' → logprob: -3.025629758834839
    6. 'a' → logprob: -3.900629758834839
    7. 't' → logprob: -4.150629997253418
    8. 'ss' → logprob: -4.150629997253418
    9. '```' → logprob: -4.775629997253418
    10. '`' → logprob: -4.775629997253418

Token 1026: '-l' (ID: 2887)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2060883492231369
    2. 'list' → logprob: -1.7060883045196533
    3. 'élé' → logprob: -6.456088542938232
    4. 'lists' → logprob: -7.206088542938232
    5. '-list' → logprob: -7.331088542938232
    6. '_list' → logprob: -7.456088542938232
    7. 'lista' → logprob: -8.456088066101074
    8. ' liste' → logprob: -8.456088066101074
    9. 'Liste' → logprob: -8.456088066101074
    10. 'listas' → logprob: -8.706088066101074

Token 1027: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.029018104076385498
    2. 'ist' → logprob: -3.6540181636810303
    3. 'liste' → logprob: -6.654017925262451
    4. 'a' → logprob: -8.02901840209961
    5. 'istes' → logprob: -8.52901840209961
    6. '```' → logprob: -8.90401840209961
    7. 'st' → logprob: -9.27901840209961
    8. 'i' → logprob: -9.52901840209961
    9. '`' → logprob: -9.52901840209961
    10. 'ite' → logprob: -9.65401840209961

Token 1028: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07170403748750687
    2. '):' → logprob: -3.321704149246216
    3. ')' → logprob: -3.696704149246216
    4. ')
' → logprob: -4.946703910827637
    5. '   ' → logprob: -6.821703910827637
    6. ')**' → logprob: -10.821703910827637
    7. '"):
' → logprob: -10.821703910827637
    8. '"""
' → logprob: -10.946703910827637
    9. '"):' → logprob: -11.946703910827637
    10. ''):
' → logprob: -12.321703910827637

Token 1029: '   ' (ID: 271)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22024881839752197
    2. '   ' → logprob: -1.720248818397522
    3. '"):
' → logprob: -4.845248699188232
    4. '):' → logprob: -4.970248699188232
    5. ')' → logprob: -5.970248699188232
    6. '"):' → logprob: -7.720248699188232
    7. '"""
' → logprob: -7.845248699188232
    8. ''):
' → logprob: -7.970248699188232
    9. 'def' → logprob: -10.22024917602539
    10. '")' → logprob: -10.72024917602539

Token 1030: ' Returns' (ID: 9609)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16536609828472137
    2. '   ' → logprob: -2.1653661727905273
    3. '):' → logprob: -3.6653661727905273
    4. ')' → logprob: -4.790366172790527
    5. '"):
' → logprob: -5.790366172790527
    6. '"""
' → logprob: -7.915366172790527
    7. '"):' → logprob: -8.290366172790527
    8. '")' → logprob: -9.915366172790527
    9. ''):
' → logprob: -10.790366172790527
    10. ')
' → logprob: -11.165366172790527

Token 1031: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23511824011802673
    2. '(a' → logprob: -1.6101182699203491
    3. '):
' → logprob: -5.860118389129639
    4. 'return' → logprob: -6.110118389129639
    5. ' (' → logprob: -7.360118389129639
    6. ')' → logprob: -7.485118389129639
    7. ' =' → logprob: -7.610118389129639
    8. ' return' → logprob: -7.735118389129639
    9. 'a' → logprob: -7.860118389129639
    10. '=' → logprob: -7.985118389129639

Token 1032: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20101287961006165
    2. 'sep' → logprob: -2.0760128498077393
    3. ' return' → logprob: -3.3260128498077393
    4. '   ' → logprob: -4.576013088226318
    5. 't' → logprob: -4.826013088226318
    6. 's' → logprob: -6.701013088226318
    7. ' sep' → logprob: -7.076013088226318
    8. ' t' → logprob: -8.45101261138916
    9. 'str' → logprob: -10.20101261138916
    10. ' s' → logprob: -10.95101261138916

Token 1033: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -2.176947600673884e-05
    2. ' str' → logprob: -10.750021934509277
    3. 's' → logprob: -15.625021934509277
    4. 'return' → logprob: -17.00002098083496
    5. '[str' → logprob: -17.50002098083496
    6. '(str' → logprob: -17.62502098083496
    7. 'list' → logprob: -17.75002098083496
    8. 'string' → logprob: -18.50002098083496
    9. '	str' → logprob: -19.50002098083496
    10. '"' → logprob: -20.12502098083496

Token 1034: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09411126375198364
    2. '=' → logprob: -3.344111204147339
    3. ' =' → logprob: -3.344111204147339
    4. ':' → logprob: -4.344111442565918
    5. ':
' → logprob: -5.344111442565918
    6. '(a' → logprob: -7.969111442565918
    7. '=
' → logprob: -8.344111442565918
    8. '):
' → logprob: -8.594111442565918
    9. 'return' → logprob: -8.969111442565918
    10. ':return' → logprob: -9.219111442565918

Token 1035: ' Cha' (ID: 37219)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01709042489528656
    2. 'sep' → logprob: -4.142090320587158
    3. 'return' → logprob: -7.392090320587158
    4. ' s' → logprob: -8.142090797424316
    5. '
' → logprob: -9.767090797424316
    6. 't' → logprob: -10.392090797424316
    7. '(s' → logprob: -11.142090797424316
    8. 'separator' → logprob: -11.142090797424316
    9. 'se' → logprob: -11.517090797424316
    10. ' sep' → logprob: -12.017090797424316

Token 1036: 'îne' (ID: 55188)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0336439609527588
    2. 'îne' → logprob: -1.5336439609527588
    3. 'n' → logprob: -1.6586439609527588
    4. '```' → logprob: -2.158643960952759
    5. '``' → logprob: -3.658643960952759
    6. 'in' → logprob: -4.15864372253418
    7. 'î' → logprob: -4.40864372253418
    8. 'ın' → logprob: -4.40864372253418
    9. '"' → logprob: -4.40864372253418
    10. ''''
' → logprob: -5.28364372253418

Token 1037: ' résult' (ID: 31657)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5399265289306641
    2. 'result' → logprob: -1.664926528930664
    3. '
' → logprob: -2.414926528930664
    4. 's' → logprob: -3.039926528930664
    5. '(
' → logprob: -3.539926528930664
    6. 'return' → logprob: -3.789926528930664
    7. ')' → logprob: -4.664926528930664
    8. 't' → logprob: -5.539926528930664
    9. '=' → logprob: -5.789926528930664
    10. ' =' → logprob: -5.914926528930664

Token 1038: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00013238313840702176
    2. '
' → logprob: -10.00013256072998
    3. 'nante' → logprob: -10.12513256072998
    4. ''''
' → logprob: -11.25013256072998
    5. '   ' → logprob: -11.25013256072998
    6. '"""
' → logprob: -11.62513256072998
    7. 'a' → logprob: -13.37513256072998
    8. 'e' → logprob: -13.62513256072998
    9. 'antee' → logprob: -13.75013256072998
    10. ')
' → logprob: -13.87513256072998

Token 1039: ' de' (ID: 334)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.3646390438079834
    2. '):
' → logprob: -1.3646390438079834
    3. '   ' → logprob: -1.4896390438079834
    4. '):' → logprob: -2.2396390438079834
    5. ')' → logprob: -2.3646390438079834
    6. '(a' → logprob: -3.4896390438079834
    7. ':' → logprob: -3.8646390438079834
    8. '(
' → logprob: -5.9896392822265625
    9. 'return' → logprob: -6.2396392822265625
    10. 'def' → logprob: -6.6146392822265625

Token 1040: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8072518706321716
    2. 'sep' → logprob: -1.1822519302368164
    3. 'a' → logprob: -1.5572519302368164
    4. 't' → logprob: -4.432251930236816
    5. 'la' → logprob: -5.432251930236816
    6. 'l' → logprob: -5.557251930236816
    7. 'sé' → logprob: -6.057251930236816
    8. '```' → logprob: -6.432251930236816
    9. 'joining' → logprob: -6.557251930236816
    10. 'join' → logprob: -6.557251930236816

Token 1041: ' joint' (ID: 14585)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24573524296283722
    2. 'join' → logprob: -1.6207352876663208
    3. 'joint' → logprob: -6.120735168457031
    4. ' a' → logprob: -6.245735168457031
    5. 'l' → logprob: -6.245735168457031
    6. 'joined' → logprob: -6.370735168457031
    7. '.join' → logprob: -6.495735168457031
    8. 'return' → logprob: -6.495735168457031
    9. 'joining' → logprob: -6.495735168457031
    10. 'j' → logprob: -7.370735168457031

Token 1042: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.46055373549461365
    2. 'ion' → logprob: -1.085553765296936
    3. 's' → logprob: -3.7105536460876465
    4. '```' → logprob: -5.9605536460876465
    5. 't' → logprob: -6.8355536460876465
    6. '(s' → logprob: -6.9605536460876465
    7. 'e' → logprob: -7.5855536460876465
    8. 'ions' → logprob: -7.7105536460876465
    9. 'o' → logprob: -8.085554122924805
    10. 'ures' → logprob: -8.835554122924805

Token 1043: '.
' (ID: 558)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.021732304245233536
    2. '   ' → logprob: -4.771732330322266
    3. ')' → logprob: -5.146732330322266
    4. 'a' → logprob: -5.521732330322266
    5. 'def' → logprob: -7.271732330322266
    6. '"""
' → logprob: -7.521732330322266
    7. '.' → logprob: -7.771732330322266
    8. ')
' → logprob: -7.896732330322266
    9. '```' → logprob: -8.146732330322266
    10. '(
' → logprob: -8.271732330322266

Token 1044: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07384158670902252
    2. '):
' → logprob: -2.9488415718078613
    3. ':
' → logprob: -5.073841571807861
    4. ':' → logprob: -5.698841571807861
    5. '):' → logprob: -5.698841571807861
    6. '():
' → logprob: -5.948841571807861
    7. 'def' → logprob: -6.823841571807861
    8. ')' → logprob: -7.323841571807861
    9. 'a' → logprob: -7.698841571807861
    10. '(a' → logprob: -7.823841571807861

Token 1045: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5724539756774902
    2. '):
' → logprob: -1.4474539756774902
    3. 'def' → logprob: -2.1974539756774902
    4. 'return' → logprob: -2.8224539756774902
    5. '"""
' (adapté à ' """
') → logprob: -4.07245397567749
    6. ')' → logprob: -4.57245397567749
    7. ')
' → logprob: -6.94745397567749
    8. '"):
' → logprob: -7.07245397567749
    9. '):' → logprob: -7.32245397567749
    10. '```' → logprob: -9.447454452514648

Token 1046: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2519882917404175
    2. '   ' → logprob: -1.5019882917404175
    3. 'def' → logprob: -10.626988410949707
    4. ' return' → logprob: -10.751988410949707
    5. '
' → logprob: -12.251988410949707
    6. '```' → logprob: -13.001988410949707
    7. 'ret' → logprob: -13.376988410949707
    8. '	return' → logprob: -13.501988410949707
    9. 'r' → logprob: -13.876988410949707
    10. 'a' → logprob: -14.251988410949707

Token 1047: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.630610641877865e-06
    2. ' return' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.375006675720215
    4. 'sep' → logprob: -15.375006675720215
    5. '
' → logprob: -18.0000057220459
    6. 's' → logprob: -18.3750057220459
    7. '	return' → logprob: -19.3750057220459
    8. 't' → logprob: -19.8750057220459
    9. '    
' → logprob: -20.0000057220459
    10. 'def' → logprob: -21.0000057220459

Token 1048: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.45848218582978e-06
    2. ' s' → logprob: -13.00000286102295
    3. '(s' → logprob: -15.75000286102295
    4. '
' → logprob: -17.625001907348633
    5. 'sep' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '{s' → logprob: -19.750001907348633
    8. '	s' → logprob: -20.250001907348633
    9. 'str' → logprob: -20.375001907348633
    10. 'a' → logprob: -20.875001907348633

Token 1049: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0001552665780764073
    2. '.' → logprob: -8.875155448913574
    3. 'join' → logprob: -11.125155448913574
    4. 'sep' → logprob: -15.500155448913574
    5. ' .' → logprob: -15.625155448913574
    6. '.j' → logprob: -16.625154495239258
    7. '.sep' → logprob: -16.750154495239258
    8. 't' → logprob: -17.000154495239258
    9. '.Join' → logprob: -17.375154495239258
    10. ').' → logprob: -17.875154495239258

Token 1050: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5002320408821106
    2. '([' → logprob: -1.3752319812774658
    3. '(J' → logprob: -2.000231981277466
    4. '[t' → logprob: -5.750232219696045
    5. '(map' → logprob: -6.750232219696045
    6. 't' → logprob: -7.500232219696045
    7. '(' → logprob: -8.750231742858887
    8. '[J' → logprob: -8.750231742858887
    9. '(
' → logprob: -9.125231742858887
    10. '((' → logprob: -10.000231742858887

Token 1051: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -5.300083648762666e-05
    2. 'join' → logprob: -9.875053405761719
    3. ').' → logprob: -14.250053405761719
    4. '.' → logprob: -14.375053405761719
    5. '.map' → logprob: -16.37505340576172
    6. '.j' → logprob: -16.50005340576172
    7. '(join' → logprob: -16.62505340576172
    8. ' .' → logprob: -17.50005340576172
    9. ')' → logprob: -17.87505340576172
    10. 'Join' → logprob: -18.25005340576172

Token 1052: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5963507294654846
    2. 'str' → logprob: -0.8463507294654846
    3. '(map' → logprob: -4.59635066986084
    4. '(str' → logprob: -4.59635066986084
    5. ' map' → logprob: -11.22135066986084
    6. '[str' → logprob: -11.84635066986084
    7. '	map' → logprob: -13.47135066986084
    8. ' str' → logprob: -13.47135066986084
    9. '.map' → logprob: -14.09635066986084
    10. '   ' → logprob: -14.34635066986084

Token 1053: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0032092039473354816
    2. '(str' → logprob: -5.753209114074707
    3. 's' → logprob: -11.253209114074707
    4. ' str' → logprob: -11.628209114074707
    5. '=str' → logprob: -12.253209114074707
    6. '[str' → logprob: -12.503209114074707
    7. ':str' → logprob: -15.003209114074707
    8. ')' → logprob: -15.128209114074707
    9. 'stra' → logprob: -15.878209114074707
    10. '	str' → logprob: -16.128210067749023

Token 1054: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055526528507471085
    2. ',x' → logprob: -3.4305264949798584
    3. ',row' → logprob: -4.3055267333984375
    4. '(x' → logprob: -6.0555267333984375
    5. ',line' → logprob: -6.6805267333984375
    6. '(row' → logprob: -6.9305267333984375
    7. ',y' → logprob: -6.9305267333984375
    8. 'row' → logprob: -7.4305267333984375
    9. ',item' → logprob: -8.055526733398438
    10. ',l' → logprob: -8.430526733398438

Token 1055: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07493466883897781
    2. 'row' → logprob: -3.199934720993042
    3. 'l' → logprob: -4.324934482574463
    4. 'r' → logprob: -4.949934482574463
    5. 'sub' → logprob: -5.449934482574463
    6. 'line' → logprob: -5.699934482574463
    7. 'b' → logprob: -7.324934482574463
    8. 'y' → logprob: -7.574934482574463
    9. 'e' → logprob: -7.699934482574463
    10. 'i' → logprob: -8.074934959411621

Token 1056: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06050838530063629
    2. 'a' → logprob: -3.5605084896087646
    3. ')' → logprob: -3.9355084896087646
    4. 'b' → logprob: -4.6855082511901855
    5. '(a' → logprob: -7.1855082511901855
    6. ')))' → logprob: -8.685508728027344
    7. ')b' → logprob: -8.685508728027344
    8. ')a' → logprob: -9.560508728027344
    9. '(x' → logprob: -9.685508728027344
    10. '])' → logprob: -10.185508728027344

Token 1057: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18295463919639587
    2. ')' → logprob: -2.4329545497894287
    3. '(b' → logprob: -3.3079545497894287
    4. ' for' → logprob: -3.3079545497894287
    5. 'b' → logprob: -5.307954788208008
    6. '(a' → logprob: -7.432954788208008
    7. '   ' → logprob: -7.807954788208008
    8. 'a' → logprob: -8.682954788208008
    9. ')b' → logprob: -10.057954788208008
    10. ' b' → logprob: -10.182954788208008

Token 1058: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009118211455643177
    2. ' b' → logprob: -7.000911712646484
    3. 'a' → logprob: -14.875911712646484
    4. '	b' → logprob: -19.375911712646484
    5. ')b' → logprob: -19.750911712646484
    6. ' a' → logprob: -21.375911712646484
    7. '$b' → logprob: -22.250911712646484
    8. ' ' → logprob: -22.375911712646484
    9. '(b' → logprob: -22.625911712646484
    10. ' б' → logprob: -22.875911712646484

Token 1059: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16041533648967743
    2. 'in' → logprob: -1.9104152917861938
    3. 'b' → logprob: -8.785415649414062
    4. 'a' → logprob: -10.535415649414062
    5. ' b' → logprob: -12.285415649414062
    6. ' ' → logprob: -12.785415649414062
    7. ')' → logprob: -13.285415649414062
    8. 'n' → logprob: -13.535415649414062
    9. ' a' → logprob: -14.535415649414062
    10. '<|end|>' → logprob: -14.910415649414062

Token 1060: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.1008713702030946e-06
    2. ' a' → logprob: -13.125001907348633
    3. '	a' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '(a' → logprob: -21.750001907348633
    6. 'а' → logprob: -21.875001907348633
    7. ')a' → logprob: -22.125001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '
' → logprob: -22.500001907348633
    10. '[a' → logprob: -22.625001907348633

Token 1061: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.250001907348633
    3. '))' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '())' → logprob: -16.375001907348633
    6. ')}' → logprob: -17.375001907348633
    7. '])' → logprob: -17.375001907348633
    8. ')#' → logprob: -17.375001907348633
    9. ')
' → logprob: -17.875001907348633
    10. ')`' → logprob: -18.000001907348633

Token 1062: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.280592143535614
    2. '#' → logprob: -1.6555922031402588
    3. '<|end|>' → logprob: -3.530592203140259
    4. '
' → logprob: -3.780592203140259
    5. '```' → logprob: -8.28059196472168
    6. '<|end|>' → logprob: -8.28059196472168
    7. 'class' → logprob: -8.40559196472168
    8. '\' → logprob: -8.78059196472168
    9. '

' → logprob: -8.90559196472168
    10. '\n' → logprob: -9.03059196472168

Token 1063: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.09459160268306732
    2. 'max' → logprob: -3.5945916175842285
    3. 'g' → logprob: -3.7195916175842285
    4. 'YES' → logprob: -4.4695916175842285
    5. 'yes' → logprob: -5.9695916175842285
    6. 'is' → logprob: -6.2195916175842285
    7. 'bis' → logprob: -6.2195916175842285
    8. 'pow' → logprob: -6.7195916175842285
    9. 'copy' → logprob: -6.7195916175842285
    10. 'G' → logprob: -6.8445916175842285

Token 1064: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.643152740551159e-05
    2. '():
' → logprob: -10.375036239624023
    3. ' ():' → logprob: -12.250036239624023
    4. '()' → logprob: -14.750036239624023
    5. '(' → logprob: -17.375036239624023
    6. '():
' → logprob: -18.500036239624023
    7. '():

' → logprob: -20.250036239624023
    8. '(":' → logprob: -20.750036239624023
    9. '(:' → logprob: -20.750036239624023
    10. ':' → logprob: -20.875036239624023

Token 1065: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6373748183250427
    2. '   ' → logprob: -0.7623748183250427
    3. ':' → logprob: -5.5123748779296875
    4. '():
' → logprob: -7.8873748779296875
    5. '()' → logprob: -8.762374877929688
    6. '```' → logprob: -10.012374877929688
    7. '    
' → logprob: -10.387374877929688
    8. ' ():' → logprob: -10.762374877929688
    9. '(' → logprob: -10.887374877929688
    10. '    ' → logprob: -11.012374877929688

Token 1066: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3758464455604553
    2. 'n' → logprob: -2.1258463859558105
    3. 'pass' → logprob: -2.7508463859558105
    4. ' pass' → logprob: -3.0008463859558105
    5. ' n' → logprob: -3.0008463859558105
    6. ' ' → logprob: -5.0008463859558105
    7. '(n' → logprob: -5.2508463859558105
    8. '()' → logprob: -5.6258463859558105
    9. '    ' → logprob: -6.2508463859558105
    10. '(' → logprob: -6.2508463859558105

Token 1067: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10074044018983841
    2. '   ' → logprob: -2.350740432739258
    3. 'N' → logprob: -8.350740432739258
    4. ' n' → logprob: -8.850740432739258
    5. 't' → logprob: -9.350740432739258
    6. 'a' → logprob: -11.100740432739258
    7. '#' → logprob: -11.850740432739258
    8. '
' → logprob: -12.100740432739258
    9. 'for' → logprob: -12.350740432739258
    10. '```' → logprob: -12.350740432739258

Token 1068: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04842258244752884
    2. ' pass' → logprob: -3.5484225749969482
    3. '#' → logprob: -5.173422813415527
    4. 'def' → logprob: -5.423422813415527
    5. 'pass' → logprob: -5.923422813415527
    6. ' #' → logprob: -6.548422813415527
    7. 'n' → logprob: -6.923422813415527
    8. ' n' → logprob: -7.048422813415527
    9. ' code' → logprob: -8.048422813415527
    10. ' lines' → logprob: -8.298422813415527

Token 1069: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5897669792175293
    2. '():' → logprob: -1.4647669792175293
    3. '   ' → logprob: -1.8397669792175293
    4. '():
' → logprob: -3.4647669792175293
    5. '()' → logprob: -4.839766979217529
    6. ' main' → logprob: -4.839766979217529
    7. ' def' → logprob: -5.589766979217529
    8. ':' → logprob: -6.839766979217529
    9. ' principale' → logprob: -7.464766979217529
    10. ' ():' → logprob: -7.714766979217529

Token 1070: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013772567035630345
    2. ':' → logprob: -7.001377105712891
    3. '():
' → logprob: -7.876377105712891
    4. '   ' → logprob: -9.87637710571289
    5. '()' → logprob: -11.12637710571289
    6. 'def' → logprob: -11.25137710571289
    7. ' ():' → logprob: -12.25137710571289
    8. ' :' → logprob: -13.87637710571289
    9. '):' → logprob: -14.87637710571289
    10. ':
' → logprob: -15.00137710571289

Token 1071: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.03798903897404671
    2. 'program' → logprob: -3.7879891395568848
    3. 'script' → logprob: -4.287989139556885
    4. 'code' → logprob: -7.412989139556885
    5. 'module' → logprob: -9.162988662719727
    6. ' programme' → logprob: -9.412988662719727
    7. '__' → logprob: -10.037988662719727
    8. '#' → logprob: -10.787988662719727
    9. 'programma' → logprob: -11.162988662719727
    10. 'programm' → logprob: -11.287988662719727

Token 1072: '.' (ID: 13)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015004323795437813
    2. ':' → logprob: -4.5150041580200195
    3. '():
' → logprob: -5.6400041580200195
    4. '   ' → logprob: -8.14000415802002
    5. '()' → logprob: -10.51500415802002
    6. '):' → logprob: -10.51500415802002
    7. ':
' → logprob: -10.89000415802002
    8. ' :' → logprob: -11.51500415802002
    9. ' ():' → logprob: -11.64000415802002
    10. 'def' → logprob: -11.76500415802002

Token 1073: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014810555148869753
    2. '    ' → logprob: -7.001481056213379
    3. '    
' → logprob: -8.376481056213379
    4. '
' → logprob: -9.001481056213379
    5. 'def' → logprob: -9.251481056213379
    6. '	pass' → logprob: -11.001481056213379
    7. '```' → logprob: -11.251481056213379
    8. ':' → logprob: -11.501481056213379
    9. '#' → logprob: -11.626481056213379
    10. '<|end|>' → logprob: -11.626481056213379

Token 1074: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5920005440711975
    2. '()' → logprob: -0.8420005440711975
    3. '():' → logprob: -4.717000484466553
    4. 'n' → logprob: -6.092000484466553
    5. 'def' → logprob: -6.842000484466553
    6. 't' → logprob: -7.467000484466553
    7. '()
' → logprob: -7.717000484466553
    8. 'le' → logprob: -7.717000484466553
    9. ' les' → logprob: -8.092000961303711
    10. 'les' → logprob: -8.467000961303711

Token 1075: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28004077076911926
    2. 'param' → logprob: -1.5300407409667969
    3. 'inputs' → logprob: -4.655040740966797
    4. 'params' → logprob: -5.155040740966797
    5. 'don' → logprob: -5.780040740966797
    6. 'data' → logprob: -6.030040740966797
    7. 'n' → logprob: -6.530040740966797
    8. ' données' → logprob: -6.655040740966797
    9. 'val' → logprob: -7.155040740966797
    10. ' paramètres' → logprob: -7.405040740966797

Token 1076: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026400621980428696
    2. '():' → logprob: -4.276400566101074
    3. ':' → logprob: -5.276400566101074
    4. '()' → logprob: -5.901400566101074
    5. ',' → logprob: -6.276400566101074
    6. 'n' → logprob: -7.276400566101074
    7. ' =' → logprob: -7.901400566101074
    8. '):' → logprob: -8.026400566101074
    9. 'import' → logprob: -8.151400566101074
    10. 'def' → logprob: -9.151400566101074

Token 1077: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.07201778888702393
    2. 'entrée' → logprob: -2.9470176696777344
    3. 'e' → logprob: -4.197017669677734
    4. ''ent' → logprob: -7.447017669677734
    5. '’entrée' → logprob: -7.447017669677734
    6. 'es' → logprob: -8.072017669677734
    7. ''' → logprob: -9.072017669677734
    8. 'input' → logprob: -9.322017669677734
    9. 'entr' → logprob: -10.197017669677734
    10. '__' → logprob: -10.572017669677734

Token 1078: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012785091064870358
    2. ',' → logprob: -4.887784957885742
    3. ':' → logprob: -5.387784957885742
    4. '():' → logprob: -7.887784957885742
    5. '()' → logprob: -9.887784957885742
    6. '    
' → logprob: -9.887784957885742
    7. '):' → logprob: -10.262784957885742
    8. '
' → logprob: -11.137784957885742
    9. '    ' → logprob: -11.512784957885742
    10. '.' → logprob: -11.762784957885742

Token 1079: ' ex' (ID: 513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058024669997394085
    2. '#' → logprob: -5.630802631378174
    3. 'n' → logprob: -6.505802631378174
    4. '    
' → logprob: -8.130802154541016
    5. '    ' → logprob: -9.005802154541016
    6. '
' → logprob: -9.630802154541016
    7. ' n' → logprob: -9.630802154541016
    8. ' #' → logprob: -9.755802154541016
    9. 'def' → logprob: -10.880802154541016
    10. 't' → logprob: -11.255802154541016

Token 1080: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.01902707852423191
    2. 'ecute' → logprob: -4.019027233123779
    3. '#' → logprob: -8.144026756286621
    4. '
' → logprob: -8.519026756286621
    5. 'é' → logprob: -8.894026756286621
    6. 'ec' → logprob: -8.894026756286621
    7. '#
' → logprob: -10.644026756286621
    8. '   ' → logprob: -10.894026756286621
    9. 'écut' → logprob: -11.019026756286621
    10. 'e' → logprob: -11.394026756286621

Token 1081: 'ute' (ID: 1331)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.5806094408035278
    2. 'éc' → logprob: -0.8306094408035278
    3. 'ec' → logprob: -5.580609321594238
    4. '   ' → logprob: -7.955609321594238
    5. 'e' → logprob: -8.705609321594238
    6. 'é' → logprob: -9.330609321594238
    7. 'écution' → logprob: -9.705609321594238
    8. '#' → logprob: -9.830609321594238
    9. 'écut' → logprob: -10.080609321594238
    10. 'è' → logprob: -10.080609321594238

Token 1082: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05012497305870056
    2. 'la' → logprob: -4.3001251220703125
    3. 'le' → logprob: -5.0501251220703125
    4. ' la' → logprob: -5.3001251220703125
    5. '```' → logprob: -5.5501251220703125
    6. '()' → logprob: -5.6751251220703125
    7. '#' → logprob: -5.8001251220703125
    8. ')' → logprob: -5.9251251220703125
    9. '):' → logprob: -5.9251251220703125
    10. 'def' → logprob: -6.1751251220703125

Token 1083: ' traitement' (ID: 42434)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9505876898765564
    2. 'calcul' → logprob: -0.9505876898765564
    3. 'pro' → logprob: -1.9505877494812012
    4. 'code' → logprob: -3.825587749481201
    5. '```' → logprob: -4.200587749481201
    6. 'problem' → logprob: -5.075587749481201
    7. 'rés' → logprob: -5.200587749481201
    8. 'process' → logprob: -5.700587749481201
    9. 'algorithm' → logprob: -5.825587749481201
    10. 'proble' → logprob: -5.950587749481201

Token 1084: ' dynamique' (ID: 98708)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013012451119720936
    2. ',' → logprob: -4.388012409210205
    3. '.' → logprob: -8.388012886047363
    4. 'import' → logprob: -9.388012886047363
    5. ':' → logprob: -10.263012886047363
    6. 'def' → logprob: -10.263012886047363
    7. '    
' → logprob: -10.513012886047363
    8. '#' → logprob: -11.388012886047363
    9. 'de' → logprob: -11.513012886047363
    10. 's' → logprob: -11.763012886047363

Token 1085: ' et' (ID: 859)
  Prédit: ' programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.19946511089801788
    2. 'program' → logprob: -1.8244651556015015
    3. '   ' → logprob: -4.574465274810791
    4. 'programm' → logprob: -5.949465274810791
    5. '_program' → logprob: -6.074465274810791
    6. ' programmation' → logprob: -6.449465274810791
    7. 'import' → logprob: -7.074465274810791
    8. 'def' → logprob: -7.574465274810791
    9. '
' → logprob: -7.949465274810791
    10. 'Programming' → logprob: -8.074464797973633

Token 1086: ' retourne' (ID: 178818)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.4850447475910187
    2. ' affiche' → logprob: -1.2350447177886963
    3. '   ' → logprob: -3.1100447177886963
    4. 'print' → logprob: -3.2350447177886963
    5. ' imprime' → logprob: -5.235044956207275
    6. ' print' → logprob: -6.360044956207275
    7. 'im' → logprob: -7.360044956207275
    8. '#' → logprob: -8.485044479370117
    9. 'produ' → logprob: -8.485044479370117
    10. 'af' → logprob: -8.610044479370117

Token 1087: ' le' (ID: 505)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5835267901420593
    2. '   ' → logprob: -1.208526849746704
    3. ' None' → logprob: -2.083526849746704
    4. 'result' → logprob: -5.458526611328125
    5. 'le' → logprob: -5.833526611328125
    6. 'la' → logprob: -5.958526611328125
    7. ' True' → logprob: -6.583526611328125
    8. 'True' → logprob: -6.708526611328125
    9. 'res' → logprob: -6.833526611328125
    10. 'pass' → logprob: -6.833526611328125

Token 1088: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.12447262555360794
    2. 'result' → logprob: -2.2494726181030273
    3. ' résultat' → logprob: -5.374472618103027
    4. 'res' → logprob: -5.499472618103027
    5. 'nombre' → logprob: -6.624472618103027
    6. 'r' → logprob: -7.874472618103027
    7. '
' → logprob: -7.999472618103027
    8. 's' → logprob: -8.374472618103027
    9. ' resultat' → logprob: -9.124472618103027
    10. '   ' → logprob: -9.249472618103027

Token 1089: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4686376750469208
    2. '():' → logprob: -1.0936377048492432
    3. ':' → logprob: -3.593637704849243
    4. '.' → logprob: -4.843637466430664
    5. '():
' → logprob: -5.968637466430664
    6. '()' → logprob: -7.593637466430664
    7. ':
' → logprob: -8.718637466430664
    8. '):' → logprob: -9.093637466430664
    9. '    
' → logprob: -9.093637466430664
    10. 'def' → logprob: -9.093637466430664

Token 1090: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5890226364135742
    2. '():' → logprob: -1.0890226364135742
    3. ':' → logprob: -2.589022636413574
    4. '.' → logprob: -3.589022636413574
    5. '):' → logprob: -5.714022636413574
    6. '()' → logprob: -6.589022636413574
    7. '():
' → logprob: -7.589022636413574
    8. ':
' → logprob: -8.589022636413574
    9. '
' → logprob: -9.214022636413574
    10. ' :' → logprob: -9.589022636413574

Token 1091: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008644593879580498
    2. ' mod' → logprob: -4.7586445808410645
    3. '(mod' → logprob: -10.508645057678223
    4. '
' → logprob: -13.883645057678223
    5. '10' → logprob: -14.258645057678223
    6. '	mod' → logprob: -15.133645057678223
    7. '```' → logprob: -15.633645057678223
    8. 'MOD' → logprob: -15.758645057678223
    9. '100' → logprob: -15.883645057678223
    10. ' ' → logprob: -16.008644104003906

Token 1092: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7065458297729492
    2. '.' → logprob: -1.4565458297729492
    3. ':' → logprob: -1.7065458297729492
    4. '):' → logprob: -3.331545829772949
    5. ':
' → logprob: -3.456545829772949
    6. '.
' → logprob: -4.706545829772949
    7. '):
' → logprob: -4.831545829772949
    8. ')' → logprob: -5.331545829772949
    9. '():' → logprob: -7.581545829772949
    10. ',' → logprob: -7.956545829772949

Token 1093: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.283809095621109
    2. ':' → logprob: -1.6588090658187866
    3. '):' → logprob: -3.158809185028076
    4. '.' → logprob: -5.283809185028076
    5. '():' → logprob: -5.408809185028076
    6. ':
' → logprob: -6.408809185028076
    7. ')' → logprob: -6.533809185028076
    8. '):
' → logprob: -7.158809185028076
    9. ',' → logprob: -8.283808708190918
    10. ' :' → logprob: -8.658808708190918

Token 1094: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001730391290038824
    2. ':' → logprob: -7.001730442047119
    3. '():' → logprob: -7.501730442047119
    4. '```' → logprob: -9.001729965209961
    5. '    
' → logprob: -9.376729965209961
    6. '):' → logprob: -11.626729965209961
    7. ':
' → logprob: -11.626729965209961
    8. '
' → logprob: -12.001729965209961
    9. '():
' → logprob: -12.251729965209961
    10. 'def' → logprob: -12.251729965209961

Token 1095: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013871431583538651
    2. ':' → logprob: -7.126387119293213
    3. '():' → logprob: -7.876387119293213
    4. ':
' → logprob: -10.126387596130371
    5. '):' → logprob: -10.126387596130371
    6. '
' → logprob: -10.251387596130371
    7. '```' → logprob: -10.751387596130371
    8. '    
' → logprob: -11.501387596130371
    9. ')' → logprob: -11.501387596130371
    10. '):
' → logprob: -11.501387596130371

Token 1096: ':
' (ID: 734)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.011106302961707115
    2. 'n' → logprob: -4.511106491088867
    3. '   ' → logprob: -10.511106491088867
    4. 'ns' → logprob: -11.511106491088867
    5. 'nes' → logprob: -11.761106491088867
    6. 'nne' → logprob: -11.886106491088867
    7. '
' → logprob: -13.761106491088867
    8. 'e' → logprob: -13.886106491088867
    9. 'rne' → logprob: -14.136106491088867
    10. 'neur' → logprob: -14.136106491088867

Token 1097: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004002891946583986
    2. 'def' → logprob: -6.629003047943115
    3. 'n' → logprob: -6.754003047943115
    4. '    ' → logprob: -7.754003047943115
    5. '    
' → logprob: -8.254002571105957
    6. '
' → logprob: -8.379002571105957
    7. '"""
' → logprob: -8.754002571105957
    8. '```' → logprob: -9.004002571105957
    9. '"""' → logprob: -10.004002571105957
    10. ':' → logprob: -10.504002571105957

Token 1098: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.011288084089756012
    2. 'None' → logprob: -4.511288166046143
    3. '   ' → logprob: -8.386287689208984
    4. ' int' → logprob: -12.386287689208984
    5. 'list' → logprob: -12.386287689208984
    6. ' None' → logprob: -13.636287689208984
    7. 'void' → logprob: -14.011287689208984
    8. '
' → logprob: -14.636287689208984
    9. 'none' → logprob: -14.761287689208984
    10. '[int' → logprob: -15.011287689208984

Token 1099: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02660413272678852
    2. ':
' → logprob: -3.651604175567627
    3. ' :' → logprob: -8.901603698730469
    4. '   ' → logprob: -8.901603698730469
    5. ' :
' → logprob: -11.651603698730469
    6. ':return' → logprob: -11.651603698730469
    7. ' =' → logprob: -12.776603698730469
    8. ':int' → logprob: -12.901603698730469
    9. ':
' → logprob: -13.526603698730469
    10. '
' → logprob: -13.526603698730469

Token 1100: ' Rés' (ID: 104378)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6653032302856445
    2. 'result' → logprob: -0.9153032302856445
    3. '   ' → logprob: -3.4153032302856445
    4. ' result' → logprob: -3.9153032302856445
    5. 'Le' → logprob: -4.7903032302856445
    6. ' int' → logprob: -5.0403032302856445
    7. 'None' → logprob: -5.4153032302856445
    8. 'res' → logprob: -5.9153032302856445
    9. 'La' → logprob: -6.4153032302856445
    10. 'final' → logprob: -6.5403032302856445

Token 1101: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.008630049414932728
    2. 'ult' → logprob: -4.758630275726318
    3. 'utat' → logprob: -12.25862979888916
    4. 'ulat' → logprob: -12.50862979888916
    5. '   ' → logprob: -12.75862979888916
    6. 'ulta' → logprob: -13.63362979888916
    7. 'ul' → logprob: -13.88362979888916
    8. '```' → logprob: -14.13362979888916
    9. 'ulti' → logprob: -14.63362979888916
    10. '       ' → logprob: -15.38362979888916

Token 1102: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.778656542301178
    2. ' =' → logprob: -0.903656542301178
    3. '=' → logprob: -2.778656482696533
    4. 'final' → logprob: -3.778656482696533
    5. ':' → logprob: -3.903656482696533
    6. '<|end|>' → logprob: -5.028656482696533
    7. ' final' → logprob: -5.778656482696533
    8. 'def' → logprob: -5.903656482696533
    9. 'mod' → logprob: -6.028656482696533
    10. '_final' → logprob: -6.153656482696533

Token 1103: ' calcul' (ID: 7559)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.7118271589279175
    2. 'calcul' → logprob: -0.9618271589279175
    3. 'main' → logprob: -2.211827278137207
    4. 'program' → logprob: -4.211827278137207
    5. '```' → logprob: -6.961827278137207
    6. 'pro' → logprob: -7.711827278137207
    7. 'programm' → logprob: -8.336827278137207
    8. 'code' → logprob: -8.461827278137207
    9. ' programme' → logprob: -8.586827278137207
    10. ' calcul' → logprob: -8.961827278137207

Token 1104: ' dynamique' (ID: 98708)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1753889322280884
    2. ' modulo' → logprob: -1.4253889322280884
    3. '   ' → logprob: -2.300388813018799
    4. '.' → logprob: -2.425388813018799
    5. ' mod' → logprob: -2.550388813018799
    6. ' final' → logprob: -2.925388813018799
    7. 'mod' → logprob: -3.300388813018799
    8. 'final' → logprob: -3.800388813018799
    9. '.
' → logprob: -4.425388813018799
    10. '```' → logprob: -4.550388813018799

Token 1105: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056457582861185074
    2. '():' → logprob: -3.80645751953125
    3. '():
' → logprob: -4.05645751953125
    4. ':' → logprob: -4.80645751953125
    5. '
' → logprob: -5.68145751953125
    6. ':
' → logprob: -6.55645751953125
    7. '    
' → logprob: -7.68145751953125
    8. '()' → logprob: -7.80645751953125
    9. 'def' → logprob: -7.93145751953125
    10. '):
' → logprob: -8.18145751953125

Token 1106: 'voir' (ID: 8991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012457970529794693
    2. 'n' → logprob: -5.387457847595215
    3. '(n' → logprob: -5.887457847595215
    4. 'dp' → logprob: -6.012457847595215
    5. ' )' → logprob: -7.387457847595215
    6. '   ' → logprob: -7.637457847595215
    7. ')n' → logprob: -8.387457847595215
    8. '):' → logprob: -8.762457847595215
    9. ' n' → logprob: -8.762457847595215
    10. '')' → logprob: -9.262457847595215

Token 1107: ' description' (ID: 6496)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.89301997423172
    2. ')' → logprob: -1.2680199146270752
    3. '"""
' → logprob: -2.018019914627075
    4. '"""' → logprob: -3.018019914627075
    5. ' la' → logprob: -3.893019914627075
    6. 'def' → logprob: -4.018020153045654
    7. '"' → logprob: -4.268020153045654
    8. '```' → logprob: -4.518020153045654
    9. ')
' → logprob: -4.893020153045654
    10. '
' → logprob: -5.018020153045654

Token 1108: ' ci' (ID: 7405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19537857174873352
    2. ')
' → logprob: -2.070378541946411
    3. ').' → logprob: -3.320378541946411
    4. '   ' → logprob: -5.32037878036499
    5. ').
' → logprob: -5.94537878036499
    6. '"""
' → logprob: -5.94537878036499
    7. ' du' → logprob: -6.57037878036499
    8. '
' → logprob: -6.82037878036499
    9. ' déta' → logprob: -8.195378303527832
    10. '"""' → logprob: -8.445378303527832

Token 1109: '-dessous' (ID: 76632)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8456308245658875
    2. ')' → logprob: -2.0956308841705322
    3. '   ' → logprob: -2.0956308841705322
    4. '):
' → logprob: -2.0956308841705322
    5. '"""
' → logprob: -2.0956308841705322
    6. '#' → logprob: -4.095630645751953
    7. ':
' → logprob: -4.470630645751953
    8. '       ' → logprob: -4.720630645751953
    9. '```' → logprob: -4.970630645751953
    10. '.
' → logprob: -5.220630645751953

Token 1110: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10705321282148361
    2. '   ' → logprob: -2.732053279876709
    3. ')
' → logprob: -3.357053279876709
    4. ').' → logprob: -6.982053279876709
    5. '):
' → logprob: -8.10705280303955
    6. '):' → logprob: -8.23205280303955
    7. '
' → logprob: -10.85705280303955
    8. ').
' → logprob: -10.85705280303955
    9. '```' → logprob: -11.23205280303955
    10. ')
' → logprob: -11.98205280303955

Token 1111: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014492308720946312
    2. '```' → logprob: -4.514492511749268
    3. '
' → logprob: -6.014492511749268
    4. '    
' → logprob: -7.764492511749268
    5. '):
' → logprob: -9.01449203491211
    6. '():
' → logprob: -9.63949203491211
    7. '``' → logprob: -9.76449203491211
    8. '    ' → logprob: -9.76449203491211
    9. '():' → logprob: -10.13949203491211
    10. ')' → logprob: -10.26449203491211

Token 1112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007741317385807633
    2. '
' → logprob: -7.875773906707764
    3. '    
' → logprob: -8.750774383544922
    4. 'def' → logprob: -9.250774383544922
    5. '"""' → logprob: -10.000774383544922
    6. ')' → logprob: -10.375774383544922
    7. '#' → logprob: -11.000774383544922
    8. '```' → logprob: -11.250774383544922
    9. '    ' → logprob: -12.125774383544922
    10. 'import' → logprob: -12.500774383544922

Token 1113: ' Description' (ID: 11664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004678730387240648
    2. 'n' → logprob: -5.754678726196289
    3. '
' → logprob: -7.879678726196289
    4. '    ' → logprob: -8.379678726196289
    5. '    
' → logprob: -8.754678726196289
    6. 'input' → logprob: -8.754678726196289
    7. 'N' → logprob: -9.254678726196289
    8. 'data' → logprob: -9.379678726196289
    9. '#' → logprob: -9.379678726196289
    10. ' n' → logprob: -9.504678726196289

Token 1114: ' algorithm' (ID: 22184)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6662983298301697
    2. '   ' → logprob: -0.7912983298301697
    3. ' =' → logprob: -4.0412983894348145
    4. ':
' → logprob: -4.9162983894348145
    5. '=' → logprob: -6.0412983894348145
    6. '():' → logprob: -6.2912983894348145
    7. ' :' → logprob: -6.9162983894348145
    8. 'def' → logprob: -7.4162983894348145
    9. '():
' → logprob: -7.6662983894348145
    10. '
' → logprob: -7.9162983894348145

Token 1115: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.00796172022819519
    2. 'e' → logprob: -5.007961750030518
    3. 'me' → logprob: -7.382961750030518
    4. '   ' → logprob: -8.50796127319336
    5. 'm' → logprob: -8.88296127319336
    6. '```' → logprob: -9.63296127319336
    7. 'ie' → logprob: -9.75796127319336
    8. '"""
' → logprob: -9.88296127319336
    9. 'ue' → logprob: -10.75796127319336
    10. 'iquement' → logprob: -10.75796127319336

Token 1116: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2985728681087494
    2. ':' → logprob: -1.6735728979110718
    3. ':
' → logprob: -3.1735727787017822
    4. '():
' → logprob: -4.298573017120361
    5. '():' → logprob: -4.798573017120361
    6. '
' → logprob: -5.923573017120361
    7. ' :' → logprob: -6.173573017120361
    8. ' :
' → logprob: -7.423573017120361
    9. 'def' → logprob: -7.548573017120361
    10. '#' → logprob: -8.298572540283203

Token 1117: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002911384915933013
    2. '    ' → logprob: -6.127911567687988
    3. '"""' → logprob: -8.127911567687988
    4. '"""
' → logprob: -9.002911567687988
    5. '#' → logprob: -9.502911567687988
    6. '
' → logprob: -9.877911567687988
    7. '    
' → logprob: -10.002911567687988
    8. 'def' → logprob: -10.752911567687988
    9. ' La' → logprob: -10.877911567687988
    10. 'La' → logprob: -11.127911567687988

Token 1118: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2301657348871231
    2. '#' → logprob: -2.105165719985962
    3. '   ' → logprob: -3.230165719985962
    4. 'N' → logprob: -3.730165719985962
    5. 'dp' → logprob: -5.230165958404541
    6. '"""
' → logprob: -5.730165958404541
    7. 'def' → logprob: -5.855165958404541
    8. ' n' → logprob: -6.605165958404541
    9. 'On' → logprob: -7.105165958404541
    10. 'from' → logprob: -7.230165958404541

Token 1119: ' Lit' (ID: 45595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10690882056951523
    2. 'N' → logprob: -2.6069087982177734
    3. '   ' → logprob: -3.7319087982177734
    4. ' n' → logprob: -6.731908798217773
    5. '#' → logprob: -6.981908798217773
    6. 'def' → logprob: -7.106908798217773
    7. 'import' → logprob: -8.481908798217773
    8. 'H' → logprob: -9.106908798217773
    9. 'from' → logprob: -9.231908798217773
    10. 'sys' → logprob: -9.356908798217773

Token 1120: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0695115327835083
    2. '   ' → logprob: -1.1945115327835083
    3. '()' → logprob: -1.1945115327835083
    4. 'le' → logprob: -3.6945114135742188
    5. 'la' → logprob: -4.944511413574219
    6. 'l' → logprob: -5.694511413574219
    7. 'int' → logprob: -5.694511413574219
    8. '(n' → logprob: -6.069511413574219
    9. 'les' → logprob: -6.444511413574219
    10. 'a' → logprob: -6.444511413574219

Token 1121: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.711780309677124
    2. 'n' → logprob: -1.586780309677124
    3. '(n' → logprob: -2.336780309677124
    4. 'ints' → logprob: -3.086780309677124
    5. ' n' → logprob: -3.211780309677124
    6. '   ' → logprob: -3.461780309677124
    7. '()' → logprob: -3.711780309677124
    8. 'int' → logprob: -4.336780548095703
    9. 'inte' → logprob: -4.836780548095703
    10. '(N' → logprob: -4.961780548095703

Token 1122: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.7394185066223145
    2. 't' → logprob: -1.7394185066223145
    3. 'er' → logprob: -2.4894185066223145
    4. 'ier' → logprob: -2.6144185066223145
    5. 's' → logprob: -2.7394185066223145
    6. 'ities' → logprob: -2.9894185066223145
    7. '```' → logprob: -4.3644185066223145
    8. '   ' → logprob: -4.6144185066223145
    9. 'ries' → logprob: -4.8644185066223145
    10. 'e' → logprob: -5.1144185066223145

Token 1123: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0978216901421547
    2. 'n' → logprob: -2.5978217124938965
    3. '(n' → logprob: -4.3478217124938965
    4. '   ' → logprob: -6.7228217124938965
    5. ' n' → logprob: -7.0978217124938965
    6. ',' → logprob: -7.0978217124938965
    7. '(),' → logprob: -7.3478217124938965
    8. '().' → logprob: -7.4728217124938965
    9. ' =' → logprob: -7.9728217124938965
    10. '()
' → logprob: -8.222821235656738

Token 1124: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047714399988763034
    2. ' ,' → logprob: -8.125476837158203
    3. '   ' → logprob: -9.500476837158203
    4. ',n' → logprob: -9.625476837158203
    5. ' ' → logprob: -10.625476837158203
    6. ' =' → logprob: -12.250476837158203
    7. ',
' → logprob: -13.250476837158203
    8. ')' → logprob: -13.750476837158203
    9. '=' → logprob: -13.750476837158203
    10. '(),' → logprob: -13.750476837158203

Token 1125: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0014748680405318737
    2. 'k' → logprob: -6.751474857330322
    3. ' m' → logprob: -8.12647533416748
    4. 'x' → logprob: -13.12647533416748
    5. 'q' → logprob: -13.25147533416748
    6. 's' → logprob: -13.50147533416748
    7. 'p' → logprob: -13.87647533416748
    8. 'd' → logprob: -13.87647533416748
    9. ' k' → logprob: -14.25147533416748
    10. 'a' → logprob: -15.12647533416748

Token 1126: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07054728269577026
    2. ',' → logprob: -3.320547342300415
    3. '=' → logprob: -3.445547342300415
    4. 's' → logprob: -10.570547103881836
    5. '   ' → logprob: -11.070547103881836
    6. ')' → logprob: -11.320547103881836
    7. ',n' → logprob: -11.945547103881836
    8. 'n' → logprob: -12.570547103881836
    9. '=input' → logprob: -12.570547103881836
    10. '=int' → logprob: -12.695547103881836

Token 1127: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026359455659985542
    2. ',' → logprob: -6.252635955810547
    3. '    
' → logprob: -8.877635955810547
    4. 'n' → logprob: -9.002635955810547
    5. '    ' → logprob: -9.252635955810547
    6. '(n' → logprob: -9.377635955810547
    7. '
' → logprob: -9.627635955810547
    8. ':' → logprob: -9.752635955810547
    9. ')' → logprob: -10.502635955810547
    10. 'def' → logprob: -11.002635955810547

Token 1128: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3609306514263153
    2. 'n' → logprob: -2.1109306812286377
    3. '\n' → logprob: -2.4859306812286377
    4. '
' → logprob: -2.9859306812286377
    5. '    
' → logprob: -4.485930442810059
    6. 'a' → logprob: -4.860930442810059
    7. 'x' → logprob: -5.485930442810059
    8. ' n' → logprob: -5.485930442810059
    9. 'line' → logprob: -6.360930442810059
    10. ' 
' → logprob: -6.360930442810059

Token 1129: ' Lit' (ID: 45595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06545652449131012
    2. 'n' → logprob: -3.1904566287994385
    3. '   ' → logprob: -4.815456390380859
    4. ' a' → logprob: -5.315456390380859
    5. 'arr' → logprob: -5.565456390380859
    6. 'dp' → logprob: -6.565456390380859
    7. 'A' → logprob: -6.815456390380859
    8. ' n' → logprob: -7.190456390380859
    9. 'x' → logprob: -7.315456390380859
    10. 'd' → logprob: -8.56545639038086

Token 1130: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5464808344841003
    2. 'n' → logprob: -1.2964808940887451
    3. ' n' → logprob: -2.296480894088745
    4. '   ' → logprob: -4.296480655670166
    5. 'LI' → logprob: -4.671480655670166
    6. '()[' → logprob: -6.046480655670166
    7. ' LI' → logprob: -6.046480655670166
    8. ' ' → logprob: -6.171480655670166
    9. '2' → logprob: -6.171480655670166
    10. '(n' → logprob: -6.171480655670166

Token 1131: ' liste' (ID: 31719)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.1831660270690918
    2. ' =' → logprob: -1.6831660270690918
    3. 'n' → logprob: -2.058166027069092
    4. '   ' → logprob: -2.808166027069092
    5. 'liste' → logprob: -2.808166027069092
    6. 'l' → logprob: -3.308166027069092
    7. 'list' → logprob: -3.433166027069092
    8. 'a' → logprob: -3.808166027069092
    9. ' ' → logprob: -4.058166027069092
    10. ',' → logprob: -4.308166027069092

Token 1132: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3987680673599243
    2. '()' → logprob: -1.5237680673599243
    3. 'n' → logprob: -1.7737680673599243
    4. '(n' → logprob: -1.7737680673599243
    5. ',' → logprob: -2.8987679481506348
    6. 'a' → logprob: -3.8987679481506348
    7. 'de' → logprob: -4.023767948150635
    8. 's' → logprob: -4.023767948150635
    9. ' =' → logprob: -4.398767948150635
    10. ' des' → logprob: -4.898767948150635

Token 1133: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.028401298448443413
    2. '(int' → logprob: -4.4034013748168945
    3. '[int' → logprob: -4.9034013748168945
    4. 'ints' → logprob: -5.0284013748168945
    5. '()' → logprob: -7.2784013748168945
    6. ']int' → logprob: -8.028401374816895
    7. 'n' → logprob: -8.403401374816895
    8. '=int' → logprob: -8.903401374816895
    9. ' int' → logprob: -9.153401374816895
    10. '<int' → logprob: -9.903401374816895

Token 1134: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9324442744255066
    2. 'ints' → logprob: -1.6824443340301514
    3. ' integers' → logprob: -2.1824443340301514
    4. 'inte' → logprob: -2.1824443340301514
    5. '(int' → logprob: -2.5574443340301514
    6. ',' → logprob: -3.6824443340301514
    7. ',int' → logprob: -3.8074443340301514
    8. '[int' → logprob: -3.9324443340301514
    9. '()' → logprob: -4.932444095611572
    10. 's' → logprob: -5.057444095611572

Token 1135: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02118529938161373
    2. 's' → logprob: -3.8961853981018066
    3. 'er' → logprob: -8.771184921264648
    4. '[]' → logprob: -9.896184921264648
    5. 'r' → logprob: -10.146184921264648
    6. 'ers' → logprob: -10.146184921264648
    7. 'ier' → logprob: -10.271184921264648
    8. '```' → logprob: -10.271184921264648
    9. 'ières' → logprob: -10.396184921264648
    10. 'es' → logprob: -10.521184921264648

Token 1136: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017986509948968887
    2. ' =' → logprob: -4.642986297607422
    3. 'n' → logprob: -6.267986297607422
    4. '()' → logprob: -6.642986297607422
    5. '
' → logprob: -6.767986297607422
    6. '(n' → logprob: -6.767986297607422
    7. '=' → logprob: -7.892986297607422
    8. '()
' → logprob: -7.892986297607422
    9. '    
' → logprob: -8.017986297607422
    10. ',' → logprob: -8.017986297607422

Token 1137: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4035031795501709
    2. ' =' → logprob: -1.778503179550171
    3. ',' → logprob: -2.403503179550171
    4. '=' → logprob: -3.528503179550171
    5. ')' → logprob: -3.778503179550171
    6. ',
' → logprob: -5.15350341796875
    7. '
' → logprob: -5.15350341796875
    8. '    
' → logprob: -6.52850341796875
    9. ' ' → logprob: -7.15350341796875
    10. 's' → logprob: -7.15350341796875

Token 1138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016501151025295258
    2. '
' → logprob: -4.516500949859619
    3. '    
' → logprob: -5.266500949859619
    4. 'def' → logprob: -9.516501426696777
    5. ')' → logprob: -10.516501426696777
    6. '  
' → logprob: -10.766501426696777
    7. '```' → logprob: -10.891501426696777
    8. ')
' → logprob: -11.016501426696777
    9. '\n' → logprob: -11.141501426696777
    10. ',' → logprob: -11.141501426696777

Token 1139: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025393251329660416
    2. 'n' → logprob: -3.77539324760437
    3. '
' → logprob: -6.900393486022949
    4. '    
' → logprob: -8.27539348602295
    5. '```' → logprob: -8.27539348602295
    6. '(n' → logprob: -8.52539348602295
    7. 'x' → logprob: -9.02539348602295
    8. 's' → logprob: -9.90039348602295
    9. '       ' → logprob: -9.90039348602295
    10. 'a' → logprob: -9.90039348602295

Token 1140: ' Met' (ID: 7227)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005686411168426275
    2. 's' → logprob: -9.000568389892578
    3. 'd' → logprob: -9.250568389892578
    4. '   ' → logprob: -9.500568389892578
    5. '#' → logprob: -9.625568389892578
    6. ' dp' → logprob: -10.000568389892578
    7. 'b' → logprob: -10.250568389892578
    8. 'for' → logprob: -10.500568389892578
    9. 'f' → logprob: -10.875568389892578
    10. '
' → logprob: -11.125568389892578

Token 1141: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437288522720337
    2. 'a' → logprob: -1.0187288522720337
    3. ' a' → logprob: -3.393728733062744
    4. 'ion' → logprob: -4.143728733062744
    5. 'for' → logprob: -4.768728733062744
    6. ' à' → logprob: -4.893728733062744
    7. 'tle' → logprob: -5.018728733062744
    8. 'def' → logprob: -5.143728733062744
    9. '```' → logprob: -5.268728733062744
    10. ' ' → logprob: -5.768728733062744

Token 1142: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0014213069807738066
    2. 'oe' → logprob: -7.7514214515686035
    3. '_place' → logprob: -7.8764214515686035
    4. ' place' → logprob: -8.001420974731445
    5. 'cache' → logprob: -9.126420974731445
    6. 'œ' → logprob: -9.751420974731445
    7. 'uvre' → logprob: -11.251420974731445
    8. 'plac' → logprob: -11.626420974731445
    9. 'def' → logprob: -11.876420974731445
    10. '__' → logprob: -12.001420974731445

Token 1143: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010075619211420417
    2. '   ' → logprob: -7.251007556915283
    3. '```' → logprob: -9.001008033752441
    4. ' dp' → logprob: -9.126008033752441
    5. 'a' → logprob: -10.751008033752441
    6. 'n' → logprob: -11.376008033752441
    7. '_dp' → logprob: -11.876008033752441
    8. '``' → logprob: -12.001008033752441
    9. 'd' → logprob: -12.001008033752441
    10. '#' → logprob: -13.251008033752441

Token 1144: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005883168429136276
    2. 'table' → logprob: -5.38088321685791
    3. ' dp' → logprob: -7.25588321685791
    4. 'd' → logprob: -8.63088321685791
    5. '
' → logprob: -8.88088321685791
    6. ' tableau' → logprob: -9.50588321685791
    7. 'DP' → logprob: -9.75588321685791
    8. '#' → logprob: -11.00588321685791
    9. '_dp' → logprob: -11.25588321685791
    10. '   ' → logprob: -11.50588321685791

Token 1145: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010031824931502342
    2. ' dp' → logprob: -4.760031700134277
    3. ' de' → logprob: -7.885031700134277
    4. 'd' → logprob: -8.260031700134277
    5. '_dp' → logprob: -8.260031700134277
    6. 'DP' → logprob: -8.510031700134277
    7. ' =' → logprob: -9.010031700134277
    8. 'de' → logprob: -9.635031700134277
    9. '   ' → logprob: -10.260031700134277
    10. '[' → logprob: -10.760031700134277

Token 1146: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007625199854373932
    2. ' dp' → logprob: -5.507625102996826
    3. '   ' → logprob: -5.757625102996826
    4. 'd' → logprob: -9.007625579833984
    5. ' =' → logprob: -10.007625579833984
    6. '_dp' → logprob: -10.007625579833984
    7. '(dp' → logprob: -10.257625579833984
    8. '```' → logprob: -10.382625579833984
    9. '
' → logprob: -10.757625579833984
    10. 'DP' → logprob: -11.132625579833984

Token 1147: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002754472428932786
    2. '   ' → logprob: -6.3777546882629395
    3. '=' → logprob: -7.2527546882629395
    4. '=[' → logprob: -9.127754211425781
    5. '
' → logprob: -9.627754211425781
    6. '[n' → logprob: -10.252754211425781
    7. 'n' → logprob: -10.752754211425781
    8. ',' → logprob: -11.002754211425781
    9. 's' → logprob: -11.252754211425781
    10. '(n' → logprob: -11.752754211425781

Token 1148: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07004846632480621
    2. ' dp' → logprob: -2.8200485706329346
    3. '   ' → logprob: -6.0700483322143555
    4. '[' → logprob: -6.4450483322143555
    5. '
' → logprob: -7.1950483322143555
    6. '0' → logprob: -7.8200483322143555
    7. 'i' → logprob: -7.8200483322143555
    8. ']' → logprob: -7.9450483322143555
    9. '[i' → logprob: -8.070048332214355
    10. '```' → logprob: -8.195048332214355

Token 1149: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2764989733695984
    2. '=' → logprob: -1.5264990329742432
    3. '[n' → logprob: -4.901498794555664
    4. '[' → logprob: -5.151498794555664
    5. '=[' → logprob: -5.526498794555664
    6. '[i' → logprob: -6.526498794555664
    7. 's' → logprob: -6.526498794555664
    8. '```' → logprob: -6.901498794555664
    9. '   ' → logprob: -7.401498794555664
    10. '[s' → logprob: -7.526498794555664

Token 1150: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.645197868347168
    2. ']' → logprob: -0.770197868347168
    3. ']=' → logprob: -5.645197868347168
    4. ' ][' → logprob: -6.020197868347168
    5. '[x' → logprob: -6.145197868347168
    6. '   ' → logprob: -6.520197868347168
    7. ' ]' → logprob: -7.020197868347168
    8. '[' → logprob: -7.895197868347168
    9. '])' → logprob: -8.895197868347168
    10. '][]' → logprob: -9.020197868347168

Token 1151: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7075012922286987
    2. '[x' → logprob: -1.4575012922286987
    3. ' =' → logprob: -1.8325012922286987
    4. ']' → logprob: -3.0825014114379883
    5. '=[' → logprob: -3.8325014114379883
    6. '[' → logprob: -3.9575014114379883
    7. '][' → logprob: -4.332501411437988
    8. '[i' → logprob: -5.707501411437988
    9. '```' → logprob: -5.707501411437988
    10. '   ' → logprob: -6.457501411437988

Token 1152: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.486285924911499
    2. 'la' → logprob: -1.486285924911499
    3. 'le' → logprob: -1.986285924911499
    4. '0' → logprob: -2.111285924911499
    5. ' la' → logprob: -2.486285924911499
    6. ' [' → logprob: -2.611285924911499
    7. ' le' → logprob: -3.486285924911499
    8. 'True' → logprob: -3.861285924911499
    9. '   ' → logprob: -3.986285924911499
    10. 'dp' → logprob: -4.236286163330078

Token 1153: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0447164848446846
    2. ' nombre' → logprob: -3.1697165966033936
    3. 'number' → logprob: -6.7947163581848145
    4. 'nb' → logprob: -8.669716835021973
    5. '0' → logprob: -8.919716835021973
    6. ' number' → logprob: -9.419716835021973
    7. 'Nombre' → logprob: -10.044716835021973
    8. 'num' → logprob: -10.294716835021973
    9. 'n' → logprob: -10.419716835021973
    10. 'x' → logprob: -10.419716835021973

Token 1154: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.357490062713623
    2. 's' → logprob: -1.732490062713623
    3. ' de' → logprob: -1.732490062713623
    4. '[' → logprob: -1.857490062713623
    5. '   ' → logprob: -2.857490062713623
    6. '[x' → logprob: -3.232490062713623
    7. ' des' → logprob: -3.732490062713623
    8. '_de' → logprob: -4.232490062713623
    9. '```' → logprob: -4.357490062713623
    10. ' d' → logprob: -4.482490062713623

Token 1155: ' façons' (ID: 165958)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.6440579295158386
    2. '_' → logprob: -2.1440579891204834
    3. ']' → logprob: -2.7690579891204834
    4. ')' → logprob: -2.7690579891204834
    5. 's' → logprob: -3.3940579891204834
    6. 'x' → logprob: -3.5190579891204834
    7. ' ' → logprob: -3.7690579891204834
    8. '[' → logprob: -3.7690579891204834
    9. ' ]' → logprob: -3.7690579891204834
    10. ' x' → logprob: -3.8940579891204834

Token 1156: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8628581762313843
    2. 'de' → logprob: -1.3628581762313843
    3. 'd' → logprob: -2.612858295440674
    4. ' d' → logprob: -2.612858295440674
    5. '[x' → logprob: -3.112858295440674
    6. ')' → logprob: -3.362858295440674
    7. 'dp' → logprob: -3.612858295440674
    8. '   ' → logprob: -3.737858295440674
    9. '(x' → logprob: -4.237858295440674
    10. 'x' → logprob: -5.112858295440674

Token 1157: ''obtenir' (ID: 191633)
  Prédit: ''avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''avoir' → logprob: -1.5936962366104126
    2. 'e' → logprob: -1.8436962366104126
    3. ''obtenir' → logprob: -1.8436962366104126
    4. '_' → logprob: -1.9686962366104126
    5. ''utiliser' → logprob: -2.593696117401123
    6. ''' → logprob: -2.843696117401123
    7. ' ' → logprob: -3.468696117401123
    8. '`' → logprob: -3.968696117401123
    9. 'a' → logprob: -3.968696117401123
    10. '   ' → logprob: -4.093696117401123

Token 1158: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014591929502785206
    2. ' x' → logprob: -4.264591693878174
    3. '[x' → logprob: -8.389592170715332
    4. '   ' → logprob: -9.389592170715332
    5. 's' → logprob: -10.139592170715332
    6. '
' → logprob: -11.264592170715332
    7. 'dp' → logprob: -11.264592170715332
    8. '0' → logprob: -11.639592170715332
    9. '```' → logprob: -12.139592170715332
    10. ' s' → logprob: -12.139592170715332

Token 1159: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21534134447574615
    2. ' somme' → logprob: -2.340341329574585
    3. 'x' → logprob: -3.090341329574585
    4. ' s' → logprob: -3.715341329574585
    5. 'som' → logprob: -4.340341567993164
    6. 'val' → logprob: -4.965341567993164
    7. 'sum' → logprob: -6.215341567993164
    8. ' som' → logprob: -6.340341567993164
    9. ' x' → logprob: -6.590341567993164
    10. '   ' → logprob: -8.090341567993164

Token 1160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7533603310585022
    2. ' x' → logprob: -2.1283602714538574
    3. ' =' → logprob: -2.2533602714538574
    4. '_' → logprob: -3.1283602714538574
    5. '[x' → logprob: -3.1283602714538574
    6. ' de' → logprob: -3.7533602714538574
    7. 'de' → logprob: -3.7533602714538574
    8. 'dp' → logprob: -3.8783602714538574
    9. '(x' → logprob: -4.253360271453857
    10. '=' → logprob: -4.253360271453857

Token 1161: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5913074612617493
    2. '+' → logprob: -1.8413074016571045
    3. ' +' → logprob: -1.9663074016571045
    4. ' avec' → logprob: -3.5913074016571045
    5. ' par' → logprob: -3.8413074016571045
    6. 'dp' → logprob: -3.8413074016571045
    7. ' de' → logprob: -3.9663074016571045
    8. ' dp' → logprob: -4.591307640075684
    9. '```' → logprob: -4.591307640075684
    10. ',' → logprob: -4.841307640075684

Token 1162: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9948058128356934
    2. '0' → logprob: -1.3698058128356934
    3. 'les' → logprob: -2.8698058128356934
    4. 'dp' → logprob: -2.8698058128356934
    5. ' les' → logprob: -2.9948058128356934
    6. 'x' → logprob: -2.9948058128356934
    7. 'n' → logprob: -3.3698058128356934
    8. 'la' → logprob: -3.4948058128356934
    9. ' la' → logprob: -4.119805812835693
    10. 'i' → logprob: -4.244805812835693

Token 1163: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13838054239749908
    2. ' a' → logprob: -2.888380527496338
    3. 'élé' → logprob: -3.263380527496338
    4. ' éléments' → logprob: -4.513380527496338
    5. 'elements' → logprob: -5.138380527496338
    6. ' nombres' → logprob: -5.138380527496338
    7. ' elements' → logprob: -5.513380527496338
    8. '   ' → logprob: -5.638380527496338
    9. 'nombre' → logprob: -6.888380527496338
    10. 'val' → logprob: -7.513380527496338

Token 1164: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7041034698486328
    2. 'a' → logprob: -1.3291034698486328
    3. '   ' → logprob: -2.079103469848633
    4. 'de' → logprob: -2.954103469848633
    5. ' a' → logprob: -3.204103469848633
    6. ' suivants' → logprob: -5.579103469848633
    7. '    ' → logprob: -5.704103469848633
    8. ' disponibles' → logprob: -5.954103469848633
    9. 'd' → logprob: -6.204103469848633
    10. '[]' → logprob: -6.329103469848633

Token 1165: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014776951633393764
    2. 'la' → logprob: -4.639777183532715
    3. ' a' → logprob: -5.764777183532715
    4. ' la' → logprob: -6.764777183532715
    5. 'l' → logprob: -7.389777183532715
    6. '`' → logprob: -10.514777183532715
    7. '```' → logprob: -10.889777183532715
    8. '   ' → logprob: -11.514777183532715
    9. 'liste' → logprob: -11.639777183532715
    10. '#' → logprob: -12.264777183532715

Token 1166: ' considér' (ID: 68502)
  Prédit: '.
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.
' → logprob: -0.8103812336921692
    2. '   ' → logprob: -1.0603811740875244
    3. '
' → logprob: -1.8103811740875244
    4. '.' → logprob: -4.1853814125061035
    5. ')
' → logprob: -5.1853814125061035
    6. ',' → logprob: -5.6853814125061035
    7. ']
' → logprob: -5.9353814125061035
    8. ').
' → logprob: -5.9353814125061035
    9. 'dp' → logprob: -6.4353814125061035
    10. ',
' → logprob: -6.6853814125061035

Token 1167: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0733109712600708
    2. 's' → logprob: -3.9483108520507812
    3. 'es' → logprob: -4.198310852050781
    4. '```' → logprob: -4.698310852050781
    5. 'r' → logprob: -5.323310852050781
    6. 'é' → logprob: -5.323310852050781
    7. '#' → logprob: -5.323310852050781
    8. 'e' → logprob: -6.073310852050781
    9. 'def' → logprob: -6.823310852050781
    10. '0' → logprob: -7.073310852050781

Token 1168: ' jusqu' (ID: 21961)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7592368125915527
    2. ' jusqu' → logprob: -0.8842368125915527
    3. '   ' → logprob: -3.7592368125915527
    4. '[]' → logprob: -4.259236812591553
    5. '[' → logprob: -4.384236812591553
    6. ' jusque' → logprob: -4.384236812591553
    7. '[j' → logprob: -4.634236812591553
    8. ',' → logprob: -4.884236812591553
    9. 's' → logprob: -4.884236812591553
    10. 'jus' → logprob: -5.259236812591553

Token 1169: ''ici' (ID: 162066)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.029214369133114815
    2. 'à' → logprob: -4.154214382171631
    3. ''au' → logprob: -5.404214382171631
    4. 'a' → logprob: -5.654214382171631
    5. ''ici' → logprob: -5.779214382171631
    6. 'au' → logprob: -7.654214382171631
    7. '’à' → logprob: -7.779214382171631
    8. '`' → logprob: -8.404213905334473
    9. ''a' → logprob: -8.654213905334473
    10. '```' → logprob: -8.779213905334473

Token 1170: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16650468111038208
    2. '.' → logprob: -2.6665046215057373
    3. '.
' → logprob: -2.6665046215057373
    4. '
' → logprob: -5.041504859924316
    5. ']' → logprob: -6.041504859924316
    6. ')' → logprob: -6.791504859924316
    7. '```' → logprob: -7.291504859924316
    8. '`' → logprob: -7.666504859924316
    9. '].' → logprob: -8.041504859924316
    10. 'def' → logprob: -8.041504859924316

Token 1171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025784850120544434
    2. '
' → logprob: -3.900784969329834
    3. ':' → logprob: -6.025784969329834
    4. '```' → logprob: -6.900784969329834
    5. '    
' → logprob: -7.275784969329834
    6. '(n' → logprob: -8.150784492492676
    7. 'def' → logprob: -8.150784492492676
    8. ':
' → logprob: -8.775784492492676
    9. '():' → logprob: -9.025784492492676
    10. ' :' → logprob: -10.275784492492676

Token 1172: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017704296857118607
    2. '
' → logprob: -4.142704486846924
    3. '    
' → logprob: -7.142704486846924
    4. '```' → logprob: -8.392704010009766
    5. 'dp' → logprob: -8.892704010009766
    6. '\n' → logprob: -8.892704010009766
    7. '\' → logprob: -9.517704010009766
    8. '    ' → logprob: -10.017704010009766
    9. ')' → logprob: -10.142704010009766
    10. 'def' → logprob: -10.142704010009766

Token 1173: ' Effect' (ID: 22448)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06394334137439728
    2. 'a' → logprob: -2.938943386077881
    3. 'for' → logprob: -5.063943386077881
    4. '   ' → logprob: -6.563943386077881
    5. 'n' → logprob: -7.438943386077881
    6. 'def' → logprob: -8.188942909240723
    7. '#' → logprob: -8.938942909240723
    8. ' dp' → logprob: -9.063942909240723
    9. '```' → logprob: -9.563942909240723
    10. ' for' → logprob: -10.313942909240723

Token 1174: 'ue' (ID: 466)
  Prédit: 'uer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.07926780730485916
    2. 'ue' → logprob: -3.954267740249634
    3. 'if' → logprob: -4.079267978668213
    4. '   ' → logprob: -4.579267978668213
    5. 'u' → logprob: -4.704267978668213
    6. 'ivement' → logprob: -5.579267978668213
    7. 'ive' → logprob: -5.704267978668213
    8. 'ure' → logprob: -5.829267978668213
    9. 'def' → logprob: -6.079267978668213
    10. '```' → logprob: -6.329267978668213

Token 1175: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10022640228271484
    2. 'n' → logprob: -3.225226402282715
    3. 'for' → logprob: -3.975226402282715
    4. ' for' → logprob: -4.725226402282715
    5. '```' → logprob: -5.350226402282715
    6. '
' → logprob: -5.475226402282715
    7. ' la' → logprob: -5.725226402282715
    8. ' n' → logprob: -5.850226402282715
    9. 'range' → logprob: -5.975226402282715
    10. ' une' → logprob: -6.725226402282715

Token 1176: ' transitions' (ID: 59824)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9217373728752136
    2. '   ' → logprob: -1.4217374324798584
    3. ' range' → logprob: -1.6717374324798584
    4. 'for' → logprob: -2.6717374324798584
    5. '_' → logprob: -4.046737194061279
    6. ' for' → logprob: -4.171737194061279
    7. 'n' → logprob: -4.296737194061279
    8. ')' → logprob: -4.796737194061279
    9. '[' → logprob: -4.796737194061279
    10. ' ' → logprob: -5.421737194061279

Token 1177: ' dyn' (ID: 44535)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6206144094467163
    2. 'dp' → logprob: -1.3706144094467163
    3. '(dp' → logprob: -2.495614528656006
    4. ' =' → logprob: -2.745614528656006
    5. ' dp' → logprob: -4.245614528656006
    6. ',' → logprob: -4.495614528656006
    7. '```' → logprob: -4.870614528656006
    8. ' de' → logprob: -5.495614528656006
    9. 'n' → logprob: -5.620614528656006
    10. ' pour' → logprob: -6.370614528656006

Token 1178: 'amiques' (ID: 195784)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7538039088249207
    2. '   ' → logprob: -1.0038039684295654
    3. ' programming' → logprob: -3.0038039684295654
    4. 'program' → logprob: -3.5038039684295654
    5. 'n' → logprob: -3.6288039684295654
    6. 'a' → logprob: -4.253803730010986
    7. 'prog' → logprob: -4.628803730010986
    8. 'amiques' → logprob: -5.003803730010986
    9. '```' → logprob: -5.253803730010986
    10. '_program' → logprob: -5.628803730010986

Token 1179: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02617558278143406
    2. 'dp' → logprob: -4.276175498962402
    3. ',' → logprob: -6.026175498962402
    4. 'for' → logprob: -6.151175498962402
    5. ' pour' → logprob: -6.276175498962402
    6. '       ' → logprob: -6.901175498962402
    7. ' =' → logprob: -7.276175498962402
    8. ' dp' → logprob: -7.276175498962402
    9. '(dp' → logprob: -7.401175498962402
    10. ' for' → logprob: -7.526175498962402

Token 1180: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.062240809202194214
    2. 'x' → logprob: -3.4372408390045166
    3. ' i' → logprob: -3.8122408390045166
    4. '_' → logprob: -5.9372406005859375
    5. '_i' → logprob: -6.8122406005859375
    6. '   ' → logprob: -6.9372406005859375
    7. ' _' → logprob: -7.5622406005859375
    8. ' x' → logprob: -8.187240600585938
    9. 'j' → logprob: -9.062240600585938
    10. 'a' → logprob: -9.062240600585938

Token 1181: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2822703719139099
    2. 'a' → logprob: -2.4072704315185547
    3. ' i' → logprob: -2.7822704315185547
    4. 'x' → logprob: -2.9072704315185547
    5. 'ai' → logprob: -5.032270431518555
    6. ' a' → logprob: -5.032270431518555
    7. 'val' → logprob: -5.282270431518555
    8. '   ' → logprob: -5.532270431518555
    9. ']' → logprob: -5.782270431518555
    10. ' x' → logprob: -6.032270431518555

Token 1182: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8145864009857178
    2. ' a' → logprob: -1.8145864009857178
    3. '   ' → logprob: -2.0645864009857178
    4. ' de' → logprob: -2.1895864009857178
    5. '_' → logprob: -2.4395864009857178
    6. '_a' → logprob: -4.189586639404297
    7. ' _' → logprob: -4.564586639404297
    8. ',' → logprob: -4.689586639404297
    9. 'de' → logprob: -5.064586639404297
    10. ' ' → logprob: -5.189586639404297

Token 1183: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02987035922706127
    2. ' a' → logprob: -3.5298702716827393
    3. '   ' → logprob: -9.90487003326416
    4. ' la' → logprob: -10.90487003326416
    5. '```' → logprob: -11.27987003326416
    6. 'l' → logprob: -11.40487003326416
    7. ' ' → logprob: -11.77987003326416
    8. '`' → logprob: -12.40487003326416
    9. 'la' → logprob: -12.77987003326416
    10. '
' → logprob: -13.27987003326416

Token 1184: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2081332951784134
    2. ':' → logprob: -2.2081332206726074
    3. ':
' → logprob: -3.3331332206726074
    4. '       ' → logprob: -3.5831332206726074
    5. ',' → logprob: -5.083133220672607
    6. '.' → logprob: -6.333133220672607
    7. ' pour' → logprob: -6.833133220672607
    8. ' :' → logprob: -7.208133220672607
    9. '):
' → logprob: -7.333133220672607
    10. '
' → logprob: -7.583133220672607

Token 1185: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09165327250957489
    2. '
' → logprob: -3.966653347015381
    3. 'dp' → logprob: -4.216653347015381
    4. ' en' → logprob: -4.466653347015381
    5. '    ' → logprob: -4.591653347015381
    6. ' dp' → logprob: -4.966653347015381
    7. ',' → logprob: -5.591653347015381
    8. '       ' → logprob: -5.841653347015381
    9. ' avec' → logprob: -5.841653347015381
    10. ' 
' → logprob: -6.591653347015381

Token 1186: ' considér' (ID: 68502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1628984659910202
    2. ' range' → logprob: -1.9128984212875366
    3. '   ' → logprob: -6.412898540496826
    4. 'for' → logprob: -7.662898540496826
    5. 'dp' → logprob: -8.912898063659668
    6. '       ' → logprob: -9.787898063659668
    7. '```' → logprob: -9.787898063659668
    8. '
' → logprob: -10.412898063659668
    9. 'enumer' → logprob: -10.662898063659668
    10. ')' → logprob: -10.662898063659668

Token 1187: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.09160693734884262
    2. 't' → logprob: -3.216606855392456
    3. 'uant' → logprob: -4.341607093811035
    4. 'érant' → logprob: -5.341607093811035
    5. 'e' → logprob: -5.466607093811035
    6. 'te' → logprob: -5.716607093811035
    7. 'ue' → logprob: -5.716607093811035
    8. '#' → logprob: -5.716607093811035
    9. 'tant' → logprob: -5.716607093811035
    10. 'er' → logprob: -6.466607093811035

Token 1188: ' leur' (ID: 9853)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6900646090507507
    2. 'range' → logprob: -2.0650646686553955
    3. ' range' → logprob: -2.3150646686553955
    4. ' les' → logprob: -2.4400646686553955
    5. 'a' → logprob: -3.4400646686553955
    6. 'la' → logprob: -3.5650646686553955
    7. 'les' → logprob: -3.8150646686553955
    8. 'x' → logprob: -4.190064430236816
    9. '   ' → logprob: -4.190064430236816
    10. 'dp' → logprob: -4.440064430236816

Token 1189: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3404744863510132
    2. ' valeur' → logprob: -1.7154744863510132
    3. ' val' → logprob: -2.3404746055603027
    4. ' valeurs' → logprob: -4.715474605560303
    5. ' possible' → logprob: -7.090474605560303
    6. '_val' → logprob: -8.090474128723145
    7. 'value' → logprob: -8.340474128723145
    8. '0' → logprob: -8.840474128723145
    9. 'possible' → logprob: -8.840474128723145
    10. ' nombre' → logprob: -8.965474128723145

Token 1190: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1027593612670898
    2. ',' → logprob: -1.3527593612670898
    3. '+' → logprob: -1.4777593612670898
    4. ')' → logprob: -3.47775936126709
    5. ' plus' → logprob: -3.60275936126709
    6. '   ' → logprob: -3.72775936126709
    7. ' et' → logprob: -4.10275936126709
    8. ')+' → logprob: -4.22775936126709
    9. 's' → logprob: -4.35275936126709
    10. '.' → logprob: -5.10275936126709

Token 1191: ' leur' (ID: 9853)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9300960898399353
    2. ' leur' → logprob: -1.43009614944458
    3. ' leurs' → logprob: -2.18009614944458
    4. ' sa' → logprob: -2.80509614944458
    5. ' les' → logprob: -2.93009614944458
    6. '   ' → logprob: -3.80509614944458
    7. ' le' → logprob: -4.05509614944458
    8. ' their' → logprob: -4.43009614944458
    9. 'leur' → logprob: -4.43009614944458
    10. 's' → logprob: -4.80509614944458

Token 1192: ' position' (ID: 4010)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.875359296798706
    2. 'nombre' → logprob: -1.250359296798706
    3. ' fréquence' → logprob: -2.875359296798706
    4. 'index' → logprob: -3.250359296798706
    5. 'comp' → logprob: -3.500359296798706
    6. 'indices' → logprob: -3.750359296798706
    7. 'indice' → logprob: -3.750359296798706
    8. 'multip' → logprob: -4.000359535217285
    9. '```' → logprob: -4.375359535217285
    10. 'com' → logprob: -4.500359535217285

Token 1193: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9978423118591309
    2. ',' → logprob: -1.1228423118591309
    3. ' dans' → logprob: -2.122842311859131
    4. '.' → logprob: -2.372842311859131
    5. 'dans' → logprob: -3.122842311859131
    6. ')' → logprob: -4.497842311859131
    7. 's' → logprob: -4.622842311859131
    8. '):
' → logprob: -5.122842311859131
    9. '```' → logprob: -5.247842311859131
    10. ' ,' → logprob: -5.872842311859131

Token 1194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009704180411063135
    2. '    
' → logprob: -7.500970363616943
    3. '
' → logprob: -7.875970363616943
    4. ':' → logprob: -11.125970840454102
    5. '```' → logprob: -11.375970840454102
    6. '\' → logprob: -13.250970840454102
    7. '\n' → logprob: -13.625970840454102
    8. ':
' → logprob: -13.750970840454102
    9. '  
' → logprob: -13.750970840454102
    10. '       ' → logprob: -14.250970840454102

Token 1195: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020020268857479095
    2. '
' → logprob: -8.625200271606445
    3. '    
' → logprob: -11.500200271606445
    4. '```' → logprob: -12.375200271606445
    5. '       ' → logprob: -12.750200271606445
    6. 'dp' → logprob: -14.125200271606445
    7. '    ' → logprob: -14.125200271606445
    8. 'def' → logprob: -15.125200271606445
    9. 'n' → logprob: -15.250200271606445
    10. '#' → logprob: -15.625200271606445

Token 1196: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05929110199213028
    2. 'for' → logprob: -3.184291124343872
    3. '   ' → logprob: -4.684290885925293
    4. ' for' → logprob: -5.684290885925293
    5. ' dp' → logprob: -5.684290885925293
    6. 'd' → logprob: -10.684290885925293
    7. 'prev' → logprob: -10.809290885925293
    8. '```' → logprob: -11.309290885925293
    9. '
' → logprob: -11.434290885925293
    10. 'p' → logprob: -11.434290885925293

Token 1197: ' résultat' (ID: 62556)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8303180932998657
    2. '   ' → logprob: -1.9553180932998657
    3. ' n' → logprob: -2.205317974090576
    4. 'dp' → logprob: -2.580317974090576
    5. ' result' → logprob: -3.455317974090576
    6. 'a' → logprob: -3.455317974090576
    7. ' dp' → logprob: -3.705317974090576
    8. ' res' → logprob: -3.955317974090576
    9. ' s' → logprob: -4.080317974090576
    10. 's' → logprob: -4.205317974090576

Token 1198: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13008753955364227
    2. '=' → logprob: -2.1300876140594482
    3. 'final' → logprob: -6.630087375640869
    4. ' est' → logprob: -7.505087375640869
    5. ' final' → logprob: -7.755087375640869
    6. '   ' → logprob: -8.505087852478027
    7. 's' → logprob: -8.880087852478027
    8. ' s' → logprob: -9.505087852478027
    9. '_final' → logprob: -9.505087852478027
    10. ')' → logprob: -9.880087852478027

Token 1199: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.182296022772789
    2. '=' → logprob: -2.68229603767395
    3. ' est' → logprob: -2.68229603767395
    4. '   ' → logprob: -3.55729603767395
    5. ',' → logprob: -8.057295799255371
    6. 'est' → logprob: -8.182295799255371
    7. ' is' → logprob: -8.807295799255371
    8. ':' → logprob: -9.432295799255371
    9. ' s' → logprob: -9.557295799255371
    10. 's' → logprob: -9.557295799255371

Token 1200: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6368575692176819
    2. 'dp' → logprob: -0.7618575692176819
    3. '   ' → logprob: -6.011857509613037
    4. '(dp' → logprob: -6.386857509613037
    5. ' (' → logprob: -9.386857986450195
    6. '	dp' → logprob: -11.511857986450195
    7. '(' → logprob: -12.136857986450195
    8. '```' → logprob: -12.261857986450195
    9. ' ' → logprob: -12.761857986450195
    10. '  ' → logprob: -13.761857986450195

Token 1201: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.08755277097225189
    2. '[-' → logprob: -3.337552785873413
    3. '[n' → logprob: -3.837552785873413
    4. '[len' → logprob: -4.087552547454834
    5. '[' → logprob: -4.712552547454834
    6. ' [' → logprob: -8.212553024291992
    7. 's' → logprob: -8.837553024291992
    8. '```' → logprob: -9.212553024291992
    9. '[_' → logprob: -9.462553024291992
    10. '[S' → logprob: -9.587553024291992

Token 1202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005650270730257034
    2. '])' → logprob: -5.380650043487549
    3. ']
' → logprob: -8.130650520324707
    4. '[' → logprob: -8.380650520324707
    5. ' ]' → logprob: -8.755650520324707
    6. '][' → logprob: -9.880650520324707
    7. '   ' → logprob: -10.005650520324707
    8. '],' → logprob: -10.255650520324707
    9. '[s' → logprob: -10.380650520324707
    10. '].' → logprob: -10.505650520324707

Token 1203: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24953994154930115
    2. ':' → logprob: -1.6245399713516235
    3. ':
' → logprob: -4.124539852142334
    4. '(n' → logprob: -5.999539852142334
    5. '():' → logprob: -6.499539852142334
    6. '():
' → logprob: -6.499539852142334
    7. '
' → logprob: -6.999539852142334
    8. 'def' → logprob: -7.999539852142334
    9. '```' → logprob: -8.124540328979492
    10. '(s' → logprob: -9.374540328979492

Token 1204: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20151206851005554
    2. ' mod' → logprob: -1.701512098312378
    3. '(mod' → logprob: -9.451512336730957
    4. '`' → logprob: -11.701512336730957
    5. '"' → logprob: -13.076512336730957
    6. '```' → logprob: -13.076512336730957
    7. '	mod' → logprob: -13.076512336730957
    8. '
' → logprob: -13.701512336730957
    9. '   ' → logprob: -14.326512336730957
    10. ' ' → logprob: -14.451512336730957

Token 1205: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.23917081207037e-05
    2. '_' → logprob: -10.750041961669922
    3. 'mod' → logprob: -11.625041961669922
    4. '_mod' → logprob: -12.375041961669922
    5. '```' → logprob: -12.500041961669922
    6. ' ' → logprob: -14.125041961669922
    7. '**' → logprob: -14.125041961669922
    8. '   ' → logprob: -14.375041961669922
    9. ')' → logprob: -15.125041961669922
    10. '`' → logprob: -15.125041961669922

Token 1206: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6232520937919617
    2. '   ' → logprob: -1.4982521533966064
    3. '():
' → logprob: -1.4982521533966064
    4. ':' → logprob: -4.248251914978027
    5. ':
' → logprob: -6.248251914978027
    6. '()' → logprob: -8.248251914978027
    7. '```' → logprob: -9.748251914978027
    8. ' ():' → logprob: -9.998251914978027
    9. '():
' → logprob: -10.123251914978027
    10. '
' → logprob: -10.748251914978027

Token 1207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001005419879220426
    2. '```' → logprob: -7.87600564956665
    3. '():
' → logprob: -8.626005172729492
    4. '():' → logprob: -9.251005172729492
    5. '    
' → logprob: -9.251005172729492
    6. '
' → logprob: -9.251005172729492
    7. ':' → logprob: -9.376005172729492
    8. ':
' → logprob: -9.876005172729492
    9. '()' → logprob: -12.126005172729492
    10. 'def' → logprob: -12.626005172729492

Token 1208: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00207460206001997
    2. ':' → logprob: -7.377074718475342
    3. '```' → logprob: -7.377074718475342
    4. ':
' → logprob: -8.002074241638184
    5. '():
' → logprob: -9.127074241638184
    6. '
' → logprob: -9.502074241638184
    7. '"""
' (adapté à ' """
') → logprob: -9.502074241638184
    8. '):
' → logprob: -9.627074241638184
    9. '"""' → logprob: -9.752074241638184
    10. '():' → logprob: -10.377074241638184

Token 1209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000133098365040496
    2. 'n' → logprob: -9.750133514404297
    3. '
' → logprob: -10.000133514404297
    4. '    
' → logprob: -11.000133514404297
    5. '```' → logprob: -12.250133514404297
    6. 'def' → logprob: -12.500133514404297
    7. '    ' → logprob: -12.875133514404297
    8. 'import' → logprob: -14.250133514404297
    9. '(n' → logprob: -16.000133514404297
    10. ' n' → logprob: -16.250133514404297

Token 1210: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.001518430421128869
    2. '   ' → logprob: -6.501518249511719
    3. '	n' → logprob: -12.001518249511719
    4. 'ns' → logprob: -12.501518249511719
    5. '
' → logprob: -13.501518249511719
    6. '(n' → logprob: -13.626518249511719
    7. ' n' → logprob: -13.751518249511719
    8. '#' → logprob: -13.876518249511719
    9. '    
' → logprob: -15.001518249511719
    10. '```' → logprob: -15.001518249511719

Token 1211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010218516690656543
    2. ',s' → logprob: -7.251021862030029
    3. ' ,' → logprob: -8.751021385192871
    4. '=' → logprob: -9.001021385192871
    5. ' =' → logprob: -10.626021385192871
    6. ',n' → logprob: -13.251021385192871
    7. ',
' → logprob: -13.501021385192871
    8. 's' → logprob: -13.751021385192871
    9. '=s' → logprob: -14.876021385192871
    10. ',S' → logprob: -15.376021385192871

Token 1212: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38687121868133545
    2. ' s' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.511871337890625
    4. ' ' → logprob: -16.761871337890625
    5. '	s' → logprob: -17.636871337890625
    6. '_s' → logprob: -18.136871337890625
    7. 'S' → logprob: -20.011871337890625
    8. ' =' → logprob: -20.261871337890625
    9. ' ' → logprob: -20.386871337890625
    10. '=s' → logprob: -20.636871337890625

Token 1213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010328111238777637
    2. ' =' → logprob: -6.876032829284668
    3. '=input' → logprob: -17.62603187561035
    4. '=}' → logprob: -18.25103187561035
    5. '=n' → logprob: -18.37603187561035
    6. '=sys' → logprob: -18.37603187561035
    7. '=int' → logprob: -18.50103187561035
    8. ',' → logprob: -18.75103187561035
    9. '＝' → logprob: -18.87603187561035
    10. '=s' → logprob: -19.00103187561035

Token 1214: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00020663968462031335
    2. ' LI' → logprob: -8.50020694732666
    3. 'map' → logprob: -13.00020694732666
    4. 'I' → logprob: -14.75020694732666
    5. 'L' → logprob: -15.25020694732666
    6. 'Li' → logprob: -16.000205993652344
    7. 'li' → logprob: -16.750205993652344
    8. 'LS' → logprob: -16.875205993652344
    9. 'LL' → logprob: -17.000205993652344
    10. ' ' → logprob: -17.750205993652344

Token 1215: '()' (ID: 416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7028224468231201
    2. '
' → logprob: -0.8278224468231201
    3. 'n' → logprob: -3.70282244682312
    4. '    
' → logprob: -4.327822685241699
    5. ')' → logprob: -5.452822685241699
    6. '()' → logprob: -5.452822685241699
    7. 'a' → logprob: -6.077822685241699
    8. '#' → logprob: -6.077822685241699
    9. '  
' → logprob: -6.202822685241699
    10. '(n' → logprob: -6.327822685241699

Token 1216: '         ' (ID: 983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2546531558036804
    2. '
' → logprob: -1.8796532154083252
    3. 'a' → logprob: -2.754653215408325
    4. '    
' → logprob: -4.879652976989746
    5. ' 
' → logprob: -8.379652976989746
    6. '  
' → logprob: -8.629652976989746
    7. ' a' → logprob: -9.004652976989746
    8. '   
' → logprob: -9.379652976989746
    9. '	a' → logprob: -9.504652976989746
    10. 'n' → logprob: -10.004652976989746

Token 1217: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41182973980903625
    2. '   ' → logprob: -1.1618297100067139
    3. '
' → logprob: -3.911829710006714
    4. 'n' → logprob: -5.786829948425293
    5. '    
' → logprob: -6.911829948425293
    6. ' a' → logprob: -9.536829948425293
    7. 's' → logprob: -9.536829948425293
    8. ' 
' → logprob: -9.661829948425293
    9. ')' → logprob: -10.161829948425293
    10. ';' → logprob: -10.286829948425293

Token 1218: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.107425062713446e-06
    2. ' a' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.500006675720215
    4. 'dp' → logprob: -14.500006675720215
    5. 'n' → logprob: -15.750006675720215
    6. '
' → logprob: -16.62500762939453
    7. '	a' → logprob: -17.12500762939453
    8. '       ' → logprob: -17.87500762939453
    9. '```' → logprob: -18.75000762939453
    10. '    
' → logprob: -18.87500762939453

Token 1219: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7527380585670471
    2. '()' → logprob: -0.7527380585670471
    3. '(n' → logprob: -3.8777379989624023
    4. 'n' → logprob: -4.252737998962402
    5. ')' → logprob: -5.377737998962402
    6. '<|end|>' → logprob: -5.877737998962402
    7. '[n' → logprob: -5.877737998962402
    8. '[]' → logprob: -6.252737998962402
    9. 'a' → logprob: -6.252737998962402
    10. '[' → logprob: -6.877737998962402

Token 1220: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010456847958266735
    2. '()' → logprob: -4.6354570388793945
    3. '(n' → logprob: -7.8854570388793945
    4. ' n' → logprob: -8.385457038879395
    5. 's' → logprob: -10.260457038879395
    6. ')n' → logprob: -10.510457038879395
    7. ')' → logprob: -11.760457038879395
    8. 'la' → logprob: -11.760457038879395
    9. 'l' → logprob: -12.510457038879395
    10. '[n' → logprob: -12.760457038879395

Token 1221: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8699632287025452
    2. 'tokens' → logprob: -1.1199631690979004
    3. 'int' → logprob: -2.6199631690979004
    4. '=' → logprob: -2.9949631690979004
    5. '()' → logprob: -3.8699631690979004
    6. 'ent' → logprob: -3.8699631690979004
    7. ' integers' → logprob: -3.9949631690979004
    8. 'inte' → logprob: -4.2449631690979
    9. ',' → logprob: -4.4949631690979
    10. ' tokens' → logprob: -4.7449631690979

Token 1222: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.1936468482017517
    2. 'er' → logprob: -1.8186469078063965
    3. 'ers' → logprob: -4.4436469078063965
    4. '   ' → logprob: -8.068646430969238
    5. '```' → logprob: -8.193646430969238
    6. 't' → logprob: -8.318646430969238
    7. 'ier' → logprob: -8.568646430969238
    8. 'ières' → logprob: -8.943646430969238
    9. ' =' → logprob: -9.068646430969238
    10. 'ters' → logprob: -9.318646430969238

Token 1223: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4281562566757202
    2. '<|end|>' → logprob: -1.9281562566757202
    3. 'a' → logprob: -2.4281563758850098
    4. '
' → logprob: -3.4281563758850098
    5. '<|end|>' → logprob: -3.8031563758850098
    6. ',' → logprob: -3.9281563758850098
    7. 'n' → logprob: -4.30315637588501
    8. '    
' → logprob: -4.42815637588501
    9. ')' → logprob: -5.17815637588501
    10. '...' → logprob: -6.67815637588501

Token 1224: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019425610080361366
    2. 'a' → logprob: -6.7519426345825195
    3. ' n' → logprob: -8.25194263458252
    4. 's' → logprob: -8.37694263458252
    5. 'LI' → logprob: -9.50194263458252
    6. '[n' → logprob: -10.00194263458252
    7. '0' → logprob: -10.25194263458252
    8. ')' → logprob: -10.75194263458252
    9. '[]' → logprob: -11.25194263458252
    10. 'sys' → logprob: -11.25194263458252

Token 1225: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4964229166507721
    2. ',' → logprob: -0.9964228868484497
    3. 'a' → logprob: -4.24642276763916
    4. ',a' → logprob: -5.37142276763916
    5. ')' → logprob: -6.99642276763916
    6. '<|end|>' → logprob: -7.24642276763916
    7. ',n' → logprob: -7.87142276763916
    8. 'n' → logprob: -8.62142276763916
    9. '    
' → logprob: -8.74642276763916
    10. '  ' → logprob: -8.99642276763916

Token 1226: 'tail' (ID: 20472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5301839113235474
    2. ')' → logprob: -1.4051839113235474
    3. ',n' → logprob: -2.655183792114258
    4. 'n' → logprob: -2.780183792114258
    5. ')n' → logprob: -4.155183792114258
    6. ',)' → logprob: -5.280183792114258
    7. '),' → logprob: -5.655183792114258
    8. ',s' → logprob: -5.905183792114258
    9. ')s' → logprob: -6.405183792114258
    10. ' n' → logprob: -6.405183792114258

Token 1227: 'le' (ID: 282)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7397657036781311
    2. 'le' → logprob: -0.9897657036781311
    3. 'ype' → logprob: -2.9897656440734863
    4. '   ' → logprob: -3.3647656440734863
    5. ')' → logprob: -4.364765644073486
    6. ' =' → logprob: -5.364765644073486
    7. '=' → logprob: -5.364765644073486
    8. 'p' → logprob: -5.489765644073486
    9. ',n' → logprob: -5.614765644073486
    10. 'aille' → logprob: -5.739765644073486

Token 1228: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002750665182247758
    2. 'a' → logprob: -7.127750873565674
    3. ')' → logprob: -7.377750873565674
    4. '),' → logprob: -7.627750873565674
    5. ' ,' → logprob: -8.002750396728516
    6. ',n' → logprob: -8.627750396728516
    7. '   ' → logprob: -9.252750396728516
    8. '=' → logprob: -9.502750396728516
    9. ',a' → logprob: -10.127750396728516
    10. 'n' → logprob: -10.752750396728516

Token 1229: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.056773439049720764
    2. ')' → logprob: -3.5567734241485596
    3. 'la' → logprob: -4.056773662567139
    4. '),' → logprob: -5.931773662567139
    5. 'n' → logprob: -6.056773662567139
    6. ' a' → logprob: -6.931773662567139
    7. 's' → logprob: -7.056773662567139
    8. 'l' → logprob: -7.056773662567139
    9. ' la' → logprob: -7.431773662567139
    10. ']' → logprob: -8.80677318572998

Token 1230: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08906269073486328
    2. 'liste' → logprob: -2.7140626907348633
    3. 'array' → logprob: -4.589062690734863
    4. 'list' → logprob: -5.714062690734863
    5. 'table' → logprob: -5.964062690734863
    6. ')' → logprob: -7.339062690734863
    7. ',' → logprob: -7.464062690734863
    8. ' liste' → logprob: -7.839062690734863
    9. ' a' → logprob: -7.964062690734863
    10. 'input' → logprob: -8.464062690734863

Token 1231: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07741346955299377
    2. ')' → logprob: -3.077413558959961
    3. '),' → logprob: -3.952413558959961
    4. 'a' → logprob: -4.952413558959961
    5. ' ,' → logprob: -6.952413558959961
    6. ',a' → logprob: -7.577413558959961
    7. ',)' → logprob: -7.827413558959961
    8. '   ' → logprob: -9.827413558959961
    9. '[' → logprob: -10.327413558959961
    10. ' )' → logprob: -10.452413558959961

Token 1232: ' s' (ID: 265)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16024108231067657
    2. ' a' → logprob: -1.9102411270141602
    3. '   ' → logprob: -11.78524112701416
    4. ' ' → logprob: -12.53524112701416
    5. '[a' → logprob: -13.41024112701416
    6. '    ' → logprob: -14.28524112701416
    7. ',a' → logprob: -14.28524112701416
    8. ' ' → logprob: -14.41024112701416
    9. 's' → logprob: -14.53524112701416
    10. '	a' → logprob: -14.78524112701416

Token 1233: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19815731048583984
    2. '   ' → logprob: -2.44815731048584
    3. ' =' → logprob: -3.32315731048584
    4. 'a' → logprob: -3.44815731048584
    5. '=' → logprob: -4.94815731048584
    6. ',a' → logprob: -5.07315731048584
    7. '<|end|>' → logprob: -5.19815731048584
    8. ')' → logprob: -6.57315731048584
    9. '<|end|>' → logprob: -6.69815731048584
    10. ';' → logprob: -7.07315731048584

Token 1234: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01423778384923935
    2. ' )' → logprob: -4.264237880706787
    3. 'max' → logprob: -11.014237403869629
    4. ')s' → logprob: -11.514237403869629
    5. '")' → logprob: -11.889237403869629
    6. 's' → logprob: -11.889237403869629
    7. ')n' → logprob: -11.889237403869629
    8. ' ' → logprob: -12.514237403869629
    9. ' la' → logprob: -13.139237403869629
    10. ' ' → logprob: -13.264237403869629

Token 1235: 'ible' (ID: 1430)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04308426007628441
    2. ',' → logprob: -3.668084144592285
    3. ' )' → logprob: -5.168084144592285
    4. ' =' → logprob: -6.168084144592285
    5. '=' → logprob: -6.293084144592285
    6. 'ont' → logprob: -6.918084144592285
    7. '#' → logprob: -7.168084144592285
    8. 'omme' → logprob: -7.293084144592285
    9. ' ' → logprob: -7.668084144592285
    10. 'on' → logprob: -7.918084144592285

Token 1236: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032759839086793363
    2. ')
' → logprob: -8.750328063964844
    3. ' =' → logprob: -9.875328063964844
    4. '   ' → logprob: -10.125328063964844
    5. '=' → logprob: -10.500328063964844
    6. ' )' → logprob: -10.625328063964844
    7. '):' → logprob: -12.000328063964844
    8. 's' → logprob: -12.500328063964844
    9. '`)' → logprob: -13.250328063964844
    10. ')`' → logprob: -13.375328063964844

Token 1237: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02196824923157692
    2. 'la' → logprob: -4.646968364715576
    3. 's' → logprob: -5.771968364715576
    4. ' la' → logprob: -6.021968364715576
    5. 'sum' → logprob: -6.521968364715576
    6. ' )' → logprob: -6.521968364715576
    7. ' ' → logprob: -7.021968364715576
    8. '))' → logprob: -7.396968364715576
    9. '"' → logprob: -7.896968364715576
    10. 'une' → logprob: -7.896968364715576

Token 1238: ' somme' (ID: 64484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1912064403295517
    2. '=' → logprob: -2.816206455230713
    3. ' )' → logprob: -3.191206455230713
    4. ',' → logprob: -3.941206455230713
    5. ' =' → logprob: -4.816206455230713
    6. ' ' → logprob: -4.941206455230713
    7. '`' → logprob: -5.441206455230713
    8. 's' → logprob: -5.691206455230713
    9. '"' → logprob: -5.816206455230713
    10. '")' → logprob: -5.941206455230713

Token 1239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008750165579840541
    2. '   ' → logprob: -7.625874996185303
    3. ')
' → logprob: -8.000875473022461
    4. ')
' → logprob: -10.000875473022461
    5. ' )' → logprob: -13.875875473022461
    6. ')`' → logprob: -14.000875473022461
    7. '")' → logprob: -14.375875473022461
    8. ')")' → logprob: -14.625875473022461
    9. 'n' → logprob: -14.750875473022461
    10. '[' → logprob: -15.125875473022461

Token 1240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20152394473552704
    2. 'a' → logprob: -1.7015239000320435
    3. 'dp' → logprob: -9.701523780822754
    4. ' a' → logprob: -10.076523780822754
    5. '	a' → logprob: -12.576523780822754
    6. '```' → logprob: -13.576523780822754
    7. 'n' → logprob: -14.326523780822754
    8. '   ' → logprob: -14.576523780822754
    9. '
' → logprob: -14.826523780822754
    10. '    ' → logprob: -15.201523780822754

Token 1241: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.000263481488218531
    2. '   ' → logprob: -8.250263214111328
    3. 'dp' → logprob: -14.125263214111328
    4. ' a' → logprob: -14.250263214111328
    5. '```' → logprob: -14.625263214111328
    6. 'print' → logprob: -16.375263214111328
    7. '	a' → logprob: -16.625263214111328
    8. '_a' → logprob: -16.875263214111328
    9. '    
' → logprob: -17.125263214111328
    10. '       ' → logprob: -17.375263214111328

Token 1242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023977100849152
    2. ' =' → logprob: -1.910239815711975
    3. '   ' → logprob: -11.160240173339844
    4. 'a' → logprob: -15.410240173339844
    5. ' ' → logprob: -15.535240173339844
    6. '=
' → logprob: -15.910240173339844
    7. ',' → logprob: -15.910240173339844
    8. ')' → logprob: -16.410240173339844
    9. '=[]' → logprob: -16.410240173339844
    10. '    ' → logprob: -16.535240173339844

Token 1243: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.00014001218369230628
    2. ' LI' → logprob: -8.875140190124512
    3. 'L' → logprob: -17.375139236450195
    4. ' ' → logprob: -17.375139236450195
    5. 'Li' → logprob: -17.625139236450195
    6. 'li' → logprob: -18.250139236450195
    7. '   ' → logprob: -19.000139236450195
    8. 'LL' → logprob: -19.500139236450195
    9. 'LS' → logprob: -20.375139236450195
    10. '[' → logprob: -20.875139236450195

Token 1244: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8206473871250637e-05
    2. '()
' → logprob: -10.500028610229492
    3. ' ()' → logprob: -15.250028610229492
    4. '())' → logprob: -16.625028610229492
    5. '()
' → logprob: -16.750028610229492
    6. '(' → logprob: -17.125028610229492
    7. '()

' → logprob: -17.125028610229492
    8. '();' → logprob: -17.625028610229492
    9. '()]' → logprob: -17.875028610229492
    10. '()`' → logprob: -18.125028610229492

Token 1245: '            ' (ID: 3346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0361371710896492
    2. '
' → logprob: -3.536137104034424
    3. '    
' → logprob: -5.161137104034424
    4. 'dp' → logprob: -7.786137104034424
    5. '	
' → logprob: -9.536137580871582
    6. '	dp' → logprob: -10.161137580871582
    7. '   
' → logprob: -10.411137580871582
    8. ' 
' → logprob: -10.536137580871582
    9. '  
' → logprob: -11.036137580871582
    10. '
' → logprob: -11.286137580871582

Token 1246: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27431511878967285
    2. 'dp' → logprob: -1.5243151187896729
    3. '
' → logprob: -4.024314880371094
    4. '    
' → logprob: -6.274314880371094
    5. '	dp' → logprob: -7.274314880371094
    6. '(dp' → logprob: -7.399314880371094
    7. ' dp' → logprob: -8.024314880371094
    8. '' → logprob: -8.649314880371094
    9. '#' (adapté à ' #') → logprob: -9.649314880371094
    10. '_dp' → logprob: -9.649314880371094

Token 1247: ' Lecture' (ID: 106534)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003179465711582452
    2. '#' → logprob: -9.000317573547363
    3. '
' → logprob: -9.125317573547363
    4. 'a' → logprob: -9.750317573547363
    5. ' dp' → logprob: -11.875317573547363
    6. '[' → logprob: -12.000317573547363
    7. '   ' → logprob: -12.125317573547363
    8. '```' → logprob: -13.000317573547363
    9. 'b' → logprob: -13.875317573547363
    10. 'def' → logprob: -14.000317573547363

Token 1248: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6824154853820801
    2. '()' → logprob: -0.8074154853820801
    3. '   ' → logprob: -3.55741548538208
    4. 'a' → logprob: -4.55741548538208
    5. 'n' → logprob: -5.43241548538208
    6. '(' → logprob: -6.18241548538208
    7. 's' → logprob: -6.93241548538208
    8. '(a' → logprob: -7.18241548538208
    9. 'def' → logprob: -8.057415008544922
    10. '(s' → logprob: -8.432415008544922

Token 1249: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23508480191230774
    2. '()' → logprob: -1.6100847721099854
    3. 'n' → logprob: -4.8600850105285645
    4. '(n' → logprob: -7.1100850105285645
    5. '[]' → logprob: -7.2350850105285645
    6. '(a' → logprob: -9.610084533691406
    7. 'list' → logprob: -9.735084533691406
    8. '(' → logprob: -9.860084533691406
    9. 's' → logprob: -10.360084533691406
    10. ' a' → logprob: -10.860084533691406

Token 1250: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.045971520245075226
    2. 'n' → logprob: -3.920971632003784
    3. '()' → logprob: -3.920971632003784
    4. 'list' → logprob: -6.045971393585205
    5. ' a' → logprob: -7.420971393585205
    6. 's' → logprob: -7.795971393585205
    7. '(a' → logprob: -8.170971870422363
    8. '(n' → logprob: -8.170971870422363
    9. '[]' → logprob: -8.670971870422363
    10. 'copy' → logprob: -8.920971870422363

Token 1251: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05486546456813812
    2. 'a' → logprob: -3.0548653602600098
    3. ' a' → logprob: -7.05486536026001
    4. '[]' → logprob: -7.17986536026001
    5. '[n' → logprob: -7.30486536026001
    6. '    
' → logprob: -7.42986536026001
    7. 'n' → logprob: -7.67986536026001
    8. '(n' → logprob: -7.80486536026001
    9. '(a' → logprob: -8.179865837097168
    10. '[' → logprob: -8.554865837097168

Token 1252: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.15086489915847778
    2. 'a' → logprob: -2.275864839553833
    3. 'int' → logprob: -4.150865077972412
    4. 'n' → logprob: -4.775865077972412
    5. ''ent' → logprob: -5.275865077972412
    6. 'inte' → logprob: -5.400865077972412
    7. 'ints' → logprob: -5.775865077972412
    8. 'enta' → logprob: -9.650864601135254
    9. 'enti' → logprob: -9.650864601135254
    10. ' ent' → logprob: -9.775864601135254

Token 1253: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001103064278140664
    2. 'ier' → logprob: -6.876102924346924
    3. 'a' → logprob: -10.626103401184082
    4. 'ières' → logprob: -10.626103401184082
    5. '   ' → logprob: -11.751103401184082
    6. '```' → logprob: -12.501103401184082
    7. 'er' → logprob: -12.751103401184082
    8. 'ière' → logprob: -13.251103401184082
    9. 'ers' → logprob: -13.376103401184082
    10. '(a' → logprob: -14.251103401184082

Token 1254: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03436999022960663
    2. '
' → logprob: -4.284369945526123
    3. 'dp' → logprob: -4.409369945526123
    4. '    
' → logprob: -4.909369945526123
    5. ' dp' → logprob: -9.034370422363281
    6. '```' → logprob: -9.409370422363281
    7. '	dp' → logprob: -9.659370422363281
    8. '(dp' → logprob: -10.284370422363281
    9. '  
' → logprob: -10.409370422363281
    10. '   
' → logprob: -10.409370422363281

Token 1255: ' taille' (ID: 41644)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29131370782852173
    2. 'tail' → logprob: -1.791313648223877
    3. 'la' → logprob: -3.041313648223877
    4. 'n' → logprob: -3.416313648223877
    5. 'long' → logprob: -6.291313648223877
    6. 'length' → logprob: -6.291313648223877
    7. 'val' → logprob: -7.791313648223877
    8. 'ta' → logprob: -7.916313648223877
    9. 'ent' → logprob: -8.416314125061035
    10. 'input' → logprob: -9.166314125061035

Token 1256: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013420680537819862
    2. ' n' → logprob: -4.388420581817627
    3. '(n' → logprob: -7.013420581817627
    4. '	n' → logprob: -12.138421058654785
    5. '   ' → logprob: -12.638421058654785
    6. ')n' → logprob: -14.388421058654785
    7. ' (' → logprob: -14.763421058654785
    8. '(' → logprob: -15.388421058654785
    9. '[n' → logprob: -15.763421058654785
    10. ' ' → logprob: -16.26342010498047

Token 1257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230903148651123
    2. '
' → logprob: -1.3230903148651123
    3. '    
' → logprob: -4.698090553283691
    4. 'dp' → logprob: -7.573090553283691
    5. '
' → logprob: -9.073090553283691
    6. '```' → logprob: -11.198090553283691
    7. '   
' → logprob: -12.323090553283691
    8. '  
' → logprob: -12.448090553283691
    9. ' dp' → logprob: -12.573090553283691
    10. ' 
' → logprob: -12.698090553283691

Token 1258: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4745476543903351
    2. '   ' → logprob: -0.9745476245880127
    3. ' dp' → logprob: -8.224547386169434
    4. '
' → logprob: -8.849547386169434
    5. '```' → logprob: -10.099547386169434
    6. '	dp' → logprob: -11.224547386169434
    7. '    
' → logprob: -12.599547386169434
    8. '_dp' → logprob: -14.599547386169434
    9. '``' → logprob: -14.974547386169434
    10. '(dp' → logprob: -15.724547386169434

Token 1259: ' r' (ID: 428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033832306507974863
    2. '   ' → logprob: -8.000338554382324
    3. ' dp' → logprob: -12.875338554382324
    4. '
' → logprob: -15.625338554382324
    5. '	dp' → logprob: -15.875338554382324
    6. '    
' → logprob: -17.875337600708008
    7. '```' → logprob: -18.000337600708008
    8. '#' → logprob: -19.750337600708008
    9. '_dp' → logprob: -19.750337600708008
    10. 'dc' → logprob: -19.875337600708008

Token 1260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08570337295532227
    2. '=' → logprob: -3.5857033729553223
    3. 'es' → logprob: -3.7107033729553223
    4. 'dp' → logprob: -4.210703372955322
    5. 'p' → logprob: -5.460703372955322
    6. 'ange' → logprob: -6.085703372955322
    7. 'a' → logprob: -6.585703372955322
    8. '=[' → logprob: -6.960703372955322
    9. 'eturn' → logprob: -7.085703372955322
    10. 'ef' → logprob: -7.210703372955322

Token 1261: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005257118493318558
    2. '[a' → logprob: -5.7552571296691895
    3. '0' → logprob: -7.0052571296691895
    4. '[s' → logprob: -7.3802571296691895
    5. ' [' → logprob: -8.380256652832031
    6. '1' → logprob: -9.130256652832031
    7. 'a' → logprob: -10.005256652832031
    8. '[n' → logprob: -10.130256652832031
    9. '[int' → logprob: -10.255256652832031
    10. '[-' → logprob: -11.255256652832031

Token 1262: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009630358777940273
    2. '[a' → logprob: -5.38463020324707
    3. '0' → logprob: -5.63463020324707
    4. '[s' → logprob: -7.25963020324707
    5. '1' → logprob: -8.50963020324707
    6. 'a' → logprob: -8.75963020324707
    7. '[n' → logprob: -9.88463020324707
    8. '[int' → logprob: -10.00963020324707
    9. '[[' → logprob: -10.13463020324707
    10. '[f' → logprob: -10.50963020324707

Token 1263: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08514364808797836
    2. '<|end|>' → logprob: -2.585143566131592
    3. '   ' → logprob: -5.960143566131592
    4. '<|end|>' → logprob: -6.335143566131592
    5. '
' → logprob: -7.585143566131592
    6. '    
' → logprob: -8.46014404296875
    7. ' 
' → logprob: -8.58514404296875
    8. '  
' → logprob: -8.83514404296875
    9. ' ' → logprob: -8.96014404296875
    10. ')' → logprob: -9.58514404296875

Token 1264: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024332046508789062
    2. 'dp' → logprob: -4.149332046508789
    3. '=' → logprob: -6.399332046508789
    4. ',' → logprob: -6.524332046508789
    5. 'for' → logprob: -6.774332046508789
    6. '   ' → logprob: -7.274332046508789
    7. '#' (adapté à ' #') → logprob: -7.524332046508789
    8. ' 
' → logprob: -8.274332046508789
    9. '' → logprob: -8.274332046508789
    10. ',
' → logprob: -8.399332046508789

Token 1265: ' Variable' (ID: 36336)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003612065047491342
    2. 'r' → logprob: -8.500361442565918
    3. '0' → logprob: -8.875361442565918
    4. 'for' → logprob: -12.875361442565918
    5. ' dp' → logprob: -13.125361442565918
    6. 'res' → logprob: -13.500361442565918
    7. 'n' → logprob: -13.500361442565918
    8. 'import' → logprob: -13.500361442565918
    9. 'pow' → logprob: -13.500361442565918
    10. '#' → logprob: -13.875361442565918

Token 1266: ' inutil' (ID: 154055)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3146434426307678
    2. ' =' → logprob: -1.314643383026123
    3. ',' → logprob: -7.439643383026123
    4. 'r' → logprob: -8.689643859863281
    5. ' +=' → logprob: -8.939643859863281
    6. '   ' → logprob: -8.939643859863281
    7. ' ' → logprob: -9.689643859863281
    8. '_' → logprob: -9.939643859863281
    9. '+=' → logprob: -9.939643859863281
    10. 'dp' → logprob: -10.689643859863281

Token 1267: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.9770230054855347
    2. ' =' → logprob: -1.3520230054855347
    3. '=' → logprob: -1.9770230054855347
    4. '   ' → logprob: -2.477023124694824
    5. 'r' → logprob: -2.727023124694824
    6. 'e' → logprob: -3.727023124694824
    7. ' r' → logprob: -4.227023124694824
    8. 'ized' → logprob: -4.227023124694824
    9. 'isé' → logprob: -5.477023124694824
    10. ' ' → logprob: -5.727023124694824

Token 1268: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07273907959461212
    2. '   ' → logprob: -2.8227391242980957
    3. '<|end|>' → logprob: -5.197739124298096
    4. '  
' → logprob: -6.447739124298096
    5. '    
' → logprob: -6.447739124298096
    6. ' ' → logprob: -7.697739124298096
    7. '<|end|>' → logprob: -8.447738647460938
    8. '
' → logprob: -8.572738647460938
    9. '  ' → logprob: -8.697738647460938
    10. ',' → logprob: -8.947738647460938

Token 1269: 'pe' (ID: 424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08063078671693802
    2. '#' → logprob: -2.8306307792663574
    3. '
' → logprob: -4.705630779266357
    4. 'r' → logprob: -5.830630779266357
    5. ' )' → logprob: -6.330630779266357
    6. 'n' → logprob: -6.580630779266357
    7. '   ' → logprob: -6.955630779266357
    8. '0' → logprob: -7.080630779266357
    9. ' ' → logprob: -7.955630779266357
    10. '=' → logprob: -8.330631256103516

Token 1270: 'ut' (ID: 339)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8556055426597595
    2. 'ut' → logprob: -1.1056056022644043
    3. 'r' → logprob: -1.4806056022644043
    4. '#' → logprob: -4.980605602264404
    5. 'ux' → logprob: -5.480605602264404
    6. 'n' → logprob: -6.105605602264404
    7. '```' → logprob: -7.230605602264404
    8. 'ur' → logprob: -7.855605602264404
    9. 'rd' → logprob: -8.105605125427246
    10. 'nd' → logprob: -8.355605125427246

Token 1271: ' servir' (ID: 42557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004978670622222126
    2. ' =' → logprob: -8.000497817993164
    3. 'r' → logprob: -10.125497817993164
    4. '=None' → logprob: -10.375497817993164
    5. '=
' → logprob: -10.875497817993164
    6. ')' → logprob: -11.000497817993164
    7. '=r' → logprob: -11.125497817993164
    8. '_' → logprob: -11.875497817993164
    9. ' be' → logprob: -12.000497817993164
    10. '+=' → logprob: -12.000497817993164

Token 1272: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14951147139072418
    2. '=' → logprob: -2.5245115756988525
    3. ' =' → logprob: -4.149511337280273
    4. '   ' → logprob: -4.524511337280273
    5. ' ' → logprob: -5.274511337280273
    6. 'for' → logprob: -5.524511337280273
    7. ' à' → logprob: -5.524511337280273
    8. 'à' → logprob: -5.649511337280273
    9. '=None' → logprob: -5.899511337280273
    10. ' )' → logprob: -6.399511337280273

Token 1273: ' debugger' (ID: 96285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007274487055838108
    2. '_' → logprob: -5.132274627685547
    3. 'r' → logprob: -6.882274627685547
    4. 'n' → logprob: -8.757274627685547
    5. 'None' → logprob: -9.882274627685547
    6. ' ' → logprob: -10.257274627685547
    7. ')' → logprob: -11.132274627685547
    8. '_=' → logprob: -11.382274627685547
    9. 'range' → logprob: -11.382274627685547
    10. '=' → logprob: -11.882274627685547

Token 1274: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000614028365816921
    2. '   ' → logprob: -8.125614166259766
    3. ' )' → logprob: -8.875614166259766
    4. 'r' → logprob: -9.500614166259766
    5. ' ou' → logprob: -10.750614166259766
    6. ')
' → logprob: -10.875614166259766
    7. '#' → logprob: -11.125614166259766
    8. ' or' → logprob: -11.375614166259766
    9. ',' → logprob: -11.375614166259766
    10. ' ' → logprob: -12.375614166259766

Token 1275: 'usage' (ID: 25871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2351970374584198
    2. 'r' → logprob: -2.360197067260742
    3. '0' → logprob: -2.610197067260742
    4. ')' → logprob: -4.360197067260742
    5. ' r' → logprob: -4.360197067260742
    6. '1' → logprob: -5.485197067260742
    7. 'n' → logprob: -5.860197067260742
    8. ' _' → logprob: -6.235197067260742
    9. ' debug' → logprob: -6.610197067260742
    10. ' ' → logprob: -6.735197067260742

Token 1276: ' futur' (ID: 48371)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2995705008506775
    2. ')' → logprob: -1.9245705604553223
    3. '_' → logprob: -2.7995705604553223
    4. ' =' → logprob: -3.4245705604553223
    5. '_=' → logprob: -5.174570560455322
    6. '   ' → logprob: -5.549570560455322
    7. 'r' → logprob: -5.549570560455322
    8. '=False' → logprob: -6.549570560455322
    9. '=True' → logprob: -6.799570560455322
    10. ' )' → logprob: -7.924570560455322

Token 1277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8251690864562988
    2. '   ' → logprob: -0.9501690864562988
    3. '
' → logprob: -1.8251690864562988
    4. '    
' → logprob: -4.700169086456299
    5. ')
' → logprob: -6.575169086456299
    6. ',' → logprob: -7.200169086456299
    7. '  
' → logprob: -7.825169086456299
    8. ' ' → logprob: -7.950169086456299
    9. '    ' → logprob: -8.07516860961914
    10. '  ' → logprob: -8.07516860961914

Token 1278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151385188102722
    2. 'dp' → logprob: -1.315138578414917
    3. ' dp' → logprob: -6.440138339996338
    4. '
' → logprob: -9.065138816833496
    5. '```' → logprob: -9.315138816833496
    6. '	dp' → logprob: -9.815138816833496
    7. '    
' → logprob: -11.440138816833496
    8. ' ' → logprob: -13.690138816833496
    9. '(dp' → logprob: -13.815138816833496
    10. '  ' → logprob: -13.815138816833496

Token 1279: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012653034180402756
    2. '   ' → logprob: -4.38765287399292
    3. ' dp' → logprob: -9.012653350830078
    4. '
' → logprob: -11.637653350830078
    5. '	dp' → logprob: -12.262653350830078
    6. 'd' → logprob: -13.387653350830078
    7. '    
' → logprob: -13.637653350830078
    8. 'n' → logprob: -14.012653350830078
    9. '_dp' → logprob: -14.262653350830078
    10. '```' → logprob: -14.512653350830078

Token 1280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326661109924316
    2. ' =' → logprob: -0.7576661109924316
    3. '=[' → logprob: -9.757665634155273
    4. ' =[' → logprob: -13.007665634155273
    5. ',' → logprob: -13.382665634155273
    6. '[' → logprob: -13.757665634155273
    7. '0' → logprob: -14.382665634155273
    8. '=[]' → logprob: -14.382665634155273
    9. '=[[' → logprob: -14.507665634155273
    10. '＝' → logprob: -14.757665634155273

Token 1281: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. ' [' → logprob: -12.625009536743164
    3. '[[' → logprob: -12.750009536743164
    4. '[array' → logprob: -13.375009536743164
    5. 'collections' → logprob: -13.875009536743164
    6. '{' → logprob: -14.875009536743164
    7. '[a' → logprob: -14.875009536743164
    8. '[-' → logprob: -16.375009536743164
    9. 'array' → logprob: -17.375009536743164
    10. '[int' → logprob: -17.500009536743164

Token 1282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.554343366995454e-05
    2. '1' → logprob: -9.500085830688477
    3. '[' → logprob: -11.500085830688477
    4. 'int' → logprob: -15.125085830688477
    5. 'False' → logprob: -15.750085830688477
    6. '[int' → logprob: -16.750085830688477
    7. '(' → logprob: -16.875085830688477
    8. '-' → logprob: -17.625085830688477
    9. ' ' → logprob: -17.875085830688477
    10. ']' → logprob: -18.125085830688477

Token 1283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001447737100534141
    2. ' ]' → logprob: -7.501447677612305
    3. ']*' → logprob: -7.626447677612305
    4. ']*(' → logprob: -8.251447677612305
    5. ' for' → logprob: -9.376447677612305
    6. ',' → logprob: -10.751447677612305
    7. 'for' → logprob: -11.001447677612305
    8. 's' → logprob: -12.376447677612305
    9. ']+' → logprob: -12.376447677612305
    10. '   ' → logprob: -12.751447677612305

Token 1284: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1788743734359741
    2. '[' → logprob: -2.0538744926452637
    3. ' for' → logprob: -2.1788744926452637
    4. '<|end|>' → logprob: -2.3038744926452637
    5. 'for' → logprob: -2.9288744926452637
    6. ',' → logprob: -2.9288744926452637
    7. '[s' → logprob: -3.0538744926452637
    8. ']*(' → logprob: -3.0538744926452637
    9. ' *' → logprob: -3.4288744926452637
    10. '*(' → logprob: -3.8038744926452637

Token 1285: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012511172099038959
    2. '(' → logprob: -9.37512493133545
    3. ' (' → logprob: -10.50012493133545
    4. '(S' → logprob: -12.50012493133545
    5. '(max' → logprob: -12.75012493133545
    6. '   ' → logprob: -12.87512493133545
    7. 's' → logprob: -13.37512493133545
    8. '((' → logprob: -14.12512493133545
    9. ' ' → logprob: -16.250125885009766
    10. '100' → logprob: -16.250125885009766

Token 1286: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023263530805706978
    2. '(s' → logprob: -3.773263454437256
    3. ' (' → logprob: -12.023263931274414
    4. ' s' → logprob: -12.023263931274414
    5. '(' → logprob: -12.773263931274414
    6. 'S' → logprob: -14.023263931274414
    7. '(S' → logprob: -14.148263931274414
    8. '{s' → logprob: -14.273263931274414
    9. '[s' → logprob: -15.398263931274414
    10. 'max' → logprob: -15.648263931274414

Token 1287: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234002135694027
    2. ' +' → logprob: -5.2552337646484375
    3. '+
' → logprob: -15.505233764648438
    4. '[' → logprob: -17.505233764648438
    5. '   ' → logprob: -17.755233764648438
    6. '＋' → logprob: -18.005233764648438
    7. ' +
' → logprob: -18.630233764648438
    8. ')+' → logprob: -18.630233764648438
    9. '+)' → logprob: -18.630233764648438
    10. ')' → logprob: -19.005233764648438

Token 1288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '10' → logprob: -17.500001907348633
    5. '１' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '100' → logprob: -19.625001907348633
    8. '5' → logprob: -19.750001907348633
    9. '3' → logprob: -20.125001907348633
    10. '101' → logprob: -20.500001907348633

Token 1289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.50000286102295
    4. '10' → logprob: -16.125003814697266
    5. '１' → logprob: -16.625003814697266
    6. '5' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '11' → logprob: -18.000003814697266
    9. '3' → logprob: -18.000003814697266
    10. '{' → logprob: -18.125003814697266

Token 1290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012964145571459085
    2. ')
' → logprob: -9.125129699707031
    3. '   ' → logprob: -11.250129699707031
    4. ' )' → logprob: -12.625129699707031
    5. ']' → logprob: -13.875129699707031
    6. '<|end|>' → logprob: -13.875129699707031
    7. ')

' → logprob: -14.875129699707031
    8. '[' → logprob: -15.250129699707031
    9. '```' → logprob: -15.250129699707031
    10. '),' → logprob: -15.250129699707031

Token 1291: '  ' (ID: 256)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12338872253894806
    2. '	dp' → logprob: -2.8733887672424316
    3. ' dp' → logprob: -3.1233887672424316
    4. '   ' → logprob: -4.873388767242432
    5. '[' → logprob: -6.123388767242432
    6. '(dp' → logprob: -6.248388767242432
    7. '
' → logprob: -6.623388767242432
    8. ' 
' → logprob: -7.623388767242432
    9. '  
' → logprob: -7.748388767242432
    10. '    
' → logprob: -7.998388767242432

Token 1292: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4305401146411896
    2. '<|end|>' → logprob: -1.3055400848388672
    3. 'dp' → logprob: -3.055540084838867
    4. '   ' → logprob: -4.680540084838867
    5. '  
' → logprob: -4.805540084838867
    6. '    
' → logprob: -5.555540084838867
    7. '	dp' → logprob: -6.055540084838867
    8. '<|end|>' → logprob: -6.180540084838867
    9. ')' → logprob: -6.930540084838867
    10. '```' → logprob: -7.305540084838867

Token 1293: ' Tableau' (ID: 180833)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.739826181321405e-05
    2. '1' → logprob: -10.12504768371582
    3. ' dp' → logprob: -12.50004768371582
    4. '0' → logprob: -12.62504768371582
    5. '```' → logprob: -16.62504768371582
    6. '
' → logprob: -17.25004768371582
    7. '	dp' → logprob: -17.50004768371582
    8. ' ' → logprob: -18.12504768371582
    9. '(dp' → logprob: -18.50004768371582
    10. 'd' → logprob: -18.62504768371582

Token 1294: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5161659121513367
    2. '<|end|>' → logprob: -1.2661659717559814
    3. '_dp' → logprob: -3.1411659717559814
    4. '[' → logprob: -3.2661659717559814
    5. '   ' → logprob: -4.266165733337402
    6. '
' → logprob: -5.266165733337402
    7. '<|end|>' → logprob: -5.391165733337402
    8. '_' → logprob: -5.641165733337402
    9. '	dp' → logprob: -5.766165733337402
    10. '=' → logprob: -6.016165733337402

Token 1295: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1040661334991455
    2. '<|end|>' → logprob: -1.2290661334991455
    3. 'dp' → logprob: -1.6040661334991455
    4. '   ' → logprob: -2.1040661334991455
    5. '	dp' → logprob: -4.479065895080566
    6. '
' → logprob: -4.479065895080566
    7. '(dp' → logprob: -5.104065895080566
    8. '  
' → logprob: -5.229065895080566
    9. '<|end|>' → logprob: -5.354065895080566
    10. '    
' → logprob: -5.729065895080566

Token 1296: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014758179895579815
    2. ' dp' → logprob: -7.001475811004639
    3. '0' → logprob: -7.751475811004639
    4. '[' → logprob: -9.751476287841797
    5. ' ' → logprob: -10.251476287841797
    6. '1' → logprob: -10.376476287841797
    7. '	dp' → logprob: -12.626476287841797
    8. '_dp' → logprob: -13.626476287841797
    9. '...' → logprob: -13.876476287841797
    10. '```' → logprob: -14.251476287841797

Token 1297: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009500489104539156
    2. 'dp' → logprob: -7.000949859619141
    3. '_dp' → logprob: -10.75094985961914
    4. ' dp' → logprob: -12.37594985961914
    5. '0' → logprob: -12.75094985961914
    6. '
' → logprob: -13.00094985961914
    7. ' =' → logprob: -13.62594985961914
    8. '=' → logprob: -14.12594985961914
    9. '<|end|>' → logprob: -14.12594985961914
    10. ' [' → logprob: -14.37594985961914

Token 1298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39762213826179504
    2. '=' → logprob: -1.3976221084594727
    3. ']=' → logprob: -3.1476221084594727
    4. ')' → logprob: -3.7726221084594727
    5. ' =' → logprob: -4.522622108459473
    6. ')=' → logprob: -6.772622108459473
    7. ']+=' → logprob: -7.147622108459473
    8. ' ]' → logprob: -7.147622108459473
    9. '   ' → logprob: -7.522622108459473
    10. '[' → logprob: -8.147622108459473

Token 1299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0027334284968674183
    2. ' =' → logprob: -6.75273323059082
    3. '[' → logprob: -7.25273323059082
    4. 'dp' → logprob: -7.37773323059082
    5. '=[' → logprob: -9.75273323059082
    6. '=
' → logprob: -10.00273323059082
    7. '<|end|>' → logprob: -10.87773323059082
    8. ']' → logprob: -11.00273323059082
    9. ']=' → logprob: -11.25273323059082
    10. '_dp' → logprob: -11.37773323059082

Token 1300: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4291214048862457
    2. '0' → logprob: -1.0541213750839233
    3. ' ' → logprob: -7.929121494293213
    4. 'dp' → logprob: -10.554121017456055
    5. 'int' → logprob: -10.554121017456055
    6. '(' → logprob: -12.429121017456055
    7. '-' → logprob: -13.804121017456055
    8. '(int' → logprob: -14.679121017456055
    9. '[int' → logprob: -14.991621017456055
    10. '[' → logprob: -15.054121017456055

Token 1301: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.20638960599899292
    2. 'man' → logprob: -2.2063896656036377
    3. ' façons' → logprob: -3.2063896656036377
    4. 'ways' → logprob: -3.4563896656036377
    5. '0' → logprob: -5.956389427185059
    6. '```' → logprob: -6.706389427185059
    7. '1' → logprob: -8.706389427185059
    8. 'Fa' → logprob: -9.581389427185059
    9. 'fac' → logprob: -9.956389427185059
    10. '   ' → logprob: -10.581389427185059

Token 1303: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1304: ''obtenir' (ID: 191633)
  Prédit: ''obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.19422128796577454
    2. 'ob' → logprob: -2.944221258163452
    3. '’obtenir' → logprob: -2.944221258163452
    4. ' obtenir' → logprob: -3.944221258163452
    5. 'x' → logprob: -3.944221258163452
    6. 'obt' → logprob: -4.694221496582031
    7. 'avoir' → logprob: -5.069221496582031
    8. 'arr' → logprob: -5.444221496582031
    9. ''avoir' → logprob: -6.319221496582031
    10. ' ' → logprob: -6.819221496582031

Token 1305: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036017363891005516
    2. ' x' → logprob: -5.628601551055908
    3. 's' → logprob: -14.628602027893066
    4. '   ' → logprob: -14.753602027893066
    5. '```' → logprob: -15.128602027893066
    6. 'dp' → logprob: -15.753602027893066
    7. '0' → logprob: -16.25360107421875
    8. '`' → logprob: -16.37860107421875
    9. ' ' → logprob: -16.50360107421875
    10. '    ' → logprob: -16.87860107421875

Token 1306: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.717029869556427
    2. 'x' → logprob: -0.967029869556427
    3. ' somme' → logprob: -2.5920298099517822
    4. 'som' → logprob: -3.7170298099517822
    5. 'sum' → logprob: -3.8420298099517822
    6. 'val' → logprob: -5.592030048370361
    7. 'dp' → logprob: -5.842030048370361
    8. '[x' → logprob: -6.592030048370361
    9. ' x' → logprob: -7.467030048370361
    10. '
' → logprob: -8.092029571533203

Token 1307: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18780791759490967
    2. 'dp' → logprob: -2.437808036804199
    3. ' x' → logprob: -3.187808036804199
    4. '[x' → logprob: -3.312808036804199
    5. ' dp' → logprob: -6.187808036804199
    6. '_' → logprob: -7.437808036804199
    7. 's' → logprob: -7.812808036804199
    8. '(x' → logprob: -7.812808036804199
    9. '_dp' → logprob: -7.812808036804199
    10. ' =' → logprob: -8.0628080368042

Token 1308: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1309: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01761399768292904
    2. '   ' → logprob: -4.142613887786865
    3. '```' → logprob: -7.017613887786865
    4. ' dp' → logprob: -7.892613887786865
    5. '	dp' → logprob: -8.267614364624023
    6. '[' → logprob: -10.392614364624023
    7. '`' → logprob: -12.267614364624023
    8. '(dp' → logprob: -12.392614364624023
    9. '    
' → logprob: -13.142614364624023
    10. '_dp' → logprob: -13.392614364624023

Token 1310: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: 0.0
    2. ' dp' → logprob: -17.875
    3. '0' → logprob: -19.125
    4. '1' → logprob: -20.125
    5. '	dp' → logprob: -21.125
    6. '```' → logprob: -21.125
    7. '   ' → logprob: -21.75
    8. '(dp' → logprob: -23.0
    9. '[' → logprob: -23.125
    10. 'dc' → logprob: -23.25

Token 1311: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.375001907348633
    3. '[s' → logprob: -15.000001907348633
    4. '=' → logprob: -15.375001907348633
    5. 's' → logprob: -15.750001907348633
    6. ' =' → logprob: -16.375001907348633
    7. ' [' → logprob: -16.875001907348633
    8. 'a' → logprob: -17.625001907348633
    9. '[-' → logprob: -17.750001907348633
    10. '][' → logprob: -18.000001907348633

Token 1312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.750024795532227
    4. ']' → logprob: -15.625024795532227
    5. '
' → logprob: -16.875024795532227
    6. '][' → logprob: -17.875024795532227
    7. '00' → logprob: -18.000024795532227
    8. 's' → logprob: -18.000024795532227
    9. '000' → logprob: -18.125024795532227
    10. '۰' → logprob: -18.250024795532227

Token 1313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009314678027294576
    2. ']=' → logprob: -7.000931262969971
    3. ' ]' → logprob: -11.375931739807129
    4. '=' → logprob: -11.875931739807129
    5. ']+=' → logprob: -13.500931739807129
    6. ')' → logprob: -16.000930786132812
    7. ' =' → logprob: -16.625930786132812
    8. ']
' → logprob: -17.875930786132812
    9. '']' → logprob: -19.250930786132812
    10. ')=' → logprob: -19.375930786132812

Token 1314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. '+=' → logprob: -15.061967849731445
    4. ' +=' → logprob: -16.436967849731445
    5. ']=' → logprob: -17.436967849731445
    6. ']' → logprob: -17.686967849731445
    7. '=}' → logprob: -18.186967849731445
    8. '=True' → logprob: -18.311967849731445
    9. '[' → logprob: -18.436967849731445
    10. '＝' → logprob: -18.561967849731445

Token 1315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۱' → logprob: -20.625
    4. '１' → logprob: -20.75
    5. '(' → logprob: -21.375
    6. '0' → logprob: -21.625
    7. '   ' → logprob: -22.0
    8. '{' → logprob: -22.0625
    9. '১' → logprob: -22.5
    10. '[' → logprob: -22.5625

Token 1316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. '0' → logprob: -18.375
    4. ' ' → logprob: -18.875
    5. '{' → logprob: -19.125
    6. '１' → logprob: -19.625
    7. 'pow' → logprob: -19.75
    8. '2' → logprob: -19.75
    9. '۱' → logprob: -20.625
    10. '[' → logprob: -21.0625

Token 1317: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05593985691666603
    2. '
' → logprob: -3.0559399127960205
    3. ' for' → logprob: -5.805939674377441
    4. '    
' → logprob: -6.430939674377441
    5. 'for' → logprob: -6.430939674377441
    6. '<|end|>' → logprob: -8.555939674377441
    7. '	for' → logprob: -8.680939674377441
    8. '  
' → logprob: -8.805939674377441
    9. '\n' → logprob: -8.930939674377441
    10. '
' → logprob: -9.305939674377441

Token 1318: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14088191092014313
    2. '
' → logprob: -2.2658820152282715
    3. '<|end|>' → logprob: -4.3908820152282715
    4. 'for' → logprob: -5.5158820152282715
    5. ' for' → logprob: -5.6408820152282715
    6. ' ' → logprob: -6.3908820152282715
    7. '    
' → logprob: -6.3908820152282715
    8. '' → logprob: -6.8908820152282715
    9. '  
' → logprob: -7.5158820152282715
    10. '  ' → logprob: -7.5158820152282715

Token 1319: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6725122332572937
    2. '<|end|>' → logprob: -1.9225122928619385
    3. '   ' → logprob: -2.0475122928619385
    4. '#' → logprob: -2.4225122928619385
    5. '0' → logprob: -3.4225122928619385
    6. ' for' → logprob: -3.4225122928619385
    7. ')' → logprob: -3.9225122928619385
    8. '```' → logprob: -4.422512054443359
    9. '
' → logprob: -4.672512054443359
    10. '​' → logprob: -5.922512054443359

Token 1320: ' y' (ID: 342)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2102361023426056
    2. ']' → logprob: -2.835236072540283
    3. ')' → logprob: -3.085236072540283
    4. '<|end|>' → logprob: -3.960236072540283
    5. '   ' → logprob: -4.085236072540283
    6. 'dp' → logprob: -4.585236072540283
    7. '[:]' → logprob: -4.835236072540283
    8. '=' → logprob: -5.210236072540283
    9. '
' → logprob: -5.335236072540283
    10. '#' → logprob: -5.835236072540283

Token 1321: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2305130511522293
    2. 'a' → logprob: -1.605513095855713
    3. '<|end|>' → logprob: -7.355513095855713
    4. 'avait' → logprob: -7.480513095855713
    5. '```' → logprob: -8.230512619018555
    6. ' has' → logprob: -8.480512619018555
    7. 'n' → logprob: -8.480512619018555
    8. 's' → logprob: -8.605512619018555
    9. 'f' → logprob: -8.730512619018555
    10. '#' → logprob: -8.730512619018555

Token 1322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03580562770366669
    2. '0' → logprob: -3.6608057022094727
    3. 'au' → logprob: -5.660805702209473
    4. 'une' → logprob: -6.285805702209473
    5. ' ' → logprob: -6.535805702209473
    6. ')' → logprob: -7.410805702209473
    7. '<|end|>' → logprob: -7.660805702209473
    8. ' une' → logprob: -8.285805702209473
    9. '```' → logprob: -8.785805702209473
    10. 'un' → logprob: -9.035805702209473

Token 1323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -10.375052452087402
    3. 'au' → logprob: -11.625052452087402
    4. 'une' → logprob: -12.500052452087402
    5. '
' → logprob: -13.625052452087402
    6. '```' → logprob: -13.750052452087402
    7. 'exact' → logprob: -13.750052452087402
    8. '0' → logprob: -14.125052452087402
    9. 'dp' → logprob: -14.500052452087402
    10. 'un' → logprob: -14.875052452087402

Token 1324: ' façon' (ID: 33381)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1325: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3102584779262543
    2. '<|end|>' → logprob: -1.6852585077285767
    3. 'dp' → logprob: -2.935258388519287
    4. 'de' → logprob: -4.560258388519287
    5. '[' → logprob: -5.935258388519287
    6. '
' → logprob: -6.060258388519287
    7. ' to' → logprob: -6.310258388519287
    8. 'def' → logprob: -6.685258388519287
    9. 'to' → logprob: -6.685258388519287
    10. ')' → logprob: -6.685258388519287

Token 1326: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.5935633182525635
    2. 'ob' → logprob: -0.8435633182525635
    3. 'avoir' → logprob: -4.843563079833984
    4. 'atte' → logprob: -5.593563079833984
    5. '0' → logprob: -5.593563079833984
    6. 'ré' → logprob: -7.968563079833984
    7. 'former' → logprob: -8.218563079833984
    8. 'arr' → logprob: -8.343563079833984
    9. 'obt' → logprob: -8.468563079833984
    10. 'form' → logprob: -8.968563079833984

Token 1327: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01844373159110546
    2. '0' → logprob: -5.018443584442139
    3. ' dp' → logprob: -5.643443584442139
    4. ' ' → logprob: -5.893443584442139
    5. '   ' → logprob: -6.393443584442139
    6. '_dp' → logprob: -7.393443584442139
    7. '[' → logprob: -7.643443584442139
    8. 'val' → logprob: -7.768443584442139
    9. '(dp' → logprob: -8.143444061279297
    10. 'de' → logprob: -8.643444061279297

Token 1328: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7746327519416809
    2. 's' → logprob: -0.7746327519416809
    3. 'som' → logprob: -2.774632692337036
    4. 'prem' → logprob: -4.399632930755615
    5. '```' → logprob: -7.149632930755615
    6. ' somme' → logprob: -7.649632930755615
    7. 'sum' → logprob: -7.899632930755615
    8. 'val' → logprob: -8.024632453918457
    9. 'diff' → logprob: -8.149632453918457
    10. 'null' → logprob: -8.899632453918457

Token 1329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008452449692413211
    2. '[' → logprob: -7.625845432281494
    3. ' ' → logprob: -8.125844955444336
    4. 'dp' → logprob: -10.250844955444336
    5. '   ' → logprob: -10.875844955444336
    6. '(' → logprob: -12.375844955444336
    7. '
' → logprob: -14.750844955444336
    8. ' ' → logprob: -15.000844955444336
    9. '[]' → logprob: -15.000844955444336
    10. '    
' → logprob: -15.625844955444336

Token 1330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006675214972347021
    2. ' ' → logprob: -7.375667572021484
    3. '   ' → logprob: -10.750667572021484
    4. '[' → logprob: -11.250667572021484
    5. '(' → logprob: -12.500667572021484
    6. 'dp' → logprob: -13.500667572021484
    7. '1' → logprob: -15.000667572021484
    8. '  ' → logprob: -15.125667572021484
    9. ' ' → logprob: -15.625667572021484
    10. '```' → logprob: -16.000667572021484

Token 1331: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006576312007382512
    2. ' for' → logprob: -8.12565803527832
    3. 'for' → logprob: -8.75065803527832
    4. '
' → logprob: -9.62565803527832
    5. '	for' → logprob: -9.75065803527832
    6. '    
' → logprob: -10.12565803527832
    7. '<|end|>' → logprob: -11.62565803527832
    8. '\n' → logprob: -11.87565803527832
    9. '\t' → logprob: -12.87565803527832
    10. ')' → logprob: -13.00065803527832

Token 1332: ' en' (ID: 469)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4932902753353119
    2. '1' → logprob: -0.9932903051376343
    3. '   ' → logprob: -4.868290424346924
    4. 'pass' → logprob: -4.993290424346924
    5. ' ' → logprob: -6.493290424346924
    6. '#' → logprob: -7.493290424346924
    7. 'True' → logprob: -7.493290424346924
    8. 'None' → logprob: -7.993290424346924
    9. 'dp' → logprob: -8.118289947509766
    10. ')' → logprob: -8.618289947509766

Token 1333: ' chois' (ID: 33475)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.2979440689086914
    2. ' ne' → logprob: -1.9229440689086914
    3. 'f' → logprob: -2.6729440689086914
    4. 'cho' → logprob: -3.7979440689086914
    5. 'n' → logprob: -5.297944068908691
    6. ' faisant' → logprob: -5.797944068908691
    7. ' prenant' → logprob: -5.797944068908691
    8. 'pr' → logprob: -6.047944068908691
    9. ' chois' → logprob: -6.547944068908691
    10. 'util' → logprob: -7.297944068908691

Token 1334: 'issant' (ID: 31359)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.029644837602972984
    2. 'vant' → logprob: -4.029644966125488
    3. 'issant' → logprob: -5.029644966125488
    4. 'nant' → logprob: -6.029644966125488
    5. 'ev' → logprob: -7.529644966125488
    6. 'tant' → logprob: -8.654644966125488
    7. '-' → logprob: -8.779644966125488
    8. '   ' → logprob: -8.904644966125488
    9. 'uis' → logprob: -9.279644966125488
    10. 'ignant' → logprob: -9.279644966125488

Token 1335: ' rien' (ID: 23082)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04845983535051346
    2. 'r' → logprob: -3.673459768295288
    3. 'auc' → logprob: -4.298460006713867
    4. ' rien' → logprob: -5.548460006713867
    5. '   ' → logprob: -6.298460006713867
    6. ' aucun' → logprob: -6.673460006713867
    7. 'no' → logprob: -8.173460006713867
    8. ' ' → logprob: -8.673460006713867
    9. '```' → logprob: -8.923460006713867
    10. '[]' → logprob: -9.173460006713867

Token 1336: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01760602928698063
    2. 'for' → logprob: -4.767606258392334
    3. ' for' → logprob: -5.267606258392334
    4. '
' → logprob: -5.892606258392334
    5. '	for' → logprob: -7.517606258392334
    6. '    
' → logprob: -7.892606258392334
    7. '\t' → logprob: -10.642605781555176
    8. '  
' → logprob: -11.267605781555176
    9. '```' → logprob: -11.517605781555176
    10. '	
' → logprob: -11.767605781555176

Token 1337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06054248288273811
    2. 'for' → logprob: -3.060542583465576
    3. ' for' → logprob: -4.435542583465576
    4. '	for' → logprob: -10.435542106628418
    5. '```' → logprob: -12.310542106628418
    6. '   ' → logprob: -14.560542106628418
    7. '    
' → logprob: -14.810542106628418
    8. '
' → logprob: -14.935542106628418
    9. '       ' → logprob: -16.560543060302734
    10. '   ' → logprob: -17.310543060302734

Token 1338: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02898869477212429
    2. '   ' → logprob: -3.9039885997772217
    3. ' for' → logprob: -4.778988838195801
    4. '	for' → logprob: -12.5289888381958
    5. '```' → logprob: -13.7789888381958
    6. '    
' → logprob: -14.1539888381958
    7. '
' → logprob: -14.9039888381958
    8. ' ' → logprob: -15.5289888381958
    9. '_for' → logprob: -15.5289888381958
    10. 'from' → logprob: -15.6539888381958

Token 1339: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1050637736916542
    2. 'x' → logprob: -2.3550636768341064
    3. 'ai' → logprob: -6.1050639152526855
    4. ' i' → logprob: -6.2300639152526855
    5. 'v' → logprob: -7.7300639152526855
    6. ' x' → logprob: -9.605063438415527
    7. '_i' → logprob: -10.605063438415527
    8. 'aa' → logprob: -10.730063438415527
    9. 'num' → logprob: -11.105063438415527
    10. '(i' → logprob: -11.480063438415527

Token 1340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08105486631393433
    2. 'in' → logprob: -2.581054925918579
    3. ' ' → logprob: -6.7060546875
    4. '   ' → logprob: -8.2060546875
    5. ' i' → logprob: -8.4560546875
    6. '    ' → logprob: -8.4560546875
    7. ',' → logprob: -9.9560546875
    8. '  ' → logprob: -10.3310546875
    9. '_' → logprob: -10.3310546875
    10. ' ,' → logprob: -10.5810546875

Token 1341: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014173968695104122
    2. ' range' → logprob: -4.264173984527588
    3. 'a' → logprob: -11.63917350769043
    4. '	range' → logprob: -14.76417350769043
    5. 'r' → logprob: -15.26417350769043
    6. ' a' → logprob: -15.38917350769043
    7. 'ra' → logprob: -15.51417350769043
    8. ' ' → logprob: -15.76417350769043
    9. '   ' → logprob: -15.76417350769043
    10. 'rang' → logprob: -16.38917350769043

Token 1342: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04903285950422287
    2. '(' → logprob: -3.0490329265594482
    3. 'n' → logprob: -7.799032688140869
    4. '(
' → logprob: -10.674033164978027
    5. ' n' → logprob: -12.049033164978027
    6. ' (' → logprob: -13.049033164978027
    7. '(i' → logprob: -13.299033164978027
    8. '   ' → logprob: -13.674033164978027
    9. '1' → logprob: -14.299033164978027
    10. ')' → logprob: -15.799033164978027

Token 1343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028320053592324257
    2. '):
' → logprob: -3.653320074081421
    3. '   ' → logprob: -6.778319835662842
    4. '+' → logprob: -7.778319835662842
    5. ')' → logprob: -8.2783203125
    6. ':' → logprob: -8.9033203125
    7. ' ):' → logprob: -10.0283203125
    8. '):
' → logprob: -11.4033203125
    9. ',' → logprob: -12.2783203125
    10. '       ' → logprob: -12.9033203125

Token 1344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20232820510864258
    2. '   ' → logprob: -1.8273282051086426
    3. '    ' → logprob: -4.577328205108643
    4. '    
' → logprob: -5.827328205108643
    5. '        
' → logprob: -6.327328205108643
    6. ' ' → logprob: -6.577328205108643
    7. ' 
' → logprob: -6.702328205108643
    8. ',' → logprob: -6.952328205108643
    9. ':' → logprob: -7.202328205108643
    10. '	   ' → logprob: -7.577328205108643

Token 1345: ' ai' (ID: 8440)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.15660879015922546
    2. 'for' → logprob: -3.156608819961548
    3. 'new' → logprob: -3.406608819961548
    4. 'dp' → logprob: -3.656608819961548
    5. '   ' → logprob: -3.906608819961548
    6. ' nd' → logprob: -4.781608581542969
    7. 'b' → logprob: -5.281608581542969
    8. 'next' → logprob: -5.781608581542969
    9. '       ' → logprob: -6.156608581542969
    10. 'tmp' → logprob: -6.406608581542969

Token 1346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3491920530796051
    2. '=' → logprob: -1.2241920232772827
    3. '   ' → logprob: -7.849192142486572
    4. ',' → logprob: -8.474191665649414
    5. '       ' → logprob: -9.974191665649414
    6. ']' → logprob: -10.974191665649414
    7. ')' → logprob: -10.974191665649414
    8. '+' → logprob: -11.849191665649414
    9. ':' → logprob: -12.099191665649414
    10. 'for' → logprob: -12.099191665649414

Token 1347: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.5716304410016164e-05
    2. ' a' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.125036239624023
    4. '	a' → logprob: -17.000036239624023
    5. 'dp' → logprob: -17.750036239624023
    6. '0' → logprob: -18.000036239624023
    7. '(a' → logprob: -18.125036239624023
    8. 'A' → logprob: -18.250036239624023
    9. 'ai' → logprob: -18.250036239624023
    10. '1' → logprob: -18.375036239624023

Token 1348: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00031425125780515373
    2. '[' → logprob: -8.125314712524414
    3. 'i' → logprob: -12.500314712524414
    4. ')' → logprob: -12.500314712524414
    5. ' [' → logprob: -12.750314712524414
    6. ']' → logprob: -12.875314712524414
    7. '[s' → logprob: -13.875314712524414
    8. 's' → logprob: -13.875314712524414
    9. '[
' → logprob: -14.875314712524414
    10. '[a' → logprob: -14.875314712524414

Token 1349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7532932758331299
    2. ')' → logprob: -1.2532932758331299
    3. '       ' → logprob: -1.5032932758331299
    4. ']
' → logprob: -4.753293037414551
    5. ')
' → logprob: -4.753293037414551
    6. '+' → logprob: -6.003293037414551
    7. ' +' → logprob: -7.753293037414551
    8. '])' → logprob: -8.12829303741455
    9. ')]' → logprob: -8.37829303741455
    10. ']+' → logprob: -8.87829303741455

Token 1350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010861629853025079
    2. '
' → logprob: -7.501086235046387
    3. '        
' → logprob: -8.501086235046387
    4. '	' → logprob: -9.251086235046387
    5. ',' → logprob: -9.251086235046387
    6. '<|end|>' → logprob: -10.501086235046387
    7. ' 
' → logprob: -10.876086235046387
    8. '  
' → logprob: -11.751086235046387
    9. '        ' → logprob: -11.876086235046387
    10. ')' → logprob: -12.001086235046387

Token 1351: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018028652993962169
    2. '
' → logprob: -7.001802921295166
    3. ' for' → logprob: -8.126802444458008
    4. ',' → logprob: -8.751802444458008
    5. 'for' → logprob: -8.751802444458008
    6. '        
' → logprob: -9.251802444458008
    7. '	' → logprob: -10.251802444458008
    8. '#' (adapté à ' #') → logprob: -10.751802444458008
    9. 'dp' → logprob: -11.001802444458008
    10. '' → logprob: -11.001802444458008

Token 1352: ' Vale' (ID: 55242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08328603208065033
    2. 'nd' → logprob: -3.0832860469818115
    3. 'dp' → logprob: -4.208285808563232
    4. 'new' → logprob: -4.208285808563232
    5. 'tmp' → logprob: -6.708285808563232
    6. 'if' → logprob: -7.458285808563232
    7. 'n' → logprob: -7.583285808563232
    8. 'next' → logprob: -7.583285808563232
    9. 'ai' → logprob: -7.708285808563232
    10. 'ndi' → logprob: -8.08328628540039

Token 1353: 'ur' (ID: 330)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8817465901374817
    2. '   ' → logprob: -1.006746530532837
    3. '=' → logprob: -2.381746530532837
    4. ' =' → logprob: -3.506746530532837
    5. '  ' → logprob: -3.506746530532837
    6. ')' → logprob: -4.381746768951416
    7. 'r' → logprob: -4.756746768951416
    8. ']' → logprob: -5.256746768951416
    9. 'l' → logprob: -5.256746768951416
    10. '      ' → logprob: -5.256746768951416

Token 1354: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4272257685661316
    2. '<|end|>' → logprob: -2.3022258281707764
    3. ' =' → logprob: -2.6772258281707764
    4. '=' → logprob: -3.3022258281707764
    5. ']' → logprob: -3.5522258281707764
    6. ',' → logprob: -3.5522258281707764
    7. ')' → logprob: -3.6772258281707764
    8. '<|end|>' → logprob: -4.052225589752197
    9. '   ' → logprob: -4.302225589752197
    10. '        ' → logprob: -5.302225589752197

Token 1355: ' i' (ID: 575)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.29036110639572144
    2. 'a' → logprob: -1.4153611660003662
    3. ' ai' → logprob: -5.040360927581787
    4. 'i' → logprob: -7.165360927581787
    5. ']' → logprob: -7.165360927581787
    6. ')' → logprob: -7.415360927581787
    7. ' a' → logprob: -8.790361404418945
    8. ' ' → logprob: -9.040361404418945
    9. ' ]' → logprob: -9.040361404418945
    10. ' )' → logprob: -9.790361404418945

Token 1356: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032591153867542744
    2. ' ]' → logprob: -6.003259181976318
    3. '   ' → logprob: -8.00325870513916
    4. ']+' → logprob: -9.25325870513916
    5. '[' → logprob: -9.87825870513916
    6. ']
' → logprob: -10.00325870513916
    7. '+' → logprob: -10.12825870513916
    8. '       ' → logprob: -10.75325870513916
    9. 'token' → logprob: -10.75325870513916
    10. '][' → logprob: -10.87825870513916

Token 1357: 'ème' (ID: 9767)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12987840175628662
    2. 'token' → logprob: -2.879878520965576
    3. ']' → logprob: -3.504878520965576
    4. ' i' → logprob: -4.754878520965576
    5. '1' → logprob: -5.504878520965576
    6. '```' → logprob: -5.504878520965576
    7. 'x' → logprob: -5.754878520965576
    8. 'élé' → logprob: -6.129878520965576
    9. 'ième' → logprob: -6.629878520965576
    10. ')' → logprob: -6.879878520965576

Token 1358: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9009236693382263
    2. 'token' → logprob: -0.9009236693382263
    3. '_' → logprob: -3.275923728942871
    4. 'élé' → logprob: -3.525923728942871
    5. ')' → logprob: -3.775923728942871
    6. ' ]' → logprob: -3.775923728942871
    7. 'for' → logprob: -4.025923728942871
    8. 'element' → logprob: -4.650923728942871
    9. 'a' → logprob: -4.900923728942871
    10. ' token' → logprob: -4.900923728942871

Token 1359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004159483592957258
    2. '
' → logprob: -5.629159450531006
    3. '        
' → logprob: -8.254159927368164
    4. '	' → logprob: -9.504159927368164
    5. ',' → logprob: -9.879159927368164
    6. '   ' → logprob: -10.129159927368164
    7. ')' → logprob: -10.754159927368164
    8. '
' → logprob: -10.879159927368164
    9. '<|end|>' → logprob: -11.004159927368164
    10. '  
' → logprob: -11.754159927368164

Token 1360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026449791621416807
    2. '
' → logprob: -7.127645015716553
    3. '   ' → logprob: -7.127645015716553
    4. '        
' → logprob: -8.252644538879395
    5. '	' → logprob: -8.502644538879395
    6. ',' → logprob: -8.627644538879395
    7. ' ' → logprob: -9.752644538879395
    8. ' 
' → logprob: -9.752644538879395
    9. '  
' → logprob: -10.252644538879395
    10. '' → logprob: -10.502644538879395

Token 1361: ' if' (ID: 538)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5846255421638489
    2. 'for' → logprob: -0.9596255421638489
    3. 'dp' → logprob: -3.709625482559204
    4. 'new' → logprob: -3.834625482559204
    5. 'n' → logprob: -4.709625720977783
    6. 'next' → logprob: -6.584625720977783
    7. 'nx' → logprob: -6.959625720977783
    8. 'tmp' → logprob: -7.459625720977783
    9. 'd' → logprob: -7.959625720977783
    10. '_nd' → logprob: -8.209625244140625

Token 1362: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0018421327695250511
    2. 'a' → logprob: -7.001842021942139
    3. 'dp' → logprob: -7.626842021942139
    4. 's' → logprob: -8.626842498779297
    5. ' ai' → logprob: -9.001842498779297
    6. '0' → logprob: -9.626842498779297
    7. '(ai' → logprob: -10.626842498779297
    8. '   ' → logprob: -10.876842498779297
    9. 'r' → logprob: -11.751842498779297
    10. '1' → logprob: -11.751842498779297

Token 1363: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.36322250962257385
    2. '<=' → logprob: -1.2382224798202515
    3. '>' → logprob: -4.863222599029541
    4. ' >' → logprob: -5.113222599029541
    5. '==' → logprob: -8.238222122192383
    6. ' ==' → logprob: -8.738222122192383
    7. ')' → logprob: -8.863222122192383
    8. ' <' → logprob: -9.988222122192383
    9. '>=' → logprob: -10.363222122192383
    10. '[' → logprob: -10.488222122192383

Token 1364: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.129266067640856e-05
    2. ' s' → logprob: -10.875020980834961
    3. '0' → logprob: -13.000020980834961
    4. ' ' → logprob: -17.87502098083496
    5. '
' → logprob: -19.12502098083496
    6. '=' → logprob: -19.62502098083496
    7. '   ' → logprob: -19.62502098083496
    8. 'S' → logprob: -20.00002098083496
    9. '(s' → logprob: -20.12502098083496
    10. '	s' → logprob: -20.25002098083496

Token 1365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005474582780152559
    2. ':
' → logprob: -5.25547456741333
    3. '       ' → logprob: -9.380475044250488
    4. 'continue' → logprob: -9.630475044250488
    5. ' continue' → logprob: -10.005475044250488
    6. '           ' → logprob: -11.255475044250488
    7. ' :' → logprob: -11.505475044250488
    8. ':return' → logprob: -11.505475044250488
    9. ':
' → logprob: -12.380475044250488
    10. '):' → logprob: -13.255475044250488

Token 1366: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6154616475105286
    2. ' continue' → logprob: -0.9904616475105286
    3. '           ' → logprob: -2.990461587905884
    4. 'continue' → logprob: -3.740461587905884
    5. ':' → logprob: -5.240461826324463
    6. ':
' → logprob: -5.490461826324463
    7. '	' → logprob: -6.240461826324463
    8. '	continue' → logprob: -6.240461826324463
    9. '		' → logprob: -8.490461349487305
    10. ' continues' → logprob: -8.615461349487305

Token 1367: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06738254427909851
    2. '       ' → logprob: -3.317382574081421
    3. ' continue' → logprob: -3.567382574081421
    4. '           ' → logprob: -7.442382335662842
    5. '	continue' → logprob: -9.5673828125
    6. '   ' → logprob: -10.6923828125
    7. '_continue' → logprob: -13.1923828125
    8. 'contin' → logprob: -13.4423828125
    9. '```' → logprob: -13.4423828125
    10. 'continu' → logprob: -14.0673828125

Token 1368: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0014291671104729176
    2. '       ' → logprob: -6.626429080963135
    3. '   ' → logprob: -9.751429557800293
    4. ' continue' → logprob: -10.376429557800293
    5. '           ' → logprob: -11.876429557800293
    6. '```' → logprob: -13.001429557800293
    7. 'continu' → logprob: -13.251429557800293
    8. 'for' → logprob: -13.626429557800293
    9. 'contin' → logprob: -14.251429557800293
    10. '	continue' → logprob: -14.251429557800293

Token 1369: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.739533543586731
    2. '       ' → logprob: -1.489533543586731
    3. ' continue' → logprob: -1.489533543586731
    4. '           ' → logprob: -3.8645334243774414
    5. ' True' → logprob: -3.9895334243774414
    6. '   ' → logprob: -4.489533424377441
    7. 'True' → logprob: -4.614533424377441
    8. ' ai' → logprob: -5.614533424377441
    9. 'ai' → logprob: -6.114533424377441
    10. '0' → logprob: -6.489533424377441

Token 1370: ' valeur' (ID: 41664)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.48194581270217896
    2. ' continue' → logprob: -1.6069457530975342
    3. 'continue' → logprob: -1.8569457530975342
    4. ' ai' → logprob: -3.981945753097534
    5. 'i' → logprob: -6.606945991516113
    6. 's' → logprob: -6.856945991516113
    7. '   ' → logprob: -7.106945991516113
    8. 'a' → logprob: -7.106945991516113
    9. '       ' → logprob: -7.856945991516113
    10. '#' → logprob: -8.481945991516113

Token 1371: ' cour' (ID: 2871)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5961536765098572
    2. '>' → logprob: -0.8461536765098572
    3. '[i' → logprob: -4.471153736114502
    4. '   ' → logprob: -6.221153736114502
    5. ' >=' → logprob: -6.346153736114502
    6. ' ==' → logprob: -6.721153736114502
    7. '[' → logprob: -7.346153736114502
    8. '==' → logprob: -7.471153736114502
    9. '>=' → logprob: -7.596153736114502
    10. ']' → logprob: -8.221153259277344

Token 1372: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0012468972709029913
    2. '>' → logprob: -7.376246929168701
    3. 'r' → logprob: -7.751246929168701
    4. 'ant' → logprob: -9.001246452331543
    5. '```' → logprob: -11.251246452331543
    6. 'nte' → logprob: -12.001246452331543
    7. 'amment' → logprob: -12.001246452331543
    8. 'ente' → logprob: -12.251246452331543
    9. 'p' → logprob: -12.376246452331543
    10. 'ANTE' → logprob: -12.376246452331543

Token 1373: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17975078523159027
    2. '>' → logprob: -1.9297508001327515
    3. ' >=' → logprob: -4.304750919342041
    4. ' ==' → logprob: -6.179750919342041
    5. '>=' → logprob: -6.804750919342041
    6. '   ' → logprob: -7.179750919342041
    7. '==' → logprob: -7.679750919342041
    8. 'continue' → logprob: -8.429750442504883
    9. '[i' → logprob: -8.554750442504883
    10. ' continue' → logprob: -8.679750442504883

Token 1374: ' supérieure' (ID: 106336)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6931393146514893
    2. ' continue' → logprob: -1.5681393146514893
    3. '>' → logprob: -2.1931393146514893
    4. '   ' → logprob: -2.6931393146514893
    5. ' >' → logprob: -2.6931393146514893
    6. 's' → logprob: -4.06813907623291
    7. '       ' → logprob: -5.31813907623291
    8. 'None' → logprob: -5.81813907623291
    9. ' None' → logprob: -6.06813907623291
    10. 'contin' → logprob: -6.06813907623291

Token 1375: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0181243419647217
    2. '           ' → logprob: -1.3931243419647217
    3. ':' → logprob: -1.8931243419647217
    4. ' à' → logprob: -2.3931243419647217
    5. ' to' → logprob: -2.6431243419647217
    6. '   ' → logprob: -3.7681243419647217
    7. '               ' → logprob: -4.018124580383301
    8. ' au' → logprob: -4.643124580383301
    9. 'to' → logprob: -5.518124580383301
    10. ' :' → logprob: -5.518124580383301

Token 1376: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020377879263833165
    2. ' s' → logprob: -8.500204086303711
    3. '0' → logprob: -16.62520408630371
    4. ' ' → logprob: -17.37520408630371
    5. '```' → logprob: -17.37520408630371
    6. '	s' → logprob: -18.00020408630371
    7. '`s' → logprob: -18.12520408630371
    8. ' ' → logprob: -18.12520408630371
    9. '   ' → logprob: -18.75020408630371
    10. '_s' → logprob: -18.87520408630371

Token 1377: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5327565670013428
    2. '       ' → logprob: -1.0327565670013428
    3. '           ' → logprob: -3.9077565670013428
    4. ':
' → logprob: -3.9077565670013428
    5. ' continue' → logprob: -5.032756805419922
    6. ',' → logprob: -5.032756805419922
    7. 'continue' → logprob: -5.657756805419922
    8. ' :' → logprob: -10.032756805419922
    9. '               ' → logprob: -10.157756805419922
    10. '.' → logprob: -10.282756805419922

Token 1378: ' elle' (ID: 11451)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8729842901229858
    2. ' continue' → logprob: -0.9979842901229858
    3. '       ' → logprob: -1.6229842901229858
    4. '           ' → logprob: -4.497984409332275
    5. '	continue' → logprob: -5.622984409332275
    6. '	' → logprob: -7.247984409332275
    7. '	       ' → logprob: -7.872984409332275
    8. '_continue' → logprob: -8.872983932495117
    9. '		' → logprob: -8.997983932495117
    10. '               ' → logprob: -9.747983932495117

Token 1379: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7143765687942505
    2. ' continue' → logprob: -0.8393765687942505
    3. '       ' → logprob: -2.839376449584961
    4. ' continues' → logprob: -4.589376449584961
    5. '	continue' → logprob: -4.964376449584961
    6. 'contin' → logprob: -6.964376449584961
    7. '           ' → logprob: -7.339376449584961
    8. ':' → logprob: -7.339376449584961
    9. '   ' → logprob: -8.214376449584961
    10. '_continue' → logprob: -8.589376449584961

Token 1380: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13451623916625977
    2. ' continue' → logprob: -2.1345162391662598
    3. 'contin' → logprob: -5.25951623916626
    4. 's' → logprob: -7.75951623916626
    5. '	continue' → logprob: -7.75951623916626
    6. 'n' → logprob: -8.009515762329102
    7. ' continues' → logprob: -8.009515762329102
    8. '   ' → logprob: -8.509515762329102
    9. '_continue' → logprob: -8.884515762329102
    10. '       ' → logprob: -9.009515762329102

Token 1381: ' contribuer' (ID: 167758)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8108927011489868
    2. ' continue' → logprob: -1.4358927011489868
    3. 'pas' → logprob: -1.9358927011489868
    4. 'contin' → logprob: -2.3108925819396973
    5. ' pas' → logprob: -3.3108925819396973
    6. '   ' → logprob: -3.8108925819396973
    7. '       ' → logprob: -5.310892581939697
    8. ' continuer' → logprob: -5.435892581939697
    9. 'pass' → logprob: -6.185892581939697
    10. '	continue' → logprob: -7.185892581939697

Token 1382: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08625993132591248
    2. '           ' → logprob: -2.9612598419189453
    3. 'continue' → logprob: -4.461259841918945
    4. ' continue' → logprob: -5.086259841918945
    5. '   ' → logprob: -5.461259841918945
    6. '               ' → logprob: -6.211259841918945
    7. ' to' → logprob: -6.461259841918945
    8. ':' → logprob: -6.836259841918945
    9. ')' → logprob: -6.961259841918945
    10. '.' → logprob: -7.086259841918945

Token 1383: ' aucune' (ID: 51173)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4612258970737457
    2. 'auc' → logprob: -1.7112258672714233
    3. 'any' → logprob: -2.461225986480713
    4. 'l' → logprob: -3.461225986480713
    5. ' la' → logprob: -3.961225986480713
    6. 'une' → logprob: -3.961225986480713
    7. 'the' → logprob: -5.211225986480713
    8. ' any' → logprob: -5.461225986480713
    9. 'dp' → logprob: -5.586225986480713
    10. ' aucune' → logprob: -5.586225986480713

Token 1384: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.0914105772972107
    2. 's' → logprob: -3.4664106369018555
    3. '```' → logprob: -4.3414106369018555
    4. 'som' → logprob: -4.9664106369018555
    5. 'sum' → logprob: -5.0914106369018555
    6. ' som' → logprob: -5.5914106369018555
    7. 'solution' → logprob: -5.5914106369018555
    8. ' solution' → logprob: -5.5914106369018555
    9. '   ' → logprob: -5.8414106369018555
    10. 'poss' → logprob: -6.4664106369018555

Token 1385: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010837108828127384
    2. '           ' → logprob: -5.260837078094482
    3. ',' → logprob: -5.885837078094482
    4. '.' → logprob: -6.510837078094482
    5. 'continue' → logprob: -7.260837078094482
    6. ' continue' → logprob: -7.760837078094482
    7. '   ' → logprob: -10.01083755493164
    8. '	' → logprob: -10.51083755493164
    9. '               ' → logprob: -10.76083755493164
    10. '	continue' → logprob: -11.13583755493164

Token 1386: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004079470410943031
    2. ' s' → logprob: -5.504079341888428
    3. '`s' → logprob: -14.504079818725586
    4. '```' → logprob: -15.129079818725586
    5. ' ' → logprob: -16.254079818725586
    6. '_s' → logprob: -17.129079818725586
    7. '   ' → logprob: -17.129079818725586
    8. '	s' → logprob: -17.129079818725586
    9. '
' → logprob: -18.129079818725586
    10. '(s' → logprob: -18.254079818725586

Token 1387: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05316750332713127
    2. '           ' → logprob: -3.6781675815582275
    3. ':' → logprob: -4.303167343139648
    4. 'continue' → logprob: -5.053167343139648
    5. ' continue' → logprob: -5.428167343139648
    6. ':
' → logprob: -6.178167343139648
    7. '	continue' → logprob: -10.553167343139648
    8. ',' → logprob: -10.678167343139648
    9. '   ' → logprob: -11.428167343139648
    10. '.' → logprob: -11.553167343139648

Token 1388: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006405908148735762
    2. '           ' → logprob: -6.131405830383301
    3. '	' → logprob: -6.631405830383301
    4. ':' → logprob: -6.631405830383301
    5. 'continue' → logprob: -7.131405830383301
    6. ' continue' → logprob: -7.381405830383301
    7. '	continue' → logprob: -9.8814058303833
    8. '   ' → logprob: -11.0064058303833
    9. ':
' → logprob: -11.1314058303833
    10. '		' → logprob: -11.6314058303833

Token 1389: ' dp' (ID: 21546)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05289379879832268
    2. '       ' → logprob: -3.177893877029419
    3. ' continue' → logprob: -4.67789363861084
    4. '   ' → logprob: -7.80289363861084
    5. '	continue' → logprob: -9.17789363861084
    6. '           ' → logprob: -10.92789363861084
    7. '```' → logprob: -12.17789363861084
    8. 'continu' → logprob: -12.42789363861084
    9. 'contin' → logprob: -12.55289363861084
    10. '_continue' → logprob: -13.17789363861084

Token 1390: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.3264636695384979
    2. '=' → logprob: -2.3264636993408203
    3. ' =' → logprob: -2.3264636993408203
    4. '[' → logprob: -2.9514636993408203
    5. '[:' → logprob: -3.5764636993408203
    6. '[i' → logprob: -7.57646369934082
    7. '=[' → logprob: -8.07646369934082
    8. '[::-' → logprob: -8.20146369934082
    9. '.copy' → logprob: -8.32646369934082
    10. '.append' → logprob: -8.45146369934082

Token 1391: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6476811170578003
    2. ':]' → logprob: -2.14768123626709
    3. 's' → logprob: -2.39768123626709
    4. '[:]' → logprob: -2.77268123626709
    5. '...' → logprob: -3.14768123626709
    6. ':s' → logprob: -3.27268123626709
    7. '0' → logprob: -4.02268123626709
    8. '...]' → logprob: -4.14768123626709
    9. 'ai' → logprob: -4.39768123626709
    10. '[:' → logprob: -4.39768123626709

Token 1392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0230911485850811
    2. ' ]' → logprob: -4.6480913162231445
    3. ']+=' → logprob: -5.3980913162231445
    4. '       ' → logprob: -6.0230913162231445
    5. '[' → logprob: -6.0230913162231445
    6. '=' → logprob: -7.1480913162231445
    7. ' +=' → logprob: -7.1480913162231445
    8. '   ' → logprob: -7.6480913162231445
    9. '+=' → logprob: -7.8980913162231445
    10. ')' → logprob: -8.148091316223145

Token 1393: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3428495526313782
    2. '+=' → logprob: -1.4678494930267334
    3. ' +=' → logprob: -3.0928494930267334
    4. ' =' → logprob: -5.0928497314453125
    5. ',' → logprob: -6.0928497314453125
    6. '*=' → logprob: -6.5928497314453125
    7. '+' → logprob: -7.3428497314453125
    8. '    ' → logprob: -7.3428497314453125
    9. '[' → logprob: -7.8428497314453125
    10. '   ' → logprob: -7.9678497314453125

Token 1394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028366113547235727
    2. '1' → logprob: -5.87783670425415
    3. 'dp' → logprob: -10.502836227416992
    4. ' ' → logprob: -12.502836227416992
    5. '```' → logprob: -16.190336227416992
    6. ' dp' → logprob: -16.315336227416992
    7. 'ai' → logprob: -16.502836227416992
    8. '   ' → logprob: -17.065336227416992
    9. '(dp' → logprob: -17.627836227416992
    10. '000' → logprob: -18.065336227416992

Token 1395: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010955691104754806
    2. '1' → logprob: -7.001095771789551
    3. 'dp' → logprob: -8.62609577178955
    4. 'ai' → logprob: -12.87609577178955
    5. ' ' → logprob: -13.50109577178955
    6. ' dp' → logprob: -15.93859577178955
    7. '```' → logprob: -16.813594818115234
    8. 'd' → logprob: -16.876094818115234
    9. 'r' → logprob: -17.063594818115234
    10. '000' → logprob: -17.188594818115234

Token 1396: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1397: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1398: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6117749214172363
    2. 'continue' → logprob: -1.6117749214172363
    3. ' continue' → logprob: -1.8617749214172363
    4. '<|end|>' → logprob: -2.3617749214172363
    5. '	continue' → logprob: -5.986774921417236
    6. '           ' → logprob: -6.736774921417236
    7. '   ' → logprob: -7.236774921417236
    8. '
' → logprob: -7.236774921417236
    9. ')' → logprob: -7.611774921417236
    10. ' ' → logprob: -7.611774921417236

Token 1399: ' incr' (ID: 52395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.49896764755249023
    2. ' continue' → logprob: -0.9989676475524902
    3. '	continue' → logprob: -4.24896764755249
    4. '       ' → logprob: -5.49896764755249
    5. '=' → logprob: -6.24896764755249
    6. '   ' → logprob: -6.99896764755249
    7. ')' → logprob: -7.62396764755249
    8. '<|end|>' → logprob: -7.62396764755249
    9. '           ' → logprob: -7.74896764755249
    10. 'contin' → logprob: -7.87396764755249

Token 1400: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3008317947387695
    2. '+' → logprob: -1.4258317947387695
    3. ' +=' → logprob: -1.5508317947387695
    4. '=' → logprob: -1.9258317947387695
    5. '+=' → logprob: -3.6758317947387695
    6. '\' → logprob: -3.9258317947387695
    7. 'dp' → logprob: -4.3008317947387695
    8. ' =' → logprob: -4.6758317947387695
    9. '++' → logprob: -4.8008317947387695
    10. '\n' → logprob: -5.0508317947387695

Token 1401: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00837686751037836
    2. 'mente' → logprob: -5.0083770751953125
    3. 'm' → logprob: -7.6333770751953125
    4. 'mental' → logprob: -8.133377075195312
    5. 'dp' → logprob: -8.508377075195312
    6. 'me' → logprob: -8.883377075195312
    7. 'ments' → logprob: -9.133377075195312
    8. 'mentation' → logprob: -9.133377075195312
    9. 'mented' → logprob: -9.258377075195312
    10. 'mp' → logprob: -9.758377075195312

Token 1402: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1403: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009862465085461736
    2. '[i' → logprob: -7.500986099243164
    3. '0' → logprob: -8.375986099243164
    4. 'dp' → logprob: -10.000986099243164
    5. ')' → logprob: -10.750986099243164
    6. '\[' → logprob: -10.875986099243164
    7. '[:]' → logprob: -11.000986099243164
    8. '```' → logprob: -11.250986099243164
    9. '(' → logprob: -11.500986099243164
    10. ']' → logprob: -11.625986099243164

Token 1404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018295119516551495
    2. '[' → logprob: -6.376829624176025
    3. '(' → logprob: -10.001829147338867
    4. ' ' → logprob: -10.001829147338867
    5. ']' → logprob: -11.751829147338867
    6. 'ai' → logprob: -12.376829147338867
    7. '(ai' → logprob: -12.376829147338867
    8. '[i' → logprob: -12.626829147338867
    9. ')' → logprob: -13.064329147338867
    10. 'i' → logprob: -13.189329147338867

Token 1405: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3405425548553467
    2. ']' → logprob: -1.8405425548553467
    3. '<|end|>' → logprob: -2.3405425548553467
    4. '       ' → logprob: -4.965542793273926
    5. ' )' → logprob: -4.965542793273926
    6. '[' → logprob: -5.090542793273926
    7. '<|end|>' → logprob: -5.340542793273926
    8. ' ]' → logprob: -5.965542793273926
    9. '
' → logprob: -6.840542793273926
    10. '+' → logprob: -7.090542793273926

Token 1406: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49019020795822144
    2. '<|end|>' → logprob: -1.1151902675628662
    3. '
' → logprob: -4.115190029144287
    4. ')' → logprob: -4.490190029144287
    5. ' continue' → logprob: -5.115190029144287
    6. '           ' → logprob: -5.365190029144287
    7. '[' → logprob: -5.490190029144287
    8. 'continue' → logprob: -5.740190029144287
    9. '   ' → logprob: -5.740190029144287
    10. ' else' → logprob: -6.365190029144287

Token 1407: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0737156867980957
    2. '
' → logprob: -3.5737156867980957
    3. '<|end|>' → logprob: -4.448715686798096
    4. ' )' → logprob: -5.073715686798096
    5. ' ' → logprob: -5.448715686798096
    6. '\n' → logprob: -5.448715686798096
    7. 'continue' → logprob: -5.573715686798096
    8. ' continue' → logprob: -5.698715686798096
    9. ')
' → logprob: -6.823715686798096
    10. '+' → logprob: -6.823715686798096

Token 1408: ' compt' (ID: 39238)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3884916305541992
    2. '1' → logprob: -1.3884916305541992
    3. 'ai' → logprob: -3.263491630554199
    4. ' )' → logprob: -4.263491630554199
    5. ' ai' → logprob: -5.263491630554199
    6. 'continue' → logprob: -5.763491630554199
    7. 'dp' → logprob: -6.388491630554199
    8. '```' → logprob: -6.388491630554199
    9. ' ' → logprob: -6.888491630554199
    10. '0' → logprob: -6.888491630554199

Token 1409: 'abil' (ID: 4168)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.1143519878387451
    2. 'er' → logprob: -1.4893519878387451
    3. 'inue' → logprob: -1.4893519878387451
    4. ')' → logprob: -2.614351987838745
    5. '+' → logprob: -3.239351987838745
    6. '++)' → logprob: -3.864351987838745
    7. 'e' → logprob: -3.864351987838745
    8. '=' → logprob: -4.114352226257324
    9. '++' → logprob: -4.239352226257324
    10. ' +=' → logprob: -4.989352226257324

Token 1410: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006052158772945404
    2. 'e' → logprob: -5.131052017211914
    3. 'é' → logprob: -9.256052017211914
    4. ')' → logprob: -12.256052017211914
    5. '+' → logprob: -12.631052017211914
    6. 'ant' → logprob: -12.756052017211914
    7. '=' → logprob: -13.131052017211914
    8. 'ent' → logprob: -13.256052017211914
    9. 'eur' → logprob: -13.381052017211914
    10. '1' → logprob: -13.506052017211914

Token 1411: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3449293375015259
    2. ')' → logprob: -1.3449293375015259
    3. ' )' → logprob: -3.9699292182922363
    4. ' ' → logprob: -5.344929218292236
    5. 'dp' → logprob: -6.344929218292236
    6. ' +' → logprob: -6.594929218292236
    7. '+' → logprob: -6.969929218292236
    8. '(' → logprob: -7.469929218292236
    9. ' ai' → logprob: -7.469929218292236
    10. '(ai' → logprob: -7.719929218292236

Token 1412: ' fait' (ID: 7473)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3254812955856323
    2. '0' → logprob: -1.7004812955856323
    3. ')' → logprob: -1.8254812955856323
    4. ' )' → logprob: -2.450481414794922
    5. 'ai' → logprob: -2.825481414794922
    6. 'possible' → logprob: -3.075481414794922
    7. 'dp' → logprob: -3.450481414794922
    8. ' ' → logprob: -3.950481414794922
    9. ' ai' → logprob: -4.075481414794922
    10. ' dp' → logprob: -4.200481414794922

Token 1413: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9808923006057739
    2. '+' → logprob: -0.9808923006057739
    3. ' +=' → logprob: -1.980892300605774
    4. ' +' → logprob: -2.8558921813964844
    5. ' )' → logprob: -3.7308921813964844
    6. '+=' → logprob: -3.8558921813964844
    7. '   ' → logprob: -5.605892181396484
    8. ' de' → logprob: -6.980892181396484
    9. '=' → logprob: -7.480892181396484
    10. '<|end|>' → logprob: -7.730892181396484

Token 1414: ''' (ID: 6)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.035961128771305084
    2. 'ne' → logprob: -3.910961151123047
    3. ' choisir' → logprob: -4.785961151123047
    4. ')' → logprob: -6.410961151123047
    5. 'r' → logprob: -7.660961151123047
    6. ' ' → logprob: -7.910961151123047
    7. ' n' → logprob: -8.160961151123047
    8. ' )' → logprob: -8.160961151123047
    9. 'cho' → logprob: -8.160961151123047
    10. ''' → logprob: -8.285961151123047

Token 1415: 'ign' (ID: 733)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.5990146398544312
    2. ' ne' → logprob: -1.7240146398544312
    3. 'r' → logprob: -2.0990147590637207
    4. 'cho' → logprob: -2.4740147590637207
    5. 'faire' → logprob: -4.349014759063721
    6. ' choisir' → logprob: -4.474014759063721
    7. 'not' → logprob: -4.974014759063721
    8. 'pass' → logprob: -4.974014759063721
    9. '0' → logprob: -5.974014759063721
    10. '```' → logprob: -6.099014759063721

Token 1416: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.03967813029885292
    2. 'er' → logprob: -3.6646780967712402
    3. 'n' → logprob: -5.78967809677124
    4. 'érer' → logprob: -5.91467809677124
    5. 'oring' → logprob: -6.78967809677124
    6. '   ' → logprob: -6.91467809677124
    7. 'or' → logprob: -7.41467809677124
    8. 'ore' → logprob: -7.78967809677124
    9. 'orner' → logprob: -7.78967809677124
    10. 'e' → logprob: -8.164678573608398

Token 1417: ' cet' (ID: 19505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.315678209066391
    2. ' )' → logprob: -2.065678119659424
    3. 'dp' → logprob: -2.565678119659424
    4. 'ai' → logprob: -3.190678119659424
    5. ' dp' → logprob: -5.690678119659424
    6. ' ai' → logprob: -5.690678119659424
    7. ' ' → logprob: -5.690678119659424
    8. '<|end|>' → logprob: -5.815678119659424
    9. '(dp' → logprob: -5.815678119659424
    10. '0' → logprob: -5.940678119659424

Token 1418: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4967910349369049
    2. 'ai' → logprob: -1.8717910051345825
    3. ' élément' → logprob: -2.121791124343872
    4. ')' → logprob: -2.996791124343872
    5. 'element' → logprob: -3.246791124343872
    6. ' element' → logprob: -4.746790885925293
    7. ' )' → logprob: -5.121790885925293
    8. ' ai' → logprob: -5.496790885925293
    9. 'token' → logprob: -6.371790885925293
    10. 'elem' → logprob: -6.496790885925293

Token 1419: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10279536247253418
    2. '<|end|>' → logprob: -2.727795362472534
    3. '       ' → logprob: -3.602795362472534
    4. '<|end|>' → logprob: -6.727795600891113
    5. ' )' → logprob: -7.227795600891113
    6. '
' → logprob: -7.352795600891113
    7. '   ' → logprob: -7.352795600891113
    8. ']' → logprob: -8.227795600891113
    9. '           ' → logprob: -8.602795600891113
    10. '...' → logprob: -8.727795600891113

Token 1420: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2365744709968567
    2. '<|end|>' → logprob: -1.611574411392212
    3. 'continue' → logprob: -5.861574649810791
    4. '
' → logprob: -6.861574649810791
    5. '   ' → logprob: -6.861574649810791
    6. '[' → logprob: -7.111574649810791
    7. ')' → logprob: -7.236574649810791
    8. ' continue' → logprob: -7.236574649810791
    9. '<|end|>' → logprob: -7.611574649810791
    10. '           ' → logprob: -7.611574649810791

Token 1421: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.21080653369426727
    2. '       ' → logprob: -2.0858066082000732
    3. ' continue' → logprob: -2.9608066082000732
    4. '	continue' → logprob: -4.585806369781494
    5. '	' → logprob: -6.585806369781494
    6. '           ' → logprob: -6.835806369781494
    7. 'else' → logprob: -7.960806369781494
    8. '   ' → logprob: -8.085806846618652
    9. 'contin' → logprob: -8.835806846618652
    10. ' ' → logprob: -9.460806846618652

Token 1422: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08485228568315506
    2. '<|end|>' → logprob: -2.9598522186279297
    3. '   ' → logprob: -4.33485221862793
    4. '
' → logprob: -4.70985221862793
    5. '	' → logprob: -6.08485221862793
    6. '        
' → logprob: -7.33485221862793
    7. '<|end|>' → logprob: -7.58485221862793
    8. ')' → logprob: -7.70985221862793
    9. '    
' → logprob: -7.83485221862793
    10. '```' → logprob: -7.83485221862793

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02403193712234497
    2. '   ' → logprob: -3.8990318775177
    3. 'dp' → logprob: -6.024032115936279
    4. '```' → logprob: -7.899032115936279
    5. 'for' → logprob: -8.024031639099121
    6. ' for' → logprob: -8.899031639099121
    7. ' dp' → logprob: -10.149031639099121
    8. 'tmp' → logprob: -10.274031639099121
    9. '	' → logprob: -10.524031639099121
    10. '        
' → logprob: -10.774031639099121

Token 1424: ' #' (ID: 1069)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5589364767074585
    2. 'for' → logprob: -1.4339364767074585
    3. 'new' → logprob: -2.058936595916748
    4. 'dp' → logprob: -2.933936595916748
    5. '       ' → logprob: -5.808936595916748
    6. 'tmp' → logprob: -5.808936595916748
    7. 'next' → logprob: -6.808936595916748
    8. '   ' → logprob: -7.058936595916748
    9. 'n' → logprob: -8.43393611907959
    10. 'prev' → logprob: -9.18393611907959

Token 1425: ' Mise' (ID: 157932)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.38901734352111816
    2. 'for' → logprob: -1.5140173435211182
    3. 'new' → logprob: -2.514017343521118
    4. 'dp' → logprob: -4.889017105102539
    5. 'n' → logprob: -5.389017105102539
    6. 'next' → logprob: -5.514017105102539
    7. 'tmp' → logprob: -5.639017105102539
    8. 'nx' → logprob: -7.264017105102539
    9. 'ndi' → logprob: -8.889017105102539
    10. 'ndl' → logprob: -9.139017105102539

Token 1426: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16730813682079315
    2. '   ' → logprob: -2.2923080921173096
    3. ' à' → logprob: -3.7923080921173096
    4. ' =' → logprob: -5.167308330535889
    5. '    ' → logprob: -5.417308330535889
    6. 'à' → logprob: -5.542308330535889
    7. 'dp' → logprob: -5.542308330535889
    8. ' en' → logprob: -5.917308330535889
    9. 'for' → logprob: -6.042308330535889
    10. ' for' → logprob: -6.917308330535889

Token 1427: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0010038702748715878
    2. '```' → logprob: -7.376003742218018
    3. 'jou' → logprob: -8.126004219055176
    4. 'jours' → logprob: -9.751004219055176
    5. 'day' → logprob: -11.501004219055176
    6. 'journ' → logprob: -12.376004219055176
    7. '#' → logprob: -13.251004219055176
    8. ' jour' → logprob: -13.251004219055176
    9. '``' → logprob: -13.626004219055176
    10. 'for' → logprob: -13.876004219055176

Token 1428: ' spéciale' (ID: 142408)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0097945928573608
    2. ' for' → logprob: -1.2597945928573608
    3. '       ' → logprob: -1.8847945928573608
    4. 'dp' → logprob: -2.5097947120666504
    5. ' dp' → logprob: -2.6347947120666504
    6. ' =' → logprob: -3.8847947120666504
    7. 'for' → logprob: -4.00979471206665
    8. '_dp' → logprob: -5.63479471206665
    9. '    ' → logprob: -6.50979471206665
    10. '[' → logprob: -7.00979471206665

Token 1429: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8061831593513489
    2. ' for' → logprob: -0.9311831593513489
    3. '   ' → logprob: -2.431183099746704
    4. 'for' → logprob: -3.806183099746704
    5. 'dp' → logprob: -4.181183338165283
    6. '    ' → logprob: -4.681183338165283
    7. '[' → logprob: -4.931183338165283
    8. ',' → logprob: -5.681183338165283
    9. ' dp' → logprob: -5.931183338165283
    10. ' =' → logprob: -6.306183338165283

Token 1430: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17191678285598755
    2. 'ai' → logprob: -1.9219167232513428
    3. 'i' → logprob: -5.546916961669922
    4. '0' → logprob: -5.671916961669922
    5. '(ai' → logprob: -6.796916961669922
    6. 's' → logprob: -7.296916961669922
    7. 'j' → logprob: -7.421916961669922
    8. '   ' → logprob: -7.546916961669922
    9. '(' → logprob: -8.421916961669922
    10. '(dp' → logprob: -8.921916961669922

Token 1431: '[s' (ID: 24177)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0634443536400795
    2. ' =' → logprob: -4.063444137573242
    3. '0' → logprob: -4.313444137573242
    4. 'dp' → logprob: -4.938444137573242
    5. '_ai' → logprob: -5.063444137573242
    6. 'ai' → logprob: -5.813444137573242
    7. 's' → logprob: -6.313444137573242
    8. '[:' → logprob: -6.313444137573242
    9. '=' → logprob: -6.313444137573242
    10. '[:]' → logprob: -6.438444137573242

Token 1432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01314952690154314
    2. ']:' → logprob: -4.888149738311768
    3. ']+' → logprob: -6.513149738311768
    4. '-' → logprob: -6.888149738311768
    5. '[' → logprob: -7.513149738311768
    6. '])' → logprob: -8.01314926147461
    7. ']+=' → logprob: -8.26314926147461
    8. '   ' → logprob: -8.38814926147461
    9. ']:
' → logprob: -8.51314926147461
    10. '[s' → logprob: -8.76314926147461

Token 1433: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9942557215690613
    2. '+=' → logprob: -1.369255781173706
    3. ' +=' → logprob: -1.744255781173706
    4. '       ' → logprob: -2.869255781173706
    5. '=' → logprob: -3.244255781173706
    6. ' -=' → logprob: -3.369255781173706
    7. '[' → logprob: -3.869255781173706
    8. 'dp' → logprob: -4.119255542755127
    9. '-=' → logprob: -4.619255542755127
    10. ' =' → logprob: -4.619255542755127

Token 1434: ' tenant' (ID: 38634)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18702414631843567
    2. 's' → logprob: -3.1870241165161133
    3. 'aj' → logprob: -3.9370241165161133
    4. '(dp' → logprob: -4.187024116516113
    5. 'tmp' → logprob: -4.562024116516113
    6. 'for' → logprob: -4.687024116516113
    7. 'temp' → logprob: -5.062024116516113
    8. '```' → logprob: -5.062024116516113
    9. 'multip' → logprob: -5.062024116516113
    10. '+=' → logprob: -5.187024116516113

Token 1435: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0010967610869556665
    2. ' compte' → logprob: -7.751096725463867
    3. '   ' → logprob: -8.501096725463867
    4. ' ' → logprob: -8.751096725463867
    5. '     ' → logprob: -9.626096725463867
    6. '```' → logprob: -9.876096725463867
    7. '  ' → logprob: -10.001096725463867
    8. '_comp' → logprob: -10.751096725463867
    9. '    ' → logprob: -10.876096725463867
    10. '       ' → logprob: -11.001096725463867

Token 1436: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37437671422958374
    2. ' de' → logprob: -2.4993767738342285
    3. 'dp' → logprob: -2.4993767738342285
    4. 'de' → logprob: -2.7493767738342285
    5. '[' → logprob: -2.9993767738342285
    6. '   ' → logprob: -4.7493767738342285
    7. 'des' → logprob: -5.2493767738342285
    8. '(dp' → logprob: -5.4993767738342285
    9. '[]' → logprob: -5.9993767738342285
    10. ' des' → logprob: -6.2493767738342285

Token 1437: ' l' (ID: 305)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.6034073233604431
    2. 'dp' → logprob: -0.9784073233604431
    3. '(ai' → logprob: -3.728407382965088
    4. 'i' → logprob: -3.853407382965088
    5. '(i' → logprob: -4.978407382965088
    6. 'a' → logprob: -5.103407382965088
    7. 's' → logprob: -5.853407382965088
    8. ' ai' → logprob: -6.228407382965088
    9. '1' → logprob: -6.228407382965088
    10. '(' → logprob: -6.353407382965088

Token 1438: ''' (ID: 6)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6354990601539612
    2. 'i' → logprob: -1.5104990005493164
    3. '[i' → logprob: -2.0104990005493164
    4. 'ai' → logprob: -3.6354990005493164
    5. 's' → logprob: -4.010499000549316
    6. 'a' → logprob: -4.635499000549316
    7. ' dp' → logprob: -4.760499000549316
    8. '[' → logprob: -5.260499000549316
    9. '0' → logprob: -5.385499000549316
    10. ' i' → logprob: -5.510499000549316

Token 1439: 'élé' (ID: 15228)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6958059668540955
    2. 'i' → logprob: -1.3208060264587402
    3. 'ai' → logprob: -1.8208060264587402
    4. '(i' → logprob: -4.19580602645874
    5. '[i' → logprob: -4.57080602645874
    6. 'range' → logprob: -4.94580602645874
    7. '0' → logprob: -5.44580602645874
    8. 'value' → logprob: -5.69580602645874
    9. 'presence' → logprob: -5.69580602645874
    10. 'if' → logprob: -5.69580602645874

Token 1440: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.010171446017920971
    2. 'ément' → logprob: -5.260171413421631
    3. 'ments' → logprob: -6.260171413421631
    4. 'mentation' → logprob: -7.635171413421631
    5. 'ement' → logprob: -8.260171890258789
    6. 'vation' → logprob: -8.385171890258789
    7. '   ' → logprob: -8.510171890258789
    8. ']' → logprob: -8.510171890258789
    9. '```' → logprob: -8.510171890258789
    10. '#' → logprob: -8.635171890258789

Token 1441: ' courant' (ID: 74694)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.5668191909790039
    2. '[' → logprob: -1.191819190979004
    3. 's' → logprob: -3.066819190979004
    4. '```' → logprob: -3.941819190979004
    5. 'dp' → logprob: -4.066819190979004
    6. '       ' → logprob: -4.566819190979004
    7. ':' → logprob: -4.691819190979004
    8. '   ' → logprob: -4.816819190979004
    9. 'ai' → logprob: -5.316819190979004
    10. '[:]' → logprob: -6.191819190979004

Token 1442: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5962599515914917
    2. '
' → logprob: -1.5962599515914917
    3. 'dp' → logprob: -2.3462600708007812
    4. '   ' → logprob: -2.5962600708007812
    5. ' =' → logprob: -3.3462600708007812
    6. ' +=' → logprob: -4.721260070800781
    7. ' dp' → logprob: -5.221260070800781
    8. '```' → logprob: -5.346260070800781
    9. '[' → logprob: -5.596260070800781
    10. ' if' → logprob: -5.846260070800781

Token 1443: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33025938272476196
    2. '       ' → logprob: -2.455259323120117
    3. 'ai' → logprob: -2.580259323120117
    4. 'i' → logprob: -3.455259323120117
    5. ' dp' → logprob: -4.330259323120117
    6. '1' → logprob: -4.455259323120117
    7. 'l' → logprob: -5.080259323120117
    8. '           ' → logprob: -5.205259323120117
    9. '(i' → logprob: -5.330259323120117
    10. 'le' → logprob: -5.455259323120117

Token 1444: ' sa' (ID: 880)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8074771165847778
    2. 'ai' → logprob: -1.5574771165847778
    3. '(ai' → logprob: -2.1824769973754883
    4. '(i' → logprob: -2.9324769973754883
    5. '1' → logprob: -3.5574769973754883
    6. 'i' → logprob: -3.5574769973754883
    7. '(dp' → logprob: -4.057476997375488
    8. '(s' → logprob: -4.307476997375488
    9. '(' → logprob: -4.432476997375488
    10. 's' → logprob: -4.432476997375488

Token 1445: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1151219606399536
    2. 'dp' → logprob: -1.8651219606399536
    3. 'val' → logprob: -1.9901219606399536
    4. 'position' → logprob: -2.615121841430664
    5. ' valeur' → logprob: -2.615121841430664
    6. 'multip' → logprob: -2.740121841430664
    7. ' i' → logprob: -3.240121841430664
    8. 'distance' → logprob: -3.740121841430664
    9. ' dp' → logprob: -4.115121841430664
    10. ' position' → logprob: -4.365121841430664

Token 1446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011528394185006618
    2. 'dp' → logprob: -4.636528491973877
    3. ' dp' → logprob: -7.136528491973877
    4. '   ' → logprob: -8.386528015136719
    5. '[' → logprob: -8.761528015136719
    6. '```' → logprob: -9.136528015136719
    7. ',' → logprob: -9.511528015136719
    8. 'if' → logprob: -9.636528015136719
    9. ' if' → logprob: -9.636528015136719
    10. '           ' → logprob: -10.011528015136719

Token 1447: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25246238708496094
    2. '       ' → logprob: -1.752462387084961
    3. 'dp' → logprob: -3.627462387084961
    4. ' dp' → logprob: -4.627462387084961
    5. '[' → logprob: -5.502462387084961
    6. '```' → logprob: -5.502462387084961
    7. ' if' → logprob: -6.252462387084961
    8. ' for' → logprob: -6.877462387084961
    9. 'for' → logprob: -7.627462387084961
    10. '           ' → logprob: -7.877462387084961

Token 1448: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.013996013440191746
    2. '       ' → logprob: -5.013996124267578
    3. 'for' → logprob: -5.888996124267578
    4. ' dp' → logprob: -6.013996124267578
    5. 'if' → logprob: -6.513996124267578
    6. '   ' → logprob: -7.763996124267578
    7. ' for' → logprob: -10.138996124267578
    8. ' if' → logprob: -10.638996124267578
    9. 'tmp' → logprob: -10.888996124267578
    10. '           ' → logprob: -11.388996124267578

Token 1449: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0005831766175106168
    2. '[' → logprob: -7.500583171844482
    3. 's' → logprob: -11.62558364868164
    4. ' =' → logprob: -11.87558364868164
    5. '[
' → logprob: -13.00058364868164
    6. '[i' → logprob: -13.00058364868164
    7. '=' → logprob: -13.37558364868164
    8. '=s' → logprob: -13.50058364868164
    9. '[-' → logprob: -13.75058364868164
    10. ' [' → logprob: -13.75058364868164

Token 1450: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019282618537545204
    2. ']+=' → logprob: -4.144282817840576
    3. '-' → logprob: -6.144282817840576
    4. ']=' → logprob: -7.019282817840576
    5. '-=' → logprob: -9.894282341003418
    6. ']+' → logprob: -10.019282341003418
    7. ']-' → logprob: -10.269282341003418
    8. ']*' → logprob: -10.894282341003418
    9. ' ]' → logprob: -11.894282341003418
    10. ' -' → logprob: -11.894282341003418

Token 1451: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5982431173324585
    2. '+=' → logprob: -0.8482431173324585
    3. '-=' → logprob: -4.723243236541748
    4. ' =' → logprob: -5.098243236541748
    5. ' +=' → logprob: -5.348243236541748
    6. '*=' → logprob: -6.848243236541748
    7. '^' → logprob: -7.473243236541748
    8. ' ^=' → logprob: -8.47324275970459
    9. ' -=' → logprob: -8.72324275970459
    10. '%=' → logprob: -8.72324275970459

Token 1452: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.039800141006708145
    2. '(dp' → logprob: -4.53980016708374
    3. 'pow' → logprob: -5.16480016708374
    4. 'ai' → logprob: -5.28980016708374
    5. '(' → logprob: -5.41480016708374
    6. '1' → logprob: -5.53980016708374
    7. '(i' → logprob: -5.78980016708374
    8. '(ai' → logprob: -6.28980016708374
    9. 'i' → logprob: -6.91480016708374
    10. '((' → logprob: -7.28980016708374

Token 1453: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0006317823426797986
    2. 's' → logprob: -7.500631809234619
    3. '[' → logprob: -9.875631332397461
    4. '(s' → logprob: -10.875631332397461
    5. '[(' → logprob: -12.625631332397461
    6. '[
' → logprob: -14.000631332397461
    7. '   ' → logprob: -14.125631332397461
    8. '[max' → logprob: -14.125631332397461
    9. 'max' → logprob: -14.500631332397461
    10. '```' → logprob: -14.875631332397461

Token 1454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.432392954826355
    2. '-' → logprob: -1.307392954826355
    3. '-ai' → logprob: -2.6823930740356445
    4. '-s' → logprob: -4.4323930740356445
    5. ']' → logprob: -9.182393074035645
    6. '[' → logprob: -10.057393074035645
    7. '[s' → logprob: -10.182393074035645
    8. 's' → logprob: -10.807393074035645
    9. '-p' → logprob: -12.057393074035645
    10. '-si' → logprob: -12.182393074035645

Token 1455: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -4.723352049040841e-06
    2. 'a' → logprob: -12.875004768371582
    3. ' ai' → logprob: -13.125004768371582
    4. '(ai' → logprob: -16.250003814697266
    5. 'aa' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.750003814697266
    7. 'aj' → logprob: -18.750003814697266
    8. ' ' → logprob: -20.000003814697266
    9. '_ai' → logprob: -20.000003814697266
    10. '```' → logprob: -20.250003814697266

Token 1456: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020735491125378758
    2. ']*' → logprob: -9.50020694732666
    3. '])' → logprob: -10.25020694732666
    4. ' ]' → logprob: -10.25020694732666
    5. ']
' → logprob: -11.25020694732666
    6. 's' → logprob: -12.00020694732666
    7. ']+' → logprob: -12.00020694732666
    8. '[i' → logprob: -12.00020694732666
    9. ']%' → logprob: -12.00020694732666
    10. '-' → logprob: -12.37520694732666

Token 1457: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1458: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07651455700397491
    2. '(' → logprob: -3.826514482498169
    3. '(s' → logprob: -3.951514482498169
    4. 'i' → logprob: -4.201514720916748
    5. '2' → logprob: -5.451514720916748
    6. 'pow' → logprob: -5.451514720916748
    7. '(ai' → logprob: -5.826514720916748
    8. 'ai' → logprob: -6.451514720916748
    9. '(n' → logprob: -6.826514720916748
    10. '(max' → logprob: -7.201514720916748

Token 1459: 'n' (ID: 77)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03232679143548012
    2. 'i' → logprob: -4.282326698303223
    3. '(' → logprob: -4.907326698303223
    4. '(n' → logprob: -5.907326698303223
    5. '2' → logprob: -6.282326698303223
    6. '(ai' → logprob: -6.407326698303223
    7. '(s' → logprob: -6.532326698303223
    8. 'pow' → logprob: -7.032326698303223
    9. 'ai' → logprob: -8.032326698303223
    10. '(pow' → logprob: -8.157326698303223

Token 1460: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7023795247077942
    2. ' -' → logprob: -0.7023795247077942
    3. '-i' → logprob: -4.7023797035217285
    4. '+' → logprob: -10.45237922668457
    5. '[i' → logprob: -10.95237922668457
    6. ' ' → logprob: -11.45237922668457
    7. ')' → logprob: -11.70237922668457
    8. '   ' → logprob: -11.70237922668457
    9. 's' → logprob: -12.07737922668457
    10. '-
' → logprob: -12.20237922668457

Token 1461: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.4192871175473556e-05
    2. '1' → logprob: -9.875054359436035
    3. ' i' → logprob: -13.000054359436035
    4. '(i' → logprob: -15.625054359436035
    5. '   ' → logprob: -16.00005340576172
    6. '[i' → logprob: -16.75005340576172
    7. '_i' → logprob: -17.50005340576172
    8. '	i' → logprob: -17.50005340576172
    9. '(' → logprob: -18.25005340576172
    10. '
' → logprob: -18.75005340576172

Token 1462: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7108226418495178
    2. '-' → logprob: -0.7108226418495178
    3. ' -' → logprob: -4.335822582244873
    4. ' )' → logprob: -5.460822582244873
    5. ' ' → logprob: -10.335823059082031
    6. '1' → logprob: -10.710823059082031
    7. ')
' → logprob: -10.960823059082031
    8. '-)' → logprob: -11.085823059082031
    9. '),' → logprob: -11.460823059082031
    10. '+' → logprob: -11.710823059082031

Token 1463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1911691427230835
    2. '
' → logprob: -2.691169261932373
    3. '\n' → logprob: -3.316169261932373
    4. '<|end|>' → logprob: -3.691169261932373
    5. ')' → logprob: -3.941169261932373
    6. '```' → logprob: -6.066169261932373
    7. '+' → logprob: -6.441169261932373
    8. '[' → logprob: -6.441169261932373
    9. '**' → logprob: -6.441169261932373
    10. '%' → logprob: -6.566169261932373

Token 1464: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25736626982688904
    2. '\n' → logprob: -2.007366180419922
    3. '
' → logprob: -2.632366180419922
    4. '<|end|>' → logprob: -6.007366180419922
    5. ')' → logprob: -6.132366180419922
    6. '\' → logprob: -6.132366180419922
    7. '```' → logprob: -6.382366180419922
    8. '.' → logprob: -6.632366180419922
    9. '   ' → logprob: -6.632366180419922
    10. '%' → logprob: -6.757366180419922

Token 1465: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.07897086441516876
    2. '[' → logprob: -3.5789709091186523
    3. ' =' → logprob: -3.8289709091186523
    4. '[:' → logprob: -4.578970909118652
    5. '=' → logprob: -5.203970909118652
    6. '[:-' → logprob: -5.203970909118652
    7. '2' → logprob: -6.953970909118652
    8. '[:]' → logprob: -6.953970909118652
    9. '_' → logprob: -7.703970909118652
    10. 's' → logprob: -7.828970909118652

Token 1466: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20576544106006622
    2. ' -' → logprob: -1.7057654857635498
    3. ']' → logprob: -5.830765247344971
    4. '-s' → logprob: -7.455765247344971
    5. '-ai' → logprob: -8.080765724182129
    6. ' -=' → logprob: -8.330765724182129
    7. '   ' → logprob: -9.330765724182129
    8. ')' → logprob: -9.705765724182129
    9. '-=' → logprob: -9.705765724182129
    10. '-
' → logprob: -10.705765724182129

Token 1467: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0017489612801000476
    2. ' %=' → logprob: -6.501749038696289
    3. '%' → logprob: -8.501749038696289
    4. ')' → logprob: -10.751749038696289
    5. ')%' → logprob: -12.126749038696289
    6. '%s' → logprob: -12.376749038696289
    7. ']' → logprob: -12.501749038696289
    8. '```' → logprob: -12.751749038696289
    9. '=' → logprob: -13.126749038696289
    10. '   ' → logprob: -13.376749038696289

Token 1468: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. '(mod' → logprob: -16.875
    3. ' mod' → logprob: -17.375
    4. '	mod' → logprob: -20.875
    5. '998' → logprob: -21.125
    6. 'moder' → logprob: -22.75
    7. 'MOD' → logprob: -23.125
    8. '999' → logprob: -23.75
    9. 'mods' → logprob: -23.875
    10. ' мод' → logprob: -24.0

Token 1469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.375
    4. ' ' → logprob: -16.625
    5. '    
' → logprob: -17.5
    6. '       ' → logprob: -17.75
    7. '
' → logprob: -18.375
    8. '₂' → logprob: -18.5
    9. '        
' → logprob: -18.75
    10. '   
' → logprob: -19.125

Token 1470: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01834964007139206
    2. '<|end|>' → logprob: -4.518349647521973
    3. '	' → logprob: -5.393349647521973
    4. '   ' → logprob: -6.893349647521973
    5. ' ' → logprob: -8.268349647521973
    6. '
' → logprob: -8.393349647521973
    7. '<|end|>' → logprob: -8.518349647521973
    8. ' for' → logprob: -8.518349647521973
    9. 'for' → logprob: -9.268349647521973
    10. '  
' → logprob: -9.518349647521973

Token 1471: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4144890308380127
    2. '<|end|>' → logprob: -1.4144890308380127
    3. '   ' → logprob: -2.9144890308380127
    4. '\n' → logprob: -4.914488792419434
    5. ' ' → logprob: -5.039488792419434
    6. '```' → logprob: -5.789488792419434
    7. ')' → logprob: -5.914488792419434
    8. '  
' → logprob: -6.039488792419434
    9. '    
' → logprob: -6.039488792419434
    10. '\' → logprob: -6.164488792419434

Token 1472: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34744852781295776
    2. '   ' → logprob: -1.7224485874176025
    3. '       ' → logprob: -2.4724485874176025
    4. ' for' → logprob: -3.5974485874176025
    5. '	for' → logprob: -6.597448348999023
    6. '<|end|>' → logprob: -7.722448348999023
    7. 'continue' → logprob: -8.097448348999023
    8. '```' → logprob: -8.222448348999023
    9. ' ' → logprob: -9.097448348999023
    10. 'dp' → logprob: -9.597448348999023

Token 1473: ' prend' (ID: 37463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1474: ' le' (ID: 505)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08590009063482285
    2. 'dp' → logprob: -2.960900068283081
    3. ')' → logprob: -4.46090030670166
    4. '(mod' → logprob: -5.46090030670166
    5. '```' → logprob: -5.58590030670166
    6. ' mod' → logprob: -5.83590030670166
    7. '(dp' → logprob: -6.21090030670166
    8. '%' → logprob: -6.33590030670166
    9. '10' → logprob: -7.08590030670166
    10. 's' → logprob: -7.33590030670166

Token 1475: ' résultat' (ID: 62556)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6537912487983704
    2. 'mod' → logprob: -0.7787912487983704
    3. 'dp' → logprob: -4.278791427612305
    4. 's' → logprob: -5.403791427612305
    5. ' modulo' → logprob: -6.778791427612305
    6. '%s' → logprob: -7.403791427612305
    7. ' mod' → logprob: -8.528791427612305
    8. '%=' → logprob: -8.778791427612305
    9. '%d' → logprob: -9.028791427612305
    10. '```' → logprob: -9.653791427612305

Token 1476: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04364221915602684
    2. ' %' → logprob: -3.418642282485962
    3. '```' → logprob: -5.793642044067383
    4. '<|end|>' → logprob: -5.793642044067383
    5. '%s' → logprob: -7.668642044067383
    6. ' modulo' → logprob: -7.668642044067383
    7. 'mod' → logprob: -7.918642044067383
    8. ' %=' → logprob: -7.918642044067383
    9. '<|end|>' → logprob: -8.293642044067383
    10. '[' → logprob: -8.543642044067383

Token 1477: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04306701570749283
    2. ' mod' → logprob: -3.16806697845459
    3. '(mod' → logprob: -9.66806697845459
    4. '```' → logprob: -13.04306697845459
    5. '`' → logprob: -14.41806697845459
    6. '	mod' → logprob: -15.04306697845459
    7. ' ' → logprob: -15.16806697845459
    8. '
' → logprob: -15.16806697845459
    9. ' 
' → logprob: -15.66806697845459
    10. '\n' → logprob: -15.91806697845459

Token 1478: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '₂' → logprob: -16.375
    3. 's' → logprob: -16.5
    4. ' ' → logprob: -16.625
    5. '```' → logprob: -16.75
    6. '_' → logprob: -17.25
    7. 'mod' → logprob: -17.875
    8. '²' → logprob: -18.4375
    9. '​' → logprob: -19.625
    10. '.' → logprob: -19.625

Token 1479: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1480: ' chaque' (ID: 21194)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.37732160091400146
    2. 's' → logprob: -2.377321720123291
    3. 'each' → logprob: -2.502321720123291
    4. '1' → logprob: -3.127321720123291
    5. '\n' → logprob: -4.377321720123291
    6. ')' → logprob: -4.627321720123291
    7. ' each' → logprob: -4.627321720123291
    8. '%' → logprob: -4.752321720123291
    9. '<|end|>' → logprob: -4.752321720123291
    10. '=' → logprob: -4.877321720123291

Token 1481: ' mise' (ID: 25868)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.008010093122720718
    2. '```' → logprob: -5.633009910583496
    3. '
' → logprob: -6.508009910583496
    4. 'newline' → logprob: -7.008009910583496
    5. ')' → logprob: -7.258009910583496
    6. '`' → logprob: -8.633009910583496
    7. '  
' → logprob: -8.758009910583496
    8. '\' → logprob: -8.883009910583496
    9. '\t' → logprob: -9.383009910583496
    10. ' ' → logprob: -9.508009910583496

Token 1482: ' à' (ID: 1221)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34815430641174316
    2. '=' → logprob: -2.223154306411743
    3. '+=' → logprob: -2.973154306411743
    4. '_dp' → logprob: -3.348154306411743
    5. '(dp' → logprob: -3.973154306411743
    6. ' +=' → logprob: -4.223154067993164
    7. '   ' → logprob: -4.848154067993164
    8. '%' → logprob: -4.973154067993164
    9. '_' → logprob: -5.098154067993164
    10. ']' → logprob: -5.098154067993164

Token 1483: ' jour' (ID: 8379)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5610911250114441
    2. 'mod' → logprob: -1.5610911846160889
    3. '100' → logprob: -1.8110911846160889
    4. '```' → logprob: -3.936091184616089
    5. 's' → logprob: -4.31109094619751
    6. '6' → logprob: -5.68609094619751
    7. 'len' → logprob: -5.93609094619751
    8. '%d' → logprob: -6.56109094619751
    9. '%' → logprob: -6.68609094619751
    10. '%s' → logprob: -6.93609094619751

Token 1484: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9410694241523743
    2. '<|end|>' → logprob: -1.1910693645477295
    3. '\n' → logprob: -2.1910693645477295
    4. '       ' → logprob: -2.5660693645477295
    5. '```' → logprob: -2.6910693645477295
    6. '\' → logprob: -4.691069602966309
    7. '	' → logprob: -5.191069602966309
    8. '    
' → logprob: -5.191069602966309
    9. '<|end|>' → logprob: -5.191069602966309
    10. ' 
' → logprob: -5.941069602966309

Token 1485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012313035549595952
    2. '```' → logprob: -6.8762311935424805
    3. 'for' → logprob: -8.87623119354248
    4. '   ' → logprob: -10.50123119354248
    5. '``' → logprob: -11.25123119354248
    6. ' for' → logprob: -11.62623119354248
    7. '        
' → logprob: -12.37623119354248
    8. '
' → logprob: -13.37623119354248
    9. '	' → logprob: -13.75123119354248
    10. '           ' → logprob: -14.00123119354248

Token 1486: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00039039674447849393
    2. '       ' → logprob: -8.00039005279541
    3. 'j' → logprob: -9.87539005279541
    4. '   ' → logprob: -13.50039005279541
    5. ' for' → logprob: -14.37539005279541
    6. 'dp' → logprob: -14.37539005279541
    7. '```' → logprob: -14.62539005279541
    8. 'if' → logprob: -16.625391006469727
    9. 'tmp' → logprob: -16.750391006469727
    10. 'x' → logprob: -17.250391006469727

Token 1487: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011391390580683947
    2. 'dp' → logprob: -9.875113487243652
    3. 'j' → logprob: -10.125113487243652
    4. 'tmp' → logprob: -11.750113487243652
    5. '   ' → logprob: -12.125113487243652
    6. ' for' → logprob: -12.750113487243652
    7. '```' → logprob: -13.875113487243652
    8. '       ' → logprob: -13.875113487243652
    9. 'prev' → logprob: -14.625113487243652
    10. 'temp' → logprob: -14.625113487243652

Token 1488: ' met' (ID: 1421)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04946397244930267
    2. ' for' → logprob: -3.049463987350464
    3. '   ' → logprob: -8.299464225769043
    4. '=' → logprob: -8.799464225769043
    5. '	for' → logprob: -9.174464225769043
    6. '[' → logprob: -9.299464225769043
    7. 'range' → logprob: -9.799464225769043
    8. '_' → logprob: -10.299464225769043
    9. '
' → logprob: -10.674464225769043
    10. ')' → logprob: -10.674464225769043

Token 1489: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7333875298500061
    2. '   ' → logprob: -0.9833875298500061
    3. 'à' → logprob: -2.2333874702453613
    4. ' à' → logprob: -3.9833874702453613
    5. ' for' → logprob: -4.733387470245361
    6. '       ' → logprob: -5.108387470245361
    7. 'j' → logprob: -6.608387470245361
    8. '	for' → logprob: -6.983387470245361
    9. '```' → logprob: -6.983387470245361
    10. 'pour' → logprob: -7.858387470245361

Token 1490: ' jour' (ID: 8379)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003284305799752474
    2. 'jour' → logprob: -5.878284454345703
    3. 'rang' → logprob: -8.878284454345703
    4. 'for' → logprob: -9.003284454345703
    5. ' range' → logprob: -9.628284454345703
    6. ' jour' → logprob: -10.253284454345703
    7. 'lace' → logprob: -10.628284454345703
    8. 'la' → logprob: -10.628284454345703
    9. 'l' → logprob: -11.378284454345703
    10. 'reverse' → logprob: -11.503284454345703

Token 1491: ' dp' (ID: 21546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9502467513084412
    2. 'dp' → logprob: -1.075246810913086
    3. ' s' → logprob: -1.575246810913086
    4. 'j' → logprob: -4.200246810913086
    5. 'range' → logprob: -4.450246810913086
    6. ' dp' → logprob: -4.575246810913086
    7. ' range' → logprob: -5.200246810913086
    8. ' j' → logprob: -5.325246810913086
    9. 'x' → logprob: -5.575246810913086
    10. 'ai' → logprob: -5.825246810913086

Token 1492: '[x' (ID: 17295)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.8409824371337891
    2. ' =' → logprob: -1.715982437133789
    3. '=' → logprob: -1.840982437133789
    4. '[' → logprob: -2.215982437133789
    5. '[:]' → logprob: -4.090982437133789
    6. '_' → logprob: -4.090982437133789
    7. '   ' → logprob: -4.340982437133789
    8. '[:' → logprob: -4.590982437133789
    9. 'dp' → logprob: -4.715982437133789
    10. '[i' → logprob: -4.715982437133789

Token 1493: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4275619387626648
    2. '=' → logprob: -2.5525619983673096
    3. '[' → logprob: -2.8025619983673096
    4. '[:]' → logprob: -2.9275619983673096
    5. '[x' → logprob: -3.0525619983673096
    6. '[s' → logprob: -3.1775619983673096
    7. '[:' → logprob: -3.4275619983673096
    8. '=[' → logprob: -4.9275617599487305
    9. '
' → logprob: -5.4275617599487305
    10. 'for' → logprob: -5.5525617599487305

Token 1494: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6482746601104736
    2. ' =' → logprob: -1.7732746601104736
    3. '[x' → logprob: -2.6482746601104736
    4. '[::-' → logprob: -3.0232746601104736
    5. '[:]' → logprob: -3.2732746601104736
    6. ' for' → logprob: -3.2732746601104736
    7. 'for' → logprob: -3.3982746601104736
    8. '=' → logprob: -4.0232744216918945
    9. '[:' → logprob: -4.1482744216918945
    10. '[s' → logprob: -4.1482744216918945

Token 1495: ' toutes' (ID: 17502)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010390079842181876
    2. ' x' → logprob: -9.750103950500488
    3. 'range' → logprob: -10.250103950500488
    4. 'j' → logprob: -12.000103950500488
    5. 'ai' → logprob: -12.875103950500488
    6. 's' → logprob: -14.750103950500488
    7. '```' → logprob: -15.125103950500488
    8. '   ' → logprob: -15.500103950500488
    9. 'reverse' → logprob: -15.625103950500488
    10. '	x' → logprob: -16.250102996826172

Token 1496: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5289567112922668
    2. ' range' → logprob: -1.153956651687622
    3. 'x' → logprob: -2.653956651687622
    4. ' x' → logprob: -3.778956651687622
    5. '(range' → logprob: -6.903956890106201
    6. '(x' → logprob: -8.028956413269043
    7. 's' → logprob: -8.153956413269043
    8. '(s' → logprob: -8.903956413269043
    9. ' s' → logprob: -9.528956413269043
    10. '[x' → logprob: -9.778956413269043

Token 1497: ' sommes' (ID: 32024)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25322893261909485
    2. ' x' → logprob: -1.5032289028167725
    3. ' range' → logprob: -7.003229141235352
    4. 'range' → logprob: -8.378229141235352
    5. '_' → logprob: -10.003229141235352
    6. ' in' → logprob: -10.503229141235352
    7. 's' → logprob: -11.128229141235352
    8. ' ' → logprob: -11.128229141235352
    9. ' _' → logprob: -11.253229141235352
    10. ')' → logprob: -11.378229141235352

Token 1498: ' possibles' (ID: 97753)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15459978580474854
    2. ' x' → logprob: -2.529599666595459
    3. '[x' → logprob: -3.529599666595459
    4. '_' → logprob: -4.779599666595459
    5. '[' → logprob: -4.904599666595459
    6. 'range' → logprob: -5.529599666595459
    7. '   ' → logprob: -5.779599666595459
    8. ',' → logprob: -6.279599666595459
    9. '```' → logprob: -6.279599666595459
    10. ' range' → logprob: -6.654599666595459

Token 1499: ' en' (ID: 469)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5519862771034241
    2. ' for' → logprob: -1.8019862174987793
    3. '[' → logprob: -2.6769862174987793
    4. '[x' → logprob: -2.9269862174987793
    5. ',' → logprob: -3.4269862174987793
    6. ' in' → logprob: -3.8019862174987793
    7. 'for' → logprob: -3.9269862174987793
    8. ' =' → logprob: -4.551986217498779
    9. ' i' → logprob: -4.676986217498779
    10. ' range' → logprob: -4.801986217498779

Token 1500: ' descendant' (ID: 145081)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024324951693415642
    2. 're' → logprob: -3.774324893951416
    3. 'reverse' → logprob: -6.899324893951416
    4. 'ré' → logprob: -10.274325370788574
    5. ' range' → logprob: -11.024325370788574
    6. '   ' → logprob: -11.399325370788574
    7. 'rang' → logprob: -13.899325370788574
    8. '	range' → logprob: -14.024325370788574
    9. 'r' → logprob: -14.399325370788574
    10. 'for' → logprob: -14.399325370788574

Token 1501: ',' (ID: 11)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11541614681482315
    2. 'from' → logprob: -2.6154160499572754
    3. '(range' → logprob: -3.8654160499572754
    4. ' range' → logprob: -5.490416049957275
    5. '       ' → logprob: -5.740416049957275
    6. 'for' → logprob: -5.740416049957275
    7. '[::-' → logprob: -6.240416049957275
    8. 'in' → logprob: -6.615416049957275
    9. '   ' → logprob: -8.615416526794434
    10. ' in' → logprob: -9.240416526794434

Token 1502: ' 
' (ID: 793)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3489641845226288
    2. ' x' → logprob: -1.9739642143249512
    3. 'range' → logprob: -2.598964214324951
    4. ' range' → logprob: -3.473964214324951
    5. 'for' → logprob: -3.473964214324951
    6. ' for' → logprob: -4.098964214324951
    7. '   ' → logprob: -6.348964214324951
    8. '       ' → logprob: -8.098963737487793
    9. ')' → logprob: -8.848963737487793
    10. ' xrange' → logprob: -9.098963737487793

Token 1503: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9445462822914124
    2. '       ' → logprob: -1.0695462226867676
    3. '   ' → logprob: -2.6945462226867676
    4. 'range' → logprob: -2.6945462226867676
    5. 'x' → logprob: -2.9445462226867676
    6. '    ' → logprob: -3.5695462226867676
    7. ' range' → logprob: -4.569546222686768
    8. '        ' → logprob: -4.694546222686768
    9. '           ' → logprob: -5.194546222686768
    10. ' ' → logprob: -5.319546222686768

Token 1504: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6986440420150757
    2. 'range' → logprob: -1.3236440420150757
    3. 'for' → logprob: -2.3236441612243652
    4. 'x' → logprob: -3.1986441612243652
    5. ' range' → logprob: -3.3236441612243652
    6. '   ' → logprob: -3.4486441612243652
    7. ' for' → logprob: -4.073644161224365
    8. ' x' → logprob: -4.573644161224365
    9. ' ' → logprob: -6.948644161224365
    10. '           ' → logprob: -7.573644161224365

Token 1505: ' pour' (ID: 1930)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1235443353652954
    2. 'range' → logprob: -1.2485443353652954
    3. ' x' → logprob: -1.7485443353652954
    4. ' range' → logprob: -1.7485443353652954
    5. '   ' → logprob: -3.623544216156006
    6. '       ' → logprob: -4.998544216156006
    7. ' j' → logprob: -5.623544216156006
    8. 'j' → logprob: -6.623544216156006
    9. '```' → logprob: -8.123544692993164
    10. 'for' → logprob: -8.498544692993164

Token 1506: ' éviter' (ID: 64013)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04308220371603966
    2. ' x' → logprob: -3.1680822372436523
    3. 'j' → logprob: -9.668082237243652
    4. ' j' → logprob: -11.543082237243652
    5. 'ai' → logprob: -12.793082237243652
    6. '	x' → logprob: -12.918082237243652
    7. '_x' → logprob: -13.543082237243652
    8. '```' → logprob: -14.418082237243652
    9. 'v' → logprob: -14.668082237243652
    10. ' ' → logprob: -14.668082237243652

Token 1507: ' les' (ID: 1341)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8142858147621155
    2. 'range' → logprob: -1.4392857551574707
    3. ' range' → logprob: -1.8142857551574707
    4. 'x' → logprob: -2.0642857551574707
    5. ' j' → logprob: -5.439285755157471
    6. ')' → logprob: -5.439285755157471
    7. 'dp' → logprob: -5.689285755157471
    8. ' reverse' → logprob: -5.814285755157471
    9. '```' → logprob: -6.564285755157471
    10. ' dp' → logprob: -6.814285755157471

Token 1508: ' inter' (ID: 993)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9263582229614258
    2. 'ai' → logprob: -2.051358222961426
    3. 'i' → logprob: -2.301358222961426
    4. '1' → logprob: -2.426358222961426
    5. ' x' → logprob: -2.551358222961426
    6. ' i' → logprob: -2.676358222961426
    7. ')' → logprob: -2.801358222961426
    8. 's' → logprob: -2.926358222961426
    9. 'range' → logprob: -3.301358222961426
    10. ']' → logprob: -3.426358222961426

Token 1509: 'fér' (ID: 21958)
  Prédit: 'fér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fér' → logprob: -0.5705263018608093
    2. 'v' → logprob: -1.695526361465454
    3. 'ferences' → logprob: -1.945526361465454
    4. 'férence' → logprob: -3.570526361465454
    5. 'rupt' → logprob: -3.695526361465454
    6. 'ference' → logprob: -4.320526123046875
    7. 'actions' → logprob: -4.820526123046875
    8. 'versions' → logprob: -5.195526123046875
    9. 'rom' → logprob: -5.445526123046875
    10. 'd' → logprob: -5.445526123046875

Token 1510: 'ences' (ID: 3851)
  Prédit: 'érences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érences' → logprob: -0.3902747333049774
    2. 'er' → logprob: -1.8902747631072998
    3. 'ences' → logprob: -1.8902747631072998
    4. 'érence' → logprob: -4.890274524688721
    5. 'r' → logprob: -5.265274524688721
    6. 'ér' → logprob: -6.390274524688721
    7. 'rence' → logprob: -7.140274524688721
    8. '```' → logprob: -7.265274524688721
    9. '#' → logprob: -7.390274524688721
    10. 'ence' → logprob: -7.515274524688721

Token 1511: ' lors' (ID: 15456)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.8241423964500427
    2. '       ' → logprob: -2.1991424560546875
    3. '   ' → logprob: -2.3241424560546875
    4. '[x' → logprob: -2.4491424560546875
    5. '[' → logprob: -3.1991424560546875
    6. ' in' → logprob: -3.3241424560546875
    7. ' x' → logprob: -3.3241424560546875
    8. '[i' → logprob: -3.8241424560546875
    9. ':' → logprob: -4.3241424560546875
    10. 'from' → logprob: -4.5741424560546875

Token 1512: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0377753973007202
    2. '   ' → logprob: -1.5377753973007202
    3. 'de' → logprob: -1.9127753973007202
    4. ' des' → logprob: -2.1627755165100098
    5. ' range' → logprob: -2.5377755165100098
    6. 'range' → logprob: -3.1627755165100098
    7. 'des' → logprob: -3.5377755165100098
    8. '       ' → logprob: -5.66277551651001
    9. ' of' → logprob: -6.03777551651001
    10. ' la' → logprob: -6.16277551651001

Token 1513: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2600610852241516
    2. 'la' → logprob: -1.5100610256195068
    3. 'range' → logprob: -5.260061264038086
    4. 'mise' → logprob: -7.010061264038086
    5. 'the' → logprob: -7.885061264038086
    6. '```' → logprob: -8.135061264038086
    7. 'les' → logprob: -8.385061264038086
    8. 'dp' → logprob: -8.385061264038086
    9. 'le' → logprob: -8.385061264038086
    10. 'updates' → logprob: -8.885061264038086

Token 1514: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14206306636333466
    2. 'iteration' → logprob: -3.1420631408691406
    3. 'reverse' → logprob: -3.6420631408691406
    4. 'iter' → logprob: -4.017063140869141
    5. 're' → logprob: -4.892063140869141
    6. '```' → logprob: -5.142063140869141
    7. '   ' → logprob: -5.517063140869141
    8. 'tr' → logprob: -5.642063140869141
    9. 'aj' → logprob: -5.767063140869141
    10. 'update' → logprob: -6.017063140869141

Token 1515: 'it' (ID: 278)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029244810342788696
    2. 'iteration' → logprob: -3.779244899749756
    3. 'ré' → logprob: -6.779244899749756
    4. 'dp' → logprob: -7.029244899749756
    5. 's' → logprob: -7.154244899749756
    6. ' range' → logprob: -7.279244899749756
    7. 'iter' → logprob: -7.779244899749756
    8. 'enumer' → logprob: -7.779244899749756
    9. 'for' → logprob: -7.904244899749756
    10. 're' → logprob: -7.904244899749756

Token 1516: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.8160368800163269
    2. 'range' → logprob: -1.0660369396209717
    3. 'er' → logprob: -1.9410369396209717
    4. 'erv' → logprob: -4.191036701202393
    5. 'éra' → logprob: -4.941036701202393
    6. 'rage' → logprob: -5.566036701202393
    7. 'erm' → logprob: -5.691036701202393
    8. 'erval' → logprob: -5.816036701202393
    9. 'ère' → logprob: -6.066036701202393
    10. '#' → logprob: -6.191036701202393

Token 1517: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8676185607910156
    2. '       ' → logprob: -1.1176185607910156
    3. ' in' → logprob: -2.9926185607910156
    4. '[::-' → logprob: -3.1176185607910156
    5. 'for' → logprob: -3.2426185607910156
    6. ' x' → logprob: -3.7426185607910156
    7. ' range' → logprob: -3.8676185607910156
    8. '   ' → logprob: -3.9926185607910156
    9. '[x' → logprob: -4.367618560791016
    10. ' from' → logprob: -4.367618560791016

Token 1518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10940894484519958
    2. '   ' → logprob: -2.9844088554382324
    3. ' for' → logprob: -3.3594088554382324
    4. ' range' → logprob: -4.859408855438232
    5. 'range' → logprob: -5.359408855438232
    6. 'for' → logprob: -5.484408855438232
    7. '```' → logprob: -6.734408855438232
    8. '	' → logprob: -9.48440933227539
    9. '    ' → logprob: -9.60940933227539
    10. '           ' → logprob: -9.85940933227539

Token 1519: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18737460672855377
    2. ' for' → logprob: -1.9373745918273926
    3. '   ' → logprob: -3.6873745918273926
    4. '       ' → logprob: -7.187374591827393
    5. '```' → logprob: -7.312374591827393
    6. 'range' → logprob: -8.68737506866455
    7. '	for' → logprob: -9.18737506866455
    8. '``' → logprob: -10.68737506866455
    9. ' range' → logprob: -11.06237506866455
    10. '    ' → logprob: -12.43737506866455

Token 1520: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036662293132394552
    2. 'j' → logprob: -5.628666400909424
    3. ' x' → logprob: -9.753665924072266
    4. 's' → logprob: -13.128665924072266
    5. '   ' → logprob: -13.128665924072266
    6. 'v' → logprob: -13.253665924072266
    7. ' j' → logprob: -13.878665924072266
    8. '```' → logprob: -15.253665924072266
    9. '	x' → logprob: -15.878665924072266
    10. ' ' → logprob: -15.878665924072266

Token 1521: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3490428030490875
    2. 'in' → logprob: -1.2240427732467651
    3. 's' → logprob: -7.474042892456055
    4. 'n' → logprob: -11.849042892456055
    5. ' j' → logprob: -12.724042892456055
    6. 'j' → logprob: -12.849042892456055
    7. '_' → logprob: -12.974042892456055
    8. '=' → logprob: -12.974042892456055
    9. '=s' → logprob: -12.974042892456055
    10. 'range' → logprob: -13.474042892456055

Token 1522: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06273825466632843
    2. 's' → logprob: -2.8127381801605225
    3. ' range' → logprob: -7.187738418579102
    4. '(s' → logprob: -11.937738418579102
    5. ' s' → logprob: -12.312738418579102
    6. '(range' → logprob: -13.812738418579102
    7. 'r' → logprob: -13.937738418579102
    8. '[s' → logprob: -14.187738418579102
    9. '   ' → logprob: -15.187738418579102
    10. 'reverse' → logprob: -15.312738418579102

Token 1523: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00039349604048766196
    2. '(s' → logprob: -7.875393390655518
    3. ' s' → logprob: -11.250393867492676
    4. '[s' → logprob: -15.375393867492676
    5. '{s' → logprob: -16.37539291381836
    6. '   ' → logprob: -16.62539291381836
    7. '	s' → logprob: -18.50039291381836
    8. '(' → logprob: -18.50039291381836
    9. '_s' → logprob: -19.00039291381836
    10. ')' → logprob: -19.37539291381836

Token 1524: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5287230014801025
    2. ' -' → logprob: -1.2787230014801025
    3. ',' → logprob: -2.0287230014801025
    4. ' ,' → logprob: -8.028722763061523
    5. ',
' → logprob: -8.528722763061523
    6. 's' → logprob: -9.153722763061523
    7. '   ' → logprob: -10.778722763061523
    8. '
' → logprob: -10.903722763061523
    9. ',-' → logprob: -11.028722763061523
    10. ',s' → logprob: -11.028722763061523

Token 1525: ' ' (ID: 220)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0430237352848053
    2. '1' → logprob: -3.1680238246917725
    3. ' ai' → logprob: -11.043024063110352
    4. 'a' → logprob: -12.668024063110352
    5. 'aa' → logprob: -13.293024063110352
    6. '(ai' → logprob: -13.293024063110352
    7. ' ' → logprob: -14.668024063110352
    8. '_ai' → logprob: -15.043024063110352
    9. 'ais' → logprob: -15.418024063110352
    10. '-ai' → logprob: -15.418024063110352

Token 1526: '1' (ID: 16)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0011941560078412294
    2. '1' → logprob: -6.876194000244141
    3. 'a' → logprob: -8.75119400024414
    4. ' ai' → logprob: -13.50119400024414
    5. 'aa' → logprob: -14.00119400024414
    6. '(ai' → logprob: -14.87619400024414
    7. '_ai' → logprob: -16.00119400024414
    8. '-ai' → logprob: -16.62619400024414
    9. '0' → logprob: -16.87619400024414
    10. 's' → logprob: -17.37619400024414

Token 1527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002942287246696651
    2. ' ,' → logprob: -8.87529468536377
    3. ',-' → logprob: -9.12529468536377
    4. ',
' → logprob: -10.12529468536377
    5. '-' → logprob: -13.00029468536377
    6. ' -' → logprob: -13.37529468536377
    7. ' ,-' → logprob: -14.87529468536377
    8. '       ' → logprob: -16.000293731689453
    9. '+' → logprob: -16.000293731689453
    10. '-,' → logprob: -16.125293731689453

Token 1528: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.2936123311519623
    2. '-ai' → logprob: -1.6686123609542847
    3. '-' → logprob: -2.793612241744995
    4. '0' → logprob: -6.043612480163574
    5. '-a' → logprob: -6.543612480163574
    6. ' -' → logprob: -8.043612480163574
    7. '-j' → logprob: -8.418612480163574
    8. 'j' → logprob: -9.168612480163574
    9. 'aj' → logprob: -9.793612480163574
    10. 'a' → logprob: -9.918612480163574

Token 1529: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.055979203432798386
    2. ' -' → logprob: -2.9309792518615723
    3. ',' → logprob: -7.055979251861572
    4. '+' → logprob: -9.680978775024414
    5. '   ' → logprob: -9.680978775024414
    6. ' ' → logprob: -9.805978775024414
    7. ' ,' → logprob: -11.180978775024414
    8. '    ' → logprob: -11.930978775024414
    9. '  ' → logprob: -11.930978775024414
    10. '-,' → logprob: -12.805978775024414

Token 1530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002989968634210527
    2. '2' → logprob: -8.125299453735352
    3. '-' → logprob: -13.625299453735352
    4. ' ' → logprob: -13.750299453735352
    5. ' -' → logprob: -16.25029945373535
    6. '१' → logprob: -16.43779945373535
    7. '   ' → logprob: -16.62529945373535
    8. '' → logprob: -16.62529945373535
    9. '```' → logprob: -16.75029945373535
    10. '0' → logprob: -16.87529945373535

Token 1531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '2' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.125007629394531
    4. '-' → logprob: -15.812507629394531
    5. '   ' → logprob: -16.25000762939453
    6. '0' → logprob: -16.56250762939453
    7. ',' → logprob: -17.31250762939453
    8. '१' → logprob: -17.43750762939453
    9. '...' → logprob: -17.68750762939453
    10. '```' → logprob: -17.75000762939453

Token 1532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05792226269841194
    2. '-' → logprob: -3.18292236328125
    3. ',-' → logprob: -4.30792236328125
    4. ' -' → logprob: -7.30792236328125
    5. ' ,' → logprob: -7.43292236328125
    6. ' ,-' → logprob: -10.43292236328125
    7. '```' → logprob: -11.68292236328125
    8. '1' → logprob: -11.68292236328125
    9. ',
' → logprob: -11.80792236328125
    10. '-,' → logprob: -12.18292236328125

Token 1533: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.623244553338736e-05
    2. ' -' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '−' → logprob: -17.50006675720215
    5. '﻿' → logprob: -17.75006675720215
    6. '                   ' → logprob: -17.75006675720215
    7. ' ' → logprob: -17.75006675720215
    8. '1' → logprob: -17.87506675720215
    9. '```' → logprob: -17.87506675720215
    10. '           ' → logprob: -18.25006675720215

Token 1534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '-' → logprob: -17.625
    4. '   ' → logprob: -18.25
    5. ')' → logprob: -18.875
    6. '```' → logprob: -19.375
    7. ' -' → logprob: -19.625
    8. '１' → logprob: -19.75
    9. ',' → logprob: -19.875
    10. '):
' → logprob: -20.625

Token 1535: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5921415090560913
    2. '):' → logprob: -0.8421415090560913
    3. ':' → logprob: -4.342141628265381
    4. ',' → logprob: -6.592141628265381
    5. '):
' → logprob: -7.842141628265381
    6. ')' → logprob: -7.967141628265381
    7. '       ' → logprob: -8.092141151428223
    8. '   ' → logprob: -8.842141151428223
    9. ':
' → logprob: -8.967141151428223
    10. '           ' → logprob: -9.467141151428223

Token 1536: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23902758955955505
    2. '	' → logprob: -2.614027500152588
    3. '           ' → logprob: -3.114027500152588
    4. '	       ' → logprob: -3.364027500152588
    5. '<|end|>' → logprob: -3.614027500152588
    6. '        ' → logprob: -4.864027500152588
    7. '		' → logprob: -5.364027500152588
    8. '               ' → logprob: -5.739027500152588
    9. ' 	' → logprob: -5.864027500152588
    10. ' ' → logprob: -5.989027500152588

Token 1537: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.001198086072690785
    2. ' dp' → logprob: -6.7511982917785645
    3. '           ' → logprob: -10.751197814941406
    4. '	dp' → logprob: -12.501197814941406
    5. '               ' → logprob: -13.126197814941406
    6. '       ' → logprob: -14.501197814941406
    7. '   ' → logprob: -15.751197814941406
    8. '(dp' → logprob: -16.376197814941406
    9. '_dp' → logprob: -16.626197814941406
    10. '```' → logprob: -19.251197814941406

Token 1538: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.106736039626412e-05
    2. '[' → logprob: -10.500031471252441
    3. 'j' → logprob: -12.875031471252441
    4. '[
' → logprob: -14.625031471252441
    5. '[i' → logprob: -16.000030517578125
    6. '   ' → logprob: -16.125030517578125
    7. ']' → logprob: -17.250030517578125
    8. '[...]' → logprob: -17.250030517578125
    9. '[js' → logprob: -17.500030517578125
    10. 's' → logprob: -17.500030517578125

Token 1539: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01126414630562067
    2. ']+=' → logprob: -4.511264324188232
    3. '-' → logprob: -9.011263847351074
    4. ']-' → logprob: -10.636263847351074
    5. ' ]' → logprob: -10.886263847351074
    6. '[' → logprob: -11.761263847351074
    7. '+' → logprob: -11.761263847351074
    8. ']+' → logprob: -12.011263847351074
    9. '+=' → logprob: -12.386263847351074
    10. '-=' → logprob: -12.511263847351074

Token 1540: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014691432937979698
    2. '=' → logprob: -4.264691352844238
    3. '=(' → logprob: -8.139691352844238
    4. ' +=' → logprob: -8.514691352844238
    5. ' =' → logprob: -11.139691352844238
    6. '+=(' → logprob: -11.514691352844238
    7. ']+=' → logprob: -11.639691352844238
    8. '   ' → logprob: -14.389691352844238
    9. '-=' → logprob: -14.889691352844238
    10. 'dp' → logprob: -15.389691352844238

Token 1541: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0206720617134124e-05
    2. ' dp' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.62501049041748
    4. '(dp' → logprob: -14.25001049041748
    5. '           ' → logprob: -15.37501049041748
    6. '	dp' → logprob: -16.250009536743164
    7. '(' → logprob: -17.625009536743164
    8. 'd' → logprob: -18.375009536743164
    9. '       ' → logprob: -18.375009536743164
    10. '               ' → logprob: -18.875009536743164

Token 1542: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06199177727103233
    2. 'j' → logprob: -2.8119916915893555
    3. ' j' → logprob: -11.311991691589355
    4. '   ' → logprob: -12.311991691589355
    5. '[' → logprob: -12.686991691589355
    6. '(j' → logprob: -12.811991691589355
    7. ' [' → logprob: -14.311991691589355
    8. '[
' → logprob: -14.936991691589355
    9. '	j' → logprob: -15.061991691589355
    10. '_j' → logprob: -16.686992645263672

Token 1543: ' -' (ID: 533)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0074429940432310104
    2. '-' → logprob: -5.382442951202393
    3. ' -' → logprob: -6.882442951202393
    4. '[' → logprob: -6.882442951202393
    5. '-j' → logprob: -7.507442951202393
    6. 'j' → logprob: -9.13244342803955
    7. '[-' → logprob: -9.50744342803955
    8. '-ai' → logprob: -11.25744342803955
    9. ']' → logprob: -11.88244342803955
    10. '[
' → logprob: -13.00744342803955

Token 1544: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.0683535037969705e-05
    2. ' ai' → logprob: -11.50001049041748
    3. '(ai' → logprob: -15.75001049041748
    4. '   ' → logprob: -15.87501049041748
    5. 'a' → logprob: -16.125011444091797
    6. '_ai' → logprob: -17.625011444091797
    7. 'aj' → logprob: -17.625011444091797
    8. ' ' → logprob: -17.750011444091797
    9. '1' → logprob: -17.875011444091797
    10. 'aa' → logprob: -18.750011444091797

Token 1545: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014223761390894651
    2. ']*' → logprob: -7.25142240524292
    3. ' ]' → logprob: -8.126421928405762
    4. '*' → logprob: -8.501421928405762
    5. ' *' → logprob: -8.751421928405762
    6. ')' → logprob: -10.376421928405762
    7. ']
' → logprob: -12.251421928405762
    8. '']' → logprob: -12.376421928405762
    9. '])' → logprob: -12.501421928405762
    10. '<|end|>' → logprob: -12.876421928405762

Token 1546: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1547: ' dp' (ID: 21546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007493165787309408
    2. ' =' → logprob: -5.507493019104004
    3. '           ' → logprob: -6.507493019104004
    4. 'dp' (adapté à ' dp') → logprob: -7.632493019104004
    5. ' dp' → logprob: -7.882493019104004
    6. '<|end|>' → logprob: -8.257493019104004
    7. ' %=' → logprob: -8.632493019104004
    8. '+=' → logprob: -8.882493019104004
    9. '%=' → logprob: -9.132493019104004
    10. ')' → logprob: -10.007493019104004

Token 1548: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011796683247666806
    2. '[' → logprob: -9.750118255615234
    3. 'j' → logprob: -10.750118255615234
    4. '%=' → logprob: -11.125118255615234
    5. '```' → logprob: -11.250118255615234
    6. '%' → logprob: -12.500118255615234
    7. '[
' → logprob: -13.375118255615234
    8. '[s' → logprob: -13.875118255615234
    9. '=' → logprob: -14.125118255615234
    10. ']' → logprob: -14.625118255615234

Token 1549: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005346827092580497
    2. '%=' → logprob: -8.750535011291504
    3. ')' → logprob: -9.250535011291504
    4. ' %=' → logprob: -9.625535011291504
    5. ']%' → logprob: -10.000535011291504
    6. '%' → logprob: -10.375535011291504
    7. ']-' → logprob: -10.375535011291504
    8. '           ' → logprob: -10.375535011291504
    9. ']+=' → logprob: -10.875535011291504
    10. '```' → logprob: -11.625535011291504

Token 1550: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -6.0868278524139896e-05
    2. '%' → logprob: -10.25006103515625
    3. ' %=' → logprob: -10.62506103515625
    4. '=' → logprob: -13.75006103515625
    5. ')%' → logprob: -17.50006103515625
    6. ')' → logprob: -18.00006103515625
    7. '```' → logprob: -19.50006103515625
    8. '%\' → logprob: -19.75006103515625
    9. '*=' → logprob: -20.12506103515625
    10. '/=' → logprob: -20.37506103515625

Token 1551: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -16.75
    3. '(mod' → logprob: -22.75
    4. '	mod' → logprob: -23.625
    5. 'moder' → logprob: -26.625
    6. ' мод' → logprob: -27.0
    7. '_mod' → logprob: -27.25
    8. 'modal' → logprob: -27.625
    9. 'MOD' → logprob: -27.875
    10. '998' → logprob: -28.0

Token 1552: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.250001907348633
    5. 's' → logprob: -17.000001907348633
    6. 'mod' → logprob: -17.750001907348633
    7. '       ' → logprob: -18.250001907348633
    8. '-' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.375001907348633
    10. '²' → logprob: -19.687501907348633

Token 1553: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1554: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1555: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004317010752856731
    2. '0' → logprob: -6.004316806793213
    3. 'j' → logprob: -7.629316806793213
    4. ' dp' → logprob: -7.879316806793213
    5. '<|end|>' → logprob: -8.754317283630371
    6. '```' → logprob: -8.879317283630371
    7. 'return' → logprob: -9.004317283630371
    8. '       ' → logprob: -9.379317283630371
    9. '	dp' → logprob: -9.504317283630371
    10. 'for' → logprob: -9.754317283630371

Token 1556: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004365798085927963
    2. '[j' → logprob: -5.629365921020508
    3. '[s' → logprob: -7.254365921020508
    4. '[i' → logprob: -10.254365921020508
    5. '[-' → logprob: -12.379365921020508
    6. '0' → logprob: -12.754365921020508
    7. ' [' → logprob: -12.754365921020508
    8. '=' → logprob: -13.129365921020508
    9. ' =' → logprob: -13.254365921020508
    10. '   ' → logprob: -13.504365921020508

Token 1557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12566059827804565
    2. 'ai' → logprob: -2.3756606578826904
    3. 's' → logprob: -3.7506606578826904
    4. 'a' → logprob: -7.125660419464111
    5. '[' → logprob: -8.50066089630127
    6. 'j' → logprob: -8.87566089630127
    7. '(ai' → logprob: -9.00066089630127
    8. 'aj' → logprob: -10.00066089630127
    9. ' ' → logprob: -10.25066089630127
    10. 'dp' → logprob: -10.25066089630127

Token 1558: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14375239610671997
    2. ']+=' → logprob: -2.018752336502075
    3. '+=' → logprob: -7.018752574920654
    4. ' +=' → logprob: -9.643752098083496
    5. ']+' → logprob: -9.893752098083496
    6. ' ]' → logprob: -11.018752098083496
    7. '[' → logprob: -11.143752098083496
    8. ')' → logprob: -11.393752098083496
    9. '           ' → logprob: -12.143752098083496
    10. '       ' → logprob: -12.143752098083496

Token 1559: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6515794396400452
    2. '-=' → logprob: -0.9015794396400452
    3. ' -=' → logprob: -2.7765793800354004
    4. ' +=' → logprob: -5.1515793800354
    5. '[' → logprob: -6.2765793800354
    6. '       ' → logprob: -7.1515793800354
    7. '=' → logprob: -7.5265793800354
    8. '           ' → logprob: -7.7765793800354
    9. '-' → logprob: -7.7765793800354
    10. '        ' → logprob: -8.526579856872559

Token 1560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000686817744281143
    2. '(n' → logprob: -7.7506866455078125
    3. 'n' → logprob: -9.375686645507812
    4. 'dp' → logprob: -9.875686645507812
    5. 'i' → logprob: -10.125686645507812
    6. '(i' → logprob: -10.750686645507812
    7. '(' → logprob: -11.125686645507812
    8. ' ' → logprob: -11.250686645507812
    9. 'r' → logprob: -11.750686645507812
    10. '0' → logprob: -12.500686645507812

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011915886716451496
    2. '(n' → logprob: -9.75011920928955
    3. 'n' → logprob: -10.12511920928955
    4. 'dp' → logprob: -11.87511920928955
    5. 'i' → logprob: -12.75011920928955
    6. '0' → logprob: -12.87511920928955
    7. '(' → logprob: -13.00011920928955
    8. 'r' → logprob: -13.12511920928955
    9. '(i' → logprob: -13.75011920928955
    10. 's' → logprob: -14.37511920928955

Token 1562: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1563: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1564: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1565: ' incr' (ID: 52395)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4032122492790222
    2. '+=' → logprob: -1.528212308883667
    3. '<|end|>' → logprob: -2.778212308883667
    4. ' %=' → logprob: -3.653212308883667
    5. ']+=' → logprob: -5.153212070465088
    6. ')' → logprob: -5.153212070465088
    7. '<|end|>' → logprob: -5.403212070465088
    8. '=' → logprob: -6.278212070465088
    9. ' ' → logprob: -6.403212070465088
    10. '   ' → logprob: -6.528212070465088

Token 1566: 'é' (ID: 377)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.3581501543521881
    2. 'é' → logprob: -1.2331501245498657
    3. 'ement' → logprob: -5.358150005340576
    4. 'éments' → logprob: -5.858150005340576
    5. '   ' → logprob: -7.233150005340576
    6. 'emente' → logprob: -7.608150005340576
    7. 'mente' → logprob: -8.733150482177734
    8. 'ém' → logprob: -8.858150482177734
    9. '       ' → logprob: -9.108150482177734
    10. '```' → logprob: -9.733150482177734

Token 1567: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0268123596906662
    2. 'ment' → logprob: -3.7768123149871826
    3. 'm' → logprob: -7.401812553405762
    4. 'mé' → logprob: -7.651812553405762
    5. '1' → logprob: -8.026812553405762
    6. '+' → logprob: -8.026812553405762
    7. 'mentation' → logprob: -8.151812553405762
    8. '(' → logprob: -8.276812553405762
    9. '   ' → logprob: -8.651812553405762
    10. 'nte' → logprob: -8.901812553405762

Token 1568: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1569: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '```' → logprob: -12.500007629394531
    3. '(' → logprob: -12.750007629394531
    4. '0' → logprob: -14.625007629394531
    5. '   ' → logprob: -15.000007629394531
    6. '\[' → logprob: -15.375007629394531
    7. '`' → logprob: -15.625007629394531
    8. ' [' → logprob: -15.875007629394531
    9. '_' → logprob: -16.62500762939453
    10. '``' → logprob: -17.12500762939453

Token 1570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '[' → logprob: -18.500003814697266
    4. '(' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.125003814697266
    6. '```' → logprob: -19.375003814697266
    7. ']' → logprob: -20.125003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '1' → logprob: -20.500003814697266
    10. ')' → logprob: -20.750003814697266

Token 1571: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0964260995388031
    2. '       ' → logprob: -2.721426010131836
    3. ']' → logprob: -3.971426010131836
    4. '           ' → logprob: -5.471426010131836
    5. ')
' → logprob: -6.971426010131836
    6. '<|end|>' → logprob: -6.971426010131836
    7. '   ' → logprob: -7.596426010131836
    8. '```' → logprob: -9.471426010131836
    9. '               ' → logprob: -9.596426010131836
    10. '        ' → logprob: -9.596426010131836

Token 1572: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1573: ' chaque' (ID: 21194)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035810720873996615
    2. ' ' → logprob: -8.500358581542969
    3. ')' → logprob: -9.375358581542969
    4. '0' → logprob: -10.500358581542969
    5. '   ' → logprob: -11.125358581542969
    6. '+' → logprob: -11.500358581542969
    7. '<|end|>' → logprob: -12.500358581542969
    8. '       ' → logprob: -12.625358581542969
    9. '    ' → logprob: -13.625358581542969
    10. '```' → logprob: -13.750358581542969

Token 1574: ' it' (ID: 480)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.947507381439209
    2. '
' → logprob: -1.947507381439209
    3. ' ' → logprob: -2.072507381439209
    4. '\n' → logprob: -2.572507381439209
    5. ' )' → logprob: -2.822507381439209
    6. '```' → logprob: -3.197507381439209
    7. '   ' → logprob: -3.322507381439209
    8. ')' → logprob: -3.572507381439209
    9. ' iteration' → logprob: -3.572507381439209
    10. '  ' → logprob: -5.072507381439209

Token 1575: 'ération' (ID: 24977)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4085144996643066
    2. '       ' → logprob: -1.5335144996643066
    3. ' ' → logprob: -2.0335144996643066
    4. '    ' → logprob: -2.2835144996643066
    5. '     ' → logprob: -2.7835144996643066
    6. '        ' → logprob: -3.1585144996643066
    7. '  ' → logprob: -3.2835144996643066
    8. '      ' → logprob: -3.5335144996643066
    9. ' +=' → logprob: -3.5335144996643066
    10. '         ' → logprob: -4.033514499664307

Token 1576: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1577: 'comp' (ID: 3697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6818533539772034
    2. '
' → logprob: -1.4318532943725586
    3. '\n' → logprob: -2.1818532943725586
    4. '<|end|>' → logprob: -2.1818532943725586
    5. ')
' → logprob: -4.306853294372559
    6. ' 
' → logprob: -4.681853294372559
    7. '```' → logprob: -5.806853294372559
    8. ' )' → logprob: -6.931853294372559
    9. '<|end|>' → logprob: -7.056853294372559
    10. '  
' → logprob: -7.181853294372559

Token 1578: 'te' (ID: 411)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -1.0169532299041748
    2. '   ' → logprob: -1.2669532299041748
    3. 'u' → logprob: -1.7669532299041748
    4. '       ' → logprob: -2.391953229904175
    5. '  ' → logprob: -4.266953468322754
    6. 'i' → logprob: -5.266953468322754
    7. 'p' → logprob: -5.391953468322754
    8. ')' → logprob: -5.391953468322754
    9. 'op' → logprob: -5.641953468322754
    10. 'ar' → logprob: -5.766953468322754

Token 1579: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3355245888233185
    2. '<|end|>' → logprob: -2.085524559020996
    3. ' )' → logprob: -2.460524559020996
    4. '=' → logprob: -3.460524559020996
    5. '+' → logprob: -3.710524559020996
    6. ' +=' → logprob: -5.085524559020996
    7. '<|end|>' → logprob: -6.210524559020996
    8. ' =' → logprob: -6.460524559020996
    9. '+=' → logprob: -6.460524559020996
    10. '(' → logprob: -6.835524559020996

Token 1580: ' "' (ID: 392)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5798291563987732
    2. 'élé' → logprob: -1.204829216003418
    3. 'cho' → logprob: -3.204829216003418
    4. ' choix' → logprob: -3.454829216003418
    5. ' nombre' → logprob: -3.704829216003418
    6. '0' → logprob: -3.954829216003418
    7. 'temps' → logprob: -5.204829216003418
    8. 'r' → logprob: -6.204829216003418
    9. 'pass' → logprob: -6.579829216003418
    10. 'non' → logprob: -6.704829216003418

Token 1581: 'cho' (ID: 2153)
  Prédit: ' choix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choix' → logprob: -0.7920728921890259
    2. 'cho' → logprob: -1.7920728921890259
    3. 'élé' → logprob: -2.1670727729797363
    4. '1' → logprob: -2.2920727729797363
    5. 'nombre' → logprob: -2.9170727729797363
    6. ' nombre' → logprob: -3.9170727729797363
    7. 'non' → logprob: -4.167072772979736
    8. ' non' → logprob: -4.292072772979736
    9. '0' → logprob: -4.917072772979736
    10. ')' → logprob: -5.292072772979736

Token 1582: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.003301174147054553
    2. 'mp' → logprob: -6.50330114364624
    3. 'u' → logprob: -7.50330114364624
    4. 'r' → logprob: -8.878301620483398
    5. 'i' → logprob: -9.128301620483398
    6. 'ur' → logprob: -9.128301620483398
    7. 'm' → logprob: -9.378301620483398
    8. 'rs' → logprob: -9.378301620483398
    9. 'p' → logprob: -9.503301620483398
    10. 'x' → logprob: -9.628301620483398

Token 1583: ' vide' (ID: 21835)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3526437282562256
    2. ' )' → logprob: -1.9776437282562256
    3. ')' → logprob: -2.9776437282562256
    4. ' d' → logprob: -3.7276437282562256
    5. ' possible' → logprob: -3.9776437282562256
    6. ' ")' → logprob: -4.727643966674805
    7. '")' → logprob: -4.852643966674805
    8. '   ' → logprob: -5.227643966674805
    9. ' des' → logprob: -5.352643966674805
    10. ' =' → logprob: -5.352643966674805

Token 1584: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31010714173316956
    2. ')' → logprob: -1.4351071119308472
    3. ' )' → logprob: -4.185107231140137
    4. ' ")' → logprob: -4.935107231140137
    5. ')")' → logprob: -5.310107231140137
    6. '"' → logprob: -7.560107231140137
    7. '   ' → logprob: -8.810107231140137
    8. '")
' → logprob: -8.810107231140137
    9. '()' → logprob: -9.185107231140137
    10. ' ' → logprob: -10.185107231140137

Token 1585: ' it' (ID: 480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010864471085369587
    2. ')
' → logprob: -5.0108642578125
    3. ' )' → logprob: -6.0108642578125
    4. '       ' → logprob: -6.7608642578125
    5. '+' → logprob: -9.0108642578125
    6. '<|end|>' → logprob: -9.0108642578125
    7. ' )
' → logprob: -9.7608642578125
    8. '   ' → logprob: -9.8858642578125
    9. '\n' → logprob: -10.6358642578125
    10. '```' → logprob: -10.7608642578125

Token 1586: 'ér' (ID: 2156)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.9111575484275818
    2. 'er' → logprob: -1.0361576080322266
    3. 'ération' → logprob: -2.2861576080322266
    4. 'ér' → logprob: -2.9111576080322266
    5. '++' → logprob: -3.9111576080322266
    6. 'érée' → logprob: -3.9111576080322266
    7. 'érateur' → logprob: -4.286157608032227
    8. 'érés' → logprob: -4.911157608032227
    9. '+' → logprob: -5.161157608032227
    10. 'é' → logprob: -5.411157608032227

Token 1587: 'atif' (ID: 23984)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.39979368448257446
    2. '   ' → logprob: -2.5247936248779297
    3. 'ér' → logprob: -2.6497936248779297
    4. 'ération' → logprob: -2.7747936248779297
    5. 'er' → logprob: -2.8997936248779297
    6. 'é' → logprob: -3.6497936248779297
    7. ' ' → logprob: -4.64979362487793
    8. 'érés' → logprob: -4.89979362487793
    9. 'érée' → logprob: -5.27479362487793
    10. 'érations' → logprob: -6.02479362487793

Token 1588: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048450980335474014
    2. '<|end|>' → logprob: -3.7984509468078613
    3. ')
' → logprob: -4.548450946807861
    4. '\n' → logprob: -5.048450946807861
    5. ' )' → logprob: -6.173450946807861
    6. '```' → logprob: -6.298450946807861
    7. '
' → logprob: -6.923450946807861
    8. '       ' → logprob: -7.173450946807861
    9. ' 
' → logprob: -7.423450946807861
    10. '   ' → logprob: -8.17345142364502

Token 1589: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1590: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06339781731367111
    2. 'return' (adapté à ' return') → logprob: -2.8133978843688965
    3. ' return' → logprob: -6.6883978843688965
    4. '```' → logprob: -9.063397407531738
    5. 'dp' → logprob: -9.688397407531738
    6. '	return' → logprob: -13.063397407531738
    7. 'print' → logprob: -14.188397407531738
    8. '    
' → logprob: -14.938397407531738
    9. ' ' → logprob: -15.063397407531738
    10. '`' → logprob: -15.063397407531738

Token 1591: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.088346359931165e-07
    2. ' dp' → logprob: -14.000000953674316
    3. '(dp' → logprob: -18.5
    4. '	dp' → logprob: -20.875
    5. '   ' → logprob: -22.125
    6. 'df' → logprob: -24.125
    7. 'print' → logprob: -24.5
    8. '_dp' → logprob: -24.875
    9. 'd' → logprob: -25.5
    10. 'dc' → logprob: -25.625

Token 1592: '[-' (ID: 17503)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.945765495300293
    2. '[' → logprob: -1.195765495300293
    3. '<|end|>' → logprob: -1.195765495300293
    4. '<|end|>' → logprob: -5.695765495300293
    5. '[end' → logprob: -7.195765495300293
    6. '```' → logprob: -7.320765495300293
    7. 's' → logprob: -7.695765495300293
    8. '[S' → logprob: -9.195765495300293
    9. '[n' → logprob: -9.320765495300293
    10. '[]' → logprob: -9.445765495300293

Token 1593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -18.375
    4. '0' → logprob: -19.125
    5. '   ' → logprob: -19.75
    6. ']' → logprob: -21.0
    7. '１' → logprob: -21.5
    8. '``' → logprob: -21.75
    9. '2' → logprob: -21.8125
    10. '])' → logprob: -21.875

Token 1594: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036477106623351574
    2. ']%' → logprob: -6.378647804260254
    3. ' ]' → logprob: -6.878647804260254
    4. ')' → logprob: -7.128647804260254
    5. '])' → logprob: -10.003647804260254
    6. '%' → logprob: -10.503647804260254
    7. ']
' → logprob: -11.003647804260254
    8. '   ' → logprob: -11.753647804260254
    9. ' %' → logprob: -11.878647804260254
    10. ')%' → logprob: -13.378647804260254

Token 1595: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1596: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9361264946837764e-07
    2. ' mod' → logprob: -16.5
    3. '(mod' → logprob: -17.75
    4. '	mod' → logprob: -24.0
    5. '```' → logprob: -24.625
    6. '_mod' → logprob: -25.5
    7. ' мод' → logprob: -26.5
    8. '`' → logprob: -26.5
    9. 'MOD' → logprob: -26.5
    10. '.mod' → logprob: -26.875

Token 1597: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1598: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1599: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1600: ' retourne' (ID: 178818)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1601: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.089857317507267
    2. '(dp' → logprob: -2.464857339859009
    3. '(' → logprob: -8.08985710144043
    4. '0' → logprob: -8.08985710144043
    5. '<|end|>' → logprob: -8.83985710144043
    6. ' dp' → logprob: -9.58985710144043
    7. '```' → logprob: -9.96485710144043
    8. '()' → logprob: -10.83985710144043
    9. ')' → logprob: -12.21485710144043
    10. '_dp' → logprob: -12.21485710144043

Token 1602: '[s' (ID: 24177)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1603: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2972193658351898
    2. ')' → logprob: -1.4222193956375122
    3. '<|end|>' → logprob: -4.422219276428223
    4. '}' → logprob: -6.047219276428223
    5. '])' → logprob: -8.172219276428223
    6. '<|end|>' → logprob: -8.297219276428223
    7. '```' → logprob: -8.422219276428223
    8. ' ]' → logprob: -8.672219276428223
    9. '']' → logprob: -9.047219276428223
    10. '[' → logprob: -9.422219276428223

Token 1604: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1605: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02911907248198986
    2. '(mod' → logprob: -3.6541190147399902
    3. ' mod' → logprob: -6.15411901473999
    4. '\n' → logprob: -7.77911901473999
    5. '(' → logprob: -9.154119491577148
    6. '10' → logprob: -9.279119491577148
    7. ' (' → logprob: -10.404119491577148
    8. '```' → logprob: -11.529119491577148
    9. '100' → logprob: -11.904119491577148
    10. '\' → logprob: -11.904119491577148

Token 1606: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7254667282104492
    2. ')' → logprob: -1.1004667282104492
    3. '_' → logprob: -2.600466728210449
    4. ']' → logprob: -3.475466728210449
    5. '<|end|>' → logprob: -3.725466728210449
    6. '```' → logprob: -3.850466728210449
    7. '}' → logprob: -4.725466728210449
    8. '\n' → logprob: -5.100466728210449
    9. '%' → logprob: -5.975466728210449
    10. '.' → logprob: -6.100466728210449

Token 1607: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1608: ' nombre' (ID: 9733)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1609: ' total' (ID: 3609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1610: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1611: ' façons' (ID: 165958)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.5262237787246704
    2. 'fa' → logprob: -0.9012237787246704
    3. ' façons' → logprob: -6.526223659515381
    4. '```' → logprob: -7.276223659515381
    5. 'ways' → logprob: -8.151224136352539
    6. 'solutions' → logprob: -8.651224136352539
    7. 'fac' → logprob: -9.901224136352539
    8. 'comb' → logprob: -9.901224136352539
    9. 'mé' → logprob: -10.026224136352539
    10. 's' → logprob: -10.151224136352539

Token 1612: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1613: ''obtenir' (ID: 191633)
  Prédit: ''obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.01866968907415867
    2. 'e' → logprob: -4.268669605255127
    3. ''avoir' → logprob: -5.518669605255127
    4. '’obtenir' → logprob: -8.893670082092285
    5. ''é' → logprob: -9.393670082092285
    6. ''être' → logprob: -9.643670082092285
    7. ''effect' → logprob: -10.018670082092285
    8. ''' → logprob: -10.143670082092285
    9. ''ac' → logprob: -10.268670082092285
    10. ''ob' → logprob: -10.393670082092285

Token 1614: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010159401223063469
    2. ' s' → logprob: -4.760159492492676
    3. 'la' → logprob: -7.135159492492676
    4. '(s' → logprob: -8.510159492492676
    5. ' la' → logprob: -8.885159492492676
    6. 'mod' → logprob: -8.885159492492676
    7. 'le' → logprob: -9.260159492492676
    8. 'the' → logprob: -10.635159492492676
    9. 'l' → logprob: -10.760159492492676
    10. ')' → logprob: -11.010159492492676

Token 1615: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006577996537089348
    2. 'som' → logprob: -5.131577968597412
    3. 'sum' → logprob: -7.631577968597412
    4. 'target' → logprob: -9.38157844543457
    5. 'c' → logprob: -10.50657844543457
    6. ' somme' → logprob: -10.63157844543457
    7. 'val' → logprob: -12.25657844543457
    8. '```' → logprob: -12.25657844543457
    9. 'sou' → logprob: -12.75657844543457
    10. 'score' → logprob: -12.75657844543457

Token 1616: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1617: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1618: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1619: '(main' (ID: 48921)
  Prédit: '(main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.20143164694309235
    2. '(' → logprob: -1.7014316320419312
    3. '()' → logprob: -12.076431274414062
    4. '('' → logprob: -12.201431274414062
    5. '(Main' → logprob: -12.576431274414062
    6. '("("' → logprob: -14.451431274414062
    7. '((' → logprob: -14.576431274414062
    8. 'main' → logprob: -14.701431274414062
    9. '(
' → logprob: -14.826431274414062
    10. '(__' → logprob: -15.326431274414062

Token 1620: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019300628919154406
    2. '()' → logprob: -6.251930236816406
    3. ')' → logprob: -14.126930236816406
    4. '())
' → logprob: -15.376930236816406
    5. ' ())' → logprob: -15.626930236816406
    6. '();)' → logprob: -15.876930236816406
    7. '()))' → logprob: -16.876930236816406
    8. '()]' → logprob: -16.876930236816406
    9. '()`' → logprob: -17.376930236816406
    10. '(' → logprob: -17.626930236816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1618
Tokens correctement prédits (1ère position, stricte): 373
Tokens correctement prédits (1ère position, avec adaptation): 408
Tokens correctement prédits (top 10): 913
Précision stricte (1ère position): 23.05%
Précision adaptée (1ère position): 25.22%
Précision (top 10): 56.43%
================================================================================
