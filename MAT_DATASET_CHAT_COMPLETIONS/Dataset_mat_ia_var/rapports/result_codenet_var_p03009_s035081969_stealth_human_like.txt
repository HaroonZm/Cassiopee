================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, h, d = map(int, input().split())
P = 10**9+7
acc = 1
sm = 0

# calcul initial (factorielle ??)
for ii in range(1, n+1):
    acc = (acc * ii) % P
    sm = (sm + acc)%P

lst = [acc]
for idx in range(1, h):
    # un peu brouillon ce calcul, à revoir ?
    val = (acc * sm) % P
    lst.append(val)
    acc = acc + lst[-1]
    if idx >= d:
        acc = acc - lst[-d-1]
    acc %= P # on évite les gros chiffres
print(acc)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' h' (ID: 312)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16660279035568237
    2. ' =' → logprob: -2.041602849960327
    3. ',' → logprob: -3.791602849960327
    4. ')' → logprob: -7.666602611541748
    5. ' ' → logprob: -8.416603088378906
    6. '*' → logprob: -8.791603088378906
    7. '+' → logprob: -9.041603088378906
    8. ' ,' → logprob: -10.416603088378906
    9. '_' → logprob: -11.041603088378906
    10. ' *' → logprob: -11.791603088378906

Token 4: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16704410314559937
    2. ' =' → logprob: -1.9170441627502441
    3. ',' → logprob: -5.542044162750244
    4. ')' → logprob: -5.917044162750244
    5. '.' → logprob: -10.417043685913086
    6. '_' → logprob: -10.542043685913086
    7. ' ' → logprob: -10.792043685913086
    8. ';' → logprob: -10.792043685913086
    9. '+' → logprob: -11.417043685913086
    10. 'i' → logprob: -11.417043685913086

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028125358745455742
    2. ',' → logprob: -3.653125286102295
    3. ' =' → logprob: -7.403125286102295
    4. '.' → logprob: -7.778125286102295
    5. '_' → logprob: -8.153125762939453
    6. '*' → logprob: -9.278125762939453
    7. ')' → logprob: -9.403125762939453
    8. '[' → logprob: -9.403125762939453
    9. ':' → logprob: -9.653125762939453
    10. '```' → logprob: -9.903125762939453

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03154004365205765
    2. '0' → logprob: -3.7815401554107666
    3. '10' → logprob: -6.1565399169921875
    4. '3' → logprob: -6.5315399169921875
    5. '1' → logprob: -6.6565399169921875
    6. 'map' → logprob: -7.0315399169921875
    7. ' n' → logprob: -7.4065399169921875
    8. '32' → logprob: -7.5315399169921875
    9. '2' → logprob: -7.9065399169921875
    10. '5' → logprob: -8.156539916992188

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002921256935223937
    2. '<|end|>' → logprob: -7.002921104431152
    3. '```' → logprob: -7.002921104431152
    4. '(lambda' → logprob: -7.752921104431152
    5. ')' → logprob: -8.752921104431152
    6. 'user' → logprob: -9.752921104431152
    7. '(user' → logprob: -9.877921104431152
    8. '(int' → logprob: -10.127921104431152
    9. '<|end|>' → logprob: -10.127921104431152
    10. '(
' → logprob: -10.252921104431152

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6614621877670288
    2. '(input' → logprob: -1.0364621877670288
    3. ')' → logprob: -2.4114623069763184
    4. '(str' → logprob: -4.786462306976318
    5. '```' → logprob: -5.161462306976318
    6. '<|end|>' → logprob: -5.161462306976318
    7. '(user' → logprob: -5.286462306976318
    8. '(n' → logprob: -5.786462306976318
    9. '(int' → logprob: -6.411462306976318
    10. '('' → logprob: -6.786462306976318

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1603056639432907
    2. ' input' → logprob: -1.9103056192398071
    3. '(input' → logprob: -9.660305976867676
    4. ')' → logprob: -11.160305976867676
    5. ',input' → logprob: -13.410305976867676
    6. '=input' → logprob: -14.660305976867676
    7. '```' → logprob: -14.910305976867676
    8. ' )' → logprob: -15.035305976867676
    9. '[input' → logprob: -15.785305976867676
    10. '<input' → logprob: -15.785305976867676

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13777320086956024
    2. '()' → logprob: -3.512773275375366
    3. '(()' → logprob: -3.637773275375366
    4. ')' → logprob: -3.762773275375366
    5. '('' → logprob: -4.512773036956787
    6. '```' → logprob: -4.762773036956787
    7. '())' → logprob: -5.637773036956787
    8. '(""))' → logprob: -5.762773036956787
    9. '("")' → logprob: -5.887773036956787
    10. '("("' → logprob: -5.887773036956787

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025194191839545965
    2. 'strip' → logprob: -6.002519607543945
    3. 'rstrip' → logprob: -10.252519607543945
    4. 'read' → logprob: -12.752519607543945
    5. '(split' → logprob: -13.127519607543945
    6. ')' → logprob: -13.252519607543945
    7. ' split' → logprob: -13.502519607543945
    8. '```' → logprob: -15.002519607543945
    9. 'startswith' → logprob: -16.752519607543945
    10. 'replace' → logprob: -17.502519607543945

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6769567131996155
    2. '())' → logprob: -0.8019567131996155
    3. '))' → logprob: -3.4269566535949707
    4. '()))' → logprob: -5.051956653594971
    5. '()' → logprob: -5.676956653594971
    6. '`)' → logprob: -7.676956653594971
    7. '```' → logprob: -8.676957130432129
    8. '(' → logprob: -8.926957130432129
    9. '('' → logprob: -10.176957130432129
    10. ')))' → logprob: -10.301957130432129

Token 13: 'P' (ID: 47)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3994524478912354
    2. ',' → logprob: -1.7744524478912354
    3. '[' → logprob: -1.7744524478912354
    4. '\n' → logprob: -2.2744524478912354
    5. 'for' → logprob: -2.5244524478912354
    6. '#' → logprob: -3.5244524478912354
    7. '`' → logprob: -3.8994524478912354
    8. ''' → logprob: -3.8994524478912354
    9. ' ' → logprob: -3.8994524478912354
    10. 'x' → logprob: -4.024452209472656

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6080369353294373
    2. '=' → logprob: -1.983036994934082
    3. '[' → logprob: -2.233036994934082
    4. '(' → logprob: -2.983036994934082
    5. 'r' → logprob: -2.983036994934082
    6. '[:]' → logprob: -3.483036994934082
    7. '.' → logprob: -3.983036994934082
    8. '_' → logprob: -4.608036994934082
    9. '[]' → logprob: -5.108036994934082
    10. ',' → logprob: -5.108036994934082

Token 15: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7825478315353394
    2. 'list' → logprob: -1.6575478315353394
    3. '[int' → logprob: -2.032547950744629
    4. ' []' → logprob: -2.907547950744629
    5. '[' → logprob: -3.032547950744629
    6. '[n' → logprob: -3.157547950744629
    7. ' [' → logprob: -3.532547950744629
    8. ' list' → logprob: -4.032547950744629
    9. '[list' → logprob: -4.032547950744629
    10. '[h' → logprob: -5.282547950744629

Token 16: '10' (ID: 702)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7699598073959351
    2. '[int' → logprob: -1.519959807395935
    3. 'list' → logprob: -1.894959807395935
    4. '[n' → logprob: -2.6449599266052246
    5. '[' → logprob: -2.8949599266052246
    6. '[h' → logprob: -4.144959926605225
    7. '[list' → logprob: -4.519959926605225
    8. 'int' → logprob: -5.644959926605225
    9. '[input' → logprob: -6.019959926605225
    10. 'n' → logprob: -6.019959926605225

Token 17: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.043924733996391296
    2. ' **' → logprob: -3.9189248085021973
    3. '0' → logprob: -4.293924808502197
    4. '9' → logprob: -5.168924808502197
    5. '*' → logprob: -5.918924808502197
    6. '6' → logprob: -7.668924808502197
    7. '^' → logprob: -8.418924331665039
    8. '-' → logprob: -9.293924331665039
    9. '```' → logprob: -10.168924331665039
    10. '4' → logprob: -10.418924331665039

Token 18: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.7530574849806726e-05
    2. '8' → logprob: -10.625057220458984
    3. '18' → logprob: -11.000057220458984
    4. '6' → logprob: -11.875057220458984
    5. '5' → logprob: -13.250057220458984
    6. '```' → logprob: -13.375057220458984
    7. '-' → logprob: -13.500057220458984
    8. '4' → logprob: -14.250057220458984
    9. '09' → logprob: -14.250057220458984
    10. '7' → logprob: -14.375057220458984

Token 19: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0016851745313033462
    2. ' +' → logprob: -6.75168514251709
    3. '7' → logprob: -7.62668514251709
    4. '+
' → logprob: -10.75168514251709
    5. '6' → logprob: -13.00168514251709
    6. '+

' → logprob: -13.62668514251709
    7. '```' → logprob: -13.87668514251709
    8. ' +
' → logprob: -14.25168514251709
    9. '＋' → logprob: -15.12668514251709
    10. '9' → logprob: -15.12668514251709

Token 20: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -14.75
    3. '07' → logprob: -16.75
    4. '```' → logprob: -17.5
    5. ' ' → logprob: -17.875
    6. '9' → logprob: -19.125
    7. '17' → logprob: -19.375
    8. '_' → logprob: -19.375
    9. '87' → logprob: -19.875
    10. '37' → logprob: -20.75

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6188162565231323
    2. 'a' → logprob: -2.618816375732422
    3. 'dp' → logprob: -2.993816375732422
    4. '\' → logprob: -3.118816375732422
    5. '' → logprob: -3.243816375732422
    6. '\n' → logprob: -3.743816375732422
    7. 'n' → logprob: -3.868816375732422
    8. '
' → logprob: -3.868816375732422
    9. ')' → logprob: -4.118816375732422
    10. 'd' → logprob: -4.118816375732422

Token 22: 'acc' (ID: 3717)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24476313591003418
    2. 'a' → logprob: -1.7447631359100342
    3. 'A' → logprob: -4.744763374328613
    4. 'result' → logprob: -4.994763374328613
    5. 'for' → logprob: -5.994763374328613
    6. 'x' → logprob: -6.119763374328613
    7. 'fact' → logprob: -6.119763374328613
    8. 'c' → logprob: -6.244763374328613
    9. 'f' → logprob: -6.244763374328613
    10. ' dp' → logprob: -6.494763374328613

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7822635769844055
    2. 'um' → logprob: -0.9072635769844055
    3. ' =' → logprob: -2.7822635173797607
    4. 'umulate' → logprob: -2.7822635173797607
    5. 'umulator' → logprob: -5.90726375579834
    6. '_' → logprob: -5.90726375579834
    7. 'umulative' → logprob: -5.90726375579834
    8. '=[]' → logprob: -6.65726375579834
    9. 'u' → logprob: -6.78226375579834
    10. '[' → logprob: -7.15726375579834

Token 24: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03331991285085678
    2. '0' → logprob: -3.6583199501037598
    3. ' [' → logprob: -5.03331995010376
    4. '[]' → logprob: -8.533319473266602
    5. ' ' → logprob: -9.033319473266602
    6. '1' → logprob: -9.658319473266602
    7. '[int' → logprob: -10.033319473266602
    8. '[n' → logprob: -11.033319473266602
    9. '{' → logprob: -11.533319473266602
    10. '{}' → logprob: -12.283319473266602

Token 25: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028791112825274467
    2. '0' → logprob: -3.9037911891937256
    3. '[h' → logprob: -5.6537909507751465
    4. '1' → logprob: -5.7787909507751465
    5. '[n' → logprob: -7.2787909507751465
    6. '[[' → logprob: -8.403791427612305
    7. ' [' → logprob: -8.403791427612305
    8. '[int' → logprob: -8.653791427612305
    9. '{' → logprob: -8.903791427612305
    10. '[]' → logprob: -10.278791427612305

Token 26: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4086883068084717
    2. '<|end|>' → logprob: -1.5336883068084717
    3. '0' → logprob: -1.7836883068084717
    4. ' ' → logprob: -1.9086883068084717
    5. '
' → logprob: -2.5336883068084717
    6. 'for' → logprob: -3.2836883068084717
    7. '*' → logprob: -3.2836883068084717
    8. ' for' → logprob: -3.7836883068084717
    9. ',' → logprob: -4.283688545227051
    10. ')' → logprob: -5.033688545227051

Token 27: 'sm' (ID: 5635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0347435474395752
    2. ' ' → logprob: -1.2847435474395752
    3. ' for' → logprob: -1.5347435474395752
    4. '
' → logprob: -2.534743547439575
    5. '0' → logprob: -4.159743309020996
    6. '*' → logprob: -4.534743309020996
    7. ')' → logprob: -4.784743309020996
    8. ' 
' → logprob: -4.784743309020996
    9. '<|end|>' → logprob: -4.909743309020996
    10. '#' → logprob: -5.534743309020996

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17742837965488434
    2. ' =' → logprob: -1.9274283647537231
    3. ' ' → logprob: -5.302428245544434
    4. 'a' → logprob: -5.302428245544434
    5. ' +=' → logprob: -5.677428245544434
    6. '+=' → logprob: -6.427428245544434
    7. 'u' → logprob: -7.552428245544434
    8. '_' → logprob: -8.302428245544434
    9. '  ' → logprob: -8.802428245544434
    10. ' *=' → logprob: -8.802428245544434

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16107694804668427
    2. '0' → logprob: -1.9110769033432007
    3. ' h' → logprob: -8.036076545715332
    4. ' n' → logprob: -8.536076545715332
    5. 'h' → logprob: -9.036076545715332
    6. '1' → logprob: -9.036076545715332
    7. 'n' → logprob: -10.286076545715332
    8. 'd' → logprob: -11.161076545715332
    9. ' d' → logprob: -11.286076545715332
    10. '+' → logprob: -12.911076545715332

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001408686046488583
    2. '1' → logprob: -7.126408576965332
    3. 'h' → logprob: -8.126408576965332
    4. ' ' → logprob: -8.876408576965332
    5. 'n' → logprob: -9.251408576965332
    6. '+' → logprob: -10.501408576965332
    7. 'd' → logprob: -11.001408576965332
    8. '(' → logprob: -12.001408576965332
    9. 'acc' → logprob: -12.126408576965332
    10. '+h' → logprob: -12.751408576965332

Token 31: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22520335018634796
    2. ' for' → logprob: -1.8502033948898315
    3. '
' → logprob: -3.350203275680542
    4. '<|end|>' → logprob: -5.225203514099121
    5. '\n' → logprob: -6.600203514099121
    6. ' ' → logprob: -7.225203514099121
    7. '' → logprob: -8.100203514099121
    8. '+' → logprob: -8.225203514099121
    9. '```' → logprob: -8.475203514099121
    10. ' 
' → logprob: -8.600203514099121

Token 32: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006477329879999161
    2. '
' → logprob: -5.506477355957031
    3. ' for' → logprob: -6.131477355957031
    4. 'd' → logprob: -9.381477355957031
    5. 'f' → logprob: -10.256477355957031
    6. '\n' → logprob: -10.756477355957031
    7. ' 
' → logprob: -11.131477355957031
    8. '```' → logprob: -11.256477355957031
    9. '=' → logprob: -12.256477355957031
    10. 'n' → logprob: -12.381477355957031

Token 33: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43186941742897034
    2. ' for' → logprob: -1.181869387626648
    3. ' ' → logprob: -3.8068695068359375
    4. ' f' → logprob: -4.3068695068359375
    5. 'f' → logprob: -5.1818695068359375
    6. 'For' → logprob: -7.3068695068359375
    7. 'n' → logprob: -8.556869506835938
    8. '(' → logprob: -8.681869506835938
    9. ' (' → logprob: -9.056869506835938
    10. '#' → logprob: -9.306869506835938

Token 34: ' initial' (ID: 4871)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.22816023230552673
    2. 'ating' → logprob: -1.6031602621078491
    3. 'ator' → logprob: -6.103160381317139
    4. 'ation' → logprob: -8.22815990447998
    5. 'culate' → logprob: -9.10315990447998
    6. 'a' → logprob: -10.35315990447998
    7. 'at' → logprob: -10.72815990447998
    8. 'ated' → logprob: -10.85315990447998
    9. '#' → logprob: -11.22815990447998
    10. 'ateur' → logprob: -12.10315990447998

Token 35: ' (' (ID: 350)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1457065343856812
    2. '#' → logprob: -1.8957065343856812
    3. ',' → logprob: -2.2707066535949707
    4. 'a' → logprob: -2.6457066535949707
    5. 'i' → logprob: -2.7707066535949707
    6. 's' → logprob: -2.8957066535949707
    7. 'ation' → logprob: -3.0207066535949707
    8. '_' → logprob: -3.2707066535949707
    9. 'ations' → logprob: -3.3957066535949707
    10. ' ' → logprob: -3.7707066535949707

Token 36: 'factor' (ID: 73174)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10206540673971176
    2. ' )' → logprob: -2.352065324783325
    3. ' de' → logprob: -7.852065563201904
    4. ',' → logprob: -7.852065563201904
    5. ' ' → logprob: -8.602065086364746
    6. 'e' → logprob: -9.102065086364746
    7. ' ' → logprob: -9.352065086364746
    8. ' for' → logprob: -9.602065086364746
    9. 'i' → logprob: -9.727065086364746
    10. ' n' → logprob: -9.852065086364746

Token 37: 'ielle' (ID: 22380)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.9734394550323486
    2. 'ielle' → logprob: -1.0984394550323486
    3. 'i' → logprob: -1.5984394550323486
    4. 'ial' → logprob: -2.9734394550323486
    5. '```' → logprob: -4.7234392166137695
    6. 'iels' → logprob: -4.8484392166137695
    7. 'ials' → logprob: -5.2234392166137695
    8. 'iation' → logprob: -5.7234392166137695
    9. 'e' → logprob: -6.3484392166137695
    10. 'ialize' → logprob: -6.3484392166137695

Token 38: ' ??' (ID: 16605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06150449812412262
    2. 's' → logprob: -3.686504602432251
    3. ' )' → logprob: -3.686504602432251
    4. '_' → logprob: -5.686504364013672
    5. ' ' → logprob: -5.936504364013672
    6. ',' → logprob: -6.686504364013672
    7. '!' → logprob: -6.811504364013672
    8. ' de' → logprob: -8.936504364013672
    9. 'de' → logprob: -8.936504364013672
    10. '_)' → logprob: -9.186504364013672

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15649543702602386
    2. '!' → logprob: -2.6564953327178955
    3. '!)' → logprob: -2.9064953327178955
    4. ' )' → logprob: -4.781495571136475
    5. '(' → logprob: -5.781495571136475
    6. ' !)' → logprob: -6.281495571136475
    7. '_' → logprob: -6.406495571136475
    8. 's' → logprob: -6.531495571136475
    9. ',' → logprob: -7.406495571136475
    10. ' ' → logprob: -7.531495571136475

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9513564705848694
    2. 'f' → logprob: -1.3263564109802246
    3. 'factor' → logprob: -1.7013564109802246
    4. '!' → logprob: -2.7013564109802246
    5. 'n' → logprob: -3.5763564109802246
    6. ')' → logprob: -3.8263564109802246
    7. ' for' → logprob: -4.076356410980225
    8. '(' → logprob: -5.326356410980225
    9. 'fact' → logprob: -5.451356410980225
    10. '=' → logprob: -5.576356410980225

Token 41: ' ii' (ID: 28354)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13146857917308807
    2. 'i' → logprob: -2.2564685344696045
    3. '_' → logprob: -4.131468772888184
    4. ' _' → logprob: -6.131468772888184
    5. ' ' → logprob: -9.256468772888184
    6. '_i' → logprob: -9.256468772888184
    7. ' range' → logprob: -10.506468772888184
    8. '	i' → logprob: -12.006468772888184
    9. ')' → logprob: -12.256468772888184
    10. ' ' → logprob: -13.256468772888184

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11364120990037918
    2. 'in' → logprob: -2.2386412620544434
    3. ' ' → logprob: -7.238641262054443
    4. 'n' → logprob: -10.488640785217285
    5. ',' → logprob: -10.613640785217285
    6. '  ' → logprob: -11.488640785217285
    7. ')' → logprob: -12.113640785217285
    8. 'range' → logprob: -12.488640785217285
    9. '	in' → logprob: -12.738640785217285
    10. 's' → logprob: -12.863640785217285

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22547894716262817
    2. 'range' → logprob: -1.6004788875579834
    3. ' ' → logprob: -10.225479125976562
    4. '	range' → logprob: -12.350479125976562
    5. '  ' → logprob: -12.850479125976562
    6. '(range' → logprob: -12.975479125976562
    7. 'r' → logprob: -13.100479125976562
    8. 'in' → logprob: -13.100479125976562
    9. ' ra' → logprob: -13.475479125976562
    10. ' in' → logprob: -13.475479125976562

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018159428611397743
    2. '(n' → logprob: -4.01815938949585
    3. '(h' → logprob: -12.018159866333008
    4. ' (' → logprob: -13.518159866333008
    5. '(i' → logprob: -14.518159866333008
    6. '(nn' → logprob: -14.893159866333008
    7. '(l' → logprob: -15.268159866333008
    8. '(
' → logprob: -15.393159866333008
    9. '(d' → logprob: -15.518159866333008
    10. '(ii' → logprob: -15.643159866333008

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02006855234503746
    2. 'n' → logprob: -4.145068645477295
    3. 'h' → logprob: -6.020068645477295
    4. '2' → logprob: -6.645068645477295
    5. ' ' → logprob: -8.895068168640137
    6. 'd' → logprob: -9.270068168640137
    7. '0' → logprob: -10.770068168640137
    8. '(' → logprob: -11.395068168640137
    9. ' n' → logprob: -11.395068168640137
    10. '(n' → logprob: -12.020068168640137

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006303326692432165
    2. ',n' → logprob: -5.256303310394287
    3. ' ,' → logprob: -6.881303310394287
    4. ',h' → logprob: -10.756303787231445
    5. ')' → logprob: -12.381303787231445
    6. 'n' → logprob: -12.506303787231445
    7. ',
' → logprob: -12.631303787231445
    8. '(n' → logprob: -12.881303787231445
    9. ' ' → logprob: -12.881303787231445
    10. ' n' → logprob: -13.256303787231445

Token 47: ' n' (ID: 297)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5762026309967041
    2. 'n' → logprob: -1.576202630996704
    3. 'd' → logprob: -1.951202630996704
    4. ' h' → logprob: -2.951202630996704
    5. ' n' → logprob: -3.701202630996704
    6. ' d' → logprob: -4.451202392578125
    7. ' ' → logprob: -8.826202392578125
    8. '2' → logprob: -8.951202392578125
    9. '1' → logprob: -10.076202392578125
    10. ')' → logprob: -10.076202392578125

Token 48: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011099581606686115
    2. ' +' → logprob: -4.511099815368652
    3. '):' → logprob: -10.511099815368652
    4. '+h' → logprob: -11.886099815368652
    5. '):
' → logprob: -12.261099815368652
    6. '1' → logprob: -13.011099815368652
    7. '-' → logprob: -13.136099815368652
    8. ')' → logprob: -13.386099815368652
    9. '2' → logprob: -13.761099815368652
    10. '+
' → logprob: -14.011099815368652

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. ' ' → logprob: -9.625067710876465
    3. '2' → logprob: -14.125067710876465
    4. ')' → logprob: -15.000067710876465
    5. '```' → logprob: -15.125067710876465
    6. '-' → logprob: -16.31256866455078
    7. '+' → logprob: -16.68756866455078
    8. '   ' → logprob: -17.12506866455078
    9. '۱' → logprob: -17.18756866455078
    10. '１' → logprob: -17.81256866455078

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009474032558500767
    2. ')' → logprob: -5.13447380065918
    3. '):
' → logprob: -6.38447380065918
    4. ' ):' → logprob: -6.75947380065918
    5. ':' → logprob: -7.50947380065918
    6. ',' → logprob: -9.50947380065918
    7. '+' → logprob: -11.00947380065918
    8. '*' → logprob: -11.38447380065918
    9. '):
' → logprob: -11.38447380065918
    10. ' )' → logprob: -11.63447380065918

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28034108877182007
    2. ' acc' → logprob: -2.905341148376465
    3. '   ' → logprob: -2.905341148376465
    4. ' ' → logprob: -3.155341148376465
    5. ' :' → logprob: -3.655341148376465
    6. ':
' → logprob: -4.280341148376465
    7. '	acc' → logprob: -4.530341148376465
    8. '<|end|>' → logprob: -4.780341148376465
    9. 'acc' → logprob: -4.905341148376465
    10. ' :
' → logprob: -5.280341148376465

Token 52: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.10034824907779694
    2. 'acc' (adapté à ' acc') → logprob: -2.4753482341766357
    3. ' sm' → logprob: -5.100348472595215
    4. ' ' → logprob: -6.725348472595215
    5. 'sm' → logprob: -6.850348472595215
    6. '	acc' → logprob: -6.850348472595215
    7. ' 
' → logprob: -7.850348472595215
    8. '   ' → logprob: -7.975348472595215
    9. '(acc' → logprob: -8.475348472595215
    10. '    ' → logprob: -8.850348472595215

Token 53: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.09949163347482681
    2. '=' → logprob: -3.099491596221924
    3. ' *=' → logprob: -3.099491596221924
    4. '*' → logprob: -5.599491596221924
    5. ' =' → logprob: -7.099491596221924
    6. ' ' → logprob: -11.224492073059082
    7. ' ' → logprob: -11.849492073059082
    8. '```' → logprob: -12.724492073059082
    9. ' *' → logprob: -12.849492073059082
    10. '**' → logprob: -13.599492073059082

Token 54: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.06366317719221115
    2. ' (' → logprob: -3.0636632442474365
    3. 'acc' → logprob: -4.563663005828857
    4. ' acc' → logprob: -5.813663005828857
    5. '(' → logprob: -6.938663005828857
    6. '   ' → logprob: -7.688663005828857
    7. '(ac' → logprob: -10.313663482666016
    8. '	acc' → logprob: -10.438663482666016
    9. '(ans' → logprob: -11.063663482666016
    10. 'ac' → logprob: -11.813663482666016

Token 55: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0702710673213005
    2. ' acc' → logprob: -2.6952710151672363
    3. '(acc' → logprob: -8.820271492004395
    4. 'ii' → logprob: -9.445271492004395
    5. '   ' → logprob: -10.070271492004395
    6. '	acc' → logprob: -11.070271492004395
    7. ' ii' → logprob: -11.570271492004395
    8. 'ac' → logprob: -11.820271492004395
    9. 'acci' → logprob: -11.945271492004395
    10. ' ' → logprob: -11.945271492004395

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759487152099609
    2. ' *' → logprob: -0.8259487152099609
    3. ' ' → logprob: -12.575948715209961
    4. '*i' → logprob: -12.575948715209961
    5. ' ' → logprob: -13.700948715209961
    6. '**' → logprob: -14.325948715209961
    7. ' **' → logprob: -15.450948715209961
    8. '*object' → logprob: -16.07594871520996
    9. '+' → logprob: -16.82594871520996
    10. '*(' → logprob: -16.95094871520996

Token 57: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.10038448125123978
    2. ' ii' → logprob: -2.350384473800659
    3. '(ii' → logprob: -9.225384712219238
    4. 'i' → logprob: -10.350384712219238
    5. ' ' → logprob: -10.600384712219238
    6. '   ' → logprob: -12.225384712219238
    7. '2' → logprob: -12.350384712219238
    8. '  ' → logprob: -12.850384712219238
    9. ' i' → logprob: -12.975384712219238
    10. ' (' → logprob: -13.350384712219238

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016349162615370005
    2. ' )' → logprob: -9.125163078308105
    3. ')%' → logprob: -9.875163078308105
    4. ')
' → logprob: -13.750163078308105
    5. '%' → logprob: -14.375163078308105
    6. ')`' → logprob: -15.250163078308105
    7. ')#' → logprob: -15.375163078308105
    8. '   ' → logprob: -15.750163078308105
    9. '),' → logprob: -16.125164031982422
    10. '`)' → logprob: -16.375164031982422

Token 59: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20680885016918182
    2. '<|end|>' → logprob: -2.4568088054656982
    3. ' %' → logprob: -2.8318088054656982
    4. ')' → logprob: -3.4568088054656982
    5. '
' → logprob: -5.081809043884277
    6. '<|end|>' → logprob: -6.081809043884277
    7. ' ' → logprob: -7.331809043884277
    8. ')%' → logprob: -7.456809043884277
    9. '%
' → logprob: -7.706809043884277
    10. '```' → logprob: -8.581809043884277

Token 60: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.1008713702030946e-06
    2. ' P' → logprob: -13.125001907348633
    3. '(' → logprob: -19.875001907348633
    4. 'p' → logprob: -20.000001907348633
    5. '(P' → logprob: -20.375001907348633
    6. ' ' → logprob: -20.375001907348633
    7. '\P' → logprob: -21.000001907348633
    8. '```' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '	P' → logprob: -21.750001907348633

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' (adapté à ' sm') → logprob: -0.009562588296830654
    2. ' sm' → logprob: -4.8845624923706055
    3. '   ' → logprob: -7.3845624923706055
    4. ')' → logprob: -7.5095624923706055
    5. '<|end|>' → logprob: -8.384562492370605
    6. ' ' → logprob: -8.884562492370605
    7. '```' → logprob: -9.009562492370605
    8. 's' → logprob: -9.384562492370605
    9. '	sm' → logprob: -9.384562492370605
    10. '_sm' → logprob: -11.134562492370605

Token 64: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1708594113588333
    2. ' +=' → logprob: -2.0458593368530273
    3. '=' → logprob: -3.7958593368530273
    4. '+' → logprob: -5.420859336853027
    5. ' =' → logprob: -7.045859336853027
    6. '+=(' → logprob: -11.045859336853027
    7. ' +' → logprob: -12.545859336853027
    8. ' ' → logprob: -12.795859336853027
    9. ']+=' → logprob: -13.170859336853027
    10. 's' → logprob: -13.295859336853027

Token 65: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6329900622367859
    2. '(sm' → logprob: -0.8829900622367859
    3. '(ii' → logprob: -3.1329901218414307
    4. '(' → logprob: -5.632989883422852
    5. ' sm' → logprob: -5.632989883422852
    6. '(acc' → logprob: -6.382989883422852
    7. 'sm' → logprob: -6.757989883422852
    8. 'ii' → logprob: -7.882989883422852
    9. ' ' → logprob: -8.132989883422852
    10. '(S' → logprob: -8.257989883422852

Token 66: 'sm' (ID: 5635)
  Prédit: 'sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.24505728483200073
    2. ' sm' → logprob: -1.8700573444366455
    3. 'acc' → logprob: -2.9950573444366455
    4. ' acc' → logprob: -5.370057106018066
    5. '(sm' → logprob: -5.745057106018066
    6. '(acc' → logprob: -6.245057106018066
    7. 'ii' → logprob: -7.120057106018066
    8. 's' → logprob: -7.745057106018066
    9. ' (' → logprob: -7.745057106018066
    10. '(s' → logprob: -7.995057106018066

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519413232803345
    2. '+' → logprob: -1.5019413232803345
    3. ' plus' → logprob: -12.501941680908203
    4. ' ' → logprob: -13.001941680908203
    5. ' ' → logprob: -13.751941680908203
    6. ' +=' → logprob: -13.876941680908203
    7. ')' → logprob: -14.376941680908203
    8. '+)' → logprob: -14.376941680908203
    9. '+i' → logprob: -14.876941680908203
    10. ' +
' → logprob: -15.126941680908203

Token 68: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5906908512115479
    2. ' acc' → logprob: -1.2156908512115479
    3. 'ii' → logprob: -2.090690851211548
    4. ' ii' → logprob: -4.090690612792969
    5. '(ii' → logprob: -5.840690612792969
    6. '(acc' → logprob: -6.340690612792969
    7. ' (' → logprob: -6.715690612792969
    8. ' ' → logprob: -6.840690612792969
    9. '(' → logprob: -7.340690612792969
    10. '1' → logprob: -7.340690612792969

Token 69: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031139038037508726
    2. ' )' → logprob: -8.125311851501465
    3. '*' → logprob: -12.250311851501465
    4. '`)' → logprob: -12.750311851501465
    5. '   ' → logprob: -13.125311851501465
    6. ')%' → logprob: -13.250311851501465
    7. '')' → logprob: -13.625311851501465
    8. ' *' → logprob: -14.000311851501465
    9. ')`' → logprob: -14.750311851501465
    10. '))' → logprob: -14.875311851501465

Token 70: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0002036595979006961
    2. ' P' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.750204086303711
    4. '(P' → logprob: -17.00020408630371
    5. '	P' → logprob: -18.62520408630371
    6. '10' → logprob: -18.75020408630371
    7. '>P' → logprob: -18.87520408630371
    8. '```' → logprob: -19.00020408630371
    9. '<|end|>' → logprob: -19.25020408630371
    10. '(' → logprob: -19.50020408630371

Token 71: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'lst' (ID: 65430)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8189206719398499
    2. '<|end|>' → logprob: -1.693920612335205
    3. 'for' → logprob: -1.943920612335205
    4. 'n' → logprob: -2.818920612335205
    5. '\n' → logprob: -3.068920612335205
    6. '#' → logprob: -3.693920612335205
    7. '+' → logprob: -3.818920612335205
    8. ' for' → logprob: -3.943920612335205
    9. ' ' → logprob: -4.068920612335205
    10. '```' → logprob: -4.568920612335205

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24351279437541962
    2. '=' → logprob: -1.743512749671936
    3. '=[]' → logprob: -4.6185126304626465
    4. '[' → logprob: -4.9935126304626465
    5. '_' → logprob: -5.1185126304626465
    6. 's' → logprob: -5.1185126304626465
    7. '[:]' → logprob: -5.1185126304626465
    8. 'a' → logprob: -6.1185126304626465
    9. ')' → logprob: -7.9935126304626465
    10. '[]' → logprob: -8.118513107299805

Token 74: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.889656662940979
    2. ' [' → logprob: -1.014656662940979
    3. '[]' → logprob: -2.3896565437316895
    4. ' []' → logprob: -2.7646565437316895
    5. '[h' → logprob: -3.2646565437316895
    6. '[n' → logprob: -3.5146565437316895
    7. '[d' → logprob: -7.0146565437316895
    8. '[i' → logprob: -7.8896565437316895
    9. '[s' → logprob: -8.139657020568848
    10. '[a' → logprob: -8.264657020568848

Token 75: 'acc' (ID: 3717)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15952709317207336
    2. '1' → logprob: -2.534527063369751
    3. 'sm' → logprob: -3.784527063369751
    4. 'acc' → logprob: -3.909527063369751
    5. 'n' → logprob: -4.90952730178833
    6. ' ' → logprob: -5.15952730178833
    7. 'h' → logprob: -5.65952730178833
    8. ' sm' → logprob: -6.28452730178833
    9. ' acc' → logprob: -6.53452730178833
    10. ' n' → logprob: -7.03452730178833

Token 76: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006153696682304144
    2. ',' → logprob: -5.256153583526611
    3. ' ]' → logprob: -7.756153583526611
    4. '%' → logprob: -8.75615406036377
    5. ')]' → logprob: -9.25615406036377
    6. ')' → logprob: -9.63115406036377
    7. ' for' → logprob: -9.63115406036377
    8. ']*' → logprob: -10.75615406036377
    9. ']%' → logprob: -11.13115406036377
    10. 'for' → logprob: -11.25615406036377

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028823088854551315
    2. ' for' → logprob: -3.778823137283325
    3. '<|end|>' → logprob: -5.403822898864746
    4. '
' → logprob: -8.653822898864746
    5. ',' → logprob: -8.903822898864746
    6. 's' → logprob: -9.153822898864746
    7. ' ' → logprob: -9.278822898864746
    8. 'f' → logprob: -9.403822898864746
    9. 'acc' → logprob: -9.653822898864746
    10. ')' → logprob: -10.153822898864746

Token 78: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.75283282995224
    2. ' _' → logprob: -0.87783282995224
    3. ' ii' → logprob: -3.0028328895568848
    4. '_' → logprob: -3.1278328895568848
    5. ' ' → logprob: -4.377832889556885
    6. ' jj' → logprob: -5.627832889556885
    7. 'i' → logprob: -6.377832889556885
    8. '_i' → logprob: -7.752832889556885
    9. ' j' → logprob: -7.752832889556885
    10. ' iii' → logprob: -8.502832412719727

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03823737055063248
    2. 'in' → logprob: -3.2882373332977295
    3. ' ' → logprob: -8.913237571716309
    4. ',' → logprob: -10.288237571716309
    5. '1' → logprob: -12.038237571716309
    6. 'n' → logprob: -12.163237571716309
    7. '+' → logprob: -12.913237571716309
    8. 'range' → logprob: -13.038237571716309
    9. '2' → logprob: -13.413237571716309
    10. 'i' → logprob: -13.538237571716309

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2256956398487091
    2. 'range' → logprob: -1.6006956100463867
    3. ' in' → logprob: -8.975695610046387
    4. ' ' → logprob: -9.225695610046387
    5. 'in' → logprob: -10.850695610046387
    6. '  ' → logprob: -11.600695610046387
    7. '	range' → logprob: -11.725695610046387
    8. ')' → logprob: -12.725695610046387
    9. '   ' → logprob: -12.850695610046387
    10. '_' → logprob: -12.850695610046387

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003053288906812668
    2. '(n' → logprob: -6.003053188323975
    3. '(idx' → logprob: -8.003053665161133
    4. '(h' → logprob: -8.503053665161133
    5. ' (' → logprob: -10.503053665161133
    6. '(len' → logprob: -12.628053665161133
    7. '(i' → logprob: -12.628053665161133
    8. '(ii' → logprob: -12.628053665161133
    9. '1' → logprob: -14.128053665161133
    10. ' ' → logprob: -15.253053665161133

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10283053666353226
    2. '2' → logprob: -3.102830648422241
    3. 'n' → logprob: -3.227830648422241
    4. 'h' → logprob: -4.602830410003662
    5. ' ' → logprob: -6.477830410003662
    6. '0' → logprob: -7.352830410003662
    7. ' n' → logprob: -7.477830410003662
    8. ' h' → logprob: -8.85283088684082
    9. 'd' → logprob: -9.72783088684082
    10. '3' → logprob: -9.85283088684082

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016581706702709198
    2. ' ,' → logprob: -4.3915815353393555
    3. ',n' → logprob: -5.5165815353393555
    4. ',h' → logprob: -10.391581535339355
    5. ' ' → logprob: -11.891581535339355
    6. ' n' → logprob: -12.891581535339355
    7. 'n' → logprob: -14.141581535339355
    8. ',d' → logprob: -14.266581535339355
    9. '1' → logprob: -14.516581535339355
    10. ',len' → logprob: -14.516581535339355

Token 84: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.259469598531723
    2. 'd' → logprob: -1.7594696283340454
    3. 'n' → logprob: -3.634469509124756
    4. ' h' → logprob: -3.884469509124756
    5. ' d' → logprob: -5.134469509124756
    6. 'min' → logprob: -6.509469509124756
    7. ' n' → logprob: -6.759469509124756
    8. ' ' → logprob: -7.884469509124756
    9. ' min' → logprob: -8.134469985961914
    10. '   ' → logprob: -9.509469985961914

Token 85: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013467362150549889
    2. '):' → logprob: -4.638467311859131
    3. ' +' → logprob: -6.013467311859131
    4. '):
' → logprob: -7.138467311859131
    5. '-' → logprob: -8.013467788696289
    6. '+n' → logprob: -9.763467788696289
    7. '-n' → logprob: -11.013467788696289
    8. ' -' → logprob: -11.388467788696289
    9. ',' → logprob: -11.513467788696289
    10. ' ):' → logprob: -11.638467788696289

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2777644991874695
    2. ' lst' → logprob: -1.6527645587921143
    3. 'lst' → logprob: -3.0277645587921143
    4. ' acc' → logprob: -6.652764320373535
    5. '```' → logprob: -7.777764320373535
    6. '    
' → logprob: -8.527764320373535
    7. '_lst' → logprob: -8.652764320373535
    8. ' ' → logprob: -8.902764320373535
    9. '<|end|>' → logprob: -9.402764320373535
    10. 'acc' → logprob: -9.777764320373535

Token 87: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7654973864555359
    2. 'lst' → logprob: -1.3904974460601807
    3. 'acc' → logprob: -2.1404974460601807
    4. ' acc' → logprob: -2.3904974460601807
    5. ' lst' → logprob: -3.0154974460601807
    6. 'val' → logprob: -5.015497207641602
    7. 'next' → logprob: -5.890497207641602
    8. 'new' → logprob: -5.890497207641602
    9. ' new' → logprob: -6.015497207641602
    10. ' nxt' → logprob: -6.140497207641602

Token 88: ' un' (ID: 537)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.5747025012969971
    2. 'acc' → logprob: -1.824702501296997
    3. 'lst' → logprob: -2.324702501296997
    4. ' lst' → logprob: -3.074702501296997
    5. ' val' → logprob: -3.324702501296997
    6. 'val' → logprob: -3.449702501296997
    7. 'new' → logprob: -4.574702262878418
    8. ' new' → logprob: -4.574702262878418
    9. 'tmp' → logprob: -4.699702262878418
    10. 'prev' → logprob: -5.324702262878418

Token 89: ' peu' (ID: 9235)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6805882453918457
    2. 'acc' → logprob: -1.0555882453918457
    3. 'der' → logprob: -3.6805882453918457
    4. 'ique' → logprob: -3.9305882453918457
    5. '=' → logprob: -4.930588245391846
    6. ' acc' → logprob: -5.055588245391846
    7. 'd' → logprob: -5.180588245391846
    8. 'e' → logprob: -5.180588245391846
    9. '   ' → logprob: -5.180588245391846
    10. ' =' → logprob: -5.305588245391846

Token 90: ' brou' (ID: 128098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5491216778755188
    2. 'lst' → logprob: -2.674121618270874
    3. 'acc' → logprob: -2.924121618270874
    4. ' lst' → logprob: -3.049121618270874
    5. ' acc' → logprob: -3.424121618270874
    6. 'prev' → logprob: -3.549121618270874
    7. 'd' → logprob: -3.799121618270874
    8. 'n' → logprob: -4.049121856689453
    9. ')' → logprob: -4.424121856689453
    10. ' new' → logprob: -4.549121856689453

Token 91: 'illon' (ID: 37693)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34351465106010437
    2. 'lst' → logprob: -2.2185146808624268
    3. ' lst' → logprob: -3.2185146808624268
    4. ' acc' → logprob: -3.4685146808624268
    5. ')' → logprob: -4.093514442443848
    6. 'acc' → logprob: -4.343514442443848
    7. '*' → logprob: -4.343514442443848
    8. ' ' → logprob: -4.593514442443848
    9. ',' → logprob: -4.718514442443848
    10. '=' → logprob: -5.781014442443848

Token 92: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0377114973962307
    2. ' acc' → logprob: -4.1627116203308105
    3. '<|end|>' → logprob: -5.0377116203308105
    4. ' lst' → logprob: -5.7877116203308105
    5. 'lst' → logprob: -6.0377116203308105
    6. ',' → logprob: -6.5377116203308105
    7. 'acc' → logprob: -6.9127116203308105
    8. ':' → logprob: -7.0377116203308105
    9. '```' → logprob: -7.2877116203308105
    10. ' ' → logprob: -7.4127116203308105

Token 93: ' calcul' (ID: 7559)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5519657135009766
    2. ' que' → logprob: -1.3019657135009766
    3. 'n' → logprob: -3.9269657135009766
    4. 'qui' → logprob: -4.051965713500977
    5. 'acc' → logprob: -4.051965713500977
    6. ' code' → logprob: -4.301965713500977
    7. 'code' → logprob: -4.426965713500977
    8. 'lst' → logprob: -4.551965713500977
    9. '#' → logprob: -4.676965713500977
    10. ' qui' → logprob: -4.801965713500977

Token 94: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44372832775115967
    2. '   ' → logprob: -1.8187283277511597
    3. ':
' → logprob: -2.443728446960449
    4. ',' → logprob: -3.068728446960449
    5. '<|end|>' → logprob: -3.693728446960449
    6. ' :' → logprob: -4.818728446960449
    7. '):
' → logprob: -4.943728446960449
    8. ' :
' → logprob: -5.193728446960449
    9. '```' → logprob: -5.693728446960449
    10. '
' → logprob: -6.193728446960449

Token 95: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03394027799367905
    2. ' but' → logprob: -4.033940315246582
    3. ' mais' → logprob: -4.908940315246582
    4. ' lst' → logprob: -6.158940315246582
    5. 'lst' → logprob: -6.783940315246582
    6. '    ' → logprob: -6.908940315246582
    7. '#' → logprob: -7.033940315246582
    8. 'but' → logprob: -7.533940315246582
    9. ' ' → logprob: -7.658940315246582
    10. '  ' → logprob: -8.158940315246582

Token 96: ' revoir' (ID: 136174)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.3790155351161957
    2. 're' → logprob: -2.8790154457092285
    3. 'pe' → logprob: -3.1290154457092285
    4. ' revoir' → logprob: -3.2540154457092285
    5. 'rev' → logprob: -3.5040154457092285
    6. 'part' → logprob: -3.6290154457092285
    7. 'develop' → logprob: -4.3790154457092285
    8. 'am' → logprob: -4.8790154457092285
    9. 'corr' → logprob: -5.0040154457092285
    10. 'ref' → logprob: -5.1290154457092285

Token 97: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1490366905927658
    2. '<|end|>' → logprob: -2.6490366458892822
    3. '
' → logprob: -3.3990366458892822
    4. '```' → logprob: -4.524036884307861
    5. ',' → logprob: -5.149036884307861
    6. 'lst' → logprob: -5.649036884307861
    7. ':' → logprob: -6.399036884307861
    8. '<|end|>' → logprob: -6.399036884307861
    9. '    
' → logprob: -6.524036884307861
    10. ' ' → logprob: -6.649036884307861

Token 98: '   ' (ID: 271)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.8455384373664856
    2. 'acc' → logprob: -1.4705383777618408
    3. '   ' → logprob: -1.8455383777618408
    4. ' lst' → logprob: -3.345538377761841
    5. 'prev' → logprob: -3.470538377761841
    6. ' acc' → logprob: -3.720538377761841
    7. 'tmp' → logprob: -3.970538377761841
    8. 'val' → logprob: -4.09553861618042
    9. 'factor' → logprob: -4.22053861618042
    10. 'inv' → logprob: -4.47053861618042

Token 99: ' val' (ID: 1459)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.1011911630630493
    2. 'acc' → logprob: -1.2261911630630493
    3. 'val' (adapté à ' val') → logprob: -1.6011911630630493
    4. 'tmp' → logprob: -3.1011910438537598
    5. ' acc' → logprob: -3.4761910438537598
    6. ' lst' → logprob: -4.22619104385376
    7. 'new' → logprob: -4.47619104385376
    8. ' val' → logprob: -4.60119104385376
    9. 'fact' → logprob: -4.85119104385376
    10. 'next' → logprob: -4.85119104385376

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519417703151703
    2. '=' → logprob: -1.5019418001174927
    3. ' ' → logprob: -12.251941680908203
    4. '   ' → logprob: -12.751941680908203
    5. '  ' → logprob: -14.376941680908203
    6. 'd' → logprob: -14.626941680908203
    7. 'lst' → logprob: -14.626941680908203
    8. ' =(' → logprob: -14.876941680908203
    9. ' +=' → logprob: -15.126941680908203
    10. ' =
' → logprob: -15.126941680908203

Token 101: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7813982963562012
    2. '(lst' → logprob: -1.1563982963562012
    3. '(acc' → logprob: -2.031398296356201
    4. ' lst' → logprob: -2.906398296356201
    5. 'lst' → logprob: -3.656398296356201
    6. ' acc' → logprob: -5.656398296356201
    7. 'acc' → logprob: -5.656398296356201
    8. '(' → logprob: -6.031398296356201
    9. '(l' → logprob: -6.281398296356201
    10. '(n' → logprob: -7.156398296356201

Token 102: 'acc' (ID: 3717)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6119322776794434
    2. ' lst' → logprob: -0.9869322776794434
    3. '(lst' → logprob: -3.1119322776794434
    4. 'acc' → logprob: -4.111932277679443
    5. ' acc' → logprob: -4.611932277679443
    6. '(acc' → logprob: -5.111932277679443
    7. ' (' → logprob: -5.236932277679443
    8. '(' → logprob: -7.861932277679443
    9. 'd' → logprob: -8.111932754516602
    10. '(l' → logprob: -8.111932754516602

Token 103: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5769851803779602
    2. ' *' → logprob: -0.8269851803779602
    3. '+' → logprob: -7.5769853591918945
    4. ' +' → logprob: -8.326985359191895
    5. '-' → logprob: -9.451985359191895
    6. ' -' → logprob: -9.451985359191895
    7. ' ' → logprob: -10.201985359191895
    8. '*(' → logprob: -10.451985359191895
    9. '**' → logprob: -10.951985359191895
    10. '*n' → logprob: -11.451985359191895

Token 104: ' sm' (ID: 1765)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.44852733612060547
    2. '(n' → logprob: -2.5735273361206055
    3. 'd' → logprob: -2.8235273361206055
    4. ' pow' → logprob: -3.0735273361206055
    5. '(acc' → logprob: -3.0735273361206055
    6. '(pow' → logprob: -3.3235273361206055
    7. '(d' → logprob: -3.5735273361206055
    8. '(idx' → logprob: -4.3235273361206055
    9. ' (' → logprob: -4.6985273361206055
    10. '(' → logprob: -5.0735273361206055

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022944211959838867
    2. ')%' → logprob: -6.252294540405273
    3. ' )' → logprob: -8.127294540405273
    4. '+' → logprob: -10.752294540405273
    5. '**' → logprob: -10.877294540405273
    6. ' +' → logprob: -11.502294540405273
    7. '*' → logprob: -12.002294540405273
    8. '[idx' → logprob: -12.752294540405273
    9. ' *' → logprob: -12.877294540405273
    10. '[' → logprob: -13.252294540405273

Token 106: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.026473764330148697
    2. ' %' → logprob: -3.6514737606048584
    3. 'lst' → logprob: -9.526473999023438
    4. '
' → logprob: -10.026473999023438
    5. ')' → logprob: -11.276473999023438
    6. ')%' → logprob: -12.026473999023438
    7. '_lst' → logprob: -12.151473999023438
    8. '   ' → logprob: -12.401473999023438
    9. '%n' → logprob: -12.651473999023438
    10. ' lst' → logprob: -12.651473999023438

Token 107: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -5.5577775128767826e-06
    2. ' P' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.5000057220459
    4. '(P' → logprob: -18.0000057220459
    5. ' ' → logprob: -19.3750057220459
    6. '
' → logprob: -19.6250057220459
    7. '	P' → logprob: -19.7500057220459
    8. '>P' → logprob: -19.7500057220459
    9. '\P' → logprob: -20.0000057220459
    10. '```' → logprob: -20.2500057220459

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01668265275657177
    2. 'lst' → logprob: -4.1416826248168945
    3. 'acc' → logprob: -7.8916826248168945
    4. ' lst' → logprob: -8.516682624816895
    5. '  ' → logprob: -10.391682624816895
    6. '
' → logprob: -11.391682624816895
    7. ' ' → logprob: -11.641682624816895
    8. '```' → logprob: -11.766682624816895
    9. '    
' → logprob: -12.266682624816895
    10. ' acc' → logprob: -12.266682624816895

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02696193940937519
    2. 'lst' → logprob: -3.6519620418548584
    3. 'acc' → logprob: -7.901961803436279
    4. ' lst' → logprob: -9.026962280273438
    5. '
' → logprob: -9.776962280273438
    6. '```' → logprob: -10.151962280273438
    7. '    
' → logprob: -11.026962280273438
    8. '  ' → logprob: -11.151962280273438
    9. ' ' → logprob: -11.401962280273438
    10. '<|end|>' → logprob: -11.901962280273438

Token 110: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.00978878978639841
    2. 'acc' → logprob: -4.634788990020752
    3. 'val' → logprob: -11.259788513183594
    4. 'sm' → logprob: -12.009788513183594
    5. '   ' → logprob: -12.384788513183594
    6. 'P' → logprob: -12.509788513183594
    7. 'n' → logprob: -13.009788513183594
    8. ' lst' → logprob: -13.634788513183594
    9. 'list' → logprob: -14.634788513183594
    10. '```' → logprob: -14.884788513183594

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012051118537783623
    2. '.' → logprob: -6.751204967498779
    3. '.app' → logprob: -10.751205444335938
    4. ' .' → logprob: -12.001205444335938
    5. '.extend' → logprob: -12.376205444335938
    6. '.push' → logprob: -14.626205444335938
    7. '.insert' → logprob: -14.626205444335938
    8. '.Append' → logprob: -14.751205444335938
    9. '.add' → logprob: -15.126205444335938
    10. '.ap' → logprob: -15.251205444335938

Token 112: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.011776409111917019
    2. '(' → logprob: -4.761776447296143
    3. '((' → logprob: -5.761776447296143
    4. '(lst' → logprob: -11.761775970458984
    5. ' (' → logprob: -13.636775970458984
    6. '(
' → logprob: -14.011775970458984
    7. '(vals' → logprob: -14.511775970458984
    8. '[val' → logprob: -15.011775970458984
    9. 'val' → logprob: -15.761775970458984
    10. '(v' → logprob: -16.011775970458984

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000194361709873192
    2. '   ' → logprob: -8.750194549560547
    3. ')
' → logprob: -10.625194549560547
    4. ' )' → logprob: -11.625194549560547
    5. '<|end|>' → logprob: -13.750194549560547
    6. ')n' → logprob: -15.750194549560547
    7. '+' → logprob: -15.875194549560547
    8. '))' → logprob: -16.000194549560547
    9. '),' → logprob: -16.000194549560547
    10. ']' → logprob: -16.125194549560547

Token 114: '   ' (ID: 271)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.11634211242198944
    2. '   ' → logprob: -2.491342067718506
    3. 'sm' → logprob: -3.991342067718506
    4. ' acc' → logprob: -5.491342067718506
    5. '<|end|>' → logprob: -6.241342067718506
    6. ' sm' → logprob: -7.241342067718506
    7. '	acc' → logprob: -7.491342067718506
    8. '    ' → logprob: -8.491342544555664
    9. '```' → logprob: -8.491342544555664
    10. ' ' → logprob: -8.741342544555664

Token 115: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.4309074580669403
    2. 'sm' → logprob: -1.0559074878692627
    3. '   ' → logprob: -6.180907249450684
    4. ' acc' → logprob: -10.555907249450684
    5. ' sm' → logprob: -10.930907249450684
    6. '  ' → logprob: -11.305907249450684
    7. 'val' → logprob: -11.305907249450684
    8. 'P' → logprob: -11.430907249450684
    9. '    ' → logprob: -11.430907249450684
    10. ' ' → logprob: -11.555907249450684

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029851965606212616
    2. ' =' → logprob: -3.5298519134521484
    3. '*=' → logprob: -9.404851913452148
    4. ' *=' → logprob: -10.904851913452148
    5. '   ' → logprob: -14.779851913452148
    6. ' ' → logprob: -16.02985191345215
    7. '*' → logprob: -16.40485191345215
    8. '  ' → logprob: -16.65485191345215
    9. '+=' → logprob: -16.77985191345215
    10. '=
' → logprob: -18.27985191345215

Token 117: ' acc' (ID: 1259)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.22509923577308655
    2. '(acc' → logprob: -1.7250992059707642
    3. 'val' → logprob: -3.9750993251800537
    4. '(lst' → logprob: -6.350099086761475
    5. 'acc' → logprob: -6.725099086761475
    6. ' (' → logprob: -6.725099086761475
    7. ' val' → logprob: -8.350099563598633
    8. '(' → logprob: -9.725099563598633
    9. '(ans' → logprob: -9.850099563598633
    10. '(vals' → logprob: -10.975099563598633

Token 118: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006186875980347395
    2. ' *' → logprob: -5.3811869621276855
    3. 'val' → logprob: -6.7561869621276855
    4. ' val' → logprob: -8.506186485290527
    5. ' ' → logprob: -9.881186485290527
    6. '(val' → logprob: -10.381186485290527
    7. 'acc' → logprob: -10.631186485290527
    8. '[val' → logprob: -10.881186485290527
    9. '_val' → logprob: -11.256186485290527
    10. '   ' → logprob: -11.381186485290527

Token 119: ' lst' (ID: 33384)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1427783966064453
    2. 'sm' → logprob: -2.7677783966064453
    3. 'lst' → logprob: -2.8927783966064453
    4. 'acc' → logprob: -5.142778396606445
    5. ' val' → logprob: -5.642778396606445
    6. '1' → logprob: -6.642778396606445
    7. ' sm' → logprob: -7.017778396606445
    8. '(' → logprob: -7.017778396606445
    9. ' lst' → logprob: -7.267778396606445
    10. '(val' → logprob: -7.517778396606445

Token 120: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.027395831421017647
    2. '[idx' → logprob: -3.652395725250244
    3. '[' → logprob: -6.902395725250244
    4. '[:]' → logprob: -9.902396202087402
    5. '[:' → logprob: -11.402396202087402
    6. '[:-' → logprob: -11.527396202087402
    7. '[]' → logprob: -13.027396202087402
    8. '[...]' → logprob: -13.277396202087402
    9. '[
' → logprob: -13.402396202087402
    10. '[len' → logprob: -13.652396202087402

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282453685998917
    2. '2' → logprob: -2.2378244400024414
    3. '3' → logprob: -13.237824440002441
    4. '```' → logprob: -15.987824440002441
    5. '(' → logprob: -16.675325393676758
    6. ' ' → logprob: -16.862825393676758
    7. '-' → logprob: -17.487825393676758
    8. '0' → logprob: -17.675325393676758
    9. '4' → logprob: -17.800325393676758
    10. '   ' → logprob: -17.987825393676758

Token 122: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1319732815027237
    2. ')%' → logprob: -2.6319732666015625
    3. '%' → logprob: -3.3819732666015625
    4. '<|end|>' → logprob: -4.2569732666015625
    5. ' %' → logprob: -6.1319732666015625
    6. ']' → logprob: -7.5069732666015625
    7. ']%' → logprob: -8.256973266601562
    8. ' )' → logprob: -8.506973266601562
    9. '<|end|>' → logprob: -9.006973266601562
    10. '
' → logprob: -9.506973266601562

Token 123: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6086958050727844
    2. ' %' → logprob: -0.8586958050727844
    3. ')' → logprob: -4.358695983886719
    4. '<|end|>' → logprob: -4.358695983886719
    5. '
' → logprob: -5.483695983886719
    6. '   ' → logprob: -7.108695983886719
    7. ' 
' → logprob: -7.608695983886719
    8. ')%' → logprob: -7.983695983886719
    9. '%n' → logprob: -8.608695983886719
    10. '<|end|>' → logprob: -8.733695983886719

Token 124: ' if' (ID: 538)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.43665164709091187
    2. ' %' → logprob: -1.4366517066955566
    3. ' acc' → logprob: -2.9366517066955566
    4. '<|end|>' → logprob: -3.4366517066955566
    5. ')' → logprob: -4.436651706695557
    6. '   ' → logprob: -5.186651706695557
    7. 'acc' → logprob: -5.436651706695557
    8. '
' → logprob: -5.436651706695557
    9. ' %=' → logprob: -6.811651706695557
    10. ')%' → logprob: -7.061651706695557

Token 125: ' idx' (ID: 14016)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.10042329877614975
    2. 'acc' → logprob: -2.3504233360290527
    3. '(acc' → logprob: -8.600422859191895
    4. '	acc' → logprob: -11.600422859191895
    5. ' (' → logprob: -11.725422859191895
    6. ' ' → logprob: -12.475422859191895
    7. ' ' → logprob: -12.975422859191895
    8. 'n' → logprob: -13.350422859191895
    9. '(' → logprob: -13.600422859191895
    10. ' not' → logprob: -13.600422859191895

Token 126: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3489881455898285
    2. ' >=' → logprob: -1.4739881753921509
    3. '==' → logprob: -3.2239880561828613
    4. '>=' → logprob: -3.9739880561828613
    5. '%' → logprob: -6.598988056182861
    6. ' !=' → logprob: -7.098988056182861
    7. ' ' → logprob: -7.098988056182861
    8. ' <' → logprob: -7.223988056182861
    9. ' <=' → logprob: -7.223988056182861
    10. '<' → logprob: -7.473988056182861

Token 127: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08122909069061279
    2. '2' → logprob: -2.7062292098999023
    3. 'd' → logprob: -5.831229209899902
    4. ' ' → logprob: -6.331229209899902
    5. 'h' → logprob: -6.456229209899902
    6. '10' → logprob: -6.706229209899902
    7. '0' → logprob: -6.706229209899902
    8. 'n' → logprob: -6.956229209899902
    9. '3' → logprob: -7.331229209899902
    10. '100' → logprob: -8.206229209899902

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05309684947133064
    2. '-' → logprob: -3.6780967712402344
    3. ':
' → logprob: -3.6780967712402344
    4. ' :' → logprob: -7.928096771240234
    5. ' -' → logprob: -8.178096771240234
    6. '+' → logprob: -8.428096771240234
    7. ' and' → logprob: -9.428096771240234
    8. 'and' → logprob: -9.553096771240234
    9. '   ' → logprob: -10.303096771240234
    10. ' :
' → logprob: -10.678096771240234

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8610258102416992
    2. ':' → logprob: -1.2360258102416992
    3. '   ' → logprob: -1.8610258102416992
    4. ' acc' → logprob: -3.236025810241699
    5. ':
' → logprob: -3.236025810241699
    6. ' :
' → logprob: -3.861025810241699
    7. ' :' → logprob: -3.986025810241699
    8. '```' → logprob: -6.361025810241699
    9. '    ' → logprob: -6.486025810241699
    10. '+' → logprob: -6.611025810241699

Token 130: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.4989630877971649
    2. 'acc' (adapté à ' acc') → logprob: -1.4989631175994873
    3. '   ' → logprob: -1.8739631175994873
    4. '       ' → logprob: -4.248962879180908
    5. ' sm' → logprob: -7.373962879180908
    6. '	acc' → logprob: -7.498962879180908
    7. 'sm' → logprob: -8.498963356018066
    8. ' ' → logprob: -9.498963356018066
    9. 'ac' → logprob: -9.998963356018066
    10. '(acc' → logprob: -10.873963356018066

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2833540439605713
    2. ' =' → logprob: -2.2833540439605713
    3. '-=' → logprob: -2.4083540439605713
    4. ' -=' → logprob: -2.9083540439605713
    5. '   ' → logprob: -9.158353805541992
    6. '+=' → logprob: -9.658353805541992
    7. '-' → logprob: -10.158353805541992
    8. '%=' → logprob: -10.533353805541992
    9. ' +=' → logprob: -11.033353805541992
    10. ' ' → logprob: -11.408353805541992

Token 132: ' acc' (ID: 1259)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.12362430989742279
    2. ' (' → logprob: -2.248624324798584
    3. '(' → logprob: -4.873624324798584
    4. 'acc' → logprob: -5.998624324798584
    5. ' acc' → logprob: -7.998624324798584
    6. '(lst' → logprob: -8.873623847961426
    7. '(ans' → logprob: -10.373623847961426
    8. '(ac' → logprob: -10.748623847961426
    9. '(arr' → logprob: -10.873623847961426
    10. '(int' → logprob: -11.123623847961426

Token 133: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35043489933013916
    2. ' -' → logprob: -1.2254348993301392
    3. '%' → logprob: -6.35043478012085
    4. '-l' → logprob: -9.600435256958008
    5. ' %' → logprob: -9.975435256958008
    6. ' ' → logprob: -10.100435256958008
    7. '+' → logprob: -10.225435256958008
    8. '-(' → logprob: -11.725435256958008
    9. '*' → logprob: -11.975435256958008
    10. ' ' → logprob: -12.475435256958008

Token 134: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.016088098287582397
    2. ' lst' → logprob: -4.141088008880615
    3. '1' → logprob: -10.891088485717773
    4. '   ' → logprob: -11.266088485717773
    5. '(lst' → logprob: -11.391088485717773
    6. 'acc' → logprob: -12.391088485717773
    7. 'sm' → logprob: -13.266088485717773
    8. ' ' → logprob: -13.641088485717773
    9. '(' → logprob: -14.141088485717773
    10. 'l' → logprob: -14.141088485717773

Token 135: '[-' (ID: 17503)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.3872682452201843
    2. '[-' → logprob: -1.137268304824829
    3. '[' → logprob: -8.01226806640625
    4. '[len' → logprob: -10.38726806640625
    5. '[max' → logprob: -11.38726806640625
    6. 'idx' → logprob: -11.76226806640625
    7. '[
' → logprob: -12.13726806640625
    8. '[:-' → logprob: -13.01226806640625
    9. '[offset' → logprob: -14.13726806640625
    10. '[::-' → logprob: -14.26226806640625

Token 136: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026743881404399872
    2. 'idx' → logprob: -3.6517438888549805
    3. '1' → logprob: -9.02674388885498
    4. '(idx' → logprob: -9.15174388885498
    5. ' d' → logprob: -9.40174388885498
    6. ' idx' → logprob: -9.52674388885498
    7. '(d' → logprob: -10.40174388885498
    8. '```' → logprob: -11.52674388885498
    9. '(' → logprob: -12.15174388885498
    10. '   ' → logprob: -12.27674388885498

Token 137: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13441161811351776
    2. '])' → logprob: -2.134411573410034
    3. '1' → logprob: -5.259411811828613
    4. ']
' → logprob: -6.259411811828613
    5. '])
' → logprob: -8.884411811828613
    6. 'd' → logprob: -9.134411811828613
    7. '-' → logprob: -9.634411811828613
    8. ']

' → logprob: -12.259411811828613
    9. '2' → logprob: -12.634411811828613
    10. 'else' → logprob: -13.134411811828613

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002406090497970581
    2. '2' → logprob: -8.375240325927734
    3. ' ' → logprob: -11.875240325927734
    4. ']' → logprob: -13.500240325927734
    5. '3' → logprob: -15.250240325927734
    6. '   ' → logprob: -15.375240325927734
    7. '-' → logprob: -15.375240325927734
    8. '```' → logprob: -15.375240325927734
    9. '}' → logprob: -15.562740325927734
    10. '0' → logprob: -16.125240325927734

Token 139: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028937978204339743
    2. ']
' → logprob: -6.752893924713135
    3. ')' → logprob: -6.877893924713135
    4. ']%' → logprob: -8.377893447875977
    5. ' ]' → logprob: -8.627893447875977
    6. '<|end|>' → logprob: -9.127893447875977
    7. '   ' → logprob: -9.627893447875977
    8. '])' → logprob: -10.377893447875977
    9. '+' → logprob: -10.752893447875977
    10. ')]' → logprob: -11.752893447875977

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02188730612397194
    2. '<|end|>' → logprob: -4.021887302398682
    3. ')' → logprob: -6.396887302398682
    4. ' acc' → logprob: -7.771887302398682
    5. ' ' → logprob: -7.896887302398682
    6. 'acc' → logprob: -8.14688777923584
    7. '  ' → logprob: -8.64688777923584
    8. '<|end|>' → logprob: -8.77188777923584
    9. '```' → logprob: -9.14688777923584
    10. '%' → logprob: -9.52188777923584

Token 141: ' acc' (ID: 1259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44876253604888916
    2. '<|end|>' → logprob: -1.6987625360488892
    3. '%' → logprob: -2.5737624168395996
    4. ' ' → logprob: -3.0737624168395996
    5. '\n' → logprob: -3.9487624168395996
    6. ')' → logprob: -4.4487624168396
    7. ' 
' → logprob: -4.8237624168396
    8. '
' → logprob: -5.3237624168396
    9. ' acc' → logprob: -6.0737624168396
    10. ' %' → logprob: -6.0737624168396

Token 142: ' %=' (ID: 117035)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16587835550308228
    2. ' =' → logprob: -2.1658782958984375
    3. ' %=' → logprob: -3.9158782958984375
    4. '%=' → logprob: -4.0408782958984375
    5. '%' → logprob: -7.2908782958984375
    6. ' %' → logprob: -12.040878295898438
    7. ' ' → logprob: -12.665878295898438
    8. ')' → logprob: -12.915878295898438
    9. '(' → logprob: -14.165878295898438
    10. ' +=' → logprob: -14.665878295898438

Token 143: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -6.704273118884885e-07
    2. ' P' → logprob: -14.500000953674316
    3. '10' → logprob: -16.5
    4. '```' → logprob: -20.75
    5. '\P' → logprob: -22.0
    6. ' ' → logprob: -22.0
    7. '100' → logprob: -22.125
    8. '(P' → logprob: -22.25
    9. '   ' → logprob: -22.375
    10. 'p' → logprob: -22.75

Token 144: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02956394851207733
    2. ')' → logprob: -4.404563903808594
    3. '#' → logprob: -5.029563903808594
    4. '<|end|>' → logprob: -5.404563903808594
    5. 'for' → logprob: -5.654563903808594
    6. '```' → logprob: -7.654563903808594
    7. ']' → logprob: -7.904563903808594
    8. '   ' → logprob: -7.904563903808594
    9. 'sm' → logprob: -8.029563903808594
    10. 'n' → logprob: -8.279563903808594

Token 145: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' év' (ID: 23692)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3038577437400818
    2. 'contin' → logprob: -1.8038578033447266
    3. ' continue' → logprob: -2.4288578033447266
    4. 'acc' → logprob: -5.178857803344727
    5. 'continued' → logprob: -7.428857803344727
    6. 'continu' → logprob: -7.928857803344727
    7. '_continue' → logprob: -8.053857803344727
    8. 'n' → logprob: -8.303857803344727
    9. ' continues' → logprob: -8.428857803344727
    10. ' acc' → logprob: -8.553857803344727

Token 147: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.03690345212817192
    2. 'iter' → logprob: -3.5369033813476562
    3. 'vite' → logprob: -6.036903381347656
    4. 'it' → logprob: -6.411903381347656
    5. 'ide' → logprob: -6.536903381347656
    6. 'itere' → logprob: -7.411903381347656
    7. 'l' → logprob: -7.786903381347656
    8. 'itera' → logprob: -8.661903381347656
    9. 't' → logprob: -9.411903381347656
    10. 'f' → logprob: -10.286903381347656

Token 148: ' les' (ID: 1341)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.2533218562602997
    2. ' overflow' → logprob: -3.253321886062622
    3. 'integer' → logprob: -3.628321886062622
    4. 'l' → logprob: -3.753321886062622
    5. 'negative' → logprob: -3.753321886062622
    6. 'de' → logprob: -3.878321886062622
    7. 'acc' → logprob: -4.003321647644043
    8. 'les' → logprob: -4.253321647644043
    9. 'd' → logprob: -4.253321647644043
    10. 'Overflow' → logprob: -4.503321647644043

Token 149: ' gros' (ID: 28636)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.5347567200660706
    2. 'val' → logprob: -1.7847566604614258
    3. 'negative' → logprob: -2.909756660461426
    4. 'over' → logprob: -3.034756660461426
    5. 'dé' → logprob: -3.034756660461426
    6. 'd' → logprob: -3.284756660461426
    7. 'under' → logprob: -3.909756660461426
    8. 'ret' → logprob: -4.784756660461426
    9. 'sur' → logprob: -5.409756660461426
    10. 'acc' → logprob: -5.659756660461426

Token 150: ' chiffres' (ID: 105565)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.19422447681427
    2. 'numbers' → logprob: -1.19422447681427
    3. ' nombres' → logprob: -1.44422447681427
    4. 'n' → logprob: -2.6942243576049805
    5. 'acc' → logprob: -3.5692243576049805
    6. ' ent' → logprob: -3.6942243576049805
    7. 'inte' → logprob: -4.0692243576049805
    8. ' numbers' → logprob: -4.8192243576049805
    9. 'nombre' → logprob: -5.5692243576049805
    10. '<|end|>' → logprob: -6.1942243576049805

Token 151: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5171451568603516
    2. '<|end|>' → logprob: -1.0171451568603516
    3. '#' → logprob: -4.767145156860352
    4. ']' → logprob: -5.017145156860352
    5. '```' → logprob: -5.142145156860352
    6. ',' → logprob: -5.517145156860352
    7. '   ' → logprob: -5.767145156860352
    8. 'print' → logprob: -5.892145156860352
    9. 'lst' → logprob: -6.517145156860352
    10. '[' → logprob: -6.767145156860352

Token 152: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9005850553512573
    2. '<|end|>' → logprob: -1.0255850553512573
    3. 'print' → logprob: -1.9005850553512573
    4. '   ' → logprob: -3.275585174560547
    5. '#' → logprob: -3.775585174560547
    6. '```' → logprob: -5.275585174560547
    7. 'n' → logprob: -5.900585174560547
    8. ' ' → logprob: -5.900585174560547
    9. ']' → logprob: -6.150585174560547
    10. 'for' → logprob: -6.150585174560547

Token 153: '(acc' (ID: 82668)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.11083552241325378
    2. '(lst' → logprob: -3.110835552215576
    3. '(sm' → logprob: -3.235835552215576
    4. '(' → logprob: -4.985835552215576
    5. '(acc' → logprob: -4.985835552215576
    6. '(len' → logprob: -5.110835552215576
    7. '(*' → logprob: -7.110835552215576
    8. '(ls' → logprob: -8.610835075378418
    9. '((' → logprob: -9.110835075378418
    10. 'lst' → logprob: -10.110835075378418

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.0
    5. ')
' → logprob: -16.5
    6. ')}' → logprob: -18.25
    7. '')' → logprob: -18.875
    8. '`)' → logprob: -19.375
    9. '+' → logprob: -19.375
    10. ')#' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 30.26%
Précision adaptée (1ère position): 32.24%
Précision (top 10): 68.42%
================================================================================
