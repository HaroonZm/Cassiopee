================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
d = input().split()
for i in range(len(d)):
    d[i] = int(d[i])
a = 0
for i in range(N):
    for j in range(i+1, N):
        a = a + d[i] * d[j]
print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.248620629310608
    2. 'e' → logprob: -1.623620629310608
    3. 'i' → logprob: -1.748620629310608
    4. '=' → logprob: -1.998620629310608
    5. '[' → logprob: -2.6236205101013184
    6. '[i' → logprob: -3.1236205101013184
    7. '.' → logprob: -3.8736205101013184
    8. 'ict' → logprob: -4.123620510101318
    9. 'a' → logprob: -4.248620510101318
    10. 'ictionary' → logprob: -4.748620510101318

Token 7: ' input' (ID: 3422)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.31649231910705566
    2. ' {}' → logprob: -1.3164923191070557
    3. 'dict' → logprob: -6.066492080688477
    4. ' dict' → logprob: -7.941492080688477
    5. ' []' → logprob: -8.941492080688477
    6. '{' → logprob: -9.066492080688477
    7. ' ' → logprob: -9.191492080688477
    8. '[]' → logprob: -9.816492080688477
    9. ' defaultdict' → logprob: -10.441492080688477
    10. '[' → logprob: -10.566492080688477

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005769872572273016
    2. '('' → logprob: -5.380769729614258
    3. ''' → logprob: -7.255769729614258
    4. '("("' → logprob: -8.505769729614258
    5. '(
' → logprob: -9.255769729614258
    6. '"' → logprob: -10.005769729614258
    7. ')' → logprob: -11.005769729614258
    8. ' (' → logprob: -11.255769729614258
    9. '`' → logprob: -11.505769729614258
    10. '[' → logprob: -11.505769729614258

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011078352108597755
    2. 'strip' → logprob: -4.511078357696533
    3. 'rstrip' → logprob: -11.136077880859375
    4. 'spl' → logprob: -12.386077880859375
    5. 'replace' → logprob: -12.386077880859375
    6. 's' → logprob: -12.761077880859375
    7. ' split' → logprob: -12.761077880859375
    8. 'sp' → logprob: -14.011077880859375
    9. 'rs' → logprob: -14.761077880859375
    10. 'isdigit' → logprob: -15.261077880859375

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02525017224252224
    2. '('' → logprob: -4.27524995803833
    3. '("("' → logprob: -4.77524995803833
    4. '()' → logprob: -6.65024995803833
    5. '`' → logprob: -8.150250434875488
    6. '(`' → logprob: -8.150250434875488
    7. '((' → logprob: -8.650250434875488
    8. ' (' → logprob: -9.275250434875488
    9. '```' → logprob: -9.275250434875488
    10. '(

' → logprob: -9.525250434875488

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3346213400363922
    2. 'a' → logprob: -2.4596214294433594
    3. 'c' → logprob: -2.9596214294433594
    4. 'count' → logprob: -3.5846214294433594
    5. 'd' → logprob: -3.8346214294433594
    6. 's' → logprob: -3.8346214294433594
    7. '[' → logprob: -4.459621429443359
    8. 'A' → logprob: -4.584621429443359
    9. 'result' → logprob: -4.584621429443359
    10. 'arr' → logprob: -4.709621429443359

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23447877168655396
    2. ' ' → logprob: -1.6094787120819092
    3. '_' → logprob: -5.359478950500488
    4. ' _' → logprob: -6.234478950500488
    5. 'i' → logprob: -7.234478950500488
    6. '  ' → logprob: -7.734478950500488
    7. ' d' → logprob: -7.984478950500488
    8. ' ‌' → logprob: -8.234478950500488
    9. ' x' → logprob: -8.484478950500488
    10. ' ' → logprob: -8.984478950500488

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48219695687294006
    2. ' in' → logprob: -0.9821969270706177
    3. ' ' → logprob: -5.357196807861328
    4. 'n' → logprob: -6.357196807861328
    5. '_' → logprob: -7.232196807861328
    6. '  ' → logprob: -7.732196807861328
    7. 'space' → logprob: -9.482196807861328
    8. ' n' → logprob: -9.607196807861328
    9. 'range' → logprob: -9.732196807861328
    10. '	in' → logprob: -10.232196807861328

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3147208094596863
    2. 'range' → logprob: -1.314720869064331
    3. ' d' → logprob: -6.939720630645752
    4. 'd' → logprob: -7.689720630645752
    5. ' ' → logprob: -10.81472110748291
    6. '	range' → logprob: -12.81472110748291
    7. ' xrange' → logprob: -13.06472110748291
    8. '(range' → logprob: -13.06472110748291
    9. ')' → logprob: -13.93972110748291
    10. '_range' → logprob: -14.43972110748291

Token 15: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16216790676116943
    2. '(N' → logprob: -1.9121679067611694
    3. '(len' → logprob: -6.412168025970459
    4. '(n' → logprob: -9.1621675491333
    5. '(i' → logprob: -9.6621675491333
    6. ' (' → logprob: -9.7871675491333
    7. '(range' → logprob: -10.2871675491333
    8. '((' → logprob: -12.0371675491333
    9. '```' → logprob: -12.2871675491333
    10. 'N' → logprob: -12.5371675491333

Token 16: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01106998510658741
    2. '(' → logprob: -4.5110697746276855
    3. '(N' → logprob: -11.511070251464844
    4. 'd' → logprob: -12.386070251464844
    5. '(n' → logprob: -12.511070251464844
    6. '(s' → logprob: -13.011070251464844
    7. ' (' → logprob: -14.636070251464844
    8. '(
' → logprob: -14.886070251464844
    9. '(D' → logprob: -15.136070251464844
    10. ')' → logprob: -15.761070251464844

Token 17: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1429198831319809
    2. '):' → logprob: -3.0179197788238525
    3. '))' → logprob: -3.2679197788238525
    4. '[' → logprob: -3.2679197788238525
    5. '[i' → logprob: -5.517920017242432
    6. ')' → logprob: -6.267920017242432
    7. '[d' → logprob: -6.517920017242432
    8. ')):
' → logprob: -8.642919540405273
    9. ')d' → logprob: -8.892919540405273
    10. 'd' → logprob: -9.767919540405273

Token 18: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.45905572175979614
    2. 'd' → logprob: -1.4590556621551514
    3. ' ' → logprob: -2.5840556621551514
    4. '   ' → logprob: -3.3340556621551514
    5. ' if' → logprob: -4.3340559005737305
    6. '    ' → logprob: -4.8340559005737305
    7. 'if' → logprob: -7.3340559005737305
    8. '_' → logprob: -7.5840559005737305
    9. '[' → logprob: -7.5840559005737305
    10. ',' → logprob: -8.58405590057373

Token 19: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.6389055252075195
    2. ' d' → logprob: -0.8889055252075195
    3. ' if' → logprob: -3.1389055252075195
    4. 'if' → logprob: -4.2639055252075195
    5. '   ' → logprob: -5.8889055252075195
    6. 'print' → logprob: -8.51390552520752
    7. '    ' → logprob: -8.76390552520752
    8. ' for' → logprob: -9.01390552520752
    9. ' print' → logprob: -9.13890552520752
    10. 'for' → logprob: -9.26390552520752

Token 20: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6338868141174316
    2. '[i' → logprob: -0.7588868141174316
    3. '[d' → logprob: -6.883886814117432
    4. '\[' → logprob: -9.633886337280273
    5. '[...]' → logprob: -9.633886337280273
    6. '```' → logprob: -10.383886337280273
    7. '[]' → logprob: -10.883886337280273
    8. '.append' → logprob: -11.258886337280273
    9. '[:]' → logprob: -11.383886337280273
    10. '[int' → logprob: -11.508886337280273

Token 21: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04214273393154144
    2. ']' → logprob: -3.542142629623413
    3. '=' → logprob: -5.792142868041992
    4. ' )' → logprob: -5.917142868041992
    5. '[' → logprob: -6.542142868041992
    6. ')=' → logprob: -6.667142868041992
    7. ' =' → logprob: -7.042142868041992
    8. ' +=' → logprob: -8.167142868041992
    9. ']=' → logprob: -8.292142868041992
    10. ')]' → logprob: -8.292142868041992

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014460684033110738
    2. '=int' → logprob: -6.75144624710083
    3. ' =' → logprob: -8.251445770263672
    4. '+=' → logprob: -11.626445770263672
    5. '*=' → logprob: -14.251445770263672
    6. '=
' → logprob: -14.251445770263672
    7. 'int' → logprob: -14.251445770263672
    8. '=float' → logprob: -14.626445770263672
    9. '+' → logprob: -15.001445770263672
    10. '```' → logprob: -15.251445770263672

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31327685713768005
    2. ' int' → logprob: -1.3132768869400024
    3. 'float' → logprob: -12.938277244567871
    4. ' float' → logprob: -13.063277244567871
    5. '(int' → logprob: -13.063277244567871
    6. ' ' → logprob: -13.438277244567871
    7. '[int' → logprob: -13.813277244567871
    8. '=int' → logprob: -13.938277244567871
    9. '   ' → logprob: -14.188277244567871
    10. 'd' → logprob: -14.313277244567871

Token 24: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20144130289554596
    2. '(d' → logprob: -1.7014412879943848
    3. '(
' → logprob: -11.451441764831543
    4. '(

' → logprob: -12.451441764831543
    5. ' (' → logprob: -12.701441764831543
    6. '('' → logprob: -12.701441764831543
    7. '((' → logprob: -13.451441764831543
    8. '(`' → logprob: -13.701441764831543
    9. '("("' → logprob: -14.076441764831543
    10. 'd' → logprob: -14.451441764831543

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014699879102408886
    2. '[' → logprob: -6.62647008895874
    3. ' [' → logprob: -10.001469612121582
    4. ']' → logprob: -10.251469612121582
    5. ')' → logprob: -10.501469612121582
    6. '[
' → logprob: -10.626469612121582
    7. '[I' → logprob: -12.626469612121582
    8. '[d' → logprob: -12.876469612121582
    9. '])' → logprob: -13.751469612121582
    10. '\[' → logprob: -14.376469612121582

Token 26: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1977059692144394
    2. '])' → logprob: -1.9477059841156006
    3. '))' → logprob: -3.3227059841156006
    4. ')])' → logprob: -7.5727057456970215
    5. ')]' → logprob: -9.32270622253418
    6. ']' → logprob: -10.07270622253418
    7. '[i' → logprob: -10.69770622253418
    8. ']))' → logprob: -11.07270622253418
    9. ' )' → logprob: -11.69770622253418
    10. ''])' → logprob: -11.69770622253418

Token 27: 'a' (ID: 64)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0278913974761963
    2. 'for' → logprob: -1.0278913974761963
    3. ' for' → logprob: -2.9028913974761963
    4. '[' → logprob: -2.9028913974761963
    5. ' ' → logprob: -3.2778913974761963
    6. '<|end|>' → logprob: -3.4028913974761963
    7. ' 
' → logprob: -3.7778913974761963
    8. ' if' → logprob: -4.527891159057617
    9. 'if' → logprob: -4.652891159057617
    10. '
' → logprob: -5.027891159057617

Token 28: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09113039821386337
    2. '.' → logprob: -3.341130495071411
    3. '[i' → logprob: -4.091130256652832
    4. '[:]' → logprob: -4.466130256652832
    5. ' =' → logprob: -5.716130256652832
    6. '[n' → logprob: -6.091130256652832
    7. 'dd' → logprob: -6.091130256652832
    8. '.append' → logprob: -6.466130256652832
    9. 'rray' → logprob: -6.466130256652832
    10. 'pp' → logprob: -6.466130256652832

Token 29: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2291814088821411
    2. ' []' → logprob: -1.8541814088821411
    3. 'sorted' → logprob: -4.229181289672852
    4. ' [' → logprob: -4.729181289672852
    5. '[' → logprob: -4.854181289672852
    6. ' sorted' → logprob: -5.479181289672852
    7. 'd' → logprob: -5.479181289672852
    8. ' d' → logprob: -5.729181289672852
    9. '0' → logprob: -6.479181289672852
    10. '[max' → logprob: -7.104181289672852

Token 30: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19348260760307312
    2. 'sorted' → logprob: -2.8184826374053955
    3. 'd' → logprob: -3.3184826374053955
    4. '[' → logprob: -3.3184826374053955
    5. 'sum' → logprob: -4.568482398986816
    6. 'max' → logprob: -4.818482398986816
    7. '[max' → logprob: -4.818482398986816
    8. '0' → logprob: -5.193482398986816
    9. '[d' → logprob: -5.693482398986816
    10. 'list' → logprob: -6.443482398986816

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8500083684921265
    2. 'for' → logprob: -1.3500083684921265
    3. '<|end|>' → logprob: -1.3500083684921265
    4. ' for' → logprob: -3.975008487701416
    5. '+' → logprob: -4.225008487701416
    6. ' ' → logprob: -5.350008487701416
    7. '\n' → logprob: -5.475008487701416
    8. ' 
' → logprob: -6.225008487701416
    9. '<|end|>' → logprob: -6.225008487701416
    10. '' → logprob: -6.600008487701416

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029825717210769653
    2. '
' → logprob: -6.6279826164245605
    3. ' for' → logprob: -6.7529826164245605
    4. 'f' → logprob: -8.377982139587402
    5. 'b' → logprob: -9.127982139587402
    6. '<|end|>' → logprob: -9.877982139587402
    7. 'n' → logprob: -10.877982139587402
    8. 'i' → logprob: -11.502982139587402
    9. '0' → logprob: -11.502982139587402
    10. ' ' → logprob: -11.627982139587402

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015262988395988941
    2. ' d' → logprob: -4.765263080596924
    3. ' ' → logprob: -5.765263080596924
    4. 'i' → logprob: -5.890263080596924
    5. 'd' → logprob: -8.265262603759766
    6. ' _' → logprob: -8.640262603759766
    7. '_' → logprob: -9.265262603759766
    8. ' x' → logprob: -9.640262603759766
    9. ' ' → logprob: -10.265262603759766
    10. ' range' → logprob: -11.015262603759766

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10165887326002121
    2. 'in' → logprob: -2.351658821105957
    3. ' ' → logprob: -6.851658821105957
    4. '+' → logprob: -8.101658821105957
    5. '  ' → logprob: -10.351658821105957
    6. '	in' → logprob: -10.976658821105957
    7. 'range' → logprob: -12.351658821105957
    8. '<|end|>' → logprob: -12.351658821105957
    9. '(' → logprob: -12.476658821105957
    10. ')' → logprob: -12.976658821105957

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02462635561823845
    2. ' range' → logprob: -3.8996262550354004
    3. 'd' → logprob: -5.5246262550354
    4. ' d' → logprob: -9.524626731872559
    5. '(range' → logprob: -12.524626731872559
    6. ' ' → logprob: -12.774626731872559
    7. 'a' → logprob: -13.274626731872559
    8. '	range' → logprob: -13.524626731872559
    9. ')' → logprob: -13.649626731872559
    10. 'r' → logprob: -13.774626731872559

Token 36: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14554955065250397
    2. '(N' → logprob: -2.6455495357513428
    3. '(len' → logprob: -2.7705495357513428
    4. '(n' → logprob: -7.020549774169922
    5. ' (' → logprob: -7.145549774169922
    6. '(a' → logprob: -9.520549774169922
    7. '(s' → logprob: -10.770549774169922
    8. '(
' → logprob: -10.770549774169922
    9. '(length' → logprob: -10.770549774169922
    10. '()' → logprob: -12.270549774169922

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03963825851678848
    2. '-' → logprob: -3.2896382808685303
    3. ')' → logprob: -7.164638042449951
    4. '):
' → logprob: -7.914638042449951
    5. ' ):' → logprob: -8.53963851928711
    6. ' -' → logprob: -8.66463851928711
    7. ':' → logprob: -9.78963851928711
    8. '+' → logprob: -11.28963851928711
    9. ' ' → logprob: -12.66463851928711
    10. '>' → logprob: -12.78963851928711

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8038582801818848
    2. '    ' → logprob: -2.0538582801818848
    3. ' d' → logprob: -2.0538582801818848
    4. '   ' → logprob: -2.3038582801818848
    5. ' a' → logprob: -2.4288582801818848
    6. 'a' → logprob: -3.1788582801818848
    7. ' for' → logprob: -3.9288582801818848
    8. 'd' → logprob: -4.053858280181885
    9. 'for' → logprob: -5.303858280181885
    10. ''' → logprob: -5.928858280181885

Token 39: ' for' (ID: 395)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.46989837288856506
    2. ' for' → logprob: -1.7198983430862427
    3. '   ' → logprob: -2.4698984622955322
    4. 'a' → logprob: -2.9698984622955322
    5. ' d' → logprob: -3.8448984622955322
    6. 'for' (adapté à ' for') → logprob: -4.094898223876953
    7. 'd' → logprob: -4.719898223876953
    8. ' ' → logprob: -5.219898223876953
    9. ' if' → logprob: -5.469898223876953
    10. '    ' → logprob: -6.469898223876953

Token 40: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24515821039676666
    2. ' j' → logprob: -1.6201581954956055
    3. 'range' → logprob: -4.2451581954956055
    4. 'j' → logprob: -6.1201581954956055
    5. ' ' → logprob: -6.3701581954956055
    6. '<|end|>' → logprob: -7.2451581954956055
    7. '(range' → logprob: -8.870158195495605
    8. ')' → logprob: -9.620158195495605
    9. ' N' → logprob: -9.745158195495605
    10. ' xrange' → logprob: -9.870158195495605

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027279023081064224
    2. 'range' → logprob: -4.527278900146484
    3. 'in' → logprob: -4.652278900146484
    4. ' range' → logprob: -5.152278900146484
    5. ' ' → logprob: -7.402278900146484
    6. '(range' → logprob: -9.652278900146484
    7. ' i' → logprob: -10.152278900146484
    8. '	range' → logprob: -11.777278900146484
    9. '(i' → logprob: -11.902278900146484
    10. '+' → logprob: -11.902278900146484

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6932162642478943
    2. 'range' → logprob: -0.6932162642478943
    3. '(range' → logprob: -9.693216323852539
    4. 'i' → logprob: -13.193216323852539
    5. ' i' → logprob: -13.193216323852539
    6. '	range' → logprob: -13.693216323852539
    7. ' ' → logprob: -14.443216323852539
    8. '(i' → logprob: -15.068216323852539
    9. '   ' → logprob: -15.193216323852539
    10. '  ' → logprob: -15.193216323852539

Token 43: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3727784752845764
    2. '(N' → logprob: -1.3727784156799316
    3. '(' → logprob: -2.8727784156799316
    4. '(range' → logprob: -7.122778415679932
    5. '(a' → logprob: -8.37277889251709
    6. '(len' → logprob: -9.37277889251709
    7. '(n' → logprob: -10.62277889251709
    8. ' (' → logprob: -10.62277889251709
    9. ' range' → logprob: -10.74777889251709
    10. '(I' → logprob: -11.24777889251709

Token 44: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011872532777488232
    2. ' +' → logprob: -6.751187324523926
    3. ',' → logprob: -11.626187324523926
    4. '+)' → logprob: -13.126187324523926
    5. '+,' → logprob: -13.251187324523926
    6. ' ,' → logprob: -14.251187324523926
    7. ',N' → logprob: -14.251187324523926
    8. '1' → logprob: -14.251187324523926
    9. 'N' → logprob: -14.501187324523926
    10. ')' → logprob: -14.501187324523926

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001549089647596702
    2. ' ' → logprob: -9.250154495239258
    3. 'N' → logprob: -9.875154495239258
    4. '2' → logprob: -12.375154495239258
    5. ' N' → logprob: -13.875154495239258
    6. '0' → logprob: -14.250154495239258
    7. 'len' → logprob: -14.750154495239258
    8. '   ' → logprob: -14.875154495239258
    9. 'n' → logprob: -16.062654495239258
    10. '```' → logprob: -16.187654495239258

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006656283978372812
    2. ',N' → logprob: -5.256656169891357
    3. ' ,' → logprob: -6.756656169891357
    4. '(N' → logprob: -9.006656646728516
    5. 'N' → logprob: -9.756656646728516
    6. ',len' → logprob: -10.631656646728516
    7. '),' → logprob: -11.131656646728516
    8. '，' → logprob: -11.881656646728516
    9. '(' → logprob: -12.006656646728516
    10. ',n' → logprob: -12.006656646728516

Token 47: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005614925175905228
    2. ' N' → logprob: -7.500561714172363
    3. '   ' → logprob: -12.375561714172363
    4. 'len' → logprob: -13.250561714172363
    5. ' ' → logprob: -13.625561714172363
    6. '	N' → logprob: -14.875561714172363
    7. '  ' → logprob: -15.875561714172363
    8. '<N' → logprob: -15.875561714172363
    9. ')' → logprob: -16.250560760498047
    10. 'n' → logprob: -16.375560760498047

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019030878320336342
    2. '):
' → logprob: -8.875190734863281
    3. ',' → logprob: -11.000190734863281
    4. ':' → logprob: -11.250190734863281
    5. '+' → logprob: -11.500190734863281
    6. ' ):' → logprob: -13.000190734863281
    7. '():' → logprob: -13.125190734863281
    8. ')' → logprob: -13.250190734863281
    9. '):
' → logprob: -13.500190734863281
    10. '   ' → logprob: -13.625190734863281

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1694483906030655
    2. '   ' → logprob: -1.9194483757019043
    3. ' ' → logprob: -5.169448375701904
    4. '    ' → logprob: -6.544448375701904
    5. ' if' → logprob: -6.669448375701904
    6. '  ' → logprob: -8.669448852539062
    7. '<|end|>' → logprob: -8.669448852539062
    8. ' 
' → logprob: -9.419448852539062
    9. '     ' → logprob: -9.669448852539062
    10. '      ' → logprob: -9.794448852539062

Token 50: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08025558292865753
    2. 'if' → logprob: -2.5802555084228516
    3. ' ' → logprob: -7.330255508422852
    4. '           ' → logprob: -7.955255508422852
    5. '       ' → logprob: -8.580255508422852
    6. ' d' → logprob: -9.705255508422852
    7. 'd' → logprob: -10.080255508422852
    8. '   ' → logprob: -11.080255508422852
    9. ' 
' → logprob: -11.330255508422852
    10. '    ' → logprob: -12.205255508422852

Token 51: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8725740313529968
    2. ' +=' → logprob: -1.1225740909576416
    3. '+' → logprob: -1.3725740909576416
    4. ' +' → logprob: -6.4975738525390625
    5. '=' → logprob: -7.6225738525390625
    6. ' ' → logprob: -8.247573852539062
    7. '<' → logprob: -8.372573852539062
    8. '==' → logprob: -8.372573852539062
    9. '+=(' → logprob: -8.997573852539062
    10. '   ' → logprob: -9.747573852539062

Token 52: ' a' (ID: 261)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.038092851638794
    2. 'max' → logprob: -1.038092851638794
    3. 'a' → logprob: -2.038092851638794
    4. 'd' → logprob: -2.288092851638794
    5. ' d' → logprob: -3.163092851638794
    6. ' a' → logprob: -4.163092613220215
    7. 'abs' → logprob: -6.788092613220215
    8. ' abs' → logprob: -7.538092613220215
    9. '+' → logprob: -8.913092613220215
    10. ' ' → logprob: -9.663092613220215

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001960393972694874
    2. ' +' → logprob: -6.376960277557373
    3. '|' → logprob: -8.876960754394531
    4. 'max' → logprob: -9.876960754394531
    5. '-' → logprob: -11.001960754394531
    6. '^' → logprob: -11.001960754394531
    7. ' max' → logprob: -11.501960754394531
    8. '+a' → logprob: -12.251960754394531
    9. ' |' → logprob: -12.751960754394531
    10. '+b' → logprob: -13.001960754394531

Token 54: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24839293956756592
    2. ' d' → logprob: -1.623392939567566
    3. 'abs' → logprob: -4.2483930587768555
    4. ' abs' → logprob: -5.6233930587768555
    5. 'max' → logprob: -6.6233930587768555
    6. ' max' → logprob: -6.9983930587768555
    7. '1' → logprob: -7.1233930587768555
    8. '(d' → logprob: -7.4983930587768555
    9. ' ' → logprob: -7.7483930587768555
    10. ' (' → logprob: -8.248393058776855

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0709274634718895
    2. '[j' → logprob: -3.070927381515503
    3. '[' → logprob: -3.820927381515503
    4. '[a' → logprob: -10.070927619934082
    5. '[min' → logprob: -10.570927619934082
    6. '[k' → logprob: -10.945927619934082
    7. '```' → logprob: -11.445927619934082
    8. '[
' → logprob: -11.570927619934082
    9. '[x' → logprob: -11.945927619934082
    10. '\[' → logprob: -12.195927619934082

Token 56: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.024089206010103226
    2. '+' → logprob: -4.149089336395264
    3. ' *' → logprob: -5.274089336395264
    4. '*j' → logprob: -6.774089336395264
    5. '*d' → logprob: -7.024089336395264
    6. ' ' → logprob: -8.524088859558105
    7. ' +' → logprob: -8.899088859558105
    8. ')*' → logprob: -9.524088859558105
    9. '-' → logprob: -9.524088859558105
    10. '%' → logprob: -9.649088859558105

Token 57: ' *' (ID: 425)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09324362128973007
    2. '*' → logprob: -2.9682435989379883
    3. '[' → logprob: -4.218243598937988
    4. '+' → logprob: -4.718243598937988
    5. 'd' → logprob: -4.968243598937988
    6. '*d' → logprob: -6.468243598937988
    7. ' *' → logprob: -6.468243598937988
    8. '*j' → logprob: -6.468243598937988
    9. ' +' → logprob: -7.468243598937988
    10. '[d' → logprob: -7.468243598937988

Token 58: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11283359676599503
    2. ' d' → logprob: -2.2378334999084473
    3. ' ' → logprob: -11.612833976745605
    4. '  ' → logprob: -13.987833976745605
    5. '   ' → logprob: -14.487833976745605
    6. '	d' → logprob: -15.362833976745605
    7. ' ' → logprob: -15.362833976745605
    8. '    ' → logprob: -16.23783302307129
    9. '2' → logprob: -16.36283302307129
    10. '`' → logprob: -17.36283302307129

Token 59: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.263011578586884e-05
    2. '[' → logprob: -10.375042915344238
    3. 'j' → logprob: -12.500042915344238
    4. '```' → logprob: -12.500042915344238
    5. '[i' → logprob: -13.250042915344238
    6. '[js' → logprob: -14.750042915344238
    7. '\[' → logprob: -14.875042915344238
    8. ''[' → logprob: -15.500042915344238
    9. ' [' → logprob: -15.750042915344238
    10. '][' → logprob: -16.125041961669922

Token 60: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -12.000015258789062
    3. ' )' → logprob: -12.625015258789062
    4. '<|end|>' → logprob: -13.375015258789062
    5. '}' → logprob: -13.500015258789062
    6. ']' → logprob: -13.750015258789062
    7. '))' → logprob: -15.750015258789062
    8. '#' → logprob: -15.875015258789062
    9. '）' → logprob: -16.125015258789062
    10. ')}' → logprob: -16.125015258789062

Token 61: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010081578511744738
    2. '<|end|>' → logprob: -7.376008033752441
    3. ' print' → logprob: -9.001008033752441
    4. '
' → logprob: -9.251008033752441
    5. '#' → logprob: -10.126008033752441
    6. '\n' → logprob: -10.126008033752441
    7. ')' → logprob: -10.501008033752441
    8. '```' → logprob: -11.001008033752441
    9. '+' → logprob: -11.626008033752441
    10. '#print' → logprob: -11.876008033752441

Token 62: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017691299319267273
    2. '('' → logprob: -4.392691135406494
    3. '("("' → logprob: -5.392691135406494
    4. '(a' → logprob: -7.517691135406494
    5. '()' → logprob: -10.517691612243652
    6. '("' → logprob: -10.892691612243652
    7. '((' → logprob: -11.767691612243652
    8. ''' → logprob: -12.642691612243652
    9. ' (' → logprob: -12.892691612243652
    10. '(
' → logprob: -13.017691612243652

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -16.000001907348633
    5. '`)' → logprob: -17.375001907348633
    6. ')
' → logprob: -17.875001907348633
    7. '')' → logprob: -18.000001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '(' → logprob: -18.250001907348633
    10. '#' → logprob: -19.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 61
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 36.07%
Précision adaptée (1ère position): 37.70%
Précision (top 10): 80.33%
================================================================================
