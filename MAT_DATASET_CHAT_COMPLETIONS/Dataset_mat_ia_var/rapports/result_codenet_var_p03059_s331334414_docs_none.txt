================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, t = map(int, input().split())
print((t//a)*b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0188099704682827
    2. '+' → logprob: -4.268809795379639
    3. ' =' → logprob: -5.518809795379639
    4. ',' → logprob: -8.268810272216797
    5. ' ' → logprob: -9.393810272216797
    6. '+=' → logprob: -9.768810272216797
    7. '_' → logprob: -10.518810272216797
    8. ' +' → logprob: -10.518810272216797
    9. '[' → logprob: -10.518810272216797
    10. '```' → logprob: -10.643810272216797

Token 4: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3323875069618225
    2. ' =' → logprob: -1.8323874473571777
    3. ',' → logprob: -2.4573874473571777
    4. 'c' → logprob: -3.5823874473571777
    5. ' ' → logprob: -5.332387447357178
    6. ',c' → logprob: -6.707387447357178
    7. ')' → logprob: -6.832387447357178
    8. ' ,' → logprob: -7.332387447357178
    9. '_' → logprob: -7.832387447357178
    10. '.' → logprob: -8.332387924194336

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011460741050541401
    2. '+' → logprob: -4.761460781097412
    3. ' =' → logprob: -6.011460781097412
    4. ',' → logprob: -8.761460304260254
    5. '*' → logprob: -9.886460304260254
    6. ')' → logprob: -10.136460304260254
    7. '+=' → logprob: -10.386460304260254
    8. ' ' → logprob: -10.886460304260254
    9. ':' → logprob: -11.136460304260254
    10. '[' → logprob: -11.386460304260254

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48218393325805664
    2. ' ' → logprob: -0.9821839332580566
    3. '1' → logprob: -5.232183933258057
    4. 'a' → logprob: -7.482183933258057
    5. ' b' → logprob: -7.607183933258057
    6. '10' → logprob: -7.732183933258057
    7. ' a' → logprob: -8.232183456420898
    8. 'map' → logprob: -8.482183456420898
    9. 'b' → logprob: -8.982183456420898
    10. ' [' → logprob: -9.232183456420898

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19587735831737518
    2. '<|end|>' → logprob: -2.0708773136138916
    3. '(lambda' → logprob: -3.5708773136138916
    4. '```' → logprob: -4.070877552032471
    5. '<|end|>' → logprob: -6.320877552032471
    6. '(int' → logprob: -7.195877552032471
    7. '(user' → logprob: -7.320877552032471
    8. ')' → logprob: -7.570877552032471
    9. 'user' → logprob: -7.945877552032471
    10. '(token' → logprob: -8.195877075195312

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25002726912498474
    2. ')' → logprob: -1.6250272989273071
    3. '(' → logprob: -3.8750271797180176
    4. 'input' → logprob: -6.875027179718018
    5. '<|end|>' → logprob: -7.125027179718018
    6. '(user' → logprob: -7.250027179718018
    7. ')(' → logprob: -8.000027656555176
    8. '(raw' → logprob: -9.250027656555176
    9. ',input' → logprob: -9.875027656555176
    10. ',' → logprob: -10.125027656555176

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008655226789414883
    2. ' input' → logprob: -4.758655071258545
    3. '(input' → logprob: -10.133655548095703
    4. ')' → logprob: -14.508655548095703
    5. ',input' → logprob: -16.008655548095703
    6. ' ' → logprob: -16.383655548095703
    7. '=input' → logprob: -16.508655548095703
    8. '	input' → logprob: -16.633655548095703
    9. '```' → logprob: -17.133655548095703
    10. '_input' → logprob: -17.508655548095703

Token 10: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5755401849746704
    2. '(' → logprob: -1.5755401849746704
    3. '())' → logprob: -1.8255401849746704
    4. '()' → logprob: -2.950540065765381
    5. '(input' → logprob: -5.575540065765381
    6. '<|end|>' → logprob: -6.450540065765381
    7. '(()' → logprob: -6.575540065765381
    8. '(token' → logprob: -7.075540065765381
    9. '```' → logprob: -7.075540065765381
    10. '<|end|>' → logprob: -7.200540065765381

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006564391660504043
    2. 'strip' → logprob: -7.375656604766846
    3. ' split' → logprob: -11.250656127929688
    4. 'rstrip' → logprob: -11.625656127929688
    5. ')' → logprob: -12.125656127929688
    6. '(split' → logprob: -13.625656127929688
    7. 'read' → logprob: -14.375656127929688
    8. '```' → logprob: -15.250656127929688
    9. 'spl' → logprob: -15.875656127929688
    10. 's' → logprob: -16.375656127929688

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002388852648437023
    2. '))' → logprob: -6.502388954162598
    3. '())' → logprob: -7.377388954162598
    4. '`)' → logprob: -8.627388954162598
    5. '()' → logprob: -10.502388954162598
    6. '(' → logprob: -10.877388954162598
    7. ')`' → logprob: -11.377388954162598
    8. '')' → logprob: -12.252388954162598
    9. '```' → logprob: -12.627388954162598
    10. ' )' → logprob: -12.877388954162598

Token 13: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03365619108080864
    2. '#' → logprob: -3.908656120300293
    3. '*' → logprob: -4.783656120300293
    4. '=' → logprob: -7.158656120300293
    5. '+
' → logprob: -7.158656120300293
    6. 'c' → logprob: -7.408656120300293
    7. '-' → logprob: -7.783656120300293
    8. 'if' → logprob: -7.783656120300293
    9. ',' → logprob: -7.908656120300293
    10. 'i' → logprob: -8.658656120300293

Token 14: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.662937372922897e-05
    2. '("("' → logprob: -9.750096321105957
    3. '('' → logprob: -11.125096321105957
    4. '((' → logprob: -12.125096321105957
    5. '(a' → logprob: -12.125096321105957
    6. '(
' → logprob: -13.250096321105957
    7. '("""' → logprob: -13.375096321105957
    8. ' (' → logprob: -13.750096321105957
    9. '()' → logprob: -13.750096321105957
    10. '(`' → logprob: -13.875096321105957

Token 15: 't' (ID: 83)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001142718712799251
    2. ' a' → logprob: -7.376142501831055
    3. '(a' → logprob: -8.251142501831055
    4. 'b' → logprob: -10.001142501831055
    5. 'abs' → logprob: -10.251142501831055
    6. '(' → logprob: -10.376142501831055
    7. 't' → logprob: -10.501142501831055
    8. ' (' → logprob: -10.876142501831055
    9. '1' → logprob: -11.001142501831055
    10. ''a' → logprob: -11.001142501831055

Token 16: '//' (ID: 393)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31068214774131775
    2. '-' → logprob: -2.0606820583343506
    3. '*' → logprob: -3.3106820583343506
    4. ' *' → logprob: -3.8106820583343506
    5. '//' → logprob: -3.9356820583343506
    6. ')' → logprob: -4.31068229675293
    7. ' //' → logprob: -4.43568229675293
    8. '-a' → logprob: -4.56068229675293
    9. '*a' → logprob: -4.93568229675293
    10. '>' → logprob: -5.93568229675293

Token 17: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04334466904401779
    2. 'b' → logprob: -3.168344736099243
    3. '60' → logprob: -9.043344497680664
    4. ' a' → logprob: -9.293344497680664
    5. '2' → logprob: -9.668344497680664
    6. '(a' → logprob: -11.293344497680664
    7. ' b' → logprob: -11.668344497680664
    8. ' ' → logprob: -11.793344497680664
    9. '6' → logprob: -12.168344497680664
    10. '3' → logprob: -12.293344497680664

Token 18: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10343803465366364
    2. ')*' → logprob: -2.978438138961792
    3. '*' → logprob: -3.728438138961792
    4. ' *' → logprob: -4.228437900543213
    5. '))' → logprob: -5.978437900543213
    6. '*a' → logprob: -5.978437900543213
    7. '*b' → logprob: -6.853437900543213
    8. '//' → logprob: -7.103437900543213
    9. ' )' → logprob: -7.603437900543213
    10. ')//' → logprob: -7.978437900543213

Token 19: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.941850526549388e-06
    2. ' b' → logprob: -11.750007629394531
    3. ')b' → logprob: -17.12500762939453
    4. 'a' → logprob: -17.50000762939453
    5. ')' → logprob: -18.12500762939453
    6. '(b' → logprob: -18.75000762939453
    7. '	b' → logprob: -19.12500762939453
    8. ' ' → logprob: -19.25000762939453
    9. '*b' → logprob: -19.37500762939453
    10. '(' → logprob: -19.75000762939453

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. '))' → logprob: -12.000009536743164
    3. '*' → logprob: -13.750009536743164
    4. '`)' → logprob: -14.125009536743164
    5. ' )' → logprob: -15.250009536743164
    6. ')`' → logprob: -15.250009536743164
    7. '')' → logprob: -15.500009536743164
    8. ')))' → logprob: -15.875009536743164
    9. '```' → logprob: -15.875009536743164
    10. '*)' → logprob: -16.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 22.22%
Précision adaptée (1ère position): 22.22%
Précision (top 10): 72.22%
================================================================================
