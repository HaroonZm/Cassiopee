================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
if a + b == 15:
    print('+')
elif a * b == 15:
    print('*')
else:
    print('x')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12097881734371185
    2. '0' → logprob: -2.870978832244873
    3. '1' → logprob: -2.995978832244873
    4. '10' → logprob: -4.995978832244873
    5. '5' → logprob: -8.870978355407715
    6. '42' → logprob: -9.620978355407715
    7. 'input' → logprob: -9.995978355407715
    8. '[' → logprob: -10.120978355407715
    9. 'a' → logprob: -10.370978355407715
    10. ' [' → logprob: -10.495978355407715

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5411503314971924
    2. '(input' → logprob: -1.0411503314971924
    3. '(' → logprob: -2.9161503314971924
    4. 'input' → logprob: -5.666150093078613
    5. '```' → logprob: -6.291150093078613
    6. '(user' → logprob: -6.916150093078613
    7. '`)' → logprob: -7.666150093078613
    8. ',' → logprob: -7.791150093078613
    9. '(data' → logprob: -7.916150093078613
    10. '))' → logprob: -8.291150093078613

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23583000898361206
    2. ' input' → logprob: -1.6108300685882568
    3. '(input' → logprob: -4.610829830169678
    4. ')' → logprob: -7.860829830169678
    5. '=input' → logprob: -11.860830307006836
    6. ',input' → logprob: -11.860830307006836
    7. ' )' → logprob: -12.110830307006836
    8. '<input' → logprob: -13.110830307006836
    9. 'user' → logprob: -13.110830307006836
    10. '[input' → logprob: -13.360830307006836

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5460929870605469
    2. ')' → logprob: -1.5460929870605469
    3. '())' → logprob: -2.046092987060547
    4. '()' → logprob: -2.671092987060547
    5. '('' → logprob: -6.921092987060547
    6. '(""))' → logprob: -7.046092987060547
    7. '(()' → logprob: -7.171092987060547
    8. '))' → logprob: -7.296092987060547
    9. '`()' → logprob: -7.296092987060547
    10. '(
' → logprob: -7.296092987060547

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021224225929472595
    2. 'strip' → logprob: -8.500212669372559
    3. 'rstrip' → logprob: -12.125212669372559
    4. ' split' → logprob: -13.000212669372559
    5. 'read' → logprob: -14.875212669372559
    6. ')' → logprob: -15.000212669372559
    7. '(split' → logprob: -15.250212669372559
    8. 'spl' → logprob: -15.875212669372559
    9. 'startswith' → logprob: -17.375211715698242
    10. '_split' → logprob: -18.375211715698242

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11073170602321625
    2. '())' → logprob: -2.610731601715088
    3. '))' → logprob: -3.485731601715088
    4. '()' → logprob: -7.985731601715088
    5. '()))' → logprob: -8.360732078552246
    6. '`)' → logprob: -9.985732078552246
    7. '(' → logprob: -10.610732078552246
    8. ')`' → logprob: -10.735732078552246
    9. ')))' → logprob: -11.985732078552246
    10. ' )' → logprob: -11.985732078552246

Token 11: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01239827461540699
    2. '*' → logprob: -5.1373982429504395
    3. '#' → logprob: -5.5123982429504395
    4. '+
' → logprob: -7.2623982429504395
    5. ',' → logprob: -8.137398719787598
    6. '[' → logprob: -8.262398719787598
    7. '=' → logprob: -8.762398719787598
    8. 'a' → logprob: -9.012398719787598
    9. '-' → logprob: -9.137398719787598
    10. '**' → logprob: -9.637398719787598

Token 12: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03758130967617035
    2. 'a' → logprob: -3.537581205368042
    3. ' ' → logprob: -4.912581443786621
    4. ' b' → logprob: -7.912581443786621
    5. ' ' → logprob: -10.287581443786621
    6. ' not' → logprob: -10.787581443786621
    7. 'b' → logprob: -11.412581443786621
    8. ' (' → logprob: -12.162581443786621
    9. '  ' → logprob: -13.412581443786621
    10. '(a' → logprob: -13.912581443786621

Token 13: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11541401594877243
    2. '>' → logprob: -2.8654139041900635
    3. ' <' → logprob: -3.6154139041900635
    4. ' ==' → logprob: -4.865414142608643
    5. ' ' → logprob: -5.240414142608643
    6. ' >=' → logprob: -5.240414142608643
    7. '<' → logprob: -6.115414142608643
    8. ' <=' → logprob: -6.490414142608643
    9. '==' → logprob: -6.990414142608643
    10. ' !=' → logprob: -7.740414142608643

Token 14: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20143954455852509
    2. ' b' → logprob: -1.7014394998550415
    3. ' ' → logprob: -11.07643985748291
    4. '1' → logprob: -11.95143985748291
    5. '<|end|>' → logprob: -13.20143985748291
    6. '>b' → logprob: -13.57643985748291
    7. '	b' → logprob: -15.07643985748291
    8. '0' → logprob: -15.20143985748291
    9. '_b' → logprob: -15.82643985748291
    10. '2' → logprob: -16.451438903808594

Token 15: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06864294409751892
    2. ' ==' → logprob: -3.4436428546905518
    3. '>' → logprob: -3.6936428546905518
    4. ' <=' → logprob: -5.693643093109131
    5. ' >=' → logprob: -6.443643093109131
    6. ' ' → logprob: -6.568643093109131
    7. '==' → logprob: -6.693643093109131
    8. ' <' → logprob: -7.068643093109131
    9. ' !=' → logprob: -7.818643093109131
    10. '<|end|>' → logprob: -8.568642616271973

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7622984051704407
    2. '10' → logprob: -0.7622984051704407
    3. '100' → logprob: -3.387298345565796
    4. '0' → logprob: -3.637298345565796
    5. '42' → logprob: -5.762298583984375
    6. '1' → logprob: -6.512298583984375
    7. '3' → logprob: -6.762298583984375
    8. '20' → logprob: -7.512298583984375
    9. '15' → logprob: -10.137298583984375
    10. '7' → logprob: -10.262298583984375

Token 17: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10887708514928818
    2. '100' → logprob: -2.858877182006836
    3. '0' → logprob: -3.608877182006836
    4. ' ' → logprob: -4.483877182006836
    5. '3' → logprob: -5.233877182006836
    6. '1' → logprob: -7.233877182006836
    7. '42' → logprob: -7.358877182006836
    8. '20' → logprob: -8.608877182006836
    9. '15' → logprob: -8.733877182006836
    10. '7' → logprob: -8.858877182006836

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.7252845029579476e-05
    2. ' :' → logprob: -10.625027656555176
    3. ':
' → logprob: -14.000027656555176
    4. ':**' → logprob: -14.000027656555176
    5. '):' → logprob: -14.375027656555176
    6. ' and' → logprob: -15.000027656555176
    7. ':return' → logprob: -16.62502670288086
    8. ' or' → logprob: -16.62502670288086
    9. ',' → logprob: -17.00002670288086
    10. '>:' → logprob: -17.12502670288086

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05313302204012871
    2. ' print' → logprob: -3.178133010864258
    3. ':' → logprob: -5.803133010864258
    4. 'print' → logprob: -5.928133010864258
    5. '\n' → logprob: -6.678133010864258
    6. '    ' → logprob: -7.053133010864258
    7. '\' → logprob: -7.553133010864258
    8. ' ' → logprob: -7.803133010864258
    9. '<|end|>' → logprob: -8.178133010864258
    10. '	print' → logprob: -8.553133010864258

Token 20: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0250910222530365
    2. 'print' (adapté à ' print') → logprob: -3.9000909328460693
    3. '   ' → logprob: -5.400091171264648
    4. '    ' → logprob: -11.025091171264648
    5. '	print' → logprob: -13.025091171264648
    6. '```' → logprob: -13.150091171264648
    7. '       ' → logprob: -14.400091171264648
    8. ' ' → logprob: -14.400091171264648
    9. ' pass' → logprob: -15.150091171264648
    10. '\' → logprob: -16.15009117126465

Token 21: '('+' (ID: 108514)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03935772925615311
    2. '("' → logprob: -3.4143576622009277
    3. '('' → logprob: -5.289357662200928
    4. '(True' → logprob: -8.289358139038086
    5. '()' → logprob: -8.664358139038086
    6. '("("' → logprob: -8.789358139038086
    7. '(a' → logprob: -10.414358139038086
    8. '("")' → logprob: -10.539358139038086
    9. '((' → logprob: -12.039358139038086
    10. '(False' → logprob: -12.539358139038086

Token 22: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04575873538851738
    2. ')' → logprob: -3.1707587242126465
    3. ''' → logprob: -6.0457587242126465
    4. '15' → logprob: -8.295759201049805
    5. ' ')' → logprob: -10.670759201049805
    6. '")' → logprob: -10.920759201049805
    7. '''' → logprob: -10.920759201049805
    8. '1' → logprob: -11.170759201049805
    9. '')
' → logprob: -11.295759201049805
    10. '5' → logprob: -11.420759201049805

Token 23: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.180975079536438
    2. 'else' → logprob: -1.805975079536438
    3. ' else' → logprob: -7.680974960327148
    4. ' elif' → logprob: -7.805974960327148
    5. '```' → logprob: -9.055974960327148
    6. '<|end|>' → logprob: -9.180974960327148
    7. 'el' → logprob: -10.805974960327148
    8. ' ' → logprob: -11.055974960327148
    9. ':' → logprob: -11.180974960327148
    10. '   ' → logprob: -11.305974960327148

Token 24: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12456461042165756
    2. ' ' → logprob: -2.3745646476745605
    3. 'a' → logprob: -3.7495646476745605
    4. ' b' → logprob: -8.874564170837402
    5. ' ' → logprob: -8.874564170837402
    6. ' (' → logprob: -9.999564170837402
    7. 's' → logprob: -9.999564170837402
    8. ''' → logprob: -10.374564170837402
    9. 'b' → logprob: -10.374564170837402
    10. '  ' → logprob: -10.749564170837402

Token 25: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4632795453071594
    2. '+' → logprob: -1.7132794857025146
    3. ' -' → logprob: -2.0882794857025146
    4. '-' → logprob: -3.4632794857025146
    5. ' ' → logprob: -3.7132794857025146
    6. '*' → logprob: -5.088279724121094
    7. ' *' → logprob: -5.963279724121094
    8. '<|end|>' → logprob: -7.588279724121094
    9. ' ==' → logprob: -7.713279724121094
    10. ')' → logprob: -8.713279724121094

Token 26: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05506620183587074
    2. ' b' → logprob: -2.9300661087036133
    3. ' ' → logprob: -8.805066108703613
    4. '<|end|>' → logprob: -10.430066108703613
    5. '<|end|>' → logprob: -13.680066108703613
    6. '  ' → logprob: -14.180066108703613
    7. '	b' → logprob: -14.430066108703613
    8. '_b' → logprob: -14.430066108703613
    9. ')b' → logprob: -15.680066108703613
    10. ' б' → logprob: -15.805066108703613

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020606936886906624
    2. '==' → logprob: -3.8956069946289062
    3. ' ' → logprob: -10.645606994628906
    4. ' >' → logprob: -11.520606994628906
    5. ' <=' → logprob: -12.020606994628906
    6. '>' → logprob: -12.270606994628906
    7. ' =' → logprob: -12.645606994628906
    8. '=' → logprob: -12.645606994628906
    9. ' <' → logprob: -12.645606994628906
    10. ' >=' → logprob: -13.145606994628906

Token 28: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.011911884881556034
    2. ' ' → logprob: -4.511911869049072
    3. '0' → logprob: -8.01191234588623
    4. '100' → logprob: -8.38691234588623
    5. '30' → logprob: -9.13691234588623
    6. '150' → logprob: -10.13691234588623
    7. '25' → logprob: -10.88691234588623
    8. '60' → logprob: -10.88691234588623
    9. '50' → logprob: -11.01191234588623
    10. '10' → logprob: -11.13691234588623

Token 29: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0010887817479670048
    2. ' ' → logprob: -7.001088619232178
    3. '0' → logprob: -9.376089096069336
    4. '30' → logprob: -10.751089096069336
    5. '100' → logprob: -11.126089096069336
    6. 'a' → logprob: -11.501089096069336
    7. '50' → logprob: -11.751089096069336
    8. '10' → logprob: -12.126089096069336
    9. '25' → logprob: -12.501089096069336
    10. '20' → logprob: -12.501089096069336

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.723973582556937e-05
    2. ' :' → logprob: -11.375017166137695
    3. ':
' → logprob: -12.625017166137695
    4. '):' → logprob: -13.250017166137695
    5. ':**' → logprob: -15.375017166137695
    6. '   ' → logprob: -15.625017166137695
    7. '>:' → logprob: -16.000017166137695
    8. '():' → logprob: -17.500017166137695
    9. ' and' → logprob: -17.500017166137695
    10. '':' → logprob: -17.875017166137695

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00176836212631315
    2. '       ' → logprob: -6.376768589019775
    3. '```' → logprob: -10.501768112182617
    4. '    ' → logprob: -11.751768112182617
    5. '<|end|>' → logprob: -11.751768112182617
    6. 'print' → logprob: -11.751768112182617
    7. '    
' → logprob: -12.251768112182617
    8. '`' → logprob: -13.376768112182617
    9. ''' → logprob: -13.751768112182617
    10. '``' → logprob: -13.751768112182617

Token 32: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025530694983899593
    2. 'print' (adapté à ' print') → logprob: -6.1275529861450195
    3. '       ' → logprob: -8.37755298614502
    4. ' print' → logprob: -9.50255298614502
    5. '```' → logprob: -9.87755298614502
    6. '	print' → logprob: -12.62755298614502
    7. '    ' → logprob: -12.75255298614502
    8. '   ' → logprob: -13.37755298614502
    9. '``' → logprob: -13.75255298614502
    10. '<|end|>' → logprob: -14.12755298614502

Token 33: '('*' (ID: 74916)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002585170092061162
    2. '('+' → logprob: -6.377584934234619
    3. '(' → logprob: -7.127584934234619
    4. ''' → logprob: -10.127585411071777
    5. '('*' → logprob: -10.752585411071777
    6. '("("' → logprob: -11.752585411071777
    7. '('.')' → logprob: -12.377585411071777
    8. '('(' → logprob: -13.752585411071777
    9. '('/')' → logprob: -13.752585411071777
    10. '   ' → logprob: -14.002585411071777

Token 34: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4742351770401001
    2. '')' → logprob: -0.9742351770401001
    3. '')
' → logprob: -10.099235534667969
    4. ''' → logprob: -10.099235534667969
    5. ')
' → logprob: -10.599235534667969
    6. '")' → logprob: -11.349235534667969
    7. '`)' → logprob: -11.724235534667969
    8. '*' → logprob: -11.849235534667969
    9. ':' → logprob: -12.599235534667969
    10. '   ' → logprob: -12.974235534667969

Token 35: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10095620155334473
    2. 'elif' → logprob: -2.3509562015533447
    3. '```' → logprob: -7.975955963134766
    4. ' else' → logprob: -8.475955963134766
    5. '<|end|>' → logprob: -9.100955963134766
    6. '\n' → logprob: -9.975955963134766
    7. '_else' → logprob: -11.600955963134766
    8. ' elif' → logprob: -12.225955963134766
    9. '...' → logprob: -12.850955963134766
    10. '\' → logprob: -12.850955963134766

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.664371848164592e-05
    2. ':
' → logprob: -11.375016212463379
    3. ' :' → logprob: -12.375016212463379
    4. '   ' → logprob: -14.375016212463379
    5. ':**' → logprob: -17.125017166137695
    6. ':def' → logprob: -17.250017166137695
    7. '():' → logprob: -17.375017166137695
    8. '):' → logprob: -17.500017166137695
    9. ':
' → logprob: -17.625017166137695
    10. ':return' → logprob: -18.000017166137695

Token 37: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4605739414691925
    2. '   ' → logprob: -1.0855739116668701
    3. ' print' → logprob: -4.210574150085449
    4. ''' → logprob: -4.960574150085449
    5. '    ' → logprob: -5.960574150085449
    6. '()' → logprob: -6.210574150085449
    7. ')' → logprob: -6.460574150085449
    8. '"' → logprob: -6.460574150085449
    9. ' ' → logprob: -7.335574150085449
    10. '(' → logprob: -7.835574150085449

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.038599640130996704
    2. '-' → logprob: -3.288599729537964
    3. '15' → logprob: -8.038599967956543
    4. ''-' → logprob: -9.038599967956543
    5. ' print' → logprob: -10.663599967956543
    6. '(' → logprob: -11.038599967956543
    7. '   ' → logprob: -11.163599967956543
    8. '-)' → logprob: -11.788599967956543
    9. '"-' → logprob: -12.038599967956543
    10. '!' → logprob: -12.163599967956543

Token 39: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11184284090995789
    2. '(' → logprob: -2.6118428707122803
    3. '()' → logprob: -3.4868428707122803
    4. '('.')' → logprob: -7.361842632293701
    5. '('+' → logprob: -7.736842632293701
    6. '("' → logprob: -8.11184310913086
    7. '('*' → logprob: -9.11184310913086
    8. '('-' → logprob: -9.23684310913086
    9. '(False' → logprob: -9.86184310913086
    10. '(-' → logprob: -10.11184310913086

Token 40: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6031998991966248
    2. '?' → logprob: -1.2281999588012695
    3. '-)' → logprob: -2.1031999588012695
    4. '15' → logprob: -4.8531999588012695
    5. '?)' → logprob: -5.1031999588012695
    6. '!' → logprob: -5.2281999588012695
    7. ''-' → logprob: -5.4781999588012695
    8. '0' → logprob: -5.4781999588012695
    9. '=' → logprob: -5.9781999588012695
    10. '')' → logprob: -6.1031999588012695

Token 41: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005159787251614034
    2. ')' → logprob: -7.750515937805176
    3. 'x' → logprob: -9.875515937805176
    4. ''' → logprob: -11.000515937805176
    5. '*' → logprob: -11.625515937805176
    6. '+')' → logprob: -12.750515937805176
    7. '')
' → logprob: -14.000515937805176
    8. '")' → logprob: -14.000515937805176
    9. '!' → logprob: -14.375515937805176
    10. ' ')' → logprob: -14.500515937805176


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 35.90%
Précision (top 10): 82.05%
================================================================================
