================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Point d'entrée du programme. 
    Lit un entier (ignoré), puis une liste d'entiers depuis l'entrée standard,
    calcule la différence entre les deux éléments centraux de la liste triée,
    et affiche le résultat.
    """
    # Lire et ignorer la première valeur d'entrée (habituellement la taille de la liste)
    _ = input()

    # Lire la liste d'entiers, les mapper depuis input(), puis la trier par ordre croissant
    A = sorted(list(map(int, input().split())))

    # Calcul de l'indice médian de la liste triée
    mid_index = len(A) // 2

    # Calcul et affichage de la différence entre les deux éléments centraux
    # Pour une liste à nombre pair d'éléments, mid_index et mid_index-1 seront les deux éléments centraux
    print(A[mid_index] - A[mid_index - 1])

if __name__ == '__main__':
    # Si ce fichier est exécuté en tant que programme principal,
    # lancer la fonction principale main().
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9647759795188904
    2. 'This' → logprob: -1.7147760391235352
    3. 'Calculate' → logprob: -2.089776039123535
    4. 'Initialize' → logprob: -2.464776039123535
    5. 'Returns' → logprob: -3.339776039123535
    6. 'Run' → logprob: -3.839776039123535
    7. '   ' → logprob: -4.214776039123535
    8. 'Show' → logprob: -4.339776039123535
    9. 'Runs' → logprob: -4.339776039123535
    10. 'Starts' → logprob: -4.464776039123535

Token 6: ' Point' (ID: 9971)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'This' → logprob: -1.6862215995788574
    2. 'Calculate' → logprob: -1.6862215995788574
    3. 'Run' → logprob: -1.8112215995788574
    4. '   ' → logprob: -2.0612215995788574
    5. 'Initialize' → logprob: -2.3112215995788574
    6. '"""' → logprob: -3.5612215995788574
    7. 'Print' → logprob: -3.8112215995788574
    8. 'Process' → logprob: -3.8112215995788574
    9. 'Main' → logprob: -3.9362215995788574
    10. 'Initial' → logprob: -4.186221599578857

Token 7: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18689045310020447
    2. 's' → logprob: -2.8118903636932373
    3. '.' → logprob: -3.4368903636932373
    4. ' cloud' → logprob: -4.186890602111816
    5. '(' → logprob: -4.561890602111816
    6. ':' → logprob: -4.936890602111816
    7. '()' → logprob: -5.061890602111816
    8. ' ' → logprob: -5.061890602111816
    9. '    ' → logprob: -5.186890602111816
    10. ' to' → logprob: -5.561890602111816

Token 8: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.015347501263022423
    2. 'entrée' → logprob: -4.515347480773926
    3. ''accès' → logprob: -6.140347480773926
    4. ''ent' → logprob: -6.890347480773926
    5. 'e' → logprob: -7.765347480773926
    6. '’entrée' → logprob: -9.140347480773926
    7. 'entr' → logprob: -9.515347480773926
    8. ''' → logprob: -9.515347480773926
    9. ''arrivée' → logprob: -9.515347480773926
    10. ''intérêt' → logprob: -9.640347480773926

Token 9: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10551441460847855
    2. '   ' → logprob: -3.2305145263671875
    3. ' du' → logprob: -3.2305145263671875
    4. 'de' → logprob: -5.8555145263671875
    5. ' """' → logprob: -5.8555145263671875
    6. ' :' → logprob: -5.9805145263671875
    7. ':' → logprob: -6.7305145263671875
    8. '    ' → logprob: -6.7305145263671875
    9. ' pour' → logprob: -6.7305145263671875
    10. '"""' → logprob: -6.7305145263671875

Token 10: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.5537862181663513
    2. ' programme' → logprob: -0.9287862181663513
    3. 'program' → logprob: -3.678786277770996
    4. ' program' → logprob: -6.303786277770996
    5. ' script' → logprob: -6.553786277770996
    6. '   ' → logprob: -7.678786277770996
    7. 'pro' → logprob: -8.428786277770996
    8. ' progr' → logprob: -8.428786277770996
    9. 'script' → logprob: -8.428786277770996
    10. 'programm' → logprob: -8.553786277770996

Token 11: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17626748979091644
    2. '\n' → logprob: -2.551267385482788
    3. '"""' → logprob: -2.926267385482788
    4. '```' → logprob: -4.926267623901367
    5. '    
' → logprob: -5.176267623901367
    6. '"' → logprob: -5.801267623901367
    7. '\' → logprob: -5.801267623901367
    8. '"""
' → logprob: -5.926267623901367
    9. '    ' → logprob: -6.551267623901367
    10. '`' → logprob: -6.801267623901367

Token 12: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2565864324569702
    2. '\n' → logprob: -2.3815865516662598
    3. '"""' → logprob: -2.7565865516662598
    4. '\' → logprob: -4.13158655166626
    5. '    
' → logprob: -4.25658655166626
    6. ')' → logprob: -4.63158655166626
    7. '"""
' → logprob: -4.88158655166626
    8. '```' → logprob: -5.38158655166626
    9. '  
' → logprob: -5.75658655166626
    10. ' 
' → logprob: -5.88158655166626

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.285366028547287
    2. '"""' → logprob: -1.4103660583496094
    3. '"""
' → logprob: -6.035366058349609
    4. '    
' → logprob: -7.535366058349609
    5. '\n' → logprob: -8.28536605834961
    6. ' """' → logprob: -8.53536605834961
    7. '"' → logprob: -8.78536605834961
    8. '""' → logprob: -8.91036605834961
    9. '    ' → logprob: -9.28536605834961
    10. '```' → logprob: -9.28536605834961

Token 14: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544904947280884
    2. '"""' → logprob: -1.5044904947280884
    3. '\n' → logprob: -7.129490375518799
    4. '    
' → logprob: -7.879490375518799
    5. '"' → logprob: -8.129490852355957
    6. '""' → logprob: -8.379490852355957
    7. '"""
' → logprob: -8.504490852355957
    8. '       ' → logprob: -8.879490852355957
    9. ' """' → logprob: -9.004490852355957
    10. '    ' → logprob: -9.254490852355957

Token 15: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3087996542453766
    2. ' les' → logprob: -1.6837996244430542
    3. ' le' → logprob: -3.5587997436523438
    4. '   ' → logprob: -3.8087997436523438
    5. '    ' → logprob: -4.308799743652344
    6. ' l' → logprob: -5.433799743652344
    7. '  ' → logprob: -5.933799743652344
    8. ' et' → logprob: -5.933799743652344
    9. ' la' → logprob: -6.308799743652344
    10. ',' → logprob: -7.183799743652344

Token 16: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2253529578447342
    2. ' fichier' → logprob: -1.7253530025482178
    3. ' e' → logprob: -3.8503530025482178
    4. ' f' → logprob: -7.725352764129639
    5. ' ' → logprob: -8.225353240966797
    6. 'f' → logprob: -8.350353240966797
    7. ' input' → logprob: -8.350353240966797
    8. ' message' → logprob: -8.975353240966797
    9. ' argument' → logprob: -9.225353240966797
    10. ' texte' → logprob: -9.225353240966797

Token 17: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7877858877182007
    2. '\n' → logprob: -1.7877858877182007
    3. ' en' → logprob: -1.9127858877182007
    4. ' n' → logprob: -2.0377860069274902
    5. 'n' → logprob: -2.2877860069274902
    6. ' ' → logprob: -2.2877860069274902
    7. ' et' → logprob: -3.9127860069274902
    8. ' ,' → logprob: -3.9127860069274902
    9. '   ' → logprob: -4.03778600692749
    10. '.' → logprob: -4.16278600692749

Token 18: 'ignor' (ID: 180153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.398441880941391
    2. 'n' → logprob: -2.023441791534424
    3. ' n' → logprob: -2.148441791534424
    4. ' )' → logprob: -3.273441791534424
    5. ')n' → logprob: -3.273441791534424
    6. ' ' → logprob: -7.523441791534424
    7. '),' → logprob: -7.648441791534424
    8. '   ' → logprob: -7.898441791534424
    9. 'l' → logprob: -8.273442268371582
    10. ' en' → logprob: -8.523442268371582

Token 19: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4748651385307312
    2. 'e' → logprob: -0.9748651385307312
    3. 'ant' → logprob: -7.349864959716797
    4. 'ed' → logprob: -9.849864959716797
    5. 'er' → logprob: -10.099864959716797
    6. 'ée' → logprob: -10.224864959716797
    7. 'es' → logprob: -12.224864959716797
    8. 'е' → logprob: -13.599864959716797
    9. '```' → logprob: -13.724864959716797
    10. 'ee' → logprob: -13.849864959716797

Token 20: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004380159545689821
    2. ' )' → logprob: -5.504380226135254
    3. 'e' → logprob: -9.629380226135254
    4. ' ' → logprob: -9.879380226135254
    5. ').' → logprob: -9.879380226135254
    6. '),' → logprob: -10.129380226135254
    7. ',' → logprob: -10.129380226135254
    8. ' ' → logprob: -11.379380226135254
    9. '.' → logprob: -12.004380226135254
    10. '   ' → logprob: -12.129380226135254

Token 21: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.020268695428967476
    2. ' et' → logprob: -4.52026891708374
    3. ' ' → logprob: -5.77026891708374
    4. '   ' → logprob: -6.27026891708374
    5. 'p' → logprob: -7.27026891708374
    6. ' récup' → logprob: -7.64526891708374
    7. '<|end|>' → logprob: -8.270268440246582
    8. '    ' → logprob: -8.395268440246582
    9. ' then' → logprob: -8.395268440246582
    10. ',' → logprob: -8.395268440246582

Token 22: ' une' (ID: 2463)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.30921369791030884
    2. ' appelle' → logprob: -2.434213638305664
    3. ' récup' → logprob: -3.434213638305664
    4. ' lance' → logprob: -3.934213638305664
    5. ' continue' → logprob: -4.059213638305664
    6. '   ' → logprob: -4.309213638305664
    7. ' ex' → logprob: -4.434213638305664
    8. ' une' → logprob: -4.809213638305664
    9. ' crée' → logprob: -4.934213638305664
    10. ' un' → logprob: -5.184213638305664

Token 23: ' liste' (ID: 31719)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4839929938316345
    2. 'chaine' → logprob: -2.4839930534362793
    3. ' ligne' → logprob: -2.7339930534362793
    4. ' chaine' → logprob: -2.8589930534362793
    5. 's' → logprob: -3.7339930534362793
    6. 'suite' → logprob: -3.8589930534362793
    7. ' suite' → logprob: -3.8589930534362793
    8. 'cha' → logprob: -3.9839930534362793
    9. ' liste' → logprob: -4.108993053436279
    10. ' ' → logprob: -4.358993053436279

Token 24: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1235910654067993
    2. '<|end|>' → logprob: -1.3735910654067993
    3. ' ' → logprob: -1.4985910654067993
    4. ' de' → logprob: -2.8735909461975098
    5. '   ' → logprob: -3.4985909461975098
    6. '[' → logprob: -3.8735909461975098
    7. ' d' → logprob: -4.37359094619751
    8. ')' → logprob: -4.49859094619751
    9. 'de' → logprob: -4.49859094619751
    10. '  ' → logprob: -4.99859094619751

Token 25: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.2564728558063507
    2. 'e' → logprob: -1.7564728260040283
    3. ' ent' → logprob: -3.5064728260040283
    4. 'ent' → logprob: -4.631473064422607
    5. '’ent' → logprob: -5.006473064422607
    6. ' integers' → logprob: -6.256473064422607
    7. ' nombres' → logprob: -7.006473064422607
    8. ' lignes' → logprob: -7.506473064422607
    9. 'n' → logprob: -7.756473064422607
    10. ' entier' → logprob: -8.13147258758545

Token 26: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.10094004124403
    2. 'i' → logprob: -2.350939989089966
    3. 'ières' → logprob: -8.225939750671387
    4. 'ier' → logprob: -8.850939750671387
    5. 'ié' → logprob: -9.350939750671387
    6. '```' → logprob: -9.600939750671387
    7. '_i' → logprob: -9.725939750671387
    8. ' i' → logprob: -10.475939750671387
    9. '   ' → logprob: -10.850939750671387
    10. 'ers' → logprob: -10.975939750671387

Token 27: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8049312829971313
    2. ',' → logprob: -1.1799312829971313
    3. '.' → logprob: -2.054931163787842
    4. '\' → logprob: -3.804931163787842
    5. ' ' → logprob: -4.054931163787842
    6. ')' → logprob: -4.179931163787842
    7. ' ,' → logprob: -4.429931163787842
    8. '    
' → logprob: -4.679931163787842
    9. '\n' → logprob: -4.929931163787842
    10. '    ' → logprob: -5.179931163787842

Token 28: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.727971076965332
    2. 'l' → logprob: -0.852971076965332
    3. ' input' → logprob: -2.852971076965332
    4. ' stdin' → logprob: -3.977971076965332
    5. ' sys' → logprob: -5.977971076965332
    6. '   ' → logprob: -5.977971076965332
    7. 'input' → logprob: -6.102971076965332
    8. 'stdin' → logprob: -6.352971076965332
    9. 'sys' → logprob: -6.477971076965332
    10. ' la' → logprob: -6.602971076965332

Token 29: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4200420379638672
    2. 'a' → logprob: -1.4200420379638672
    3. 'e' → logprob: -3.170042037963867
    4. ''' → logprob: -3.545042037963867
    5. 'entrée' → logprob: -4.045042037963867
    6. 'input' → logprob: -4.920042037963867
    7. ''ent' → logprob: -7.170042037963867
    8. 'es' → logprob: -7.295042037963867
    9. '_' → logprob: -7.670042037963867
    10. 'stdin' → logprob: -7.795042037963867

Token 30: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11050543934106827
    2. '\n' → logprob: -2.8605053424835205
    3. ',' → logprob: -3.6105053424835205
    4. '    
' → logprob: -5.2355055809021
    5. '.' → logprob: -5.2355055809021
    6. '\' → logprob: -5.8605055809021
    7. '
' → logprob: -6.7355055809021
    8. '"""
' → logprob: -7.1105055809021
    9. '```' → logprob: -7.3605055809021
    10. ')' → logprob: -7.4855055809021

Token 31: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01264137588441372
    2. '\n' → logprob: -5.137641429901123
    3. '    
' → logprob: -5.387641429901123
    4. ',' → logprob: -7.262641429901123
    5. '\' → logprob: -7.512641429901123
    6. '
' → logprob: -8.512640953063965
    7. ')' → logprob: -8.762640953063965
    8. '    ' → logprob: -9.387640953063965
    9. '```' → logprob: -9.637640953063965
    10. '.' → logprob: -9.887640953063965

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011053359135985374
    2. '    ' → logprob: -6.011053562164307
    3. ',' → logprob: -6.136053562164307
    4. ' ' → logprob: -6.261053562164307
    5. ' puis' → logprob: -7.136053562164307
    6. '    
' → logprob: -7.261053562164307
    7. ')' → logprob: -7.761053562164307
    8. ' et' → logprob: -7.761053562164307
    9. ' ' → logprob: -8.136053085327148
    10. '  ' → logprob: -8.261053085327148

Token 33: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010866360971704125
    2. '    ' → logprob: -7.626086711883545
    3. '    
' → logprob: -8.501086235046387
    4. '"""' → logprob: -9.751086235046387
    5. ' puis' → logprob: -10.376086235046387
    6. '\n' → logprob: -10.376086235046387
    7. '  ' → logprob: -10.376086235046387
    8. '       ' → logprob: -10.751086235046387
    9. ')' → logprob: -10.876086235046387
    10. '```' → logprob: -11.001086235046387

Token 34: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -2.3199920178740285e-05
    2. '```' → logprob: -12.250022888183594
    3. 'ulé' → logprob: -12.375022888183594
    4. 'ul' → logprob: -12.625022888183594
    5. '\' → logprob: -12.750022888183594
    6. '   ' → logprob: -13.125022888183594
    7. 'ure' → logprob: -13.750022888183594
    8. 'cule' → logprob: -14.125022888183594
    9. '

' → logprob: -14.500022888183594
    10. '       ' → logprob: -14.625022888183594

Token 35: ' la' (ID: 557)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7457420825958252
    2. ' la' → logprob: -0.8707420825958252
    3. ' l' → logprob: -2.745742082595825
    4. ' le' → logprob: -3.620742082595825
    5. ' leur' → logprob: -5.745741844177246
    6. '   ' → logprob: -6.245741844177246
    7. ' ' → logprob: -6.245741844177246
    8. ' les' → logprob: -6.370741844177246
    9. ' un' → logprob: -6.495741844177246
    10. 'et' → logprob: -6.995741844177246

Token 36: ' différence' (ID: 79196)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.42471009492874146
    2. 's' → logprob: -1.2997100353240967
    3. ' plus' → logprob: -4.549710273742676
    4. ' moyenne' → logprob: -4.549710273742676
    5. ' ' → logprob: -5.049710273742676
    6. ' longueur' → logprob: -5.174710273742676
    7. ' som' → logprob: -5.362210273742676
    8. '   ' → logprob: -5.487210273742676
    9. ' valeur' → logprob: -6.049710273742676
    10. ' fréquence' → logprob: -6.049710273742676

Token 37: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37347573041915894
    2. ' between' → logprob: -2.2484757900238037
    3. ' entre' → logprob: -2.2484757900238037
    4. '   ' → logprob: -3.8734757900238037
    5. '_' → logprob: -3.9984757900238037
    6. ' maximale' → logprob: -4.123475551605225
    7. 'entre' → logprob: -4.748475551605225
    8. '    ' → logprob: -4.873475551605225
    9. ' max' → logprob: -4.998475551605225
    10. '  ' → logprob: -5.248475551605225

Token 38: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11325722932815552
    2. 'la' → logprob: -3.8632571697235107
    3. ' les' → logprob: -3.9882571697235107
    4. ' le' → logprob: -4.11325740814209
    5. '   ' → logprob: -4.36325740814209
    6. ' l' → logprob: -4.48825740814209
    7. 'l' → logprob: -4.73825740814209
    8. ' ' → logprob: -5.61325740814209
    9. 'les' → logprob: -5.86325740814209
    10. ' max' → logprob: -6.23825740814209

Token 39: ' deux' (ID: 10301)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.5578029155731201
    2. ' deux' → logprob: -1.5578029155731201
    3. 'de' → logprob: -1.9328029155731201
    4. ' maximum' → logprob: -2.43280291557312
    5. ' ' → logprob: -2.68280291557312
    6. ' valeurs' → logprob: -2.93280291557312
    7. 'max' → logprob: -3.43280291557312
    8. ' max' → logprob: -3.80780291557312
    9. 'maximum' → logprob: -3.80780291557312
    10. 'plus' → logprob: -4.057803153991699

Token 40: ' éléments' (ID: 57375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1806226968765259
    2. ' nombres' → logprob: -1.3056226968765259
    3. '\' → logprob: -3.0556225776672363
    4. 'ent' → logprob: -3.1806225776672363
    5. 'val' → logprob: -3.1806225776672363
    6. '_' → logprob: -3.1806225776672363
    7. ' valeurs' → logprob: -3.1806225776672363
    8. ' ' → logprob: -3.3056225776672363
    9. 'n' → logprob: -3.4306225776672363
    10. ' ent' → logprob: -3.8056225776672363

Token 41: ' centra' (ID: 89537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6699961423873901
    2. ' ' → logprob: -1.9199961423873901
    3. ' s' → logprob: -1.9199961423873901
    4. '   ' → logprob: -2.9199962615966797
    5. '_' → logprob: -3.4199962615966797
    6. ' de' → logprob: -3.7949962615966797
    7. ',' → logprob: -4.16999626159668
    8. '[' → logprob: -4.29499626159668
    9. '[]' → logprob: -5.04499626159668
    10. '  ' → logprob: -5.29499626159668

Token 42: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.750000953674316
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -17.125
    5. 'aux' → logprob: -17.875
    6. ' ux' → logprob: -18.25
    7. '``' → logprob: -18.375
    8. 'les' → logprob: -19.375
    9. 'ls' → logprob: -19.375
    10. 'UX' → logprob: -19.625

Token 43: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025238199159502983
    2. ',' → logprob: -4.025238037109375
    3. ' de' → logprob: -6.275238037109375
    4. 's' → logprob: -6.900238037109375
    5. '.' → logprob: -7.275238037109375
    6. ',
' → logprob: -7.775238037109375
    7. '    
' → logprob: -7.900238037109375
    8. ' ' → logprob: -8.275238037109375
    9. '
' → logprob: -8.275238037109375
    10. ')' → logprob: -8.275238037109375

Token 44: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06797000765800476
    2. 'la' → logprob: -2.817970037460327
    3. '   ' → logprob: -6.192969799041748
    4. 'l' → logprob: -6.942969799041748
    5. ' ' → logprob: -6.942969799041748
    6. ' cette' → logprob: -7.567969799041748
    7. 'a' → logprob: -8.067970275878906
    8. 's' → logprob: -8.442970275878906
    9. ' l' → logprob: -8.942970275878906
    10. ' liste' → logprob: -9.192970275878906

Token 45: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.16228537261486053
    2. 'liste' → logprob: -1.912285327911377
    3. ' list' → logprob: -7.037285327911377
    4. 'list' → logprob: -7.787285327911377
    5. 's' → logprob: -8.787285804748535
    6. ' ' → logprob: -8.912285804748535
    7. '   ' → logprob: -9.162285804748535
    8. ' listes' → logprob: -9.412285804748535
    9. 'l' → logprob: -10.537285804748535
    10. 'lis' → logprob: -10.787285804748535

Token 46: ' tri' (ID: 12665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02862362563610077
    2. '\' → logprob: -4.778623580932617
    3. '\n' → logprob: -5.278623580932617
    4. '
' → logprob: -5.903623580932617
    5. ',' → logprob: -6.028623580932617
    6. '    
' → logprob: -6.278623580932617
    7. '```' → logprob: -6.403623580932617
    8. '.' → logprob: -6.528623580932617
    9. 'n' → logprob: -6.528623580932617
    10. ' ' → logprob: -7.528623580932617

Token 47: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3898787200450897
    2. 'é' → logprob: -1.139878749847412
    3. 'és' → logprob: -6.139878749847412
    4. 'e' → logprob: -8.264878273010254
    5. 'ées' → logprob: -8.764878273010254
    6. '```' → logprob: -9.264878273010254
    7. 'd' → logprob: -9.514878273010254
    8. '�' → logprob: -10.014878273010254
    9. 's' → logprob: -10.264878273010254
    10. ' é' → logprob: -10.514878273010254

Token 48: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06202897056937218
    2. '\' → logprob: -4.062028884887695
    3. ',' → logprob: -4.562028884887695
    4. '.' → logprob: -4.812028884887695
    5. '\n' → logprob: -5.187028884887695
    6. '```' → logprob: -5.187028884887695
    7. ' ' → logprob: -5.562028884887695
    8. '    
' → logprob: -6.312028884887695
    9. ':' → logprob: -6.562028884887695
    10. '
' → logprob: -6.687028884887695

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02200848050415516
    2. ' et' → logprob: -4.022008419036865
    3. ' puis' → logprob: -6.397008419036865
    4. 'et' → logprob: -7.147008419036865
    5. '    ' → logprob: -7.522008419036865
    6. ',' → logprob: -8.272008895874023
    7. '  ' → logprob: -9.272008895874023
    8. 's' → logprob: -10.022008895874023
    9. ' ' → logprob: -10.022008895874023
    10. 'e' → logprob: -10.022008895874023

Token 50: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12993460893630981
    2. ' et' → logprob: -3.129934549331665
    3. '   ' → logprob: -3.129934549331665
    4. ')' → logprob: -5.379934787750244
    5. ' ,' → logprob: -5.504934787750244
    6. '    ' → logprob: -5.754934787750244
    7. ',' → logprob: -5.754934787750244
    8. ' ' → logprob: -5.754934787750244
    9. ' )' → logprob: -5.879934787750244
    10. '  ' → logprob: -6.129934787750244

Token 51: ' affiche' (ID: 127479)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.7281391024589539
    2. ' affiche' → logprob: -1.3531391620635986
    3. ' return' → logprob: -2.2281391620635986
    4. ' print' → logprob: -2.9781391620635986
    5. ' imprime' → logprob: -3.1031391620635986
    6. ' ren' → logprob: -3.7281391620635986
    7. '   ' → logprob: -4.6031389236450195
    8. ' retour' → logprob: -6.1031389236450195
    9. ' l' → logprob: -6.2281389236450195
    10. ' ret' → logprob: -6.2281389236450195

Token 52: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03457234427332878
    2. ' l' → logprob: -3.9095723628997803
    3. ' ' → logprob: -4.909572124481201
    4. ' le' → logprob: -6.284572124481201
    5. ' ' → logprob: -6.909572124481201
    6. '   ' → logprob: -7.284572124481201
    7. ' leur' → logprob: -7.409572124481201
    8. 'la' → logprob: -8.03457260131836
    9. '```' → logprob: -8.03457260131836
    10. ' the' → logprob: -8.28457260131836

Token 53: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.038542408496141434
    2. 'ur' → logprob: -3.7885425090789795
    3. ' resultat' → logprob: -5.1635422706604
    4. ' result' → logprob: -5.9135422706604
    5. 's' → logprob: -6.2885422706604
    6. 'rés' → logprob: -7.1635422706604
    7. ' rés' → logprob: -7.2885422706604
    8. ' ' → logprob: -7.5385422706604
    9. ' résult' → logprob: -8.163542747497559
    10. ' résultats' → logprob: -8.163542747497559

Token 54: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4833984375
    2. '   ' → logprob: -1.1083984375
    3. '"' → logprob: -3.7333984375
    4. '```' → logprob: -4.7333984375
    5. '\n' → logprob: -4.8583984375
    6. '"""
' → logprob: -5.3583984375
    7. ')' → logprob: -5.7333984375
    8. '""' → logprob: -6.1083984375
    9. '\' → logprob: -7.8583984375
    10. '`' → logprob: -7.9833984375

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050344016402959824
    2. '"""' → logprob: -3.0503439903259277
    3. '"""
' → logprob: -6.800343990325928
    4. '```' → logprob: -8.050344467163086
    5. ' """' → logprob: -8.925344467163086
    6. '""' → logprob: -9.800344467163086
    7. '"' → logprob: -9.925344467163086
    8. ' """
' → logprob: -10.175344467163086
    9. '    ' → logprob: -10.800344467163086
    10. '  ' → logprob: -11.800344467163086

Token 56: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3972502052783966
    2. '"""' → logprob: -1.2722501754760742
    3. '"' → logprob: -3.522250175476074
    4. '\n' → logprob: -5.522250175476074
    5. '"""
' (adapté à ' """
') → logprob: -5.522250175476074
    6. '```' → logprob: -6.022250175476074
    7. ' """' → logprob: -6.397250175476074
    8. 'n' → logprob: -6.647250175476074
    9. ')' → logprob: -7.022250175476074
    10. '""' → logprob: -7.397250175476074

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17745013535022736
    2. '\n' → logprob: -2.552450180053711
    3. '    
' → logprob: -3.177450180053711
    4. 'n' → logprob: -3.927450180053711
    5. '
' → logprob: -4.052450180053711
    6. '\' → logprob: -6.052450180053711
    7. ' 
' → logprob: -6.677450180053711
    8. '   
' → logprob: -7.677450180053711
    9. 'input' → logprob: -8.427450180053711
    10. '```' → logprob: -8.427450180053711

Token 58: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06554306298494339
    2. '   ' → logprob: -3.0655431747436523
    3. ' n' → logprob: -4.440543174743652
    4. 'try' → logprob: -5.815543174743652
    5. 'import' → logprob: -6.690543174743652
    6. 'ent' → logprob: -8.940543174743652
    7. ' try' → logprob: -9.065543174743652
    8. '```' → logprob: -9.565543174743652
    9. '#' (adapté à ' #') → logprob: -9.815543174743652
    10. '    
' → logprob: -9.940543174743652

Token 59: ' Lire' (ID: 57624)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08478548377752304
    2. ' n' → logprob: -2.8347854614257812
    3. '   ' → logprob: -4.209785461425781
    4. ' ' → logprob: -6.209785461425781
    5. '#' → logprob: -6.709785461425781
    6. 'input' → logprob: -6.709785461425781
    7. ' input' → logprob: -6.959785461425781
    8. '_' → logprob: -7.709785461425781
    9. ' #' → logprob: -7.959785461425781
    10. 'i' → logprob: -8.834785461425781

Token 60: ' et' (ID: 859)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6046594381332397
    2. ' ' → logprob: -1.3546594381332397
    3. ' l' → logprob: -1.9796594381332397
    4. 'n' → logprob: -3.2296595573425293
    5. ' la' → logprob: -5.479659557342529
    6. 'l' → logprob: -5.604659557342529
    7. ' un' → logprob: -5.854659557342529
    8. '_' → logprob: -6.604659557342529
    9. ' le' → logprob: -6.604659557342529
    10. ' ' → logprob: -6.604659557342529

Token 61: ' ign' (ID: 8769)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2567141354084015
    2. '_' → logprob: -1.756714105606079
    3. 'n' → logprob: -3.256714105606079
    4. ' _' → logprob: -4.756714344024658
    5. ' int' → logprob: -5.506714344024658
    6. 'int' → logprob: -7.256714344024658
    7. ' input' → logprob: -7.756714344024658
    8. ' ent' → logprob: -8.0067138671875
    9. ' ' → logprob: -8.2567138671875
    10. ' ' → logprob: -8.8817138671875

Token 62: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.03376360610127449
    2. 'o' → logprob: -3.9087636470794678
    3. 'or' → logprob: -5.033763408660889
    4. 'ore' → logprob: -6.158763408660889
    5. 'e' → logprob: -6.658763408660889
    6. '   ' → logprob: -6.783763408660889
    7. 'er' → logprob: -7.408763408660889
    8. '```' → logprob: -8.033763885498047
    9. 'érer' → logprob: -8.908763885498047
    10. '	' → logprob: -9.283763885498047

Token 63: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0659058541059494
    2. '_' → logprob: -3.315905809402466
    3. ' l' → logprob: -4.065906047821045
    4. ' _' → logprob: -5.690906047821045
    5. '    ' → logprob: -6.315906047821045
    6. ' ' → logprob: -6.440906047821045
    7. 'l' → logprob: -6.690906047821045
    8. ' la' → logprob: -7.815906047821045
    9. '  ' → logprob: -8.315905570983887
    10. ' n' → logprob: -8.315905570983887

Token 64: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3116694986820221
    2. ' ' → logprob: -2.3116695880889893
    3. 'n' → logprob: -2.4366695880889893
    4. 'l' → logprob: -3.9366695880889893
    5. 'ent' → logprob: -4.68666934967041
    6. ' ligne' → logprob: -4.68666934967041
    7. ' n' → logprob: -4.81166934967041
    8. 'ligne' → logprob: -4.81166934967041
    9. '_' → logprob: -5.06166934967041
    10. ' premier' → logprob: -5.31166934967041

Token 65: ' valeur' (ID: 41664)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.061791304498910904
    2. ' ' → logprob: -3.06179141998291
    3. 'ligne' → logprob: -5.68679141998291
    4. '   ' → logprob: -5.81179141998291
    5. 'entrée' → logprob: -6.31179141998291
    6. ' valeur' → logprob: -6.56179141998291
    7. ' line' → logprob: -6.93679141998291
    8. ' input' → logprob: -7.43679141998291
    9. ' entrée' → logprob: -7.56179141998291
    10. '_' → logprob: -7.81179141998291

Token 66: ' d' (ID: 272)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0433565378189087
    2. '   ' → logprob: -1.5433565378189087
    3. '    
' → logprob: -2.043356418609619
    4. 'n' → logprob: -2.543356418609619
    5. '
' → logprob: -2.668356418609619
    6. '\' → logprob: -2.668356418609619
    7. ' 
' → logprob: -3.793356418609619
    8. '  
' → logprob: -4.418356418609619
    9. 'newline' → logprob: -4.793356418609619
    10. 'input' → logprob: -5.043356418609619

Token 67: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.1636926829814911
    2. 'e' → logprob: -2.1636927127838135
    3. 'entrée' → logprob: -3.5386927127838135
    4. ''ent' → logprob: -5.538692474365234
    5. ''' → logprob: -6.538692474365234
    6. '’entrée' → logprob: -7.913692474365234
    7. 'input' → logprob: -8.163692474365234
    8. ' entrée' → logprob: -8.413692474365234
    9. '_' → logprob: -8.913692474365234
    10. ' input' → logprob: -9.038692474365234

Token 68: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4821945130825043
    2. '
' → logprob: -2.232194423675537
    3. 'n' → logprob: -2.357194423675537
    4. '    
' → logprob: -2.357194423675537
    5. '\n' → logprob: -2.732194423675537
    6. '\' → logprob: -4.357194423675537
    7. 'input' → logprob: -5.982194423675537
    8. '```' → logprob: -6.732194423675537
    9. '  
' → logprob: -6.982194423675537
    10. '   
' → logprob: -7.107194423675537

Token 69: 'habit' (ID: 183262)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5927729606628418
    2. ')' → logprob: -2.092772960662842
    3. 'n' → logprob: -2.092772960662842
    4. 'int' → logprob: -2.467772960662842
    5. ' input' → logprob: -3.342772960662842
    6. 'i' → logprob: -3.967772960662842
    7. ' ' → logprob: -4.342772960662842
    8. 'l' → logprob: -4.467772960662842
    9. '   ' → logprob: -4.592772960662842
    10. 'e' → logprob: -5.467772960662842

Token 70: 'uellement' (ID: 36026)
  Prédit: 'uelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelle' → logprob: -0.524099588394165
    2. 'uée' → logprob: -1.524099588394165
    3. 'uel' → logprob: -2.649099588394165
    4. 'ée' → logprob: -3.024099588394165
    5. 'uellement' → logprob: -3.524099588394165
    6. 'ué' → logprob: -4.649099349975586
    7. 'ue' → logprob: -4.899099349975586
    8. 'é' → logprob: -5.024099349975586
    9. 'u' → logprob: -5.524099349975586
    10. '```' → logprob: -6.274099349975586

Token 71: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9947683215141296
    2. 'la' → logprob: -0.9947683215141296
    3. 'le' → logprob: -1.7447683811187744
    4. ' le' → logprob: -2.8697683811187744
    5. 'n' → logprob: -4.619768142700195
    6. 'nombre' → logprob: -5.244768142700195
    7. 'tail' → logprob: -5.744768142700195
    8. 't' → logprob: -5.994768142700195
    9. ' n' → logprob: -6.494768142700195
    10. ' ' → logprob: -6.994768142700195

Token 72: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.2388872504234314
    2. ' taille' → logprob: -2.238887310028076
    3. 'nombre' → logprob: -3.363887310028076
    4. ' longueur' → logprob: -3.988887310028076
    5. ' ' → logprob: -4.238887310028076
    6. 't' → logprob: -4.363887310028076
    7. '   ' → logprob: -5.238887310028076
    8. ' quantité' → logprob: -5.238887310028076
    9. 'n' → logprob: -5.738887310028076
    10. ' nombre' → logprob: -5.988887310028076

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5209540128707886
    2. ')' → logprob: -1.1459540128707886
    3. ' )' → logprob: -3.520954132080078
    4. '   ' → logprob: -3.520954132080078
    5. 'de' → logprob: -4.145954132080078
    6. ' du' → logprob: -5.395954132080078
    7. ' des' → logprob: -5.645954132080078
    8. ' ' → logprob: -5.895954132080078
    9. 'du' → logprob: -7.520954132080078
    10. '    ' → logprob: -7.645954132080078

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23790132999420166
    2. 'la' → logprob: -1.6129013299942017
    3. 'l' → logprob: -4.612901210784912
    4. ' l' → logprob: -6.487901210784912
    5. ' ' → logprob: -8.36290168762207
    6. ' the' → logprob: -8.86290168762207
    7. '```' → logprob: -9.61290168762207
    8. 'a' → logprob: -9.73790168762207
    9. ' ' → logprob: -9.73790168762207
    10. ' liste' → logprob: -9.73790168762207

Token 75: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.13625703752040863
    2. ' liste' → logprob: -2.1362569332122803
    3. 'entrée' → logprob: -5.386257171630859
    4. 'list' → logprob: -5.886257171630859
    5. 'l' → logprob: -7.261257171630859
    6. ' ' → logprob: -8.63625717163086
    7. 's' → logprob: -8.63625717163086
    8. '```' → logprob: -8.63625717163086
    9. '   ' → logprob: -9.26125717163086
    10. 'input' → logprob: -9.76125717163086

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5648840069770813
    2. '   ' → logprob: -1.1898839473724365
    3. '\n' → logprob: -2.1898839473724365
    4. '\' → logprob: -4.689884185791016
    5. '    
' → logprob: -6.439884185791016
    6. ')\' → logprob: -6.939884185791016
    7. 'n' → logprob: -7.439884185791016
    8. '`' → logprob: -7.689884185791016
    9. ' ' → logprob: -7.689884185791016
    10. ' )' → logprob: -7.689884185791016

Token 77: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0392143726348877
    2. '   ' → logprob: -1.1642143726348877
    3. '\' → logprob: -2.1642143726348877
    4. '\n' → logprob: -2.1642143726348877
    5. '    
' → logprob: -2.6642143726348877
    6. ' 
' → logprob: -4.664214134216309
    7. 'newline' → logprob: -5.039214134216309
    8. 'input' → logprob: -5.414214134216309
    9. '    ' → logprob: -6.164214134216309
    10. '
' → logprob: -6.414214134216309

Token 78: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' (adapté à ' _') → logprob: -0.043386682868003845
    2. 'n' → logprob: -3.418386697769165
    3. ' _' → logprob: -5.293386459350586
    4. ' ' → logprob: -6.668386459350586
    5. 'input' → logprob: -6.668386459350586
    6. 'i' → logprob: -7.543386459350586
    7. ' input' → logprob: -8.543386459350586
    8. '   ' → logprob: -8.543386459350586
    9. 'e' → logprob: -8.793386459350586
    10. ' n' → logprob: -9.043386459350586

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20633898675441742
    2. '=' → logprob: -1.7063390016555786
    3. ',' → logprob: -5.331338882446289
    4. '=input' → logprob: -10.456338882446289
    5. ' ' → logprob: -10.581338882446289
    6. ' ,' → logprob: -12.206338882446289
    7. '=int' → logprob: -12.956338882446289
    8. ' =
' → logprob: -13.081338882446289
    9. '  ' → logprob: -13.581338882446289
    10. '   ' → logprob: -13.581338882446289

Token 80: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3149557411670685
    2. ' int' → logprob: -1.314955711364746
    3. 'input' → logprob: -6.814955711364746
    4. ' input' → logprob: -7.439955711364746
    5. ' ' → logprob: -13.064955711364746
    6. 'in' → logprob: -13.814955711364746
    7. ' in' → logprob: -14.189955711364746
    8. '   ' → logprob: -14.314955711364746
    9. '```' → logprob: -14.439955711364746
    10. '(int' → logprob: -14.814955711364746

Token 81: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009339710813947022
    2. '(' → logprob: -7.00093412399292
    3. '()
' → logprob: -11.500933647155762
    4. '().' → logprob: -12.375933647155762
    5. '()

' → logprob: -12.875933647155762
    6. ' ()' → logprob: -13.375933647155762
    7. '()`' → logprob: -13.625933647155762
    8. '("")' → logprob: -14.625933647155762
    9. '()\' → logprob: -15.000933647155762
    10. '（）' → logprob: -15.250933647155762

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38321757316589355
    2. 'n' → logprob: -1.6332175731658936
    3. '    
' → logprob: -2.7582175731658936
    4. '
' → logprob: -4.008217811584473
    5. 'l' → logprob: -4.633217811584473
    6. 'lst' → logprob: -4.883217811584473
    7. 'list' → logprob: -5.133217811584473
    8. '```' → logprob: -5.758217811584473
    9. 'a' → logprob: -6.258217811584473
    10. '\n' → logprob: -6.258217811584473

Token 83: ' #' (ID: 1069)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.30156540870666504
    2. 'l' → logprob: -2.926565408706665
    3. 'numbers' → logprob: -2.926565408706665
    4. 'data' → logprob: -3.051565408706665
    5. 'values' → logprob: -3.176565408706665
    6. '#' (adapté à ' #') → logprob: -3.801565408706665
    7. 'liste' → logprob: -4.551565170288086
    8. 'n' → logprob: -4.676565170288086
    9. 'lines' → logprob: -5.176565170288086
    10. 'nums' → logprob: -5.301565170288086

Token 84: ' Lire' (ID: 57624)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.7235208749771118
    2. 'data' → logprob: -1.8485208749771118
    3. 'lst' → logprob: -1.8485208749771118
    4. ' data' → logprob: -2.2235207557678223
    5. 'l' → logprob: -2.7235207557678223
    6. ' values' → logprob: -2.7235207557678223
    7. ' lst' → logprob: -2.8485207557678223
    8. ' numbers' → logprob: -3.0985207557678223
    9. 'numbers' → logprob: -3.2235207557678223
    10. ' line' → logprob: -3.9735207557678223

Token 85: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.006524475757032633
    2. ' ' → logprob: -6.631524562835693
    3. ' une' → logprob: -6.756524562835693
    4. ' l' → logprob: -6.756524562835693
    5. ' lst' → logprob: -7.381524562835693
    6. ' les' → logprob: -8.131524085998535
    7. 'l' → logprob: -8.256524085998535
    8. 's' → logprob: -8.256524085998535
    9. '_' → logprob: -8.631524085998535
    10. ' list' → logprob: -9.006524085998535

Token 86: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.07905502617359161
    2. ' liste' → logprob: -2.704055070877075
    3. 's' → logprob: -5.954054832458496
    4. 'list' → logprob: -5.954054832458496
    5. ' ' → logprob: -6.829054832458496
    6. 'l' → logprob: -7.579054832458496
    7. 'ligne' → logprob: -7.704054832458496
    8. ' seconde' → logprob: -8.454054832458496
    9. 'lst' → logprob: -8.454054832458496
    10. ' deuxième' → logprob: -8.829054832458496

Token 87: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9090511798858643
    2. '()' → logprob: -1.1590511798858643
    3. ' =' → logprob: -2.1590511798858643
    4. '[' → logprob: -3.1590511798858643
    5. 's' → logprob: -3.6590511798858643
    6. '_' → logprob: -3.6590511798858643
    7. '(' → logprob: -4.034050941467285
    8. '[]' → logprob: -4.159050941467285
    9. '=' → logprob: -4.909050941467285
    10. 'l' → logprob: -5.784050941467285

Token 88: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.505713939666748
    2. 'e' → logprob: -1.130713939666748
    3. ''entrée' → logprob: -3.380713939666748
    4. ''' → logprob: -3.755713939666748
    5. 'es' → logprob: -6.005713939666748
    6. ''e' → logprob: -6.005713939666748
    7. ''entre' → logprob: -6.005713939666748
    8. '_ent' → logprob: -6.380713939666748
    9. ''en' → logprob: -6.630713939666748
    10. 'ent' → logprob: -6.755713939666748

Token 89: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00828855112195015
    2. 'ières' → logprob: -5.383288383483887
    3. 'i' → logprob: -6.133288383483887
    4. 't' → logprob: -6.883288383483887
    5. 'ier' → logprob: -9.258288383483887
    6. 'ière' → logprob: -9.258288383483887
    7. '   ' → logprob: -9.633288383483887
    8. '```' → logprob: -9.633288383483887
    9. 'ti' → logprob: -9.883288383483887
    10. 'r' → logprob: -10.508288383483887

Token 90: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4269236326217651
    2. '   ' → logprob: -1.4269236326217651
    3. 'lst' → logprob: -2.0519237518310547
    4. 'data' → logprob: -2.3019237518310547
    5. ' lst' → logprob: -2.4269237518310547
    6. 's' → logprob: -3.1769237518310547
    7. 'n' → logprob: -3.4269237518310547
    8. ' data' → logprob: -3.6769237518310547
    9. 'list' → logprob: -4.051923751831055
    10. ' integers' → logprob: -4.176923751831055

Token 91: ' les' (ID: 1341)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.2884048819541931
    2. ' l' → logprob: -2.413404941558838
    3. ' data' → logprob: -3.288404941558838
    4. ' list' → logprob: -3.288404941558838
    5. 'lst' → logprob: -3.788404941558838
    6. ' la' → logprob: -4.413404941558838
    7. 'l' → logprob: -4.538404941558838
    8. ' liste' → logprob: -5.038404941558838
    9. 'data' → logprob: -5.163404941558838
    10. 'list' → logprob: -5.288404941558838

Token 92: ' mapper' (ID: 43493)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3837333619594574
    2. ' split' → logprob: -1.7587333917617798
    3. 'split' → logprob: -2.3837332725524902
    4. '=' → logprob: -3.3837332725524902
    5. '.split' → logprob: -5.63373327255249
    6. 'spl' → logprob: -6.00873327255249
    7. '=int' → logprob: -6.25873327255249
    8. 'map' → logprob: -6.50873327255249
    9. ' map' → logprob: -6.88373327255249
    10. 's' → logprob: -7.00873327255249

Token 93: ' depuis' (ID: 16277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25033318996429443
    2. ' =' → logprob: -1.8753331899642944
    3. '=int' → logprob: -3.750333309173584
    4. '(' → logprob: -4.125333309173584
    5. '(int' → logprob: -5.000333309173584
    6. 'int' → logprob: -5.625333309173584
    7. ' en' → logprob: -6.125333309173584
    8. ' sur' → logprob: -6.125333309173584
    9. 's' → logprob: -6.625333309173584
    10. '(
' → logprob: -6.875333309173584

Token 94: ' input' (ID: 3422)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0288798809051514
    2. ' input' → logprob: -1.9038798809051514
    3. ' map' → logprob: -1.9038798809051514
    4. 'map' → logprob: -2.2788798809051514
    5. 'input' → logprob: -2.6538798809051514
    6. 'la' → logprob: -3.1538798809051514
    7. 'str' → logprob: -3.1538798809051514
    8. ' str' → logprob: -3.1538798809051514
    9. ' l' → logprob: -4.2788801193237305
    10. '   ' → logprob: -4.5288801193237305

Token 95: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.516746461391449
    2. '(' → logprob: -1.0167465209960938
    3. ',' → logprob: -4.766746520996094
    4. '(
' → logprob: -5.016746520996094
    5. '().' → logprob: -5.266746520996094
    6. '   ' → logprob: -5.266746520996094
    7. ' =' → logprob: -5.391746520996094
    8. '=' → logprob: -5.766746520996094
    9. '_' → logprob: -6.391746520996094
    10. 's' → logprob: -6.391746520996094

Token 96: ' puis' (ID: 18766)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.378682941198349
    2. 'split' → logprob: -2.003682851791382
    3. ' map' → logprob: -2.003682851791382
    4. ' list' → logprob: -4.878683090209961
    5. 'map' → logprob: -4.878683090209961
    6. ' tr' → logprob: -5.503683090209961
    7. ' la' → logprob: -5.503683090209961
    8. ' strip' → logprob: -5.628683090209961
    9. 'strip' → logprob: -5.753683090209961
    10. ' splitter' → logprob: -6.128683090209961

Token 97: ' la' (ID: 557)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.03929950296878815
    2. ' map' → logprob: -3.539299488067627
    3. 'list' → logprob: -5.164299488067627
    4. ' split' → logprob: -6.289299488067627
    5. 'map' → logprob: -7.289299488067627
    6. ' sorted' → logprob: -8.164299964904785
    7. 'split' → logprob: -8.164299964904785
    8. ' la' → logprob: -8.914299964904785
    9. ' liste' → logprob: -9.039299964904785
    10. ' ' → logprob: -9.789299964904785

Token 98: ' tr' (ID: 498)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6031177639961243
    2. 'sorted' → logprob: -1.8531177043914795
    3. 'sort' → logprob: -2.4781177043914795
    4. ' sorted' → logprob: -2.4781177043914795
    5. ' split' → logprob: -3.2281177043914795
    6. '.sort' → logprob: -3.7281177043914795
    7. 's' → logprob: -4.478117942810059
    8. '.split' → logprob: -4.728117942810059
    9. ' list' → logprob: -5.103117942810059
    10. 'tr' → logprob: -5.228117942810059

Token 99: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.2759721875190735
    2. 'i' → logprob: -1.5259721279144287
    3. 'ie' → logprob: -4.275972366333008
    4. 'iter' → logprob: -5.525972366333008
    5. 'ié' → logprob: -5.775972366333008
    6. 'e' → logprob: -8.150972366333008
    7. 'ière' → logprob: -8.150972366333008
    8. 'er' → logprob: -8.275972366333008
    9. 'ire' → logprob: -8.400972366333008
    10. 'is' → logprob: -8.400972366333008

Token 100: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4337881803512573
    2. 'lst' → logprob: -1.8087881803512573
    3. 'l' → logprob: -2.308788299560547
    4. 'liste' → logprob: -3.558788299560547
    5. 'ints' → logprob: -4.308788299560547
    6. ' lst' → logprob: -4.558788299560547
    7. ' integers' → logprob: -5.058788299560547
    8. 'lines' → logprob: -5.308788299560547
    9. 'numbers' → logprob: -5.808788299560547
    10. 'sorted' → logprob: -5.808788299560547

Token 101: ' ordre' (ID: 103061)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5568904876708984
    2. 'sorted' → logprob: -0.9318904876708984
    3. ' ordre' → logprob: -3.8068904876708984
    4. 'ordre' → logprob: -5.806890487670898
    5. ' la' → logprob: -6.306890487670898
    6. '(sorted' → logprob: -7.181890487670898
    7. 's' → logprob: -7.306890487670898
    8. 'def' → logprob: -7.431890487670898
    9. '   ' → logprob: -7.681890487670898
    10. 'ord' → logprob: -8.306890487670898

Token 102: ' cro' (ID: 11270)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.829189658164978
    2. 'cro' → logprob: -1.704189658164978
    3. 'asc' → logprob: -2.9541897773742676
    4. ' cro' → logprob: -3.0791897773742676
    5. ' sorted' → logprob: -3.0791897773742676
    6. ' asc' → logprob: -3.2041897773742676
    7. ' ascending' → logprob: -3.2041897773742676
    8. 'sorted' → logprob: -3.5791897773742676
    9. '   ' → logprob: -3.8291897773742676
    10. ' décro' → logprob: -4.454189777374268

Token 103: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -1.0932618379592896
    2. 'issance' → logprob: -1.3432618379592896
    3. 'issante' → logprob: -1.7182618379592896
    4. 'iss' → logprob: -2.09326171875
    5. 'is' → logprob: -2.96826171875
    6. 'issent' → logprob: -3.59326171875
    7. 'i' → logprob: -5.21826171875
    8. 'isse' → logprob: -5.34326171875
    9. 'nt' → logprob: -5.71826171875
    10. 'issement' → logprob: -6.21826171875

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1917373239994049
    2. 'lst' → logprob: -2.691737413406372
    3. 'l' → logprob: -3.191737413406372
    4. 'liste' → logprob: -3.941737413406372
    5. '    
' → logprob: -4.191737174987793
    6. 'n' → logprob: -5.066737174987793
    7. 's' → logprob: -5.316737174987793
    8. ' lst' → logprob: -5.566737174987793
    9. 'ints' → logprob: -5.691737174987793
    10. 'list' → logprob: -5.941737174987793

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1385248899459839
    2. 'lst' → logprob: -1.2635248899459839
    3. ' lst' → logprob: -1.7635248899459839
    4. 'l' → logprob: -2.1385250091552734
    5. 'liste' → logprob: -3.3885250091552734
    6. 'n' → logprob: -4.013525009155273
    7. 'numbers' → logprob: -4.513525009155273
    8. ' L' → logprob: -5.388525009155273
    9. 'list' → logprob: -5.513525009155273
    10. 'ints' → logprob: -5.638525009155273

Token 106: ' A' (ID: 355)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7961903214454651
    2. ' lst' → logprob: -1.6711902618408203
    3. 'numbers' → logprob: -2.1711902618408203
    4. '   ' → logprob: -3.0461902618408203
    5. ' numbers' → logprob: -3.1711902618408203
    6. 'nums' → logprob: -3.5461902618408203
    7. 'data' → logprob: -3.9211902618408203
    8. 'l' → logprob: -3.9211902618408203
    9. ' data' → logprob: -3.9211902618408203
    10. 'liste' → logprob: -4.04619026184082

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269364058971405
    2. '=' → logprob: -2.126936435699463
    3. 's' → logprob: -12.376935958862305
    4. '.' → logprob: -14.001935958862305
    5. ',' → logprob: -14.376935958862305
    6. '=[]' → logprob: -14.501935958862305
    7. ' ' → logprob: -14.876935958862305
    8. '_' → logprob: -15.001935958862305
    9. ' ' → logprob: -15.001935958862305
    10. '[:]' → logprob: -15.001935958862305

Token 108: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2620712220668793
    2. ' sorted' → logprob: -1.5120712518692017
    3. 'list' → logprob: -4.887071132659912
    4. ' list' → logprob: -6.012071132659912
    5. 'map' → logprob: -9.88707160949707
    6. '   ' → logprob: -11.26207160949707
    7. 's' → logprob: -11.76207160949707
    8. ' ' → logprob: -11.88707160949707
    9. '(sorted' → logprob: -12.01207160949707
    10. ' map' → logprob: -13.01207160949707

Token 109: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.4815540611743927
    2. '(map' → logprob: -1.2315540313720703
    3. '(' → logprob: -2.7315540313720703
    4. '(int' → logprob: -3.7315540313720703
    5. '([' → logprob: -6.73155403137207
    6. '(
' → logprob: -10.10655403137207
    7. 'list' → logprob: -12.10655403137207
    8. 'map' → logprob: -12.35655403137207
    9. '(

' → logprob: -12.60655403137207
    10. '((' → logprob: -12.85655403137207

Token 110: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005261749029159546
    2. '(' → logprob: -5.2552618980407715
    3. '(int' → logprob: -11.255261421203613
    4. '(
' → logprob: -11.380261421203613
    5. ' (' → logprob: -13.630261421203613
    6. 'map' → logprob: -14.130261421203613
    7. '   ' → logprob: -14.380261421203613
    8. '(

' → logprob: -15.255261421203613
    9. '	map' → logprob: -15.630261421203613
    10. ' map' → logprob: -16.00526237487793

Token 111: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0041238730773329735
    2. '(' → logprob: -5.504123687744141
    3. '(
' → logprob: -10.50412368774414
    4. 'int' → logprob: -11.12912368774414
    5. '<int' → logprob: -13.12912368774414
    6. '=int' → logprob: -14.50412368774414
    7. '[int' → logprob: -15.37912368774414
    8. ' int' → logprob: -15.75412368774414
    9. ']int' → logprob: -16.37912368774414
    10. ',int' → logprob: -16.62912368774414

Token 112: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0912083089351654
    2. '(' → logprob: -3.7162082195281982
    3. 'input' → logprob: -3.7162082195281982
    4. ',input' → logprob: -3.7162082195281982
    5. ',' → logprob: -4.341208457946777
    6. '(
' → logprob: -6.966208457946777
    7. ' input' → logprob: -9.466208457946777
    8. ')' → logprob: -10.716208457946777
    9. '(

' → logprob: -10.841208457946777
    10. '   ' → logprob: -10.841208457946777

Token 113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1271589696407318
    2. ' input' → logprob: -2.1271588802337646
    3. '   ' → logprob: -8.502159118652344
    4. ' ' → logprob: -10.877159118652344
    5. '(input' → logprob: -12.377159118652344
    6. '	input' → logprob: -13.252159118652344
    7. '  ' → logprob: -14.127159118652344
    8. ',input' → logprob: -14.252159118652344
    9. '    ' → logprob: -14.877159118652344
    10. '=input' → logprob: -15.127159118652344

Token 114: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000273971410933882
    2. '()' → logprob: -8.250273704528809
    3. '()
' → logprob: -12.375273704528809
    4. ')' → logprob: -12.625273704528809
    5. '())' → logprob: -13.500273704528809
    6. '())))' → logprob: -13.750273704528809
    7. '()))' → logprob: -14.000273704528809
    8. '(' → logprob: -14.250273704528809
    9. ' ().' → logprob: -14.875273704528809
    10. '   ' → logprob: -15.875273704528809

Token 115: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02326364815235138
    2. 'strip' → logprob: -3.773263692855835
    3. 'rstrip' → logprob: -11.023263931274414
    4. ' split' → logprob: -13.273263931274414
    5. '(split' → logprob: -16.273263931274414
    6. 'read' → logprob: -16.898263931274414
    7. ' strip' → logprob: -17.398263931274414
    8. ' ' → logprob: -17.523263931274414
    9. ')' → logprob: -18.023263931274414
    10. '.split' → logprob: -18.523263931274414

Token 116: '()))' (ID: 16829)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6706899404525757
    2. '())))' → logprob: -0.9206899404525757
    3. '()))' → logprob: -3.0456900596618652
    4. '()' → logprob: -3.2956900596618652
    5. '())' → logprob: -6.295690059661865
    6. '))))' → logprob: -6.670690059661865
    7. '))' → logprob: -6.670690059661865
    8. '())))
' → logprob: -7.545690059661865
    9. '(' → logprob: -7.795690059661865
    10. ')' → logprob: -8.045689582824707

Token 117: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31351491808891296
    2. ')' → logprob: -1.3135149478912354
    3. '   ' → logprob: -9.313514709472656
    4. '))
' → logprob: -9.313514709472656
    5. ')))' → logprob: -10.063514709472656
    6. ')
' → logprob: -11.313514709472656
    7. ' ))' → logprob: -11.688514709472656
    8. ' )' → logprob: -12.188514709472656
    9. '()))' → logprob: -13.563514709472656
    10. ' ' → logprob: -14.063514709472656

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3865775763988495
    2. '    
' → logprob: -2.011577606201172
    3. 'n' → logprob: -2.636577606201172
    4. '
' → logprob: -3.011577606201172
    5. '  
' → logprob: -4.011577606201172
    6. ' 
' → logprob: -4.136577606201172
    7. '\n' → logprob: -5.011577606201172
    8. ' ' → logprob: -5.261577606201172
    9. '   
' → logprob: -5.386577606201172
    10. 'd' → logprob: -6.136577606201172

Token 119: ' #' (ID: 1069)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7420544624328613
    2. 'm' → logprob: -1.3670544624328613
    3. 'n' → logprob: -1.4920544624328613
    4. 'middle' → logprob: -3.8670544624328613
    5. 'diff' → logprob: -5.492054462432861
    6. 'median' → logprob: -5.617054462432861
    7. 'result' → logprob: -5.742054462432861
    8. '   ' → logprob: -5.867054462432861
    9. 'if' → logprob: -6.492054462432861
    10. 'med' → logprob: -6.617054462432861

Token 120: ' Calcul' (ID: 57243)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3688678443431854
    2. 'mid' → logprob: -1.7438678741455078
    3. 'm' → logprob: -2.868867874145508
    4. ' n' → logprob: -3.868867874145508
    5. '#' → logprob: -4.243867874145508
    6. ' mid' → logprob: -4.493867874145508
    7. 'middle' → logprob: -4.618867874145508
    8. 'mil' → logprob: -5.243867874145508
    9. 'median' → logprob: -5.743867874145508
    10. 'if' → logprob: -6.368867874145508

Token 121: ' de' (ID: 334)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10049983859062195
    2. '_' → logprob: -2.8504998683929443
    3. '   ' → logprob: -3.3504998683929443
    4. 'e' → logprob: -6.600499629974365
    5. ' =' → logprob: -8.100500106811523
    6. ' de' → logprob: -8.475500106811523
    7. '=' → logprob: -8.975500106811523
    8. 'r' → logprob: -9.225500106811523
    9. ' _' → logprob: -9.475500106811523
    10. ' ' → logprob: -9.600500106811523

Token 122: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08726277202367783
    2. ' l' → logprob: -3.0872628688812256
    3. 'diff' → logprob: -4.8372626304626465
    4. ' len' → logprob: -5.2122626304626465
    5. ' abs' → logprob: -5.3372626304626465
    6. 'abs' → logprob: -5.8372626304626465
    7. ' A' → logprob: -5.8372626304626465
    8. 'difference' → logprob: -6.2122626304626465
    9. 'la' → logprob: -6.3372626304626465
    10. ' diff' → logprob: -6.3372626304626465

Token 123: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08270342648029327
    2. ''éc' → logprob: -2.7077033519744873
    3. 'e' → logprob: -4.582703590393066
    4. 'éc' → logprob: -7.332703590393066
    5. '   ' → logprob: -7.957703590393066
    6. ''é' → logprob: -8.457703590393066
    7. ''a' → logprob: -8.957703590393066
    8. 'ec' → logprob: -8.957703590393066
    9. '’éc' → logprob: -8.957703590393066
    10. ' a' → logprob: -9.082703590393066

Token 124: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.6420579552650452
    2. 'ex' → logprob: -0.8920579552650452
    3. 'é' → logprob: -3.2670578956604004
    4. 'e' → logprob: -4.3920578956604
    5. 'i' → logprob: -4.6420578956604
    6. 'éc' → logprob: -6.2670578956604
    7. '   ' → logprob: -7.8920578956604
    8. ' é' → logprob: -8.517058372497559
    9. '#' → logprob: -8.767058372497559
    10. ' ' → logprob: -8.767058372497559

Token 125: ' méd' (ID: 13387)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.1880167722702026
    2. '_c' → logprob: -1.6880167722702026
    3. 'mid' → logprob: -1.8130167722702026
    4. '_mid' → logprob: -2.313016891479492
    5. ' mid' → logprob: -2.813016891479492
    6. 'm' → logprob: -3.313016891479492
    7. 'mil' → logprob: -3.938016891479492
    8. ' central' → logprob: -4.063016891479492
    9. '_middle' → logprob: -4.063016891479492
    10. '_' → logprob: -4.313016891479492

Token 126: 'ian' (ID: 1200)
  Prédit: 'ia'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -1.0838556289672852
    2. '   ' → logprob: -1.2088556289672852
    3. 'ian' → logprob: -2.083855628967285
    4. '  ' → logprob: -2.458855628967285
    5. 'i' → logprob: -3.333855628967285
    6. '       ' → logprob: -4.083855628967285
    7. '    ' → logprob: -4.208855628967285
    8. '```' → logprob: -4.333855628967285
    9. 'e' → logprob: -4.583855628967285
    10. ' ' → logprob: -4.708855628967285

Token 127: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3328988254070282
    2. ' =' → logprob: -2.4578988552093506
    3. 'mid' → logprob: -2.9578988552093506
    4. 'm' → logprob: -3.2078988552093506
    5. 'n' → logprob: -3.8328988552093506
    6. ':' → logprob: -4.0828986167907715
    7. '   ' → logprob: -4.3328986167907715
    8. ' mid' → logprob: -4.4578986167907715
    9. ' m' → logprob: -4.9578986167907715
    10. '_' → logprob: -5.3328986167907715

Token 128: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6184653043746948
    2. ' A' → logprob: -0.9934653043746948
    3. ' la' → logprob: -3.1184654235839844
    4. 'len' → logprob: -3.3684654235839844
    5. ' len' → logprob: -4.618465423583984
    6. 'l' → logprob: -6.868465423583984
    7. 'la' → logprob: -7.118465423583984
    8. ' l' → logprob: -8.618465423583984
    9. '(len' → logprob: -8.868465423583984
    10. '(A' → logprob: -9.118465423583984

Token 129: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5380261540412903
    2. ' liste' → logprob: -0.9130261540412903
    3. 'A' → logprob: -4.913026332855225
    4. ' A' → logprob: -5.538026332855225
    5. 'list' → logprob: -6.163026332855225
    6. 'Liste' → logprob: -7.538026332855225
    7. 's' → logprob: -8.038025856018066
    8. ' list' → logprob: -8.788025856018066
    9. 'len' → logprob: -9.163025856018066
    10. ' ' → logprob: -9.288025856018066

Token 130: ' tri' (ID: 12665)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.086711049079895
    2. 'm' → logprob: -1.211711049079895
    3. ' mid' → logprob: -1.461711049079895
    4. 'n' → logprob: -2.9617109298706055
    5. ' n' → logprob: -4.0867109298706055
    6. '
' → logprob: -4.3367109298706055
    7. ' m' → logprob: -4.5867109298706055
    8. ' middle' → logprob: -4.9617109298706055
    9. ' 
' → logprob: -4.9617109298706055
    10. 'middle' → logprob: -4.9617109298706055

Token 131: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.020590705797076225
    2. 'é' → logprob: -4.145590782165527
    3. 'e' → logprob: -6.020590782165527
    4. 'ang' → logprob: -6.395590782165527
    5. 'st' → logprob: -9.145590782165527
    6. '-' → logprob: -9.645590782165527
    7. 'agée' → logprob: -10.145590782165527
    8. 'è' → logprob: -10.395590782165527
    9. 'angle' → logprob: -10.645590782165527
    10. 'ee' → logprob: -10.770590782165527

Token 132: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6545204520225525
    2. 'mid' → logprob: -1.6545205116271973
    3. ' mid' → logprob: -2.0295205116271973
    4. 'n' → logprob: -2.6545205116271973
    5. ' m' → logprob: -3.9045205116271973
    6. ' n' → logprob: -3.9045205116271973
    7. ' 
' → logprob: -4.529520511627197
    8. '
' → logprob: -4.779520511627197
    9. ' middle' → logprob: -5.279520511627197
    10. 'i' → logprob: -5.279520511627197

Token 133: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.333087682723999
    2. ' mid' → logprob: -2.083087682723999
    3. ' m' → logprob: -2.958087682723999
    4. 'mid' → logprob: -3.208087682723999
    5. 'n' → logprob: -3.583087682723999
    6. '   ' → logprob: -4.333087921142578
    7. ' n' → logprob: -4.583087921142578
    8. ' 
' → logprob: -5.583087921142578
    9. 'i' → logprob: -5.833087921142578
    10. ' i' → logprob: -6.208087921142578

Token 134: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.9426925778388977
    2. ' mid' → logprob: -1.442692518234253
    3. 'm' → logprob: -2.317692518234253
    4. 'n' → logprob: -2.317692518234253
    5. ' n' → logprob: -2.442692518234253
    6. 'median' → logprob: -3.067692518234253
    7. ' median' → logprob: -3.942692518234253
    8. ' m' → logprob: -4.692692756652832
    9. 'middle' → logprob: -4.817692756652832
    10. ' middle' → logprob: -5.442692756652832

Token 135: '_index' (ID: 7748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7761698961257935
    2. 'd' → logprob: -1.0261698961257935
    3. '_index' → logprob: -2.401169776916504
    4. '_idx' → logprob: -2.776169776916504
    5. '_' → logprob: -3.776169776916504
    6. '_ind' → logprob: -6.401169776916504
    7. '_d' → logprob: -6.401169776916504
    8. '=' → logprob: -6.401169776916504
    9. 'dex' → logprob: -8.901169776916504
    10. '_i' → logprob: -9.401169776916504

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020559990778565407
    2. '=' → logprob: -3.8955600261688232
    3. ' ' → logprob: -11.520560264587402
    4. '_' → logprob: -12.020560264587402
    5. ' =
' → logprob: -13.895560264587402
    6. 's' → logprob: -15.020560264587402
    7. ' ' → logprob: -15.145560264587402
    8. '1' → logprob: -16.145559310913086
    9. '   ' → logprob: -16.395559310913086
    10. '  ' → logprob: -16.395559310913086

Token 137: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.023453010246157646
    2. 'len' → logprob: -3.7734529972076416
    3. '(len' → logprob: -8.523452758789062
    4. ' (' → logprob: -12.523452758789062
    5. '[len' → logprob: -13.023452758789062
    6. '   ' → logprob: -13.398452758789062
    7. '	len' → logprob: -14.523452758789062
    8. ' ' → logprob: -15.148452758789062
    9. '=len' → logprob: -15.773452758789062
    10. '
' → logprob: -16.023452758789062

Token 138: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001033999491482973
    2. '(' → logprob: -6.876033782958984
    3. '(
' → logprob: -13.751033782958984
    4. 'A' → logprob: -16.501033782958984
    5. '(a' → logprob: -17.376033782958984
    6. '(

' → logprob: -17.376033782958984
    7. ' (' → logprob: -18.251033782958984
    8. '((' → logprob: -19.001033782958984
    9. '(S' → logprob: -19.001033782958984
    10. '(B' → logprob: -19.001033782958984

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08931576460599899
    2. ' //' → logprob: -2.71431565284729
    3. ')//' → logprob: -4.214315891265869
    4. '//' → logprob: -5.964315891265869
    5. ' )' → logprob: -6.339315891265869
    6. '()' → logprob: -9.964315414428711
    7. '   ' → logprob: -11.464315414428711
    8. ' ' → logprob: -11.714315414428711
    9. '(' → logprob: -12.839315414428711
    10. '[' → logprob: -13.214315414428711

Token 140: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.062262650579214096
    2. '//' → logprob: -2.812262535095215
    3. ' ' → logprob: -8.437262535095215
    4. ' //
' → logprob: -10.687262535095215
    5. '   ' → logprob: -11.562262535095215
    6. '2' → logprob: -11.812262535095215
    7. '`' → logprob: -12.062262535095215
    8. '"' → logprob: -12.062262535095215
    9. '()' → logprob: -12.312262535095215
    10. '```' → logprob: -12.312262535095215

Token 141: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.37508487701416
    4. '  ' → logprob: -17.125085830688477
    5. '۲' → logprob: -18.125085830688477
    6. '```' → logprob: -18.125085830688477
    7. '
' → logprob: -18.375085830688477
    8. '    ' → logprob: -20.062585830688477
    9. '２' → logprob: -20.250085830688477
    10. '२' → logprob: -20.375085830688477

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.125008583068848
    4. '```' → logprob: -17.00000762939453
    5. '۲' → logprob: -17.25000762939453
    6. '  ' → logprob: -17.75000762939453
    7. '
' → logprob: -18.25000762939453
    8. '２' → logprob: -18.68750762939453
    9. '२' → logprob: -19.37500762939453
    10. '٢' → logprob: -19.50000762939453

Token 143: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28183314204216003
    2. '   ' → logprob: -2.4068331718444824
    3. 'result' → logprob: -2.4068331718444824
    4. 'diff' → logprob: -3.2818331718444824
    5. '    
' → logprob: -4.406833171844482
    6. 'res' → logprob: -6.031833171844482
    7. 'difference' → logprob: -6.281833171844482
    8. '

' → logprob: -6.281833171844482
    9. 'print' → logprob: -6.406833171844482
    10. '  
' → logprob: -6.531833171844482

Token 144: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7377583384513855
    2. '   ' → logprob: -2.1127583980560303
    3. 'diff' → logprob: -2.1127583980560303
    4. 'print' → logprob: -2.3627583980560303
    5. 'if' → logprob: -2.4877583980560303
    6. 'res' → logprob: -3.4877583980560303
    7. '
' → logprob: -3.6127583980560303
    8. '    
' → logprob: -3.6127583980560303
    9. 'difference' → logprob: -5.487758159637451
    10. 'd' → logprob: -5.987758159637451

Token 145: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4340446889400482
    2. 'print' → logprob: -1.4340447187423706
    3. 'diff' → logprob: -2.309044599533081
    4. 'difference' → logprob: -5.05904483795166
    5. 'if' → logprob: -5.43404483795166
    6. 'res' → logprob: -6.18404483795166
    7. '#' (adapté à ' #') → logprob: -7.68404483795166
    8. 'answer' → logprob: -7.68404483795166
    9. 'd' → logprob: -8.80904483795166
    10. 'rés' → logprob: -8.93404483795166

Token 146: ' Calcul' (ID: 57243)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4522772431373596
    2. 'result' → logprob: -1.3272771835327148
    3. 'print' → logprob: -2.827277183532715
    4. '#' → logprob: -4.327277183532715
    5. 'difference' → logprob: -4.452277183532715
    6. 'res' → logprob: -5.327277183532715
    7. 'median' → logprob: -5.577277183532715
    8. 'val' → logprob: -6.452277183532715
    9. 'rés' → logprob: -6.452277183532715
    10. 'answer' → logprob: -7.827277183532715

Token 147: ' et' (ID: 859)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22183522582054138
    2. ' =' → logprob: -2.471835136413574
    3. '   ' → logprob: -3.221835136413574
    4. '_' → logprob: -3.471835136413574
    5. 'de' → logprob: -3.846835136413574
    6. '=' → logprob: -4.846835136413574
    7. 'diff' → logprob: -5.721835136413574
    8. 's' → logprob: -5.971835136413574
    9. '_de' → logprob: -6.596835136413574
    10. ' du' → logprob: -6.846835136413574

Token 148: ' affich' (ID: 90179)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7046784162521362
    2. ' affich' → logprob: -1.4546784162521362
    3. 'print' → logprob: -1.8296784162521362
    4. 'aff' → logprob: -2.579678535461426
    5. ' afficher' → logprob: -3.829678535461426
    6. ' affiche' → logprob: -5.329678535461426
    7. ' display' → logprob: -6.329678535461426
    8. ' aff' → logprob: -6.829678535461426
    9. '   ' → logprob: -7.329678535461426
    10. ' impression' → logprob: -7.579678535461426

Token 149: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.45880138874053955
    2. '   ' → logprob: -1.0838013887405396
    3. '(' → logprob: -4.45880126953125
    4. 'age' → logprob: -4.58380126953125
    5. 'e' → logprob: -5.58380126953125
    6. 'print' → logprob: -6.08380126953125
    7. '#' → logprob: -7.70880126953125
    8. '()' → logprob: -8.45880126953125
    9. '(e' → logprob: -8.95880126953125
    10. ' de' → logprob: -9.08380126953125

Token 150: ' de' (ID: 334)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.947455108165741
    2. '(A' → logprob: -1.1974551677703857
    3. 'abs' → logprob: -1.9474551677703857
    4. '(' → logprob: -2.4474551677703857
    5. 'print' → logprob: -2.9474551677703857
    6. '   ' → logprob: -3.8224551677703857
    7. ' abs' → logprob: -6.322454929351807
    8. ' print' → logprob: -6.572454929351807
    9. 'A' → logprob: -6.697454929351807
    10. ' (' → logprob: -6.822454929351807

Token 151: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.540938138961792
    2. ' A' → logprob: -0.915938138961792
    3. 'abs' → logprob: -4.415938377380371
    4. '(A' → logprob: -6.165938377380371
    5. ' abs' → logprob: -6.540938377380371
    6. 'print' → logprob: -7.415938377380371
    7. '(abs' → logprob: -7.540938377380371
    8. ' la' → logprob: -8.290938377380371
    9. 'l' → logprob: -8.540938377380371
    10. 'la' → logprob: -8.915938377380371

Token 152: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.08909039944410324
    2. 'print' → logprob: -2.964090347290039
    3. 'difference' → logprob: -4.089090347290039
    4. 'abs' → logprob: -5.089090347290039
    5. ' différence' → logprob: -5.089090347290039
    6. 'rés' → logprob: -6.089090347290039
    7. ' print' → logprob: -7.589090347290039
    8. ' diff' → logprob: -7.714090347290039
    9. 'éc' → logprob: -8.089090347290039
    10. 'result' → logprob: -8.214090347290039

Token 153: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02963106893002987
    2. '   ' → logprob: -3.6546311378479004
    3. ' print' → logprob: -5.9046311378479
    4. '-' → logprob: -8.904630661010742
    5. 'A' → logprob: -9.154630661010742
    6. ' between' → logprob: -9.279630661010742
    7. 'between' → logprob: -9.279630661010742
    8. ' A' → logprob: -10.404630661010742
    9. '```' → logprob: -11.154630661010742
    10. 'entre' → logprob: -11.404630661010742

Token 154: ' les' (ID: 1341)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6326422095298767
    2. 'A' → logprob: -0.7576422095298767
    3. ' ' → logprob: -11.257641792297363
    4. 'l' → logprob: -12.132641792297363
    5. '(A' → logprob: -12.382641792297363
    6. ' l' → logprob: -12.507641792297363
    7. '	A' → logprob: -12.507641792297363
    8. '   ' → logprob: -12.757641792297363
    9. ' ' → logprob: -13.507641792297363
    10. '(' → logprob: -13.507641792297363

Token 155: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34474843740463257
    2. ' A' → logprob: -2.0947484970092773
    3. 'de' → logprob: -2.7197484970092773
    4. 'élé' → logprob: -3.0947484970092773
    5. ' éléments' → logprob: -3.0947484970092773
    6. ' deux' → logprob: -4.719748497009277
    7. ' elements' → logprob: -6.594748497009277
    8. ' élément' → logprob: -7.969748497009277
    9. 'elements' → logprob: -8.219748497009277
    10. 'm' → logprob: -8.594748497009277

Token 156: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.6499826312065125
    2. 'élé' → logprob: -0.7749826312065125
    3. ' elements' → logprob: -5.024982452392578
    4. ' élément' → logprob: -5.649982452392578
    5. ' valeurs' → logprob: -6.399982452392578
    6. ' A' → logprob: -6.649982452392578
    7. 'val' → logprob: -7.149982452392578
    8. 'A' → logprob: -7.274982452392578
    9. 'elements' → logprob: -7.524982452392578
    10. 'mil' → logprob: -8.024982452392578

Token 157: ' centra' (ID: 89537)
  Prédit: '[mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.3543841540813446
    2. ' centra' → logprob: -1.854384183883667
    3. '[' → logprob: -2.479384183883667
    4. 'centr' → logprob: -4.354383945465088
    5. 'A' → logprob: -4.479383945465088
    6. ' A' → logprob: -4.729383945465088
    7. ' centrales' → logprob: -4.979383945465088
    8. ' centr' → logprob: -5.229383945465088
    9. '   ' → logprob: -6.354383945465088
    10. '[A' → logprob: -6.354383945465088

Token 158: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0023084578569978476
    2. 'u' → logprob: -6.627308368682861
    3. 'ls' → logprob: -8.00230884552002
    4. 'l' → logprob: -8.37730884552002
    5. 'aux' → logprob: -9.25230884552002
    6. '```' → logprob: -10.37730884552002
    7. '_' → logprob: -10.62730884552002
    8. 'uls' → logprob: -10.87730884552002
    9. 'les' → logprob: -11.00230884552002
    10. 't' → logprob: -11.00230884552002

Token 159: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06769153475761414
    2. '   ' → logprob: -2.8176915645599365
    3. '(' → logprob: -6.192691326141357
    4. 'A' → logprob: -6.942691326141357
    5. ' print' → logprob: -7.317691326141357
    6. '(A' → logprob: -8.192691802978516
    7. '[' → logprob: -8.317691802978516
    8. '()
' → logprob: -8.317691802978516
    9. '(
' → logprob: -8.692691802978516
    10. '```' → logprob: -9.067691802978516

Token 160: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07956641912460327
    2. '   ' → logprob: -2.579566478729248
    3. ' print' → logprob: -7.329566478729248
    4. '```' → logprob: -11.95456600189209
    5. '-' → logprob: -12.45456600189209
    6. 'if' → logprob: -13.32956600189209
    7. '    ' → logprob: -13.95456600189209
    8. '(' → logprob: -14.07956600189209
    9. '.' → logprob: -14.20456600189209
    10. '    
' → logprob: -14.20456600189209

Token 161: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02329951710999012
    2. ' print' → logprob: -3.7732994556427
    3. 'result' → logprob: -10.148299217224121
    4. 'diff' → logprob: -12.148299217224121
    5. 'pr' → logprob: -12.398299217224121
    6. 'prin' → logprob: -13.273299217224121
    7. ' result' → logprob: -13.398299217224121
    8. '   ' → logprob: -14.398299217224121
    9. 'difference' → logprob: -14.523299217224121
    10. 'if' → logprob: -14.648299217224121

Token 162: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020548582542687654
    2. ' print' → logprob: -6.377054691314697
    3. 'result' → logprob: -8.127055168151855
    4. 'diff' → logprob: -10.127055168151855
    5. 'if' → logprob: -11.627055168151855
    6. 'difference' → logprob: -12.377055168151855
    7. ' result' → logprob: -13.252055168151855
    8. ' if' → logprob: -14.752055168151855
    9. '   ' → logprob: -14.752055168151855
    10. '```' → logprob: -14.877055168151855

Token 163: ' une' (ID: 2463)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3757246732711792
    2. 'len' → logprob: -1.3757246732711792
    3. 'A' → logprob: -2.0007247924804688
    4. ' une' → logprob: -2.1257247924804688
    5. ' i' → logprob: -2.8757247924804688
    6. ' len' → logprob: -3.3757247924804688
    7. ' A' → logprob: -3.8757247924804688
    8. 'les' → logprob: -3.8757247924804688
    9. '_' → logprob: -4.000724792480469
    10. 'une' → logprob: -4.250724792480469

Token 164: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.187148317694664
    2. ' liste' → logprob: -1.8121483325958252
    3. 'list' → logprob: -5.312148094177246
    4. '   ' → logprob: -6.937148094177246
    5. ' ' → logprob: -8.312148094177246
    6. ' list' → logprob: -8.437148094177246
    7. '#' → logprob: -8.562148094177246
    8. ' longueur' → logprob: -9.062148094177246
    9. 'long' → logprob: -9.437148094177246
    10. 'len' → logprob: -9.437148094177246

Token 165: ' à' (ID: 1221)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8912870287895203
    2. ' de' → logprob: -1.141287088394165
    3. 'd' → logprob: -2.016287088394165
    4. ' d' → logprob: -3.141287088394165
    5. 'pair' → logprob: -3.266287088394165
    6. ' paire' → logprob: -3.266287088394165
    7. ' à' → logprob: -5.141286849975586
    8. ' pair' → logprob: -5.641286849975586
    9. ' ' → logprob: -6.141286849975586
    10. 'def' → logprob: -6.641286849975586

Token 166: ' nombre' (ID: 9733)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.7055609822273254
    2. ' longueur' → logprob: -1.3305609226226807
    3. 'tail' → logprob: -1.8305609226226807
    4. 'nombre' → logprob: -3.4555609226226807
    5. ' taille' → logprob: -4.45556116104126
    6. 'indice' → logprob: -5.20556116104126
    7. 'length' → logprob: -5.33056116104126
    8. '   ' → logprob: -5.58056116104126
    9. 'n' → logprob: -5.83056116104126
    10. ' ' → logprob: -5.95556116104126

Token 167: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.1925453543663025
    2. ' pair' → logprob: -1.8175454139709473
    3. ' ' → logprob: -5.442545413970947
    4. ' paire' → logprob: -5.442545413970947
    5. 'd' → logprob: -6.442545413970947
    6. '_pair' → logprob: -7.442545413970947
    7. 'pa' → logprob: -7.442545413970947
    8. 'pairs' → logprob: -7.817545413970947
    9. ' d' → logprob: -8.817544937133789
    10. ' impair' → logprob: -9.067544937133789

Token 168: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.001089096069336
    2. ' d' → logprob: -1.001089096069336
    3. ',' → logprob: -2.001089096069336
    4. 's' → logprob: -3.001089096069336
    5. '   ' → logprob: -3.501089096069336
    6. 'A' → logprob: -3.876089096069336
    7. ':' → logprob: -5.001089096069336
    8. '#' → logprob: -5.501089096069336
    9. ' A' → logprob: -5.751089096069336
    10. 'elements' → logprob: -6.001089096069336

Token 169: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.03822222352027893
    2. ''' → logprob: -3.663222312927246
    3. ' éléments' → logprob: -4.913222312927246
    4. ''é' → logprob: -6.538222312927246
    5. ' ' → logprob: -6.788222312927246
    6. 'é' → logprob: -7.538222312927246
    7. 'elements' → logprob: -8.413222312927246
    8. 'él' → logprob: -8.663222312927246
    9. 'e' → logprob: -8.788222312927246
    10. '   ' → logprob: -9.288222312927246

Token 170: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.018557829782366753
    2. ' éléments' → logprob: -4.268558025360107
    3. ''' → logprob: -6.393558025360107
    4. 'él' → logprob: -7.018558025360107
    5. ' ' → logprob: -7.018558025360107
    6. 'é' → logprob: -8.26855754852295
    7. 'elements' → logprob: -8.39355754852295
    8. ''é' → logprob: -9.89355754852295
    9. '#' → logprob: -10.01855754852295
    10. 'el' → logprob: -10.01855754852295

Token 171: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00656663766130805
    2. 'lé' → logprob: -5.256566524505615
    3. 'ment' → logprob: -7.506566524505615
    4. 'lements' → logprob: -7.631566524505615
    5. 'l' → logprob: -8.756567001342773
    6. 'éments' → logprob: -10.131567001342773
    7. 'nts' → logprob: -10.631567001342773
    8. 'lems' → logprob: -11.006567001342773
    9. 'mé' → logprob: -11.006567001342773
    10. 'ements' → logprob: -11.881567001342773

Token 172: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42477676272392273
    2. ',' → logprob: -1.2997767925262451
    3. 'print' → logprob: -3.424776792526245
    4. ':' → logprob: -3.924776792526245
    5. 's' → logprob: -4.799776554107666
    6. '
' → logprob: -5.549776554107666
    7. ' print' → logprob: -6.549776554107666
    8. '[' → logprob: -6.674776554107666
    9. '    
' → logprob: -7.174776554107666
    10. ' :' → logprob: -7.549776554107666

Token 173: ' mid' (ID: 6959)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10319152474403381
    2. ' print' → logprob: -2.353191614151001
    3. 'diff' → logprob: -6.728191375732422
    4. '   ' → logprob: -7.228191375732422
    5. 'result' → logprob: -7.228191375732422
    6. ' result' → logprob: -8.728191375732422
    7. 'difference' → logprob: -9.228191375732422
    8. ' diff' → logprob: -10.603191375732422
    9. ' difference' → logprob: -11.603191375732422
    10. '```' → logprob: -12.228191375732422

Token 174: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004388102330267429
    2. '_' → logprob: -5.504388332366943
    3. '-' → logprob: -9.004387855529785
    4. '_indices' → logprob: -10.754387855529785
    5. '_-' → logprob: -11.004387855529785
    6. 's' → logprob: -11.379387855529785
    7. ' _' → logprob: -11.379387855529785
    8. '   ' → logprob: -11.629387855529785
    9. 'e' → logprob: -11.879387855529785
    10. '_ind' → logprob: -11.879387855529785

Token 175: ' et' (ID: 859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07365255802869797
    2. ' -' → logprob: -2.698652505874634
    3. '<|end|>' → logprob: -6.073652744293213
    4. ' =' → logprob: -8.448652267456055
    5. ' -=' → logprob: -8.823652267456055
    6. ' is' → logprob: -9.198652267456055
    7. '<|end|>' → logprob: -9.198652267456055
    8. '=' → logprob: -9.198652267456055
    9. 's' → logprob: -9.448652267456055
    10. '```' → logprob: -9.698652267456055

Token 176: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.34866949915885925
    2. 'mid' → logprob: -1.2236695289611816
    3. '(mid' → logprob: -8.473669052124023
    4. '[mid' → logprob: -11.473669052124023
    5. '-' → logprob: -13.723669052124023
    6. '-mid' → logprob: -13.973669052124023
    7. ' (' → logprob: -14.348669052124023
    8. '_mid' → logprob: -14.348669052124023
    9. ' midpoint' → logprob: -14.473669052124023
    10. '.mid' → logprob: -14.473669052124023

Token 177: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0023573332000523806
    2. '_' → logprob: -6.252357482910156
    3. '_-' → logprob: -9.002357482910156
    4. '-' → logprob: -9.627357482910156
    5. '-_' → logprob: -9.627357482910156
    6. ' _' → logprob: -9.877357482910156
    7. 'index' → logprob: -10.627357482910156
    8. '__' → logprob: -10.752357482910156
    9. '_i' → logprob: -11.127357482910156
    10. '_ind' → logprob: -11.377357482910156

Token 178: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20156382024288177
    2. ' -' → logprob: -1.701563835144043
    3. '<|end|>' → logprob: -9.201563835144043
    4. ' ' → logprob: -10.701563835144043
    5. '<|end|>' → logprob: -11.576563835144043
    6. '1' → logprob: -12.326563835144043
    7. '   ' → logprob: -12.576563835144043
    8. '```' → logprob: -12.576563835144043
    9. ' ' → logprob: -13.701563835144043
    10. '	' → logprob: -14.326563835144043

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024817234370857477
    2. ' ' → logprob: -6.002481937408447
    3. '```' → logprob: -13.127481460571289
    4. '   ' → logprob: -13.377481460571289
    5. '<|end|>' → logprob: -13.752481460571289
    6. '  ' → logprob: -14.877481460571289
    7. '    ' → logprob: -15.127481460571289
    8. '2' → logprob: -15.627481460571289
    9. ' ' → logprob: -16.06498146057129
    10. '0' → logprob: -16.43998146057129

Token 180: ' seront' (ID: 35024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28276321291923523
    2. ' ]' → logprob: -2.0327632427215576
    3. ')' → logprob: -2.9077632427215576
    4. '<|end|>' → logprob: -3.4077632427215576
    5. ' ' → logprob: -4.2827630043029785
    6. ')]' → logprob: -6.4077630043029785
    7. ' are' → logprob: -6.5327630043029785
    8. ':' → logprob: -6.9077630043029785
    9. '[' → logprob: -6.9077630043029785
    10. '<|end|>' → logprob: -6.9077630043029785

Token 181: ' les' (ID: 1341)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8390504717826843
    2. '<|end|>' → logprob: -1.464050531387329
    3. ' les' → logprob: -1.839050531387329
    4. 'les' → logprob: -2.339050531387329
    5. ' adj' → logprob: -4.08905029296875
    6. ' adjacent' → logprob: -4.08905029296875
    7. ' utilisés' → logprob: -4.08905029296875
    8. ' used' → logprob: -5.46405029296875
    9. 'exact' → logprob: -5.46405029296875
    10. ' des' → logprob: -5.83905029296875

Token 182: ' deux' (ID: 10301)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0765178203582764
    2. 'indices' → logprob: -1.2015178203582764
    3. 'élé' → logprob: -1.8265178203582764
    4. 'de' → logprob: -2.4515178203582764
    5. ' deux' → logprob: -2.8265178203582764
    6. ' éléments' → logprob: -3.5765178203582764
    7. ' elements' → logprob: -5.0765180587768555
    8. ' two' → logprob: -5.2015180587768555
    9. 'indexes' → logprob: -5.9515180587768555
    10. '<|end|>' → logprob: -5.9515180587768555

Token 183: ' éléments' (ID: 57375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' centra' (ID: 89537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.00160032173153013
    2. 'ls' → logprob: -7.00160026550293
    3. 'l' → logprob: -7.75160026550293
    4. 'u' → logprob: -8.50160026550293
    5. 'aux' → logprob: -10.25160026550293
    6. '```' → logprob: -12.12660026550293
    7. 'les' → logprob: -13.12660026550293
    8. 'UX' → logprob: -13.50160026550293
    9. 'lx' → logprob: -13.50160026550293
    10. '   ' → logprob: -13.62660026550293

Token 186: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06554005295038223
    2. '   ' → logprob: -2.815540075302124
    3. ' print' → logprob: -5.690539836883545
    4. '```' → logprob: -9.690540313720703
    5. '
' → logprob: -9.815540313720703
    6. '	print' → logprob: -10.815540313720703
    7. '    
' → logprob: -11.065540313720703
    8. ' ' → logprob: -12.065540313720703
    9. 'if' → logprob: -12.565540313720703
    10. '  ' → logprob: -12.690540313720703

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42987462878227234
    2. 'print' → logprob: -1.0548746585845947
    3. ' print' → logprob: -6.804874420166016
    4. '    
' → logprob: -10.554874420166016
    5. '```' → logprob: -10.804874420166016
    6. '
' → logprob: -12.304874420166016
    7. ')' → logprob: -12.679874420166016
    8. '	print' → logprob: -12.804874420166016
    9. ',' → logprob: -13.929874420166016
    10. '.print' → logprob: -14.054874420166016

Token 188: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003017385315615684
    2. ' print' → logprob: -8.625301361083984
    3. '   ' → logprob: -9.250301361083984
    4. 'result' → logprob: -10.875301361083984
    5. '```' → logprob: -12.375301361083984
    6. 'prin' → logprob: -14.375301361083984
    7. 'diff' → logprob: -14.500301361083984
    8. '
' → logprob: -14.625301361083984
    9. 'if' → logprob: -15.125301361083984
    10. 'pr' → logprob: -15.250301361083984

Token 189: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018305160105228424
    2. '(' → logprob: -4.01830530166626
    3. '(abs' → logprob: -9.393304824829102
    4. '(
' → logprob: -9.643304824829102
    5. '((' → logprob: -12.393304824829102
    6. ' (' → logprob: -14.393304824829102
    7. '("' → logprob: -14.393304824829102
    8. 'A' → logprob: -14.393304824829102
    9. '(

' → logprob: -14.643304824829102
    10. '('' → logprob: -15.393304824829102

Token 190: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -11.625016212463379
    3. '[m' → logprob: -12.750016212463379
    4. 'mid' → logprob: -13.250016212463379
    5. ')' → logprob: -14.000016212463379
    6. ' [' → logprob: -14.250016212463379
    7. '[
' → logprob: -15.250016212463379
    8. ' mid' → logprob: -16.125015258789062
    9. '[mem' → logprob: -16.125015258789062
    10. '(mid' → logprob: -16.250015258789062

Token 191: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -7.707997428951785e-05
    2. '_' → logprob: -10.875077247619629
    3. '_i' → logprob: -11.500077247619629
    4. ' _' → logprob: -11.625077247619629
    5. '-' → logprob: -12.125077247619629
    6. 'index' → logprob: -12.250077247619629
    7. '_idx' → logprob: -12.375077247619629
    8. '_x' → logprob: -12.750077247619629
    9. '_ind' → logprob: -13.000077247619629
    10. 'x' → logprob: -13.000077247619629

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012193855829536915
    2. ' ]' → logprob: -5.38719367980957
    3. ']-' → logprob: -5.63719367980957
    4. '-' → logprob: -5.88719367980957
    5. ' -' → logprob: -6.76219367980957
    6. '])' → logprob: -10.38719367980957
    7. '[' → logprob: -12.26219367980957
    8. '])-' → logprob: -12.38719367980957
    9. ')' → logprob: -12.51219367980957
    10. ']
' → logprob: -13.26219367980957

Token 193: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06349335610866547
    2. '-' → logprob: -2.813493251800537
    3. ')' → logprob: -6.688493251800537
    4. '-A' → logprob: -8.938493728637695
    5. ' ' → logprob: -9.813493728637695
    6. ' )' → logprob: -10.188493728637695
    7. ' -
' → logprob: -10.813493728637695
    8. '[' → logprob: -11.313493728637695
    9. '   ' → logprob: -12.188493728637695
    10. ')-' → logprob: -12.188493728637695

Token 194: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931508779525757
    2. ' A' → logprob: -0.6931508779525757
    3. ' ' → logprob: -12.818150520324707
    4. '	A' → logprob: -14.568150520324707
    5. ')' → logprob: -15.318150520324707
    6. ' ' → logprob: -16.443151473999023
    7. '1' → logprob: -16.693151473999023
    8. '   ' → logprob: -17.318151473999023
    9. '<|end|>' → logprob: -17.443151473999023
    10. '(A' → logprob: -17.818151473999023

Token 195: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -2.6895233531831764e-05
    2. '[' → logprob: -11.00002670288086
    3. '[-' → logprob: -11.62502670288086
    4. '[_' → logprob: -14.62502670288086
    5. '[
' → logprob: -15.37502670288086
    6. 'mid' → logprob: -15.87502670288086
    7. '[m' → logprob: -16.00002670288086
    8. ' [' → logprob: -16.25002670288086
    9. '[mem' → logprob: -17.25002670288086
    10. '_mid' → logprob: -17.87502670288086

Token 196: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001366744691040367
    2. 'index' → logprob: -9.750136375427246
    3. 'ex' → logprob: -10.250136375427246
    4. 'nd' → logprob: -11.375136375427246
    5. '-' → logprob: -11.500136375427246
    6. 'Index' → logprob: -11.750136375427246
    7. 'dex' → logprob: -13.000136375427246
    8. '_' → logprob: -13.375136375427246
    9. '_idx' → logprob: -13.500136375427246
    10. 's' → logprob: -14.125136375427246

Token 197: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048289015889168
    2. ' -' → logprob: -4.511048316955566
    3. '1' → logprob: -14.636048316955566
    4. ')' → logprob: -17.76104736328125
    5. ' ' → logprob: -18.63604736328125
    6. '```' → logprob: -18.88604736328125
    7. '-)' → logprob: -19.13604736328125
    8. '−' → logprob: -19.13604736328125
    9. '()-' → logprob: -19.63604736328125
    10. '2' → logprob: -19.63604736328125

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '<|end|>' → logprob: -14.500296592712402
    4. '   ' → logprob: -16.12529754638672
    5. '```' → logprob: -18.00029754638672
    6. ']' → logprob: -18.00029754638672
    7. '0' → logprob: -18.50029754638672
    8. '  ' → logprob: -18.50029754638672
    9. ')' → logprob: -19.62529754638672
    10. '<|end|>' → logprob: -20.00029754638672

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -17.500001907348633
    5. ']' → logprob: -19.125001907348633
    6. ')' → logprob: -19.562501907348633
    7. '<|end|>' → logprob: -20.312501907348633
    8. '１' → logprob: -20.500001907348633
    9. '`' → logprob: -20.750001907348633
    10. '  ' → logprob: -20.812501907348633

Token 200: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.017927029868588e-05
    2. '))' → logprob: -9.500080108642578
    3. '])' → logprob: -12.750080108642578
    4. ')
' → logprob: -13.875080108642578
    5. ' )' → logprob: -14.750080108642578
    6. '})' → logprob: -15.250080108642578
    7. ')`' → logprob: -15.625080108642578
    8. ')")' → logprob: -15.625080108642578
    9. '')' → logprob: -16.375080108642578
    10. '`)' → logprob: -16.500080108642578

Token 201: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0018230968853458762
    2. '__' → logprob: -6.6268229484558105
    3. ' ' → logprob: -7.7518229484558105
    4. '_' → logprob: -10.126823425292969
    5. ' _' → logprob: -11.126823425292969
    6. ' ' → logprob: -12.126823425292969
    7. ' ​' → logprob: -13.126823425292969
    8. ' ___' → logprob: -13.751823425292969
    9. ' ' → logprob: -13.876823425292969
    10. ' main' → logprob: -14.376823425292969

Token 203: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06851261109113693
    2. ' ==' → logprob: -3.5685126781463623
    3. ' __' → logprob: -3.8185126781463623
    4. '.__' → logprob: -5.568512439727783
    5. '.' → logprob: -5.693512439727783
    6. ' .' → logprob: -6.068512439727783
    7. '==' → logprob: -6.318512439727783
    8. '__.__' → logprob: -6.443512439727783
    9. '__.' → logprob: -6.818512439727783
    10. '_' → logprob: -7.193512439727783

Token 204: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007561430102214217
    2. '__.__' → logprob: -7.25075626373291
    3. '==' → logprob: -10.50075626373291
    4. '__.' → logprob: -11.00075626373291
    5. ' ==' → logprob: -14.62575626373291
    6. '__["' → logprob: -14.75075626373291
    7. '.__' → logprob: -15.50075626373291
    8. '___' → logprob: -15.75075626373291
    9. '_' → logprob: -15.87575626373291
    10. '=="' → logprob: -16.125755310058594

Token 205: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06532945483922958
    2. '__' → logprob: -3.3153295516967773
    3. '==' → logprob: -3.6903295516967773
    4. '.__' → logprob: -6.940329551696777
    5. '=="' → logprob: -7.690329551696777
    6. '.' → logprob: -7.940329551696777
    7. '__.__' → logprob: -9.815329551696777
    8. '_' → logprob: -10.565329551696777
    9. ' .' → logprob: -10.815329551696777
    10. ' =="' → logprob: -11.440329551696777

Token 206: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12727832794189453
    2. ''' → logprob: -2.1272783279418945
    3. ' "' → logprob: -8.127278327941895
    4. ' '' → logprob: -10.252278327941895
    5. '__' → logprob: -11.752278327941895
    6. ' "__' → logprob: -11.752278327941895
    7. '_' → logprob: -13.377278327941895
    8. ' '__' → logprob: -14.502278327941895
    9. ' ' → logprob: -14.627278327941895
    10. ' ' → logprob: -15.377278327941895

Token 207: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03630445897579193
    2. '__' → logprob: -3.536304473876953
    3. 'name' → logprob: -5.036304473876953
    4. '__':
' → logprob: -10.661304473876953
    5. '_main' → logprob: -12.161304473876953
    6. '__.' → logprob: -12.911304473876953
    7. 'm' → logprob: -13.786304473876953
    8. '___' → logprob: -14.411304473876953
    9. '_' → logprob: -14.786304473876953
    10. ' __' → logprob: -15.411304473876953

Token 208: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132725954055786
    2. '__':
' → logprob: -1.3132725954055786
    3. '_' → logprob: -11.563272476196289
    4. '__":
' → logprob: -14.438272476196289
    5. '__:' → logprob: -14.938272476196289
    6. '___' → logprob: -15.563272476196289
    7. '__.' → logprob: -16.06327247619629
    8. '__('' → logprob: -16.18827247619629
    9. ''' → logprob: -16.81327247619629
    10. '':' → logprob: -17.18827247619629

Token 209: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011342529207468033
    2. 'main' → logprob: -4.761342525482178
    3. '	main' → logprob: -6.511342525482178
    4. '   ' → logprob: -6.886342525482178
    5. '    
' → logprob: -9.386343002319336
    6. '(main' → logprob: -10.011343002319336
    7. '<|end|>' → logprob: -10.261343002319336
    8. ' 
' → logprob: -10.761343002319336
    9. ' ' → logprob: -11.636343002319336
    10. '_main' → logprob: -11.761343002319336

Token 210: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06196993216872215
    2. ' main' → logprob: -2.8119699954986572
    3. '	main' → logprob: -13.436969757080078
    4. 'm' → logprob: -15.436969757080078
    5. '   ' → logprob: -16.061969757080078
    6. '.main' → logprob: -16.311969757080078
    7. 'ma' → logprob: -16.311969757080078
    8. '(main' → logprob: -16.311969757080078
    9. '_main' → logprob: -16.561969757080078
    10. 'maine' → logprob: -17.186969757080078

Token 211: ' Si' (ID: 7832)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01604410633444786
    2. ' main' → logprob: -4.1410441398620605
    3. 'm' → logprob: -12.266043663024902
    4. '   ' → logprob: -13.141043663024902
    5. '	main' → logprob: -13.266043663024902
    6. 'ma' → logprob: -14.891043663024902
    7. 'import' → logprob: -15.516043663024902
    8. ' ' → logprob: -15.641043663024902
    9. '(main' → logprob: -16.14104461669922
    10. 'maine' → logprob: -16.39104461669922

Token 212: ' ce' (ID: 2357)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08029431104660034
    2. '__' → logprob: -2.580294370651245
    3. ' True' → logprob: -7.455294132232666
    4. '_' → logprob: -7.580294132232666
    5. ' ' → logprob: -8.830294609069824
    6. ' ' → logprob: -9.330294609069824
    7. 'True' → logprob: -10.205294609069824
    8. ' _' → logprob: -10.330294609069824
    9. '  ' → logprob: -12.330294609069824
    10. '___' → logprob: -13.830294609069824

Token 213: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4991053640842438
    2. ' __' → logprob: -1.1241053342819214
    3. '_' → logprob: -2.999105453491211
    4. ' ==' → logprob: -4.749105453491211
    5. ' _' → logprob: -6.124105453491211
    6. ' ' → logprob: -6.749105453491211
    7. ' script' → logprob: -6.874105453491211
    8. '==' → logprob: -6.999105453491211
    9. ' ' → logprob: -7.124105453491211
    10. ' fichier' → logprob: -7.249105453491211

Token 214: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1755681186914444
    2. ' __' → logprob: -2.300568103790283
    3. '__' → logprob: -3.300568103790283
    4. ' est' → logprob: -4.175568103790283
    5. '==' → logprob: -5.175568103790283
    6. 'est' → logprob: -6.300568103790283
    7. 'name' → logprob: -7.925568103790283
    8. ' ===' → logprob: -8.175568580627441
    9. ' ' → logprob: -9.175568580627441
    10. ' is' → logprob: -9.425568580627441

Token 215: ' exécut' (ID: 165350)
  Prédit: ' exécut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exécut' → logprob: -0.10970544070005417
    2. ' __' → logprob: -2.4847054481506348
    3. '__' → logprob: -4.359705448150635
    4. 'execut' → logprob: -5.984705448150635
    5. ' le' → logprob: -6.609705448150635
    6. 'ex' → logprob: -6.734705448150635
    7. ' executed' → logprob: -6.734705448150635
    8. 'le' → logprob: -7.734705448150635
    9. ' run' → logprob: -8.109704971313477
    10. ' execut' → logprob: -8.734704971313477

Token 216: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3656322658061981
    2. ' en' → logprob: -1.4906322956085205
    3. ' __' → logprob: -3.2406322956085205
    4. ' directement' → logprob: -4.240632057189941
    5. '_' → logprob: -4.865632057189941
    6. '   ' → logprob: -4.990632057189941
    7. 'direct' → logprob: -5.990632057189941
    8. ' comme' → logprob: -6.365632057189941
    9. 'é' → logprob: -6.365632057189941
    10. 'en' → logprob: -6.490632057189941

Token 217: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.090192198753357
    2. 'direct' → logprob: -1.340192198753357
    3. ' directement' → logprob: -1.715192198753357
    4. ' as' → logprob: -2.3401923179626465
    5. 'en' → logprob: -2.4651923179626465
    6. 'as' → logprob: -4.4651923179626465
    7. '   ' → logprob: -4.4651923179626465
    8. ',' → logprob: -5.3401923179626465
    9. ' directly' → logprob: -5.5901923179626465
    10. ' comme' → logprob: -5.7151923179626465

Token 218: ' tant' (ID: 16235)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direct' → logprob: -1.1643308401107788
    2. 'tant' → logprob: -1.9143308401107788
    3. '__' → logprob: -2.0393309593200684
    4. 'stand' → logprob: -2.1643309593200684
    5. ' tant' → logprob: -2.4143309593200684
    6. '   ' → logprob: -2.4143309593200684
    7. 'script' → logprob: -3.5393309593200684
    8. ' __' → logprob: -3.9143309593200684
    9. ' standalone' → logprob: -4.289330959320068
    10. ' script' → logprob: -4.414330959320068

Token 219: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.02727275714278221
    2. 'que' → logprob: -3.6522727012634277
    3. ' qu' → logprob: -7.277272701263428
    4. 'qu' → logprob: -9.027273178100586
    5. '   ' → logprob: -9.527273178100586
    6. '__' → logprob: -10.027273178100586
    7. 'q' → logprob: -11.277273178100586
    8. '  ' → logprob: -11.402273178100586
    9. 'Que' → logprob: -11.652273178100586
    10. ' ' → logprob: -13.777273178100586

Token 220: ' programme' (ID: 18190)
  Prédit: 'script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'script' → logprob: -0.3317907452583313
    2. 'programme' → logprob: -1.7067906856536865
    3. ' script' → logprob: -2.7067906856536865
    4. 'principal' → logprob: -3.8317906856536865
    5. ' programme' → logprob: -5.581790924072266
    6. '__' → logprob: -5.956790924072266
    7. 'program' → logprob: -5.956790924072266
    8. 'main' → logprob: -6.206790924072266
    9. ' principal' → logprob: -7.206790924072266
    10. 'princip' → logprob: -7.831790924072266

Token 221: ' principal' (ID: 10589)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02926761843264103
    2. '   ' → logprob: -4.52926778793335
    3. ' principal' → logprob: -5.15426778793335
    4. ' ,' → logprob: -5.65426778793335
    5. ' main' → logprob: -5.77926778793335
    6. 'principal' → logprob: -6.02926778793335
    7. ' principale' → logprob: -6.15426778793335
    8. 'main' → logprob: -7.65426778793335
    9. ',
' → logprob: -8.779267311096191
    10. 'princip' → logprob: -9.154267311096191

Token 222: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003331233514472842
    2. '   ' → logprob: -6.128331184387207
    3. ' ,' → logprob: -7.128331184387207
    4. ' main' → logprob: -8.628331184387207
    5. ',
' → logprob: -10.128331184387207
    6. ',\
' → logprob: -10.128331184387207
    7. ':' → logprob: -10.503331184387207
    8. 'main' → logprob: -10.753331184387207
    9. '	main' → logprob: -11.378331184387207
    10. '_main' → logprob: -11.628331184387207

Token 223: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18519121408462524
    2. '   ' → logprob: -1.8101911544799805
    3. 'main' → logprob: -5.4351911544799805
    4. '	main' → logprob: -7.1851911544799805
    5. '    
' → logprob: -9.18519115447998
    6. '    ' → logprob: -9.43519115447998
    7. ' on' → logprob: -10.31019115447998
    8. '<|end|>' → logprob: -10.68519115447998
    9. ' ' → logprob: -11.06019115447998
    10. '(main' → logprob: -11.31019115447998

Token 224: ' #' (ID: 1069)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19347062706947327
    2. 'main' → logprob: -1.8184705972671509
    3. '   ' → logprob: -4.318470478057861
    4. '	main' → logprob: -8.19347095489502
    5. ' ' → logprob: -11.94347095489502
    6. '_main' → logprob: -12.19347095489502
    7. '   ' → logprob: -12.44347095489502
    8. '    
' → logprob: -12.44347095489502
    9. '(main' → logprob: -12.56847095489502
    10. '    ' → logprob: -13.19347095489502

Token 225: ' lancer' (ID: 82697)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6758975386619568
    2. 'main' → logprob: -0.8008975386619568
    3. '   ' → logprob: -3.1758975982666016
    4. '	main' → logprob: -7.425897598266602
    5. '   ' → logprob: -11.925897598266602
    6. ' ' → logprob: -12.550897598266602
    7. '  ' → logprob: -13.050897598266602
    8. '_main' → logprob: -13.175897598266602
    9. '    
' → logprob: -13.175897598266602
    10. ' ' → logprob: -13.425897598266602

Token 226: ' la' (ID: 557)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001081279362551868
    2. 'main' → logprob: -7.001081466674805
    3. '	main' → logprob: -9.001081466674805
    4. '(main' → logprob: -10.501081466674805
    5. ' ' → logprob: -11.126081466674805
    6. '()' → logprob: -12.876081466674805
    7. '   ' → logprob: -14.626081466674805
    8. ' ' → logprob: -14.751081466674805
    9. '_main' → logprob: -15.501081466674805
    10. ' principal' → logprob: -15.501081466674805

Token 227: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07889209687709808
    2. ' main' → logprob: -2.5788919925689697
    3. '	main' → logprob: -13.45389175415039
    4. 'principal' → logprob: -15.57889175415039
    5. ' principale' → logprob: -16.32889175415039
    6. 'm' → logprob: -16.45389175415039
    7. ' ' → logprob: -16.45389175415039
    8. ' ' → logprob: -16.57889175415039
    9. ' principal' → logprob: -16.57889175415039
    10. 'ma' → logprob: -16.82889175415039

Token 228: ' principale' (ID: 68926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029762526974081993
    2. 'main' → logprob: -3.5297625064849854
    3. '(main' → logprob: -12.279762268066406
    4. '	main' → logprob: -12.404762268066406
    5. ' principale' → logprob: -13.654762268066406
    6. ' ' → logprob: -13.904762268066406
    7. ' principal' → logprob: -15.029762268066406
    8. '   ' → logprob: -15.654762268066406
    9. '```' → logprob: -15.654762268066406
    10. '`' → logprob: -16.154762268066406

Token 229: ' main' (ID: 2758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8107432723045349
    2. 'main' → logprob: -1.5607433319091797
    3. ' main' → logprob: -1.5607433319091797
    4. '()
' → logprob: -3.3107433319091797
    5. '(main' → logprob: -3.4357433319091797
    6. '    
' → logprob: -3.6857433319091797
    7. '()' → logprob: -4.18574333190918
    8. '	main' → logprob: -4.81074333190918
    9. '(
' → logprob: -5.81074333190918
    10. '```' → logprob: -6.18574333190918

Token 230: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016114838421344757
    2. '()
' → logprob: -4.141114711761475
    3. '(' → logprob: -10.391115188598633
    4. '()

' → logprob: -10.766115188598633
    5. '()`' → logprob: -11.891115188598633
    6. '()
' → logprob: -12.641115188598633
    7. '()\' → logprob: -12.641115188598633
    8. '():
' → logprob: -12.766115188598633
    9. '.' → logprob: -13.141115188598633
    10. '().' → logprob: -13.266115188598633

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23805458843708038
    2. ' main' → logprob: -1.738054633140564
    3. 'main' → logprob: -3.3630545139312744
    4. '	main' → logprob: -7.6130547523498535
    5. '    
' → logprob: -7.8630547523498535
    6. 'if' → logprob: -7.8630547523498535
    7. ' if' → logprob: -10.488054275512695
    8. '__' → logprob: -10.863054275512695
    9. '(main' → logprob: -10.863054275512695
    10. '    ' → logprob: -12.488054275512695

Token 232: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.07896634936332703
    2. ' main' → logprob: -2.5789663791656494
    3. '   ' → logprob: -9.57896614074707
    4. '	main' → logprob: -12.07896614074707
    5. '_main' → logprob: -14.57896614074707
    6. '(main' → logprob: -15.07896614074707
    7. 'if' → logprob: -15.32896614074707
    8. '__' → logprob: -15.95396614074707
    9. 'Main' → logprob: -16.07896614074707
    10. '    ' → logprob: -16.45396614074707

Token 233: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020783171930816025
    2. '()
' → logprob: -8.750207901000977
    3. '(' → logprob: -10.000207901000977
    4. ' ()' → logprob: -13.625207901000977
    5. '()

' → logprob: -14.000207901000977
    6. '()\' → logprob: -14.250207901000977
    7. '(
' → logprob: -15.000207901000977
    8. '()`' → logprob: -15.125207901000977
    9. '```' → logprob: -15.875207901000977
    10. '#' → logprob: -16.250207901000977


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 231
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 32.03%
Précision adaptée (1ère position): 33.77%
Précision (top 10): 69.26%
================================================================================
