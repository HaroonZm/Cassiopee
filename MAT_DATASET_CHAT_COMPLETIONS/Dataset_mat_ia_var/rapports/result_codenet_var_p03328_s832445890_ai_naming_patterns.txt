================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_start_value, input_end_value = map(int, input().split())

range_difference = input_end_value - input_start_value
accumulated_total = 0

for sequence_index in range(range_difference - 1):
    accumulated_total += sequence_index + 1

final_result = accumulated_total - input_start_value
print(final_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_start' (ID: 10949)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31393611431121826
    2. '_' → logprob: -1.4389361143112183
    3. '.' → logprob: -4.563936233520508
    4. ':' → logprob: -4.688936233520508
    5. ' =' → logprob: -5.438936233520508
    6. '[' → logprob: -6.063936233520508
    7. ')' → logprob: -6.313936233520508
    8. '```' → logprob: -6.313936233520508
    9. '+' → logprob: -6.688936233520508
    10. '(' → logprob: -8.938936233520508

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.846943736076355
    2. '_' → logprob: -1.221943736076355
    3. '=' → logprob: -2.2219438552856445
    4. 'input' → logprob: -2.8469438552856445
    5. '_input' → logprob: -3.3469438552856445
    6. ' =' → logprob: -3.8469438552856445
    7. ' _' → logprob: -4.2219438552856445
    8. ' input' → logprob: -4.8469438552856445
    9. ' ,' → logprob: -5.3469438552856445
    10. ',' → logprob: -5.8469438552856445

Token 5: '_end' (ID: 13707)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20876364409923553
    2. '.' → logprob: -2.458763599395752
    3. '=' → logprob: -2.583763599395752
    4. ')' → logprob: -4.333763599395752
    5. '[' → logprob: -4.958763599395752
    6. ',' → logprob: -6.333763599395752
    7. '```' → logprob: -6.333763599395752
    8. ' =' → logprob: -6.458763599395752
    9. '._' → logprob: -8.08376407623291
    10. ']' → logprob: -8.70876407623291

Token 6: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04296790435910225
    2. '=' → logprob: -4.042967796325684
    3. ',' → logprob: -4.167967796325684
    4. ')' → logprob: -5.917967796325684
    5. '_,' → logprob: -6.042967796325684
    6. '_value' → logprob: -6.667967796325684
    7. ' =' → logprob: -7.292967796325684
    8. '```' → logprob: -7.417967796325684
    9. '_=' → logprob: -7.917967796325684
    10. ' _' → logprob: -8.792967796325684

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8480979204177856
    2. '=' → logprob: -1.2230979204177856
    3. ',' → logprob: -1.3480979204177856
    4. ')' → logprob: -4.598097801208496
    5. ' =' → logprob: -5.723097801208496
    6. '```' → logprob: -6.598097801208496
    7. '_,' → logprob: -7.223097801208496
    8. '.' → logprob: -7.348097801208496
    9. ':' → logprob: -7.598097801208496
    10. ' ' → logprob: -8.223097801208496

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6664279699325562
    2. ' input' → logprob: -1.0414279699325562
    3. ' map' → logprob: -3.0414280891418457
    4. 'input' → logprob: -3.0414280891418457
    5. '0' → logprob: -3.5414280891418457
    6. ' None' → logprob: -5.291428089141846
    7. 'map' → logprob: -6.291428089141846
    8. ' range' → logprob: -7.291428089141846
    9. ' int' → logprob: -7.791428089141846
    10. ' [' → logprob: -8.541427612304688

Token 9: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01401669904589653
    2. ')' → logprob: -4.639016628265381
    3. '(' → logprob: -5.889016628265381
    4. '(user' → logprob: -6.764016628265381
    5. '<|end|>' → logprob: -9.139017105102539
    6. '(raw' → logprob: -9.889017105102539
    7. 'input' → logprob: -10.514017105102539
    8. '('' → logprob: -10.514017105102539
    9. '<|end|>' → logprob: -11.389017105102539
    10. '(request' → logprob: -11.639017105102539

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009762698784470558
    2. ' input' → logprob: -4.634762763977051
    3. '(input' → logprob: -12.50976276397705
    4. ')' → logprob: -13.63476276397705
    5. 'user' → logprob: -14.63476276397705
    6. '```' → logprob: -15.00976276397705
    7. 'range' → logprob: -15.13476276397705
    8. '<input' → logprob: -15.38476276397705
    9. ',input' → logprob: -15.88476276397705
    10. '[input' → logprob: -16.259761810302734

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4462519586086273
    2. '(' → logprob: -1.3212519884109497
    3. '('' → logprob: -2.82125186920166
    4. '())' → logprob: -3.82125186920166
    5. '(()' → logprob: -5.94625186920166
    6. '().' → logprob: -6.32125186920166
    7. '("' → logprob: -6.69625186920166
    8. '()`' → logprob: -6.94625186920166
    9. '("("' → logprob: -7.07125186920166
    10. '`()' → logprob: -7.07125186920166

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019443416967988014
    2. 'strip' → logprob: -6.251944541931152
    3. 'rstrip' → logprob: -11.251944541931152
    4. ' split' → logprob: -13.251944541931152
    5. 'spl' → logprob: -14.501944541931152
    6. 'startswith' → logprob: -15.376944541931152
    7. '(split' → logprob: -15.876944541931152
    8. ')' → logprob: -17.001943588256836
    9. 'replace' → logprob: -17.001943588256836
    10. 'read' → logprob: -18.126943588256836

Token 14: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38511404395103455
    2. ')' → logprob: -1.635114073753357
    3. '('' → logprob: -2.5101139545440674
    4. '))' → logprob: -4.0101141929626465
    5. '(' → logprob: -4.1351141929626465
    6. '()' → logprob: -5.2601141929626465
    7. '()))' → logprob: -5.7601141929626465
    8. '(','' → logprob: -8.510113716125488
    9. ' ())' → logprob: -9.135113716125488
    10. '(()' → logprob: -9.260113716125488

Token 15: 'range' (ID: 20967)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0069981813430786
    2. '#' → logprob: -1.2569981813430786
    3. 'if' → logprob: -1.6319981813430786
    4. '\n' → logprob: -3.381998062133789
    5. '.' → logprob: -4.381998062133789
    6. ' if' → logprob: -4.381998062133789
    7. '*' → logprob: -4.506998062133789
    8. '```' → logprob: -4.631998062133789
    9. '+
' → logprob: -4.756998062133789
    10. '
' → logprob: -4.756998062133789

Token 16: '_difference' (ID: 123771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.157039049663581e-05
    2. '(start' → logprob: -10.875051498413086
    3. '(input' → logprob: -12.000051498413086
    4. '(
' → logprob: -12.125051498413086
    5. '((' → logprob: -12.250051498413086
    6. '(range' → logprob: -12.500051498413086
    7. ' (' → logprob: -12.875051498413086
    8. '(`' → logprob: -13.500051498413086
    9. '(open' → logprob: -13.625051498413086
    10. '('' → logprob: -13.750051498413086

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003132976416964084
    2. '("("' → logprob: -9.875313758850098
    3. '('' → logprob: -10.000313758850098
    4. '(range' → logprob: -10.125313758850098
    5. '_' → logprob: -10.375313758850098
    6. '_parent' → logprob: -10.500313758850098
    7. ' (' → logprob: -10.625313758850098
    8. '_range' → logprob: -11.250313758850098
    9. '(`' → logprob: -11.500313758850098
    10. '((' → logprob: -11.625313758850098

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5256929397583008
    2. 'input' → logprob: -0.9006929397583008
    3. ' abs' → logprob: -6.400692939758301
    4. 'abs' → logprob: -7.275692939758301
    5. ' ' → logprob: -9.6506929397583
    6. 'range' → logprob: -9.6506929397583
    7. ' range' → logprob: -10.1506929397583
    8. '(input' → logprob: -10.9006929397583
    9. ' max' → logprob: -12.2756929397583
    10. 'max' → logprob: -12.7756929397583

Token 19: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.04883715137839317
    2. '_start' → logprob: -3.173837184906006
    3. '_' → logprob: -5.673837184906006
    4. '_value' → logprob: -6.798837184906006
    5. '_difference' → logprob: -8.173836708068848
    6. '```' → logprob: -8.798836708068848
    7. ''_' → logprob: -8.798836708068848
    8. '_range' → logprob: -9.173836708068848
    9. '"_' → logprob: -9.423836708068848
    10. '_-' → logprob: -9.548836708068848

Token 20: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00018089536752086133
    2. '_' → logprob: -8.625181198120117
    3. '_val' → logprob: -14.875181198120117
    4. '_difference' → logprob: -15.000181198120117
    5. ' _' → logprob: -15.500181198120117
    6. '_Value' → logprob: -16.125181198120117
    7. '_VALUE' → logprob: -16.500181198120117
    8. '-_' → logprob: -16.750181198120117
    9. '_values' → logprob: -16.875181198120117
    10. '_range' → logprob: -17.250181198120117

Token 21: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11299055069684982
    2. '-' → logprob: -2.237990617752075
    3. '<|end|>' → logprob: -9.112990379333496
    4. '-token' → logprob: -11.612990379333496
    5. ' ' → logprob: -11.737990379333496
    6. ')' → logprob: -11.737990379333496
    7. ' -
' → logprob: -11.862990379333496
    8. '-input' → logprob: -11.987990379333496
    9. '[' → logprob: -12.737990379333496
    10. '+' → logprob: -12.737990379333496

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16024118661880493
    2. ' input' → logprob: -1.9102411270141602
    3. '_input' → logprob: -11.91024112701416
    4. ' ' → logprob: -12.28524112701416
    5. '1' → logprob: -13.53524112701416
    6. '=input' → logprob: -13.53524112701416
    7. '<input' → logprob: -14.41024112701416
    8. '_' → logprob: -14.78524112701416
    9. 'start' → logprob: -15.03524112701416
    10. '(input' → logprob: -15.16024112701416

Token 23: '_start' (ID: 10949)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1511300653219223
    2. '_start' → logprob: -2.651129961013794
    3. '_value' → logprob: -2.901129961013794
    4. '._' → logprob: -5.276130199432373
    5. ')' → logprob: -6.151130199432373
    6. ')_' → logprob: -6.401130199432373
    7. '_difference' → logprob: -6.901130199432373
    8. '_)' → logprob: -7.026130199432373
    9. '_range' → logprob: -7.026130199432373
    10. '_end' → logprob: -7.526130199432373

Token 24: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.191489642835222e-05
    2. '_difference' → logprob: -10.625041961669922
    3. '_' → logprob: -11.125041961669922
    4. '_range' → logprob: -13.125041961669922
    5. '_values' → logprob: -15.250041961669922
    6. '_variable' → logprob: -15.500041961669922
    7. '_token' → logprob: -16.000041961669922
    8. '_val' → logprob: -16.125041961669922
    9. '_Value' → logprob: -17.000041961669922
    10. '_VALUE' → logprob: -17.000041961669922

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'acc' (ID: 3717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6900810599327087
    2. '
' → logprob: -1.5650811195373535
    3. '<|end|>' → logprob: -1.6900811195373535
    4. ' ' → logprob: -2.9400811195373535
    5. '.' → logprob: -5.0650811195373535
    6. ':' → logprob: -5.0650811195373535
    7. ' if' → logprob: -5.4400811195373535
    8. ')' → logprob: -5.5650811195373535
    9. '\n' → logprob: -5.6900811195373535
    10. '%' → logprob: -5.6900811195373535

Token 27: 'um' (ID: 394)
  Prédit: 'umulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.21683789789676666
    2. 'umulate' → logprob: -2.0918378829956055
    3. 'um' → logprob: -2.7168378829956055
    4. 'umul' → logprob: -6.0918378829956055
    5. 'umulative' → logprob: -6.2168378829956055
    6. '=' → logprob: -7.3418378829956055
    7. 'ulator' → logprob: -9.216837882995605
    8. 'umu' → logprob: -9.341837882995605
    9. ' =' → logprob: -9.341837882995605
    10. 'uracy' → logprob: -10.216837882995605

Token 28: 'ulated' (ID: 13314)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.06690625101327896
    2. 'ulated' → logprob: -3.441906213760376
    3. 'ulator' → logprob: -3.691906213760376
    4. 'ul' → logprob: -5.441906452178955
    5. 'ulative' → logprob: -6.066906452178955
    6. 'umulate' → logprob: -7.941906452178955
    7. 'ulation' → logprob: -8.691905975341797
    8. 'ulators' → logprob: -9.316905975341797
    9. 'er' → logprob: -9.441905975341797
    10. 'ulating' → logprob: -9.816905975341797

Token 29: '_total' (ID: 23814)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3669656217098236
    2. '_sum' → logprob: -1.741965651512146
    3. '_' → logprob: -2.2419655323028564
    4. '_range' → logprob: -4.1169657707214355
    5. '_difference' → logprob: -5.3669657707214355
    6. '_values' → logprob: -6.9919657707214355
    7. '_total' → logprob: -7.4919657707214355
    8. '_amount' → logprob: -7.8669657707214355
    9. '_val' → logprob: -7.9919657707214355
    10. '_result' → logprob: -7.9919657707214355

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041269876062870026
    2. ' +=' → logprob: -3.4162697792053223
    3. '=' → logprob: -4.916269779205322
    4. '+=' → logprob: -9.16627025604248
    5. ' +' → logprob: -9.29127025604248
    6. '+' → logprob: -10.41627025604248
    7. '_' → logprob: -10.41627025604248
    8. 's' → logprob: -11.91627025604248
    9. ' ' → logprob: -13.41627025604248
    10. 'space' → logprob: -14.66627025604248

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16072162985801697
    2. ' ' → logprob: -1.9107216596603394
    3. 'range' → logprob: -8.285721778869629
    4. ' range' → logprob: -9.035721778869629
    5. ' sum' → logprob: -10.160721778869629
    6. ' input' → logprob: -10.535721778869629
    7. 'sum' → logprob: -10.535721778869629
    8. 'input' → logprob: -10.535721778869629
    9. 'int' → logprob: -13.598221778869629
    10. ' ' → logprob: -13.598221778869629

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018292918102815747
    2. 'range' → logprob: -7.001829147338867
    3. 'input' → logprob: -7.626829147338867
    4. 'sum' → logprob: -7.876829147338867
    5. ' ' → logprob: -10.376829147338867
    6. 'acc' → logprob: -12.251829147338867
    7. 'int' → logprob: -12.251829147338867
    8. 'abs' → logprob: -13.376829147338867
    9. ' range' → logprob: -13.626829147338867
    10. '(range' → logprob: -14.001829147338867

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17812763154506683
    2. 'for' → logprob: -2.3031275272369385
    3. ' for' → logprob: -3.0531275272369385
    4. ' 
' → logprob: -5.303127765655518
    5. '<|end|>' → logprob: -5.303127765655518
    6. '' → logprob: -6.178127765655518
    7. '
' → logprob: -6.303127765655518
    8. '\n' → logprob: -6.553127765655518
    9. '```' → logprob: -8.42812728881836
    10. '  
' → logprob: -8.42812728881836

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009533828706480563
    2. ' for' → logprob: -7.625953197479248
    3. '
' → logprob: -8.500953674316406
    4. 'f' → logprob: -9.125953674316406
    5. '\n' → logprob: -9.500953674316406
    6. 'i' → logprob: -10.250953674316406
    7. '```' → logprob: -10.750953674316406
    8. '' → logprob: -11.625953674316406
    9. 'n' → logprob: -11.750953674316406
    10. '\' → logprob: -14.375953674316406

Token 35: ' sequence' (ID: 16281)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.028033100068569183
    2. ' ' → logprob: -4.153033256530762
    3. ' _' → logprob: -4.653033256530762
    4. '_' → logprob: -6.528033256530762
    5. ' value' → logprob: -7.653033256530762
    6. ' input' → logprob: -8.653033256530762
    7. 'i' → logprob: -8.903033256530762
    8. ' variable' → logprob: -10.403033256530762
    9. ' x' → logprob: -10.653033256530762
    10. ' in' → logprob: -10.653033256530762

Token 36: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04191894084215164
    2. ' in' → logprob: -3.916918992996216
    3. '_in' → logprob: -4.791918754577637
    4. ' _' → logprob: -4.916918754577637
    5. 'in' → logprob: -5.666918754577637
    6. ' ' → logprob: -6.666918754577637
    7. '_token' → logprob: -8.166918754577637
    8. '_space' → logprob: -9.666918754577637
    9. '_sequence' → logprob: -9.916918754577637
    10. '[' → logprob: -10.041918754577637

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02067863754928112
    2. 'in' → logprob: -3.8956785202026367
    3. ' ' → logprob: -9.020678520202637
    4. ',' → logprob: -11.895678520202637
    5. '  ' → logprob: -13.145678520202637
    6. ' ,' → logprob: -13.395678520202637
    7. '	in' → logprob: -13.895678520202637
    8. ')' → logprob: -14.395678520202637
    9. 'range' → logprob: -14.958178520202637
    10. '0' → logprob: -15.083178520202637

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994754821062088
    2. 'range' → logprob: -2.6949474811553955
    3. '	range' → logprob: -12.194947242736816
    4. ' ' → logprob: -12.819947242736816
    5. '(range' → logprob: -13.944947242736816
    6. ' ' → logprob: -14.069947242736816
    7. '  ' → logprob: -14.444947242736816
    8. '   ' → logprob: -15.069947242736816
    9. 'rang' → logprob: -15.444947242736816
    10. 'r' → logprob: -15.944947242736816

Token 39: '(range' (ID: 50017)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.43354275822639465
    2. '(' → logprob: -1.4335427284240723
    3. '(range' → logprob: -2.1835427284240723
    4. ' (' → logprob: -7.683542728424072
    5. '(len' → logprob: -8.80854320526123
    6. '(sequence' → logprob: -10.30854320526123
    7. '(in' → logprob: -11.30854320526123
    8. '((' → logprob: -12.30854320526123
    9. '(start' → logprob: -12.68354320526123
    10. 'range' → logprob: -12.80854320526123

Token 40: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -8.08944896562025e-05
    2. '_' → logprob: -10.625081062316895
    3. '_start' → logprob: -10.750081062316895
    4. '(' → logprob: -11.250081062316895
    5. '(_' → logprob: -11.625081062316895
    6. 'difference' → logprob: -11.875081062316895
    7. '_diff' → logprob: -13.750081062316895
    8. ' _' → logprob: -14.125081062316895
    9. ')' → logprob: -14.500081062316895
    10. '_d' → logprob: -14.500081062316895

Token 41: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19578443467617035
    2. '+' → logprob: -1.8207844495773315
    3. ' +' → logprob: -4.320784568786621
    4. ')' → logprob: -6.695784568786621
    5. ' ):' → logprob: -7.445784568786621
    6. '):
' → logprob: -7.820784568786621
    7. ':' → logprob: -8.695784568786621
    8. '+:' → logprob: -8.695784568786621
    9. ',' → logprob: -10.570784568786621
    10. '   ' → logprob: -11.695784568786621

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47545337677001953
    2. ' ' → logprob: -0.9754533767700195
    3. '    ' → logprob: -7.6004533767700195
    4. '0' → logprob: -8.97545337677002
    5. '   ' → logprob: -8.97545337677002
    6. '+' → logprob: -9.10045337677002
    7. ' -' → logprob: -9.10045337677002
    8. ' +' → logprob: -9.22545337677002
    9. '2' → logprob: -9.60045337677002
    10. '<|end|>' → logprob: -9.60045337677002

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008050530217587948
    2. ' ' → logprob: -4.883050441741943
    3. '2' → logprob: -9.258050918579102
    4. '0' → logprob: -9.383050918579102
    5. '-' → logprob: -9.383050918579102
    6. ' -' → logprob: -9.633050918579102
    7. '   ' → logprob: -9.758050918579102
    8. '  ' → logprob: -11.383050918579102
    9. '+' → logprob: -11.508050918579102
    10. '3' → logprob: -11.883050918579102

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007255192380398512
    2. ' ):' → logprob: -5.7572550773620605
    3. ':' → logprob: -6.3822550773620605
    4. ')' → logprob: -6.6322550773620605
    5. '):
' → logprob: -7.1322550773620605
    6. ',' → logprob: -8.507255554199219
    7. '+' → logprob: -10.632255554199219
    8. ' :' → logprob: -11.507255554199219
    9. ' )' → logprob: -11.632255554199219
    10. ' ,' → logprob: -12.632255554199219

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011254366487264633
    2. ':' → logprob: -5.13625431060791
    3. '<|end|>' → logprob: -5.63625431060791
    4. ',' → logprob: -7.63625431060791
    5. ' :' → logprob: -8.01125431060791
    6. '    ' → logprob: -8.63625431060791
    7. ' accumulated' → logprob: -8.88625431060791
    8. ' ,' → logprob: -9.13625431060791
    9. '<|end|>' → logprob: -9.51125431060791
    10. '	acc' → logprob: -9.88625431060791

Token 46: ' accumulated' (ID: 64757)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0569674968719482
    2. '   ' → logprob: -1.1819674968719482
    3. ' accumulated' → logprob: -1.4319674968719482
    4. ' ' → logprob: -3.1819674968719482
    5. ' input' → logprob: -3.3069674968719482
    6. ' sequence' → logprob: -4.681967735290527
    7. ' 
' → logprob: -4.931967735290527
    8. '     
' → logprob: -5.431967735290527
    9. ' ```' → logprob: -6.556967735290527
    10. '    
' → logprob: -6.681967735290527

Token 47: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0018196473829448223
    2. '_' → logprob: -6.376819610595703
    3. ' _' → logprob: -9.501819610595703
    4. ' +=' → logprob: -11.001819610595703
    5. '_value' → logprob: -12.251819610595703
    6. 'total' → logprob: -12.751819610595703
    7. '+' → logprob: -12.876819610595703
    8. '```' → logprob: -13.126819610595703
    9. '<|end|>' → logprob: -13.251819610595703
    10. '_add' → logprob: -13.626819610595703

Token 48: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0009771942859515548
    2. '+=' → logprob: -7.000977039337158
    3. '+' → logprob: -10.125977516174316
    4. ' +' → logprob: -11.000977516174316
    5. ' =' → logprob: -12.625977516174316
    6. '<|end|>' → logprob: -12.750977516174316
    7. ' -=' → logprob: -13.375977516174316
    8. '+='' → logprob: -15.250977516174316
    9. '=' → logprob: -15.500977516174316
    10. ' ' → logprob: -15.750977516174316

Token 49: ' sequence' (ID: 16281)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.075641930103302
    2. ' input' → logprob: -2.7006418704986572
    3. '(input' → logprob: -5.325642108917236
    4. ' (' → logprob: -7.825642108917236
    5. 'sequence' → logprob: -8.825641632080078
    6. '(' → logprob: -9.200641632080078
    7. 'range' → logprob: -9.575641632080078
    8. ' ' → logprob: -9.950641632080078
    9. ' sequence' → logprob: -11.575641632080078
    10. 'int' → logprob: -11.575641632080078

Token 50: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0028227046132087708
    2. '_start' → logprob: -6.6278228759765625
    3. '_value' → logprob: -7.0028228759765625
    4. 'index' → logprob: -8.127822875976562
    5. '_' → logprob: -9.627822875976562
    6. '_range' → logprob: -10.752822875976562
    7. '_number' → logprob: -10.877822875976562
    8. '_length' → logprob: -10.877822875976562
    9. '```' → logprob: -10.877822875976562
    10. '_size' → logprob: -11.127822875976562

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003027386963367462
    2. ' +' → logprob: -5.878027439117432
    3. '<|end|>' → logprob: -8.878026962280273
    4. '+
' → logprob: -9.878026962280273
    5. ' ' → logprob: -10.753026962280273
    6. ' +
' → logprob: -12.503026962280273
    7. '1' → logprob: -13.253026962280273
    8. '```' → logprob: -13.753026962280273
    9. ')' → logprob: -14.253026962280273
    10. '<|end|>' → logprob: -14.628026962280273

Token 52: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06098456680774689
    2. '1' → logprob: -3.0609846115112305
    3. ' input' → logprob: -4.4359846115112305
    4. '2' → logprob: -8.18598461151123
    5. ' ' → logprob: -9.06098461151123
    6. '   ' → logprob: -10.18598461151123
    7. '<input' → logprob: -10.93598461151123
    8. '  ' → logprob: -12.18598461151123
    9. '=input' → logprob: -12.56098461151123
    10. '	input' → logprob: -12.68598461151123

Token 53: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038261111825704575
    2. '1' → logprob: -3.2882611751556396
    3. ' input' → logprob: -9.163261413574219
    4. '2' → logprob: -9.288261413574219
    5. '<input' → logprob: -12.038261413574219
    6. ' ' → logprob: -12.288261413574219
    7. '   ' → logprob: -12.413261413574219
    8. '(input' → logprob: -13.538261413574219
    9. '(' → logprob: -13.913261413574219
    10. '```' → logprob: -14.288261413574219

Token 54: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'final' (ID: 17196)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5107929110527039
    2. '_value' → logprob: -1.5107929706573486
    3. '_result' → logprob: -2.3857929706573486
    4. '_total' → logprob: -2.6357929706573486
    5. '_output' → logprob: -4.6357927322387695
    6. '_sum' → logprob: -6.7607927322387695
    7. '_acc' → logprob: -7.3857927322387695
    8. ' _' → logprob: -7.5107927322387695
    9. '_space' → logprob: -8.01079273223877
    10. '_number' → logprob: -8.26079273223877

Token 57: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' accumulated' (ID: 64757)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.041378378868103
    2. ' accumulated' → logprob: -1.416378378868103
    3. 'range' → logprob: -1.791378378868103
    4. ' range' → logprob: -2.1663784980773926
    5. 'input' → logprob: -2.4163784980773926
    6. 'acc' → logprob: -3.7913784980773926
    7. ' (' → logprob: -5.041378498077393
    8. '(range' → logprob: -6.666378498077393
    9. ' ' → logprob: -6.791378498077393
    10. '(input' → logprob: -7.291378498077393

Token 59: '_total' (ID: 23814)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.6338146328926086
    2. 'lated' → logprob: -1.7588145732879639
    3. 'ulated' → logprob: -1.8838145732879639
    4. '_total' → logprob: -2.758814573287964
    5. 'ted' → logprob: -3.758814573287964
    6. 'uated' → logprob: -4.133814811706543
    7. 'total' → logprob: -4.383814811706543
    8. 'um' → logprob: -5.508814811706543
    9. 't' → logprob: -5.633814811706543
    10. 'ed' → logprob: -6.008814811706543

Token 60: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28826847672462463
    2. '<|end|>' → logprob: -1.4132684469223022
    3. '*' → logprob: -5.663268566131592
    4. '%' → logprob: -6.913268566131592
    5. '
' → logprob: -7.538268566131592
    6. ' +' → logprob: -7.788268566131592
    7. '```' → logprob: -7.913268566131592
    8. '<|end|>' → logprob: -8.038268089294434
    9. ' ' → logprob: -8.163268089294434
    10. '-' → logprob: -8.413268089294434

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02737194113433361
    2. ' input' → logprob: -3.777371883392334
    3. 'range' → logprob: -5.652371883392334
    4. '1' → logprob: -7.652371883392334
    5. '(input' → logprob: -11.152372360229492
    6. ' range' → logprob: -11.152372360229492
    7. '2' → logprob: -11.277372360229492
    8. '0' → logprob: -11.277372360229492
    9. ' ' → logprob: -11.277372360229492
    10. '10' → logprob: -11.402372360229492

Token 62: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0007862794445827603
    2. '_end' → logprob: -7.250786304473877
    3. '_value' → logprob: -9.750785827636719
    4. '_' → logprob: -12.125785827636719
    5. 'start' → logprob: -12.250785827636719
    6. ')_' → logprob: -13.000785827636719
    7. '```' → logprob: -13.125785827636719
    8. ')' → logprob: -14.500785827636719
    9. 'Start' → logprob: -14.500785827636719
    10. '_values' → logprob: -14.750785827636719

Token 63: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -12.125012397766113
    3. '_val' → logprob: -12.375012397766113
    4. 'value' → logprob: -14.000012397766113
    5. '_values' → logprob: -14.500012397766113
    6. '_start' → logprob: -15.500012397766113
    7. '_range' → logprob: -15.750012397766113
    8. '```' → logprob: -16.250011444091797
    9. '_Value' → logprob: -16.750011444091797
    10. ' _' → logprob: -16.750011444091797

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '(final' (ID: 14111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759837627410889
    2. '(final' → logprob: -0.8259837627410889
    3. '(f' → logprob: -10.700984001159668
    4. ' (' → logprob: -12.075984001159668
    5. '("("' → logprob: -12.575984001159668
    6. '('' → logprob: -12.825984001159668
    7. '(`' → logprob: -12.950984001159668
    8. '(.' → logprob: -13.450984001159668
    9. 'final' → logprob: -13.700984001159668
    10. '(F' → logprob: -14.075984001159668

Token 67: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.15845778584480286
    2. '_' → logprob: -3.0334577560424805
    3. ')_' → logprob: -3.0334577560424805
    4. '_final' → logprob: -3.4084577560424805
    5. ')' → logprob: -5.1584577560424805
    6. '_)' → logprob: -5.9084577560424805
    7. '_output' → logprob: -6.1584577560424805
    8. '_value' → logprob: -6.7834577560424805
    9. '_t' → logprob: -7.0334577560424805
    10. '_res' → logprob: -7.1584577560424805

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. '))' → logprob: -15.750001907348633
    4. '`)' → logprob: -17.250001907348633
    5. ')
' → logprob: -17.375001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '')' → logprob: -17.750001907348633
    8. '),' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.625001907348633
    10. '）' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 31.82%
Précision adaptée (1ère position): 31.82%
Précision (top 10): 69.70%
================================================================================
