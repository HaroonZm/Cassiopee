================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_x = input().strip().split()
n = int(n_x[0])
x = int(n_x[1])

x_list_str = input().strip().split()
x_list = []
for v in x_list_str:
    x_list.append(int(v))

def my_gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

current = abs(x - x_list[0])
for i in range(1, n):
    diff = abs(x - x_list[i])
    current = my_gcd(current, diff)

print(current)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_x' (ID: 7054)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4559260904788971
    2. '10' → logprob: -1.2059260606765747
    3. '5' → logprob: -3.9559261798858643
    4. '16' → logprob: -4.455925941467285
    5. '32' → logprob: -4.580925941467285
    6. '100' → logprob: -5.080925941467285
    7. '64' → logprob: -5.705925941467285
    8. '1' → logprob: -5.955925941467285
    9. '3' → logprob: -5.955925941467285
    10. '4' → logprob: -6.080925941467285

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005651932675391436
    2. ''' → logprob: -6.130651950836182
    3. '('' → logprob: -6.255651950836182
    4. '"' → logprob: -7.130651950836182
    5. '("("' → logprob: -8.255651473999023
    6. '[' → logprob: -8.630651473999023
    7. '(
' → logprob: -8.880651473999023
    8. '_' → logprob: -10.255651473999023
    9. '.' → logprob: -11.380651473999023
    10. '`' → logprob: -11.505651473999023

Token 5: 'strip' (ID: 23905)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.668316125869751
    2. '+' → logprob: -1.043316125869751
    3. '_' → logprob: -2.793316125869751
    4. '*' → logprob: -4.168315887451172
    5. '(' → logprob: -4.418315887451172
    6. '.strip' → logprob: -4.418315887451172
    7. '=' → logprob: -4.543315887451172
    8. ')' → logprob: -4.793315887451172
    9. '**' → logprob: -5.793315887451172
    10. ' ' → logprob: -5.918315887451172

Token 6: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09022849053144455
    2. '()' → logprob: -2.46522855758667
    3. '(
' → logprob: -7.96522855758667
    4. ')' → logprob: -8.465228080749512
    5. '"' → logprob: -8.590228080749512
    6. '`' → logprob: -9.215228080749512
    7. '(

' → logprob: -9.465228080749512
    8. '```' → logprob: -9.465228080749512
    9. '`()' → logprob: -9.715228080749512
    10. ''' → logprob: -10.090228080749512

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0029183996375650167
    2. '.split' → logprob: -6.877918243408203
    3. 'if' → logprob: -7.002918243408203
    4. '()' → logprob: -8.252918243408203
    5. 'replace' → logprob: -9.002918243408203
    6. '=' → logprob: -9.377918243408203
    7. ' split' → logprob: -9.627918243408203
    8. ')' → logprob: -9.752918243408203
    9. 'isdigit' → logprob: -9.752918243408203
    10. 'lower' → logprob: -9.877918243408203

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008549683727324009
    2. '('' → logprob: -4.883549690246582
    3. '("("' → logprob: -7.133549690246582
    4. '()' → logprob: -10.133549690246582
    5. '(`' → logprob: -10.508549690246582
    6. '((' → logprob: -10.883549690246582
    7. '(
' → logprob: -11.008549690246582
    8. '(

' → logprob: -11.508549690246582
    9. '```' → logprob: -11.633549690246582
    10. ''' → logprob: -12.508549690246582

Token 9: 'n' (ID: 77)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6249037981033325
    2. '[' → logprob: -1.2499037981033325
    3. 'n' → logprob: -2.624903678894043
    4. ' =' → logprob: -3.249903678894043
    5. '_' → logprob: -4.124903678894043
    6. '.' → logprob: -4.249903678894043
    7. '[n' → logprob: -5.249903678894043
    8. '#' → logprob: -5.374903678894043
    9. 'for' → logprob: -5.374903678894043
    10. 'x' → logprob: -5.874903678894043

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3248485326766968
    2. '_x' → logprob: -1.3248485326766968
    3. '[' → logprob: -4.574848651885986
    4. '_[' → logprob: -8.074848175048828
    5. '[_' → logprob: -8.199848175048828
    6. '_n' → logprob: -8.824848175048828
    7. '_s' → logprob: -9.574848175048828
    8. 's' → logprob: -9.949848175048828
    9. '__' → logprob: -10.324848175048828
    10. '_]' → logprob: -10.449848175048828

Token 11: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07957765460014343
    2. ' int' → logprob: -2.579577684402466
    3. 'len' → logprob: -7.454577445983887
    4. ' len' → logprob: -10.329577445983887
    5. ' n' → logprob: -10.579577445983887
    6. '[int' → logprob: -10.829577445983887
    7. 'n' → logprob: -10.954577445983887
    8. ' ' → logprob: -12.329577445983887
    9. '0' → logprob: -12.454577445983887
    10. 'input' → logprob: -13.829577445983887

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14276817440986633
    2. '(n' → logprob: -2.017768144607544
    3. '("("' → logprob: -10.142767906188965
    4. '('' → logprob: -11.267767906188965
    5. 'n' → logprob: -11.892767906188965
    6. '```' → logprob: -12.017767906188965
    7. '()' → logprob: -12.517767906188965
    8. '(x' → logprob: -12.767767906188965
    9. '`' → logprob: -13.017767906188965
    10. '(

' → logprob: -13.142767906188965

Token 13: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002982102334499359
    2. '_' → logprob: -7.127982139587402
    3. '[' → logprob: -7.377982139587402
    4. '_)' → logprob: -7.377982139587402
    5. ')' → logprob: -7.627982139587402
    6. 'x' → logprob: -8.252982139587402
    7. ')_' → logprob: -9.377982139587402
    8. '_n' → logprob: -10.627982139587402
    9. '_[' → logprob: -11.502982139587402
    10. ' _' → logprob: -11.627982139587402

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016301481809932739
    2. '[n' → logprob: -9.125163078308105
    3. ')' → logprob: -10.125163078308105
    4. '[
' → logprob: -12.125163078308105
    5. '   ' → logprob: -13.375163078308105
    6. ' [' → logprob: -13.750163078308105
    7. '```' → logprob: -14.000163078308105
    8. '\[' → logprob: -14.000163078308105
    9. '['' → logprob: -14.250163078308105
    10. ' ' → logprob: -14.500163078308105

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4021237802808173e-05
    2. '1' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.125014305114746
    4. ')' → logprob: -15.000014305114746
    5. '])' → logprob: -16.37501335144043
    6. ']' → logprob: -17.25001335144043
    7. '```' → logprob: -17.50001335144043
    8. '-' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.12501335144043
    10. ''' → logprob: -18.25001335144043

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011304808780550957
    2. '])' → logprob: -4.76130485534668
    3. ']' → logprob: -6.01130485534668
    4. ')])' → logprob: -9.38630485534668
    5. ')]' → logprob: -9.76130485534668
    6. ')n' → logprob: -10.76130485534668
    7. ')
' → logprob: -11.13630485534668
    8. ' )' → logprob: -11.13630485534668
    9. '[' → logprob: -11.26130485534668
    10. ''])' → logprob: -12.13630485534668

Token 17: 'x' (ID: 87)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5354369282722473
    2. 'x' → logprob: -0.9104369282722473
    3. 'k' → logprob: -4.910437107086182
    4. 'n' → logprob: -6.410437107086182
    5. 'v' → logprob: -7.535437107086182
    6. 'a' → logprob: -7.660437107086182
    7. 'i' → logprob: -8.285436630249023
    8. ' m' → logprob: -8.285436630249023
    9. 's' → logprob: -8.410436630249023
    10. 'c' → logprob: -8.410436630249023

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43086105585098267
    2. ' =' → logprob: -1.055860996246338
    3. '_' → logprob: -6.305860996246338
    4. ')' → logprob: -8.680861473083496
    5. '=int' → logprob: -9.680861473083496
    6. '_=' → logprob: -10.680861473083496
    7. '[' → logprob: -11.305861473083496
    8. ',' → logprob: -11.555861473083496
    9. '_space' → logprob: -11.680861473083496
    10. ''' → logprob: -11.805861473083496

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07890675216913223
    2. ' int' → logprob: -2.578906774520874
    3. ' n' → logprob: -11.328907012939453
    4. 'n' → logprob: -12.328907012939453
    5. ' ' → logprob: -15.703907012939453
    6. '(int' → logprob: -15.828907012939453
    7. 'float' → logprob: -16.328907012939453
    8. '=int' → logprob: -16.578907012939453
    9. '[int' → logprob: -17.078907012939453
    10. '0' → logprob: -17.328907012939453

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.128378763794899
    2. '(n' → logprob: -2.1283788681030273
    3. '(x' → logprob: -6.753378868103027
    4. '()' → logprob: -9.628378868103027
    5. '("("' → logprob: -9.628378868103027
    6. '('' → logprob: -9.753378868103027
    7. ''' → logprob: -11.503378868103027
    8. ' (' → logprob: -11.628378868103027
    9. 'n' → logprob: -11.878378868103027
    10. '(

' → logprob: -12.003378868103027

Token 21: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00010521204239921644
    2. '[' → logprob: -9.875104904174805
    3. '_' → logprob: -10.500104904174805
    4. '[_' → logprob: -12.000104904174805
    5. ')' → logprob: -12.625104904174805
    6. '```' → logprob: -12.625104904174805
    7. ' _' → logprob: -13.000104904174805
    8. ')_' → logprob: -13.625104904174805
    9. ' ' → logprob: -13.625104904174805
    10. ']_' → logprob: -13.750104904174805

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5690089639974758e-05
    2. ')[' → logprob: -11.875015258789062
    3. ')' → logprob: -12.375015258789062
    4. '1' → logprob: -13.500015258789062
    5. ' [' → logprob: -13.875015258789062
    6. '```' → logprob: -13.875015258789062
    7. '][' → logprob: -14.125015258789062
    8. '   ' → logprob: -16.000015258789062
    9. '[
' → logprob: -16.750015258789062
    10. ']' → logprob: -17.000015258789062

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '])' → logprob: -15.125000953674316
    4. '0' → logprob: -15.875000953674316
    5. '```' → logprob: -17.375
    6. '   ' → logprob: -17.75
    7. ')' → logprob: -18.375
    8. ']' → logprob: -18.375
    9. '2' → logprob: -18.5
    10. '１' → logprob: -18.875

Token 24: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.625000953674316
    3. '')' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.0
    5. '）' → logprob: -16.25
    6. '`)' → logprob: -16.625
    7. ']' → logprob: -16.75
    8. ')n' → logprob: -17.625
    9. ')#' → logprob: -17.75
    10. '),' → logprob: -17.875

Token 25: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9973084926605225
    2. '+' → logprob: -2.1223084926605225
    3. '=' → logprob: -2.1223084926605225
    4. ' ' → logprob: -2.1223084926605225
    5. '#' → logprob: -3.2473084926605225
    6. 'n' → logprob: -3.3723084926605225
    7. '[' → logprob: -3.3723084926605225
    8. 'a' → logprob: -3.7473084926605225
    9. ',' → logprob: -3.9973084926605225
    10. ')' → logprob: -4.122308731079102

Token 26: '_list' (ID: 4162)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4882264733314514
    2. '%' → logprob: -1.6132264137268066
    3. ' ' → logprob: -3.1132264137268066
    4. '**' → logprob: -3.4882264137268066
    5. '*' → logprob: -3.9882264137268066
    6. ' %' → logprob: -4.113226413726807
    7. '>' → logprob: -4.238226413726807
    8. ' **' → logprob: -4.238226413726807
    9. '[' → logprob: -4.613226413726807
    10. '_' → logprob: -4.863226413726807

Token 27: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4895613491535187
    2. ' =' → logprob: -1.4895613193511963
    3. '.' → logprob: -1.8645613193511963
    4. '.append' → logprob: -5.739561557769775
    5. '.=' → logprob: -6.739561557769775
    6. '=[]' → logprob: -6.864561557769775
    7. '[' → logprob: -7.614561557769775
    8. 's' → logprob: -8.239561080932617
    9. '[:]' → logprob: -8.364561080932617
    10. '<|end|>' → logprob: -9.739561080932617

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5774006247520447
    2. ' =' → logprob: -0.8274006247520447
    3. '[' → logprob: -7.3274006843566895
    4. '.' → logprob: -7.9524006843566895
    5. '[:]' → logprob: -8.327400207519531
    6. 's' → logprob: -8.952400207519531
    7. '=[]' → logprob: -10.702400207519531
    8. '_' → logprob: -11.577400207519531
    9. '[]' → logprob: -11.577400207519531
    10. ')' → logprob: -11.702400207519531

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.054941751062870026
    2. ' input' → logprob: -2.9299416542053223
    3. '[]' → logprob: -10.05494213104248
    4. ' []' → logprob: -12.05494213104248
    5. '[input' → logprob: -12.80494213104248
    6. 'x' → logprob: -13.17994213104248
    7. '(input' → logprob: -13.67994213104248
    8. 'list' → logprob: -13.67994213104248
    9. '=input' → logprob: -13.92994213104248
    10. ' ' → logprob: -14.67994213104248

Token 30: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030555058270692825
    2. '(' → logprob: -3.655555009841919
    3. '().' → logprob: -5.530555248260498
    4. '()(' → logprob: -9.28055477142334
    5. '("("' → logprob: -10.90555477142334
    6. '`()' → logprob: -11.03055477142334
    7. '()?>' → logprob: -11.28055477142334
    8. '())' → logprob: -11.28055477142334
    9. '()

' → logprob: -11.28055477142334
    10. ' ()' → logprob: -11.40555477142334

Token 31: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00523719098418951
    2. 'split' → logprob: -5.255237102508545
    3. 'rstrip' → logprob: -12.630237579345703
    4. ' strip' → logprob: -16.505237579345703
    5. '(strip' → logprob: -18.130237579345703
    6. '.strip' → logprob: -18.630237579345703
    7. 'replace' → logprob: -20.255237579345703
    8. ' split' → logprob: -21.005237579345703
    9. '```' → logprob: -21.130237579345703
    10. '(split' → logprob: -21.630237579345703

Token 32: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02441336400806904
    2. '().' → logprob: -4.274413585662842
    3. '(' → logprob: -4.649413585662842
    4. '```' → logprob: -8.774413108825684
    5. '()='' → logprob: -9.774413108825684
    6. '()`' → logprob: -10.274413108825684
    7. '.' → logprob: -10.399413108825684
    8. ''' → logprob: -10.524413108825684
    9. '`()' → logprob: -10.524413108825684
    10. '"' → logprob: -10.524413108825684

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -16.375
    3. 'rstrip' → logprob: -16.375
    4. 'spl' → logprob: -17.125
    5. 'strip' → logprob: -17.625
    6. '(split' → logprob: -18.25
    7. 'replace' → logprob: -19.25
    8. 'sp' → logprob: -20.875
    9. 's' → logprob: -20.875
    10. '.split' → logprob: -21.25

Token 34: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6338041424751282
    2. '(' → logprob: -0.7588041424751282
    3. '('' → logprob: -7.2588043212890625
    4. '("("' → logprob: -8.133804321289062
    5. '```' → logprob: -10.508804321289062
    6. '(`' → logprob: -10.508804321289062
    7. '(
' → logprob: -11.383804321289062
    8. '((' → logprob: -11.508804321289062
    9. '(

' → logprob: -11.633804321289062
    10. '<|end|>' → logprob: -11.633804321289062

Token 35: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.246537173457909e-06
    2. 'n' → logprob: -13.250003814697266
    3. 'a' → logprob: -14.375003814697266
    4. ' x' → logprob: -14.375003814697266
    5. '<|end|>' → logprob: -15.750003814697266
    6. 'numbers' → logprob: -15.875003814697266
    7. ' ' → logprob: -16.125003814697266
    8. 's' → logprob: -16.125003814697266
    9. ')' → logprob: -16.375003814697266
    10. 'list' → logprob: -16.625003814697266

Token 36: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7237120270729065
    2. '_list' → logprob: -0.7237120270729065
    3. '_values' → logprob: -4.723711967468262
    4. ' =' → logprob: -5.098711967468262
    5. 's' → logprob: -5.348711967468262
    6. '=' → logprob: -5.848711967468262
    7. '=[]' → logprob: -6.223711967468262
    8. '_s' → logprob: -7.348711967468262
    9. '_vals' → logprob: -7.348711967468262
    10. '[:]' → logprob: -7.473711967468262

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4298834502696991
    2. '=' → logprob: -1.0548834800720215
    3. '[:]' → logprob: -7.9298834800720215
    4. '=[]' → logprob: -8.304883003234863
    5. '_' → logprob: -8.304883003234863
    6. '[' → logprob: -9.179883003234863
    7. 's' → logprob: -10.054883003234863
    8. ')' → logprob: -10.179883003234863
    9. '=[' → logprob: -10.304883003234863
    10. '[]' → logprob: -10.804883003234863

Token 38: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5522447228431702
    2. ' [' → logprob: -1.3022446632385254
    3. ' list' → logprob: -2.3022446632385254
    4. '[' → logprob: -3.5522446632385254
    5. 'list' → logprob: -3.8022446632385254
    6. '[int' → logprob: -7.177244663238525
    7. '[x' → logprob: -8.177245140075684
    8. '[len' → logprob: -8.927245140075684
    9. '[i' → logprob: -9.927245140075684
    10. '[List' → logprob: -10.052245140075684

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030281138606369495
    2. ' for' → logprob: -8.125303268432617
    3. '[' → logprob: -13.000303268432617
    4. 'f' → logprob: -13.500303268432617
    5. 'x' → logprob: -13.750303268432617
    6. '```' → logprob: -13.750303268432617
    7. 'n' → logprob: -15.125303268432617
    8. '	for' → logprob: -15.750303268432617
    9. '
' → logprob: -16.000303268432617
    10. 'i' → logprob: -16.250303268432617

Token 40: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25817224383354187
    2. ' x' → logprob: -2.6331722736358643
    3. ' _' → logprob: -2.6331722736358643
    4. '_' → logprob: -3.2581722736358643
    5. ' ' → logprob: -3.2581722736358643
    6. 'i' → logprob: -5.383172035217285
    7. 'x' → logprob: -6.133172035217285
    8. '  ' → logprob: -9.758172035217285
    9. '_x' → logprob: -10.633172035217285
    10. '_i' → logprob: -10.758172035217285

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010307375341653824
    2. 'in' → logprob: -4.635307312011719
    3. ' ' → logprob: -7.635307312011719
    4. '_' → logprob: -10.510307312011719
    5. '  ' → logprob: -11.385307312011719
    6. ' _' → logprob: -11.885307312011719
    7. 'v' → logprob: -12.260307312011719
    8. ' i' → logprob: -12.635307312011719
    9. '_in' → logprob: -12.760307312011719
    10. '	in' → logprob: -13.135307312011719

Token 42: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013259568950161338
    2. ' x' → logprob: -6.626326084136963
    3. 'range' → logprob: -18.751325607299805
    4. '	x' → logprob: -18.751325607299805
    5. ' ' → logprob: -19.001325607299805
    6. '(x' → logprob: -20.001325607299805
    7. ' range' → logprob: -20.376325607299805
    8. '_x' → logprob: -20.626325607299805
    9. ')x' → logprob: -21.001325607299805
    10. ' xrange' → logprob: -21.126325607299805

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.68022444692906e-05
    2. '_' → logprob: -10.250046730041504
    3. '_x' → logprob: -11.500046730041504
    4. '_str' → logprob: -14.625046730041504
    5. '_:' → logprob: -15.250046730041504
    6. '_l' → logprob: -15.750046730041504
    7. 's' → logprob: -16.87504768371582
    8. ' _' → logprob: -17.00004768371582
    9. '_s' → logprob: -17.25004768371582
    10. 'list' → logprob: -17.25004768371582

Token 44: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43125247955322266
    2. '_str' → logprob: -1.0562524795532227
    3. '_:' → logprob: -7.056252479553223
    4. '_list' → logprob: -7.681252479553223
    5. ':_' → logprob: -7.806252479553223
    6. '_' → logprob: -7.931252479553223
    7. ':
' → logprob: -9.431252479553223
    8. '.append' → logprob: -9.556252479553223
    9. '):' → logprob: -9.681252479553223
    10. ':str' → logprob: -10.181252479553223

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.8497312895488e-05
    2. ' :' → logprob: -9.875068664550781
    3. ':int' → logprob: -12.250068664550781
    4. '):' → logprob: -12.375068664550781
    5. ':
' → logprob: -12.875068664550781
    6. ':v' → logprob: -13.625068664550781
    7. 'v' → logprob: -13.750068664550781
    8. ':list' → logprob: -13.750068664550781
    9. ':**' → logprob: -14.500068664550781
    10. '.append' → logprob: -15.000068664550781

Token 46: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04121256247162819
    2. 'x' → logprob: -3.416212558746338
    3. '   ' → logprob: -5.166212558746338
    4. ' 
' → logprob: -6.541212558746338
    5. ' ' → logprob: -8.541213035583496
    6. '    
' → logprob: -9.291213035583496
    7. '    ' → logprob: -10.166213035583496
    8. '	x' → logprob: -10.541213035583496
    9. '```' → logprob: -11.166213035583496
    10. '0' → logprob: -11.791213035583496

Token 47: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1602296084165573
    2. 'x' (adapté à ' x') → logprob: -1.9102295637130737
    3. '   ' → logprob: -12.410229682922363
    4. ' ' → logprob: -14.660229682922363
    5. '    ' → logprob: -15.160229682922363
    6. 'n' → logprob: -16.160228729248047
    7. '0' → logprob: -16.410228729248047
    8. '	x' → logprob: -16.535228729248047
    9. 'v' → logprob: -16.660228729248047
    10. ' 
' → logprob: -16.785228729248047

Token 48: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00014013137842994183
    2. '_' → logprob: -9.000140190124512
    3. '_li' → logprob: -11.750140190124512
    4. '_lst' → logprob: -12.500140190124512
    5. ')_' → logprob: -13.750140190124512
    6. '_l' → logprob: -14.000140190124512
    7. '_lista' → logprob: -14.000140190124512
    8. '_lists' → logprob: -14.375140190124512
    9. ' _' → logprob: -14.875140190124512
    10. '_ls' → logprob: -15.500140190124512

Token 49: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013363128527998924
    2. '.' → logprob: -6.626336097717285
    3. '.extend' → logprob: -12.376336097717285
    4. ' .' → logprob: -12.876336097717285
    5. '._' → logprob: -13.751336097717285
    6. '.app' → logprob: -14.126336097717285
    7. 'append' → logprob: -14.251336097717285
    8. '_append' → logprob: -15.126336097717285
    9. ').' → logprob: -15.501336097717285
    10. '   ' → logprob: -16.0013370513916

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031857939902693033
    2. '(' → logprob: -5.753185749053955
    3. 'int' → logprob: -12.378186225891113
    4. ' (' → logprob: -13.128186225891113
    5. '(i' → logprob: -14.253186225891113
    6. '(float' → logprob: -15.003186225891113
    7. '(in' → logprob: -15.503186225891113
    8. '(v' → logprob: -15.753186225891113
    9. '(
' → logprob: -15.878186225891113
    10. ' int' → logprob: -16.253185272216797

Token 51: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.10021767020225525
    2. '(' → logprob: -2.350217580795288
    3. ')(' → logprob: -12.475217819213867
    4. ')' → logprob: -12.725217819213867
    5. ' (' → logprob: -13.475217819213867
    6. '(
' → logprob: -13.850217819213867
    7. '(x' → logprob: -13.975217819213867
    8. ')v' → logprob: -15.100217819213867
    9. '((' → logprob: -15.225217819213867
    10. '(

' → logprob: -15.475217819213867

Token 52: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07890091091394424
    2. ')' → logprob: -2.5789008140563965
    3. '))
' → logprob: -12.328901290893555
    4. ')
' → logprob: -12.703901290893555
    5. ')))' → logprob: -12.953901290893555
    6. ' ))' → logprob: -14.578901290893555
    7. ')v' → logprob: -14.828901290893555
    8. '),' → logprob: -15.203901290893555
    9. ' )' → logprob: -16.703901290893555
    10. 'v' → logprob: -16.953901290893555

Token 53: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.6831467151641846
    2. 'count' → logprob: -2.0581467151641846
    3. 'x' → logprob: -2.3081467151641846
    4. 's' → logprob: -2.6831467151641846
    5. 'for' → logprob: -2.6831467151641846
    6. 'sum' → logprob: -2.8081467151641846
    7. 'ans' → logprob: -3.0581467151641846
    8. 'if' → logprob: -3.0581467151641846
    9. 'total' → logprob: -3.4331467151641846
    10. 'i' → logprob: -3.6831467151641846

Token 54: ' my' (ID: 922)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8385744094848633
    2. ' calculate' → logprob: -1.8385744094848633
    3. ' max' → logprob: -2.5885744094848633
    4. ' find' → logprob: -2.7135744094848633
    5. ' sum' → logprob: -3.0885744094848633
    6. ' count' → logprob: -3.4635744094848633
    7. ' solve' → logprob: -3.4635744094848633
    8. ' space' → logprob: -3.5885744094848633
    9. ' factorial' → logprob: -3.8385744094848633
    10. ' f' → logprob: -4.338574409484863

Token 55: '_g' (ID: 5439)
  Prédit: '_function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.08230035752058029
    2. '_func' → logprob: -2.9573004245758057
    3. '_' → logprob: -3.9573004245758057
    4. '_sum' → logprob: -5.707300186157227
    5. '_factor' → logprob: -6.707300186157227
    6. '_m' → logprob: -7.457300186157227
    7. '_max' → logprob: -7.582300186157227
    8. '_f' → logprob: -7.957300186157227
    9. '_fun' → logprob: -8.082300186157227
    10. '_add' → logprob: -8.957300186157227

Token 56: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.024525973945856094
    2. 'et' → logprob: -4.399526119232178
    3. 'en' → logprob: -5.899526119232178
    4. 'enerator' → logprob: -6.024526119232178
    5. 'enerate' → logprob: -6.399526119232178
    6. 'roup' → logprob: -7.399526119232178
    7. 'e' → logprob: -7.774526119232178
    8. 'em' → logprob: -7.774526119232178
    9. 'reat' → logprob: -8.02452564239502
    10. 'ame' → logprob: -8.14952564239502

Token 57: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6361696124076843
    2. '(' → logprob: -0.7611696124076843
    3. '(n' → logprob: -6.13616943359375
    4. '(x' → logprob: -6.63616943359375
    5. '(i' → logprob: -11.13616943359375
    6. ' (' → logprob: -11.51116943359375
    7. '(num' → logprob: -11.88616943359375
    8. '(
' → logprob: -11.88616943359375
    9. 'a' → logprob: -12.13616943359375
    10. '("("' → logprob: -12.13616943359375

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002201167168095708
    2. ',b' → logprob: -6.252201080322266
    3. ' ,' → logprob: -8.752201080322266
    4. ',a' → logprob: -9.127201080322266
    5. ',int' → logprob: -14.127201080322266
    6. ',n' → logprob: -14.252201080322266
    7. ',
' → logprob: -14.252201080322266
    8. 'a' → logprob: -14.377201080322266
    9. ',d' → logprob: -15.127201080322266
    10. ',m' → logprob: -15.127201080322266

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020925104618073
    2. ' b' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.35020923614502
    4. '   ' → logprob: -15.10020923614502
    5. ',b' → logprob: -15.47520923614502
    6. '	b' → logprob: -15.85020923614502
    7. ')b' → logprob: -15.97520923614502
    8. '  ' → logprob: -16.100210189819336
    9. ')' → logprob: -16.600210189819336
    10. ' ' → logprob: -16.725210189819336

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012458281125873327
    2. ')' → logprob: -6.751245975494385
    3. '):
' → logprob: -10.126245498657227
    4. ',' → logprob: -11.251245498657227
    5. ' ):' → logprob: -11.376245498657227
    6. ':' → logprob: -11.626245498657227
    7. '   ' → logprob: -14.251245498657227
    8. '=' → logprob: -15.126245498657227
    9. '):
' → logprob: -15.376245498657227
    10. ' ' → logprob: -15.501245498657227

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005041271448135376
    2. ' ' → logprob: -6.130041122436523
    3. ' if' → logprob: -6.630041122436523
    4. ':' → logprob: -7.005041122436523
    5. '    
' → logprob: -8.880041122436523
    6. 'if' → logprob: -8.880041122436523
    7. ' 
' → logprob: -9.255041122436523
    8. '	if' → logprob: -10.005041122436523
    9. '    ' → logprob: -10.130041122436523
    10. '  
' → logprob: -10.630041122436523

Token 62: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29032349586486816
    2. ' if' → logprob: -1.5403234958648682
    3. ' while' → logprob: -4.290323257446289
    4. 'while' (adapté à ' while') → logprob: -4.290323257446289
    5. '   ' → logprob: -4.665323257446289
    6. ' ' → logprob: -7.415323257446289
    7. 'import' → logprob: -9.915323257446289
    8. ' i' → logprob: -10.040323257446289
    9. 'i' → logprob: -10.040323257446289
    10. 'return' → logprob: -10.165323257446289

Token 63: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.348948210477829
    2. 'b' → logprob: -1.2239482402801514
    3. 'a' → logprob: -8.09894847869873
    4. ' a' → logprob: -8.72394847869873
    5. '	b' → logprob: -10.84894847869873
    6. '(b' → logprob: -11.59894847869873
    7. ' ' → logprob: -12.59894847869873
    8. '_b' → logprob: -12.84894847869873
    9. '   ' → logprob: -13.97394847869873
    10. '(a' → logprob: -14.22394847869873

Token 64: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.35761740803718567
    2. ':' → logprob: -1.7326173782348633
    3. '!=' → logprob: -2.1076173782348633
    4. '>' → logprob: -6.232617378234863
    5. ' >' → logprob: -8.607617378234863
    6. ':
' → logprob: -10.232617378234863
    7. ' :' → logprob: -10.732617378234863
    8. '   ' → logprob: -10.982617378234863
    9. ' ' → logprob: -10.982617378234863
    10. ' and' → logprob: -10.982617378234863

Token 65: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740777611732483
    2. '0' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.099078178405762
    4. '  ' → logprob: -15.349078178405762
    5. '   ' → logprob: -15.724078178405762
    6. ' 

' → logprob: -17.536577224731445
    7. '	' → logprob: -17.536577224731445
    8. ' 
' → logprob: -17.849077224731445
    9. '```' → logprob: -18.286577224731445
    10. '۰' → logprob: -18.411577224731445

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '00' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.562503814697266
    5. 'a' → logprob: -18.062503814697266
    6. '000' → logprob: -18.375003814697266
    7. '```' → logprob: -18.437503814697266
    8. 'zero' → logprob: -19.000003814697266
    9. '０' → logprob: -19.250003814697266
    10. '  ' → logprob: -19.312503814697266

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037794087547808886
    2. ':
' → logprob: -5.628779411315918
    3. '):' → logprob: -9.628779411315918
    4. '   ' → logprob: -9.628779411315918
    5. ' :' → logprob: -11.378779411315918
    6. ',' → logprob: -11.878779411315918
    7. '):
' → logprob: -12.003779411315918
    8. '       ' → logprob: -12.003779411315918
    9. ' and' → logprob: -12.503779411315918
    10. ':return' → logprob: -12.753779411315918

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02436264045536518
    2. 'a' → logprob: -4.024362564086914
    3. ' a' → logprob: -5.649362564086914
    4. '   ' → logprob: -6.274362564086914
    5. '    ' → logprob: -7.899362564086914
    6. ',' → logprob: -9.774362564086914
    7. ' 
' → logprob: -10.024362564086914
    8. '        
' → logprob: -10.149362564086914
    9. '    
' → logprob: -10.149362564086914
    10. ' ' → logprob: -10.399362564086914

Token 69: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.10040000826120377
    2. ' a' → logprob: -2.350399971008301
    3. 'r' → logprob: -9.1003999710083
    4. '   ' → logprob: -10.2253999710083
    5. '    ' → logprob: -10.9753999710083
    6. ' r' → logprob: -11.9753999710083
    7. 'temp' → logprob: -12.1003999710083
    8. '	a' → logprob: -12.6003999710083
    9. 't' → logprob: -12.7253999710083
    10. ' remainder' → logprob: -13.2253999710083

Token 70: ',' (ID: 11)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5809867978096008
    2. ',' → logprob: -0.9559867978096008
    3. ' %' → logprob: -3.330986738204956
    4. ' %=' → logprob: -4.205986976623535
    5. '%=' → logprob: -5.705986976623535
    6. '%b' → logprob: -6.580986976623535
    7. '%,' → logprob: -7.955986976623535
    8. ' ,' → logprob: -8.205986976623535
    9. '%i' → logprob: -9.455986976623535
    10. '=' → logprob: -10.580986976623535

Token 71: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868768811225891
    2. 'b' → logprob: -1.1368768215179443
    3. ' ' → logprob: -12.511877059936523
    4. '<|end|>' → logprob: -13.136877059936523
    5. ' ' → logprob: -16.511877059936523
    6. ' 
' → logprob: -18.011877059936523
    7. 's' → logprob: -18.261877059936523
    8. '    ' → logprob: -18.386877059936523
    9. '	b' → logprob: -18.386877059936523
    10. '<|end|>' → logprob: -18.761877059936523

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. '=

' → logprob: -15.436967849731445
    4. '%=' → logprob: -16.311967849731445
    5. ',' → logprob: -16.936967849731445
    6. ' ' → logprob: -17.061967849731445
    7. '   ' → logprob: -17.436967849731445
    8. '=
' → logprob: -17.936967849731445
    9. '=}' → logprob: -17.936967849731445
    10. '<|end|>' → logprob: -18.436967849731445

Token 73: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1269282102584839
    2. 'b' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. '	b' → logprob: -17.751928329467773
    5. ' ' → logprob: -17.876928329467773
    6. '(b' → logprob: -18.626928329467773
    7. '>b' → logprob: -18.876928329467773
    8. ')b' → logprob: -19.251928329467773
    9. '   ' → logprob: -19.626928329467773
    10. ' (' → logprob: -19.751928329467773

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',
' → logprob: -14.75000286102295
    4. 'a' → logprob: -15.00000286102295
    5. ',a' → logprob: -15.75000286102295
    6. ',

' → logprob: -16.125001907348633
    7. ' ' → logprob: -17.375001907348633
    8. '<|end|>' → logprob: -17.375001907348633
    9. '%' → logprob: -17.500001907348633
    10. ',b' → logprob: -17.625001907348633

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12692873179912567
    2. ' a' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.501928329467773
    4. '	a' → logprob: -16.126928329467773
    5. ' ' → logprob: -17.501928329467773
    6. '>a' → logprob: -17.876928329467773
    7. '<|end|>' → logprob: -18.251928329467773
    8. 'A' → logprob: -19.126928329467773
    9. '"a' → logprob: -19.251928329467773
    10. '_a' → logprob: -19.251928329467773

Token 76: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38696324825286865
    2. '%' → logprob: -1.1369632482528687
    3. 'a' → logprob: -9.511962890625
    4. '%b' → logprob: -11.886962890625
    5. '%A' → logprob: -11.886962890625
    6. '%i' → logprob: -13.636962890625
    7. ' ' → logprob: -13.761962890625
    8. ' a' → logprob: -14.011962890625
    9. ' ' → logprob: -15.011962890625
    10. '%x' → logprob: -15.511962890625

Token 77: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. ' ' → logprob: -21.500335693359375
    4. '	b' → logprob: -21.750335693359375
    5. '<|end|>' → logprob: -22.625335693359375
    6. '%b' → logprob: -23.500335693359375
    7. '  ' → logprob: -23.625335693359375
    8. '   ' → logprob: -24.125335693359375
    9. ')b' → logprob: -24.625335693359375
    10. '>b' → logprob: -24.875335693359375

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37725454568862915
    2. 'a' → logprob: -1.7522544860839844
    3. ' return' → logprob: -2.5022544860839844
    4. '   ' → logprob: -2.8772544860839844
    5. ' a' → logprob: -6.502254486083984
    6. ' ' → logprob: -7.252254486083984
    7. '	return' → logprob: -8.627254486083984
    8. ':return' → logprob: -9.627254486083984
    9. '_return' → logprob: -9.877254486083984
    10. 'eturn' → logprob: -10.002254486083984

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0380416102707386
    2. ' a' → logprob: -3.288041591644287
    3. '	a' → logprob: -16.288042068481445
    4. ' ' → logprob: -17.788042068481445
    5. 'abs' → logprob: -17.788042068481445
    6. ' abs' → logprob: -18.288042068481445
    7. ' ' → logprob: -18.413042068481445
    8. '   ' → logprob: -19.038042068481445
    9. '_a' → logprob: -19.538042068481445
    10. ''a' → logprob: -20.288042068481445

Token 82: '

' (ID: 279)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07721331715583801
    2. '_' → logprob: -3.7022132873535156
    3. 'result' → logprob: -3.9522132873535156
    4. 'n' → logprob: -4.952213287353516
    5. 'm' → logprob: -4.952213287353516
    6. 'def' → logprob: -5.452213287353516
    7. 'x' → logprob: -5.952213287353516
    8. 'a' → logprob: -6.202213287353516
    9. '#' → logprob: -7.327213287353516
    10. 'current' → logprob: -7.452213287353516

Token 83: 'current' (ID: 5804)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.34658342599868774
    2. 'result' → logprob: -1.971583366394043
    3. 'ans' → logprob: -2.846583366394043
    4. 'res' → logprob: -3.721583366394043
    5. 'answer' → logprob: -3.971583366394043
    6. 'current' → logprob: -4.096583366394043
    7. 'd' → logprob: -4.971583366394043
    8. 'from' → logprob: -5.221583366394043
    9. 'm' → logprob: -5.846583366394043
    10. 'cur' → logprob: -5.971583366394043

Token 84: ' =' (ID: 314)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.3980381190776825
    2. '_' → logprob: -1.1480381488800049
    3. ' _' → logprob: -5.648037910461426
    4. '_value' → logprob: -5.898037910461426
    5. '_val' → logprob: -6.398037910461426
    6. ' =' → logprob: -6.773037910461426
    7. '_x' → logprob: -8.148037910461426
    8. '_gap' → logprob: -8.148037910461426
    9. '_n' → logprob: -8.648037910461426
    10. '_num' → logprob: -8.898037910461426

Token 85: ' abs' (ID: 8443)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036456878297030926
    2. ' x' → logprob: -5.628645896911621
    3. 'n' → logprob: -10.878645896911621
    4. '0' → logprob: -10.878645896911621
    5. 'abs' → logprob: -13.253645896911621
    6. ' ' → logprob: -13.878645896911621
    7. 'a' → logprob: -14.003645896911621
    8. '100' → logprob: -14.503645896911621
    9. '1' → logprob: -14.753645896911621
    10. '   ' → logprob: -14.878645896911621

Token 86: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015739024383947253
    2. '(' → logprob: -6.5015740394592285
    3. 'x' → logprob: -10.37657356262207
    4. '(a' → logprob: -11.00157356262207
    5. '(n' → logprob: -11.62657356262207
    6. '(current' → logprob: -11.87657356262207
    7. '((' → logprob: -12.50157356262207
    8. '(s' → logprob: -13.87657356262207
    9. '(
' → logprob: -14.12657356262207
    10. '(-' → logprob: -14.62657356262207

Token 87: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024521788582205772
    2. '_list' → logprob: -3.774521827697754
    3. '[current' → logprob: -6.899521827697754
    4. '-' → logprob: -9.774521827697754
    5. '-list' → logprob: -10.024521827697754
    6. ')' → logprob: -10.149521827697754
    7. '[-' → logprob: -10.524521827697754
    8. '_current' → logprob: -10.899521827697754
    9. '[i' → logprob: -11.024521827697754
    10. 'current' → logprob: -11.274521827697754

Token 88: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002428813371807337
    2. '0' → logprob: -6.752429008483887
    3. 'n' → logprob: -6.877429008483887
    4. ' x' → logprob: -8.752429008483887
    5. '1' → logprob: -10.127429008483887
    6. ')' → logprob: -12.002429008483887
    7. ' ' → logprob: -12.377429008483887
    8. 'current' → logprob: -13.002429008483887
    9. 'a' → logprob: -13.127429008483887
    10. '2' → logprob: -13.252429008483887

Token 89: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4378645718097687
    2. '_list' → logprob: -1.3128645420074463
    3. '[i' → logprob: -2.9378645420074463
    4. ')' → logprob: -3.6878645420074463
    5. 'List' → logprob: -5.437864780426025
    6. '[n' → logprob: -6.937864780426025
    7. '[current' → logprob: -7.312864780426025
    8. 'current' → logprob: -7.937864780426025
    9. '[List' → logprob: -8.437864303588867
    10. 'list' → logprob: -8.437864303588867

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.417976379045285e-05
    2. '0' → logprob: -10.375043869018555
    3. '[i' → logprob: -12.250043869018555
    4. '[-' → logprob: -12.875043869018555
    5. ')' → logprob: -13.375043869018555
    6. ' [' → logprob: -13.750043869018555
    7. ' ' → logprob: -14.750043869018555
    8. '[n' → logprob: -15.125043869018555
    9. '\[' → logprob: -15.125043869018555
    10. '[
' → logprob: -15.250043869018555

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.40998875699006e-05
    2. ' ' → logprob: -9.75007438659668
    3. '1' → logprob: -12.31257438659668
    4. '-' → logprob: -12.37507438659668
    5. '[' → logprob: -13.18757438659668
    6. '])' → logprob: -13.87507438659668
    7. ')' → logprob: -14.50007438659668
    8. '   ' → logprob: -14.75007438659668
    9. ']' → logprob: -14.75007438659668
    10. 'n' → logprob: -15.00007438659668

Token 92: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. '))' → logprob: -10.250040054321289
    3. ' )' → logprob: -12.750040054321289
    4. ')))' → logprob: -14.250040054321289
    5. '])' → logprob: -15.500040054321289
    6. ')
' → logprob: -15.500040054321289
    7. '   ' → logprob: -16.00004005432129
    8. ')>' → logprob: -16.25004005432129
    9. '})' → logprob: -16.25004005432129
    10. '),' → logprob: -16.87504005432129

Token 93: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16704852879047394
    2. '\n' → logprob: -2.667048454284668
    3. '
' → logprob: -3.042048454284668
    4. ' for' → logprob: -4.292048454284668
    5. '<|end|>' → logprob: -4.542048454284668
    6. '+' → logprob: -5.417048454284668
    7. '```' → logprob: -5.667048454284668
    8. '  
' → logprob: -6.667048454284668
    9. '+
' → logprob: -7.417048454284668
    10. '[' → logprob: -7.667048454284668

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0616784542798996
    2. 'i' → logprob: -2.936678409576416
    3. ' v' → logprob: -5.311678409576416
    4. 'v' → logprob: -7.061678409576416
    5. ' ' → logprob: -7.311678409576416
    6. ' x' → logprob: -9.686678886413574
    7. '_' → logprob: -9.686678886413574
    8. '_i' → logprob: -10.186678886413574
    9. ' _' → logprob: -10.311678886413574
    10. 'x' → logprob: -10.936678886413574

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0163860023021698
    2. 'in' → logprob: -4.266386032104492
    3. ' range' → logprob: -7.016386032104492
    4. ' ' → logprob: -7.391386032104492
    5. 'range' → logprob: -7.391386032104492
    6. '  ' → logprob: -9.891386032104492
    7. '   ' → logprob: -10.391386032104492
    8. '(range' → logprob: -12.391386032104492
    9. '	range' → logprob: -13.891386032104492
    10. ' xrange' → logprob: -14.016386032104492

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869728744029999
    2. ' range' → logprob: -1.1369729042053223
    3. 'x' → logprob: -9.511972427368164
    4. ' x' → logprob: -11.261972427368164
    5. ' ' → logprob: -12.136972427368164
    6. ' xrange' → logprob: -12.761972427368164
    7. '	range' → logprob: -12.886972427368164
    8. '(range' → logprob: -13.636972427368164
    9. 'r' → logprob: -14.136972427368164
    10. '   ' → logprob: -14.261972427368164

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(len' → logprob: -16.125
    3. '(n' → logprob: -17.0
    4. '(
' → logprob: -18.25
    5. ' (' → logprob: -18.625
    6. '1' → logprob: -21.375
    7. '(

' → logprob: -21.625
    8. '()' → logprob: -21.75
    9. '(i' → logprob: -22.625
    10. ' ' → logprob: -22.75

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. 'n' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.625018119812012
    4. '   ' → logprob: -13.250018119812012
    5. 'len' → logprob: -13.625018119812012
    6. '2' → logprob: -16.875017166137695
    7. '(' → logprob: -17.500017166137695
    8. '  ' → logprob: -17.750017166137695
    9. '0' → logprob: -18.250017166137695
    10. ' n' → logprob: -18.750017166137695

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022344745229929686
    2. ',n' → logprob: -6.25223445892334
    3. ',len' → logprob: -8.37723445892334
    4. ' ,' → logprob: -9.50223445892334
    5. 'n' → logprob: -14.25223445892334
    6. 'len' → logprob: -15.37723445892334
    7. ' n' → logprob: -17.377235412597656
    8. '   ' → logprob: -17.752235412597656
    9. '(len' → logprob: -17.752235412597656
    10. ',num' → logprob: -17.752235412597656

Token 100: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03919050097465515
    2. ' n' → logprob: -3.2891905307769775
    3. 'len' → logprob: -7.164190292358398
    4. ' len' → logprob: -7.914190292358398
    5. '   ' → logprob: -12.164190292358398
    6. ' ' → logprob: -13.289190292358398
    7. '	n' → logprob: -13.914190292358398
    8. '  ' → logprob: -14.789190292358398
    9. '    ' → logprob: -15.414190292358398
    10. ')' → logprob: -16.2891902923584

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03811711072921753
    2. '):
' → logprob: -3.2881171703338623
    3. ' ):' → logprob: -9.913117408752441
    4. '):
' → logprob: -10.788117408752441
    5. ':' → logprob: -13.038117408752441
    6. ' ):
' → logprob: -13.288117408752441
    7. ')' → logprob: -14.288117408752441
    8. '):

' → logprob: -14.913117408752441
    9. '）：' → logprob: -15.788117408752441
    10. '   ' → logprob: -16.413116455078125

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06331378221511841
    2. ' current' → logprob: -3.4383137226104736
    3. 'current' → logprob: -3.8133137226104736
    4. '
' → logprob: -5.313313961029053
    5. '    
' → logprob: -7.063313961029053
    6. '```' → logprob: -7.563313961029053
    7. '<|end|>' → logprob: -8.188313484191895
    8. ' ' → logprob: -8.563313484191895
    9. '	current' → logprob: -8.938313484191895
    10. '  
' → logprob: -10.438313484191895

Token 103: ' diff' (ID: 8868)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04364907369017601
    2. 'current' → logprob: -3.2936489582061768
    3. '
' → logprob: -5.918649196624756
    4. '   ' → logprob: -5.918649196624756
    5. '	current' → logprob: -9.668648719787598
    6. '```' → logprob: -9.793648719787598
    7. '    
' → logprob: -10.293648719787598
    8. ' 
' → logprob: -11.668648719787598
    9. ' gcd' → logprob: -12.043648719787598
    10. ' ' → logprob: -12.043648719787598

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021205991506577
    2. '=' → logprob: -2.3502120971679688
    3. '   ' → logprob: -12.975212097167969
    4. 's' → logprob: -13.850212097167969
    5. ' ' → logprob: -14.350212097167969
    6. '_' → logprob: -14.350212097167969
    7. ')' → logprob: -15.350212097167969
    8. '  ' → logprob: -15.350212097167969
    9. '	' → logprob: -16.10021209716797
    10. '    ' → logprob: -16.35021209716797

Token 105: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03867774456739426
    2. ' abs' → logprob: -3.28867769241333
    3. '   ' → logprob: -7.41367769241333
    4. 'current' → logprob: -10.913678169250488
    5. '(abs' → logprob: -11.913678169250488
    6. ' current' → logprob: -12.163678169250488
    7. ' ' → logprob: -14.038678169250488
    8. '    ' → logprob: -14.413678169250488
    9. '.abs' → logprob: -14.413678169250488
    10. '  ' → logprob: -14.663678169250488

Token 106: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00011164903844473884
    2. 'x' → logprob: -9.62511157989502
    3. '(' → logprob: -10.00011157989502
    4. '(
' → logprob: -16.750112533569336
    5. ' x' → logprob: -17.125112533569336
    6. '((' → logprob: -17.500112533569336
    7. ' (' → logprob: -18.875112533569336
    8. '(current' → logprob: -19.625112533569336
    9. '	x' → logprob: -19.875112533569336
    10. '_x' → logprob: -20.500112533569336

Token 107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06202874332666397
    2. '-' → logprob: -2.812028646469116
    3. '_list' → logprob: -10.187028884887695
    4. ' ' → logprob: -11.187028884887695
    5. 'x' → logprob: -12.812028884887695
    6. '   ' → logprob: -13.437028884887695
    7. '-x' → logprob: -13.437028884887695
    8. '-list' → logprob: -14.062028884887695
    9. ')' → logprob: -14.437028884887695
    10. ' -
' → logprob: -14.437028884887695

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005532711511477828
    2. ' x' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -15.625553131103516
    4. ')' → logprob: -17.375553131103516
    5. ' ' → logprob: -17.875553131103516
    6. ')x' → logprob: -18.250553131103516
    7. '	x' → logprob: -18.875553131103516
    8. '(x' → logprob: -19.000553131103516
    9. '_x' → logprob: -19.625553131103516
    10. '   ' → logprob: -20.125553131103516

Token 109: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.976922744186595e-05
    2. '[i' → logprob: -10.250040054321289
    3. 'list' → logprob: -12.750040054321289
    4. 'List' → logprob: -13.625040054321289
    5. '[' → logprob: -15.875040054321289
    6. '[_' → logprob: -16.87504005432129
    7. 'i' → logprob: -18.37504005432129
    8. ')' → logprob: -18.87504005432129
    9. '_LIST' → logprob: -18.87504005432129
    10. '_List' → logprob: -18.87504005432129

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. ' [' → logprob: -19.125
    4. '[I' → logprob: -19.375
    5. 'i' → logprob: -20.125
    6. '[j' → logprob: -20.875
    7. ')[' → logprob: -21.0
    8. ')' → logprob: -21.0
    9. '[u' → logprob: -21.0
    10. '[a' → logprob: -21.125

Token 111: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038574863225221634
    2. ')
' → logprob: -3.2885749340057373
    3. '   ' → logprob: -8.038575172424316
    4. '])' → logprob: -9.413575172424316
    5. ')
' → logprob: -9.913575172424316
    6. '))' → logprob: -10.038575172424316
    7. '])
' → logprob: -11.663575172424316
    8. ' )' → logprob: -11.788575172424316
    9. '))
' → logprob: -11.788575172424316
    10. ')`
' → logprob: -12.663575172424316

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07364945858716965
    2. 'current' → logprob: -2.8236494064331055
    3. '
' → logprob: -4.6986494064331055
    4. ' current' → logprob: -6.1986494064331055
    5. '    
' → logprob: -7.8236494064331055
    6. '	current' → logprob: -10.323649406433105
    7. ',current' → logprob: -11.698649406433105
    8. ')' → logprob: -12.198649406433105
    9. '
' → logprob: -12.448649406433105
    10. '```' → logprob: -12.698649406433105

Token 113: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4305897355079651
    2. 'current' (adapté à ' current') → logprob: -1.3055896759033203
    3. '   ' → logprob: -2.5555896759033203
    4. '
' → logprob: -6.93058967590332
    5. '	current' → logprob: -9.43058967590332
    6. '    
' → logprob: -9.68058967590332
    7. ' ' → logprob: -10.93058967590332
    8. ' if' → logprob: -11.30558967590332
    9. '```' → logprob: -11.30558967590332
    10. '.current' → logprob: -12.24308967590332

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. '=my' → logprob: -13.56814956665039
    4. ' ' → logprob: -14.81814956665039
    5. '=current' → logprob: -15.19314956665039
    6. '=g' → logprob: -16.44314956665039
    7. '   ' → logprob: -17.06814956665039
    8. '＝' → logprob: -17.06814956665039
    9. 'my' → logprob: -17.69314956665039
    10. '	' → logprob: -17.81814956665039

Token 115: ' my' (ID: 922)
  Prédit: ' my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.07889209687709808
    2. 'my' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.57889175415039
    4. '	my' → logprob: -14.57889175415039
    5. ' current' → logprob: -14.70389175415039
    6. '(my' → logprob: -16.57889175415039
    7. 'current' → logprob: -16.95389175415039
    8. '  ' → logprob: -17.57889175415039
    9. 'min' → logprob: -17.95389175415039
    10. ' max' → logprob: -18.45389175415039

Token 116: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -3.4121114822482923e-06
    2. 'g' → logprob: -12.875003814697266
    3. '_current' → logprob: -15.250003814697266
    4. '_' → logprob: -15.875003814697266
    5. 'current' → logprob: -16.125003814697266
    6. 'G' → logprob: -16.250003814697266
    7. '_c' → logprob: -16.375003814697266
    8. '_d' → logprob: -17.875003814697266
    9. '_gid' → logprob: -18.000003814697266
    10. '```' → logprob: -18.125003814697266

Token 117: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0007958084461279213
    2. 'c' → logprob: -7.625795841217041
    3. 'd' → logprob: -8.125795364379883
    4. 'current' → logprob: -12.000795364379883
    5. '_cd' → logprob: -13.500795364379883
    6. 'cdn' → logprob: -13.500795364379883
    7. 'dc' → logprob: -13.875795364379883
    8. 'CD' → logprob: -14.250795364379883
    9. 'Cd' → logprob: -15.000795364379883
    10. 'id' → logprob: -15.875795364379883

Token 118: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.625003814697266
    3. 'current' → logprob: -13.875003814697266
    4. '(cur' → logprob: -14.125003814697266
    5. '(curr' → logprob: -14.500003814697266
    6. ',current' → logprob: -15.625003814697266
    7. ' (' → logprob: -16.125003814697266
    8. '(c' → logprob: -17.375003814697266
    9. ' current' → logprob: -17.500003814697266
    10. '[current' → logprob: -18.125003814697266

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0049156504683196545
    2. ',d' → logprob: -5.379915714263916
    3. 'diff' → logprob: -8.754915237426758
    4. ' ,' → logprob: -9.004915237426758
    5. ' diff' → logprob: -11.629915237426758
    6. '(diff' → logprob: -12.379915237426758
    7. ',
' → logprob: -13.879915237426758
    8. '   ' → logprob: -14.254915237426758
    9. '	diff' → logprob: -16.379915237426758
    10. ')' → logprob: -16.754915237426758

Token 120: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.011049231514334679
    2. ' diff' → logprob: -4.511049270629883
    3. '	diff' → logprob: -14.011049270629883
    4. '(diff' → logprob: -14.636049270629883
    5. '   ' → logprob: -16.761049270629883
    6. 'dif' → logprob: -17.011049270629883
    7. 'difference' → logprob: -17.636049270629883
    8. ')' → logprob: -17.636049270629883
    9. ' ' → logprob: -18.011049270629883
    10. '.diff' → logprob: -18.511049270629883

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -13.875014305114746
    4. '   ' → logprob: -16.62501335144043
    5. '))' → logprob: -17.75001335144043
    6. ')return' → logprob: -18.00001335144043
    7. ')`' → logprob: -18.50001335144043
    8. ')

' → logprob: -18.87501335144043
    9. ')i' → logprob: -19.00001335144043
    10. ')
' → logprob: -19.37501335144043

Token 122: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002883913984987885
    2. '
' → logprob: -8.250288009643555
    3. 'current' → logprob: -11.500288009643555
    4. ')' → logprob: -12.000288009643555
    5. ' print' → logprob: -12.750288009643555
    6. ' 
' → logprob: -12.750288009643555
    7. ')
' → logprob: -13.000288009643555
    8. '  
' → logprob: -13.500288009643555
    9. '\n' → logprob: -15.000288009643555
    10. '(print' → logprob: -15.500288009643555

Token 123: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693166196346283
    2. '(current' → logprob: -0.693166196346283
    3. '('' → logprob: -12.19316577911377
    4. '("("' → logprob: -12.19316577911377
    5. '(cur' → logprob: -12.94316577911377
    6. 'current' → logprob: -13.06816577911377
    7. '((' → logprob: -13.94316577911377
    8. '()' → logprob: -13.94316577911377
    9. '(curr' → logprob: -14.44316577911377
    10. ' (' → logprob: -14.81816577911377

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')`' → logprob: -15.250000953674316
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -16.625
    5. ')
' → logprob: -17.125
    6. '')' → logprob: -18.25
    7. ')}' → logprob: -19.25
    8. '`)' → logprob: -19.625
    9. ')**' → logprob: -19.625
    10. ')#' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 45.90%
Précision adaptée (1ère position): 47.54%
Précision (top 10): 79.51%
================================================================================
