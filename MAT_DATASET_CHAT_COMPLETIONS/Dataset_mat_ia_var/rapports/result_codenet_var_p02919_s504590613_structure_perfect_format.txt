================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
A = list(map(int, input().split()))
A = [a - 1 for a in A]

P = [-1] * n
for i, a in enumerate(A):
    P[a] = i

R = [[n] * 2 for _ in range(n)]
q = []
import heapq
heapq.heapify(q)
for i in range(n):
    temp = []
    while q:
        if q[0][0] < A[i]:
            v, j = heapq.heappop(q)
            R[v][j] = i
            if j == 0:
                temp.append((v, j + 1))
        else:
            break
    heapq.heappush(q, (A[i], 0))
    for v, j in temp:
        heapq.heappush(q, (v, j))

L = [[-1] * 2 for _ in range(n)]
q = []
import heapq
heapq.heapify(q)
for i in reversed(range(n)):
    temp = []
    while q:
        if q[0][0] < A[i]:
            v, j = heapq.heappop(q)
            L[v][j] = i
            if j == 0:
                temp.append((v, j + 1))
        else:
            break
    heapq.heappush(q, (A[i], 0))
    for v, j in temp:
        heapq.heappush(q, (v, j))

ans = 0
for i in range(n - 1):
    p = P[i]
    l1 = L[i][0]
    l2 = L[i][1]
    r1 = R[i][0]
    r2 = R[i][1]
    ans += ((l1 - l2) * (r1 - p) + (r2 - r1) * (p - l1)) * (i + 1)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7192649245262146
    2. ')' → logprob: -0.7192649245262146
    3. '()' → logprob: -3.9692649841308594
    4. '())' → logprob: -5.219264984130859
    5. '(
' → logprob: -8.09426498413086
    6. '```' → logprob: -8.71926498413086
    7. '[' → logprob: -9.21926498413086
    8. '))' → logprob: -9.34426498413086
    9. '(()' → logprob: -9.34426498413086
    10. '")' → logprob: -9.46926498413086

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03011120855808258
    2. ' =' → logprob: -3.780111312866211
    3. '=' → logprob: -5.905111312866211
    4. '.' → logprob: -6.780111312866211
    5. '[i' → logprob: -6.905111312866211
    6. '[:]' → logprob: -7.155111312866211
    7. '.append' → logprob: -8.030111312866211
    8. ',' → logprob: -8.655111312866211
    9. '\[' → logprob: -8.905111312866211
    10. ' ' → logprob: -9.155111312866211

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6914141774177551
    2. ' []' → logprob: -1.3164141178131104
    3. ' [' → logprob: -2.3164141178131104
    4. '[' → logprob: -2.6914141178131104
    5. 'list' → logprob: -3.5664141178131104
    6. ' list' → logprob: -4.0664143562316895
    7. '[input' → logprob: -4.6914143562316895
    8. '[list' → logprob: -5.4414143562316895
    9. '[int' → logprob: -5.5664143562316895
    10. '[n' → logprob: -6.4414143562316895

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006995689473114908
    2. '[' → logprob: -8.125699996948242
    3. '(range' → logprob: -8.250699996948242
    4. '```' → logprob: -10.250699996948242
    5. '[(' → logprob: -10.500699996948242
    6. ')' → logprob: -11.250699996948242
    7. '(
' → logprob: -11.375699996948242
    8. ' (' → logprob: -11.750699996948242
    9. '("("' → logprob: -11.750699996948242
    10. ''s' → logprob: -12.125699996948242

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06095496565103531
    2. '(' → logprob: -3.060955047607422
    3. '(str' → logprob: -4.685955047607422
    4. '(input' → logprob: -6.310955047607422
    5. '(lambda' → logprob: -7.435955047607422
    6. 'int' → logprob: -8.435955047607422
    7. '(eval' → logprob: -9.310955047607422
    8. ')' → logprob: -9.310955047607422
    9. '<int' → logprob: -9.810955047607422
    10. '```' → logprob: -9.810955047607422

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008144546300172806
    2. '(' → logprob: -5.633144378662109
    3. ',input' → logprob: -5.758144378662109
    4. '))' → logprob: -7.633144378662109
    5. ')' → logprob: -8.00814437866211
    6. 'input' → logprob: -8.63314437866211
    7. ',' → logprob: -8.88314437866211
    8. '=input' → logprob: -9.13314437866211
    9. '<input' → logprob: -10.38314437866211
    10. '[input' → logprob: -11.00814437866211

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014179375022649765
    2. ' input' → logprob: -4.264179229736328
    3. '(input' → logprob: -11.139179229736328
    4. ',input' → logprob: -14.389179229736328
    5. '=input' → logprob: -15.514179229736328
    6. ')' → logprob: -15.639179229736328
    7. '<input' → logprob: -15.889179229736328
    8. '	input' → logprob: -15.889179229736328
    9. ' ' → logprob: -16.139179229736328
    10. '```' → logprob: -17.264179229736328

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2347685992717743
    2. '()))' → logprob: -1.8597686290740967
    3. '()' → logprob: -3.1097686290740967
    4. '().' → logprob: -5.484768390655518
    5. ')' → logprob: -6.234768390655518
    6. '(' → logprob: -6.484768390655518
    7. '()));' → logprob: -7.609768390655518
    8. '()>' → logprob: -8.609768867492676
    9. '))' → logprob: -8.859768867492676
    10. '())))' → logprob: -9.109768867492676

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005657802103087306
    2. 'strip' → logprob: -7.500566005706787
    3. 'rstrip' → logprob: -11.375565528869629
    4. ' split' → logprob: -14.000565528869629
    5. '(split' → logprob: -15.125565528869629
    6. ')' → logprob: -16.375566482543945
    7. 'spl' → logprob: -16.875566482543945
    8. 'replace' → logprob: -18.750566482543945
    9. 's' → logprob: -18.875566482543945
    10. '```' → logprob: -19.500566482543945

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7447766065597534
    2. '()))' → logprob: -0.9947766065597534
    3. ')' → logprob: -2.244776725769043
    4. '())' → logprob: -3.244776725769043
    5. '()' → logprob: -5.244776725769043
    6. '(' → logprob: -5.369776725769043
    7. ''))' → logprob: -8.869776725769043
    8. '('' → logprob: -8.994776725769043
    9. ')))' → logprob: -9.994776725769043
    10. '(','' → logprob: -9.994776725769043

Token 15: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38306814432144165
    2. 's' → logprob: -1.7580680847167969
    3. 'for' → logprob: -3.008068084716797
    4. 'sum' → logprob: -4.258068084716797
    5. 'result' → logprob: -4.758068084716797
    6. 'a' → logprob: -4.758068084716797
    7. 'print' → logprob: -4.758068084716797
    8. 'B' → logprob: -4.883068084716797
    9. 'count' → logprob: -4.883068084716797
    10. 'd' → logprob: -5.133068084716797

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1385158896446228
    2. '.' → logprob: -2.3885159492492676
    3. '```' → logprob: -4.263515949249268
    4. '<|end|>' → logprob: -4.263515949249268
    5. '\[' → logprob: -6.513515949249268
    6. '[:]' → logprob: -6.888515949249268
    7. '[
' → logprob: -7.013515949249268
    8. ')' → logprob: -7.138515949249268
    9. '[::-' → logprob: -7.263515949249268
    10. '#' → logprob: -7.388515949249268

Token 17: ' [' (ID: 723)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.0913797989487648
    2. 'sorted' → logprob: -2.4663798809051514
    3. ' [' → logprob: -6.841379642486572
    4. '[' → logprob: -7.341379642486572
    5. ' list' → logprob: -7.466379642486572
    6. ' ' → logprob: -9.96638011932373
    7. 'list' → logprob: -10.09138011932373
    8. '(sorted' → logprob: -11.34138011932373
    9. ' A' → logprob: -11.46638011932373
    10. ' []' → logprob: -12.46638011932373

Token 18: 'a' (ID: 64)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.060119397938251495
    2. 'A' → logprob: -3.685119390487671
    3. 'a' → logprob: -3.935119390487671
    4. ' x' → logprob: -4.68511962890625
    5. '0' → logprob: -6.31011962890625
    6. ' A' → logprob: -7.06011962890625
    7. 'i' → logprob: -7.68511962890625
    8. 'str' → logprob: -8.06011962890625
    9. 'abs' → logprob: -8.31011962890625
    10. ' a' → logprob: -8.81011962890625

Token 19: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7338660359382629
    2. '*' → logprob: -1.8588659763336182
    3. '**' → logprob: -1.9838659763336182
    4. '-' → logprob: -2.358865976333618
    5. ' for' → logprob: -2.483865976333618
    6. ' +' → logprob: -3.983865976333618
    7. ' *' → logprob: -4.358866214752197
    8. '%' → logprob: -4.608866214752197
    9. ' **' → logprob: -6.483866214752197
    10. ' %' → logprob: -6.858866214752197

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12791524827480316
    2. ' ' → logprob: -2.127915143966675
    3. ' min' → logprob: -7.877915382385254
    4. ' n' → logprob: -8.002915382385254
    5. 'min' → logprob: -8.752915382385254
    6. 'n' → logprob: -9.877915382385254
    7. ' A' → logprob: -11.002915382385254
    8. ' max' → logprob: -11.252915382385254
    9. 'max' → logprob: -11.752915382385254
    10. 'A' → logprob: -12.002915382385254

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029024742543697357
    2. 'min' → logprob: -6.377902507781982
    3. 'i' → logprob: -7.502902507781982
    4. 'n' → logprob: -8.127902030944824
    5. 'a' → logprob: -9.627902030944824
    6. 'A' → logprob: -9.627902030944824
    7. '(' → logprob: -9.877902030944824
    8. '2' → logprob: -10.127902030944824
    9. 'max' → logprob: -10.502902030944824
    10. ' ' → logprob: -11.127902030944824

Token 22: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04904091730713844
    2. 'for' → logprob: -3.0490410327911377
    3. ')' → logprob: -7.799040794372559
    4. '	for' → logprob: -10.674040794372559
    5. ' ' → logprob: -11.174040794372559
    6. ']' → logprob: -12.674040794372559
    7. ',' → logprob: -13.799040794372559
    8. 'a' → logprob: -14.549040794372559
    9. ' )' → logprob: -15.549040794372559
    10. '   ' → logprob: -15.674040794372559

Token 23: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2055935561656952
    2. ' a' → logprob: -1.7055935859680176
    3. 'A' → logprob: -5.705593585968018
    4. ' A' → logprob: -7.080593585968018
    5. '	a' → logprob: -13.70559310913086
    6. ' ' → logprob: -14.08059310913086
    7. '_a' → logprob: -15.08059310913086
    8. ' range' → logprob: -15.20559310913086
    9. 'range' → logprob: -16.58059310913086
    10. '(a' → logprob: -16.95559310913086

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09395425766706467
    2. 'a' → logprob: -3.34395432472229
    3. ' ' → logprob: -3.46895432472229
    4. ' a' → logprob: -3.84395432472229
    5. 'in' → logprob: -7.093954086303711
    6. ' A' → logprob: -7.593954086303711
    7. '_' → logprob: -8.718954086303711
    8. 'A' → logprob: -8.718954086303711
    9. '  ' → logprob: -9.593954086303711
    10. ')' → logprob: -11.468954086303711

Token 25: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008615042082965374
    2. ' A' → logprob: -4.758615016937256
    3. 'range' → logprob: -15.008615493774414
    4. ' range' → logprob: -15.383615493774414
    5. 'Ａ' → logprob: -18.883615493774414
    6. '(A' → logprob: -19.508615493774414
    7. '	A' → logprob: -19.633615493774414
    8. ' ' → logprob: -19.883615493774414
    9. 'a' → logprob: -20.133615493774414
    10. '[A' → logprob: -20.883615493774414

Token 26: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33593541383743286
    2. ')' → logprob: -1.335935354232788
    3. ')]' → logprob: -3.960935354232788
    4. '])' → logprob: -5.710935592651367
    5. ')])' → logprob: -11.335935592651367
    6. '）' → logprob: -11.335935592651367
    7. '])]' → logprob: -11.335935592651367
    8. ' ]' → logprob: -12.085935592651367
    9. '`]' → logprob: -12.210935592651367
    10. '']' → logprob: -12.710935592651367

Token 27: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2420573234558105
    2. 'p' → logprob: -1.3670573234558105
    3. 'd' → logprob: -1.9920573234558105
    4. 'c' → logprob: -3.2420573234558105
    5. 'visited' → logprob: -3.3670573234558105
    6. 'b' → logprob: -3.4920573234558105
    7. '
' → logprob: -3.4920573234558105
    8. 'f' → logprob: -3.7420573234558105
    9. 'i' → logprob: -3.7420573234558105
    10. 'n' → logprob: -4.1170573234558105

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09338370710611343
    2. 'ermut' → logprob: -3.8433837890625
    3. 'r' → logprob: -4.0933837890625
    4. '[' → logprob: -4.0933837890625
    5. '[A' → logprob: -4.9683837890625
    6. '=' → logprob: -5.2183837890625
    7. '[i' → logprob: -5.3433837890625
    8. '[:]' → logprob: -6.0933837890625
    9. '=[]' → logprob: -6.0933837890625
    10. 'os' → logprob: -6.7183837890625

Token 29: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30035141110420227
    2. '[A' → logprob: -1.5503513813018799
    3. 'list' → logprob: -3.92535138130188
    4. '[]' → logprob: -4.175351619720459
    5. '[n' → logprob: -5.550351619720459
    6. '[len' → logprob: -6.300351619720459
    7. '[-' → logprob: -6.300351619720459
    8. '[list' → logprob: -6.425351619720459
    9. 'A' → logprob: -7.175351619720459
    10. '[a' → logprob: -7.300351619720459

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. '2' → logprob: -10.50003719329834
    3. '100' → logprob: -12.87503719329834
    4. '-' → logprob: -13.12503719329834
    5. 'A' → logprob: -13.62503719329834
    6. 'a' → logprob: -14.50003719329834
    7. '10' → logprob: -14.50003719329834
    8. 'n' → logprob: -14.87503719329834
    9. '(-' → logprob: -14.87503719329834
    10. ' ' → logprob: -15.50003719329834

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009724684990942478
    2. ' for' → logprob: -5.1347246170043945
    3. ']*' → logprob: -5.7597246170043945
    4. ' ]' → logprob: -8.009724617004395
    5. ',' → logprob: -8.884724617004395
    6. 'for' → logprob: -9.134724617004395
    7. ']*(' → logprob: -10.009724617004395
    8. ')' → logprob: -12.634724617004395
    9. '1' → logprob: -13.009724617004395
    10. '']' → logprob: -13.259724617004395

Token 32: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24562641978263855
    2. ' *' → logprob: -2.245626449584961
    3. '*' → logprob: -2.495626449584961
    4. 'for' → logprob: -3.745626449584961
    5. ',' → logprob: -6.120626449584961
    6. '1' → logprob: -7.245626449584961
    7. '0' → logprob: -7.620626449584961
    8. '+' → logprob: -7.745626449584961
    9. ']' → logprob: -7.745626449584961
    10. ')' → logprob: -7.995626449584961

Token 33: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012130453251302242
    2. '(n' → logprob: -9.375121116638184
    3. 'len' → logprob: -10.500121116638184
    4. ' n' → logprob: -12.000121116638184
    5. '(' → logprob: -13.125121116638184
    6. '(len' → logprob: -15.125121116638184
    7. '_n' → logprob: -16.2501220703125
    8. '10' → logprob: -16.5001220703125
    9. '   ' → logprob: -16.7501220703125
    10. ' (' → logprob: -17.0001220703125

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08315692096948624
    2. ' for' → logprob: -3.0831568241119385
    3. '
' → logprob: -3.7081568241119385
    4. '<|end|>' → logprob: -4.958157062530518
    5. '\n' → logprob: -7.583157062530518
    6. '[' → logprob: -7.708157062530518
    7. '<|end|>' → logprob: -8.83315658569336
    8. '' → logprob: -8.95815658569336
    9. ' 
' → logprob: -9.08315658569336
    10. 'n' → logprob: -9.08315658569336

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001843485952122137
    2. ' for' → logprob: -9.250184059143066
    3. 'i' → logprob: -9.625184059143066
    4. 'f' → logprob: -12.750184059143066
    5. '```' → logprob: -13.000184059143066
    6. '<|end|>' → logprob: -13.125184059143066
    7. '[' → logprob: -13.375184059143066
    8. ')' → logprob: -13.375184059143066
    9. 'F' → logprob: -13.375184059143066
    10. 'd' → logprob: -13.875184059143066

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016153549775481224
    2. 'i' → logprob: -4.141153335571289
    3. ' a' → logprob: -10.016153335571289
    4. ' ' → logprob: -10.641153335571289
    5. 'a' → logprob: -11.266153335571289
    6. '_' → logprob: -11.266153335571289
    7. ' _' → logprob: -11.641153335571289
    8. ' v' → logprob: -12.266153335571289
    9. '	i' → logprob: -12.891153335571289
    10. '_i' → logprob: -13.141153335571289

Token 37: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020589184015989304
    2. 'in' → logprob: -3.8955891132354736
    3. ' ' → logprob: -10.270588874816895
    4. '	in' → logprob: -12.020588874816895
    5. 'n' → logprob: -13.395588874816895
    6. ',' → logprob: -13.395588874816895
    7. 'range' → logprob: -14.145588874816895
    8. '  ' → logprob: -14.395588874816895
    9. '+' → logprob: -15.270588874816895
    10. 's' → logprob: -15.270588874816895

Token 38: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001023758901283145
    2. 'v' → logprob: -7.626023769378662
    3. 'p' → logprob: -8.001023292541504
    4. 'x' → logprob: -9.501023292541504
    5. ' a' → logprob: -9.876023292541504
    6. 'ai' → logprob: -10.251023292541504
    7. 'j' → logprob: -11.251023292541504
    8. 'b' → logprob: -11.376023292541504
    9. 'val' → logprob: -13.501023292541504
    10. 'value' → logprob: -13.501023292541504

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16179482638835907
    2. 'in' → logprob: -1.9117947816848755
    3. 's' → logprob: -7.161794662475586
    4. 'n' → logprob: -7.661794662475586
    5. ',' → logprob: -8.536794662475586
    6. '<|end|>' → logprob: -9.661794662475586
    7. 'enumer' → logprob: -11.036794662475586
    8. ' ' → logprob: -11.286794662475586
    9. '<|end|>' → logprob: -11.786794662475586
    10. 'range' → logprob: -12.536794662475586

Token 40: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0019287518225610256
    2. ' enumerate' → logprob: -6.251928806304932
    3. 'enum' → logprob: -16.876928329467773
    4. '```' → logprob: -18.876928329467773
    5. 'en' → logprob: -19.001928329467773
    6. '(en' → logprob: -19.251928329467773
    7. 'range' → logprob: -19.376928329467773
    8. 'em' → logprob: -19.501928329467773
    9. '.enumer' → logprob: -19.501928329467773
    10. 'zip' → logprob: -20.126928329467773

Token 41: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.500019073486328
    3. 'A' → logprob: -11.625019073486328
    4. '(a' → logprob: -16.375019073486328
    5. '(range' → logprob: -17.875019073486328
    6. ' (' → logprob: -18.000019073486328
    7. '((' → logprob: -18.125019073486328
    8. ' A' → logprob: -18.625019073486328
    9. '(P' → logprob: -18.750019073486328
    10. '(I' → logprob: -18.875019073486328

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03792373836040497
    2. '):
' → logprob: -3.537923812866211
    3. ':' → logprob: -4.912923812866211
    4. ')' → logprob: -7.287923812866211
    5. '):
' → logprob: -9.787923812866211
    6. ':
' → logprob: -10.662923812866211
    7. ' ):' → logprob: -11.662923812866211
    8. 'if' → logprob: -13.162923812866211
    9. ']:' → logprob: -13.162923812866211
    10. '   ' → logprob: -13.162923812866211

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003681313246488571
    2. ' P' → logprob: -6.628681182861328
    3. 'P' → logprob: -6.753681182861328
    4. ' if' → logprob: -7.003681182861328
    5. 'if' → logprob: -9.753681182861328
    6. '    
' → logprob: -9.753681182861328
    7. '```' → logprob: -9.878681182861328
    8. ',' → logprob: -10.503681182861328
    9. ' ' → logprob: -10.753681182861328
    10. '	P' → logprob: -11.003681182861328

Token 44: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.023836055770516396
    2. ' P' → logprob: -4.398836135864258
    3. 'if' → logprob: -5.148836135864258
    4. '   ' → logprob: -5.648836135864258
    5. ' if' → logprob: -6.273836135864258
    6. '```' → logprob: -10.648836135864258
    7. ' ' → logprob: -11.523836135864258
    8. '	P' → logprob: -12.273836135864258
    9. '``' → logprob: -12.898836135864258
    10. 'for' → logprob: -13.648836135864258

Token 45: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00947545189410448
    2. '[A' → logprob: -5.009475231170654
    3. '[' → logprob: -6.009475231170654
    4. '[P' → logprob: -8.509475708007812
    5. '[i' → logprob: -9.759475708007812
    6. 'a' → logprob: -10.884475708007812
    7. '```' → logprob: -12.634475708007812
    8. ' [' → logprob: -12.634475708007812
    9. 'A' → logprob: -12.884475708007812
    10. 'P' → logprob: -13.509475708007812

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004833425919059664
    2. ']=' → logprob: -8.250483512878418
    3. '=' → logprob: -8.750483512878418
    4. ' ]' → logprob: -10.250483512878418
    5. ' =' → logprob: -11.125483512878418
    6. ')' → logprob: -11.500483512878418
    7. ')]' → logprob: -13.875483512878418
    8. '=i' → logprob: -14.750483512878418
    9. '[' → logprob: -15.250483512878418
    10. 's' → logprob: -15.375483512878418

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523147702217102
    2. '=' → logprob: -0.898147702217102
    3. ' ' → logprob: -11.398147583007812
    4. '=i' → logprob: -12.273147583007812
    5. '<|end|>' → logprob: -13.523147583007812
    6. ' =
' → logprob: -14.523147583007812
    7. '=index' → logprob: -14.523147583007812
    8. '=user' → logprob: -14.523147583007812
    9. '   ' → logprob: -14.523147583007812
    10. ',' → logprob: -14.648147583007812

Token 48: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008048642775975168
    2. ' i' → logprob: -7.125804901123047
    3. ' ' → logprob: -15.875804901123047
    4. '   ' → logprob: -16.250804901123047
    5. '	i' → logprob: -16.875804901123047
    6. ''i' → logprob: -17.500804901123047
    7. '`' → logprob: -17.750804901123047
    8. '[i' → logprob: -17.750804901123047
    9. 'a' → logprob: -18.625804901123047
    10. '```' → logprob: -18.750804901123047

Token 49: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23072433471679688
    2. '\n' → logprob: -2.605724334716797
    3. 'for' → logprob: -2.730724334716797
    4. '<|end|>' → logprob: -3.730724334716797
    5. '
' → logprob: -4.355724334716797
    6. ')' → logprob: -4.730724334716797
    7. '[' → logprob: -5.480724334716797
    8. ' ' → logprob: -5.480724334716797
    9. ' for' → logprob: -5.605724334716797
    10. '#' → logprob: -5.980724334716797

Token 50: 'R' (ID: 49)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007655488792806864
    2. 'for' → logprob: -4.882655620574951
    3. 'p' → logprob: -10.882655143737793
    4. 'P' → logprob: -11.007655143737793
    5. '```' → logprob: -12.132655143737793
    6. 'i' → logprob: -13.007655143737793
    7. '#' → logprob: -13.632655143737793
    8. 'answer' → logprob: -13.882655143737793
    9. 'n' → logprob: -14.132655143737793
    10. 'result' → logprob: -14.507655143737793

Token 51: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.5451723337173462
    2. ' =' → logprob: -1.0451723337173462
    3. '=' → logprob: -3.6701722145080566
    4. 'ANGE' → logprob: -4.545172214508057
    5. 'P' → logprob: -4.670172214508057
    6. 'print' → logprob: -5.670172214508057
    7. 'int' → logprob: -5.670172214508057
    8. 'eturn' → logprob: -5.795172214508057
    9. 'ead' → logprob: -6.295172214508057
    10. 'ank' → logprob: -6.420172214508057

Token 52: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9535735845565796
    2. 'P' → logprob: -1.3285735845565796
    3. '[P' → logprob: -1.7035735845565796
    4. '[n' → logprob: -2.203573703765869
    5. '[-' → logprob: -3.953573703765869
    6. ' [' → logprob: -4.203573703765869
    7. '[i' → logprob: -4.953573703765869
    8. 'list' → logprob: -5.203573703765869
    9. '[len' → logprob: -6.203573703765869
    10. '[A' → logprob: -6.703573703765869

Token 53: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24814583361148834
    2. '-' → logprob: -1.7481458187103271
    3. ']' → logprob: -3.623145818710327
    4. 'n' → logprob: -5.123146057128906
    5. 'False' → logprob: -5.373146057128906
    6. 'i' → logprob: -5.498146057128906
    7. '[]' → logprob: -6.873146057128906
    8. ']]' → logprob: -7.248146057128906
    9. 'P' → logprob: -7.498146057128906
    10. 'j' → logprob: -8.123146057128906

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05645870417356491
    2. ' for' → logprob: -3.4314587116241455
    3. '+' → logprob: -4.931458473205566
    4. 'for' → logprob: -5.056458473205566
    5. '-' → logprob: -5.931458473205566
    6. ']*' → logprob: -6.431458473205566
    7. ']]' → logprob: -6.556458473205566
    8. ' ]' → logprob: -7.181458473205566
    9. ',' → logprob: -7.431458473205566
    10. ' +' → logprob: -7.556458473205566

Token 55: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4686262309551239
    2. ']' → logprob: -1.0936262607574463
    3. 'for' → logprob: -3.3436262607574463
    4. ']*' → logprob: -6.218626022338867
    5. ',' → logprob: -7.593626022338867
    6. ' ]' → logprob: -7.968626022338867
    7. '[' → logprob: -8.343626022338867
    8. ' ' → logprob: -8.468626022338867
    9. '   ' → logprob: -8.968626022338867
    10. ')' → logprob: -9.718626022338867

Token 56: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0660279393196106
    2. '(n' → logprob: -2.816027879714966
    3. '(' → logprob: -7.191028118133545
    4. ' n' → logprob: -7.816028118133545
    5. '10' → logprob: -8.066027641296387
    6. '20' → logprob: -8.066027641296387
    7. '3' → logprob: -8.566027641296387
    8. '2' → logprob: -8.566027641296387
    9. ' (' → logprob: -8.566027641296387
    10. '5' → logprob: -8.691027641296387

Token 57: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008536327630281448
    2. '(n' → logprob: -4.883536338806152
    3. '(' → logprob: -8.008536338806152
    4. ' n' → logprob: -9.383536338806152
    5. 'i' → logprob: -9.758536338806152
    6. '20' → logprob: -9.883536338806152
    7. ' (' → logprob: -10.133536338806152
    8. '2' → logprob: -10.258536338806152
    9. '10' → logprob: -10.258536338806152
    10. '3' → logprob: -10.383536338806152

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0854305550456047
    2. ']' → logprob: -3.08543062210083
    3. 'for' → logprob: -3.33543062210083
    4. ' ' → logprob: -8.335430145263672
    5. ' ]' → logprob: -8.460430145263672
    6. ',' → logprob: -9.960430145263672
    7. '   ' → logprob: -10.710430145263672
    8. ')' → logprob: -11.335430145263672
    9. '0' → logprob: -11.835430145263672
    10. ']

' → logprob: -12.085430145263672

Token 59: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20794035494327545
    2. '_' → logprob: -1.7079403400421143
    3. 'range' → logprob: -5.582940578460693
    4. ' _' → logprob: -6.707940578460693
    5. ' i' → logprob: -7.207940578460693
    6. '_range' → logprob: -7.457940578460693
    7. 'i' → logprob: -9.207940101623535
    8. '(range' → logprob: -9.582940101623535
    9. '_i' → logprob: -10.832940101623535
    10. ' ' → logprob: -12.207940101623535

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32867035269737244
    2. 'in' → logprob: -1.8286703824996948
    3. 'range' → logprob: -2.2036702632904053
    4. ' range' → logprob: -4.828670501708984
    5. '(range' → logprob: -7.703670501708984
    6. 'i' → logprob: -7.828670501708984
    7. '_' → logprob: -9.453670501708984
    8. 'n' → logprob: -10.078670501708984
    9. ' ' → logprob: -10.328670501708984
    10. ' i' → logprob: -10.703670501708984

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016073083505034447
    2. ' range' → logprob: -4.141073226928711
    3. 'n' → logprob: -10.266073226928711
    4. '(range' → logprob: -12.891073226928711
    5. ' n' → logprob: -15.516073226928711
    6. 'r' → logprob: -15.516073226928711
    7. '	range' → logprob: -15.516073226928711
    8. 'A' → logprob: -15.891073226928711
    9. 'rang' → logprob: -16.14107322692871
    10. ' ' → logprob: -16.14107322692871

Token 62: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001805377542041242
    2. '(' → logprob: -9.1251802444458
    3. 'n' → logprob: -9.6251802444458
    4. ' (' → logprob: -12.7501802444458
    5. ')' → logprob: -14.0001802444458
    6. ')n' → logprob: -14.3751802444458
    7. '(N' → logprob: -15.1251802444458
    8. ' n' → logprob: -15.1251802444458
    9. '](' → logprob: -15.8751802444458
    10. ']' → logprob: -16.125181198120117

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.5491004129871726e-05
    2. ')]
' → logprob: -10.625045776367188
    3. ')' → logprob: -11.500045776367188
    4. ']' → logprob: -11.750045776367188
    5. ')]

' → logprob: -14.000045776367188
    6. ' )' → logprob: -14.375045776367188
    7. ')]
' → logprob: -14.500045776367188
    8. '')]' → logprob: -15.250045776367188
    9. ')][' → logprob: -15.250045776367188
    10. '])]' → logprob: -16.375045776367188

Token 64: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006490522064268589
    2. ' for' → logprob: -7.8756489753723145
    3. '```' → logprob: -9.375649452209473
    4. '<|end|>' → logprob: -10.000649452209473
    5. 'prev' → logprob: -10.625649452209473
    6. 'R' → logprob: -10.625649452209473
    7. 'last' → logprob: -10.750649452209473
    8. 'i' → logprob: -11.125649452209473
    9. 'r' → logprob: -11.250649452209473
    10. 'stack' → logprob: -12.000649452209473

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03127330541610718
    2. '=' → logprob: -3.531273365020752
    3. 'ue' → logprob: -7.156273365020752
    4. ' ' → logprob: -7.781273365020752
    5. 'u' → logprob: -8.281272888183594
    6. '=[]' → logprob: -10.031272888183594
    7. '  ' → logprob: -12.406272888183594
    8. '[' → logprob: -12.781272888183594
    9. '.' → logprob: -12.906272888183594
    10. ':' → logprob: -13.031272888183594

Token 66: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012533196248114109
    2. '[' → logprob: -5.012533187866211
    3. ' []' → logprob: -5.262533187866211
    4. '[n' → logprob: -8.762533187866211
    5. ' [' → logprob: -9.137533187866211
    6. '[(' → logprob: -9.512533187866211
    7. 'deque' → logprob: -9.637533187866211
    8. '[q' → logprob: -9.887533187866211
    9. '0' → logprob: -10.012533187866211
    10. '[]}' → logprob: -10.887533187866211

Token 67: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002582402084954083
    2. ' for' → logprob: -8.625258445739746
    3. 'from' → logprob: -10.875258445739746
    4. '<|end|>' → logprob: -10.875258445739746
    5. 'q' → logprob: -11.250258445739746
    6. '```' → logprob: -11.250258445739746
    7. 'while' → logprob: -13.000258445739746
    8. 'i' → logprob: -13.125258445739746
    9. 'n' → logprob: -13.125258445739746
    10. '[' → logprob: -13.250258445739746

Token 68: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.015039068646728992
    2. ' heap' → logprob: -4.515038967132568
    3. ' sys' → logprob: -6.015038967132568
    4. 'collections' → logprob: -6.765038967132568
    5. ' queue' → logprob: -8.265039443969727
    6. ' ' → logprob: -10.265039443969727
    7. ' itertools' → logprob: -10.265039443969727
    8. ' deque' → logprob: -10.390039443969727
    9. '_' → logprob: -11.390039443969727
    10. ' ' → logprob: -12.015039443969727

Token 69: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.3199920178740285e-05
    2. 'queue' → logprob: -10.750022888183594
    3. 'ify' → logprob: -13.750022888183594
    4. 'dict' → logprob: -14.625022888183594
    5. 'from' → logprob: -16.500022888183594
    6. 'import' → logprob: -16.500022888183594
    7. 'Q' → logprob: -17.125022888183594
    8. 'lib' → logprob: -17.500022888183594
    9. 'que' → logprob: -17.625022888183594
    10. ' queue' → logprob: -18.000022888183594

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4564877450466156
    2. '<|end|>' → logprob: -1.581487774848938
    3. 'for' → logprob: -2.4564876556396484
    4. '  
' → logprob: -3.8314876556396484
    5. ' 
' → logprob: -4.081487655639648
    6. ' for' → logprob: -4.456487655639648
    7. 'q' → logprob: -5.206487655639648
    8. '

' → logprob: -5.331487655639648
    9. '<|end|>' → logprob: -5.956487655639648
    10. '[' → logprob: -6.206487655639648

Token 71: 'heap' (ID: 38535)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006586170289665461
    2. '<|end|>' → logprob: -5.381586074829102
    3. 'heap' → logprob: -6.881586074829102
    4. ' for' → logprob: -7.506586074829102
    5. 'q' → logprob: -8.881586074829102
    6. '
' → logprob: -9.631586074829102
    7. '```' → logprob: -9.631586074829102
    8. '<|end|>' → logprob: -10.381586074829102
    9. '[' → logprob: -10.631586074829102
    10. '  
' → logprob: -11.881586074829102

Token 72: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.796184723294573e-06
    2. 'p' → logprob: -12.125005722045898
    3. '```' → logprob: -16.2500057220459
    4. 'h' → logprob: -17.6250057220459
    5. 'push' → logprob: -17.6250057220459
    6. '.push' → logprob: -17.7500057220459
    7. 'ify' → logprob: -18.0000057220459
    8. '.he' → logprob: -18.0000057220459
    9. '.q' → logprob: -18.1250057220459
    10. '	q' → logprob: -18.5000057220459

Token 73: '.heap' (ID: 177287)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5351540446281433
    2. '.he' → logprob: -0.9101540446281433
    3. '.heap' → logprob: -4.535153865814209
    4. '.push' → logprob: -7.910153865814209
    5. '.enqueue' → logprob: -8.160154342651367
    6. '.q' → logprob: -8.410154342651367
    7. '.put' → logprob: -9.285154342651367
    8. '.append' → logprob: -10.660154342651367
    9. '.encode' → logprob: -10.910154342651367
    10. '.import' → logprob: -10.910154342651367

Token 74: 'ify' (ID: 1985)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.025103459134697914
    2. 'ify' → logprob: -4.025103569030762
    3. 'replace' → logprob: -5.275103569030762
    4. 'p' → logprob: -7.275103569030762
    5. 'pop' → logprob: -7.525103569030762
    6. 'ush' → logprob: -8.400103569030762
    7. '```' → logprob: -9.275103569030762
    8. 'q' → logprob: -9.400103569030762
    9. 'app' → logprob: -9.525103569030762
    10. 'he' → logprob: -10.775103569030762

Token 75: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.500029563903809
    3. '()' → logprob: -14.500029563903809
    4. 'q' → logprob: -14.625029563903809
    5. ' (' → logprob: -14.875029563903809
    6. ')' → logprob: -15.125029563903809
    7. '(queue' → logprob: -15.375029563903809
    8. '<|end|>' → logprob: -16.125030517578125
    9. '```' → logprob: -16.250030517578125
    10. '(P' → logprob: -16.625030517578125

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2494889348745346
    2. 'for' → logprob: -1.7494889497756958
    3. '<|end|>' → logprob: -3.4994888305664062
    4. '
' → logprob: -4.374488830566406
    5. ' for' → logprob: -6.374488830566406
    6. ')
' → logprob: -6.749488830566406
    7. 'q' → logprob: -7.249488830566406
    8. '<|end|>' → logprob: -9.124488830566406
    9. '#' → logprob: -9.624488830566406
    10. '```' → logprob: -9.874488830566406

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001115211984142661
    2. '<|end|>' → logprob: -7.126115322113037
    3. ' for' → logprob: -9.126114845275879
    4. '...' → logprob: -9.626114845275879
    5. '#' → logprob: -10.251114845275879
    6. 'continue' → logprob: -11.126114845275879
    7. '[' → logprob: -11.126114845275879
    8. 'heap' → logprob: -11.126114845275879
    9. '```' → logprob: -11.376114845275879
    10. 'q' → logprob: -11.376114845275879

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06243693083524704
    2. 'i' → logprob: -2.937436819076538
    3. ' a' → logprob: -5.437437057495117
    4. 'a' → logprob: -6.187437057495117
    5. ' p' → logprob: -8.187437057495117
    6. ' ' → logprob: -8.812437057495117
    7. ' (' → logprob: -9.187437057495117
    8. 'p' → logprob: -9.187437057495117
    9. 'P' → logprob: -9.687437057495117
    10. ' P' → logprob: -9.687437057495117

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6495166420936584
    2. 'in' → logprob: -1.0245165824890137
    3. ',' → logprob: -2.1495165824890137
    4. ' ,' → logprob: -6.899516582489014
    5. ' ' → logprob: -7.399516582489014
    6. ',n' → logprob: -8.399517059326172
    7. ')' → logprob: -9.899517059326172
    8. 'range' → logprob: -10.024517059326172
    9. 'n' → logprob: -10.274517059326172
    10. ',in' → logprob: -10.837017059326172

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014176792465150356
    2. 'range' → logprob: -4.264176845550537
    3. ' P' → logprob: -12.264176368713379
    4. 'P' → logprob: -12.764176368713379
    5. '(range' → logprob: -13.514176368713379
    6. ' ' → logprob: -13.889176368713379
    7. '	range' → logprob: -14.389176368713379
    8. ' reversed' → logprob: -14.764176368713379
    9. '   ' → logprob: -15.014176368713379
    10. 'A' → logprob: -15.389176368713379

Token 81: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008797389455139637
    2. '(' → logprob: -4.7587971687316895
    3. 'n' → logprob: -9.133797645568848
    4. '(len' → logprob: -10.633797645568848
    5. ' (' → logprob: -11.008797645568848
    6. '(q' → logprob: -11.258797645568848
    7. ' n' → logprob: -12.383797645568848
    8. ')' → logprob: -13.008797645568848
    9. '(s' → logprob: -13.633797645568848
    10. '(N' → logprob: -13.633797645568848

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03240100294351578
    2. '):
' → logprob: -3.6574010848999023
    3. '-' → logprob: -5.157401084899902
    4. ')' → logprob: -9.157401084899902
    5. ' ):' → logprob: -9.657401084899902
    6. ' -' → logprob: -9.907401084899902
    7. '):
' → logprob: -10.032401084899902
    8. ' ' → logprob: -10.407401084899902
    9. '+' → logprob: -11.782401084899902
    10. '   ' → logprob: -11.907401084899902

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16837893426418304
    2. 'heap' → logprob: -2.9183788299560547
    3. 'if' → logprob: -3.0433788299560547
    4. ' if' → logprob: -3.1683788299560547
    5. ' heap' → logprob: -4.918378829956055
    6. 'q' → logprob: -6.668378829956055
    7. '```' → logprob: -6.793378829956055
    8. ' ' → logprob: -7.418378829956055
    9. 'for' → logprob: -8.418378829956055
    10. ' for' → logprob: -8.543378829956055

Token 84: ' temp' (ID: 5484)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04443066939711571
    2. 'if' → logprob: -3.419430732727051
    3. '   ' → logprob: -5.794430732727051
    4. 'q' → logprob: -5.794430732727051
    5. ' heap' → logprob: -6.044430732727051
    6. 'for' → logprob: -7.044430732727051
    7. ' if' → logprob: -7.919430732727051
    8. 'he' → logprob: -8.04443073272705
    9. 'P' → logprob: -9.29443073272705
    10. 'R' → logprob: -9.48193073272705

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05280616506934166
    2. '=' → logprob: -3.0528061389923096
    3. ',' → logprob: -5.927806377410889
    4. '   ' → logprob: -7.677806377410889
    5. 'for' → logprob: -8.55280590057373
    6. ' ' → logprob: -9.30280590057373
    7. 'q' → logprob: -9.30280590057373
    8. 'if' → logprob: -9.55280590057373
    9. '_' → logprob: -9.99030590057373
    10. ' ,' → logprob: -10.05280590057373

Token 86: ' []
' (ID: 8911)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.40392884612083435
    2. 'i' → logprob: -3.028928756713867
    3. '[i' → logprob: -3.278928756713867
    4. 'A' → logprob: -3.403928756713867
    5. '[]' → logprob: -3.653928756713867
    6. 'n' → logprob: -3.653928756713867
    7. '[n' → logprob: -3.653928756713867
    8. '[' → logprob: -3.903928756713867
    9. ' P' → logprob: -4.028928756713867
    10. '(' → logprob: -4.278928756713867

Token 87: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5176550149917603
    2. ' for' → logprob: -1.0176550149917603
    3. '   ' → logprob: -3.6426548957824707
    4. '<|end|>' → logprob: -4.267654895782471
    5. 'while' → logprob: -7.642654895782471
    6. 'if' → logprob: -7.892654895782471
    7. 'heap' → logprob: -8.017655372619629
    8. ' if' → logprob: -8.142655372619629
    9. ' while' → logprob: -8.392655372619629
    10. '	for' → logprob: -9.017655372619629

Token 88: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02490372024476528
    2. 'if' → logprob: -4.774903774261475
    3. 'heap' → logprob: -5.149903774261475
    4. 'while' (adapté à ' while') → logprob: -5.274903774261475
    5. ' for' → logprob: -5.649903774261475
    6. 'j' → logprob: -7.524903774261475
    7. 'q' → logprob: -8.399903297424316
    8. '   ' → logprob: -8.649903297424316
    9. 'idx' → logprob: -8.649903297424316
    10. 'temp' → logprob: -8.899903297424316

Token 89: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00944084394723177
    2. ' q' → logprob: -4.884440898895264
    3. 'P' → logprob: -6.884440898895264
    4. 'len' → logprob: -7.759440898895264
    5. 'A' → logprob: -9.009440422058105
    6. ' len' → logprob: -9.634440422058105
    7. '   ' → logprob: -10.009440422058105
    8. 'i' → logprob: -10.634440422058105
    9. ' P' → logprob: -10.759440422058105
    10. '	q' → logprob: -11.196940422058105

Token 90: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5237935185432434
    2. 'and' → logprob: -0.8987935185432434
    3. '[' → logprob: -7.773793697357178
    4. '   ' → logprob: -8.64879322052002
    5. ' и' → logprob: -11.14879322052002
    6. '	and' → logprob: -11.27379322052002
    7. '    ' → logprob: -11.39879322052002
    8. 'q' → logprob: -11.52379322052002
    9. '```' → logprob: -11.77379322052002
    10. ' ' → logprob: -12.52379322052002

Token 91: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.572361171245575
    2. ' and' → logprob: -1.6973612308502197
    3. ',' → logprob: -2.0723612308502197
    4. '<|end|>' → logprob: -3.4473612308502197
    5. ' if' → logprob: -4.072360992431641
    6. '[' → logprob: -4.447360992431641
    7. '       ' → logprob: -4.572360992431641
    8. ' x' → logprob: -4.572360992431641
    9. '    ' → logprob: -4.697360992431641
    10. 'x' → logprob: -5.072360992431641

Token 92: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.738527774810791
    2. 'q' → logprob: -2.113527774810791
    3. ' q' → logprob: -2.238527774810791
    4. ' if' → logprob: -3.113527774810791
    5. 'x' → logprob: -3.488527774810791
    6. 'v' → logprob: -3.738527774810791
    7. ' x' → logprob: -3.738527774810791
    8. ' v' → logprob: -3.863527774810791
    9. ',' → logprob: -3.863527774810791
    10. 'p' → logprob: -3.988527774810791

Token 93: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.026619460433721542
    2. ' q' → logprob: -3.6516194343566895
    3. 'P' → logprob: -8.776619911193848
    4. '-q' → logprob: -9.651619911193848
    5. '	q' → logprob: -10.526619911193848
    6. 'A' → logprob: -11.026619911193848
    7. ' P' → logprob: -11.526619911193848
    8. '   ' → logprob: -11.651619911193848
    9. ' A' → logprob: -11.901619911193848
    10. '-' → logprob: -11.901619911193848

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.282920129597187e-05
    2. 'q' → logprob: -11.500012397766113
    3. '
' → logprob: -14.250012397766113
    4. '   ' → logprob: -14.250012397766113
    5. '```' → logprob: -14.750012397766113
    6. '[q' → logprob: -14.875012397766113
    7. 'and' → logprob: -15.625012397766113
    8. ' and' → logprob: -15.625012397766113
    9. '

' → logprob: -16.50001335144043
    10. '0' → logprob: -17.00001335144043

Token 95: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043205853551626205
    2. '0' → logprob: -3.168205738067627
    3. ' ' → logprob: -9.668206214904785
    4. '][' → logprob: -9.918206214904785
    5. ' [' → logprob: -10.043206214904785
    6. ''s' → logprob: -10.793206214904785
    7. '
' → logprob: -11.668206214904785
    8. '```' → logprob: -12.668206214904785
    9. '[
' → logprob: -12.793206214904785
    10. '   ' → logprob: -12.793206214904785

Token 96: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02718007005751133
    2. '][' → logprob: -4.152180194854736
    3. '()[' → logprob: -4.902180194854736
    4. '>[' → logprob: -6.152180194854736
    5. '>' → logprob: -7.777180194854736
    6. ' [' → logprob: -8.277179718017578
    7. ' >' → logprob: -8.402179718017578
    8. ')[' → logprob: -8.527179718017578
    9. ' <' → logprob: -9.152179718017578
    10. '<' → logprob: -9.527179718017578

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009768838994204998
    2. '1' → logprob: -4.634768962860107
    3. ' ' → logprob: -11.38476848602295
    4. '
' → logprob: -14.69726848602295
    5. '   ' → logprob: -15.88476848602295
    6. '```' → logprob: -16.072269439697266
    7. '[' → logprob: -16.259769439697266
    8. '>' → logprob: -16.509769439697266
    9. '

' → logprob: -16.697269439697266
    10. '2' → logprob: -16.884769439697266

Token 98: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.976800799369812
    2. ' <' → logprob: -1.476800799369812
    3. ']' → logprob: -1.976800799369812
    4. '[' → logprob: -2.3518009185791016
    5. '<=' → logprob: -2.9768009185791016
    6. ' <=' → logprob: -3.2268009185791016
    7. '>' → logprob: -3.3518009185791016
    8. ' >' → logprob: -4.101800918579102
    9. '>=' → logprob: -5.601800918579102
    10. '][' → logprob: -5.976800918579102

Token 99: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2618427872657776
    2. ' <' → logprob: -1.8868427276611328
    3. '<=' → logprob: -3.636842727661133
    4. '>=' → logprob: -4.011842727661133
    5. '>' → logprob: -4.386842727661133
    6. ' <=' → logprob: -5.011842727661133
    7. ' >' → logprob: -5.136842727661133
    8. ' >=' → logprob: -5.511842727661133
    9. '==' → logprob: -6.636842727661133
    10. '!=' → logprob: -7.136842727661133

Token 100: ' A' (ID: 355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28005021810531616
    2. 'P' → logprob: -2.030050277709961
    3. 'A' → logprob: -2.280050277709961
    4. 'n' → logprob: -5.780050277709961
    5. ' i' → logprob: -5.905050277709961
    6. ' P' → logprob: -6.905050277709961
    7. ' A' → logprob: -7.155050277709961
    8. '=P' → logprob: -7.155050277709961
    9. '=A' → logprob: -7.155050277709961
    10. '=' → logprob: -7.405050277709961

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4391956685576588e-05
    2. 'i' → logprob: -11.250024795532227
    3. '[' → logprob: -12.125024795532227
    4. '[q' → logprob: -12.500024795532227
    5. ' [' → logprob: -14.000024795532227
    6. '[I' → logprob: -15.000024795532227
    7. '[n' → logprob: -15.625024795532227
    8. 'q' → logprob: -16.000024795532227
    9. ' i' → logprob: -16.125024795532227
    10. '

' → logprob: -16.375024795532227

Token 102: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4668472409248352
    2. ']:' → logprob: -1.3418471813201904
    3. '[i' → logprob: -2.4668471813201904
    4. '[' → logprob: -4.0918474197387695
    5. ']' → logprob: -5.7168474197387695
    6. ']:
' → logprob: -5.7168474197387695
    7. ' ]' → logprob: -7.2168474197387695
    8. ']:

' → logprob: -7.3418474197387695
    9. ':' → logprob: -7.8418474197387695
    10. '   ' → logprob: -7.9668474197387695

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9181743264198303
    2. ':
' → logprob: -0.9181743264198303
    3. ':' → logprob: -2.0431742668151855
    4. '       ' → logprob: -3.2931742668151855
    5. ' break' → logprob: -4.4181742668151855
    6. ' and' → logprob: -4.6681742668151855
    7. ',' → logprob: -5.9181742668151855
    8. '):
' → logprob: -6.0431742668151855
    9. ' :
' → logprob: -6.5431742668151855
    10. ' :' → logprob: -6.7931742668151855

Token 104: ' v' (ID: 323)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -1.523687481880188
    2. 'x' → logprob: -1.898687481880188
    3. ' heap' → logprob: -2.0236873626708984
    4. ' x' → logprob: -2.2736873626708984
    5. 'heap' → logprob: -2.3986873626708984
    6. 'd' → logprob: -3.2736873626708984
    7. '   ' → logprob: -3.3986873626708984
    8. 'r' → logprob: -3.5236873626708984
    9. ' d' → logprob: -4.023687362670898
    10. ' _,' → logprob: -4.023687362670898

Token 105: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12501108646392822
    2. ' =' → logprob: -2.8750109672546387
    3. ',' → logprob: -3.0000109672546387
    4. 'alue' → logprob: -4.625010967254639
    5. ',v' → logprob: -7.250010967254639
    6. 'al' → logprob: -8.000011444091797
    7. 'v' → logprob: -9.250011444091797
    8. '   ' → logprob: -9.375011444091797
    9. ',val' → logprob: -10.375011444091797
    10. '=v' → logprob: -10.750011444091797

Token 106: ' j' (ID: 441)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7233837246894836
    2. 'j' → logprob: -2.223383665084839
    3. 'pos' → logprob: -2.848383665084839
    4. ' idx' → logprob: -2.973383665084839
    5. 'x' → logprob: -3.098383665084839
    6. 'i' → logprob: -3.098383665084839
    7. 'p' → logprob: -3.223383665084839
    8. '_' → logprob: -3.598383665084839
    9. 'u' → logprob: -3.973383665084839
    10. 'id' → logprob: -4.223383903503418

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891049981117249
    2. ' =' → logprob: -2.5789105892181396
    3. '   ' → logprob: -10.953910827636719
    4. ' ' → logprob: -13.078910827636719
    5. '    ' → logprob: -14.578910827636719
    6. '  ' → logprob: -14.953910827636719
    7. '＝' → logprob: -16.20391082763672
    8. ')' → logprob: -16.57891082763672
    9. ')=' → logprob: -17.32891082763672
    10. '       ' → logprob: -18.20391082763672

Token 108: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.006723891478031874
    2. ' heap' → logprob: -5.006723880767822
    3. '   ' → logprob: -12.63172435760498
    4. 'he' → logprob: -12.75672435760498
    5. '(heap' → logprob: -14.13172435760498
    6. 'q' → logprob: -14.38172435760498
    7. '_heap' → logprob: -15.63172435760498
    8. '.heap' → logprob: -15.63172435760498
    9. 'hq' → logprob: -15.88172435760498
    10. '
' → logprob: -16.006723403930664

Token 109: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'replace' → logprob: -20.375
    3. '[' → logprob: -20.875
    4. 'p' → logprob: -22.375
    5. 'u' → logprob: -22.375
    6. '

' → logprob: -22.375
    7. 'j' → logprob: -22.75
    8. 'v' → logprob: -22.875
    9. 'op' → logprob: -23.375
    10. 'pop' → logprob: -23.5

Token 110: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00547600956633687
    2. 'q' → logprob: -5.505475997924805
    3. '.heap' → logprob: -6.630475997924805
    4. 'he' → logprob: -9.755475997924805
    5. '.' → logprob: -11.380475997924805
    6. '.q' → logprob: -12.755475997924805
    7. 'op' → logprob: -12.880475997924805
    8. 'heap' → logprob: -13.880475997924805
    9. ' he' → logprob: -14.755475997924805
    10. '.pop' → logprob: -15.505475997924805

Token 111: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.817902173381299e-05
    2. 'pp' → logprob: -9.25009822845459
    3. 'ap' → logprob: -13.75009822845459
    4. 'q' → logprob: -15.12509822845459
    5. 'pop' → logprob: -15.37509822845459
    6. '[' → logprob: -15.75009822845459
    7. 'replace' → logprob: -16.750097274780273
    8. '```' → logprob: -17.125097274780273
    9. 'p' → logprob: -17.375097274780273
    10. 'a' → logprob: -17.500097274780273

Token 112: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.43854573369026184
    2. 'ush' → logprob: -1.0635457038879395
    3. 'p' → logprob: -5.1885457038879395
    4. 'app' → logprob: -6.4385457038879395
    5. 'ap' → logprob: -6.8135457038879395
    6. 'pp' → logprob: -7.9385457038879395
    7. 'push' → logprob: -8.188546180725098
    8. 'al' → logprob: -8.188546180725098
    9. 'pop' → logprob: -8.188546180725098
    10. 'q' → logprob: -8.563546180725098

Token 113: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. 'q' → logprob: -16.125
    4. ',q' → logprob: -17.5
    5. '```' → logprob: -18.125
    6. ' (' → logprob: -18.25
    7. '[q' → logprob: -18.625
    8. '(queue' → logprob: -19.5
    9. '(
' → logprob: -19.625
    10. '()' → logprob: -19.875

Token 114: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07977215945720673
    2. ')' → logprob: -2.5797722339630127
    3. ')
' → logprob: -7.079771995544434
    4. '           ' → logprob: -10.579771995544434
    5. ')

' → logprob: -11.704771995544434
    6. '())
' → logprob: -12.954771995544434
    7. '()' → logprob: -13.704771995544434
    8. '       ' → logprob: -13.954771995544434
    9. ' )
' → logprob: -14.329771995544434
    10. '()
' → logprob: -15.079771995544434

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007669831975363195
    2. ',' → logprob: -7.375766754150391
    3. ')' → logprob: -10.25076675415039
    4. '       ' → logprob: -10.62576675415039
    5. '            
' → logprob: -11.12576675415039
    6. '   ' → logprob: -11.25076675415039
    7. '
' → logprob: -11.37576675415039
    8. 'n' → logprob: -12.50076675415039
    9. '```' → logprob: -12.87576675415039
    10. ' ' → logprob: -13.00076675415039

Token 116: ' R' (ID: 460)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47613903880119324
    2. 'R' (adapté à ' R') → logprob: -1.7261390686035156
    3. '   ' → logprob: -2.2261390686035156
    4. ' R' → logprob: -2.8511390686035156
    5. 'temp' → logprob: -3.6011390686035156
    6. ' temp' → logprob: -5.601139068603516
    7. 'if' → logprob: -6.601139068603516
    8. ' if' → logprob: -6.851139068603516
    9. 'v' → logprob: -7.476139068603516
    10. ' ' → logprob: -8.226139068603516

Token 117: '[v' (ID: 36561)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02982870303094387
    2. '[v' → logprob: -3.5298287868499756
    3. '[' → logprob: -10.779829025268555
    4. 'j' → logprob: -11.279829025268555
    5. '[i' → logprob: -11.529829025268555
    6. 'v' → logprob: -11.904829025268555
    7. '[a' → logprob: -12.404829025268555
    8. '[q' → logprob: -12.529829025268555
    9. '[u' → logprob: -12.529829025268555
    10. '```' → logprob: -12.529829025268555

Token 118: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028168857097625732
    2. ']' → logprob: -6.627816677093506
    3. '[' → logprob: -7.127816677093506
    4. '[j' → logprob: -7.502816677093506
    5. ' ][' → logprob: -9.752817153930664
    6. 'j' → logprob: -11.002817153930664
    7. '[i' → logprob: -11.002817153930664
    8. '   ' → logprob: -11.752817153930664
    9. '[v' → logprob: -12.377817153930664
    10. '=' → logprob: -12.752817153930664

Token 119: 'j' (ID: 73)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007615610491484404
    2. '0' → logprob: -4.882615566253662
    3. ' ' → logprob: -12.38261604309082
    4. 'j' → logprob: -12.75761604309082
    5. 'i' → logprob: -14.19511604309082
    6. '   ' → logprob: -14.57011604309082
    7. '

' → logprob: -15.38261604309082
    8. '-' → logprob: -15.75761604309082
    9. '
' → logprob: -15.88261604309082
    10. ')' → logprob: -16.19511604309082

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018220659694634378
    2. ' ]' → logprob: -8.875182151794434
    3. ']=' → logprob: -10.375182151794434
    4. ']+=' → logprob: -12.500182151794434
    5. '=' → logprob: -13.500182151794434
    6. '+' → logprob: -13.750182151794434
    7. ')' → logprob: -13.750182151794434
    8. '])' → logprob: -13.875182151794434
    9. ')]' → logprob: -14.250182151794434
    10. ' =' → logprob: -14.875182151794434

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269458532333374
    2. ' =' → logprob: -2.126945972442627
    3. ')' → logprob: -12.001945495605469
    4. '+=' → logprob: -12.751945495605469
    5. ']' → logprob: -13.001945495605469
    6. '[' → logprob: -13.501945495605469
    7. ' +=' → logprob: -13.876945495605469
    8. '>' → logprob: -14.501945495605469
    9. ']=' → logprob: -14.626945495605469
    10. ')=' → logprob: -14.876945495605469

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005019200034439564
    2. 'A' → logprob: -7.750502109527588
    3. ' i' → logprob: -9.75050163269043
    4. '   ' → logprob: -12.37550163269043
    5. 'n' → logprob: -12.75050163269043
    6. 'a' → logprob: -12.75050163269043
    7. ' A' → logprob: -14.37550163269043
    8. ' ' → logprob: -14.87550163269043
    9. '`' → logprob: -15.25050163269043
    10. '  ' → logprob: -15.75050163269043

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04321681335568428
    2. 'else' → logprob: -3.4182167053222656
    3. '   ' → logprob: -5.293216705322266
    4. ' else' → logprob: -5.918216705322266
    5. '           ' → logprob: -6.543216705322266
    6. '
' → logprob: -8.668216705322266
    7. '        
' → logprob: -9.793216705322266
    8. 'elif' → logprob: -10.168216705322266
    9. '            
' → logprob: -10.293216705322266
    10. '    
' → logprob: -11.293216705322266

Token 124: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4274289906024933
    2. 'else' → logprob: -1.302428960800171
    3. '   ' → logprob: -3.177428960800171
    4. ' else' → logprob: -3.427428960800171
    5. '           ' → logprob: -7.42742919921875
    6. 'elif' → logprob: -7.55242919921875
    7. '
' → logprob: -8.55242919921875
    8. ')' → logprob: -9.05242919921875
    9. ' elif' → logprob: -9.80242919921875
    10. 'while' → logprob: -9.92742919921875

Token 125: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34281688928604126
    2. '       ' → logprob: -1.8428168296813965
    3. '   ' → logprob: -2.8428168296813965
    4. 'continue' → logprob: -3.0928168296813965
    5. 'temp' → logprob: -4.7178168296813965
    6. ' else' → logprob: -4.8428168296813965
    7. '           ' → logprob: -5.4678168296813965
    8. 'elif' → logprob: -5.5928168296813965
    9. ' continue' → logprob: -6.4678168296813965
    10. 'q' → logprob: -6.8428168296813965

Token 126: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15088918805122375
    2. 'R' → logprob: -2.0258891582489014
    3. 'P' → logprob: -5.1508893966674805
    4. 'A' → logprob: -7.0258893966674805
    5. 'v' → logprob: -7.1508893966674805
    6. 'i' → logprob: -8.40088939666748
    7. ' j' → logprob: -9.02588939666748
    8. '   ' → logprob: -9.52588939666748
    9. ' R' → logprob: -9.77588939666748
    10. 'a' → logprob: -10.27588939666748

Token 127: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5599803328514099
    2. ' ==' → logprob: -0.9349803328514099
    3. '+' → logprob: -3.5599803924560547
    4. '<' → logprob: -5.684980392456055
    5. ' +' → logprob: -6.184980392456055
    6. ':' → logprob: -7.059980392456055
    7. ' <' → logprob: -7.184980392456055
    8. '0' → logprob: -8.309980392456055
    9. '=' → logprob: -8.934980392456055
    10. ':
' → logprob: -10.184980392456055

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009633887093514204
    2. '1' → logprob: -7.00096321105957
    3. ' ' → logprob: -9.87596321105957
    4. '   ' → logprob: -14.75096321105957
    5. '01' → logprob: -18.68846321105957
    6. '  ' → logprob: -18.87596321105957
    7. '０' → logprob: -18.93846321105957
    8. '
' → logprob: -19.18846321105957
    9. '```' → logprob: -19.43846321105957
    10. '۰' → logprob: -19.50096321105957

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026365790516138077
    2. '1' → logprob: -3.6513657569885254
    3. ' ' → logprob: -9.651366233825684
    4. '   ' → logprob: -13.651366233825684
    5. '01' → logprob: -17.963865280151367
    6. '
' → logprob: -18.651365280151367
    7. '	' → logprob: -18.838865280151367
    8. '2' → logprob: -19.088865280151367
    9. '  ' → logprob: -19.151365280151367
    10. '9' → logprob: -19.151365280151367

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47572433948516846
    2. ':
' → logprob: -0.9757243394851685
    3. ' and' → logprob: -6.600724220275879
    4. 'and' → logprob: -8.850724220275879
    5. ':

' → logprob: -9.475724220275879
    6. ' or' → logprob: -11.350724220275879
    7. '):
' → logprob: -11.600724220275879
    8. ',' → logprob: -11.725724220275879
    9. '   ' → logprob: -11.975724220275879
    10. ':
' → logprob: -12.100724220275879

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7049724459648132
    2. ' heap' → logprob: -1.204972505569458
    3. 'heap' → logprob: -1.704972505569458
    4. ':
' → logprob: -4.829972267150879
    5. 'v' → logprob: -5.454972267150879
    6. '           ' → logprob: -6.079972267150879
    7. ' and' → logprob: -6.204972267150879
    8. ':' → logprob: -6.329972267150879
    9. ' v' → logprob: -6.579972267150879
    10. 'q' → logprob: -6.829972267150879

Token 132: ' temp' (ID: 5484)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -5.228561349213123e-05
    2. ' heap' → logprob: -10.000052452087402
    3. 'q' → logprob: -12.250052452087402
    4. '   ' → logprob: -14.500052452087402
    5. 'he' → logprob: -14.625052452087402
    6. 'temp' (adapté à ' temp') → logprob: -14.750052452087402
    7. 'v' → logprob: -15.000052452087402
    8. 'j' → logprob: -15.125052452087402
    9. '               ' → logprob: -17.625051498413086
    10. '           ' → logprob: -18.250051498413086

Token 133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011558557860553265
    2. '.' → logprob: -4.511558532714844
    3. ' .' → logprob: -7.886558532714844
    4. ' =' → logprob: -9.511558532714844
    5. '=' → logprob: -10.761558532714844
    6. 'append' → logprob: -11.261558532714844
    7. '].' → logprob: -11.261558532714844
    8. '.extend' → logprob: -12.636558532714844
    9. '.app' → logprob: -12.761558532714844
    10. ').' → logprob: -13.386558532714844

Token 134: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023668183013796806
    2. '(' → logprob: -4.27366828918457
    3. '(i' → logprob: -4.89866828918457
    4. '(v' → logprob: -6.27366828918457
    5. '([' → logprob: -9.77366828918457
    6. '(j' → logprob: -10.14866828918457
    7. '(n' → logprob: -11.77366828918457
    8. '(q' → logprob: -12.27366828918457
    9. '((-' → logprob: -13.02366828918457
    10. '(a' → logprob: -13.77366828918457

Token 135: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06020155921578407
    2. 'i' → logprob: -3.560201644897461
    3. 'A' → logprob: -4.310201644897461
    4. 'R' → logprob: -4.685201644897461
    5. '(v' → logprob: -6.310201644897461
    6. 'n' → logprob: -6.560201644897461
    7. '0' → logprob: -6.560201644897461
    8. '1' → logprob: -7.185201644897461
    9. 'q' → logprob: -7.185201644897461
    10. '(i' → logprob: -7.935201644897461

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.780830830801278e-05
    2. ' ,' → logprob: -9.37508773803711
    3. '   ' → logprob: -14.12508773803711
    4. ',j' → logprob: -14.50008773803711
    5. '1' → logprob: -14.75008773803711
    6. ',
' → logprob: -15.00008773803711
    7. '+' → logprob: -15.62508773803711
    8. ' ' → logprob: -16.00008773803711
    9. '0' → logprob: -16.12508773803711
    10. ' +' → logprob: -16.37508773803711

Token 137: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014203590340912342
    2. 'j' → logprob: -4.3892035484313965
    3. ' ' → logprob: -6.7642035484313965
    4. ' j' → logprob: -8.139204025268555
    5. '   ' → logprob: -8.514204025268555
    6. '0' → logprob: -10.639204025268555
    7. '  ' → logprob: -11.764204025268555
    8. '    ' → logprob: -12.389204025268555
    9. '2' → logprob: -13.576704025268555
    10. '     ' → logprob: -13.764204025268555

Token 138: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18149469792842865
    2. ' +' → logprob: -2.05649471282959
    3. '))' → logprob: -3.30649471282959
    4. '1' → logprob: -6.68149471282959
    5. '))
' → logprob: -9.30649471282959
    6. ' ' → logprob: -10.68149471282959
    7. '   ' → logprob: -11.05649471282959
    8. ',' → logprob: -11.18149471282959
    9. ' ))' → logprob: -11.30649471282959
    10. '-' → logprob: -12.30649471282959

Token 139: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039706481038592756
    2. ' ' → logprob: -7.875397205352783
    3. '))' → logprob: -11.875396728515625
    4. '0' → logprob: -12.625396728515625
    5. ')))' → logprob: -12.625396728515625
    6. ')' → logprob: -12.875396728515625
    7. 'v' → logprob: -14.625396728515625
    8. '  ' → logprob: -15.875396728515625
    9. '   ' → logprob: -16.375396728515625
    10. ' ))' → logprob: -17.375396728515625

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. '0' → logprob: -10.250042915344238
    3. ' ' → logprob: -12.250042915344238
    4. '))' → logprob: -13.875042915344238
    5. ')' → logprob: -14.125042915344238
    6. 'v' → logprob: -14.250042915344238
    7. ')))' → logprob: -16.500041961669922
    8. '-' → logprob: -17.250041961669922
    9. '2' → logprob: -17.750041961669922
    10. '   ' → logprob: -18.250041961669922

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31591203808784485
    2. '))
' → logprob: -1.3159120082855225
    3. '           ' → logprob: -6.565912246704102
    4. '               ' → logprob: -6.815912246704102
    5. ' ))' → logprob: -10.315912246704102
    6. ' ))
' → logprob: -10.315912246704102
    7. '))
' → logprob: -10.440912246704102
    8. '                   ' → logprob: -10.940912246704102
    9. '))

' → logprob: -11.315912246704102
    10. '       ' → logprob: -12.315912246704102

Token 142: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48065105080604553
    2. '   ' → logprob: -1.6056510210037231
    3. '           ' → logprob: -2.4806511402130127
    4. '       ' → logprob: -2.9806511402130127
    5. 'for' → logprob: -3.1056511402130127
    6. '
' → logprob: -6.730650901794434
    7. '               ' → logprob: -8.480650901794434
    8. '	for' → logprob: -10.105650901794434
    9. '    ' → logprob: -10.230650901794434
    10. ' while' → logprob: -10.355650901794434

Token 143: ' else' (ID: 1203)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5908904671669006
    2. 'for' → logprob: -1.3408904075622559
    3. '   ' → logprob: -1.7158904075622559
    4. '       ' → logprob: -6.090890407562256
    5. '           ' → logprob: -7.090890407562256
    6. ' else' → logprob: -7.340890407562256
    7. 'else' (adapté à ' else') → logprob: -7.715890407562256
    8. ' while' → logprob: -8.590890884399414
    9. 'while' → logprob: -8.715890884399414
    10. '    ' → logprob: -9.840890884399414

Token 144: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.672236824873835e-05
    2. ':' → logprob: -9.875076293945312
    3. ':
' → logprob: -10.750076293945312
    4. '          ' → logprob: -13.875076293945312
    5. '            ' → logprob: -14.500076293945312
    6. '               ' → logprob: -14.625076293945312
    7. ' break' → logprob: -15.000076293945312
    8. '       ' → logprob: -15.125076293945312
    9. 'break' → logprob: -15.250076293945312
    10. '		' → logprob: -15.375076293945312

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018804390856530517
    2. ' break' → logprob: -9.125187873840332
    3. 'break' → logprob: -10.125187873840332
    4. '       ' → logprob: -10.500187873840332
    5. '   ' → logprob: -12.125187873840332
    6. '		' → logprob: -13.250187873840332
    7. '               ' → logprob: -13.625187873840332
    8. '	break' → logprob: -13.875187873840332
    9. '          ' → logprob: -14.625187873840332
    10. '         ' → logprob: -14.625187873840332

Token 146: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.23406332731246948
    2. '           ' → logprob: -1.7340633869171143
    3. ' break' → logprob: -3.4840633869171143
    4. '	break' → logprob: -6.609063148498535
    5. '
' → logprob: -9.984063148498535
    6. '       ' → logprob: -10.984063148498535
    7. '		' → logprob: -11.109063148498535
    8. '   ' → logprob: -12.109063148498535
    9. '               ' → logprob: -12.359063148498535
    10. '            
' → logprob: -13.859063148498535

Token 147: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13555222749710083
    2. '   ' → logprob: -2.385552167892456
    3. ' heap' → logprob: -3.760552167892456
    4. 'for' → logprob: -4.885552406311035
    5. ' while' → logprob: -6.885552406311035
    6. ' if' → logprob: -7.010552406311035
    7. 'heap' → logprob: -7.385552406311035
    8. '```' → logprob: -7.385552406311035
    9. '    
' → logprob: -8.260552406311035
    10. '
' → logprob: -9.385552406311035

Token 148: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22711949050426483
    2. ' for' → logprob: -2.2271194458007812
    3. '   ' → logprob: -2.3521194458007812
    4. '	for' → logprob: -9.852119445800781
    5. '
' → logprob: -9.977119445800781
    6. '    
' → logprob: -10.602119445800781
    7. '```' → logprob: -10.602119445800781
    8. '       ' → logprob: -12.102119445800781
    9. ' ' → logprob: -12.352119445800781
    10. '  
' → logprob: -13.352119445800781

Token 149: ' heap' (ID: 37237)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2032950520515442
    2. ' for' → logprob: -1.7032949924468994
    3. '   ' → logprob: -6.8282952308654785
    4. 'heap' (adapté à ' heap') → logprob: -7.4532952308654785
    5. ' heap' → logprob: -9.07829475402832
    6. '```' → logprob: -10.20329475402832
    7. '	for' → logprob: -11.07829475402832
    8. 'if' → logprob: -11.45329475402832
    9. '    
' → logprob: -11.45329475402832
    10. ' ' → logprob: -11.57829475402832

Token 150: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -18.25
    3. 'push' → logprob: -19.0
    4. '```' → logprob: -19.5
    5. '.he' → logprob: -19.75
    6. 'ql' → logprob: -19.875
    7. '[' → logprob: -20.0
    8. '.push' → logprob: -20.25
    9. 'app' → logprob: -20.5
    10. '.append' → logprob: -20.75

Token 151: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00027599421446211636
    2. '.heap' → logprob: -8.375275611877441
    3. 'he' → logprob: -10.250275611877441
    4. '_he' → logprob: -12.000275611877441
    5. '```' → logprob: -13.375275611877441
    6. 'q' → logprob: -14.125275611877441
    7. 'heap' → logprob: -14.375275611877441
    8. '_push' → logprob: -15.375275611877441
    9. ' he' → logprob: -15.375275611877441
    10. '(heap' → logprob: -15.500275611877441

Token 152: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007249409682117403
    2. 'ap' → logprob: -7.250724792480469
    3. 'pp' → logprob: -11.125724792480469
    4. 'a' → logprob: -16.37572479248047
    5. 'p' → logprob: -17.00072479248047
    6. 'ап' → logprob: -17.37572479248047
    7. 'qp' → logprob: -17.62572479248047
    8. 'appen' → logprob: -17.87572479248047
    9. 'q' → logprob: -18.37572479248047
    10. '```' → logprob: -18.62572479248047

Token 153: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.05709719657897949
    2. 'op' → logprob: -3.1820971965789795
    3. 'p' → logprob: -4.557097434997559
    4. 'push' → logprob: -6.432097434997559
    5. 'pp' → logprob: -6.932097434997559
    6. 'app' → logprob: -7.932097434997559
    7. 'ap' → logprob: -8.307097434997559
    8. 'pop' → logprob: -9.557097434997559
    9. '```' → logprob: -9.557097434997559
    10. 'ify' → logprob: -10.057097434997559

Token 154: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. 'q' → logprob: -16.375
    4. ' (' → logprob: -20.75
    5. '((' → logprob: -21.125
    6. '(u' → logprob: -21.5
    7. '```' → logprob: -21.75
    8. '(p' → logprob: -21.875
    9. '(n' → logprob: -22.125
    10. '(
' → logprob: -22.25

Token 155: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0014607120538130403
    2. '(' → logprob: -6.751460552215576
    3. '(A' → logprob: -8.376461029052734
    4. '((' → logprob: -10.001461029052734
    5. ')' → logprob: -12.626461029052734
    6. ',' → logprob: -12.751461029052734
    7. ' (' → logprob: -13.001461029052734
    8. '(n' → logprob: -13.251461029052734
    9. '(Q' → logprob: -13.501461029052734
    10. '([' → logprob: -14.001461029052734

Token 156: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00034928982495330274
    2. ' (' → logprob: -8.625349044799805
    3. '(' → logprob: -8.750349044799805
    4. '(a' → logprob: -11.625349044799805
    5. '(i' → logprob: -14.000349044799805
    6. '((' → logprob: -15.000349044799805
    7. ')' → logprob: -15.500349044799805
    8. '[A' → logprob: -15.625349044799805
    9. '(True' → logprob: -16.250349044799805
    10. '   ' → logprob: -16.250349044799805

Token 157: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. ' A' → logprob: -14.375000953674316
    3. 'n' → logprob: -20.25
    4. ')' → logprob: -20.5
    5. '0' → logprob: -20.75
    6. '	A' → logprob: -20.875
    7. '   ' → logprob: -20.875
    8. '(A' → logprob: -21.375
    9. ',A' → logprob: -21.5
    10. 'i' → logprob: -21.625

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.5
    3. '[' → logprob: -15.875
    4. 'i' → logprob: -16.75
    5. '[I' → logprob: -16.75
    6. '[
' → logprob: -17.25
    7. '[n' → logprob: -17.5
    8. '[q' → logprob: -17.875
    9. '```' → logprob: -18.125
    10. ')[' → logprob: -18.25

Token 159: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ' ,' → logprob: -11.12502384185791
    3. '0' → logprob: -12.00002384185791
    4. '[' → logprob: -13.00002384185791
    5. ' ' → logprob: -15.62502384185791
    6. '],' → logprob: -16.750022888183594
    7. '),' → logprob: -18.000022888183594
    8. ',
' → logprob: -18.125022888183594
    9. '`,' → logprob: -18.250022888183594
    10. '   ' → logprob: -18.875022888183594

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -13.875141143798828
    4. '   ' → logprob: -17.625141143798828
    5. '۰' → logprob: -19.187641143798828
    6. '(' → logprob: -19.375141143798828
    7. '  ' → logprob: -19.625141143798828
    8. ')' → logprob: -20.312641143798828
    9. '０' → logprob: -20.437641143798828
    10. '[' → logprob: -20.500141143798828

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.500008583068848
    4. '   ' → logprob: -19.25000762939453
    5. '۰' → logprob: -19.50000762939453
    6. '(' → logprob: -20.31250762939453
    7. '０' → logprob: -20.31250762939453
    8. 'i' → logprob: -20.43750762939453
    9. '[' → logprob: -21.00000762939453
    10. ')' → logprob: -21.06250762939453

Token 162: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005405236734077334
    2. ')' → logprob: -8.000540733337402
    3. '))
' → logprob: -8.500540733337402
    4. ' ))' → logprob: -14.250540733337402
    5. ')
' → logprob: -14.375540733337402
    6. ')))' → logprob: -14.875540733337402
    7. '))

' → logprob: -15.875540733337402
    8. '));' → logprob: -17.750539779663086
    9. '))
' → logprob: -18.000539779663086
    10. ''))' → logprob: -18.375539779663086

Token 163: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.137130498653278e-05
    2. ' for' → logprob: -9.500081062316895
    3. 'while' → logprob: -12.500081062316895
    4. '<|end|>' → logprob: -13.750081062316895
    5. 'if' → logprob: -14.250081062316895
    6. '   ' → logprob: -15.375081062316895
    7. '```' → logprob: -15.375081062316895
    8. '	for' → logprob: -16.25008201599121
    9. '
' → logprob: -16.50008201599121
    10. '#' → logprob: -16.75008201599121

Token 165: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002366370754316449
    2. ' v' → logprob: -6.627366542816162
    3. '(v' → logprob: -6.877366542816162
    4. 'vv' → logprob: -12.377366065979004
    5. 'vj' → logprob: -13.502366065979004
    6. 'x' → logprob: -13.627366065979004
    7. 't' → logprob: -13.877366065979004
    8. ' (' → logprob: -15.502366065979004
    9. 'tv' → logprob: -16.00236701965332
    10. 'vi' → logprob: -16.00236701965332

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019511326681822538
    2. ',j' → logprob: -6.251951217651367
    3. ',t' → logprob: -11.126951217651367
    4. ' ,' → logprob: -12.126951217651367
    5. 'in' → logprob: -14.626951217651367
    6. 'j' → logprob: -15.251951217651367
    7. ',i' → logprob: -15.501951217651367
    8. ' in' → logprob: -16.001951217651367
    9. '_,' → logprob: -16.126951217651367
    10. ',temp' → logprob: -16.126951217651367

Token 167: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0031866247300058603
    2. ' j' → logprob: -6.1281867027282715
    3. 'temp' → logprob: -7.0031867027282715
    4. 'idx' → logprob: -10.003186225891113
    5. ' temp' → logprob: -10.878186225891113
    6. '0' → logprob: -12.253186225891113
    7. '_j' → logprob: -12.878186225891113
    8. ' ' → logprob: -13.128186225891113
    9. 'v' → logprob: -13.128186225891113
    10. 'i' → logprob: -13.128186225891113

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889415442943573
    2. 'in' → logprob: -2.4639415740966797
    3. '   ' → logprob: -14.33894157409668
    4. 'n' → logprob: -14.46394157409668
    5. '	in' → logprob: -15.96394157409668
    6. '    ' → logprob: -16.46394157409668
    7. '
' → logprob: -16.46394157409668
    8. 'import' → logprob: -16.46394157409668
    9. 'In' → logprob: -16.58894157409668
    10. ' ' → logprob: -16.58894157409668

Token 169: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.001170225441455841
    2. ' temp' → logprob: -6.7511701583862305
    3. 'tmp' → logprob: -18.126171112060547
    4. 'tem' → logprob: -18.876171112060547
    5. '	temp' → logprob: -20.376171112060547
    6. 't' → logprob: -21.126171112060547
    7. '(temp' → logprob: -21.126171112060547
    8. '_temp' → logprob: -22.251171112060547
    9. ' ' → logprob: -22.876171112060547
    10. '   ' → logprob: -23.501171112060547

Token 170: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2823801338672638
    2. ':' → logprob: -1.4073801040649414
    3. '       ' → logprob: -7.282380104064941
    4. '):
' → logprob: -8.032380104064941
    5. '):' → logprob: -10.157380104064941
    6. ' :
' → logprob: -10.157380104064941
    7. '   ' → logprob: -10.157380104064941
    8. 'heap' → logprob: -10.532380104064941
    9. '.heap' → logprob: -11.282380104064941
    10. '(heap' → logprob: -11.282380104064941

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7418614625930786
    2. 'heap' → logprob: -0.7418614625930786
    3. ' heap' → logprob: -3.241861343383789
    4. '   ' → logprob: -4.866861343383789
    5. '(heap' → logprob: -8.616861343383789
    6. '.heap' → logprob: -8.616861343383789
    7. '```' → logprob: -8.741861343383789
    8. '           ' → logprob: -9.741861343383789
    9. ' ' → logprob: -10.366861343383789
    10. '_heap' → logprob: -10.616861343383789

Token 172: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -8.041768160182983e-05
    2. ' heap' → logprob: -9.500080108642578
    3. '   ' → logprob: -12.375080108642578
    4. 'he' → logprob: -13.875080108642578
    5. '```' → logprob: -16.125080108642578
    6. '.heap' → logprob: -16.125080108642578
    7. '(heap' → logprob: -16.625080108642578
    8. '
' → logprob: -17.500080108642578
    9. '_heap' → logprob: -17.750080108642578
    10. ' ' → logprob: -18.000080108642578

Token 173: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.15310683415737e-05
    2. 'p' → logprob: -11.000021934509277
    3. 'app' → logprob: -13.000021934509277
    4. 'he' → logprob: -13.875021934509277
    5. 'push' → logprob: -13.875021934509277
    6. 'h' → logprob: -15.375021934509277
    7. 'k' → logprob: -15.875021934509277
    8. 'qp' → logprob: -16.75002098083496
    9. '.he' → logprob: -16.87502098083496
    10. 'ush' → logprob: -17.00002098083496

Token 174: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.141159787774086
    2. 'he' → logprob: -2.516159772872925
    3. 'heap' → logprob: -3.391159772872925
    4. '.heap' → logprob: -4.141160011291504
    5. 'app' → logprob: -7.516160011291504
    6. 'ush' → logprob: -7.891160011291504
    7. 'h' → logprob: -8.891160011291504
    8. ' he' → logprob: -9.891160011291504
    9. '(heap' → logprob: -10.016160011291504
    10. 'push' → logprob: -10.766160011291504

Token 175: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001029471677611582
    2. 'ap' → logprob: -9.250102996826172
    3. 'pp' → logprob: -12.000102996826172
    4. 'a' → logprob: -15.000102996826172
    5. 'p' → logprob: -15.625102996826172
    6. 'push' → logprob: -16.625102996826172
    7. 'q' → logprob: -17.375102996826172
    8. '[' → logprob: -18.375102996826172
    9. 'qp' → logprob: -18.375102996826172
    10. '```' → logprob: -18.375102996826172

Token 176: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -8.149051427608356e-05
    2. 'push' → logprob: -9.500081062316895
    3. 'sh' → logprob: -13.125081062316895
    4. 'op' → logprob: -13.375081062316895
    5. 'p' → logprob: -13.625081062316895
    6. 'app' → logprob: -14.375081062316895
    7. 'q' → logprob: -15.125081062316895
    8. '```' → logprob: -15.375081062316895
    9. 'u' → logprob: -15.750081062316895
    10. 'ap' → logprob: -15.750081062316895

Token 177: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -7.896309739408025e-07
    2. 'q' → logprob: -14.250000953674316
    3. '(' → logprob: -17.25
    4. '```' → logprob: -19.125
    5. ',q' → logprob: -19.25
    6. '[q' → logprob: -19.625
    7. ' (' → logprob: -20.625
    8. '(queue' → logprob: -21.375
    9. '(u' → logprob: -21.5
    10. '	q' → logprob: -21.75

Token 178: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.004913631360977888
    2. ',' → logprob: -5.504913806915283
    3. ',q' → logprob: -7.129913806915283
    4. '(v' → logprob: -11.004913330078125
    5. 'q' → logprob: -12.004913330078125
    6. ')' → logprob: -12.254913330078125
    7. '(' → logprob: -12.754913330078125
    8. ' (' → logprob: -13.504913330078125
    9. ',(' → logprob: -13.754913330078125
    10. ')(' → logprob: -15.004913330078125

Token 179: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.008616345934569836
    2. ' (' → logprob: -4.7586164474487305
    3. '(' → logprob: -13.88361644744873
    4. '   ' → logprob: -14.38361644744873
    5. ' ' → logprob: -15.88361644744873
    6. ')' → logprob: -16.883615493774414
    7. '(V' → logprob: -17.008615493774414
    8. '(value' → logprob: -18.383615493774414
    9. '  ' → logprob: -18.633615493774414
    10. '(vc' → logprob: -18.633615493774414

Token 180: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010619866661727428
    2. 'A' → logprob: -6.876061916351318
    3. 'R' → logprob: -11.626062393188477
    4. ' v' → logprob: -11.751062393188477
    5. 'n' → logprob: -12.876062393188477
    6. '(v' → logprob: -12.876062393188477
    7. ')v' → logprob: -13.251062393188477
    8. 'P' → logprob: -13.501062393188477
    9. 'a' → logprob: -13.751062393188477
    10. '   ' → logprob: -14.001062393188477

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000494533043820411
    2. ',j' → logprob: -7.875494480133057
    3. ' ,' → logprob: -9.125494956970215
    4. '   ' → logprob: -13.000494956970215
    5. '[' → logprob: -13.500494956970215
    6. '```' → logprob: -14.375494956970215
    7. ',
' → logprob: -14.750494956970215
    8. '[j' → logprob: -15.750494956970215
    9. ',q' → logprob: -16.0004940032959
    10. 'j' → logprob: -16.1254940032959

Token 182: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00788011122494936
    2. ' j' → logprob: -5.007880210876465
    3. '1' → logprob: -6.757880210876465
    4. ' ' → logprob: -13.632880210876465
    5. '   ' → logprob: -14.507880210876465
    6. '	j' → logprob: -14.632880210876465
    7. '    ' → logprob: -15.882880210876465
    8. '  ' → logprob: -17.00787925720215
    9. ')' → logprob: -17.00787925720215
    10. '$j' → logprob: -17.00787925720215

Token 183: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007637646631337702
    2. '+' → logprob: -7.375763893127441
    3. '))
' → logprob: -9.750763893127441
    4. ' ))' → logprob: -10.000763893127441
    5. ')' → logprob: -10.875763893127441
    6. ' +' → logprob: -11.625763893127441
    7. ')))' → logprob: -12.625763893127441
    8. '))

' → logprob: -13.875763893127441
    9. '1' → logprob: -14.375763893127441
    10. '   ' → logprob: -15.375763893127441

Token 184: 'L' (ID: 43)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23463614284992218
    2. 'print' → logprob: -1.7346361875534058
    3. '#' → logprob: -3.859636068344116
    4. 'answer' → logprob: -5.984636306762695
    5. ')' → logprob: -6.359636306762695
    6. 'result' → logprob: -6.484636306762695
    7. 'i' → logprob: -6.734636306762695
    8. 'max' → logprob: -6.734636306762695
    9. '<|end|>' → logprob: -6.984636306762695
    10. ' for' → logprob: -7.609636306762695

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048880401998758316
    2. '=' → logprob: -3.0488803386688232
    3. 'eft' → logprob: -9.423880577087402
    4. ',' → logprob: -10.673880577087402
    5. ' ' → logprob: -10.673880577087402
    6. 'ef' → logprob: -10.673880577087402
    7. '=[' → logprob: -10.673880577087402
    8. '[' → logprob: -10.798880577087402
    9. '=[]' → logprob: -10.923880577087402
    10. '   ' → logprob: -11.048880577087402

Token 186: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30685967206954956
    2. '[-' → logprob: -2.1818597316741943
    3. '[n' → logprob: -2.1818597316741943
    4. '[P' → logprob: -4.181859493255615
    5. '0' → logprob: -4.431859493255615
    6. '[i' → logprob: -5.306859493255615
    7. '[A' → logprob: -5.806859493255615
    8. 'n' → logprob: -7.181859493255615
    9. '[R' → logprob: -7.306859493255615
    10. '[[' → logprob: -7.806859493255615

Token 187: '-' (ID: 12)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06537657976150513
    2. '0' → logprob: -3.0653765201568604
    3. '-' → logprob: -4.9403767585754395
    4. '[n' → logprob: -5.3153767585754395
    5. '[-' → logprob: -6.1903767585754395
    6. '[' → logprob: -7.3153767585754395
    7. 'i' → logprob: -7.3153767585754395
    8. '[i' → logprob: -7.9403767585754395
    9. '-n' → logprob: -8.065376281738281
    10. '(n' → logprob: -9.440376281738281

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.412610233994201e-05
    2. 'n' → logprob: -9.875094413757324
    3. '2' → logprob: -10.125094413757324
    4. '(n' → logprob: -14.000094413757324
    5. '-' → logprob: -14.625094413757324
    6. ' ' → logprob: -15.125094413757324
    7. '10' → logprob: -15.750094413757324
    8. '(' → logprob: -15.875094413757324
    9. '

' → logprob: -16.250093460083008
    10. '3' → logprob: -16.500093460083008

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0650656670331955
    2. ',' → logprob: -3.190065622329712
    3. ' for' → logprob: -4.690065860748291
    4. 'for' → logprob: -4.940065860748291
    5. ']*' → logprob: -5.565065860748291
    6. '*' → logprob: -6.565065860748291
    7. '[' → logprob: -10.065065383911133
    8. ' ]' → logprob: -10.190065383911133
    9. '[-' → logprob: -10.190065383911133
    10. ' *' → logprob: -10.190065383911133

Token 190: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24307659268379211
    2. 'for' → logprob: -1.6180765628814697
    3. '*' → logprob: -4.368076801300049
    4. ' *' → logprob: -5.868076801300049
    5. ']' → logprob: -6.868076801300049
    6. '[' → logprob: -8.24307632446289
    7. ']*' → logprob: -8.36807632446289
    8. ' ' → logprob: -9.11807632446289
    9. ',' → logprob: -9.49307632446289
    10. ' [' → logprob: -9.86807632446289

Token 191: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35794681310653687
    2. 'n' → logprob: -1.2329468727111816
    3. '3' → logprob: -5.107946872711182
    4. '(n' → logprob: -5.857946872711182
    5. ' n' → logprob: -8.482946395874023
    6. '(' → logprob: -8.857946395874023
    7. ' ' → logprob: -9.107946395874023
    8. '1' → logprob: -11.232946395874023
    9. '4' → logprob: -11.357946395874023
    10. ' (' → logprob: -11.857946395874023

Token 192: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6126731038093567
    2. '2' → logprob: -0.8626731038093567
    3. '3' → logprob: -3.737673044204712
    4. '(n' → logprob: -4.487673282623291
    5. ' n' → logprob: -7.737673282623291
    6. '(' → logprob: -8.737672805786133
    7. ' ' → logprob: -9.112672805786133
    8. '   ' → logprob: -9.862672805786133
    9. '4' → logprob: -10.112672805786133
    10. ' (' → logprob: -10.237672805786133

Token 193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269282102584839
    2. 'for' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.251928329467773
    4. '	for' → logprob: -16.376928329467773
    5. '   ' → logprob: -18.126928329467773
    6. '[' → logprob: -18.626928329467773
    7. ' [' → logprob: -19.251928329467773
    8. ',' → logprob: -19.501928329467773
    9. '[]' → logprob: -19.626928329467773
    10. ']' → logprob: -19.876928329467773

Token 194: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03939187899231911
    2. 'range' → logprob: -3.6643919944763184
    3. '_' → logprob: -4.539391994476318
    4. ' _' → logprob: -6.414391994476318
    5. '(range' → logprob: -7.664391994476318
    6. '_range' → logprob: -9.03939151763916
    7. 'n' → logprob: -10.66439151763916
    8. ' n' → logprob: -10.78939151763916
    9. ' in' → logprob: -10.78939151763916
    10. '(n' → logprob: -11.03939151763916

Token 195: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03011190891265869
    2. ' range' → logprob: -3.530111789703369
    3. '(range' → logprob: -8.905112266540527
    4. 'in' → logprob: -9.030112266540527
    5. '(n' → logprob: -9.280112266540527
    6. 'n' → logprob: -12.030112266540527
    7. ' in' → logprob: -12.155112266540527
    8. '(' → logprob: -14.030112266540527
    9. '_range' → logprob: -14.780112266540527
    10. '	range' → logprob: -15.905112266540527

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01822369173169136
    2. ' range' → logprob: -4.018223762512207
    3. 'n' → logprob: -9.768223762512207
    4. '(range' → logprob: -11.143223762512207
    5. '(n' → logprob: -13.643223762512207
    6. ' n' → logprob: -14.768223762512207
    7. 'rang' → logprob: -16.39322280883789
    8. '   ' → logprob: -16.51822280883789
    9. '[n' → logprob: -17.01822280883789
    10. ' ' → logprob: -17.01822280883789

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.30437910556793213
    2. 'range' → logprob: -1.8043791055679321
    3. ' range' → logprob: -2.6793789863586426
    4. '(range' → logprob: -3.9293789863586426
    5. 'n' → logprob: -4.679378986358643
    6. ' n' → logprob: -8.6793794631958
    7. ' (' → logprob: -9.5543794631958
    8. '(' → logprob: -9.9293794631958
    9. '_range' → logprob: -12.8043794631958
    10. '-range' → logprob: -14.6793794631958

Token 198: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009992523118853569
    2. ')]
' → logprob: -4.884992599487305
    3. ']' → logprob: -6.134992599487305
    4. ')' → logprob: -9.134992599487305
    5. ']
' → logprob: -9.509992599487305
    6. ')]

' → logprob: -10.884992599487305
    7. ')
' → logprob: -11.759992599487305
    8. ')]
' → logprob: -12.509992599487305
    9. ' )' → logprob: -12.884992599487305
    10. ' ]' → logprob: -14.009992599487305

Token 199: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03171352297067642
    2. 'q' → logprob: -3.5317134857177734
    3. 'stack' → logprob: -7.031713485717773
    4. 'r' → logprob: -8.906713485717773
    5. 'pos' → logprob: -9.031713485717773
    6. 'heap' → logprob: -9.156713485717773
    7. 's' → logprob: -9.281713485717773
    8. 'last' → logprob: -9.281713485717773
    9. 'import' → logprob: -9.656713485717773
    10. 'positions' → logprob: -9.781713485717773

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09821013361215591
    2. ' =' → logprob: -2.723210096359253
    3. '=[]' → logprob: -3.598210096359253
    4. '.clear' → logprob: -7.848210334777832
    5. '=[]
' → logprob: -9.598210334777832
    6. '=[]
' → logprob: -10.973210334777832
    7. '[:]' → logprob: -11.473210334777832
    8. '.append' → logprob: -11.848210334777832
    9. '=

' → logprob: -13.098210334777832
    10. 'import' → logprob: -13.598210334777832

Token 201: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47408872842788696
    2. '[]
' → logprob: -0.974088728427887
    3. 'deque' → logprob: -12.224088668823242
    4. '[]

' → logprob: -12.849088668823242
    5. '[(' → logprob: -13.974088668823242
    6. '[' → logprob: -14.474088668823242
    7. '[-' → logprob: -14.599088668823242
    8. 'import' → logprob: -14.849088668823242
    9. '[]}' → logprob: -14.974088668823242
    10. 'heap' → logprob: -15.224088668823242

Token 202: 'import' (ID: 561)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.272494375705719
    2. 'import' → logprob: -1.5224943161010742
    3. 'for' → logprob: -3.897494316101074
    4. '(heap' → logprob: -10.772494316101074
    5. '```' → logprob: -10.897494316101074
    6. '.heap' → logprob: -12.397494316101074
    7. ' heap' → logprob: -12.522494316101074
    8. 'from' → logprob: -13.022494316101074
    9. 'he' → logprob: -13.397494316101074
    10. ' for' → logprob: -13.647494316101074

Token 203: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.006490831263363361
    2. 'collections' → logprob: -5.256490707397461
    3. ' heap' → logprob: -7.631490707397461
    4. 'deque' → logprob: -7.881490707397461
    5. 'sys' → logprob: -8.006490707397461
    6. 'queue' → logprob: -10.631490707397461
    7. 'bis' → logprob: -10.631490707397461
    8. 'he' → logprob: -12.131490707397461
    9. ' collections' → logprob: -12.881490707397461
    10. 'thread' → logprob: -13.631490707397461

Token 204: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. 'import' → logprob: -14.250000953674316
    3. 'from' → logprob: -15.750000953674316
    4. 'p' → logprob: -15.750000953674316
    5. 'queue' → logprob: -16.750001907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. 'ql' → logprob: -18.625001907348633
    8. 'Q' → logprob: -18.875001907348633
    9. 'qhub' → logprob: -19.125001907348633
    10. 'qml' → logprob: -19.125001907348633

Token 205: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -8.637786231702194e-05
    2. '(heap' → logprob: -10.375086784362793
    3. 'for' → logprob: -10.500086784362793
    4. '.heap' → logprob: -11.500086784362793
    5. 'q' → logprob: -11.750086784362793
    6. ' heap' → logprob: -12.375086784362793
    7. 'import' → logprob: -13.500086784362793
    8. '#' → logprob: -13.625086784362793
    9. '
' → logprob: -14.125086784362793
    10. 'he' → logprob: -14.250086784362793

Token 206: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00020950057660229504
    2. 'for' → logprob: -8.62520980834961
    3. '(heap' → logprob: -11.12520980834961
    4. '#' → logprob: -12.50020980834961
    5. 'he' → logprob: -12.50020980834961
    6. 'q' → logprob: -12.87520980834961
    7. '.heap' → logprob: -13.37520980834961
    8. ' heap' → logprob: -13.37520980834961
    9. 'import' → logprob: -14.25020980834961
    10. '
' → logprob: -14.50020980834961

Token 207: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.173704271830502e-06
    2. '<|end|>' → logprob: -14.50000286102295
    3. '﻿' → logprob: -14.87500286102295
    4. 'import' → logprob: -15.00000286102295
    5. '[' → logprob: -15.00000286102295
    6. '.heap' → logprob: -15.25000286102295
    7. '```' → logprob: -15.25000286102295
    8. '<|end|>' → logprob: -15.75000286102295
    9. '‌' → logprob: -16.000003814697266
    10. '.' → logprob: -16.375003814697266

Token 208: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.005243718158453703
    2. '.he' → logprob: -5.25524377822876
    3. 'heap' → logprob: -12.255243301391602
    4. ' .' → logprob: -13.005243301391602
    5. '.' → logprob: -13.255243301391602
    6. '(heap' → logprob: -14.005243301391602
    7. ' heap' → logprob: -16.0052433013916
    8. 'he' → logprob: -16.3802433013916
    9. '_heap' → logprob: -17.2552433013916
    10. 'q' → logprob: -17.3802433013916

Token 209: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0003500050224829465
    2. 'fy' → logprob: -8.625349998474121
    3. 'if' → logprob: -9.250349998474121
    4. 'q' → logprob: -10.125349998474121
    5. 'heap' → logprob: -11.000349998474121
    6. 'lify' → logprob: -12.500349998474121
    7. 'pop' → logprob: -12.875349998474121
    8. 'push' → logprob: -13.375349998474121
    9. '```' → logprob: -13.375349998474121
    10. 'ize' → logprob: -13.625349998474121

Token 210: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.37501335144043
    3. '()' → logprob: -14.12501335144043
    4. 'q' → logprob: -14.50001335144043
    5. ' (' → logprob: -15.12501335144043
    6. '[q' → logprob: -15.37501335144043
    7. '(s' → logprob: -16.25001335144043
    8. '(n' → logprob: -17.00001335144043
    9. '(Q' → logprob: -17.12501335144043
    10. '(u' → logprob: -17.25001335144043

Token 211: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005263525992631912
    2. ')
' → logprob: -5.505263328552246
    3. ')' → logprob: -6.755263328552246
    4. ' for' → logprob: -10.880263328552246
    5. '
' → logprob: -14.380263328552246
    6. ')

' → logprob: -15.880263328552246
    7. '```' → logprob: -17.880264282226562
    8. '#' → logprob: -18.005264282226562
    9. ')
' → logprob: -18.130264282226562
    10. '.for' → logprob: -18.755264282226562

Token 212: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. 'heap' → logprob: -17.625
    5. 'from' → logprob: -18.375
    6. '#' → logprob: -18.875
    7. 'q' → logprob: -20.0
    8. '
' → logprob: -20.25
    9. '	for' → logprob: -20.75
    10. 'For' → logprob: -20.875

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003701973706483841
    2. ' i' → logprob: -5.628702163696289
    3. 'range' → logprob: -9.503702163696289
    4. ' range' → logprob: -11.628702163696289
    5. 'n' → logprob: -12.628702163696289
    6. 're' → logprob: -12.753702163696289
    7. 'j' → logprob: -13.253702163696289
    8. '-' → logprob: -13.503702163696289
    9. '(i' → logprob: -13.628702163696289
    10. 'P' → logprob: -13.753702163696289

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3873302638530731
    2. 'in' → logprob: -1.1373302936553955
    3. ',' → logprob: -7.887330055236816
    4. 'n' → logprob: -10.012330055236816
    5. '(n' → logprob: -11.012330055236816
    6. 'range' → logprob: -11.637330055236816
    7. ' ' → logprob: -13.012330055236816
    8. ',n' → logprob: -13.137330055236816
    9. '   ' → logprob: -13.262330055236816
    10. '(' → logprob: -13.387330055236816

Token 215: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07277898490428925
    2. ' range' → logprob: -2.6977789402008057
    3. 're' → logprob: -5.947779178619385
    4. ' reversed' → logprob: -8.697778701782227
    5. 'n' → logprob: -10.197778701782227
    6. 'P' → logprob: -12.072778701782227
    7. 'reverse' → logprob: -12.197778701782227
    8. 'r' → logprob: -12.947778701782227
    9. '(range' → logprob: -13.197778701782227
    10. 'in' → logprob: -13.447778701782227

Token 216: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.842555426876061e-06
    2. 'range' → logprob: -12.250004768371582
    3. ' range' → logprob: -18.8750057220459
    4. '(' → logprob: -19.0000057220459
    5. '	range' → logprob: -22.0000057220459
    6. '(r' → logprob: -22.1250057220459
    7. ' (' → logprob: -22.1250057220459
    8. '(list' → logprob: -22.1250057220459
    9. 'Range' → logprob: -23.7500057220459
    10. '((' → logprob: -24.3750057220459

Token 217: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8624639324116288e-06
    2. 'n' → logprob: -13.875001907348633
    3. '(' → logprob: -14.000001907348633
    4. ' (' → logprob: -18.500001907348633
    5. '(len' → logprob: -18.750001907348633
    6. '(
' → logprob: -19.250001907348633
    7. ')' → logprob: -20.125001907348633
    8. '((' → logprob: -20.125001907348633
    9. ')n' → logprob: -20.625001907348633
    10. '
' → logprob: -21.375001907348633

Token 218: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019145553931593895
    2. ')):
' → logprob: -4.019145488739014
    3. '):' → logprob: -7.019145488739014
    4. ')):' → logprob: -9.769145965576172
    5. '):
' → logprob: -11.019145965576172
    6. '()):
' → logprob: -11.644145965576172
    7. '():
' → logprob: -11.769145965576172
    8. ')' → logprob: -13.394145965576172
    9. ':
' → logprob: -13.519145965576172
    10. ' ):
' → logprob: -13.644145965576172

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003916680347174406
    2. ' while' → logprob: -6.1289167404174805
    3. 'while' → logprob: -6.3789167404174805
    4. 'if' → logprob: -11.50391674041748
    5. '```' → logprob: -12.25391674041748
    6. '       ' → logprob: -12.37891674041748
    7. ' if' → logprob: -12.50391674041748
    8. '   ' → logprob: -12.62891674041748
    9. 'for' → logprob: -13.37891674041748
    10. ' for' → logprob: -13.62891674041748

Token 220: ' temp' (ID: 5484)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15051043033599854
    2. 'temp' (adapté à ' temp') → logprob: -2.025510311126709
    3. '   ' → logprob: -4.900510311126709
    4. ' while' → logprob: -8.025510787963867
    5. ' temp' → logprob: -11.025510787963867
    6. 'if' → logprob: -11.650510787963867
    7. '    
' → logprob: -13.275510787963867
    8. 'tmp' → logprob: -13.400510787963867
    9. 'val' → logprob: -14.275510787963867
    10. '       ' → logprob: -14.275510787963867

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868817090988159
    2. '=' → logprob: -1.136881709098816
    3. '=[]' → logprob: -11.511881828308105
    4. '=[]
' → logprob: -14.886881828308105
    5. '[]' → logprob: -16.26188087463379
    6. '   ' → logprob: -16.88688087463379
    7. ':' → logprob: -17.13688087463379
    8. ' ' → logprob: -17.13688087463379
    9. '[:]' → logprob: -17.88688087463379
    10. '=[]
' → logprob: -18.26188087463379

Token 222: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0067287529818713665
    2. '[]
' → logprob: -5.006728649139404
    3. ' []' → logprob: -11.256729125976562
    4. '[]

' → logprob: -15.256729125976562
    5. ' []
' → logprob: -16.006729125976562
    6. '[' → logprob: -16.006729125976562
    7. '[]}' → logprob: -18.256729125976562
    8. '()' → logprob: -18.631729125976562
    9. '[
' → logprob: -18.881729125976562
    10. '[],' → logprob: -18.881729125976562

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3520352840423584
    2. 'while' → logprob: -1.6020352840423584
    3. ' while' → logprob: -2.3520352840423584
    4. '```' → logprob: -9.977035522460938
    5. '	while' → logprob: -10.852035522460938
    6. '       ' → logprob: -11.602035522460938
    7. '
' → logprob: -12.602035522460938
    8. 'While' → logprob: -13.477035522460938
    9. '    
' → logprob: -13.852035522460938
    10. '   ' → logprob: -13.977035522460938

Token 224: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0001600347168277949
    2. ' while' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.500160217285156
    4. '```' → logprob: -16.750160217285156
    5. '	while' → logprob: -16.750160217285156
    6. 'While' → logprob: -17.500160217285156
    7. 'for' → logprob: -19.000160217285156
    8. '
' → logprob: -19.375160217285156
    9. '    
' → logprob: -19.500160217285156
    10. 'import' → logprob: -19.750160217285156

Token 225: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14268361032009125
    2. ' q' → logprob: -2.017683506011963
    3. '   ' → logprob: -13.392683982849121
    4. '	q' → logprob: -13.517683982849121
    5. ' ' → logprob: -13.642683982849121
    6. 'len' → logprob: -14.455183982849121
    7. '```' → logprob: -14.455183982849121
    8. '
' → logprob: -14.517683982849121
    9. '(q' → logprob: -14.517683982849121
    10. ' ' → logprob: -14.580183982849121

Token 226: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6496461629867554
    2. ':
' → logprob: -0.8996461629867554
    3. ' and' → logprob: -2.649646282196045
    4. '[' → logprob: -8.399645805358887
    5. ':' → logprob: -9.149645805358887
    6. '[
' → logprob: -10.774645805358887
    7. '{
' → logprob: -11.899645805358887
    8. '   ' → logprob: -12.399645805358887
    9. '```' → logprob: -12.524645805358887
    10. '):
' → logprob: -12.649645805358887

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2286921590566635
    2. '   ' → logprob: -1.7286921739578247
    3. ' if' → logprob: -3.853692054748535
    4. 'if' → logprob: -5.853692054748535
    5. ' and' → logprob: -6.728692054748535
    6. '<|end|>' → logprob: -7.103692054748535
    7. ':
' → logprob: -8.478692054748535
    8. 'and' → logprob: -8.853692054748535
    9. '[' → logprob: -9.603692054748535
    10. '(' → logprob: -9.728692054748535

Token 228: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07906031608581543
    2. ' if' → logprob: -2.5790603160858154
    3. '   ' → logprob: -8.954060554504395
    4. 'q' → logprob: -10.829060554504395
    5. 'If' → logprob: -11.454060554504395
    6. '       ' → logprob: -11.829060554504395
    7. '```' → logprob: -13.329060554504395
    8. '
' → logprob: -14.454060554504395
    9. ' q' → logprob: -14.454060554504395
    10. '           ' → logprob: -15.079060554504395

Token 229: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22416071593761444
    2. ' q' → logprob: -2.224160671234131
    3. '-q' → logprob: -2.474160671234131
    4. ' -' → logprob: -5.099160671234131
    5. '-' → logprob: -6.974160671234131
    6. 'A' → logprob: -7.599160671234131
    7. '-A' → logprob: -8.224161148071289
    8. ' A' → logprob: -8.474161148071289
    9. '-(' → logprob: -8.974161148071289
    10. 'P' → logprob: -9.974161148071289

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.491498531133402e-06
    2. 'q' → logprob: -12.125009536743164
    3. '[-' → logprob: -13.500009536743164
    4. 'and' → logprob: -14.000009536743164
    5. 'Q' → logprob: -14.625009536743164
    6. ' and' → logprob: -15.250009536743164
    7. '```' → logprob: -15.375009536743164
    8. ' [' → logprob: -15.375009536743164
    9. '[q' → logprob: -15.625009536743164
    10. '0' → logprob: -15.875009536743164

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011077879928052425
    2. '[' → logprob: -4.511077880859375
    3. ' ' → logprob: -11.261077880859375
    4. 'q' → logprob: -12.011077880859375
    5. 'i' → logprob: -12.886077880859375
    6. '-' → logprob: -13.261077880859375
    7. '[i' → logprob: -13.511077880859375
    8. '
' → logprob: -13.636077880859375
    9. '   ' → logprob: -14.136077880859375
    10. '[-' → logprob: -14.136077880859375

Token 232: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004291134420782328
    2. '][' → logprob: -5.50429105758667
    3. ')[' → logprob: -9.629291534423828
    4. '>[' → logprob: -9.754291534423828
    5. ''[' → logprob: -11.004291534423828
    6. 'and' → logprob: -11.379291534423828
    7. '```' → logprob: -11.629291534423828
    8. '0' → logprob: -11.879291534423828
    9. ' [' → logprob: -12.004291534423828
    10. '}[' → logprob: -12.004291534423828

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005376287270337343
    2. '[' → logprob: -5.25537633895874
    3. '
' → logprob: -9.255375862121582
    4. '][' → logprob: -10.755375862121582
    5. '1' → logprob: -11.630375862121582
    6. ' ' → logprob: -12.505375862121582
    7. '

' → logprob: -12.755375862121582
    8. '   ' → logprob: -13.255375862121582
    9. ' [' → logprob: -13.692875862121582
    10. '[
' → logprob: -13.817875862121582

Token 234: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005509315058588982
    2. ' >' → logprob: -5.505509376525879
    3. ']' → logprob: -6.880509376525879
    4. '<' → logprob: -8.255509376525879
    5. ')' → logprob: -9.630509376525879
    6. ']>' → logprob: -11.005509376525879
    7. '```' → logprob: -11.380509376525879
    8. '<=' → logprob: -11.755509376525879
    9. '>
' → logprob: -12.005509376525879
    10. '[' → logprob: -12.255509376525879

Token 235: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0013676194939762354
    2. '<' → logprob: -6.876367568969727
    3. ' >' → logprob: -8.126367568969727
    4. '<=' → logprob: -10.376367568969727
    5. '>A' → logprob: -12.876367568969727
    6. '>=' → logprob: -13.501367568969727
    7. '>
' → logprob: -13.751367568969727
    8. '```' → logprob: -14.376367568969727
    9. '>P' → logprob: -14.501367568969727
    10. '()>' → logprob: -14.626367568969727

Token 236: ' A' (ID: 355)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.428365558385849
    2. 'A' → logprob: -1.1783655881881714
    3. '-P' → logprob: -4.053365707397461
    4. ' P' → logprob: -4.928365707397461
    5. ' A' → logprob: -5.053365707397461
    6. '-A' → logprob: -5.553365707397461
    7. ' -' → logprob: -6.053365707397461
    8. '-' → logprob: -6.678365707397461
    9. 'n' → logprob: -8.303365707397461
    10. '(-' → logprob: -8.428365707397461

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004684307146817446
    2. '[P' → logprob: -5.3796844482421875
    3. 'i' → logprob: -10.504684448242188
    4. 'P' → logprob: -11.629684448242188
    5. '[j' → logprob: -11.754684448242188
    6. '[' → logprob: -12.129684448242188
    7. '[n' → logprob: -12.629684448242188
    8. '[R' → logprob: -12.754684448242188
    9. '[p' → logprob: -13.379684448242188
    10. '[-' → logprob: -14.004684448242188

Token 238: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.22008965909481049
    2. '):
' → logprob: -1.9700896739959717
    3. ':
' → logprob: -3.2200896739959717
    4. ':' → logprob: -4.845089435577393
    5. ']:' → logprob: -4.845089435577393
    6. '[' → logprob: -6.595089435577393
    7. '):' → logprob: -7.845089435577393
    8. '       ' → logprob: -8.47008991241455
    9. '   ' → logprob: -8.72008991241455
    10. '```' → logprob: -9.22008991241455

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5553741455078125
    2. 'v' → logprob: -1.4303741455078125
    3. ' v' → logprob: -1.6803741455078125
    4. '       ' → logprob: -8.305374145507812
    5. '```' → logprob: -9.180374145507812
    6. '(v' → logprob: -9.930374145507812
    7. '   ' → logprob: -10.055374145507812
    8. ',v' → logprob: -10.180374145507812
    9. ')v' → logprob: -10.305374145507812
    10. '<|end|>' → logprob: -10.430374145507812

Token 240: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.012512476183474064
    2. ' v' → logprob: -4.387512683868408
    3. 'u' → logprob: -13.76251220703125
    4. '           ' → logprob: -14.13751220703125
    5. '
' → logprob: -15.38751220703125
    6. '       ' → logprob: -15.51251220703125
    7. '	v' → logprob: -15.51251220703125
    8. ')v' → logprob: -16.38751220703125
    9. '            
' → logprob: -16.76251220703125
    10. '   ' → logprob: -16.88751220703125

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',j' → logprob: -13.625004768371582
    4. ',
' → logprob: -15.875004768371582
    5. ',v' → logprob: -18.125003814697266
    6. ',q' → logprob: -18.125003814697266
    7. 'import' → logprob: -18.500003814697266
    8. ',n' → logprob: -18.500003814697266
    9. ',i' → logprob: -18.750003814697266
    10. '‌,' → logprob: -19.000003814697266

Token 242: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5232565999031067
    2. ' j' → logprob: -0.8982565999031067
    3. '   ' → logprob: -9.023256301879883
    4. ' ' → logprob: -12.148256301879883
    5. '    ' → logprob: -12.398256301879883
    6. '  ' → logprob: -13.523256301879883
    7. '	j' → logprob: -14.398256301879883
    8. '0' → logprob: -15.398256301879883
    9. ',j' → logprob: -15.773256301879883
    10. ' ' → logprob: -15.898256301879883

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868785798549652
    2. '=' → logprob: -1.1368786096572876
    3. ',' → logprob: -12.511878967285156
    4. '   ' → logprob: -12.761878967285156
    5. ' ' → logprob: -14.261878967285156
    6. '  ' → logprob: -17.011878967285156
    7. '=j' → logprob: -17.011878967285156
    8. ' ' → logprob: -17.386878967285156
    9. '=v' → logprob: -17.511878967285156
    10. ')' → logprob: -17.636878967285156

Token 244: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -7.707997428951785e-05
    2. ' heap' → logprob: -9.500077247619629
    3. 'he' → logprob: -13.500077247619629
    4. '   ' → logprob: -14.625077247619629
    5. '(heap' → logprob: -16.000076293945312
    6. '.heap' → logprob: -16.375076293945312
    7. 'hq' → logprob: -17.125076293945312
    8. '
' → logprob: -17.750076293945312
    9. '```' → logprob: -17.875076293945312
    10. '_heap' → logprob: -18.250076293945312

Token 245: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.610702363715973e-06
    2. 'op' → logprob: -12.125009536743164
    3. 'p' → logprob: -12.625009536743164
    4. 'he' → logprob: -14.625009536743164
    5. 'app' → logprob: -15.375009536743164
    6. '[' → logprob: -16.875009536743164
    7. 'qp' → logprob: -17.125009536743164
    8. '.he' → logprob: -17.250009536743164
    9. 'pop' → logprob: -17.875009536743164
    10. 'ap' → logprob: -18.000009536743164

Token 246: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.25218644738197327
    2. 'he' → logprob: -1.5021864175796509
    3. 'q' → logprob: -8.50218677520752
    4. '_he' → logprob: -11.00218677520752
    5. '.heap' → logprob: -11.12718677520752
    6. 'heap' → logprob: -11.25218677520752
    7. ' he' → logprob: -12.12718677520752
    8. 'op' → logprob: -13.50218677520752
    9. '```' → logprob: -13.87718677520752
    10. 'app' → logprob: -15.00218677520752

Token 247: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009459959110245109
    2. 'pp' → logprob: -7.625946044921875
    3. 'op' → logprob: -7.750946044921875
    4. 'opp' → logprob: -11.125946044921875
    5. 'q' → logprob: -11.875946044921875
    6. 'ap' → logprob: -13.250946044921875
    7. 'pop' → logprob: -13.375946044921875
    8. '[' → logprob: -14.000946044921875
    9. 'e' → logprob: -14.250946044921875
    10. 'he' → logprob: -15.125946044921875

Token 248: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0017381247598677874
    2. 'pop' → logprob: -7.00173807144165
    3. 'opp' → logprob: -7.75173807144165
    4. 'app' → logprob: -8.751738548278809
    5. 'p' → logprob: -8.876738548278809
    6. 'pp' → logprob: -9.751738548278809
    7. 'o' → logprob: -11.251738548278809
    8. 'opf' → logprob: -11.251738548278809
    9. 'q' → logprob: -11.626738548278809
    10. 'he' → logprob: -13.501738548278809

Token 249: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.128163257315464e-07
    2. 'q' → logprob: -15.375
    3. '[q' → logprob: -17.5
    4. '(' → logprob: -19.75
    5. ',q' → logprob: -21.875
    6. '```' → logprob: -22.625
    7. '	q' → logprob: -22.75
    8. ' (' → logprob: -22.875
    9. '(v' → logprob: -23.0
    10. '(queue' → logprob: -23.75

Token 250: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33327969908714294
    2. ')
' → logprob: -1.3332797288894653
    3. ')' → logprob: -3.958279609680176
    4. '               ' → logprob: -8.458279609680176
    5. ' R' → logprob: -8.833279609680176
    6. '       ' → logprob: -9.458279609680176
    7. 'R' → logprob: -9.583279609680176
    8. '
' → logprob: -9.708279609680176
    9. '          ' → logprob: -9.833279609680176
    10. ')
' → logprob: -10.583279609680176

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11646413803100586
    2. 'R' → logprob: -2.241464138031006
    3. 'L' → logprob: -6.116464138031006
    4. ' R' → logprob: -6.741464138031006
    5. '   ' → logprob: -8.491464614868164
    6. ' L' → logprob: -11.116464614868164
    7. '       ' → logprob: -11.241464614868164
    8. 'Q' → logprob: -12.116464614868164
    9. '          ' → logprob: -13.366464614868164
    10. '               ' → logprob: -13.616464614868164

Token 252: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0014756986638531089
    2. ' L' → logprob: -6.876475811004639
    3. '   ' → logprob: -7.751475811004639
    4. '           ' → logprob: -11.75147533416748
    5. '       ' → logprob: -13.25147533416748
    6. '
' → logprob: -13.50147533416748
    7. ' ' → logprob: -14.75147533416748
    8. '  ' → logprob: -15.25147533416748
    9. '	L' → logprob: -15.25147533416748
    10. '    ' → logprob: -15.62647533416748

Token 253: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.080963092041202e-06
    2. 'v' → logprob: -12.375004768371582
    3. '[j' → logprob: -15.250004768371582
    4. '[' → logprob: -15.375004768371582
    5. '
' → logprob: -16.3750057220459
    6. '[u' → logprob: -16.3750057220459
    7. '```' → logprob: -16.7500057220459
    8. '[a' → logprob: -17.5000057220459
    9. '[val' → logprob: -17.6250057220459
    10. ' [' → logprob: -17.7500057220459

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013929695705883205
    2. '[v' → logprob: -9.750139236450195
    3. ']' → logprob: -10.125139236450195
    4. '[j' → logprob: -10.875139236450195
    5. '[' → logprob: -11.750139236450195
    6. ' ][' → logprob: -11.750139236450195
    7. '   ' → logprob: -13.000139236450195
    8. '[i' → logprob: -13.875139236450195
    9. ']][' → logprob: -14.875139236450195
    10. 'v' → logprob: -14.875139236450195

Token 255: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011115968227386475
    2. 'i' → logprob: -4.511116027832031
    3. '   ' → logprob: -9.761116027832031
    4. ' j' → logprob: -11.636116027832031
    5. ' ' → logprob: -14.511116027832031
    6. ' i' → logprob: -15.386116027832031
    7. '
' → logprob: -15.761116027832031
    8. '	j' → logprob: -16.13611602783203
    9. '       ' → logprob: -16.26111602783203
    10. '           ' → logprob: -16.26111602783203

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.7491250875755213e-05
    2. ']=' → logprob: -11.375027656555176
    3. '=' → logprob: -11.625027656555176
    4. ' ]' → logprob: -12.125027656555176
    5. ')' → logprob: -14.125027656555176
    6. '   ' → logprob: -14.625027656555176
    7. ' =' → logprob: -15.125027656555176
    8. '[' → logprob: -15.750027656555176
    9. ']=-' → logprob: -17.12502670288086
    10. '```' → logprob: -18.12502670288086

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067478204146027565
    2. ' =' → logprob: -5.006747722625732
    3. ']' → logprob: -10.50674819946289
    4. ']=' → logprob: -13.13174819946289
    5. ')' → logprob: -13.25674819946289
    6. '=i' → logprob: -14.38174819946289
    7. ')=' → logprob: -15.50674819946289
    8. ',' → logprob: -15.63174819946289
    9. '[' → logprob: -15.63174819946289
    10. '   ' → logprob: -16.13174819946289

Token 258: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00523612555116415
    2. ' i' → logprob: -5.2552361488342285
    3. '	i' → logprob: -13.50523567199707
    4. '   ' → logprob: -14.38023567199707
    5. '[i' → logprob: -16.00523567199707
    6. ' ' → logprob: -16.63023567199707
    7. '
' → logprob: -17.75523567199707
    8. 'I' → logprob: -18.00523567199707
    9. '*i' → logprob: -18.13023567199707
    10. '(i' → logprob: -18.13023567199707

Token 259: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3890940248966217
    2. '       ' → logprob: -1.1390939950942993
    3. ' else' → logprob: -6.88909387588501
    4. '           ' → logprob: -7.38909387588501
    5. 'if' → logprob: -8.139094352722168
    6. '   ' → logprob: -8.264094352722168
    7. '```' → logprob: -11.264094352722168
    8. ' if' → logprob: -12.014094352722168
    9. '
' → logprob: -12.264094352722168
    10. 'elif' → logprob: -12.639094352722168

Token 260: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47600239515304565
    2. '       ' → logprob: -0.9760023951530457
    3. ' else' → logprob: -6.601002216339111
    4. '   ' → logprob: -7.726002216339111
    5. '           ' → logprob: -9.72600269317627
    6. '```' → logprob: -10.72600269317627
    7. '
' → logprob: -11.22600269317627
    8. 'elif' → logprob: -11.47600269317627
    9. 'if' → logprob: -11.60100269317627
    10. '        
' → logprob: -12.97600269317627

Token 261: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007833980955183506
    2. ' if' → logprob: -5.632833957672119
    3. 'else' → logprob: -6.132833957672119
    4. '           ' → logprob: -6.257833957672119
    5. '       ' → logprob: -9.257834434509277
    6. '   ' → logprob: -10.382834434509277
    7. '               ' → logprob: -12.257834434509277
    8. ' else' → logprob: -12.632834434509277
    9. 'elif' → logprob: -12.882834434509277
    10. '```' → logprob: -14.132834434509277

Token 262: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31326553225517273
    2. ' j' → logprob: -1.3132655620574951
    3. 'not' → logprob: -13.688265800476074
    4. '   ' → logprob: -13.938265800476074
    5. '	j' → logprob: -14.563265800476074
    6. ' not' → logprob: -14.688265800476074
    7. ' ' → logprob: -15.563265800476074
    8. ' ' → logprob: -15.813265800476074
    9. '  ' → logprob: -15.813265800476074
    10. '    ' → logprob: -16.188264846801758

Token 263: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03364765644073486
    2. '==' → logprob: -3.4086475372314453
    3. '=' → logprob: -14.283647537231445
    4. ' ' → logprob: -14.533647537231445
    5. ' =' → logprob: -15.658647537231445
    6. '==
' → logprob: -15.908647537231445
    7. ']==' → logprob: -15.908647537231445
    8. ')' → logprob: -16.908647537231445
    9. ')==' → logprob: -16.908647537231445
    10. '```' → logprob: -17.408647537231445

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4288538992404938
    2. ' ' → logprob: -1.0538538694381714
    3. '1' → logprob: -8.803853988647461
    4. '   ' → logprob: -14.053853988647461
    5. ' ' → logprob: -15.053853988647461
    6. '  ' → logprob: -15.241353988647461
    7. ' (' → logprob: -15.553853988647461
    8. '(' → logprob: -15.741353988647461
    9. '```' → logprob: -15.803853988647461
    10. '[' → logprob: -15.991353988647461

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5358694731257856e-05
    2. ' ' → logprob: -10.375035285949707
    3. '1' → logprob: -12.500035285949707
    4. '   ' → logprob: -16.125036239624023
    5. '```' → logprob: -16.312536239624023
    6. '
' → logprob: -17.125036239624023
    7. '۰' → logprob: -17.562536239624023
    8. '[' → logprob: -17.562536239624023
    9. '(' → logprob: -18.062536239624023
    10. '  ' → logprob: -18.062536239624023

Token 266: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10949603468179703
    2. '               ' → logprob: -2.3594961166381836
    3. ':' → logprob: -4.734496116638184
    4. '           ' → logprob: -7.734496116638184
    5. '):
' → logprob: -11.984496116638184
    6. ' :
' → logprob: -12.234496116638184
    7. ':
' → logprob: -12.984496116638184
    8. '              ' → logprob: -13.109496116638184
    9. '       ' → logprob: -13.234496116638184
    10. ',' → logprob: -13.484496116638184

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006958446465432644
    2. '           ' → logprob: -5.506958484649658
    3. 'temp' → logprob: -5.881958484649658
    4. ' temp' → logprob: -9.5069580078125
    5. '              ' → logprob: -13.1319580078125
    6. '   ' → logprob: -13.2569580078125
    7. '```' → logprob: -13.2569580078125
    8. '       ' → logprob: -13.3819580078125
    9. '
' → logprob: -14.0069580078125
    10. '                   ' → logprob: -14.0069580078125

Token 268: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.25193077325820923
    2. ' temp' → logprob: -1.5019307136535645
    3. '	temp' → logprob: -14.751931190490723
    4. '(temp' → logprob: -14.876931190490723
    5. '           ' → logprob: -15.376931190490723
    6. 'tmp' → logprob: -15.376931190490723
    7. '               ' → logprob: -15.501931190490723
    8. '_temp' → logprob: -16.251930236816406
    9. '   ' → logprob: -16.501930236816406
    10. 'temperature' → logprob: -17.126930236816406

Token 269: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.318681188422488e-05
    2. '.' → logprob: -11.87501335144043
    3. 'append' → logprob: -12.00001335144043
    4. ' .' → logprob: -16.50001335144043
    5. '.Append' → logprob: -19.37501335144043
    6. '.app' → logprob: -19.37501335144043
    7. 'Append' → logprob: -19.75001335144043
    8. ' append' → logprob: -19.75001335144043
    9. '           ' → logprob: -19.87501335144043
    10. '.extend' → logprob: -19.87501335144043

Token 270: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5794172286987305
    2. '((' → logprob: -0.8294172286987305
    3. ' (' → logprob: -5.9544172286987305
    4. '(' → logprob: -7.0794172286987305
    5. '(V' → logprob: -10.95441722869873
    6. '[(' → logprob: -12.20441722869873
    7. '(
' → logprob: -12.45441722869873
    8. ' ' → logprob: -13.45441722869873
    9. ' ((' → logprob: -13.45441722869873
    10. ',' → logprob: -13.45441722869873

Token 271: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.696889623621246e-06
    2. ' v' → logprob: -12.87500286102295
    3. '(v' → logprob: -16.500001907348633
    4. '	v' → logprob: -20.500001907348633
    5. ')v' → logprob: -20.750001907348633
    6. 'vq' → logprob: -21.625001907348633
    7. '[v' → logprob: -21.875001907348633
    8. ',v' → logprob: -23.125001907348633
    9. '?v' → logprob: -23.250001907348633
    10. 'vj' → logprob: -23.500001907348633

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ',j' → logprob: -12.12501049041748
    3. ' ,' → logprob: -12.25001049041748
    4. ',
' → logprob: -16.875009536743164
    5. 'j' → logprob: -18.125009536743164
    6. ',v' → logprob: -18.625009536743164
    7. '```' → logprob: -19.000009536743164
    8. '‌,' → logprob: -19.125009536743164
    9. ' ' → logprob: -19.375009536743164
    10. ')' → logprob: -19.500009536743164

Token 273: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1269298940896988
    2. ' j' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.876930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '	j' → logprob: -15.126930236816406
    6. '    ' → logprob: -16.001930236816406
    7. '  ' → logprob: -16.751930236816406
    8. '0' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.876930236816406
    10. ',j' → logprob: -18.501930236816406

Token 274: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17982949316501617
    2. ' +' → logprob: -1.804829478263855
    3. ',' → logprob: -9.429829597473145
    4. ' ,' → logprob: -13.554829597473145
    5. '+
' → logprob: -14.429829597473145
    6. '   ' → logprob: -14.554829597473145
    7. ' ' → logprob: -14.679829597473145
    8. '1' → logprob: -14.804829597473145
    9. ')' → logprob: -14.804829597473145
    10. '+,' → logprob: -15.179829597473145

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -15.750027656555176
    4. '0' → logprob: -17.625028610229492
    5. '   ' → logprob: -18.375028610229492
    6. '  ' → logprob: -19.250028610229492
    7. '```' → logprob: -19.250028610229492
    8. '))' → logprob: -20.312528610229492
    9. '-' → logprob: -20.625028610229492
    10. '2' → logprob: -21.687528610229492

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. '0' → logprob: -10.625029563903809
    3. ' ' → logprob: -12.250029563903809
    4. ')' → logprob: -14.625029563903809
    5. '))' → logprob: -16.000030517578125
    6. '```' → logprob: -16.250030517578125
    7. '   ' → logprob: -17.125030517578125
    8. '2' → logprob: -17.625030517578125
    9. '-' → logprob: -18.125030517578125
    10. '3' → logprob: -18.375030517578125

Token 277: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.7001800537109375
    2. '))' → logprob: -1.4501800537109375
    3. ')' → logprob: -1.7001800537109375
    4. ')
' → logprob: -2.4501800537109375
    5. '       ' → logprob: -10.450180053710938
    6. '           ' → logprob: -12.200180053710938
    7. '))
' → logprob: -12.200180053710938
    8. ')
' → logprob: -13.200180053710938
    9. '               ' → logprob: -13.825180053710938
    10. ')))' → logprob: -13.825180053710938

Token 278: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002646644366905093
    2. 'heap' → logprob: -6.377646446228027
    3. '       ' → logprob: -7.127646446228027
    4. '```' → logprob: -9.877646446228027
    5. '           ' → logprob: -10.002646446228027
    6. ' heap' → logprob: -11.002646446228027
    7. 'for' → logprob: -11.627646446228027
    8. '(heap' → logprob: -12.127646446228027
    9. '    
' → logprob: -12.877646446228027
    10. ' for' → logprob: -13.252646446228027

Token 279: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.004201155621558428
    2. ' else' → logprob: -5.8792009353637695
    3. '       ' → logprob: -6.6292009353637695
    4. '   ' → logprob: -9.62920093536377
    5. '           ' → logprob: -11.87920093536377
    6. '               ' → logprob: -14.75420093536377
    7. '```' → logprob: -15.00420093536377
    8. '	else' → logprob: -15.62920093536377
    9. 'break' → logprob: -15.62920093536377
    10. ')' → logprob: -16.629201889038086

Token 280: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033917103428393602
    2. ':' → logprob: -6.003391742706299
    3. ':
' → logprob: -7.003391742706299
    4. '          ' → logprob: -12.87839126586914
    5. 'break' → logprob: -14.12839126586914
    6. '         ' → logprob: -14.25339126586914
    7. '		' → logprob: -14.62839126586914
    8. '	       ' → logprob: -14.75339126586914
    9. '    	   ' → logprob: -14.87839126586914
    10. '               ' → logprob: -15.00339126586914

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.153795766294934e-06
    2. 'break' → logprob: -12.250005722045898
    3. ' break' → logprob: -14.500005722045898
    4. '          ' → logprob: -15.250005722045898
    5. '         ' → logprob: -16.1250057220459
    6. '		' → logprob: -16.2500057220459
    7. '       ' → logprob: -16.6250057220459
    8. '               ' → logprob: -16.6250057220459
    9. '	       ' → logprob: -16.7500057220459
    10. '   ' → logprob: -16.7500057220459

Token 282: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.016637632623314857
    2. '           ' → logprob: -4.266637802124023
    3. ' break' → logprob: -6.016637802124023
    4. '	break' → logprob: -10.391637802124023
    5. '
' → logprob: -14.141637802124023
    6. '       ' → logprob: -14.266637802124023
    7. '   ' → logprob: -14.891637802124023
    8. '_break' → logprob: -15.516637802124023
    9. '```' → logprob: -15.641637802124023
    10. '               ' → logprob: -15.641637802124023

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03670857101678848
    2. 'heap' → logprob: -3.4117085933685303
    3. '```' → logprob: -5.911708354949951
    4. ' heap' → logprob: -8.78670883178711
    5. '(heap' → logprob: -9.41170883178711
    6. 'for' → logprob: -10.28670883178711
    7. '    
' → logprob: -11.28670883178711
    8. '       ' → logprob: -11.53670883178711
    9. '.heap' → logprob: -11.53670883178711
    10. '_heap' → logprob: -12.03670883178711

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.254125714302063
    2. 'heap' → logprob: -1.504125714302063
    3. '```' → logprob: -6.879125595092773
    4. ' heap' → logprob: -7.004125595092773
    5. '(heap' → logprob: -9.504125595092773
    6. '_heap' → logprob: -9.879125595092773
    7. '    
' → logprob: -10.254125595092773
    8. '.heap' → logprob: -10.379125595092773
    9. 'for' → logprob: -11.379125595092773
    10. '   ' → logprob: -11.879125595092773

Token 285: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00010449681576574221
    2. ' heap' → logprob: -9.750104904174805
    3. '```' → logprob: -10.250104904174805
    4. '   ' → logprob: -11.875104904174805
    5. 'he' → logprob: -13.500104904174805
    6. '``' → logprob: -14.500104904174805
    7. '(heap' → logprob: -14.625104904174805
    8. '    
' → logprob: -14.750104904174805
    9. '.heap' → logprob: -15.000104904174805
    10. 'python' → logprob: -15.375104904174805

Token 286: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. '[' → logprob: -17.625
    3. '```' → logprob: -18.0
    4. 'p' → logprob: -18.25
    5. '.push' → logprob: -18.625
    6. 'he' → logprob: -18.625
    7. '.he' → logprob: -18.875
    8. 'h' → logprob: -20.25
    9. '.heap' → logprob: -20.25
    10. 'push' → logprob: -20.25

Token 287: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.215049609541893
    2. '.he' → logprob: -2.0900495052337646
    3. 'he' → logprob: -2.9650495052337646
    4. '.heap' → logprob: -4.340049743652344
    5. 'heap' → logprob: -5.840049743652344
    6. 'app' → logprob: -7.090049743652344
    7. 'p' → logprob: -7.965049743652344
    8. 'push' → logprob: -7.965049743652344
    9. 'ush' → logprob: -7.965049743652344
    10. 'h' → logprob: -8.840049743652344

Token 288: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.014271864667534828
    2. 'pp' → logprob: -4.2642717361450195
    3. 'ap' → logprob: -9.38927173614502
    4. 'p' → logprob: -11.38927173614502
    5. 'q' → logprob: -12.13927173614502
    6. 'ush' → logprob: -12.51427173614502
    7. 'push' → logprob: -13.01427173614502
    8. 'qp' → logprob: -14.38927173614502
    9. 'op' → logprob: -15.01427173614502
    10. 'sp' → logprob: -15.51427173614502

Token 289: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.12706859409809113
    2. 'op' → logprob: -2.127068519592285
    3. 'q' → logprob: -9.127068519592285
    4. 'app' → logprob: -11.502068519592285
    5. 'p' → logprob: -12.002068519592285
    6. 'push' → logprob: -12.127068519592285
    7. 'pop' → logprob: -12.627068519592285
    8. 'pp' → logprob: -13.377068519592285
    9. 'sh' → logprob: -13.502068519592285
    10. 'opp' → logprob: -13.877068519592285

Token 290: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -5.676981345459353e-06
    2. 'q' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.5000057220459
    4. '(' → logprob: -16.5000057220459
    5. '[q' → logprob: -18.1250057220459
    6. '```' → logprob: -18.6250057220459
    7. ',q' → logprob: -19.2500057220459
    8. '_q' → logprob: -19.8750057220459
    9. '	q' → logprob: -20.8750057220459
    10. '   ' → logprob: -21.5000057220459

Token 291: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -9.088346359931165e-07
    2. ',' → logprob: -15.250000953674316
    3. ',q' → logprob: -15.375000953674316
    4. 'q' → logprob: -15.500000953674316
    5. ' (' → logprob: -17.0
    6. 'A' → logprob: -17.0
    7. '(' → logprob: -17.125
    8. '(A' → logprob: -17.25
    9. '[q' → logprob: -17.25
    10. '```' → logprob: -19.0

Token 292: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.913265239447355e-05
    2. ' (' → logprob: -9.250099182128906
    3. '(q' → logprob: -13.750099182128906
    4. '(' → logprob: -14.375099182128906
    5. '(-' → logprob: -15.125099182128906
    6. '((' → logprob: -15.125099182128906
    7. 'q' → logprob: -15.375099182128906
    8. '(Q' → logprob: -15.750099182128906
    9. '(B' → logprob: -16.000099182128906
    10. '   ' → logprob: -16.125099182128906

Token 293: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.684157026233152e-05
    2. ' A' → logprob: -9.500077247619629
    3. '(A' → logprob: -14.000077247619629
    4. '-A' → logprob: -14.375077247619629
    5. '(' → logprob: -15.625077247619629
    6. '   ' → logprob: -16.250076293945312
    7. '-' → logprob: -16.500076293945312
    8. ' ' → logprob: -16.750076293945312
    9. ' (' → logprob: -17.125076293945312
    10. '(-' → logprob: -17.500076293945312

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.250000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[I' → logprob: -16.875
    5. '```' → logprob: -18.25
    6. '[
' → logprob: -18.375
    7. '[j' → logprob: -19.25
    8. '[n' → logprob: -19.5
    9. ')' → logprob: -19.5
    10. ' [' → logprob: -19.5

Token 295: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.375011444091797
    3. '),' → logprob: -15.875011444091797
    4. '],' → logprob: -17.125011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '‌,' → logprob: -18.500011444091797
    7. ' ' → logprob: -18.750011444091797
    8. '',' → logprob: -19.250011444091797
    9. ',
' → logprob: -19.750011444091797
    10. '`,' → logprob: -20.000011444091797

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04299987852573395
    2. ' ' → logprob: -3.1679999828338623
    3. '<|end|>' → logprob: -15.168000221252441
    4. ' ' → logprob: -15.293000221252441
    5. '1' → logprob: -16.417999267578125
    6. ')' → logprob: -16.917999267578125
    7. ' 
' → logprob: -17.605499267578125
    8. '   ' → logprob: -17.917999267578125
    9. '[' → logprob: -18.042999267578125
    10. '  ' → logprob: -18.042999267578125

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -16.250045776367188
    4. '1' → logprob: -17.250045776367188
    5. '<|end|>' → logprob: -18.250045776367188
    6. '   ' → logprob: -19.187545776367188
    7. '[' → logprob: -19.250045776367188
    8. ' ' → logprob: -19.812545776367188
    9. '  ' → logprob: -19.875045776367188
    10. '۰' → logprob: -20.062545776367188

Token 298: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014343312941491604
    2. ')
' → logprob: -4.26434326171875
    3. '   ' → logprob: -8.76434326171875
    4. '))' → logprob: -10.88934326171875
    5. ' )' → logprob: -13.01434326171875
    6. '))
' → logprob: -13.88934326171875
    7. ')
' → logprob: -14.01434326171875
    8. ' )
' → logprob: -15.01434326171875
    9. ')

' → logprob: -15.38934326171875
    10. ')`' → logprob: -16.13934326171875

Token 299: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29494452476501465
    2. '   ' → logprob: -1.5449445247650146
    3. ' for' → logprob: -3.1699445247650146
    4. '	for' → logprob: -9.294944763183594
    5. '```' → logprob: -13.044944763183594
    6. '    
' → logprob: -14.169944763183594
    7. '<|end|>' → logprob: -14.169944763183594
    8. ')' → logprob: -15.044944763183594
    9. '       ' → logprob: -15.544944763183594
    10. '
' → logprob: -15.544944763183594

Token 300: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0030332093592733145
    2. ' for' → logprob: -6.25303316116333
    3. '	for' → logprob: -7.50303316116333
    4. '   ' → logprob: -7.50303316116333
    5. ' ' → logprob: -14.878033638000488
    6. '
' → logprob: -15.128033638000488
    7. '```' → logprob: -16.003032684326172
    8. '  ' → logprob: -16.878032684326172
    9. 'from' → logprob: -16.878032684326172
    10. 'forall' → logprob: -17.003032684326172

Token 301: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4741065204143524
    2. 'v' → logprob: -0.9741065502166748
    3. '(v' → logprob: -10.474106788635254
    4. '	v' → logprob: -13.724106788635254
    5. ' ' → logprob: -17.099105834960938
    6. '   ' → logprob: -17.224105834960938
    7. ')v' → logprob: -17.474105834960938
    8. ' (' → logprob: -17.599105834960938
    9. '[v' → logprob: -17.974105834960938
    10. ',v' → logprob: -18.099105834960938

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. ' ,' → logprob: -10.875046730041504
    3. ',j' → logprob: -11.000046730041504
    4. ',v' → logprob: -11.625046730041504
    5. ',
' → logprob: -13.750046730041504
    6. '<|end|>' → logprob: -14.875046730041504
    7. ',user' → logprob: -16.750045776367188
    8. ',t' → logprob: -17.125045776367188
    9. 'v' → logprob: -17.125045776367188
    10. ',q' → logprob: -17.250045776367188

Token 303: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.575943112373352
    2. ' j' → logprob: -0.825943112373352
    3. 'v' → logprob: -13.325942993164062
    4. '(j' → logprob: -14.075942993164062
    5. ' v' → logprob: -14.325942993164062
    6. '	j' → logprob: -14.575942993164062
    7. ' ' → logprob: -16.450942993164062
    8. ' (' → logprob: -16.950942993164062
    9. ' ' → logprob: -16.950942993164062
    10. '   ' → logprob: -17.950942993164062

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1818161904811859
    2. 'in' → logprob: -1.8068162202835083
    3. 'temp' → logprob: -6.681816101074219
    4. ',' → logprob: -7.806816101074219
    5. '   ' → logprob: -8.681816101074219
    6. ' temp' → logprob: -8.931816101074219
    7. ',temp' → logprob: -9.931816101074219
    8. '(temp' → logprob: -10.681816101074219
    9. ' ,' → logprob: -11.681816101074219
    10. 'import' → logprob: -11.931816101074219

Token 305: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1602243334054947
    2. ' temp' → logprob: -1.9102243185043335
    3. '(temp' → logprob: -16.03522491455078
    4. '	temp' → logprob: -16.66022491455078
    5. 'tem' → logprob: -18.03522491455078
    6. 'tmp' → logprob: -18.28522491455078
    7. '[temp' → logprob: -18.66022491455078
    8. '_temp' → logprob: -19.16022491455078
    9. '$temp' → logprob: -19.41022491455078
    10. ',temp' → logprob: -19.66022491455078

Token 306: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3695758879184723
    2. ':
' → logprob: -1.86957585811615
    3. '   ' → logprob: -2.1195759773254395
    4. ':' → logprob: -4.2445759773254395
    5. 'heap' → logprob: -4.6195759773254395
    6. '.heap' → logprob: -5.1195759773254395
    7. '(heap' → logprob: -6.7445759773254395
    8. ' heap' → logprob: -6.8695759773254395
    9. ',' → logprob: -6.8695759773254395
    10. '):
' → logprob: -7.8695759773254395

Token 307: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6965524554252625
    2. '       ' → logprob: -0.8215524554252625
    3. '   ' → logprob: -2.9465525150299072
    4. ' heap' → logprob: -4.696552276611328
    5. '.heap' → logprob: -9.196552276611328
    6. '(heap' → logprob: -9.321552276611328
    7. '```' → logprob: -10.196552276611328
    8. '_heap' → logprob: -11.321552276611328
    9. '           ' → logprob: -11.446552276611328
    10. '	' → logprob: -11.446552276611328

Token 308: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.001970981014892459
    2. ' heap' → logprob: -6.3769707679748535
    3. '   ' → logprob: -8.251971244812012
    4. '.heap' → logprob: -12.376971244812012
    5. '       ' → logprob: -13.001971244812012
    6. '(heap' → logprob: -14.126971244812012
    7. '           ' → logprob: -15.001971244812012
    8. '_heap' → logprob: -15.626971244812012
    9. 'he' → logprob: -15.626971244812012
    10. '```' → logprob: -15.626971244812012

Token 309: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.531315314830863e-06
    2. 'he' → logprob: -12.875003814697266
    3. '.he' → logprob: -14.625003814697266
    4. 'ush' → logprob: -16.375003814697266
    5. 'push' → logprob: -16.375003814697266
    6. 'p' → logprob: -16.500003814697266
    7. 'hq' → logprob: -16.625003814697266
    8. 'h' → logprob: -17.000003814697266
    9. 'heap' → logprob: -17.250003814697266
    10. 'app' → logprob: -17.625003814697266

Token 310: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.392752468585968
    2. '.heap' → logprob: -1.1427524089813232
    3. 'heap' → logprob: -5.767752647399902
    4. 'q' → logprob: -6.017752647399902
    5. 'he' → logprob: -8.392752647399902
    6. 'ush' → logprob: -10.642752647399902
    7. '(heap' → logprob: -11.267752647399902
    8. '_he' → logprob: -11.267752647399902
    9. '```' → logprob: -11.517752647399902
    10. '_heap' → logprob: -12.892752647399902

Token 311: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.494741632603109e-05
    2. 'ap' → logprob: -10.12508487701416
    3. 'pp' → logprob: -10.62508487701416
    4. 'e' → logprob: -12.12508487701416
    5. 'ush' → logprob: -12.50008487701416
    6. 'q' → logprob: -12.50008487701416
    7. 'a' → logprob: -13.50008487701416
    8. 'p' → logprob: -13.87508487701416
    9. 'he' → logprob: -14.00008487701416
    10. 'aps' → logprob: -14.12508487701416

Token 312: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005906827282160521
    2. 'push' → logprob: -8.250590324401855
    3. 'app' → logprob: -8.500590324401855
    4. 'op' → logprob: -9.250590324401855
    5. 'p' → logprob: -11.750590324401855
    6. 'he' → logprob: -11.750590324401855
    7. 'q' → logprob: -12.000590324401855
    8. 'us' → logprob: -12.750590324401855
    9. 'pp' → logprob: -13.875590324401855
    10. 'sh' → logprob: -14.000590324401855

Token 313: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.1472419600977446e-06
    2. 'q' → logprob: -13.875000953674316
    3. '[q' → logprob: -15.625000953674316
    4. '```' → logprob: -18.250001907348633
    5. '(' → logprob: -18.375001907348633
    6. '	q' → logprob: -19.000001907348633
    7. ',q' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.875001907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. '?q' → logprob: -20.250001907348633

Token 314: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.10608750581741333
    2. 'q' → logprob: -2.8560874462127686
    3. '[q' → logprob: -3.3560874462127686
    4. ',q' → logprob: -4.856087684631348
    5. '=q' → logprob: -9.231087684631348
    6. '	q' → logprob: -9.356087684631348
    7. ',' → logprob: -9.481087684631348
    8. ''q' → logprob: -9.856087684631348
    9. ')' → logprob: -10.231087684631348
    10. ';q' → logprob: -10.481087684631348

Token 315: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.4782780110836029
    2. 'q' → logprob: -0.9782780408859253
    3. '(q' → logprob: -5.478278160095215
    4. ' (' → logprob: -12.103278160095215
    5. ' q' → logprob: -12.353278160095215
    6. 'v' → logprob: -12.478278160095215
    7. '(' → logprob: -14.353278160095215
    8. 'vq' → logprob: -14.478278160095215
    9. '	q' → logprob: -15.228278160095215
    10. ')' → logprob: -16.1032772064209

Token 316: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.392202976712724e-06
    2. '(v' → logprob: -12.125006675720215
    3. 'vq' → logprob: -14.750006675720215
    4. ' v' → logprob: -15.500006675720215
    5. 'q' → logprob: -15.500006675720215
    6. ')v' → logprob: -16.5000057220459
    7. '	v' → logprob: -18.5000057220459
    8. '[v' → logprob: -18.8750057220459
    9. '   ' → logprob: -19.5000057220459
    10. 'vj' → logprob: -20.3750057220459

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039158877916634083
    2. ',j' → logprob: -7.875391483306885
    3. ',v' → logprob: -12.000391960144043
    4. ' ,' → logprob: -12.375391960144043
    5. ')' → logprob: -15.125391960144043
    6. '),' → logprob: -15.750391960144043
    7. ',y' → logprob: -16.500391006469727
    8. ',q' → logprob: -16.625391006469727
    9. '[j' → logprob: -16.750391006469727
    10. ',
' → logprob: -16.875391006469727

Token 318: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018151231110095978
    2. ' j' → logprob: -4.01815128326416
    3. '	j' → logprob: -14.26815128326416
    4. '(j' → logprob: -15.01815128326416
    5. ')' → logprob: -15.89315128326416
    6. '[j' → logprob: -16.643150329589844
    7. '_j' → logprob: -17.018150329589844
    8. ' ' → logprob: -17.518150329589844
    9. ',j' → logprob: -17.518150329589844
    10. '   ' → logprob: -18.018150329589844

Token 319: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015040287980809808
    2. '))' → logprob: -6.501503944396973
    3. ')
' → logprob: -15.001503944396973
    4. ')}' → logprob: -15.251503944396973
    5. ')))' → logprob: -15.376503944396973
    6. ' )' → logprob: -15.376503944396973
    7. ')`' → logprob: -15.751503944396973
    8. '])' → logprob: -15.876503944396973
    9. ')]' → logprob: -16.62650489807129
    10. '[' → logprob: -16.75150489807129

Token 320: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6803512573242188
    2. 'dp' → logprob: -1.6803512573242188
    3. 'res' → logprob: -1.8053512573242188
    4. 'answer' → logprob: -3.0553512573242188
    5. 'result' → logprob: -3.6803512573242188
    6. 'count' → logprob: -3.8053512573242188
    7. 'cnt' → logprob: -3.9303512573242188
    8. 'for' → logprob: -4.555351257324219
    9. 'C' → logprob: -5.805351257324219
    10. 'answers' → logprob: -6.180351257324219

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289098113775253
    2. '=' → logprob: -2.2378909587860107
    3. '_' → logprob: -10.36289119720459
    4. 's' → logprob: -10.98789119720459
    5. '[' → logprob: -12.36289119720459
    6. '[]' → logprob: -12.86289119720459
    7. ' ' → logprob: -13.23789119720459
    8. ',' → logprob: -13.23789119720459
    9. '=[]' → logprob: -13.48789119720459
    10. ')' → logprob: -13.86289119720459

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021362219005823135
    2. '[' → logprob: -4.5213623046875
    3. '[n' → logprob: -5.5213623046875
    4. 'n' → logprob: -5.7713623046875
    5. '[]' → logprob: -6.7713623046875
    6. '[-' → logprob: -7.6463623046875
    7. '1' → logprob: -7.6463623046875
    8. '-' → logprob: -8.0213623046875
    9. '[]
' → logprob: -8.6463623046875
    10. 'sum' → logprob: -8.8963623046875

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005189051385968924
    2. '[' → logprob: -6.255188941955566
    3. 'n' → logprob: -6.630188941955566
    4. '[n' → logprob: -7.505188941955566
    5. '[]' → logprob: -7.755188941955566
    6. 'sum' → logprob: -7.880188941955566
    7. 'max' → logprob: -8.505188941955566
    8. '1' → logprob: -9.130188941955566
    9. '-' → logprob: -9.880188941955566
    10. '[-' → logprob: -10.255188941955566

Token 324: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010151672904612496
    2. ' for' → logprob: -9.625101089477539
    3. '
' → logprob: -11.125101089477539
    4. ')' → logprob: -11.625101089477539
    5. '```' → logprob: -12.125101089477539
    6. ')
' → logprob: -12.875101089477539
    7. '#' → logprob: -14.125101089477539
    8. 'from' → logprob: -14.625101089477539
    9. ',' → logprob: -15.250101089477539
    10. '<|end|>' → logprob: -15.375101089477539

Token 325: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0206720617134124e-05
    2. 'from' → logprob: -12.37501049041748
    3. ' for' → logprob: -12.87501049041748
    4. ')' → logprob: -14.00001049041748
    5. 'stack' → logprob: -14.75001049041748
    6. 'used' → logprob: -15.25001049041748
    7. 'import' → logprob: -15.25001049041748
    8. '```' → logprob: -15.37501049041748
    9. 'ans' → logprob: -15.87501049041748
    10. 'i' → logprob: -15.87501049041748

Token 326: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013048573397099972
    2. 'v' → logprob: -5.2630486488342285
    3. ' i' → logprob: -5.3880486488342285
    4. 'x' → logprob: -6.0130486488342285
    5. 'a' → logprob: -7.8880486488342285
    6. 'k' → logprob: -8.88804817199707
    7. 'u' → logprob: -9.88804817199707
    8. ' v' → logprob: -10.01304817199707
    9. 'l' → logprob: -10.51304817199707
    10. 'j' → logprob: -10.76304817199707

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018849866464734077
    2. 'in' → logprob: -4.018849849700928
    3. ',' → logprob: -7.393849849700928
    4. ' ' → logprob: -10.893850326538086
    5. '1' → logprob: -11.018850326538086
    6. 'range' → logprob: -11.768850326538086
    7. '_' → logprob: -12.143850326538086
    8. '0' → logprob: -12.143850326538086
    9. ' ,' → logprob: -12.393850326538086
    10. '   ' → logprob: -12.643850326538086

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003362966235727072
    2. ' range' → logprob: -8.000336647033691
    3. 'r' → logprob: -15.125336647033691
    4. 'A' → logprob: -15.875336647033691
    5. 'P' → logprob: -16.125335693359375
    6. 'n' → logprob: -16.375335693359375
    7. '(range' → logprob: -16.375335693359375
    8. 'rang' → logprob: -17.000335693359375
    9. '
' → logprob: -17.375335693359375
    10. 'ra' → logprob: -17.500335693359375

Token 329: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38777807354927063
    2. 'n' → logprob: -1.1377780437469482
    3. '(' → logprob: -7.137778282165527
    4. '1' → logprob: -9.137778282165527
    5. ' n' → logprob: -13.637778282165527
    6. ',n' → logprob: -14.012778282165527
    7. '2' → logprob: -14.762778282165527
    8. '
' → logprob: -15.137778282165527
    9. '	n' → logprob: -15.137778282165527
    10. '   ' → logprob: -15.137778282165527

Token 330: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2553267776966095
    2. '):
' → logprob: -1.505326747894287
    3. ')' → logprob: -6.880326747894287
    4. '-' → logprob: -7.005326747894287
    5. ':' → logprob: -7.755326747894287
    6. '   ' → logprob: -8.005327224731445
    7. ',' → logprob: -8.255327224731445
    8. '+' → logprob: -8.755327224731445
    9. '):
' → logprob: -9.505327224731445
    10. ' ' → logprob: -9.755327224731445

Token 331: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6394081115722656
    2. '1' → logprob: -0.7644081115722656
    3. '3' → logprob: -5.264408111572266
    4. ' ' → logprob: -7.264408111572266
    5. 'n' → logprob: -7.264408111572266
    6. '4' → logprob: -9.514408111572266
    7. '0' → logprob: -10.264408111572266
    8. '(' → logprob: -10.389408111572266
    9. '-' → logprob: -10.639408111572266
    10. '(n' → logprob: -10.889408111572266

Token 332: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6335605978965759
    2. '1' → logprob: -0.7585605978965759
    3. '3' → logprob: -7.008560657501221
    4. '4' → logprob: -10.508560180664062
    5. 'n' → logprob: -11.633560180664062
    6. ' ' → logprob: -12.008560180664062
    7. '5' → logprob: -12.696060180664062
    8. '0' → logprob: -13.008560180664062
    9. '-' → logprob: -13.071060180664062
    10. '(' → logprob: -13.196060180664062

Token 333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22964978218078613
    2. '):
' → logprob: -1.6046497821807861
    3. ',' → logprob: -5.979649543762207
    4. ')' → logprob: -7.229649543762207
    5. '-' → logprob: -7.729649543762207
    6. ':' → logprob: -8.479649543762207
    7. '):
' → logprob: -8.729649543762207
    8. ',n' → logprob: -10.104649543762207
    9. ' ):' → logprob: -10.604649543762207
    10. ' -' → logprob: -10.729649543762207

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15413354337215424
    2. ' if' → logprob: -2.7791335582733154
    3. 'if' → logprob: -2.9041335582733154
    4. 'for' → logprob: -4.404133319854736
    5. ' for' → logprob: -4.529133319854736
    6. 'j' → logprob: -7.404133319854736
    7. 'a' → logprob: -7.904133319854736
    8. ' j' → logprob: -7.904133319854736
    9. ' ' → logprob: -8.404133796691895
    10. 'l' → logprob: -8.654133796691895

Token 335: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04933927580714226
    2. 'for' → logprob: -3.4243392944335938
    3. 'a' → logprob: -5.549339294433594
    4. 'ans' → logprob: -5.924339294433594
    5. 'x' → logprob: -5.924339294433594
    6. 'j' → logprob: -6.174339294433594
    7. 'left' → logprob: -6.549339294433594
    8. 'ai' → logprob: -7.299339294433594
    9. 'l' → logprob: -7.424339294433594
    10. 'v' → logprob: -7.424339294433594

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04096440598368645
    2. '=' → logprob: -4.040964603424072
    3. 'r' → logprob: -4.790964603424072
    4. 'a' → logprob: -6.040964603424072
    5. '   ' → logprob: -6.040964603424072
    6. '0' → logprob: -6.165964603424072
    7. '1' → logprob: -6.290964603424072
    8. 'for' → logprob: -7.165964603424072
    9. 'v' → logprob: -7.165964603424072
    10. 'i' → logprob: -7.915964603424072

Token 337: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.04064946249127388
    2. 'R' → logprob: -3.4156494140625
    3. 'A' → logprob: -5.4156494140625
    4. 'L' → logprob: -6.6656494140625
    5. 'i' → logprob: -7.0406494140625
    6. 'max' → logprob: -9.0406494140625
    7. 'n' → logprob: -9.2906494140625
    8. 'p' → logprob: -10.0406494140625
    9. '0' → logprob: -10.1656494140625
    10. 'min' → logprob: -10.7906494140625

Token 338: '[i' (ID: 1768)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.06296035647392273
    2. '[i' → logprob: -3.062960386276245
    3. 'A' → logprob: -4.437960147857666
    4. '[P' → logprob: -6.437960147857666
    5. 'i' → logprob: -7.687960147857666
    6. 'P' → logprob: -8.312960624694824
    7. '[' → logprob: -9.562960624694824
    8. 'ans' → logprob: -11.187960624694824
    9. '[a' → logprob: -11.437960624694824
    10. '[
' → logprob: -11.687960624694824

Token 339: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.18386103212833405
    2. ']' → logprob: -1.8088610172271729
    3. '+' → logprob: -5.933861255645752
    4. ']+' → logprob: -6.683861255645752
    5. '   ' → logprob: -10.183860778808594
    6. ')
' → logprob: -10.308860778808594
    7. ' +' → logprob: -10.433860778808594
    8. ']
' → logprob: -10.433860778808594
    9. ' ]
' → logprob: -10.808860778808594
    10. ']

' → logprob: -10.808860778808594

Token 340: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7176086902618408
    2. 'for' → logprob: -1.5926086902618408
    3. '   ' → logprob: -1.8426086902618408
    4. 'r' → logprob: -2.342608690261841
    5. 'j' → logprob: -4.217608451843262
    6. 'l' → logprob: -4.342608451843262
    7. ' if' → logprob: -4.592608451843262
    8. ' for' → logprob: -4.967608451843262
    9. 'left' → logprob: -6.717608451843262
    10. 'v' → logprob: -6.842608451843262

Token 341: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48006388545036316
    2. 'r' → logprob: -1.4800639152526855
    3. 'for' → logprob: -2.6050639152526855
    4. 'l' (adapté à ' l') → logprob: -3.8550639152526855
    5. 'left' → logprob: -4.1050639152526855
    6. 'ans' → logprob: -4.4800639152526855
    7. 'x' → logprob: -4.6050639152526855
    8. 'j' → logprob: -4.8550639152526855
    9. 'right' → logprob: -5.3550639152526855
    10. 'a' → logprob: -6.1050639152526855

Token 342: '1' (ID: 16)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.6564906239509583
    2. ' =' → logprob: -0.9064906239509583
    3. '=' → logprob: -3.1564905643463135
    4. ',' → logprob: -3.4064905643463135
    5. ',r' → logprob: -7.656490802764893
    6. 'e' → logprob: -7.906490802764893
    7. 'ef' → logprob: -8.781490325927734
    8. 'ft' → logprob: -9.031490325927734
    9. 'ower' → logprob: -9.906490325927734
    10. '   ' → logprob: -10.031490325927734

Token 343: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4693986177444458
    2. ' =' → logprob: -1.4693986177444458
    3. '=' → logprob: -1.9693986177444458
    4. ' ,' → logprob: -5.594398498535156
    5. ',r' → logprob: -7.094398498535156
    6. ',l' → logprob: -7.969398498535156
    7. ',R' → logprob: -10.719398498535156
    8. ',p' → logprob: -10.969398498535156
    9. ' ' → logprob: -11.844398498535156
    10. ',j' → logprob: -11.969398498535156

Token 344: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002039391314610839
    2. 'R' → logprob: -6.502039432525635
    3. 'P' → logprob: -8.252038955688477
    4. 'p' → logprob: -8.877038955688477
    5. ' L' → logprob: -9.127038955688477
    6. 'i' → logprob: -11.877038955688477
    7. '0' → logprob: -12.377038955688477
    8. '-' → logprob: -12.502038955688477
    9. 'n' → logprob: -12.752038955688477
    10. 'max' → logprob: -13.002038955688477

Token 345: '[i' (ID: 1768)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.012569932267069817
    2. 'p' → logprob: -4.387569904327393
    3. '[P' → logprob: -10.51257038116455
    4. '[' → logprob: -11.76257038116455
    5. '[i' → logprob: -11.88757038116455
    6. '   ' → logprob: -12.38757038116455
    7. '[l' → logprob: -12.51257038116455
    8. '```' → logprob: -13.26257038116455
    9. ' [' → logprob: -13.88757038116455
    10. ' p' → logprob: -13.88757038116455

Token 346: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013488641707226634
    2. '[' → logprob: -9.250134468078613
    3. ']' → logprob: -11.250134468078613
    4. '0' → logprob: -11.375134468078613
    5. '   ' → logprob: -12.125134468078613
    6. ' ][' → logprob: -12.250134468078613
    7. '1' → logprob: -12.750134468078613
    8. ' ' → logprob: -14.750134468078613
    9. '2' → logprob: -16.12513542175293
    10. '  ' → logprob: -16.25013542175293

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11284040659666061
    2. '1' → logprob: -2.237840414047241
    3. ' ' → logprob: -11.61284065246582
    4. '   ' → logprob: -12.11284065246582
    5. '
' → logprob: -13.61284065246582
    6. '-' → logprob: -14.17534065246582
    7. '```' → logprob: -15.42534065246582
    8. '  ' → logprob: -15.73784065246582
    9. '    ' → logprob: -15.80034065246582
    10. '+' → logprob: -15.98784065246582

Token 348: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07025773078203201
    2. ']' → logprob: -2.6952576637268066
    3. ']+' → logprob: -8.195258140563965
    4. ' ]
' → logprob: -10.320258140563965
    5. ']
' → logprob: -12.820258140563965
    6. ']

' → logprob: -12.820258140563965
    7. '];' → logprob: -13.195258140563965
    8. ' ]' → logprob: -13.195258140563965
    9. 'if' → logprob: -13.570258140563965
    10. '+' → logprob: -14.070258140563965

Token 349: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.028530355542898178
    2. ' l' → logprob: -5.278530120849609
    3. 'if' → logprob: -5.403530120849609
    4. '+' → logprob: -5.528530120849609
    5. 'r' → logprob: -5.528530120849609
    6. '   ' → logprob: -5.653530120849609
    7. ' if' → logprob: -5.903530120849609
    8. ',' → logprob: -6.028530120849609
    9. ',l' → logprob: -6.903530120849609
    10. ' +' → logprob: -7.528530120849609

Token 350: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.08438740670681
    2. 'r' → logprob: -2.7093873023986816
    3. 'if' → logprob: -4.334387302398682
    4. 'R' → logprob: -7.459387302398682
    5. ' l' → logprob: -7.959387302398682
    6. ' if' → logprob: -8.95938777923584
    7. 'p' → logprob: -10.08438777923584
    8. ' r' → logprob: -10.45938777923584
    9. 'L' → logprob: -10.83438777923584
    10. 'max' → logprob: -10.83438777923584

Token 351: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11608421802520752
    2. '[' → logprob: -2.991084098815918
    3. ' =' → logprob: -3.491084098815918
    4. '=' → logprob: -3.991084098815918
    5. ']' → logprob: -5.741084098815918
    6. '][' → logprob: -5.866084098815918
    7. ' ' → logprob: -5.991084098815918
    8. ' [' → logprob: -7.616084098815918
    9. '=[' → logprob: -8.116084098815918
    10. ',' → logprob: -8.366084098815918

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759428143501282
    2. '=' → logprob: -0.8259428143501282
    3. ',' → logprob: -12.950942993164062
    4. ' ' → logprob: -14.450942993164062
    5. '   ' → logprob: -14.950942993164062
    6. '＝' → logprob: -16.825942993164062
    7. '=l' → logprob: -17.200942993164062
    8. '=L' → logprob: -17.950942993164062
    9. '    ' → logprob: -18.075942993164062
    10. 'l' → logprob: -18.950942993164062

Token 353: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.048694219440221786
    2. ' L' → logprob: -3.048694133758545
    3. '   ' → logprob: -9.548694610595703
    4. 'i' → logprob: -11.048694610595703
    5. '[i' → logprob: -11.298694610595703
    6. '       ' → logprob: -13.173694610595703
    7. ' i' → logprob: -13.298694610595703
    8. ' ' → logprob: -13.923694610595703
    9. '  ' → logprob: -14.048694610595703
    10. '           ' → logprob: -14.173694610595703

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.375003814697266
    3. 'i' → logprob: -14.000003814697266
    4. '[' → logprob: -14.000003814697266
    5. '[
' → logprob: -16.750003814697266
    6. '
' → logprob: -16.750003814697266
    7. '[I' → logprob: -17.250003814697266
    8. ' [' → logprob: -17.500003814697266
    9. '(i' → logprob: -17.500003814697266
    10. 's' → logprob: -18.125003814697266

Token 355: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011997550027444959
    2. '[i' → logprob: -6.876199722290039
    3. '[' → logprob: -9.376199722290039
    4. '1' → logprob: -10.501199722290039
    5. ']' → logprob: -10.876199722290039
    6. ' ][' → logprob: -11.251199722290039
    7. 'i' → logprob: -12.001199722290039
    8. '   ' → logprob: -12.126199722290039
    9. ''][' → logprob: -13.251199722290039
    10. '"][' → logprob: -13.501199722290039

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. '0' → logprob: -9.750076293945312
    3. ' ' → logprob: -11.000076293945312
    4. '   ' → logprob: -14.125076293945312
    5. '```' → logprob: -15.250076293945312
    6. '[' → logprob: -15.687576293945312
    7. ']' → logprob: -15.937576293945312
    8. '-' → logprob: -16.500076293945312
    9. '
' → logprob: -17.250076293945312
    10. '  ' → logprob: -17.500076293945312

Token 357: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023541271686553955
    2. ']
' → logprob: -3.773541212081909
    3. 'if' → logprob: -8.273541450500488
    4. ']

' → logprob: -10.898541450500488
    5. '   ' → logprob: -11.398541450500488
    6. ')' → logprob: -12.148541450500488
    7. ' if' → logprob: -12.773541450500488
    8. ']
' → logprob: -14.398541450500488
    9. ' ]' → logprob: -14.898541450500488
    10. '-' → logprob: -14.898541450500488

Token 358: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2094721496105194
    2. '   ' → logprob: -1.7094721794128418
    3. ' r' → logprob: -5.209472179412842
    4. 'if' → logprob: -6.709472179412842
    5. 'for' → logprob: -7.709472179412842
    6. ' if' → logprob: -7.834472179412842
    7. 'l' → logprob: -8.584471702575684
    8. ' for' → logprob: -8.709471702575684
    9. '    
' → logprob: -10.584471702575684
    10. '    ' → logprob: -10.709471702575684

Token 359: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.014711985364556313
    2. 'if' → logprob: -4.264711856842041
    3. 'l' → logprob: -8.2647123336792
    4. 'p' → logprob: -9.0147123336792
    5. ' r' → logprob: -10.3897123336792
    6. '```' → logprob: -10.6397123336792
    7. 'min' → logprob: -11.1397123336792
    8. ' if' → logprob: -11.6397123336792
    9. 'ans' → logprob: -11.6397123336792
    10. 'c' → logprob: -11.8897123336792

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5294899940490723
    2. ' =' → logprob: -0.9044899940490723
    3. 'ight' → logprob: -5.779489994049072
    4. '=' → logprob: -5.779489994049072
    5. '2' → logprob: -9.654489517211914
    6. ' ' → logprob: -10.279489517211914
    7. '   ' → logprob: -10.654489517211914
    8. '```' → logprob: -11.404489517211914
    9. 'ights' → logprob: -12.279489517211914
    10. '_' → logprob: -12.404489517211914

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193288922309875
    2. ' =' → logprob: -1.5019328594207764
    3. ',' → logprob: -12.501933097839355
    4. '＝' → logprob: -16.75193214416504
    5. ' ' → logprob: -17.25193214416504
    6. '=

' → logprob: -17.37693214416504
    7. '=r' → logprob: -19.12693214416504
    8. ' ,' → logprob: -20.12693214416504
    9. ' ' → logprob: -20.12693214416504
    10. ')' → logprob: -20.12693214416504

Token 362: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0003821716527454555
    2. ' R' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.125382423400879
    4. '  ' → logprob: -18.125381469726562
    5. '=' → logprob: -18.250381469726562
    6. 'r' → logprob: -18.375381469726562
    7. '	R' → logprob: -18.500381469726562
    8. '       ' → logprob: -18.625381469726562
    9. ' ' → logprob: -19.125381469726562
    10. '[R' → logprob: -19.625381469726562

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5027299822540954e-05
    2. '[p' → logprob: -10.250055313110352
    3. 'i' → logprob: -11.250055313110352
    4. '[P' → logprob: -13.125055313110352
    5. '[' → logprob: -13.375055313110352
    6. 'p' → logprob: -13.500055313110352
    7. '```' → logprob: -14.750055313110352
    8. 'P' → logprob: -14.875055313110352
    9. ' =' → logprob: -15.625055313110352
    10. '=' → logprob: -15.875055313110352

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019042797794099897
    2. '[i' → logprob: -9.500190734863281
    3. '[' → logprob: -9.625190734863281
    4. ']' → logprob: -10.250190734863281
    5. ' ][' → logprob: -11.875190734863281
    6. ''][' → logprob: -13.375190734863281
    7. '0' → logprob: -13.750190734863281
    8. '   ' → logprob: -14.125190734863281
    9. '"][' → logprob: -14.250190734863281
    10. 'i' → logprob: -14.875190734863281

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013452880375552922
    2. '1' → logprob: -9.000134468078613
    3. ' ' → logprob: -11.750134468078613
    4. '[' → logprob: -13.625134468078613
    5. '   ' → logprob: -13.625134468078613
    6. '][' → logprob: -15.500134468078613
    7. '
' → logprob: -15.625134468078613
    8. '           ' → logprob: -16.62513542175293
    9. '       ' → logprob: -16.62513542175293
    10. ']' → logprob: -17.37513542175293

Token 366: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012761499965563416
    2. ' ]' → logprob: -9.125127792358398
    3. ']
' → logprob: -11.125127792358398
    4. '   ' → logprob: -13.000127792358398
    5. ']

' → logprob: -14.375127792358398
    6. ')' → logprob: -15.000127792358398
    7. '']' → logprob: -15.375127792358398
    8. '[' → logprob: -16.7501277923584
    9. 'if' → logprob: -16.7501277923584
    10. ']+' → logprob: -16.7501277923584

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012269807979464531
    2. 'r' → logprob: -4.637269973754883
    3. ' r' → logprob: -6.012269973754883
    4. ',r' → logprob: -10.387269973754883
    5. ',' → logprob: -11.637269973754883
    6. '	r' → logprob: -11.762269973754883
    7. '+r' → logprob: -12.387269973754883
    8. '    ' → logprob: -13.262269973754883
    9. '+' → logprob: -13.262269973754883
    10. '  ' → logprob: -13.637269973754883

Token 368: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.011143322102725506
    2. ' r' → logprob: -4.511143207550049
    3. '   ' → logprob: -9.261143684387207
    4. ' ' → logprob: -15.761143684387207
    5. '0' → logprob: -16.26114273071289
    6. '  ' → logprob: -16.38614273071289
    7. '	r' → logprob: -16.51114273071289
    8. '+' → logprob: -17.01114273071289
    9. '```' → logprob: -17.01114273071289
    10. '    ' → logprob: -17.26114273071289

Token 369: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26147305965423584
    2. '[' → logprob: -1.5114730596542358
    3. ']' → logprob: -5.136473178863525
    4. '][' → logprob: -5.761473178863525
    5. '=' → logprob: -8.386472702026367
    6. '2' → logprob: -9.261472702026367
    7. '   ' → logprob: -9.761472702026367
    8. ' =' → logprob: -11.136472702026367
    9. ']=' → logprob: -11.136472702026367
    10. '[i' → logprob: -11.386472702026367

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889474183320999
    2. ' =' → logprob: -2.578894853591919
    3. '[i' → logprob: -12.82889461517334
    4. ']' → logprob: -14.07889461517334
    5. '   ' → logprob: -14.57889461517334
    6. '[' → logprob: -14.70389461517334
    7. ' ' → logprob: -14.82889461517334
    8. ',' → logprob: -16.203895568847656
    9. ')' → logprob: -16.953895568847656
    10. '=i' → logprob: -16.953895568847656

Token 371: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.014166445471346378
    2. ' R' → logprob: -4.264166355133057
    3. '[' → logprob: -13.389166831970215
    4. '   ' → logprob: -14.639166831970215
    5. 'r' → logprob: -15.264166831970215
    6. '[i' → logprob: -15.639166831970215
    7. '`' → logprob: -16.7641658782959
    8. ' ' → logprob: -16.7641658782959
    9. '[R' → logprob: -16.7641658782959
    10. 'i' → logprob: -17.0141658782959

Token 372: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -12.00001335144043
    3. 'i' → logprob: -12.37501335144043
    4. '```' → logprob: -13.12501335144043
    5. '][' → logprob: -15.75001335144043
    6. '(i' → logprob: -16.62501335144043
    7. '[][' → logprob: -16.62501335144043
    8. ',i' → logprob: -16.87501335144043
    9. '=' → logprob: -16.87501335144043
    10. ' [' → logprob: -17.25001335144043

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011615309631451964
    2. '[i' → logprob: -6.876161575317383
    3. ']' → logprob: -9.501161575317383
    4. '[' → logprob: -10.501161575317383
    5. ' ][' → logprob: -11.876161575317383
    6. ''][' → logprob: -12.751161575317383
    7. '"][' → logprob: -12.876161575317383
    8. '1' → logprob: -12.876161575317383
    9. '   ' → logprob: -12.876161575317383
    10. ']][' → logprob: -13.376161575317383

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -14.125001907348633
    3. '0' → logprob: -14.375001907348633
    4. 'i' → logprob: -15.375001907348633
    5. '```' → logprob: -16.000001907348633
    6. ']' → logprob: -16.375001907348633
    7. '2' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '
' → logprob: -16.875001907348633
    10. '[i' → logprob: -16.937501907348633

Token 375: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14485034346580505
    2. ']
' → logprob: -2.144850254058838
    3. '   ' → logprob: -4.144850254058838
    4. ')' → logprob: -6.394850254058838
    5. ')
' → logprob: -8.894850730895996
    6. ']

' → logprob: -9.894850730895996
    7. ']
' → logprob: -10.144850730895996
    8. 'if' → logprob: -11.644850730895996
    9. ' ]' → logprob: -13.144850730895996
    10. '  ' → logprob: -13.394850730895996

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009407185949385166
    2. '```' → logprob: -4.759407043457031
    3. 'if' → logprob: -8.384407043457031
    4. 'for' → logprob: -9.009407043457031
    5. '    
' → logprob: -9.134407043457031
    6. '``' → logprob: -9.384407043457031
    7. '
' → logprob: -9.509407043457031
    8. ' if' → logprob: -10.134407043457031
    9. ',' → logprob: -10.384407043457031
    10. ' for' → logprob: -10.759407043457031

Token 377: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5800203680992126
    2. 'for' → logprob: -2.2050204277038574
    3. 'count' → logprob: -2.7050204277038574
    4. 'ans' (adapté à ' ans') → logprob: -2.7050204277038574
    5. '   ' → logprob: -2.8300204277038574
    6. '```' → logprob: -2.8300204277038574
    7. 'length' → logprob: -3.2050204277038574
    8. 'cnt' → logprob: -3.8300204277038574
    9. 'c' → logprob: -6.080020427703857
    10. 'max' → logprob: -6.455020427703857

Token 378: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3871649503707886
    2. ' +=' → logprob: -1.1371649503707886
    3. '+' → logprob: -8.762165069580078
    4. '+=(' → logprob: -9.762165069580078
    5. '=' → logprob: -10.512165069580078
    6. ']+=' → logprob: -10.762165069580078
    7. '   ' → logprob: -11.387165069580078
    8. '+='' → logprob: -11.762165069580078
    9. '+="' → logprob: -12.887165069580078
    10. ' -=' → logprob: -13.137165069580078

Token 379: ' ((' (ID: 3536)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.8852881193161011
    2. 'max' → logprob: -1.385288119316101
    3. '(r' → logprob: -1.510288119316101
    4. ' max' → logprob: -2.6352882385253906
    5. ' (' → logprob: -3.5102882385253906
    6. '(l' → logprob: -4.635288238525391
    7. '(n' → logprob: -6.010288238525391
    8. '(' → logprob: -7.385288238525391
    9. '(min' → logprob: -7.510288238525391
    10. '(p' → logprob: -7.510288238525391

Token 380: 'l' (ID: 75)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14657826721668243
    2. 'r' → logprob: -2.146578311920166
    3. 'l' → logprob: -4.396578311920166
    4. '(p' → logprob: -5.396578311920166
    5. '(r' → logprob: -6.646578311920166
    6. 'max' → logprob: -7.396578311920166
    7. 'min' → logprob: -8.021577835083008
    8. '(l' → logprob: -8.771577835083008
    9. 'P' → logprob: -9.896577835083008
    10. '(max' → logprob: -10.146577835083008

Token 381: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740941822528839
    2. '1' → logprob: -0.9740941524505615
    3. 'p' → logprob: -12.34909439086914
    4. 'r' → logprob: -12.47409439086914
    5. '
' → logprob: -13.34909439086914
    6. '[' → logprob: -13.72409439086914
    7. '+' → logprob: -13.84909439086914
    8. '```' → logprob: -14.34909439086914
    9. '   ' → logprob: -14.59909439086914
    10. '[i' → logprob: -14.84909439086914

Token 382: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4016176164150238
    2. ' +' → logprob: -1.5266176462173462
    3. '+' → logprob: -2.2766175270080566
    4. '-' → logprob: -4.776617527008057
    5. ' <' → logprob: -7.276617527008057
    6. ' !=' → logprob: -7.651617527008057
    7. '<' → logprob: -8.526618003845215
    8. ')' → logprob: -8.901618003845215
    9. ' >=' → logprob: -9.151618003845215
    10. ' if' → logprob: -9.276618003845215

Token 383: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09999020397663116
    2. '(l' → logprob: -3.224990129470825
    3. 'r' → logprob: -3.974990129470825
    4. ' (' → logprob: -4.724990367889404
    5. ' l' → logprob: -4.974990367889404
    6. 'max' → logprob: -5.224990367889404
    7. '(r' → logprob: -5.599990367889404
    8. '-' → logprob: -6.224990367889404
    9. '(-' → logprob: -6.224990367889404
    10. '(max' → logprob: -6.474990367889404

Token 384: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.481294184923172
    2. 'l' → logprob: -1.4812941551208496
    3. 'r' → logprob: -3.1062941551208496
    4. '2' → logprob: -3.3562941551208496
    5. '-' → logprob: -3.7312941551208496
    6. '(-' → logprob: -3.8562941551208496
    7. '(l' → logprob: -4.35629415512085
    8. 'max' → logprob: -5.48129415512085
    9. '(' → logprob: -5.60629415512085
    10. '(max' → logprob: -6.60629415512085

Token 385: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005106156691908836
    2. ' )' → logprob: -5.755105972290039
    3. ' +' → logprob: -7.255105972290039
    4. ')*(' → logprob: -7.755105972290039
    5. '+' → logprob: -7.880105972290039
    6. ' -' → logprob: -8.630105972290039
    7. ')*' → logprob: -8.755105972290039
    8. '-' → logprob: -10.380105972290039
    9. ' if' → logprob: -10.880105972290039
    10. 'if' → logprob: -12.380105972290039

Token 386: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16044935584068298
    2. ' *' → logprob: -2.285449266433716
    3. '*' → logprob: -3.410449266433716
    4. ')*' → logprob: -4.910449504852295
    5. ' )' → logprob: -6.410449504852295
    6. ' -' → logprob: -6.660449504852295
    7. ')*(' → logprob: -6.660449504852295
    8. '*(' → logprob: -7.285449504852295
    9. '+' → logprob: -7.410449504852295
    10. '-' → logprob: -8.410449028015137

Token 387: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.056781552731990814
    2. ' (' → logprob: -2.931781530380249
    3. '(l' → logprob: -6.306781768798828
    4. '((' → logprob: -10.306781768798828
    5. '(R' → logprob: -11.556781768798828
    6. '   ' → logprob: -11.681781768798828
    7. '(p' → logprob: -11.931781768798828
    8. '(n' → logprob: -12.306781768798828
    9. '(' → logprob: -12.931781768798828
    10. '(max' → logprob: -13.306781768798828

Token 388: 'r' (ID: 81)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.007934870198369026
    2. 'r' → logprob: -5.007935047149658
    3. '(p' → logprob: -7.507935047149658
    4. ' (' → logprob: -7.882935047149658
    5. '(min' → logprob: -9.6329345703125
    6. '(' → logprob: -10.0079345703125
    7. 'p' → logprob: -10.3829345703125
    8. '(R' → logprob: -10.3829345703125
    9. '(max' → logprob: -10.3829345703125
    10. '(l' → logprob: -10.7579345703125

Token 389: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018182020634412766
    2. '1' → logprob: -4.018181800842285
    3. '[' → logprob: -10.768181800842285
    4. 'r' → logprob: -11.768181800842285
    5. '[r' → logprob: -14.143181800842285
    6. '```' → logprob: -14.268181800842285
    7. 's' → logprob: -15.143181800842285
    8. ' ' → logprob: -15.205681800842285
    9. '   ' → logprob: -15.393181800842285
    10. 'p' → logprob: -16.1431827545166

Token 390: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008626633323729038
    2. '-' → logprob: -4.758626461029053
    3. ' ' → logprob: -12.383626937866211
    4. ')' → logprob: -12.633626937866211
    5. '   ' → logprob: -12.883626937866211
    6. '[' → logprob: -14.633626937866211
    7. '```' → logprob: -14.633626937866211
    8. ' -
' → logprob: -15.258626937866211
    9. '  ' → logprob: -15.883626937866211
    10. '    ' → logprob: -16.00862693786621

Token 391: ' p' (ID: 275)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15251865983009338
    2. 'l' → logprob: -2.0275187492370605
    3. 'p' → logprob: -5.4025187492370605
    4. ' r' → logprob: -5.5275187492370605
    5. ' l' → logprob: -7.0275187492370605
    6. 'i' → logprob: -8.402518272399902
    7. '   ' → logprob: -9.027518272399902
    8. ' p' → logprob: -10.777518272399902
    9. '(r' → logprob: -11.402518272399902
    10. '       ' → logprob: -12.027518272399902

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0294810738414526
    2. '))' → logprob: -4.279480934143066
    3. ' )' → logprob: -4.779480934143066
    4. ' -' → logprob: -5.279480934143066
    5. '-' → logprob: -6.654480934143066
    6. ' ))' → logprob: -8.654480934143066
    7. ')-(' → logprob: -9.654480934143066
    8. ' ' → logprob: -10.529480934143066
    9. ')+' → logprob: -11.029480934143066
    10. ')
' → logprob: -11.029480934143066

Token 393: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01198586542159319
    2. ' *' → logprob: -5.636985778808594
    3. ' -' → logprob: -6.136985778808594
    4. '+' → logprob: -6.386985778808594
    5. ' +' → logprob: -6.886985778808594
    6. '*' → logprob: -7.011985778808594
    7. ')*' → logprob: -7.261985778808594
    8. '   ' → logprob: -7.386985778808594
    9. '-' → logprob: -7.636985778808594
    10. ' )' → logprob: -7.886985778808594

Token 394: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16190068423748016
    2. '(p' → logprob: -2.911900758743286
    3. '(l' → logprob: -3.286900758743286
    4. '((' → logprob: -3.411900758743286
    5. '(r' → logprob: -3.911900758743286
    6. ' ((' → logprob: -5.411900520324707
    7. '(' → logprob: -9.286900520324707
    8. '(ans' → logprob: -10.036900520324707
    9. '(n' → logprob: -10.161900520324707
    10. '(s' → logprob: -10.161900520324707

Token 395: 'r' (ID: 81)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.395934522151947
    2. '(r' → logprob: -1.6459345817565918
    3. '(p' → logprob: -2.020934581756592
    4. ' (' → logprob: -7.145934581756592
    5. 'l' → logprob: -7.395934581756592
    6. 'r' → logprob: -9.395934104919434
    7. 'p' → logprob: -10.020934104919434
    8. '(' → logprob: -10.270934104919434
    9. '   ' → logprob: -12.645934104919434
    10. '(lp' → logprob: -12.645934104919434

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004540604073554277
    2. 'p' → logprob: -5.50454044342041
    3. '1' → logprob: -7.87954044342041
    4. ' p' → logprob: -10.75454044342041
    5. '[' → logprob: -11.62954044342041
    6. ')' → logprob: -11.62954044342041
    7. '   ' → logprob: -11.75454044342041
    8. ' ' → logprob: -12.00454044342041
    9. '[p' → logprob: -12.00454044342041
    10. '```' → logprob: -12.00454044342041

Token 397: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02062842808663845
    2. '-' → logprob: -3.8956284523010254
    3. ')' → logprob: -9.895627975463867
    4. ' ' → logprob: -10.395627975463867
    5. '[' → logprob: -13.395627975463867
    6. '   ' → logprob: -13.895627975463867
    7. '#' → logprob: -14.770627975463867
    8. ' ' → logprob: -14.770627975463867
    9. '  ' → logprob: -14.895627975463867
    10. '*' → logprob: -15.020627975463867

Token 398: ' r' (ID: 428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08175597339868546
    2. '(p' → logprob: -3.0817558765411377
    3. ' p' → logprob: -3.5817558765411377
    4. ' (' → logprob: -5.456756114959717
    5. 'r' → logprob: -8.206755638122559
    6. '(r' → logprob: -9.456755638122559
    7. '(' → logprob: -9.581755638122559
    8. ')' → logprob: -9.956755638122559
    9. ' r' → logprob: -10.706755638122559
    10. 'l' → logprob: -12.081755638122559

Token 399: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00870475172996521
    2. '2' → logprob: -5.508704662322998
    3. '[p' → logprob: -5.883704662322998
    4. 'i' → logprob: -7.008704662322998
    5. '[i' → logprob: -7.758704662322998
    6. '1' → logprob: -8.633705139160156
    7. ' p' → logprob: -8.633705139160156
    8. '```' → logprob: -9.883705139160156
    9. ')p' → logprob: -11.008705139160156
    10. '_p' → logprob: -11.008705139160156

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027813989436253905
    2. ' )' → logprob: -8.25027847290039
    3. ')*' → logprob: -11.75027847290039
    4. '   ' → logprob: -12.62527847290039
    5. '*' → logprob: -12.87527847290039
    6. ' *' → logprob: -13.87527847290039
    7. ')*(' → logprob: -14.50027847290039
    8. ' ' → logprob: -14.87527847290039
    9. ')
' → logprob: -15.37527847290039
    10. '#' → logprob: -15.75027847290039

Token 401: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005348789971321821
    2. ' *' → logprob: -5.3803486824035645
    3. '*' → logprob: -8.005349159240723
    4. ' )' → logprob: -8.130349159240723
    5. ')*' → logprob: -9.755349159240723
    6. '   ' → logprob: -10.380349159240723
    7. ')*(' → logprob: -12.255349159240723
    8. ' ' → logprob: -13.630349159240723
    9. '*(' → logprob: -13.755349159240723
    10. '    ' → logprob: -13.880349159240723

Token 402: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07689788937568665
    2. '(l' → logprob: -2.8268978595733643
    3. '((' → logprob: -4.701898097991943
    4. ' (' → logprob: -5.201898097991943
    5. '(r' → logprob: -8.826897621154785
    6. '(' → logprob: -10.451897621154785
    7. '   ' → logprob: -10.701897621154785
    8. '*(' → logprob: -11.201897621154785
    9. ' ((' → logprob: -11.826897621154785
    10. '(s' → logprob: -12.826897621154785

Token 403: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0017712120898067951
    2. '(l' → logprob: -6.626771450042725
    3. ' (' → logprob: -8.001770973205566
    4. 'p' → logprob: -9.501770973205566
    5. '(' → logprob: -11.376770973205566
    6. '(r' → logprob: -11.751770973205566
    7. '   ' → logprob: -12.001770973205566
    8. '((' → logprob: -13.251770973205566
    9. 'l' → logprob: -13.376770973205566
    10. '(i' → logprob: -13.626770973205566

Token 404: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008450865745544434
    2. '-' → logprob: -5.258450984954834
    3. ')' → logprob: -6.008450984954834
    4. '))' → logprob: -7.258450984954834
    5. ')*' → logprob: -11.633450508117676
    6. '   ' → logprob: -11.633450508117676
    7. ' ' → logprob: -12.008450508117676
    8. ' )' → logprob: -12.508450508117676
    9. ' ))' → logprob: -12.508450508117676
    10. ')))' → logprob: -12.633450508117676

Token 405: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0022047359962016344
    2. ' l' → logprob: -6.127204895019531
    3. 'max' → logprob: -11.002204895019531
    4. ' max' → logprob: -13.752204895019531
    5. '   ' → logprob: -14.252204895019531
    6. ' ' → logprob: -15.502204895019531
    7. 'p' → logprob: -15.752204895019531
    8. '
' → logprob: -16.00220489501953
    9. 'r' → logprob: -16.25220489501953
    10. ')' → logprob: -16.25220489501953

Token 406: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08896269649267197
    2. '1' → logprob: -2.4639627933502197
    3. '```' → logprob: -10.96396255493164
    4. 'i' → logprob: -13.33896255493164
    5. '[i' → logprob: -13.96396255493164
    6. ' ' → logprob: -14.21396255493164
    7. 's' → logprob: -14.33896255493164
    8. '``' → logprob: -14.33896255493164
    9. '   ' → logprob: -14.71396255493164
    10. 'l' → logprob: -15.46396255493164

Token 407: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01824698969721794
    2. '))' → logprob: -4.018247127532959
    3. ')
' → logprob: -9.8932466506958
    4. ')))' → logprob: -10.6432466506958
    5. ' )' → logprob: -11.0182466506958
    6. '   ' → logprob: -13.1432466506958
    7. '))
' → logprob: -13.3932466506958
    8. ' ))' → logprob: -14.3932466506958
    9. ')#' → logprob: -14.7682466506958
    10. ')

' → logprob: -15.0182466506958

Token 408: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005605389014817774
    2. '
' → logprob: -7.500560760498047
    3. ' print' → logprob: -12.250560760498047
    4. ')
' → logprob: -13.500560760498047
    5. '```' → logprob: -13.875560760498047
    6. ')' → logprob: -15.250560760498047
    7. '
' → logprob: -16.875560760498047
    8. '(print' → logprob: -16.875560760498047
    9. '\n' → logprob: -17.375560760498047
    10. '\' → logprob: -17.500560760498047

Token 409: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.966074526309967
    2. '1' → logprob: -1.3410744667053223
    3. 'A' → logprob: -2.0910744667053223
    4. '(i' → logprob: -2.0910744667053223
    5. '(A' → logprob: -3.2160744667053223
    6. ' i' → logprob: -3.9660744667053223
    7. ' (' → logprob: -4.091074466705322
    8. '(' → logprob: -4.216074466705322
    9. ' ' → logprob: -4.716074466705322
    10. ' A' → logprob: -5.091074466705322

Token 410: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007247499655932188
    2. '1' → logprob: -5.632247447967529
    3. 'A' → logprob: -6.132247447967529
    4. '(i' → logprob: -7.007247447967529
    5. ' i' → logprob: -8.007247924804688
    6. 'p' → logprob: -9.757247924804688
    7. '(' → logprob: -9.882247924804688
    8. '   ' → logprob: -10.507247924804688
    9. '(A' → logprob: -10.507247924804688
    10. ' (' → logprob: -10.882247924804688

Token 411: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2536817193031311
    2. ' +' → logprob: -1.5036816596984863
    3. ')' → logprob: -6.503681659698486
    4. '+
' → logprob: -9.253682136535645
    5. ' +
' → logprob: -9.378682136535645
    6. '+)' → logprob: -9.878682136535645
    7. ' )' → logprob: -11.378682136535645
    8. ')
' → logprob: -12.628682136535645
    9. ')+' → logprob: -12.878682136535645
    10. ' ' → logprob: -13.878682136535645

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '2' → logprob: -15.375045776367188
    4. '   ' → logprob: -16.250045776367188
    5. '```' → logprob: -17.125045776367188
    6. ')' → logprob: -19.000045776367188
    7. '`' → logprob: -19.750045776367188
    8. '
' → logprob: -19.750045776367188
    9. '``' → logprob: -20.250045776367188
    10. '0' → logprob: -20.625045776367188

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.375006675720215
    3. '2' → logprob: -13.000006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '
' → logprob: -16.50000762939453
    6. '```' → logprob: -16.75000762939453
    7. ')' → logprob: -18.06250762939453
    8. '１' → logprob: -18.31250762939453
    9. '+' → logprob: -18.31250762939453
    10. '3' → logprob: -18.37500762939453

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029763801023364067
    2. ')
' → logprob: -3.529763698577881
    3. ')
' → logprob: -12.654764175415039
    4. ' )' → logprob: -12.904764175415039
    5. '+' → logprob: -13.279764175415039
    6. ')

' → logprob: -13.779764175415039
    7. '```' → logprob: -13.904764175415039
    8. '
' → logprob: -14.279764175415039
    9. '))' → logprob: -14.904764175415039
    10. ')#' → logprob: -15.029764175415039

Token 415: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.927930654550437e-05
    2. '
' → logprob: -10.625029563903809
    3. ' print' → logprob: -12.500029563903809
    4. ')
' → logprob: -14.375029563903809
    5. '```' → logprob: -14.625029563903809
    6. '(print' → logprob: -16.250028610229492
    7. ')' → logprob: -17.375028610229492
    8. '-print' → logprob: -17.750028610229492
    9. '.print' → logprob: -18.125028610229492
    10. '\' → logprob: -18.625028610229492

Token 416: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.500205039978027
    3. '(
' → logprob: -14.250205039978027
    4. '(answer' → logprob: -15.250205039978027
    5. '(abs' → logprob: -15.500205039978027
    6. ' (' → logprob: -16.37520408630371
    7. '(a' → logprob: -17.25020408630371
    8. 'ans' → logprob: -17.50020408630371
    9. '(f' → logprob: -17.75020408630371
    10. '((' → logprob: -18.25020408630371

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.500001907348633
    4. ')`' → logprob: -15.000001907348633
    5. '))' → logprob: -15.375001907348633
    6. '+' → logprob: -15.500001907348633
    7. '()' → logprob: -16.125001907348633
    8. '())' → logprob: -16.500001907348633
    9. '`)' → logprob: -17.500001907348633
    10. ')}' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 415
Tokens correctement prédits (1ère position, stricte): 178
Tokens correctement prédits (1ère position, avec adaptation): 196
Tokens correctement prédits (top 10): 376
Précision stricte (1ère position): 42.89%
Précision adaptée (1ère position): 47.23%
Précision (top 10): 90.60%
================================================================================
