================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H = int(input())
cnt = 0
total = 1
while 1 < H:
    H //= 2
    cnt += total
    total *= 2
print(cnt + total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007491135620512068
    2. ''' → logprob: -7.500749111175537
    3. 'H' → logprob: -9.625749588012695
    4. '(H' → logprob: -10.500749588012695
    5. '(
' → logprob: -10.625749588012695
    6. ')' → logprob: -11.250749588012695
    7. '```' → logprob: -11.250749588012695
    8. '[' → logprob: -11.375749588012695
    9. '('' → logprob: -11.375749588012695
    10. '"' → logprob: -11.625749588012695

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01935521513223648
    2. ')' → logprob: -4.019355297088623
    3. '()' → logprob: -7.394355297088623
    4. '(
' → logprob: -8.519354820251465
    5. '())' → logprob: -9.769354820251465
    6. '(

' → logprob: -10.269354820251465
    7. '<|end|>' → logprob: -10.394354820251465
    8. '```' → logprob: -10.394354820251465
    9. '[' → logprob: -10.519354820251465
    10. '("("' → logprob: -10.644354820251465

Token 5: 'cnt' (ID: 33160)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2625484466552734
    2. 'n' → logprob: -1.7625484466552734
    3. '%' → logprob: -1.8875484466552734
    4. ')' → logprob: -2.0125484466552734
    5. 'if' → logprob: -2.5125484466552734
    6. 's' → logprob: -3.2625484466552734
    7. '#' → logprob: -4.012548446655273
    8. 'i' → logprob: -4.137548446655273
    9. '_' → logprob: -4.637548446655273
    10. 'print' → logprob: -4.637548446655273

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45960015058517456
    2. '=' → logprob: -1.8346002101898193
    3. '[' → logprob: -1.8346002101898193
    4. '+' → logprob: -3.4596002101898193
    5. ' =' → logprob: -4.95959997177124
    6. ' ' → logprob: -5.83459997177124
    7. '+=' → logprob: -6.20959997177124
    8. '(' → logprob: -6.33459997177124
    9. ' +=' → logprob: -6.45959997177124
    10. '.' → logprob: -7.33459997177124

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009389739134348929
    2. ' ' → logprob: -7.000938892364502
    3. 'H' → logprob: -11.25093936920166
    4. ''' → logprob: -12.37593936920166
    5. '(' → logprob: -12.50093936920166
    6. '1' → logprob: -12.75093936920166
    7. ' H' → logprob: -13.50093936920166
    8. '"' → logprob: -13.87593936920166
    9. '[' → logprob: -15.00093936920166
    10. '`' → logprob: -15.25093936920166

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005201501771807671
    2. 'H' → logprob: -5.63020133972168
    3. '1' → logprob: -6.88020133972168
    4. '(' → logprob: -7.88020133972168
    5. '(H' → logprob: -9.63020133972168
    6. ''H' → logprob: -10.25520133972168
    7. ' ' → logprob: -11.00520133972168
    8. ''' → logprob: -11.13020133972168
    9. '3' → logprob: -11.88020133972168
    10. '2' → logprob: -12.00520133972168

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5111750960350037
    2. 'while' → logprob: -1.5111751556396484
    3. '
' → logprob: -2.5111751556396484
    4. ' while' → logprob: -3.0111751556396484
    5. '\' → logprob: -3.7611751556396484
    6. '' → logprob: -4.636175155639648
    7. '  
' → logprob: -5.761175155639648
    8. 'for' → logprob: -6.511175155639648
    9. ' 
' → logprob: -6.761175155639648
    10. '`' → logprob: -6.761175155639648

Token 10: 'total' (ID: 9577)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4250618517398834
    2. '\n' → logprob: -2.1750619411468506
    3. ' while' → logprob: -2.4250619411468506
    4. '
' → logprob: -2.6750619411468506
    5. 'if' → logprob: -3.4250619411468506
    6. '<|end|>' → logprob: -4.8000617027282715
    7. ' 
' → logprob: -4.9250617027282715
    8. 'w' → logprob: -5.5500617027282715
    9. '' → logprob: -5.8000617027282715
    10. 'i' → logprob: -6.0500617027282715

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04136195406317711
    2. ' +=' → logprob: -3.9163620471954346
    3. ' ' → logprob: -5.1663618087768555
    4. ' =' → logprob: -5.4163618087768555
    5. '=' → logprob: -5.7913618087768555
    6. '_space' → logprob: -5.9163618087768555
    7. '+' → logprob: -6.6663618087768555
    8. ')' → logprob: -6.6663618087768555
    9. ' _' → logprob: -7.6663618087768555
    10. '[' → logprob: -8.416361808776855

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14397527277469635
    2. '0' → logprob: -2.018975257873535
    3. ' H' → logprob: -6.768975257873535
    4. 'H' → logprob: -9.393975257873535
    5. '1' → logprob: -10.018975257873535
    6. ' ' → logprob: -11.643975257873535
    7. '`' → logprob: -13.268975257873535
    8. '"' → logprob: -13.518975257873535
    9. ' `' → logprob: -13.518975257873535
    10. ' "' → logprob: -13.518975257873535

Token 13: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003565858118236065
    2. ' ' → logprob: -6.128565788269043
    3. 'H' → logprob: -7.003565788269043
    4. '1' → logprob: -7.753565788269043
    5. ' H' → logprob: -10.378565788269043
    6. '100' → logprob: -12.878565788269043
    7. '10' → logprob: -13.628565788269043
    8. '`' → logprob: -14.253565788269043
    9. 'sum' → logprob: -14.378565788269043
    10. '```' → logprob: -14.753565788269043

Token 14: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4693589508533478
    2. ' while' → logprob: -1.5943589210510254
    3. '
' → logprob: -3.0943589210510254
    4. '\n' → logprob: -3.8443589210510254
    5. '' → logprob: -3.9693589210510254
    6. '*' → logprob: -4.219358921051025
    7. ',' → logprob: -4.344358921051025
    8. ' ' → logprob: -4.594358921051025
    9. '+' → logprob: -4.719358921051025
    10. '0' → logprob: -4.844358921051025

Token 15: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5257630944252014
    2. ' while' → logprob: -1.1507630348205566
    3. '*' → logprob: -3.9007630348205566
    4. ' ' → logprob: -4.150763034820557
    5. 'for' → logprob: -4.775763034820557
    6. '<|end|>' → logprob: -4.900763034820557
    7. ')' → logprob: -5.150763034820557
    8. '\n' → logprob: -5.275763034820557
    9. '```' → logprob: -5.275763034820557
    10. 'if' → logprob: -5.400763034820557

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5237938165664673
    2. ' H' → logprob: -0.8987938165664673
    3. ' cnt' → logprob: -8.523794174194336
    4. ' total' → logprob: -9.023794174194336
    5. ' ' → logprob: -9.148794174194336
    6. 'H' → logprob: -9.273794174194336
    7. '  ' → logprob: -9.398794174194336
    8. ' (' → logprob: -10.773794174194336
    9. 'cnt' → logprob: -11.273794174194336
    10. ')' → logprob: -12.023794174194336

Token 17: '1' (ID: 16)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.43790125846862793
    2. 'total' → logprob: -1.437901258468628
    3. ' cnt' → logprob: -2.812901258468628
    4. ' total' → logprob: -3.062901258468628
    5. 'H' → logprob: -4.687901496887207
    6. ' H' → logprob: -7.187901496887207
    7. '(cnt' → logprob: -8.312901496887207
    8. 'True' → logprob: -9.937901496887207
    9. 'count' → logprob: -10.812901496887207
    10. 'counter' → logprob: -10.937901496887207

Token 18: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038364212960004807
    2. '[' → logprob: -6.878836631774902
    3. '>' → logprob: -7.128836631774902
    4. '+' → logprob: -7.128836631774902
    5. '0' → logprob: -7.753836631774902
    6. '   ' → logprob: -9.003836631774902
    7. '():' → logprob: -9.378836631774902
    8. '+:' → logprob: -9.378836631774902
    9. ':
' → logprob: -9.753836631774902
    10. '<' → logprob: -9.878836631774902

Token 19: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.45704782009124756
    2. 'H' → logprob: -1.3320478200912476
    3. '=' → logprob: -2.457047939300537
    4. ' ' → logprob: -4.582047939300537
    5. ' =' → logprob: -5.457047939300537
    6. ':' → logprob: -6.707047939300537
    7. '<=' → logprob: -8.457047462463379
    8. '+' → logprob: -8.582047462463379
    9. ' <=' → logprob: -8.957047462463379
    10. '2' → logprob: -9.207047462463379

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20174163579940796
    2. ' :' → logprob: -2.8267416954040527
    3. '>' → logprob: -3.7017416954040527
    4. '+' → logprob: -3.7017416954040527
    5. ' ' → logprob: -3.7017416954040527
    6. ' and' → logprob: -3.8267416954040527
    7. '-' → logprob: -4.576741695404053
    8. '):' → logprob: -5.951741695404053
    9. ' >' → logprob: -6.201741695404053
    10. ' +' → logprob: -6.451741695404053

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1831127405166626
    2. '    ' → logprob: -1.8081127405166626
    3. ':' → logprob: -1.9331127405166626
    4. ' 
' → logprob: -2.058112621307373
    5. '<|end|>' → logprob: -2.933112621307373
    6. '     
' → logprob: -3.183112621307373
    7. '   ' → logprob: -3.433112621307373
    8. '    
' → logprob: -4.058112621307373
    9. 'total' → logprob: -4.308112621307373
    10. '  
' → logprob: -4.808112621307373

Token 22: ' H' (ID: 487)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.37020379304885864
    2. ' ' → logprob: -1.7452037334442139
    3. 'H' (adapté à ' H') → logprob: -2.745203733444214
    4. ' H' → logprob: -3.620203733444214
    5. '```' → logprob: -4.995203971862793
    6. 'total' → logprob: -5.245203971862793
    7. '     
' → logprob: -5.245203971862793
    8. ' total' → logprob: -5.245203971862793
    9. ' ```' → logprob: -5.245203971862793
    10. '   ' → logprob: -5.495203971862793

Token 23: ' //' (ID: 602)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.9239702224731445
    2. '=' → logprob: -1.2989702224731445
    3. ' -=' → logprob: -1.5489702224731445
    4. '-' → logprob: -2.7989702224731445
    5. '   ' → logprob: -4.2989702224731445
    6. ' =' → logprob: -4.5489702224731445
    7. ' //' → logprob: -4.6739702224731445
    8. '//=' → logprob: -5.2989702224731445
    9. ' ' → logprob: -5.4239702224731445
    10. '>' → logprob: -5.5489702224731445

Token 24: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00030817187507636845
    2. '2' → logprob: -8.1253080368042
    3. ' ' → logprob: -11.5003080368042
    4. '=}' → logprob: -14.6253080368042
    5. '10' → logprob: -14.7503080368042
    6. '>' → logprob: -15.5003080368042
    7. ' =' → logprob: -15.7503080368042
    8. '==' → logprob: -16.375308990478516
    9. '=*/' → logprob: -17.000308990478516
    10. '>=' → logprob: -17.000308990478516

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009802898857742548
    2. '3' → logprob: -7.625980377197266
    3. ' ' → logprob: -8.000980377197266
    4. '10' → logprob: -9.000980377197266
    5. '6' → logprob: -11.375980377197266
    6. '4' → logprob: -11.625980377197266
    7. '26' → logprob: -12.375980377197266
    8. '5' → logprob: -13.000980377197266
    9. '16' → logprob: -13.375980377197266
    10. '1' → logprob: -13.375980377197266

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002726601669564843
    2. '3' → logprob: -8.625272750854492
    3. ' ' → logprob: -9.500272750854492
    4. '10' → logprob: -11.250272750854492
    5. '4' → logprob: -13.250272750854492
    6. '26' → logprob: -14.375272750854492
    7. '5' → logprob: -14.500272750854492
    8. '1' → logprob: -14.500272750854492
    9. '6' → logprob: -14.625272750854492
    10. '16' → logprob: -15.250272750854492

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0763561949133873
    2. '   ' → logprob: -3.2013561725616455
    3. ' 
' → logprob: -3.9513561725616455
    4. '<|end|>' → logprob: -4.826356410980225
    5. '    
' → logprob: -5.951356410980225
    6. '  
' → logprob: -6.201356410980225
    7. ' ' → logprob: -8.326355934143066
    8. '   
' → logprob: -8.576355934143066
    9. '
' → logprob: -8.826355934143066
    10. '<|end|>' → logprob: -9.201355934143066

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485631823539734
    2. '
' → logprob: -1.4235632419586182
    3. ' 
' → logprob: -2.423563241958618
    4. '<|end|>' → logprob: -3.423563241958618
    5. ' ' → logprob: -3.798563241958618
    6. '    
' → logprob: -4.173563003540039
    7. '  
' → logprob: -4.798563003540039
    8. '    ' → logprob: -5.173563003540039
    9. '   
' → logprob: -5.923563003540039
    10. '  ' → logprob: -6.923563003540039

Token 29: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.18787600100040436
    2. 'total' → logprob: -2.062875986099243
    3. ' cnt' → logprob: -3.437875986099243
    4. ' total' → logprob: -4.437876224517822
    5. '	cnt' → logprob: -9.437875747680664
    6. ' ' → logprob: -9.937875747680664
    7. '   ' → logprob: -10.562875747680664
    8. 'counter' → logprob: -10.937875747680664
    9. '```' → logprob: -11.062875747680664
    10. 'count' → logprob: -11.312875747680664

Token 30: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005972049664705992
    2. '+=' → logprob: -5.130971908569336
    3. '+' → logprob: -10.505971908569336
    4. ' =' → logprob: -11.630971908569336
    5. ' +' → logprob: -12.380971908569336
    6. '=' → logprob: -13.130971908569336
    7. ' ' → logprob: -15.130971908569336
    8. '   ' → logprob: -16.380971908569336
    9. ' -=' → logprob: -16.380971908569336
    10. '<|end|>' → logprob: -16.505971908569336

Token 31: ' total' (ID: 3609)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28115150332450867
    2. ' ' → logprob: -1.406151533126831
    3. '<|end|>' → logprob: -15.40615177154541
    4. '   ' → logprob: -15.65615177154541
    5. '2' → logprob: -15.78115177154541
    6. '+' → logprob: -16.156150817871094
    7. '0' → logprob: -16.218650817871094
    8. '  ' → logprob: -16.531150817871094
    9. ' +' → logprob: -16.718650817871094
    10. ' ' → logprob: -17.093650817871094

Token 32: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48871007561683655
    2. '*' → logprob: -1.7387100458145142
    3. ' *' → logprob: -2.3637101650238037
    4. '<|end|>' → logprob: -3.2387101650238037
    5. '+' → logprob: -3.3637101650238037
    6. '    ' → logprob: -3.4887101650238037
    7. '   ' → logprob: -5.738709926605225
    8. ' +' → logprob: -5.738709926605225
    9. '  ' → logprob: -6.488709926605225
    10. ' +=' → logprob: -7.238709926605225

Token 33: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25486427545547485
    2. '    ' → logprob: -2.12986421585083
    3. '*' → logprob: -3.12986421585083
    4. '   ' → logprob: -4.12986421585083
    5. ' *' → logprob: -4.50486421585083
    6. '+' → logprob: -4.62986421585083
    7. ' total' → logprob: -5.37986421585083
    8. 'total' → logprob: -5.50486421585083
    9. '<|end|>' → logprob: -5.50486421585083
    10. '  ' → logprob: -5.87986421585083

Token 34: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.9242939352989197
    2. ' total' → logprob: -1.2992939949035645
    3. ' ' → logprob: -1.4242939949035645
    4. '    ' → logprob: -3.2992939949035645
    5. '   ' → logprob: -3.9242939949035645
    6. '2' → logprob: -4.1742939949035645
    7. ' *' → logprob: -5.4242939949035645
    8. '1' → logprob: -5.7992939949035645
    9. '*' → logprob: -5.9242939949035645
    10. '  ' → logprob: -6.5492939949035645

Token 35: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.031891580671072006
    2. ' *=' → logprob: -3.5318915843963623
    3. '*' → logprob: -6.281891345977783
    4. '=' → logprob: -8.531891822814941
    5. ' <<=' → logprob: -10.156891822814941
    6. '+=' → logprob: -11.281891822814941
    7. '2' → logprob: -12.656891822814941
    8. ' ' → logprob: -12.781891822814941
    9. '```' → logprob: -12.781891822814941
    10. '<<' → logprob: -13.031891822814941

Token 36: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012494005495682359
    2. '3' → logprob: -6.876249313354492
    3. ' ' → logprob: -8.876249313354492
    4. '4' → logprob: -10.251249313354492
    5. '10' → logprob: -10.501249313354492
    6. '   ' → logprob: -12.126249313354492
    7. '5' → logprob: -13.001249313354492
    8. '  ' → logprob: -13.751249313354492
    9. '1' → logprob: -13.876249313354492
    10. '8' → logprob: -14.126249313354492

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012424940941855311
    2. '3' → logprob: -6.876242637634277
    3. '4' → logprob: -8.751242637634277
    4. ' ' → logprob: -10.251242637634277
    5. '10' → logprob: -12.626242637634277
    6. '   ' → logprob: -12.876242637634277
    7. '5' → logprob: -13.251242637634277
    8. '8' → logprob: -13.626242637634277
    9. '1' → logprob: -13.751242637634277
    10. '```' → logprob: -14.001242637634277

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.5774375200271606
    2. '(' → logprob: -0.8274375200271606
    3. '()' → logprob: -6.702437400817871
    4. '(total' → logprob: -9.327437400817871
    5. '('' → logprob: -9.577437400817871
    6. '(count' → logprob: -10.702437400817871
    7. '("' → logprob: -10.952437400817871
    8. ' (' → logprob: -11.202437400817871
    9. '(c' → logprob: -11.452437400817871
    10. 'cnt' → logprob: -11.577437400817871

Token 41: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -12.250008583068848
    3. '+' → logprob: -12.625008583068848
    4. '))' → logprob: -15.500008583068848
    5. '+)' → logprob: -16.375009536743164
    6. ')
' → logprob: -16.625009536743164
    7. ')`' → logprob: -17.125009536743164
    8. '`)' → logprob: -17.750009536743164
    9. '}' → logprob: -18.000009536743164
    10. '）' → logprob: -18.000009536743164

Token 42: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6733807325363159
    2. 'total' → logprob: -0.7983807325363159
    3. 'H' → logprob: -3.9233808517456055
    4. ' H' → logprob: -4.0483808517456055
    5. '1' → logprob: -6.0483808517456055
    6. ' ' → logprob: -8.048380851745605
    7. '(total' → logprob: -11.048380851745605
    8. 'Total' → logprob: -11.923380851745605
    9. ' cnt' → logprob: -12.298380851745605
    10. ' (' → logprob: -12.548380851745605

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ' )' → logprob: -11.250016212463379
    3. '))' → logprob: -14.375016212463379
    4. '+' → logprob: -14.375016212463379
    5. ')
' → logprob: -14.750016212463379
    6. '`)' → logprob: -14.875016212463379
    7. ')`' → logprob: -15.500016212463379
    8. '#' → logprob: -15.625016212463379
    9. '-' → logprob: -16.125015258789062
    10. '*' → logprob: -16.375015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 39.02%
Précision (top 10): 70.73%
================================================================================
