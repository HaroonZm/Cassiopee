================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import collections

def read_N_M():
    return [int(i) for i in input().split()]

def read_A():
    return [int(i) for i in input().split()]

def compute_prefix_sums(A):
    return [0] + list(itertools.accumulate(A))

def compute_remainders(prefix_sums, M):
    return [x % M for x in prefix_sums]

def count_remainders(remainders):
    d = collections.defaultdict(int)
    for r in remainders:
        d[r] += 1
    return d

def compute_combinations(count):
    if count < 2:
        return 0
    return count * (count - 1) // 2

def sum_combinations_for_remainders(rem_count_dict):
    ans = 0
    for v in rem_count_dict.values():
        ans += compute_combinations(v)
    return ans

def d_candy_distribution(N, M, A):
    prefix_sums = compute_prefix_sums(A)
    remainders = compute_remainders(prefix_sums, M)
    rem_count_dict = count_remainders(remainders)
    ans = sum_combinations_for_remainders(rem_count_dict)
    return ans

def main():
    N, M = read_N_M()
    A = read_A()
    print(d_candy_distribution(N, M, A))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9862216504407115e-05
    2. '```' → logprob: -12.625020027160645
    3. 'import' → logprob: -13.250020027160645
    4. '."""' → logprob: -13.500020027160645
    5. '\' → logprob: -13.625020027160645
    6. ' .' → logprob: -13.750020027160645
    7. '.

' → logprob: -13.750020027160645
    8. '\.' → logprob: -13.875020027160645
    9. '​.' → logprob: -14.125020027160645
    10. '.`' → logprob: -14.125020027160645

Token 4: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.771233320236206
    2. ' sys' → logprob: -1.146233320236206
    3. ' os' → logprob: -1.896233320236206
    4. ' collections' → logprob: -3.271233320236206
    5. ' functools' → logprob: -3.896233320236206
    6. 'os' → logprob: -5.896233558654785
    7. ' operator' → logprob: -6.271233558654785
    8. 'math' → logprob: -6.271233558654785
    9. 'sys' → logprob: -6.896233558654785
    10. 'collections' → logprob: -7.021233558654785

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022265026345849037
    2. '\' → logprob: -7.25222635269165
    3. 'import' → logprob: -8.002226829528809
    4. ',' → logprob: -8.377226829528809
    5. '.
' → logprob: -8.502226829528809
    6. '```' → logprob: -9.002226829528809
    7. '.

' → logprob: -9.002226829528809
    8. '#' → logprob: -9.002226829528809
    9. '\n' → logprob: -9.252226829528809
    10. '

' → logprob: -10.252226829528809

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0043311333283782005
    2. '#' → logprob: -7.254331111907959
    3. '_' → logprob: -7.254331111907959
    4. '.Counter' → logprob: -7.254331111907959
    5. ',' → logprob: -7.379331111907959
    6. '```' → logprob: -7.629331111907959
    7. '.
' → logprob: -8.129331588745117
    8. '\' → logprob: -8.504331588745117
    9. '`' → logprob: -9.004331588745117
    10. '=' → logprob: -9.754331588745117

Token 7: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2753748893737793
    2. ' factorial' → logprob: -2.2753748893737793
    3. ' itertools' → logprob: -2.5253748893737793
    4. '_' → logprob: -3.6503748893737793
    5. ' chain' → logprob: -5.525374889373779
    6. ' permutations' → logprob: -5.525374889373779
    7. ' calculate' → logprob: -5.900374889373779
    8. ' process' → logprob: -6.400374889373779
    9. ' factor' → logprob: -6.400374889373779
    10. ' _' → logprob: -6.525374889373779

Token 8: '_N' (ID: 3080)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2868330776691437
    2. '(' → logprob: -1.4118330478668213
    3. '_file' → logprob: -5.9118332862854
    4. '_line' → logprob: -7.0368332862854
    5. '_data' → logprob: -7.6618332862854
    6. '_csv' → logprob: -7.6618332862854
    7. ' (' → logprob: -8.536832809448242
    8. '_input' → logprob: -9.036832809448242
    9. '_(' → logprob: -9.411832809448242
    10. ':' → logprob: -9.786832809448242

Token 9: '_M' (ID: 2372)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.6239637732505798
    2. '_' → logprob: -1.4989638328552246
    3. 'ame' → logprob: -2.1239638328552246
    4. '()' → logprob: -2.4989638328552246
    5. 'um' → logprob: -4.248963832855225
    6. '(' → logprob: -4.873963832855225
    7. 'ames' → logprob: -5.373963832855225
    8. 'umbers' → logprob: -5.498963832855225
    9. '():' → logprob: -5.998963832855225
    10. 'a' → logprob: -6.873963832855225

Token 10: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1408458650112152
    2. '(' → logprob: -2.140845775604248
    3. '()' → logprob: -4.515845775604248
    4. '_' → logprob: -6.640845775604248
    5. '```' → logprob: -8.140846252441406
    6. 's' → logprob: -8.515846252441406
    7. '(_' → logprob: -9.140846252441406
    8. '(a' → logprob: -9.265846252441406
    9. ' ():' → logprob: -9.640846252441406
    10. '("("' → logprob: -10.140846252441406

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18758995831012726
    2. '```' → logprob: -2.6875898838043213
    3. ' return' → logprob: -3.3125898838043213
    4. '(' → logprob: -3.5625898838043213
    5. 'return' → logprob: -4.3125901222229
    6. ':' → logprob: -5.4375901222229
    7. '():' → logprob: -5.4375901222229
    8. '()' → logprob: -6.0625901222229
    9. '    
' → logprob: -6.4375901222229
    10. '(
' → logprob: -6.4375901222229

Token 12: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3585844337940216
    2. '   ' → logprob: -1.4835844039916992
    3. ' return' → logprob: -2.608584403991699
    4. ' ' → logprob: -8.6085844039917
    5. ' line' → logprob: -9.1085844039917
    6. 'n' → logprob: -9.2335844039917
    7. '    ' → logprob: -9.4835844039917
    8. '```' → logprob: -9.7335844039917
    9. 'line' → logprob: -9.8585844039917
    10. 'input' → logprob: -10.2335844039917

Token 13: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0375792421400547
    2. ' tuple' → logprob: -3.912579298019409
    3. ' list' → logprob: -4.41257905960083
    4. ' int' → logprob: -5.78757905960083
    5. 'map' → logprob: -6.91257905960083
    6. ' ' → logprob: -7.53757905960083
    7. 'tuple' → logprob: -9.662579536437988
    8. 'list' → logprob: -10.037579536437988
    9. 'int' → logprob: -10.537579536437988
    10. ' input' → logprob: -11.412579536437988

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.130576806142926e-05
    2. ']int' → logprob: -10.875031471252441
    3. ' int' → logprob: -11.625031471252441
    4. '   ' → logprob: -13.875031471252441
    5. '(int' → logprob: -14.125031471252441
    6. '<int' → logprob: -14.750031471252441
    7. 'i' → logprob: -15.125031471252441
    8. '0' → logprob: -15.500031471252441
    9. '[int' → logprob: -15.625031471252441
    10. '	int' → logprob: -15.625031471252441

Token 15: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02386992797255516
    2. '(i' → logprob: -4.77386999130249
    3. '(input' → logprob: -5.14886999130249
    4. '(' → logprob: -5.27386999130249
    5. '()]' → logprob: -5.89886999130249
    6. ']' → logprob: -7.14886999130249
    7. '(s' → logprob: -8.773869514465332
    8. 'input' → logprob: -8.773869514465332
    9. '(_)' → logprob: -9.148869514465332
    10. '(token' → logprob: -9.273869514465332

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001578182796947658
    2. '())' → logprob: -7.126578330993652
    3. '(x' → logprob: -7.376578330993652
    4. ' )' → logprob: -9.501578330993652
    5. 'for' → logprob: -11.001578330993652
    6. 'input' → logprob: -11.126578330993652
    7. '()' → logprob: -11.626578330993652
    8. ' for' → logprob: -11.876578330993652
    9. '(input' → logprob: -12.376578330993652
    10. ')]' → logprob: -12.376578330993652

Token 17: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26875486969947815
    2. ' for' → logprob: -1.8937548398971558
    3. ')' → logprob: -2.7687549591064453
    4. 'input' → logprob: -3.8937549591064453
    5. 'x' → logprob: -7.268754959106445
    6. '(x' → logprob: -7.893754959106445
    7. ' input' → logprob: -8.018754959106445
    8. '(input' → logprob: -8.643754959106445
    9. ' ' → logprob: -9.268754959106445
    10. ' x' → logprob: -9.393754959106445

Token 18: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2524930536746979
    2. 'input' → logprob: -1.5024930238723755
    3. '<|end|>' → logprob: -8.502492904663086
    4. '<|end|>' → logprob: -8.627492904663086
    5. ' ' → logprob: -10.002492904663086
    6. '=input' → logprob: -10.377492904663086
    7. ' raw' → logprob: -10.627492904663086
    8. ' in' → logprob: -10.877492904663086
    9. ' i' → logprob: -11.002492904663086
    10. '_input' → logprob: -11.377492904663086

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015191456768661737
    2. 'in' → logprob: -6.876519203186035
    3. 'input' → logprob: -8.001519203186035
    4. ' input' → logprob: -9.126519203186035
    5. ' ' → logprob: -10.376519203186035
    6. '<|end|>' → logprob: -13.251519203186035
    7. 'import' → logprob: -13.501519203186035
    8. '<|end|>' → logprob: -13.751519203186035
    9. 'range' → logprob: -14.001519203186035
    10. '=input' → logprob: -14.251519203186035

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022716462612152
    2. ' input' → logprob: -1.9102271795272827
    3. '(input' → logprob: -14.160226821899414
    4. 'range' → logprob: -14.285226821899414
    5. ' ' → logprob: -15.160226821899414
    6. '=input' → logprob: -15.410226821899414
    7. '	input' → logprob: -15.535226821899414
    8. '.input' → logprob: -15.535226821899414
    9. '<input' → logprob: -15.660226821899414
    10. '```' → logprob: -15.785226821899414

Token 21: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5531696677207947
    2. '().' → logprob: -1.5531697273254395
    3. '()]' → logprob: -1.5531697273254395
    4. '())' → logprob: -6.5531697273254395
    5. '(' → logprob: -8.428169250488281
    6. '()].' → logprob: -11.303169250488281
    7. '()"' → logprob: -11.678169250488281
    8. '()][' → logprob: -11.803169250488281
    9. ' ()' → logprob: -12.053169250488281
    10. '()`' → logprob: -12.053169250488281

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003195774042978883
    2. 'strip' → logprob: -5.753195762634277
    3. 'rstrip' → logprob: -11.003195762634277
    4. ' split' → logprob: -13.753195762634277
    5. 'spl' → logprob: -15.503195762634277
    6. 'read' → logprob: -16.628196716308594
    7. '(split' → logprob: -17.503196716308594
    8. ')' → logprob: -18.253196716308594
    9. ' strip' → logprob: -18.878196716308594
    10. ' ' → logprob: -20.003196716308594

Token 23: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.01827460713684559
    2. '())' → logprob: -4.518274784088135
    3. '()' → logprob: -5.018274784088135
    4. '(' → logprob: -7.518274784088135
    5. '('' → logprob: -10.393274307250977
    6. ')]' → logprob: -12.518274307250977
    7. '()],' → logprob: -13.768274307250977
    8. '()][' → logprob: -13.893274307250977
    9. '("' → logprob: -14.018274307250977
    10. '()`' → logprob: -14.018274307250977

Token 24: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6658890247344971
    2. '()]' → logprob: -1.415889024734497
    3. ')]' → logprob: -1.415889024734497
    4. '])' → logprob: -7.790888786315918
    5. ')' → logprob: -8.915888786315918
    6. '`]' → logprob: -9.415888786315918
    7. ' ]' → logprob: -10.165888786315918
    8. '])]' → logprob: -10.665888786315918
    9. ')])' → logprob: -10.790888786315918
    10. '(' → logprob: -11.165888786315918

Token 25: 'def' (ID: 1314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8949044942855835
    2. 'def' → logprob: -1.1449044942855835
    3. 'n' → logprob: -1.3949044942855835
    4. 'd' → logprob: -4.144904613494873
    5. '\' → logprob: -5.519904613494873
    6. '```' → logprob: -6.019904613494873
    7. '
' → logprob: -6.894904613494873
    8. 'a' → logprob: -7.394904613494873
    9. '\n' → logprob: -8.144904136657715
    10. '``' → logprob: -8.144904136657715

Token 26: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21650375425815582
    2. ' solve' → logprob: -1.8415037393569946
    3. ' read' → logprob: -3.966503858566284
    4. '_' → logprob: -5.341503620147705
    5. ' factorial' → logprob: -5.341503620147705
    6. ' count' → logprob: -6.841503620147705
    7. ' process' → logprob: -6.966503620147705
    8. ' solution' → logprob: -6.966503620147705
    9. 'main' → logprob: -7.216503620147705
    10. ' _' → logprob: -7.466503620147705

Token 27: '_A' (ID: 6829)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11185605823993683
    2. '_S' → logprob: -3.486855983734131
    3. '_list' → logprob: -3.861855983734131
    4. '_line' → logprob: -4.361855983734131
    5. '_T' → logprob: -4.611855983734131
    6. '_array' → logprob: -4.861855983734131
    7. '()' → logprob: -5.236855983734131
    8. '_A' → logprob: -5.361855983734131
    9. '_N' → logprob: -6.111855983734131
    10. '_a' → logprob: -6.361855983734131

Token 28: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.010312091559171677
    2. '()' → logprob: -4.635312080383301
    3. '_' → logprob: -7.760312080383301
    4. '():
' → logprob: -10.1353120803833
    5. '_list' → logprob: -10.2603120803833
    6. ' ()' → logprob: -11.3853120803833
    7. ' ():' → logprob: -11.6353120803833
    8. '[]' → logprob: -12.5103120803833
    9. '(' → logprob: -12.5103120803833
    10. '():

' → logprob: -12.6353120803833

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011805851245298982
    2. 'return' → logprob: -6.876180648803711
    3. ' return' → logprob: -8.876180648803711
    4. '[]' → logprob: -12.376180648803711
    5. '	return' → logprob: -13.751180648803711
    6. ' ' → logprob: -14.126180648803711
    7. '    ' → logprob: -14.126180648803711
    8. '       ' → logprob: -15.001180648803711
    9. '  ' → logprob: -15.376180648803711
    10. '[' → logprob: -15.376180648803711

Token 30: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18171976506710052
    2. '   ' → logprob: -2.1817197799682617
    3. ' return' → logprob: -2.9317197799682617
    4. ' ' → logprob: -11.806719779968262
    5. '  ' → logprob: -13.181719779968262
    6. '	return' → logprob: -13.681719779968262
    7. '    ' → logprob: -13.931719779968262
    8. '[' → logprob: -15.306719779968262
    9. 'list' → logprob: -15.931719779968262
    10. '```' → logprob: -16.056718826293945

Token 31: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3705505132675171
    2. ' [' → logprob: -1.620550513267517
    3. '[' → logprob: -2.7455506324768066
    4. '[list' → logprob: -3.1205506324768066
    5. ' list' → logprob: -6.245550632476807
    6. 'list' → logprob: -7.370550632476807
    7. '[input' → logprob: -7.495550632476807
    8. '[i' → logprob: -8.870550155639648
    9. ' ' → logprob: -9.620550155639648
    10. '[List' → logprob: -10.370550155639648

Token 32: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4021237802808173e-05
    2. ' int' → logprob: -11.250014305114746
    3. '(int' → logprob: -15.375014305114746
    4. '   ' → logprob: -15.625014305114746
    5. ']int' → logprob: -15.625014305114746
    6. ' ' → logprob: -15.750014305114746
    7. '[int' → logprob: -16.62501335144043
    8. '  ' → logprob: -16.75001335144043
    9. '<int' → logprob: -17.00001335144043
    10. '0' → logprob: -17.25001335144043

Token 33: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014368698000907898
    2. '(x' → logprob: -4.639368534088135
    3. '(' → logprob: -5.389368534088135
    4. '(s' → logprob: -11.139369010925293
    5. ' (' → logprob: -11.514369010925293
    6. '()' → logprob: -12.764369010925293
    7. '(ii' → logprob: -12.764369010925293
    8. '(a' → logprob: -13.514369010925293
    9. ' ' → logprob: -14.264369010925293
    10. 's' → logprob: -14.389369010925293

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7175450325012207
    2. '(i' → logprob: -0.8425450325012207
    3. '(x' → logprob: -2.8425450325012207
    4. '()' → logprob: -4.217545032501221
    5. 'for' → logprob: -5.717545032501221
    6. ' for' → logprob: -5.967545032501221
    7. '(input' → logprob: -7.092545032501221
    8. '(in' → logprob: -7.467545032501221
    9. '(' → logprob: -7.717545032501221
    10. '())' → logprob: -8.967544555664062

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8078407049179077
    2. 'for' → logprob: -1.4328407049179077
    3. '(' → logprob: -1.5578407049179077
    4. ')' → logprob: -2.4328408241271973
    5. '(input' → logprob: -4.932840824127197
    6. '(x' → logprob: -5.307840824127197
    7. '(i' → logprob: -6.057840824127197
    8. ' (' → logprob: -7.682840824127197
    9. ' in' → logprob: -7.932840824127197
    10. 'or' → logprob: -8.057840347290039

Token 36: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00802451092749834
    2. 'input' → logprob: -5.5080246925354
    3. ' ' → logprob: -6.2580246925354
    4. ' i' → logprob: -7.1330246925354
    5. '(input' → logprob: -7.1330246925354
    6. '(' → logprob: -8.758024215698242
    7. '_' → logprob: -9.008024215698242
    8. ' in' → logprob: -10.133024215698242
    9. ')' → logprob: -10.883024215698242
    10. 'i' → logprob: -10.883024215698242

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13660088181495667
    2. '(' → logprob: -2.636600971221924
    3. ' ' → logprob: -3.636600971221924
    4. 'in' → logprob: -3.761600971221924
    5. '(input' → logprob: -5.886600971221924
    6. ')' → logprob: -6.886600971221924
    7. '(in' → logprob: -7.636600971221924
    8. '()' → logprob: -7.636600971221924
    9. '_' → logprob: -7.761600971221924
    10. ' i' → logprob: -8.011600494384766

Token 38: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132631182670593
    2. 'input' → logprob: -1.313263177871704
    3. '(input' → logprob: -14.438262939453125
    4. ' ' → logprob: -15.813262939453125
    5. '	input' → logprob: -15.938262939453125
    6. '=input' → logprob: -16.188262939453125
    7. '<input' → logprob: -16.438262939453125
    8. '_input' → logprob: -16.688262939453125
    9. ')' → logprob: -17.438262939453125
    10. 'in' → logprob: -17.563262939453125

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008410908281803131
    2. '()' → logprob: -5.258410930633545
    3. '(' → logprob: -5.758410930633545
    4. '().'' → logprob: -11.758410453796387
    5. '()]' → logprob: -12.758410453796387
    6. '(.' → logprob: -13.633410453796387
    7. '.' → logprob: -13.633410453796387
    8. '()].' → logprob: -14.508410453796387
    9. ' ().' → logprob: -14.633410453796387
    10. '(

' → logprob: -15.383410453796387

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. 'strip' → logprob: -12.750003814697266
    3. ' split' → logprob: -14.500003814697266
    4. 'spl' → logprob: -17.000003814697266
    5. 'rstrip' → logprob: -17.375003814697266
    6. 's' → logprob: -19.000003814697266
    7. '(split' → logprob: -19.875003814697266
    8. 'plit' → logprob: -19.875003814697266
    9. '_split' → logprob: -20.125003814697266
    10. ')' → logprob: -20.500003814697266

Token 41: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.011549832299351692
    2. '()' → logprob: -4.511549949645996
    3. '())' → logprob: -8.136549949645996
    4. '(' → logprob: -8.511549949645996
    5. '()]
' → logprob: -13.386549949645996
    6. ')]' → logprob: -13.636549949645996
    7. '()][' → logprob: -13.886549949645996
    8. ']()' → logprob: -14.011549949645996
    9. ']' → logprob: -14.136549949645996
    10. '()`' → logprob: -14.511549949645996

Token 42: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4775451719760895
    2. ']' → logprob: -0.9775451421737671
    3. '()]' → logprob: -5.852545261383057
    4. ')' → logprob: -7.477545261383057
    5. ' ]' → logprob: -12.102544784545898
    6. '`]' → logprob: -12.727544784545898
    7. ']()' → logprob: -12.727544784545898
    8. '(' → logprob: -12.852544784545898
    9. '()' → logprob: -13.227544784545898
    10. ']
' → logprob: -13.227544784545898

Token 43: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22680246829986572
    2. 'n' → logprob: -2.351802349090576
    3. 'def' → logprob: -2.726802349090576
    4. 'N' → logprob: -3.351802349090576
    5. '
' → logprob: -5.726802349090576
    6. '\' → logprob: -5.976802349090576
    7. '

' → logprob: -7.601802349090576
    8. 'D' → logprob: -8.226802825927734
    9. '\n' → logprob: -8.726802825927734
    10. '```' → logprob: -9.101802825927734

Token 44: ' compute' (ID: 23864)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25789889693260193
    2. ' solve' → logprob: -2.3828988075256348
    3. ' main' → logprob: -3.1328988075256348
    4. ' r' → logprob: -3.5078988075256348
    5. ' ' → logprob: -4.007898807525635
    6. ' count' → logprob: -4.257898807525635
    7. ' read' → logprob: -4.882898807525635
    8. ' _' → logprob: -5.132898807525635
    9. ' f' → logprob: -6.132898807525635
    10. ' b' → logprob: -6.507898807525635

Token 45: '_prefix' (ID: 33197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023059581872075796
    2. '(' → logprob: -6.25230598449707
    3. '_(' → logprob: -8.62730598449707
    4. '_A' → logprob: -9.62730598449707
    5. '_sum' → logprob: -10.37730598449707
    6. '__' → logprob: -11.00230598449707
    7. ' _' → logprob: -11.00230598449707
    8. '_a' → logprob: -11.75230598449707
    9. '_max' → logprob: -12.00230598449707
    10. '_factor' → logprob: -12.37730598449707

Token 46: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008985616266727448
    2. '_sum' → logprob: -4.88398551940918
    3. '_s' → logprob: -6.63398551940918
    4. '_array' → logprob: -11.25898551940918
    5. '_length' → logprob: -11.38398551940918
    6. 's' → logprob: -11.63398551940918
    7. '_max' → logprob: -12.00898551940918
    8. '_suffix' → logprob: -12.50898551940918
    9. '_hash' → logprob: -13.25898551940918
    10. '_len' → logprob: -13.25898551940918

Token 47: 'ums' (ID: 6162)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5879330039024353
    2. 'ums' → logprob: -0.8379330039024353
    3. 'u' → logprob: -4.46293306350708
    4. 'quares' → logprob: -8.962932586669922
    5. 'uffix' → logprob: -9.587932586669922
    6. '[u' → logprob: -10.337932586669922
    7. '_u' → logprob: -10.337932586669922
    8. 't' → logprob: -10.837932586669922
    9. '(u' → logprob: -11.337932586669922
    10. '_' → logprob: -11.587932586669922

Token 48: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036544795148074627
    2. '_' → logprob: -6.003654479980469
    3. '(s' → logprob: -8.378654479980469
    4. '(a' → logprob: -8.378654479980469
    5. '(n' → logprob: -8.628654479980469
    6. '(A' → logprob: -9.628654479980469
    7. '(prefix' → logprob: -9.628654479980469
    8. '(_)' → logprob: -10.003654479980469
    9. ' (' → logprob: -10.128654479980469
    10. '()' → logprob: -10.503654479980469

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005050156614743173
    2. ')' → logprob: -8.000505447387695
    3. ' ):' → logprob: -8.875505447387695
    4. ',' → logprob: -11.375505447387695
    5. '):
' → logprob: -12.125505447387695
    6. ']:' → logprob: -12.250505447387695
    7. ':' → logprob: -12.500505447387695
    8. '[' → logprob: -13.750505447387695
    9. '[]):' → logprob: -14.125505447387695
    10. ' )' → logprob: -14.750505447387695

Token 50: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25612184405326843
    2. '   ' → logprob: -1.5061218738555908
    3. ':
' → logprob: -6.131121635437012
    4. ' :' → logprob: -6.631121635437012
    5. ' ' → logprob: -8.006121635437012
    6. '_' → logprob: -9.256121635437012
    7. ' :
' → logprob: -9.881121635437012
    8. '  ' → logprob: -10.006121635437012
    9. '[' → logprob: -10.381121635437012
    10. '    ' → logprob: -10.756121635437012

Token 51: ' return' (ID: 622)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.3257807195186615
    2. ' p' → logprob: -1.7007807493209839
    3. '   ' → logprob: -2.8257806301116943
    4. 'prefix' → logprob: -3.9507806301116943
    5. '    ' → logprob: -4.825780868530273
    6. 'p' → logprob: -5.575780868530273
    7. ' 
' → logprob: -6.325780868530273
    8. ' ' → logprob: -6.575780868530273
    9. ' s' → logprob: -7.575780868530273
    10. '_' → logprob: -8.200780868530273

Token 52: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5234432220458984
    2. ' [' → logprob: -0.8984432220458984
    3. ' ' → logprob: -9.023443222045898
    4. ' itertools' → logprob: -9.023443222045898
    5. 'it' → logprob: -10.398443222045898
    6. '[it' → logprob: -11.148443222045898
    7. '[A' → logprob: -11.898443222045898
    8. '0' → logprob: -12.773443222045898
    9. '[i' → logprob: -12.898443222045898
    10. 'collections' → logprob: -12.898443222045898

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'A' → logprob: -17.62502098083496
    4. '   ' → logprob: -18.00002098083496
    5. '۰' → logprob: -18.00002098083496
    6. ')' → logprob: -18.25002098083496
    7. '
' → logprob: -18.50002098083496
    8. ' ' → logprob: -19.06252098083496
    9. '０' → logprob: -19.06252098083496
    10. '_' → logprob: -19.87502098083496

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1510845571756363
    2. ',' → logprob: -2.1510846614837646
    3. ']+' → logprob: -3.7760846614837646
    4. ' ]' → logprob: -7.0260844230651855
    5. ' ' → logprob: -10.776084899902344
    6. '+' → logprob: -11.651084899902344
    7. '+]' → logprob: -11.651084899902344
    8. ']+=' → logprob: -11.901084899902344
    9. ',
' → logprob: -12.276084899902344
    10. ' ,' → logprob: -12.401084899902344

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018112368881702423
    2. ' +' → logprob: -4.1431121826171875
    3. ' ' → logprob: -6.7681121826171875
    4. ']+' → logprob: -8.018112182617188
    5. ']' → logprob: -8.768112182617188
    6. ',' → logprob: -9.143112182617188
    7. '
' → logprob: -10.018112182617188
    8. '[' → logprob: -10.143112182617188
    9. '(' → logprob: -10.268112182617188
    10. '+
' → logprob: -10.643112182617188

Token 56: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0036407709121704
    2. ' list' → logprob: -1.5036407709121704
    3. 'A' → logprob: -1.8786407709121704
    4. '[' → logprob: -2.503640651702881
    5. '[A' → logprob: -2.878640651702881
    6. ' A' → logprob: -3.128640651702881
    7. ' [' → logprob: -3.378640651702881
    8. '[list' → logprob: -3.628640651702881
    9. '[i' → logprob: -4.753640651702881
    10. 'it' → logprob: -5.503640651702881

Token 57: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.0002901757834479213
    2. '(' → logprob: -8.250289916992188
    3. '(map' → logprob: -10.625289916992188
    4. 'it' → logprob: -13.125289916992188
    5. '(acc' → logprob: -13.375289916992188
    6. ' itertools' → logprob: -15.000289916992188
    7. '(list' → logprob: -15.625289916992188
    8. '(iter' → logprob: -16.500289916992188
    9. '(i' → logprob: -16.875289916992188
    10. '	it' → logprob: -17.250289916992188

Token 58: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.00019412329129409045
    2. 'er' → logprob: -9.250194549560547
    3. 'ert' → logprob: -9.375194549560547
    4. 'erto' → logprob: -11.875194549560547
    5. 'tools' → logprob: -12.250194549560547
    6. 'ools' → logprob: -13.875194549560547
    7. 'erol' → logprob: -15.750194549560547
    8. 'erm' → logprob: -16.000194549560547
    9. 'ertu' → logprob: -16.500194549560547
    10. 'ern' → logprob: -17.500194549560547

Token 59: '.acc' (ID: 70239)
  Prédit: '.acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.acc' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.62500286102295
    3. '	acc' → logprob: -14.25000286102295
    4. 'acc' → logprob: -15.12500286102295
    5. '.Acc' → logprob: -15.50000286102295
    6. '.ac' → logprob: -15.75000286102295
    7. ' accumulate' → logprob: -16.000001907348633
    8. '_acc' → logprob: -16.750001907348633
    9. ' .' → logprob: -17.250001907348633
    10. '.chain' → logprob: -17.500001907348633

Token 60: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0008327359100803733
    2. 'um' → logprob: -7.125832557678223
    3. 'umulative' → logprob: -11.625832557678223
    4. 'umul' → logprob: -12.000832557678223
    5. 'umulator' → logprob: -12.750832557678223
    6. '```' → logprob: -13.125832557678223
    7. 'uml' → logprob: -13.250832557678223
    8. 'umal' → logprob: -14.125832557678223
    9. 'umu' → logprob: -14.250832557678223
    10. 'ount' → logprob: -14.500832557678223

Token 61: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0031838975846767426
    2. '(' → logprob: -5.753183841705322
    3. ')' → logprob: -12.37818431854248
    4. '(
' → logprob: -14.12818431854248
    5. ' (' → logprob: -14.62818431854248
    6. ')(' → logprob: -15.00318431854248
    7. 'A' → logprob: -15.62818431854248
    8. '(I' → logprob: -16.003183364868164
    9. '((' → logprob: -17.003183364868164
    10. '(i' → logprob: -17.503183364868164

Token 62: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008129627676680684
    2. ')' → logprob: -7.250813007354736
    3. ' ))' → logprob: -9.625812530517578
    4. ')))' → logprob: -10.875812530517578
    5. ')]' → logprob: -11.750812530517578
    6. ' ' → logprob: -12.625812530517578
    7. '()))' → logprob: -13.125812530517578
    8. '   ' → logprob: -13.625812530517578
    9. '))
' → logprob: -14.125812530517578
    10. '(' → logprob: -14.125812530517578

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16518189013004303
    2. '

' → logprob: -2.915181875228882
    3. '
' → logprob: -3.040181875228882
    4. '(' → logprob: -4.040182113647461
    5. '<|end|>' → logprob: -4.040182113647461
    6. ' def' → logprob: -5.540182113647461
    7. '[' → logprob: -6.165182113647461
    8. '\' → logprob: -6.415182113647461
    9. '_' → logprob: -6.665182113647461
    10. '\n' → logprob: -6.915182113647461

Token 64: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.12287330627441406
    2. ' find' → logprob: -3.747873306274414
    3. ' calculate' → logprob: -3.872873306274414
    4. ' ' → logprob: -3.872873306274414
    5. ' solve' → logprob: -4.122873306274414
    6. '_' → logprob: -4.747873306274414
    7. ' _' → logprob: -5.122873306274414
    8. ' def' → logprob: -5.997873306274414
    9. ' process' → logprob: -5.997873306274414
    10. ' analyze' → logprob: -6.372873306274414

Token 65: '_re' (ID: 3067)
  Prédit: '_suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_suffix' → logprob: -0.7680102586746216
    2. '_prefix' → logprob: -1.5180102586746216
    3. '_' → logprob: -2.018010139465332
    4. '_max' → logprob: -2.393010139465332
    5. '_sub' → logprob: -3.393010139465332
    6. '_frequency' → logprob: -3.893010139465332
    7. '_counts' → logprob: -5.268010139465332
    8. '_freq' → logprob: -5.643010139465332
    9. '_total' → logprob: -6.018010139465332
    10. '_segment' → logprob: -6.143010139465332

Token 66: 'ma' (ID: 809)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9585127234458923
    2. 'verse' → logprob: -1.083512783050537
    3. 'mainder' → logprob: -1.833512783050537
    4. 's' → logprob: -4.083512783050537
    5. 'main' → logprob: -4.083512783050537
    6. 'v' → logprob: -4.708512783050537
    7. 'peat' → logprob: -4.833512783050537
    8. 'quired' → logprob: -4.833512783050537
    9. '_' → logprob: -4.958512783050537
    10. 'peated' → logprob: -5.083512783050537

Token 67: 'inders' (ID: 41077)
  Prédit: 'inder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.008304862305521965
    2. 'inders' → logprob: -5.258305072784424
    3. 'ining' → logprob: -6.133305072784424
    4. 'inde' → logprob: -7.633305072784424
    5. 'ind' → logprob: -8.758304595947266
    6. 'i' → logprob: -10.133304595947266
    7. 'indered' → logprob: -10.133304595947266
    8. 'nder' → logprob: -10.633304595947266
    9. 'inding' → logprob: -10.758304595947266
    10. '_' → logprob: -11.133304595947266

Token 68: '(prefix' (ID: 59324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.389484703540802
    2. '(A' → logprob: -1.1394846439361572
    3. '(s' → logprob: -6.514484882354736
    4. ' (' → logprob: -7.639484882354736
    5. '_' → logprob: -9.014484405517578
    6. '((' → logprob: -9.514484405517578
    7. '(_' → logprob: -9.639484405517578
    8. '(N' → logprob: -9.889484405517578
    9. '(_)' → logprob: -10.264484405517578
    10. '(prefix' → logprob: -10.514484405517578

Token 69: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.015423684380948544
    2. '_' → logprob: -4.265423774719238
    3. '_sum' → logprob: -7.515423774719238
    4. ')' → logprob: -8.515423774719238
    5. '_)' → logprob: -8.515423774719238
    6. ' _' → logprob: -9.140423774719238
    7. ')_' → logprob: -9.390423774719238
    8. '[_' → logprob: -10.515423774719238
    9. 's' → logprob: -11.140423774719238
    10. '   ' → logprob: -11.140423774719238

Token 70: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.001246185740455985
    2. 'um' → logprob: -8.126246452331543
    3. '```' → logprob: -8.251246452331543
    4. 's' → logprob: -9.126246452331543
    5. '   ' → logprob: -9.501246452331543
    6. 'u' → logprob: -9.626246452331543
    7. '[' → logprob: -10.126246452331543
    8. 'us' → logprob: -10.751246452331543
    9. '           ' → logprob: -10.876246452331543
    10. ')' → logprob: -10.876246452331543

Token 71: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25439760088920593
    2. ',' → logprob: -1.5043976306915283
    3. ')' → logprob: -6.254397392272949
    4. ' ):' → logprob: -8.75439739227295
    5. ' ,' → logprob: -9.12939739227295
    6. ',n' → logprob: -9.87939739227295
    7. ':' → logprob: -10.12939739227295
    8. ',p' → logprob: -10.37939739227295
    9. '):
' → logprob: -10.75439739227295
    10. ',k' → logprob: -11.12939739227295

Token 72: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.1702820509672165
    2. 'M' → logprob: -2.7952821254730225
    3. ' N' → logprob: -2.7952821254730225
    4. ' K' → logprob: -4.420281887054443
    5. 'N' → logprob: -4.545281887054443
    6. ')' → logprob: -6.045281887054443
    7. ' m' → logprob: -6.295281887054443
    8. 'K' → logprob: -6.670281887054443
    9. 'm' → logprob: -6.795281887054443
    10. ' )' → logprob: -6.795281887054443

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008542861323803663
    2. ')' → logprob: -7.3758544921875
    3. ':' → logprob: -8.7508544921875
    4. ' ):' → logprob: -10.3758544921875
    5. ',' → logprob: -10.5008544921875
    6. '):
' → logprob: -11.7508544921875
    7. '=' → logprob: -14.3758544921875
    8. ']:' → logprob: -14.5008544921875
    9. ' ' → logprob: -14.8758544921875
    10. ')：' → logprob: -15.1258544921875

Token 74: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002502771094441414
    2. ' :' → logprob: -7.252502918243408
    3. '   ' → logprob: -7.377502918243408
    4. '=' → logprob: -8.25250244140625
    5. '{' → logprob: -8.62750244140625
    6. '[:]' → logprob: -8.75250244140625
    7. '):' → logprob: -9.00250244140625
    8. ' =' → logprob: -9.25250244140625
    9. '():' → logprob: -9.50250244140625
    10. '[' → logprob: -9.75250244140625

Token 75: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09866786003112793
    2. 'return' (adapté à ' return') → logprob: -3.473667860031128
    3. ' return' → logprob: -3.723667860031128
    4. '   ' → logprob: -3.848667860031128
    5. ' [' → logprob: -4.473668098449707
    6. 'collections' → logprob: -6.098668098449707
    7. '[:]' → logprob: -7.473668098449707
    8. '=' → logprob: -7.473668098449707
    9. ' collections' → logprob: -7.598668098449707
    10. '[(' → logprob: -7.598668098449707

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38319817185401917
    2. ' [' → logprob: -2.1331982612609863
    3. '[(' → logprob: -2.1331982612609863
    4. '[p' → logprob: -3.0081982612609863
    5. ' [(' → logprob: -4.383198261260986
    6. '[len' → logprob: -5.383198261260986
    7. '[i' → logprob: -5.633198261260986
    8. '[counter' → logprob: -5.883198261260986
    9. 'collections' → logprob: -5.883198261260986
    10. '[col' → logprob: -6.133198261260986

Token 77: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14597931504249573
    2. 'ps' → logprob: -2.520979404449463
    3. 'p' → logprob: -3.145979404449463
    4. 's' → logprob: -5.520979404449463
    5. '(x' → logprob: -5.520979404449463
    6. '(ps' → logprob: -6.270979404449463
    7. '(p' → logprob: -7.020979404449463
    8. '(s' → logprob: -7.645979404449463
    9. 'psum' → logprob: -7.895979404449463
    10. 'prefix' → logprob: -8.270978927612305

Token 78: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.28118157386779785
    2. ' %' → logprob: -1.4061815738677979
    3. ' ' → logprob: -11.906181335449219
    4. ' ' → logprob: -12.281181335449219
    5. '%x' → logprob: -13.156181335449219
    6. ')' → logprob: -13.156181335449219
    7. 's' → logprob: -13.156181335449219
    8. '`' → logprob: -13.281181335449219
    9. '％' → logprob: -13.281181335449219
    10. '%i' → logprob: -13.531181335449219

Token 79: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.07889033854007721
    2. ' M' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.578890800476074
    4. '   ' → logprob: -16.828889846801758
    5. '  ' → logprob: -17.328889846801758
    6. '	M' → logprob: -17.953889846801758
    7. ' ' → logprob: -18.328889846801758
    8. '>M' → logprob: -18.828889846801758
    9. '(M' → logprob: -19.578889846801758
    10. '```' → logprob: -19.828889846801758

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07919016480445862
    2. 'for' → logprob: -2.579190254211426
    3. ')' → logprob: -9.204190254211426
    4. ' ' → logprob: -9.204190254211426
    5. ']' → logprob: -9.829190254211426
    6. '	for' → logprob: -10.704190254211426
    7. '   ' → logprob: -10.954190254211426
    8. '
' → logprob: -13.704190254211426
    9. '  ' → logprob: -13.829190254211426
    10. ' in' → logprob: -14.204190254211426

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02772808074951172
    2. 'x' → logprob: -4.402728080749512
    3. ' prefix' → logprob: -4.402728080749512
    4. 'prefix' → logprob: -5.902728080749512
    5. ' ' → logprob: -9.277728080749512
    6. '<|end|>' → logprob: -11.527728080749512
    7. ' in' → logprob: -11.902728080749512
    8. '	x' → logprob: -12.402728080749512
    9. '<|end|>' → logprob: -12.652728080749512
    10. '(prefix' → logprob: -12.902728080749512

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20329125225543976
    2. 'in' → logprob: -1.7032912969589233
    3. '_' → logprob: -6.828291416168213
    4. ' ' → logprob: -8.328290939331055
    5. 'n' → logprob: -8.453290939331055
    6. 'prefix' → logprob: -8.953290939331055
    7. '<|end|>' → logprob: -9.703290939331055
    8. 's' → logprob: -10.328290939331055
    9. ' i' → logprob: -10.703290939331055
    10. ' prefix' → logprob: -11.078290939331055

Token 83: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5759424567222595
    2. 'prefix' → logprob: -0.8259424567222595
    3. '(prefix' → logprob: -12.825942039489746
    4. '_prefix' → logprob: -15.950942039489746
    5. ' ' → logprob: -16.950942993164062
    6. 'refix' → logprob: -17.450942993164062
    7. '.prefix' → logprob: -17.700942993164062
    8. '
' → logprob: -17.950942993164062
    9. '   ' → logprob: -18.575942993164062
    10. '-prefix' → logprob: -18.700942993164062

Token 84: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -13.875000953674316
    3. '_' → logprob: -18.125001907348633
    4. '_sum' → logprob: -18.250001907348633
    5. '_re' → logprob: -18.375001907348633
    6. '_m' → logprob: -18.875001907348633
    7. 'summ' → logprob: -20.000001907348633
    8. '_suffix' → logprob: -20.625001907348633
    9. '_counts' → logprob: -21.125001907348633
    10. '_prefix' → logprob: -21.250001907348633

Token 85: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.006878768093883991
    2. 's' → logprob: -5.006878852844238
    3. '_s' → logprob: -9.756878852844238
    4. 'u' → logprob: -10.506878852844238
    5. 'um' → logprob: -10.881878852844238
    6. '[' → logprob: -11.631878852844238
    7. '_' → logprob: -11.756878852844238
    8. ' sums' → logprob: -11.881878852844238
    9. '```' → logprob: -12.256878852844238
    10. 'us' → logprob: -12.506878852844238

Token 86: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001593195047462359
    2. ' ]' → logprob: -8.87515926361084
    3. ']
' → logprob: -11.25015926361084
    4. ')]' → logprob: -12.25015926361084
    5. ']

' → logprob: -14.25015926361084
    6. ')' → logprob: -15.25015926361084
    7. '()]' → logprob: -15.50015926361084
    8. '']' → logprob: -15.62515926361084
    9. '`]' → logprob: -15.75015926361084
    10. '   ' → logprob: -16.000160217285156

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008995542302727699
    2. 'from' → logprob: -7.500899791717529
    3. '```' → logprob: -8.875899314880371
    4. 'import' → logprob: -9.125899314880371
    5. 'collections' → logprob: -10.375899314880371
    6. '<|end|>' → logprob: -11.375899314880371
    7. '_' → logprob: -11.750899314880371
    8. 'de' → logprob: -11.875899314880371
    9. '#' → logprob: -12.125899314880371
    10. '``' → logprob: -12.500899314880371

Token 88: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.032591864466667175
    2. ' find' → logprob: -3.9075918197631836
    3. ' compute' → logprob: -5.032591819763184
    4. ' main' → logprob: -6.157591819763184
    5. ' group' → logprob: -6.657591819763184
    6. '_count' → logprob: -7.907591819763184
    7. 'count' → logprob: -8.032591819763184
    8. '_' → logprob: -8.532591819763184
    9. ' solve' → logprob: -8.532591819763184
    10. ' get' → logprob: -8.907591819763184

Token 89: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3098392188549042
    2. '_sub' → logprob: -1.5598392486572266
    3. '_pairs' → logprob: -3.8098392486572266
    4. '_re' → logprob: -4.684839248657227
    5. '_occ' → logprob: -4.809839248657227
    6. '_s' → logprob: -5.809839248657227
    7. '_prefix' → logprob: -6.059839248657227
    8. '_m' → logprob: -6.059839248657227
    9. '_unique' → logprob: -6.559839248657227
    10. '_div' → logprob: -6.684839248657227

Token 90: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.13049544394016266
    2. 'm' → logprob: -2.505495548248291
    3. 'mainder' → logprob: -3.255495548248291
    4. 'main' → logprob: -6.380495548248291
    5. '```' → logprob: -9.130495071411133
    6. 'mad' → logprob: -9.630495071411133
    7. 's' → logprob: -10.130495071411133
    8. 'mai' → logprob: -10.380495071411133
    9. 'peated' → logprob: -10.630495071411133
    10. 'man' → logprob: -11.005495071411133

Token 91: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.1570599228143692
    2. 'inder' → logprob: -2.032059907913208
    3. 'nders' → logprob: -4.407060146331787
    4. 'nder' → logprob: -6.532060146331787
    5. 'inde' → logprob: -8.532059669494629
    6. 'ind' → logprob: -8.782059669494629
    7. 'indered' → logprob: -9.032059669494629
    8. 'in' → logprob: -9.782059669494629
    9. 'iners' → logprob: -10.657059669494629
    10. 'nd' → logprob: -11.032059669494629

Token 92: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03483867272734642
    2. '(re' → logprob: -3.7848386764526367
    3. '_' → logprob: -5.034838676452637
    4. '(rem' → logprob: -6.909838676452637
    5. '(collection' → logprob: -7.159838676452637
    6. '(prefix' → logprob: -7.284838676452637
    7. '_counts' → logprob: -7.534838676452637
    8. '(count' → logprob: -7.659838676452637
    9. '_re' → logprob: -8.659838676452637
    10. '(counter' → logprob: -8.784838676452637

Token 93: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.00482786912471056
    2. 'm' → logprob: -5.629827976226807
    3. 'mainder' → logprob: -7.004827976226807
    4. 's' → logprob: -8.754827499389648
    5. 'main' → logprob: -9.004827499389648
    6. 'mad' → logprob: -12.004827499389648
    7. 'mand' → logprob: -12.379827499389648
    8. 'st' → logprob: -12.504827499389648
    9. 'mai' → logprob: -12.504827499389648
    10. 'ms' → logprob: -13.004827499389648

Token 94: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.011044645681977272
    2. 'nders' → logprob: -4.761044502258301
    3. 'inder' → logprob: -6.386044502258301
    4. 'inde' → logprob: -8.1360445022583
    5. 'a' → logprob: -9.3860445022583
    6. 'anders' → logprob: -9.3860445022583
    7. 'iners' → logprob: -9.7610445022583
    8. 'unders' → logprob: -10.3860445022583
    9. '_index' → logprob: -10.7610445022583
    10. 'ders' → logprob: -10.8860445022583

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020403447560966015
    2. ' ):' → logprob: -6.377040386199951
    3. ')' → logprob: -8.627039909362793
    4. '):
' → logprob: -8.877039909362793
    5. ',' → logprob: -11.502039909362793
    6. ':' → logprob: -12.877039909362793
    7. '   ' → logprob: -13.377039909362793
    8. ' )' → logprob: -14.002039909362793
    9. '):
' → logprob: -14.002039909362793
    10. ' ' → logprob: -14.877039909362793

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009544557542540133
    2. ' collections' → logprob: -7.625954627990723
    3. 'collections' → logprob: -8.125954627990723
    4. '(collection' → logprob: -10.375954627990723
    5. ' counter' → logprob: -10.500954627990723
    6. '():' → logprob: -10.750954627990723
    7. '():
' → logprob: -10.875954627990723
    8. '):
' → logprob: -11.000954627990723
    9. '_counter' → logprob: -11.750954627990723
    10. '):' → logprob: -11.875954627990723

Token 97: ' d' (ID: 272)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.4926163852214813
    2. '   ' → logprob: -1.7426164150238037
    3. ' collections' → logprob: -2.1176164150238037
    4. ' return' → logprob: -3.1176164150238037
    5. 'return' → logprob: -3.1176164150238037
    6. 'counter' → logprob: -5.992616176605225
    7. ' counter' → logprob: -6.242616176605225
    8. 'collection' → logprob: -8.867616653442383
    9. ' ' → logprob: -9.117616653442383
    10. ' collection' → logprob: -9.242616653442383

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7750646471977234
    2. '=' → logprob: -0.9000646471977234
    3. 'ef' → logprob: -2.025064706802368
    4. ' ' → logprob: -7.900064468383789
    5. 'ict' → logprob: -9.525064468383789
    6. 'efs' → logprob: -9.650064468383789
    7. 'e' → logprob: -9.900064468383789
    8. 'efa' → logprob: -10.150064468383789
    9. 'a' → logprob: -10.275064468383789
    10. 'eft' → logprob: -10.400064468383789

Token 99: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.31326285004615784
    2. 'collections' → logprob: -1.3132628202438354
    3. '.collections' → logprob: -14.563262939453125
    4. ' collection' → logprob: -15.313262939453125
    5. 'collection' → logprob: -15.563262939453125
    6. ' ' → logprob: -16.563262939453125
    7. 'Collections' → logprob: -16.938262939453125
    8. 'collect' → logprob: -17.313262939453125
    9. '   ' → logprob: -17.688262939453125
    10. '(collection' → logprob: -17.938262939453125

Token 100: '.default' (ID: 15648)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.0012741618556901813
    2. '.' → logprob: -6.751274108886719
    3. '.default' → logprob: -9.251274108886719
    4. ' .' → logprob: -11.876274108886719
    5. 'Counter' → logprob: -15.376274108886719
    6. '.Default' → logprob: -15.751274108886719
    7. '.counter' → logprob: -16.00127410888672
    8. ' Counter' → logprob: -16.25127410888672
    9. '.C' → logprob: -16.37627410888672
    10. '.Order' → logprob: -16.87627410888672

Token 101: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.1472419600977446e-06
    2. ' dict' → logprob: -14.000000953674316
    3. 'ict' → logprob: -15.250000953674316
    4. 'Dict' → logprob: -20.125001907348633
    5. 'dic' → logprob: -21.250001907348633
    6. 'd' → logprob: -21.375001907348633
    7. 'ct' → logprob: -22.000001907348633
    8. '_dict' → logprob: -22.750001907348633
    9. 'def' → logprob: -23.375001907348633
    10. '.dict' → logprob: -23.875001907348633

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00030924470047466457
    2. '(' → logprob: -8.500308990478516
    3. ' (' → logprob: -10.375308990478516
    4. 'int' → logprob: -10.625308990478516
    5. '(lambda' → logprob: -10.625308990478516
    6. '<int' → logprob: -10.750308990478516
    7. '(
' → logprob: -13.375308990478516
    8. '[int' → logprob: -13.750308990478516
    9. '<|end|>' → logprob: -14.375308990478516
    10. ']int' → logprob: -15.125308990478516

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004237627435941249
    2. ' )' → logprob: -8.125423431396484
    3. ')
' → logprob: -9.250423431396484
    4. '   ' → logprob: -10.625423431396484
    5. ')d' → logprob: -12.500423431396484
    6. ' ' → logprob: -13.375423431396484
    7. ')

' → logprob: -14.375423431396484
    8. ' )
' → logprob: -14.875423431396484
    9. ')
' → logprob: -15.250423431396484
    10. ',' → logprob: -15.375423431396484

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19601188600063324
    2. ' for' → logprob: -1.8210119009017944
    3. 'for' → logprob: -4.196012020111084
    4. ' ' → logprob: -7.571012020111084
    5. '    
' → logprob: -7.946012020111084
    6. '<|end|>' → logprob: -9.821011543273926
    7. '	for' → logprob: -10.321011543273926
    8. '    ' → logprob: -10.446011543273926
    9. '
' → logprob: -10.446011543273926
    10. ' 
' → logprob: -10.946011543273926

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08510271459817886
    2. '   ' → logprob: -2.5851027965545654
    3. ' for' → logprob: -5.085102558135986
    4. '    
' → logprob: -12.960103034973145
    5. '	for' → logprob: -12.960103034973145
    6. '
' → logprob: -14.960103034973145
    7. ' ' → logprob: -14.960103034973145
    8. ' 
' → logprob: -17.085102081298828
    9. '  ' → logprob: -17.460102081298828
    10. '  
' → logprob: -17.710102081298828

Token 106: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5281521677970886
    2. ' r' → logprob: -0.9031521677970886
    3. ' rem' → logprob: -6.403151988983154
    4. 'x' → logprob: -6.653151988983154
    5. 'rem' → logprob: -6.778151988983154
    6. ' x' → logprob: -7.278151988983154
    7. ' remainder' → logprob: -8.778152465820312
    8. ' ' → logprob: -10.653152465820312
    9. '```' → logprob: -11.153152465820312
    10. 're' → logprob: -11.403152465820312

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015479490393772721
    2. 'in' → logprob: -7.001547813415527
    3. ' ' → logprob: -7.501547813415527
    4. ' :' → logprob: -11.126547813415527
    5. ':' → logprob: -11.501547813415527
    6. '  ' → logprob: -11.626547813415527
    7. ',' → logprob: -11.626547813415527
    8. 'e' → logprob: -12.126547813415527
    9. '   ' → logprob: -12.126547813415527
    10. 's' → logprob: -12.251547813415527

Token 108: ' re' (ID: 322)
  Prédit: 'rema'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rema' → logprob: -0.08194676041603088
    2. ' re' → logprob: -2.581946849822998
    3. 'ream' → logprob: -6.581946849822998
    4. 're' → logprob: -7.081946849822998
    5. 'rem' → logprob: -7.581946849822998
    6. 'reme' → logprob: -8.83194637298584
    7. 'remen' → logprob: -9.95694637298584
    8. 'reman' → logprob: -10.08194637298584
    9. 'rea' → logprob: -10.70694637298584
    10. ' ' → logprob: -11.70694637298584

Token 109: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.0006893210811540484
    2. 'mainder' → logprob: -8.125689506530762
    3. 'main' → logprob: -9.375689506530762
    4. 'mares' → logprob: -9.500689506530762
    5. 'm' → logprob: -9.875689506530762
    6. 'rema' → logprob: -10.000689506530762
    7. 'mai' → logprob: -10.000689506530762
    8. 'mare' → logprob: -10.375689506530762
    9. 'mma' → logprob: -11.750689506530762
    10. 'ema' → logprob: -12.250689506530762

Token 110: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.007695586886256933
    2. 'nders' → logprob: -4.88269567489624
    3. 'ders' → logprob: -10.257695198059082
    4. 'iners' → logprob: -11.007695198059082
    5. 'inder' → logprob: -11.257695198059082
    6. 'iders' → logprob: -11.757695198059082
    7. '   ' → logprob: -12.632695198059082
    8. 'inde' → logprob: -12.632695198059082
    9. '```' → logprob: -12.882695198059082
    10. '[' → logprob: -13.132695198059082

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002757448935881257
    2. ' :' → logprob: -6.252757549285889
    3. ':
' → logprob: -7.252757549285889
    4. '   ' → logprob: -9.75275707244873
    5. ' :
' → logprob: -10.75275707244873
    6. '):' → logprob: -11.00275707244873
    7. ':d' → logprob: -11.75275707244873
    8. ',' → logprob: -11.75275707244873
    9. '       ' → logprob: -13.62775707244873
    10. ':def' → logprob: -13.75275707244873

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005098326131701469
    2. 'd' → logprob: -6.005098342895508
    3. ' d' → logprob: -6.130098342895508
    4. '   ' → logprob: -7.755098342895508
    5. ',d' → logprob: -13.005098342895508
    6. '
' → logprob: -13.380098342895508
    7. '    ' → logprob: -13.630098342895508
    8. ' ' → logprob: -13.755098342895508
    9. '      ' → logprob: -13.880098342895508
    10. '    
' → logprob: -14.130098342895508

Token 113: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2097887247800827
    2. 'd' (adapté à ' d') → logprob: -1.7097886800765991
    3. '       ' → logprob: -4.834788799285889
    4. '   ' → logprob: -7.959788799285889
    5. '	d' → logprob: -11.45978832244873
    6. ' ' → logprob: -12.08478832244873
    7. '           ' → logprob: -12.08478832244873
    8. '
' → logprob: -12.33478832244873
    9. '    ' → logprob: -12.70978832244873
    10. ')d' → logprob: -12.83478832244873

Token 114: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.250014305114746
    3. '[d' → logprob: -14.125014305114746
    4. 'r' → logprob: -15.625014305114746
    5. ' [' → logprob: -16.75001335144043
    6. '```' → logprob: -17.87501335144043
    7. '	r' → logprob: -19.00001335144043
    8. '

' → logprob: -19.25001335144043
    9. '[
' → logprob: -19.62501335144043
    10. '[...]' → logprob: -20.00001335144043

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03859803080558777
    2. ']+=' → logprob: -3.28859806060791
    3. ' ]' → logprob: -7.78859806060791
    4. '+=' → logprob: -9.28859806060791
    5. ' +=' → logprob: -10.16359806060791
    6. '+]' → logprob: -12.28859806060791
    7. '']' → logprob: -12.91359806060791
    8. ')' → logprob: -13.41359806060791
    9. '+' → logprob: -14.66359806060791
    10. ')]' → logprob: -14.78859806060791

Token 116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029757894575595856
    2. ' +=' → logprob: -3.5297579765319824
    3. ']+=' → logprob: -12.029757499694824
    4. '+' → logprob: -14.029757499694824
    5. '+='' → logprob: -14.904757499694824
    6. '+="' → logprob: -16.40475845336914
    7. ' ' → logprob: -16.90475845336914
    8. '=' → logprob: -16.90475845336914
    9. '+=(' → logprob: -17.02975845336914
    10. '```' → logprob: -17.65475845336914

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '```' → logprob: -19.501171112060547
    4. '   ' → logprob: -19.626171112060547
    5. '  ' → logprob: -21.501171112060547
    6. '１' → logprob: -21.626171112060547
    7. '<|end|>' → logprob: -22.626171112060547
    8. ' ' → logprob: -22.626171112060547
    9. '۱' → logprob: -22.688671112060547
    10. '`' → logprob: -23.126171112060547

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -22.0
    4. '   ' → logprob: -22.375
    5. '１' → logprob: -22.625
    6. '۱' → logprob: -24.375
    7. '0' → logprob: -25.0
    8. '
' → logprob: -25.125
    9. '`' → logprob: -25.25
    10. '  ' → logprob: -25.3125

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032288136426359415
    2. 'return' → logprob: -5.753228664398193
    3. ' return' → logprob: -10.128229141235352
    4. '	return' → logprob: -12.253229141235352
    5. '    
' → logprob: -13.378229141235352
    6. '
' → logprob: -13.503229141235352
    7. '```' → logprob: -13.878229141235352
    8. '<|end|>' → logprob: -14.253229141235352
    9. ' ' → logprob: -14.378229141235352
    10. ':return' → logprob: -15.378229141235352

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02333480678498745
    2. 'return' → logprob: -3.7733347415924072
    3. ' return' → logprob: -9.523334503173828
    4. 'def' → logprob: -12.148334503173828
    5. '```' → logprob: -12.398334503173828
    6. '	return' → logprob: -12.773334503173828
    7. '
' → logprob: -13.773334503173828
    8. '    
' → logprob: -13.898334503173828
    9. ' ' → logprob: -14.148334503173828
    10. '       ' → logprob: -14.898334503173828

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005521292798221111
    2. '   ' → logprob: -5.380521297454834
    3. ' return' → logprob: -7.255521297454834
    4. 'count' → logprob: -9.255520820617676
    5. 'result' → logprob: -10.005520820617676
    6. 'c' → logprob: -11.005520820617676
    7. 'counts' → logprob: -11.880520820617676
    8. '```' → logprob: -11.880520820617676
    9. 'total' → logprob: -12.255520820617676
    10. ' ' → logprob: -12.380520820617676

Token 122: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08829088509082794
    2. ' d' → logprob: -2.5882909297943115
    3. '{' → logprob: -4.838290691375732
    4. ' {' → logprob: -7.213290691375732
    5. 'collections' → logprob: -7.463290691375732
    6. ' collections' → logprob: -10.08829116821289
    7. 'dict' → logprob: -10.83829116821289
    8. 'sum' → logprob: -10.83829116821289
    9. '[d' → logprob: -11.58829116821289
    10. ' ' → logprob: -11.58829116821289

Token 123: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19031061232089996
    2. '<|end|>' → logprob: -1.8153105974197388
    3. '
' → logprob: -5.315310478210449
    4. ' def' → logprob: -6.940310478210449
    5. '()' → logprob: -7.065310478210449
    6. '(' → logprob: -7.065310478210449
    7. '```' → logprob: -7.190310478210449
    8. '<|end|>' → logprob: -7.315310478210449
    9. ')' → logprob: -8.19031047821045
    10. '

' → logprob: -8.19031047821045

Token 124: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.398067828034982e-05
    2. '```' → logprob: -10.62507438659668
    3. '<|end|>' → logprob: -10.87507438659668
    4. ')' → logprob: -11.62507438659668
    5. 'from' → logprob: -11.62507438659668
    6. '#' → logprob: -12.37507438659668
    7. ' def' → logprob: -13.12507438659668
    8. ']' → logprob: -13.37507438659668
    9. 'import' → logprob: -13.50007438659668
    10. '[' → logprob: -14.50007438659668

Token 125: ' compute' (ID: 23864)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.13633796572685242
    2. ' main' → logprob: -2.386337995529175
    3. 'count' → logprob: -4.511337757110596
    4. ' solve' → logprob: -4.511337757110596
    5. ' find' → logprob: -5.261337757110596
    6. ' compute' → logprob: -5.511337757110596
    7. ' calculate' → logprob: -6.261337757110596
    8. ' sum' → logprob: -7.761337757110596
    9. ' total' → logprob: -8.011338233947754
    10. ' sub' → logprob: -8.386338233947754

Token 126: '_com' (ID: 10828)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.3185632526874542
    2. '_pairs' → logprob: -1.9435632228851318
    3. '_' → logprob: -3.068563222885132
    4. '_max' → logprob: -3.193563222885132
    5. '_prefix' → logprob: -4.318563461303711
    6. '_pair' → logprob: -4.943563461303711
    7. '_com' → logprob: -5.443563461303711
    8. '_answer' → logprob: -5.818563461303711
    9. '_trip' → logprob: -5.818563461303711
    10. '_total' → logprob: -6.068563461303711

Token 127: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0037505521904677153
    2. 'b' → logprob: -6.503750324249268
    3. '```' → logprob: -6.503750324249268
    4. '_' → logprob: -8.628750801086426
    5. 'bin' → logprob: -8.878750801086426
    6. '_b' → logprob: -9.128750801086426
    7. 'bination' → logprob: -9.378750801086426
    8. '\' → logprob: -10.253750801086426
    9. '``' → logprob: -10.253750801086426
    10. '   ' → logprob: -10.753750801086426

Token 128: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5525670647621155
    2. '(d' → logprob: -0.9275670647621155
    3. ' (' → logprob: -4.677567005157471
    4. '_' → logprob: -5.052567005157471
    5. '(s' → logprob: -5.427567005157471
    6. '_(' → logprob: -5.802567005157471
    7. '(n' → logprob: -6.677567005157471
    8. '(_' → logprob: -7.052567005157471
    9. '(count' → logprob: -7.302567005157471
    10. '(def' → logprob: -7.802567005157471

Token 129: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2876942753791809
    2. '):' → logprob: -1.4126942157745361
    3. '):
' → logprob: -5.412694454193115
    4. ')' → logprob: -6.412694454193115
    5. '(s' → logprob: -9.037693977355957
    6. ' ):' → logprob: -9.662693977355957
    7. '(' → logprob: -9.912693977355957
    8. '(d' → logprob: -10.287693977355957
    9. '_' → logprob: -10.287693977355957
    10. 'd' → logprob: -10.787693977355957

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020297084003686905
    2. '(count' → logprob: -4.145297050476074
    3. '(n' → logprob: -6.645297050476074
    4. '  ' → logprob: -7.145297050476074
    5. '(' → logprob: -8.020297050476074
    6. '    ' → logprob: -8.520297050476074
    7. 'count' → logprob: -8.645297050476074
    8. ' ' → logprob: -8.770297050476074
    9. 'n' → logprob: -8.770297050476074
    10. '       ' → logprob: -9.020297050476074

Token 131: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13741956651210785
    2. ' return' → logprob: -2.5124194622039795
    3. 'return' → logprob: -3.7624194622039795
    4. '    ' → logprob: -4.762419700622559
    5. 'n' → logprob: -5.512419700622559
    6. 'count' → logprob: -6.387419700622559
    7. ' ' → logprob: -6.637419700622559
    8. ' 
' → logprob: -6.762419700622559
    9. ' n' → logprob: -6.762419700622559
    10. '  ' → logprob: -7.137419700622559

Token 132: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06196869537234306
    2. 'count' → logprob: -2.8119688034057617
    3. '	count' → logprob: -14.936968803405762
    4. ' ' → logprob: -15.186968803405762
    5. '(count' → logprob: -15.311968803405762
    6. '   ' → logprob: -16.311967849731445
    7. '<count' → logprob: -16.561967849731445
    8. '[count' → logprob: -17.436967849731445
    9. '_count' → logprob: -18.061967849731445
    10. '=count' → logprob: -18.436967849731445

Token 133: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11303388327360153
    2. ' <' → logprob: -2.9880337715148926
    3. '>=' → logprob: -3.2380337715148926
    4. '<=' → logprob: -4.738033771514893
    5. '>' → logprob: -5.488033771514893
    6. ' >=' → logprob: -5.863033771514893
    7. ' <=' → logprob: -7.488033771514893
    8. '==' → logprob: -7.488033771514893
    9. ' ' → logprob: -8.48803424835205
    10. ' >' → logprob: -9.61303424835205

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001710401731543243
    2. ' ' → logprob: -6.501710414886475
    3. '=' → logprob: -8.626709938049316
    4. '0' → logprob: -10.626709938049316
    5. '3' → logprob: -13.126709938049316
    6. '```' → logprob: -14.376709938049316
    7. ' =' → logprob: -14.626709938049316
    8. ')' → logprob: -15.001709938049316
    9. '
' → logprob: -15.376709938049316
    10. '_' → logprob: -15.501709938049316

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018816311785485595
    2. ' ' → logprob: -8.625187873840332
    3. '=' → logprob: -11.875187873840332
    4. '0' → logprob: -13.625187873840332
    5. '```' → logprob: -16.18768882751465
    6. '3' → logprob: -17.25018882751465
    7. '_' → logprob: -17.31268882751465
    8. '   ' → logprob: -17.50018882751465
    9. ' =' → logprob: -17.62518882751465
    10. ')' → logprob: -17.68768882751465

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016554269939661026
    2. ':
' → logprob: -4.391554355621338
    3. ':return' → logprob: -5.516554355621338
    4. '):' → logprob: -11.76655387878418
    5. ' :' → logprob: -12.89155387878418
    6. '):
' → logprob: -13.14155387878418
    7. '<|end|>' → logprob: -13.64155387878418
    8. ')' → logprob: -14.26655387878418
    9. '   ' → logprob: -14.51655387878418
    10. ',' → logprob: -14.51655387878418

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013459719717502594
    2. '   ' → logprob: -4.7634596824646
    3. ' return' → logprob: -5.6384596824646
    4. 'return' → logprob: -7.6384596824646
    5. '
' → logprob: -8.138460159301758
    6. ':' → logprob: -8.888460159301758
    7. ':return' → logprob: -9.013460159301758
    8. ':
' → logprob: -9.763460159301758
    9. '    ' → logprob: -10.263460159301758
    10. ' :' → logprob: -11.013460159301758

Token 138: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03965532407164574
    2. ' ' → logprob: -3.7896552085876465
    3. ' return' → logprob: -4.4146552085876465
    4. 'return' (adapté à ' return') → logprob: -5.7896552085876465
    5. '   ' → logprob: -7.0396552085876465
    6. ' 
' → logprob: -9.539655685424805
    7. '
' → logprob: -9.789655685424805
    8. '       ' → logprob: -9.789655685424805
    9. '1' → logprob: -10.664655685424805
    10. ':return' → logprob: -11.039655685424805

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -18.877805709838867
    4. '۰' → logprob: -18.877805709838867
    5. ' ' → logprob: -19.752805709838867
    6. '  ' → logprob: -19.815305709838867
    7. '
' → logprob: -20.190305709838867
    8. '```' → logprob: -20.252805709838867
    9. '０' → logprob: -20.315305709838867
    10. '00' → logprob: -20.502805709838867

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -17.812517166137695
    4. '۰' → logprob: -18.062517166137695
    5. '   ' → logprob: -18.187517166137695
    6. '０' → logprob: -18.500017166137695
    7. '```' → logprob: -18.562517166137695
    8. '00' → logprob: -18.750017166137695
    9. '000' → logprob: -18.812517166137695
    10. '  ' → logprob: -18.875017166137695

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09727368503808975
    2. '
' → logprob: -2.722273588180542
    3. '<|end|>' → logprob: -3.847273588180542
    4. '    
' → logprob: -5.847273826599121
    5. '  
' → logprob: -7.347273826599121
    6. ' ' → logprob: -7.972273826599121
    7. '<|end|>' → logprob: -7.972273826599121
    8. ',' → logprob: -8.222273826599121
    9. '  ' → logprob: -8.222273826599121
    10. ' else' → logprob: -8.722273826599121

Token 143: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002261590678244829
    2. ' return' → logprob: -6.752261638641357
    3. '
' → logprob: -7.377261638641357
    4. '    
' → logprob: -8.3772611618042
    5. 'return' (adapté à ' return') → logprob: -9.1272611618042
    6. '	return' → logprob: -10.6272611618042
    7. '  ' → logprob: -11.1272611618042
    8. ' 
' → logprob: -11.1272611618042
    9. '    ' → logprob: -11.3772611618042
    10. '  
' → logprob: -11.6272611618042

Token 144: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.38725489377975464
    2. 'count' → logprob: -1.1372549533843994
    3. '(count' → logprob: -8.13725471496582
    4. ' (' → logprob: -9.51225471496582
    5. '   ' → logprob: -11.26225471496582
    6. '	count' → logprob: -12.88725471496582
    7. ' ' → logprob: -14.38725471496582
    8. '(' → logprob: -14.88725471496582
    9. 'c' → logprob: -15.63725471496582
    10. '[count' → logprob: -15.76225471496582

Token 145: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0032169262412935495
    2. ' *' → logprob: -6.128216743469238
    3. '*(' → logprob: -6.878216743469238
    4. '**' → logprob: -14.253216743469238
    5. ' ' → logprob: -14.503216743469238
    6. ' ' → logprob: -16.503217697143555
    7. '```' → logprob: -16.628217697143555
    8. '   ' → logprob: -17.628217697143555
    9. '*((' → logprob: -17.753217697143555
    10. '  ' → logprob: -17.753217697143555

Token 146: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.05639008805155754
    2. ' (' → logprob: -2.9313900470733643
    3. '(cnt' → logprob: -7.181390285491943
    4. '<|end|>' → logprob: -8.931389808654785
    5. '[count' → logprob: -8.931389808654785
    6. '
' → logprob: -9.306389808654785
    7. '(c' → logprob: -9.681389808654785
    8. '(code' → logprob: -10.181389808654785
    9. ' ' → logprob: -10.556389808654785
    10. '(int' → logprob: -10.681389808654785

Token 147: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0015160536859184504
    2. '(count' → logprob: -7.126515865325928
    3. ' count' → logprob: -7.251515865325928
    4. '<count' → logprob: -14.126516342163086
    5. '[count' → logprob: -14.501516342163086
    6. ' (' → logprob: -15.251516342163086
    7. ' ' → logprob: -15.501516342163086
    8. '	count' → logprob: -15.751516342163086
    9. '   ' → logprob: -16.126516342163086
    10. '.count' → logprob: -16.251516342163086

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11287778615951538
    2. ' -' → logprob: -2.23787784576416
    3. ' ' → logprob: -10.86287784576416
    4. '1' → logprob: -10.98787784576416
    5. '<|end|>' → logprob: -11.36287784576416
    6. '   ' → logprob: -12.61287784576416
    7. ')' → logprob: -13.61287784576416
    8. '<|end|>' → logprob: -14.23787784576416
    9. '  ' → logprob: -14.98787784576416
    10. '```' → logprob: -14.98787784576416

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006724249105900526
    2. ' ' → logprob: -5.0067243576049805
    3. '<|end|>' → logprob: -11.75672435760498
    4. '```' → logprob: -15.00672435760498
    5. ')' → logprob: -15.13172435760498
    6. '   ' → logprob: -15.25672435760498
    7. '<|end|>' → logprob: -16.631723403930664
    8. '
' → logprob: -16.944223403930664
    9. '...' → logprob: -17.194223403930664
    10. '  ' → logprob: -17.319223403930664

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -14.125008583068848
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '
' → logprob: -18.125009536743164
    7. ')' → logprob: -19.312509536743164
    8. '...' → logprob: -19.375009536743164
    9. '<|end|>' → logprob: -19.437509536743164

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04120649769902229
    2. ' )' → logprob: -3.7912065982818604
    3. ')//' → logprob: -4.416206359863281
    4. ' //' → logprob: -5.291206359863281
    5. '//' → logprob: -7.291206359863281
    6. '   ' → logprob: -14.041206359863281
    7. '')' → logprob: -14.166206359863281
    8. ' ' → logprob: -14.916206359863281
    9. '")' → logprob: -15.166206359863281
    10. '```' → logprob: -15.416206359863281

Token 152: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0699453204870224
    2. ' //' → logprob: -2.6949453353881836
    3. '```' → logprob: -11.944945335388184
    4. '   ' → logprob: -13.944945335388184
    5. '#' → logprob: -14.819945335388184
    6. '
' → logprob: -15.194945335388184
    7. '2' → logprob: -15.694945335388184
    8. ' ' → logprob: -16.069944381713867
    9. '0' → logprob: -16.194944381713867
    10. '/' → logprob: -16.444944381713867

Token 153: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -18.750045776367188
    4. '<|end|>' → logprob: -18.875045776367188
    5. '   ' → logprob: -19.000045776367188
    6. '
' → logprob: -20.000045776367188
    7. '۲' → logprob: -20.250045776367188
    8. '1' → logprob: -21.125045776367188
    9. '  ' → logprob: -21.250045776367188
    10. '２' → logprob: -21.437545776367188

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.75
    4. '۲' → logprob: -20.625
    5. '   ' → logprob: -20.75
    6. '
' → logprob: -21.125
    7. '<|end|>' → logprob: -21.875
    8. '２' → logprob: -21.875
    9. '٢' → logprob: -22.4375
    10. '1' → logprob: -22.8125

Token 155: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43295347690582275
    2. '
' → logprob: -1.4329534769058228
    3. '

' → logprob: -2.182953357696533
    4. ' def' → logprob: -10.182953834533691
    5. '
' → logprob: -10.682953834533691
    6. '```' → logprob: -12.057953834533691
    7. '


' → logprob: -12.307953834533691
    8. ' 

' → logprob: -12.307953834533691
    9. '<|end|>' → logprob: -12.432953834533691
    10. '\' → logprob: -12.432953834533691

Token 156: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3744625151157379
    2. '
' → logprob: -1.2494624853134155
    3. '

' → logprob: -3.874462604522705
    4. '<|end|>' → logprob: -5.374462604522705
    5. '\' → logprob: -9.249462127685547
    6. '```' → logprob: -9.999462127685547
    7. '\n' → logprob: -10.124462127685547
    8. '
' → logprob: -10.749462127685547
    9. '  
' → logprob: -11.124462127685547
    10. ' def' → logprob: -11.249462127685547

Token 157: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03537054359912872
    2. ' count' → logprob: -3.7853705883026123
    3. 'main' → logprob: -5.285370349884033
    4. ' solve' → logprob: -5.285370349884033
    5. 'count' → logprob: -7.285370349884033
    6. ' compute' → logprob: -8.160370826721191
    7. ' sum' → logprob: -8.285370826721191
    8. 'solve' → logprob: -8.285370826721191
    9. ' calculate' → logprob: -8.785370826721191
    10. ' sub' → logprob: -9.535370826721191

Token 158: '_com' (ID: 10828)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02810809016227722
    2. '_com' → logprob: -3.6531081199645996
    3. '(' → logprob: -7.2781081199646
    4. '(com' → logprob: -8.278107643127441
    5. '_counts' → logprob: -8.528107643127441
    6. '_total' → logprob: -9.403107643127441
    7. '_comb' → logprob: -9.653107643127441
    8. '_re' → logprob: -9.778107643127441
    9. '_(' → logprob: -9.903107643127441
    10. '_of' → logprob: -9.903107643127441

Token 159: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0014977219980210066
    2. 'b' → logprob: -6.751497745513916
    3. '_b' → logprob: -9.001497268676758
    4. 'bine' → logprob: -10.126497268676758
    5. '_' → logprob: -10.376497268676758
    6. 'bin' → logprob: -10.501497268676758
    7. 'bined' → logprob: -11.126497268676758
    8. 'bis' → logprob: -11.501497268676758
    9. '```' → logprob: -11.501497268676758
    10. 'ponents' → logprob: -11.751497268676758

Token 160: '_for' (ID: 11903)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.20817425847053528
    2. '(' → logprob: -1.833174228668213
    3. '(re' → logprob: -4.083174228668213
    4. '(count' → logprob: -5.333174228668213
    5. '(s' → logprob: -5.833174228668213
    6. '(def' → logprob: -6.458174228668213
    7. ' (' → logprob: -6.833174228668213
    8. '(collection' → logprob: -9.083174705505371
    9. '(data' → logprob: -9.833174705505371
    10. '(com' → logprob: -9.958174705505371

Token 161: '_re' (ID: 3067)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.5290230512619019
    2. 'all' → logprob: -1.9040230512619019
    3. 'd' → logprob: -2.0290231704711914
    4. '_counts' → logprob: -2.0290231704711914
    5. 'dict' → logprob: -2.4040231704711914
    6. 'def' → logprob: -2.6540231704711914
    7. 'counts' → logprob: -2.9040231704711914
    8. '_re' → logprob: -3.2790231704711914
    9. 'count' → logprob: -3.7790231704711914
    10. 'rema' → logprob: -3.7790231704711914

Token 162: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.008097480982542038
    2. 'mainder' → logprob: -5.0080976486206055
    3. 'm' → logprob: -7.0080976486206055
    4. 'main' → logprob: -8.758097648620605
    5. '```' → logprob: -8.883097648620605
    6. 'mad' → logprob: -10.508097648620605
    7. 'mai' → logprob: -10.758097648620605
    8. '(' → logprob: -11.133097648620605
    9. 'mah' → logprob: -11.383097648620605
    10. '(ma' → logprob: -11.508097648620605

Token 163: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.0015187880489975214
    2. 'nders' → logprob: -6.751518726348877
    3. 'inder' → logprob: -8.376519203186035
    4. 'iners' → logprob: -10.376519203186035
    5. 'inde' → logprob: -10.626519203186035
    6. 'ind' → logprob: -10.876519203186035
    7. '_' → logprob: -11.376519203186035
    8. '```' → logprob: -11.876519203186035
    9. 'unders' → logprob: -12.001519203186035
    10. 'inds' → logprob: -12.751519203186035

Token 164: '(rem' (ID: 150425)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.008447087369859219
    2. '(re' → logprob: -5.008447170257568
    3. '(' → logprob: -6.508447170257568
    4. '(count' → logprob: -8.63344669342041
    5. '(rem' → logprob: -11.13344669342041
    6. '(r' → logprob: -11.25844669342041
    7. ' (' → logprob: -11.38344669342041
    8. '(def' → logprob: -11.38344669342041
    9. '(dictionary' → logprob: -12.88344669342041
    10. '(dic' → logprob: -13.13344669342041

Token 165: '_count' (ID: 7536)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010067942552268505
    2. 's' → logprob: -5.760067939758301
    3. 'ainers' → logprob: -6.260067939758301
    4. '```' → logprob: -6.260067939758301
    5. '[' → logprob: -7.385067939758301
    6. 'inders' → logprob: -7.760067939758301
    7. '_dict' → logprob: -8.1350679397583
    8. '[a' → logprob: -8.3850679397583
    9. 'anders' → logprob: -8.7600679397583
    10. 'ains' → logprob: -8.7600679397583

Token 166: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07258111983537674
    2. '):' → logprob: -2.6975810527801514
    3. '):
' → logprob: -5.9475812911987305
    4. ')' → logprob: -11.19758129119873
    5. '):

' → logprob: -12.44758129119873
    6. ' ):' → logprob: -12.82258129119873
    7. 'dict' → logprob: -13.19758129119873
    8. ':' → logprob: -13.57258129119873
    9. '_dict' → logprob: -14.07258129119873
    10. 'd' → logprob: -14.19758129119873

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006948007503524423
    2. '):
' → logprob: -7.875694751739502
    3. ')' → logprob: -8.37569522857666
    4. ' ):' → logprob: -9.87569522857666
    5. '):
' → logprob: -10.62569522857666
    6. ':' → logprob: -12.50069522857666
    7. ' ' → logprob: -13.75069522857666
    8. '   ' → logprob: -13.75069522857666
    9. '):

' → logprob: -14.50069522857666
    10. 's' → logprob: -15.00069522857666

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2070271372795105
    2. ':' → logprob: -1.7070271968841553
    3. ':
' → logprob: -5.957026958465576
    4. '(' → logprob: -6.957026958465576
    5. '=' → logprob: -7.582026958465576
    6. 's' → logprob: -8.082027435302734
    7. '(s' → logprob: -8.457027435302734
    8. ' =' → logprob: -8.707027435302734
    9. '):' → logprob: -8.957027435302734
    10. '():' → logprob: -9.457027435302734

Token 169: ' ans' (ID: 3345)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8028475642204285
    2. 'total' → logprob: -1.1778476238250732
    3. '   ' → logprob: -1.8028476238250732
    4. 'result' → logprob: -3.0528476238250732
    5. ' result' → logprob: -4.302847385406494
    6. 'return' → logprob: -4.927847385406494
    7. ' return' → logprob: -5.427847385406494
    8. 's' → logprob: -5.927847385406494
    9. 'res' → logprob: -6.802847385406494
    10. ' s' → logprob: -7.052847385406494

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426851600408554
    2. '=' → logprob: -2.0176851749420166
    3. ' ' → logprob: -11.892684936523438
    4. '   ' → logprob: -13.642684936523438
    5. ',' → logprob: -14.267684936523438
    6. ' =
' → logprob: -14.767684936523438
    7. '  ' → logprob: -15.142684936523438
    8. '_' → logprob: -15.517684936523438
    9. 's' → logprob: -15.767684936523438
    10. ' +=' → logprob: -16.517684936523438

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.125139236450195
    4. '۰' → logprob: -20.625139236450195
    5. '<|end|>' → logprob: -20.750139236450195
    6. '=' → logprob: -21.250139236450195
    7. '  ' → logprob: -21.250139236450195
    8. 'def' → logprob: -21.500139236450195
    9. '```' → logprob: -21.875139236450195
    10. '０' → logprob: -22.312639236450195

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.250001907348633
    4. 'sum' → logprob: -20.625001907348633
    5. '000' → logprob: -22.375001907348633
    6. '۰' → logprob: -23.000001907348633
    7. '=' → logprob: -23.500001907348633
    8. '00' → logprob: -23.625001907348633
    9. '０' → logprob: -23.750001907348633
    10. '  ' → logprob: -24.125001907348633

Token 173: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009817203972488642
    2. '
' → logprob: -7.62598180770874
    3. ' for' → logprob: -7.75098180770874
    4. 'for' → logprob: -10.250981330871582
    5. '    
' → logprob: -11.125981330871582
    6. '<|end|>' → logprob: -12.000981330871582
    7. '	for' → logprob: -12.750981330871582
    8. '<|end|>' → logprob: -13.750981330871582
    9. ' ' → logprob: -14.125981330871582
    10. ',' → logprob: -14.375981330871582

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03002006560564041
    2. ' for' → logprob: -4.155020236968994
    3. 'for' → logprob: -4.280020236968994
    4. '	for' → logprob: -10.655019760131836
    5. '
' → logprob: -10.905019760131836
    6. '    
' → logprob: -12.905019760131836
    7. ' ' → logprob: -14.280019760131836
    8. '<|end|>' → logprob: -15.155019760131836
    9. '   ' → logprob: -15.780019760131836
    10. 'def' → logprob: -16.030019760131836

Token 175: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.597508430480957
    2. '   ' → logprob: -0.847508430480957
    3. ' for' → logprob: -3.847508430480957
    4. ' ' → logprob: -12.472508430480957
    5. '	for' → logprob: -13.847508430480957
    6. '  ' → logprob: -15.097508430480957
    7. '    
' → logprob: -17.09750747680664
    8. '       ' → logprob: -17.72250747680664
    9. 'def' → logprob: -17.97250747680664
    10. '
' → logprob: -18.22250747680664

Token 176: ' v' (ID: 323)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8235141038894653
    2. ' r' → logprob: -1.1985141038894653
    3. ' count' → logprob: -2.573513984680176
    4. 'count' → logprob: -2.948513984680176
    5. ' key' → logprob: -3.323513984680176
    6. 'v' → logprob: -3.948513984680176
    7. ' v' → logprob: -4.073513984680176
    8. ' rem' → logprob: -4.073513984680176
    9. ' k' → logprob: -4.698513984680176
    10. 'k' → logprob: -4.698513984680176

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02996140345931053
    2. 'in' → logprob: -3.529961347579956
    3. ' ' → logprob: -8.904961585998535
    4. 'n' → logprob: -10.654961585998535
    5. ',' → logprob: -11.404961585998535
    6. 'alue' → logprob: -11.529961585998535
    7. '	in' → logprob: -11.654961585998535
    8. 'v' → logprob: -12.654961585998535
    9. '   ' → logprob: -12.904961585998535
    10. 's' → logprob: -12.904961585998535

Token 178: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.01815076172351837
    2. ' rem' → logprob: -4.018150806427002
    3. '(rem' → logprob: -14.518150329589844
    4. 'reman' → logprob: -15.018150329589844
    5. 'remen' → logprob: -17.643150329589844
    6. '.rem' → logprob: -18.018150329589844
    7. ' ' → logprob: -18.143150329589844
    8. 'rm' → logprob: -18.143150329589844
    9. '_rem' → logprob: -18.643150329589844
    10. 'rep' → logprob: -19.018150329589844

Token 179: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00011415231710998341
    2. '_' → logprob: -9.500114440917969
    3. 'ount' → logprob: -11.125114440917969
    4. '_counts' → logprob: -11.500114440917969
    5. '_counter' → logprob: -11.875114440917969
    6. ' _' → logprob: -13.250114440917969
    7. 's' → logprob: -13.375114440917969
    8. '_c' → logprob: -13.750114440917969
    9. 'count' → logprob: -13.875114440917969
    10. '._' → logprob: -14.000114440917969

Token 180: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00018089536752086133
    2. 'dict' → logprob: -8.875181198120117
    3. 's' → logprob: -10.375181198120117
    4. 'ict' → logprob: -12.250181198120117
    5. 'ect' → logprob: -13.500181198120117
    6. '_dic' → logprob: -13.875181198120117
    7. '_DICT' → logprob: -14.125181198120117
    8. '_' → logprob: -14.375181198120117
    9. '.dict' → logprob: -15.125181198120117
    10. 'd' → logprob: -15.500181198120117

Token 181: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00026205103495158255
    2. '.' → logprob: -9.000262260437012
    3. 'values' → logprob: -9.000262260437012
    4. '.value' → logprob: -12.125262260437012
    5. ' .' → logprob: -12.250262260437012
    6. '_values' → logprob: -13.500262260437012
    7. ' values' → logprob: -13.625262260437012
    8. ':' → logprob: -13.625262260437012
    9. '.Values' → logprob: -14.500262260437012
    10. '.items' → logprob: -15.625262260437012

Token 182: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.921253225300461e-05
    2. '():
' → logprob: -9.875069618225098
    3. '()' → logprob: -11.125069618225098
    4. ' ():' → logprob: -13.375069618225098
    5. ':' → logprob: -13.625069618225098
    6. '():
' → logprob: -16.25006866455078
    7. '(' → logprob: -16.37506866455078
    8. '):' → logprob: -16.87506866455078
    9. ' :' → logprob: -19.25006866455078
    10. '()>' → logprob: -20.25006866455078

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000712670327629894
    2. 'ans' → logprob: -7.750712871551514
    3. ' ans' → logprob: -9.000712394714355
    4. '   ' → logprob: -9.375712394714355
    5. '	ans' → logprob: -10.750712394714355
    6. '
' → logprob: -11.125712394714355
    7. '(ans' → logprob: -11.250712394714355
    8. '<|end|>' → logprob: -11.375712394714355
    9. '        
' → logprob: -12.875712394714355
    10. '    
' → logprob: -13.125712394714355

Token 184: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07695009559392929
    2. 'ans' (adapté à ' ans') → logprob: -2.7019500732421875
    3. ' ans' → logprob: -5.4519500732421875
    4. '
' → logprob: -6.2019500732421875
    5. '   ' → logprob: -7.7019500732421875
    6. '	ans' → logprob: -8.951950073242188
    7. '           ' → logprob: -10.201950073242188
    8. '(ans' → logprob: -10.326950073242188
    9. '        
' → logprob: -12.576950073242188
    10. '     ' → logprob: -12.826950073242188

Token 185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026306219398975372
    2. '+=' → logprob: -3.65130615234375
    3. ']+=' → logprob: -12.90130615234375
    4. '+' → logprob: -13.40130615234375
    5. ' ' → logprob: -14.77630615234375
    6. '+=(' → logprob: -15.02630615234375
    7. '   ' → logprob: -15.15130615234375
    8. '    ' → logprob: -15.27630615234375
    9. '+='' → logprob: -15.65130615234375
    10. '+="' → logprob: -16.27630615234375

Token 186: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07888989895582199
    2. ' compute' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.203889846801758
    4. 'v' → logprob: -17.078889846801758
    5. ' v' → logprob: -17.453889846801758
    6. '.compute' → logprob: -17.578889846801758
    7. 'com' → logprob: -17.703889846801758
    8. '_compute' → logprob: -17.828889846801758
    9. 'comput' → logprob: -18.703889846801758
    10. '
' → logprob: -18.828889846801758

Token 187: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.9361264946837764e-07
    2. 'com' → logprob: -15.875
    3. '_comb' → logprob: -17.375
    4. '_' → logprob: -18.75
    5. '_co' → logprob: -19.375
    6. '_con' → logprob: -20.125
    7. '_c' → logprob: -20.25
    8. ' combinations' → logprob: -20.875
    9. '_COM' → logprob: -21.0
    10. '(com' → logprob: -21.0

Token 188: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.000215457082958892
    2. 'b' → logprob: -9.000215530395508
    3. 'bin' → logprob: -9.625215530395508
    4. 'inations' → logprob: -10.625215530395508
    5. 'bination' → logprob: -13.875215530395508
    6. 'bon' → logprob: -16.375215530395508
    7. 'bn' → logprob: -16.375215530395508
    8. '```' → logprob: -16.500215530395508
    9. 'utations' → logprob: -16.625215530395508
    10. 'bi' → logprob: -16.875215530395508

Token 189: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0003362966235727072
    2. '(' → logprob: -8.000336647033691
    3. ' (' → logprob: -14.125336647033691
    4. '((' → logprob: -17.375335693359375
    5. '(
' → logprob: -17.375335693359375
    6. 'v' → logprob: -17.500335693359375
    7. '(value' → logprob: -17.875335693359375
    8. '<|end|>' → logprob: -19.500335693359375
    9. '(`' → logprob: -19.625335693359375
    10. '(

' → logprob: -19.625335693359375

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.375003814697266
    5. ')return' → logprob: -17.000003814697266
    6. '))' → logprob: -17.250003814697266
    7. ' ' → logprob: -18.375003814697266
    8. ')

' → logprob: -18.625003814697266
    9. '<|end|>' → logprob: -18.625003814697266
    10. ')}}' → logprob: -18.750003814697266

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003662191331386566
    2. '
' → logprob: -6.503662109375
    3. 'return' → logprob: -6.503662109375
    4. ' return' → logprob: -7.378662109375
    5. '	return' → logprob: -10.628662109375
    6. '    
' → logprob: -11.628662109375
    7. '       ' → logprob: -14.878662109375
    8. '```' → logprob: -15.003662109375
    9. '
' → logprob: -15.253662109375
    10. ' ' → logprob: -15.503662109375

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021994952112436295
    2. '   ' → logprob: -4.5219950675964355
    3. ' return' → logprob: -4.5219950675964355
    4. '
' → logprob: -11.146994590759277
    5. '	return' → logprob: -12.396994590759277
    6. ' ' → logprob: -13.896994590759277
    7. '    
' → logprob: -15.521994590759277
    8. '```' → logprob: -15.646994590759277
    9. '  ' → logprob: -16.021995544433594
    10. ':return' → logprob: -16.396995544433594

Token 193: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03804505243897438
    2. ' ans' → logprob: -3.2880451679229736
    3. '(ans' → logprob: -12.663044929504395
    4. '	ans' → logprob: -14.913044929504395
    5. '_ans' → logprob: -17.28804588317871
    6. 'anst' → logprob: -17.91304588317871
    7. 'answer' → logprob: -18.41304588317871
    8. ' ' → logprob: -19.03804588317871
    9. 'ANS' → logprob: -20.03804588317871
    10. 'Ans' → logprob: -20.28804588317871

Token 194: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20028506219387054
    2. 'def' → logprob: -1.8252850770950317
    3. '<|end|>' → logprob: -4.325284957885742
    4. '

' → logprob: -5.075284957885742
    5. '(
' → logprob: -8.450284957885742
    6. '\n' → logprob: -8.950284957885742
    7. '```' → logprob: -8.950284957885742
    8. '\' → logprob: -9.450284957885742
    9. '(' → logprob: -9.700284957885742
    10. '()' → logprob: -9.950284957885742

Token 195: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025718966498970985
    2. 'N' → logprob: -4.025719165802002
    3. 'if' → logprob: -5.400719165802002
    4. 'n' → logprob: -5.900719165802002
    5. 'import' → logprob: -8.525718688964844
    6. 'ndef' → logprob: -10.025718688964844
    7. 'M' → logprob: -10.650718688964844
    8. '#' → logprob: -11.150718688964844
    9. '```' → logprob: -12.275718688964844
    10. '(n' → logprob: -14.900718688964844

Token 196: ' d' (ID: 272)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014165744185447693
    2. 'main' → logprob: -4.264165878295898
    3. ' solve' → logprob: -13.264165878295898
    4. '	main' → logprob: -15.139165878295898
    5. 'solve' → logprob: -15.764165878295898
    6. '_main' → logprob: -16.3891658782959
    7. ' count' → logprob: -17.5141658782959
    8. ' sum' → logprob: -17.8891658782959
    9. ' ' → logprob: -18.1391658782959
    10. ' calculate' → logprob: -18.6391658782959

Token 197: '_c' (ID: 1303)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -8.180258191714529e-06
    2. 'e' → logprob: -12.625008583068848
    3. ' ef' → logprob: -12.750008583068848
    4. 'efs' → logprob: -13.750008583068848
    5. 'efa' → logprob: -15.125008583068848
    6. 'efi' → logprob: -15.750008583068848
    7. 'efined' → logprob: -16.50000762939453
    8. 'o' → logprob: -16.50000762939453
    9. 'def' → logprob: -16.62500762939453
    10. 'efe' → logprob: -16.87500762939453

Token 198: 'andy' (ID: 16898)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3052008152008057
    2. '_' → logprob: -1.6802008152008057
    3. 'omb' → logprob: -1.8052008152008057
    4. 'h' → logprob: -2.6802008152008057
    5. '_e' → logprob: -2.9302008152008057
    6. 'o' → logprob: -2.9302008152008057
    7. 'on' → logprob: -3.6802008152008057
    8. 'ount' → logprob: -3.8052008152008057
    9. 'om' → logprob: -4.555200576782227
    10. '_div' → logprob: -4.555200576782227

Token 199: '_distribution' (ID: 102196)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45574676990509033
    2. 's' → logprob: -2.205746650695801
    3. '_' → logprob: -2.705746650695801
    4. '_distribution' → logprob: -2.830746650695801
    5. '():' → logprob: -3.330746650695801
    6. '_count' → logprob: -4.330746650695801
    7. '_sum' → logprob: -4.455746650695801
    8. '():
' → logprob: -4.705746650695801
    9. '_div' → logprob: -5.080746650695801
    10. '(' → logprob: -5.205746650695801

Token 200: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05547408387064934
    2. '(N' → logprob: -3.305474042892456
    3. '(' → logprob: -4.430474281311035
    4. '()' → logprob: -6.055474281311035
    5. '(M' → logprob: -6.680474281311035
    6. '(input' → logprob: -7.805474281311035
    7. ' ():' → logprob: -7.930474281311035
    8. '(A' → logprob: -8.055474281311035
    9. '(n' → logprob: -8.430474281311035
    10. '(s' → logprob: -9.555474281311035

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014334988372866064
    2. ' ,' → logprob: -9.250143051147461
    3. ',M' → logprob: -10.000143051147461
    4. '):' → logprob: -14.875143051147461
    5. ',
' → logprob: -15.125143051147461
    6. '_,' → logprob: -15.375143051147461
    7. '‌,' → logprob: -15.625143051147461
    8. ')' → logprob: -16.12514305114746
    9. ',int' → logprob: -16.25014305114746
    10. ',m' → logprob: -16.25014305114746

Token 202: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00405085226520896
    2. ' M' → logprob: -5.6290507316589355
    3. 'A' → logprob: -7.7540507316589355
    4. 'K' → logprob: -12.004051208496094
    5. ' A' → logprob: -12.504051208496094
    6. '   ' → logprob: -12.629051208496094
    7. ')' → logprob: -12.879051208496094
    8. ' ' → logprob: -13.379051208496094
    9. 'arr' → logprob: -13.754051208496094
    10. 'C' → logprob: -14.691551208496094

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041402606293559074
    2. '):' → logprob: -5.504140377044678
    3. ',A' → logprob: -10.37913990020752
    4. ' ,' → logprob: -10.62913990020752
    5. ')' → logprob: -13.00413990020752
    6. ',a' → logprob: -14.25413990020752
    7. ',
' → logprob: -14.37913990020752
    8. '   ' → logprob: -14.62913990020752
    9. ',N' → logprob: -14.75413990020752
    10. ' ):' → logprob: -15.00413990020752

Token 204: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009798353537917137
    2. ' A' → logprob: -4.634798526763916
    3. '   ' → logprob: -10.759798049926758
    4. ' ' → logprob: -11.259798049926758
    5. ')' → logprob: -13.009798049926758
    6. '  ' → logprob: -14.259798049926758
    7. '	A' → logprob: -14.259798049926758
    8. 'C' → logprob: -14.384798049926758
    9. '```' → logprob: -14.572298049926758
    10. 'K' → logprob: -15.072298049926758

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012606535165105015
    2. ')' → logprob: -9.125125885009766
    3. '):
' → logprob: -11.250125885009766
    4. ' ):' → logprob: -13.000125885009766
    5. ':' → logprob: -13.875125885009766
    6. '):
' → logprob: -14.875125885009766
    7. ',' → logprob: -15.375125885009766
    8. '   ' → logprob: -16.375125885009766
    9. ']:' → logprob: -17.250125885009766
    10. '[]):' → logprob: -17.250125885009766

Token 206: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4788217842578888
    2. '   ' → logprob: -0.9788217544555664
    3. ':
' → logprob: -6.228821754455566
    4. '):' → logprob: -6.728821754455566
    5. '    
' → logprob: -7.603821754455566
    6. ',' → logprob: -8.228821754455566
    7. '
' → logprob: -8.728821754455566
    8. ')' → logprob: -9.228821754455566
    9. '):
' → logprob: -9.728821754455566
    10. 'def' → logprob: -9.853821754455566

Token 207: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.16675354540348053
    2. ' prefix' → logprob: -1.9167535305023193
    3. '   ' → logprob: -5.041753768920898
    4. 'rem' → logprob: -11.916753768920898
    5. 'pref' → logprob: -12.041753768920898
    6. '```' → logprob: -12.041753768920898
    7. 'ps' → logprob: -12.166753768920898
    8. '(prefix' → logprob: -13.041753768920898
    9. '
' → logprob: -13.041753768920898
    10. '    
' → logprob: -13.041753768920898

Token 208: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.000009536743164
    3. '_sum' → logprob: -13.000009536743164
    4. ' _' → logprob: -15.500009536743164
    5. '_d' → logprob: -16.125009536743164
    6. '\' → logprob: -16.250009536743164
    7. '_counts' → logprob: -16.250009536743164
    8. 's' → logprob: -16.875009536743164
    9. '_lengths' → logprob: -16.875009536743164
    10. '_sub' → logprob: -17.125009536743164

Token 209: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.045354750007390976
    2. '_s' → logprob: -3.1703548431396484
    3. 's' → logprob: -6.170354843139648
    4. '_' → logprob: -8.545354843139648
    5. 'um' → logprob: -11.045354843139648
    6. '```' → logprob: -11.670354843139648
    7. '   ' → logprob: -11.795354843139648
    8. ' sums' → logprob: -12.045354843139648
    9. '_u' → logprob: -12.545354843139648
    10. '[' → logprob: -12.670354843139648

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020925104618073
    2. '=' → logprob: -2.3502092361450195
    3. ',' → logprob: -12.97520923614502
    4. ')' → logprob: -16.225210189819336
    5. 's' → logprob: -16.975210189819336
    6. '(' → logprob: -16.975210189819336
    7. ' ' → logprob: -17.100210189819336
    8. '  ' → logprob: -17.600210189819336
    9. ' ,' → logprob: -17.850210189819336
    10. '_' → logprob: -17.850210189819336

Token 211: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.12692810595035553
    2. ' compute' → logprob: -2.1269280910491943
    3. '.compute' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '[' → logprob: -19.001928329467773
    6. '_compute' → logprob: -19.251928329467773
    7. '   ' → logprob: -19.751928329467773
    8. 'computer' → logprob: -20.501928329467773
    9. 'comput' → logprob: -20.501928329467773
    10. 'computed' → logprob: -21.626928329467773

Token 212: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0010113727767020464
    2. 'prefix' → logprob: -7.001011371612549
    3. '_' → logprob: -9.251011848449707
    4. '(prefix' → logprob: -12.626011848449707
    5. ' prefix' → logprob: -15.876011848449707
    6. '_suffix' → logprob: -16.00101089477539
    7. '_pref' → logprob: -16.62601089477539
    8. '_pres' → logprob: -16.87601089477539
    9. '_PREFIX' → logprob: -17.50101089477539
    10. '_p' → logprob: -17.62601089477539

Token 213: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -14.000000953674316
    3. '_' → logprob: -16.500001907348633
    4. '_sum' → logprob: -17.625001907348633
    5. ' _' → logprob: -19.375001907348633
    6. '_prefix' → logprob: -19.625001907348633
    7. '_d' → logprob: -19.750001907348633
    8. '\' → logprob: -19.875001907348633
    9. '_suffix' → logprob: -20.125001907348633
    10. '_sub' → logprob: -20.125001907348633

Token 214: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0001979378139367327
    2. 's' → logprob: -9.125198364257812
    3. 'uffix' → logprob: -10.625198364257812
    4. 'um' → logprob: -11.500198364257812
    5. '```' → logprob: -11.750198364257812
    6. '_s' → logprob: -11.875198364257812
    7. '[' → logprob: -11.875198364257812
    8. '_' → logprob: -12.125198364257812
    9. 'ufs' → logprob: -12.625198364257812
    10. 'fix' → logprob: -12.625198364257812

Token 215: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -4.036524842376821e-05
    2. '(' → logprob: -10.125040054321289
    3. ' (' → logprob: -15.625040054321289
    4. 'A' → logprob: -16.62504005432129
    5. '```' → logprob: -19.37504005432129
    6. '(
' → logprob: -19.62504005432129
    7. '(a' → logprob: -20.12504005432129
    8. ')' → logprob: -20.12504005432129
    9. ' ' → logprob: -20.25004005432129
    10. '\(' → logprob: -20.62504005432129

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04863153398036957
    2. ',' → logprob: -3.048631429672241
    3. ',)' → logprob: -10.79863166809082
    4. ' )' → logprob: -11.29863166809082
    5. ',M' → logprob: -12.54863166809082
    6. '),' → logprob: -13.04863166809082
    7. ')
' → logprob: -13.17363166809082
    8. ' ,' → logprob: -13.29863166809082
    9. ' ' → logprob: -14.29863166809082
    10. '   ' → logprob: -14.67363166809082

Token 217: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.272713840007782
    2. '   ' → logprob: -1.6477138996124268
    3. '<|end|>' → logprob: -4.147713661193848
    4. '    
' → logprob: -4.897713661193848
    5. '  
' → logprob: -5.647713661193848
    6. '[' → logprob: -5.772713661193848
    7. '```' → logprob: -5.897713661193848
    8. ' ' → logprob: -6.147713661193848
    9. ' M' → logprob: -6.397713661193848
    10. '[M' → logprob: -6.522713661193848

Token 218: ' re' (ID: 322)
  Prédit: 'rema'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rema' → logprob: -0.006190191488713026
    2. ' re' → logprob: -5.631190299987793
    3. 'rem' → logprob: -6.381190299987793
    4. '   ' → logprob: -7.881190299987793
    5. 'ream' → logprob: -8.381190299987793
    6. ' ' → logprob: -9.631190299987793
    7. 'reas' → logprob: -10.006190299987793
    8. 're' (adapté à ' re') → logprob: -10.256190299987793
    9. 'reme' → logprob: -10.506190299987793
    10. 'remen' → logprob: -10.881190299987793

Token 219: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -4.227250610711053e-05
    2. '_ma' → logprob: -10.250041961669922
    3. 'mainder' → logprob: -12.000041961669922
    4. 'mai' → logprob: -16.125041961669922
    5. '_' → logprob: -16.250041961669922
    6. 'm' → logprob: -16.375041961669922
    7. 'main' → logprob: -16.500041961669922
    8. '­ma' → logprob: -16.500041961669922
    9. 'a' → logprob: -16.625041961669922
    10. 'ema' → logprob: -16.625041961669922

Token 220: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.005306927487254143
    2. 'nders' → logprob: -5.255306720733643
    3. 'inder' → logprob: -10.6303071975708
    4. 'ders' → logprob: -11.3803071975708
    5. '   ' → logprob: -11.5053071975708
    6. 'unders' → logprob: -12.1303071975708
    7. 'anders' → logprob: -12.2553071975708
    8. 'iners' → logprob: -12.6303071975708
    9. 'inde' → logprob: -12.7553071975708
    10. '```' → logprob: -13.3803071975708

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868720829486847
    2. ' =' → logprob: -1.1368720531463623
    3. ',' → logprob: -13.761872291564941
    4. ')' → logprob: -17.261871337890625
    5. '＝' → logprob: -17.511871337890625
    6. '[' → logprob: -17.886871337890625
    7. ' ' → logprob: -18.386871337890625
    8. ' ,' → logprob: -18.886871337890625
    9. ' =
' → logprob: -19.011871337890625
    10. ' =[' → logprob: -19.261871337890625

Token 222: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5759422183036804
    2. 'compute' → logprob: -0.8259422183036804
    3. '[' → logprob: -13.450942039489746
    4. ' [' → logprob: -13.950942039489746
    5. '.compute' → logprob: -15.325942039489746
    6. ' ' → logprob: -15.825942039489746
    7. '_compute' → logprob: -16.825942993164062
    8. 'calculate' → logprob: -17.825942993164062
    9. ' calculate' → logprob: -18.450942993164062
    10. 'comput' → logprob: -18.700942993164062

Token 223: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00013953536108601838
    2. '_' → logprob: -9.125139236450195
    3. '_com' → logprob: -11.625139236450195
    4. 're' → logprob: -11.750139236450195
    5. 'underscore' → logprob: -12.625139236450195
    6. '_prefix' → logprob: -13.000139236450195
    7. '```' → logprob: -13.625139236450195
    8. 'prefix' → logprob: -13.875139236450195
    9. 'unders' → logprob: -13.875139236450195
    10. '_
' → logprob: -14.250139236450195

Token 224: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -3.273621405242011e-05
    2. '_ma' → logprob: -10.750032424926758
    3. 'mainder' → logprob: -12.750032424926758
    4. 'a' → logprob: -13.000032424926758
    5. '[' → logprob: -13.250032424926758
    6. '(ma' → logprob: -13.875032424926758
    7. '_' → logprob: -14.000032424926758
    8. '```' → logprob: -14.500032424926758
    9. 'maids' → logprob: -15.250032424926758
    10. '   ' → logprob: -15.625032424926758

Token 225: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.009968681260943413
    2. 'nders' → logprob: -4.6349687576293945
    3. 'ders' → logprob: -9.634968757629395
    4. '[' → logprob: -10.634968757629395
    5. 'unders' → logprob: -10.634968757629395
    6. 'anders' → logprob: -11.134968757629395
    7. 'iders' → logprob: -11.384968757629395
    8. 'inder' → logprob: -11.384968757629395
    9. '```' → logprob: -11.384968757629395
    10. 'iners' → logprob: -11.759968757629395

Token 226: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -2.546478935983032e-05
    2. '(' → logprob: -10.625025749206543
    3. ' (' → logprob: -14.125025749206543
    4. 'prefix' → logprob: -15.750025749206543
    5. '(pref' → logprob: -15.750025749206543
    6. ' prefix' → logprob: -17.000024795532227
    7. '(pre' → logprob: -18.750024795532227
    8. '(predicate' → logprob: -18.875024795532227
    9. '(parent' → logprob: -19.125024795532227
    10. '(space' → logprob: -19.625024795532227

Token 227: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.347765181795694e-05
    2. 's' → logprob: -9.875053405761719
    3. '_' → logprob: -13.375053405761719
    4. '_sum' → logprob: -16.50005340576172
    5. ',' → logprob: -16.75005340576172
    6. ')' → logprob: -16.75005340576172
    7. ' _' → logprob: -17.12505340576172
    8. '_,' → logprob: -17.37505340576172
    9. '_m' → logprob: -17.75005340576172
    10. '_re' → logprob: -17.75005340576172

Token 228: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.028263280168175697
    2. 's' → logprob: -3.6532633304595947
    3. '_s' → logprob: -7.153263092041016
    4. 'ms' → logprob: -7.403263092041016
    5. 'prefix' → logprob: -8.903263092041016
    6. 'ims' → logprob: -9.278263092041016
    7. 'uffix' → logprob: -9.278263092041016
    8. 'm' → logprob: -9.778263092041016
    9. '_prefix' → logprob: -10.778263092041016
    10. 'ams' → logprob: -11.153263092041016

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006525091012008488
    2. ',M' → logprob: -7.375652313232422
    3. ' ,' → logprob: -10.750652313232422
    4. '(' → logprob: -13.250652313232422
    5. ',
' → logprob: -13.500652313232422
    6. '(M' → logprob: -14.375652313232422
    7. ',N' → logprob: -15.375652313232422
    8. ')' → logprob: -15.375652313232422
    9. '   ' → logprob: -15.750652313232422
    10. ',m' → logprob: -16.750652313232422

Token 230: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.1128358319401741
    2. 'M' → logprob: -2.2378358840942383
    3. ')' → logprob: -11.362835884094238
    4. ' ' → logprob: -13.862835884094238
    5. ' ' → logprob: -14.987835884094238
    6. ' )' → logprob: -15.737835884094238
    7. '`' → logprob: -16.487834930419922
    8. ' 
' → logprob: -16.737834930419922
    9. '
' → logprob: -16.862834930419922
    10. '```' → logprob: -17.237834930419922

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -15.500007629394531
    4. '   ' → logprob: -17.87500762939453
    5. ')

' → logprob: -18.12500762939453
    6. '),' → logprob: -18.62500762939453
    7. ')#' → logprob: -18.62500762939453
    8. ')
' → logprob: -18.75000762939453
    9. ')return' → logprob: -19.12500762939453
    10. '))' → logprob: -19.12500762939453

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35461050271987915
    2. '
' → logprob: -1.2296104431152344
    3. 'd' → logprob: -5.604610443115234
    4. '    
' → logprob: -6.604610443115234
    5. 'rem' → logprob: -7.479610443115234
    6. '<|end|>' → logprob: -8.354610443115234
    7. '```' → logprob: -9.729610443115234
    8. 'return' → logprob: -10.229610443115234
    9. '  ' → logprob: -10.229610443115234
    10. '  
' → logprob: -10.479610443115234

Token 233: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' (adapté à ' rem') → logprob: -0.4342254102230072
    2. ' rem' → logprob: -1.4342254400253296
    3. '   ' → logprob: -2.68422532081604
    4. 'd' → logprob: -3.68422532081604
    5. ' d' → logprob: -5.059225559234619
    6. 'count' → logprob: -5.184225559234619
    7. 'counter' → logprob: -5.934225559234619
    8. 'counts' → logprob: -6.059225559234619
    9. ' counter' → logprob: -7.434225559234619
    10. ' counts' → logprob: -7.559225559234619

Token 234: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.005267907399684191
    2. '_counts' → logprob: -5.255268096923828
    3. '_counter' → logprob: -10.505268096923828
    4. '_cnt' → logprob: -13.380268096923828
    5. 'ains' → logprob: -13.630268096923828
    6. 'count' → logprob: -13.880268096923828
    7. 'ount' → logprob: -14.005268096923828
    8. 's' → logprob: -14.005268096923828
    9. '_dict' → logprob: -14.380268096923828
    10. '_' → logprob: -15.630268096923828

Token 235: '_dict' (ID: 11295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012767198495566845
    2. ' =' → logprob: -4.762767314910889
    3. 's' → logprob: -6.137767314910889
    4. '_dict' → logprob: -6.387767314910889
    5. 'dict' → logprob: -8.13776683807373
    6. 'd' → logprob: -12.76276683807373
    7. '_=' → logprob: -13.01276683807373
    8. '_' → logprob: -13.01276683807373
    9. 'Dict' → logprob: -14.26276683807373
    10. '=dict' → logprob: -14.26276683807373

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -18.326414108276367
    4. ',' → logprob: -18.451414108276367
    5. '＝' → logprob: -18.701414108276367
    6. ')' → logprob: -18.826414108276367
    7. '   ' → logprob: -19.076414108276367
    8. '[' → logprob: -19.201414108276367
    9. ' =
' → logprob: -19.701414108276367
    10. ')=' → logprob: -19.701414108276367

Token 237: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0011703446507453918
    2. ' count' → logprob: -6.7511701583862305
    3. 'collections' → logprob: -15.75117015838623
    4. '   ' → logprob: -18.876171112060547
    5. '(count' → logprob: -19.126171112060547
    6. ' ' → logprob: -19.376171112060547
    7. 'counts' → logprob: -19.751171112060547
    8. 'counter' → logprob: -20.001171112060547
    9. '	count' → logprob: -20.126171112060547
    10. '[count' → logprob: -21.751171112060547

Token 238: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.10153934359550476
    2. '(re' → logprob: -2.351539373397827
    3. 'rema' → logprob: -7.726539134979248
    4. '_' → logprob: -8.101539611816406
    5. '_(' → logprob: -8.351539611816406
    6. 're' → logprob: -8.726539611816406
    7. '_rem' → logprob: -9.226539611816406
    8. '(' → logprob: -9.726539611816406
    9. 's' → logprob: -11.351539611816406
    10. '(rem' → logprob: -11.976539611816406

Token 239: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -1.27099974633893e-05
    2. 'mainder' → logprob: -12.125012397766113
    3. 'maids' → logprob: -13.375012397766113
    4. 'm' → logprob: -13.750012397766113
    5. '_ma' → logprob: -14.250012397766113
    6. '(ma' → logprob: -14.250012397766113
    7. 'main' → logprob: -14.500012397766113
    8. 'rema' → logprob: -14.625012397766113
    9. 'mai' → logprob: -14.875012397766113
    10. 'maid' → logprob: -15.000012397766113

Token 240: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.0020976837258785963
    2. 'nders' → logprob: -6.2520976066589355
    3. 'ma' → logprob: -9.627098083496094
    4. 'anders' → logprob: -10.752098083496094
    5. 'iners' → logprob: -11.252098083496094
    6. 'inder' → logprob: -11.627098083496094
    7. 'a' → logprob: -12.127098083496094
    8. 'ind' → logprob: -12.127098083496094
    9. '[' → logprob: -12.252098083496094
    10. 'iders' → logprob: -12.252098083496094

Token 241: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -5.438573680294212e-06
    2. '(rem' → logprob: -12.250005722045898
    3. '(' → logprob: -15.125005722045898
    4. ' (' → logprob: -15.500005722045898
    5. 'rema' → logprob: -17.2500057220459
    6. '(return' → logprob: -19.2500057220459
    7. '(def' → logprob: -19.2500057220459
    8. '(rest' → logprob: -19.3750057220459
    9. '```' → logprob: -19.5000057220459
    10. '(r' → logprob: -19.6250057220459

Token 242: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.00016802136087790132
    2. 'm' → logprob: -9.875167846679688
    3. 'maids' → logprob: -10.000167846679688
    4. 'mainder' → logprob: -10.500167846679688
    5. '_ma' → logprob: -11.875167846679688
    6. 'mand' → logprob: -12.500167846679688
    7. 'mai' → logprob: -12.500167846679688
    8. 'mada' → logprob: -12.625167846679688
    9. 'mma' → logprob: -13.000167846679688
    10. 'mad' → logprob: -13.000167846679688

Token 243: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.01735827885568142
    2. 'nders' → logprob: -4.267358303070068
    3. '_count' → logprob: -6.642358303070068
    4. 'ind' → logprob: -7.517358303070068
    5. 'inder' → logprob: -7.892358303070068
    6. 'ders' → logprob: -8.14235782623291
    7. 'anders' → logprob: -9.14235782623291
    8. 'ma' → logprob: -9.51735782623291
    9. 'd' → logprob: -9.64235782623291
    10. '_dict' → logprob: -9.76735782623291

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. ')
' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.500053405761719
    4. ' )' → logprob: -15.875053405761719
    5. ')return' → logprob: -16.87505340576172
    6. ' ' → logprob: -17.62505340576172
    7. ')

' → logprob: -18.37505340576172
    8. ')
' → logprob: -18.37505340576172
    9. '))' → logprob: -19.12505340576172
    10. '),' → logprob: -19.50005340576172

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012111874530091882
    2. '
' → logprob: -7.751211166381836
    3. 'return' → logprob: -8.001211166381836
    4. ' return' → logprob: -8.126211166381836
    5. '    
' → logprob: -9.626211166381836
    6. '	return' → logprob: -11.001211166381836
    7. '	ans' → logprob: -11.251211166381836
    8. '    ' → logprob: -11.501211166381836
    9. '<|end|>' → logprob: -11.501211166381836
    10. '  ' → logprob: -12.001211166381836

Token 246: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004863819107413292
    2. 'ans' (adapté à ' ans') → logprob: -6.004863739013672
    3. '   ' → logprob: -6.129863739013672
    4. ' return' → logprob: -8.629863739013672
    5. 'answer' → logprob: -10.879863739013672
    6. 'result' → logprob: -11.629863739013672
    7. '
' → logprob: -14.379863739013672
    8. ' ans' → logprob: -14.754863739013672
    9. 'ret' → logprob: -15.254863739013672
    10. '	return' → logprob: -15.629863739013672

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014208436012268
    2. '=' → logprob: -1.701420783996582
    3. ' +=' → logprob: -12.701420783996582
    4. ' ' → logprob: -13.201420783996582
    5. ' =)' → logprob: -13.326420783996582
    6. ' =
' → logprob: -15.201420783996582
    7. ')' → logprob: -15.576420783996582
    8. '_' → logprob: -16.5764217376709
    9. '   ' → logprob: -16.8264217376709
    10. '＝' → logprob: -17.0764217376709

Token 248: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.014164329506456852
    2. 'sum' → logprob: -4.264164447784424
    3. '	sum' → logprob: -14.264163970947266
    4. '(sum' → logprob: -16.139163970947266
    5. ' suma' → logprob: -17.264163970947266
    6. ' sums' → logprob: -17.514163970947266
    7. '=sum' → logprob: -17.514163970947266
    8. '_sum' → logprob: -17.639163970947266
    9. ',sum' → logprob: -18.139163970947266
    10. '<|end|>' → logprob: -18.264163970947266

Token 249: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -3.531315314830863e-06
    2. '_comb' → logprob: -12.750003814697266
    3. '_' → logprob: -14.875003814697266
    4. '\' → logprob: -16.500003814697266
    5. 'com' → logprob: -17.125003814697266
    6. '(com' → logprob: -17.625003814697266
    7. '(_' → logprob: -17.750003814697266
    8. '(' → logprob: -17.750003814697266
    9. '_connections' → logprob: -18.000003814697266
    10. '_con' → logprob: -18.125003814697266

Token 250: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.014484897255897522
    2. 'b' → logprob: -4.264484882354736
    3. 'inations' → logprob: -8.889485359191895
    4. '_com' → logprob: -10.014485359191895
    5. 'com' → logprob: -10.264485359191895
    6. 'ptions' → logprob: -11.139485359191895
    7. 'utations' → logprob: -11.139485359191895
    8. 'bi' → logprob: -11.264485359191895
    9. 'ans' → logprob: -11.514485359191895
    10. 'bin' → logprob: -12.139485359191895

Token 251: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -7.896309739408025e-07
    2. 'for' → logprob: -14.125000953674316
    3. 'For' → logprob: -18.75
    4. '   ' → logprob: -19.25
    5. '_FOR' → logprob: -19.375
    6. '```' → logprob: -20.75
    7. ' for' → logprob: -21.0
    8. '(for' → logprob: -21.0
    9. '[' → logprob: -21.125
    10. '_' → logprob: -21.25

Token 252: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.00016218038217630237
    2. '_rem' → logprob: -8.750162124633789
    3. 're' → logprob: -13.500162124633789
    4. 'rem' → logprob: -14.125162124633789
    5. '_com' → logprob: -14.625162124633789
    6. '_res' → logprob: -15.000162124633789
    7. '(re' → logprob: -15.625162124633789
    8. 'rema' → logprob: -15.750162124633789
    9. '
' → logprob: -15.875162124633789
    10. '(rem' → logprob: -17.00016212463379

Token 253: 'ma' (ID: 809)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1997460275888443
    2. 'ma' → logprob: -2.5747461318969727
    3. 'mand' → logprob: -3.0747461318969727
    4. 'em' → logprob: -3.1997461318969727
    5. 'mainder' → logprob: -4.574746131896973
    6. 'rem' → logprob: -6.324746131896973
    7. 'mant' → logprob: -6.824746131896973
    8. 'md' → logprob: -6.824746131896973
    9. 'mad' → logprob: -7.324746131896973
    10. 'main' → logprob: -7.449746131896973

Token 254: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.39972078800201416
    2. 'ind' → logprob: -1.2747207880020142
    3. 'inder' → logprob: -3.5247206687927246
    4. 'nders' → logprob: -4.774720668792725
    5. 'nd' → logprob: -5.899720668792725
    6. '_dict' → logprob: -6.274720668792725
    7. 'nder' → logprob: -6.524720668792725
    8. '_count' → logprob: -6.774720668792725
    9. 'dict' → logprob: -7.024720668792725
    10. 'd' → logprob: -7.149720668792725

Token 255: '(rem' (ID: 150425)
  Prédit: '(rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(re' → logprob: -17.5
    4. 'rem' → logprob: -17.625
    5. '(rest' → logprob: -19.125
    6. '(Rem' → logprob: -19.125
    7. ' (' → logprob: -19.875
    8. '(
' → logprob: -20.0
    9. '(rel' → logprob: -20.125
    10. ' rem' → logprob: -20.125

Token 256: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.750007629394531
    3. 'count' → logprob: -13.125007629394531
    4. '_c' → logprob: -13.875007629394531
    5. '_dict' → logprob: -14.750007629394531
    6. '\' → logprob: -15.875007629394531
    7. '_cnt' → logprob: -16.25000762939453
    8. 'ount' → logprob: -16.75000762939453
    9. '_
' → logprob: -16.87500762939453
    10. 'm' → logprob: -17.37500762939453

Token 257: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0017205192707479
    2. 'dict' → logprob: -6.376720428466797
    3. 'ict' → logprob: -11.001720428466797
    4. '_DICT' → logprob: -14.251720428466797
    5. 'edict' → logprob: -15.126720428466797
    6. 'Dict' → logprob: -15.376720428466797
    7. ')' → logprob: -15.876720428466797
    8. '.dict' → logprob: -16.126720428466797
    9. ' dict' → logprob: -16.376720428466797
    10. 'd' → logprob: -17.001720428466797

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000743995129596442
    2. ')
' → logprob: -7.250743865966797
    3. '   ' → logprob: -10.375743865966797
    4. ')return' → logprob: -13.500743865966797
    5. ' )' → logprob: -13.875743865966797
    6. ')
' → logprob: -15.500743865966797
    7. '
' → logprob: -16.625743865966797
    8. ')

' → logprob: -16.750743865966797
    9. ' ' → logprob: -17.125743865966797
    10. 'return' → logprob: -17.500743865966797

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2246291337069124e-05
    2. ' return' → logprob: -11.250021934509277
    3. 'return' → logprob: -11.875021934509277
    4. '
' → logprob: -13.750021934509277
    5. '	return' → logprob: -14.625021934509277
    6. '<|end|>' → logprob: -14.750021934509277
    7. '    
' → logprob: -15.750021934509277
    8. '       ' → logprob: -17.375022888183594
    9. '    ' → logprob: -17.500022888183594
    10. '```' → logprob: -17.875022888183594

Token 260: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008037405088543892
    2. 'return' (adapté à ' return') → logprob: -5.008037567138672
    3. ' return' → logprob: -6.633037567138672
    4. '	return' → logprob: -12.383037567138672
    5. '
' → logprob: -15.258037567138672
    6. ':return' → logprob: -15.883037567138672
    7. 'def' → logprob: -16.008037567138672
    8. 'eturn' → logprob: -16.883037567138672
    9. '    
' → logprob: -17.133037567138672
    10. '_return' → logprob: -17.133037567138672

Token 261: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20143848657608032
    2. 'ans' → logprob: -1.7014384269714355
    3. '(ans' → logprob: -10.701438903808594
    4. '	ans' → logprob: -12.951438903808594
    5. '_ans' → logprob: -15.326438903808594
    6. 'anst' → logprob: -17.076438903808594
    7. 'answer' → logprob: -18.326438903808594
    8. ' an' → logprob: -18.326438903808594
    9. ' ' → logprob: -18.576438903808594
    10. '0' → logprob: -18.951438903808594

Token 262: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5528731346130371
    2. 'if' → logprob: -1.302873134613037
    3. '
' → logprob: -3.052873134613037
    4. 'n' → logprob: -3.177873134613037
    5. '#' → logprob: -3.302873134613037
    6. 'N' → logprob: -4.677873134613037
    7. '\n' → logprob: -5.302873134613037
    8. '```' → logprob: -5.552873134613037
    9. '[' → logprob: -5.677873134613037
    10. '<|end|>' → logprob: -5.927873134613037

Token 263: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25898879766464233
    2. 'n' → logprob: -2.383988857269287
    3. 'N' → logprob: -2.633988857269287
    4. '#' → logprob: -3.383988857269287
    5. 'def' → logprob: -3.508988857269287
    6. 'print' → logprob: -9.258988380432129
    7. '```' → logprob: -9.383988380432129
    8. 'for' → logprob: -9.883988380432129
    9. ' if' → logprob: -10.508988380432129
    10. 'a' → logprob: -10.633988380432129

Token 264: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -4.870950215263292e-05
    2. 'main' → logprob: -10.125048637390137
    3. ' solve' → logprob: -12.125048637390137
    4. ' __' → logprob: -13.125048637390137
    5. '_main' → logprob: -14.375048637390137
    6. '	main' → logprob: -15.500048637390137
    7. '__' → logprob: -15.750048637390137
    8. ' run' → logprob: -16.000049591064453
    9. ' ' → logprob: -17.125049591064453
    10. ' _' → logprob: -17.250049591064453

Token 265: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.816093228830141e-06
    2. '():
' → logprob: -13.12500286102295
    3. ' ():' → logprob: -14.37500286102295
    4. '()' → logprob: -15.87500286102295
    5. '(' → logprob: -17.750001907348633
    6. '():
' → logprob: -18.875001907348633
    7. '():

' → logprob: -19.625001907348633
    8. ':' → logprob: -20.625001907348633
    9. '(":' → logprob: -21.000001907348633
    10. '()>' → logprob: -21.375001907348633

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031102150678634644
    2. 'N' → logprob: -6.003110408782959
    3. ' N' → logprob: -8.2531099319458
    4. '	N' → logprob: -9.0031099319458
    5. '    
' → logprob: -9.0031099319458
    6. '
' → logprob: -10.0031099319458
    7. '(N' → logprob: -10.1281099319458
    8. 'n' → logprob: -10.8781099319458
    9. '```' → logprob: -11.7531099319458
    10. ' ' → logprob: -13.0031099319458

Token 267: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.12034876644611359
    2. '   ' → logprob: -2.8703486919403076
    3. ' N' → logprob: -2.8703486919403076
    4. '	N' → logprob: -10.995348930358887
    5. ' ' → logprob: -11.995348930358887
    6. 'n' → logprob: -12.245348930358887
    7. '  ' → logprob: -13.370348930358887
    8. '_N' → logprob: -14.745348930358887
    9. '    ' → logprob: -15.495348930358887
    10. 'Ｎ' → logprob: -15.620348930358887

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001483564410591498
    2. ',M' → logprob: -9.00014877319336
    3. ' ,' → logprob: -10.62514877319336
    4. 'M' → logprob: -15.37514877319336
    5. ',
' → logprob: -16.00014877319336
    6. '_,' → logprob: -16.25014877319336
    7. ',N' → logprob: -16.87514877319336
    8. '   ' → logprob: -17.12514877319336
    9. ',m' → logprob: -17.12514877319336
    10. '=' → logprob: -17.50014877319336

Token 269: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.051266320049762726
    2. 'M' → logprob: -3.1762664318084717
    3. ' ' → logprob: -5.051266193389893
    4. '<|end|>' → logprob: -6.426266193389893
    5. 'space' → logprob: -10.17626667022705
    6. ')' → logprob: -10.17626667022705
    7. ' ' → logprob: -10.55126667022705
    8. '  ' → logprob: -10.80126667022705
    9. '    ' → logprob: -11.17626667022705
    10. ' 
' → logprob: -11.30126667022705

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759556889533997
    2. ' =' → logprob: -0.8259556889533997
    3. ',' → logprob: -11.575955390930176
    4. '   ' → logprob: -12.575955390930176
    5. '=input' → logprob: -13.825955390930176
    6. ')' → logprob: -14.200955390930176
    7. ' ' → logprob: -14.950955390930176
    8. '    ' → logprob: -14.950955390930176
    9. '＝' → logprob: -15.450955390930176
    10. '=N' → logprob: -15.700955390930176

Token 271: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.006719759665429592
    2. 'read' → logprob: -5.006719589233398
    3. ' map' → logprob: -12.381719589233398
    4. '	read' → logprob: -15.631719589233398
    5. 'map' → logprob: -16.8817195892334
    6. ' ' → logprob: -18.6317195892334
    7. '   ' → logprob: -18.7567195892334
    8. '  ' → logprob: -19.0067195892334
    9. ' tuple' → logprob: -19.0067195892334
    10. ' input' → logprob: -19.0067195892334

Token 272: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.028201043605804443
    2. '_' → logprob: -3.778201103210449
    3. '()' → logprob: -5.528201103210449
    4. '(' → logprob: -7.278201103210449
    5. '('_' → logprob: -9.27820110321045
    6. 'N' → logprob: -10.27820110321045
    7. '('' → logprob: -10.65320110321045
    8. '("_' → logprob: -11.02820110321045
    9. ' ' → logprob: -11.27820110321045
    10. ' _' → logprob: -11.40320110321045

Token 273: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.4500308632850647
    2. '_' → logprob: -1.07503080368042
    3. '()' → logprob: -4.20003080368042
    4. ',' → logprob: -5.95003080368042
    5. '(' → logprob: -6.70003080368042
    6. ',_' → logprob: -7.07503080368042
    7. ' _' → logprob: -7.70003080368042
    8. 'M' → logprob: -9.075031280517578
    9. '   ' → logprob: -9.200031280517578
    10. '_S' → logprob: -9.200031280517578

Token 274: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.234689399600029
    2. '<|end|>' → logprob: -2.109689474105835
    3. '   ' → logprob: -2.484689474105835
    4. '    
' → logprob: -6.234689235687256
    5. '  
' → logprob: -6.984689235687256
    6. '<|end|>' → logprob: -7.359689235687256
    7. '```' → logprob: -8.484689712524414
    8. '
' → logprob: -9.234689712524414
    9. ' 
' → logprob: -9.359689712524414
    10. '#' → logprob: -9.359689712524414

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2918411195278168
    2. '
' → logprob: -1.6668411493301392
    3. 'A' → logprob: -2.7918410301208496
    4. ' A' → logprob: -6.54184103012085
    5. '    
' → logprob: -7.04184103012085
    6. '	A' → logprob: -7.91684103012085
    7. '```' → logprob: -9.166841506958008
    8. 'for' → logprob: -10.666841506958008
    9. '<|end|>' → logprob: -10.666841506958008
    10. ',A' → logprob: -10.666841506958008

Token 276: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00042030587792396545
    2. ' A' → logprob: -8.125420570373535
    3. '   ' → logprob: -9.000420570373535
    4. 'for' → logprob: -14.500420570373535
    5. '	A' → logprob: -15.750420570373535
    6. '  ' → logprob: -16.12541961669922
    7. ' ' → logprob: -16.75041961669922
    8. 'a' → logprob: -17.37541961669922
    9. '```' → logprob: -17.37541961669922
    10. '
' → logprob: -17.62541961669922

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741990864276886
    2. ' =' → logprob: -0.9741990566253662
    3. '()' → logprob: -9.474199295043945
    4. '(' → logprob: -10.224199295043945
    5. ')' → logprob: -12.849199295043945
    6. '   ' → logprob: -12.849199295043945
    7. ' ' → logprob: -14.349199295043945
    8. '[' → logprob: -14.349199295043945
    9. '  ' → logprob: -14.599199295043945
    10. '_' → logprob: -14.974199295043945

Token 278: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10020667314529419
    2. ' read' → logprob: -2.3502066135406494
    3. '	read' → logprob: -19.22520637512207
    4. '(read' → logprob: -21.35020637512207
    5. '_read' → logprob: -22.47520637512207
    6. '.read' → logprob: -23.10020637512207
    7. 'Read' → logprob: -23.60020637512207
    8. ' ' → logprob: -23.85020637512207
    9. '  ' → logprob: -24.22520637512207
    10. '   ' → logprob: -24.22520637512207

Token 279: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -7.896309739408025e-07
    2. 'A' → logprob: -15.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. '(A' → logprob: -17.875
    6. '()' → logprob: -19.0
    7. '(' → logprob: -19.125
    8. ' _' → logprob: -19.875
    9. '_B' → logprob: -19.875
    10. '`' → logprob: -19.875

Token 280: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2847399413585663
    2. '
' → logprob: -1.4097399711608887
    3. '<|end|>' → logprob: -5.784739971160889
    4. '    
' → logprob: -8.15973949432373
    5. '  
' → logprob: -9.53473949432373
    6. '<|end|>' → logprob: -10.53473949432373
    7. '
' → logprob: -10.65973949432373
    8. '  ' → logprob: -10.90973949432373
    9. '[' → logprob: -11.28473949432373
    10. '   
' → logprob: -11.40973949432373

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007042104844003916
    2. '
' → logprob: -8.000703811645508
    3. '    
' → logprob: -8.375703811645508
    4. '<|end|>' → logprob: -9.250703811645508
    5. '```' → logprob: -11.500703811645508
    6. 'print' → logprob: -11.500703811645508
    7. 'result' → logprob: -11.750703811645508
    8. '	ans' → logprob: -12.625703811645508
    9. 'ans' → logprob: -12.875703811645508
    10. '  
' → logprob: -13.375703811645508

Token 282: ' print' (ID: 2123)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8340719938278198
    2. 'print' (adapté à ' print') → logprob: -0.8340719938278198
    3. 'result' → logprob: -2.2090721130371094
    4. 'answer' → logprob: -4.084072113037109
    5. '   ' → logprob: -6.084072113037109
    6. ' ans' → logprob: -6.709072113037109
    7. 'res' → logprob: -7.334072113037109
    8. ' print' → logprob: -8.20907211303711
    9. ' result' → logprob: -8.33407211303711
    10. '	ans' → logprob: -9.70907211303711

Token 283: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -16.125335693359375
    4. 'd' → logprob: -18.625335693359375
    5. '()' → logprob: -19.625335693359375
    6. '(f' → logprob: -19.750335693359375
    7. '((' → logprob: -19.875335693359375
    8. '(D' → logprob: -20.125335693359375
    9. '(dc' → logprob: -20.125335693359375
    10. '("' → logprob: -20.250335693359375

Token 284: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.10023535788059235
    2. '_' → logprob: -2.3502354621887207
    3. '_C' → logprob: -11.725234985351562
    4. ')_' → logprob: -12.225234985351562
    5. '_)' → logprob: -12.350234985351562
    6. ' _' → logprob: -12.475234985351562
    7. ')' → logprob: -12.600234985351562
    8. '_d' → logprob: -12.850234985351562
    9. '_s' → logprob: -15.600234985351562
    10. '_
' → logprob: -15.600234985351562

Token 285: 'andy' (ID: 16898)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14277023077011108
    2. 'andy' → logprob: -2.267770290374756
    3. '_' → logprob: -4.017770290374756
    4. '_a' → logprob: -5.517770290374756
    5. 'c' → logprob: -5.767770290374756
    6. 'a' → logprob: -6.267770290374756
    7. ' _' → logprob: -6.892770290374756
    8. 'and' → logprob: -7.642770290374756
    9. '\' → logprob: -9.017769813537598
    10. '```' → logprob: -9.142769813537598

Token 286: '_distribution' (ID: 102196)
  Prédit: '_distribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distribution' → logprob: -1.3856492842023727e-06
    2. '_c' → logprob: -14.125000953674316
    3. 'distribution' → logprob: -14.625000953674316
    4. '_dis' → logprob: -16.375001907348633
    5. '_d' → logprob: -18.000001907348633
    6. '_dist' → logprob: -18.875001907348633
    7. ' distribution' → logprob: -18.875001907348633
    8. 'Distribution' → logprob: -19.250001907348633
    9. '_' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.125001907348633

Token 287: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011080360971391201
    2. '(' → logprob: -4.511080265045166
    3. ' (' → logprob: -10.511080741882324
    4. '(
' → logprob: -12.386080741882324
    5. ')(' → logprob: -14.636080741882324
    6. ')' → logprob: -14.886080741882324
    7. '(n' → logprob: -16.011079788208008
    8. ' ' → logprob: -16.261079788208008
    9. '   ' → logprob: -17.386079788208008
    10. '(

' → logprob: -17.386079788208008

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ',M' → logprob: -10.625031471252441
    3. ' ,' → logprob: -12.125031471252441
    4. ',
' → logprob: -14.000031471252441
    5. ')' → logprob: -15.500031471252441
    6. '‌,' → logprob: -16.500030517578125
    7. '   ' → logprob: -17.125030517578125
    8. ',m' → logprob: -18.125030517578125
    9. ',

' → logprob: -18.250030517578125
    10. ' ' → logprob: -18.750030517578125

Token 289: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5231971144676208
    2. 'M' → logprob: -0.8981971144676208
    3. ')' → logprob: -9.773197174072266
    4. ' ' → logprob: -11.398197174072266
    5. ' ' → logprob: -13.398197174072266
    6. ''' → logprob: -13.773197174072266
    7. ' 
' → logprob: -14.273197174072266
    8. '"' → logprob: -14.898197174072266
    9. '```' → logprob: -15.023197174072266
    10. 'space' → logprob: -15.148197174072266

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.129266067640856e-05
    2. ',A' → logprob: -10.875020980834961
    3. ' ,' → logprob: -13.625020980834961
    4. ',
' → logprob: -14.000020980834961
    5. '   ' → logprob: -16.00002098083496
    6. ')' → logprob: -16.12502098083496
    7. 'A' → logprob: -17.12502098083496
    8. '```' → logprob: -19.50002098083496
    9. ',

' → logprob: -20.00002098083496
    10. ' ' → logprob: -20.12502098083496

Token 291: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011048054322600365
    2. ' A' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.761048316955566
    4. '   ' → logprob: -16.26104736328125
    5. '	A' → logprob: -17.13604736328125
    6. '[A' → logprob: -17.13604736328125
    7. ')' → logprob: -17.88604736328125
    8. '  ' → logprob: -18.76104736328125
    9. '[' → logprob: -19.13604736328125
    10. 'M' → logprob: -19.38604736328125

Token 292: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019331586081534624
    2. '))' → logprob: -6.2519330978393555
    3. '())' → logprob: -12.501933097839355
    4. ' )' → logprob: -15.501933097839355
    5. '()' → logprob: -15.751933097839355
    6. ')
' → logprob: -15.876933097839355
    7. ')))' → logprob: -16.376934051513672
    8. '`)' → logprob: -16.876934051513672
    9. ')`' → logprob: -17.001934051513672
    10. '   ' → logprob: -17.126934051513672

Token 293: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0683535037969705e-05
    2. ' if' → logprob: -11.87501049041748
    3. '```' → logprob: -13.37501049041748
    4. '
' → logprob: -14.00001049041748
    5. 'main' → logprob: -14.00001049041748
    6. '\n' → logprob: -15.37501049041748
    7. '\' → logprob: -16.500011444091797
    8. 'print' → logprob: -16.750011444091797
    9. 'for' → logprob: -17.125011444091797
    10. '#' → logprob: -18.000011444091797

Token 294: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 292
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 264
Précision stricte (1ère position): 49.32%
Précision adaptée (1ère position): 52.74%
Précision (top 10): 90.41%
================================================================================
