================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def recurrence_sequence(r, D, x_initial):
    """
    Calcule et affiche les 10 premières valeurs d'une suite définie par récurrence.
    
    La suite est définie comme suit :
        x_{n+1} = r * x_n - D
    où :
        - r (int) : le coefficient multiplicateur
        - D (int) : la valeur à soustraire à chaque itération
        - x_initial (int) : la valeur initiale x_0
        
    Les 10 premières valeurs calculées (x_1 à x_10) sont affichées à l'écran.
    
    Paramètres
    ----------
    r : int
        Le coefficient multiplicatif de la récurrence.
    D : int
        La constante soustraite à chaque itération.
    x_initial : int
        La valeur initiale de la suite (x_0).
    """
    # Initialisation de la variable x avec la valeur initiale x_0
    x = x_initial

    # Calcul et affichage des 10 premières valeurs de la suite
    for i in range(10):
        # Application de la relation de récurrence pour obtenir la nouvelle valeur de x
        x = r * x - D
        # Affichage de la valeur courante de x
        print(x)

def main():
    """
    Demande à l'utilisateur de saisir trois entiers séparés par des espaces (r, D, x_0),
    puis génère et affiche les 10 premières valeurs de la suite définie par la fonction recurrence_sequence().
    """
    # Demande à l'utilisateur de saisir les valeurs pour r, D et x_initial
    r, D, x_initial = map(int, input("Entrez r, D et x_0 séparés par des espaces : ").split())
    # Appelle la fonction qui traite la suite et affiche les résultats
    recurrence_sequence(r, D, x_initial)

# Appel du point d'entrée si le script est exécuté directement
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' recurrence' (ID: 127370)
  → Token d'amorce (pas de prédiction)

Token 2: '_sequence' (ID: 55606)
  → Token d'amorce (pas de prédiction)

Token 3: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002628684975206852
    2. '_' → logprob: -6.002628803253174
    3. '(:' → logprob: -9.752628326416016
    4. '```' → logprob: -10.127628326416016
    5. ':' → logprob: -10.877628326416016
    6. ' (' → logprob: -12.377628326416016
    7. '(_:' → logprob: -12.502628326416016
    8. '():' → logprob: -12.752628326416016
    9. '(
' → logprob: -12.877628326416016
    10. '_:' → logprob: -12.877628326416016

Token 4: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9838969111442566
    2. 'u' → logprob: -0.9838969111442566
    3. ')' → logprob: -1.4838969707489014
    4. '(' → logprob: -4.733896732330322
    5. 'a' → logprob: -4.983896732330322
    6. '_' → logprob: -5.483896732330322
    7. ',' → logprob: -6.358896732330322
    8. '):' → logprob: -6.358896732330322
    9. ')e' → logprob: -7.858896732330322
    10. ',u' → logprob: -8.10889720916748

Token 5: ' D' (ID: 415)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29766419529914856
    2. 'n' → logprob: -1.5476641654968262
    3. ' x' → logprob: -3.672664165496826
    4. 'x' → logprob: -4.672664165496826
    5. ' ' → logprob: -6.422664165496826
    6. ' a' → logprob: -6.922664165496826
    7. ' i' → logprob: -7.047664165496826
    8. 'i' → logprob: -7.172664165496826
    9. 'a' → logprob: -7.297664165496826
    10. ' t' → logprob: -7.297664165496826

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6353747844696045
    2. ',' → logprob: -0.7603747844696045
    3. ')' → logprob: -6.385375022888184
    4. '[' → logprob: -7.760375022888184
    5. ':' → logprob: -8.760375022888184
    6. ' ,' → logprob: -9.760375022888184
    7. ',n' → logprob: -10.135375022888184
    8. 'u' → logprob: -10.510375022888184
    9. '[]):' → logprob: -10.760375022888184
    10. 'e' → logprob: -10.885375022888184

Token 7: ' x' (ID: 1215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5111899971961975
    2. 'n' → logprob: -1.1361899375915527
    3. ' x' → logprob: -4.261189937591553
    4. ' N' → logprob: -4.761189937591553
    5. 'x' → logprob: -4.886189937591553
    6. 'N' → logprob: -5.511189937591553
    7. ' k' → logprob: -5.823689937591553
    8. ' i' → logprob: -5.886189937591553
    9. ' t' → logprob: -6.011189937591553
    10. ' ' → logprob: -6.073689937591553

Token 8: '_initial' (ID: 45740)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05757638067007065
    2. ',' → logprob: -3.0575764179229736
    3. ')' → logprob: -5.9325761795043945
    4. 's' → logprob: -6.5575761795043945
    5. '_' → logprob: -6.6825761795043945
    6. '0' → logprob: -6.8075761795043945
    7. '[' → logprob: -6.8075761795043945
    8. '_,' → logprob: -8.682576179504395
    9. 'n' → logprob: -8.932576179504395
    10. '_n' → logprob: -8.932576179504395

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02348363772034645
    2. ',' → logprob: -3.8984837532043457
    3. ')' → logprob: -5.898483753204346
    4. ':' → logprob: -9.273483276367188
    5. '```' → logprob: -10.523483276367188
    6. '):
' → logprob: -11.023483276367188
    7. 's' → logprob: -11.398483276367188
    8. ' ):' → logprob: -12.023483276367188
    9. ''):' → logprob: -12.023483276367188
    10. '_' → logprob: -12.148483276367188

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06393551081418991
    2. '   ' → logprob: -2.9389355182647705
    3. '```' → logprob: -4.938935279846191
    4. ':
' → logprob: -7.313935279846191
    5. '    
' → logprob: -8.438935279846191
    6. '":' → logprob: -8.938935279846191
    7. '):' → logprob: -8.938935279846191
    8. '`:' → logprob: -9.188935279846191
    9. ':\' → logprob: -9.688935279846191
    10. '``' → logprob: -9.688935279846191

Token 11: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5508649349212646
    2. '   ' → logprob: -1.0508649349212646
    3. '``' → logprob: -3.9258649349212646
    4. '\n' → logprob: -3.9258649349212646
    5. '`' → logprob: -4.300865173339844
    6. '       ' → logprob: -5.300865173339844
    7. '    
' → logprob: -5.925865173339844
    8. '\' → logprob: -6.050865173339844
    9. '    ' → logprob: -6.175865173339844
    10. ':' → logprob: -6.300865173339844

Token 12: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8756061792373657
    2. 'n' → logprob: -1.8756061792373657
    3. '   ' → logprob: -2.125606060028076
    4. 'i' → logprob: -2.375606060028076
    5. 'x' → logprob: -2.500606060028076
    6. ' ' → logprob: -2.875606060028076
    7. ' n' → logprob: -4.375606060028076
    8. ' x' → logprob: -4.875606060028076
    9. ' i' → logprob: -5.000606060028076
    10. ' for' → logprob: -5.250606060028076

Token 13: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0673152208328247
    2. '   ' → logprob: -1.6923152208328247
    3. 'Calculate' → logprob: -1.8173152208328247
    4. '"""
' → logprob: -2.942315101623535
    5. 'Generate' → logprob: -2.942315101623535
    6. 'Compute' → logprob: -3.067315101623535
    7. 'Returns' → logprob: -3.817315101623535
    8. 'Gener' → logprob: -3.817315101623535
    9. 'Calcul' → logprob: -4.192315101623535
    10. 'Y' → logprob: -4.317315101623535

Token 14: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5350857377052307
    2. 'culate' → logprob: -0.9100857377052307
    3. 'l' → logprob: -4.785085678100586
    4. 'cul' → logprob: -6.160085678100586
    5. 'cula' → logprob: -7.285085678100586
    6. 'culated' → logprob: -8.910085678100586
    7. '   ' → logprob: -9.160085678100586
    8. 'cu' → logprob: -9.285085678100586
    9. 'culation' → logprob: -9.660085678100586
    10. 'culator' → logprob: -9.910085678100586

Token 15: ' et' (ID: 859)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.605821967124939
    2. 's' → logprob: -1.105821967124939
    3. 'te' → logprob: -2.2308220863342285
    4. 't' → logprob: -4.6058220863342285
    5. 'tes' → logprob: -6.7308220863342285
    6. ' ' → logprob: -7.2308220863342285
    7. 'z' → logprob: -7.4808220863342285
    8. '   ' → logprob: -7.6058220863342285
    9. 'd' → logprob: -7.8558220863342285
    10. ' la' → logprob: -8.10582160949707

Token 16: ' affiche' (ID: 127479)
  Prédit: ' ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ren' → logprob: -0.7847800254821777
    2. ' retourne' → logprob: -1.0347800254821777
    3. '   ' → logprob: -2.2847800254821777
    4. ' met' → logprob: -3.4097800254821777
    5. ' ret' → logprob: -4.034780025482178
    6. ' return' → logprob: -4.659780025482178
    7. ' ' → logprob: -5.284780025482178
    8. 'ret' → logprob: -5.909780025482178
    9. 'ren' → logprob: -5.909780025482178
    10. 'return' → logprob: -5.909780025482178

Token 17: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1608770340681076
    2. ' l' → logprob: -2.660876989364624
    3. ' le' → logprob: -3.160876989364624
    4. 's' → logprob: -4.035877227783203
    5. ' ' → logprob: -5.285877227783203
    6. 'r' → logprob: -5.535877227783203
    7. ' les' → logprob: -5.535877227783203
    8. 'e' → logprob: -7.035877227783203
    9. '   ' → logprob: -7.160877227783203
    10. ' the' → logprob: -7.535877227783203

Token 18: ' ' (ID: 220)
  Prédit: ' termes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' termes' → logprob: -0.6382755041122437
    2. ' ' → logprob: -1.8882755041122437
    3. ' n' → logprob: -1.8882755041122437
    4. ' valeurs' → logprob: -2.388275623321533
    5. 'n' → logprob: -3.888275623321533
    6. ' terme' → logprob: -4.763275623321533
    7. ' ' → logprob: -4.888275623321533
    8. '  ' → logprob: -5.013275623321533
    9. '   ' → logprob: -5.263275623321533
    10. 'élé' → logprob: -5.763275623321533

Token 19: '10' (ID: 702)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.527414858341217
    2. 'ter' → logprob: -1.6524147987365723
    3. 'n' → logprob: -2.4024147987365723
    4. 'élé' → logprob: -3.1524147987365723
    5. 'é' → logprob: -4.027414798736572
    6. ' termes' → logprob: -4.152414798736572
    7. 'v' → logprob: -4.902414798736572
    8. ' n' → logprob: -5.027414798736572
    9. ' valeurs' → logprob: -5.027414798736572
    10. ' ' → logprob: -5.527414798736572

Token 20: ' premières' (ID: 73562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01029710378497839
    2. ' premiers' → logprob: -5.2602972984313965
    3. '  ' → logprob: -6.3852972984313965
    4. ' premières' → logprob: -6.7602972984313965
    5. ' termes' → logprob: -7.2602972984313965
    6. '   ' → logprob: -8.135296821594238
    7. ' prochains' → logprob: -8.510296821594238
    8. 'prem' → logprob: -8.635296821594238
    9. ' premier' → logprob: -8.760296821594238
    10. ' ' → logprob: -9.385296821594238

Token 21: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01503660250455141
    2. '   ' → logprob: -5.265036582946777
    3. '  ' → logprob: -5.640036582946777
    4. '_' → logprob: -5.765036582946777
    5. ' ' → logprob: -7.515036582946777
    6. ' valeurs' → logprob: -7.765036582946777
    7. '  ' → logprob: -7.765036582946777
    8. ' espaces' → logprob: -8.265036582946777
    9. ' lignes' → logprob: -8.765036582946777
    10. 'n' → logprob: -9.140036582946777

Token 22: ' d' (ID: 272)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9994183778762817
    2. '   ' → logprob: -1.7494183778762817
    3. ' de' → logprob: -1.9994183778762817
    4. '\' → logprob: -2.124418258666992
    5. ' ' → logprob: -2.374418258666992
    6. '  ' → logprob: -3.999418258666992
    7. '
' → logprob: -3.999418258666992
    8. ''' → logprob: -4.124418258666992
    9. ' \' → logprob: -4.749418258666992
    10. '```' → logprob: -4.749418258666992

Token 23: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.7162140011787415
    2. 'e' → logprob: -1.3412139415740967
    3. 'a' → logprob: -1.8412139415740967
    4. 'u' → logprob: -3.3412139415740967
    5. 'une' → logprob: -3.8412139415740967
    6. ''' → logprob: -3.9662139415740967
    7. ' la' → logprob: -5.466214179992676
    8. ''un' → logprob: -5.966214179992676
    9. ' une' → logprob: -5.966214179992676
    10. '’une' → logprob: -6.216214179992676

Token 24: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.9413722157478333
    2. ' ' → logprob: -1.1913721561431885
    3. ' suite' → logprob: -1.3163721561431885
    4. ' sé' → logprob: -3.9413721561431885
    5. 'sé' → logprob: -5.191372394561768
    6. 's' → logprob: -5.316372394561768
    7. ' suites' → logprob: -6.441372394561768
    8. '   ' → logprob: -6.691372394561768
    9. '  ' → logprob: -7.316372394561768
    10. 'succ' → logprob: -7.441372394561768

Token 25: ' défin' (ID: 57890)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.28724205493927
    2. ' de' → logprob: -1.91224205493927
    3. '\n' → logprob: -2.0372419357299805
    4. '_' → logprob: -2.2872419357299805
    5. ' d' → logprob: -3.1622419357299805
    6. ' recurrent' → logprob: -3.2872419357299805
    7. 'r' → logprob: -3.7872419357299805
    8. 'e' → logprob: -3.9122419357299805
    9. 'def' → logprob: -3.9122419357299805
    10. ',' → logprob: -4.1622419357299805

Token 26: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00046439285506494343
    2. 'e' → logprob: -8.37546443939209
    3. '   ' → logprob: -9.50046443939209
    4. 'ies' → logprob: -10.37546443939209
    5. 'ue' → logprob: -10.75046443939209
    6. ' ie' → logprob: -11.37546443939209
    7. 'i' → logprob: -11.75046443939209
    8. '```' → logprob: -11.75046443939209
    9. 'nie' → logprob: -12.00046443939209
    10. '{' → logprob: -12.37546443939209

Token 27: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.009191637858748436
    2. ' ' → logprob: -5.759191513061523
    3. 'e' → logprob: -6.009191513061523
    4. 'par' → logprob: -6.259191513061523
    5. ',' → logprob: -7.259191513061523
    6. ' en' → logprob: -9.509191513061523
    7. '   ' → logprob: -9.634191513061523
    8. ' à' → logprob: -9.759191513061523
    9. '\' → logprob: -9.884191513061523
    10. '  ' → logprob: -9.884191513061523

Token 28: ' ré' (ID: 3146)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7886057496070862
    2. ' la' → logprob: -1.5386056900024414
    3. ' ' → logprob: -1.9136056900024414
    4. ' recurrence' → logprob: -2.9136056900024414
    5. ' r' → logprob: -3.1636056900024414
    6. ' une' → logprob: -4.288605690002441
    7. '    ' → logprob: -4.913605690002441
    8. '   ' → logprob: -5.038605690002441
    9. ' l' → logprob: -5.163605690002441
    10. ' def' → logprob: -5.413605690002441

Token 29: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.6367296576499939
    2. 'c' → logprob: -0.7617296576499939
    3. 'current' → logprob: -6.386729717254639
    4. 'cu' → logprob: -7.011729717254639
    5. 'cur' → logprob: -8.13672924041748
    6. '\' → logprob: -8.13672924041748
    7. 'cc' → logprob: -8.13672924041748
    8. '\x' → logprob: -8.88672924041748
    9. '{' → logprob: -9.88672924041748
    10. '_' → logprob: -10.01172924041748

Token 30: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.008097600191831589
    2. 'e' → logprob: -4.8830976486206055
    3. 'é' → logprob: -8.133097648620605
    4. 'en' → logprob: -9.883097648620605
    5. 'rence' → logprob: -10.133097648620605
    6. 'ences' → logprob: -10.508097648620605
    7. '#' → logprob: -10.758097648620605
    8. 'ente' → logprob: -11.383097648620605
    9. 'a' → logprob: -11.633097648620605
    10. 'escence' → logprob: -11.883097648620605

Token 31: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33715084195137024
    2. '   ' → logprob: -2.587150812149048
    3. ',' → logprob: -3.087150812149048
    4. '\' → logprob: -3.212150812149048
    5. ' ' → logprob: -3.837150812149048
    6. '.' → logprob: -4.087151050567627
    7. ':' → logprob: -4.462151050567627
    8. ',
' → logprob: -4.587151050567627
    9. '"""
' → logprob: -4.712151050567627
    10. '    
' → logprob: -4.837151050567627

Token 32: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7552221417427063
    2. '
' → logprob: -2.0052220821380615
    3. '\n' → logprob: -2.0052220821380615
    4. '"""
' → logprob: -2.7552220821380615
    5. '"""' → logprob: -2.7552220821380615
    6. ' 
' → logprob: -3.3802220821380615
    7. '    
' → logprob: -3.3802220821380615
    8. '  
' → logprob: -4.255222320556641
    9. '"' → logprob: -4.505222320556641
    10. ')' → logprob: -4.630222320556641

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00992548931390047
    2. '```' → logprob: -5.634925365447998
    3. '"""' → logprob: -6.634925365447998
    4. '    
' → logprob: -7.009925365447998
    5. '
' → logprob: -7.134925365447998
    6. '\n' → logprob: -7.509925365447998
    7. '"""
' → logprob: -7.884925365447998
    8. ' 
' → logprob: -8.009925842285156
    9. '    ' → logprob: -8.009925842285156
    10. 'n' → logprob: -8.009925842285156

Token 34: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007710612379014492
    2. '```' → logprob: -5.7577104568481445
    3. '"""' → logprob: -6.5077104568481445
    4. 'r' → logprob: -6.7577104568481445
    5. '"""
' → logprob: -7.1327104568481445
    6. '    ' → logprob: -7.6327104568481445
    7. 'n' → logprob: -9.257710456848145
    8. '\n' → logprob: -9.632710456848145
    9. ' """
' → logprob: -9.632710456848145
    10. '    
' → logprob: -10.007710456848145

Token 35: ' suite' (ID: 13800)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1574485301971436
    2. '   ' → logprob: -1.4074485301971436
    3. ' suite' → logprob: -1.4074485301971436
    4. 'suite' → logprob: -2.2824485301971436
    5. 's' → logprob: -3.4074485301971436
    6. '    ' → logprob: -4.782448768615723
    7. ' fonction' → logprob: -4.907448768615723
    8. '  ' → logprob: -5.157448768615723
    9. ' définition' → logprob: -5.532448768615723
    10. ' sequence' → logprob: -5.657448768615723

Token 36: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18805883824825287
    2. ' défin' → logprob: -2.938058853149414
    3. ' ' → logprob: -3.313058853149414
    4. ' suivante' → logprob: -4.063058853149414
    5. ' des' → logprob: -4.438058853149414
    6. '   ' → logprob: -4.688058853149414
    7. ' se' → logprob: -5.188058853149414
    8. ' continue' → logprob: -5.688058853149414
    9. ' s' → logprob: -5.813058853149414
    10. ' r' → logprob: -5.938058853149414

Token 37: ' défin' (ID: 57890)
  Prédit: ' défin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défin' → logprob: -0.005400476977229118
    2. 'dé' → logprob: -5.505400657653809
    3. '   ' → logprob: -7.505400657653809
    4. 'def' → logprob: -9.005400657653809
    5. ' une' → logprob: -9.255400657653809
    6. ' ' → logprob: -9.380400657653809
    7. ' donnée' → logprob: -9.505400657653809
    8. 'd' → logprob: -9.630400657653809
    9. ' defined' → logprob: -9.880400657653809
    10. ' détermin' → logprob: -10.505400657653809

Token 38: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.001979072345420718
    2. 'e' → logprob: -6.376978874206543
    3. 'i' → logprob: -8.626978874206543
    4. '   ' → logprob: -10.626978874206543
    5. 'é' → logprob: -11.251978874206543
    6. '#' → logprob: -11.376978874206543
    7. ' by' → logprob: -11.626978874206543
    8. '```' → logprob: -12.001978874206543
    9. 'ée' → logprob: -12.376978874206543
    10. '
' → logprob: -12.501978874206543

Token 39: ' comme' (ID: 7971)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.020095661282539368
    2. 'par' → logprob: -4.2700958251953125
    3. ' comme' → logprob: -5.5200958251953125
    4. ' pour' → logprob: -7.6450958251953125
    5. 'comme' → logprob: -7.7700958251953125
    6. ' de' → logprob: -8.520095825195312
    7. ' ' → logprob: -8.645095825195312
    8. '   ' → logprob: -8.895095825195312
    9. ' à' → logprob: -9.145095825195312
    10. ' en' → logprob: -10.270095825195312

Token 40: ' suit' (ID: 15170)
  Prédit: ' suit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suit' → logprob: -0.0737064927816391
    2. '   ' → logprob: -4.57370662689209
    3. ' ceci' → logprob: -4.57370662689209
    4. ':' → logprob: -4.69870662689209
    5. 'su' → logprob: -4.69870662689209
    6. ' follows' → logprob: -5.07370662689209
    7. 's' → logprob: -5.07370662689209
    8. 'f' → logprob: -5.19870662689209
    9. ' :' → logprob: -5.82370662689209
    10. ' une' → logprob: -6.19870662689209

Token 41: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.1950509250164032
    2. ':' → logprob: -2.3200509548187256
    3. ' :
' → logprob: -2.8200509548187256
    4. '   ' → logprob: -5.1950507164001465
    5. ':
' → logprob: -5.3200507164001465
    6. ',' → logprob: -5.5700507164001465
    7. ' :

' → logprob: -6.6950507164001465
    8. ' ' → logprob: -7.4450507164001465
    9. '\n' → logprob: -7.5700507164001465
    10. ' ' → logprob: -7.6950507164001465

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23845955729484558
    2. '    
' → logprob: -2.488459587097168
    3. '\n' → logprob: -2.988459587097168
    4. '"""
' → logprob: -4.113459587097168
    5. '```' → logprob: -4.113459587097168
    6. 'r' → logprob: -4.988459587097168
    7. '
' → logprob: -4.988459587097168
    8. ' 
' → logprob: -5.113459587097168
    9. '    ' → logprob: -5.488459587097168
    10. '  
' → logprob: -5.613459587097168

Token 43: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6130162477493286
    2. 'x' (adapté à ' x') → logprob: -1.3630162477493286
    3. '
' → logprob: -2.863016128540039
    4. '"""
' → logprob: -2.863016128540039
    5. '```' → logprob: -3.488016128540039
    6. '    
' → logprob: -4.738016128540039
    7. '\n' → logprob: -4.738016128540039
    8. 'r' → logprob: -4.738016128540039
    9. '``' → logprob: -4.863016128540039
    10. 'n' → logprob: -4.988016128540039

Token 44: '_{' (ID: 22305)
  Prédit: '_{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_{' → logprob: -1.0728557109832764
    2. '_n' → logprob: -1.3228557109832764
    3. '[n' → logprob: -1.6978557109832764
    4. '_' → logprob: -2.0728557109832764
    5. 'n' → logprob: -3.9478557109832764
    6. '[' → logprob: -3.9478557109832764
    7. '0' → logprob: -4.0728559494018555
    8. '(n' → logprob: -4.6978559494018555
    9. '_(' → logprob: -4.9478559494018555
    10. '[i' → logprob: -5.8228559494018555

Token 45: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015844665467739105
    2. '0' → logprob: -4.640844821929932
    3. '_n' → logprob: -6.015844821929932
    4. '1' → logprob: -6.765844821929932
    5. 'k' → logprob: -7.265844821929932
    6. ' n' → logprob: -7.890844821929932
    7. '}' → logprob: -8.015844345092773
    8. '_{' → logprob: -8.140844345092773
    9. 't' → logprob: -8.765844345092773
    10. '_' → logprob: -9.015844345092773

Token 46: '+' (ID: 10)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5776215195655823
    2. '+' → logprob: -0.8276215195655823
    3. '}=' → logprob: -6.9526214599609375
    4. '-' → logprob: -8.577621459960938
    5. '}(' → logprob: -9.452621459960938
    6. ' +' → logprob: -9.577621459960938
    7. '0' → logprob: -9.952621459960938
    8. ' }' → logprob: -10.202621459960938
    9. '   ' → logprob: -10.452621459960938
    10. '```' → logprob: -10.452621459960938

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010068230039905757
    2. '2' → logprob: -10.500101089477539
    3. '}' → logprob: -10.625101089477539
    4. '   ' → logprob: -10.875101089477539
    5. '+' → logprob: -12.000101089477539
    6. ' ' → logprob: -12.062601089477539
    7. '```' → logprob: -12.437601089477539
    8. '  ' → logprob: -13.312601089477539
    9. '4' → logprob: -13.562601089477539
    10. '{' → logprob: -13.562601089477539

Token 48: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0008309515542350709
    2. '}=' → logprob: -7.375831127166748
    3. '+' → logprob: -9.62583065032959
    4. '=' → logprob: -10.37583065032959
    5. ' =' → logprob: -10.87583065032959
    6. ')' → logprob: -10.87583065032959
    7. '```' → logprob: -11.12583065032959
    8. '}
' → logprob: -11.50083065032959
    9. '=}' → logprob: -12.06333065032959
    10. '}

' → logprob: -12.18833065032959

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08908112347126007
    2. '=' → logprob: -2.464081048965454
    3. '*' → logprob: -9.964080810546875
    4. '+' → logprob: -11.089080810546875
    5. '_' → logprob: -11.089080810546875
    6. ' ' → logprob: -11.339080810546875
    7. '}' → logprob: -12.339080810546875
    8. ' ' → logprob: -12.464080810546875
    9. ')' → logprob: -12.839080810546875
    10. '^' → logprob: -12.901580810546875

Token 50: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5399780869483948
    2. ' r' → logprob: -0.9149780869483948
    3. 'D' → logprob: -5.66497802734375
    4. '(' → logprob: -5.66497802734375
    5. ' (' → logprob: -5.78997802734375
    6. ' D' → logprob: -6.41497802734375
    7. 'x' → logprob: -6.66497802734375
    8. ' x' → logprob: -6.91497802734375
    9. ' ' → logprob: -7.16497802734375
    10. '(r' → logprob: -7.41497802734375

Token 51: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0701712816953659
    2. '*' → logprob: -2.695171356201172
    3. '*x' → logprob: -9.445171356201172
    4. ' ' → logprob: -10.320171356201172
    5. ' x' → logprob: -10.570171356201172
    6. ' **' → logprob: -10.820171356201172
    7. '**' → logprob: -10.945171356201172
    8. ' ' → logprob: -11.695171356201172
    9. ' +' → logprob: -11.757671356201172
    10. 'x' → logprob: -12.132671356201172

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21206782758235931
    2. ' x' → logprob: -1.9620678424835205
    3. 'D' → logprob: -3.4620678424835205
    4. '(' → logprob: -4.837067604064941
    5. ' D' → logprob: -4.837067604064941
    6. ' (' → logprob: -6.087067604064941
    7. '(D' → logprob: -7.837067604064941
    8. '(x' → logprob: -8.337067604064941
    9. ' ' → logprob: -9.399567604064941
    10. '   ' → logprob: -10.149567604064941

Token 53: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.004028887953609228
    2. 'n' → logprob: -5.629028797149658
    3. '_' → logprob: -8.129029273986816
    4. '_{' → logprob: -9.629029273986816
    5. '[n' → logprob: -9.879029273986816
    6. '[' → logprob: -12.379029273986816
    7. '{' → logprob: -13.004029273986816
    8. '```' → logprob: -13.004029273986816
    9. 'x' → logprob: -14.129029273986816
    10. '   ' → logprob: -14.504029273986816

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3179738521575928
    2. ' *' → logprob: -1.4429738521575928
    3. '-' → logprob: -3.9429738521575928
    4. '*' → logprob: -4.817974090576172
    5. ' +' → logprob: -5.817974090576172
    6. '+' → logprob: -6.817974090576172
    7. ' ' → logprob: -6.942974090576172
    8. '<|end|>' → logprob: -6.942974090576172
    9. ')' → logprob: -7.692974090576172
    10. ' ```' → logprob: -7.942974090576172

Token 55: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.13921727240085602
    2. ' D' → logprob: -2.1392173767089844
    3. 'x' → logprob: -5.389217376708984
    4. 'r' → logprob: -6.139217376708984
    5. ' ' → logprob: -6.389217376708984
    6. '   ' → logprob: -7.139217376708984
    7. '(' → logprob: -7.389217376708984
    8. ' x' → logprob: -7.389217376708984
    9. ' r' → logprob: -7.889217376708984
    10. '1' → logprob: -8.014217376708984

Token 56: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25361040234565735
    2. '   ' → logprob: -3.003610372543335
    3. '*x' → logprob: -3.378610372543335
    4. '*' → logprob: -3.503610372543335
    5. ' x' → logprob: -3.628610372543335
    6. '**' → logprob: -4.128610610961914
    7. 'def' → logprob: -4.503610610961914
    8. 'x' → logprob: -4.503610610961914
    9. ')' → logprob: -4.878610610961914
    10. '<|end|>' → logprob: -5.003610610961914

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3007448613643646
    2. '"""' → logprob: -1.675744891166687
    3. '"""
' → logprob: -3.9257447719573975
    4. ')' → logprob: -3.9257447719573975
    5. '\n' → logprob: -4.550745010375977
    6. '"' → logprob: -4.925745010375977
    7. '""' → logprob: -5.175745010375977
    8. '```' → logprob: -5.425745010375977
    9. '"\' → logprob: -6.925745010375977
    10. ' ' → logprob: -6.925745010375977

Token 58: ' où' (ID: 15113)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.25259390473365784
    2. '\' → logprob: -2.377593994140625
    3. '   ' → logprob: -2.627593994140625
    4. '"""' → logprob: -4.252593994140625
    5. '"\' → logprob: -4.752593994140625
    6. '
' → logprob: -5.127593994140625
    7. '    
' → logprob: -5.127593994140625
    8. '"""
' → logprob: -5.377593994140625
    9. ')' → logprob: -5.627593994140625
    10. '' → logprob: -5.877593994140625

Token 59: ' :
' (ID: 10039)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4710029065608978
    2. 'x' → logprob: -1.7210029363632202
    3. ' ' → logprob: -2.5960028171539307
    4. ' r' → logprob: -2.7210028171539307
    5. 'r' → logprob: -3.7210028171539307
    6. 'n' → logprob: -4.34600305557251
    7. ' n' → logprob: -4.84600305557251
    8. '   ' → logprob: -6.34600305557251
    9. '_' → logprob: -6.59600305557251
    10. ' `' → logprob: -6.84600305557251

Token 60: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6307975649833679
    2. ' ' → logprob: -1.2557976245880127
    3. ' r' → logprob: -1.8807976245880127
    4. 'x' → logprob: -5.130797386169434
    5. '<|end|>' → logprob: -5.380797386169434
    6. '    ' → logprob: -5.505797386169434
    7. 'n' → logprob: -5.505797386169434
    8. '   ' → logprob: -5.630797386169434
    9. ' x' → logprob: -5.755797386169434
    10. ' \' → logprob: -7.005797386169434

Token 61: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3820461928844452
    2. 'x' → logprob: -1.6320462226867676
    3. ' r' → logprob: -2.8820462226867676
    4. ' ' → logprob: -3.2570462226867676
    5. ' x' → logprob: -3.8820462226867676
    6. '   ' → logprob: -5.632046222686768
    7. '    ' → logprob: -6.632046222686768
    8. 'n' → logprob: -7.757046222686768
    9. 'D' → logprob: -8.50704574584961
    10. ' '' → logprob: -9.25704574584961

Token 62: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6471757888793945
    2. ' x' → logprob: -1.3971757888793945
    3. 'r' → logprob: -1.7721757888793945
    4. 'x' → logprob: -2.8971757888793945
    5. ' ' → logprob: -6.1471757888793945
    6. ' D' → logprob: -7.3971757888793945
    7. 'D' → logprob: -8.397175788879395
    8. '   ' → logprob: -8.897175788879395
    9. ' `' → logprob: -9.147175788879395
    10. ' n' → logprob: -9.272175788879395

Token 63: ' (' (ID: 350)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3649710714817047
    2. ' is' → logprob: -2.364971160888672
    3. ' ' → logprob: -2.739971160888672
    4. ',' → logprob: -3.364971160888672
    5. ' =' → logprob: -3.739971160888672
    6. '   ' → logprob: -4.114971160888672
    7. ' :' → logprob: -4.489971160888672
    8. ':' → logprob: -5.114971160888672
    9. ' *' → logprob: -5.114971160888672
    10. ' ,' → logprob: -5.114971160888672

Token 64: 'int' (ID: 491)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7160776257514954
    2. ' )' → logprob: -1.5910775661468506
    3. ')' → logprob: -1.9660775661468506
    4. 'float' → logprob: -2.2160775661468506
    5. 'r' → logprob: -3.9660775661468506
    6. ' r' → logprob: -4.34107780456543
    7. '   ' → logprob: -4.71607780456543
    8. ' ' → logprob: -6.21607780456543
    9. 'int' → logprob: -6.34107780456543
    10. ',' → logprob: -6.34107780456543

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013310716021806002
    2. ' )' → logprob: -6.876330852508545
    3. '):' → logprob: -8.876331329345703
    4. ',' → logprob: -9.751331329345703
    5. ' ' → logprob: -10.626331329345703
    6. '   ' → logprob: -10.751331329345703
    7. ' ou' → logprob: -10.876331329345703
    8. ' or' → logprob: -11.251331329345703
    9. '),' → logprob: -12.126331329345703
    10. '  ' → logprob: -13.001331329345703

Token 66: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9799304008483887
    2. '<|end|>' → logprob: -1.6049304008483887
    3. ')' → logprob: -1.7299304008483887
    4. ' :' → logprob: -2.1049304008483887
    5. ' ,' → logprob: -3.6049304008483887
    6. ':' → logprob: -3.8549304008483887
    7. ' ' → logprob: -3.8549304008483887
    8. '):' → logprob: -4.229930400848389
    9. '   ' → logprob: -4.479930400848389
    10. '    ' → logprob: -4.854930400848389

Token 67: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9802356362342834
    2. ' facteur' → logprob: -1.1052355766296387
    3. ' coefficient' → logprob: -1.7302355766296387
    4. ' multiplic' → logprob: -3.7302355766296387
    5. ' multip' → logprob: -3.8552355766296387
    6. ' Le' → logprob: -3.8552355766296387
    7. ' la' → logprob: -4.480235576629639
    8. 'le' → logprob: -4.480235576629639
    9. ' coef' → logprob: -4.980235576629639
    10. ' l' → logprob: -5.605235576629639

Token 68: ' coefficient' (ID: 64656)
  Prédit: ' facteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facteur' → logprob: -0.5392622351646423
    2. ' coefficient' → logprob: -1.289262294769287
    3. ' param' → logprob: -2.789262294769287
    4. 'fact' → logprob: -3.664262294769287
    5. 'param' → logprob: -4.289262294769287
    6. 'co' → logprob: -4.539262294769287
    7. 'coeff' → logprob: -5.164262294769287
    8. ' multiplic' → logprob: -5.664262294769287
    9. 'coef' → logprob: -5.664262294769287
    10. ' coef' → logprob: -5.664262294769287

Token 69: ' multiplic' (ID: 67929)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'ateur' (ID: 12477)
  Prédit: 'atif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.5600409507751465
    2. 'ateur' → logprob: -0.9350409507751465
    3. 'a' → logprob: -4.4350409507751465
    4. '   ' → logprob: -4.5600409507751465
    5. ' at' → logprob: -5.4350409507751465
    6. 'ative' → logprob: -5.9350409507751465
    7. 'ate' → logprob: -6.9350409507751465
    8. ' a' → logprob: -7.0600409507751465
    9. ' ' → logprob: -7.4350409507751465
    10. '    ' → logprob: -7.5600409507751465

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1173739433288574
    2. ')' → logprob: -1.2423739433288574
    3. ',' → logprob: -1.3673739433288574
    4. '```' → logprob: -3.1173739433288574
    5. '\n' → logprob: -3.7423739433288574
    6. ' ' → logprob: -3.8673739433288574
    7. '
' → logprob: -4.742373943328857
    8. '<|end|>' → logprob: -5.367373943328857
    9. '\' → logprob: -5.492373943328857
    10. '    
' → logprob: -5.867373943328857

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08111829310655594
    2. '       ' → logprob: -2.70611834526062
    3. ',' → logprob: -5.706118106842041
    4. ')' → logprob: -6.206118106842041
    5. '    ' → logprob: -6.581118106842041
    6. ' ' → logprob: -6.956118106842041
    7. '\n' → logprob: -7.081118106842041
    8. 'def' → logprob: -7.206118106842041
    9. '```' → logprob: -7.706118106842041
    10. '  ' → logprob: -7.831118106842041

Token 73: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32670286297798157
    2. '   ' → logprob: -1.3267028331756592
    3. '    ' → logprob: -5.201703071594238
    4. ' ' → logprob: -6.451703071594238
    5. '        ' → logprob: -6.701703071594238
    6. '"' → logprob: -7.076703071594238
    7. '\n' → logprob: -7.076703071594238
    8. ')' → logprob: -7.451703071594238
    9. '      ' → logprob: -7.451703071594238
    10. ',' → logprob: -8.201703071594238

Token 74: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.05575486272573471
    2. 'D' → logprob: -3.3057548999786377
    3. ' x' → logprob: -4.805754661560059
    4. 'x' → logprob: -5.055754661560059
    5. ' ' → logprob: -6.180754661560059
    6. '   ' → logprob: -7.430754661560059
    7. '       ' → logprob: -9.430754661560059
    8. ' ' → logprob: -9.555754661560059
    9. 'r' → logprob: -9.805754661560059
    10. '    ' → logprob: -9.930754661560059

Token 75: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.012050056830048561
    2. '(int' → logprob: -4.512050151824951
    3. ' :' → logprob: -7.512050151824951
    4. ':' → logprob: -8.012049674987793
    5. '   ' → logprob: -10.012049674987793
    6. ')' → logprob: -10.262049674987793
    7. ' ' → logprob: -11.387049674987793
    8. ':int' → logprob: -11.762049674987793
    9. '  ' → logprob: -12.137049674987793
    10. '    ' → logprob: -12.262049674987793

Token 76: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05632789433002472
    2. ' int' → logprob: -2.9313278198242188
    3. ')' → logprob: -6.806327819824219
    4. ' )' → logprob: -9.056327819824219
    5. 'float' → logprob: -9.556327819824219
    6. '(int' → logprob: -9.556327819824219
    7. '   ' → logprob: -10.681327819824219
    8. ' float' → logprob: -11.806327819824219
    9. ' (' → logprob: -11.931327819824219
    10. ':int' → logprob: -12.431327819824219

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.440506407059729e-05
    2. ' )' → logprob: -11.25003433227539
    3. '):' → logprob: -11.37503433227539
    4. '   ' → logprob: -12.25003433227539
    5. ' ' → logprob: -12.50003433227539
    6. ',' → logprob: -15.00003433227539
    7. '```' → logprob: -15.25003433227539
    8. '  ' → logprob: -16.00003433227539
    9. '):
' → logprob: -16.25003433227539
    10. ' :' → logprob: -16.37503433227539

Token 78: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8033719062805176
    2. ':' → logprob: -1.3033719062805176
    3. ' :' → logprob: -1.6783719062805176
    4. '):' → logprob: -2.9283719062805176
    5. ' ' → logprob: -3.5533719062805176
    6. ',' → logprob: -5.178371906280518
    7. ' )' → logprob: -6.428371906280518
    8. '   ' → logprob: -6.803371906280518
    9. ' (' → logprob: -6.928371906280518
    10. ' ):' → logprob: -7.178371906280518

Token 79: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13318289816379547
    2. '   ' → logprob: -2.758183002471924
    3. ' l' → logprob: -3.758183002471924
    4. 'l' → logprob: -4.133183002471924
    5. ' la' → logprob: -5.883183002471924
    6. ''' → logprob: -6.008183002471924
    7. '  ' → logprob: -6.133183002471924
    8. ' )' → logprob: -6.258183002471924
    9. 'u' → logprob: -6.383183002471924
    10. ' (' → logprob: -6.383183002471924

Token 80: ' valeur' (ID: 41664)
  Prédit: ' constante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constante' → logprob: -1.0755952596664429
    2. ' constant' → logprob: -1.8255952596664429
    3. ' const' → logprob: -2.0755953788757324
    4. ' d' → logprob: -2.4505953788757324
    5. ' param' → logprob: -2.5755953788757324
    6. ' terme' → logprob: -2.9505953788757324
    7. ' ' → logprob: -4.075595378875732
    8. ' dé' → logprob: -4.200595378875732
    9. 'const' → logprob: -4.325595378875732
    10. ' c' → logprob: -4.325595378875732

Token 81: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.860630989074707
    2. ' à' → logprob: -1.985630989074707
    3. ' de' → logprob: -2.110630989074707
    4. ' ' → logprob: -2.235630989074707
    5. ' initial' → logprob: -2.860630989074707
    6. ' d' → logprob: -3.235630989074707
    7. '_' → logprob: -3.860630989074707
    8. 'd' → logprob: -3.985630989074707
    9. ')' → logprob: -3.985630989074707
    10. ' )' → logprob: -4.860630989074707

Token 82: ' sou' (ID: 4069)
  Prédit: ' sou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sou' → logprob: -0.6539025902748108
    2. 'sou' → logprob: -0.7789025902748108
    3. 'sub' → logprob: -4.403902530670166
    4. 's' → logprob: -5.903902530670166
    5. '   ' → logprob: -5.903902530670166
    6. ' retr' → logprob: -6.278902530670166
    7. ' sub' → logprob: -6.778902530670166
    8. '```' → logprob: -9.278903007507324
    9. ' retirer' → logprob: -9.778903007507324
    10. 'd' → logprob: -10.028903007507324

Token 83: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0016287636244669557
    2. 'stract' → logprob: -7.626628875732422
    3. 'straction' → logprob: -7.751628875732422
    4. 'str' → logprob: -8.251628875732422
    5. 'b' → logprob: -8.751628875732422
    6. 'st' → logprob: -9.001628875732422
    7. 'stre' → logprob: -10.001628875732422
    8. 'tr' → logprob: -10.126628875732422
    9. 'r' → logprob: -10.501628875732422
    10. 'p' → logprob: -11.001628875732422

Token 84: 'ire' (ID: 594)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1472221463918686
    2. 'ire' → logprob: -2.0222220420837402
    3. '   ' → logprob: -6.64722204208374
    4. 'e' → logprob: -7.27222204208374
    5. 'c' → logprob: -8.522222518920898
    6. ' i' → logprob: -8.522222518920898
    7. 't' → logprob: -8.522222518920898
    8. 'ı' → logprob: -8.647222518920898
    9. '\' → logprob: -8.772222518920898
    10. 'd' → logprob: -9.022222518920898

Token 85: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1550050675868988
    2. ')' → logprob: -2.5300049781799316
    3. '\n' → logprob: -3.2800049781799316
    4. '
' → logprob: -4.905004978179932
    5. '    
' → logprob: -5.280004978179932
    6. '"""
' → logprob: -6.030004978179932
    7. ')
' → logprob: -6.155004978179932
    8. ',' → logprob: -6.905004978179932
    9. '\' → logprob: -6.905004978179932
    10. 'n' → logprob: -7.155004978179932

Token 86: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08947644382715225
    2. ' x' → logprob: -3.0894763469696045
    3. ' chaque' → logprob: -3.8394763469696045
    4. 'x' → logprob: -4.714476585388184
    5. ' l' → logprob: -5.589476585388184
    6. 'l' → logprob: -5.839476585388184
    7. '  ' → logprob: -7.089476585388184
    8. '   ' → logprob: -7.464476585388184
    9. ' la' → logprob: -8.089476585388184
    10. 'n' → logprob: -8.464476585388184

Token 87: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4980074167251587
    2. '_' → logprob: -1.7480074167251587
    3. ' it' → logprob: -2.123007297515869
    4. ' étape' → logprob: -3.373007297515869
    5. 'n' → logprob: -3.498007297515869
    6. ' x' → logprob: -4.623007297515869
    7. ' n' → logprob: -5.123007297515869
    8. ' pas' → logprob: -5.998007297515869
    9. ' )' → logprob: -6.248007297515869
    10. ' step' → logprob: -6.373007297515869

Token 88: 'ération' (ID: 24977)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006463713478296995
    2. 'ér' → logprob: -6.006463527679443
    3. 'ération' → logprob: -6.131463527679443
    4. 'e' → logprob: -7.006463527679443
    5. ')' → logprob: -8.131464004516602
    6. 'è' → logprob: -8.881464004516602
    7. '_' → logprob: -9.506464004516602
    8. '\' → logprob: -10.131464004516602
    9. 'éra' → logprob: -10.256464004516602
    10. '�' → logprob: -10.756464004516602

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21562303602695465
    2. ')' → logprob: -2.215623140335083
    3. '\n' → logprob: -3.715623140335083
    4. '"""' → logprob: -3.840623140335083
    5. '"""
' → logprob: -3.965623140335083
    6. '
' → logprob: -5.340622901916504
    7. ')
' → logprob: -5.340622901916504
    8. '"' → logprob: -5.840622901916504
    9. '    
' → logprob: -5.965622901916504
    10. ' 
' → logprob: -7.215622901916504

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05736907571554184
    2. '"""
' → logprob: -3.6823689937591553
    3. '"""' → logprob: -4.557369232177734
    4. '    
' → logprob: -4.682369232177734
    5. '\n' → logprob: -5.307369232177734
    6. '"' → logprob: -6.057369232177734
    7. '
' → logprob: -7.182369232177734
    8. '"\' → logprob: -7.807369232177734
    9. '   
' → logprob: -7.932369232177734
    10. '\' → logprob: -7.932369232177734

Token 91: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5122212171554565
    2. '\n' → logprob: -1.5122212171554565
    3. '"' → logprob: -1.6372212171554565
    4. '"""' → logprob: -1.8872212171554565
    5. '    
' → logprob: -2.887221336364746
    6. '"""
' → logprob: -3.137221336364746
    7. '\' → logprob: -3.262221336364746
    8. ' 
' → logprob: -4.137221336364746
    9. '"\' → logprob: -4.137221336364746
    10. '  
' → logprob: -4.762221336364746

Token 92: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36004695296287537
    2. ' x' → logprob: -1.3600469827651978
    3. 'x' → logprob: -3.110046863555908
    4. '    ' → logprob: -7.610046863555908
    5. '   ' → logprob: -7.735046863555908
    6. '  ' → logprob: -9.610047340393066
    7. ' ' → logprob: -9.860047340393066
    8. ' 
' → logprob: -11.485047340393066
    9. '     
' → logprob: -11.860047340393066
    10. '  ' → logprob: -11.860047340393066

Token 93: '_initial' (ID: 45740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10094122588634491
    2. '_initial' → logprob: -2.3509411811828613
    3. '_n' → logprob: -8.35094165802002
    4. '_init' → logprob: -8.60094165802002
    5. '_i' → logprob: -9.22594165802002
    6. ' _' → logprob: -9.47594165802002
    7. '_

' → logprob: -10.47594165802002
    8. '_s' → logprob: -11.10094165802002
    9. 's' → logprob: -11.10094165802002
    10. '_in' → logprob: -11.22594165802002

Token 94: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32820501923561096
    2. '):' → logprob: -1.3282049894332886
    3. ':' → logprob: -4.703205108642578
    4. ' )' → logprob: -5.828205108642578
    5. ' ):' → logprob: -6.953205108642578
    6. ',' → logprob: -7.578205108642578
    7. '   ' → logprob: -7.578205108642578
    8. ' :' → logprob: -8.078205108642578
    9. ' ' → logprob: -8.328205108642578
    10. ' (' → logprob: -8.953205108642578

Token 95: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01165387500077486
    2. ')' → logprob: -4.761653900146484
    3. ' int' → logprob: -5.886653900146484
    4. 'float' → logprob: -9.136653900146484
    5. ' )' → logprob: -9.136653900146484
    6. 'i' → logprob: -11.011653900146484
    7. '   ' → logprob: -12.386653900146484
    8. '):' → logprob: -12.511653900146484
    9. '):
' → logprob: -13.011653900146484
    10. ' float' → logprob: -13.261653900146484

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.8497312895488e-05
    2. '):' → logprob: -10.125068664550781
    3. ' )' → logprob: -10.500068664550781
    4. ' ' → logprob: -14.125068664550781
    5. ' ):' → logprob: -16.50006866455078
    6. '   ' → logprob: -16.62506866455078
    7. ',' → logprob: -17.00006866455078
    8. '}' → logprob: -18.00006866455078
    9. ':' → logprob: -18.12506866455078
    10. '):
' → logprob: -18.62506866455078

Token 97: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06504812091588974
    2. ' )' → logprob: -3.3150482177734375
    3. '):' → logprob: -3.8150482177734375
    4. ' ):' → logprob: -5.5650482177734375
    5. ' :' → logprob: -7.6900482177734375
    6. '   ' → logprob: -8.565048217773438
    7. ':' → logprob: -9.815048217773438
    8. ' ' → logprob: -10.440048217773438
    9. '"""' → logprob: -11.190048217773438
    10. '):
' → logprob: -11.315048217773438

Token 98: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4535244405269623
    2. ' ' → logprob: -1.0785244703292847
    3. ' l' → logprob: -4.328524589538574
    4. 'l' → logprob: -5.703524589538574
    5. 'la' → logprob: -5.828524589538574
    6. '   ' → logprob: -6.203524589538574
    7. ' ' → logprob: -6.703524589538574
    8. '  ' → logprob: -7.828524589538574
    9. ' La' → logprob: -7.953524589538574
    10. 'La' → logprob: -8.203524589538574

Token 99: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010947362519800663
    2. ' valeur' → logprob: -4.635947227478027
    3. '_' → logprob: -7.635947227478027
    4. ' première' → logprob: -9.010947227478027
    5. ' val' → logprob: -9.135947227478027
    6. '  ' → logprob: -9.260947227478027
    7. '   ' → logprob: -9.385947227478027
    8. ' _' → logprob: -9.510947227478027
    9. ' value' → logprob: -9.885947227478027
    10. 'val' → logprob: -10.010947227478027

Token 100: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8483132123947144
    2. '_initial' → logprob: -0.9733132123947144
    3. ' initial' → logprob: -1.8483132123947144
    4. ' ' → logprob: -3.723313331604004
    5. ' de' → logprob: -5.348313331604004
    6. 'initial' → logprob: -6.723313331604004
    7. '_INITIAL' → logprob: -6.723313331604004
    8. ' _' → logprob: -6.973313331604004
    9. '_in' → logprob: -6.973313331604004
    10. '   ' → logprob: -7.473313331604004

Token 101: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45917201042175293
    2. ' ' → logprob: -1.084172010421753
    3. 'e' → logprob: -3.834172010421753
    4. ' de' → logprob: -5.459172248840332
    5. '   ' → logprob: -6.084172248840332
    6. ' _' → logprob: -6.834172248840332
    7. '  ' → logprob: -8.459172248840332
    8. ')' → logprob: -9.084172248840332
    9. 'de' → logprob: -9.084172248840332
    10. '_de' → logprob: -9.209172248840332

Token 102: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017476500943303108
    2. '   ' → logprob: -7.1267476081848145
    3. '"""' → logprob: -7.8767476081848145
    4. ' )' → logprob: -8.126748085021973
    5. '):' → logprob: -10.001748085021973
    6. ',' → logprob: -10.001748085021973
    7. ' ' → logprob: -10.001748085021973
    8. ')
' → logprob: -10.876748085021973
    9. '")' → logprob: -11.376748085021973
    10. ' initial' → logprob: -11.376748085021973

Token 103: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05899414047598839
    2. '_initial' → logprob: -3.0589940547943115
    3. '0' → logprob: -4.808994293212891
    4. '_n' → logprob: -6.433994293212891
    5. '_init' → logprob: -8.68399429321289
    6. '_{' → logprob: -8.68399429321289
    7. '_i' → logprob: -9.68399429321289
    8. 'n' → logprob: -10.30899429321289
    9. '_

' → logprob: -10.43399429321289
    10. '_
' → logprob: -10.55899429321289

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012780919205397367
    2. ' ' → logprob: -7.251277923583984
    3. 'n' → logprob: -7.626277923583984
    4. 'initial' → logprob: -9.876277923583984
    5. '1' → logprob: -11.626277923583984
    6. '_' → logprob: -12.001277923583984
    7. ' initial' → logprob: -12.126277923583984
    8. ' n' → logprob: -13.001277923583984
    9. 'i' → logprob: -13.251277923583984
    10. '
' → logprob: -14.001277923583984

Token 105: '
        
' (ID: 20417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3039439618587494
    2. ')' → logprob: -1.8039439916610718
    3. '):
' → logprob: -2.9289438724517822
    4. ')
' → logprob: -4.053944110870361
    5. '"""
' → logprob: -4.053944110870361
    6. '):' → logprob: -5.303944110870361
    7. '"""' → logprob: -5.803944110870361
    8. '
' → logprob: -7.928944110870361
    9. '```' → logprob: -8.303943634033203
    10. '""' → logprob: -9.178943634033203

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1653042584657669
    2. '"""' → logprob: -2.540304183959961
    3. '"""
' → logprob: -2.915304183959961
    4. '    
' → logprob: -4.915304183959961
    5. '"' → logprob: -5.290304183959961
    6. ')' → logprob: -5.915304183959961
    7. '
' → logprob: -7.165304183959961
    8. '\n' → logprob: -7.290304183959961
    9. ')
' → logprob: -7.540304183959961
    10. ' 
' → logprob: -7.665304183959961

Token 107: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7011016607284546
    2. 'n' → logprob: -0.9511016607284546
    3. 'r' → logprob: -3.201101779937744
    4. 'result' → logprob: -3.951101779937744
    5. 'x' → logprob: -4.201101779937744
    6. ' for' → logprob: -4.701101779937744
    7. ' ' → logprob: -4.951101779937744
    8. 'for' → logprob: -5.326101779937744
    9. ' result' → logprob: -5.326101779937744
    10. ' """
' → logprob: -6.326101779937744

Token 108: ' ' (ID: 220)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.074641466140747
    2. ' x' → logprob: -1.199641466140747
    3. '   ' → logprob: -1.699641466140747
    4. ' ' → logprob: -2.324641466140747
    5. ' val' → logprob: -3.824641466140747
    6. ' n' → logprob: -4.449641227722168
    7. 'n' → logprob: -4.449641227722168
    8. 'x' → logprob: -4.949641227722168
    9. ' result' → logprob: -5.074641227722168
    10. ' values' → logprob: -5.574641227722168

Token 109: '10' (ID: 702)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49098077416419983
    2. 'val' → logprob: -1.4909807443618774
    3. 'r' → logprob: -2.990980863571167
    4. ' ' → logprob: -3.115980863571167
    5. 'result' → logprob: -3.865980863571167
    6. '   ' → logprob: -4.240980625152588
    7. 'rés' → logprob: -4.490980625152588
    8. 'n' → logprob: -5.115980625152588
    9. '"""
' → logprob: -5.740980625152588
    10. 'v' → logprob: -6.115980625152588

Token 110: ' premières' (ID: 73562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6813387870788574
    2. ' premières' → logprob: -1.6813387870788574
    3. ' valeurs' → logprob: -1.9313387870788574
    4. '_' → logprob: -2.6813387870788574
    5. ' premiers' → logprob: -3.1813387870788574
    6. ' ' → logprob: -4.056338787078857
    7. ' _' → logprob: -5.056338787078857
    8. '  ' → logprob: -5.431338787078857
    9. ' espaces' → logprob: -5.431338787078857
    10. ' val' → logprob: -5.556338787078857

Token 111: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3955460488796234
    2. '_' → logprob: -2.2705459594726562
    3. ' valeurs' → logprob: -2.2705459594726562
    4. ' val' → logprob: -3.6455459594726562
    5. ' espaces' → logprob: -3.6455459594726562
    6. '  ' → logprob: -4.770545959472656
    7. '   
' → logprob: -4.895545959472656
    8. ' ' → logprob: -5.020545959472656
    9. '   ' → logprob: -5.270545959472656
    10. '  ' → logprob: -5.270545959472656

Token 112: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.841740071773529
    2. ' ' → logprob: -1.0917401313781738
    3. ' de' → logprob: -1.9667401313781738
    4. '_' → logprob: -3.716740131378174
    5. ' :' → logprob: -3.716740131378174
    6. '    ' → logprob: -4.966740131378174
    7. ':' → logprob: -4.966740131378174
    8. ',' → logprob: -5.591740131378174
    9. '  ' → logprob: -5.591740131378174
    10. ' =' → logprob: -6.216740131378174

Token 113: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.11139151453971863
    2. 'é' → logprob: -2.361391544342041
    3. 'ée' → logprob: -4.861391544342041
    4. 'es' → logprob: -6.361391544342041
    5. 'és' → logprob: -6.736391544342041
    6. 'e' → logprob: -8.361391067504883
    7. '   ' → logprob: -9.861391067504883
    8. ' ' → logprob: -10.736391067504883
    9. ':' → logprob: -10.986391067504883
    10. ',' → logprob: -10.986391067504883

Token 114: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5353532433509827
    2. ' de' → logprob: -1.535353183746338
    3. ' ' → logprob: -2.160353183746338
    4. ',' → logprob: -3.785353183746338
    5. ' :' → logprob: -4.410353183746338
    6. '    ' → logprob: -4.785353183746338
    7. ':' → logprob: -4.910353183746338
    8. ' ,' → logprob: -5.535353183746338
    9. '.' → logprob: -5.910353183746338
    10. '    
' → logprob: -6.160353183746338

Token 115: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1418440043926239
    2. ' )' → logprob: -2.1418440341949463
    3. ' de' → logprob: -5.391843795776367
    4. ' ' → logprob: -5.391843795776367
    5. '   ' → logprob: -6.391843795776367
    6. ',' → logprob: -6.641843795776367
    7. ':' → logprob: -7.266843795776367
    8. 'de' → logprob: -7.641843795776367
    9. '):' → logprob: -7.641843795776367
    10. 'n' → logprob: -9.141843795776367

Token 116: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048954080790281296
    2. '_n' → logprob: -3.1739540100097656
    3. 's' → logprob: -6.298954010009766
    4. '0' → logprob: -6.673954010009766
    5. ')' → logprob: -6.798954010009766
    6. 'n' → logprob: -7.548954010009766
    7. '_i' → logprob: -7.798954010009766
    8. '[' → logprob: -8.048954010009766
    9. '_)' → logprob: -8.298954010009766
    10. ' ' → logprob: -10.173954010009766

Token 117: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25919845700263977
    2. 'n' → logprob: -1.5091984272003174
    3. '1' → logprob: -5.8841986656188965
    4. ' ' → logprob: -6.6341986656188965
    5. '_' → logprob: -6.8841986656188965
    6. 'i' → logprob: -6.8841986656188965
    7. ' n' → logprob: -7.2591986656188965
    8. '   ' → logprob: -8.884198188781738
    9. '_n' → logprob: -9.509198188781738
    10. ')' → logprob: -10.009198188781738

Token 118: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7111111879348755
    2. ',' → logprob: -0.7111111879348755
    3. ' )' → logprob: -5.211111068725586
    4. '):' → logprob: -5.211111068725586
    5. '   ' → logprob: -6.211111068725586
    6. ' =' → logprob: -6.711111068725586
    7. ' ' → logprob: -7.211111068725586
    8. '=' → logprob: -7.211111068725586
    9. ' ,' → logprob: -7.461111068725586
    10. ',)' → logprob: -7.711111068725586

Token 119: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1444583535194397
    2. 'x' → logprob: -2.019458293914795
    3. ' ' → logprob: -6.644458293914795
    4. '10' → logprob: -7.769458293914795
    5. ')' → logprob: -11.644458770751953
    6. ' ' → logprob: -11.644458770751953
    7. ',' → logprob: -11.769458770751953
    8. '   ' → logprob: -12.019458770751953
    9. ' ,' → logprob: -12.394458770751953
    10. 'n' → logprob: -13.019458770751953

Token 120: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00736737996339798
    2. '10' → logprob: -5.8823676109313965
    3. '0' → logprob: -6.1323676109313965
    4. ')' → logprob: -6.5073676109313965
    5. '1' → logprob: -7.5073676109313965
    6. ' ' → logprob: -9.382367134094238
    7. '2' → logprob: -9.507367134094238
    8. '_{' → logprob: -10.007367134094238
    9. ' _' → logprob: -10.257367134094238
    10. '\xe2\x82' → logprob: -10.507367134094238

Token 121: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36946046352386475
    2. '10' → logprob: -1.2444604635238647
    3. '1' → logprob: -3.9944605827331543
    4. ' ' → logprob: -6.369460582733154
    5. '_' → logprob: -7.869460582733154
    6. '2' → logprob: -8.494460105895996
    7. ')' → logprob: -10.869460105895996
    8. '```' → logprob: -11.119460105895996
    9. 'o' → logprob: -11.869460105895996
    10. '9' → logprob: -11.994460105895996

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029437318444252014
    2. ' )' → logprob: -3.779437303543091
    3. '):' → logprob: -5.15443754196167
    4. '):
' → logprob: -8.654437065124512
    5. ' ):' → logprob: -9.279437065124512
    6. ' ' → logprob: -9.654437065124512
    7. ',' → logprob: -10.779437065124512
    8. '   ' → logprob: -10.904437065124512
    9. ' ):
' → logprob: -11.654437065124512
    10. ':' → logprob: -12.529437065124512

Token 123: ' sont' (ID: 5242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7408172488212585
    2. ' :' → logprob: -1.4908173084259033
    3. ' ' → logprob: -1.7408173084259033
    4. '   ' → logprob: -3.3658173084259033
    5. ',' → logprob: -3.8658173084259033
    6. ' sont' → logprob: -4.115817070007324
    7. ' =' → logprob: -4.240817070007324
    8. ')' → logprob: -4.490817070007324
    9. '):' → logprob: -5.240817070007324
    10. ' for' → logprob: -5.615817070007324

Token 124: ' affich' (ID: 90179)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2894236743450165
    2. ':' → logprob: -2.039423704147339
    3. ' :' → logprob: -2.414423704147339
    4. ' calcul' → logprob: -4.28942346572876
    5. ' affich' → logprob: -5.03942346572876
    6. '   ' → logprob: -5.41442346572876
    7. '    ' → logprob: -6.28942346572876
    8. '_' → logprob: -6.66442346572876
    9. ' calculated' → logprob: -7.78942346572876
    10. ' ' → logprob: -8.039423942565918

Token 125: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4781491458415985
    2. 'ées' → logprob: -0.9781491756439209
    3. 'ée' → logprob: -5.728148937225342
    4. 'és' → logprob: -7.228148937225342
    5. 'è' → logprob: -10.3531494140625
    6. 'e' → logprob: -10.9781494140625
    7. 'ê' → logprob: -11.4781494140625
    8. ' é' → logprob: -11.6031494140625
    9. 'es' → logprob: -11.9781494140625
    10. 'ë' → logprob: -13.3531494140625

Token 126: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6872298121452332
    2. '   ' → logprob: -1.812229871749878
    3. '
' → logprob: -2.187229871749878
    4. '    
' → logprob: -2.812229871749878
    5. ',' → logprob: -3.062229871749878
    6. '\n' → logprob: -3.562229871749878
    7. '  
' → logprob: -3.687229871749878
    8. ':
' → logprob: -3.812229871749878
    9. ' 
' → logprob: -4.062229633331299
    10. '   
' → logprob: -5.437229633331299

Token 127: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3825552761554718
    2. ' la' → logprob: -2.5075552463531494
    3. ' ' → logprob: -2.7575552463531494
    4. ' ' → logprob: -3.0075552463531494
    5. 'l' → logprob: -3.2575552463531494
    6. ' chaque' → logprob: -3.8825552463531494
    7. ' partir' → logprob: -3.8825552463531494
    8. '   ' → logprob: -5.3825554847717285
    9. '_' → logprob: -5.5075554847717285
    10. 'space' → logprob: -5.5075554847717285

Token 128: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06247914582490921
    2. 'e' → logprob: -2.937479257583618
    3. ''' → logprob: -6.062479019165039
    4. ''aide' → logprob: -6.562479019165039
    5. ''écran' → logprob: -6.812479019165039
    6. ''intérieur' → logprob: -7.437479019165039
    7. 'i' → logprob: -7.437479019165039
    8. 'u' → logprob: -7.937479019165039
    9. ''a' → logprob: -8.062479019165039
    10. 'é' → logprob: -8.562479019165039

Token 129: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8463873267173767
    2. '    
' → logprob: -1.2213873863220215
    3. '   ' → logprob: -1.7213873863220215
    4. ':' → logprob: -2.9713873863220215
    5. '  
' → logprob: -4.2213873863220215
    6. '\n' → logprob: -4.8463873863220215
    7. ':
' → logprob: -5.0963873863220215
    8. '   
' → logprob: -5.0963873863220215
    9. ' 
' → logprob: -5.2213873863220215
    10. ',' → logprob: -6.4713873863220215

Token 130: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09481747448444366
    2. '"""
' → logprob: -3.3448173999786377
    3. '"""' → logprob: -3.7198173999786377
    4. '    
' → logprob: -4.094817638397217
    5. '
' → logprob: -4.469817638397217
    6. '"' → logprob: -6.969817638397217
    7. ' """
' → logprob: -7.844817638397217
    8. '""' → logprob: -7.969817638397217
    9. ' 
' → logprob: -8.844817161560059
    10. '   
' → logprob: -8.969817161560059

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005037594586610794
    2. '"""' → logprob: -6.255037784576416
    3. '    
' → logprob: -6.505037784576416
    4. '    ' → logprob: -6.880037784576416
    5. ' """' → logprob: -8.630037307739258
    6. '"' → logprob: -9.505037307739258
    7. '
' → logprob: -9.505037307739258
    8. ' ' → logprob: -10.130037307739258
    9. '"""
' → logprob: -10.380037307739258
    10. ' """
' → logprob: -10.630037307739258

Token 132: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11485134810209274
    2. 'x' → logprob: -3.364851236343384
    3. 'n' → logprob: -3.489851236343384
    4. ' for' → logprob: -4.239851474761963
    5. 'for' → logprob: -5.239851474761963
    6. '    
' → logprob: -5.239851474761963
    7. 'r' → logprob: -5.614851474761963
    8. ' ' → logprob: -5.614851474761963
    9. ' """' → logprob: -6.239851474761963
    10. '
' → logprob: -6.489851474761963

Token 133: 'ètres' (ID: 40427)
  Prédit: 'ètre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.6106930375099182
    2. 'ètres' → logprob: -0.8606930375099182
    3. 'eters' → logprob: -4.235692977905273
    4. 'et' → logprob: -4.985692977905273
    5. ' ' → logprob: -5.360692977905273
    6. 'etre' → logprob: -5.985692977905273
    7. 'eter' → logprob: -6.485692977905273
    8. 'etros' → logprob: -6.985692977905273
    9. 'ETERS' → logprob: -7.860692977905273
    10. 'éter' → logprob: -7.985692977905273

Token 134: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2602347731590271
    2. ' :' → logprob: -1.5102348327636719
    3. '):' → logprob: -5.885234832763672
    4. ')' → logprob: -6.260234832763672
    5. '(r' → logprob: -6.260234832763672
    6. ',' → logprob: -7.135234832763672
    7. '   ' → logprob: -8.635234832763672
    8. 'r' → logprob: -9.260234832763672
    9. ' (' → logprob: -9.385234832763672
    10. 's' → logprob: -9.510234832763672

Token 135: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2692853808403015
    2. ' :' → logprob: -1.6442854404449463
    3. '):' → logprob: -3.2692854404449463
    4. ')' → logprob: -5.769285202026367
    5. '<|end|>' → logprob: -7.394285202026367
    6. ',' → logprob: -8.269285202026367
    7. '):
' → logprob: -8.394285202026367
    8. '=' → logprob: -8.644285202026367
    9. ':
' → logprob: -9.019285202026367
    10. ' =' → logprob: -9.519285202026367

Token 136: ' ----------
' (ID: 68058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3643367290496826
    2. ' :' → logprob: -1.2393367290496826
    3. '):' → logprob: -4.989336967468262
    4. ':
' → logprob: -5.864336967468262
    5. '):
' → logprob: -6.364336967468262
    6. '   ' → logprob: -6.489336967468262
    7. ' :
' → logprob: -6.614336967468262
    8. ')' → logprob: -7.114336967468262
    9. '=' → logprob: -8.489336967468262
    10. 's' → logprob: -8.864336967468262

Token 137: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8344358205795288
    2. ' r' → logprob: -0.9594358205795288
    3. '   ' → logprob: -1.7094358205795288
    4. '
' → logprob: -7.209435939788818
    5. '    
' → logprob: -7.834435939788818
    6. ' 
' → logprob: -8.08443546295166
    7. '    ' → logprob: -9.33443546295166
    8. ' :' → logprob: -9.58443546295166
    9. '	r' → logprob: -10.20943546295166
    10. '```' → logprob: -10.33443546295166

Token 138: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.01265161857008934
    2. '   ' → logprob: -4.637651443481445
    3. ' r' → logprob: -5.887651443481445
    4. '
' → logprob: -9.637651443481445
    5. ':' → logprob: -10.887651443481445
    6. '```' → logprob: -11.262651443481445
    7. ':r' → logprob: -12.262651443481445
    8. '    
' → logprob: -12.512651443481445
    9. ' :' → logprob: -12.637651443481445
    10. '	r' → logprob: -13.512651443481445

Token 139: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5280829668045044
    2. ' (' → logprob: -1.1530829668045044
    3. ':' → logprob: -2.403082847595215
    4. ',' → logprob: -6.153082847595215
    5. ':int' → logprob: -6.903082847595215
    6. '(int' → logprob: -7.028082847595215
    7. '<|end|>' → logprob: -10.028082847595215
    8. ' ' → logprob: -10.403082847595215
    9. '```' → logprob: -11.028082847595215
    10. 'int' → logprob: -11.028082847595215

Token 140: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0430099181830883
    2. 'int' → logprob: -3.1680099964141846
    3. '   ' → logprob: -12.293009757995605
    4. ':int' → logprob: -13.793009757995605
    5. '```' → logprob: -13.918009757995605
    6. '(int' → logprob: -14.293009757995605
    7. '[int' → logprob: -14.293009757995605
    8. ' integer' → logprob: -14.418009757995605
    9. '	int' → logprob: -14.668009757995605
    10. '    ' → logprob: -14.793009757995605

Token 141: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6869338154792786
    2. ',' → logprob: -1.1869337558746338
    3. '   ' → logprob: -2.686933755874634
    4. '<|end|>' → logprob: -2.686933755874634
    5. ':' → logprob: -4.061933994293213
    6. '
' → logprob: -4.186933994293213
    7. '):
' → logprob: -4.686933994293213
    8. '):' → logprob: -5.811933994293213
    9. ')
' → logprob: -6.311933994293213
    10. ',
' → logprob: -6.436933994293213

Token 142: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.695713996887207
    2. ',' → logprob: -1.445713996887207
    3. '<|end|>' → logprob: -1.945713996887207
    4. '   ' → logprob: -2.445713996887207
    5. ' ' → logprob: -4.445713996887207
    6. ' ,' → logprob: -5.195713996887207
    7. ':' → logprob: -5.320713996887207
    8. ' )' → logprob: -5.820713996887207
    9. '```' → logprob: -6.195713996887207
    10. '<|end|>' → logprob: -6.320713996887207

Token 143: ' Le' (ID: 2018)
  Prédit: 'Le'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Le' (adapté à ' Le') → logprob: -0.9429217576980591
    2. 'Coefficient' → logprob: -0.9429217576980591
    3. ' Le' → logprob: -1.817921757698059
    4. ' Co' → logprob: -4.0679216384887695
    5. 'int' → logprob: -4.3179216384887695
    6. ' coefficient' → logprob: -4.9429216384887695
    7. 'Multip' → logprob: -5.3179216384887695
    8. ' int' → logprob: -5.5679216384887695
    9. 'Coef' → logprob: -6.4429216384887695
    10. ' le' → logprob: -6.6929216384887695

Token 144: ' coefficient' (ID: 64656)
  Prédit: ' coefficient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficient' → logprob: -0.017602402716875076
    2. ' coef' → logprob: -5.017602443695068
    3. ' coeff' → logprob: -5.767602443695068
    4. ' facteur' → logprob: -5.767602443695068
    5. 'coeff' → logprob: -6.517602443695068
    6. 'co' → logprob: -6.517602443695068
    7. 'coef' → logprob: -7.142602443695068
    8. ' multiplic' → logprob: -7.642602443695068
    9. ' coefficients' → logprob: -9.14260196685791
    10. ' nombre' → logprob: -9.51760196685791

Token 145: ' multiplic' (ID: 67929)
  Prédit: ' multiplic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplic' → logprob: -0.019066141918301582
    2. ' multiplier' → logprob: -5.019066333770752
    3. ' multip' → logprob: -5.394066333770752
    4. 'multip' → logprob: -5.519066333770752
    5. ' multiplication' → logprob: -6.144066333770752
    6. ' Multip' → logprob: -8.019065856933594
    7. ' multiply' → logprob: -8.269065856933594
    8. ' multipl' → logprob: -8.519065856933594
    9. '_multiplier' → logprob: -8.519065856933594
    10. ' de' → logprob: -8.519065856933594

Token 146: 'atif' (ID: 23984)
  Prédit: 'ateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.011042879894375801
    2. 'ate' → logprob: -4.636043071746826
    3. ' at' → logprob: -8.011042594909668
    4. ' ate' → logprob: -8.386042594909668
    5. 'at' → logprob: -8.761042594909668
    6. 'eur' → logprob: -9.011042594909668
    7. 'atif' → logprob: -9.011042594909668
    8. '   ' → logprob: -9.011042594909668
    9. ' ' → logprob: -10.011042594909668
    10. 'a' → logprob: -10.261042594909668

Token 147: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7311955690383911
    2. '    
' → logprob: -1.4811955690383911
    3. '  
' → logprob: -1.9811955690383911
    4. ' 
' → logprob: -2.6061954498291016
    5. '\n' → logprob: -3.7311954498291016
    6. ',' → logprob: -4.356195449829102
    7. ',
' → logprob: -4.856195449829102
    8. '   ' → logprob: -5.106195449829102
    9. '   
' → logprob: -5.106195449829102
    10. '
    
' → logprob: -5.356195449829102

Token 148: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.011272164061665535
    2. 'la' → logprob: -5.011271953582764
    3. ' chaque' → logprob: -6.136271953582764
    4. '<|end|>' → logprob: -6.511271953582764
    5. 'l' → logprob: -8.386272430419922
    6. ' l' → logprob: -8.761272430419922
    7. 'cha' → logprob: -9.011272430419922
    8. 'r' → logprob: -9.761272430419922
    9. ' the' → logprob: -9.886272430419922
    10. ' ' → logprob: -10.011272430419922

Token 149: ' ré' (ID: 3146)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.2480861097574234
    2. ' suite' → logprob: -1.7480860948562622
    3. ' sequence' → logprob: -5.123085975646973
    4. 's' → logprob: -5.123085975646973
    5. ' coefficient' → logprob: -5.248085975646973
    6. ' ' → logprob: -5.373085975646973
    7. 'r' → logprob: -5.623085975646973
    8. ' facteur' → logprob: -5.623085975646973
    9. ' multip' → logprob: -6.123085975646973
    10. '   ' → logprob: -6.373085975646973

Token 150: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.015308870933949947
    2. 'c' → logprob: -4.390308856964111
    3. 'cc' → logprob: -6.890308856964111
    4. 'cur' → logprob: -7.390308856964111
    5. 'current' → logprob: -7.765308856964111
    6. 'urrence' → logprob: -8.14030933380127
    7. 'cup' → logprob: -9.39030933380127
    8. ' curr' → logprob: -9.89030933380127
    9. '   ' → logprob: -10.01530933380127
    10. 'ec' → logprob: -10.76530933380127

Token 151: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0013096443144604564
    2. 'e' → logprob: -7.501309871673584
    3. 'ent' → logprob: -8.126309394836426
    4. 'ente' → logprob: -8.626309394836426
    5. 'en' → logprob: -9.751309394836426
    6. 'ce' → logprob: -10.126309394836426
    7. '   ' → logprob: -10.501309394836426
    8. 'ece' → logprob: -10.751309394836426
    9. 'rence' → logprob: -10.751309394836426
    10. '
' → logprob: -11.563809394836426

Token 152: '.
' (ID: 558)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6298424005508423
    2. '
' → logprob: -1.6298424005508423
    3. '   ' → logprob: -2.1298422813415527
    4. '\n' → logprob: -2.6298422813415527
    5. '  
' → logprob: -3.2548422813415527
    6. '   
' → logprob: -4.879842281341553
    7. 'n' → logprob: -5.004842281341553
    8. '    
    
' → logprob: -5.004842281341553
    9. ',' → logprob: -5.129842281341553
    10. ' 
' → logprob: -5.379842281341553

Token 153: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.595672607421875
    2. '    
' → logprob: -1.720672607421875
    3. '\n' → logprob: -1.720672607421875
    4. 'n' → logprob: -2.095672607421875
    5. '
' → logprob: -2.095672607421875
    6. '   ' → logprob: -2.095672607421875
    7. '  
' → logprob: -3.595672607421875
    8. ')' → logprob: -4.345672607421875
    9. '   
' → logprob: -4.470672607421875
    10. 'r' → logprob: -5.345672607421875

Token 154: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.4698823392391205
    2. 'D' (adapté à ' D') → logprob: -1.3448823690414429
    3. ' ' → logprob: -2.4698822498321533
    4. ' 
' → logprob: -4.344882488250732
    5. 'r' → logprob: -4.969882488250732
    6. '   ' → logprob: -6.344882488250732
    7. 'n' → logprob: -6.344882488250732
    8. '    ' → logprob: -6.844882488250732
    9. '     
' → logprob: -6.844882488250732
    10. 'd' → logprob: -7.469882488250732

Token 155: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.0036125436890870333
    2. ':' → logprob: -5.628612518310547
    3. ':int' → logprob: -11.753612518310547
    4. ',' → logprob: -13.253612518310547
    5. ' ' → logprob: -14.128612518310547
    6. ' (' → logprob: -14.128612518310547
    7. '   ' → logprob: -15.003612518310547
    8. '  ' → logprob: -15.128612518310547
    9. '```' → logprob: -15.253612518310547
    10. ' :
' → logprob: -16.003612518310547

Token 156: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05497425049543381
    2. 'int' → logprob: -2.929974317550659
    3. '<|end|>' → logprob: -10.554974555969238
    4. 'space' → logprob: -11.304974555969238
    5. ' ' → logprob: -11.429974555969238
    6. '	int' → logprob: -11.429974555969238
    7. '[int' → logprob: -11.554974555969238
    8. '(int' → logprob: -11.929974555969238
    9. '=int' → logprob: -12.054974555969238
    10. ']int' → logprob: -13.304974555969238

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5322750806808472
    2. '   ' → logprob: -1.7822750806808472
    3. '<|end|>' → logprob: -1.9072750806808472
    4. '        
' → logprob: -3.5322751998901367
    5. ':' → logprob: -4.157275199890137
    6. ' :' → logprob: -4.532275199890137
    7. '
' → logprob: -4.532275199890137
    8. '    
' → logprob: -4.782275199890137
    9. '    ' → logprob: -5.282275199890137
    10. '        ' → logprob: -5.657275199890137

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09726957231760025
    2. '   ' → logprob: -3.2222695350646973
    3. ':' → logprob: -4.222269535064697
    4. '        
' → logprob: -4.222269535064697
    5. ' :' → logprob: -4.972269535064697
    6. '    ' → logprob: -5.347269535064697
    7. '
' → logprob: -5.847269535064697
    8. '    
' → logprob: -5.972269535064697
    9. '        ' → logprob: -6.347269535064697
    10. '```' → logprob: -6.972269535064697

Token 159: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.9035230278968811
    2. 'La' (adapté à ' La') → logprob: -1.5285229682922363
    3. ' int' → logprob: -1.7785229682922363
    4. 'int' → logprob: -2.1535229682922363
    5. ' L' → logprob: -3.2785229682922363
    6. ' Le' → logprob: -3.7785229682922363
    7. 'Le' → logprob: -4.153522968292236
    8. 'L' → logprob: -4.903522968292236
    9. '   ' → logprob: -5.528522968292236
    10. ' la' → logprob: -6.778522968292236

Token 160: ' constante' (ID: 49652)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07353461533784866
    2. ' valeur' → logprob: -2.8235347270965576
    3. ' constante' → logprob: -5.4485344886779785
    4. 'const' → logprob: -5.5735344886779785
    5. ' val' → logprob: -5.9485344886779785
    6. 'diff' → logprob: -8.198534965515137
    7. ' différence' → logprob: -8.448534965515137
    8. ' ' → logprob: -9.823534965515137
    9. '   ' → logprob: -10.073534965515137
    10. ' const' → logprob: -10.198534965515137

Token 161: ' sou' (ID: 4069)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.014340966008603573
    2. '   ' → logprob: -4.639340877532959
    3. '    ' → logprob: -6.639340877532959
    4. 'sou' → logprob: -6.639340877532959
    5. 'à' → logprob: -7.639340877532959
    6. ' ' → logprob: -7.764340877532959
    7. ' sou' → logprob: -8.264341354370117
    8. ' de' → logprob: -8.389341354370117
    9. ' a' → logprob: -8.764341354370117
    10. '  ' → logprob: -8.764341354370117

Token 162: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.031938113272190094
    2. 'str' → logprob: -3.656938076019287
    3. 'stract' → logprob: -5.531938076019287
    4. 'straction' → logprob: -7.031938076019287
    5. 'st' → logprob: -8.031938552856445
    6. 's' → logprob: -8.031938552856445
    7. 'mise' → logprob: -10.781938552856445
    8. 'strate' → logprob: -10.781938552856445
    9. 'tr' → logprob: -11.656938552856445
    10. 'r' → logprob: -11.656938552856445

Token 163: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.015243135392665863
    2. 'ire' → logprob: -4.765243053436279
    3. 'it' → logprob: -6.515243053436279
    4. 'ct' → logprob: -6.515243053436279
    5. '   ' → logprob: -6.890243053436279
    6. 'i' → logprob: -7.640243053436279
    7. 'cte' → logprob: -8.015243530273438
    8. '-' → logprob: -8.140243530273438
    9. 'itre' → logprob: -9.140243530273438
    10. ' ite' → logprob: -9.265243530273438

Token 164: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18674498796463013
    2. '   ' → logprob: -1.8117449283599854
    3. ' ' → logprob: -6.4367451667785645
    4. '       ' → logprob: -6.5617451667785645
    5. ' lors' → logprob: -6.6867451667785645
    6. 'à' → logprob: -6.9367451667785645
    7. ' de' → logprob: -7.4367451667785645
    8. '    
' → logprob: -8.436744689941406
    9. ' au' → logprob: -8.561744689941406
    10. '    ' → logprob: -8.686744689941406

Token 165: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09667970985174179
    2. 'cha' → logprob: -2.5966796875
    3. ' ' → logprob: -4.7216796875
    4. ' ' → logprob: -5.8466796875
    5. ' each' → logprob: -6.3466796875
    6. ' la' → logprob: -6.7216796875
    7. ' cha' → logprob: -7.3466796875
    8. '   ' → logprob: -7.5966796875
    9. ' l' → logprob: -7.7216796875
    10. 'l' → logprob: -8.0966796875

Token 166: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.03587360680103302
    2. ' étape' → logprob: -4.0358734130859375
    3. ' iteration' → logprob: -4.6608734130859375
    4. 'it' → logprob: -5.6608734130859375
    5. ' ' → logprob: -6.1608734130859375
    6. ' iter' → logprob: -7.1608734130859375
    7. 'iteration' → logprob: -7.1608734130859375
    8. ' step' → logprob: -8.160873413085938
    9. ' ite' → logprob: -8.660873413085938
    10. '
' → logprob: -9.660873413085938

Token 167: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.2755209505558014
    2. 'é' → logprob: -1.650520920753479
    3. 'ér' → logprob: -3.1505210399627686
    4. 'er' → logprob: -6.5255208015441895
    5. 'éra' → logprob: -6.7755208015441895
    6. '   ' → logprob: -6.9005208015441895
    7. 'érations' → logprob: -7.1505208015441895
    8. 'e' → logprob: -8.525521278381348
    9. ' ' → logprob: -8.900521278381348
    10. 'érer' → logprob: -9.025521278381348

Token 168: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020143449306488037
    2. 'def' → logprob: -4.895143508911133
    3. '
' → logprob: -5.270143508911133
    4. '\n' → logprob: -5.770143508911133
    5. '    
' → logprob: -6.395143508911133
    6. '```' → logprob: -7.020143508911133
    7. ',' → logprob: -7.645143508911133
    8. 'n' → logprob: -8.520143508911133
    9. '        
' → logprob: -9.145143508911133
    10. '  
' → logprob: -9.270143508911133

Token 169: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37293729186058044
    2. '   ' → logprob: -1.8729373216629028
    3. ' x' → logprob: -1.8729373216629028
    4. ' ' → logprob: -6.122937202453613
    5. ' 
' → logprob: -7.372937202453613
    6. '	x' → logprob: -8.247937202453613
    7. '    ' → logprob: -8.497937202453613
    8. '    
' → logprob: -8.872937202453613
    9. '
' → logprob: -8.872937202453613
    10. '```' → logprob: -9.497937202453613

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.39298006892204285
    2. ' x' → logprob: -1.1429800987243652
    3. '   ' → logprob: -5.142980098724365
    4. ' ' → logprob: -9.392979621887207
    5. '```' → logprob: -10.142979621887207
    6. ' 
' → logprob: -10.392979621887207
    7. '    
' → logprob: -10.767979621887207
    8. '	x' → logprob: -10.892979621887207
    9. ' """
' → logprob: -11.142979621887207
    10. '
' → logprob: -11.767979621887207

Token 171: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.1003073900938034
    2. '_' → logprob: -2.3503074645996094
    3. ' _' → logprob: -9.97530746459961
    4. '_final' → logprob: -10.72530746459961
    5. '_init' → logprob: -11.22530746459961
    6. '_
' → logprob: -12.97530746459961
    7. '_in' → logprob: -13.22530746459961
    8. '_INITIAL' → logprob: -13.35030746459961
    9. '_s' → logprob: -13.47530746459961
    10. '_i' → logprob: -13.85030746459961

Token 172: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5836179852485657
    2. ':' → logprob: -0.8336179852485657
    3. ')' → logprob: -5.0836181640625
    4. ':int' → logprob: -6.9586181640625
    5. '):' → logprob: -8.4586181640625
    6. ',' → logprob: -9.4586181640625
    7. ' ' → logprob: -9.4586181640625
    8. ' (' → logprob: -10.3336181640625
    9. ' )' → logprob: -10.5836181640625
    10. '   ' → logprob: -10.9586181640625

Token 173: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16029764711856842
    2. 'int' → logprob: -1.9102976322174072
    3. ' ' → logprob: -9.785297393798828
    4. ' ' → logprob: -11.285297393798828
    5. '=int' → logprob: -13.910297393798828
    6. '	int' → logprob: -13.910297393798828
    7. '(int' → logprob: -14.285297393798828
    8. 'space' → logprob: -14.785297393798828
    9. '[int' → logprob: -14.785297393798828
    10. ':int' → logprob: -15.160297393798828

Token 174: '
' (ID: 198)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6164804697036743
    2. ')' → logprob: -1.7414804697036743
    3. '
' → logprob: -2.1164803504943848
    4. ')
' → logprob: -2.9914803504943848
    5. '   ' → logprob: -3.3664803504943848
    6. ':' → logprob: -3.4914803504943848
    7. '):' → logprob: -3.7414803504943848
    8. ' :' → logprob: -4.866480350494385
    9. ':
' → logprob: -5.366480350494385
    10. ' ):
' → logprob: -5.491480350494385

Token 175: '       ' (ID: 309)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9912086725234985
    2. ')' → logprob: -1.6162086725234985
    3. '   ' → logprob: -1.6162086725234985
    4. '):' → logprob: -2.241208553314209
    5. ':' → logprob: -2.491208553314209
    6. '
' → logprob: -4.616208553314209
    7. ':
' → logprob: -4.866208553314209
    8. '    
' → logprob: -4.991208553314209
    9. ' 
' → logprob: -5.741208553314209
    10. ' ):
' → logprob: -5.741208553314209

Token 176: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.19341658055782318
    2. 'La' (adapté à ' La') → logprob: -1.9434165954589844
    3. ' L' → logprob: -3.6934165954589844
    4. 'L' → logprob: -6.068416595458984
    5. ' int' → logprob: -6.568416595458984
    6. ' Le' → logprob: -7.193416595458984
    7. 'Initial' → logprob: -7.443416595458984
    8. ' la' → logprob: -7.568416595458984
    9. ' Vale' → logprob: -7.568416595458984
    10. ' The' → logprob: -7.693416595458984

Token 177: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.2704610228538513
    2. 'val' → logprob: -1.520461082458496
    3. ' val' → logprob: -4.770461082458496
    4. ' ' → logprob: -4.770461082458496
    5. ' vale' → logprob: -7.520461082458496
    6. ' value' → logprob: -8.145461082458496
    7. '_val' → logprob: -9.145461082458496
    8. ' première' → logprob: -9.520461082458496
    9. 'value' → logprob: -9.645461082458496
    10. '   ' → logprob: -9.645461082458496

Token 178: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6112061738967896
    2. ' initial' → logprob: -1.3612061738967896
    3. '_' → logprob: -1.8612061738967896
    4. '_initial' → logprob: -3.2362060546875
    5. ' _' → logprob: -6.6112060546875
    6. 'initial' → logprob: -6.6112060546875
    7. ' ' → logprob: -6.8612060546875
    8. '  ' → logprob: -7.6112060546875
    9. '<|end|>' → logprob: -7.6112060546875
    10. '_INITIAL' → logprob: -8.2362060546875

Token 179: 'e' (ID: 68)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9469207525253296
    2. ' de' → logprob: -1.0719207525253296
    3. 'e' → logprob: -2.321920871734619
    4. '_' → logprob: -2.446920871734619
    5. '   ' → logprob: -3.071920871734619
    6. ' initial' → logprob: -4.321920871734619
    7. '  ' → logprob: -4.821920871734619
    8. '_initial' → logprob: -4.946920871734619
    9. ' _' → logprob: -5.571920871734619
    10. '    ' → logprob: -6.196920871734619

Token 180: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07138241827487946
    2. ' ' → logprob: -3.696382522583008
    3. ' x' → logprob: -3.946382522583008
    4. '   ' → logprob: -4.946382522583008
    5. 'de' → logprob: -5.071382522583008
    6. 'x' → logprob: -5.821382522583008
    7. ' d' → logprob: -6.571382522583008
    8. ' (' → logprob: -6.946382522583008
    9. ' initial' → logprob: -6.946382522583008
    10. ' du' → logprob: -7.071382522583008

Token 181: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.011253300122916698
    2. 'la' → logprob: -5.261253356933594
    3. 'x' → logprob: -5.886253356933594
    4. ' x' → logprob: -6.261253356933594
    5. ' ' → logprob: -7.761253356933594
    6. 'l' → logprob: -8.011253356933594
    7. ' l' → logprob: -8.261253356933594
    8. ' départ' → logprob: -9.011253356933594
    9. ' ' → logprob: -9.386253356933594
    10. ' the' → logprob: -10.386253356933594

Token 182: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.09031595289707184
    2. ' suite' → logprob: -2.4653160572052
    3. 'sequence' → logprob: -7.715315818786621
    4. 's' → logprob: -8.215315818786621
    5. ' sequence' → logprob: -8.340315818786621
    6. 'sé' → logprob: -9.215315818786621
    7. 'su' → logprob: -9.465315818786621
    8. ' ' → logprob: -9.840315818786621
    9. '   ' → logprob: -9.840315818786621
    10. '_suite' → logprob: -10.090315818786621

Token 183: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6844687461853027
    2. '):
' → logprob: -1.5594687461853027
    3. '
' → logprob: -1.8094687461853027
    4. '    
' → logprob: -3.0594687461853027
    5. ')' → logprob: -3.1844687461853027
    6. ')
' → logprob: -4.559468746185303
    7. '):' → logprob: -5.059468746185303
    8. '\n' → logprob: -5.059468746185303
    9. '"""
' → logprob: -5.809468746185303
    10. '

' → logprob: -6.809468746185303

Token 184: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21865278482437134
    2. 'x' → logprob: -2.3436527252197266
    3. ')
' → logprob: -2.8436527252197266
    4. '   ' → logprob: -4.343652725219727
    5. ' x' → logprob: -4.593652725219727
    6. '):
' → logprob: -5.593652725219727
    7. ' )' → logprob: -5.593652725219727
    8. ' la' → logprob: -6.093652725219727
    9. 'int' → logprob: -6.218652725219727
    10. 'la' → logprob: -6.218652725219727

Token 185: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02661759965121746
    2. '0' → logprob: -3.6516175270080566
    3. '_
' → logprob: -9.151618003845215
    4. '_initial' → logprob: -10.151618003845215
    5. ')' → logprob: -10.276618003845215
    6. '_n' → logprob: -10.651618003845215
    7. '_)' → logprob: -10.776618003845215
    8. '\xe2\x82' → logprob: -11.026618003845215
    9. ' _' → logprob: -11.026618003845215
    10. ' ' → logprob: -11.151618003845215

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033539244905114174
    2. '_' → logprob: -5.753354072570801
    3. ' ' → logprob: -8.7533540725708
    4. '_initial' → logprob: -12.0033540725708
    5. ')' → logprob: -12.3783540725708
    6. ' _' → logprob: -13.2533540725708
    7. 'initial' → logprob: -13.3783540725708
    8. 'n' → logprob: -13.7533540725708
    9. ' initial' → logprob: -14.2533540725708
    10. '   ' → logprob: -14.5033540725708

Token 187: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034101702272892
    2. '):
' → logprob: -3.909101724624634
    3. ')
' → logprob: -4.409101486206055
    4. '):' → logprob: -6.784101486206055
    5. '   ' → logprob: -9.284101486206055
    6. '
' → logprob: -10.409101486206055
    7. '):

' → logprob: -11.284101486206055
    8. ')

' → logprob: -11.659101486206055
    9. '"""' → logprob: -12.159101486206055
    10. '):
' → logprob: -12.409101486206055

Token 188: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.563077688217163
    2. '    
' → logprob: -1.563077688217163
    3. '\n' → logprob: -1.688077688217163
    4. '
' → logprob: -1.938077688217163
    5. '   ' → logprob: -2.563077688217163
    6. 'n' → logprob: -2.938077688217163
    7. '  
' → logprob: -3.313077688217163
    8. '"""
' → logprob: -3.688077688217163
    9. '"""' → logprob: -3.938077688217163
    10. '"' → logprob: -4.813077926635742

Token 189: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.18460413813591003
    2. '   ' → logprob: -2.3096041679382324
    3. '"""
' (adapté à ' """
') → logprob: -3.1846041679382324
    4. '"' → logprob: -3.9346041679382324
    5. '""' → logprob: -5.934604167938232
    6. ')' → logprob: -6.059604167938232
    7. ' """' → logprob: -6.434604167938232
    8. ' """
' → logprob: -6.934604167938232
    9. ' ' → logprob: -8.434603691101074
    10. '    
' → logprob: -8.684603691101074

Token 190: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0633820295333862
    2. 'x' → logprob: -1.4383820295333862
    3. '   ' → logprob: -1.5633820295333862
    4. '
' → logprob: -2.063382148742676
    5. '    
' → logprob: -3.438382148742676
    6. ' 
' → logprob: -3.938382148742676
    7. '\n' → logprob: -4.313382148742676
    8. '     
' → logprob: -5.563382148742676
    9. '    ' → logprob: -5.813382148742676
    10. ' x' → logprob: -6.313382148742676

Token 191: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09576977044343948
    2. ' x' → logprob: -2.5957698822021484
    3. '   ' → logprob: -4.595769882202148
    4. 'result' → logprob: -5.845769882202148
    5. ' result' → logprob: -5.970769882202148
    6. 'n' → logprob: -7.095769882202148
    7. ' current' → logprob: -8.970769882202148
    8. 'current' → logprob: -9.470769882202148
    9. '    
' → logprob: -10.095769882202148
    10. '\n' → logprob: -10.845769882202148

Token 192: ' Initial' (ID: 9209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006611519027501345
    2. ' x' → logprob: -5.631611347198486
    3. ' ' → logprob: -6.756611347198486
    4. 'space' → logprob: -6.881611347198486
    5. 'n' → logprob: -8.131611824035645
    6. '   ' → logprob: -8.881611824035645
    7. '_' → logprob: -9.506611824035645
    8. 'value' → logprob: -9.756611824035645
    9. 'current' → logprob: -10.006611824035645
    10. ',' → logprob: -10.631611824035645

Token 193: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.582518994808197
    2. '   ' → logprob: -1.0825190544128418
    3. 'e' → logprob: -2.957519054412842
    4. '_value' → logprob: -3.957519054412842
    5. 'er' → logprob: -4.707519054412842
    6. 'ize' → logprob: -5.832519054412842
    7. '=' → logprob: -5.957519054412842
    8. '_val' → logprob: -6.082519054412842
    9. 'ization' → logprob: -6.332519054412842
    10. 'iser' → logprob: -6.332519054412842

Token 194: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4555153250694275
    2. ' x' → logprob: -1.0805153846740723
    3. '   ' → logprob: -3.7055153846740723
    4. ':' → logprob: -7.455515384674072
    5. '    
' → logprob: -7.830515384674072
    6. '_' → logprob: -8.705514907836914
    7. ' ' → logprob: -9.080514907836914
    8. ' ' → logprob: -9.205514907836914
    9. '    ' → logprob: -9.330514907836914
    10. ' 
' → logprob: -9.580514907836914

Token 195: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14313437044620514
    2. 'x' → logprob: -2.018134355545044
    3. ' ' → logprob: -8.393134117126465
    4. ' la' → logprob: -8.643134117126465
    5. 'xn' → logprob: -11.268134117126465
    6. ' xn' → logprob: -11.518134117126465
    7. ' ' → logprob: -11.768134117126465
    8. '   ' → logprob: -12.018134117126465
    9. ' current' → logprob: -12.268134117126465
    10. ' l' → logprob: -12.768134117126465

Token 196: ' variable' (ID: 11076)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04206205904483795
    2. 'val' → logprob: -3.7920620441436768
    3. ' x' → logprob: -4.167062282562256
    4. 'sequence' → logprob: -7.167062282562256
    5. ' valeur' → logprob: -7.167062282562256
    6. 'value' → logprob: -8.042061805725098
    7. 'liste' → logprob: -8.417061805725098
    8. 'suite' → logprob: -8.417061805725098
    9. ' sequence' → logprob: -8.667061805725098
    10. ' val' → logprob: -9.042061805725098

Token 197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6356313228607178
    2. ' x' → logprob: -0.7606313228607178
    3. '   ' → logprob: -6.385631561279297
    4. ' ' → logprob: -6.760631561279297
    5. ' ' → logprob: -9.885631561279297
    6. '_' → logprob: -10.135631561279297
    7. '	x' → logprob: -10.635631561279297
    8. ' current' → logprob: -11.010631561279297
    9. ',' → logprob: -11.260631561279297
    10. '_x' → logprob: -11.760631561279297

Token 198: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0016739914426580071
    2. '=' → logprob: -6.626674175262451
    3. '_x' → logprob: -9.126673698425293
    4. '_' → logprob: -9.126673698425293
    5. ' x' → logprob: -10.501673698425293
    6. ' ' → logprob: -10.876673698425293
    7. '_current' → logprob: -10.876673698425293
    8. 'x' → logprob: -11.126673698425293
    9. '=x' → logprob: -11.126673698425293
    10. ' =
' → logprob: -11.376673698425293

Token 199: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5231773853302002
    2. ' x' → logprob: -0.8981773853302002
    3. ' ' → logprob: -10.898177146911621
    4. ' ' → logprob: -11.398177146911621
    5. '	x' → logprob: -12.023177146911621
    6. 'l' → logprob: -12.523177146911621
    7. '`' → logprob: -12.773177146911621
    8. '_x' → logprob: -13.398177146911621
    9. '```' → logprob: -13.398177146911621
    10. '   ' → logprob: -13.648177146911621

Token 200: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3237049877643585
    2. 'val' → logprob: -1.6987049579620361
    3. ' x' → logprob: -2.698704957962036
    4. ' valeur' → logprob: -4.323705196380615
    5. '_val' → logprob: -4.573705196380615
    6. ' val' → logprob: -6.948705196380615
    7. 'value' → logprob: -8.073704719543457
    8. '_' → logprob: -8.198704719543457
    9. '_initial' → logprob: -8.573704719543457
    10. '_x' → logprob: -8.698704719543457

Token 201: ' initial' (ID: 4871)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.41788268089294434
    2. 'x' → logprob: -1.6678826808929443
    3. '_initial' → logprob: -2.0428826808929443
    4. '_' → logprob: -4.292882919311523
    5. ' _' → logprob: -5.792882919311523
    6. ' initial' → logprob: -5.917882919311523
    7. 'initial' → logprob: -6.792882919311523
    8. '_x' → logprob: -7.042882919311523
    9. ' ' → logprob: -7.167882919311523
    10. '   ' → logprob: -8.042882919311523

Token 202: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5349822640419006
    2. 'e' → logprob: -1.2849822044372559
    3. '_' → logprob: -2.159982204437256
    4. ' x' → logprob: -4.534982204437256
    5. ' =' → logprob: -5.909982204437256
    6. '_x' → logprob: -5.909982204437256
    7. ' ' → logprob: -6.409982204437256
    8. 'x' → logprob: -6.784982204437256
    9. ' _' → logprob: -7.034982204437256
    10. '_e' → logprob: -7.409982204437256

Token 203: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.32168230414390564
    2. '   ' → logprob: -1.571682333946228
    3. ' x' → logprob: -3.0716822147369385
    4. '    
' → logprob: -4.446682453155518
    5. '
' → logprob: -4.946682453155518
    6. ' 
' → logprob: -6.946682453155518
    7. '   
' → logprob: -7.821682453155518
    8. '	x' → logprob: -8.19668197631836
    9. '  
' → logprob: -8.44668197631836
    10. ' =' → logprob: -9.44668197631836

Token 204: '_' (ID: 62)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.012838292866945267
    2. '_' → logprob: -4.387838363647461
    3. '_init' → logprob: -9.012838363647461
    4. ' _' → logprob: -9.637838363647461
    5. ' =' → logprob: -10.512838363647461
    6. 'initial' → logprob: -11.137838363647461
    7. '_in' → logprob: -11.137838363647461
    8. '_current' → logprob: -11.387838363647461
    9. '0' → logprob: -11.512838363647461
    10. '_INITIAL' → logprob: -11.512838363647461

Token 205: '0' (ID: 15)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.05729240924119949
    2. '_initial' → logprob: -2.9322924613952637
    3. '0' → logprob: -6.182292461395264
    4. ' initial' → logprob: -8.432291984558105
    5. '_' → logprob: -10.807291984558105
    6. ' ' → logprob: -11.182291984558105
    7. 'int' → logprob: -11.182291984558105
    8. '   ' → logprob: -11.432291984558105
    9. 'Initial' → logprob: -11.682291984558105
    10. '	initial' → logprob: -11.682291984558105

Token 206: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27798697352409363
    2. '   ' → logprob: -1.902987003326416
    3. 'x' → logprob: -2.527987003326416
    4. '    
' → logprob: -4.527987003326416
    5. ' x' → logprob: -6.277987003326416
    6. '	x' → logprob: -7.902987003326416
    7. '   
' → logprob: -8.027986526489258
    8. '  
' → logprob: -9.152986526489258
    9. ' 
' → logprob: -9.402986526489258
    10. '	
' → logprob: -10.152986526489258

Token 207: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2059502899646759
    2. '
' → logprob: -2.5809502601623535
    3. '   ' → logprob: -2.7059502601623535
    4. '    
' → logprob: -3.5809502601623535
    5. ' 
' → logprob: -4.5809502601623535
    6. ' x' → logprob: -6.2059502601623535
    7. '   
' → logprob: -6.9559502601623535
    8. 'n' → logprob: -7.0809502601623535
    9. '\n' → logprob: -7.0809502601623535
    10. '  
' → logprob: -7.9559502601623535

Token 208: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3148890435695648
    2. ' x' → logprob: -1.3148890733718872
    3. '   ' → logprob: -6.439888954162598
    4. '	x' → logprob: -11.064888954162598
    5. ' ' → logprob: -11.939888954162598
    6. '    
' → logprob: -13.314888954162598
    7. ' 
' → logprob: -13.689888954162598
    8. ' ' → logprob: -13.814888954162598
    9. '    ' → logprob: -13.939888954162598
    10. 'n' → logprob: -14.689888954162598

Token 209: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3577503561973572
    2. ' =' → logprob: -1.232750415802002
    3. '=' → logprob: -4.982750415802002
    4. ' ' → logprob: -6.357750415802002
    5. ' _' → logprob: -7.982750415802002
    6. '_space' → logprob: -9.357749938964844
    7. '_initial' → logprob: -9.357749938964844
    8. 'space' → logprob: -10.232749938964844
    9. '[' → logprob: -10.482749938964844
    10. '_=' → logprob: -10.857749938964844

Token 210: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868725001811981
    2. 'x' → logprob: -1.1368725299835205
    3. '	x' → logprob: -14.136872291564941
    4. ' ' → logprob: -14.886872291564941
    5. ' ' → logprob: -15.386872291564941
    6. '   ' → logprob: -16.761873245239258
    7. '_x' → logprob: -16.886873245239258
    8. '(x' → logprob: -17.136873245239258
    9. '$x' → logprob: -19.011873245239258
    10. '```' → logprob: -19.074373245239258

Token 211: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.02262577787041664
    2. '_' → logprob: -4.022625923156738
    3. '_
' → logprob: -5.647625923156738
    4. ' _' → logprob: -7.897625923156738
    5. '
' → logprob: -8.397625923156738
    6. '_

' → logprob: -9.272625923156738
    7. '_
' → logprob: -10.147625923156738
    8. ' _
' → logprob: -10.397625923156738
    9. '_INITIAL' → logprob: -10.397625923156738
    10. '_in' → logprob: -10.397625923156738

Token 212: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00036144492332823575
    2. '    
' → logprob: -9.000361442565918
    3. '
' → logprob: -9.500361442565918
    4. '   ' → logprob: -9.625361442565918
    5. 'for' → logprob: -10.250361442565918
    6. ' for' → logprob: -10.375361442565918
    7. ' 
' → logprob: -11.250361442565918
    8. '  
' → logprob: -11.500361442565918
    9. '   
' → logprob: -13.375361442565918
    10. '

' → logprob: -13.625361442565918

Token 213: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010255470406264067
    2. '   ' → logprob: -7.751025676727295
    3. '    
' → logprob: -8.001025199890137
    4. 'for' → logprob: -9.751025199890137
    5. ' for' → logprob: -10.001025199890137
    6. ' 
' → logprob: -10.001025199890137
    7. '
' → logprob: -10.001025199890137
    8. '  
' → logprob: -10.376025199890137
    9. '\n' → logprob: -10.626025199890137
    10. '

' → logprob: -12.501025199890137

Token 214: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009425500174984336
    2. ' for' → logprob: -7.000942707061768
    3. 'result' → logprob: -11.12594223022461
    4. '   ' → logprob: -11.75094223022461
    5. 'results' → logprob: -12.00094223022461
    6. 'print' → logprob: -14.00094223022461
    7. 'n' → logprob: -14.87594223022461
    8. 'values' → logprob: -15.62594223022461
    9. '```' → logprob: -15.62594223022461
    10. 'i' → logprob: -15.75094223022461

Token 215: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889694720506668
    2. ' for' → logprob: -2.578896999359131
    3. 'print' → logprob: -12.828896522521973
    4. 'range' → logprob: -13.703896522521973
    5. '   ' → logprob: -13.828896522521973
    6. 'n' → logprob: -14.453896522521973
    7. 'r' → logprob: -14.578896522521973
    8. 'result' → logprob: -15.078896522521973
    9. 'f' → logprob: -15.078896522521973
    10. 'x' → logprob: -15.953896522521973

Token 216: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3253665566444397
    2. '    ' → logprob: -1.700366497039795
    3. ' ' → logprob: -2.575366497039795
    4. ' for' → logprob: -4.825366497039795
    5. '_' → logprob: -5.325366497039795
    6. 'for' → logprob: -6.075366497039795
    7. ' et' → logprob: -6.450366497039795
    8. '  ' → logprob: -7.200366497039795
    9. ' and' → logprob: -8.200366973876953
    10. ',' → logprob: -8.950366973876953

Token 217: ' affich' (ID: 90179)
  Prédit: ' affich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -0.11340901255607605
    2. ' afficher' → logprob: -3.1134090423583984
    3. ' print' → logprob: -3.8634090423583984
    4. ' for' → logprob: -3.8634090423583984
    5. ' display' → logprob: -4.738409042358398
    6. 'for' → logprob: -5.613409042358398
    7. ' affiche' → logprob: -5.988409042358398
    8. 'aff' → logprob: -6.113409042358398
    9. '_aff' → logprob: -6.488409042358398
    10. 'print' → logprob: -6.988409042358398

Token 218: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.011326847597956657
    2. '   ' → logprob: -4.886326789855957
    3. 'er' → logprob: -6.011326789855957
    4. 'e' → logprob: -6.886326789855957
    5. 'ation' → logprob: -8.636326789855957
    6. '#' → logprob: -11.386326789855957
    7. '    ' → logprob: -12.136326789855957
    8. '  ' → logprob: -12.261326789855957
    9. 'hage' → logprob: -12.261326789855957
    10. 'a' → logprob: -12.386326789855957

Token 219: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30426207184791565
    2. ' des' → logprob: -1.5542620420455933
    3. '    ' → logprob: -3.429262161254883
    4. ' ' → logprob: -4.679262161254883
    5. ' for' → logprob: -5.929262161254883
    6. ' de' → logprob: -6.179262161254883
    7. '    
' → logprob: -6.554262161254883
    8. '  ' → logprob: -6.679262161254883
    9. '_' → logprob: -7.679262161254883
    10. ' of' → logprob: -8.554262161254883

Token 220: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02480383589863777
    2. '10' → logprob: -4.024803638458252
    3. ' valeurs' → logprob: -5.524803638458252
    4. ' dix' → logprob: -6.774803638458252
    5. ' x' → logprob: -7.649803638458252
    6. '_' → logprob: -7.774803638458252
    7. '1' → logprob: -8.89980411529541
    8. ' résultats' → logprob: -9.89980411529541
    9. ' _' → logprob: -9.89980411529541
    10. ' values' → logprob: -10.14980411529541

Token 221: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6026402711868286
    2. '10' → logprob: -1.1026402711868286
    3. '1' → logprob: -2.352640151977539
    4. 'd' → logprob: -3.977640151977539
    5. '_' → logprob: -6.352640151977539
    6. 'x' → logprob: -6.602640151977539
    7. 'range' → logprob: -6.852640151977539
    8. 'val' → logprob: -7.227640151977539
    9. ' x' → logprob: -7.352640151977539
    10. ' range' → logprob: -8.227640151977539

Token 222: ' premières' (ID: 73562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17900481820106506
    2. '_' → logprob: -2.0540049076080322
    3. ' premières' → logprob: -3.9290049076080322
    4. ' valeurs' → logprob: -5.054004669189453
    5. ' espaces' → logprob: -6.179004669189453
    6. ' val' → logprob: -6.679004669189453
    7. ' ' → logprob: -6.804004669189453
    8. ' premiers' → logprob: -6.929004669189453
    9. ' _' → logprob: -7.304004669189453
    10. ' i' → logprob: -7.679004669189453

Token 223: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3823990523815155
    2. ' ' → logprob: -1.382399082183838
    3. ' val' → logprob: -2.882399082183838
    4. 'val' → logprob: -5.132399082183838
    5. ' valeur' → logprob: -6.757399082183838
    6. ' values' → logprob: -6.882399082183838
    7. ' ' → logprob: -7.757399082183838
    8. '_' → logprob: -7.757399082183838
    9. ' iterations' → logprob: -7.882399082183838
    10. ' vale' → logprob: -8.00739860534668

Token 224: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006113059353083372
    2. '    
' → logprob: -6.006113052368164
    3. ' for' → logprob: -6.881113052368164
    4. '    ' → logprob: -7.131113052368164
    5. '
' → logprob: -7.631113052368164
    6. '  ' → logprob: -8.256113052368164
    7. '\n' → logprob: -8.506113052368164
    8. ' ' → logprob: -8.756113052368164
    9. ' de' → logprob: -9.006113052368164
    10. ' 
' → logprob: -9.381113052368164

Token 225: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2526698112487793
    2. 'la' → logprob: -1.5026698112487793
    3. ' the' → logprob: -8.502670288085938
    4. 'a' → logprob: -8.752670288085938
    5. 'l' → logprob: -9.377670288085938
    6. 'x' → logprob: -9.627670288085938
    7. ' a' → logprob: -9.752670288085938
    8. ' x' → logprob: -10.252670288085938
    9. '   ' → logprob: -10.502670288085938
    10. 'the' → logprob: -10.502670288085938

Token 226: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.31356319785118103
    2. ' suite' → logprob: -1.3135632276535034
    3. '_suite' → logprob: -9.188563346862793
    4. ' sequence' → logprob: -9.938563346862793
    5. 's' → logprob: -10.063563346862793
    6. 'sequence' → logprob: -10.563563346862793
    7. 'su' → logprob: -10.813563346862793
    8. ' ' → logprob: -11.063563346862793
    9. '   ' → logprob: -11.188563346862793
    10. 'succ' → logprob: -12.813563346862793

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6037082672119141
    2. '
' → logprob: -0.8537082672119141
    3. ' for' → logprob: -3.978708267211914
    4. '    
' → logprob: -5.103708267211914
    5. 'for' → logprob: -6.978708267211914
    6. ' 
' → logprob: -7.103708267211914
    7. '\n' → logprob: -7.978708267211914
    8. '  
' → logprob: -8.103708267211914
    9. 'n' → logprob: -9.853708267211914
    10. '   
' → logprob: -10.103708267211914

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041380248963832855
    2. ' for' → logprob: -3.5413801670074463
    3. '
' → logprob: -4.666380405426025
    4. 'for' → logprob: -6.541380405426025
    5. '    
' → logprob: -7.416380405426025
    6. '	for' → logprob: -10.291379928588867
    7. ' 
' → logprob: -10.416379928588867
    8. ' ' → logprob: -11.541379928588867
    9. '  
' → logprob: -11.541379928588867
    10. 'n' → logprob: -11.791379928588867

Token 229: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3136971890926361
    2. 'for' (adapté à ' for') → logprob: -1.3136972188949585
    3. '   ' → logprob: -7.813697338104248
    4. '
' → logprob: -11.18869686126709
    5. 'n' → logprob: -11.93869686126709
    6. '    
' → logprob: -12.68869686126709
    7. ' 
' → logprob: -12.81369686126709
    8. '	for' → logprob: -13.18869686126709
    9. '```' → logprob: -13.68869686126709
    10. '\n' → logprob: -14.68869686126709

Token 230: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10787063837051392
    2. ' i' → logprob: -2.482870578765869
    3. ' _' → logprob: -4.107870578765869
    4. ' n' → logprob: -6.732870578765869
    5. '_' → logprob: -7.232870578765869
    6. ' ‌' → logprob: -8.732871055603027
    7. '  ' → logprob: -9.232871055603027
    8. ' range' → logprob: -9.357871055603027
    9. ' ' → logprob: -11.232871055603027
    10. ' space' → logprob: -11.482871055603027

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011796315666288137
    2. 'in' → logprob: -6.8761796951293945
    3. ' ' → logprob: -8.876179695129395
    4. ' i' → logprob: -12.626179695129395
    5. 'n' → logprob: -13.501179695129395
    6. '	in' → logprob: -14.751179695129395
    7. '_' → logprob: -14.876179695129395
    8. '  ' → logprob: -15.001179695129395
    9. 's' → logprob: -15.126179695129395
    10. '1' → logprob: -15.501179695129395

Token 232: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002479700604453683
    2. 'range' → logprob: -6.002479553222656
    3. ' ' → logprob: -12.627479553222656
    4. '	range' → logprob: -14.627479553222656
    5. '(range' → logprob: -15.877479553222656
    6. '   ' → logprob: -17.627479553222656
    7. ' xrange' → logprob: -17.627479553222656
    8. '  ' → logprob: -18.627479553222656
    9. '_range' → logprob: -18.752479553222656
    10. ' rango' → logprob: -19.252479553222656

Token 233: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.125007629394531
    3. '1' → logprob: -13.375007629394531
    4. '(
' → logprob: -14.500007629394531
    5. '<|end|>' → logprob: -19.50000762939453
    6. ' ' → logprob: -19.62500762939453
    7. '10' → logprob: -19.75000762939453
    8. '   ' → logprob: -20.25000762939453
    9. '(

' → logprob: -20.62500762939453
    10. ')' → logprob: -20.87500762939453

Token 234: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001818216871470213
    2. '10' → logprob: -6.3768181800842285
    3. ' ' → logprob: -9.126818656921387
    4. '   ' → logprob: -11.876818656921387
    5. '(' → logprob: -15.251818656921387
    6. '    ' → logprob: -16.75181770324707
    7. ')' → logprob: -16.87681770324707
    8. '  ' → logprob: -18.00181770324707
    9. '0' → logprob: -18.00181770324707
    10. '```' → logprob: -18.25181770324707

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003632731270045042
    2. ' ):' → logprob: -6.253632545471191
    3. '):
' → logprob: -6.753632545471191
    4. ')' → logprob: -7.628632545471191
    5. '   ' → logprob: -11.003632545471191
    6. ':' → logprob: -11.128632545471191
    7. '+' → logprob: -11.878632545471191
    8. '1' → logprob: -12.503632545471191
    9. ' )' → logprob: -13.003632545471191
    10. ' ):
' → logprob: -13.253632545471191

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03607220947742462
    2. 'x' → logprob: -4.161072254180908
    3. '   ' → logprob: -4.661072254180908
    4. '
' → logprob: -4.661072254180908
    5. '    
' → logprob: -8.03607177734375
    6. ' x' → logprob: -8.66107177734375
    7. 'n' → logprob: -9.66107177734375
    8. '        
' → logprob: -9.66107177734375
    9. ':' → logprob: -10.03607177734375
    10. '  
' → logprob: -10.53607177734375

Token 237: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3461056351661682
    2. ' x' → logprob: -1.3461055755615234
    3. '       ' → logprob: -4.096105575561523
    4. '   ' → logprob: -4.346105575561523
    5. ' 
' → logprob: -6.971105575561523
    6. '
' → logprob: -7.471105575561523
    7. '    ' → logprob: -7.971105575561523
    8. '\' → logprob: -8.221105575561523
    9. '    
' → logprob: -8.596105575561523
    10. '        
' → logprob: -8.721105575561523

Token 238: ' Application' (ID: 12493)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11440840363502502
    2. ' x' → logprob: -2.239408493041992
    3. '   ' → logprob: -6.489408493041992
    4. '       ' → logprob: -10.739408493041992
    5. '    ' → logprob: -11.114408493041992
    6. ' ' → logprob: -11.364408493041992
    7. '	x' → logprob: -11.989408493041992
    8. '  ' → logprob: -13.301908493041992
    9. ' next' → logprob: -13.989408493041992
    10. '#' → logprob: -14.364408493041992

Token 239: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7988449335098267
    2. ' x' → logprob: -0.9238449335098267
    3. 'x' → logprob: -2.923844814300537
    4. '   ' → logprob: -3.423844814300537
    5. '    ' → logprob: -3.798844814300537
    6. ' =' → logprob: -4.548844814300537
    7. '       ' → logprob: -4.673844814300537
    8. ' ' → logprob: -4.923844814300537
    9. '=' → logprob: -5.173844814300537
    10. ' of' → logprob: -6.423844814300537

Token 240: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4926629066467285
    2. ' r' → logprob: -0.9926629066467285
    3. 'x' → logprob: -4.9926629066467285
    4. ' x' → logprob: -5.2426629066467285
    5. ' la' → logprob: -5.4926629066467285
    6. ' l' → logprob: -7.1176629066467285
    7. '   ' → logprob: -7.4926629066467285
    8. 'l' → logprob: -7.8676629066467285
    9. ' ' → logprob: -8.49266242980957
    10. ' the' → logprob: -9.61766242980957

Token 241: ' relation' (ID: 18075)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5347576141357422
    2. ' recurrence' → logprob: -1.1597576141357422
    3. ' r' → logprob: -2.909757614135742
    4. ' formula' → logprob: -4.284757614135742
    5. 'rec' → logprob: -4.784757614135742
    6. ' formule' → logprob: -4.784757614135742
    7. ' recurrent' → logprob: -4.909757614135742
    8. ' ré' → logprob: -6.534757614135742
    9. ' rec' → logprob: -6.784757614135742
    10. '   ' → logprob: -6.784757614135742

Token 242: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9983676671981812
    2. ' de' → logprob: -1.3733676671981812
    3. ' x' → logprob: -1.4983676671981812
    4. 'x' → logprob: -2.8733677864074707
    5. '=' → logprob: -3.8733677864074707
    6. '   ' → logprob: -4.373367786407471
    7. '_' → logprob: -4.498367786407471
    8. ' ' → logprob: -4.623367786407471
    9. 'd' → logprob: -4.748367786407471
    10. 'n' → logprob: -4.748367786407471

Token 243: ' ré' (ID: 3146)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0642976388335228
    2. ' ré' → logprob: -3.689297676086426
    3. 'rec' → logprob: -4.064297676086426
    4. 'ré' → logprob: -4.689297676086426
    5. ' r' → logprob: -5.189297676086426
    6. ' recurrence' → logprob: -5.689297676086426
    7. ' réc' → logprob: -7.064297676086426
    8. 're' → logprob: -8.064297676086426
    9. '   ' → logprob: -8.314297676086426
    10. '	r' → logprob: -9.189297676086426

Token 244: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.004675049334764481
    2. 'c' → logprob: -5.629674911499023
    3. 'cc' → logprob: -7.504674911499023
    4. 'cur' → logprob: -8.004674911499023
    5. 'cup' → logprob: -9.754674911499023
    6. 'urrence' → logprob: -9.879674911499023
    7. 'current' → logprob: -10.379674911499023
    8. '
' → logprob: -11.629674911499023
    9. 'cu' → logprob: -12.879674911499023
    10. '

' → logprob: -13.254674911499023

Token 245: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0005804349202662706
    2. 'rence' → logprob: -7.500580310821533
    3. 'e' → logprob: -11.500580787658691
    4. 'en' → logprob: -12.875580787658691
    5. 'érence' → logprob: -13.000580787658691
    6. '#' → logprob: -13.250580787658691
    7. 'ences' → logprob: -14.000580787658691
    8. 'ece' → logprob: -14.250580787658691
    9. 'gence' → logprob: -14.250580787658691
    10. 'urrence' → logprob: -14.250580787658691

Token 246: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6127643585205078
    2. 'x' → logprob: -1.2377643585205078
    3. '
' → logprob: -2.612764358520508
    4. ' x' → logprob: -3.362764358520508
    5. '   ' → logprob: -3.987764358520508
    6. '        
' → logprob: -4.237764358520508
    7. ' 
' → logprob: -4.487764358520508
    8. '=' → logprob: -5.737764358520508
    9. '    
' → logprob: -5.862764358520508
    10. ' =' → logprob: -5.987764358520508

Token 247: ' obtenir' (ID: 54423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19064189493656158
    2. ' x' → logprob: -2.0656418800354004
    3. '   ' → logprob: -4.1906418800354
    4. 'calcul' → logprob: -4.4406418800354
    5. ' i' → logprob: -5.3156418800354
    6. 'n' → logprob: -5.3156418800354
    7. 'i' → logprob: -5.8156418800354
    8. ' calcul' → logprob: -6.1906418800354
    9. ' ' → logprob: -6.9406418800354
    10. '_' → logprob: -6.9406418800354

Token 248: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4125106632709503
    2. 'x' → logprob: -1.912510633468628
    3. ' la' → logprob: -2.162510633468628
    4. ' ' → logprob: -2.662510633468628
    5. ' le' → logprob: -6.412510871887207
    6. '_' → logprob: -7.412510871887207
    7. ' une' → logprob: -7.912510871887207
    8. ' l' → logprob: -8.037510871887207
    9. '   ' → logprob: -8.287510871887207
    10. ' un' → logprob: -8.537510871887207

Token 249: ' nouvelle' (ID: 24562)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2983266115188599
    2. 'n' → logprob: -1.9233266115188599
    3. ' next' → logprob: -2.1733264923095703
    4. ' ' → logprob: -2.4233264923095703
    5. ' prochaine' → logprob: -2.4233264923095703
    6. ' prochain' → logprob: -2.9233264923095703
    7. 'next' → logprob: -2.9233264923095703
    8. ' x' → logprob: -3.1733264923095703
    9. 'nou' → logprob: -3.2983264923095703
    10. 'pro' → logprob: -3.4233264923095703

Token 250: ' valeur' (ID: 41664)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8718354105949402
    2. ' ' → logprob: -1.371835470199585
    3. 'x' → logprob: -1.871835470199585
    4. '_' → logprob: -2.371835470199585
    5. ' valeur' → logprob: -2.746835470199585
    6. '   ' → logprob: -5.121835231781006
    7. ' value' → logprob: -6.121835231781006
    8. ' val' → logprob: -6.121835231781006
    9. '_x' → logprob: -6.621835231781006
    10. 'val' → logprob: -6.996835231781006

Token 251: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.647313117980957
    2. 'x' → logprob: -1.147313117980957
    3. ' x' → logprob: -3.272313117980957
    4. '=' → logprob: -3.522313117980957
    5. '        
' → logprob: -4.022313117980957
    6. ' 
' → logprob: -4.147313117980957
    7. ' ' → logprob: -4.397313117980957
    8. '   ' → logprob: -4.522313117980957
    9. ',' → logprob: -5.022313117980957
    10. ':' → logprob: -5.147313117980957

Token 252: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12694281339645386
    2. ' x' → logprob: -2.1269428730010986
    3. ' ' → logprob: -11.62694263458252
    4. '	x' → logprob: -12.75194263458252
    5. '   ' → logprob: -14.12694263458252
    6. '`' → logprob: -14.62694263458252
    7. ''x' → logprob: -15.25194263458252
    8. ' ' → logprob: -15.50194263458252
    9. '_x' → logprob: -15.50194263458252
    10. '"x' → logprob: -15.56444263458252

Token 253: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6372523903846741
    2. '=' → logprob: -0.7622523903846741
    3. '       ' → logprob: -6.012252330780029
    4. 'x' → logprob: -7.512252330780029
    5. ' =
' → logprob: -7.512252330780029
    6. '=
' → logprob: -8.012252807617188
    7. ' x' → logprob: -8.512252807617188
    8. ',' → logprob: -8.762252807617188
    9. '   ' → logprob: -9.387252807617188
    10. '
' → logprob: -9.637252807617188

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06227866932749748
    2. 'x' → logprob: -3.6872787475585938
    3. '   ' → logprob: -4.312278747558594
    4. '=' → logprob: -4.687278747558594
    5. ' =' → logprob: -5.687278747558594
    6. '        
' → logprob: -6.062278747558594
    7. ' x' → logprob: -6.187278747558594
    8. '    ' → logprob: -7.062278747558594
    9. ' ' → logprob: -7.062278747558594
    10. ' 
' → logprob: -7.312278747558594

Token 255: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3881065249443054
    2. ' x' → logprob: -1.1381065845489502
    3. '       ' → logprob: -6.763106346130371
    4. '   ' → logprob: -9.638106346130371
    5. ' 
' → logprob: -12.638106346130371
    6. '	x' → logprob: -12.638106346130371
    7. ' ' → logprob: -13.013106346130371
    8. '        
' → logprob: -13.388106346130371
    9. '    ' → logprob: -13.763106346130371
    10. '
' → logprob: -14.638106346130371

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759414434432983
    2. ' =' → logprob: -0.8259414434432983
    3. ' *=' → logprob: -13.82594108581543
    4. '*=' → logprob: -14.70094108581543
    5. '=

' → logprob: -15.57594108581543
    6. ' ' → logprob: -16.32594108581543
    7. '＝' → logprob: -16.32594108581543
    8. ',' → logprob: -17.07594108581543
    9. '*' → logprob: -17.20094108581543
    10. '=}' → logprob: -17.32594108581543

Token 257: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.043001823127269745
    2. 'r' → logprob: -3.168001890182495
    3. ' ' → logprob: -13.168002128601074
    4. ' ' → logprob: -14.793002128601074
    5. '	r' → logprob: -15.293002128601074
    6. ' (' → logprob: -17.293001174926758
    7. '(r' → logprob: -17.543001174926758
    8. 'x' → logprob: -17.793001174926758
    9. ' x' → logprob: -18.043001174926758
    10. ' р' → logprob: -18.043001174926758

Token 258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0007104054093360901
    2. '*' → logprob: -7.250710487365723
    3. '*x' → logprob: -15.375710487365723
    4. ' ' → logprob: -16.000709533691406
    5. ' ' → logprob: -16.875709533691406
    6. ' x' → logprob: -18.125709533691406
    7. ' **' → logprob: -20.000709533691406
    8. '	' → logprob: -20.125709533691406
    9. 'x' → logprob: -20.750709533691406
    10. ' *
' → logprob: -21.500709533691406

Token 259: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023245712742209435
    2. ' x' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.148245811462402
    4. '	x' → logprob: -18.523244857788086
    5. '(x' → logprob: -19.398244857788086
    6. '<|end|>' → logprob: -19.648244857788086
    7. ')x' → logprob: -20.523244857788086
    8. '*x' → logprob: -20.898244857788086
    9. '"x' → logprob: -21.148244857788086
    10. '`' → logprob: -21.398244857788086

Token 260: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0005127601907588542
    2. '-' → logprob: -7.625512599945068
    3. ' ' → logprob: -10.750513076782227
    4. ' ' → logprob: -12.875513076782227
    5. ' −' → logprob: -15.375513076782227
    6. ')' → logprob: -15.750513076782227
    7. ' –' → logprob: -16.625513076782227
    8. ' x' → logprob: -17.000513076782227
    9. '<|end|>' → logprob: -17.000513076782227
    10. ' -
' → logprob: -17.500513076782227

Token 261: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.03809530660510063
    2. 'D' → logprob: -3.288095235824585
    3. ' ' → logprob: -9.913095474243164
    4. ' ' → logprob: -12.663095474243164
    5. '	D' → logprob: -15.038095474243164
    6. '<|end|>' → logprob: -15.413095474243164
    7. ')' → logprob: -16.288095474243164
    8. 'd' → logprob: -16.413095474243164
    9. '_' → logprob: -16.663095474243164
    10. 's' → logprob: -16.663095474243164

Token 262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034028079360723495
    2. '
' → logprob: -3.4090280532836914
    3. 'print' → logprob: -8.784028053283691
    4. '        
' → logprob: -8.909028053283691
    5. '   ' → logprob: -10.284028053283691
    6. '  
' → logprob: -10.909028053283691
    7. '    
' → logprob: -11.284028053283691
    8. ' print' → logprob: -11.784028053283691
    9. '
' → logprob: -11.909028053283691
    10. '\n' → logprob: -12.284028053283691

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.551721889991313e-05
    2. '
' → logprob: -10.375065803527832
    3. 'print' → logprob: -11.375065803527832
    4. '   ' → logprob: -11.500065803527832
    5. '        
' → logprob: -11.500065803527832
    6. ' print' → logprob: -13.750065803527832
    7. '```' → logprob: -14.500065803527832
    8. '    
' → logprob: -15.125065803527832
    9. '<|end|>' → logprob: -15.125065803527832
    10. '\' → logprob: -16.750064849853516

Token 264: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10362526774406433
    2. 'print' → logprob: -2.3536252975463867
    3. ' print' → logprob: -5.728625297546387
    4. '   ' → logprob: -8.978625297546387
    5. '
' → logprob: -10.603625297546387
    6. '        
' → logprob: -12.228625297546387
    7. '```' → logprob: -13.478625297546387
    8. '    
' → logprob: -13.478625297546387
    9. '	print' → logprob: -14.478625297546387
    10. '      ' → logprob: -14.853625297546387

Token 265: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4746053218841553
    2. 'print' → logprob: -0.9746053218841553
    3. '   ' → logprob: -8.349605560302734
    4. '       ' → logprob: -8.849605560302734
    5. 'pr' → logprob: -9.349605560302734
    6. '    ' → logprob: -10.349605560302734
    7. ' prin' → logprob: -11.849605560302734
    8. 'p' → logprob: -12.224605560302734
    9. ' p' → logprob: -12.849605560302734
    10. 'prin' → logprob: -12.974605560302734

Token 266: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.19772934913635254
    2. 'iche' → logprob: -1.9477293491363525
    3. '   ' → logprob: -4.572729110717773
    4. 'ich' → logprob: -4.572729110717773
    5. 'ic' → logprob: -5.072729110717773
    6. 'ichage' → logprob: -5.197729110717773
    7. '#' → logprob: -6.572729110717773
    8. '       ' → logprob: -7.197729110717773
    9. 'f' → logprob: -8.072729110717773
    10. 'cher' → logprob: -8.197729110717773

Token 267: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005084560718387365
    2. '(x' → logprob: -5.75508451461792
    3. '(f' → logprob: -6.50508451461792
    4. '("' → logprob: -8.630084991455078
    5. '       ' → logprob: -9.380084991455078
    6. '('' → logprob: -9.755084991455078
    7. '   ' → logprob: -10.505084991455078
    8. '(
' → logprob: -10.630084991455078
    9. ' (' → logprob: -10.880084991455078
    10. '()' → logprob: -12.630084991455078

Token 268: ' la' (ID: 557)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5143861174583435
    2. ' x' → logprob: -1.1393861770629883
    3. 'x' → logprob: -3.1393861770629883
    4. 'f' → logprob: -3.7643861770629883
    5. ' la' → logprob: -4.389386177062988
    6. '(f' → logprob: -7.389386177062988
    7. '"' → logprob: -7.389386177062988
    8. '(x' → logprob: -7.514386177062988
    9. '   ' → logprob: -7.639386177062988
    10. ' ' → logprob: -8.389386177062988

Token 269: ' valeur' (ID: 41664)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.8546603322029114
    2. 'x' → logprob: -1.6046602725982666
    3. 'f' → logprob: -1.7296602725982666
    4. ' x' → logprob: -1.8546602725982666
    5. 'val' → logprob: -4.354660511016846
    6. '   ' → logprob: -4.604660511016846
    7. 'print' → logprob: -4.854660511016846
    8. '(f' → logprob: -6.104660511016846
    9. ' print' → logprob: -6.104660511016846
    10. '(x' → logprob: -7.104660511016846

Token 270: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8951123952865601
    2. ' x' → logprob: -1.27011239528656
    3. 'x' → logprob: -1.64511239528656
    4. '   ' → logprob: -3.7701125144958496
    5. '(x' → logprob: -3.7701125144958496
    6. ' (' → logprob: -4.14511251449585
    7. ' de' → logprob: -4.39511251449585
    8. ' f' → logprob: -4.52011251449585
    9. '(' → logprob: -4.64511251449585
    10. ' ' → logprob: -5.52011251449585

Token 271: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.007376969791948795
    2. 'r' → logprob: -5.0073771476745605
    3. 'ant' → logprob: -7.5073771476745605
    4. 'a' → logprob: -9.632376670837402
    5. 'ente' → logprob: -10.757376670837402
    6. 'an' → logprob: -11.507376670837402
    7. 'rent' → logprob: -12.007376670837402
    8. '   ' → logprob: -12.382376670837402
    9. ' ante' → logprob: -13.257376670837402
    10. 'rant' → logprob: -14.257376670837402

Token 272: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4194560647010803
    2. '       ' → logprob: -2.0444560050964355
    3. '(x' → logprob: -2.1694560050964355
    4. 'print' → logprob: -3.1694560050964355
    5. ' (' → logprob: -3.6694560050964355
    6. ',' → logprob: -3.9194560050964355
    7. ' print' → logprob: -5.0444560050964355
    8. '   ' → logprob: -6.4194560050964355
    9. '(
' → logprob: -6.7944560050964355
    10. '(print' → logprob: -7.2944560050964355

Token 273: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5761269330978394
    2. ' x' → logprob: -0.8261269330978394
    3. ' la' → logprob: -9.201127052307129
    4. ' ' → logprob: -10.201127052307129
    5. '(x' → logprob: -11.076127052307129
    6. '   ' → logprob: -11.326127052307129
    7. 'l' → logprob: -11.576127052307129
    8. '	x' → logprob: -12.451127052307129
    9. ' l' → logprob: -12.701127052307129
    10. 'la' → logprob: -13.326127052307129

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00206092675216496
    2. 'print' → logprob: -7.502060890197754
    3. '
' → logprob: -7.752060890197754
    4. '(' → logprob: -8.127060890197754
    5. ' print' → logprob: -8.127060890197754
    6. ',' → logprob: -8.502060890197754
    7. '        
' → logprob: -8.752060890197754
    8. '\' → logprob: -10.752060890197754
    9. '    
' → logprob: -11.252060890197754
    10. '   ' → logprob: -11.252060890197754

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014889120357111096
    2. 'print' → logprob: -7.00148868560791
    3. ' print' → logprob: -7.50148868560791
    4. '   ' → logprob: -11.75148868560791
    5. '      ' → logprob: -11.87648868560791
    6. '        
' → logprob: -12.37648868560791
    7. '     ' → logprob: -13.12648868560791
    8. '    ' → logprob: -14.25148868560791
    9. '        ' → logprob: -14.25148868560791
    10. '           ' → logprob: -15.00148868560791

Token 276: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02331303060054779
    2. ' print' → logprob: -3.773313045501709
    3. '       ' → logprob: -9.64831256866455
    4. '```' → logprob: -13.27331256866455
    5. '   ' → logprob: -14.27331256866455
    6. 'pr' → logprob: -14.89831256866455
    7. '	print' → logprob: -17.273313522338867
    8. '``' → logprob: -17.648313522338867
    9. 'prin' → logprob: -17.898313522338867
    10. 'pri' → logprob: -17.898313522338867

Token 277: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04105811566114426
    2. '(x' → logprob: -3.54105806350708
    3. '(f' → logprob: -4.54105806350708
    4. '("("' → logprob: -7.91605806350708
    5. '('' → logprob: -9.166058540344238
    6. '("' → logprob: -9.166058540344238
    7. '((' → logprob: -13.416058540344238
    8. '(
' → logprob: -13.416058540344238
    9. '()' → logprob: -14.166058540344238
    10. '(i' → logprob: -14.291058540344238

Token 278: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ' )' → logprob: -12.125007629394531
    3. '   ' → logprob: -14.250007629394531
    4. ')
' → logprob: -15.375007629394531
    5. ',' → logprob: -15.375007629394531
    6. ')`' → logprob: -15.875007629394531
    7. '))' → logprob: -16.00000762939453
    8. ' ' → logprob: -16.75000762939453
    9. '')' → logprob: -16.75000762939453
    10. '       ' → logprob: -16.75000762939453

Token 279: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10830258578062057
    2. ' fibonacci' → logprob: -3.608302593231201
    3. ' factorial' → logprob: -3.733302593231201
    4. ' recurrence' → logprob: -3.983302593231201
    5. ' calculate' → logprob: -4.733302593231201
    6. ' test' → logprob: -5.233302593231201
    7. '_' → logprob: -5.608302593231201
    8. ' factor' → logprob: -5.858302593231201
    9. ' compute' → logprob: -6.233302593231201
    10. ' calcul' → logprob: -6.608302593231201

Token 281: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003541734768077731
    2. '_' → logprob: -8.375353813171387
    3. '(' → logprob: -10.125353813171387
    4. '()' → logprob: -10.375353813171387
    5. ' ():' → logprob: -10.625353813171387
    6. '_:' → logprob: -10.750353813171387
    7. ':' → logprob: -12.750353813171387
    8. '():
' → logprob: -13.750353813171387
    9. '()>' → logprob: -14.375353813171387
    10. '(:' → logprob: -14.875353813171387

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016414029523730278
    2. ':' → logprob: -5.516414165496826
    3. '(' → logprob: -5.891414165496826
    4. '(r' → logprob: -5.891414165496826
    5. ' r' → logprob: -6.016414165496826
    6. 'r' → logprob: -6.516414165496826
    7. ')' → logprob: -6.641414165496826
    8. '<|end|>' → logprob: -8.141413688659668
    9. ',' → logprob: -8.516413688659668
    10. '    
' → logprob: -8.766413688659668

Token 283: ' """
' (ID: 7037)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7270157337188721
    2. 'r' → logprob: -0.9770157337188721
    3. '   ' → logprob: -1.977015733718872
    4. '#' → logprob: -6.852015495300293
    5. ' #' → logprob: -7.602015495300293
    6. '	r' → logprob: -9.477015495300293
    7. '    
' → logprob: -11.227015495300293
    8. '  ' → logprob: -11.602015495300293
    9. ' ' → logprob: -11.727015495300293
    10. '    ' → logprob: -11.727015495300293

Token 284: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02195308357477188
    2. '   ' → logprob: -4.271953105926514
    3. ' r' → logprob: -5.521953105926514
    4. '#' → logprob: -5.646953105926514
    5. ' #' → logprob: -9.521952629089355
    6. 'x' → logprob: -10.396952629089355
    7. 'if' → logprob: -10.646952629089355
    8. ' ' → logprob: -11.271952629089355
    9. '    
' → logprob: -11.521952629089355
    10. 'print' → logprob: -11.646952629089355

Token 285: ' Dem' (ID: 9458)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0248621702194214
    2. '   ' → logprob: -1.1498621702194214
    3. '#' → logprob: -1.5248621702194214
    4. ' r' → logprob: -2.774862289428711
    5. ' #' → logprob: -3.399862289428711
    6. 'x' → logprob: -5.774862289428711
    7. ' x' → logprob: -6.524862289428711
    8. 'Initial' → logprob: -7.774862289428711
    9. ' print' → logprob: -7.899862289428711
    10. ' initial' → logprob: -7.899862289428711

Token 286: 'ande' (ID: 4102)
  Prédit: 'arre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arre' → logprob: -0.013953928835690022
    2. 'ande' → logprob: -5.013954162597656
    3. 'ar' → logprob: -5.888954162597656
    4. 'arrer' → logprob: -6.638954162597656
    5. 'arr' → logprob: -7.138954162597656
    6. 'are' → logprob: -7.263954162597656
    7. 'a' → logprob: -7.638954162597656
    8. 'arrage' → logprob: -7.638954162597656
    9. 'arque' → logprob: -8.388954162597656
    10. 'arrera' → logprob: -8.763954162597656

Token 287: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4080888032913208
    2. ' au' → logprob: -1.6580888032913208
    3. ' ' → logprob: -2.0330886840820312
    4. 'r' → logprob: -2.1580886840820312
    5. ' des' → logprob: -2.1580886840820312
    6. ' aux' → logprob: -2.7830886840820312
    7. ' à' → logprob: -3.7830886840820312
    8. ' un' → logprob: -3.9080886840820312
    9. ' r' → logprob: -4.033088684082031
    10. ' l' → logprob: -4.408088684082031

Token 288: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5551767349243164
    2. ' l' → logprob: -0.9301767349243164
    3. 'r' → logprob: -3.5551767349243164
    4. '   ' → logprob: -7.430176734924316
    5. 'user' → logprob: -7.430176734924316
    6. ' r' → logprob: -7.805176734924316
    7. ' ' → logprob: -8.180176734924316
    8. ''utilisateur' → logprob: -8.180176734924316
    9. ' utilisateur' → logprob: -8.180176734924316
    10. ' user' → logprob: -8.555176734924316

Token 289: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.010504857636988163
    2. 'util' → logprob: -4.885504722595215
    3. 'user' → logprob: -6.885504722595215
    4. 'u' → logprob: -7.510504722595215
    5. ''us' → logprob: -7.635504722595215
    6. '’utilisateur' → logprob: -8.635504722595215
    7. ''' → logprob: -8.760504722595215
    8. ' utilisateur' → logprob: -9.010504722595215
    9. 'a' → logprob: -9.010504722595215
    10. 'us' → logprob: -9.260504722595215

Token 290: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.41575297713279724
    2. 'r' → logprob: -2.29075288772583
    3. ' d' → logprob: -2.54075288772583
    4. ' r' → logprob: -3.04075288772583
    5. '   ' → logprob: -3.41575288772583
    6. ' un' → logprob: -3.91575288772583
    7. 'de' → logprob: -4.16575288772583
    8. ' le' → logprob: -4.66575288772583
    9. ' une' → logprob: -4.66575288772583
    10. ' et' → logprob: -5.29075288772583

Token 291: ' saisir' (ID: 152120)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06891481578350067
    2. ' saisir' → logprob: -3.3189148902893066
    3. 's' → logprob: -4.568914890289307
    4. 'int' → logprob: -5.568914890289307
    5. 'entr' → logprob: -5.943914890289307
    6. ' entrer' → logprob: -6.193914890289307
    7. ' r' → logprob: -6.318914890289307
    8. 'input' → logprob: -6.818914890289307
    9. ' rentrer' → logprob: -6.943914890289307
    10. '   ' → logprob: -6.943914890289307

Token 292: ' trois' (ID: 25564)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16389092803001404
    2. 'les' → logprob: -1.9138909578323364
    3. 'r' → logprob: -5.788890838623047
    4. 'le' → logprob: -8.663890838623047
    5. ' ' → logprob: -9.038890838623047
    6. ' r' → logprob: -9.538890838623047
    7. 'l' → logprob: -9.788890838623047
    8. ' des' → logprob: -9.788890838623047
    9. ' le' → logprob: -9.913890838623047
    10. ' the' → logprob: -10.913890838623047

Token 293: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.01799166016280651
    2. ' integers' → logprob: -5.017991542816162
    3. ' valeurs' → logprob: -5.267991542816162
    4. ' nombres' → logprob: -5.517991542816162
    5. 'ent' → logprob: -7.267991542816162
    6. ' paramètres' → logprob: -7.642991542816162
    7. ' entier' → logprob: -7.767991542816162
    8. ' parameters' → logprob: -9.01799201965332
    9. ' int' → logprob: -9.01799201965332
    10. ' val' → logprob: -10.01799201965332

Token 294: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0014961723936721683
    2. 'ières' → logprob: -6.626496315002441
    3. 'ier' → logprob: -9.251496315002441
    4. 'i' → logprob: -10.001496315002441
    5. 'r' → logprob: -10.876496315002441
    6. '   ' → logprob: -12.876496315002441
    7. '```' → logprob: -13.126496315002441
    8. 'ités' → logprob: -14.001496315002441
    9. 't' → logprob: -14.251496315002441
    10. 'ieres' → logprob: -14.751496315002441

Token 295: ' sépar' (ID: 97160)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2843082845211029
    2. ':' → logprob: -1.5343083143234253
    3. 'r' → logprob: -4.784308433532715
    4. ',' → logprob: -4.909308433532715
    5. ' pour' → logprob: -5.159308433532715
    6. ' (' → logprob: -5.284308433532715
    7. ' r' → logprob: -5.909308433532715
    8. ' et' → logprob: -6.659308433532715
    9. ' ' → logprob: -8.159308433532715
    10. '(r' → logprob: -8.284308433532715

Token 296: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0006179584306664765
    2. 'es' → logprob: -7.875617980957031
    3. 'é' → logprob: -8.375617980957031
    4. 'e' → logprob: -13.125617980957031
    5. 'ès' → logprob: -13.250617980957031
    6. 's' → logprob: -14.000617980957031
    7. 'ément' → logprob: -14.250617980957031
    8. 'ÉS' → logprob: -14.625617980957031
    9. '```' → logprob: -14.750617980957031
    10. 'ées' → logprob: -15.000617980957031

Token 297: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.20178158581256866
    2. 'par' → logprob: -1.7017816305160522
    3. '(par' → logprob: -8.576781272888184
    4. 'es' → logprob: -9.701781272888184
    5. 'd' → logprob: -10.201781272888184
    6. 's' → logprob: -10.701781272888184
    7. '_par' → logprob: -11.076781272888184
    8. 'és' → logprob: -11.451781272888184
    9. 'Par' → logprob: -11.451781272888184
    10. 'e' → logprob: -12.826781272888184

Token 298: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.39288130402565
    2. ' des' → logprob: -1.3928812742233276
    3. 'un' → logprob: -2.642881393432617
    4. 'es' → logprob: -6.267881393432617
    5. ' un' → logprob: -6.517881393432617
    6. ''un' → logprob: -7.267881393432617
    7. 'esp' → logprob: -7.642881393432617
    8. 'spaces' → logprob: -8.267881393432617
    9. 'une' → logprob: -9.517881393432617
    10. ''' → logprob: -9.642881393432617

Token 299: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.053545091301202774
    2. 'es' → logprob: -3.0535449981689453
    3. ' espaces' → logprob: -6.303544998168945
    4. ''esp' → logprob: -6.803544998168945
    5. 'spaces' → logprob: -7.303544998168945
    6. 'des' → logprob: -7.303544998168945
    7. 'vir' → logprob: -8.178544998168945
    8. ''espace' → logprob: -8.678544998168945
    9. '```' → logprob: -9.928544998168945
    10. '"' → logprob: -10.053544998168945

Token 300: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014923167414963245
    2. ' et' → logprob: -4.889923095703125
    3. ' ,' → logprob: -6.014923095703125
    4. ' afin' → logprob: -6.514923095703125
    5. ' puis' → logprob: -6.514923095703125
    6. 'et' → logprob: -7.264923095703125
    7. '.' → logprob: -7.639923095703125
    8. '   ' → logprob: -8.014923095703125
    9. ' ' → logprob: -9.014923095703125
    10. ' pour' → logprob: -9.014923095703125

Token 301: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.024166816845536232
    2. ')' → logprob: -3.8991668224334717
    3. '),' → logprob: -7.149166584014893
    4. ' puis' → logprob: -7.149166584014893
    5. ' r' → logprob: -7.399166584014893
    6. '")' → logprob: -8.02416706085205
    7. 'val' → logprob: -8.39916706085205
    8. ' )' → logprob: -8.52416706085205
    9. '   ' → logprob: -9.27416706085205
    10. 'le' → logprob: -9.77416706085205

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015668414533138275
    2. ' ,' → logprob: -4.8906683921813965
    3. ',D' → logprob: -4.8906683921813965
    4. ' D' → logprob: -7.8906683921813965
    5. 'D' → logprob: -9.890668869018555
    6. '<|end|>' → logprob: -10.265668869018555
    7. ')' → logprob: -10.640668869018555
    8. ' ' → logprob: -11.390668869018555
    9. ',d' → logprob: -12.015668869018555
    10. '  ' → logprob: -12.765668869018555

Token 303: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10037240386009216
    2. ' D' → logprob: -2.350372314453125
    3. ' ' → logprob: -8.975372314453125
    4. 'd' → logprob: -11.475372314453125
    5. '  ' → logprob: -11.725372314453125
    6. ',' → logprob: -11.975372314453125
    7. ')' → logprob: -13.100372314453125
    8. 'space' → logprob: -13.225372314453125
    9. '   ' → logprob: -13.475372314453125
    10. '    ' → logprob: -13.975372314453125

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017870404990389943
    2. ' et' → logprob: -6.501787185668945
    3. ' ,' → logprob: -8.751787185668945
    4. 'et' → logprob: -9.251787185668945
    5. ')' → logprob: -10.876787185668945
    6. ',x' → logprob: -11.876787185668945
    7. ' and' → logprob: -14.001787185668945
    8. 'x' → logprob: -14.251787185668945
    9. ' и' → logprob: -14.626787185668945
    10. 'and' → logprob: -14.751787185668945

Token 305: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20381049811840057
    2. 'x' → logprob: -1.703810453414917
    3. ' and' → logprob: -6.578810691833496
    4. 'et' → logprob: -7.453810691833496
    5. ' et' → logprob: -8.078810691833496
    6. 'and' → logprob: -9.828810691833496
    7. ' ' → logprob: -10.078810691833496
    8. ',' → logprob: -11.578810691833496
    9. ')' → logprob: -12.953810691833496
    10. ',x' → logprob: -13.703810691833496

Token 306: '_' (ID: 62)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.0010390023235231638
    2. 'initial' → logprob: -7.501039028167725
    3. '_' → logprob: -7.751039028167725
    4. ')' → logprob: -10.001038551330566
    5. '_init' → logprob: -12.376038551330566
    6. '0' → logprob: -13.751038551330566
    7. '_)' → logprob: -13.876038551330566
    8. '_INITIAL' → logprob: -13.876038551330566
    9. ' initial' → logprob: -14.126038551330566
    10. '<|end|>' → logprob: -14.501038551330566

Token 307: '0' (ID: 15)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.02565460093319416
    2. '_initial' → logprob: -3.7756545543670654
    3. '0' → logprob: -6.1506547927856445
    4. ' initial' → logprob: -8.400654792785645
    5. '_' → logprob: -11.275654792785645
    6. 'init' → logprob: -11.650654792785645
    7. 'ini' → logprob: -12.525654792785645
    8. '_init' → logprob: -12.525654792785645
    9. '	initial' → logprob: -12.650654792785645
    10. 'int' → logprob: -12.775654792785645

Token 308: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02135602943599224
    2. '),' → logprob: -4.271356105804443
    3. '):' → logprob: -5.146356105804443
    4. ').' → logprob: -7.146356105804443
    5. '):
' → logprob: -8.771355628967285
    6. ' )' → logprob: -8.771355628967285
    7. ',' → logprob: -8.771355628967285
    8. '):

' → logprob: -10.646355628967285
    9. '")' → logprob: -10.896355628967285
    10. ')
' → logprob: -11.521355628967285

Token 309: '   ' (ID: 271)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.05381342023611069
    2. 'p' → logprob: -3.6788134574890137
    3. '   ' → logprob: -3.8038134574890137
    4. ' et' → logprob: -5.678813457489014
    5. 'et' → logprob: -7.678813457489014
    6. '    ' → logprob: -8.428812980651855
    7. ' ' → logprob: -9.053812980651855
    8. ' récup' → logprob: -9.053812980651855
    9. ' p' → logprob: -9.178812980651855
    10. 's' → logprob: -9.303812980651855

Token 310: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.2011880725622177
    2. 'p' → logprob: -2.076188087463379
    3. '   ' → logprob: -2.951188087463379
    4. ' et' → logprob: -5.951188087463379
    5. 'et' → logprob: -6.701188087463379
    6. '    ' → logprob: -7.701188087463379
    7. 'Puis' → logprob: -9.701188087463379
    8. ' p' → logprob: -10.326188087463379
    9. ' ensuite' → logprob: -10.326188087463379
    10. 'ens' → logprob: -10.326188087463379

Token 311: ' gén' (ID: 15330)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.08377981185913086
    2. ' les' → logprob: -3.458779811859131
    3. ' lance' → logprob: -3.833779811859131
    4. '   ' → logprob: -3.958779811859131
    5. ''appelle' → logprob: -6.333779811859131
    6. ' appel' → logprob: -6.958779811859131
    7. ' appels' → logprob: -6.958779811859131
    8. ' app' → logprob: -7.208779811859131
    9. '    ' → logprob: -7.958779811859131
    10. ' appeler' → logprob: -8.083780288696289

Token 312: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.006090427283197641
    2. 'er' → logprob: -6.0060906410217285
    3. 'érer' → logprob: -6.0060906410217285
    4. 'èr' → logprob: -8.25609016418457
    5. 'ére' → logprob: -8.63109016418457
    6. '   ' → logprob: -8.75609016418457
    7. 'ere' → logprob: -9.38109016418457
    8. 'r' → logprob: -9.88109016418457
    9. 'è' → logprob: -10.00609016418457
    10. 'érale' → logprob: -10.13109016418457

Token 313: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1860361099243164
    2. ' et' → logprob: -2.5610361099243164
    3. ' une' → logprob: -2.9360361099243164
    4. '   ' → logprob: -3.4360361099243164
    5. '    ' → logprob: -6.311036109924316
    6. '_' → logprob: -6.686036109924316
    7. ' un' → logprob: -7.186036109924316
    8. ' les' → logprob: -7.311036109924316
    9. 'la' → logprob: -7.436036109924316
    10. ' ' → logprob: -7.811036109924316

Token 314: ' affiche' (ID: 127479)
  Prédit: ' appelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -0.0401555560529232
    2. ' affiche' → logprob: -4.040155410766602
    3. ' lance' → logprob: -4.040155410766602
    4. ''appelle' → logprob: -6.665155410766602
    5. 'aff' → logprob: -7.415155410766602
    6. ' app' → logprob: -7.665155410766602
    7. 'app' → logprob: -7.665155410766602
    8. ' appel' → logprob: -7.790155410766602
    9. ' appels' → logprob: -7.915155410766602
    10. ' les' → logprob: -8.790155410766602

Token 315: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005247275810688734
    2. ' les' → logprob: -5.755247116088867
    3. '<|end|>' → logprob: -7.505247116088867
    4. '_la' → logprob: -7.880247116088867
    5. 'la' → logprob: -8.255247116088867
    6. ' l' → logprob: -8.380247116088867
    7. ' une' → logprob: -8.380247116088867
    8. '_' → logprob: -9.005247116088867
    9. ' the' → logprob: -9.380247116088867
    10. ' le' → logprob: -10.255247116088867

Token 316: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4271019399166107
    2. ' ' → logprob: -1.677101969718933
    3. ' dix' → logprob: -2.8021018505096436
    4. '10' → logprob: -3.0521018505096436
    5. '_' → logprob: -3.5521018505096436
    6. ' résultats' → logprob: -4.677102088928223
    7. ' premières' → logprob: -4.927102088928223
    8. ' valeurs' → logprob: -5.427102088928223
    9. ' premiers' → logprob: -6.802102088928223
    10. '_d' → logprob: -7.552102088928223

Token 317: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.36982110142707825
    2. 'd' → logprob: -1.8698210716247559
    3. ' ' → logprob: -1.9948210716247559
    4. '_' → logprob: -4.744821071624756
    5. ' dix' → logprob: -5.369821071624756
    6. 'val' → logprob: -5.744821071624756
    7. ' valeurs' → logprob: -7.119821071624756
    8. ' premières' → logprob: -7.619821071624756
    9. '```' → logprob: -9.119821548461914
    10. '1' → logprob: -9.369821548461914

Token 318: ' premières' (ID: 73562)
  Prédit: ' premières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premières' → logprob: -0.06490133702754974
    2. '_' → logprob: -2.814901351928711
    3. 'prem' → logprob: -6.689901351928711
    4. ' valeurs' → logprob: -7.189901351928711
    5. ' premiers' → logprob: -8.064901351928711
    6. ' _' → logprob: -8.564901351928711
    7. ' première' → logprob: -9.189901351928711
    8. ' ' → logprob: -9.314901351928711
    9. '_first' → logprob: -10.064901351928711
    10. ' prochaines' → logprob: -10.189901351928711

Token 319: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.001003155019134283
    2. 'val' → logprob: -8.12600326538086
    3. ' lignes' → logprob: -8.50100326538086
    4. ' valeur' → logprob: -8.87600326538086
    5. ' val' → logprob: -9.25100326538086
    6. ' values' → logprob: -9.37600326538086
    7. ' ' → logprob: -9.37600326538086
    8. '_' → logprob: -10.50100326538086
    9. '   ' → logprob: -11.00100326538086
    10. ' vale' → logprob: -11.87600326538086

Token 320: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03566115349531174
    2. ' de' → logprob: -3.410661220550537
    3. 'de' → logprob: -7.160661220550537
    4. '    ' → logprob: -7.285661220550537
    5. 'def' → logprob: -8.785660743713379
    6. '  ' → logprob: -9.035660743713379
    7. ' des' → logprob: -9.410660743713379
    8. ' du' → logprob: -10.035660743713379
    9. '    
' → logprob: -10.535660743713379
    10. '<|end|>' → logprob: -11.035660743713379

Token 321: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.004273446276783943
    2. 'la' → logprob: -5.504273414611816
    3. ' recurrence' → logprob: -9.004273414611816
    4. ' une' → logprob: -10.629273414611816
    5. 'une' → logprob: -11.504273414611816
    6. ' the' → logprob: -11.879273414611816
    7. ' l' → logprob: -12.004273414611816
    8. 'l' → logprob: -12.004273414611816
    9. 'rec' → logprob: -12.504273414611816
    10. ' a' → logprob: -12.504273414611816

Token 322: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.10706724226474762
    2. ' suite' → logprob: -2.607067346572876
    3. 'rec' → logprob: -3.857067346572876
    4. ' recurrence' → logprob: -5.982067108154297
    5. 'sequence' → logprob: -6.607067108154297
    6. 'su' → logprob: -7.357067108154297
    7. ' sequence' → logprob: -7.732067108154297
    8. 's' → logprob: -8.232067108154297
    9. 'ré' → logprob: -8.482067108154297
    10. 'r' → logprob: -8.857067108154297

Token 323: ' défin' (ID: 57890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3111163079738617
    2. ' défin' → logprob: -1.561116337776184
    3. '.' → logprob: -3.5611162185668945
    4. ' en' → logprob: -4.6861162185668945
    5. 'def' → logprob: -5.0611162185668945
    6. '    
' → logprob: -5.4361162185668945
    7. 'r' → logprob: -6.4361162185668945
    8. ' defined' → logprob: -6.9361162185668945
    9. ' à' → logprob: -7.1861162185668945
    10. ' de' → logprob: -7.1861162185668945

Token 324: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.007016810588538647
    2. 'ies' → logprob: -5.007016658782959
    3. 'i' → logprob: -9.257017135620117
    4. '   ' → logprob: -9.507017135620117
    5. 'e' → logprob: -10.007017135620117
    6. 'def' → logprob: -11.007017135620117
    7. '```' → logprob: -11.382017135620117
    8. 'ite' → logprob: -12.257017135620117
    9. 'is' → logprob: -12.257017135620117
    10. '
' → logprob: -12.507017135620117

Token 325: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.006773276720196009
    2. 'par' → logprob: -5.131773471832275
    3. '   ' → logprob: -7.381773471832275
    4. ' ' → logprob: -9.131772994995117
    5. '_par' → logprob: -10.006772994995117
    6. ' by' → logprob: -10.631772994995117
    7. 'def' → logprob: -11.256772994995117
    8. ',' → logprob: -11.506772994995117
    9. '.' → logprob: -12.381772994995117
    10. '```' → logprob: -12.506772994995117

Token 326: ' la' (ID: 557)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.5188073515892029
    2. 'r' → logprob: -1.1438074111938477
    3. ' ré' → logprob: -2.5188074111938477
    4. 'rec' → logprob: -6.018807411193848
    5. ' réc' → logprob: -7.143807411193848
    6. ' r' → logprob: -7.393807411193848
    7. ' la' → logprob: -7.643807411193848
    8. 'la' → logprob: -8.393807411193848
    9. '   ' → logprob: -8.393807411193848
    10. ' recurrence' → logprob: -8.518807411193848

Token 327: ' fonction' (ID: 17610)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3962869644165039
    2. ' recurrence' → logprob: -2.396286964416504
    3. ' ré' → logprob: -2.646286964416504
    4. 'ré' → logprob: -2.896286964416504
    5. ' réc' → logprob: -3.021286964416504
    6. 'rec' → logprob: -3.396286964416504
    7. ' fonction' → logprob: -4.771286964416504
    8. ' r' → logprob: -5.021286964416504
    9. 'fonction' → logprob: -5.771286964416504
    10. ' rec' → logprob: -6.146286964416504

Token 328: ' recurrence' (ID: 127370)
  Prédit: ' recurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.03417197987437248
    2. 'rec' → logprob: -3.4091720581054688
    3. '"' → logprob: -8.659172058105469
    4. '`' → logprob: -9.034172058105469
    5. ''' → logprob: -9.409172058105469
    6. 'ré' → logprob: -10.284172058105469
    7. ' recur' → logprob: -10.909172058105469
    8. 'space' → logprob: -11.534172058105469
    9. 're' → logprob: -11.534172058105469
    10. ' rec' → logprob: -11.659172058105469

Token 329: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.2127087504486553e-05
    2. '_' → logprob: -10.750021934509277
    3. '_sequences' → logprob: -14.625021934509277
    4. '_s' → logprob: -17.125022888183594
    5. '_seq' → logprob: -17.250022888183594
    6. ' _' → logprob: -17.375022888183594
    7. '_SEQUENCE' → logprob: -17.500022888183594
    8. ' sequence' → logprob: -18.125022888183594
    9. '_
' → logprob: -18.125022888183594
    10. 'sequence' → logprob: -18.375022888183594

Token 330: '().
' (ID: 58434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22505927085876465
    2. ')' → logprob: -2.3500592708587646
    3. '.' → logprob: -3.2250592708587646
    4. '(r' → logprob: -3.2250592708587646
    5. 'def' → logprob: -4.600059509277344
    6. '):' → logprob: -5.225059509277344
    7. ').' → logprob: -5.350059509277344
    8. '.
' → logprob: -6.350059509277344
    9. ')
' → logprob: -7.100059509277344
    10. '(' → logprob: -7.100059509277344

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018843731377273798
    2. '    
' → logprob: -6.376884460449219
    3. '
' → logprob: -8.751884460449219
    4. '   
' → logprob: -12.126884460449219
    5. '  
' → logprob: -12.376884460449219
    6. ' 
' → logprob: -12.501884460449219
    7. ')' → logprob: -12.876884460449219
    8. '    
    
' → logprob: -13.251884460449219
    9. 'def' → logprob: -14.001884460449219
    10. '    ' → logprob: -14.001884460449219

Token 332: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004000396002084017
    2. '
' → logprob: -5.879000186920166
    3. '    
' → logprob: -6.879000186920166
    4. ')' → logprob: -10.129000663757324
    5. '"""' → logprob: -10.379000663757324
    6. '  
' → logprob: -10.879000663757324
    7. '   
' → logprob: -11.254000663757324
    8. '```' → logprob: -11.254000663757324
    9. '"""
' (adapté à ' """
') → logprob: -11.379000663757324
    10. ' 
' → logprob: -11.504000663757324

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007185076246969402
    2. 'r' → logprob: -7.750718593597412
    3. ' r' → logprob: -8.625718116760254
    4. '    
' → logprob: -10.000718116760254
    5. 'try' → logprob: -10.625718116760254
    6. 'inputs' → logprob: -11.000718116760254
    7. ' try' → logprob: -12.375718116760254
    8. 'input' → logprob: -12.375718116760254
    9. 'params' → logprob: -13.250718116760254
    10. '
' → logprob: -13.375718116760254

Token 334: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1726144701242447
    2. 'inputs' → logprob: -2.297614574432373
    3. '   ' → logprob: -4.422614574432373
    4. 'try' → logprob: -4.547614574432373
    5. 'values' → logprob: -4.547614574432373
    6. '#' (adapté à ' #') → logprob: -4.672614574432373
    7. 'params' → logprob: -5.172614574432373
    8. 'user' → logprob: -6.047614574432373
    9. 'val' → logprob: -6.422614574432373
    10. 's' → logprob: -6.547614574432373

Token 335: ' Dem' (ID: 9458)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6037197709083557
    2. 'val' → logprob: -1.853719711303711
    3. 'inputs' → logprob: -2.478719711303711
    4. 'values' → logprob: -2.603719711303711
    5. 'user' → logprob: -2.728719711303711
    6. 'params' → logprob: -3.728719711303711
    7. 's' → logprob: -4.228719711303711
    8. 'input' → logprob: -4.853719711303711
    9. '#' → logprob: -4.978719711303711
    10. 'vals' → logprob: -5.103719711303711

Token 336: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.016767051070928574
    2. '   ' → logprob: -4.2667670249938965
    3. 'ander' → logprob: -6.7667670249938965
    4. 'and' → logprob: -6.8917670249938965
    5. 'andez' → logprob: -8.391767501831055
    6. 'andes' → logprob: -9.891767501831055
    7. 'ar' → logprob: -10.391767501831055
    8. 'an' → logprob: -10.391767501831055
    9. 'a' → logprob: -11.266767501831055
    10. '       ' → logprob: -11.391767501831055

Token 337: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08014875650405884
    2. ' à' → logprob: -3.205148696899414
    3. 'r' → logprob: -3.955148696899414
    4. ' =' → logprob: -5.080148696899414
    5. 'à' → logprob: -5.330148696899414
    6. '  ' → logprob: -6.705148696899414
    7. '=' → logprob: -6.830148696899414
    8. ' r' → logprob: -7.830148696899414
    9. '    ' → logprob: -7.830148696899414
    10. 'au' → logprob: -8.080148696899414

Token 338: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6536127328872681
    2. 'user' → logprob: -1.528612732887268
    3. 'util' → logprob: -2.1536126136779785
    4. 'r' → logprob: -2.7786126136779785
    5. ' l' → logprob: -3.4036126136779785
    6. ' user' → logprob: -3.5286126136779785
    7. ' utilisateur' → logprob: -4.7786126136779785
    8. ' r' → logprob: -5.9036126136779785
    9. 'la' → logprob: -6.0286126136779785
    10. 'u' → logprob: -6.2786126136779785

Token 339: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.4441847801208496
    2. 'r' → logprob: -1.3191847801208496
    3. 'a' → logprob: -3.5691847801208496
    4. 'u' → logprob: -3.8191847801208496
    5. 'util' → logprob: -4.06918478012085
    6. 'input' → logprob: -5.19418478012085
    7. 'user' → logprob: -5.19418478012085
    8. ''entrée' → logprob: -6.06918478012085
    9. 'e' → logprob: -6.31918478012085
    10. '=' → logprob: -6.31918478012085

Token 340: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33909866213798523
    2. 'r' → logprob: -1.4640986919403076
    3. 's' → logprob: -4.4640984535217285
    4. ' =' → logprob: -4.7140984535217285
    5. ' de' → logprob: -5.0890984535217285
    6. 'de' → logprob: -5.3390984535217285
    7. '(r' → logprob: -5.5890984535217285
    8. ' r' → logprob: -5.7140984535217285
    9. '  ' → logprob: -5.9640984535217285
    10. ' ' → logprob: -6.4640984535217285

Token 341: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4456776976585388
    2. ' saisir' → logprob: -1.6956777572631836
    3. 'input' → logprob: -1.8206777572631836
    4. ' input' → logprob: -4.570677757263184
    5. 'r' → logprob: -6.445677757263184
    6. 'entr' → logprob: -6.695677757263184
    7. 'l' → logprob: -7.820677757263184
    8. ' entrer' → logprob: -9.070677757263184
    9. 'enter' → logprob: -9.320677757263184
    10. ' s' → logprob: -9.445677757263184

Token 342: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13001050055027008
    2. 'les' → logprob: -2.6300106048583984
    3. '   ' → logprob: -3.8800106048583984
    4. ' r' → logprob: -4.130010604858398
    5. ' les' → logprob: -5.630010604858398
    6. 'l' → logprob: -6.255010604858398
    7. ' trois' → logprob: -6.505010604858398
    8. 'une' → logprob: -6.755010604858398
    9. ' une' → logprob: -7.255010604858398
    10. 'la' → logprob: -7.255010604858398

Token 343: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06908649951219559
    2. 'r' → logprob: -3.3190865516662598
    3. 'ent' → logprob: -4.44408655166626
    4. 'tro' → logprob: -5.06908655166626
    5. ' valeurs' → logprob: -5.31908655166626
    6. 'param' → logprob: -6.06908655166626
    7. ' trois' → logprob: -6.31908655166626
    8. ' ent' → logprob: -6.94408655166626
    9. ' r' → logprob: -7.31908655166626
    10. ' val' → logprob: -7.81908655166626

Token 344: ' pour' (ID: 1930)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7019554972648621
    2. '   ' → logprob: -0.7019554972648621
    3. ' r' → logprob: -4.826955318450928
    4. '(r' → logprob: -8.576955795288086
    5. '	r' → logprob: -9.076955795288086
    6. 'de' → logprob: -9.701955795288086
    7. ' ' → logprob: -9.826955795288086
    8. ' de' → logprob: -9.951955795288086
    9. '  ' → logprob: -10.326955795288086
    10. '(' → logprob: -10.326955795288086

Token 345: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20142152905464172
    2. ' r' → logprob: -1.7014214992523193
    3. ' ' → logprob: -13.076421737670898
    4. ' ' → logprob: -13.576421737670898
    5. ' le' → logprob: -14.326421737670898
    6. 'l' → logprob: -14.451421737670898
    7. ' la' → logprob: -14.451421737670898
    8. ' les' → logprob: -14.576421737670898
    9. '	r' → logprob: -14.576421737670898
    10. '_r' → logprob: -14.701421737670898

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38956788182258606
    2. 'r' → logprob: -1.5145678520202637
    3. '   ' → logprob: -3.2645678520202637
    4. ' r' → logprob: -3.5145678520202637
    5. ' =' → logprob: -3.5145678520202637
    6. ' ,' → logprob: -6.264567852020264
    7. ',r' → logprob: -6.264567852020264
    8. '=' → logprob: -7.264567852020264
    9. '=r' → logprob: -8.889568328857422
    10. 's' → logprob: -9.139568328857422

Token 347: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6328400373458862
    2. ' D' → logprob: -0.7578400373458862
    3. 'd' → logprob: -9.132840156555176
    4. ' ' → logprob: -9.632840156555176
    5. ',' → logprob: -10.757840156555176
    6. ' d' → logprob: -11.382840156555176
    7. '  ' → logprob: -11.632840156555176
    8. 'r' → logprob: -11.882840156555176
    9. '   ' → logprob: -12.882840156555176
    10. ' ' → logprob: -12.882840156555176

Token 348: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027710015419870615
    2. ' et' → logprob: -6.252770900726318
    3. ' ,' → logprob: -7.377770900726318
    4. 'et' → logprob: -9.002771377563477
    5. ' =' → logprob: -9.877771377563477
    6. 'r' → logprob: -10.752771377563477
    7. 's' → logprob: -12.377771377563477
    8. ' ' → logprob: -12.877771377563477
    9. ' and' → logprob: -13.002771377563477
    10. '=' → logprob: -13.002771377563477

Token 349: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002476016292348504
    2. ' x' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.25247573852539
    4. '```' → logprob: -16.75247573852539
    5. '`' → logprob: -18.37747573852539
    6. '"x' → logprob: -18.87747573852539
    7. '  ' → logprob: -19.00247573852539
    8. ' ' → logprob: -19.12747573852539
    9. '	x' → logprob: -19.25247573852539
    10. ',' → logprob: -19.37747573852539

Token 350: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.10404931753873825
    2. '_' → logprob: -2.6040492057800293
    3. ',' → logprob: -4.104049205780029
    4. ' =' → logprob: -5.229049205780029
    5. '0' → logprob: -6.979049205780029
    6. '_,' → logprob: -7.104049205780029
    7. 'initial' → logprob: -7.229049205780029
    8. ',_' → logprob: -8.979049682617188
    9. '_init' → logprob: -9.479049682617188
    10. '=' → logprob: -9.854049682617188

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019876365549862385
    2. 'r' → logprob: -6.501987457275391
    3. '    
' → logprob: -8.00198745727539
    4. 's' → logprob: -10.00198745727539
    5. ' r' → logprob: -10.25198745727539
    6. ' =' → logprob: -11.62698745727539
    7. '    ' → logprob: -11.62698745727539
    8. 'values' → logprob: -11.62698745727539
    9. 'input' → logprob: -11.75198745727539
    10. '  ' → logprob: -11.75198745727539

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005226051900535822
    2. '    
' → logprob: -5.505226135253906
    3. 'r' → logprob: -7.005226135253906
    4. ' r' → logprob: -9.255226135253906
    5. 'input' → logprob: -10.380226135253906
    6. '    ' → logprob: -11.005226135253906
    7. '   
' → logprob: -11.005226135253906
    8. '
' → logprob: -11.255226135253906
    9. '  
' → logprob: -11.380226135253906
    10. 's' → logprob: -11.630226135253906

Token 353: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.3870640993118286
    2. 'values' → logprob: -2.512063980102539
    3. 'inputs' → logprob: -2.762063980102539
    4. ' r' → logprob: -3.012063980102539
    5. 'val' → logprob: -3.137063980102539
    6. 'user' → logprob: -3.262063980102539
    7. '   ' → logprob: -3.887063980102539
    8. ' values' → logprob: -5.137063980102539
    9. 'vals' → logprob: -5.387063980102539
    10. ' inputs' → logprob: -5.512063980102539

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9981420336989686e-05
    2. ',D' → logprob: -11.250020027160645
    3. ' ,' → logprob: -12.375020027160645
    4. 's' → logprob: -13.500020027160645
    5. '_,' → logprob: -14.125020027160645
    6. ' =' → logprob: -15.125020027160645
    7. '=' → logprob: -15.500020027160645
    8. ',d' → logprob: -17.375019073486328
    9. ',input' → logprob: -17.625019073486328
    10. 'D' → logprob: -18.000019073486328

Token 355: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.07889727503061295
    2. ' D' → logprob: -2.57889723777771
    3. ' ' → logprob: -12.203897476196289
    4. '  ' → logprob: -13.203897476196289
    5. '<|end|>' → logprob: -15.578897476196289
    6. ',' → logprob: -16.45389747619629
    7. 'd' → logprob: -16.57889747619629
    8. 'space' → logprob: -17.07889747619629
    9. '_D' → logprob: -17.07889747619629
    10. '	D' → logprob: -17.45389747619629

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ' =' → logprob: -14.000086784362793
    4. ',x' → logprob: -14.500086784362793
    5. '=' → logprob: -15.375086784362793
    6. '<|end|>' → logprob: -16.00008773803711
    7. ',input' → logprob: -16.12508773803711
    8. ',int' → logprob: -16.87508773803711
    9. '‌,' → logprob: -17.00008773803711
    10. ',user' → logprob: -17.25008773803711

Token 357: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020577972754836082
    2. 'x' → logprob: -3.895577907562256
    3. ' ' → logprob: -10.270578384399414
    4. '	x' → logprob: -14.020578384399414
    5. ' ' → logprob: -15.645578384399414
    6. '  ' → logprob: -15.895578384399414
    7. '<|end|>' → logprob: -16.770578384399414
    8. ' =' → logprob: -17.270578384399414
    9. '_x' → logprob: -17.645578384399414
    10. '_' → logprob: -17.645578384399414

Token 358: '_initial' (ID: 45740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4300476908683777
    2. '_initial' → logprob: -1.0550477504730225
    3. ' _' → logprob: -7.680047512054443
    4. ' =' → logprob: -8.555047988891602
    5. '_,' → logprob: -8.805047988891602
    6. 'initial' → logprob: -8.930047988891602
    7. ',' → logprob: -9.055047988891602
    8. '_=' → logprob: -9.180047988891602
    9. ' ' → logprob: -10.180047988891602
    10. '_init' → logprob: -10.430047988891602

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758448228240013
    2. '=' → logprob: -4.634758472442627
    3. '=input' → logprob: -13.009757995605469
    4. ',' → logprob: -16.00975799560547
    5. ')' → logprob: -17.00975799560547
    6. ' ' → logprob: -17.50975799560547
    7. '=int' → logprob: -17.63475799560547
    8. '<|end|>' → logprob: -18.38475799560547
    9. 'input' → logprob: -18.63475799560547
    10. 's' → logprob: -18.75975799560547

Token 360: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.038044363260269165
    2. 'map' → logprob: -3.2880444526672363
    3. ' input' → logprob: -13.413043975830078
    4. 'input' → logprob: -14.413043975830078
    5. '[' → logprob: -14.913043975830078
    6. '	map' → logprob: -15.413043975830078
    7. ' ' → logprob: -15.663043975830078
    8. ' [' → logprob: -16.163043975830078
    9. '(map' → logprob: -16.538043975830078
    10. ' ' → logprob: -17.038043975830078

Token 361: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015566397923976183
    2. '(' → logprob: -6.501556873321533
    3. 'int' → logprob: -9.876556396484375
    4. '<int' → logprob: -13.876556396484375
    5. '[int' → logprob: -14.001556396484375
    6. '(input' → logprob: -14.251556396484375
    7. '=int' → logprob: -16.001556396484375
    8. '(
' → logprob: -16.001556396484375
    9. ' int' → logprob: -16.251556396484375
    10. ' (' → logprob: -16.876556396484375

Token 362: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10223568230867386
    2. 'input' → logprob: -2.352235794067383
    3. ',input' → logprob: -6.977235794067383
    4. '(' → logprob: -7.852235794067383
    5. ' input' → logprob: -7.852235794067383
    6. ')' → logprob: -8.227235794067383
    7. ',' → logprob: -10.352235794067383
    8. '=input' → logprob: -11.977235794067383
    9. ' (' → logprob: -12.352235794067383
    10. '<input' → logprob: -13.102235794067383

Token 363: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022463142871857
    2. ' input' → logprob: -1.9102246761322021
    3. '(input' → logprob: -15.035224914550781
    4. '<input' → logprob: -17.28522491455078
    5. '	input' → logprob: -17.53522491455078
    6. '=input' → logprob: -17.66022491455078
    7. ')' → logprob: -18.03522491455078
    8. '   ' → logprob: -18.16022491455078
    9. ',input' → logprob: -18.16022491455078
    10. ' ' → logprob: -19.16022491455078

Token 364: '("' (ID: 568)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.019533513113856316
    2. '()' → logprob: -4.144533634185791
    3. '("' → logprob: -6.269533634185791
    4. '(input' → logprob: -7.144533634185791
    5. '(' → logprob: -7.894533634185791
    6. '())' → logprob: -8.269533157348633
    7. '("").' → logprob: -9.394533157348633
    8. '(">' → logprob: -11.144533157348633
    9. '("")' → logprob: -11.144533157348633
    10. '('' → logprob: -11.269533157348633

Token 365: 'Ent' (ID: 3263)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1875026822090149
    2. 'Ent' → logprob: -2.81250262260437
    3. 'Veuillez' → logprob: -3.06250262260437
    4. '(' → logprob: -3.68750262260437
    5. 'S' → logprob: -4.312502861022949
    6. '"' → logprob: -4.937502861022949
    7. '(r' → logprob: -5.312502861022949
    8. '")' → logprob: -5.437502861022949
    9. 'Please' → logprob: -6.187502861022949
    10. '"S' → logprob: -6.437502861022949

Token 366: 'rez' (ID: 13676)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.8378527164459229
    2. 'rez' → logprob: -1.0878527164459229
    3. 'iers' → logprob: -2.087852716445923
    4. 'r' → logprob: -3.337852716445923
    5. 'er' → logprob: -3.712852716445923
    6. 'rée' → logprob: -4.087852478027344
    7. ' r' → logprob: -5.837852478027344
    8. 're' → logprob: -6.087852478027344
    9. 'érer' → logprob: -6.212852478027344
    10. 'rodu' → logprob: -6.212852478027344

Token 367: ' r' (ID: 428)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.10964357852935791
    2. '(' → logprob: -3.1096434593200684
    3. '("' → logprob: -3.3596434593200684
    4. '(r' → logprob: -4.609643459320068
    5. ' three' → logprob: -6.359643459320068
    6. ' les' → logprob: -6.484643459320068
    7. ' ' → logprob: -6.484643459320068
    8. '3' → logprob: -6.484643459320068
    9. '('' → logprob: -6.484643459320068
    10. ' des' → logprob: -6.484643459320068

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015680687502026558
    2. ',D' → logprob: -6.751567840576172
    3. ' D' → logprob: -8.626567840576172
    4. ' ,' → logprob: -8.751567840576172
    5. '(),' → logprob: -11.251567840576172
    6. '()' → logprob: -11.251567840576172
    7. ' ' → logprob: -11.751567840576172
    8. '(D' → logprob: -11.876567840576172
    9. '(' → logprob: -12.001567840576172
    10. 'D' → logprob: -12.376567840576172

Token 369: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.22593219578266144
    2. 'D' → logprob: -1.600932240486145
    3. ' ' → logprob: -7.7259321212768555
    4. '  ' → logprob: -10.475932121276855
    5. ',' → logprob: -10.725932121276855
    6. '<|end|>' → logprob: -10.725932121276855
    7. ',D' → logprob: -13.475932121276855
    8. 'd' → logprob: -13.850932121276855
    9. ' ,' → logprob: -14.100932121276855
    10. '   ' → logprob: -14.725932121276855

Token 370: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006730645429342985
    2. ' et' → logprob: -5.131730556488037
    3. ' ,' → logprob: -7.256730556488037
    4. 'et' → logprob: -9.756731033325195
    5. ' x' → logprob: -11.131731033325195
    6. '<|end|>' → logprob: -11.881731033325195
    7. ',x' → logprob: -12.256731033325195
    8. ' ' → logprob: -12.506731033325195
    9. ' and' → logprob: -13.506731033325195
    10. ')' → logprob: -14.006731033325195

Token 371: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.002189045073464513
    2. 'x' → logprob: -6.1271891593933105
    3. ' ' → logprob: -12.877188682556152
    4. '<|end|>' → logprob: -13.877188682556152
    5. '	x' → logprob: -15.377188682556152
    6. '  ' → logprob: -16.75218963623047
    7. ',' → logprob: -17.25218963623047
    8. '"x' → logprob: -17.37718963623047
    9. ',x' → logprob: -17.50218963623047
    10. '_x' → logprob: -17.62718963623047

Token 372: '_' (ID: 62)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.5586909055709839
    2. '_' → logprob: -1.4336909055709839
    3. '0' → logprob: -1.6836909055709839
    4. '_init' → logprob: -6.308691024780273
    5. ' initial' → logprob: -6.683691024780273
    6. ' _' → logprob: -7.683691024780273
    7. 'initial' → logprob: -8.308691024780273
    8. '_INITIAL' → logprob: -10.058691024780273
    9. ' ' → logprob: -10.183691024780273
    10. '\xe2\x82' → logprob: -10.808691024780273

Token 373: '0' (ID: 15)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.2533215582370758
    2. '0' → logprob: -1.5033215284347534
    3. '_initial' → logprob: -6.628321647644043
    4. 'init' → logprob: -10.503321647644043
    5. ' initial' → logprob: -10.628321647644043
    6. 'Initial' → logprob: -12.003321647644043
    7. '_' → logprob: -12.003321647644043
    8. '_init' → logprob: -13.628321647644043
    9. '(initial' → logprob: -13.878321647644043
    10. ' ' → logprob: -14.378321647644043

Token 374: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.2905336618423462
    2. '").' → logprob: -2.2905335426330566
    3. ' separated' → logprob: -2.5405335426330566
    4. ':' → logprob: -2.9155335426330566
    5. ' separados' → logprob: -4.915533542633057
    6. 's' → logprob: -5.665533542633057
    7. ' :' → logprob: -6.290533542633057
    8. ',' → logprob: -7.165533542633057
    9. '")' → logprob: -7.290533542633057
    10. ' separ' → logprob: -7.540533542633057

Token 375: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.008863095194101334
    2. 'é' → logprob: -4.7588629722595215
    3. 'es' → logprob: -8.38386344909668
    4. 'ées' → logprob: -11.50886344909668
    5. 'e' → logprob: -13.00886344909668
    6. 'ée' → logprob: -13.75886344909668
    7. 'er' → logprob: -13.75886344909668
    8. 'ès' → logprob: -13.88386344909668
    9. 'ÉS' → logprob: -14.00886344909668
    10. ' ' → logprob: -14.38386344909668

Token 376: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07093323022127151
    2. 'par' → logprob: -2.6959333419799805
    3. '<|end|>' → logprob: -7.1959333419799805
    4. ' ' → logprob: -9.19593334197998
    5. ' by' → logprob: -9.94593334197998
    6. '_par' → logprob: -10.69593334197998
    7. ')' → logprob: -11.32093334197998
    8. ' espaces' → logprob: -11.44593334197998
    9. '	par' → logprob: -12.07093334197998
    10. '"' → logprob: -12.07093334197998

Token 377: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0760217234492302
    2. ' un' → logprob: -3.576021671295166
    3. ' espaces' → logprob: -3.576021671295166
    4. 'des' → logprob: -4.701021671295166
    5. ' espace' → logprob: -5.576021671295166
    6. 'spaces' → logprob: -6.576021671295166
    7. ' ' → logprob: -6.951021671295166
    8. ' spaces' → logprob: -7.576021671295166
    9. 'un' → logprob: -7.701021671295166
    10. ''espace' → logprob: -7.701021671295166

Token 378: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.0061331987380981445
    2. 'esp' → logprob: -5.256133079528809
    3. ' espace' → logprob: -7.631133079528809
    4. 'es' → logprob: -8.256133079528809
    5. 'spaces' → logprob: -9.256133079528809
    6. ' spaces' → logprob: -11.381133079528809
    7. ' esp' → logprob: -12.006133079528809
    8. 'paces' → logprob: -12.006133079528809
    9. ''esp' → logprob: -12.006133079528809
    10. ''espace' → logprob: -12.006133079528809

Token 379: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6387301683425903
    2. '").' → logprob: -0.7637301683425903
    3. '")' → logprob: -6.013730049133301
    4. ').' → logprob: -6.638730049133301
    5. ')' → logprob: -7.013730049133301
    6. '):' → logprob: -7.263730049133301
    7. ' :' → logprob: -8.0137300491333
    8. '').' → logprob: -8.6387300491333
    9. '"))' → logprob: -9.2637300491333
    10. ' ").' → logprob: -10.1387300491333

Token 380: ' ").' (ID: 49234)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.005075790919363499
    2. ' ").' → logprob: -5.630075931549072
    3. ').' → logprob: -7.255075931549072
    4. '")' → logprob: -7.380075931549072
    5. '"))' → logprob: -9.755075454711914
    6. ')' → logprob: -10.255075454711914
    7. '').' → logprob: -10.380075454711914
    8. '"' → logprob: -11.255075454711914
    9. ')")' → logprob: -13.255075454711914
    10. ')").' → logprob: -13.880075454711914

Token 381: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020377879263833165
    2. 'strip' → logprob: -8.500204086303711
    3. 'rstrip' → logprob: -15.625204086303711
    4. 'spl' → logprob: -16.62520408630371
    5. ' split' → logprob: -17.50020408630371
    6. '(split' → logprob: -20.25020408630371
    7. '_split' → logprob: -21.50020408630371
    8. 's' → logprob: -21.62520408630371
    9. '.split' → logprob: -22.00020408630371
    10. 'read' → logprob: -22.87520408630371

Token 382: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009138010442256927
    2. '()' → logprob: -4.759138107299805
    3. '()))' → logprob: -7.759138107299805
    4. ')' → logprob: -9.509138107299805
    5. '(' → logprob: -11.634138107299805
    6. '('' → logprob: -12.134138107299805
    7. '())
' → logprob: -12.384138107299805
    8. ' ())' → logprob: -13.009138107299805
    9. '("' → logprob: -14.759138107299805
    10. '()]' → logprob: -15.384138107299805

Token 383: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09685273468494415
    2. '   ' → logprob: -2.4718527793884277
    3. 'rec' → logprob: -5.096852779388428
    4. '    
' → logprob: -6.596852779388428
    5. ' recurrence' → logprob: -8.09685230255127
    6. '	rec' → logprob: -10.34685230255127
    7. '  
' → logprob: -10.72185230255127
    8. '
' → logprob: -11.22185230255127
    9. '   
' → logprob: -11.59685230255127
    10. ' 
' → logprob: -11.72185230255127

Token 384: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1177506372332573
    2. 'rec' → logprob: -2.367750644683838
    3. ' recurrence' → logprob: -4.242750644683838
    4. '
' → logprob: -6.117750644683838
    5. '    
' → logprob: -7.242750644683838
    6. 're' → logprob: -9.99275016784668
    7. '	rec' → logprob: -11.24275016784668
    8. '  
' → logprob: -11.36775016784668
    9. '   
' → logprob: -11.36775016784668
    10. '  ' → logprob: -11.74275016784668

Token 385: ' App' (ID: 2583)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0019288709154352546
    2. ' recurrence' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.37692928314209
    4. 'rep' → logprob: -17.501928329467773
    5. 'return' → logprob: -18.876928329467773
    6. 're' → logprob: -19.001928329467773
    7. ' rec' → logprob: -20.251928329467773
    8. '	rec' → logprob: -20.501928329467773
    9. 'Rec' → logprob: -21.626928329467773
    10. 'def' → logprob: -21.751928329467773

Token 386: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.000603668624535203
    2. 'eler' → logprob: -7.500603675842285
    3. 'elle' → logprob: -10.000603675842285
    4. 'l' → logprob: -12.625603675842285
    5. 'ele' → logprob: -14.625603675842285
    6. 'eleration' → logprob: -15.375603675842285
    7. 'le' → logprob: -15.750603675842285
    8. '\' → logprob: -15.875603675842285
    9. 'ell' → logprob: -15.875603675842285
    10. 'elé' → logprob: -15.875603675842285

Token 387: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5638275742530823
    2. ' recurrence' → logprob: -1.8138275146484375
    3. '(re' → logprob: -2.4388275146484375
    4. 'rec' → logprob: -2.4388275146484375
    5. '   ' → logprob: -2.5638275146484375
    6. 're' → logprob: -4.9388275146484375
    7. '(rec' → logprob: -6.1888275146484375
    8. 'def' → logprob: -6.1888275146484375
    9. '(r' → logprob: -6.1888275146484375
    10. '(
' → logprob: -6.6888275146484375

Token 388: ' fonction' (ID: 17610)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -9.662937372922897e-05
    2. ' recurrence' → logprob: -9.250096321105957
    3. 'def' → logprob: -14.750096321105957
    4. 'rep' → logprob: -17.750097274780273
    5. 'fonction' → logprob: -19.125097274780273
    6. 'preced' → logprob: -19.250097274780273
    7. '	rec' → logprob: -19.375097274780273
    8. '   ' → logprob: -19.625097274780273
    9. 'function' → logprob: -19.750097274780273
    10. 'sequence' → logprob: -19.750097274780273

Token 389: ' qui' (ID: 2780)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.005255814641714096
    2. ' recurrence' → logprob: -5.255255699157715
    3. 'def' → logprob: -11.380255699157715
    4. 're' → logprob: -12.130255699157715
    5. 'ré' → logprob: -13.130255699157715
    6. 'rep' → logprob: -14.005255699157715
    7. '(re' → logprob: -14.005255699157715
    8. '(rec' → logprob: -14.380255699157715
    9. '   ' → logprob: -14.505255699157715
    10. 'reci' → logprob: -16.25525665283203

Token 390: ' traite' (ID: 180696)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0863698348402977
    2. ' recurrence' → logprob: -2.836369752883911
    3. 'g' → logprob: -4.46136999130249
    4. 'calcul' → logprob: -5.33636999130249
    5. 'cal' → logprob: -6.33636999130249
    6. 'gener' → logprob: -6.46136999130249
    7. 'generate' → logprob: -7.33636999130249
    8. 'calc' → logprob: -7.33636999130249
    9. 're' → logprob: -7.46136999130249
    10. ' rec' → logprob: -7.83636999130249

Token 391: ' la' (ID: 557)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.02053407020866871
    2. ' recurrence' → logprob: -4.270534038543701
    3. 'def' → logprob: -6.145534038543701
    4. '(r' → logprob: -6.645534038543701
    5. '(rec' → logprob: -7.020534038543701
    6. 'la' → logprob: -7.270534038543701
    7. 'r' → logprob: -7.645534038543701
    8. '(re' → logprob: -7.645534038543701
    9. 're' → logprob: -9.39553451538086
    10. '(' → logprob: -9.64553451538086

Token 392: ' suite' (ID: 13800)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.05024969205260277
    2. ' recurrence' → logprob: -3.5502495765686035
    3. 'sequence' → logprob: -4.1752495765686035
    4. 'suite' → logprob: -5.8002495765686035
    5. ' sequence' → logprob: -7.1752495765686035
    6. 'r' → logprob: -7.1752495765686035
    7. 'ré' → logprob: -8.550250053405762
    8. 'sequ' → logprob: -9.925250053405762
    9. ' suite' → logprob: -10.050250053405762
    10. 're' → logprob: -10.800250053405762

Token 393: ' et' (ID: 859)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.18589623272418976
    2. '   ' → logprob: -1.9358962774276733
    3. ' recurrence' → logprob: -3.685896158218384
    4. 're' → logprob: -9.310895919799805
    5. '(rec' → logprob: -9.935895919799805
    6. 'r' → logprob: -10.810895919799805
    7. 'def' → logprob: -10.810895919799805
    8. '  ' → logprob: -10.935895919799805
    9. ' rec' → logprob: -11.310895919799805
    10. '_rec' → logprob: -11.560895919799805

Token 394: ' affiche' (ID: 127479)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.06364315003156662
    2. 'rec' → logprob: -3.063643217086792
    3. ' affiche' → logprob: -5.063642978668213
    4. 'print' → logprob: -5.563642978668213
    5. 'r' → logprob: -6.313642978668213
    6. ' recurrence' → logprob: -6.563642978668213
    7. 'l' → logprob: -7.688642978668213
    8. 'cal' → logprob: -8.188643455505371
    9. ' l' → logprob: -9.313643455505371
    10. ' rec' → logprob: -9.438643455505371

Token 395: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2282319813966751
    2. '(r' → logprob: -2.728231906890869
    3. ' les' → logprob: -2.978231906890869
    4. 'rec' → logprob: -3.353231906890869
    5. '(' → logprob: -3.478231906890869
    6. '(rec' → logprob: -4.478231906890869
    7. '(re' → logprob: -5.853231906890869
    8. 'la' → logprob: -6.228231906890869
    9. 'r' → logprob: -6.728231906890869
    10. '10' → logprob: -7.103231906890869

Token 396: ' résultats' (ID: 48985)
  Prédit: ' résultats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.8886699080467224
    2. 'val' → logprob: -1.6386699676513672
    3. '10' → logprob: -1.8886699676513672
    4. ' valeurs' → logprob: -1.8886699676513672
    5. 'd' → logprob: -3.513669967651367
    6. 'rés' → logprob: -3.638669967651367
    7. ' ' → logprob: -4.013669967651367
    8. ' dix' → logprob: -5.513669967651367
    9. '_' → logprob: -5.638669967651367
    10. ' val' → logprob: -5.763669967651367

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13805973529815674
    2. ' recurrence' → logprob: -2.138059616088867
    3. 'rec' → logprob: -4.513059616088867
    4. '	rec' → logprob: -9.638059616088867
    5. '    
' → logprob: -11.013059616088867
    6. ' rec' → logprob: -11.388059616088867
    7. '  ' → logprob: -12.513059616088867
    8. '   ' → logprob: -13.513059616088867
    9. ' recurrent' → logprob: -13.888059616088867
    10. 're' → logprob: -14.138059616088867

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22610269486904144
    2. ' recurrence' → logprob: -1.7261027097702026
    3. 'rec' → logprob: -3.726102590560913
    4. '	rec' → logprob: -8.226102828979492
    5. ' rec' → logprob: -11.476102828979492
    6. '    
' → logprob: -11.976102828979492
    7. '_rec' → logprob: -12.851102828979492
    8. '(rec' → logprob: -12.976102828979492
    9. ' recurrent' → logprob: -13.351102828979492
    10. ' recur' → logprob: -13.601102828979492

Token 399: ' recurrence' (ID: 127370)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.012535199522972107
    2. ' recurrence' → logprob: -4.387535095214844
    3. '   ' → logprob: -10.637535095214844
    4. 'rep' → logprob: -14.887535095214844
    5. 're' → logprob: -14.887535095214844
    6. ' rec' → logprob: -15.012535095214844
    7. '	rec' → logprob: -15.637535095214844
    8. 'reci' → logprob: -16.262535095214844
    9. 'Rec' → logprob: -16.512535095214844
    10. '  ' → logprob: -16.512535095214844

Token 400: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -13.875000953674316
    3. '_sequences' → logprob: -15.625000953674316
    4. '_seq' → logprob: -17.625001907348633
    5. ' _' → logprob: -18.125001907348633
    6. '_SEQUENCE' → logprob: -18.625001907348633
    7. '_s' → logprob: -19.000001907348633
    8. '_se' → logprob: -19.750001907348633
    9. '_series' → logprob: -19.875001907348633
    10. 'sequence' → logprob: -20.000001907348633

Token 401: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.02975349873304367
    2. '(' → logprob: -3.5297534465789795
    3. ' (' → logprob: -12.904753684997559
    4. '(
' → logprob: -14.529753684997559
    5. '(

' → logprob: -17.404752731323242
    6. '(run' → logprob: -18.029752731323242
    7. '(re' → logprob: -18.779752731323242
    8. 'r' → logprob: -19.029752731323242
    9. '(R' → logprob: -19.029752731323242
    10. ' ' → logprob: -19.529752731323242

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ',D' → logprob: -12.87500286102295
    3. ' ,' → logprob: -15.50000286102295
    4. ',
' → logprob: -17.875001907348633
    5. ')' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '‌,' → logprob: -19.250001907348633
    8. '',' → logprob: -19.875001907348633
    9. 'D' → logprob: -20.125001907348633
    10. '`,' → logprob: -20.250001907348633

Token 403: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.016039881855249405
    2. 'D' → logprob: -4.141039848327637
    3. ' ' → logprob: -13.141039848327637
    4. ' ' → logprob: -13.391039848327637
    5. '<|end|>' → logprob: -13.516039848327637
    6. ')' → logprob: -14.641039848327637
    7. ',' → logprob: -16.766040802001953
    8. ',D' → logprob: -16.891040802001953
    9. 'space' → logprob: -17.266040802001953
    10. 's' → logprob: -17.391040802001953

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ',x' → logprob: -10.750022888183594
    3. ' ,' → logprob: -13.375022888183594
    4. ')' → logprob: -16.000022888183594
    5. 'x' → logprob: -17.125022888183594
    6. ',
' → logprob: -18.000022888183594
    7. '‌,' → logprob: -18.250022888183594
    8. '`,' → logprob: -18.625022888183594
    9. ' x' → logprob: -18.625022888183594
    10. ',user' → logprob: -18.875022888183594

Token 405: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1269284337759018
    2. 'x' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. ')x' → logprob: -16.751928329467773
    5. '	x' → logprob: -16.751928329467773
    6. ')' → logprob: -16.876928329467773
    7. '(x' → logprob: -20.001928329467773
    8. ' ' → logprob: -20.251928329467773
    9. ',x' → logprob: -20.376928329467773
    10. '<|end|>' → logprob: -20.501928329467773

Token 406: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.04964934289455414
    2. ',' → logprob: -3.049649238586426
    3. '_' → logprob: -7.799649238586426
    4. 'initial' → logprob: -7.924649238586426
    5. ',_' → logprob: -9.049649238586426
    6. '_,' → logprob: -9.424649238586426
    7. ')' → logprob: -10.424649238586426
    8. '   ' → logprob: -10.924649238586426
    9. '_INITIAL' → logprob: -11.549649238586426
    10. '```' → logprob: -12.049649238586426

Token 407: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '   ' → logprob: -18.500001907348633
    5. ')

' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. ')}' → logprob: -19.500001907348633
    8. '),' → logprob: -19.625001907348633
    9. ')#' → logprob: -19.750001907348633
    10. ')`' → logprob: -20.000001907348633

Token 408: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2961512513575144e-05
    2. '
' → logprob: -10.750022888183594
    3. ' if' → logprob: -13.750022888183594
    4. '```' → logprob: -15.500022888183594
    5. '    
' → logprob: -16.500022888183594
    6. '

' → logprob: -16.750022888183594
    7. '  
' → logprob: -17.000022888183594
    8. '#' → logprob: -18.250022888183594
    9. '\n' → logprob: -18.250022888183594
    10. '\
' → logprob: -18.375022888183594

Token 409: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.7697225252486533e-06
    2. ' if' → logprob: -12.500003814697266
    3. 'If' → logprob: -24.000003814697266
    4. '```' → logprob: -25.250003814697266
    5. '	if' → logprob: -26.375003814697266
    6. 'ifdef' → logprob: -26.625003814697266
    7. 'i' → logprob: -27.875003814697266
    8. '__' → logprob: -28.000003814697266
    9. 'main' → logprob: -28.000003814697266
    10. 'ife' → logprob: -28.125003814697266

Token 410: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0004713066737167537
    2. 'eler' → logprob: -7.750471115112305
    3. 'elé' → logprob: -11.125471115112305
    4. 'ell' → logprob: -11.500471115112305
    5. 'elle' → logprob: -12.375471115112305
    6. 'lication' → logprob: -13.000471115112305
    7. 'ellation' → logprob: -13.250471115112305
    8. 'elf' → logprob: -13.250471115112305
    9. 'elif' → logprob: -13.375471115112305
    10. 'le' → logprob: -13.625471115112305

Token 411: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004442224279046059
    2. 'main' → logprob: -6.00444221496582
    3. 'def' → logprob: -6.62944221496582
    4. '_main' → logprob: -8.37944221496582
    5. ' if' → logprob: -8.50444221496582
    6. '(main' → logprob: -9.50444221496582
    7. '_' → logprob: -10.00444221496582
    8. ' main' → logprob: -10.37944221496582
    9. 'de' → logprob: -11.00444221496582
    10. 'rec' → logprob: -11.25444221496582

Token 412: ' point' (ID: 2438)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5765257477760315
    2. 'if' → logprob: -0.8265257477760315
    3. ' main' → logprob: -7.701525688171387
    4. ' if' → logprob: -9.326525688171387
    5. 'def' → logprob: -10.326525688171387
    6. '__' → logprob: -12.201525688171387
    7. 'module' → logprob: -13.701525688171387
    8. 'm' → logprob: -13.951525688171387
    9. '_main' → logprob: -14.076525688171387
    10. 'programme' → logprob: -14.326525688171387

Token 413: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09876571595668793
    2. 'd' → logprob: -2.4737656116485596
    3. '_' → logprob: -4.723765850067139
    4. '_d' → logprob: -7.098765850067139
    5. ' ' → logprob: -10.84876537322998
    6. ' _' → logprob: -11.22376537322998
    7. '	d' → logprob: -11.34876537322998
    8. ' ' → logprob: -11.34876537322998
    9. 'entrée' → logprob: -12.59876537322998
    10. ' 
' → logprob: -13.47376537322998

Token 414: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5777486562728882
    2. 'entrée' → logprob: -0.8277486562728882
    3. 'entr' → logprob: -7.077748775482178
    4. 'entry' → logprob: -7.202748775482178
    5. '’entrée' → logprob: -8.95274829864502
    6. ''' → logprob: -10.32774829864502
    7. '_' → logprob: -11.07774829864502
    8. ' entrée' → logprob: -11.82774829864502
    9. '__' → logprob: -11.95274829864502
    10. '_entry' → logprob: -12.07774829864502

Token 415: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018546271603554487
    2. ' if' → logprob: -6.376854419708252
    3. '
' → logprob: -9.37685489654541
    4. '

' → logprob: -10.12685489654541
    5. '    
' → logprob: -11.50185489654541
    6. 'main' → logprob: -12.50185489654541
    7. '  
' → logprob: -12.87685489654541
    8. ':' → logprob: -13.37685489654541
    9. '\' → logprob: -13.75185489654541
    10. '__' → logprob: -13.87685489654541

Token 416: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1002107709646225
    2. ' __' → logprob: -2.350210666656494
    3. '_' → logprob: -12.850211143493652
    4. 'name' → logprob: -14.600211143493652
    5. '___' → logprob: -14.850211143493652
    6. '_name' → logprob: -14.975211143493652
    7. '/__' → logprob: -15.600211143493652
    8. ' ' → logprob: -16.225210189819336
    9. 'nom' → logprob: -17.350210189819336
    10. '```' → logprob: -17.475210189819336

Token 417: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014164329506456852
    2. ' __' → logprob: -4.264164447784424
    3. 'name' → logprob: -14.139163970947266
    4. '___' → logprob: -17.264163970947266
    5. '_' → logprob: -17.389163970947266
    6. '_name' → logprob: -17.639163970947266
    7. ' ' → logprob: -18.014163970947266
    8. '/__' → logprob: -18.139163970947266
    9. ' name' → logprob: -18.639163970947266
    10. '.__' → logprob: -19.014163970947266

Token 418: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05622219666838646
    2. ' __' → logprob: -2.9312222003936768
    3. ' ==' → logprob: -7.306221961975098
    4. '==' → logprob: -8.056221961975098
    5. ' is' → logprob: -9.306221961975098
    6. '_name' → logprob: -9.931221961975098
    7. ' est' → logprob: -9.931221961975098
    8. 'est' → logprob: -10.056221961975098
    9. 'name' → logprob: -10.431221961975098
    10. 's' → logprob: -11.056221961975098

Token 419: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07028396427631378
    2. ' __' → logprob: -2.695283889770508
    3. ' run' → logprob: -8.695283889770508
    4. ' executed' → logprob: -10.070283889770508
    5. 'name' → logprob: -10.320283889770508
    6. 'run' → logprob: -10.570283889770508
    7. '_' → logprob: -10.945283889770508
    8. ' exécut' → logprob: -10.945283889770508
    9. '_name' → logprob: -11.320283889770508
    10. '_run' → logprob: -11.445283889770508

Token 420: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018641255795955658
    2. 'if' → logprob: -4.393641471862793
    3. ' __' → logprob: -5.518641471862793
    4. ' if' → logprob: -7.268641471862793
    5. 'é' → logprob: -7.518641471862793
    6. '_' → logprob: -7.893641471862793
    7. 'e' → logprob: -8.143641471862793
    8. 'd' → logprob: -10.518641471862793
    9. ' en' → logprob: -10.768641471862793
    10. 'ed' → logprob: -10.768641471862793

Token 421: ' directement' (ID: 52317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6669690012931824
    2. '__' → logprob: -0.7919690012931824
    3. ' if' → logprob: -3.916969060897827
    4. ' under' → logprob: -4.916968822479248
    5. ' __' → logprob: -5.791968822479248
    6. ' as' → logprob: -6.541968822479248
    7. ' en' → logprob: -7.416968822479248
    8. 'as' → logprob: -7.791968822479248
    9. '```' → logprob: -8.166969299316406
    10. '_name' → logprob: -9.041969299316406

Token 422: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0165634136646986
    2. 'if' → logprob: -4.391563415527344
    3. '

' → logprob: -5.516563415527344
    4. '```' → logprob: -11.766563415527344
    5. '
' → logprob: -12.016563415527344
    6. ' 
' → logprob: -12.266563415527344
    7. ' if' → logprob: -12.766563415527344
    8. '  
' → logprob: -13.016563415527344
    9. '\n' → logprob: -13.891563415527344
    10. ':
' → logprob: -15.391563415527344

Token 423: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -15.625
    3. '
' → logprob: -17.125
    4. '```' → logprob: -19.75
    5. 'i' → logprob: -20.5
    6. '\
' → logprob: -23.5
    7. '#if' → logprob: -23.875
    8. '__' → logprob: -24.375
    9. '	if' → logprob: -24.375
    10. '    
' → logprob: -24.375

Token 424: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04309476912021637
    2. '__' → logprob: -3.1680948734283447
    3. ' ' → logprob: -9.543094635009766
    4. ' ' → logprob: -11.168094635009766
    5. '_' → logprob: -11.918094635009766
    6. ' _' → logprob: -14.418094635009766
    7. ' ' → logprob: -14.543094635009766
    8. 'space' → logprob: -15.043094635009766
    9. ' ‌' → logprob: -15.293094635009766
    10. '_name' → logprob: -15.418094635009766

Token 425: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10589943826198578
    2. ' ==' → logprob: -2.6058993339538574
    3. '==' → logprob: -4.230899333953857
    4. ' __' → logprob: -4.480899333953857
    5. 'name' → logprob: -7.855899333953857
    6. '_' → logprob: -8.105899810791016
    7. '=="' → logprob: -10.480899810791016
    8. '=' → logprob: -10.730899810791016
    9. '=='' → logprob: -11.355899810791016
    10. '_name' → logprob: -12.355899810791016

Token 426: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.500000953674316
    3. '__.__' → logprob: -15.750000953674316
    4. '____' → logprob: -15.875000953674316
    5. '___' → logprob: -16.125
    6. '==' → logprob: -16.75
    7. '______' → logprob: -17.875
    8. '__
' → logprob: -18.25
    9. '__
' → logprob: -18.75
    10. '__('' → logprob: -19.125

Token 427: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.166338137816638e-05
    2. '==' → logprob: -10.500031471252441
    3. ' ==' → logprob: -13.000031471252441
    4. '___' → logprob: -14.625031471252441
    5. '_' → logprob: -15.000031471252441
    6. '=="' → logprob: -15.250031471252441
    7. '____' → logprob: -15.375031471252441
    8. '__.__' → logprob: -15.500031471252441
    9. ' __' → logprob: -16.000032424926758
    10. '__,' → logprob: -16.625032424926758

Token 428: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018234925344586372
    2. ''' → logprob: -4.018234729766846
    3. ' "__' → logprob: -9.393235206604004
    4. ' '__' → logprob: -14.018235206604004
    5. '__' → logprob: -14.143235206604004
    6. '"name' → logprob: -17.268234252929688
    7. '"user' → logprob: -17.393234252929688
    8. ''"' → logprob: -17.518234252929688
    9. '"'' → logprob: -18.018234252929688
    10. '("__' → logprob: -18.143234252929688

Token 429: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.625
    3. '_main' → logprob: -20.25
    4. 'm' → logprob: -20.25
    5. ' main' → logprob: -20.5
    6. '"' → logprob: -21.0
    7. '__' → logprob: -21.125
    8. 'ma' → logprob: -21.25
    9. 'maine' → logprob: -22.625
    10. '	main' → logprob: -23.0

Token 430: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38687863945961
    2. '__":
' → logprob: -1.1368786096572876
    3. '_' → logprob: -12.636878967285156
    4. '__':
' → logprob: -13.011878967285156
    5. '_"' → logprob: -13.511878967285156
    6. '"' → logprob: -14.386878967285156
    7. '___' → logprob: -16.386878967285156
    8. '__("' → logprob: -17.136878967285156
    9. '__["' → logprob: -17.386878967285156
    10. '```' → logprob: -17.761878967285156

Token 431: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4098374843597412
    2. '__' → logprob: -1.2848374843597412
    3. 'main' → logprob: -3.159837484359741
    4. ' main' → logprob: -4.53483772277832
    5. ''' → logprob: -5.65983772277832
    6. 'True' → logprob: -7.15983772277832
    7. ' __' → logprob: -7.28483772277832
    8. ' "__' → logprob: -7.40983772277832
    9. ' True' → logprob: -8.78483772277832
    10. 'run' → logprob: -9.03483772277832

Token 432: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.836499985889532e-05
    2. ' main' → logprob: -9.7500581741333
    3. '	main' → logprob: -19.375059127807617
    4. '_main' → logprob: -22.875059127807617
    5. '   ' → logprob: -23.000059127807617
    6. '(main' → logprob: -23.625059127807617
    7. 'm' → logprob: -24.375059127807617
    8. '.main' → logprob: -24.500059127807617
    9. 'Main' → logprob: -24.875059127807617
    10. 'maine' → logprob: -25.125059127807617

Token 433: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002097326098009944
    2. '()
' → logprob: -7.252097129821777
    3. '<|end|>' → logprob: -7.502097129821777
    4. '(' → logprob: -7.877097129821777
    5. '
' → logprob: -8.002097129821777
    6. '```' → logprob: -9.877097129821777
    7. ')' → logprob: -11.127097129821777
    8. '(
' → logprob: -11.502097129821777
    9. '#' → logprob: -11.502097129821777
    10. '()\' → logprob: -11.752097129821777


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 431
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 35.96%
Précision adaptée (1ère position): 37.82%
Précision (top 10): 76.33%
================================================================================
