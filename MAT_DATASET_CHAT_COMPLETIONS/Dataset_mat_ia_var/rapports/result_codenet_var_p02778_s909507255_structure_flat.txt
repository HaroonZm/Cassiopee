================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
result = ''
i = 0
while i < len(s):
    result = result + 'x'
    i = i + 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017089712200686336
    2. '()' → logprob: -7.501708984375
    3. ''' → logprob: -8.001708984375
    4. '`' → logprob: -8.501708984375
    5. '(
' → logprob: -8.501708984375
    6. '('' → logprob: -8.876708984375
    7. '"' → logprob: -9.251708984375
    8. '```' → logprob: -9.751708984375
    9. ''s' → logprob: -10.501708984375
    10. ')' → logprob: -11.001708984375

Token 4: 'result' (ID: 2521)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4679870307445526
    2. '[' → logprob: -1.967987060546875
    3. ' =' → logprob: -2.092987060546875
    4. '.' → logprob: -2.342987060546875
    5. '_' → logprob: -5.592987060546875
    6. '+' → logprob: -5.717987060546875
    7. '[:]' → logprob: -6.342987060546875
    8. '(' → logprob: -6.842987060546875
    9. 's' → logprob: -6.842987060546875
    10. ' ' → logprob: -7.092987060546875

Token 6: ' ''
' (ID: 25366)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14347338676452637
    2. 's' → logprob: -2.0184733867645264
    3. ' ' → logprob: -7.7684736251831055
    4. ' int' → logprob: -9.018473625183105
    5. 'int' → logprob: -9.143473625183105
    6. '"' → logprob: -10.268473625183105
    7. ' []' → logprob: -10.893473625183105
    8. ' "' → logprob: -11.018473625183105
    9. ''' → logprob: -11.268473625183105
    10. ''s' → logprob: -11.643473625183105

Token 7: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005631658714264631
    2. ' for' → logprob: -5.380631446838379
    3. '```' → logprob: -7.505631446838379
    4. '\n' → logprob: -8.130631446838379
    5. '
' → logprob: -10.255631446838379
    6. ''' → logprob: -10.255631446838379
    7. '\' → logprob: -10.505631446838379
    8. '`' → logprob: -10.755631446838379
    9. 'i' → logprob: -10.880631446838379
    10. '``' → logprob: -11.380631446838379

Token 8: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.30805885791778564
    2. 'n' → logprob: -1.6830588579177856
    3. '=' → logprob: -2.808058738708496
    4. '+' → logprob: -4.808058738708496
    5. 's' → logprob: -5.808058738708496
    6. 'nd' → logprob: -5.808058738708496
    7. ' =' → logprob: -6.058058738708496
    8. 'nt' → logprob: -7.183058738708496
    9. ' +=' → logprob: -7.558058738708496
    10. '+=' → logprob: -8.183058738708496

Token 9: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018177801743149757
    2. ' ' → logprob: -4.0181779861450195
    3. '1' → logprob: -10.51817798614502
    4. '2' → logprob: -14.14317798614502
    5. 'len' → logprob: -16.643177032470703
    6. ' len' → logprob: -17.018177032470703
    7. 's' → logprob: -18.018177032470703
    8. '<|end|>' → logprob: -18.268177032470703
    9. '4' → logprob: -19.018177032470703
    10. ' s' → logprob: -19.143177032470703

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00075459701474756
    2. ' ' → logprob: -7.5007548332214355
    3. '1' → logprob: -8.625754356384277
    4. 'len' → logprob: -11.250754356384277
    5. '2' → logprob: -11.875754356384277
    6. '-' → logprob: -14.125754356384277
    7. 's' → logprob: -14.750754356384277
    8. ' len' → logprob: -14.875754356384277
    9. ' -' → logprob: -16.250755310058594
    10. '3' → logprob: -16.375755310058594

Token 11: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5677350759506226
    2. ' while' → logprob: -1.3177350759506226
    3. ':' → logprob: -2.442735195159912
    4. '<|end|>' → logprob: -3.567735195159912
    5. '
' → logprob: -4.317735195159912
    6. ' ' → logprob: -4.442735195159912
    7. '```' → logprob: -5.567735195159912
    8. ' 
' → logprob: -6.067735195159912
    9. '+' → logprob: -6.192735195159912
    10. ''' → logprob: -6.192735195159912

Token 12: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22912368178367615
    2. ' while' → logprob: -1.7291237115859985
    3. ':' → logprob: -4.229123592376709
    4. '```' → logprob: -4.729123592376709
    5. '<|end|>' → logprob: -7.229123592376709
    6. 'n' → logprob: -7.229123592376709
    7. '<' → logprob: -7.979123592376709
    8. 'While' → logprob: -7.979123592376709
    9. ' ' → logprob: -8.229124069213867
    10. 'w' → logprob: -8.479124069213867

Token 13: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1348666250705719
    2. ' ' → logprob: -2.759866714477539
    3. 'i' → logprob: -3.259866714477539
    4. ' s' → logprob: -4.009866714477539
    5. 's' → logprob: -5.134866714477539
    6. ' ' → logprob: -8.009866714477539
    7. '(i' → logprob: -10.634866714477539
    8. '<|end|>' → logprob: -10.759866714477539
    9. ' (' → logprob: -11.134866714477539
    10. '  ' → logprob: -11.384866714477539

Token 14: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08948734402656555
    2. '<' → logprob: -2.464487314224243
    3. ' ' → logprob: -7.839487552642822
    4. '<len' → logprob: -9.714487075805664
    5. ' <=' → logprob: -10.214487075805664
    6. ' <
' → logprob: -10.964487075805664
    7. '<size' → logprob: -11.464487075805664
    8. 's' → logprob: -11.839487075805664
    9. '[' → logprob: -12.714487075805664
    10. '<=' → logprob: -13.089487075805664

Token 15: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.01416798122227192
    2. 'len' → logprob: -4.264167785644531
    3. '(len' → logprob: -12.389167785644531
    4. ' ' → logprob: -15.514167785644531
    5. ' s' → logprob: -16.63916778564453
    6. '=len' → logprob: -17.01416778564453
    7. '<len' → logprob: -17.76416778564453
    8. '[len' → logprob: -18.88916778564453
    9. '	len' → logprob: -19.01416778564453
    10. ' n' → logprob: -19.26416778564453

Token 16: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00596991553902626
    2. '(' → logprob: -5.130970001220703
    3. 's' → logprob: -10.130970001220703
    4. '(
' → logprob: -14.005970001220703
    5. ' (' → logprob: -15.380970001220703
    6. '(i' → logprob: -16.130970001220703
    7. '(result' → logprob: -16.130970001220703
    8. ')' → logprob: -16.880970001220703
    9. '(

' → logprob: -16.880970001220703
    10. '(input' → logprob: -17.255970001220703

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18176411092281342
    2. ')' → logprob: -1.8067641258239746
    3. ' ):' → logprob: -7.556764125823975
    4. ' and' → logprob: -7.556764125823975
    5. '):
' → logprob: -7.681764125823975
    6. ':' → logprob: -8.306763648986816
    7. ' )' → logprob: -9.431763648986816
    8. '[' → logprob: -9.931763648986816
    9. 'and' → logprob: -10.056763648986816
    10. ' ' → logprob: -11.181763648986816

Token 18: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3752385377883911
    2. ' if' → logprob: -1.3752385377883911
    3. '   ' → logprob: -3.6252384185791016
    4. 's' → logprob: -5.125238418579102
    5. '```' → logprob: -5.125238418579102
    6. ' c' → logprob: -5.500238418579102
    7. ' s' → logprob: -5.625238418579102
    8. ' 
' → logprob: -5.750238418579102
    9. ' ```' → logprob: -6.000238418579102
    10. 'if' → logprob: -6.250238418579102

Token 19: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38946905732154846
    2. 'if' → logprob: -1.389469027519226
    3. 'c' → logprob: -3.8894691467285156
    4. 's' → logprob: -4.139469146728516
    5. '   ' → logprob: -4.389469146728516
    6. ' c' → logprob: -5.264469146728516
    7. 'ch' → logprob: -5.264469146728516
    8. ' ' → logprob: -5.389469146728516
    9. 'char' → logprob: -6.139469146728516
    10. ' s' → logprob: -6.264469146728516

Token 20: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.004684899467974901
    2. '+=' → logprob: -5.879684925079346
    3. '+' → logprob: -6.754684925079346
    4. '+='' → logprob: -8.129684448242188
    5. ' +' → logprob: -8.754684448242188
    6. '.append' → logprob: -8.754684448242188
    7. '[' → logprob: -9.504684448242188
    8. '+="' → logprob: -11.129684448242188
    9. ' ' → logprob: -11.879684448242188
    10. ' .=' → logprob: -13.129684448242188

Token 21: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.47617727518081665
    2. 'result' → logprob: -0.9761772751808167
    3. ' s' → logprob: -6.601177215576172
    4. 's' → logprob: -7.601177215576172
    5. ' ' → logprob: -9.101177215576172
    6. '+' → logprob: -9.976177215576172
    7. ''' → logprob: -10.976177215576172
    8. ' '' → logprob: -11.601177215576172
    9. ''s' → logprob: -11.726177215576172
    10. '(result' → logprob: -11.851177215576172

Token 22: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.062040284276008606
    2. ' +' → logprob: -2.812040328979492
    3. '+s' → logprob: -10.312040328979492
    4. '+i' → logprob: -10.812040328979492
    5. 's' → logprob: -12.187040328979492
    6. '.replace' → logprob: -13.062040328979492
    7. '.' → logprob: -13.687040328979492
    8. '+'' → logprob: -13.687040328979492
    9. '[::-' → logprob: -14.187040328979492
    10. '+
' → logprob: -14.187040328979492

Token 23: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11172696202993393
    2. ' s' → logprob: -2.361726999282837
    3. ''' → logprob: -5.236726760864258
    4. ''s' → logprob: -5.486726760864258
    5. ' '' → logprob: -6.861726760864258
    6. '"' → logprob: -8.361726760864258
    7. ' ' → logprob: -8.486726760864258
    8. '(s' → logprob: -8.736726760864258
    9. '"s' → logprob: -9.736726760864258
    10. 'chr' → logprob: -9.861726760864258

Token 24: 'x' (ID: 87)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02527271956205368
    2. ''' → logprob: -4.275272846221924
    3. '*' → logprob: -4.900272846221924
    4. ''*' → logprob: -6.775272846221924
    5. ''s' → logprob: -7.775272846221924
    6. '(' → logprob: -8.150272369384766
    7. 'a' → logprob: -8.150272369384766
    8. ' ' → logprob: -8.775272369384766
    9. '+' → logprob: -9.025272369384766
    10. '('' → logprob: -9.025272369384766

Token 25: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.028126873075962067
    2. '')' → logprob: -4.1531267166137695
    3. 's' → logprob: -5.2781267166137695
    4. ''s' → logprob: -6.4031267166137695
    5. 'x' → logprob: -6.7781267166137695
    6. ' ' → logprob: -6.9031267166137695
    7. 'a' → logprob: -6.9031267166137695
    8. ')' → logprob: -7.6531267166137695
    9. ''''' → logprob: -7.9031267166137695
    10. 'i' → logprob: -8.27812671661377

Token 26: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0960582494735718
    2. '   ' → logprob: -1.2210582494735718
    3. ' ' → logprob: -1.4710582494735718
    4. '<|end|>' → logprob: -2.4710583686828613
    5. '  ' → logprob: -3.5960583686828613
    6. ' i' → logprob: -4.721058368682861
    7. '    ' → logprob: -5.221058368682861
    8. '    
' → logprob: -5.721058368682861
    9. '<|end|>' → logprob: -6.346058368682861
    10. '  
' → logprob: -6.346058368682861

Token 27: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.048402704298496246
    2. ' ' → logprob: -3.798402786254883
    3. '   ' → logprob: -4.048402786254883
    4. 'if' → logprob: -5.923402786254883
    5. ' i' → logprob: -6.673402786254883
    6. '    ' → logprob: -6.673402786254883
    7. '  ' → logprob: -7.048402786254883
    8. ' if' → logprob: -8.173402786254883
    9. '<|end|>' → logprob: -8.173402786254883
    10. 's' → logprob: -9.048402786254883

Token 28: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004641544655896723
    2. '+=' → logprob: -8.50046443939209
    3. ' +' → logprob: -8.62546443939209
    4. ' +=' → logprob: -9.75046443939209
    5. '++' → logprob: -11.37546443939209
    6. '=' → logprob: -11.87546443939209
    7. '+++' → logprob: -12.87546443939209
    8. ' ' → logprob: -13.62546443939209
    9. '+='' → logprob: -16.250463485717773
    10. '<|end|>' → logprob: -16.375463485717773

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31331607699394226
    2. 'i' → logprob: -1.3133161067962646
    3. '+' → logprob: -9.938316345214844
    4. '0' → logprob: -13.188316345214844
    5. ' ' → logprob: -13.563316345214844
    6. '	i' → logprob: -13.563316345214844
    7. '+i' → logprob: -14.563316345214844
    8. '1' → logprob: -15.563316345214844
    9. '=i' → logprob: -15.688316345214844
    10. '```' → logprob: -16.063316345214844

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005941479001194239
    2. ' +' → logprob: -5.130941390991211
    3. '1' → logprob: -11.630941390991211
    4. '++' → logprob: -13.380941390991211
    5. ' ' → logprob: -13.505941390991211
    6. '+++' → logprob: -15.130941390991211
    7. ' plus' → logprob: -15.255941390991211
    8. '+i' → logprob: -15.255941390991211
    9. '+
' → logprob: -16.63094139099121
    10. '＋' → logprob: -17.38094139099121

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001171652227640152
    2. ' ' → logprob: -6.751171588897705
    3. '2' → logprob: -14.376172065734863
    4. '   ' → logprob: -15.001172065734863
    5. '```' → logprob: -15.626172065734863
    6. '4' → logprob: -16.001171112060547
    7. '  ' → logprob: -17.126171112060547
    8. 's' → logprob: -17.313671112060547
    9. '3' → logprob: -17.313671112060547
    10. '0' → logprob: -17.438671112060547

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -11.375022888183594
    3. '2' → logprob: -11.625022888183594
    4. '3' → logprob: -13.750022888183594
    5. '4' → logprob: -14.625022888183594
    6. '```' → logprob: -15.437522888183594
    7. '   ' → logprob: -15.687522888183594
    8. '0' → logprob: -16.125022888183594
    9. 's' → logprob: -16.125022888183594
    10. '5' → logprob: -16.250022888183594

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018210777780041099
    2. '(result' → logprob: -6.626821041107178
    3. '('' → logprob: -7.626821041107178
    4. '(s' → logprob: -12.751821517944336
    5. '()' → logprob: -13.251821517944336
    6. '("("' → logprob: -13.626821517944336
    7. ' (' → logprob: -14.751821517944336
    8. 'result' → logprob: -15.126821517944336
    9. '(
' → logprob: -15.376821517944336
    10. '(res' → logprob: -15.876821517944336

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -13.125004768371582
    3. '))' → logprob: -13.500004768371582
    4. '')' → logprob: -13.500004768371582
    5. '`)' → logprob: -15.625004768371582
    6. ')`' → logprob: -16.0000057220459
    7. '")' → logprob: -17.6250057220459
    8. ')))' → logprob: -18.7500057220459
    9. ')
' → logprob: -19.2500057220459
    10. '(' → logprob: -19.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 29.41%
Précision adaptée (1ère position): 32.35%
Précision (top 10): 70.59%
================================================================================
