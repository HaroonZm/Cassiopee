================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def enigmatic_entrance():
    foo = lambda: map(int, input().split())
    values = list(foo())
    N, K = values[0], values[1]
    result = None
    check_oddity = lambda x: x & 1
    if check_oddity(K):
        cubic = pow(N // K, 3)
        print(cubic)
        return
    intermediate = N // (K // 2)
    legacy = N // K
    out = pow(legacy,3) + pow(intermediate-legacy,3)
    print(out)

[enigmatic_entrance() for _ in range(1) if __name__=="__main__"]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' enigmatic' (ID: 196949)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: 'entr' (ID: 12792)
  Prédit: 'function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'function' → logprob: -0.5542293190956116
    2. '_function' → logprob: -1.4292292594909668
    3. 'code' → logprob: -2.429229259490967
    4. 'p' → logprob: -3.679229259490967
    5. '_code' → logprob: -4.179229259490967
    6. 'cipher' → logprob: -4.679229259490967
    7. 'message' → logprob: -4.804229259490967
    8. 'word' → logprob: -5.554229259490967
    9. 'pattern' → logprob: -5.804229259490967
    10. '_en' → logprob: -5.804229259490967

Token 4: 'ance' (ID: 766)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01120485458523035
    2. 'o' → logprob: -4.511204719543457
    3. '_' → logprob: -10.136204719543457
    4. '```' → logprob: -10.386204719543457
    5. 'i' → logprob: -10.636204719543457
    6. '_y' → logprob: -10.761204719543457
    7. '_o' → logprob: -11.511204719543457
    8. 'a' → logprob: -11.886204719543457
    9. 'e' → logprob: -11.886204719543457
    10. 'ying' → logprob: -11.886204719543457

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12116902321577072
    2. '():' → logprob: -2.496169090270996
    3. '(:' → logprob: -3.996169090270996
    4. ':' → logprob: -4.621169090270996
    5. '_' → logprob: -5.871169090270996
    6. '_:' → logprob: -8.371169090270996
    7. '```' → logprob: -8.621169090270996
    8. '(_:' → logprob: -9.121169090270996
    9. '(
' → logprob: -10.496169090270996
    10. '(":' → logprob: -10.621169090270996

Token 6: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5888959169387817
    2. '   ' → logprob: -1.4638959169387817
    3. '\' → logprob: -1.8388959169387817
    4. '```' → logprob: -3.713895797729492
    5. ':' → logprob: -3.963895797729492
    6. '    
' → logprob: -6.088895797729492
    7. '    ' → logprob: -6.588895797729492
    8. '\r' → logprob: -6.963895797729492
    9. '(' → logprob: -7.213895797729492
    10. ''\' → logprob: -7.463895797729492

Token 7: ' foo' (ID: 30551)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6639140248298645
    2. '   ' → logprob: -0.7889140248298645
    3. '\' → logprob: -4.038914203643799
    4. 'return' → logprob: -5.913914203643799
    5. '\t' → logprob: -6.038914203643799
    6. '```' → logprob: -6.163914203643799
    7. '\r' → logprob: -6.288914203643799
    8. '    
' → logprob: -7.288914203643799
    9. '#' → logprob: -7.413914203643799
    10. '    ' → logprob: -7.538914203643799

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18998919427394867
    2. '_' → logprob: -1.9399892091751099
    3. '.' → logprob: -3.8149890899658203
    4. ')' → logprob: -5.68998908996582
    5. '=' → logprob: -6.81498908996582
    6. '_bar' → logprob: -7.06498908996582
    7. '()' → logprob: -7.68998908996582
    8. 's' → logprob: -7.81498908996582
    9. ' ' → logprob: -8.56498908996582
    10. '+' → logprob: -9.31498908996582

Token 9: ' lambda' (ID: 27871)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4759349524974823
    2. ' ' → logprob: -1.7259349822998047
    3. ' bar' → logprob: -2.8509349822998047
    4. ' "' → logprob: -2.9759349822998047
    5. ''' → logprob: -3.8509349822998047
    6. ' []' → logprob: -4.100934982299805
    7. ' '' → logprob: -4.475934982299805
    8. 'bar' → logprob: -4.725934982299805
    9. '42' → logprob: -4.975934982299805
    10. '   ' → logprob: -4.975934982299805

Token 10: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022120781242847443
    2. '  ' → logprob: -4.897120952606201
    3. ' x' → logprob: -5.147120952606201
    4. '    ' → logprob: -6.022120952606201
    5. ' lambda' → logprob: -6.897120952606201
    6. ' (' → logprob: -7.022120952606201
    7. ' a' → logprob: -7.147120952606201
    8. ' s' → logprob: -7.522120952606201
    9. ' ' → logprob: -7.897120952606201
    10. 'x' → logprob: -8.022120475769043

Token 11: ' map' (ID: 4014)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.2090352773666382
    2. ' ' → logprob: -1.5840352773666382
    3. ' not' → logprob: -1.7090352773666382
    4. '"' → logprob: -2.5840353965759277
    5. ' None' → logprob: -2.8340353965759277
    6. ''' → logprob: -3.5840353965759277
    7. ' x' → logprob: -3.5840353965759277
    8. ' "' → logprob: -4.084035396575928
    9. '0' → logprob: -4.084035396575928
    10. ' '' → logprob: -4.459035396575928

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03653308004140854
    2. '(lambda' → logprob: -3.4115331172943115
    3. '<|end|>' → logprob: -6.911532878875732
    4. '.' → logprob: -7.036532878875732
    5. '(
' → logprob: -8.16153335571289
    6. ')' → logprob: -9.28653335571289
    7. '_' → logprob: -9.91153335571289
    8. ' (' → logprob: -9.91153335571289
    9. '_space' → logprob: -10.03653335571289
    10. '(

' → logprob: -10.28653335571289

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9870184659957886
    2. ')' → logprob: -1.2370184659957886
    3. '<|end|>' → logprob: -1.2370184659957886
    4. '(' → logprob: -3.237018585205078
    5. '<|end|>' → logprob: -6.112018585205078
    6. 's' → logprob: -6.237018585205078
    7. '...' → logprob: -7.862018585205078
    8. ' (' → logprob: -7.987018585205078
    9. ' ,' → logprob: -8.237018585205078
    10. '(user' → logprob: -8.487018585205078

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6930404901504517
    2. ' input' → logprob: -0.9430404901504517
    3. '"' → logprob: -3.943040370941162
    4. ''' → logprob: -4.193040370941162
    5. ')' → logprob: -4.193040370941162
    6. '['' → logprob: -4.318040370941162
    7. '[' → logprob: -4.318040370941162
    8. '(input' → logprob: -5.318040370941162
    9. ' '' → logprob: -5.443040370941162
    10. ' "' → logprob: -5.443040370941162

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1699204295873642
    2. '(' → logprob: -2.6699204444885254
    3. ')' → logprob: -3.0449204444885254
    4. '()' → logprob: -3.5449204444885254
    5. '(""))' → logprob: -5.669920444488525
    6. '('' → logprob: -6.294920444488525
    7. '(()' → logprob: -6.544920444488525
    8. '());' → logprob: -7.294920444488525
    9. '<|end|>' → logprob: -7.669920444488525
    10. '()))' → logprob: -7.919920444488525

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024835076183080673
    2. 'strip' → logprob: -6.002483367919922
    3. 'rstrip' → logprob: -12.127483367919922
    4. ' split' → logprob: -13.127483367919922
    5. 'read' → logprob: -15.377483367919922
    6. ')' → logprob: -16.627483367919922
    7. '(split' → logprob: -17.252483367919922
    8. 'spl' → logprob: -17.377483367919922
    9. 'replace' → logprob: -17.877483367919922
    10. 'startswith' → logprob: -18.127483367919922

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3913230895996094
    2. '()))' → logprob: -1.1413230895996094
    3. '))' → logprob: -6.266323089599609
    4. '()' → logprob: -6.391323089599609
    5. ')' → logprob: -7.141323089599609
    6. '(' → logprob: -10.64132308959961
    7. '())
' → logprob: -11.26632308959961
    8. '())))' → logprob: -11.26632308959961
    9. '()))
' → logprob: -11.39132308959961
    10. '()),' → logprob: -12.76632308959961

Token 18: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9665584564208984
    2. '
' → logprob: -2.3415584564208984
    3. ' ' → logprob: -2.4665584564208984
    4. '()' → logprob: -2.4665584564208984
    5. '   ' → logprob: -2.4665584564208984
    6. '    
' → logprob: -2.9665584564208984
    7. '<|end|>' → logprob: -3.3415584564208984
    8. '(' → logprob: -3.5915584564208984
    9. 'return' → logprob: -3.8415584564208984
    10. '\' → logprob: -4.091558456420898

Token 19: ' values' (ID: 4824)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1524930000305176
    2. 'bar' → logprob: -1.4024930000305176
    3. '   ' → logprob: -2.1524930000305176
    4. 'x' → logprob: -2.2774930000305176
    5. 'for' → logprob: -2.5274930000305176
    6. '    
' → logprob: -3.5274930000305176
    7. 'a' → logprob: -3.7774930000305176
    8. 'result' → logprob: -4.027493000030518
    9. 'foo' → logprob: -4.152493000030518
    10. '`' → logprob: -4.527493000030518

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3045174777507782
    2. '(' → logprob: -1.9295175075531006
    3. '[' → logprob: -2.5545175075531006
    4. '()' → logprob: -4.3045172691345215
    5. '=' → logprob: -4.5545172691345215
    6. ' =' → logprob: -4.9295172691345215
    7. '[:]' → logprob: -5.4295172691345215
    8. ')' → logprob: -6.9295172691345215
    9. '[]' → logprob: -6.9295172691345215
    10. '   ' → logprob: -8.05451774597168

Token 21: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.45753616094589233
    2. ' foo' → logprob: -1.207536220550537
    3. 'list' → logprob: -3.082536220550537
    4. 'foo' → logprob: -3.832536220550537
    5. ' tuple' → logprob: -8.207535743713379
    6. ' []' → logprob: -8.332535743713379
    7. '   ' → logprob: -9.582535743713379
    8. ' ' → logprob: -10.082535743713379
    9. '[]' → logprob: -10.457535743713379
    10. ' [' → logprob: -11.582535743713379

Token 22: '(foo' (ID: 171155)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3523813784122467
    2. '(foo' → logprob: -1.2273813486099243
    3. '(values' → logprob: -5.602381229400635
    4. '(

' → logprob: -9.977381706237793
    5. '()' → logprob: -10.227381706237793
    6. '(
' → logprob: -10.602381706237793
    7. '<|end|>' → logprob: -10.852381706237793
    8. 'foo' → logprob: -11.352381706237793
    9. '(range' → logprob: -11.477381706237793
    10. '(user' → logprob: -11.852381706237793

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01875545084476471
    2. '()))' → logprob: -4.0187554359436035
    3. '()' → logprob: -7.7687554359436035
    4. ')' → logprob: -8.768755912780762
    5. '))' → logprob: -11.268755912780762
    6. ' ())' → logprob: -12.018755912780762
    7. '(' → logprob: -13.018755912780762
    8. '())
' → logprob: -13.643755912780762
    9. '()),' → logprob: -13.768755912780762
    10. '())))' → logprob: -14.018755912780762

Token 24: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4594324827194214
    2. '<|end|>' → logprob: -1.4594324827194214
    3. ')' → logprob: -1.8344324827194214
    4. '   ' → logprob: -2.584432601928711
    5. '()' → logprob: -2.959432601928711
    6. '\' → logprob: -2.959432601928711
    7. ':' → logprob: -3.334432601928711
    8. ' ' → logprob: -3.709432601928711
    9. ',' → logprob: -3.834432601928711
    10. '[' → logprob: -4.334432601928711

Token 25: ' N' (ID: 478)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0262641906738281
    2. '[' → logprob: -1.7762641906738281
    3. '   ' → logprob: -1.9012641906738281
    4. '<|end|>' → logprob: -1.9012641906738281
    5. ' ' → logprob: -2.776264190673828
    6. ')' → logprob: -3.776264190673828
    7. ' if' → logprob: -4.276264190673828
    8. '#' → logprob: -4.526264190673828
    9. '\' → logprob: -4.901264190673828
    10. ',' → logprob: -5.026264190673828

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06396514922380447
    2. '=' → logprob: -2.813965082168579
    3. ',' → logprob: -6.938965320587158
    4. '.' → logprob: -7.688965320587158
    5. ' ' → logprob: -7.938965320587158
    6. '=int' → logprob: -9.68896484375
    7. ')' → logprob: -9.81396484375
    8. '_' → logprob: -10.56396484375
    9. '<|end|>' → logprob: -11.43896484375
    10. '  ' → logprob: -11.68896484375

Token 27: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030090397223830223
    2. 'values' → logprob: -4.65509033203125
    3. '<|end|>' → logprob: -4.65509033203125
    4. ' values' → logprob: -5.40509033203125
    5. '  ' → logprob: -6.90509033203125
    6. ''' → logprob: -6.90509033203125
    7. '    ' → logprob: -7.15509033203125
    8. ')' → logprob: -7.28009033203125
    9. '"' → logprob: -7.40509033203125
    10. ' )' → logprob: -7.78009033203125

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01462493371218443
    2. '=' → logprob: -4.264625072479248
    3. ',' → logprob: -7.764625072479248
    4. ' ' → logprob: -10.51462459564209
    5. ' ,' → logprob: -12.01462459564209
    6. '  ' → logprob: -14.38962459564209
    7. ' =
' → logprob: -14.51462459564209
    8. ')' → logprob: -14.76462459564209
    9. ' =)' → logprob: -14.88962459564209
    10. '<|end|>' → logprob: -15.13962459564209

Token 29: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.0015348586020991206
    2. 'values' → logprob: -6.626534938812256
    3. ' ' → logprob: -8.501534461975098
    4. '	values' → logprob: -12.501534461975098
    5. ' ' → logprob: -14.376534461975098
    6. '_values' → logprob: -14.626534461975098
    7. '(values' → logprob: -15.001534461975098
    8. '.values' → logprob: -15.501534461975098
    9. ' len' → logprob: -16.126535415649414
    10. ' valores' → logprob: -16.501535415649414

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.439167857170105
    2. '[:' → logprob: -1.189167857170105
    3. '[:]' → logprob: -3.0641679763793945
    4. '0' → logprob: -6.1891679763793945
    5. '<|end|>' → logprob: -7.3141679763793945
    6. ' ' → logprob: -8.189167976379395
    7. '[]' → logprob: -8.689167976379395
    8. '[N' → logprob: -8.814167976379395
    9. '[:-' → logprob: -9.064167976379395
    10. '  ' → logprob: -9.189167976379395

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01619952917098999
    2. ' ' → logprob: -4.141199588775635
    3. ':' → logprob: -9.016199111938477
    4. ' :' → logprob: -10.141199111938477
    5. ']' → logprob: -13.766199111938477
    6. ')' → logprob: -13.766199111938477
    7. ':]' → logprob: -14.141199111938477
    8. '  ' → logprob: -14.766199111938477
    9. ' :]' → logprob: -15.266199111938477
    10. '   ' → logprob: -15.266199111938477

Token 32: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04344945400953293
    2. '],' → logprob: -3.1684494018554688
    3. ' ]' → logprob: -8.168449401855469
    4. ',' → logprob: -9.293449401855469
    5. ' ],' → logprob: -10.418449401855469
    6. ')' → logprob: -11.293449401855469
    7. '],
' → logprob: -11.293449401855469
    8. ']
' → logprob: -11.793449401855469
    9. '+' → logprob: -12.668449401855469
    10. '),' → logprob: -13.168449401855469

Token 33: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.0007974773179739714
    2. 'values' → logprob: -7.250797271728516
    3. ' ' → logprob: -10.625797271728516
    4. '	values' → logprob: -10.875797271728516
    5. ' ' → logprob: -11.000797271728516
    6. '<|end|>' → logprob: -11.375797271728516
    7. '(values' → logprob: -11.625797271728516
    8. '_values' → logprob: -12.750797271728516
    9. '.values' → logprob: -13.125797271728516
    10. ' valores' → logprob: -14.375797271728516

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. '1' → logprob: -12.625007629394531
    3. ' [' → logprob: -12.750007629394531
    4. '```' → logprob: -14.125007629394531
    5. '[
' → logprob: -14.875007629394531
    6. '[-' → logprob: -15.750007629394531
    7. '\[' → logprob: -16.62500762939453
    8. '.' → logprob: -17.00000762939453
    9. '...' → logprob: -17.37500762939453
    10. '`' → logprob: -17.75000762939453

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.250109672546387
    3. ']' → logprob: -12.750109672546387
    4. '2' → logprob: -12.750109672546387
    5. '-' → logprob: -12.875109672546387
    6. '0' → logprob: -12.875109672546387
    7. '```' → logprob: -14.312609672546387
    8. '   ' → logprob: -14.687609672546387
    9. '])' → logprob: -14.875109672546387
    10. '  ' → logprob: -15.125109672546387

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22607891261577606
    2. ')' → logprob: -1.6010788679122925
    3. ')]' → logprob: -8.226078987121582
    4. '])' → logprob: -9.101078987121582
    5. ' ]' → logprob: -9.476078987121582
    6. '']' → logprob: -9.851078987121582
    7. '<|end|>' → logprob: -9.976078987121582
    8. '}' → logprob: -10.726078987121582
    9. '],' → logprob: -10.726078987121582
    10. '+' → logprob: -10.976078987121582

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5098605155944824
    2. '<|end|>' → logprob: -1.5098605155944824
    3. '   ' → logprob: -2.6348605155944824
    4. '\n' → logprob: -3.3848605155944824
    5. ')' → logprob: -4.009860515594482
    6. ',' → logprob: -4.384860515594482
    7. '    
' → logprob: -4.759860515594482
    8. '\' → logprob: -5.259860515594482
    9. ' 
' → logprob: -5.384860515594482
    10. '#' → logprob: -5.509860515594482

Token 38: ' result' (ID: 1534)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36857643723487854
    2. '<|end|>' → logprob: -1.2435764074325562
    3. '<|end|>' → logprob: -4.868576526641846
    4. '   ' → logprob: -5.118576526641846
    5. '\n' → logprob: -5.993576526641846
    6. '```' → logprob: -7.118576526641846
    7. ')' → logprob: -7.243576526641846
    8. '    
' → logprob: -7.993576526641846
    9. 'newline' → logprob: -8.118576049804688
    10. '#' → logprob: -8.368576049804688

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023197952657938004
    2. '=' → logprob: -3.898197889328003
    3. '_' → logprob: -6.648198127746582
    4. ' ' → logprob: -7.023198127746582
    5. '.' → logprob: -8.398198127746582
    6. ' +=' → logprob: -9.773198127746582
    7. '<|end|>' → logprob: -10.023198127746582
    8. ')' → logprob: -10.148198127746582
    9. '  ' → logprob: -11.023198127746582
    10. 's' → logprob: -11.273198127746582

Token 40: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24709759652614594
    2. '[]' → logprob: -2.6220974922180176
    3. ' []' → logprob: -2.6220974922180176
    4. ' ' → logprob: -2.8720974922180176
    5. ' N' → logprob: -5.497097492218018
    6. 'sum' → logprob: -5.747097492218018
    7. 'N' → logprob: -6.122097492218018
    8. ' K' → logprob: -6.122097492218018
    9. ' [' → logprob: -6.747097492218018
    10. '[' → logprob: -6.997097492218018

Token 41: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2408411502838135
    2. '<|end|>' → logprob: -1.8658411502838135
    3. '\n' → logprob: -1.8658411502838135
    4. '
' → logprob: -2.1158411502838135
    5. '\' → logprob: -2.6158411502838135
    6. '   ' → logprob: -3.2408411502838135
    7. ' 
' → logprob: -3.3658411502838135
    8. '#' → logprob: -3.3658411502838135
    9. ',' → logprob: -4.490840911865234
    10. ')' → logprob: -4.615840911865234

Token 42: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5437078475952148
    2. '<|end|>' → logprob: -1.6687078475952148
    3. ' 
' → logprob: -2.043707847595215
    4. '\' → logprob: -2.168707847595215
    5. '
' → logprob: -2.293707847595215
    6. '_' → logprob: -3.043707847595215
    7. '\n' → logprob: -3.293707847595215
    8. '   ' → logprob: -3.293707847595215
    9. '#' → logprob: -4.168707847595215
    10. ',' → logprob: -4.168707847595215

Token 43: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8869980573654175
    2. '\' → logprob: -1.6369980573654175
    3. ' 
' → logprob: -1.8869980573654175
    4. '\n' → logprob: -2.386998176574707
    5. '   ' → logprob: -3.636998176574707
    6. '
' → logprob: -3.886998176574707
    7. '<|end|>' → logprob: -4.011998176574707
    8. '_' → logprob: -4.261998176574707
    9. '#' → logprob: -4.261998176574707
    10. 'for' → logprob: -4.636998176574707

Token 44: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.056762855499982834
    2. 'ed' → logprob: -4.0567626953125
    3. '_result' → logprob: -4.5567626953125
    4. '(' → logprob: -4.9317626953125
    5. 's' → logprob: -5.1817626953125
    6. '=' → logprob: -5.3067626953125
    7. ' =' → logprob: -5.6817626953125
    8. 'ing' → logprob: -5.9317626953125
    9. ' ' → logprob: -7.0567626953125
    10. 'er' → logprob: -8.1817626953125

Token 45: 'odd' (ID: 18303)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.4476045370101929
    2. 'value' → logprob: -1.6976045370101929
    3. 'val' → logprob: -1.9476045370101929
    4. 'K' → logprob: -2.3226046562194824
    5. 'range' → logprob: -2.8226046562194824
    6. 'result' → logprob: -3.1976046562194824
    7. 'values' → logprob: -3.3226046562194824
    8. 'k' → logprob: -3.4476046562194824
    9. 'if' → logprob: -3.6976046562194824
    10. 'num' → logprob: -4.072604656219482

Token 46: 'ity' (ID: 536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1383659988641739
    2. '=' → logprob: -2.6383659839630127
    3. 's' → logprob: -4.013366222381592
    4. '(' → logprob: -4.013366222381592
    5. ' =' → logprob: -4.138366222381592
    6. '_=' → logprob: -6.388366222381592
    7. '()' → logprob: -7.013366222381592
    8. '_count' → logprob: -7.888366222381592
    9. '_values' → logprob: -8.138365745544434
    10. '(_)' → logprob: -8.513365745544434

Token 47: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3893771469593048
    2. '_' → logprob: -1.1393771171569824
    3. 's' → logprob: -6.639377117156982
    4. '(_)' → logprob: -7.764377117156982
    5. '=' → logprob: -8.88937759399414
    6. '()' → logprob: -9.26437759399414
    7. '_parent' → logprob: -9.51437759399414
    8. '("("' → logprob: -9.63937759399414
    9. '_s' → logprob: -10.01437759399414
    10. '('_' → logprob: -10.13937759399414

Token 48: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5804729461669922
    2. 'lambda' → logprob: -0.9554729461669922
    3. '(lambda' → logprob: -4.080472946166992
    4. ' any' → logprob: -4.330472946166992
    5. ' N' → logprob: -5.080472946166992
    6. ' K' → logprob: -5.205472946166992
    7. ' (' → logprob: -6.205472946166992
    8. ' values' → logprob: -6.330472946166992
    9. 'values' → logprob: -6.455472946166992
    10. ' all' → logprob: -6.580472946166992

Token 49: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03469901159405708
    2. 'x' → logprob: -3.534698963165283
    3. ' n' → logprob: -5.534698963165283
    4. ' ' → logprob: -7.909698963165283
    5. 'n' → logprob: -8.534699440002441
    6. ' num' → logprob: -9.534699440002441
    7. ' number' → logprob: -9.659699440002441
    8. ' :' → logprob: -10.034699440002441
    9. ' (' → logprob: -10.034699440002441
    10. ' s' → logprob: -10.034699440002441

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016339685767889023
    2. ' :' → logprob: -4.1413397789001465
    3. ':x' → logprob: -8.391339302062988
    4. ',' → logprob: -10.266339302062988
    5. ' x' → logprob: -11.641339302062988
    6. '_:' → logprob: -11.641339302062988
    7. 'x' → logprob: -12.391339302062988
    8. '=' → logprob: -12.516339302062988
    9. ',:' → logprob: -12.766339302062988
    10. ':int' → logprob: -13.266339302062988

Token 51: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.144080251455307
    2. 'x' → logprob: -2.01908016204834
    3. '(x' → logprob: -7.64408016204834
    4. ' (' → logprob: -7.64408016204834
    5. ' ' → logprob: -8.64408016204834
    6. '(' → logprob: -8.89408016204834
    7. ' True' → logprob: -10.51908016204834
    8. ' all' → logprob: -10.89408016204834
    9. ' abs' → logprob: -11.39408016204834
    10. 'True' → logprob: -11.39408016204834

Token 52: ' &' (ID: 827)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20153750479221344
    2. '%' → logprob: -1.7015374898910522
    3. ' ' → logprob: -10.076537132263184
    4. ' &' → logprob: -10.451537132263184
    5. '[' → logprob: -11.701537132263184
    6. '(' → logprob: -11.701537132263184
    7. '&' → logprob: -12.076537132263184
    8. '()%' → logprob: -12.076537132263184
    9. ' ' → logprob: -12.326537132263184
    10. '()' → logprob: -12.826537132263184

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231618285179138
    2. ' ' → logprob: -0.8981618285179138
    3. '(' → logprob: -11.398161888122559
    4. ' (' → logprob: -11.773161888122559
    5. ' ' → logprob: -12.523161888122559
    6. '  ' → logprob: -12.898161888122559
    7. ' K' → logprob: -12.960661888122559
    8. '-' → logprob: -13.273161888122559
    9. 'x' → logprob: -13.585661888122559
    10. 'nbsp' → logprob: -13.773161888122559

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001951961312443018
    2. ' ' → logprob: -8.625195503234863
    3. '(' → logprob: -11.500195503234863
    4. 'K' → logprob: -13.625195503234863
    5. 'x' → logprob: -13.750195503234863
    6. '-' → logprob: -13.750195503234863
    7. '3' → logprob: -14.750195503234863
    8. '0' → logprob: -15.250195503234863
    9. '255' → logprob: -15.750195503234863
    10. '   ' → logprob: -16.125194549560547

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29429078102111816
    2. ' ' → logprob: -2.919290781021118
    3. '<|end|>' → logprob: -2.919290781021118
    4. ')' → logprob: -3.544290781021118
    5. ':' → logprob: -3.669290781021118
    6. '\' → logprob: -3.794290781021118
    7. '\n' → logprob: -3.919290781021118
    8. '
' → logprob: -3.919290781021118
    9. '    
' → logprob: -4.669290542602539
    10. '#' → logprob: -5.794290542602539

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9727799892425537
    2. '   ' → logprob: -0.9727799892425537
    3. '<|end|>' → logprob: -2.2227799892425537
    4. ':' → logprob: -2.5977799892425537
    5. '    
' → logprob: -4.222780227661133
    6. '\n' → logprob: -4.597780227661133
    7. '  
' → logprob: -4.722780227661133
    8. ' 
' → logprob: -5.347780227661133
    9. '\' → logprob: -5.472780227661133
    10. ' ' → logprob: -5.597780227661133

Token 57: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9263353943824768
    2. '\n' → logprob: -0.9263353943824768
    3. '   ' → logprob: -2.176335334777832
    4. '\' → logprob: -3.676335334777832
    5. ' 
' → logprob: -4.801335334777832
    6. '\r' → logprob: -4.801335334777832
    7. 'newline' → logprob: -4.926335334777832
    8. '    
' → logprob: -5.051335334777832
    9. 'n' → logprob: -5.051335334777832
    10. ':' → logprob: -5.301335334777832

Token 58: ' check' (ID: 2371)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6722311973571777
    2. ' N' → logprob: -0.7972311973571777
    3. ' ' → logprob: -3.9222311973571777
    4. ' check' → logprob: -4.422231197357178
    5. ' (' → logprob: -5.797231197357178
    6. 'N' → logprob: -6.547231197357178
    7. 'K' → logprob: -6.922231197357178
    8. ' not' → logprob: -7.422231197357178
    9. ' result' → logprob: -8.047231674194336
    10. ' ' → logprob: -8.172231674194336

Token 59: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_o' → logprob: -15.25
    3. ' _' → logprob: -15.625
    4. '_od' → logprob: -17.125
    5. '_even' → logprob: -17.25
    6. '(' → logprob: -18.125
    7. '(_' → logprob: -18.625
    8. ' ' → logprob: -19.0
    9. '```' → logprob: -19.25
    10. '_^(' → logprob: -19.5

Token 60: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00041947141289711
    2. '_' → logprob: -8.000419616699219
    3. 'od' → logprob: -9.625419616699219
    4. 'o' → logprob: -12.000419616699219
    5. 'ood' → logprob: -12.500419616699219
    6. 'Odd' → logprob: -13.375419616699219
    7. 'oddi' → logprob: -13.500419616699219
    8. ' odd' → logprob: -14.000419616699219
    9. 'old' → logprob: -14.625419616699219
    10. '_od' → logprob: -14.875419616699219

Token 61: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0002624086628202349
    2. 'it' → logprob: -8.500262260437012
    3. '_' → logprob: -10.000262260437012
    4. ' ity' → logprob: -12.750262260437012
    5. 'o' → logprob: -13.625262260437012
    6. ' ' → logprob: -13.750262260437012
    7. 'i' → logprob: -14.000262260437012
    8. 'icity' → logprob: -14.250262260437012
    9. '   ' → logprob: -14.375262260437012
    10. 't' → logprob: -14.500262260437012

Token 62: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7890689969062805
    2. '(N' → logprob: -1.0390689373016357
    3. '(K' → logprob: -1.6640689373016357
    4. ' (' → logprob: -6.414069175720215
    5. '(s' → logprob: -8.414069175720215
    6. '(values' → logprob: -8.414069175720215
    7. '(k' → logprob: -9.039069175720215
    8. '()' → logprob: -9.289069175720215
    9. '(n' → logprob: -9.664069175720215
    10. '((' → logprob: -9.789069175720215

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18437546491622925
    2. ' ):' → logprob: -1.934375524520874
    3. ')' → logprob: -3.934375524520874
    4. ' ==' → logprob: -6.684375286102295
    5. '==' → logprob: -6.934375286102295
    6. ' )' → logprob: -6.934375286102295
    7. '>' → logprob: -8.184375762939453
    8. ' >' → logprob: -8.684375762939453
    9. ' ' → logprob: -8.809375762939453
    10. ':' → logprob: -8.934375762939453

Token 64: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005591006949543953
    2. ':
' → logprob: -6.005590915679932
    3. '       ' → logprob: -6.005590915679932
    4. '   ' → logprob: -7.630590915679932
    5. ':return' → logprob: -10.38059139251709
    6. ' and' → logprob: -10.63059139251709
    7. ',' → logprob: -10.75559139251709
    8. ' :' → logprob: -10.75559139251709
    9. '):' → logprob: -11.25559139251709
    10. '<|end|>' → logprob: -11.25559139251709

Token 65: ' cubic' (ID: 63774)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4894724190235138
    2. 'result' → logprob: -1.7394723892211914
    3. '       ' → logprob: -1.8644723892211914
    4. '   ' → logprob: -4.239472389221191
    5. ' 
' → logprob: -4.489472389221191
    6. ' for' → logprob: -4.864472389221191
    7. '
' → logprob: -5.364472389221191
    8. ' return' → logprob: -5.489472389221191
    9. '    
' → logprob: -5.489472389221191
    10. '        
' → logprob: -6.239472389221191

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9079777598381042
    2. '_' → logprob: -1.032977819442749
    3. '_result' → logprob: -2.407977819442749
    4. '_root' → logprob: -2.782977819442749
    5. '=' → logprob: -3.532977819442749
    6. '_sum' → logprob: -4.15797758102417
    7. '_power' → logprob: -4.28297758102417
    8. '_value' → logprob: -4.78297758102417
    9. '_pow' → logprob: -5.28297758102417
    10. ' ' → logprob: -5.53297758102417

Token 67: ' pow' (ID: 9779)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9896655678749084
    2. ' N' → logprob: -1.1146655082702637
    3. 'N' → logprob: -1.7396655082702637
    4. 'K' → logprob: -2.4896655082702637
    5. ' lambda' → logprob: -4.614665508270264
    6. 'pow' → logprob: -5.114665508270264
    7. ' ' → logprob: -5.489665508270264
    8. ' (' → logprob: -5.489665508270264
    9. ' sum' → logprob: -5.489665508270264
    10. 'lambda' → logprob: -6.239665508270264

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07480447739362717
    2. '(' → logprob: -3.3248045444488525
    3. '(K' → logprob: -3.3248045444488525
    4. '(
' → logprob: -10.949804306030273
    5. '(k' → logprob: -11.199804306030273
    6. '((' → logprob: -11.324804306030273
    7. '(x' → logprob: -11.324804306030273
    8. '(values' → logprob: -11.324804306030273
    9. '(a' → logprob: -11.699804306030273
    10. 'N' → logprob: -11.824804306030273

Token 69: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020097533240914345
    2. '3' → logprob: -4.770097732543945
    3. ',K' → logprob: -4.895097732543945
    4. ' ,' → logprob: -5.895097732543945
    5. 'K' → logprob: -7.645097732543945
    6. '2' → logprob: -8.020097732543945
    7. '7' → logprob: -9.145097732543945
    8. ' K' → logprob: -9.520097732543945
    9. ' ' → logprob: -9.645097732543945
    10. '6' → logprob: -10.770097732543945

Token 70: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.19332019984722137
    2. '2' → logprob: -1.9433201551437378
    3. '3' → logprob: -3.4433202743530273
    4. ' K' → logprob: -8.318320274353027
    5. ' ' → logprob: -9.443320274353027
    6. '4' → logprob: -9.568320274353027
    7. '1' → logprob: -10.568320274353027
    8. '7' → logprob: -10.818320274353027
    9. '   ' → logprob: -10.818320274353027
    10. '  ' → logprob: -11.068320274353027

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007769766729325056
    2. ' ,' → logprob: -5.007769584655762
    3. '3' → logprob: -7.507769584655762
    4. ')' → logprob: -8.257769584655762
    5. ' ' → logprob: -9.257769584655762
    6. '2' → logprob: -9.757769584655762
    7. '  ' → logprob: -10.757769584655762
    8. '**' → logprob: -11.257769584655762
    9. '7' → logprob: -11.882769584655762
    10. ',
' → logprob: -12.007769584655762

Token 72: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.024017158895730972
    2. ' ' → logprob: -3.774017095565796
    3. '2' → logprob: -7.274017333984375
    4. '  ' → logprob: -10.774017333984375
    5. '   ' → logprob: -10.774017333984375
    6. '1' → logprob: -11.024017333984375
    7. ')' → logprob: -12.274017333984375
    8. '    ' → logprob: -13.149017333984375
    9. ' K' → logprob: -13.336517333984375
    10. 'K' → logprob: -13.461517333984375

Token 73: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003134347265586257
    2. '2' → logprob: -5.878134250640869
    3. ' ' → logprob: -8.628134727478027
    4. '1' → logprob: -10.253134727478027
    5. ')' → logprob: -10.440634727478027
    6. '   ' → logprob: -10.815634727478027
    7. '4' → logprob: -11.628134727478027
    8. '  ' → logprob: -12.003134727478027
    9. 'c' → logprob: -12.378134727478027
    10. 'K' → logprob: -12.440634727478027

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008268986130133271
    2. ')
' → logprob: -7.375826835632324
    3. '   ' → logprob: -9.750826835632324
    4. '+' → logprob: -10.250826835632324
    5. ' )' → logprob: -10.375826835632324
    6. ',' → logprob: -11.250826835632324
    7. ')*' → logprob: -11.875826835632324
    8. ')+' → logprob: -12.000826835632324
    9. '**' → logprob: -12.125826835632324
    10. ')**' → logprob: -12.250826835632324

Token 75: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.44398239254951477
    2. '       ' → logprob: -1.1939823627471924
    3. '
' → logprob: -3.4439823627471924
    4. '   ' → logprob: -5.3189826011657715
    5. ')' → logprob: -5.3189826011657715
    6. ' result' → logprob: -5.6939826011657715
    7. '        
' → logprob: -5.9439826011657715
    8. ')
' → logprob: -6.6939826011657715
    9. 'return' → logprob: -7.3189826011657715
    10. '<|end|>' → logprob: -7.3189826011657715

Token 77: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0789157897233963
    2. '(' → logprob: -2.57891583442688
    3. '('' → logprob: -11.4539155960083
    4. '(f' → logprob: -12.3289155960083
    5. '((' → logprob: -12.5789155960083
    6. '()' → logprob: -13.2039155960083
    7. '(pow' → logprob: -13.9539155960083
    8. '(n' → logprob: -14.2039155960083
    9. '(abs' → logprob: -14.3289155960083
    10. 'c' → logprob: -14.5789155960083

Token 78: 'ubic' (ID: 69976)
  Prédit: 'ubic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubic' → logprob: -0.006468921434134245
    2. 'u' → logprob: -5.631468772888184
    3. 'ub' → logprob: -6.631468772888184
    4. 'ubi' → logprob: -6.881468772888184
    5. 'uc' → logprob: -8.881468772888184
    6. 'ube' → logprob: -10.006468772888184
    7. '   ' → logprob: -10.381468772888184
    8. '```' → logprob: -10.506468772888184
    9. 'c' → logprob: -10.631468772888184
    10. ')' → logprob: -10.631468772888184

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014239625306800008
    2. ')
' → logprob: -9.375142097473145
    3. '   ' → logprob: -10.250142097473145
    4. ' )' → logprob: -11.125142097473145
    5. '))' → logprob: -12.875142097473145
    6. ')))' → logprob: -14.125142097473145
    7. '+' → logprob: -14.500142097473145
    8. '       ' → logprob: -14.625142097473145
    9. ')}' → logprob: -14.625142097473145
    10. ')}}' → logprob: -14.625142097473145

Token 80: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04488130286335945
    2. 'else' → logprob: -3.9198813438415527
    3. '\n' → logprob: -5.044881343841553
    4. '<|end|>' → logprob: -5.169881343841553
    5. ' else' → logprob: -5.919881343841553
    6. ')' → logprob: -6.044881343841553
    7. 'elif' → logprob: -6.794881343841553
    8. ' ' → logprob: -6.794881343841553
    9. '
' → logprob: -6.919881343841553
    10. '\' → logprob: -7.544881343841553

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19634588062763214
    2. '<|end|>' → logprob: -2.821345806121826
    3. '\n' → logprob: -3.446345806121826
    4. '    
' → logprob: -3.446345806121826
    5. ' ' → logprob: -4.446345806121826
    6. '_' → logprob: -5.071345806121826
    7. 'else' → logprob: -5.196345806121826
    8. '\' → logprob: -5.196345806121826
    9. ' 
' → logprob: -5.571345806121826
    10. '
' → logprob: -5.946345806121826

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1397729367017746
    2. '    
' → logprob: -2.639772891998291
    3. 'else' → logprob: -3.139772891998291
    4. ' else' → logprob: -5.389772891998291
    5. '\n' → logprob: -5.639772891998291
    6. 'elif' → logprob: -6.889772891998291
    7. ' 
' → logprob: -7.014772891998291
    8. 'n' → logprob: -7.389772891998291
    9. '<|end|>' → logprob: -7.389772891998291
    10. '  
' → logprob: -7.389772891998291

Token 84: ' intermediate' (ID: 47388)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5441813468933105
    2. 'result' → logprob: -1.9191813468933105
    3. '   ' → logprob: -2.6691813468933105
    4. 'for' → logprob: -3.1691813468933105
    5. 'if' → logprob: -3.5441813468933105
    6. 'c' → logprob: -3.5441813468933105
    7. 'print' → logprob: -3.6691813468933105
    8. 'even' → logprob: -3.9191813468933105
    9. 'elif' → logprob: -4.7941813468933105
    10. ' else' → logprob: -4.7941813468933105

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4296788275241852
    2. '_' → logprob: -1.1796787977218628
    3. '_result' → logprob: -4.179678916931152
    4. '=' → logprob: -4.304678916931152
    5. '_value' → logprob: -4.554678916931152
    6. '_val' → logprob: -6.554678916931152
    7. ' ' → logprob: -8.179678916931152
    8. '_values' → logprob: -8.429678916931152
    9. 's' → logprob: -8.679678916931152
    10. ' _' → logprob: -9.054678916931152

Token 86: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4016163349151611
    2. ' N' → logprob: -1.4016163349151611
    3. 'pow' → logprob: -1.4016163349151611
    4. ' pow' → logprob: -2.401616334915161
    5. ' (' → logprob: -2.901616334915161
    6. '(N' → logprob: -3.026616334915161
    7. '(pow' → logprob: -4.526616096496582
    8. 'sum' → logprob: -4.901616096496582
    9. '(' → logprob: -4.901616096496582
    10. ' ' → logprob: -5.026616096496582

Token 87: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3186543583869934
    2. ' %' → logprob: -1.6936542987823486
    3. '%' → logprob: -2.9436542987823486
    4. '//' → logprob: -4.193654537200928
    5. '<|end|>' → logprob: -4.818654537200928
    6. ' ' → logprob: -5.818654537200928
    7. '-' → logprob: -6.443654537200928
    8. ' -' → logprob: -6.443654537200928
    9. '<|end|>' → logprob: -6.443654537200928
    10. '   ' → logprob: -6.693654537200928

Token 88: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0006367852329276502
    2. '2' → logprob: -8.12563705444336
    3. '(' → logprob: -8.50063705444336
    4. ' K' → logprob: -9.50063705444336
    5. '(K' → logprob: -10.37563705444336
    6. '<|end|>' → logprob: -12.00063705444336
    7. 'values' → logprob: -12.12563705444336
    8. ' (' → logprob: -12.37563705444336
    9. ' ' → logprob: -12.87563705444336
    10. '4' → logprob: -12.87563705444336

Token 89: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00028255043434910476
    2. ' K' → logprob: -8.750282287597656
    3. '2' → logprob: -9.125282287597656
    4. '(' → logprob: -12.125282287597656
    5. ')' → logprob: -12.375282287597656
    6. ' ' → logprob: -13.250282287597656
    7. '   ' → logprob: -13.500282287597656
    8. '(K' → logprob: -14.625282287597656
    9. '  ' → logprob: -15.250282287597656
    10. ' (' → logprob: -15.375282287597656

Token 90: ' //' (ID: 602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6837288737297058
    2. ')' → logprob: -1.0587289333343506
    3. ' *' → logprob: -2.4337289333343506
    4. '2' → logprob: -3.4337289333343506
    5. '//' → logprob: -4.4337286949157715
    6. '))' → logprob: -5.3087286949157715
    7. ' //' → logprob: -6.0587286949157715
    8. '   ' → logprob: -6.0587286949157715
    9. ' ' → logprob: -6.3087286949157715
    10. '**' → logprob: -7.0587286949157715

Token 91: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001058295019902289
    2. ' ' → logprob: -6.876058101654053
    3. ')' → logprob: -11.001058578491211
    4. '   ' → logprob: -12.938558578491211
    5. '3' → logprob: -13.626058578491211
    6. '  ' → logprob: -13.813558578491211
    7. '4' → logprob: -14.063558578491211
    8. '```' → logprob: -14.751058578491211
    9. '(' → logprob: -15.001058578491211
    10. '    ' → logprob: -15.688558578491211

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.787507714354433e-05
    2. ' ' → logprob: -10.12504768371582
    3. ')' → logprob: -13.00004768371582
    4. '   ' → logprob: -13.62504768371582
    5. '```' → logprob: -14.00004768371582
    6. '3' → logprob: -14.25004768371582
    7. '(' → logprob: -14.68754768371582
    8. '4' → logprob: -14.93754768371582
    9. '  ' → logprob: -15.31254768371582
    10. '۲' → logprob: -15.87504768371582

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015412846114486456
    2. ')
' → logprob: -6.8765411376953125
    3. ' )' → logprob: -8.751541137695312
    4. '+' → logprob: -9.001541137695312
    5. '))' → logprob: -9.001541137695312
    6. '   ' → logprob: -10.126541137695312
    7. ')))' → logprob: -11.126541137695312
    8. ')

' → logprob: -11.876541137695312
    9. '*' → logprob: -12.126541137695312
    10. ' +' → logprob: -12.251541137695312

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7697961926460266
    2. '<|end|>' → logprob: -1.0197961330413818
    3. '   ' → logprob: -1.7697961330413818
    4. '<|end|>' → logprob: -5.769796371459961
    5. ')' → logprob: -7.144796371459961
    6. '    
' → logprob: -7.644796371459961
    7. '\n' → logprob: -8.519796371459961
    8. 'print' → logprob: -8.519796371459961
    9. '*' → logprob: -9.019796371459961
    10. ',' → logprob: -9.144796371459961

Token 95: ' legacy' (ID: 33304)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8981964588165283
    2. '   ' → logprob: -1.1481964588165283
    3. 'print' → logprob: -1.5231964588165283
    4. 'if' → logprob: -3.6481964588165283
    5. 'inter' → logprob: -4.023196220397949
    6. '
' → logprob: -5.773196220397949
    7. 's' → logprob: -6.148196220397949
    8. '<|end|>' → logprob: -6.648196220397949
    9. '    
' → logprob: -7.023196220397949
    10. 'c' → logprob: -7.398196220397949

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050167158246040344
    2. '_result' → logprob: -3.6751670837402344
    3. '=' → logprob: -4.300167083740234
    4. '_' → logprob: -5.050167083740234
    5. '_c' → logprob: -6.925167083740234
    6. '_value' → logprob: -7.050167083740234
    7. '_val' → logprob: -8.300167083740234
    8. '_count' → logprob: -8.300167083740234
    9. 's' → logprob: -8.675167083740234
    10. 'result' → logprob: -8.925167083740234

Token 97: ' N' (ID: 478)
  Prédit: ' intermediate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intermediate' → logprob: -0.5480494499206543
    2. ' pow' → logprob: -1.4230494499206543
    3. 'pow' → logprob: -2.2980494499206543
    4. ' (' → logprob: -3.7980494499206543
    5. 'inter' → logprob: -3.9230494499206543
    6. ' N' → logprob: -4.173049449920654
    7. ' ' → logprob: -5.298049449920654
    8. 'int' → logprob: -5.923049449920654
    9. ' sum' → logprob: -6.048049449920654
    10. '(' → logprob: -6.173049449920654

Token 98: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.39863279461860657
    2. '%' → logprob: -2.273632764816284
    3. '-' → logprob: -2.773632764816284
    4. ' %' → logprob: -2.773632764816284
    5. '//' → logprob: -3.023632764816284
    6. ' -' → logprob: -3.148632764816284
    7. '<|end|>' → logprob: -5.773633003234863
    8. ' ' → logprob: -6.273633003234863
    9. '+' → logprob: -6.773633003234863
    10. ' #' → logprob: -7.586133003234863

Token 99: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.012458792887628078
    2. '(' → logprob: -4.887458801269531
    3. ' K' → logprob: -6.137458801269531
    4. '(K' → logprob: -6.387458801269531
    5. '2' → logprob: -7.637458801269531
    6. ' (' → logprob: -8.137458801269531
    7. '(inter' → logprob: -9.762458801269531
    8. 'inter' → logprob: -10.012458801269531
    9. '   ' → logprob: -11.012458801269531
    10. ' intermediate' → logprob: -11.012458801269531

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0744098499417305
    2. '
' → logprob: -3.3244099617004395
    3. '<|end|>' → logprob: -3.6994099617004395
    4. '    
' → logprob: -4.8244099617004395
    5. ' if' → logprob: -7.3244099617004395
    6. '<|end|>' → logprob: -7.4494099617004395
    7. '```' → logprob: -7.6994099617004395
    8. 'if' → logprob: -8.449409484863281
    9. 'result' → logprob: -8.574409484863281
    10. ' 
' → logprob: -8.949409484863281

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10104843974113464
    2. 'result' → logprob: -2.601048469543457
    3. '<|end|>' → logprob: -4.976048469543457
    4. ' if' → logprob: -5.976048469543457
    5. ' result' → logprob: -6.101048469543457
    6. '
' → logprob: -6.226048469543457
    7. '```' → logprob: -6.226048469543457
    8. 'if' → logprob: -6.601048469543457
    9. '    
' → logprob: -6.976048469543457
    10. 'count' → logprob: -7.476048469543457

Token 102: ' out' (ID: 842)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7858432531356812
    2. 'print' → logprob: -1.1608432531356812
    3. 'if' → logprob: -2.5358433723449707
    4. 'answer' → logprob: -3.2858433723449707
    5. '   ' → logprob: -3.4108433723449707
    6. ' if' → logprob: -4.035843372344971
    7. 'for' → logprob: -4.285843372344971
    8. 'total' → logprob: -4.285843372344971
    9. ' result' → logprob: -5.160843372344971
    10. 'product' → logprob: -5.285843372344971

Token 103: ' =' (ID: 314)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.05199585482478142
    2. '   ' → logprob: -3.9269957542419434
    3. 'puts' → logprob: -4.301995754241943
    4. ' =' → logprob: -5.176995754241943
    5. '=' → logprob: -5.676995754241943
    6. 'come' → logprob: -6.051995754241943
    7. 'side' → logprob: -6.426995754241943
    8. 'line' → logprob: -7.551995754241943
    9. 'result' → logprob: -8.051996231079102
    10. '  ' → logprob: -8.301996231079102

Token 104: ' pow' (ID: 9779)
  Prédit: ' intermediate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intermediate' → logprob: -0.3382100462913513
    2. 'inter' → logprob: -1.463210105895996
    3. '(inter' → logprob: -3.713210105895996
    4. ' (' → logprob: -4.463210105895996
    5. ' legacy' → logprob: -4.588210105895996
    6. 'legacy' → logprob: -6.213210105895996
    7. ' inter' → logprob: -6.213210105895996
    8. '(' → logprob: -6.338210105895996
    9. '   ' → logprob: -7.963210105895996
    10. 'int' → logprob: -7.963210105895996

Token 105: '(' (ID: 7)
  Prédit: '(inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -0.08951818197965622
    2. '(' → logprob: -2.4645180702209473
    3. '(c' → logprob: -8.714518547058105
    4. '((' → logprob: -9.464518547058105
    5. '2' → logprob: -9.464518547058105
    6. '(out' → logprob: -9.839518547058105
    7. '(min' → logprob: -9.839518547058105
    8. '(N' → logprob: -9.839518547058105
    9. '(ind' → logprob: -10.464518547058105
    10. 'inter' → logprob: -10.839518547058105

Token 106: 'legacy' (ID: 82902)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.5187534093856812
    2. '(inter' → logprob: -1.0187534093856812
    3. '(' → logprob: -3.3937535285949707
    4. 'legacy' → logprob: -4.768753528594971
    5. ' intermediate' → logprob: -7.893753528594971
    6. '2' → logprob: -8.143753051757812
    7. '   ' → logprob: -8.643753051757812
    8. ')' → logprob: -8.893753051757812
    9. 'out' → logprob: -9.268753051757812
    10. 'c' → logprob: -9.643753051757812

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3766588866710663
    2. '3' → logprob: -1.5016589164733887
    3. '2' → logprob: -2.8766589164733887
    4. ')' → logprob: -3.6266589164733887
    5. ' ,' → logprob: -5.251658916473389
    6. '(' → logprob: -7.126658916473389
    7. ' ' → logprob: -7.376658916473389
    8. '+' → logprob: -8.00165843963623
    9. '   ' → logprob: -8.37665843963623
    10. 'inter' → logprob: -9.00165843963623

Token 108: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06410378962755203
    2. '2' → logprob: -2.814103841781616
    3. ' ' → logprob: -6.189103603363037
    4. '1' → logprob: -10.626604080200195
    5. '   ' → logprob: -10.876604080200195
    6. '4' → logprob: -11.251604080200195
    7. ')' → logprob: -12.564104080200195
    8. '  ' → logprob: -12.751604080200195
    9. ' ' → logprob: -13.189104080200195
    10. '5' → logprob: -13.376604080200195

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007716284599155188
    2. ' )' → logprob: -8.000771522521973
    3. ')-' → logprob: -8.750771522521973
    4. '-' → logprob: -8.875771522521973
    5. '+' → logprob: -10.000771522521973
    6. '-)' → logprob: -11.250771522521973
    7. '   ' → logprob: -11.375771522521973
    8. ' -' → logprob: -11.500771522521973
    9. ')+' → logprob: -11.500771522521973
    10. ')*' → logprob: -11.500771522521973

Token 110: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5670450329780579
    2. '<|end|>' → logprob: -1.567044973373413
    3. '
' → logprob: -1.692044973373413
    4. ' if' → logprob: -4.192045211791992
    5. '+' → logprob: -4.692045211791992
    6. '<|end|>' → logprob: -5.067045211791992
    7. '*' → logprob: -6.067045211791992
    8. ' +' → logprob: -6.192045211791992
    9. '+
' → logprob: -6.692045211791992
    10. ')' → logprob: -6.942045211791992

Token 111: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.31070205569267273
    2. '2' → logprob: -2.185702085494995
    3. ' pow' → logprob: -2.185702085494995
    4. ' ' → logprob: -3.435702085494995
    5. 'inter' → logprob: -6.060701847076416
    6. ' intermediate' → logprob: -6.185701847076416
    7. '3' → logprob: -6.435701847076416
    8. ' (' → logprob: -6.810701847076416
    9. '(pow' → logprob: -7.060701847076416
    10. '(' → logprob: -7.685701847076416

Token 112: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -7.135819760151207e-05
    2. '(' → logprob: -9.62507152557373
    3. '(ind' → logprob: -13.50007152557373
    4. '((' → logprob: -13.87507152557373
    5. 'c' → logprob: -14.25007152557373
    6. '(pow' → logprob: -14.50007152557373
    7. ' (' → logprob: -14.75007152557373
    8. '(c' → logprob: -15.00007152557373
    9. 'inter' → logprob: -15.25007152557373
    10. '(int' → logprob: -15.75007152557373

Token 113: 'mediate' (ID: 22613)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0011248565278947353
    2. 'edi' → logprob: -7.126124858856201
    3. 'mediate' → logprob: -8.126124382019043
    4. 'edia' → logprob: -11.126124382019043
    5. 'di' → logprob: -12.876124382019043
    6. 'edit' → logprob: -13.251124382019043
    7. ' ed' → logprob: -13.376124382019043
    8. 'edian' → logprob: -13.876124382019043
    9. 'edio' → logprob: -14.876124382019043
    10. '```' → logprob: -14.876124382019043

Token 114: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033252881839871407
    2. '(' → logprob: -5.878325462341309
    3. ' ,' → logprob: -7.753325462341309
    4. '3' → logprob: -9.503325462341309
    5. '2' → logprob: -11.628325462341309
    6. ')' → logprob: -12.878325462341309
    7. '(),' → logprob: -13.253325462341309
    8. ' (' → logprob: -13.378325462341309
    9. '   ' → logprob: -14.878325462341309
    10. '  ' → logprob: -15.253325462341309

Token 115: 'legacy' (ID: 82902)
  Prédit: 'legacy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'legacy' → logprob: -0.43347641825675964
    2. '1' → logprob: -1.058476448059082
    3. ' legacy' → logprob: -5.808476448059082
    4. '2' → logprob: -7.433476448059082
    5. '(' → logprob: -7.683476448059082
    6. ' ' → logprob: -8.058476448059082
    7. 'Legacy' → logprob: -9.683476448059082
    8. ' (' → logprob: -9.808476448059082
    9. ')' → logprob: -10.183476448059082
    10. '   ' → logprob: -10.183476448059082

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029047278221696615
    2. ' ,' → logprob: -6.127904891967773
    3. '3' → logprob: -7.377904891967773
    4. '(),' → logprob: -10.252904891967773
    5. ')' → logprob: -10.502904891967773
    6. '   ' → logprob: -11.252904891967773
    7. '2' → logprob: -11.377904891967773
    8. ' ' → logprob: -13.752904891967773
    9. '  ' → logprob: -13.877904891967773
    10. '```' → logprob: -14.315404891967773

Token 117: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0015354545321315527
    2. ' ' → logprob: -6.501535415649414
    3. '2' → logprob: -10.626535415649414
    4. '   ' → logprob: -12.501535415649414
    5. '  ' → logprob: -12.751535415649414
    6. ')' → logprob: -13.751535415649414
    7. '(' → logprob: -15.439035415649414
    8. '    ' → logprob: -15.501535415649414
    9. '1' → logprob: -15.689035415649414
    10. ',' → logprob: -16.251535415649414

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013182159746065736
    2. ')
' → logprob: -6.876317977905273
    3. '   ' → logprob: -9.251317977905273
    4. '<|end|>' → logprob: -9.376317977905273
    5. ' )' → logprob: -10.126317977905273
    6. '       ' → logprob: -11.126317977905273
    7. '```' → logprob: -11.501317977905273
    8. '<|end|>' → logprob: -11.751317977905273
    9. '))' → logprob: -11.876317977905273
    10. '-' → logprob: -12.376317977905273

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7047605514526367
    2. ')' → logprob: -1.3297605514526367
    3. '<|end|>' → logprob: -1.4547605514526367
    4. '()' → logprob: -5.829760551452637
    5. '(' → logprob: -6.454760551452637
    6. '<|end|>' → logprob: -6.829760551452637
    7. '
' → logprob: -7.454760551452637
    8. '+' → logprob: -8.329760551452637
    9. '    ' → logprob: -8.704760551452637
    10. '  ' → logprob: -8.829760551452637

Token 120: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021610859781503677
    2. 'print' (adapté à ' print') → logprob: -4.146610736846924
    3. '<|end|>' → logprob: -5.396610736846924
    4. ')' → logprob: -7.646610736846924
    5. '
' → logprob: -8.646611213684082
    6. '    
' → logprob: -9.646611213684082
    7. '<|end|>' → logprob: -9.646611213684082
    8. ' print' → logprob: -9.771611213684082
    9. '(' → logprob: -10.896611213684082
    10. '()' → logprob: -11.146611213684082

Token 121: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.0006334475474432111
    2. '(' → logprob: -7.375633239746094
    3. ' (' → logprob: -12.250633239746094
    4. '(output' → logprob: -14.375633239746094
    5. '('' → logprob: -15.500633239746094
    6. '("("' → logprob: -15.500633239746094
    7. '(
' → logprob: -16.000633239746094
    8. '()' → logprob: -16.125633239746094
    9. 'out' → logprob: -16.125633239746094
    10. '(op' → logprob: -16.125633239746094

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ')
' → logprob: -11.000018119812012
    3. '   ' → logprob: -15.125018119812012
    4. ' )' → logprob: -15.125018119812012
    5. '()' → logprob: -16.250017166137695
    6. '))' → logprob: -16.375017166137695
    7. '```' → logprob: -16.625017166137695
    8. ')

' → logprob: -16.750017166137695
    9. ')#' → logprob: -16.750017166137695
    10. '`)' → logprob: -16.875017166137695

Token 123: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3214665651321411
    2. '<|end|>' → logprob: -1.5714665651321411
    3. '\n' → logprob: -1.6964665651321411
    4. ')' → logprob: -2.3214664459228516
    5. '```' → logprob: -2.3214664459228516
    6. '#' → logprob: -2.8214664459228516
    7. '\' → logprob: -3.8214664459228516
    8. ' ' → logprob: -4.321466445922852
    9. 'newline' → logprob: -4.696466445922852
    10. '(' → logprob: -4.821466445922852

Token 124: 'enig' (ID: 148035)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7148532867431641
    2. ')' → logprob: -0.8398532867431641
    3. 'def' → logprob: -4.339853286743164
    4. '#' → logprob: -4.464853286743164
    5. '
' → logprob: -4.464853286743164
    6. '```' → logprob: -4.714853286743164
    7. ')]' → logprob: -4.714853286743164
    8. '<|end|>' → logprob: -4.714853286743164
    9. 'newline' → logprob: -5.714853286743164
    10. ' ]' → logprob: -6.089853286743164

Token 125: 'matic' (ID: 39560)
  Prédit: 'matic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matic' → logprob: -0.07186935096979141
    2. 'atic' → logprob: -2.696869373321533
    3. '_' → logprob: -6.821869373321533
    4. 'antic' → logprob: -8.571868896484375
    5. 'ma' → logprob: -9.071868896484375
    6. 'ematic' → logprob: -9.196868896484375
    7. 'omatic' → logprob: -10.071868896484375
    8. 'r' → logprob: -10.071868896484375
    9. '```' → logprob: -10.196868896484375
    10. 'raphic' → logprob: -10.321868896484375

Token 126: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.729906196298543e-06
    2. '_]' → logprob: -12.375009536743164
    3. 'entr' → logprob: -13.000009536743164
    4. '(' → logprob: -15.000009536743164
    5. '_exit' → logprob: -15.000009536743164
    6. ']' → logprob: -15.375009536743164
    7. 'Entrance' → logprob: -15.500009536743164
    8. '_enter' → logprob: -15.750009536743164
    9. ']_' → logprob: -15.875009536743164
    10. '_)' → logprob: -15.875009536743164

Token 127: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.0003606104583013803
    2. ' entrance' → logprob: -8.000360488891602
    3. '_' → logprob: -11.000360488891602
    4. 'entrant' → logprob: -12.875360488891602
    5. 'Entrance' → logprob: -13.250360488891602
    6. 'exit' → logprob: -13.750360488891602
    7. 'entrée' → logprob: -13.875360488891602
    8. 'entry' → logprob: -14.625360488891602
    9. 'entrada' → logprob: -15.375360488891602
    10. '
' → logprob: -15.500360488891602

Token 128: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.004796899855136871
    2. 'ace' → logprob: -6.379796981811523
    3. 'ce' → logprob: -6.504796981811523
    4. 'rance' → logprob: -6.754796981811523
    5. 'ence' → logprob: -9.504796981811523
    6. 'race' → logprob: -9.754796981811523
    7. 'y' → logprob: -10.129796981811523
    8. '```' → logprob: -10.379796981811523
    9. 'tr' → logprob: -10.754796981811523
    10. 'e' → logprob: -10.754796981811523

Token 129: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24357567727565765
    2. '()]' → logprob: -1.6185756921768188
    3. '())' → logprob: -4.118575572967529
    4. ']()' → logprob: -7.368575572967529
    5. ')' → logprob: -7.743575572967529
    6. '()
' → logprob: -8.618576049804688
    7. ']' → logprob: -9.493576049804688
    8. '()}' → logprob: -9.493576049804688
    9. '():' → logprob: -9.743576049804688
    10. '()[' → logprob: -9.993576049804688

Token 130: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1473499536514282
    2. '()' → logprob: -1.2723499536514282
    3. '])' → logprob: -1.7723499536514282
    4. '()]' → logprob: -1.7723499536514282
    5. '())' → logprob: -3.6473498344421387
    6. ']' → logprob: -3.8973498344421387
    7. ')]' → logprob: -4.522349834442139
    8. ']()' → logprob: -5.897349834442139
    9. ')])' → logprob: -6.272349834442139
    10. '(' → logprob: -8.022350311279297

Token 131: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014264699071645737
    2. 'range' → logprob: -4.2642645835876465
    3. '_' → logprob: -9.264265060424805
    4. ' _' → logprob: -12.389265060424805
    5. '(range' → logprob: -13.889265060424805
    6. '	range' → logprob: -14.889265060424805
    7. ' xrange' → logprob: -14.889265060424805
    8. '_range' → logprob: -15.014265060424805
    9. ' ' → logprob: -16.139265060424805
    10. ' in' → logprob: -16.514265060424805

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007038351148366928
    2. ' range' → logprob: -5.132038116455078
    3. 'in' → logprob: -7.257038116455078
    4. 'range' → logprob: -8.132038116455078
    5. ' ' → logprob: -9.132038116455078
    6. '_' → logprob: -14.257038116455078
    7. '  ' → logprob: -14.507038116455078
    8. '(range' → logprob: -15.257038116455078
    9. ' _' → logprob: -15.382038116455078
    10. ' ' → logprob: -16.632038116455078

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193455815315247
    2. ' range' → logprob: -1.50193452835083
    3. '[' → logprob: -12.876935005187988
    4. '(range' → logprob: -13.751935005187988
    5. '	range' → logprob: -14.001935005187988
    6. ' ' → logprob: -15.251935005187988
    7. ' xrange' → logprob: -15.251935005187988
    8. 'foo' → logprob: -15.376935005187988
    9. ' foo' → logprob: -16.876934051513672
    10. '(' → logprob: -17.501934051513672

Token 134: '(' (ID: 7)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06398526579141617
    2. '(' → logprob: -3.0639853477478027
    3. 'int' → logprob: -4.813985347747803
    4. ' int' → logprob: -5.313985347747803
    5. ' (' → logprob: -6.188985347747803
    6. '(
' → logprob: -10.188984870910645
    7. '(values' → logprob: -10.813984870910645
    8. ' ' → logprob: -11.063984870910645
    9. '0' → logprob: -11.313984870910645
    10. '((' → logprob: -11.563984870910645

Token 135: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11408152431249619
    2. ' int' → logprob: -2.864081621170044
    3. '1' → logprob: -2.989081621170044
    4. ' ' → logprob: -8.239081382751465
    5. '(int' → logprob: -10.114081382751465
    6. '3' → logprob: -10.489081382751465
    7. '   ' → logprob: -10.864081382751465
    8. '2' → logprob: -10.989081382751465
    9. 'pow' → logprob: -11.239081382751465
    10. '=int' → logprob: -11.614081382751465

Token 136: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38817742466926575
    2. '(int' → logprob: -1.8881773948669434
    3. '()]' → logprob: -2.3881773948669434
    4. '()' → logprob: -3.0131773948669434
    5. '(' → logprob: -4.138177394866943
    6. ')]' → logprob: -4.513177394866943
    7. 'int' → logprob: -7.388177394866943
    8. '0' → logprob: -7.513177394866943
    9. '():' → logprob: -8.513177871704102
    10. '()>' → logprob: -8.638177871704102

Token 137: ' if' (ID: 538)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.643152740551159e-05
    2. ']' → logprob: -10.375036239624023
    3. ')]' → logprob: -12.750036239624023
    4. ']()' → logprob: -13.875036239624023
    5. '()' → logprob: -14.500036239624023
    6. '(' → logprob: -15.125036239624023
    7. '()]
' → logprob: -15.500036239624023
    8. '()],' → logprob: -16.250036239624023
    9. '()][' → logprob: -16.500036239624023
    10. '())' → logprob: -16.500036239624023

Token 138: ' __' (ID: 2516)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.7790203094482422
    2. '_' → logprob: -1.2790203094482422
    3. ' True' → logprob: -1.9040203094482422
    4. 'False' → logprob: -2.654020309448242
    5. ' _' → logprob: -3.654020309448242
    6. 'True' → logprob: -4.279020309448242
    7. '__' → logprob: -7.279020309448242
    8. ' input' → logprob: -7.529020309448242
    9. ' int' → logprob: -7.779020309448242
    10. ' ' → logprob: -7.779020309448242

Token 139: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0002015139180002734
    2. ' ==' → logprob: -9.875201225280762
    3. ' __' → logprob: -9.875201225280762
    4. '__' → logprob: -10.375201225280762
    5. 'main' → logprob: -10.750201225280762
    6. 'nam' → logprob: -11.250201225280762
    7. ' name' → logprob: -11.625201225280762
    8. ' ' → logprob: -11.750201225280762
    9. 'na' → logprob: -12.250201225280762
    10. '_' → logprob: -12.625201225280762

Token 140: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -14.000003814697266
    3. '__
' → logprob: -14.125003814697266
    4. 'me' → logprob: -14.500003814697266
    5. '___' → logprob: -14.500003814697266
    6. '__.' → logprob: -14.875003814697266
    7. '==' → logprob: -15.500003814697266
    8. '__.__' → logprob: -15.750003814697266
    9. '____' → logprob: -16.625003814697266
    10. 'm' → logprob: -16.875003814697266

Token 141: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00041970983147621155
    2. '==' → logprob: -7.875419616699219
    3. ' ==' → logprob: -10.875419616699219
    4. '_' → logprob: -11.125419616699219
    5. '=="' → logprob: -12.750419616699219
    6. '___' → logprob: -13.375419616699219
    7. '__
' → logprob: -14.875419616699219
    8. ' __' → logprob: -15.125419616699219
    9. '__.' → logprob: -15.375419616699219
    10. '=' → logprob: -15.750419616699219

Token 142: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6035873293876648
    2. '"' → logprob: -0.8535873293876648
    3. ''' → logprob: -3.6035873889923096
    4. ' "__' → logprob: -10.22858715057373
    5. ' __' → logprob: -12.22858715057373
    6. '___' → logprob: -13.85358715057373
    7. '("__' → logprob: -15.22858715057373
    8. ' '__' → logprob: -15.22858715057373
    9. '____' → logprob: -16.103588104248047
    10. '"log' → logprob: -16.228588104248047

Token 143: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04555272310972214
    2. '"' → logprob: -3.2955527305603027
    3. ''' → logprob: -4.920552730560303
    4. 'main' → logprob: -8.795552253723145
    5. '_main' → logprob: -10.795552253723145
    6. '___' → logprob: -11.920552253723145
    7. '__
' → logprob: -12.670552253723145
    8. ' "__' → logprob: -13.795552253723145
    9. '____' → logprob: -14.045552253723145
    10. '_MAIN' → logprob: -14.045552253723145

Token 144: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00028374246903695166
    2. '__":
' → logprob: -8.250284194946289
    3. '__:' → logprob: -10.750284194946289
    4. '__["' → logprob: -14.375284194946289
    5. '__("' → logprob: -15.750284194946289
    6. '__",' → logprob: -15.875284194946289
    7. '__.' → logprob: -16.50028419494629
    8. '"]' → logprob: -16.75028419494629
    9. '__.__' → logprob: -17.50028419494629
    10. '__*/' → logprob: -17.75028419494629

Token 145: '"]' (ID: 2601)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19483444094657898
    2. ']' → logprob: -2.4448344707489014
    3. '"]' → logprob: -2.9448344707489014
    4. ':' → logprob: -4.069834232330322
    5. ']:' → logprob: -4.694834232330322
    6. '"]:' → logprob: -5.444834232330322
    7. '__:' → logprob: -5.694834232330322
    8. '()]' → logprob: -6.444834232330322
    9. '():' → logprob: -7.069834232330322
    10. ')]' → logprob: -7.444834232330322


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 37.06%
Précision adaptée (1ère position): 37.06%
Précision (top 10): 72.03%
================================================================================
