================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
modulo = 10**9+7  # Par souci de clarté, je mets modulo au lieu de MOD
n = int(input())  # On suppose que l'utilisateur entre bien un entier, pas de vérif :/

# On prépare le tableau 4D pour la DP - c'est vraiment lourd, mais bon...
dp = [[[[0]*4 for _ in range(4)] for _ in range(4)] for _ in range(n+1)]
dp[0][3][3][3] = 1  # Cas initial, 333 : un peu magique honnêtement

# id lettres: A=0, G=1, C=2, T=3 (en vrai, on les code juste comme 0..3)

# Boucle sur la longueur de la chaîne
for i in range(n):
    for j in range(4):
        for k in range(4):
            for l in range(4):
                if not dp[i][j][k][l]:
                    continue   # Skip s'il n'y a rien à propager
                # essayer d'ajouter chaque nouvelle lettre à la suite
                for a in range(4):
                    # Quelques combinaisons interdites, il faudrait mieux faire ça, à revoir
                    if a == 2 and j == 1 and k == 0:  # AGC
                        continue
                    if a == 1 and j == 2 and k == 0:  # ACG
                        continue
                    if a == 2 and j == 0 and k == 1:  # GAC
                        continue
                    if a == 2 and j == 1 and l == 0:  # A?GC
                        continue
                    if a == 2 and k == 1 and l == 0:  # AG?C
                        continue
                    dp[i+1][a][j][k] = (dp[i+1][a][j][k] + dp[i][j][k][l]) % modulo  # modulo à chaque fois pour être sûr

# On somme tous les "états finaux" ; un peu pénible à lire, mais c'est explicit
answer = 0
for j in range(4):
    for k in range(4):
        for l in range(4):
            answer += dp[n][j][k][l]
answer %= modulo  # Normalisation du résultat, on oublie jamais le modulo normalement...
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: 'ulo' (ID: 5953)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23340855538845062
    2. '32' → logprob: -1.6084085702896118
    3. '`' → logprob: -5.858408451080322
    4. '"' → logprob: -5.983408451080322
    5. '10' → logprob: -7.108408451080322
    6. ''' → logprob: -7.608408451080322
    7. '0' → logprob: -7.608408451080322
    8. '```' → logprob: -8.48340892791748
    9. '1' → logprob: -8.73340892791748
    10. '  ' → logprob: -9.60840892791748

Token 4: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.288956880569458
    2. '10' → logprob: -1.413956880569458
    3. ' ' → logprob: -5.288956642150879
    4. '123' → logprob: -6.663956642150879
    5. '1' → logprob: -8.038956642150879
    6. '998' → logprob: -8.038956642150879
    7. '`' → logprob: -8.788956642150879
    8. '256' → logprob: -8.913956642150879
    9. '7' → logprob: -9.038956642150879
    10. '42' → logprob: -9.663956642150879

Token 5: '**' (ID: 410)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.48281192779541016
    2. '*' → logprob: -1.9828119277954102
    3. '\n' → logprob: -2.10781192779541
    4. '**' → logprob: -2.73281192779541
    5. '+' → logprob: -4.10781192779541
    6. '\' → logprob: -4.23281192779541
    7. '```' → logprob: -4.48281192779541
    8. '.' → logprob: -5.35781192779541
    9. '%
' → logprob: -6.10781192779541
    10. '#' → logprob: -6.23281192779541

Token 6: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002712297427933663
    2. '6' → logprob: -8.25027084350586
    3. ' ' → logprob: -12.37527084350586
    4. '5' → logprob: -12.75027084350586
    5. '```' → logprob: -13.75027084350586
    6. '3' → logprob: -14.00027084350586
    7. '8' → logprob: -14.75027084350586
    8. '2' → logprob: -15.50027084350586
    9. '**' → logprob: -16.37527084350586
    10. '0' → logprob: -16.50027084350586

Token 7: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007133854669518769
    2. ' +' → logprob: -7.250713348388672
    3. '+
' → logprob: -13.000713348388672
    4. '```' → logprob: -14.375713348388672
    5. '+

' → logprob: -16.000713348388672
    6. ' +
' → logprob: -16.500713348388672
    7. 'plus' → logprob: -16.625713348388672
    8. '＋' → logprob: -16.750713348388672
    9. '`' → logprob: -17.125713348388672
    10. '7' → logprob: -17.625713348388672

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -15.625
    3. '```' → logprob: -17.375
    4. ' ' → logprob: -17.75
    5. '07' → logprob: -18.875
    6. '9' → logprob: -19.125
    7. '37' → logprob: -19.625
    8. '10' → logprob: -19.875
    9. '6' → logprob: -20.5
    10. '17' → logprob: -20.625

Token 9: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13984808325767517
    2. '#' → logprob: -3.014847993850708
    3. '\n' → logprob: -3.639847993850708
    4. '\' → logprob: -3.889847993850708
    5. '**' → logprob: -4.389848232269287
    6. '```' → logprob: -5.139848232269287
    7. ',' → logprob: -5.764848232269287
    8. ')' → logprob: -5.889848232269287
    9. '%' → logprob: -5.889848232269287
    10. '+' → logprob: -6.014848232269287

Token 10: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8576645851135254
    2. '*' → logprob: -1.4826645851135254
    3. '\' → logprob: -2.8576645851135254
    4. '_' → logprob: -2.8576645851135254
    5. '#' → logprob: -2.9826645851135254
    6. ')' → logprob: -3.2326645851135254
    7. ' ' → logprob: -3.3576645851135254
    8. '
' → logprob: -3.7326645851135254
    9. '**' → logprob: -4.482664585113525
    10. '%' → logprob: -4.482664585113525

Token 11: ' Par' (ID: 3371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03205437958240509
    2. ' The' → logprob: -5.532054424285889
    3. ' Define' → logprob: -5.532054424285889
    4. ' Python' → logprob: -5.782054424285889
    5. ' modulo' → logprob: -6.032054424285889
    6. '<|end|>' → logprob: -6.032054424285889
    7. ' Prime' → logprob: -6.657054424285889
    8. ' prime' → logprob: -6.782054424285889
    9. ' modulus' → logprob: -6.782054424285889
    10. ' A' → logprob: -7.032054424285889

Token 12: ' souci' (ID: 126951)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.36426252126693726
    2. 'mod' → logprob: -2.489262580871582
    3. 'am' → logprob: -2.614262580871582
    4. 't' → logprob: -2.614262580871582
    5. 'nt' → logprob: -3.989262580871582
    6. 's' → logprob: -3.989262580871582
    7. 'a' → logprob: -4.364262580871582
    8. ' modulo' → logprob: -4.739262580871582
    9. '%' → logprob: -6.114262580871582
    10. 'n' → logprob: -6.239262580871582

Token 13: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3443843126296997
    2. ' d' → logprob: -1.9693843126296997
    3. ' ' → logprob: -2.71938419342041
    4. '<|end|>' → logprob: -3.84438419342041
    5. ',' → logprob: -3.96938419342041
    6. 'd' → logprob: -4.09438419342041
    7. 's' → logprob: -4.09438419342041
    8. 'de' → logprob: -5.34438419342041
    9. '.' → logprob: -6.34438419342041
    10. '  ' → logprob: -6.59438419342041

Token 14: ' cl' (ID: 567)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.9852375984191895
    2. ' cl' → logprob: -2.2352375984191895
    3. ' coh' → logprob: -2.8602375984191895
    4. 'pr' → logprob: -3.1102375984191895
    5. 'co' → logprob: -3.3602375984191895
    6. 's' → logprob: -3.3602375984191895
    7. 'pré' → logprob: -3.3602375984191895
    8. 'cl' → logprob: -3.4852375984191895
    9. ' ' → logprob: -3.4852375984191895
    10. ' prud' → logprob: -3.6102375984191895

Token 15: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.3165249824523926
    2. 'ar' → logprob: -1.4415249824523926
    3. 'ass' → logprob: -4.941524982452393
    4. 'aret' → logprob: -4.941524982452393
    5. 'air' → logprob: -5.316524982452393
    6. 'asse' → logprob: -5.441524982452393
    7. 'aire' → logprob: -5.816524982452393
    8. 'aré' → logprob: -6.316524982452393
    9. 'a' → logprob: -6.441524982452393
    10. '```' → logprob: -6.941524982452393

Token 16: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11524374037981033
    2. 'e' → logprob: -2.240243673324585
    3. '```' → logprob: -7.865243911743164
    4. 'és' → logprob: -7.990243911743164
    5. 'y' → logprob: -8.240243911743164
    6. ')' → logprob: -8.615243911743164
    7. '\' → logprob: -9.365243911743164
    8. 'éc' → logprob: -9.365243911743164
    9. 'è' → logprob: -9.365243911743164
    10. 'ié' → logprob: -9.490243911743164

Token 17: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5176065564155579
    2. '\' → logprob: -1.267606496810913
    3. '
' → logprob: -2.767606496810913
    4. '#' → logprob: -4.267606735229492
    5. ' ' → logprob: -4.517606735229492
    6. 'mod' → logprob: -4.642606735229492
    7. '  
' → logprob: -5.392606735229492
    8. '<|end|>' → logprob: -6.142606735229492
    9. '```' → logprob: -6.142606735229492
    10. ',' → logprob: -6.267606735229492

Token 18: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0660751461982727
    2. 'mod' → logprob: -4.441075325012207
    3. ' )' → logprob: -4.441075325012207
    4. ',' → logprob: -4.691075325012207
    5. '_' → logprob: -5.191075325012207
    6. ' modulo' → logprob: -5.191075325012207
    7. ' ' → logprob: -5.941075325012207
    8. ' mod' → logprob: -5.941075325012207
    9. ')' → logprob: -5.941075325012207
    10. ' ,' → logprob: -6.191075325012207

Token 19: ' mets' (ID: 87155)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5329768657684326
    2. ' continue' → logprob: -1.6579768657684326
    3. 'space' → logprob: -2.1579768657684326
    4. ' vais' → logprob: -2.5329768657684326
    5. 'continue' → logprob: -3.2829768657684326
    6. 's' → logprob: -3.2829768657684326
    7. 'n' → logprob: -3.4079768657684326
    8. 'met' → logprob: -3.4079768657684326
    9. 'm' → logprob: -3.7829768657684326
    10. ' met' → logprob: -3.9079768657684326

Token 20: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3627850115299225
    2. ' ' → logprob: -2.3627851009368896
    3. ' des' → logprob: -2.4877851009368896
    4. '_' → logprob: -2.9877851009368896
    5. 'des' → logprob: -3.9877851009368896
    6. ' un' → logprob: -4.7377848625183105
    7. 'un' → logprob: -5.6127848625183105
    8. ',' → logprob: -5.6127848625183105
    9. ' une' → logprob: -5.6127848625183105
    10. '<|end|>' → logprob: -5.6127848625183105

Token 21: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: ' lieu' (ID: 23979)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.384537696838379
    2. ' =' → logprob: -1.634537696838379
    3. ' début' → logprob: -2.134537696838379
    4. '```' → logprob: -2.759537696838379
    5. '=' → logprob: -3.009537696838379
    6. ' même' → logprob: -3.634537696838379
    7. '^' → logprob: -3.759537696838379
    8. ' code' → logprob: -3.884537696838379
    9. ' lendemain' → logprob: -3.884537696838379
    10. 'au' → logprob: -4.384537696838379

Token 23: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40730276703834534
    2. '_' → logprob: -1.907302737236023
    3. ' ' → logprob: -2.2823028564453125
    4. ' =' → logprob: -3.2823028564453125
    5. '<|end|>' → logprob: -3.5323028564453125
    6. ')' → logprob: -4.9073028564453125
    7. ' de' → logprob: -5.7823028564453125
    8. ',' → logprob: -6.0323028564453125
    9. '  ' → logprob: -7.2823028564453125
    10. '<|end|>' → logprob: -7.4073028564453125

Token 24: ' MOD' (ID: 32868)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3389001786708832
    2. ' mod' → logprob: -2.088900089263916
    3. ' modulo' → logprob: -2.088900089263916
    4. ' ' → logprob: -4.213900089263916
    5. 'MOD' → logprob: -5.088900089263916
    6. ' MOD' → logprob: -5.213900089263916
    7. ' modulus' → logprob: -5.713900089263916
    8. 'space' → logprob: -5.838900089263916
    9. ' space' → logprob: -6.713900089263916
    10. '_mod' → logprob: -6.713900089263916

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9789987802505493
    2. '\n' → logprob: -1.1039987802505493
    3. '\' → logprob: -2.6039986610412598
    4. '#' → logprob: -2.9789986610412598
    5. '*' → logprob: -3.3539986610412598
    6. '```' → logprob: -3.9789986610412598
    7. ' ' → logprob: -4.10399866104126
    8. ',' → logprob: -4.22899866104126
    9. '_' → logprob: -4.47899866104126
    10. ')' → logprob: -4.60399866104126

Token 26: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6860015988349915
    2. '
' → logprob: -1.4360015392303467
    3. '\' → logprob: -1.9360015392303467
    4. 'mod' → logprob: -3.4360015392303467
    5. '<|end|>' → logprob: -3.8110015392303467
    6. '#' → logprob: -4.936001777648926
    7. 'newline' → logprob: -5.061001777648926
    8. '```' → logprob: -5.061001777648926
    9. '  
' → logprob: -5.186001777648926
    10. ' ' → logprob: -5.686001777648926

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09970831125974655
    2. '=' → logprob: -2.474708318710327
    3. '_' → logprob: -5.724708080291748
    4. ' ' → logprob: -6.224708080291748
    5. ')' → logprob: -6.599708080291748
    6. '.' → logprob: -6.974708080291748
    7. ',' → logprob: -7.599708080291748
    8. '%' → logprob: -7.599708080291748
    9. '[' → logprob: -7.974708080291748
    10. '<|end|>' → logprob: -7.974708080291748

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22322654724121094
    2. 'int' → logprob: -2.098226547241211
    3. ' ' → logprob: -2.848226547241211
    4. '10' → logprob: -4.098226547241211
    5. '5' → logprob: -6.598226547241211
    6. '100' → logprob: -7.473226547241211
    7. '0' → logprob: -7.973226547241211
    8. ' input' → logprob: -8.973226547241211
    9. ' len' → logprob: -8.973226547241211
    10. '1' → logprob: -9.473226547241211

Token 29: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007077532820403576
    2. '(input' → logprob: -5.007077693939209
    3. '()' → logprob: -9.00707721710205
    4. '('' → logprob: -9.50707721710205
    5. '<|end|>' → logprob: -10.00707721710205
    6. 'input' → logprob: -10.13207721710205
    7. ' (' → logprob: -10.50707721710205
    8. '(
' → logprob: -11.50707721710205
    9. '("' → logprob: -11.75707721710205
    10. '(`' → logprob: -11.88207721710205

Token 30: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04222822189331055
    2. '())' → logprob: -3.6672282218933105
    3. '()' → logprob: -4.4172282218933105
    4. '(' → logprob: -5.6672282218933105
    5. '))' → logprob: -8.542228698730469
    6. '`)' → logprob: -10.292228698730469
    7. ' )' → logprob: -11.417228698730469
    8. '')' → logprob: -12.167228698730469
    9. '(
' → logprob: -12.167228698730469
    10. '(

' → logprob: -12.292228698730469

Token 31: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1191504001617432
    2. 'n' → logprob: -1.3691504001617432
    3. ' 
' → logprob: -1.9941504001617432
    4. '<|end|>' → logprob: -2.619150400161743
    5. ' ' → logprob: -2.994150400161743
    6. '\n' → logprob: -3.369150400161743
    7. 'a' → logprob: -3.369150400161743
    8. 's' → logprob: -3.744150400161743
    9. ')' → logprob: -3.994150400161743
    10. 'r' → logprob: -5.244150161743164

Token 32: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2913825511932373
    2. ' 
' → logprob: -1.6663825511932373
    3. '
' → logprob: -2.5413825511932373
    4. ' ' → logprob: -2.5413825511932373
    5. 'result' → logprob: -2.6663825511932373
    6. 'n' → logprob: -2.7913825511932373
    7. 's' → logprob: -2.7913825511932373
    8. 'data' → logprob: -3.1663825511932373
    9. ')' → logprob: -3.4163825511932373
    10. '\n' → logprob: -3.6663825511932373

Token 33: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005558936391025782
    2. ' n' → logprob: -8.250555992126465
    3. ' "' → logprob: -10.250555992126465
    4. 'n' → logprob: -10.250555992126465
    5. ' a' → logprob: -10.500555992126465
    6. '  ' → logprob: -11.000555992126465
    7. ' ' → logprob: -11.125555992126465
    8. ' )' → logprob: -11.250555992126465
    9. ' 
' → logprob: -11.375555992126465
    10. 'a' → logprob: -11.375555992126465

Token 34: ' suppose' (ID: 35968)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -1.5865799188613892
    2. ' n' → logprob: -1.7115799188613892
    3. ' souhaite' → logprob: -1.9615799188613892
    4. '_' → logprob: -2.2115797996520996
    5. 's' → logprob: -2.9615797996520996
    6. ' ' → logprob: -3.3365797996520996
    7. ' va' → logprob: -3.5865797996520996
    8. ' a' → logprob: -3.5865797996520996
    9. 'l' → logprob: -3.8365797996520996
    10. ' continue' → logprob: -3.8365797996520996

Token 35: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17460541427135468
    2. ' que' → logprob: -2.174605369567871
    3. 'n' → logprob: -4.299605369567871
    4. '(' → logprob: -4.799605369567871
    5. '(n' → logprob: -5.174605369567871
    6. ' n' → logprob: -5.674605369567871
    7. '  ' → logprob: -5.799605369567871
    8. ' that' → logprob: -6.049605369567871
    9. '<|end|>' → logprob: -6.299605369567871
    10. ' (' → logprob: -6.424605369567871

Token 36: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.069340780377388
    2. 'n' → logprob: -3.069340705871582
    3. ' ' → logprob: -3.944340705871582
    4. ' l' → logprob: -8.069340705871582
    5. ' la' → logprob: -8.819340705871582
    6. ' input' → logprob: -9.194340705871582
    7. 'input' → logprob: -9.194340705871582
    8. '  ' → logprob: -9.819340705871582
    9. ' `' → logprob: -9.944340705871582
    10. ' on' → logprob: -10.069340705871582

Token 37: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.3057418167591095
    2. 'a' → logprob: -2.055741786956787
    3. ''on' → logprob: -2.805741786956787
    4. ''' → logprob: -3.930741786956787
    5. ''entrée' → logprob: -3.930741786956787
    6. 'input' → logprob: -4.430741786956787
    7. 'e' → logprob: -5.055741786956787
    8. ''ensemble' → logprob: -6.055741786956787
    9. ''ent' → logprob: -6.180741786956787
    10. ' on' → logprob: -6.180741786956787

Token 38: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.8864392638206482
    2. ' va' → logprob: -1.261439323425293
    3. ' sais' → logprob: -2.261439323425293
    4. ' souhaite' → logprob: -2.761439323425293
    5. ' veut' → logprob: -2.886439323425293
    6. ' a' → logprob: -3.636439323425293
    7. ' ' → logprob: -3.886439323425293
    8. ' entr' → logprob: -4.511439323425293
    9. 'entre' → logprob: -5.636439323425293
    10. 'entr' → logprob: -5.761439323425293

Token 39: ' bien' (ID: 5340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014377268962562084
    2. ' un' → logprob: -4.514377117156982
    3. '  ' → logprob: -6.139377117156982
    4. 'n' → logprob: -7.889377117156982
    5. ' une' → logprob: -8.63937759399414
    6. ' ' → logprob: -9.13937759399414
    7. '<|end|>' → logprob: -9.26437759399414
    8. 'un' → logprob: -9.88937759399414
    9. ' n' → logprob: -10.01437759399414
    10. ' a' → logprob: -10.13937759399414

Token 40: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9399008750915527
    2. 'n' → logprob: -1.3149008750915527
    3. ' un' → logprob: -1.3149008750915527
    4. ' n' → logprob: -3.3149008750915527
    5. 'un' → logprob: -4.939900875091553
    6. ',' → logprob: -5.314900875091553
    7. '<|end|>' → logprob: -5.814900875091553
    8. '```' → logprob: -5.939900875091553
    9. ' `' → logprob: -6.189900875091553
    10. '  ' → logprob: -6.314900875091553

Token 41: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.8661520481109619
    2. ' ' → logprob: -1.116152048110962
    3. ' nombre' → logprob: -2.491152048110962
    4. 'ent' → logprob: -2.491152048110962
    5. 'nombre' → logprob: -3.616152048110962
    6. ' espace' → logprob: -3.616152048110962
    7. 'e' → logprob: -4.866151809692383
    8. '  ' → logprob: -4.991151809692383
    9. 'n' → logprob: -5.491151809692383
    10. ' \' → logprob: -6.241151809692383

Token 42: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4621971547603607
    2. '
' → logprob: -2.3371970653533936
    3. 'n' → logprob: -2.4621970653533936
    4. ' 
' → logprob: -2.7121970653533936
    5. ')' → logprob: -3.0871970653533936
    6. '\n' → logprob: -3.8371970653533936
    7. '  
' → logprob: -4.212197303771973
    8. '<|end|>' → logprob: -4.587197303771973
    9. '\' → logprob: -4.712197303771973
    10. '#' → logprob: -5.337197303771973

Token 43: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010037725791335106
    2. ' n' → logprob: -5.385037899017334
    3. 'n' → logprob: -5.635037899017334
    4. ' 
' → logprob: -7.885037899017334
    5. ' )' → logprob: -8.510037422180176
    6. ')' → logprob: -8.885037422180176
    7. ' m' → logprob: -9.260037422180176
    8. ' ' → logprob: -9.260037422180176
    9. ' ,' → logprob: -9.385037422180176
    10. ',' → logprob: -9.760037422180176

Token 44: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1754871606826782
    2. ' une' → logprob: -1.5504871606826782
    3. ' un' → logprob: -1.5504871606826782
    4. ' de' → logprob: -2.3004870414733887
    5. ' d' → logprob: -2.6754870414733887
    6. ' forcément' → logprob: -3.3004870414733887
    7. ' seulement' → logprob: -4.800487041473389
    8. 's' → logprob: -4.925487041473389
    9. ' uniquement' → logprob: -5.175487041473389
    10. ' simplement' → logprob: -5.175487041473389

Token 45: ' vér' (ID: 42524)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7010703086853027
    2. ' problème' → logprob: -2.0760703086853027
    3. '  ' → logprob: -2.3260703086853027
    4. ' commentaire' → logprob: -2.5760703086853027
    5. ' 

' → logprob: -3.5760703086853027
    6. 'n' → logprob: -4.076070308685303
    7. '  

' → logprob: -4.076070308685303
    8. '\n' → logprob: -4.201070308685303
    9. ' \' → logprob: -4.451070308685303
    10. ' input' → logprob: -4.451070308685303

Token 46: 'if' (ID: 366)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.0013445195509120822
    2. 'if' → logprob: -6.876344680786133
    3. 'ication' → logprob: -9.251344680786133
    4. 'ifie' → logprob: -9.251344680786133
    5. 'ifi' → logprob: -9.751344680786133
    6. 'ifica' → logprob: -10.876344680786133
    7. 'i' → logprob: -11.501344680786133
    8. 'ifications' → logprob: -11.876344680786133
    9. 'fic' → logprob: -12.251344680786133
    10. '```' → logprob: -12.376344680786133

Token 47: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5750482678413391
    2. 'n' → logprob: -1.0750482082366943
    3. ')' → logprob: -3.8250482082366943
    4. ',' → logprob: -4.700048446655273
    5. 's' → logprob: -4.825048446655273
    6. ' 
' → logprob: -4.950048446655273
    7. '' → logprob: -4.950048446655273
    8. '\n' → logprob: -5.075048446655273
    9. '\' → logprob: -5.325048446655273
    10. '.' → logprob: -5.450048446655273

Token 48: '/

' (ID: 15094)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04358664155006409
    2. ' s' → logprob: -4.918586730957031
    3. ' dp' → logprob: -5.043586730957031
    4. ' 
' → logprob: -5.168586730957031
    5. 'n' → logprob: -5.918586730957031
    6. ' n' → logprob: -6.043586730957031
    7. ' f' → logprob: -6.168586730957031
    8. ' result' → logprob: -6.168586730957031
    9. ' 

' → logprob: -6.293586730957031
    10. ' a' → logprob: -6.293586730957031

Token 49: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1542506217956543
    2. 'fact' → logprob: -1.5292506217956543
    3. 'result' → logprob: -1.6542506217956543
    4. 'a' → logprob: -2.4042506217956543
    5. 's' → logprob: -2.4042506217956543
    6. 'factor' → logprob: -3.2792506217956543
    7. 'res' → logprob: -4.154250621795654
    8. '\n' → logprob: -4.654250621795654
    9. 'f' → logprob: -4.904250621795654
    10. 't' → logprob: -5.654250621795654

Token 50: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8815373182296753
    2. 'fact' → logprob: -1.2565373182296753
    3. 'a' → logprob: -2.881537437438965
    4. 'factor' → logprob: -3.131537437438965
    5. ' dp' → logprob: -3.256537437438965
    6. 'fib' → logprob: -3.381537437438965
    7. 'f' → logprob: -3.631537437438965
    8. 's' → logprob: -3.756537437438965
    9. 'result' → logprob: -4.256537437438965
    10. 'arr' → logprob: -4.756537437438965

Token 51: ' prépare' (ID: 150142)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.749121069908142
    2. ' s' → logprob: -2.2491211891174316
    3. ' for' → logprob: -2.2491211891174316
    4. ' a' → logprob: -2.3741211891174316
    5. ' dp' → logprob: -2.7491211891174316
    6. 'a' → logprob: -2.7491211891174316
    7. 's' → logprob: -2.8741211891174316
    8. 'for' → logprob: -2.9991211891174316
    9. ' =' → logprob: -3.1241211891174316
    10. ' n' → logprob: -3.3741211891174316

Token 52: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6101971864700317
    2. ' une' → logprob: -2.110197067260742
    3. ' un' → logprob: -2.610197067260742
    4. 'dp' → logprob: -2.610197067260742
    5. ' ' → logprob: -2.735197067260742
    6. ' dp' → logprob: -3.485197067260742
    7. ' l' → logprob: -3.735197067260742
    8. ' les' → logprob: -3.860197067260742
    9. 's' → logprob: -4.235197067260742
    10. 'a' → logprob: -5.360197067260742

Token 53: ' tableau' (ID: 67053)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6620242595672607
    2. 'dp' → logprob: -0.9120242595672607
    3. ' tableau' → logprob: -4.03702449798584
    4. 'fact' → logprob: -4.28702449798584
    5. ' facteur' → logprob: -4.91202449798584
    6. 's' → logprob: -5.03702449798584
    7. ' fact' → logprob: -5.91202449798584
    8. ' table' → logprob: -5.91202449798584
    9. 'factor' → logprob: -6.03702449798584
    10. '```' → logprob: -6.16202449798584

Token 54: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1515144407749176
    2. ' dp' → logprob: -2.0265145301818848
    3. 's' → logprob: -6.151514530181885
    4. ' f' → logprob: -6.651514530181885
    5. 't' → logprob: -7.026514530181885
    6. ' ' → logprob: -7.151514530181885
    7. 'd' → logprob: -7.276514530181885
    8. 'f' → logprob: -7.526514530181885
    9. 'a' → logprob: -7.901514530181885
    10. '_dp' → logprob: -7.901514530181885

Token 55: '4' (ID: 19)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01148006971925497
    2. ' dp' → logprob: -5.76147985458374
    3. 'f' → logprob: -6.26147985458374
    4. 'd' → logprob: -6.38647985458374
    5. 'a' → logprob: -7.13647985458374
    6. ' =' → logprob: -7.13647985458374
    7. 's' → logprob: -7.13647985458374
    8. 'arr' → logprob: -7.38647985458374
    9. 't' → logprob: -7.76147985458374
    10. 'fact' → logprob: -8.386480331420898

Token 56: 'D' (ID: 35)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5237922072410583
    2. 'dp' → logprob: -1.6487922668457031
    3. '_' → logprob: -3.148792266845703
    4. ' ' → logprob: -3.398792266845703
    5. '_dp' → logprob: -3.398792266845703
    6. 's' → logprob: -4.023792266845703
    7. '[' → logprob: -4.148792266845703
    8. '[]' → logprob: -4.148792266845703
    9. ' dp' → logprob: -4.523792266845703
    10. '=' → logprob: -4.898792266845703

Token 57: ' pour' (ID: 1930)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9466361403465271
    2. 'dp' → logprob: -1.0716361999511719
    3. ' ' → logprob: -2.571636199951172
    4. 't' → logprob: -3.196636199951172
    5. 'd' → logprob: -3.321636199951172
    6. 's' → logprob: -3.946636199951172
    7. ' d' → logprob: -4.321636199951172
    8. 'a' → logprob: -4.321636199951172
    9. '_' → logprob: -4.821636199951172
    10. ' t' → logprob: -4.821636199951172

Token 58: ' la' (ID: 557)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.04960782080888748
    2. 'dp' → logprob: -3.174607753753662
    3. ' la' → logprob: -6.049607753753662
    4. ' les' → logprob: -7.049607753753662
    5. ' stock' → logprob: -7.174607753753662
    6. ' l' → logprob: -7.299607753753662
    7. ' f' → logprob: -8.42460823059082
    8. ' ' → logprob: -8.54960823059082
    9. ' compter' → logprob: -8.79960823059082
    10. '_dp' → logprob: -8.92460823059082

Token 59: ' DP' (ID: 51992)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.1374438852071762
    2. 'dp' → logprob: -2.137443780899048
    3. ' DP' → logprob: -5.262444019317627
    4. '_dp' → logprob: -6.887444019317627
    5. ' dynamique' → logprob: -7.262444019317627
    6. ' f' → logprob: -7.387444019317627
    7. ' dynamic' → logprob: -7.512444019317627
    8. 'DP' → logprob: -7.637444019317627
    9. ' comb' → logprob: -7.887444019317627
    10. 's' → logprob: -8.512443542480469

Token 60: ' -' (ID: 533)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7107933759689331
    2. ' dp' → logprob: -1.210793375968933
    3. 'd' → logprob: -1.835793375968933
    4. 't' → logprob: -4.960793495178223
    5. 's' → logprob: -4.960793495178223
    6. ' ' → logprob: -5.085793495178223
    7. 'D' → logprob: -5.210793495178223
    8. 'DP' → logprob: -5.460793495178223
    9. ' d' → logprob: -5.585793495178223
    10. 'a' → logprob: -6.210793495178223

Token 61: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9721617698669434
    2. ' dp' → logprob: -0.9721617698669434
    3. 'dp' → logprob: -2.0971617698669434
    4. 'd' → logprob: -3.0971617698669434
    5. ' d' → logprob: -4.222161769866943
    6. '[' → logprob: -4.597161769866943
    7. ' dimensions' → logprob: -4.597161769866943
    8. '_' → logprob: -5.347161769866943
    9. 'dimensions' → logprob: -5.472161769866943
    10. 's' → logprob: -5.847161769866943

Token 62: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.8892252445220947
    2. '[' → logprob: -2.0142252445220947
    3. ' =' → logprob: -2.1392252445220947
    4. '_' → logprob: -3.1392252445220947
    5. 'omme' → logprob: -3.1392252445220947
    6. 'o' → logprob: -3.2642252445220947
    7. 'om' → logprob: -3.2642252445220947
    8. '=' → logprob: -3.3892252445220947
    9. 'ode' → logprob: -3.5142252445220947
    10. '#' → logprob: -3.5142252445220947

Token 63: ' vraiment' (ID: 26637)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6286805868148804
    2. '[' → logprob: -1.2536805868148804
    3. ' une' → logprob: -2.25368070602417
    4. ' ' → logprob: -4.62868070602417
    5. ' un' → logprob: -4.62868070602417
    6. ' =' → logprob: -5.12868070602417
    7. ' a' → logprob: -5.25368070602417
    8. ' [[[' → logprob: -5.62868070602417
    9. '```' → logprob: -5.75368070602417
    10. ' numpy' → logprob: -5.75368070602417

Token 64: ' lourd' (ID: 150773)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4177094101905823
    2. ' très' → logprob: -2.5427093505859375
    3. ' un' → logprob: -2.6677093505859375
    4. ' énorme' → logprob: -3.9177093505859375
    5. ' long' → logprob: -4.1677093505859375
    6. ' a' → logprob: -4.4177093505859375
    7. 'import' → logprob: -4.4177093505859375
    8. ' la' → logprob: -4.9177093505859375
    9. ' impossible' → logprob: -4.9177093505859375
    10. ' difficile' → logprob: -5.1677093505859375

Token 65: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8487378358840942
    2. ' dp' → logprob: -1.5987378358840942
    3. '[' → logprob: -1.7237378358840942
    4. ' ' → logprob: -2.9737377166748047
    5. ',' → logprob: -3.5987377166748047
    6. '\' → logprob: -3.8487377166748047
    7. 'm' → logprob: -4.348737716674805
    8. 'n' → logprob: -4.473737716674805
    9. '[
' → logprob: -4.723737716674805
    10. 'import' → logprob: -4.723737716674805

Token 66: ' mais' (ID: 2899)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3274965286254883
    2. ' n' → logprob: -1.8274965286254883
    3. 'dtype' → logprob: -2.0774965286254883
    4. ' mais' → logprob: -2.5774965286254883
    5. ' [' → logprob: -2.8274965286254883
    6. '[' → logprob: -3.2024965286254883
    7. ' dtype' → logprob: -3.3274965286254883
    8. ')' → logprob: -3.3274965286254883
    9. 'n' → logprob: -3.9524965286254883
    10. ' import' → logprob: -4.077496528625488

Token 67: ' bon' (ID: 4846)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7191120386123657
    2. ' une' → logprob: -1.8441120386123657
    3. ' ' → logprob: -2.844111919403076
    4. ' la' → logprob: -3.219111919403076
    5. ' ' → logprob: -3.344111919403076
    6. ' n' → logprob: -3.594111919403076
    7. ' ça' → logprob: -3.969111919403076
    8. ' le' → logprob: -3.969111919403076
    9. ' [' → logprob: -4.219111919403076
    10. ' l' → logprob: -4.469111919403076

Token 68: '...
' (ID: 4908)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8724361658096313
    2. ' dp' → logprob: -1.3724361658096313
    3. ' ' → logprob: -2.247436046600342
    4. '
' → logprob: -2.997436046600342
    5. ',' → logprob: -3.372436046600342
    6. 'n' → logprob: -3.747436046600342
    7. '  
' → logprob: -4.122436046600342
    8. '[' → logprob: -4.372436046600342
    9. 'm' → logprob: -4.372436046600342
    10. ' 
' → logprob: -4.622436046600342

Token 69: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3987867832183838
    2. ' dp' → logprob: -1.5237867832183838
    3. 'd' → logprob: -3.023786783218384
    4. '
' → logprob: -3.773786783218384
    5. ' 
' → logprob: -4.398786544799805
    6. '\' → logprob: -5.523786544799805
    7. ' ' → logprob: -5.898786544799805
    8. 'DP' → logprob: -6.148786544799805
    9. '  
' → logprob: -6.273786544799805
    10. 's' → logprob: -6.398786544799805

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041864749044179916
    2. '[' → logprob: -3.4168646335601807
    3. ' ' → logprob: -5.16686487197876
    4. '=' → logprob: -6.41686487197876
    5. ' =[' → logprob: -7.41686487197876
    6. '=[' → logprob: -9.416864395141602
    7. ' [' → logprob: -9.416864395141602
    8. '  ' → logprob: -10.666864395141602
    9. '   ' → logprob: -10.916864395141602
    10. '[i' → logprob: -12.291864395141602

Token 71: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.046770889312028885
    2. '[[' → logprob: -3.1717708110809326
    3. ' [' → logprob: -6.421771049499512
    4. ' [[[' → logprob: -6.546771049499512
    5. '[' → logprob: -7.296771049499512
    6. ' ' → logprob: -11.421771049499512
    7. ' []' → logprob: -11.546771049499512
    8. ' [{}' → logprob: -13.296771049499512
    9. '[n' → logprob: -14.171771049499512
    10. ' {}' → logprob: -14.671771049499512

Token 72: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.10201309621334076
    2. '[' → logprob: -2.477013111114502
    3. '0' → logprob: -4.352013111114502
    4. '[
' → logprob: -10.602012634277344
    5. ' [' → logprob: -10.852012634277344
    6. ' [[' → logprob: -10.852012634277344
    7. ' [[[' → logprob: -10.852012634277344
    8. 'False' → logprob: -11.227012634277344
    9. '[int' → logprob: -13.102012634277344
    10. '[['' → logprob: -13.852012634277344

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008180848672054708
    2. '-' → logprob: -7.250818252563477
    3. ' ' → logprob: -9.750818252563477
    4. 'False' → logprob: -10.250818252563477
    5. 'None' → logprob: -11.500818252563477
    6. ' -' → logprob: -13.750818252563477
    7. '[' → logprob: -13.875818252563477
    8. 'mod' → logprob: -15.438318252563477
    9. ']' → logprob: -15.500818252563477
    10. ' False' → logprob: -15.813318252563477

Token 74: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13587528467178345
    2. ']' → logprob: -2.3858752250671387
    3. ']*' → logprob: -3.8858752250671387
    4. 'for' → logprob: -4.635875225067139
    5. ' ' → logprob: -5.885875225067139
    6. ' ]' → logprob: -6.635875225067139
    7. ')' → logprob: -8.385875701904297
    8. '	for' → logprob: -8.385875701904297
    9. ']*(' → logprob: -9.260875701904297
    10. '  ' → logprob: -10.010875701904297

Token 75: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1656131744384766
    2. '2' → logprob: -1.6656131744384766
    3. '11' → logprob: -2.1656131744384766
    4. '3' → logprob: -2.4156131744384766
    5. '(' → logprob: -2.4156131744384766
    6. '(n' → logprob: -2.7906131744384766
    7. '10' → logprob: -2.9156131744384766
    8. '5' → logprob: -3.6656131744384766
    9. '7' → logprob: -4.915613174438477
    10. 'n' → logprob: -5.040613174438477

Token 76: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1339990347623825
    2. 'for' → logprob: -2.1339991092681885
    3. ']' → logprob: -5.133998870849609
    4. ')' → logprob: -7.383998870849609
    5. '	for' → logprob: -8.38399887084961
    6. ' ]' → logprob: -9.25899887084961
    7. ' ' → logprob: -9.25899887084961
    8. '0' → logprob: -10.50899887084961
    9. '+' → logprob: -10.75899887084961
    10. '4' → logprob: -11.13399887084961

Token 77: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16123585402965546
    2. ' _' → logprob: -1.9112358093261719
    3. '_' → logprob: -8.036235809326172
    4. ' ' → logprob: -8.286235809326172
    5. ' in' → logprob: -8.536235809326172
    6. ' i' → logprob: -8.911235809326172
    7. 'range' → logprob: -9.911235809326172
    8. ' j' → logprob: -10.411235809326172
    9. '_range' → logprob: -11.911235809326172
    10. '	range' → logprob: -12.286235809326172

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036409306339919567
    2. 'in' → logprob: -5.628641128540039
    3. ' ' → logprob: -11.253641128540039
    4. 'range' → logprob: -11.378641128540039
    5. '<|end|>' → logprob: -12.378641128540039
    6. 'd' → logprob: -13.253641128540039
    7. 'n' → logprob: -13.628641128540039
    8. '```' → logprob: -13.753641128540039
    9. 's' → logprob: -14.253641128540039
    10. '  ' → logprob: -14.253641128540039

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869296610355377
    2. 'range' → logprob: -1.1369296312332153
    3. '(range' → logprob: -10.386929512023926
    4. '	range' → logprob: -11.511929512023926
    5. ' ' → logprob: -11.761929512023926
    6. ' xrange' → logprob: -12.636929512023926
    7. '[' → logprob: -13.636929512023926
    8. '   ' → logprob: -13.761929512023926
    9. '  ' → logprob: -14.261929512023926
    10. '_range' → logprob: -14.699429512023926

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012270158622413874
    2. '(n' → logprob: -6.876226902008057
    3. ' (' → logprob: -8.626227378845215
    4. ' ' → logprob: -12.751227378845215
    5. ']' → logprob: -13.126227378845215
    6. '((' → logprob: -13.376227378845215
    7. '](' → logprob: -13.501227378845215
    8. '4' → logprob: -13.751227378845215
    9. '(
' → logprob: -13.813727378845215
    10. ')' → logprob: -14.313727378845215

Token 81: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.21585650742053986
    2. 'n' → logprob: -2.3408565521240234
    3. '5' → logprob: -3.2158565521240234
    4. '3' → logprob: -3.8408565521240234
    5. '7' → logprob: -4.965856552124023
    6. '6' → logprob: -5.090856552124023
    7. '10' → logprob: -5.340856552124023
    8. '2' → logprob: -5.590856552124023
    9. '(n' → logprob: -5.715856552124023
    10. '(' → logprob: -5.965856552124023

Token 82: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018320614472031593
    2. ')' → logprob: -4.018320560455322
    3. ']' → logprob: -9.26832103729248
    4. ' )' → logprob: -9.51832103729248
    5. ' ]' → logprob: -13.64332103729248
    6. ' ' → logprob: -15.14332103729248
    7. ')])' → logprob: -15.14332103729248
    8. '))' → logprob: -15.51832103729248
    9. ']]' → logprob: -15.64332103729248
    10. ')][' → logprob: -16.268320083618164

Token 83: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1384759247303009
    2. 'for' → logprob: -2.1384758949279785
    3. ']' → logprob: -4.5134758949279785
    4. '	for' → logprob: -8.013476371765137
    5. '   ' → logprob: -9.013476371765137
    6. ' ' → logprob: -10.513476371765137
    7. ' ]' → logprob: -11.513476371765137
    8. '       ' → logprob: -11.763476371765137
    9. '  ' → logprob: -12.388476371765137
    10. '    ' → logprob: -12.888476371765137

Token 84: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03825056552886963
    2. ' _' → logprob: -3.28825044631958
    3. '_' → logprob: -8.538250923156738
    4. 'in' → logprob: -11.538250923156738
    5. '_in' → logprob: -13.663250923156738
    6. ' ' → logprob: -13.663250923156738
    7. ' n' → logprob: -14.288250923156738
    8. ' range' → logprob: -15.288250923156738
    9. ' i' → logprob: -16.538249969482422
    10. '<|end|>' → logprob: -16.788249969482422

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00013977376511320472
    2. 'in' → logprob: -9.125140190124512
    3. ' range' → logprob: -10.750140190124512
    4. 'range' → logprob: -11.750140190124512
    5. ' ' → logprob: -14.125140190124512
    6. '_' → logprob: -15.125140190124512
    7. 's' → logprob: -15.750140190124512
    8. '(range' → logprob: -16.000139236450195
    9. '<|end|>' → logprob: -17.000139236450195
    10. ' i' → logprob: -17.625139236450195

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3872181475162506
    2. 'range' → logprob: -1.1372181177139282
    3. '(range' → logprob: -8.012218475341797
    4. 'n' → logprob: -12.262218475341797
    5. '	range' → logprob: -12.887218475341797
    6. '(n' → logprob: -13.012218475341797
    7. '[n' → logprob: -13.512218475341797
    8. '[' → logprob: -13.637218475341797
    9. '_range' → logprob: -13.762218475341797
    10. ' ' → logprob: -13.762218475341797

Token 87: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3912658989429474
    2. '(' → logprob: -1.141265869140625
    3. ' (' → logprob: -5.641265869140625
    4. '(range' → logprob: -7.266265869140625
    5. ' range' → logprob: -9.641265869140625
    6. ' ' → logprob: -10.516265869140625
    7. '((' → logprob: -10.641265869140625
    8. ' n' → logprob: -12.891265869140625
    9. 'range' → logprob: -12.891265869140625
    10. '(s' → logprob: -13.016265869140625

Token 88: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4304783046245575
    2. 'n' → logprob: -1.1804783344268799
    3. '5' → logprob: -4.305478096008301
    4. '10' → logprob: -4.680478096008301
    5. '2' → logprob: -5.180478096008301
    6. '3' → logprob: -5.555478096008301
    7. ' n' → logprob: -6.180478096008301
    8. '(n' → logprob: -6.305478096008301
    9. ' ' → logprob: -6.680478096008301
    10. '7' → logprob: -6.805478096008301

Token 89: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006112939678132534
    2. ']' → logprob: -5.131113052368164
    3. ')' → logprob: -8.631113052368164
    4. ']]' → logprob: -12.881113052368164
    5. ' ]' → logprob: -13.756113052368164
    6. '])' → logprob: -14.006113052368164
    7. ' )' → logprob: -15.131113052368164
    8. ')],' → logprob: -15.381113052368164
    9. '   ' → logprob: -15.631113052368164
    10. '}]' → logprob: -16.131113052368164

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28568679094314575
    2. 'for' → logprob: -1.535686731338501
    3. ']' → logprob: -3.410686731338501
    4. '	for' → logprob: -9.410686492919922
    5. '   ' → logprob: -10.535686492919922
    6. ' ]' → logprob: -10.535686492919922
    7. ' ' → logprob: -11.410686492919922
    8. '[' → logprob: -11.785686492919922
    9. ']*' → logprob: -12.160686492919922
    10. ')' → logprob: -12.160686492919922

Token 91: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009763598791323602
    2. ' n' → logprob: -7.0009765625
    3. 'range' → logprob: -10.5009765625
    4. ' ' → logprob: -10.8759765625
    5. '(range' → logprob: -11.5009765625
    6. ' _' → logprob: -12.1259765625
    7. '_' → logprob: -14.2509765625
    8. '	range' → logprob: -14.3759765625
    9. '_range' → logprob: -14.5009765625
    10. ' in' → logprob: -15.1259765625

Token 92: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24217581748962402
    2. 'range' → logprob: -2.117175817489624
    3. ' in' → logprob: -2.367175817489624
    4. 'in' → logprob: -7.367176055908203
    5. '(range' → logprob: -8.117176055908203
    6. '_' → logprob: -11.742176055908203
    7. '	range' → logprob: -11.742176055908203
    8. 'n' → logprob: -12.117176055908203
    9. '_range' → logprob: -12.992176055908203
    10. ' n' → logprob: -12.992176055908203

Token 93: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12699824571609497
    2. 'range' → logprob: -2.12699818611145
    3. '(range' → logprob: -9.626997947692871
    4. 'n' → logprob: -13.501997947692871
    5. '(n' → logprob: -13.876997947692871
    6. '[n' → logprob: -14.501997947692871
    7. ' ' → logprob: -14.626997947692871
    8. '	range' → logprob: -14.626997947692871
    9. ' n' → logprob: -15.751997947692871
    10. 'rang' → logprob: -16.876998901367188

Token 94: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016080591827630997
    2. '(' → logprob: -4.141080379486084
    3. '((' → logprob: -10.766080856323242
    4. ' (' → logprob: -10.891080856323242
    5. 'n' → logprob: -12.766080856323242
    6. '(range' → logprob: -13.641080856323242
    7. ' n' → logprob: -14.516080856323242
    8. '2' → logprob: -15.016080856323242
    9. ']' → logprob: -15.141080856323242
    10. ' ' → logprob: -15.391080856323242

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030455967411398888
    2. ')]' → logprob: -3.530456066131592
    3. ')' → logprob: -7.905456066131592
    4. ' +' → logprob: -8.030455589294434
    5. ' )' → logprob: -12.155455589294434
    6. ']' → logprob: -12.655455589294434
    7. ')])' → logprob: -14.280455589294434
    8. '+)' → logprob: -14.655455589294434
    9. ')],' → logprob: -14.905455589294434
    10. '+]' → logprob: -15.280455589294434

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.146429223008454e-05
    2. ' ' → logprob: -9.87506103515625
    3. '2' → logprob: -11.62506103515625
    4. ')' → logprob: -14.37506103515625
    5. '```' → logprob: -15.62506103515625
    6. '7' → logprob: -16.81256103515625
    7. '3' → logprob: -17.18756103515625
    8. '  ' → logprob: -17.31256103515625
    9. '0' → logprob: -17.43756103515625
    10. '   ' → logprob: -17.50006103515625

Token 97: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006147180683910847
    2. ')' → logprob: -5.131147384643555
    3. ']' → logprob: -8.506147384643555
    4. ')])' → logprob: -11.506147384643555
    5. '])' → logprob: -12.631147384643555
    6. ' )' → logprob: -13.881147384643555
    7. ')],' → logprob: -14.131147384643555
    8. '])]' → logprob: -14.256147384643555
    9. '))' → logprob: -15.256147384643555
    10. ')][' → logprob: -16.381147384643555

Token 98: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4493769407272339
    2. ' ' → logprob: -1.9493769407272339
    3. ' for' → logprob: -1.9493769407272339
    4. '<|end|>' → logprob: -2.0743770599365234
    5. '
' → logprob: -2.8243770599365234
    6. 'n' → logprob: -2.8243770599365234
    7. ' 
' → logprob: -2.9493770599365234
    8. ')' → logprob: -3.0743770599365234
    9. 'dp' → logprob: -3.5743770599365234
    10. '[' → logprob: -3.5743770599365234

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001349403290078044
    2. '[n' → logprob: -6.626349449157715
    3. '\[' → logprob: -11.126349449157715
    4. '[
' → logprob: -13.001349449157715
    5. '[len' → logprob: -13.376349449157715
    6. '[user' → logprob: -13.626349449157715
    7. '```' → logprob: -14.126349449157715
    8. '[num' → logprob: -15.126349449157715
    9. '[np' → logprob: -15.376349449157715
    10. '<|end|>' → logprob: -15.376349449157715

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000473091087769717
    2. '1' → logprob: -7.7504730224609375
    3. ' ' → logprob: -10.125473022460938
    4. '3' → logprob: -14.750473022460938
    5. '۰' → logprob: -15.125473022460938
    6. '[' → logprob: -15.375473022460938
    7. ')' → logprob: -15.500473022460938
    8. '2' → logprob: -15.687973022460938
    9. '4' → logprob: -15.875473022460938
    10. '```' → logprob: -16.250473022460938

Token 101: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14854051172733307
    2. ']' → logprob: -2.023540496826172
    3. '[' → logprob: -5.148540496826172
    4. '][-' → logprob: -11.648540496826172
    5. ' ][' → logprob: -12.148540496826172
    6. ')' → logprob: -12.148540496826172
    7. '0' → logprob: -12.273540496826172
    8. '])' → logprob: -13.148540496826172
    9. ']][' → logprob: -13.273540496826172
    10. ']
' → logprob: -13.523540496826172

Token 102: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015042672166600823
    2. '3' → logprob: -6.501504421234131
    3. ' ' → logprob: -14.126503944396973
    4. '-' → logprob: -14.751503944396973
    5. '1' → logprob: -15.439003944396973
    6. '
' → logprob: -15.626503944396973
    7. '

' → logprob: -16.50150489807129
    8. '4' → logprob: -16.81400489807129
    9. '```' → logprob: -17.00150489807129
    10. '2' → logprob: -17.18900489807129

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023762896307744086
    2. ']' → logprob: -8.375237464904785
    3. '3' → logprob: -12.625237464904785
    4. ' ][' → logprob: -13.000237464904785
    5. '[' → logprob: -13.500237464904785
    6. ' ' → logprob: -16.7502384185791
    7. ']
' → logprob: -17.0002384185791
    8. '1' → logprob: -17.2502384185791
    9. '0' → logprob: -17.3752384185791
    10. '-' → logprob: -17.8752384185791

Token 104: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '-' → logprob: -15.750004768371582
    5. '۳' → logprob: -17.6250057220459
    6. '1' → logprob: -17.6250057220459
    7. '৩' → logprob: -18.0000057220459
    8. '३' → logprob: -18.2500057220459
    9. '2' → logprob: -18.5625057220459
    10. '<|end|>' → logprob: -18.8750057220459

Token 105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011069540778407827
    2. ']' → logprob: -9.625110626220703
    3. '[' → logprob: -10.500110626220703
    4. ' ][' → logprob: -11.250110626220703
    5. '3' → logprob: -12.875110626220703
    6. '"][' → logprob: -14.375110626220703
    7. ''][' → logprob: -14.750110626220703
    8. '0' → logprob: -16.375110626220703
    9. '1' → logprob: -16.500110626220703
    10. '()][' → logprob: -17.000110626220703

Token 106: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.0
    3. ' ' → logprob: -18.0
    4. '۳' → logprob: -19.5
    5. '৩' → logprob: -19.625
    6. '<|end|>' → logprob: -20.125
    7. '३' → logprob: -20.375
    8. '1' → logprob: -20.625
    9. '<|end|>' → logprob: -21.3125
    10. '2' → logprob: -21.3125

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.558399319241289e-05
    2. ']=' → logprob: -10.750025749206543
    3. ' ]' → logprob: -12.500025749206543
    4. '=' → logprob: -15.625025749206543
    5. ']+=' → logprob: -15.875025749206543
    6. ']
' → logprob: -16.125024795532227
    7. ')' → logprob: -17.500024795532227
    8. '1' → logprob: -17.500024795532227
    9. '][' → logprob: -17.875024795532227
    10. ' ' → logprob: -19.125024795532227

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. '+=' → logprob: -16.006715774536133
    4. '=True' → logprob: -17.381715774536133
    5. '=

' → logprob: -17.756715774536133
    6. ']' → logprob: -17.881715774536133
    7. '=
' → logprob: -17.881715774536133
    8. ']=' → logprob: -18.131715774536133
    9. '＝' → logprob: -18.256715774536133
    10. '=}' → logprob: -18.381715774536133

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -19.125
    4. '   ' → logprob: -19.375
    5. '۱' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. '১' → logprob: -20.5
    8. '１' → logprob: -21.0625
    9. '१' → logprob: -21.25
    10. '  ' → logprob: -21.4375

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '0' → logprob: -16.5
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.3125
    6. '۱' → logprob: -19.5
    7. '১' → logprob: -20.0
    8. '`' → logprob: -20.375
    9. '१' → logprob: -20.8125
    10. '１' → logprob: -20.8125

Token 111: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9927279949188232
    2. '<|end|>' → logprob: -1.2427279949188232
    3. '
' → logprob: -2.6177279949188232
    4. 'n' → logprob: -2.7427279949188232
    5. '\' → logprob: -3.1177279949188232
    6. '#' → logprob: -3.1177279949188232
    7. '[' → logprob: -3.6177279949188232
    8. 'for' → logprob: -3.7427279949188232
    9. ')' → logprob: -4.242728233337402
    10. ' ' → logprob: -4.742728233337402

Token 112: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8153864145278931
    2. '\n' → logprob: -0.9403864145278931
    3. 'n' → logprob: -3.1903862953186035
    4. 'newline' → logprob: -3.3153862953186035
    5. '\' → logprob: -4.0653862953186035
    6. '#' → logprob: -4.0653862953186035
    7. '<|end|>' → logprob: -4.1903862953186035
    8. '[' → logprob: -4.5653862953186035
    9. 'for' → logprob: -5.1903862953186035
    10. ' ' → logprob: -5.4403862953186035

Token 113: ' Cas' (ID: 8066)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' initial' (ID: 4871)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26011988520622253
    2. 'de' → logprob: -1.885119915008545
    3. 'initial' → logprob: -4.135119915008545
    4. '<|end|>' → logprob: -4.135119915008545
    5. ' ' → logprob: -4.260119915008545
    6. 's' → logprob: -4.635119915008545
    7. ' initial' → logprob: -4.885119915008545
    8. 'd' → logprob: -6.135119915008545
    9. '_initial' → logprob: -6.260119915008545
    10. 'final' → logprob: -6.760119915008545

Token 115: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10478642582893372
    2. ' for' → logprob: -2.3547863960266113
    3. 'n' → logprob: -5.479786396026611
    4. '
' → logprob: -8.60478687286377
    5. '\n' → logprob: -9.22978687286377
    6. '<|end|>' → logprob: -10.10478687286377
    7. ')' → logprob: -11.22978687286377
    8. 'i' → logprob: -11.35478687286377
    9. '```' → logprob: -11.60478687286377
    10. '#' → logprob: -11.60478687286377

Token 116: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7329496145248413
    2. ' ' → logprob: -1.2329496145248413
    3. '0' → logprob: -2.607949733734131
    4. ' car' → logprob: -3.857949733734131
    5. '<|end|>' → logprob: -3.982949733734131
    6. '...' → logprob: -4.232949733734131
    7. ' on' → logprob: -4.232949733734131
    8. '#' → logprob: -4.482949733734131
    9. 'n' → logprob: -4.732949733734131
    10. ' modulo' → logprob: -5.232949733734131

Token 117: '333' (ID: 15517)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4438322186470032
    2. ' on' → logprob: -2.0688321590423584
    3. '#' → logprob: -2.6938321590423584
    4. 'auc' → logprob: -2.9438321590423584
    5. 'pas' → logprob: -4.1938323974609375
    6. 'au' → logprob: -4.4438323974609375
    7. '0' → logprob: -4.4438323974609375
    8. 'le' → logprob: -4.6938323974609375
    9. 'sans' → logprob: -4.8188323974609375
    10. 'car' → logprob: -4.9438323974609375

Token 118: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' peu' (ID: 9235)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3576618432998657
    2. ' ' → logprob: -1.7326618432998657
    3. 'n' → logprob: -1.8576618432998657
    4. ' for' → logprob: -2.357661724090576
    5. 'for' → logprob: -2.607661724090576
    6. ')' → logprob: -2.732661724090576
    7. '+' → logprob: -2.857661724090576
    8. '<|end|>' → logprob: -3.607661724090576
    9. '0' → logprob: -3.732661724090576
    10. '
' → logprob: -4.607661724090576

Token 121: ' magique' (ID: 154560)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' honn' (ID: 164515)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'êtement' (ID: 140744)
  Prédit: 'ête'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.04376557096838951
    2. 'êt' → logprob: -3.1687655448913574
    3. 'et' → logprob: -8.418766021728516
    4. 'ète' → logprob: -9.168766021728516
    5. 'êtement' → logprob: -9.293766021728516
    6. 'eté' → logprob: -9.418766021728516
    7. 'ère' → logprob: -9.668766021728516
    8. 'e' → logprob: -9.793766021728516
    9. 'ete' → logprob: -10.043766021728516
    10. 'êtes' → logprob: -10.168766021728516

Token 124: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7367515563964844
    2. 'n' → logprob: -1.4867515563964844
    3. '<|end|>' → logprob: -2.4867515563964844
    4. ' for' → logprob: -2.7367515563964844
    5. '#' → logprob: -2.8617515563964844
    6. '
' → logprob: -2.9867515563964844
    7. '\n' → logprob: -3.9867515563964844
    8. '+' → logprob: -5.486751556396484
    9. '```' → logprob: -5.986751556396484
    10. ')' → logprob: -6.111751556396484

Token 125: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6177545189857483
    2. 'n' → logprob: -1.7427544593811035
    3. '\n' → logprob: -2.4927544593811035
    4. 'for' → logprob: -2.9927544593811035
    5. '<|end|>' → logprob: -3.7427544593811035
    6. '#' → logprob: -3.9927544593811035
    7. ' ' → logprob: -3.9927544593811035
    8. '[' → logprob: -4.2427544593811035
    9. ' for' → logprob: -4.3677544593811035
    10. ' 
' → logprob: -4.3677544593811035

Token 126: ' id' (ID: 1211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003819332632701844
    2. ' for' → logprob: -7.875381946563721
    3. '_' → logprob: -15.000381469726562
    4. '```' → logprob: -15.125381469726562
    5. 'range' → logprob: -15.125381469726562
    6. 'def' → logprob: -15.250381469726562
    7. 'i' → logprob: -15.500381469726562
    8. '#' → logprob: -15.875381469726562
    9. 'from' → logprob: -16.375381469726562
    10. 'n' → logprob: -16.500381469726562

Token 127: ' lettres' (ID: 101234)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23325401544570923
    2. 'f' → logprob: -2.6082539558410645
    3. 'x' → logprob: -3.3582539558410645
    4. '_s' → logprob: -4.3582539558410645
    5. '_' → logprob: -4.4832539558410645
    6. ' =' → logprob: -4.7332539558410645
    7. '_map' → logprob: -5.4832539558410645
    8. '2' → logprob: -5.4832539558410645
    9. 'le' → logprob: -5.4832539558410645
    10. 'u' → logprob: -5.7332539558410645

Token 128: ':' (ID: 25)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2714786529541016
    2. ' =' → logprob: -1.7714786529541016
    3. ' ' → logprob: -2.0214786529541016
    4. '=' → logprob: -2.1464786529541016
    5. 's' → logprob: -2.5214786529541016
    6. '[' → logprob: -2.5214786529541016
    7. '#' → logprob: -3.5214786529541016
    8. ':' → logprob: -3.8964786529541016
    9. 'a' → logprob: -3.8964786529541016
    10. ']' → logprob: -4.021478652954102

Token 129: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3743656277656555
    2. 's' → logprob: -2.6243655681610107
    3. 'letters' → logprob: -2.6243655681610107
    4. ' a' → logprob: -3.1243655681610107
    5. ' ' → logprob: -3.8743655681610107
    6. ' l' → logprob: -4.37436580657959
    7. ' letters' → logprob: -4.37436580657959
    8. 'l' → logprob: -4.74936580657959
    9. ' s' → logprob: -4.87436580657959
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.24936580657959

Token 130: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3040628731250763
    2. ',' → logprob: -2.054062843322754
    3. '=' → logprob: -2.179062843322754
    4. ' B' → logprob: -4.929062843322754
    5. 'B' → logprob: -5.554062843322754
    6. ' ' → logprob: -5.679062843322754
    7. '<|end|>' → logprob: -6.304062843322754
    8. ''' → logprob: -6.804062843322754
    9. ' ,' → logprob: -6.804062843322754
    10. ',B' → logprob: -7.804062843322754

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -16.750003814697266
    4. '012' → logprob: -18.000003814697266
    5. '3' → logprob: -18.750003814697266
    6. '2' → logprob: -19.750003814697266
    7. '۰' → logprob: -20.125003814697266
    8. '-' → logprob: -20.375003814697266
    9. '00' → logprob: -20.375003814697266
    10. '```' → logprob: -20.500003814697266

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7881011366844177
    2. '<|end|>' → logprob: -1.0381011962890625
    3. '
' → logprob: -2.7881011962890625
    4. 'A' → logprob: -3.4131011962890625
    5. '#' → logprob: -3.7881011962890625
    6. ',
' → logprob: -3.9131011962890625
    7. ')' → logprob: -3.9131011962890625
    8. ' ' → logprob: -4.7881011962890625
    9. ' 
' → logprob: -4.9131011962890625
    10. '\n' → logprob: -5.5381011962890625

Token 133: ' G' (ID: 499)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.13743598759174347
    2. 'G' → logprob: -3.0124359130859375
    3. 'B' → logprob: -3.2624359130859375
    4. 'T' → logprob: -3.5124359130859375
    5. ' C' → logprob: -4.6374359130859375
    6. ' T' → logprob: -7.5124359130859375
    7. ' G' → logprob: -7.7624359130859375
    8. ' B' → logprob: -8.137435913085938
    9. ' ' → logprob: -9.762435913085938
    10. '

' → logprob: -10.824935913085938

Token 134: '=' (ID: 28)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6535098552703857
    2. '=' → logprob: -1.6535098552703857
    3. ' C' → logprob: -2.1535098552703857
    4. ' =' → logprob: -2.7785098552703857
    5. 'T' → logprob: -2.9035098552703857
    6. ',' → logprob: -3.2785098552703857
    7. ' T' → logprob: -4.528510093688965
    8. ' ' → logprob: -5.278510093688965
    9. ' ,' → logprob: -6.653510093688965
    10. '  ' → logprob: -9.278510093688965

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.500012397766113
    3. '0' → logprob: -13.500012397766113
    4. '2' → logprob: -15.500012397766113
    5. '```' → logprob: -16.625011444091797
    6. '

' → logprob: -16.750011444091797
    7. '
' → logprob: -17.687511444091797
    8. '   ' → logprob: -18.562511444091797
    9. '=' → logprob: -18.562511444091797
    10. '!' → logprob: -18.625011444091797

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2074541449546814
    2. 'C' → logprob: -1.8324542045593262
    3. 'T' → logprob: -4.332454204559326
    4. ' ,' → logprob: -4.457454204559326
    5. ' C' → logprob: -6.457454204559326
    6. '#' → logprob: -8.207453727722168
    7. ' T' → logprob: -8.332453727722168
    8. ' ' → logprob: -8.832453727722168
    9. 'A' → logprob: -9.207453727722168
    10. ',T' → logprob: -9.957453727722168

Token 137: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04478773847222328
    2. 'T' → logprob: -3.294787645339966
    3. ' C' → logprob: -5.044787883758545
    4. ' T' → logprob: -8.294787406921387
    5. 'U' → logprob: -11.419787406921387
    6. ' ' → logprob: -11.669787406921387
    7. '
' → logprob: -12.794787406921387
    8. '

' → logprob: -13.544787406921387
    9. 'B' → logprob: -13.919787406921387
    10. 'CT' → logprob: -14.044787406921387

Token 138: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5257645845413208
    2. '2' → logprob: -1.0257645845413208
    3. ',' → logprob: -3.0257644653320312
    4. ' ' → logprob: -6.650764465332031
    5. ' =' → logprob: -7.775764465332031
    6. ' ,' → logprob: -9.650764465332031
    7. '[' → logprob: -10.400764465332031
    8. ']' → logprob: -12.150764465332031
    9. '0' → logprob: -12.275764465332031
    10. '```' → logprob: -12.275764465332031

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '3' → logprob: -15.750021934509277
    4. '```' → logprob: -16.68752098083496
    5. '0' → logprob: -17.18752098083496
    6. '1' → logprob: -17.43752098083496
    7. '   ' → logprob: -17.50002098083496
    8. '۲' → logprob: -17.87502098083496
    9. '  ' → logprob: -18.06252098083496
    10. '[' → logprob: -18.31252098083496

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23080846667289734
    2. 'T' → logprob: -1.6058084964752197
    3. ' T' → logprob: -6.105808258056641
    4. ' ,' → logprob: -6.605808258056641
    5. ' ' → logprob: -7.230808258056641
    6. ',T' → logprob: -7.480808258056641
    7. '<|end|>' → logprob: -8.48080825805664
    8. '#' → logprob: -9.48080825805664
    9. 'for' → logprob: -9.73080825805664
    10. 't' → logprob: -10.10580825805664

Token 141: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0017562180291861296
    2. ' T' → logprob: -6.376756191253662
    3. '
' → logprob: -11.00175666809082
    4. ' ' → logprob: -11.12675666809082
    5. 't' → logprob: -12.00175666809082
    6. ' 
' → logprob: -12.12675666809082
    7. '  
' → logprob: -12.62675666809082
    8. '

' → logprob: -12.87675666809082
    9. '    
' → logprob: -13.75175666809082
    10. '```' → logprob: -14.31425666809082

Token 142: '=' (ID: 28)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5297384858131409
    2. '<|end|>' → logprob: -2.029738426208496
    3. '\n' → logprob: -2.279738426208496
    4. ' ' → logprob: -2.779738426208496
    5. '#' → logprob: -3.154738426208496
    6. '
' → logprob: -4.154738426208496
    7. 'for' → logprob: -4.904738426208496
    8. ' for' → logprob: -4.904738426208496
    9. '```' → logprob: -5.029738426208496
    10. ' 
' → logprob: -5.529738426208496

Token 143: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۳' → logprob: -18.625001907348633
    4. '３' → logprob: -19.250001907348633
    5. '```' → logprob: -19.250001907348633
    6. '৩' → logprob: -20.500001907348633
    7. '३' → logprob: -20.750001907348633
    8. '³' → logprob: -20.750001907348633
    9. '٣' → logprob: -21.000001907348633
    10. '0' → logprob: -21.500001907348633

Token 144: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8128112554550171
    2. 'n' → logprob: -1.812811255455017
    3. '\n' → logprob: -1.812811255455017
    4. '<|end|>' → logprob: -1.812811255455017
    5. ' ' → logprob: -3.8128113746643066
    6. '#' → logprob: -4.687811374664307
    7. ')' → logprob: -5.062811374664307
    8. '\' → logprob: -5.437811374664307
    9. ' 
' → logprob: -5.562811374664307
    10. '[' → logprob: -5.562811374664307

Token 145: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009264161810278893
    2. ' )' → logprob: -4.75926399230957
    3. ')
' → logprob: -7.63426399230957
    4. '#' → logprob: -9.75926399230957
    5. '
' → logprob: -10.50926399230957
    6. ' ' → logprob: -11.38426399230957
    7. ' )
' → logprob: -11.38426399230957
    8. '')' → logprob: -11.50926399230957
    9. ')

' → logprob: -11.88426399230957
    10. ' ' → logprob: -12.25926399230957

Token 146: ' vrai' (ID: 42682)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -1.523337483406067
    2. 'fait' → logprob: -2.1483373641967773
    3. 'anglais' → logprob: -2.3983373641967773
    4. '#' → logprob: -2.5233373641967773
    5. 'fr' → logprob: -2.5233373641967773
    6. 'suite' → logprob: -3.0233373641967773
    7. 'f' → logprob: -3.1483373641967773
    8. 'comment' → logprob: -3.1483373641967773
    9. 'faite' → logprob: -3.6483373641967773
    10. 'part' → logprob: -3.7733373641967773

Token 147: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2500607669353485
    2. ',' → logprob: -1.750060796737671
    3. ' )' → logprob: -4.500060558319092
    4. ' c' → logprob: -4.750060558319092
    5. ' on' → logprob: -5.125060558319092
    6. ' ' → logprob: -5.875060558319092
    7. ' la' → logprob: -6.125060558319092
    8. ' je' → logprob: -6.125060558319092
    9. ' ,' → logprob: -6.375060558319092
    10. ' ' → logprob: -7.125060558319092

Token 148: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3017616868019104
    2. ' )' → logprob: -2.5517616271972656
    3. ' on' → logprob: -2.9267616271972656
    4. ' c' → logprob: -3.4267616271972656
    5. ' je' → logprob: -3.5517616271972656
    6. 'c' → logprob: -4.676761627197266
    7. 'A' → logprob: -5.426761627197266
    8. '#' → logprob: -5.551761627197266
    9. 'le' → logprob: -5.676761627197266
    10. ' ' → logprob: -5.676761627197266

Token 149: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7417675852775574
    2. ' continue' → logprob: -1.3667676448822021
    3. ' )' → logprob: -2.866767644882202
    4. 'n' → logprob: -3.116767644882202
    5. 's' → logprob: -3.366767644882202
    6. 'continue' → logprob: -3.991767644882202
    7. ' range' → logprob: -4.241767406463623
    8. 'range' → logprob: -4.241767406463623
    9. ''ve' → logprob: -4.366767406463623
    10. ' n' → logprob: -4.491767406463623

Token 150: ' code' (ID: 3490)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.1956632137298584
    2. 'n' → logprob: -2.3206632137298584
    3. 'continue' → logprob: -2.4456632137298584
    4. '#' → logprob: -2.5706632137298584
    5. 's' → logprob: -2.8206632137298584
    6. 'util' → logprob: -3.0706632137298584
    7. 'a' → logprob: -3.0706632137298584
    8. 'f' → logprob: -3.0706632137298584
    9. 'pe' → logprob: -3.4456632137298584
    10. 'code' → logprob: -3.6956632137298584

Token 151: ' juste' (ID: 31553)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2037629336118698
    2. ')' → logprob: -2.203763008117676
    3. 'en' → logprob: -2.828763008117676
    4. ' )' → logprob: -5.828763008117676
    5. ' ' → logprob: -6.078763008117676
    6. ' comme' → logprob: -6.328763008117676
    7. '```' → logprob: -6.453763008117676
    8. ' à' → logprob: -7.078763008117676
    9. ' ici' → logprob: -7.453763008117676
    10. ' au' → logprob: -7.453763008117676

Token 152: ' comme' (ID: 7971)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.24159853160381317
    2. 'en' → logprob: -2.116598606109619
    3. ')' → logprob: -2.741598606109619
    4. ' comme' → logprob: -4.741598606109619
    5. ' )' → logprob: -4.741598606109619
    6. ' ' → logprob: -5.991598606109619
    7. 'comme' → logprob: -6.241598606109619
    8. ' as' → logprob: -6.491598606109619
    9. ' avec' → logprob: -6.616598606109619
    10. ' par' → logprob: -7.491598606109619

Token 153: ' ' (ID: 220)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7060339450836182
    2. '0' → logprob: -1.0810339450836182
    3. 'inte' → logprob: -2.206033945083618
    4. 'indices' → logprob: -4.456033706665039
    5. ' des' → logprob: -4.706033706665039
    6. '4' → logprob: -4.831033706665039
    7. 'les' → logprob: -5.206033706665039
    8. ' ça' → logprob: -5.581033706665039
    9. 'int' → logprob: -5.956033706665039
    10. ' integers' → logprob: -6.081033706665039

Token 154: '0' (ID: 15)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.8563773036003113
    2. '0' → logprob: -1.106377363204956
    3. 'des' → logprob: -1.606377363204956
    4. 'indices' → logprob: -4.231377124786377
    5. '4' → logprob: -4.481377124786377
    6. 'ent' → logprob: -5.481377124786377
    7. 'int' → logprob: -6.106377124786377
    8. '012' → logprob: -6.481377124786377
    9. ' ça' → logprob: -6.481377124786377
    10. 'range' → logprob: -6.606377124786377

Token 155: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.402057945728302
    2. ')' → logprob: -1.2770578861236572
    3. ']' → logprob: -4.027058124542236
    4. ' )' → logprob: -4.527058124542236
    5. ')]' → logprob: -4.652058124542236
    6. ' ,' → logprob: -5.027058124542236
    7. '])' → logprob: -6.027058124542236
    8. ' ]' → logprob: -6.402058124542236
    9. ' ' → logprob: -7.277058124542236
    10. '+' → logprob: -7.902058124542236

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0317695252597332
    2. ' ' → logprob: -4.031769752502441
    3. '4' → logprob: -4.656769752502441
    4. ')' → logprob: -5.656769752502441
    5. ' )' → logprob: -7.656769752502441
    6. '```' → logprob: -11.281769752502441
    7. ')]' → logprob: -11.781769752502441
    8. ']' → logprob: -11.906769752502441
    9. '9' → logprob: -12.156769752502441
    10. '2' → logprob: -12.531769752502441

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006943239714019
    2. ' )' → logprob: -7.500694274902344
    3. ')]' → logprob: -9.500694274902344
    4. ')
' → logprob: -10.625694274902344
    5. '#' → logprob: -10.875694274902344
    6. ']' → logprob: -11.875694274902344
    7. '])' → logprob: -12.125694274902344
    8. ')])' → logprob: -13.000694274902344
    9. '）' → logprob: -13.375694274902344
    10. ')#' → logprob: -13.500694274902344

Token 158: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019468626007437706
    2. ' for' → logprob: -4.019468784332275
    3. 'n' → logprob: -6.644468784332275
    4. 'range' → logprob: -12.269468307495117
    5. '```' → logprob: -12.519468307495117
    6. 'i' → logprob: -12.769468307495117
    7. ' ' → logprob: -13.644468307495117
    8. '
' → logprob: -13.894468307495117
    9. '   ' → logprob: -14.519468307495117
    10. '	for' → logprob: -14.644468307495117

Token 159: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007281593861989677
    2. 'letters' → logprob: -8.250728607177734
    3. 'v' → logprob: -8.625728607177734
    4. ' for' → logprob: -8.875728607177734
    5. 'le' → logprob: -9.625728607177734
    6. 'bases' → logprob: -10.750728607177734
    7. 'def' → logprob: -11.500728607177734
    8. 'lett' → logprob: -11.625728607177734
    9. '#' → logprob: -12.000728607177734
    10. 'alphabet' → logprob: -12.250728607177734

Token 160: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.015002668835222721
    2. 'cles' → logprob: -4.515002727508545
    3. 'c' → logprob: -5.640002727508545
    4. 'cl' → logprob: -8.140002250671387
    5. 'cler' → logprob: -10.390002250671387
    6. 't' → logprob: -10.515002250671387
    7. 'clé' → logprob: -10.890002250671387
    8. '```' → logprob: -11.390002250671387
    9. '#' → logprob: -12.765002250671387
    10. '
' → logprob: -12.890002250671387

Token 161: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19266873598098755
    2. 'for' → logprob: -2.0676686763763428
    3. 's' → logprob: -3.0676686763763428
    4. ' i' → logprob: -7.067668914794922
    5. ' s' → logprob: -7.567668914794922
    6. 'range' → logprob: -8.692668914794922
    7. '
' → logprob: -8.817668914794922
    8. 'n' → logprob: -8.942668914794922
    9. ' suivante' → logprob: -9.692668914794922
    10. ' range' → logprob: -9.817668914794922

Token 162: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9595167636871338
    2. ' length' → logprob: -1.3345167636871338
    3. 'i' → logprob: -1.7095167636871338
    4. ' longueur' → logprob: -2.209516763687134
    5. 'length' → logprob: -3.959516763687134
    6. ' range' → logprob: -3.959516763687134
    7. '_' → logprob: -5.084516525268555
    8. ' taille' → logprob: -5.834516525268555
    9. 'range' → logprob: -5.834516525268555
    10. ' la' → logprob: -5.834516525268555

Token 163: ' longueur' (ID: 104613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.270790696144104
    2. 'range' → logprob: -1.895790696144104
    3. 'long' → logprob: -3.0207905769348145
    4. ' longueur' → logprob: -3.8957905769348145
    5. ' range' → logprob: -5.1457905769348145
    6. 'rang' → logprob: -5.6457905769348145
    7. 'length' → logprob: -5.7707905769348145
    8. ' i' → logprob: -6.1457905769348145
    9. 'pos' → logprob: -7.7707905769348145
    10. 'position' → logprob: -8.020791053771973

Token 164: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759809613227844
    2. 'for' → logprob: -0.8259809613227844
    3. 'n' → logprob: -11.075981140136719
    4. ' i' → logprob: -11.825981140136719
    5. 'i' → logprob: -12.075981140136719
    6. '_' → logprob: -12.325981140136719
    7. 'range' → logprob: -12.950981140136719
    8. 's' → logprob: -13.700981140136719
    9. ')' → logprob: -14.075981140136719
    10. ' n' → logprob: -14.325981140136719

Token 165: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14278997480869293
    2. 'range' → logprob: -2.2677900791168213
    3. ' la' → logprob: -3.7677900791168213
    4. 's' → logprob: -6.142789840698242
    5. ' s' → logprob: -7.392789840698242
    6. 'i' → logprob: -7.392789840698242
    7. ' i' → logprob: -7.642789840698242
    8. 'la' → logprob: -7.767789840698242
    9. 'chaine' → logprob: -7.892789840698242
    10. ' sequence' → logprob: -8.017789840698242

Token 166: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.37877917289733887
    2. 'sequence' → logprob: -2.003779172897339
    3. ' chaîne' → logprob: -2.378779172897339
    4. ' sequence' → logprob: -3.253779172897339
    5. 'sé' → logprob: -4.128779411315918
    6. ' sé' → logprob: -4.503779411315918
    7. ' chaine' → logprob: -4.878779411315918
    8. 's' → logprob: -4.878779411315918
    9. 'mot' → logprob: -6.128779411315918
    10. 'chain' → logprob: -6.628779411315918

Token 167: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8827512264251709
    2. '
' → logprob: -1.132751226425171
    3. 'for' → logprob: -1.382751226425171
    4. 'n' → logprob: -4.50775146484375
    5. '\n' → logprob: -6.25775146484375
    6. '' → logprob: -9.13275146484375
    7. ' 
' → logprob: -10.00775146484375
    8. '```' → logprob: -10.00775146484375
    9. '
' → logprob: -10.13275146484375
    10. 's' → logprob: -10.13275146484375

Token 168: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011714138090610504
    2. ' for' → logprob: -6.751171588897705
    3. 'n' → logprob: -14.626171112060547
    4. 'i' → logprob: -14.876171112060547
    5. '
' → logprob: -15.251171112060547
    6. '```' → logprob: -16.001171112060547
    7. 'range' → logprob: -16.876171112060547
    8. '	for' → logprob: -18.626171112060547
    9. 'r' → logprob: -20.501171112060547
    10. '_' → logprob: -20.751171112060547

Token 169: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0567488856613636
    2. ' length' → logprob: -3.181748867034912
    3. ' longueur' → logprob: -4.806748867034912
    4. 'i' → logprob: -6.056748867034912
    5. ' l' → logprob: -6.431748867034912
    6. ' L' → logprob: -7.306748867034912
    7. ' _' → logprob: -9.05674934387207
    8. 'L' → logprob: -9.30674934387207
    9. ' leng' → logprob: -9.55674934387207
    10. ' k' → logprob: -9.68174934387207

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06214861571788788
    2. 'in' → logprob: -2.8121485710144043
    3. ' ' → logprob: -8.812149047851562
    4. '+' → logprob: -11.312149047851562
    5. ' i' → logprob: -12.062149047851562
    6. ' ' → logprob: -12.187149047851562
    7. '	in' → logprob: -12.937149047851562
    8. '1' → logprob: -13.687149047851562
    9. 'space' → logprob: -14.062149047851562
    10. ')' → logprob: -14.312149047851562

Token 171: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326213479042053
    2. 'range' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.313261985778809
    4. '(range' → logprob: -16.938262939453125
    5. '	range' → logprob: -17.063262939453125
    6. ')' → logprob: -18.563262939453125
    7. ' in' → logprob: -18.813262939453125
    8. 'in' → logprob: -18.938262939453125
    9. '   ' → logprob: -18.938262939453125
    10. '  ' → logprob: -19.438262939453125

Token 172: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.641841820150148e-05
    2. '(n' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.25002670288086
    4. '(
' → logprob: -15.12502670288086
    5. '1' → logprob: -17.12502670288086
    6. ' ' → logprob: -18.12502670288086
    7. '(i' → logprob: -20.00002670288086
    8. ' n' → logprob: -20.37502670288086
    9. '(

' → logprob: -20.62502670288086
    10. ' (
' → logprob: -22.62502670288086

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01304457988590002
    2. '):
' → logprob: -4.513044357299805
    3. ' ):' → logprob: -6.263044357299805
    4. '+' → logprob: -10.138044357299805
    5. ')' → logprob: -10.763044357299805
    6. ' ):
' → logprob: -11.638044357299805
    7. ':' → logprob: -11.888044357299805
    8. '-' → logprob: -12.263044357299805
    9. '1' → logprob: -13.263044357299805
    10. '):
' → logprob: -13.763044357299805

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4436698257923126
    2. ' for' → logprob: -1.4436697959899902
    3. 'for' → logprob: -2.1936697959899902
    4. '	for' → logprob: -4.56866979598999
    5. ' ' → logprob: -8.443670272827148
    6. '   ' → logprob: -9.818670272827148
    7. '    
' → logprob: -9.943670272827148
    8. '    ' → logprob: -10.943670272827148
    9. '```' → logprob: -11.818670272827148
    10. '       ' → logprob: -11.818670272827148

Token 175: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5774674415588379
    2. ' for' → logprob: -0.8274674415588379
    3. '   ' → logprob: -6.577467441558838
    4. '	for' → logprob: -9.20246696472168
    5. ' ' → logprob: -10.57746696472168
    6. '    ' → logprob: -12.70246696472168
    7. '    
' → logprob: -13.32746696472168
    8. ' ' → logprob: -13.57746696472168
    9. '   ' → logprob: -14.07746696472168
    10. '   ' → logprob: -14.57746696472168

Token 176: ' j' (ID: 441)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3410434126853943
    2. 'x' → logprob: -2.216043472290039
    3. 'j' → logprob: -2.466043472290039
    4. ' a' → logprob: -3.466043472290039
    5. 'p' → logprob: -4.591043472290039
    6. 'c' → logprob: -4.966043472290039
    7. 'prev' → logprob: -5.091043472290039
    8. 'l' → logprob: -5.216043472290039
    9. ' x' → logprob: -5.216043472290039
    10. ' j' → logprob: -5.341043472290039

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008681939914822578
    2. 'in' → logprob: -4.758681774139404
    3. ' ' → logprob: -10.633682250976562
    4. '0' → logprob: -11.383682250976562
    5. '1' → logprob: -11.633682250976562
    6. '
' → logprob: -12.758682250976562
    7. '   ' → logprob: -13.258682250976562
    8. 's' → logprob: -13.508682250976562
    9. 'd' → logprob: -13.633682250976562
    10. 'n' → logprob: -13.633682250976562

Token 178: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014173386618494987
    2. 'range' → logprob: -4.26417350769043
    3. ' ' → logprob: -11.88917350769043
    4. '0' → logprob: -13.51417350769043
    5. '[' → logprob: -13.63917350769043
    6. '4' → logprob: -15.26417350769043
    7. '(' → logprob: -16.63917350769043
    8. '   ' → logprob: -16.76417350769043
    9. '	range' → logprob: -16.88917350769043
    10. '(range' → logprob: -17.13917350769043

Token 179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001453686272725463
    2. '4' → logprob: -6.626453876495361
    3. ' ' → logprob: -9.251453399658203
    4. ' in' → logprob: -11.126453399658203
    5. ' (' → logprob: -11.251453399658203
    6. '3' → logprob: -13.376453399658203
    7. ')' → logprob: -13.376453399658203
    8. 'in' → logprob: -14.626453399658203
    9. '(
' → logprob: -16.001453399658203
    10. '   ' → logprob: -16.376453399658203

Token 180: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.500003814697266
    3. 'range' → logprob: -13.500003814697266
    4. '3' → logprob: -15.375003814697266
    5. '0' → logprob: -16.125003814697266
    6. '(' → logprob: -16.250003814697266
    7. '```' → logprob: -16.500003814697266
    8. ')' → logprob: -16.937503814697266
    9. '   ' → logprob: -17.500003814697266
    10. '1' → logprob: -18.500003814697266

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10060688853263855
    2. '):
' → logprob: -2.350606918334961
    3. ')' → logprob: -8.100606918334961
    4. ':' → logprob: -9.725606918334961
    5. '   ' → logprob: -10.975606918334961
    6. ' ):' → logprob: -11.975606918334961
    7. ']:' → logprob: -12.975606918334961
    8. 'for' → logprob: -13.100606918334961
    9. '):
' → logprob: -13.350606918334961
    10. '):

' → logprob: -13.475606918334961

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25133809447288513
    2. '   ' → logprob: -2.251338005065918
    3. ' for' → logprob: -2.501338005065918
    4. 'for' → logprob: -3.501338005065918
    5. ':' → logprob: -5.876338005065918
    6. ':
' → logprob: -7.126338005065918
    7. '	for' → logprob: -7.751338005065918
    8. '	   ' → logprob: -8.751338005065918
    9. '	' → logprob: -9.251338005065918
    10. ' ' → logprob: -9.376338005065918

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1273634433746338
    2. ' for' → logprob: -2.127363443374634
    3. '       ' → logprob: -8.127363204956055
    4. '   ' → logprob: -9.002363204956055
    5. '	for' → logprob: -11.502363204956055
    6. '           ' → logprob: -12.127363204956055
    7. ' ' → logprob: -14.627363204956055
    8. '	   ' → logprob: -14.877363204956055
    9. 'range' → logprob: -15.752363204956055
    10. '```' → logprob: -16.752363204956055

Token 184: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006987344822846353
    2. ' k' → logprob: -7.375698566436768
    3. 'l' → logprob: -10.000699043273926
    4. 'x' → logprob: -11.875699043273926
    5. 'p' → logprob: -12.625699043273926
    6. 'h' → logprob: -12.875699043273926
    7. ' ' → logprob: -12.875699043273926
    8. '   ' → logprob: -13.375699043273926
    9. 'm' → logprob: -13.500699043273926
    10. 'o' → logprob: -13.875699043273926

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004088609013706446
    2. 'in' → logprob: -5.504088401794434
    3. ' ' → logprob: -12.129088401794434
    4. '   ' → logprob: -13.879088401794434
    5. '  ' → logprob: -14.379088401794434
    6. 'range' → logprob: -14.629088401794434
    7. 'import' → logprob: -14.754088401794434
    8. ' ' → logprob: -14.879088401794434
    9. '```' → logprob: -15.254088401794434
    10. '    ' → logprob: -15.504088401794434

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029756737872958183
    2. ' range' → logprob: -3.529756784439087
    3. '(range' → logprob: -12.154756546020508
    4. '4' → logprob: -14.279756546020508
    5. ' ' → logprob: -15.404756546020508
    6. '(' → logprob: -16.404756546020508
    7. 'for' → logprob: -16.529756546020508
    8. 'ange' → logprob: -17.904756546020508
    9. '   ' → logprob: -17.904756546020508
    10. 'in' → logprob: -18.904756546020508

Token 187: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2113979209971149e-05
    2. 'range' → logprob: -11.750012397766113
    3. ' (' → logprob: -12.750012397766113
    4. ' range' → logprob: -14.250012397766113
    5. '4' → logprob: -14.750012397766113
    6. ' in' → logprob: -16.125011444091797
    7. '(range' → logprob: -16.375011444091797
    8. '(
' → logprob: -17.875011444091797
    9. ' ' → logprob: -18.000011444091797
    10. 'in' → logprob: -19.125011444091797

Token 188: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'range' → logprob: -14.750005722045898
    4. ' range' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.7500057220459
    6. '(' → logprob: -18.1250057220459
    7. 'for' → logprob: -18.6250057220459
    8. ')' → logprob: -19.7500057220459
    9. '
' → logprob: -20.0000057220459
    10. '  ' → logprob: -21.2500057220459

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18509869277477264
    2. '):
' → logprob: -1.810098648071289
    3. ':' → logprob: -5.435098648071289
    4. ')' → logprob: -7.560098648071289
    5. ',' → logprob: -8.810098648071289
    6. ':
' → logprob: -9.560098648071289
    7. '       ' → logprob: -9.685098648071289
    8. '):
' → logprob: -10.185098648071289
    9. '<|end|>' → logprob: -10.310098648071289
    10. '):

' → logprob: -10.435098648071289

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005818113684654236
    2. '       ' → logprob: -5.255817890167236
    3. '	       ' → logprob: -8.505818367004395
    4. '               ' → logprob: -8.755818367004395
    5. ' for' → logprob: -9.130818367004395
    6. 'for' → logprob: -9.755818367004395
    7. '<|end|>' → logprob: -11.005818367004395
    8. '```' → logprob: -11.380818367004395
    9. '         ' → logprob: -12.005818367004395
    10. '   ' → logprob: -12.255818367004395

Token 191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.528724193572998
    2. ' for' → logprob: -1.278724193572998
    3. '               ' → logprob: -2.028724193572998
    4. '           ' → logprob: -7.278724193572998
    5. ' ' → logprob: -11.028724670410156
    6. '   ' → logprob: -11.403724670410156
    7. '	for' → logprob: -11.653724670410156
    8. '       ' → logprob: -11.903724670410156
    9. '             ' → logprob: -12.778724670410156
    10. '```' → logprob: -12.778724670410156

Token 192: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.043341364711523056
    2. ' l' → logprob: -3.1683413982391357
    3. 'm' → logprob: -8.293341636657715
    4. ' m' → logprob: -10.793341636657715
    5. 'h' → logprob: -10.918341636657715
    6. ' ' → logprob: -11.418341636657715
    7. 'x' → logprob: -11.918341636657715
    8. 't' → logprob: -12.043341636657715
    9. '   ' → logprob: -12.293341636657715
    10. ' h' → logprob: -12.668341636657715

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007622245233505964
    2. 'in' → logprob: -4.882622241973877
    3. ' ' → logprob: -11.132622718811035
    4. '<|end|>' → logprob: -14.882622718811035
    5. 'range' → logprob: -15.507622718811035
    6. '	in' → logprob: -15.882622718811035
    7. '   ' → logprob: -16.25762176513672
    8. '    ' → logprob: -16.38262176513672
    9. '  ' → logprob: -16.50762176513672
    10. 'inthe' → logprob: -16.63262176513672

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011064798571169376
    2. ' range' → logprob: -4.5110650062561035
    3. '4' → logprob: -11.136064529418945
    4. '(range' → logprob: -13.011064529418945
    5. ' ' → logprob: -16.511064529418945
    6. '(' → logprob: -16.761064529418945
    7. '   ' → logprob: -17.136064529418945
    8. '[' → logprob: -17.511064529418945
    9. 'in' → logprob: -18.511064529418945
    10. 'for' → logprob: -18.886064529418945

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. 'range' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.250001907348633
    4. ' range' → logprob: -17.750001907348633
    5. '(range' → logprob: -18.625001907348633
    6. '4' → logprob: -20.000001907348633
    7. '(
' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.750001907348633
    9. 'for' → logprob: -21.250001907348633
    10. ' ' → logprob: -22.000001907348633

Token 196: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.000009536743164
    4. '(' → logprob: -17.250009536743164
    5. ')' → logprob: -17.500009536743164
    6. '           ' → logprob: -18.375009536743164
    7. '       ' → logprob: -19.125009536743164
    8. '               ' → logprob: -19.250009536743164
    9. '```' → logprob: -19.625009536743164
    10. '' → logprob: -19.750009536743164

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014613552019000053
    2. '):
' → logprob: -4.264613628387451
    3. ':' → logprob: -7.889613628387451
    4. ')' → logprob: -9.639613151550293
    5. '):
' → logprob: -12.639613151550293
    6. ']:' → logprob: -13.264613151550293
    7. '           ' → logprob: -13.639613151550293
    8. ' ):' → logprob: -13.764613151550293
    9. '):

' → logprob: -13.889613151550293
    10. '               ' → logprob: -14.514613151550293

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001448214054107666
    2. ':' → logprob: -7.126448154449463
    3. '           ' → logprob: -8.251448631286621
    4. ' :' → logprob: -9.251448631286621
    5. '                               ' → logprob: -9.626448631286621
    6. ':
' → logprob: -10.376448631286621
    7. '<|end|>' → logprob: -11.001448631286621
    8. ' for' → logprob: -11.126448631286621
    9. '                       ' → logprob: -11.126448631286621
    10. '                   ' → logprob: -11.126448631286621

Token 199: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4107009172439575
    2. ' for' → logprob: -1.1607009172439575
    3. '                   ' → logprob: -3.910700798034668
    4. 'if' (adapté à ' if') → logprob: -6.160700798034668
    5. ' if' → logprob: -6.785700798034668
    6. '                       ' → logprob: -9.410700798034668
    7. '               ' → logprob: -9.910700798034668
    8. 'val' → logprob: -10.285700798034668
    9. '   ' → logprob: -10.660700798034668
    10. '                           ' → logprob: -10.910700798034668

Token 200: ' not' (ID: 625)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3145139515399933
    2. 'dp' → logprob: -1.314513921737671
    3. '(dp' → logprob: -7.31451416015625
    4. '	dp' → logprob: -8.56451416015625
    5. ' j' → logprob: -9.06451416015625
    6. ' True' → logprob: -9.81451416015625
    7. 'True' → logprob: -9.81451416015625
    8. 'j' → logprob: -9.93951416015625
    9. ' l' → logprob: -11.31451416015625
    10. ' ' → logprob: -11.43951416015625

Token 201: ' dp' (ID: 21546)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.412761926651001
    2. ' (' → logprob: -2.037761926651001
    3. '((' → logprob: -2.037761926651001
    4. '(' → logprob: -3.537761926651001
    5. '(dp' → logprob: -4.162761688232422
    6. ' j' → logprob: -4.912761688232422
    7. ' ((' → logprob: -5.162761688232422
    8. '(i' → logprob: -5.412761688232422
    9. '(((' → logprob: -5.787761688232422
    10. '(
' → logprob: -5.787761688232422

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. '[n' → logprob: -15.50000286102295
    4. ' [' → logprob: -15.62500286102295
    5. '\[' → logprob: -16.875003814697266
    6. '[I' → logprob: -17.000003814697266
    7. '[j' → logprob: -17.000003814697266
    8. '```' → logprob: -17.125003814697266
    9. '[
' → logprob: -17.500003814697266
    10. ' ' → logprob: -18.500003814697266

Token 203: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.11364877223968506
    2. '][' → logprob: -2.2386488914489746
    3. '[' → logprob: -8.113648414611816
    4. ']' → logprob: -8.863648414611816
    5. '[i' → logprob: -8.988648414611816
    6. ' ][' → logprob: -9.363648414611816
    7. ' [' → logprob: -9.613648414611816
    8. 'j' → logprob: -10.738648414611816
    9. '[k' → logprob: -10.988648414611816
    10. ' j' → logprob: -11.738648414611816

Token 204: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.644463479053229e-05
    2. ' j' → logprob: -10.000046730041504
    3. '[j' → logprob: -14.000046730041504
    4. '	j' → logprob: -15.875046730041504
    5. '   ' → logprob: -17.125045776367188
    6. ' ' → logprob: -17.750045776367188
    7. ':j' → logprob: -18.250045776367188
    8. '][' → logprob: -18.375045776367188
    9. '_j' → logprob: -18.625045776367188
    10. '$j' → logprob: -18.750045776367188

Token 205: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028278882382437587
    2. ' ][' → logprob: -9.125283241271973
    3. '[l' → logprob: -9.375283241271973
    4. ']' → logprob: -9.625283241271973
    5. '[k' → logprob: -11.750283241271973
    6. '"][' → logprob: -12.250283241271973
    7. 'l' → logprob: -12.875283241271973
    8. ']][' → logprob: -13.250283241271973
    9. '[' → logprob: -13.500283241271973
    10. '[j' → logprob: -14.000283241271973

Token 206: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020830852736253291
    2. 'l' → logprob: -8.500207901000977
    3. ' k' → logprob: -12.250207901000977
    4. ' ' → logprob: -16.750207901000977
    5. ' l' → logprob: -18.000207901000977
    6. '   ' → logprob: -19.250207901000977
    7. '	k' → logprob: -19.250207901000977
    8. '
' → logprob: -19.875207901000977
    9. '           ' → logprob: -20.000207901000977
    10. '0' → logprob: -20.625207901000977

Token 207: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.375538163818419e-05
    2. '[l' → logprob: -9.625083923339844
    3. ']' → logprob: -11.750083923339844
    4. ' ][' → logprob: -12.125083923339844
    5. 'l' → logprob: -13.000083923339844
    6. '"][' → logprob: -14.500083923339844
    7. '[' → logprob: -14.625083923339844
    8. ''][' → logprob: -15.500083923339844
    9. '	l' → logprob: -15.875083923339844
    10. ']][' → logprob: -15.875083923339844

Token 208: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.45848218582978e-06
    2. ' l' → logprob: -13.00000286102295
    3. ' ' → logprob: -16.250001907348633
    4. '0' → logprob: -16.750001907348633
    5. ']' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '1' → logprob: -18.875001907348633
    8. '```' → logprob: -19.125001907348633
    9. '
' → logprob: -19.250001907348633
    10. 'k' → logprob: -19.375001907348633

Token 209: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6066312193870544
    2. ']==' → logprob: -1.1066312789916992
    3. ']' → logprob: -2.106631278991699
    4. ']:
' → logprob: -6.481631278991699
    5. ' ]' → logprob: -7.856631278991699
    6. ']>' → logprob: -8.6066312789917
    7. ':' → logprob: -8.9816312789917
    8. '==' → logprob: -9.3566312789917
    9. ']:
' → logprob: -9.6066312789917
    10. ']=' → logprob: -10.1066312789917

Token 210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00013762809976469725
    2. ' continue' → logprob: -9.375137329101562
    3. '               ' → logprob: -11.000137329101562
    4. '				' → logprob: -12.250137329101562
    5. '                  ' → logprob: -12.375137329101562
    6. '                       ' → logprob: -12.375137329101562
    7. '		           ' → logprob: -12.500137329101562
    8. '                    
' → logprob: -13.000137329101562
    9. '                 ' → logprob: -13.125137329101562
    10. ':' → logprob: -13.375137329101562

Token 211: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7490490078926086
    2. '                   ' → logprob: -1.2490489482879639
    3. ' continue' → logprob: -1.4990489482879639
    4. '                       ' → logprob: -4.124049186706543
    5. '               ' → logprob: -7.499049186706543
    6. '	continue' → logprob: -8.874049186706543
    7. '                           ' → logprob: -9.874049186706543
    8. '   ' → logprob: -10.624049186706543
    9. '                               ' → logprob: -10.749049186706543
    10. '           ' → logprob: -10.999049186706543

Token 212: '  ' (ID: 256)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018305847188457847
    2. ' for' → logprob: -7.251830577850342
    3. '                
' → logprob: -7.251830577850342
    4. '
' → logprob: -8.1268310546875
    5. '                ' → logprob: -10.8768310546875
    6. 'for' → logprob: -11.0018310546875
    7. '                   ' → logprob: -11.1268310546875
    8. '                    
' → logprob: -11.5018310546875
    9. ' 
' → logprob: -11.8768310546875
    10. '       ' → logprob: -12.0018310546875

Token 213: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005875229369848967
    2. '
' → logprob: -5.380875110626221
    3. '                
' → logprob: -7.005875110626221
    4. 'for' → logprob: -8.255875587463379
    5. ' for' → logprob: -9.630875587463379
    6. '              ' → logprob: -12.505875587463379
    7. '                ' → logprob: -12.505875587463379
    8. '                    
' → logprob: -12.880875587463379
    9. '               
' → logprob: -13.255875587463379
    10. '                   ' → logprob: -13.505875587463379

Token 214: ' Skip' (ID: 47626)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0930449962615967
    2. '
' → logprob: -1.2180449962615967
    3. ' next' → logprob: -1.9680449962615967
    4. 'next' → logprob: -2.0930449962615967
    5. ' 
' → logprob: -3.8430449962615967
    6. ' for' → logprob: -3.9680449962615967
    7. '#' → logprob: -4.093045234680176
    8. '                
' → logprob: -4.718045234680176
    9. '                    
' → logprob: -4.843045234680176
    10. 'token' → logprob: -4.968045234680176

Token 215: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06488200277090073
    2. '
' → logprob: -2.8148820400238037
    3. '                
' → logprob: -6.064881801605225
    4. 'for' → logprob: -8.064882278442383
    5. ' for' → logprob: -8.689882278442383
    6. '                ' → logprob: -10.314882278442383
    7. '
' → logprob: -11.439882278442383
    8. '              ' → logprob: -11.439882278442383
    9. '                    
' → logprob: -11.689882278442383
    10. '               
' → logprob: -12.064882278442383

Token 216: ''il' (ID: 14683)
  Prédit: 'paces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paces' → logprob: -0.1705518662929535
    2. 'u' → logprob: -3.6705517768859863
    3. '               ' → logprob: -3.6705517768859863
    4. 'ans' → logprob: -3.7955517768859863
    5. 'dp' → logprob: -4.670551776885986
    6. 'i' → logprob: -4.670551776885986
    7. ''il' → logprob: -5.545551776885986
    8. '```' → logprob: -5.545551776885986
    9. 'o' → logprob: -5.795551776885986
    10. '   ' → logprob: -5.795551776885986

Token 217: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16717854142189026
    2. ' n' → logprob: -2.1671786308288574
    3. 'est' → logprob: -4.042178630828857
    4. 'y' → logprob: -4.917178630828857
    5. '==' → logprob: -4.917178630828857
    6. ' y' → logprob: -6.292178630828857
    7. ' ==' → logprob: -6.542178630828857
    8. '```' → logprob: -6.792178630828857
    9. 's' → logprob: -7.667178630828857
    10. 'f' → logprob: -7.792178630828857

Token 218: ''y' (ID: 27913)
  Prédit: ''y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.2656068801879883
    2. ''est' → logprob: -2.0156068801879883
    3. ' y' → logprob: -3.5156068801879883
    4. 'a' → logprob: -4.390606880187988
    5. 'y' → logprob: -4.390606880187988
    6. ''a' → logprob: -4.390606880187988
    7. 'est' → logprob: -5.640606880187988
    8. ']' → logprob: -5.640606880187988
    9. ''ont' → logprob: -5.640606880187988
    10. ' a' → logprob: -6.140606880187988

Token 219: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06330841034650803
    2. ' a' → logprob: -2.8133084774017334
    3. 'pas' → logprob: -7.313308238983154
    4. 'dp' → logprob: -7.938308238983154
    5. ' pas' → logprob: -8.938308715820312
    6. '```' → logprob: -10.313308715820312
    7. 'avait' → logprob: -10.313308715820312
    8. 'à' → logprob: -10.563308715820312
    9. ''a' → logprob: -10.688308715820312
    10. ' ' → logprob: -10.938308715820312

Token 220: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.05030864477157593
    2. ' pas' → logprob: -3.4253087043762207
    3. 'r' → logprob: -4.675308704376221
    4. ' rien' → logprob: -5.050308704376221
    5. 'plus' → logprob: -8.550308227539062
    6. ' aucune' → logprob: -8.800308227539062
    7. ' ' → logprob: -9.050308227539062
    8. ' aucun' → logprob: -9.050308227539062
    9. '```' → logprob: -9.300308227539062
    10. '   ' → logprob: -10.175308227539062

Token 221: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.591415437171236e-05
    2. '                
' → logprob: -10.500096321105957
    3. '       ' → logprob: -10.625096321105957
    4. '<|end|>' → logprob: -11.875096321105957
    5. '			' → logprob: -12.125096321105957
    6. ' for' → logprob: -12.125096321105957
    7. '		       ' → logprob: -12.250096321105957
    8. '              ' → logprob: -12.250096321105957
    9. ',' → logprob: -12.250096321105957
    10. '           ' → logprob: -12.750096321105957

Token 222: ' prop' (ID: 5892)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.3461989164352417
    2. 'prop' → logprob: -2.4711990356445312
    3. 'contin' → logprob: -2.4711990356445312
    4. 'aj' → logprob: -3.2211990356445312
    5. 'trans' → logprob: -3.3461990356445312
    6. 'comp' → logprob: -4.471199035644531
    7. 'prendre' → logprob: -4.971199035644531
    8. 'calcul' → logprob: -5.596199035644531
    9. ' faire' → logprob: -6.221199035644531
    10. 'process' → logprob: -6.221199035644531

Token 223: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.0034736746456474066
    2. 'er' → logprob: -6.62847375869751
    3. 'ag' → logprob: -7.00347375869751
    4. 'ser' → logprob: -8.128473281860352
    5. 'oser' → logprob: -8.753473281860352
    6. 'agir' → logprob: -8.753473281860352
    7. '   ' → logprob: -9.253473281860352
    8. '[' → logprob: -10.378473281860352
    9. 'a' → logprob: -10.503473281860352
    10. 'user' → logprob: -10.815973281860352

Token 224: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.7292167184641585e-05
    2. '                
' → logprob: -10.375057220458984
    3. '       ' → logprob: -11.750057220458984
    4. '                ' → logprob: -12.375057220458984
    5. '              ' → logprob: -12.375057220458984
    6. ' for' → logprob: -13.250057220458984
    7. '           ' → logprob: -13.375057220458984
    8. '			' → logprob: -13.750057220458984
    9. '		       ' → logprob: -13.875057220458984
    10. '	           ' → logprob: -14.125057220458984

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028710884507745504
    2. ' for' → logprob: -6.127871036529541
    3. 'for' → logprob: -8.2528715133667
    4. '                
' → logprob: -8.8778715133667
    5. '                   ' → logprob: -9.0028715133667
    6. '                ' → logprob: -9.7528715133667
    7. '       ' → logprob: -11.1278715133667
    8. '           ' → logprob: -11.2528715133667
    9. ' ' → logprob: -11.3778715133667
    10. '              ' → logprob: -11.6278715133667

Token 226: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520197927951813
    2. ' for' → logprob: -1.5020197629928589
    3. '               ' → logprob: -9.877019882202148
    4. '                   ' → logprob: -10.502019882202148
    5. '                ' → logprob: -12.627019882202148
    6. '	for' → logprob: -13.252019882202148
    7. '
' → logprob: -13.377019882202148
    8. '                    
' → logprob: -13.627019882202148
    9. '   ' → logprob: -14.127019882202148
    10. '                
' → logprob: -14.252019882202148

Token 227: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006731711328029633
    2. ' for' → logprob: -5.0067315101623535
    3. '               ' → logprob: -11.256731986999512
    4. '                   ' → logprob: -13.131731986999512
    5. '   ' → logprob: -14.131731986999512
    6. '                ' → logprob: -14.756731986999512
    7. ' ' → logprob: -16.131731033325195
    8. '	for' → logprob: -16.506731033325195
    9. '#' → logprob: -16.756731033325195
    10. '           ' → logprob: -17.631731033325195

Token 228: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.378460556268692
    2. 'm' → logprob: -1.5034605264663696
    3. ' for' → logprob: -3.128460645675659
    4. 'for' → logprob: -4.00346040725708
    5. '   ' → logprob: -4.37846040725708
    6. ' ' → logprob: -5.37846040725708
    7. ' nj' → logprob: -5.62846040725708
    8. ' j' → logprob: -5.87846040725708
    9. '  ' → logprob: -7.00346040725708
    10. 'nj' → logprob: -7.25346040725708

Token 229: ''aj' (ID: 116735)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.321466863155365
    2. ' for' → logprob: -1.6964669227600098
    3. 'for' → logprob: -2.6964669227600098
    4. 'e' → logprob: -5.44646692276001
    5. 'range' → logprob: -5.82146692276001
    6. 'r' → logprob: -6.19646692276001
    7. ' ajouter' → logprob: -6.19646692276001
    8. ' j' → logprob: -6.69646692276001
    9. ' range' → logprob: -6.69646692276001
    10. '```' → logprob: -6.82146692276001

Token 230: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.0007961660739965737
    2. 'out' → logprob: -8.3757963180542
    3. '   ' → logprob: -9.2507963180542
    4. 'ou' → logprob: -9.3757963180542
    5. 'o' → logprob: -9.8757963180542
    6. 'oute' → logprob: -10.0007963180542
    7. 'outez' → logprob: -10.1257963180542
    8. 'ouer' → logprob: -10.2507963180542
    9. 'j' → logprob: -10.5007963180542
    10. '```' → logprob: -10.7507963180542

Token 231: ' chaque' (ID: 21194)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009207230061292648
    2. ' m' → logprob: -4.759207248687744
    3. 'for' → logprob: -8.259206771850586
    4. 'c' → logprob: -9.134206771850586
    5. '   ' → logprob: -9.759206771850586
    6. 'a' → logprob: -10.009206771850586
    7. 'x' → logprob: -10.259206771850586
    8. ' ' → logprob: -10.884206771850586
    9. '	m' → logprob: -11.634206771850586
    10. '```' → logprob: -11.634206771850586

Token 232: ' nouvelle' (ID: 24562)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013726549223065376
    2. ' m' → logprob: -4.888726711273193
    3. 'c' → logprob: -5.513726711273193
    4. 'x' → logprob: -8.138726234436035
    5. '   ' → logprob: -8.138726234436035
    6. '```' → logprob: -8.388726234436035
    7. ' lettre' → logprob: -8.513726234436035
    8. 'nj' → logprob: -8.763726234436035
    9. ' c' → logprob: -9.013726234436035
    10. ' ' → logprob: -9.013726234436035

Token 233: ' lettre' (ID: 68013)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.012324919924139977
    2. ' m' → logprob: -5.137324810028076
    3. ' lettre' → logprob: -6.012324810028076
    4. 'c' → logprob: -6.637324810028076
    5. 'lett' → logprob: -6.637324810028076
    6. 'x' → logprob: -8.387325286865234
    7. 'let' → logprob: -8.387325286865234
    8. 'le' → logprob: -8.637325286865234
    9. 'letter' → logprob: -8.637325286865234
    10. 'a' → logprob: -8.762325286865234

Token 234: ' à' (ID: 1221)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8809950351715088
    2. ' m' → logprob: -1.2559950351715088
    3. ' for' → logprob: -2.380995035171509
    4. '   ' → logprob: -2.630995035171509
    5. ':' → logprob: -3.130995035171509
    6. ':
' → logprob: -4.38099479675293
    7. 'for' → logprob: -4.38099479675293
    8. ' :
' → logprob: -4.38099479675293
    9. ' :' → logprob: -4.50599479675293
    10. ' in' → logprob: -4.75599479675293

Token 235: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.43375203013420105
    2. 'range' → logprob: -1.8087520599365234
    3. ' la' → logprob: -2.5587520599365234
    4. 'l' → logprob: -3.4337520599365234
    5. ' range' → logprob: -3.6837520599365234
    6. 'la' → logprob: -3.6837520599365234
    7. 'for' → logprob: -5.808752059936523
    8. ' ' → logprob: -5.933752059936523
    9. 'g' → logprob: -6.183752059936523
    10. 'rang' → logprob: -6.308752059936523

Token 236: ' suite' (ID: 13800)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.35615697503089905
    2. 'position' → logprob: -1.9811569452285767
    3. 'chain' → logprob: -3.481157064437866
    4. 'for' → logprob: -3.606157064437866
    5. ' chaîne' → logprob: -3.731157064437866
    6. ' position' → logprob: -4.231156826019287
    7. ' chaine' → logprob: -4.356156826019287
    8. 'range' → logprob: -4.606156826019287
    9. '   ' → logprob: -4.731156826019287
    10. '```' → logprob: -5.356156826019287

Token 237: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0693272203207016
    2. ' for' → logprob: -2.8193271160125732
    3. 'for' → logprob: -5.819327354431152
    4. '                
' → logprob: -6.444327354431152
    5. ' m' → logprob: -6.694327354431152
    6. 'm' → logprob: -7.944327354431152
    7. '                   ' → logprob: -8.194327354431152
    8. '   ' → logprob: -8.694327354431152
    9. '                ' → logprob: -8.694327354431152
    10. '           ' → logprob: -9.444327354431152

Token 238: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5521039366722107
    2. '               ' → logprob: -0.9271039366722107
    3. 'for' → logprob: -4.4271039962768555
    4. '                   ' → logprob: -4.6771039962768555
    5. '   ' → logprob: -6.5521039962768555
    6. '                
' → logprob: -6.5521039962768555
    7. '                ' → logprob: -7.0521039962768555
    8. '                    
' → logprob: -7.6771039962768555
    9. '           ' → logprob: -7.8021039962768555
    10. ',' → logprob: -8.052103996276855

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24663054943084717
    2. ' for' → logprob: -1.6216305494308472
    3. 'm' → logprob: -3.9966306686401367
    4. ' m' → logprob: -5.996630668640137
    5. '   ' → logprob: -9.121630668640137
    6. ' ' → logprob: -11.996630668640137
    7. '           ' → logprob: -12.996630668640137
    8. '```' → logprob: -13.246630668640137
    9. 'x' → logprob: -13.746630668640137
    10. 'c' → logprob: -13.746630668640137

Token 240: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06391102075576782
    2. 'c' → logprob: -3.563910961151123
    3. 'x' → logprob: -3.688910961151123
    4. 'a' → logprob: -5.813910961151123
    5. 'new' → logprob: -6.063910961151123
    6. ' m' → logprob: -7.813910961151123
    7. 'nj' → logprob: -7.813910961151123
    8. 'ch' → logprob: -8.313911437988281
    9. 'ni' → logprob: -8.438911437988281
    10. 'd' → logprob: -8.688911437988281

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891589403152466
    2. 'in' → logprob: -2.57891583442688
    3. ' ' → logprob: -10.9539155960083
    4. '<|end|>' → logprob: -13.3289155960083
    5. 'In' → logprob: -13.7039155960083
    6. '	in' → logprob: -13.8289155960083
    7. '  ' → logprob: -14.5789155960083
    8. '_in' → logprob: -14.5789155960083
    9. '```' → logprob: -14.8289155960083
    10. 'range' → logprob: -14.9539155960083

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020678490400314
    2. ' range' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.60020637512207
    4. '   ' → logprob: -17.35020637512207
    5. '[' → logprob: -17.47520637512207
    6. '	range' → logprob: -17.97520637512207
    7. '(range' → logprob: -18.22520637512207
    8. '0' → logprob: -18.47520637512207
    9. '  ' → logprob: -19.97520637512207
    10. 'ran' → logprob: -20.10020637512207

Token 243: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.572941179503687e-05
    2. '4' → logprob: -10.000045776367188
    3. '(
' → logprob: -15.625045776367188
    4. ' (' → logprob: -16.000045776367188
    5. '   ' → logprob: -18.875045776367188
    6. ' ' → logprob: -19.250045776367188
    7. '```' → logprob: -20.750045776367188
    8. '' → logprob: -21.375045776367188
    9. '{' → logprob: -21.500045776367188
    10. '	' → logprob: -22.000045776367188

Token 244: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '(' → logprob: -18.25
    4. '   ' → logprob: -18.25
    5. '
' → logprob: -18.75
    6. '４' → logprob: -19.625
    7. ')' → logprob: -19.75
    8. '```' → logprob: -20.0
    9. '۴' → logprob: -20.25
    10. '' → logprob: -20.5

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01121887844055891
    2. '):
' → logprob: -4.511219024658203
    3. ' ):' → logprob: -9.011219024658203
    4. ')' → logprob: -10.511219024658203
    5. '+' → logprob: -12.261219024658203
    6. ':' → logprob: -12.386219024658203
    7. '):
' → logprob: -13.011219024658203
    8. '):

' → logprob: -13.011219024658203
    9. '   ' → logprob: -13.386219024658203
    10. '                   ' → logprob: -14.011219024658203

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02773039974272251
    2. '                ' → logprob: -4.652730464935303
    3. '                    ' → logprob: -5.027730464935303
    4. '               ' → logprob: -5.402730464935303
    5. '                    
' → logprob: -6.152730464935303
    6. ' ' → logprob: -6.527730464935303
    7. '#' → logprob: -7.402730464935303
    8. '                       ' → logprob: -7.777730464935303
    9. '                  ' → logprob: -8.277729988098145
    10. '<|end|>' → logprob: -8.277729988098145

Token 247: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.30115222930908203
    2. 'if' → logprob: -1.676152229309082
    3. '                       ' → logprob: -3.176152229309082
    4. '                   ' → logprob: -4.176152229309082
    5. ' #' → logprob: -5.176152229309082
    6. ' if' → logprob: -5.426152229309082
    7. 'next' → logprob: -6.051152229309082
    8. '                        
' → logprob: -7.426152229309082
    9. 'new' → logprob: -7.926152229309082
    10. 'valid' → logprob: -7.926152229309082

Token 248: ' Quelques' (ID: 157752)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37680941820144653
    2. 'if' → logprob: -1.3768093585968018
    3. ' #' → logprob: -3.7518093585968018
    4. '                   ' → logprob: -4.001809597015381
    5. ' if' → logprob: -4.376809597015381
    6. '                       ' → logprob: -6.501809597015381
    7. 'chaine' → logprob: -7.001809597015381
    8. 's' → logprob: -7.251809597015381
    9. ' forbidden' → logprob: -7.251809597015381
    10. 'next' → logprob: -7.626809597015381

Token 249: ' comb' (ID: 4134)
  Prédit: ' forbidden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forbidden' → logprob: -0.5264536738395691
    2. ' conditions' → logprob: -1.5264537334442139
    3. ' interdit' → logprob: -3.276453733444214
    4. 'conditions' → logprob: -3.776453733444214
    5. '#' → logprob: -3.901453733444214
    6. '                   ' → logprob: -4.151453495025635
    7. 'if' → logprob: -4.276453495025635
    8. '           ' → logprob: -4.276453495025635
    9. 'cond' → logprob: -4.776453495025635
    10. ' interd' → logprob: -5.026453495025635

Token 250: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.6697184443473816
    2. 'ines' → logprob: -1.4197185039520264
    3. 'ina' → logprob: -2.5447185039520264
    4. 'in' → logprob: -3.4197185039520264
    5. 'ats' → logprob: -3.5447185039520264
    6. 'inais' → logprob: -3.6697185039520264
    7. 'inas' → logprob: -3.9197185039520264
    8. 'ine' → logprob: -4.419718265533447
    9. 'ination' → logprob: -4.669718265533447
    10. '                   ' → logprob: -4.919718265533447

Token 251: 'ons' (ID: 1808)
  Prédit: 'sons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sons' → logprob: -0.14159435033798218
    2. 'ons' → logprob: -2.766594409942627
    3. 'son' → logprob: -3.766594409942627
    4. 'n' → logprob: -4.141594409942627
    5. 's' → logprob: -5.141594409942627
    6. 'nts' → logprob: -5.766594409942627
    7. 'na' → logprob: -5.891594409942627
    8. 'ais' → logprob: -6.016594409942627
    9. 'les' → logprob: -6.141594409942627
    10. 'asons' → logprob: -6.391594409942627

Token 252: ' interdit' (ID: 129427)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048904821276664734
    2. ':' → logprob: -4.423904895782471
    3. '                    ' → logprob: -4.548904895782471
    4. '                       ' → logprob: -4.548904895782471
    5. ' :' → logprob: -5.048904895782471
    6. '                    
' → logprob: -5.548904895782471
    7. '               ' → logprob: -6.798904895782471
    8. '                        
' → logprob: -8.048904418945312
    9. '                  ' → logprob: -8.298904418945312
    10. ' =' → logprob: -8.423904418945312

Token 253: 'es' (ID: 268)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.1258287876844406
    2. 'es' → logprob: -2.750828742980957
    3. 'ions' → logprob: -3.000828742980957
    4. 'ion' → logprob: -5.750828742980957
    5. 'ees' → logprob: -7.000828742980957
    6. 'és' → logprob: -8.250828742980957
    7. 'e' → logprob: -9.875828742980957
    8. 'é' → logprob: -9.875828742980957
    9. 'rices' → logprob: -10.000828742980957
    10. 'ée' → logprob: -10.625828742980957

Token 254: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039034128189086914
    2. ':' → logprob: -3.414034128189087
    3. ' :' → logprob: -6.039033889770508
    4. '                       ' → logprob: -6.289033889770508
    5. '               ' → logprob: -7.914033889770508
    6. '                    ' → logprob: -8.289033889770508
    7. '                    
' → logprob: -8.789033889770508
    8. ':
' → logprob: -9.289033889770508
    9. '                  ' → logprob: -9.789033889770508
    10. ' if' → logprob: -10.539033889770508

Token 255: ' il' (ID: 1793)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12371616065502167
    2. 'if' → logprob: -2.498716115951538
    3. '                   ' → logprob: -3.623716115951538
    4. '                       ' → logprob: -5.373716354370117
    5. ' continue' → logprob: -6.498716354370117
    6. 'continue' → logprob: -7.998716354370117
    7. '#' → logprob: -8.373716354370117
    8. '                    ' → logprob: -8.373716354370117
    9. '                           ' → logprob: -8.998716354370117
    10. '                     ' → logprob: -9.248716354370117

Token 256: ' faudrait' (ID: 128958)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.15715192258358002
    2. ' y' → logprob: -2.907151937484741
    3. 'f' → logprob: -3.657151937484741
    4. '   ' → logprob: -4.532151699066162
    5. ' faudra' → logprob: -4.532151699066162
    6. ' ' → logprob: -4.907151699066162
    7. ' faudrait' → logprob: -5.282151699066162
    8. ' a' → logprob: -5.532151699066162
    9. '=' → logprob: -5.532151699066162
    10. 'if' → logprob: -5.782151699066162

Token 257: ' mieux' (ID: 26345)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.2852543294429779
    2. 'if' → logprob: -2.2852542400360107
    3. 'continue' → logprob: -2.6602542400360107
    4. ' continuer' → logprob: -3.5352542400360107
    5. 'aj' → logprob: -4.53525447845459
    6. '   ' → logprob: -5.03525447845459
    7. 'v' → logprob: -5.03525447845459
    8. ' continue' → logprob: -5.28525447845459
    9. ' if' → logprob: -5.53525447845459
    10. '                   ' → logprob: -5.53525447845459

Token 258: ' faire' (ID: 8119)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4868123233318329
    2. '                   ' → logprob: -1.4868123531341553
    3. ' if' → logprob: -2.8618123531341553
    4. 'continue' → logprob: -3.2368123531341553
    5. 'contin' → logprob: -3.6118123531341553
    6. ' continue' → logprob: -4.111812114715576
    7. '   ' → logprob: -5.486812114715576
    8. ' continuer' → logprob: -5.861812114715576
    9. '                       ' → logprob: -6.361812114715576
    10. '                    ' → logprob: -6.486812114715576

Token 259: ' ça' (ID: 13590)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08295582234859467
    2. '                       ' → logprob: -2.957955837249756
    3. ':' → logprob: -4.582955837249756
    4. '                    ' → logprob: -5.207955837249756
    5. '                    
' → logprob: -5.457955837249756
    6. ' :' → logprob: -6.082955837249756
    7. ' if' → logprob: -6.332955837249756
    8. '               ' → logprob: -6.707955837249756
    9. '                        
' → logprob: -7.332955837249756
    10. '                     
' → logprob: -8.082955360412598

Token 260: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03264251723885536
    2. ':' → logprob: -3.6576426029205322
    3. '                       ' → logprob: -6.157642364501953
    4. ' :' → logprob: -6.407642364501953
    5. '                    ' → logprob: -7.032642364501953
    6. '               ' → logprob: -7.532642364501953
    7. '                    
' → logprob: -7.532642364501953
    8. ':
' → logprob: -8.407642364501953
    9. '                  ' → logprob: -9.657642364501953
    10. ' if' → logprob: -10.032642364501953

Token 261: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025833746418356895
    2. '                       ' → logprob: -4.150833606719971
    3. '                    ' → logprob: -5.150833606719971
    4. '                    
' → logprob: -6.775833606719971
    5. '               ' → logprob: -7.525833606719971
    6. 'if' → logprob: -7.650833606719971
    7. '                  ' → logprob: -7.775833606719971
    8. ' if' → logprob: -8.025834083557129
    9. '                     ' → logprob: -8.275834083557129
    10. ' but' → logprob: -9.400834083557129

Token 262: ' revoir' (ID: 136174)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.7328382134437561
    2. 'l' → logprob: -1.9828381538391113
    3. 'contin' → logprob: -2.2328381538391113
    4. ' part' → logprob: -2.2328381538391113
    5. 'la' → logprob: -2.6078381538391113
    6. 'continue' → logprob: -3.6078381538391113
    7. ' la' → logprob: -4.482838153839111
    8. ' chaque' → logprob: -4.857838153839111
    9. '```' → logprob: -5.107838153839111
    10. ' terme' → logprob: -5.607838153839111

Token 263: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014074939535930753
    2. '                       ' → logprob: -7.626407623291016
    3. '                    
' → logprob: -8.001407623291016
    4. '               ' → logprob: -8.376407623291016
    5. '                    ' → logprob: -8.876407623291016
    6. ':' → logprob: -9.501407623291016
    7. 'if' → logprob: -10.126407623291016
    8. ' if' → logprob: -10.376407623291016
    9. '                        
' → logprob: -11.376407623291016
    10. '                  ' → logprob: -11.626407623291016

Token 264: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013069639913737774
    2. '                       ' → logprob: -4.8880696296691895
    3. '                    ' → logprob: -6.2630696296691895
    4. ' if' → logprob: -6.7630696296691895
    5. '                    
' → logprob: -6.8880696296691895
    6. '               ' → logprob: -7.3880696296691895
    7. 'if' → logprob: -8.013070106506348
    8. '                        
' → logprob: -9.388070106506348
    9. '                  ' → logprob: -9.513070106506348
    10. '                ' → logprob: -9.888070106506348

Token 265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12437304854393005
    2. '                   ' → logprob: -2.374372959136963
    3. ' if' → logprob: -3.749372959136963
    4. '#' → logprob: -8.999373435974121
    5. '                       ' → logprob: -9.249373435974121
    6. '                    
' → logprob: -10.249373435974121
    7. '                    ' → logprob: -10.749373435974121
    8. '               ' → logprob: -10.999373435974121
    9. '                  ' → logprob: -11.249373435974121
    10. 'next' → logprob: -11.374373435974121

Token 266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.211921215057373
    2. ' a' → logprob: -1.461921215057373
    3. ' (' → logprob: -1.461921215057373
    4. '(a' → logprob: -1.461921215057373
    5. '(' → logprob: -6.086921215057373
    6. '(j' → logprob: -6.461921215057373
    7. ' ' → logprob: -6.586921215057373
    8. '   ' → logprob: -7.461921215057373
    9. '(
' → logprob: -7.961921215057373
    10. '  ' → logprob: -8.211921691894531

Token 267: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007614201866090298
    2. ' ==' → logprob: -4.8826141357421875
    3. '==
' → logprob: -12.882614135742188
    4. '!=' → logprob: -13.382614135742188
    5. 'in' → logprob: -13.507614135742188
    6. ' ' → logprob: -14.132614135742188
    7. '=' → logprob: -14.257614135742188
    8. ' in' → logprob: -14.882614135742188
    9. '==(' → logprob: -15.382614135742188
    10. ']==' → logprob: -15.382614135742188

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010993940755724907
    2. '0' → logprob: -4.885993957519531
    3. 'k' → logprob: -6.385993957519531
    4. '2' → logprob: -6.510993957519531
    5. ' ' → logprob: -9.510993957519531
    6. 'G' → logprob: -10.260993957519531
    7. 'j' → logprob: -10.385993957519531
    8. '   ' → logprob: -11.135993957519531
    9. 'g' → logprob: -11.510993957519531
    10. 'l' → logprob: -11.760993957519531

Token 269: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020128032192587852
    2. '2' → logprob: -4.02012825012207
    3. '0' → logprob: -6.64512825012207
    4. 'k' → logprob: -7.64512825012207
    5. ' ' → logprob: -9.64512825012207
    6. '   ' → logprob: -9.89512825012207
    7. 'C' → logprob: -10.39512825012207
    8. '
' → logprob: -11.77012825012207
    9. '  ' → logprob: -12.02012825012207
    10. 'l' → logprob: -12.14512825012207

Token 270: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.033661261200904846
    2. ' and' → logprob: -3.408661365509033
    3. ' ' → logprob: -11.908660888671875
    4. ':' → logprob: -12.658660888671875
    5. ':
' → logprob: -12.658660888671875
    6. 'a' → logprob: -14.533660888671875
    7. '   ' → logprob: -14.908660888671875
    8. '	and' → logprob: -15.283660888671875
    9. 'et' → logprob: -15.783660888671875
    10. '  ' → logprob: -15.783660888671875

Token 271: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0063546160236001015
    2. 'j' → logprob: -5.506354808807373
    3. ' k' → logprob: -6.381354808807373
    4. 'l' → logprob: -7.756354808807373
    5. '(k' → logprob: -9.256354331970215
    6. ' j' → logprob: -10.131354331970215
    7. ' l' → logprob: -12.131354331970215
    8. '(j' → logprob: -12.506354331970215
    9. ' ' → logprob: -13.131354331970215
    10. ' (' → logprob: -13.256354331970215

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38687628507614136
    2. '==' → logprob: -1.1368763446807861
    3. ' ' → logprob: -13.011876106262207
    4. '=' → logprob: -13.511876106262207
    5. '==
' → logprob: -14.136876106262207
    6. '  ' → logprob: -15.386876106262207
    7. 'a' → logprob: -15.886876106262207
    8. ' ' → logprob: -16.261877059936523
    9. '   ' → logprob: -16.386877059936523
    10. ')==' → logprob: -17.011877059936523

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2824211120605469
    2. '0' → logprob: -1.4074211120605469
    3. ' ' → logprob: -6.782421112060547
    4. '   ' → logprob: -9.907421112060547
    5. '[' → logprob: -10.407421112060547
    6. '

' → logprob: -11.282421112060547
    7. '(' → logprob: -11.407421112060547
    8. '  ' → logprob: -11.532421112060547
    9. '
' → logprob: -11.907421112060547
    10. '2' → logprob: -12.532421112060547

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019595595076680183
    2. '0' → logprob: -6.251959323883057
    3. ' ' → logprob: -11.501959800720215
    4. '2' → logprob: -12.001959800720215
    5. '(' → logprob: -12.001959800720215
    6. '[' → logprob: -12.376959800720215
    7. '

' → logprob: -13.751959800720215
    8. '   ' → logprob: -14.001959800720215
    9. '
' → logprob: -14.376959800720215
    10. '{' → logprob: -14.501959800720215

Token 275: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.038241155445575714
    2. ' and' → logprob: -3.288241147994995
    3. '   ' → logprob: -9.038241386413574
    4. ' ' → logprob: -10.913241386413574
    5. '                       ' → logprob: -11.288241386413574
    6. '                           ' → logprob: -11.413241386413574
    7. ':
' → logprob: -11.788241386413574
    8. '                   ' → logprob: -11.913241386413574
    9. ':' → logprob: -12.288241386413574
    10. '  ' → logprob: -12.538241386413574

Token 276: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000966487976256758
    2. 'a' → logprob: -7.500966548919678
    3. 'l' → logprob: -8.12596607208252
    4. ' k' → logprob: -9.12596607208252
    5. '   ' → logprob: -12.12596607208252
    6. 'i' → logprob: -14.00096607208252
    7. ' ' → logprob: -14.37596607208252
    8. '
' → logprob: -15.00096607208252
    9. '  ' → logprob: -15.00096607208252
    10. ' a' → logprob: -15.00096607208252

Token 277: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6326194405555725
    2. '==' → logprob: -0.7576194405555725
    3. ' ' → logprob: -11.632619857788086
    4. ']==' → logprob: -13.257619857788086
    5. '=' → logprob: -13.382619857788086
    6. ' !=' → logprob: -13.632619857788086
    7. '==
' → logprob: -13.632619857788086
    8. '!=' → logprob: -13.882619857788086
    9. '[' → logprob: -14.257619857788086
    10. '  ' → logprob: -14.382619857788086

Token 278: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005837726057507098
    2. '2' → logprob: -7.500583648681641
    3. ' ' → logprob: -11.00058364868164
    4. '3' → logprob: -11.75058364868164
    5. '1' → logprob: -12.25058364868164
    6. '   ' → logprob: -13.75058364868164
    7. '(' → logprob: -16.25058364868164
    8. '
' → logprob: -16.62558364868164
    9. '

' → logprob: -16.75058364868164
    10. '  ' → logprob: -16.87558364868164

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06202179566025734
    2. '2' → logprob: -2.8120217323303223
    3. '3' → logprob: -10.06202220916748
    4. ' ' → logprob: -11.81202220916748
    5. '1' → logprob: -12.68702220916748
    6. '   ' → logprob: -14.56202220916748
    7. '(' → logprob: -15.81202220916748
    8. '[' → logprob: -16.749521255493164
    9. '#' → logprob: -16.874521255493164
    10. '  ' → logprob: -17.249521255493164

Token 280: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008577931672334671
    2. ':
' → logprob: -5.133577823638916
    3. ' and' → logprob: -6.883577823638916
    4. ' :' → logprob: -7.008577823638916
    5. 'and' → logprob: -7.383577823638916
    6. ':return' → logprob: -9.883578300476074
    7. ' :
' → logprob: -11.133578300476074
    8. ':

' → logprob: -11.633578300476074
    9. '                   ' → logprob: -12.758578300476074
    10. '   ' → logprob: -12.883578300476074

Token 281: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002859916305169463
    2. '                   ' → logprob: -6.752860069274902
    3. ' continue' → logprob: -7.252860069274902
    4. 'continue' → logprob: -7.877860069274902
    5. '                        
' → logprob: -9.127860069274902
    6. '   ' → logprob: -9.252860069274902
    7. '
' → logprob: -9.377860069274902
    8. '                        ' → logprob: -9.877860069274902
    9. '               ' → logprob: -9.877860069274902
    10. '	continue' → logprob: -9.877860069274902

Token 282: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01229065377265215
    2. '                   ' → logprob: -5.5122904777526855
    3. ' continue' → logprob: -5.6372904777526855
    4. 'continue' → logprob: -6.2622904777526855
    5. '	continue' → logprob: -7.1372904777526855
    6. ':' → logprob: -7.3872904777526855
    7. ':
' → logprob: -8.387290954589844
    8. ' or' → logprob: -8.762290954589844
    9. '   ' → logprob: -9.137290954589844
    10. '					' → logprob: -9.137290954589844

Token 283: ' AG' (ID: 19215)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.69115149974823
    2. '                       ' → logprob: -1.06615149974823
    3. 'continue' → logprob: -1.94115149974823
    4. '                   ' → logprob: -4.6911516189575195
    5. '	continue' → logprob: -7.6911516189575195
    6. '                        ' → logprob: -8.19115161895752
    7. '                           ' → logprob: -8.31615161895752
    8. '   ' → logprob: -8.56615161895752
    9. '               ' → logprob: -8.69115161895752
    10. '                               ' → logprob: -9.06615161895752

Token 284: 'C' (ID: 34)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3656383156776428
    2. 'and' → logprob: -1.615638256072998
    3. ' or' → logprob: -3.240638256072998
    4. ':' → logprob: -3.240638256072998
    5. '                   ' → logprob: -3.865638256072998
    6. '                       ' → logprob: -5.740638256072998
    7. '                    ' → logprob: -6.365638256072998
    8. 'or' → logprob: -6.990638256072998
    9. '                     ' → logprob: -8.115638732910156
    10. '                      ' → logprob: -8.115638732910156

Token 285: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4712749421596527
    2. ':' → logprob: -1.096274971961975
    3. ':
' → logprob: -3.5962748527526855
    4. '                   ' → logprob: -4.3462748527526855
    5. ' or' → logprob: -7.3462748527526855
    6. '                      ' → logprob: -8.346275329589844
    7. '                     ' → logprob: -9.096275329589844
    8. ' and' → logprob: -10.096275329589844
    9. '                           ' → logprob: -10.221275329589844
    10. '               ' → logprob: -10.221275329589844

Token 286: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013695038855075836
    2. ':' → logprob: -4.638695240020752
    3. '                   ' → logprob: -6.013695240020752
    4. ':
' → logprob: -7.263695240020752
    5. ' or' → logprob: -7.638695240020752
    6. ' :' → logprob: -9.638694763183594
    7. '                      ' → logprob: -9.638694763183594
    8. '                     ' → logprob: -10.638694763183594
    9. '                           ' → logprob: -10.763694763183594
    10. ' and' → logprob: -10.763694763183594

Token 287: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06389155983924866
    2. ' continue' → logprob: -3.313891649246216
    3. 'continue' (adapté à ' continue') → logprob: -3.688891649246216
    4. '                   ' → logprob: -8.688891410827637
    5. '					' → logprob: -9.438891410827637
    6. '                           ' → logprob: -9.438891410827637
    7. '	continue' → logprob: -9.813891410827637
    8. '                               ' → logprob: -9.938891410827637
    9. '   ' → logprob: -10.688891410827637
    10. '                        ' → logprob: -11.313891410827637

Token 288: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.869639476761222e-05
    2. '                    
' → logprob: -11.250039100646973
    3. '                    ' → logprob: -11.375039100646973
    4. '               ' → logprob: -12.375039100646973
    5. '                  ' → logprob: -13.000039100646973
    6. '<|end|>' → logprob: -13.000039100646973
    7. '				' → logprob: -13.500039100646973
    8. '
' → logprob: -13.625039100646973
    9. '           ' → logprob: -14.375039100646973
    10. '                     ' → logprob: -14.625039100646973

Token 289: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.337155355140567e-05
    2. '                    
' → logprob: -10.375062942504883
    3. '                    ' → logprob: -11.375062942504883
    4. '               ' → logprob: -11.500062942504883
    5. '                  ' → logprob: -13.000062942504883
    6. '
' → logprob: -13.000062942504883
    7. '           ' → logprob: -13.375062942504883
    8. '       ' → logprob: -13.750062942504883
    9. '                       ' → logprob: -13.875062942504883
    10. '				' → logprob: -14.125062942504883

Token 290: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002203070791438222
    2. 'if' (adapté à ' if') → logprob: -6.252202987670898
    3. ' if' → logprob: -9.377202987670898
    4. '               ' → logprob: -9.752202987670898
    5. '                    
' → logprob: -9.752202987670898
    6. '                    ' → logprob: -10.002202987670898
    7. '                  ' → logprob: -11.627202987670898
    8. '
' → logprob: -12.002202987670898
    9. '				' → logprob: -12.252202987670898
    10. '           ' → logprob: -12.752202987670898

Token 291: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06511055678129196
    2. 'a' → logprob: -2.815110445022583
    3. ' k' → logprob: -6.065110683441162
    4. ' j' → logprob: -8.315110206604004
    5. 'k' → logprob: -8.565110206604004
    6. ' ' → logprob: -8.940110206604004
    7. ' l' → logprob: -9.440110206604004
    8. ' b' → logprob: -10.065110206604004
    9. ' (' → logprob: -10.690110206604004
    10. '(a' → logprob: -10.690110206604004

Token 292: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11284168809652328
    2. '==' → logprob: -2.2378416061401367
    3. ' ' → logprob: -10.987841606140137
    4. '=' → logprob: -14.237841606140137
    5. '==
' → logprob: -14.362841606140137
    6. ' =' → logprob: -15.112841606140137
    7. ' ' → logprob: -15.237841606140137
    8. '  ' → logprob: -16.112842559814453
    9. 'a' → logprob: -16.550342559814453
    10. ' ==
' → logprob: -16.675342559814453

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4871753454208374
    2. '2' → logprob: -1.2371753454208374
    3. ' ' → logprob: -2.362175464630127
    4. '0' → logprob: -6.737175464630127
    5. '3' → logprob: -11.487174987792969
    6. '   ' → logprob: -11.612174987792969
    7. '[' → logprob: -12.799674987792969
    8. '  ' → logprob: -12.924674987792969
    9. '...' → logprob: -13.237174987792969
    10. '(' → logprob: -13.362174987792969

Token 294: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18380329012870789
    2. '1' → logprob: -1.8088033199310303
    3. '0' → logprob: -5.808803081512451
    4. '3' → logprob: -6.933803081512451
    5. ' ' → logprob: -10.05880355834961
    6. '[' → logprob: -11.87130355834961
    7. '...' → logprob: -12.05880355834961
    8. '   ' → logprob: -12.62130355834961
    9. '(' → logprob: -12.62130355834961
    10. '

' → logprob: -13.37130355834961

Token 295: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14117665588855743
    2. 'and' → logprob: -2.516176700592041
    3. ' ==' → logprob: -3.266176700592041
    4. '==' → logprob: -4.391176700592041
    5. ' ' → logprob: -8.016176223754883
    6. '   ' → logprob: -11.266176223754883
    7. ' и' → logprob: -12.516176223754883
    8. '=' → logprob: -13.141176223754883
    9. ',' → logprob: -13.266176223754883
    10. ' &&' → logprob: -13.766176223754883

Token 296: ' j' (ID: 441)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2834038734436035
    2. 'j' → logprob: -1.4084038734436035
    3. ' ' → logprob: -7.0334038734436035
    4. 'k' → logprob: -7.1584038734436035
    5. ' j' → logprob: -7.6584038734436035
    6. '   ' → logprob: -9.783403396606445
    7. '  ' → logprob: -10.033403396606445
    8. '[' → logprob: -12.158403396606445
    9. '    ' → logprob: -12.783403396606445
    10. '3' → logprob: -13.158403396606445

Token 297: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519320547580719
    2. '==' → logprob: -1.5019320249557495
    3. '=' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.751932144165039
    5. '==
' → logprob: -15.501932144165039
    6. '2' → logprob: -15.626932144165039
    7. ']==' → logprob: -16.12693214416504
    8. '[' → logprob: -16.12693214416504
    9. ' =' → logprob: -17.25193214416504
    10. ')==' → logprob: -17.25193214416504

Token 298: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038169484469108284
    2. ' ' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.375381469726562
    4. '[' → logprob: -14.500381469726562
    5. '  ' → logprob: -15.375381469726562
    6. '0' → logprob: -16.125381469726562
    7. '(' → logprob: -16.250381469726562
    8. '    ' → logprob: -17.500381469726562
    9. '２' → logprob: -18.625381469726562
    10. '۲' → logprob: -18.625381469726562

Token 299: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '[' → logprob: -15.75001049041748
    4. '   ' → logprob: -16.250011444091797
    5. '0' → logprob: -16.750011444091797
    6. '  ' → logprob: -17.125011444091797
    7. '２' → logprob: -18.937511444091797
    8. '(' → logprob: -19.062511444091797
    9. '```' → logprob: -19.312511444091797
    10. '۲' → logprob: -19.500011444091797

Token 300: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25195762515068054
    2. 'and' → logprob: -1.501957654953003
    3. ' ' → logprob: -10.876957893371582
    4. ' и' → logprob: -13.251957893371582
    5. '   ' → logprob: -13.626957893371582
    6. '0' → logprob: -13.751957893371582
    7. '           ' → logprob: -14.126957893371582
    8. '  ' → logprob: -14.626957893371582
    9. '                   ' → logprob: -14.626957893371582
    10. 'a' → logprob: -14.876957893371582

Token 301: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08940111845731735
    2. 'k' → logprob: -2.4644010066986084
    3. ' ' → logprob: -8.339401245117188
    4. ' k' → logprob: -8.714401245117188
    5. 'a' → logprob: -10.464401245117188
    6. '   ' → logprob: -10.964401245117188
    7. '[' → logprob: -12.589401245117188
    8. 'l' → logprob: -12.714401245117188
    9. '  ' → logprob: -13.089401245117188
    10. '[k' → logprob: -13.839401245117188

Token 302: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740847945213318
    2. '==' → logprob: -0.9740847945213318
    3. ' ' → logprob: -12.849084854125977
    4. ']==' → logprob: -12.974084854125977
    5. '[' → logprob: -13.724084854125977
    6. '=' → logprob: -14.474084854125977
    7. ')==' → logprob: -15.099084854125977
    8. ' ' → logprob: -15.599084854125977
    9. '==
' → logprob: -15.599084854125977
    10. '```' → logprob: -16.099084854125977

Token 303: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019294669618830085
    2. ' ' → logprob: -6.25192928314209
    3. '3' → logprob: -14.75192928314209
    4. '   ' → logprob: -15.25192928314209
    5. '[' → logprob: -16.001930236816406
    6. '(' → logprob: -16.876930236816406
    7. '  ' → logprob: -17.501930236816406
    8. '           ' → logprob: -17.626930236816406
    9. '1' → logprob: -18.126930236816406
    10. '    ' → logprob: -18.814430236816406

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '3' → logprob: -15.000031471252441
    4. '1' → logprob: -16.500032424926758
    5. '   ' → logprob: -16.500032424926758
    6. '[' → logprob: -16.875032424926758
    7. 'a' → logprob: -18.312532424926758
    8. '(' → logprob: -18.375032424926758
    9. '  ' → logprob: -18.750032424926758
    10. '```' → logprob: -19.312532424926758

Token 305: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051455769687891006
    2. ':
' → logprob: -3.3014557361602783
    3. '                       ' → logprob: -4.426455974578857
    4. ' and' → logprob: -7.051455974578857
    5. '                   ' → logprob: -8.0514554977417
    6. 'and' → logprob: -9.4264554977417
    7. ' :' → logprob: -10.5514554977417
    8. '                      ' → logprob: -11.1764554977417
    9. ' :
' → logprob: -11.9264554977417
    10. '               ' → logprob: -11.9264554977417

Token 306: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0060655479319393635
    2. 'continue' → logprob: -5.506065368652344
    3. ' continue' → logprob: -6.381065368652344
    4. '                   ' → logprob: -8.256065368652344
    5. '               ' → logprob: -11.381065368652344
    6. '                           ' → logprob: -12.506065368652344
    7. '   ' → logprob: -12.881065368652344
    8. ':
' → logprob: -13.256065368652344
    9. '       ' → logprob: -13.381065368652344
    10. '                      ' → logprob: -13.506065368652344

Token 307: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.035216107964515686
    2. ' continue' → logprob: -3.9102160930633545
    3. 'continue' → logprob: -4.285216331481934
    4. '                   ' → logprob: -7.285216331481934
    5. '               ' → logprob: -10.160216331481934
    6. '   ' → logprob: -10.410216331481934
    7. ' ' → logprob: -11.410216331481934
    8. '       ' → logprob: -11.535216331481934
    9. '                      ' → logprob: -12.785216331481934
    10. '                     ' → logprob: -12.785216331481934

Token 308: ' A' (ID: 355)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7617467045783997
    2. 'continue' → logprob: -1.2617466449737549
    3. ' G' → logprob: -2.011746644973755
    4. 'G' → logprob: -3.136746644973755
    5. 'AG' → logprob: -3.386746644973755
    6. '                   ' → logprob: -4.011746883392334
    7. ' AG' → logprob: -5.261746883392334
    8. '                       ' → logprob: -5.511746883392334
    9. 'GC' → logprob: -5.511746883392334
    10. 'AC' → logprob: -5.636746883392334

Token 309: 'CG' (ID: 17879)
  Prédit: 'GC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GC' → logprob: -0.10053595900535583
    2. 'G' → logprob: -2.3505358695983887
    3. ' G' → logprob: -8.475536346435547
    4. ' GC' → logprob: -9.850536346435547
    5. 'Gc' → logprob: -11.225536346435547
    6. 'gc' → logprob: -11.350536346435547
    7. 'Ｇ' → logprob: -12.225536346435547
    8. 'C' → logprob: -12.475536346435547
    9. ''GC' → logprob: -12.788036346435547
    10. 'CG' → logprob: -12.913036346435547

Token 310: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10582286864519119
    2. '                   ' → logprob: -2.730822801589966
    3. ':
' → logprob: -4.730823040008545
    4. ' continue' → logprob: -4.730823040008545
    5. ':' → logprob: -4.855823040008545
    6. 'continue' → logprob: -5.230823040008545
    7. '               ' → logprob: -5.730823040008545
    8. '       ' → logprob: -8.230822563171387
    9. ' and' → logprob: -8.605822563171387
    10. '           ' → logprob: -8.980822563171387

Token 311: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.22729691863059998
    2. '                   ' → logprob: -1.6022969484329224
    3. '               ' → logprob: -7.227296829223633
    4. '<|end|>' → logprob: -7.477296829223633
    5. ' continue' → logprob: -8.352296829223633
    6. 'continue' → logprob: -8.477296829223633
    7. '       ' → logprob: -10.602296829223633
    8. '                           ' → logprob: -10.977296829223633
    9. '                      ' → logprob: -11.477296829223633
    10. '           ' → logprob: -11.477296829223633

Token 312: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3311972916126251
    2. 'continue' (adapté à ' continue') → logprob: -1.3311972618103027
    3. ' continue' → logprob: -4.081197261810303
    4. '                   ' → logprob: -7.206197261810303
    5. '	continue' → logprob: -9.706197738647461
    6. '               ' → logprob: -10.456197738647461
    7. '                           ' → logprob: -11.206197738647461
    8. '   ' → logprob: -11.706197738647461
    9. '					' → logprob: -11.706197738647461
    10. '       ' → logprob: -12.206197738647461

Token 313: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.384836888173595e-05
    2. '                    
' → logprob: -11.0000638961792
    3. '                    ' → logprob: -11.0000638961792
    4. '               ' → logprob: -11.2500638961792
    5. '				' → logprob: -11.7500638961792
    6. '
' → logprob: -12.7500638961792
    7. '                  ' → logprob: -12.8750638961792
    8. '           ' → logprob: -13.7500638961792
    9. '                       ' → logprob: -14.2500638961792
    10. '       ' → logprob: -14.5000638961792

Token 314: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00017767686222214252
    2. '               ' → logprob: -9.750177383422852
    3. '                    ' → logprob: -9.875177383422852
    4. '                    
' → logprob: -10.250177383422852
    5. '                       ' → logprob: -11.500177383422852
    6. 'if' → logprob: -11.875177383422852
    7. '           ' → logprob: -12.625177383422852
    8. '                  ' → logprob: -12.750177383422852
    9. '       ' → logprob: -12.875177383422852
    10. '                        
' → logprob: -13.250177383422852

Token 315: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4811989963054657
    2. 'if' (adapté à ' if') → logprob: -0.9811990261077881
    3. ' if' → logprob: -4.981198787689209
    4. '                    ' → logprob: -9.106199264526367
    5. '               ' → logprob: -9.731199264526367
    6. '                  ' → logprob: -10.856199264526367
    7. '           ' → logprob: -11.731199264526367
    8. '```' → logprob: -11.856199264526367
    9. '                    
' → logprob: -11.856199264526367
    10. '                     ' → logprob: -12.481199264526367

Token 316: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.34865903854370117
    2. 'a' → logprob: -1.2236590385437012
    3. ' k' → logprob: -9.97365951538086
    4. 'k' → logprob: -9.97365951538086
    5. '    ' → logprob: -10.59865951538086
    6. ' j' → logprob: -10.84865951538086
    7. '(a' → logprob: -11.09865951538086
    8. ' (' → logprob: -11.34865951538086
    9. ' l' → logprob: -11.47365951538086
    10. 'j' → logprob: -11.47365951538086

Token 317: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17977041006088257
    2. '==' → logprob: -1.8047704696655273
    3. '=' → logprob: -11.179770469665527
    4. ' ' → logprob: -12.054770469665527
    5. ' =' → logprob: -13.054770469665527
    6. '  ' → logprob: -13.804770469665527
    7. '==
' → logprob: -13.804770469665527
    8. '	' → logprob: -14.679770469665527
    9. '   ' → logprob: -15.304770469665527
    10. '...' → logprob: -15.679770469665527

Token 318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.839824914932251
    2. '2' → logprob: -1.214824914932251
    3. '1' → logprob: -1.464824914932251
    4. ' ' → logprob: -3.214824914932251
    5. '3' → logprob: -9.089824676513672
    6. '   ' → logprob: -10.964824676513672
    7. '7' → logprob: -11.089824676513672
    8. '(' → logprob: -11.714824676513672
    9. '[' → logprob: -12.214824676513672
    10. '	' → logprob: -13.089824676513672

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22599449753761292
    2. '1' → logprob: -1.6009944677352905
    3. '0' → logprob: -8.100994110107422
    4. ' ' → logprob: -8.475994110107422
    5. '3' → logprob: -9.975994110107422
    6. '   ' → logprob: -11.850994110107422
    7. '[' → logprob: -11.850994110107422
    8. '(' → logprob: -12.225994110107422
    9. '...' → logprob: -13.975994110107422
    10. '  ' → logprob: -14.538494110107422

Token 320: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021361984312534332
    2. 'and' → logprob: -3.896362066268921
    3. ' ' → logprob: -7.896361827850342
    4. '==' → logprob: -8.0213623046875
    5. ' ==' → logprob: -9.2713623046875
    6. '1' → logprob: -10.8963623046875
    7. '   ' → logprob: -13.3963623046875
    8. 'a' → logprob: -13.7713623046875
    9. '0' → logprob: -13.8963623046875
    10. '  ' → logprob: -15.0213623046875

Token 321: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002564599271863699
    2. ' j' → logprob: -6.002564430236816
    3. 'i' → logprob: -10.502564430236816
    4. 'k' → logprob: -10.752564430236816
    5. '[j' → logprob: -10.877564430236816
    6. 'l' → logprob: -11.252564430236816
    7. '(j' → logprob: -12.377564430236816
    8. '   ' → logprob: -14.377564430236816
    9. ' (' → logprob: -14.627564430236816
    10. '[i' → logprob: -14.752564430236816

Token 322: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5232666730880737
    2. '==' → logprob: -0.8982666730880737
    3. '=' → logprob: -9.648266792297363
    4. '[' → logprob: -10.148266792297363
    5. ' ' → logprob: -11.023266792297363
    6. '1' → logprob: -12.023266792297363
    7. ' =' → logprob: -12.148266792297363
    8. ']==' → logprob: -12.523266792297363
    9. '==
' → logprob: -13.398266792297363
    10. '```' → logprob: -13.898266792297363

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012725774198770523
    2. '0' → logprob: -4.387725830078125
    3. ' ' → logprob: -8.887725830078125
    4. '3' → logprob: -9.887725830078125
    5. '2' → logprob: -10.762725830078125
    6. 'l' → logprob: -12.512725830078125
    7. '   ' → logprob: -14.012725830078125
    8. '[' → logprob: -14.387725830078125
    9. 'a' → logprob: -14.950225830078125
    10. '  ' → logprob: -15.637725830078125

Token 324: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313501238822937
    2. '0' → logprob: -1.313501238822937
    3. ' ' → logprob: -9.063501358032227
    4. '2' → logprob: -9.688501358032227
    5. '3' → logprob: -9.938501358032227
    6. 'a' → logprob: -12.438501358032227
    7. '   ' → logprob: -13.063501358032227
    8. '[' → logprob: -13.126001358032227
    9. '  ' → logprob: -14.188501358032227
    10. '```' → logprob: -14.751001358032227

Token 325: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5762113928794861
    2. ' and' → logprob: -0.8262113928794861
    3. '1' → logprob: -8.951210975646973
    4. ' ' → logprob: -9.951210975646973
    5. '==' → logprob: -10.076210975646973
    6. '           ' → logprob: -10.701210975646973
    7. ' ==' → logprob: -11.951210975646973
    8. '&&' → logprob: -12.576210975646973
    9. '   ' → logprob: -12.826210975646973
    10. '            ' → logprob: -12.951210975646973

Token 326: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5026983618736267
    2. 'l' → logprob: -1.0026984214782715
    3. 'k' → logprob: -3.6276984214782715
    4. ' l' → logprob: -7.0026984214782715
    5. ' ' → logprob: -8.127697944641113
    6. 'a' → logprob: -8.502697944641113
    7. '   ' → logprob: -9.627697944641113
    8. 'i' → logprob: -10.002697944641113
    9. ' k' → logprob: -10.002697944641113
    10. '  ' → logprob: -10.502697944641113

Token 327: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931767463684082
    2. ' ==' → logprob: -0.6931767463684082
    3. '[' → logprob: -11.19317626953125
    4. '1' → logprob: -11.69317626953125
    5. ' ' → logprob: -12.31817626953125
    6. ']==' → logprob: -13.69317626953125
    7. '=' → logprob: -14.44317626953125
    8. '   ' → logprob: -14.69317626953125
    9. '  ' → logprob: -15.81817626953125
    10. '           ' → logprob: -15.94317626953125

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.500012397766113
    3. '3' → logprob: -13.875012397766113
    4. '   ' → logprob: -14.375012397766113
    5. '
' → logprob: -16.125011444091797
    6. '[' → logprob: -16.250011444091797
    7. '```' → logprob: -16.250011444091797
    8. '0' → logprob: -16.375011444091797
    9. '  ' → logprob: -16.625011444091797
    10. '

' → logprob: -17.062511444091797

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '3' → logprob: -12.375007629394531
    3. '
' → logprob: -14.250007629394531
    4. ' ' → logprob: -14.500007629394531
    5. '[' → logprob: -14.875007629394531
    6. '   ' → logprob: -15.125007629394531
    7. '0' → logprob: -15.125007629394531
    8. '

' → logprob: -15.937507629394531
    9. '```' → logprob: -16.00000762939453
    10. '2' → logprob: -16.31250762939453

Token 330: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0719403475522995
    2. ':
' → logprob: -2.6969404220581055
    3. '                   ' → logprob: -7.0719404220581055
    4. '                       ' → logprob: -7.1969404220581055
    5. ' and' → logprob: -8.321940422058105
    6. ':

' → logprob: -10.196940422058105
    7. 'and' → logprob: -10.571940422058105
    8. ' :' → logprob: -10.571940422058105
    9. ':
' → logprob: -11.196940422058105
    10. '               ' → logprob: -11.446940422058105

Token 331: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03558051586151123
    2. ' continue' → logprob: -3.910580635070801
    3. 'continue' → logprob: -4.535580635070801
    4. '                   ' → logprob: -6.035580635070801
    5. ' ' → logprob: -7.035580635070801
    6. '   ' → logprob: -7.535580635070801
    7. '               ' → logprob: -8.6605806350708
    8. '       ' → logprob: -9.0355806350708
    9. '           ' → logprob: -10.4105806350708
    10. '#' → logprob: -11.1605806350708

Token 332: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.051701340824365616
    2. '                       ' → logprob: -3.051701307296753
    3. ' continue' → logprob: -6.051701545715332
    4. '                   ' → logprob: -7.551701545715332
    5. '   ' → logprob: -9.051701545715332
    6. '               ' → logprob: -9.926701545715332
    7. '	continue' → logprob: -10.426701545715332
    8. '       ' → logprob: -10.926701545715332
    9. ' ' → logprob: -11.426701545715332
    10. '           ' → logprob: -13.676701545715332

Token 333: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.039899345487356186
    2. 'T' → logprob: -4.1648993492126465
    3. ' G' → logprob: -4.2898993492126465
    4. 'AG' → logprob: -5.7898993492126465
    5. '#' → logprob: -6.1648993492126465
    6. '   ' → logprob: -6.4148993492126465
    7. 'AC' → logprob: -6.7898993492126465
    8. ' T' → logprob: -8.164898872375488
    9. '
' → logprob: -8.414898872375488
    10. 'continue' → logprob: -8.539898872375488

Token 334: 'AC' (ID: 2436)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003391574718989432
    2. 'if' → logprob: -8.87533950805664
    3. ' C' → logprob: -9.50033950805664
    4. 'c' → logprob: -9.62533950805664
    5. '2' → logprob: -10.50033950805664
    6. '   ' → logprob: -11.50033950805664
    7. '3' → logprob: -12.00033950805664
    8. '1' → logprob: -13.12533950805664
    9. '(C' → logprob: -13.37533950805664
    10. '#' → logprob: -13.75033950805664

Token 335: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00807276088744402
    2. '                   ' → logprob: -5.258072853088379
    3. ':
' → logprob: -6.758072853088379
    4. ':' → logprob: -7.258072853088379
    5. 'continue' → logprob: -7.633072853088379
    6. ' continue' → logprob: -8.258072853088379
    7. '               ' → logprob: -8.758072853088379
    8. '                      ' → logprob: -10.758072853088379
    9. '       ' → logprob: -11.883072853088379
    10. '					' → logprob: -12.008072853088379

Token 336: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010195991024374962
    2. '                   ' → logprob: -4.635196208953857
    3. ' continue' → logprob: -8.6351957321167
    4. '               ' → logprob: -9.3851957321167
    5. 'continue' → logprob: -9.5101957321167
    6. ':' → logprob: -10.7601957321167
    7. '                        
' → logprob: -11.0101957321167
    8. '                      ' → logprob: -11.3851957321167
    9. '       ' → logprob: -11.5101957321167
    10. '                     ' → logprob: -11.7601957321167

Token 337: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4969850480556488
    2. '                       ' → logprob: -0.9969850778579712
    3. ' continue' → logprob: -3.9969849586486816
    4. '                   ' → logprob: -5.496984958648682
    5. '               ' → logprob: -9.49698543548584
    6. '   ' → logprob: -10.12198543548584
    7. '	continue' → logprob: -10.49698543548584
    8. '       ' → logprob: -11.12198543548584
    9. '                     ' → logprob: -12.62198543548584
    10. '           ' → logprob: -12.74698543548584

Token 338: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011527208844199777
    2. '               ' → logprob: -8.001152992248535
    3. '                    
' → logprob: -8.001152992248535
    4. '                       ' → logprob: -8.376152992248535
    5. '                    ' → logprob: -9.501152992248535
    6. '                        
' → logprob: -10.001152992248535
    7. '<|end|>' → logprob: -10.126152992248535
    8. '                  ' → logprob: -10.626152992248535
    9. '				' → logprob: -11.751152992248535
    10. '           ' → logprob: -11.751152992248535

Token 339: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011803467059507966
    2. '               ' → logprob: -7.876180171966553
    3. '                    ' → logprob: -8.126180648803711
    4. '                    
' → logprob: -8.251180648803711
    5. '                       ' → logprob: -9.376180648803711
    6. 'dp' → logprob: -9.376180648803711
    7. '                  ' → logprob: -10.376180648803711
    8. '                        
' → logprob: -11.751180648803711
    9. '           ' → logprob: -11.876180648803711
    10. '                ' → logprob: -12.001180648803711

Token 340: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03932357206940651
    2. 'dp' → logprob: -3.289323568344116
    3. ' dp' → logprob: -7.164323806762695
    4. '               ' → logprob: -8.539323806762695
    5. '                    ' → logprob: -9.164323806762695
    6. '                    
' → logprob: -9.914323806762695
    7. 'if' (adapté à ' if') → logprob: -10.414323806762695
    8. '                       ' → logprob: -10.539323806762695
    9. '                  ' → logprob: -10.664323806762695
    10. '#' → logprob: -11.039323806762695

Token 341: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3565603196620941
    2. ' a' → logprob: -1.2315603494644165
    3. ' (' → logprob: -5.856560230255127
    4. '(a' → logprob: -5.856560230255127
    5. ' k' → logprob: -7.356560230255127
    6. 'k' → logprob: -7.606560230255127
    7. ' j' → logprob: -8.106560707092285
    8. '(k' → logprob: -8.356560707092285
    9. ' l' → logprob: -8.731560707092285
    10. 'j' → logprob: -8.981560707092285

Token 342: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02979862689971924
    2. '==' → logprob: -3.5297985076904297
    3. ' ' → logprob: -10.27979850769043
    4. '=' → logprob: -12.02979850769043
    5. ' =' → logprob: -12.52979850769043
    6. '	' → logprob: -13.40479850769043
    7. ' ' → logprob: -14.40479850769043
    8. '[' → logprob: -14.65479850769043
    9. ' in' → logprob: -14.77979850769043
    10. '```' → logprob: -15.40479850769043

Token 343: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.925258457660675
    2. ' ' → logprob: -0.925258457660675
    3. '0' → logprob: -1.9252583980560303
    4. '1' → logprob: -3.3002583980560303
    5. 'a' → logprob: -4.425258636474609
    6. '3' → logprob: -5.300258636474609
    7. ' a' → logprob: -5.425258636474609
    8. ' l' → logprob: -6.925258636474609
    9. 'l' → logprob: -7.175258636474609
    10. 'k' → logprob: -7.925258636474609

Token 344: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6470737457275391
    2. '2' → logprob: -0.7720737457275391
    3. '1' → logprob: -4.522073745727539
    4. '3' → logprob: -6.522073745727539
    5. ' ' → logprob: -6.647073745727539
    6. 'k' → logprob: -7.772073745727539
    7. 'l' → logprob: -8.772073745727539
    8. 'j' → logprob: -9.022073745727539
    9. 'a' → logprob: -11.834573745727539
    10. '(' → logprob: -12.209573745727539

Token 345: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5412110686302185
    2. 'and' → logprob: -1.6662111282348633
    3. '==' → logprob: -1.7912111282348633
    4. ' ==' → logprob: -2.7912111282348633
    5. ' ' → logprob: -7.291211128234863
    6. 'k' → logprob: -9.416211128234863
    7. '0' → logprob: -10.291211128234863
    8. '   ' → logprob: -10.666211128234863
    9. 'a' → logprob: -11.916211128234863
    10. 'j' → logprob: -12.166211128234863

Token 346: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20252233743667603
    2. 'i' → logprob: -2.0775222778320312
    3. 'k' → logprob: -2.9525222778320312
    4. 'l' → logprob: -5.452522277832031
    5. ' j' → logprob: -6.702522277832031
    6. ' i' → logprob: -8.327522277832031
    7. ' k' → logprob: -10.077522277832031
    8. ' l' → logprob: -10.827522277832031
    9. '   ' → logprob: -10.952522277832031
    10. ' ' → logprob: -11.327522277832031

Token 347: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04863539710640907
    2. '==' → logprob: -3.048635482788086
    3. '0' → logprob: -10.673635482788086
    4. ' ' → logprob: -11.048635482788086
    5. '=' → logprob: -12.548635482788086
    6. ' !=' → logprob: -12.923635482788086
    7. ' =' → logprob: -13.548635482788086
    8. '[' → logprob: -15.173635482788086
    9. ']==' → logprob: -15.173635482788086
    10. '==
' → logprob: -15.423635482788086

Token 348: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09969763457775116
    2. '1' → logprob: -3.2246975898742676
    3. 'k' → logprob: -3.4746975898742676
    4. 'l' → logprob: -4.349697589874268
    5. '3' → logprob: -5.224697589874268
    6. ' ' → logprob: -5.474697589874268
    7. ' l' → logprob: -7.099697589874268
    8. ' k' → logprob: -7.474697589874268
    9. 'i' → logprob: -9.599698066711426
    10. '2' → logprob: -9.849698066711426

Token 349: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039252977818250656
    2. '1' → logprob: -3.789252996444702
    3. '3' → logprob: -4.164252758026123
    4. ' ' → logprob: -8.289253234863281
    5. 'l' → logprob: -10.039253234863281
    6. '   ' → logprob: -11.851753234863281
    7. '[' → logprob: -11.914253234863281
    8. 'a' → logprob: -11.976753234863281
    9. 'k' → logprob: -12.164253234863281
    10. '2' → logprob: -12.226753234863281

Token 350: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06102113798260689
    2. ' and' → logprob: -2.936021089553833
    3. '==' → logprob: -5.561021327972412
    4. 'k' → logprob: -6.811021327972412
    5. ' ' → logprob: -7.561021327972412
    6. ' ==' → logprob: -8.686020851135254
    7. '0' → logprob: -8.686020851135254
    8. '[' → logprob: -9.061020851135254
    9. '&&' → logprob: -10.186020851135254
    10. '[k' → logprob: -10.311020851135254

Token 351: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7320677638053894
    2. 'l' → logprob: -0.7320677638053894
    3. 'i' → logprob: -4.107067584991455
    4. 'k' → logprob: -4.107067584991455
    5. 'j' → logprob: -5.482067584991455
    6. ' l' → logprob: -7.482067584991455
    7. ' a' → logprob: -8.482068061828613
    8. '0' → logprob: -8.732068061828613
    9. 'n' → logprob: -9.607068061828613
    10. '3' → logprob: -10.107068061828613

Token 352: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16210365295410156
    2. ' ==' → logprob: -1.9121036529541016
    3. '0' → logprob: -6.537103652954102
    4. ' ' → logprob: -8.037103652954102
    5. '=' → logprob: -10.537103652954102
    6. '!=' → logprob: -10.787103652954102
    7. '[' → logprob: -11.287103652954102
    8. '1' → logprob: -11.787103652954102
    9. ']==' → logprob: -11.787103652954102
    10. ' !=' → logprob: -12.287103652954102

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042328593553975224
    2. ' ' → logprob: -8.125423431396484
    3. '3' → logprob: -9.000423431396484
    4. '   ' → logprob: -13.000423431396484
    5. '2' → logprob: -13.875423431396484
    6. '  ' → logprob: -15.375423431396484
    7. '```' → logprob: -16.375423431396484
    8. '    ' → logprob: -16.625423431396484
    9. '(' → logprob: -16.750423431396484
    10. '1' → logprob: -17.000423431396484

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013381359167397022
    2. '3' → logprob: -9.500133514404297
    3. ' ' → logprob: -10.000133514404297
    4. '2' → logprob: -11.500133514404297
    5. '   ' → logprob: -13.125133514404297
    6. '  ' → logprob: -15.437633514404297
    7. '[' → logprob: -15.750133514404297
    8. '```' → logprob: -15.812633514404297
    9. 'a' → logprob: -16.125133514404297
    10. '(' → logprob: -16.125133514404297

Token 355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5275138020515442
    2. ':
' → logprob: -0.9025138020515442
    3. '                       ' → logprob: -5.9025139808654785
    4. ' and' → logprob: -7.1525139808654785
    5. '                   ' → logprob: -7.4025139808654785
    6. 'and' → logprob: -8.77751350402832
    7. '):
' → logprob: -10.90251350402832
    8. ':

' → logprob: -11.15251350402832
    9. ':
' → logprob: -11.40251350402832
    10. '               ' → logprob: -12.15251350402832

Token 356: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018850883934646845
    2. 'continue' → logprob: -7.001884937286377
    3. ' continue' → logprob: -7.501884937286377
    4. '                   ' → logprob: -7.876884937286377
    5. '                           ' → logprob: -11.126885414123535
    6. '   ' → logprob: -12.251885414123535
    7. '	continue' → logprob: -12.376885414123535
    8. ' ' → logprob: -12.376885414123535
    9. '               ' → logprob: -12.751885414123535
    10. '       ' → logprob: -12.876885414123535

Token 357: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.22347445785999298
    2. '                       ' → logprob: -1.7234745025634766
    3. ' continue' → logprob: -4.098474502563477
    4. '                   ' → logprob: -5.348474502563477
    5. '   ' → logprob: -8.598474502563477
    6. '       ' → logprob: -9.723474502563477
    7. '	continue' → logprob: -9.723474502563477
    8. ':
' → logprob: -9.848474502563477
    9. '               ' → logprob: -10.223474502563477
    10. ' ' → logprob: -10.973474502563477

Token 358: ' A' (ID: 355)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3609572649002075
    2. ' continue' → logprob: -1.4859572649002075
    3. '                   ' → logprob: -3.235957145690918
    4. 'a' → logprob: -4.235957145690918
    5. ' a' → logprob: -5.110957145690918
    6. ' ' → logprob: -5.860957145690918
    7. '                       ' → logprob: -5.860957145690918
    8. 'k' → logprob: -5.985957145690918
    9. '               ' → logprob: -6.360957145690918
    10. ' k' → logprob: -6.610957145690918

Token 359: '?' (ID: 30)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.4493638277053833
    2. 'C' → logprob: -1.0743638277053833
    3. 'GC' → logprob: -4.074363708496094
    4. 'and' → logprob: -6.574363708496094
    5. 'g' → logprob: -7.324363708496094
    6. ' G' → logprob: -8.074363708496094
    7. ' and' → logprob: -8.199363708496094
    8. ' C' → logprob: -8.199363708496094
    9. 'a' → logprob: -8.949363708496094
    10. 'c' → logprob: -9.199363708496094

Token 360: 'GC' (ID: 30190)
  Prédit: 'GC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GC' → logprob: -0.6666430830955505
    2. 'C' → logprob: -0.7916430830955505
    3. 'G' → logprob: -3.4166431427001953
    4. ' C' → logprob: -7.916643142700195
    5. ' ' → logprob: -9.291643142700195
    6. ' GC' → logprob: -9.541643142700195
    7. 'CG' → logprob: -10.291643142700195
    8. ' G' → logprob: -10.791643142700195
    9. ''GC' → logprob: -11.291643142700195
    10. '
' → logprob: -11.666643142700195

Token 361: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06171039491891861
    2. ':
' → logprob: -2.9367103576660156
    3. '                   ' → logprob: -5.436710357666016
    4. ':' → logprob: -6.561710357666016
    5. 'continue' → logprob: -7.311710357666016
    6. ' continue' → logprob: -8.311710357666016
    7. '               ' → logprob: -9.686710357666016
    8. ' :
' → logprob: -11.561710357666016
    9. '                           ' → logprob: -12.061710357666016
    10. '                      ' → logprob: -12.311710357666016

Token 362: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011517548002302647
    2. '                   ' → logprob: -4.511517524719238
    3. 'continue' → logprob: -8.261517524719238
    4. ' continue' → logprob: -9.261517524719238
    5. '               ' → logprob: -9.761517524719238
    6. '                           ' → logprob: -10.886517524719238
    7. '       ' → logprob: -10.886517524719238
    8. '   ' → logprob: -12.011517524719238
    9. '           ' → logprob: -12.761517524719238
    10. '                      ' → logprob: -12.886517524719238

Token 363: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7486159205436707
    2. 'continue' (adapté à ' continue') → logprob: -0.7486159205436707
    3. ' continue' → logprob: -2.9986159801483154
    4. '                   ' → logprob: -5.623615741729736
    5. '   ' → logprob: -8.748616218566895
    6. '	continue' → logprob: -8.873616218566895
    7. '               ' → logprob: -9.498616218566895
    8. '       ' → logprob: -9.998616218566895
    9. '                           ' → logprob: -11.248616218566895
    10. ' ' → logprob: -11.373616218566895

Token 364: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008213033434003592
    2. '                    ' → logprob: -8.250821113586426
    3. '                    
' → logprob: -8.500821113586426
    4. '                       ' → logprob: -8.750821113586426
    5. '               ' → logprob: -9.375821113586426
    6. '<|end|>' → logprob: -10.250821113586426
    7. '                  ' → logprob: -10.875821113586426
    8. '                        
' → logprob: -11.125821113586426
    9. 'n' → logprob: -11.500821113586426
    10. ')' → logprob: -12.375821113586426

Token 365: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009891253896057606
    2. '                       ' → logprob: -5.009891033172607
    3. '               ' → logprob: -6.634891033172607
    4. '                    ' → logprob: -6.884891033172607
    5. '```' → logprob: -8.384891510009766
    6. '                    
' → logprob: -9.134891510009766
    7. '<|end|>' → logprob: -9.509891510009766
    8. '                               ' → logprob: -9.509891510009766
    9. '                           ' → logprob: -9.634891510009766
    10. '                  ' → logprob: -10.134891510009766

Token 366: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4235442876815796
    2. 'dp' → logprob: -1.1735442876815796
    3. ' dp' → logprob: -3.423544406890869
    4. '                    
' → logprob: -6.798544406890869
    5. '               ' → logprob: -6.923544406890869
    6. '                    ' → logprob: -7.548544406890869
    7. '                       ' → logprob: -8.048543930053711
    8. '                  ' → logprob: -9.423543930053711
    9. '(dp' → logprob: -9.423543930053711
    10. '                ' → logprob: -10.298543930053711

Token 367: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2811795175075531
    2. ' a' → logprob: -1.4061795473098755
    3. '   ' → logprob: -12.156179428100586
    4. '	a' → logprob: -12.156179428100586
    5. '(a' → logprob: -12.281179428100586
    6. 'j' → logprob: -12.656179428100586
    7. ' ' → logprob: -12.906179428100586
    8. '    ' → logprob: -12.906179428100586
    9. 'k' → logprob: -13.656179428100586
    10. 'b' → logprob: -14.406179428100586

Token 368: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006811764556914568
    2. '==' → logprob: -5.006811618804932
    3. ' =' → logprob: -10.00681209564209
    4. '=' → logprob: -10.50681209564209
    5. ' ' → logprob: -11.00681209564209
    6. ' ' → logprob: -12.25681209564209
    7. '[' → logprob: -14.50681209564209
    8. '  ' → logprob: -14.88181209564209
    9. '	' → logprob: -15.25681209564209
    10. ')' → logprob: -15.63181209564209

Token 369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5631687045097351
    2. ' ' → logprob: -1.5631687641143799
    3. '2' → logprob: -1.9381687641143799
    4. '1' → logprob: -2.56316876411438
    5. '3' → logprob: -9.5631685256958
    6. '   ' → logprob: -11.3131685256958
    7. '  ' → logprob: -12.8131685256958
    8. 'k' → logprob: -13.1256685256958
    9. ' k' → logprob: -13.3756685256958
    10. '...' → logprob: -13.6256685256958

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6362480521202087
    2. '1' → logprob: -0.7612480521202087
    3. '0' → logprob: -5.7612481117248535
    4. '3' → logprob: -7.8862481117248535
    5. ' ' → logprob: -9.136247634887695
    6. '   ' → logprob: -12.948747634887695
    7. '
' → logprob: -13.261247634887695
    8. '[' → logprob: -13.761247634887695
    9. '```' → logprob: -14.136247634887695
    10. '(' → logprob: -14.261247634887695

Token 371: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693651020526886
    2. 'and' → logprob: -2.126936435699463
    3. ' ' → logprob: -12.001936912536621
    4. '   ' → logprob: -14.376936912536621
    5. '==' → logprob: -15.251936912536621
    6. 'a' → logprob: -15.251936912536621
    7. '	and' → logprob: -15.251936912536621
    8. ' и' → logprob: -15.626936912536621
    9. ' ' → logprob: -15.626936912536621
    10. '0' → logprob: -15.751936912536621

Token 372: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0022468422539532185
    2. 'l' → logprob: -6.502246856689453
    3. 'j' → logprob: -7.877246856689453
    4. ' k' → logprob: -8.002246856689453
    5. 'i' → logprob: -11.502246856689453
    6. '   ' → logprob: -11.627246856689453
    7. ' l' → logprob: -12.377246856689453
    8. ' ' → logprob: -12.502246856689453
    9. '	k' → logprob: -14.002246856689453
    10. '  ' → logprob: -14.502246856689453

Token 373: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2563762068748474
    2. ' ==' → logprob: -1.5063762664794922
    3. '0' → logprob: -5.756376266479492
    4. '1' → logprob: -7.506376266479492
    5. ' ' → logprob: -7.506376266479492
    6. '=' → logprob: -9.381376266479492
    7. '(' → logprob: -10.506376266479492
    8. '[' → logprob: -11.006376266479492
    9. ']==' → logprob: -11.506376266479492
    10. '   ' → logprob: -11.756376266479492

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01698143407702446
    2. '3' → logprob: -4.266981601715088
    3. '0' → logprob: -5.891981601715088
    4. ' ' → logprob: -10.01698112487793
    5. '   ' → logprob: -12.14198112487793
    6. '[' → logprob: -14.64198112487793
    7. '```' → logprob: -14.76698112487793
    8. 'j' → logprob: -14.89198112487793
    9. '  ' → logprob: -15.20448112487793
    10. 'l' → logprob: -15.45448112487793

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14436867833137512
    2. '0' → logprob: -2.0193686485290527
    3. '3' → logprob: -6.394368648529053
    4. ' ' → logprob: -11.394369125366211
    5. '   ' → logprob: -12.644369125366211
    6. '```' → logprob: -13.769369125366211
    7. '[' → logprob: -14.081869125366211
    8. '2' → logprob: -14.081869125366211
    9. '-' → logprob: -14.581869125366211
    10. 'j' → logprob: -14.831869125366211

Token 376: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1602560132741928
    2. ' and' → logprob: -1.910256028175354
    3. ' ' → logprob: -11.035256385803223
    4. '0' → logprob: -12.660256385803223
    5. '           ' → logprob: -12.660256385803223
    6. '==' → logprob: -12.785256385803223
    7. '&&' → logprob: -13.410256385803223
    8. '   ' → logprob: -14.285256385803223
    9. '	and' → logprob: -14.285256385803223
    10. ' и' → logprob: -14.285256385803223

Token 377: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11863087862730026
    2. 'i' → logprob: -2.368630886077881
    3. 'l' → logprob: -4.118630886077881
    4. ' j' → logprob: -6.368630886077881
    5. ' i' → logprob: -8.618630409240723
    6. ' l' → logprob: -9.493630409240723
    7. '   ' → logprob: -11.618630409240723
    8. ' ' → logprob: -12.493630409240723
    9. '	j' → logprob: -13.118630409240723
    10. 'k' → logprob: -14.118630409240723

Token 378: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40453919768333435
    2. '0' → logprob: -1.5295392274856567
    3. ' ==' → logprob: -2.279539108276367
    4. ' ' → logprob: -4.404539108276367
    5. '!=' → logprob: -7.279539108276367
    6. '=' → logprob: -8.029539108276367
    7. ' !=' → logprob: -8.404539108276367
    8. '[' → logprob: -8.779539108276367
    9. ']==' → logprob: -9.904539108276367
    10. '(' → logprob: -10.779539108276367

Token 379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007125511183403432
    2. ' ' → logprob: -7.2507123947143555
    3. '   ' → logprob: -13.500712394714355
    4. '3' → logprob: -15.000712394714355
    5. '  ' → logprob: -15.250712394714355
    6. '(' → logprob: -15.813212394714355
    7. '1' → logprob: -16.000713348388672
    8. '[' → logprob: -16.438213348388672
    9. '    ' → logprob: -16.688213348388672
    10. '...' → logprob: -16.750713348388672

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012523093027994037
    2. ' ' → logprob: -9.00012493133545
    3. '2' → logprob: -14.31262493133545
    4. '   ' → logprob: -14.75012493133545
    5. '3' → logprob: -14.81262493133545
    6. '  ' → logprob: -16.500125885009766
    7. '1' → logprob: -16.500125885009766
    8. '```' → logprob: -16.937625885009766
    9. '(' → logprob: -17.250125885009766
    10. '[' → logprob: -17.312625885009766

Token 381: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6409627795219421
    2. ':
' → logprob: -0.7659627795219421
    3. '                       ' → logprob: -4.890962600708008
    4. '                   ' → logprob: -7.390962600708008
    5. '):
' → logprob: -10.765962600708008
    6. ' :
' → logprob: -10.765962600708008
    7. ' and' → logprob: -11.015962600708008
    8. ':

' → logprob: -11.015962600708008
    9. '   ' → logprob: -11.390962600708008
    10. '                               ' → logprob: -11.515962600708008

Token 382: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04172777757048607
    2. ' continue' → logprob: -3.5417277812957764
    3. 'continue' → logprob: -4.666727542877197
    4. '                   ' → logprob: -6.041727542877197
    5. '                           ' → logprob: -10.166728019714355
    6. '                               ' → logprob: -10.916728019714355
    7. '               ' → logprob: -11.291728019714355
    8. '					' → logprob: -11.541728019714355
    9. '                        ' → logprob: -11.666728019714355
    10. '                    ' → logprob: -12.166728019714355

Token 383: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.062352150678634644
    2. ' continue' → logprob: -3.062352180480957
    3. '                       ' → logprob: -4.312352180480957
    4. '                   ' → logprob: -8.437352180480957
    5. '   ' → logprob: -10.812352180480957
    6. ' ' → logprob: -11.312352180480957
    7. '	continue' → logprob: -11.687352180480957
    8. '               ' → logprob: -12.437352180480957
    9. '       ' → logprob: -12.937352180480957
    10. '                           ' → logprob: -13.562352180480957

Token 384: ' AG' (ID: 19215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2685741186141968
    2. ' a' → logprob: -1.3935741186141968
    3. 'a' → logprob: -1.5185741186141968
    4. '1' → logprob: -1.7685741186141968
    5. ' j' → logprob: -4.143574237823486
    6. '0' → logprob: -4.268574237823486
    7. ' k' → logprob: -4.518574237823486
    8. ' A' → logprob: -4.643574237823486
    9. 'A' → logprob: -4.893574237823486
    10. ' G' → logprob: -5.018574237823486

Token 385: '?' (ID: 30)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.7729658540920354e-05
    2. ' C' → logprob: -10.875027656555176
    3. '<|end|>' → logprob: -12.875027656555176
    4. ' ' → logprob: -13.625027656555176
    5. '	C' → logprob: -13.750027656555176
    6. 'c' → logprob: -14.375027656555176
    7. ')' → logprob: -14.875027656555176
    8. 'CT' → logprob: -14.875027656555176
    9. '(' → logprob: -15.000027656555176
    10. 'Con' → logprob: -15.375027656555176

Token 386: 'C' (ID: 34)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.630857527256012
    2. '                       ' → logprob: -1.0058574676513672
    3. ' continue' → logprob: -2.380857467651367
    4. '                   ' → logprob: -5.755857467651367
    5. '```' → logprob: -6.755857467651367
    6. '                               ' → logprob: -6.880857467651367
    7. '                           ' → logprob: -7.005857467651367
    8. '                        ' → logprob: -7.380857467651367
    9. ' ' → logprob: -7.505857467651367
    10. '               ' → logprob: -7.755857467651367

Token 387: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05879442021250725
    2. ':
' → logprob: -3.3087944984436035
    3. '                   ' → logprob: -4.1837944984436035
    4. ':' → logprob: -5.3087944984436035
    5. 'continue' → logprob: -9.183794021606445
    6. '               ' → logprob: -9.808794021606445
    7. '                           ' → logprob: -10.183794021606445
    8. ' continue' → logprob: -10.433794021606445
    9. '                      ' → logprob: -10.683794021606445
    10. '                        
' → logprob: -11.183794021606445

Token 388: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004785395693033934
    2. '                   ' → logprob: -5.379785537719727
    3. ' continue' → logprob: -9.629785537719727
    4. 'continue' → logprob: -10.129785537719727
    5. ':' → logprob: -10.879785537719727
    6. ':
' → logprob: -11.254785537719727
    7. '               ' → logprob: -11.754785537719727
    8. '                           ' → logprob: -12.129785537719727
    9. '                      ' → logprob: -12.879785537719727
    10. '                               ' → logprob: -13.129785537719727

Token 389: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.012459617108106613
    2. ' continue' → logprob: -4.512459754943848
    3. '                       ' → logprob: -6.887459754943848
    4. '                   ' → logprob: -7.887459754943848
    5. '	continue' → logprob: -11.637459754943848
    6. '                           ' → logprob: -12.887459754943848
    7. '               ' → logprob: -13.512459754943848
    8. '                               ' → logprob: -14.137459754943848
    9. '   ' → logprob: -15.262459754943848
    10. '                    ' → logprob: -15.887459754943848

Token 390: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0080404756590724
    2. '                       ' → logprob: -5.508040428161621
    3. 'dp' → logprob: -6.633040428161621
    4. '                           ' → logprob: -7.258040428161621
    5. ' dp' → logprob: -7.383040428161621
    6. '                    
' → logprob: -7.758040428161621
    7. '                    ' → logprob: -8.633040428161621
    8. '               ' → logprob: -8.633040428161621
    9. '                        
' → logprob: -8.883040428161621
    10. '                               ' → logprob: -9.508040428161621

Token 391: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014052677899599075
    2. '                       ' → logprob: -4.639052867889404
    3. 'dp' → logprob: -6.389052867889404
    4. '                           ' → logprob: -7.014052867889404
    5. ' dp' → logprob: -7.764052867889404
    6. '               ' → logprob: -8.389052391052246
    7. '                    ' → logprob: -8.514052391052246
    8. '                               ' → logprob: -8.639052391052246
    9. '                    
' → logprob: -8.639052391052246
    10. '(dp' → logprob: -9.514052391052246

Token 392: ' dp' (ID: 21546)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6983317732810974
    2. 'dp' (adapté à ' dp') → logprob: -0.6983317732810974
    3. ' dp' → logprob: -5.323331832885742
    4. '                       ' → logprob: -8.948331832885742
    5. '                    ' → logprob: -9.698331832885742
    6. '                    
' → logprob: -10.073331832885742
    7. '               ' → logprob: -10.948331832885742
    8. '                  ' → logprob: -11.198331832885742
    9. '(dp' → logprob: -11.948331832885742
    10. '	dp' → logprob: -12.073331832885742

Token 393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.375
    3. 'i' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. '[n' → logprob: -17.625
    6. '[I' → logprob: -17.75
    7. '[next' → logprob: -17.875
    8. '][' → logprob: -18.125
    9. '\[' → logprob: -18.25
    10. ' [' → logprob: -18.375

Token 394: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6433898210525513
    2. '][' → logprob: -0.8933898210525513
    3. '[i' → logprob: -2.7683897018432617
    4. '+i' → logprob: -6.518389701843262
    5. ' +' → logprob: -7.268389701843262
    6. ' ][' → logprob: -8.893389701843262
    7. 'i' → logprob: -9.768389701843262
    8. ']' → logprob: -9.768389701843262
    9. '[' → logprob: -11.143389701843262
    10. '＋' → logprob: -12.518389701843262

Token 395: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023214727640151978
    2. '1' → logprob: -4.273214817047119
    3. '][' → logprob: -4.773214817047119
    4. 'a' → logprob: -7.773214817047119
    5. '[j' → logprob: -9.523214340209961
    6. '   ' → logprob: -10.898214340209961
    7. '
' → logprob: -11.273214340209961
    8. ' j' → logprob: -11.398214340209961
    9. 'k' → logprob: -12.273214340209961
    10. ' ][' → logprob: -12.523214340209961

Token 396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008213033434003592
    2. '[j' → logprob: -7.250821113586426
    3. ']' → logprob: -9.875821113586426
    4. '[a' → logprob: -10.250821113586426
    5. '[' → logprob: -11.625821113586426
    6. 'a' → logprob: -12.625821113586426
    7. '[i' → logprob: -12.625821113586426
    8. ' ][' → logprob: -12.625821113586426
    9. '"][' → logprob: -14.000821113586426
    10. '}[' → logprob: -14.125821113586426

Token 397: 'a' (ID: 64)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.200166469876422e-06
    2. '	k' → logprob: -13.500004768371582
    3. ' k' → logprob: -14.000004768371582
    4. '[k' → logprob: -14.250004768371582
    5. '   ' → logprob: -14.500004768371582
    6. '(k' → logprob: -14.625004768371582
    7. 'a' → logprob: -14.875004768371582
    8. ',k' → logprob: -15.375004768371582
    9. '_k' → logprob: -15.375004768371582
    10. '{k' → logprob: -15.625004768371582

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.4285862057004124e-05
    2. '[j' → logprob: -10.50003433227539
    3. ' ][' → logprob: -13.00003433227539
    4. 'j' → logprob: -13.25003433227539
    5. ']' → logprob: -13.25003433227539
    6. '[k' → logprob: -14.87503433227539
    7. '   ' → logprob: -16.00003433227539
    8. ' ' → logprob: -16.75003433227539
    9. ',j' → logprob: -16.87503433227539
    10. ']][' → logprob: -16.87503433227539

Token 399: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ' j' → logprob: -13.250001907348633
    3. 'jk' → logprob: -18.875001907348633
    4. '	j' → logprob: -19.125001907348633
    5. '$j' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.375001907348633
    7. 'k' → logprob: -20.375001907348633
    8. '_j' → logprob: -21.500001907348633
    9. '[j' → logprob: -21.750001907348633
    10. ',j' → logprob: -22.500001907348633

Token 400: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005264949053525925
    2. '[k' → logprob: -5.255264759063721
    3. 'k' → logprob: -10.630265235900879
    4. ' ][' → logprob: -12.755265235900879
    5. ']' → logprob: -13.380265235900879
    6. '[' → logprob: -13.880265235900879
    7. '"][' → logprob: -15.130265235900879
    8. '}[' → logprob: -15.380265235900879
    9. ''][' → logprob: -15.380265235900879
    10. '[l' → logprob: -15.505265235900879

Token 401: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.36574100604048e-06
    2. ' k' → logprob: -12.375004768371582
    3. ' ' → logprob: -18.125003814697266
    4. '	k' → logprob: -18.500003814697266
    5. '   ' → logprob: -18.625003814697266
    6. '
' → logprob: -19.000003814697266
    7. '{k' → logprob: -20.125003814697266
    8. '[k' → logprob: -20.375003814697266
    9. '"k' → logprob: -20.500003814697266
    10. 'к' → logprob: -21.125003814697266

Token 402: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005354482214897871
    2. ']+=' → logprob: -5.255354404449463
    3. ']=(' → logprob: -9.130354881286621
    4. ']=' → logprob: -12.130354881286621
    5. '(' → logprob: -12.505354881286621
    6. ']+' → logprob: -13.880354881286621
    7. '```' → logprob: -14.380354881286621
    8. '+=' → logprob: -15.255354881286621
    9. ']]' → logprob: -15.630354881286621
    10. ']
' → logprob: -15.755354881286621

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04142177477478981
    2. '+=' → logprob: -4.041421890258789
    3. '=(' → logprob: -4.041421890258789
    4. ']' → logprob: -6.416421890258789
    5. ']+=' → logprob: -6.541421890258789
    6. ' =' → logprob: -6.791421890258789
    7. '(' → logprob: -7.041421890258789
    8. ']=(' → logprob: -8.666421890258789
    9. ']=' → logprob: -9.666421890258789
    10. '```' → logprob: -10.541421890258789

Token 404: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006644221721217036
    2. ' (' → logprob: -7.375664234161377
    3. '(' → logprob: -10.750664710998535
    4. '(df' → logprob: -12.125664710998535
    5. '   ' → logprob: -12.625664710998535
    6. '(dx' → logprob: -13.125664710998535
    7. '(dd' → logprob: -13.375664710998535
    8. '(dt' → logprob: -14.125664710998535
    9. '(dm' → logprob: -14.375664710998535
    10. '(dc' → logprob: -14.625664710998535

Token 405: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000452241423772648
    2. '(dp' → logprob: -7.750452041625977
    3. ' dp' → logprob: -10.750452041625977
    4. '	dp' → logprob: -15.750452041625977
    5. '               ' → logprob: -19.750452041625977
    6. '           ' → logprob: -19.875452041625977
    7. '   ' → logprob: -20.000452041625977
    8. '.dp' → logprob: -20.125452041625977
    9. '                   ' → logprob: -20.500452041625977
    10. '_dp' → logprob: -20.500452041625977

Token 406: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002614550176076591
    2. 'i' → logprob: -8.250261306762695
    3. '```' → logprob: -16.750261306762695
    4. '	i' → logprob: -17.250261306762695
    5. ' i' → logprob: -17.750261306762695
    6. '[' → logprob: -17.875261306762695
    7. '{i' → logprob: -18.000261306762695
    8. '][' → logprob: -18.750261306762695
    9. 'dp' → logprob: -19.125261306762695
    10. '                   ' → logprob: -19.375261306762695

Token 407: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003479785518720746
    2. '][' → logprob: -8.750348091125488
    3. '[i' → logprob: -9.250348091125488
    4. 'i' → logprob: -9.875348091125488
    5. '[' → logprob: -10.250348091125488
    6. '+i' → logprob: -12.375348091125488
    7. ']' → logprob: -14.500348091125488
    8. ']+' → logprob: -14.500348091125488
    9. 'x' → logprob: -15.125348091125488
    10. ' +' → logprob: -15.375348091125488

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. 'i' → logprob: -13.250003814697266
    3. '+' → logprob: -13.500003814697266
    4. ' ' → logprob: -15.500003814697266
    5. '[i' → logprob: -15.625003814697266
    6. '```' → logprob: -15.625003814697266
    7. ']' → logprob: -18.250003814697266
    8. '[' → logprob: -18.250003814697266
    9. '][' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.125003814697266

Token 409: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05525662750005722
    2. '[a' → logprob: -2.9302566051483154
    3. ')[' → logprob: -8.555256843566895
    4. ']' → logprob: -9.180256843566895
    5. ' ][' → logprob: -10.055256843566895
    6. '[' → logprob: -12.055256843566895
    7. '}[' → logprob: -12.055256843566895
    8. 'a' → logprob: -12.680256843566895
    9. ' ' → logprob: -12.805256843566895
    10. '[i' → logprob: -12.930256843566895

Token 410: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. '[a' → logprob: -13.750000953674316
    3. ' a' → logprob: -15.750000953674316
    4. '	a' → logprob: -17.000001907348633
    5. 'а' → logprob: -18.750001907348633
    6. 'j' → logprob: -18.875001907348633
    7. '(a' → logprob: -19.125001907348633
    8. 'i' → logprob: -19.250001907348633
    9. '```' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.375001907348633

Token 411: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017445837147533894
    2. '[j' → logprob: -9.125174522399902
    3. '[a' → logprob: -10.500174522399902
    4. ']' → logprob: -10.875174522399902
    5. ')[' → logprob: -11.750174522399902
    6. ' ][' → logprob: -12.500174522399902
    7. '```' → logprob: -13.500174522399902
    8. 'j' → logprob: -13.750174522399902
    9. '   ' → logprob: -14.125174522399902
    10. '}[' → logprob: -14.125174522399902

Token 412: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -13.625000953674316
    3. '[j' → logprob: -16.875001907348633
    4. '	j' → logprob: -19.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. '(j' → logprob: -19.125001907348633
    7. '
' → logprob: -19.500001907348633
    8. ',j' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.875001907348633
    10. ' ' → logprob: -21.250001907348633

Token 413: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.319370302458992e-06
    2. ']' → logprob: -13.375005722045898
    3. ' ][' → logprob: -13.750005722045898
    4. '[j' → logprob: -14.000005722045898
    5. 'l' → logprob: -14.500005722045898
    6. '[l' → logprob: -14.625005722045898
    7. '[k' → logprob: -15.000005722045898
    8. '   ' → logprob: -16.0000057220459
    9. ''][' → logprob: -16.7500057220459
    10. 'k' → logprob: -16.7500057220459

Token 414: 'k' (ID: 74)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008871947415173054
    2. 'k' → logprob: -4.883872032165527
    3. 'j' → logprob: -7.133872032165527
    4. 'i' → logprob: -7.758872032165527
    5. '
' → logprob: -10.633872032165527
    6. '][' → logprob: -12.008872032165527
    7. '[l' → logprob: -12.383872032165527
    8. ' l' → logprob: -13.133872032165527
    9. ']' → logprob: -13.758872032165527
    10. '```' → logprob: -14.008872032165527

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2040763944387436
    2. '+' → logprob: -1.9540764093399048
    3. ']+' → logprob: -3.3290762901306152
    4. ' +' → logprob: -4.954076290130615
    5. ']+=' → logprob: -12.079076766967773
    6. '```' → logprob: -12.454076766967773
    7. ')' → logprob: -12.704076766967773
    8. ' ]' → logprob: -12.829076766967773
    9. '+]' → logprob: -12.829076766967773
    10. '}' → logprob: -13.079076766967773

Token 416: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687169551849365
    2. ' +' → logprob: -1.1368716955184937
    3. '+
' → logprob: -15.011871337890625
    4. '+d' → logprob: -15.261871337890625
    5. '＋' → logprob: -17.261871337890625
    6. '+p' → logprob: -17.761871337890625
    7. ' +
' → logprob: -17.761871337890625
    8. '+b' → logprob: -18.261871337890625
    9. '
' → logprob: -18.386871337890625
    10. ' ' → logprob: -18.386871337890625

Token 417: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005235190503299236
    2. ' dp' → logprob: -5.255235195159912
    3. '                   ' → logprob: -13.755234718322754
    4. '                           ' → logprob: -16.63023567199707
    5. '               ' → logprob: -17.13023567199707
    6. '	dp' → logprob: -17.25523567199707
    7. '                       ' → logprob: -17.38023567199707
    8. '   ' → logprob: -18.38023567199707
    9. '(dp' → logprob: -18.63023567199707
    10. '           ' → logprob: -18.63023567199707

Token 418: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4855663721391466e-05
    2. 'i' → logprob: -11.125015258789062
    3. '[' → logprob: -16.250015258789062
    4. '```' → logprob: -17.000015258789062
    5. '[I' → logprob: -18.750015258789062
    6. ' i' → logprob: -18.875015258789062
    7. '[
' → logprob: -19.750015258789062
    8. '(i' → logprob: -19.875015258789062
    9. ')i' → logprob: -19.875015258789062
    10. '][' → logprob: -20.250015258789062

Token 419: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5765994191169739
    2. '][' → logprob: -0.8265994191169739
    3. ']' → logprob: -8.20159912109375
    4. '[' → logprob: -8.32659912109375
    5. '```' → logprob: -9.70159912109375
    6. 'i' → logprob: -9.95159912109375
    7. ' ][' → logprob: -11.32659912109375
    8. '[I' → logprob: -12.07659912109375
    9. '[j' → logprob: -12.82659912109375
    10. ')[' → logprob: -13.32659912109375

Token 420: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5332478142227046e-05
    2. ' j' → logprob: -11.125015258789062
    3. '[j' → logprob: -14.875015258789062
    4. '	j' → logprob: -15.750015258789062
    5. '   ' → logprob: -16.875015258789062
    6. '<|end|>' → logprob: -17.250015258789062
    7. '$j' → logprob: -18.625015258789062
    8. ',j' → logprob: -19.125015258789062
    9. ' ' → logprob: -19.125015258789062
    10. '_j' → logprob: -19.250015258789062

Token 421: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011244339868426323
    2. '[k' → logprob: -4.511244297027588
    3. 'k' → logprob: -8.761244773864746
    4. ']' → logprob: -11.011244773864746
    5. ' ][' → logprob: -11.011244773864746
    6. ''][' → logprob: -13.386244773864746
    7. '[' → logprob: -13.636244773864746
    8. '"][' → logprob: -14.011244773864746
    9. ')[' → logprob: -14.261244773864746
    10. ' k' → logprob: -14.636244773864746

Token 422: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.5577775128767826e-06
    2. ' k' → logprob: -12.125005722045898
    3. '	k' → logprob: -17.7500057220459
    4. 'l' → logprob: -18.1250057220459
    5. '[k' → logprob: -18.1250057220459
    6. ' ' → logprob: -18.5000057220459
    7. '   ' → logprob: -19.8750057220459
    8. 'к' → logprob: -20.2500057220459
    9. 'kl' → logprob: -20.3750057220459
    10. '```' → logprob: -20.6250057220459

Token 423: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023655613767914474
    2. '[l' → logprob: -8.375236511230469
    3. 'l' → logprob: -13.000236511230469
    4. ' ][' → logprob: -13.125236511230469
    5. '"][' → logprob: -14.500236511230469
    6. ']' → logprob: -15.000236511230469
    7. ''][' → logprob: -15.250236511230469
    8. '	l' → logprob: -15.875236511230469
    9. '```' → logprob: -15.875236511230469
    10. '   ' → logprob: -16.12523651123047

Token 424: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.088346359931165e-07
    2. ' l' → logprob: -14.000000953674316
    3. ' ' → logprob: -18.0
    4. '	l' → logprob: -18.75
    5. '   ' → logprob: -19.625
    6. '  ' → logprob: -20.5
    7. '```' → logprob: -20.5
    8. '
' → logprob: -21.0
    9. ']' → logprob: -21.125
    10. '           ' → logprob: -21.375

Token 425: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00031258241506293416
    2. ']' → logprob: -8.125312805175781
    3. ' ])' → logprob: -12.625312805175781
    4. ']%' → logprob: -12.625312805175781
    5. ']]' → logprob: -12.875312805175781
    6. ']])' → logprob: -13.375312805175781
    7. 'l' → logprob: -13.375312805175781
    8. '[i' → logprob: -13.875312805175781
    9. '[l' → logprob: -14.000312805175781
    10. '   ' → logprob: -14.500312805175781

Token 426: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2520289719104767
    2. ' %' → logprob: -1.5020289421081543
    3. ')%' → logprob: -10.752029418945312
    4. ')' → logprob: -11.127029418945312
    5. '%c' → logprob: -11.502029418945312
    6. '%d' → logprob: -11.627029418945312
    7. '%m' → logprob: -11.627029418945312
    8. ' %=' → logprob: -11.877029418945312
    9. '%n' → logprob: -12.252029418945312
    10. ' modulo' → logprob: -12.377029418945312

Token 427: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2664456789934775e-06
    2. ' modulo' → logprob: -13.750000953674316
    3. '(mod' → logprob: -16.000001907348633
    4. 'module' → logprob: -18.625001907348633
    5. 'mo' → logprob: -18.875001907348633
    6. 'Modulo' → logprob: -20.000001907348633
    7. 'modo' → logprob: -20.250001907348633
    8. '	mod' → logprob: -20.750001907348633
    9. '10' → logprob: -20.875001907348633
    10. 'modifier' → logprob: -21.750001907348633

Token 428: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' modulo' (ID: 112372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: ' chaque' (ID: 21194)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5087915062904358
    2. '1' → logprob: -2.008791446685791
    3. '7' → logprob: -2.383791446685791
    4. ' chaque' → logprob: -3.258791446685791
    5. 'la' → logprob: -3.508791446685791
    6. 'mod' → logprob: -3.508791446685791
    7. 'each' → logprob: -3.758791446685791
    8. '```' → logprob: -4.758791446685791
    9. ')' → logprob: -4.883791446685791
    10. '+' → logprob: -5.508791446685791

Token 433: ' fois' (ID: 14697)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2970138192176819
    2. ')' → logprob: -1.547013759613037
    3. '<|end|>' → logprob: -4.297013759613037
    4. ' ' → logprob: -4.797013759613037
    5. '<|end|>' → logprob: -5.422013759613037
    6. 'token' → logprob: -5.797013759613037
    7. '+=' → logprob: -6.172013759613037
    8. ' =' → logprob: -6.547013759613037
    9. '
' → logprob: -6.547013759613037
    10. '+' → logprob: -6.797013759613037

Token 434: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' être' (ID: 9104)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.1047576516866684
    2. ' éviter' → logprob: -2.60475754737854
    3. 'ev' → logprob: -4.104757785797119
    4. 'g' → logprob: -5.604757785797119
    5. ' garder' → logprob: -7.354757785797119
    6. ' garantir' → logprob: -7.479757785797119
    7. ' év' → logprob: -7.479757785797119
    8. 'gar' → logprob: -7.604757785797119
    9. '’éviter' → logprob: -8.104757308959961
    10. 'pré' → logprob: -8.229757308959961

Token 436: ' sûr' (ID: 46415)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.8453044295310974
    2. 'safe' → logprob: -0.8453044295310974
    3. ' safe' → logprob: -2.470304489135742
    4. ' correct' → logprob: -3.595304489135742
    5. 'sure' → logprob: -4.345304489135742
    6. ' sûr' → logprob: -4.845304489135742
    7. 's' → logprob: -5.470304489135742
    8. 'exact' → logprob: -7.095304489135742
    9. 'rob' → logprob: -7.470304489135742
    10. ' sure' → logprob: -7.595304489135742

Token 437: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9623723030090332
    2. 'print' → logprob: -1.3373723030090332
    3. ')' → logprob: -1.8373723030090332
    4. '<|end|>' → logprob: -2.337372303009033
    5. 'result' → logprob: -3.212372303009033
    6. 'return' → logprob: -3.712372303009033
    7. '```' → logprob: -4.337372303009033
    8. '}' → logprob: -4.712372303009033
    9. ']' → logprob: -4.962372303009033
    10. 'total' → logprob: -6.462372303009033

Token 439: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07924347370862961
    2. 'result' → logprob: -2.5792434215545654
    3. 'answer' → logprob: -8.704243659973145
    4. 'ans' → logprob: -9.454243659973145
    5. ' print' → logprob: -10.579243659973145
    6. 'r' → logprob: -10.579243659973145
    7. 'res' → logprob: -10.579243659973145
    8. 'total' → logprob: -10.704243659973145
    9. ' result' → logprob: -12.454243659973145
    10. 'prin' → logprob: -13.204243659973145

Token 440: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006858159322291613
    2. '#' → logprob: -6.0068583488464355
    3. 'result' → logprob: -6.1318583488464355
    4. 's' → logprob: -7.5068583488464355
    5. 'total' → logprob: -7.6318583488464355
    6. ' print' → logprob: -7.6318583488464355
    7. 'answer' → logprob: -8.131857872009277
    8. '=' → logprob: -8.881857872009277
    9. ' =' → logprob: -10.131857872009277
    10. '
' → logprob: -10.756857872009277

Token 441: ' tous' (ID: 10688)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01781262643635273
    2. 'answer' → logprob: -4.517812728881836
    3. 'ans' → logprob: -5.517812728881836
    4. 'res' → logprob: -6.017812728881836
    5. 'total' → logprob: -8.267812728881836
    6. ' result' → logprob: -10.767812728881836
    7. 'r' → logprob: -12.767812728881836
    8. 'count' → logprob: -12.892812728881836
    9. 'ret' → logprob: -13.267812728881836
    10. ' answer' → logprob: -13.642812728881836

Token 442: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.008859194815158844
    2. 'res' → logprob: -5.008859157562256
    3. 'answer' → logprob: -6.758859157562256
    4. 'total' → logprob: -7.633859157562256
    5. 'ans' → logprob: -7.883859157562256
    6. ' result' → logprob: -9.633859634399414
    7. 'count' → logprob: -10.258859634399414
    8. 'r' → logprob: -12.258859634399414
    9. 'print' → logprob: -12.633859634399414
    10. 's' → logprob: -12.758859634399414

Token 443: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07499450445175171
    2. 'result' → logprob: -3.1999945640563965
    3. 'res' → logprob: -4.6999945640563965
    4. 'val' → logprob: -4.6999945640563965
    5. 'rés' → logprob: -4.8249945640563965
    6. 'j' → logprob: -6.0749945640563965
    7. ' dp' → logprob: -6.6999945640563965
    8. '(dp' → logprob: -7.0749945640563965
    9. 'results' → logprob: -8.824994087219238
    10. ' résultats' → logprob: -9.199994087219238

Token 444: 'ét' (ID: 3913)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6148422956466675
    2. 'dp' → logprob: -0.8648422956466675
    3. 'res' → logprob: -3.489842414855957
    4. 'print' → logprob: -5.864842414855957
    5. 'ans' → logprob: -6.864842414855957
    6. 'answer' → logprob: -7.364842414855957
    7. 'j' → logprob: -7.364842414855957
    8. ' dp' → logprob: -7.739842414855957
    9. 's' → logprob: -7.864842414855957
    10. 'sum' → logprob: -7.989842414855957

Token 445: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -13.250006675720215
    3. 'a' → logprob: -14.000006675720215
    4. '``' → logprob: -14.125006675720215
    5. 'âts' → logprob: -14.250006675720215
    6. 'at' → logprob: -14.500006675720215
    7. 'i' → logprob: -15.625006675720215
    8. 'ts' → logprob: -15.625006675720215
    9. '

' → logprob: -15.875006675720215
    10. 't' → logprob: -16.1250057220459

Token 446: ' fin' (ID: 2131)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006638871505856514
    2. 'answer' → logprob: -5.631639003753662
    3. 'res' → logprob: -6.006639003753662
    4. ' result' → logprob: -8.131638526916504
    5. 'total' → logprob: -9.506638526916504
    6. 'print' → logprob: -9.756638526916504
    7. 'ans' → logprob: -9.756638526916504
    8. 'r' → logprob: -10.006638526916504
    9. 's' → logprob: -10.881638526916504
    10. ' answer' → logprob: -12.006638526916504

Token 447: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.04264514520764351
    2. 's' → logprob: -3.542645215988159
    3. 'es' → logprob: -5.66764497756958
    4. 'i' → logprob: -5.79264497756958
    5. ']' → logprob: -6.66764497756958
    6. '```' → logprob: -6.79264497756958
    7. '[i' → logprob: -7.66764497756958
    8. 'al' → logprob: -8.042645454406738
    9. '   ' → logprob: -8.167645454406738
    10. 'e' → logprob: -8.417645454406738

Token 448: '"' (ID: 1)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00612075999379158
    2. 'res' → logprob: -5.881120681762695
    3. 'answer' → logprob: -6.006120681762695
    4. 'total' → logprob: -7.506120681762695
    5. ' result' → logprob: -8.756120681762695
    6. 'r' → logprob: -9.631120681762695
    7. 'ans' → logprob: -10.381120681762695
    8. 's' → logprob: -11.006120681762695
    9. 'ret' → logprob: -12.131120681762695
    10. ',' → logprob: -12.756120681762695

Token 449: ' ;' (ID: 4605)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006339333951473236
    2. 'res' → logprob: -5.7563395500183105
    3. 'answer' → logprob: -6.2563395500183105
    4. 'ans' → logprob: -6.7563395500183105
    5. 'total' → logprob: -9.756339073181152
    6. 'r' → logprob: -11.756339073181152
    7. ' result' → logprob: -12.131339073181152
    8. 's' → logprob: -13.756339073181152
    9. 'ret' → logprob: -14.006339073181152
    10. 'rés' → logprob: -14.256339073181152

Token 450: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018701400607824326
    2. 'answer' → logprob: -4.268701553344727
    3. 'ans' → logprob: -6.018701553344727
    4. 'res' → logprob: -6.268701553344727
    5. 'total' → logprob: -8.768701553344727
    6. ' result' → logprob: -10.518701553344727
    7. 'r' → logprob: -12.268701553344727
    8. 'print' → logprob: -12.643701553344727
    9. ' answer' → logprob: -12.893701553344727
    10. '
' → logprob: -13.143701553344727

Token 451: ' peu' (ID: 9235)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.017283767461776733
    2. 'res' → logprob: -5.017283916473389
    3. 'total' → logprob: -5.267283916473389
    4. 'r' → logprob: -6.392283916473389
    5. 'answer' → logprob: -6.392283916473389
    6. 's' → logprob: -7.017283916473389
    7. 'ans' → logprob: -7.517283916473389
    8. 'rés' → logprob: -8.26728343963623
    9. ' result' → logprob: -8.51728343963623
    10. 'resultado' → logprob: -10.51728343963623

Token 452: ' pén' (ID: 54558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8392928838729858
    2. 'res' → logprob: -0.9642928838729858
    3. 'rés' → logprob: -1.9642928838729858
    4. '=' → logprob: -4.089293003082275
    5. 'total' → logprob: -4.714293003082275
    6. 's' → logprob: -5.089293003082275
    7. ' =' → logprob: -5.464293003082275
    8. 'r' → logprob: -5.714293003082275
    9. '_result' → logprob: -5.839293003082275
    10. 'ans' → logprob: -6.839293003082275

Token 453: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0070104137994349
    2. 'ibles' → logprob: -5.257010459899902
    3. 'iblement' → logprob: -7.507010459899902
    4. 'sum' → logprob: -7.632010459899902
    5. 'sible' → logprob: -7.757010459899902
    6. 'ibl' → logprob: -9.257010459899902
    7. 'al' → logprob: -9.757010459899902
    8. 'u' → logprob: -10.257010459899902
    9. 'alis' → logprob: -11.007010459899902
    10. 'ib' → logprob: -11.257010459899902

Token 454: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01908041723072529
    2. 'res' → logprob: -4.519080638885498
    3. 'answer' → logprob: -5.269080638885498
    4. 'ans' → logprob: -6.269080638885498
    5. 'total' → logprob: -7.019080638885498
    6. ' result' → logprob: -10.64408016204834
    7. 'r' → logprob: -11.01908016204834
    8. 'ret' → logprob: -11.51908016204834
    9. 'rés' → logprob: -13.14408016204834
    10. '```' → logprob: -13.14408016204834

Token 455: ' lire' (ID: 46082)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.918817400932312
    2. 'sum' → logprob: -1.168817400932312
    3. 'part' → logprob: -1.668817400932312
    4. 'range' → logprob: -3.5438175201416016
    5. 'faire' → logprob: -4.043817520141602
    6. 'l' → logprob: -4.168817520141602
    7. 'som' → logprob: -4.793817520141602
    8. 'f' → logprob: -5.168817520141602
    9. '```' → logprob: -5.293817520141602
    10. 'calcul' → logprob: -5.918817520141602

Token 456: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03279537707567215
    2. 'res' → logprob: -4.032795429229736
    3. 'answer' → logprob: -4.907795429229736
    4. 'ans' → logprob: -5.032795429229736
    5. 'total' → logprob: -7.532795429229736
    6. 'r' → logprob: -10.032794952392578
    7. ' result' → logprob: -11.282794952392578
    8. 's' → logprob: -11.407794952392578
    9. '
' → logprob: -11.782794952392578
    10. 'ret' → logprob: -12.157794952392578

Token 457: ' mais' (ID: 2899)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.012548616155982018
    2. 'answer' → logprob: -5.012548446655273
    3. 'ans' → logprob: -5.762548446655273
    4. 'res' → logprob: -6.012548446655273
    5. 'total' → logprob: -8.637548446655273
    6. ' result' → logprob: -10.262548446655273
    7. 'r' → logprob: -12.387548446655273
    8. '
' → logprob: -13.137548446655273
    9. 's' → logprob: -13.887548446655273
    10. ' answer' → logprob: -13.887548446655273

Token 458: ' c' (ID: 274)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03483487293124199
    2. 'answer' → logprob: -3.784834861755371
    3. 'ans' → logprob: -5.034834861755371
    4. 'res' → logprob: -5.409834861755371
    5. 'print' → logprob: -8.534834861755371
    6. 'total' → logprob: -8.534834861755371
    7. '
' → logprob: -9.659834861755371
    8. 'rés' → logprob: -10.284834861755371
    9. ' result' → logprob: -11.034834861755371
    10. 'r' → logprob: -11.534834861755371

Token 459: ''est' (ID: 6616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09698344767093658
    2. 'total' → logprob: -3.2219834327697754
    3. '=' → logprob: -3.3469834327697754
    4. 's' → logprob: -5.596983432769775
    5. 'answer' → logprob: -5.721983432769775
    6. 'sum' → logprob: -6.096983432769775
    7. 'r' → logprob: -6.596983432769775
    8. 'ans' → logprob: -6.596983432769775
    9. 'res' → logprob: -6.596983432769775
    10. ' =' → logprob: -6.971983432769775

Token 460: ' explicit' (ID: 23141)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11713775247335434
    2. '0' → logprob: -2.3671376705169678
    3. 'result' → logprob: -4.367137908935547
    4. '```' → logprob: -6.867137908935547
    5. ' sum' → logprob: -7.242137908935547
    6. 's' → logprob: -7.617137908935547
    7. '(sum' → logprob: -8.117137908935547
    8. 'rés' → logprob: -8.242137908935547
    9. 'res' → logprob: -8.617137908935547
    10. 'som' → logprob: -8.617137908935547

Token 461: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8635708093643188
    2. 'sum' → logprob: -1.7385708093643188
    3. 'result' → logprob: -1.7385708093643188
    4. ' =' → logprob: -2.6135706901550293
    5. 'total' → logprob: -2.7385706901550293
    6. 's' → logprob: -3.9885706901550293
    7. '=
' → logprob: -3.9885706901550293
    8. ' result' → logprob: -4.363570690155029
    9. ' total' → logprob: -4.863570690155029
    10. '
' → logprob: -4.988570690155029

Token 462: 'answer' (ID: 17021)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08022763580083847
    2. 'res' → logprob: -3.3302276134490967
    3. 'ans' → logprob: -3.5802276134490967
    4. 'answer' → logprob: -4.330227851867676
    5. 'total' → logprob: -8.955227851867676
    6. 'r' → logprob: -9.955227851867676
    7. 'ret' → logprob: -10.080227851867676
    8. '
' → logprob: -10.830227851867676
    9. ' result' → logprob: -11.080227851867676
    10. 's' → logprob: -11.830227851867676

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01603495515882969
    2. '=' → logprob: -4.141035079956055
    3. ' ' → logprob: -15.391035079956055
    4. ' =
' → logprob: -15.516035079956055
    5. '=sum' → logprob: -16.516035079956055
    6. ' ' → logprob: -16.641035079956055
    7. ',' → logprob: -16.766035079956055
    8. 's' → logprob: -17.641035079956055
    9. ' =[' → logprob: -18.141035079956055
    10. '=int' → logprob: -18.141035079956055

Token 464: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005902059492655098
    2. 'sum' → logprob: -7.6255903244018555
    3. ' ' → logprob: -9.375590324401855
    4. ' sum' → logprob: -11.000590324401855
    5. '(' → logprob: -15.375590324401855
    6. '   ' → logprob: -15.750590324401855
    7. '(sum' → logprob: -16.00058937072754
    8. '```' → logprob: -16.12558937072754
    9. ' ' → logprob: -17.75058937072754
    10. '
' → logprob: -18.50058937072754

Token 465: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023248855024576187
    2. 'sum' → logprob: -3.7732489109039307
    3. ' sum' → logprob: -13.148248672485352
    4. '(sum' → logprob: -13.898248672485352
    5. '(' → logprob: -15.398248672485352
    6. ' ' → logprob: -15.773248672485352
    7. '```' → logprob: -16.14824867248535
    8. '   ' → logprob: -17.77324867248535
    9. '	sum' → logprob: -18.52324867248535
    10. '=sum' → logprob: -18.52324867248535

Token 466: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018455786630511284
    2. ' for' → logprob: -6.376845359802246
    3. '```' → logprob: -9.001845359802246
    4. '
' → logprob: -11.126845359802246
    5. '``' → logprob: -13.001845359802246
    6. '	for' → logprob: -14.001845359802246
    7. '   ' → logprob: -14.001845359802246
    8. '<|end|>' → logprob: -14.751845359802246
    9. '+' → logprob: -15.376845359802246
    10. '    
' → logprob: -15.876845359802246

Token 467: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020985588431358337
    2. ' for' → logprob: -3.8959856033325195
    3. '```' → logprob: -8.02098560333252
    4. '
' → logprob: -9.64598560333252
    5. '<|end|>' → logprob: -10.89598560333252
    6. '[' → logprob: -11.89598560333252
    7. '   ' → logprob: -11.89598560333252
    8. '``' → logprob: -12.52098560333252
    9. '	for' → logprob: -12.52098560333252
    10. ' 
' → logprob: -12.89598560333252

Token 468: ' j' (ID: 441)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.059096843004226685
    2. 'j' → logprob: -3.5590968132019043
    3. 'i' → logprob: -3.5590968132019043
    4. 'x' → logprob: -7.934096813201904
    5. ' a' → logprob: -9.684097290039062
    6. 'd' → logprob: -11.684097290039062
    7. ' i' → logprob: -11.809097290039062
    8. ' j' → logprob: -12.184097290039062
    9. '   ' → logprob: -12.809097290039062
    10. 'p' → logprob: -13.434097290039062

Token 469: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789412334561348
    2. 'in' → logprob: -2.5789413452148438
    3. '0' → logprob: -11.203941345214844
    4. ' ' → logprob: -11.578941345214844
    5. '```' → logprob: -11.953941345214844
    6. 'range' → logprob: -12.078941345214844
    7. 'In' → logprob: -13.328941345214844
    8. '[' → logprob: -13.328941345214844
    9. '1' → logprob: -13.453941345214844
    10. 'n' → logprob: -13.703941345214844

Token 470: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5048530030981055e-06
    2. ' range' → logprob: -13.500001907348633
    3. '0' → logprob: -17.125001907348633
    4. '[' → logprob: -19.125001907348633
    5. '(' → logprob: -21.125001907348633
    6. '(range' → logprob: -21.125001907348633
    7. '4' → logprob: -22.375001907348633
    8. '   ' → logprob: -23.000001907348633
    9. '	range' → logprob: -23.000001907348633
    10. '```' → logprob: -23.250001907348633

Token 471: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019286326132714748
    2. '4' → logprob: -6.251928806304932
    3. '(
' → logprob: -17.376928329467773
    4. ' (' → logprob: -19.126928329467773
    5. ' ' → logprob: -19.376928329467773
    6. '
' → logprob: -20.126928329467773
    7. '   ' → logprob: -20.501928329467773
    8. '```' → logprob: -20.751928329467773
    9. 'def' → logprob: -21.126928329467773
    10. '=' → logprob: -21.376928329467773

Token 472: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '４' → logprob: -19.875
    4. '```' → logprob: -20.0
    5. 'n' → logprob: -20.75
    6. '۴' → logprob: -21.0
    7. '1' → logprob: -21.25
    8. '0' → logprob: -21.25
    9. '' → logprob: -21.375
    10. '৪' → logprob: -21.625

Token 473: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0029826906975358725
    2. '):' → logprob: -6.5029826164245605
    3. 'for' → logprob: -6.7529826164245605
    4. ' for' → logprob: -8.752983093261719
    5. ':
' → logprob: -9.377983093261719
    6. '   ' → logprob: -10.252983093261719
    7. ')' → logprob: -11.377983093261719
    8. '):
' → logprob: -11.877983093261719
    9. ':' → logprob: -12.502983093261719
    10. '	for' → logprob: -13.252983093261719

Token 474: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01731586828827858
    2. '   ' → logprob: -4.267315864562988
    3. ' for' → logprob: -5.767315864562988
    4. '	for' → logprob: -11.642315864562988
    5. '       ' → logprob: -11.767315864562988
    6. '<|end|>' → logprob: -13.267315864562988
    7. ' ' → logprob: -14.142315864562988
    8. '```' → logprob: -15.642315864562988
    9. '
' → logprob: -16.642316818237305
    10. '  ' → logprob: -17.142316818237305

Token 475: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.615255839889869e-05
    2. ' for' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.75009536743164
    4. '	for' → logprob: -20.25009536743164
    5. '
' → logprob: -20.75009536743164
    6. ' ' → logprob: -21.37509536743164
    7. '```' → logprob: -22.12509536743164
    8. 'answer' → logprob: -23.62509536743164
    9. '4' → logprob: -24.37509536743164
    10. '  ' → logprob: -24.62509536743164

Token 476: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.054500666621607e-06
    2. ' k' → logprob: -13.37500286102295
    3. 'l' → logprob: -13.50000286102295
    4. 'kl' → logprob: -19.750003814697266
    5. 'a' → logprob: -19.875003814697266
    6. '	k' → logprob: -20.500003814697266
    7. ',k' → logprob: -21.625003814697266
    8. '   ' → logprob: -21.875003814697266
    9. '_k' → logprob: -22.750003814697266
    10. '{k' → logprob: -23.375003814697266

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283113807439804
    2. 'in' → logprob: -2.2378311157226562
    3. 'range' → logprob: -12.112831115722656
    4. ' ' → logprob: -13.362831115722656
    5. '```' → logprob: -15.112831115722656
    6. '4' → logprob: -15.237831115722656
    7. '(' → logprob: -15.612831115722656
    8. 'import' → logprob: -15.987831115722656
    9. '   ' → logprob: -16.112831115722656
    10. 'In' → logprob: -16.237831115722656

Token 478: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000769009639043361
    2. ' range' → logprob: -7.250769138336182
    3. '4' → logprob: -9.750768661499023
    4. '(range' → logprob: -14.250768661499023
    5. 'for' → logprob: -15.875768661499023
    6. ' ' → logprob: -19.000768661499023
    7. '_range' → logprob: -19.625768661499023
    8. 'Range' → logprob: -20.250768661499023
    9. 'four' → logprob: -20.750768661499023
    10. '	range' → logprob: -20.750768661499023

Token 479: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23031924664974213
    2. '4' → logprob: -1.7303192615509033
    3. ' range' → logprob: -4.230319023132324
    4. '(' → logprob: -4.480319023132324
    5. '(range' → logprob: -5.980319023132324
    6. 'in' → logprob: -9.980319023132324
    7. '_range' → logprob: -11.605319023132324
    8. ' ' → logprob: -11.730319023132324
    9. '```' → logprob: -11.730319023132324
    10. 'for' → logprob: -12.605319023132324

Token 480: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.7848862373502925e-05
    2. 'range' → logprob: -10.500027656555176
    3. ' range' → logprob: -15.250027656555176
    4. ' ' → logprob: -17.250028610229492
    5. 'for' → logprob: -21.125028610229492
    6. '   ' → logprob: -22.500028610229492
    7. '
' → logprob: -22.750028610229492
    8. '```' → logprob: -23.500028610229492
    9. 'Range' → logprob: -24.000028610229492
    10. '' → logprob: -24.125028610229492

Token 481: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1285318285226822
    2. 'range' → logprob: -3.0035319328308105
    3. ' range' → logprob: -3.7535319328308105
    4. '4' → logprob: -4.0035319328308105
    5. 'in' → logprob: -4.0035319328308105
    6. '   ' → logprob: -5.3785319328308105
    7. 'for' → logprob: -6.0035319328308105
    8. ' ' → logprob: -6.3785319328308105
    9. ':
' → logprob: -7.3785319328308105
    10. ' for' → logprob: -7.8785319328308105

Token 482: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11002253741025925
    2. '       ' → logprob: -2.36002254486084
    3. ' for' → logprob: -5.11002254486084
    4. '   ' → logprob: -5.61002254486084
    5. '	for' → logprob: -9.61002254486084
    6. ' ' → logprob: -12.86002254486084
    7. '```' → logprob: -14.61002254486084
    8. '               ' → logprob: -14.98502254486084
    9. '           ' → logprob: -15.36002254486084
    10. '	' → logprob: -15.61002254486084

Token 483: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009261108934879303
    2. ' for' → logprob: -7.0009260177612305
    3. '       ' → logprob: -11.87592601776123
    4. '   ' → logprob: -12.25092601776123
    5. '	for' → logprob: -12.75092601776123
    6. '```' → logprob: -17.500926971435547
    7. ' ' → logprob: -18.750926971435547
    8. '           ' → logprob: -19.875926971435547
    9. '
' → logprob: -20.000926971435547
    10. '<|end|>' → logprob: -20.750926971435547

Token 484: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0206720617134124e-05
    2. ' l' → logprob: -11.50001049041748
    3. '   ' → logprob: -22.875009536743164
    4. '_l' → logprob: -23.375009536743164
    5. '```' → logprob: -23.375009536743164
    6. '	l' → logprob: -24.125009536743164
    7. ' ' → logprob: -25.000009536743164
    8. 'k' → logprob: -25.000009536743164
    9. 'j' → logprob: -25.625009536743164
    10. '  ' → logprob: -26.000009536743164

Token 485: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10027589648962021
    2. ' in' → logprob: -2.350275993347168
    3. 'range' → logprob: -9.600275993347168
    4. ' range' → logprob: -13.975275993347168
    5. ' ' → logprob: -14.725275993347168
    6. '(range' → logprob: -15.725275993347168
    7. '(' → logprob: -16.72527503967285
    8. '```' → logprob: -16.85027503967285
    9. 'import' → logprob: -17.60027503967285
    10. '4' → logprob: -17.60027503967285

Token 486: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '4' → logprob: -16.62520408630371
    4. '(range' → logprob: -16.75020408630371
    5. '```' → logprob: -20.75020408630371
    6. '	range' → logprob: -20.87520408630371
    7. '(' → logprob: -21.00020408630371
    8. 'in' → logprob: -21.37520408630371
    9. '_range' → logprob: -23.12520408630371
    10. '[' → logprob: -23.37520408630371

Token 487: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05411633849143982
    2. 'range' → logprob: -3.0541162490844727
    3. '4' → logprob: -5.554116249084473
    4. ' range' → logprob: -6.429116249084473
    5. '(range' → logprob: -10.554116249084473
    6. '```' → logprob: -13.679116249084473
    7. 'in' → logprob: -14.679116249084473
    8. '_range' → logprob: -15.804116249084473
    9. ' (' → logprob: -15.929116249084473
    10. 'Range' → logprob: -16.30411720275879

Token 488: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.088346359931165e-07
    2. 'range' → logprob: -14.125000953674316
    3. ' ' → logprob: -16.625
    4. ' range' → logprob: -18.5
    5. '```' → logprob: -19.0
    6. '   ' → logprob: -19.5
    7. '۴' → logprob: -21.0
    8. '' → logprob: -21.25
    9. '       ' → logprob: -21.5
    10. ')' → logprob: -21.5

Token 489: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5143465399742126
    2. ':
' → logprob: -1.0143465995788574
    3. '):
' → logprob: -3.2643465995788574
    4. '):' → logprob: -7.014346599578857
    5. '       ' → logprob: -9.2643461227417
    6. '=' → logprob: -9.5143461227417
    7. '   ' → logprob: -9.7643461227417
    8. '```' → logprob: -10.3893461227417
    9. '():
' → logprob: -10.6393461227417
    10. ']:
' → logprob: -11.5143461227417

Token 490: '           ' (ID: 352)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.03258713334798813
    2. '   ' → logprob: -3.5325870513916016
    3. ' answer' → logprob: -6.032587051391602
    4. '       ' → logprob: -7.907587051391602
    5. '	answer' → logprob: -9.657587051391602
    6. '           ' → logprob: -14.657587051391602
    7. '  ' → logprob: -15.282587051391602
    8. '```' → logprob: -15.407587051391602
    9. '(answer' → logprob: -15.782587051391602
    10. '_answer' → logprob: -16.1575870513916

Token 491: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -3.500108141452074e-05
    2. ' answer' → logprob: -10.375035285949707
    3. '           ' → logprob: -12.875035285949707
    4. '	answer' → logprob: -14.250035285949707
    5. '   ' → logprob: -14.875035285949707
    6. '       ' → logprob: -16.25003433227539
    7. '_answer' → logprob: -17.62503433227539
    8. 'Answer' → logprob: -17.62503433227539
    9. '            
' → logprob: -18.12503433227539
    10. '               ' → logprob: -18.50003433227539

Token 492: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008070041425526142
    2. '=' → logprob: -5.25806999206543
    3. ' +=' → logprob: -5.88306999206543
    4. '+=(' → logprob: -10.38306999206543
    5. ' =' → logprob: -11.50806999206543
    6. '+' → logprob: -12.50806999206543
    7. ']+=' → logprob: -14.38306999206543
    8. '(' → logprob: -14.88306999206543
    9. '=(' → logprob: -16.25806999206543
    10. '+='' → logprob: -16.63306999206543

Token 493: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.676292231422849e-05
    2. ' dp' → logprob: -11.000017166137695
    3. '(dp' → logprob: -18.500017166137695
    4. '	dp' → logprob: -21.000017166137695
    5. 'df' → logprob: -24.000017166137695
    6. '_dp' → logprob: -24.125017166137695
    7. '.dp' → logprob: -24.250017166137695
    8. 'd' → logprob: -24.500017166137695
    9. 'dq' → logprob: -25.375017166137695
    10. '   ' → logprob: -25.375017166137695

Token 494: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7432603272027336e-06
    2. 'n' → logprob: -13.375001907348633
    3. '[-' → logprob: -16.625001907348633
    4. '(n' → logprob: -17.125001907348633
    5. '[' → logprob: -18.125001907348633
    6. ' [' → logprob: -19.250001907348633
    7. '[
' → logprob: -19.500001907348633
    8. '[len' → logprob: -19.750001907348633
    9. '[m' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.250001907348633

Token 495: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01430137362331152
    2. '[j' → logprob: -4.264301300048828
    3. ']' → logprob: -9.139301300048828
    4. '[' → logprob: -10.889301300048828
    5. '}[' → logprob: -12.639301300048828
    6. ' ][' → logprob: -13.014301300048828
    7. '[n' → logprob: -13.139301300048828
    8. '   ' → logprob: -14.389301300048828
    9. ' ' → logprob: -14.639301300048828
    10. '[l' → logprob: -14.764301300048828

Token 496: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -14.250000953674316
    3. '[j' → logprob: -15.000000953674316
    4. '	j' → logprob: -19.500001907348633
    5. ',j' → logprob: -20.000001907348633
    6. '$j' → logprob: -21.000001907348633
    7. 'l' → logprob: -21.500001907348633
    8. '_j' → logprob: -22.125001907348633
    9. '   ' → logprob: -22.125001907348633
    10. '3' → logprob: -22.375001907348633

Token 497: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.981667537620524e-06
    2. ']' → logprob: -13.625001907348633
    3. ' ][' → logprob: -14.250001907348633
    4. '"][' → logprob: -16.375001907348633
    5. '[k' → logprob: -17.375001907348633
    6. ''][' → logprob: -17.500001907348633
    7. '   ' → logprob: -18.375001907348633
    8. 'k' → logprob: -19.000001907348633
    9. ']][' → logprob: -19.250001907348633
    10. ']
' → logprob: -19.875001907348633

Token 498: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.2729995988775045e-06
    2. ' k' → logprob: -12.000006675720215
    3. '	k' → logprob: -19.5000057220459
    4. '{k' → logprob: -19.7500057220459
    5. '[k' → logprob: -20.3750057220459
    6. 'l' → logprob: -20.7500057220459
    7. ',k' → logprob: -20.8750057220459
    8. 'kl' → logprob: -21.2500057220459
    9. ' ' → logprob: -21.7500057220459
    10. ' к' → logprob: -22.8750057220459

Token 499: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.531315314830863e-06
    2. '[l' → logprob: -12.875003814697266
    3. ']' → logprob: -14.250003814697266
    4. ' ][' → logprob: -15.875003814697266
    5. '[' → logprob: -16.625003814697266
    6. '"][' → logprob: -16.750003814697266
    7. 'l' → logprob: -17.625003814697266
    8. ''][' → logprob: -18.125003814697266
    9. ',l' → logprob: -19.250003814697266
    10. '```' → logprob: -19.875003814697266

Token 500: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.008129963040119e-06
    2. ' l' → logprob: -12.500003814697266
    3. '[l' → logprob: -15.750003814697266
    4. 'k' → logprob: -18.000003814697266
    5. '	l' → logprob: -18.625003814697266
    6. '_l' → logprob: -20.625003814697266
    7. 'л' → logprob: -20.750003814697266
    8. '.l' → logprob: -20.875003814697266
    9. '```' → logprob: -21.125003814697266
    10. '$l' → logprob: -21.750003814697266

Token 501: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015559245366603136
    2. ']
' → logprob: -6.751555919647217
    3. ']%' → logprob: -7.876555919647217
    4. ' ]' → logprob: -12.126556396484375
    5. ']

' → logprob: -15.126556396484375
    6. ']
' → logprob: -15.126556396484375
    7. '])' → logprob: -15.751556396484375
    8. ')' → logprob: -17.001556396484375
    9. ' ]
' → logprob: -18.126556396484375
    10. ']]' → logprob: -18.376556396484375

Token 502: 'answer' (ID: 17021)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.39399001002311707
    2. 'answer' → logprob: -1.1439900398254395
    3. ' answer' → logprob: -5.2689900398254395
    4. ' %' → logprob: -7.3939900398254395
    5. '%
' → logprob: -7.6439900398254395
    6. '
' → logprob: -8.143989562988281
    7. ' %=' → logprob: -8.768989562988281
    8. '```' → logprob: -9.018989562988281
    9. ')' → logprob: -9.643989562988281
    10. '%=' → logprob: -9.893989562988281

Token 503: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.003452291479334235
    2. '%=' → logprob: -6.128452301025391
    3. ' %=' → logprob: -6.753452301025391
    4. ' %' → logprob: -9.37845230102539
    5. '=' → logprob: -12.25345230102539
    6. ')%' → logprob: -12.87845230102539
    7. ' ' → logprob: -13.12845230102539
    8. ')' → logprob: -13.87845230102539
    9. '%\' → logprob: -14.25345230102539
    10. '%
' → logprob: -14.50345230102539

Token 504: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1160349458805285e-05
    2. ' modulo' → logprob: -11.500011444091797
    3. '(mod' → logprob: -14.250011444091797
    4. '10' → logprob: -16.000011444091797
    5. 'mo' → logprob: -16.375011444091797
    6. 'modo' → logprob: -19.250011444091797
    7. 'Modulo' → logprob: -19.250011444091797
    8. 'module' → logprob: -19.375011444091797
    9. '	mod' → logprob: -19.625011444091797
    10. '```' → logprob: -20.875011444091797

Token 505: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -13.125001907348633
    3. '```' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -16.750001907348633
    5. '#print' → logprob: -17.750001907348633
    6. '#' → logprob: -18.750001907348633
    7. '(print' → logprob: -19.000001907348633
    8. '-print' → logprob: -19.625001907348633
    9. '\' → logprob: -19.750001907348633
    10. '``' → logprob: -20.375001907348633

Token 506: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '```' → logprob: -18.5
    4. '#print' → logprob: -19.625
    5. '(print' → logprob: -21.375
    6. '#' → logprob: -22.0
    7. '``' → logprob: -22.25
    8. '
' → logprob: -23.125
    9. '.print' → logprob: -23.25
    10. '-print' → logprob: -23.25

Token 507: ' Normal' (ID: 29591)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.125
    3. '#print' → logprob: -21.375
    4. '#' → logprob: -23.375
    5. '```' → logprob: -24.25
    6. '(print' → logprob: -25.5
    7. '	print' → logprob: -25.625
    8. 'Print' → logprob: -26.25
    9. '_print' → logprob: -26.25
    10. 'prints' → logprob: -26.5

Token 508: 'isation' (ID: 6993)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '#print' → logprob: -17.625
    4. '#' → logprob: -18.0
    5. '```' → logprob: -18.75
    6. 'return' → logprob: -18.875
    7. 'prin' → logprob: -21.0
    8. '.print' → logprob: -21.125
    9. '(print' → logprob: -21.5
    10. 'import' → logprob: -21.75

Token 509: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.625000953674316
    3. '```' → logprob: -17.125
    4. '#print' → logprob: -18.75
    5. '<|end|>' → logprob: -20.0
    6. '#' → logprob: -20.5
    7. '``' → logprob: -21.125
    8. '(print' → logprob: -21.125
    9. '	print' → logprob: -21.625
    10. '-print' → logprob: -21.875

Token 510: ' résultat' (ID: 62556)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20211490988731384
    2. 'answer' → logprob: -1.7021149396896362
    3. '10' → logprob: -7.577115058898926
    4. 'result' → logprob: -8.952115058898926
    5. '100' → logprob: -10.952115058898926
    6. '```' → logprob: -11.577115058898926
    7. ' answer' → logprob: -12.327115058898926
    8. '0' → logprob: -12.327115058898926
    9. 'code' → logprob: -12.452115058898926
    10. 'output' → logprob: -12.577115058898926

Token 511: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -13.750000953674316
    3. '```' → logprob: -17.625001907348633
    4. '#print' → logprob: -19.500001907348633
    5. '<|end|>' → logprob: -20.375001907348633
    6. '#' → logprob: -21.000001907348633
    7. '(print' → logprob: -21.125001907348633
    8. '``' → logprob: -21.250001907348633
    9. '-print' → logprob: -21.625001907348633
    10. 'answer' → logprob: -21.875001907348633

Token 512: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -13.875000953674316
    3. '#print' → logprob: -17.125001907348633
    4. '```' → logprob: -19.125001907348633
    5. '
' → logprob: -19.500001907348633
    6. '            
' → logprob: -20.000001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. '#' → logprob: -21.750001907348633
    9. 'answer' → logprob: -22.250001907348633
    10. '           ' → logprob: -22.500001907348633

Token 513: ' oubl' (ID: 79628)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006083175539970398
    2. ' print' → logprob: -7.500608444213867
    3. '#' → logprob: -10.125608444213867
    4. '.print' → logprob: -12.250608444213867
    5. '#print' → logprob: -12.375608444213867
    6. '```' → logprob: -13.000608444213867
    7. '_print' → logprob: -13.500608444213867
    8. ')' → logprob: -14.375608444213867
    9. '(print' → logprob: -14.625608444213867
    10. 'continue' → logprob: -14.875608444213867

Token 514: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.6257423758506775
    2. 'i' → logprob: -1.3757424354553223
    3. 'ient' → logprob: -1.8757424354553223
    4. 'ier' → logprob: -3.3757424354553223
    5. 'e' → logprob: -4.875742435455322
    6. 't' → logprob: -5.375742435455322
    7. 'iant' → logprob: -6.250742435455322
    8. 'a' → logprob: -6.500742435455322
    9. '1' → logprob: -7.125742435455322
    10. 'iet' → logprob: -7.500742435455322

Token 515: ' jamais' (ID: 23077)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.2305217683315277
    2. 'print' → logprob: -1.73052179813385
    3. ' answer' → logprob: -3.6055216789245605
    4. 'pas' → logprob: -7.9805216789245605
    5. ' print' → logprob: -8.480522155761719
    6. '_answer' → logprob: -8.605522155761719
    7. '(answer' → logprob: -8.855522155761719
    8. 'Answer' → logprob: -9.105522155761719
    9. 'not' → logprob: -9.105522155761719
    10. ' pas' → logprob: -9.230522155761719

Token 516: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.000000953674316
    3. '```' → logprob: -16.125
    4. '#print' → logprob: -19.75
    5. 'answer' → logprob: -20.125
    6. '``' → logprob: -21.0
    7. '<|end|>' → logprob: -22.0
    8. '	print' → logprob: -22.375
    9. '(print' → logprob: -22.5
    10. '-print' → logprob: -22.625

Token 517: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3883031904697418
    2. 'mod' → logprob: -1.1383031606674194
    3. ' modulo' → logprob: -6.638303279876709
    4. ' %' → logprob: -9.63830280303955
    5. '+' → logprob: -11.51330280303955
    6. '%\' → logprob: -11.63830280303955
    7. ' mod' → logprob: -12.13830280303955
    8. '%)' → logprob: -12.26330280303955
    9. 'answer' → logprob: -12.76330280303955
    10. '%m' → logprob: -12.76330280303955

Token 518: ' normalement' (ID: 164432)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -16.500001907348633
    4. '```' → logprob: -16.875001907348633
    5. '#print' → logprob: -18.000001907348633
    6. 'answer' → logprob: -18.875001907348633
    7. '#' → logprob: -19.000001907348633
    8. '
' → logprob: -19.000001907348633
    9. 'return' → logprob: -19.125001907348633
    10. '\' → logprob: -19.250001907348633

Token 519: '...
' (ID: 4908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. '#print' → logprob: -20.375
    6. '#' → logprob: -21.125
    7. '-print' → logprob: -21.25
    8. '	print' → logprob: -21.5
    9. '(print' → logprob: -21.625
    10. '.print' → logprob: -22.625

Token 520: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.625000953674316
    3. ' print' → logprob: -16.25
    4. '``' → logprob: -20.375
    5. '#print' → logprob: -20.625
    6. 'answer' → logprob: -20.75
    7. '\' → logprob: -21.75
    8. 'return' → logprob: -22.0
    9. '<|end|>' → logprob: -22.125
    10. '#' → logprob: -22.5

Token 521: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0011745095252990723
    2. '(' → logprob: -6.751174449920654
    3. '(ans' → logprob: -12.751174926757812
    4. ' (' → logprob: -14.126174926757812
    5. '(question' → logprob: -15.501174926757812
    6. '()' → logprob: -16.126174926757812
    7. '(
' → logprob: -16.376174926757812
    8. 'answer' → logprob: -17.126174926757812
    9. '(a' → logprob: -17.251174926757812
    10. '(solution' → logprob: -17.501174926757812

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.375000953674316
    3. ')`' → logprob: -14.750000953674316
    4. ' )' → logprob: -15.750000953674316
    5. '())' → logprob: -15.750000953674316
    6. '()' → logprob: -16.250001907348633
    7. ')
' → logprob: -17.375001907348633
    8. ')}' → logprob: -17.625001907348633
    9. '})' → logprob: -18.875001907348633
    10. '`)' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 520
Tokens correctement prédits (1ère position, stricte): 182
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 361
Précision stricte (1ère position): 35.00%
Précision adaptée (1ère position): 37.31%
Précision (top 10): 69.42%
================================================================================
