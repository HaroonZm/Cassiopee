================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from heapq import heapify, heappop, heappush

sr = lambda: sys.stdin.readline().rstrip()
ir = lambda: int(sr())
lr = lambda: list(map(int, sr().split()))

def dijkstra(start):
    INF = 10 ** 15
    dist = [INF] * (N + 1)
    dist[start] = 0
    que = [(0, start)]
    while que:
        d, prev = heappop(que)
        if dist[prev] < d:
            continue
        for nxt in graph[prev]:
            d1 = d + 1
            if dist[nxt] > d1:
                dist[nxt] = d1
                heappush(que, (d1, nxt))
    return dist

N = ir()
graph = [[] for _ in range(N + 1)]
for _ in range(N - 1):
    a, b = lr()
    graph[a].append(b)
    graph[b].append(a)

dist = dijkstra(1)
dist = sorted([(x, i) for i, x in enumerate(dist)], reverse=True)
new_root = dist[1][1]
dist = dijkstra(new_root)
diameter = max(dist[1:]) + 1
bl = diameter % 3 != 2
print('First' if bl else 'Second')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3440817594528198
    2. '.' → logprob: -1.5940817594528198
    3. '<|end|>' → logprob: -2.9690818786621094
    4. '\' → logprob: -4.469081878662109
    5. 'import' → logprob: -5.094081878662109
    6. 'newline' → logprob: -5.094081878662109
    7. '' → logprob: -5.844081878662109
    8. '<|end|>' → logprob: -5.969081878662109
    9. '\r' → logprob: -6.094081878662109
    10. '
' → logprob: -6.344081878662109

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.082895273109898e-05
    2. 'import' → logprob: -10.500030517578125
    3. 'queue' → logprob: -12.750030517578125
    4. ' import' → logprob: -15.500030517578125
    5. 'ify' → logprob: -17.250030517578125
    6. 'i' → logprob: -17.875030517578125
    7. ' queue' → logprob: -18.625030517578125
    8. 'ql' → logprob: -18.750030517578125
    9. 'dict' → logprob: -18.750030517578125
    10. 'lib' → logprob: -19.250030517578125

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00596398813650012
    2. 'import' → logprob: -5.1309638023376465
    3. ' ' → logprob: -10.380964279174805
    4. ' im' → logprob: -13.130964279174805
    5. '	import' → logprob: -14.005964279174805
    6. ' impor' → logprob: -15.130964279174805
    7. '_import' → logprob: -15.255964279174805
    8. '.' → logprob: -16.255964279174805
    9. ' export' → logprob: -16.255964279174805
    10. ' importar' → logprob: -16.505964279174805

Token 7: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.32252973318099976
    2. ' he' → logprob: -1.3225297927856445
    3. 'heap' → logprob: -4.6975297927856445
    4. ' heap' → logprob: -10.322529792785645
    5. ' n' → logprob: -10.822529792785645
    6. 'import' → logprob: -11.197529792785645
    7. 'merge' → logprob: -11.322529792785645
    8. 'nl' → logprob: -11.447529792785645
    9. 'n' → logprob: -11.572529792785645
    10. ' ' → logprob: -12.447529792785645

Token 8: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1832779347896576
    2. 'ify' → logprob: -1.93327796459198
    3. 'p' → logprob: -5.0582780838012695
    4. 'push' → logprob: -5.0582780838012695
    5. 's' → logprob: -5.6832780838012695
    6. 'u' → logprob: -6.3082780838012695
    7. 'f' → logprob: -6.4332780838012695
    8. 'i' → logprob: -8.05827808380127
    9. 'Push' → logprob: -8.18327808380127
    10. '.' → logprob: -8.18327808380127

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018307503312826157
    2. 'import' → logprob: -4.768307685852051
    3. ',
' → logprob: -5.143307685852051
    4. '\n' → logprob: -6.643307685852051
    5. '\' → logprob: -7.018307685852051
    6. '
' → logprob: -7.893307685852051
    7. '' → logprob: -8.26830768585205
    8. '```' → logprob: -8.26830768585205
    9. ' ' → logprob: -8.64330768585205
    10. '`' → logprob: -9.01830768585205

Token 10: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2523980438709259
    2. ' he' → logprob: -1.5023980140686035
    3. '.he' → logprob: -8.002398490905762
    4. 'heap' → logprob: -9.127398490905762
    5. '```' → logprob: -11.627398490905762
    6. ' heap' → logprob: -12.377398490905762
    7. '_he' → logprob: -12.752398490905762
    8. ' ' → logprob: -12.877398490905762
    9. 'merge' → logprob: -13.127398490905762
    10. 'nl' → logprob: -14.377398490905762

Token 11: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.692145012086257e-05
    2. 'ap' → logprob: -10.000046730041504
    3. 'a' → logprob: -13.500046730041504
    4. 'appen' → logprob: -17.12504768371582
    5. 'apps' → logprob: -19.00004768371582
    6. '[' → logprob: -19.37504768371582
    7. 'appa' → logprob: -19.75004768371582
    8. 'append' → logprob: -19.87504768371582
    9. 'ап' → logprob: -20.00004768371582
    10. 'appe' → logprob: -20.25004768371582

Token 12: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.9153885558771435e-06
    2. 'op' → logprob: -12.125005722045898
    3. 'us' → logprob: -14.750005722045898
    4. 'u' → logprob: -18.0000057220459
    5. 'USH' → logprob: -18.5000057220459
    6. '

' → logprob: -19.8750057220459
    7. 'osh' → logprob: -19.8750057220459
    8. '   ' → logprob: -20.5000057220459
    9. 'o' → logprob: -20.8750057220459
    10. '```' → logprob: -20.8750057220459

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18650472164154053
    2. '\n' → logprob: -2.68650484085083
    3. 'import' → logprob: -3.56150484085083
    4. '
' → logprob: -3.56150484085083
    5. '\' → logprob: -4.31150484085083
    6. '

' → logprob: -4.43650484085083
    7. ',
' → logprob: -4.93650484085083
    8. '```' → logprob: -5.06150484085083
    9. '' → logprob: -5.68650484085083
    10. ',

' → logprob: -6.93650484085083

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10079369693994522
    2. ' he' → logprob: -2.3507936000823975
    3. 'heap' → logprob: -7.475793838500977
    4. ' heap' → logprob: -11.100793838500977
    5. '```' → logprob: -12.850793838500977
    6. '.he' → logprob: -13.600793838500977
    7. ' ' → logprob: -15.100793838500977
    8. 'hep' → logprob: -15.100793838500977
    9. ' heaps' → logprob: -15.725793838500977
    10. '_he' → logprob: -16.100793838500977

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0005557744298130274
    2. 'ap' → logprob: -7.500555992126465
    3. 'a' → logprob: -13.625555992126465
    4. 'ап' → logprob: -14.500555992126465
    5. 'appen' → logprob: -15.000555992126465
    6. 'append' → logprob: -15.875555992126465
    7. 'apput' → logprob: -16.50055503845215
    8. 'appa' → logprob: -16.62555503845215
    9. 'APP' → logprob: -16.87555503845215
    10. 'apps' → logprob: -16.87555503845215

Token 16: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.2246291337069124e-05
    2. 'us' → logprob: -10.750021934509277
    3. 'u' → logprob: -14.875021934509277
    4. 'op' → logprob: -15.000021934509277
    5. 'ut' → logprob: -16.750022888183594
    6. 'USH' → logprob: -17.375022888183594
    7. 'sh' → logprob: -18.375022888183594
    8. 'p' → logprob: -19.250022888183594
    9. '```' → logprob: -19.375022888183594
    10. 'ushing' → logprob: -19.625022888183594

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5490425825119019
    2. '

' → logprob: -1.1740425825119019
    3. '\n' → logprob: -2.4240427017211914
    4. '```' → logprob: -4.424042701721191
    5. '\' → logprob: -5.424042701721191
    6. '' → logprob: -6.174042701721191
    7. 'def' → logprob: -6.299042701721191
    8. '(' → logprob: -6.674042701721191
    9. '


' → logprob: -7.299042701721191
    10. '(
' → logprob: -7.424042701721191

Token 18: 'sr' (ID: 25616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2809605300426483
    2. 'd' → logprob: -1.5309605598449707
    3. '\' → logprob: -4.530960559844971
    4. '
' → logprob: -5.030960559844971
    5. '```' → logprob: -5.280960559844971
    6. 'class' → logprob: -5.905960559844971
    7. '' → logprob: -6.655960559844971
    8. 'de' → logprob: -6.780960559844971
    9. '`' → logprob: -8.030960083007812
    10. '#' → logprob: -8.530960083007812

Token 19: ' =' (ID: 314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08788253366947174
    2. 'e' → logprob: -3.7128825187683105
    3. 'ef' → logprob: -3.9628825187683105
    4. 'ead' → logprob: -3.9628825187683105
    5. 'ec' → logprob: -4.0878825187683105
    6. 's' → logprob: -6.8378825187683105
    7. 'd' → logprob: -7.4628825187683105
    8. 'ev' → logprob: -7.4628825187683105
    9. 'cs' → logprob: -7.8378825187683105
    10. 'eg' → logprob: -8.212882995605469

Token 20: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.22566169500350952
    2. ' sys' → logprob: -1.6006617546081543
    3. '	sys' → logprob: -9.850661277770996
    4. 'lambda' → logprob: -9.850661277770996
    5. 'input' → logprob: -10.225661277770996
    6. '=sys' → logprob: -10.350661277770996
    7. 'stdin' → logprob: -10.475661277770996
    8. '(sys' → logprob: -10.725661277770996
    9. ' lambda' → logprob: -11.725661277770996
    10. ' ' → logprob: -11.975661277770996

Token 21: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.64377361536026
    2. ' sys' → logprob: -1.3937735557556152
    3. ' :' → logprob: -2.3937735557556152
    4. ' input' → logprob: -2.5187735557556152
    5. ' x' → logprob: -3.8937735557556152
    6. ' ' → logprob: -4.518773555755615
    7. ' f' → logprob: -4.893773555755615
    8. 's' → logprob: -5.518773555755615
    9. ':' → logprob: -5.643773555755615
    10. ' a' → logprob: -6.393773555755615

Token 22: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.17329181730747223
    2. ' sys' → logprob: -1.923291802406311
    3. 'input' → logprob: -4.4232916831970215
    4. ' input' → logprob: -6.9232916831970215
    5. '	sys' → logprob: -13.79829216003418
    6. '=sys' → logprob: -13.79829216003418
    7. 'str' → logprob: -15.42329216003418
    8. '(sys' → logprob: -15.54829216003418
    9. 'int' → logprob: -15.67329216003418
    10. 'stdin' → logprob: -15.79829216003418

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00046725376159884036
    2. '.stdout' → logprob: -7.875467300415039
    3. '.std' → logprob: -10.375467300415039
    4. '.' → logprob: -10.625467300415039
    5. '.readline' → logprob: -10.750467300415039
    6. '.argv' → logprob: -12.125467300415039
    7. '.stderr' → logprob: -12.750467300415039
    8. '.st' → logprob: -14.625467300415039
    9. '.version' → logprob: -15.125467300415039
    10. 'stdin' → logprob: -15.125467300415039

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014072739577386528
    2. '.read' → logprob: -9.375141143798828
    3. '.' → logprob: -10.000141143798828
    4. 'read' → logprob: -11.625141143798828
    5. ' readline' → logprob: -14.000141143798828
    6. '.readlines' → logprob: -14.375141143798828
    7. '_read' → logprob: -15.875141143798828
    8. '.Read' → logprob: -17.125141143798828
    9. '.buffer' → logprob: -19.125141143798828
    10. '```' → logprob: -19.625141143798828

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3869471549987793
    2. '()' → logprob: -1.1369471549987793
    3. '(' → logprob: -10.386947631835938
    4. '()\' → logprob: -11.011947631835938
    5. '()
' → logprob: -11.261947631835938
    6. '.strip' → logprob: -12.511947631835938
    7. ')' → logprob: -13.136947631835938
    8. '())' → logprob: -13.386947631835938
    9. '()

' → logprob: -13.511947631835938
    10. '.' → logprob: -13.511947631835938

Token 26: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.001929228543303907
    2. 'rstrip' → logprob: -6.25192928314209
    3. 'split' → logprob: -15.50192928314209
    4. 'replace' → logprob: -16.001928329467773
    5. ' strip' → logprob: -16.126928329467773
    6. '```' → logprob: -16.751928329467773
    7. 'str' → logprob: -16.876928329467773
    8. 'read' → logprob: -17.001928329467773
    9. 'rst' → logprob: -17.251928329467773
    10. '_strip' → logprob: -18.876928329467773

Token 27: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003923449199646711
    2. '()' → logprob: -5.878923416137695
    3. '(
' → logprob: -7.628923416137695
    4. 'def' → logprob: -7.628923416137695
    5. '\(' → logprob: -9.878923416137695
    6. '(\' → logprob: -11.003923416137695
    7. '\' → logprob: -11.378923416137695
    8. ')' → logprob: -11.378923416137695
    9. '\n' → logprob: -11.628923416137695
    10. '(

' → logprob: -11.878923416137695

Token 28: 'ir' (ID: 380)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28379663825035095
    2. 'def' → logprob: -1.7837966680526733
    3. 'd' → logprob: -2.658796548843384
    4. '(' → logprob: -6.158796787261963
    5. '#' → logprob: -6.533796787261963
    6. '(n' → logprob: -7.033796787261963
    7. '\' → logprob: -7.158796787261963
    8. '
' → logprob: -7.158796787261963
    9. 'a' → logprob: -7.283796787261963
    10. 't' → logprob: -7.908796787261963

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2598746120929718
    2. '=' → logprob: -1.6348745822906494
    3. '()' → logprob: -4.5098748207092285
    4. 'and' → logprob: -4.7598748207092285
    5. 'andom' → logprob: -5.0098748207092285
    6. 'ange' → logprob: -5.7598748207092285
    7. 'e' → logprob: -6.6348748207092285
    8. '(' → logprob: -7.8848748207092285
    9. '=lambda' → logprob: -7.8848748207092285
    10. 'a' → logprob: -8.13487434387207

Token 30: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.528207540512085
    2. 'int' → logprob: -1.028207540512085
    3. ' lambda' → logprob: -3.028207540512085
    4. ' int' → logprob: -6.403207778930664
    5. '(lambda' → logprob: -6.903207778930664
    6. '=lambda' → logprob: -7.653207778930664
    7. 'ambda' → logprob: -7.903207778930664
    8. 'lam' → logprob: -8.403207778930664
    9. '(int' → logprob: -8.778207778930664
    10. '()' → logprob: -8.903207778930664

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23926624655723572
    2. ':int' → logprob: -2.1142661571502686
    3. 'int' → logprob: -2.6142661571502686
    4. ' :' → logprob: -4.614266395568848
    5. ' int' → logprob: -4.989266395568848
    6. '():' → logprob: -6.239266395568848
    7. '(int' → logprob: -9.614266395568848
    8. ' ():' → logprob: -10.239266395568848
    9. 'n' → logprob: -11.114266395568848
    10. '[int' → logprob: -11.239266395568848

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1002107709646225
    2. ' int' → logprob: -2.350210666656494
    3. ' map' → logprob: -12.975211143493652
    4. 'map' → logprob: -14.475211143493652
    5. ' ' → logprob: -14.600211143493652
    6. '	int' → logprob: -14.850211143493652
    7. '(int' → logprob: -16.100210189819336
    8. 'in' → logprob: -16.350210189819336
    9. '  ' → logprob: -16.475210189819336
    10. '[int' → logprob: -17.725210189819336

Token 33: '(sr' (ID: 173072)
  Prédit: '(sr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sr' → logprob: -0.06207804009318352
    2. '(' → logprob: -2.8120779991149902
    3. '(sys' → logprob: -9.187078475952148
    4. '(s' → logprob: -13.062078475952148
    5. '(
' → logprob: -13.437078475952148
    6. '(str' → logprob: -13.687078475952148
    7. ' (' → logprob: -14.062078475952148
    8. '(input' → logprob: -14.312078475952148
    9. '(scr' → logprob: -14.937078475952148
    10. '(

' → logprob: -15.312078475952148

Token 34: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002491595223546028
    2. '()' → logprob: -6.002491474151611
    3. '()))' → logprob: -11.75249195098877
    4. ')' → logprob: -12.62749195098877
    5. ' ())' → logprob: -12.87749195098877
    6. '())
' → logprob: -13.87749195098877
    7. '()
' → logprob: -15.12749195098877
    8. '();)' → logprob: -15.37749195098877
    9. '().' → logprob: -15.50249195098877
    10. '()]' → logprob: -15.75249195098877

Token 35: 'lr' (ID: 35878)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17967092990875244
    2. 'n' → logprob: -2.554670810699463
    3. 'd' → logprob: -3.429670810699463
    4. '\' → logprob: -3.554670810699463
    5. '
' → logprob: -4.304670810699463
    6. '\n' → logprob: -4.679670810699463
    7. 's' → logprob: -7.929670810699463
    8. 'for' → logprob: -8.054671287536621
    9. '' → logprob: -8.054671287536621
    10. '#' → logprob: -8.179671287536621

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5017061233520508
    2. '=' → logprob: -1.3767061233520508
    3. '()' → logprob: -2.126706123352051
    4. 'ange' → logprob: -3.876706123352051
    5. '(' → logprob: -7.126706123352051
    6. '=lambda' → logprob: -7.626706123352051
    7. 'ist' → logprob: -8.75170612335205
    8. ' ()' → logprob: -8.75170612335205
    9. 'ambda' → logprob: -8.75170612335205
    10. '=[]' → logprob: -9.37670612335205

Token 37: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.10233049094676971
    2. 'ambda' → logprob: -2.852330446243286
    3. 'list' → logprob: -3.352330446243286
    4. '(lambda' → logprob: -5.977330684661865
    5. ' lambda' → logprob: -6.477330684661865
    6. 'ist' → logprob: -8.477330207824707
    7. 'map' → logprob: -9.352330207824707
    8. ' list' → logprob: -10.102330207824707
    9. '=lambda' → logprob: -10.102330207824707
    10. 'lam' → logprob: -10.477330207824707

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08010408282279968
    2. ':list' → logprob: -2.830104112625122
    3. ' list' → logprob: -4.330103874206543
    4. 'list' → logprob: -5.580103874206543
    5. '():' → logprob: -7.580103874206543
    6. ' :' → logprob: -7.830103874206543
    7. 's' → logprob: -9.955103874206543
    8. ' ():' → logprob: -11.580103874206543
    9. ':str' → logprob: -11.580103874206543
    10. '[]' → logprob: -11.705103874206543

Token 39: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.028836753219366074
    2. ' list' → logprob: -3.653836727142334
    3. 'sys' → logprob: -6.153836727142334
    4. 'map' → logprob: -8.778837203979492
    5. '[' → logprob: -8.903837203979492
    6. ' sys' → logprob: -9.528837203979492
    7. 'sr' → logprob: -11.028837203979492
    8. '[list' → logprob: -11.153837203979492
    9. ' map' → logprob: -12.278837203979492
    10. ' [' → logprob: -12.778837203979492

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00015955790877342224
    2. '(' → logprob: -8.75015926361084
    3. '(range' → logprob: -15.12515926361084
    4. '(int' → logprob: -15.25015926361084
    5. ' map' → logprob: -16.125160217285156
    6. '(eval' → logprob: -16.250160217285156
    7. ' (' → logprob: -16.500160217285156
    8. '	map' → logprob: -16.500160217285156
    9. '()' → logprob: -16.750160217285156
    10. 'map' → logprob: -17.125160217285156

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013691288768313825
    2. '(' → logprob: -9.625137329101562
    3. 'int' → logprob: -9.750137329101562
    4. ',int' → logprob: -12.875137329101562
    5. '<int' → logprob: -12.875137329101562
    6. '(str' → logprob: -13.250137329101562
    7. '[int' → logprob: -13.750137329101562
    8. '=int' → logprob: -13.875137329101562
    9. ']int' → logprob: -14.125137329101562
    10. ')' → logprob: -14.125137329101562

Token 42: ',' (ID: 11)
  Prédit: '(sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sr' → logprob: -0.003157045692205429
    2. ',' → logprob: -5.878157138824463
    3. '(' → logprob: -8.503156661987305
    4. '(s' → logprob: -9.128156661987305
    5. ',s' → logprob: -11.253156661987305
    6. ')' → logprob: -11.628156661987305
    7. ' (' → logprob: -11.628156661987305
    8. ' ,' → logprob: -12.378156661987305
    9. 'sr' → logprob: -13.628156661987305
    10. ',(' → logprob: -13.628156661987305

Token 43: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -0.062166549265384674
    2. ' sr' → logprob: -2.812166452407837
    3. '(sr' → logprob: -8.562166213989258
    4. '_sr' → logprob: -12.062166213989258
    5. ')' → logprob: -14.562166213989258
    6. 'SR' → logprob: -15.062166213989258
    7. ' ' → logprob: -15.312166213989258
    8. '	s' → logprob: -15.562166213989258
    9. ' SR' → logprob: -15.687166213989258
    10. 'sys' → logprob: -15.687166213989258

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.625000953674316
    3. ' ().' → logprob: -17.125
    4. '.' → logprob: -18.875
    5. '.split' → logprob: -18.875
    6. '()?.' → logprob: -19.5
    7. 'split' → logprob: -19.75
    8. ')' → logprob: -20.0
    9. '()))' → logprob: -20.0
    10. '(' → logprob: -20.0

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.4060561776859686e-05
    2. 'strip' → logprob: -10.875043869018555
    3. ' split' → logprob: -10.875043869018555
    4. 'rstrip' → logprob: -12.125043869018555
    5. '(split' → logprob: -14.375043869018555
    6. 'spl' → logprob: -17.500043869018555
    7. '.split' → logprob: -17.625043869018555
    8. 'plit' → logprob: -18.000043869018555
    9. ')' → logprob: -19.000043869018555
    10. ' ' → logprob: -19.375043869018555

Token 46: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04061443731188774
    2. '))' → logprob: -3.290614366531372
    3. '()' → logprob: -6.165614604949951
    4. '())' → logprob: -7.915614604949951
    5. ')))' → logprob: -10.415614128112793
    6. '()))
' → logprob: -10.415614128112793
    7. '())))' → logprob: -10.415614128112793
    8. '(' → logprob: -11.915614128112793
    9. ')' → logprob: -12.415614128112793
    10. '()));' → logprob: -13.665614128112793

Token 47: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1257862150669098
    2. 'def' → logprob: -2.750786304473877
    3. 'N' → logprob: -3.625786304473877
    4. 'd' → logprob: -3.750786304473877
    5. 'class' → logprob: -6.000786304473877
    6. 't' → logprob: -7.625786304473877
    7. 'D' → logprob: -7.750786304473877
    8. '#' → logprob: -8.125785827636719
    9. 'a' → logprob: -9.000785827636719
    10. 's' → logprob: -9.375785827636719

Token 48: ' d' (ID: 272)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09615284204483032
    2. ' solve' → logprob: -2.5961527824401855
    3. ' ' → logprob: -4.9711527824401855
    4. ' heap' → logprob: -5.3461527824401855
    5. ' solution' → logprob: -5.8461527824401855
    6. ' process' → logprob: -6.7211527824401855
    7. ' d' → logprob: -8.471153259277344
    8. ' heaps' → logprob: -8.471153259277344
    9. ' dfs' → logprob: -8.971153259277344
    10. ' top' → logprob: -9.221153259277344

Token 49: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.04267152398824692
    2. 'ijk' → logprob: -3.4176714420318604
    3. 'ij' → logprob: -4.7926716804504395
    4. 'jik' → logprob: -7.9176716804504395
    5. 'i' → logprob: -8.292671203613281
    6. 'ijks' → logprob: -10.917671203613281
    7. 'ijs' → logprob: -11.042671203613281
    8. 'e' → logprob: -11.417671203613281
    9. 'jk' → logprob: -11.667671203613281
    10. '```' → logprob: -11.917671203613281

Token 50: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013336940901353955
    2. '(node' → logprob: -7.376333713531494
    3. '():' → logprob: -9.001333236694336
    4. '(s' → logprob: -9.001333236694336
    5. '(graph' → logprob: -9.251333236694336
    6. '(n' → logprob: -9.876333236694336
    7. '(root' → logprob: -10.126333236694336
    8. '(start' → logprob: -10.501333236694336
    9. ' (' → logprob: -10.501333236694336
    10. '(path' → logprob: -11.251333236694336

Token 51: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003975416184403002
    2. ' ,' → logprob: -8.250397682189941
    3. ',start' → logprob: -9.500397682189941
    4. '):' → logprob: -10.250397682189941
    5. ',node' → logprob: -11.125397682189941
    6. ',n' → logprob: -12.000397682189941
    7. ',num' → logprob: -14.375397682189941
    8. ',end' → logprob: -14.750397682189941
    9. ' ):' → logprob: -14.875397682189941
    10. ',int' → logprob: -15.000397682189941

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0301402807235718
    2. 'dist' → logprob: -1.2801402807235718
    3. ' dist' → logprob: -1.4051402807235718
    4. ' distances' → logprob: -2.6551403999328613
    5. '	dist' → logprob: -3.2801403999328613
    6. '_dist' → logprob: -6.030140399932861
    7. ' ' → logprob: -6.155140399932861
    8. ' graph' → logprob: -6.530140399932861
    9. '(dist' → logprob: -7.030140399932861
    10. 'graph' → logprob: -7.030140399932861

Token 53: ' INF' (ID: 69196)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08122513443231583
    2. 'import' → logprob: -3.7062251567840576
    3. ' dist' → logprob: -3.9562251567840576
    4. '   ' → logprob: -3.9562251567840576
    5. 'n' → logprob: -4.7062249183654785
    6. ' n' → logprob: -6.2062249183654785
    7. ' import' → logprob: -6.9562249183654785
    8. 'INF' (adapté à ' INF') → logprob: -7.0812249183654785
    9. 'distance' → logprob: -7.0812249183654785
    10. ' distances' → logprob: -7.3312249183654785

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019351851660758257
    2. '=' → logprob: -6.251935005187988
    3. ')' → logprob: -13.251935005187988
    4. ',' → logprob: -13.501935005187988
    5. ' =)' → logprob: -13.876935005187988
    6. '=int' → logprob: -14.001935005187988
    7. ' ' → logprob: -14.376935005187988
    8. '<|end|>' → logprob: -15.251935005187988
    9. ' =
' → logprob: -15.501935005187988
    10. ' ,' → logprob: -16.376935958862305

Token 55: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4264090955257416
    2. 'float' → logprob: -1.676409125328064
    3. ' ' → logprob: -2.4264090061187744
    4. '10' → logprob: -2.6764090061187744
    5. 'int' → logprob: -6.4264092445373535
    6. ' int' → logprob: -6.6764092445373535
    7. '1' → logprob: -10.051408767700195
    8. '100' → logprob: -11.301408767700195
    9. '	float' → logprob: -12.801408767700195
    10. '987' → logprob: -13.301408767700195

Token 56: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10391642153263092
    2. '10' → logprob: -2.3539164066314697
    3. 'int' → logprob: -5.603916645050049
    4. ' float' → logprob: -11.60391616821289
    5. '1' → logprob: -11.85391616821289
    6. '100' → logprob: -12.85391616821289
    7. 'sys' → logprob: -15.22891616821289
    8. '999' → logprob: -15.97891616821289
    9. '987' → logprob: -16.10391616821289
    10. ' ' → logprob: -16.22891616821289

Token 57: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07983699440956116
    2. '**' → logprob: -2.5798370838165283
    3. '18' → logprob: -7.704836845397949
    4. '10' → logprob: -7.829836845397949
    5. '15' → logprob: -10.45483684539795
    6. '09' → logprob: -10.45483684539795
    7. '12' → logprob: -10.70483684539795
    8. '19' → logprob: -12.32983684539795
    9. '14' → logprob: -12.45483684539795
    10. '7' → logprob: -13.07983684539795

Token 58: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10563122481107712
    2. '15' → logprob: -2.355631113052368
    3. '18' → logprob: -5.355631351470947
    4. '10' → logprob: -7.480631351470947
    5. '12' → logprob: -9.355630874633789
    6. '14' → logprob: -10.980630874633789
    7. '16' → logprob: -11.105630874633789
    8. '13' → logprob: -12.480630874633789
    9. '17' → logprob: -14.230630874633789
    10. '11' → logprob: -14.230630874633789

Token 59: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0318564735352993
    2. '15' → logprob: -3.5318565368652344
    3. '18' → logprob: -7.156856536865234
    4. '10' → logprob: -7.281856536865234
    5. '12' → logprob: -7.406856536865234
    6. '13' → logprob: -11.406856536865234
    7. '14' → logprob: -11.406856536865234
    8. '16' → logprob: -12.156856536865234
    9. '11' → logprob: -14.031856536865234
    10. '7' → logprob: -14.656856536865234

Token 60: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18820026516914368
    2. '   ' → logprob: -1.9382002353668213
    3. 'distance' → logprob: -4.4382004737854
    4. ' distances' → logprob: -4.9382004737854
    5. '
' → logprob: -6.0632004737854
    6. '	dist' → logprob: -6.0632004737854
    7. ' dist' → logprob: -6.6882004737854
    8. '_dist' → logprob: -7.4382004737854
    9. 'Distances' → logprob: -7.6882004737854
    10. '    
' → logprob: -7.9382004737854

Token 61: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07750613987445831
    2. '   ' → logprob: -3.0775060653686523
    3. ' distances' → logprob: -4.327506065368652
    4. 'distance' → logprob: -4.702506065368652
    5. ' dist' → logprob: -5.577506065368652
    6. '	dist' → logprob: -6.952506065368652
    7. '
' → logprob: -7.827506065368652
    8. '    
' → logprob: -8.077506065368652
    9. '_dist' → logprob: -8.202506065368652
    10. 'Dist' → logprob: -9.077506065368652

Token 62: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06391817331314087
    2. 'n' → logprob: -3.438918113708496
    3. '   ' → logprob: -3.813918113708496
    4. 'distance' → logprob: -5.563918113708496
    5. 'N' → logprob: -5.938918113708496
    6. 'graph' → logprob: -7.938918113708496
    7. 'import' → logprob: -8.063918113708496
    8. ' dist' → logprob: -8.563918113708496
    9. 'dis' → logprob: -9.438918113708496
    10. 'd' → logprob: -9.438918113708496

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42907407879829407
    2. '=' → logprob: -1.0540740489959717
    3. '[' → logprob: -8.55407428741455
    4. '[start' → logprob: -9.17907428741455
    5. ',' → logprob: -10.05407428741455
    6. ' ' → logprob: -12.05407428741455
    7. ']' → logprob: -12.05407428741455
    8. '[]' → logprob: -12.17907428741455
    9. 's' → logprob: -12.42907428741455
    10. ')' → logprob: -12.80407428741455

Token 64: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038245294243097305
    2. '{' → logprob: -3.53824520111084
    3. ' [' → logprob: -4.78824520111084
    4. '[int' → logprob: -10.16324520111084
    5. ' {' → logprob: -10.91324520111084
    6. '[start' → logprob: -11.41324520111084
    7. '[in' → logprob: -11.66324520111084
    8. '{}' → logprob: -11.78824520111084
    9. '[node' → logprob: -11.91324520111084
    10. '[I' → logprob: -12.03824520111084

Token 65: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.2378600735682994e-05
    2. ' INF' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.375032424926758
    4. '_INF' → logprob: -15.250032424926758
    5. 'IN' → logprob: -16.500032424926758
    6. '-INF' → logprob: -16.500032424926758
    7. '0' → logprob: -17.375032424926758
    8. 'inf' → logprob: -17.625032424926758
    9. ' ' → logprob: -18.375032424926758
    10. ']' → logprob: -18.625032424926758

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011851455084979534
    2. ' for' → logprob: -5.0118513107299805
    3. ']*' → logprob: -5.3868513107299805
    4. 'for' → logprob: -7.8868513107299805
    5. ' ]' → logprob: -9.51185131072998
    6. ']*(' → logprob: -9.51185131072998
    7. ')' → logprob: -11.51185131072998
    8. ',' → logprob: -11.63685131072998
    9. ')]' → logprob: -13.63685131072998
    10. ']+' → logprob: -14.13685131072998

Token 67: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5170310139656067
    2. ']' → logprob: -1.642030954360962
    3. '*' → logprob: -2.267030954360962
    4. 'for' → logprob: -3.392030954360962
    5. ']*' → logprob: -3.642030954360962
    6. ' *' → logprob: -3.642030954360962
    7. ')' → logprob: -4.392031192779541
    8. ']*(' → logprob: -5.767031192779541
    9. '*(' → logprob: -6.267031192779541
    10. ',' → logprob: -6.267031192779541

Token 68: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8701617121696472
    2. '(n' → logprob: -1.120161771774292
    3. 'N' → logprob: -2.245161771774292
    4. '(N' → logprob: -2.245161771774292
    5. '(len' → logprob: -4.620161533355713
    6. ' (' → logprob: -4.620161533355713
    7. '(V' → logprob: -4.870161533355713
    8. 'len' → logprob: -5.245161533355713
    9. '(' → logprob: -5.620161533355713
    10. 'V' → logprob: -6.120161533355713

Token 69: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09925753623247147
    2. 'N' → logprob: -2.474257469177246
    3. 'V' → logprob: -5.099257469177246
    4. '(n' → logprob: -6.224257469177246
    5. 'len' → logprob: -6.849257469177246
    6. ' n' → logprob: -8.474257469177246
    7. 'v' → logprob: -8.474257469177246
    8. '(N' → logprob: -8.474257469177246
    9. '100' → logprob: -9.224257469177246
    10. '(V' → logprob: -9.349257469177246

Token 70: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6351900696754456
    2. '+' → logprob: -0.7601900696754456
    3. ' +' → logprob: -6.385190010070801
    4. ' )' → logprob: -7.135190010070801
    5. '+)' → logprob: -9.3851900100708
    6. ')]' → logprob: -12.0101900100708
    7. '))' → logprob: -12.8851900100708
    8. ')+' → logprob: -13.3851900100708
    9. ']' → logprob: -13.5101900100708
    10. ')
' → logprob: -13.6351900100708

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010386446956545115
    2. ' ' → logprob: -6.876038551330566
    3. '2' → logprob: -12.251038551330566
    4. '7' → logprob: -14.876038551330566
    5. '   ' → logprob: -15.626038551330566
    6. '  ' → logprob: -16.001039505004883
    7. '１' → logprob: -16.126039505004883
    8. '10' → logprob: -16.813539505004883
    9. '```' → logprob: -17.063539505004883
    10. ')' → logprob: -17.188539505004883

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.62502670288086
    3. '2' → logprob: -13.25002670288086
    4. '１' → logprob: -16.12502670288086
    5. '   ' → logprob: -16.62502670288086
    6. '0' → logprob: -17.12502670288086
    7. '```' → logprob: -17.12502670288086
    8. '7' → logprob: -17.12502670288086
    9. '10' → logprob: -17.50002670288086
    10. '  ' → logprob: -17.50002670288086

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010139751975657418
    2. '   ' → logprob: -9.625101089477539
    3. ')
' → logprob: -10.500101089477539
    4. ' )' → logprob: -12.250101089477539
    5. ',' → logprob: -13.750101089477539
    6. '),' → logprob: -14.875101089477539
    7. '<|end|>' → logprob: -15.250101089477539
    8. ' ' → logprob: -15.375101089477539
    9. '}' → logprob: -15.750101089477539
    10. ']' → logprob: -15.750101089477539

Token 74: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04427717998623848
    2. ' dist' → logprob: -4.044277191162109
    3. '   ' → logprob: -4.419277191162109
    4. '	dist' → logprob: -4.544277191162109
    5. '
' → logprob: -6.169277191162109
    6. '<|end|>' → logprob: -8.16927719116211
    7. ' ' → logprob: -8.79427719116211
    8. '    
' → logprob: -8.91927719116211
    9. '  ' → logprob: -9.54427719116211
    10. '_dist' → logprob: -9.54427719116211

Token 75: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0002137882256647572
    2. ' dist' → logprob: -9.000213623046875
    3. '   ' → logprob: -9.375213623046875
    4. '	dist' → logprob: -12.375213623046875
    5. 'import' → logprob: -14.750213623046875
    6. 'd' → logprob: -15.375213623046875
    7. '
' → logprob: -15.625213623046875
    8. '    
' → logprob: -15.625213623046875
    9. 'queue' → logprob: -16.250213623046875
    10. 'heap' → logprob: -16.500213623046875

Token 76: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -9.984787902794778e-05
    2. '[' → logprob: -9.250100135803223
    3. '[end' → logprob: -13.375100135803223
    4. 'start' → logprob: -14.500100135803223
    5. '```' → logprob: -14.750100135803223
    6. '[
' → logprob: -15.500100135803223
    7. '[current' → logprob: -16.000099182128906
    8. '[s' → logprob: -16.000099182128906
    9. '[user' → logprob: -16.375099182128906
    10. '<|end|>' → logprob: -16.375099182128906

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006261797971092165
    2. ')' → logprob: -7.875626087188721
    3. ' ]' → logprob: -8.500626564025879
    4. ']=' → logprob: -10.750626564025879
    5. ')]' → logprob: -10.875626564025879
    6. ' )' → logprob: -14.500626564025879
    7. '=' → logprob: -14.500626564025879
    8. '[' → logprob: -14.625626564025879
    9. '])' → logprob: -14.875626564025879
    10. '   ' → logprob: -15.500626564025879

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246178403496742
    2. '=' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.523245811462402
    4. ']' → logprob: -16.14824676513672
    5. ' =
' → logprob: -16.14824676513672
    6. '＝' → logprob: -16.39824676513672
    7. ')' → logprob: -17.14824676513672
    8. ' =)' → logprob: -17.14824676513672
    9. ',' → logprob: -17.27324676513672
    10. '[' → logprob: -17.77324676513672

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '00' → logprob: -20.125001907348633
    4. '۰' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '000' → logprob: -20.625001907348633
    7. '０' → logprob: -20.625001907348633
    8. '```' → logprob: -21.125001907348633
    9. '  ' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.625001907348633

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -20.25
    4. '０' → logprob: -20.75
    5. '```' → logprob: -22.0
    6. '000' → logprob: -22.125
    7. '00' → logprob: -22.25
    8. '০' → logprob: -22.625
    9. '٠' → logprob: -22.625
    10. '1' → logprob: -23.625

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001784418011084199
    2. '' → logprob: -7.501784324645996
    3. '<|end|>' → logprob: -7.626784324645996
    4. ' 
' → logprob: -8.251784324645996
    5. '	
' → logprob: -9.001784324645996
    6. '    
' → logprob: -9.376784324645996
    7. '  
' → logprob: -9.626784324645996
    8. '
' → logprob: -9.751784324645996
    9. '\n' → logprob: -10.251784324645996
    10. '   ' → logprob: -10.251784324645996

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04875439405441284
    2. '   ' → logprob: -3.2987544536590576
    3. '' → logprob: -5.6737542152404785
    4. ',' → logprob: -6.0487542152404785
    5. '    
' → logprob: -6.6737542152404785
    6. ' ' → logprob: -7.2987542152404785
    7. ' 
' → logprob: -7.2987542152404785
    8. '  
' → logprob: -7.7987542152404785
    9. ',
' → logprob: -8.048754692077637
    10. '	queue' → logprob: -8.173754692077637

Token 83: ' que' (ID: 661)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.08365131914615631
    2. 'h' → logprob: -2.833651304244995
    3. 'heap' → logprob: -4.958651542663574
    4. 'pq' → logprob: -5.083651542663574
    5. ' h' → logprob: -5.208651542663574
    6. 'q' → logprob: -6.708651542663574
    7. '   ' → logprob: -6.833651542663574
    8. ' heap' → logprob: -8.083651542663574
    9. 'queue' → logprob: -9.833651542663574
    10. 'hp' → logprob: -10.458651542663574

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0154589107260108
    2. '=' → logprob: -4.890459060668945
    3. 'ue' → logprob: -5.390459060668945
    4. 'u' → logprob: -5.765459060668945
    5. ' ' → logprob: -9.015459060668945
    6. 'ues' → logprob: -13.765459060668945
    7. ',' → logprob: -14.015459060668945
    8. ' =
' → logprob: -14.265459060668945
    9. '=[]' → logprob: -14.515459060668945
    10. '	' → logprob: -14.765459060668945

Token 85: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5778371691703796
    2. '[]' → logprob: -0.8278371691703796
    3. '[' → logprob: -6.577836990356445
    4. ' [(' → logprob: -8.077836990356445
    5. ' []' → logprob: -8.702836990356445
    6. '[]
' → logprob: -11.202836990356445
    7. '[((' → logprob: -12.702836990356445
    8. '[[' → logprob: -12.952836990356445
    9. '[]

' → logprob: -13.202836990356445
    10. '[],' → logprob: -13.577836990356445

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013420163886621594
    2. 'dist' → logprob: -7.376341819763184
    3. 'start' → logprob: -8.001341819763184
    4. ' ' → logprob: -8.126341819763184
    5. '(' → logprob: -10.001341819763184
    6. '(start' → logprob: -11.376341819763184
    7. ' dist' → logprob: -11.626341819763184
    8. '(dist' → logprob: -11.751341819763184
    9. ')' → logprob: -11.876341819763184
    10. ' start' → logprob: -13.126341819763184

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023655613767914474
    2. ',start' → logprob: -8.375236511230469
    3. ' ,' → logprob: -13.250236511230469
    4. ',end' → logprob: -14.125236511230469
    5. ',)' → logprob: -14.375236511230469
    6. '<|end|>' → logprob: -14.875236511230469
    7. ',s' → logprob: -15.000236511230469
    8. ',user' → logprob: -15.250236511230469
    9. ')' → logprob: -15.375236511230469
    10. ',current' → logprob: -15.750236511230469

Token 88: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04300866648554802
    2. ' start' → logprob: -3.16800856590271
    3. ')' → logprob: -11.918008804321289
    4. '[start' → logprob: -14.043008804321289
    5. 'star' → logprob: -14.543008804321289
    6. ' ' → logprob: -15.293008804321289
    7. '(start' → logprob: -15.293008804321289
    8. '0' → logprob: -15.668008804321289
    9. '1' → logprob: -15.793008804321289
    10. ',start' → logprob: -16.16800880432129

Token 89: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.029814831912517548
    2. ')' → logprob: -3.5298147201538086
    3. ')])' → logprob: -10.404814720153809
    4. ' )' → logprob: -11.404814720153809
    5. '),' → logprob: -11.904814720153809
    6. ']' → logprob: -12.279814720153809
    7. '))' → logprob: -12.404814720153809
    8. ')]
' → logprob: -12.654814720153809
    9. ')
' → logprob: -13.654814720153809
    10. ')],' → logprob: -13.904814720153809

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9500617980957031
    2. '   ' → logprob: -1.0750617980957031
    3. ')' → logprob: -2.075061798095703
    4. 'while' → logprob: -3.325061798095703
    5. '    
' → logprob: -3.825061798095703
    6. '	while' → logprob: -3.950061798095703
    7. '' → logprob: -4.075061798095703
    8. '  
' → logprob: -4.075061798095703
    9. ' while' → logprob: -4.325061798095703
    10. ' ' → logprob: -5.075061798095703

Token 91: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.285324364900589
    2. ' while' → logprob: -2.1603243350982666
    3. '   ' → logprob: -2.9103243350982666
    4. '	while' → logprob: -3.2853243350982666
    5. ')' → logprob: -3.9103243350982666
    6. ' ' → logprob: -4.035324573516846
    7. '    
' → logprob: -7.535324573516846
    8. '  
' → logprob: -7.660324573516846
    9. '' → logprob: -7.785324573516846
    10. '  ' → logprob: -7.785324573516846

Token 92: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.00037383107701316476
    2. 'que' → logprob: -8.000373840332031
    3. ' ' → logprob: -11.000373840332031
    4. ' qu' → logprob: -11.000373840332031
    5. ' len' → logprob: -13.125373840332031
    6. ' he' → logprob: -13.875373840332031
    7. ' ' → logprob: -14.250373840332031
    8. 'qu' → logprob: -15.250373840332031
    9. '   ' → logprob: -15.500373840332031
    10. ' queue' → logprob: -15.875373840332031

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012584454379975796
    2. '):' → logprob: -6.751258373260498
    3. '[' → logprob: -10.376258850097656
    4. ']:' → logprob: -11.001258850097656
    5. '>:' → logprob: -11.376258850097656
    6. ':**' → logprob: -11.376258850097656
    7. ':
' → logprob: -12.376258850097656
    8. ',' → logprob: -13.001258850097656
    9. ' :' → logprob: -13.376258850097656
    10. ' and' → logprob: -13.376258850097656

Token 94: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7193714380264282
    2. '       ' → logprob: -0.8443714380264282
    3. '   ' → logprob: -3.8443713188171387
    4. ' ' → logprob: -3.9693713188171387
    5. '    ' → logprob: -3.9693713188171387
    6. '     ' → logprob: -4.469371318817139
    7. ' ,' → logprob: -5.094371318817139
    8. '      ' → logprob: -6.219371318817139
    9. '  ' → logprob: -6.969371318817139
    10. ')' → logprob: -7.219371318817139

Token 95: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13087713718414307
    2. 'd' (adapté à ' d') → logprob: -2.2558770179748535
    3. ' c' → logprob: -4.8808770179748535
    4. 'cost' → logprob: -5.1308770179748535
    5. ' d' → logprob: -6.6308770179748535
    6. '   ' → logprob: -6.6308770179748535
    7. '	c' → logprob: -7.5058770179748535
    8. 'q' → logprob: -7.8808770179748535
    9. '0' → logprob: -9.005877494812012
    10. ',' → logprob: -9.005877494812012

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020330198458395898
    2. 'ist' → logprob: -9.125203132629395
    3. ' ,' → logprob: -9.875203132629395
    4. ',u' → logprob: -11.625203132629395
    5. ',e' → logprob: -11.875203132629395
    6. 'e' → logprob: -12.375203132629395
    7. 'istance' → logprob: -12.375203132629395
    8. ',
' → logprob: -12.625203132629395
    9. ',i' → logprob: -13.250203132629395
    10. ',_' → logprob: -13.875203132629395

Token 97: ' prev' (ID: 10258)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11381899565458298
    2. 'u' → logprob: -2.738818883895874
    3. ' v' → logprob: -3.238818883895874
    4. ' u' → logprob: -5.613819122314453
    5. 'node' → logprob: -10.863819122314453
    6. 'q' → logprob: -11.113819122314453
    7. ' ' → logprob: -11.613819122314453
    8. ' now' → logprob: -11.738819122314453
    9. ' node' → logprob: -11.863819122314453
    10. 'x' → logprob: -12.363819122314453

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4827166199684143
    2. ' =' → logprob: -1.1077165603637695
    3. '_node' → logprob: -3.6077165603637695
    4. ')' → logprob: -3.8577165603637695
    5. ',' → logprob: -6.6077165603637695
    6. '=node' → logprob: -6.8577165603637695
    7. 'node' → logprob: -6.9827165603637695
    8. ')=' → logprob: -7.7327165603637695
    9. ' node' → logprob: -8.60771656036377
    10. '_vertex' → logprob: -9.10771656036377

Token 99: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.22577118873596191
    2. ' he' → logprob: -1.600771188735962
    3. 'heap' → logprob: -8.100770950317383
    4. ' ' → logprob: -11.100770950317383
    5. 'h' → logprob: -11.225770950317383
    6. ' heap' → logprob: -11.225770950317383
    7. '   ' → logprob: -12.600770950317383
    8. ' =' → logprob: -13.913270950317383
    9. 'ha' → logprob: -13.975770950317383
    10. ' ' → logprob: -13.975770950317383

Token 100: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.3080716346157715e-05
    2. 'ap' → logprob: -11.250022888183594
    3. ' app' → logprob: -12.250022888183594
    4. 'a' → logprob: -13.250022888183594
    5. 'pp' → logprob: -14.000022888183594
    6. '   ' → logprob: -14.500022888183594
    7. ' ' → logprob: -15.250022888183594
    8. '  ' → logprob: -15.375022888183594
    9. '(app' → logprob: -15.375022888183594
    10. '	app' → logprob: -15.625022888183594

Token 101: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.73183855926618e-05
    2. 'o' → logprob: -10.250077247619629
    3. '   ' → logprob: -11.500077247619629
    4. '[' → logprob: -12.000077247619629
    5. ' op' → logprob: -12.375077247619629
    6. '(op' → logprob: -12.500077247619629
    7. '	op' → logprob: -13.000077247619629
    8. 'opleft' → logprob: -13.000077247619629
    9. '  ' → logprob: -13.375077247619629
    10. '```' → logprob: -13.625077247619629

Token 102: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(queue' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '(
' → logprob: -16.75
    5. ')' → logprob: -17.875
    6. '(qu' → logprob: -18.0
    7. 'que' → logprob: -18.125
    8. '((' → logprob: -18.25
    9. '(q' → logprob: -18.875
    10. '(

' → logprob: -19.375

Token 103: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0033804262056946754
    2. ' que' → logprob: -6.128380298614502
    3. ')' → logprob: -6.753380298614502
    4. 'qu' → logprob: -11.75338077545166
    5. '   ' → logprob: -12.37838077545166
    6. 'ques' → logprob: -12.50338077545166
    7. ',' → logprob: -13.50338077545166
    8. 'quee' → logprob: -13.62838077545166
    9. ')
' → logprob: -13.87838077545166
    10. 'q' → logprob: -14.00338077545166

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ')
' → logprob: -10.875021934509277
    3. ' )' → logprob: -13.000021934509277
    4. '   ' → logprob: -16.87502098083496
    5. ')

' → logprob: -17.12502098083496
    6. ')`' → logprob: -17.87502098083496
    7. ')d' → logprob: -18.25002098083496
    8. ')#' → logprob: -18.25002098083496
    9. '<|end|>' → logprob: -18.37502098083496
    10. ')
' → logprob: -18.50002098083496

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12206056714057922
    2. '
' → logprob: -2.622060537338257
    3. '<|end|>' → logprob: -3.372060537338257
    4. ' 
' → logprob: -5.872060775756836
    5. '        
' → logprob: -6.122060775756836
    6. '  
' → logprob: -6.997060775756836
    7. ' ' → logprob: -7.872060775756836
    8. '   ' → logprob: -8.497060775756836
    9. ')' → logprob: -8.497060775756836
    10. ' if' → logprob: -8.622060775756836

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5995921492576599
    2. ' if' → logprob: -1.3495922088623047
    3. ' ' → logprob: -1.9745922088623047
    4. 'if' (adapté à ' if') → logprob: -4.224592208862305
    5. '        ' → logprob: -4.724592208862305
    6. '   ' → logprob: -4.974592208862305
    7. '    ' → logprob: -5.099592208862305
    8. ' 
' → logprob: -5.474592208862305
    9. '<|end|>' → logprob: -5.474592208862305
    10. '  ' → logprob: -6.099592208862305

Token 107: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2127334624528885
    2. ' dist' → logprob: -1.712733507156372
    3. 'd' → logprob: -4.712733268737793
    4. ' d' → logprob: -6.087733268737793
    5. '	dist' → logprob: -12.337733268737793
    6. '   ' → logprob: -14.587733268737793
    7. '(dist' → logprob: -14.837733268737793
    8. '	d' → logprob: -15.462733268737793
    9. ' ' → logprob: -16.58773422241211
    10. '_dist' → logprob: -16.83773422241211

Token 108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -14.875000953674316
    3. 'prev' → logprob: -15.375000953674316
    4. '[
' → logprob: -15.875000953674316
    5. '```' → logprob: -16.625
    6. ']' → logprob: -18.125
    7. '>' → logprob: -18.625
    8. '	prev' → logprob: -18.625
    9. ' ' → logprob: -18.625
    10. '
' → logprob: -19.0

Token 109: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.45848218582978e-06
    2. ' prev' → logprob: -13.12500286102295
    3. '	prev' → logprob: -15.12500286102295
    4. '[' → logprob: -16.500001907348633
    5. '(prev' → logprob: -17.625001907348633
    6. '_prev' → logprob: -18.875001907348633
    7. 'd' → logprob: -19.000001907348633
    8. '.prev' → logprob: -19.625001907348633
    9. 'p' → logprob: -20.750001907348633
    10. ']' → logprob: -20.875001907348633

Token 110: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.023505182936787605
    2. ' <' → logprob: -3.773505210876465
    3. ' ' → logprob: -9.773505210876465
    4. '<v' → logprob: -10.398505210876465
    5. '<n' → logprob: -10.523505210876465
    6. '<c' → logprob: -11.023505210876465
    7. '<len' → logprob: -11.023505210876465
    8. '<ll' → logprob: -11.023505210876465
    9. '<data' → logprob: -11.023505210876465
    10. '<int' → logprob: -11.148505210876465

Token 111: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.016145218163728714
    2. ' <' → logprob: -4.1411452293396
    3. '<v' → logprob: -11.141144752502441
    4. '<int' → logprob: -11.266144752502441
    5. ' ' → logprob: -11.391144752502441
    6. '<c' → logprob: -11.516144752502441
    7. '<len' → logprob: -11.641144752502441
    8. '!=' → logprob: -11.641144752502441
    9. '<n' → logprob: -11.766144752502441
    10. '<data' → logprob: -11.766144752502441

Token 112: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2811523377895355
    2. ' d' → logprob: -1.406152367591858
    3. '	d' → logprob: -14.031152725219727
    4. ' ' → logprob: -14.281152725219727
    5. '>d' → logprob: -16.031152725219727
    6. ' ' → logprob: -16.343652725219727
    7. ')d' → logprob: -16.593652725219727
    8. '   ' → logprob: -16.968652725219727
    9. '```' → logprob: -17.281152725219727
    10. '=d' → logprob: -17.468652725219727

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025554499588906765
    2. ':
' → logprob: -6.0025553703308105
    3. '       ' → logprob: -10.002555847167969
    4. ' continue' → logprob: -11.002555847167969
    5. 'continue' → logprob: -12.127555847167969
    6. '	continue' → logprob: -12.377555847167969
    7. '   ' → logprob: -12.377555847167969
    8. ' :' → logprob: -13.877555847167969
    9. ':return' → logprob: -14.377555847167969
    10. ':
' → logprob: -14.627555847167969

Token 114: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1317647248506546
    2. ' continue' → logprob: -2.2567646503448486
    3. '           ' → logprob: -4.881764888763428
    4. '	continue' → logprob: -5.006764888763428
    5. 'continue' → logprob: -5.756764888763428
    6. '   ' → logprob: -7.006764888763428
    7. '	' → logprob: -8.63176441192627
    8. '               ' → logprob: -9.75676441192627
    9. '_continue' → logprob: -10.25676441192627
    10. ':' → logprob: -10.38176441192627

Token 115: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.18977878987789154
    2. 'continue' (adapté à ' continue') → logprob: -1.9397788047790527
    3. '           ' → logprob: -3.9397788047790527
    4. '       ' → logprob: -5.189778804779053
    5. '	continue' → logprob: -5.564778804779053
    6. '               ' → logprob: -9.064778327941895
    7. '_continue' → logprob: -9.939778327941895
    8. '   ' → logprob: -10.314778327941895
    9. 'contin' → logprob: -10.814778327941895
    10. '		' → logprob: -11.689778327941895

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008793042507022619
    2. '        
' → logprob: -7.625879287719727
    3. '<|end|>' → logprob: -9.000879287719727
    4. '
' → logprob: -10.000879287719727
    5. '' → logprob: -10.375879287719727
    6. ')' → logprob: -10.375879287719727
    7. ',' → logprob: -10.500879287719727
    8. '      ' → logprob: -10.750879287719727
    9. '        ' → logprob: -11.125879287719727
    10. 'n' → logprob: -11.250879287719727

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023672052193433046
    2. '        
' → logprob: -6.62736701965332
    3. '
' → logprob: -7.37736701965332
    4. 'n' → logprob: -9.50236701965332
    5. '<|end|>' → logprob: -9.87736701965332
    6. '' → logprob: -9.87736701965332
    7. ' 
' → logprob: -10.12736701965332
    8. '      ' → logprob: -10.62736701965332
    9. '   ' → logprob: -10.87736701965332
    10. ',' → logprob: -10.87736701965332

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6545268893241882
    2. '       ' → logprob: -0.9045268893241882
    3. 'for' (adapté à ' for') → logprob: -2.779526948928833
    4. '   ' → logprob: -4.779526710510254
    5. '        
' → logprob: -7.029526710510254
    6. ',' → logprob: -7.154526710510254
    7. ' ' → logprob: -7.529526710510254
    8. '    ' → logprob: -8.154526710510254
    9. ' 
' → logprob: -8.404526710510254
    10. '      ' → logprob: -8.404526710510254

Token 119: ' nxt' (ID: 160200)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2386002391576767
    2. ' nxt' → logprob: -2.113600254058838
    3. 'n' → logprob: -2.988600254058838
    4. 'v' → logprob: -4.738600254058838
    5. 'nx' → logprob: -4.738600254058838
    6. 'next' → logprob: -5.238600254058838
    7. 'i' → logprob: -5.363600254058838
    8. ' to' → logprob: -5.863600254058838
    9. 'cost' → logprob: -5.988600254058838
    10. 'neighbor' → logprob: -6.113600254058838

Token 120: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.481510692741722e-05
    2. ' ,' → logprob: -10.25007438659668
    3. ',n' → logprob: -10.37507438659668
    4. ',d' → logprob: -13.12507438659668
    5. ',node' → logprob: -13.62507438659668
    6. ',num' → logprob: -13.75007438659668
    7. ',next' → logprob: -14.50007438659668
    8. ',v' → logprob: -14.75007438659668
    9. ',to' → logprob: -15.00007438659668
    10. '‌,' → logprob: -15.00007438659668

Token 121: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.060583218932151794
    2. 'G' → logprob: -3.5605831146240234
    3. 'g' → logprob: -4.560583114624023
    4. 'adj' → logprob: -4.810583114624023
    5. ' graph' → logprob: -5.185583114624023
    6. 'range' → logprob: -5.560583114624023
    7. 'edges' → logprob: -6.435583114624023
    8. 'edge' → logprob: -8.435583114624023
    9. '   ' → logprob: -9.310583114624023
    10. 'Graph' → logprob: -9.685583114624023

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' [' → logprob: -14.87500286102295
    4. '```' → logprob: -14.87500286102295
    5. '[start' → logprob: -15.62500286102295
    6. 'prev' → logprob: -15.87500286102295
    7. '[[' → logprob: -17.250001907348633
    8. '       ' → logprob: -17.500001907348633
    9. '[cur' → logprob: -17.500001907348633
    10. '[now' → logprob: -17.500001907348633

Token 123: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0024914760142564774
    2. '[' → logprob: -6.002491474151611
    3. ' prev' → logprob: -11.12749195098877
    4. '	prev' → logprob: -14.75249195098877
    5. '   ' → logprob: -15.87749195098877
    6. ']' → logprob: -16.002490997314453
    7. '(prev' → logprob: -16.127490997314453
    8. '][' → logprob: -16.377490997314453
    9. ' ' → logprob: -16.752490997314453
    10. '```' → logprob: -16.752490997314453

Token 124: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0031765217427164316
    2. ']' → logprob: -6.378176689147949
    3. ':' → logprob: -7.128176689147949
    4. '):' → logprob: -8.00317668914795
    5. '}:' → logprob: -8.50317668914795
    6. '>:' → logprob: -10.12817668914795
    7. '']:' → logprob: -10.37817668914795
    8. ',' → logprob: -11.50317668914795
    9. '],' → logprob: -11.62817668914795
    10. '】:' → logprob: -12.00317668914795

Token 125: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45470526814460754
    2. ',' → logprob: -2.204705238342285
    3. '       ' → logprob: -2.329705238342285
    4. '           ' → logprob: -2.454705238342285
    5. '   ' → logprob: -4.329705238342285
    6. ':
' → logprob: -4.329705238342285
    7. ' :' → logprob: -4.454705238342285
    8. '<|end|>' → logprob: -4.704705238342285
    9. '[' → logprob: -4.954705238342285
    10. '        ' → logprob: -5.329705238342285

Token 126: ' d' (ID: 272)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8932936191558838
    2. ' cost' → logprob: -1.2682936191558838
    3. '           ' → logprob: -1.3932936191558838
    4. ' if' → logprob: -4.018293380737305
    5. ',' → logprob: -4.143293380737305
    6. '       ' → logprob: -5.268293380737305
    7. ' nd' → logprob: -5.768293380737305
    8. '               ' → logprob: -5.893293380737305
    9. '   ' → logprob: -6.018293380737305
    10. 'w' → logprob: -6.268293380737305

Token 127: '1' (ID: 16)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.850676417350769
    2. 'istance' → logprob: -1.600676417350769
    3. ',' → logprob: -1.725676417350769
    4. ' =' → logprob: -2.3506765365600586
    5. '=' → logprob: -3.6006765365600586
    6. '_' → logprob: -3.6006765365600586
    7. '_,' → logprob: -4.100676536560059
    8. ' ,' → logprob: -5.725676536560059
    9. '_n' → logprob: -6.100676536560059
    10. '+' → logprob: -6.225676536560059

Token 128: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.564741313457489
    2. ' =' → logprob: -1.3147413730621338
    3. '=' → logprob: -2.064741373062134
    4. 'ist' → logprob: -4.314741134643555
    5. 'istance' → logprob: -4.439741134643555
    6. ' ,' → logprob: -4.689741134643555
    7. '0' → logprob: -8.189741134643555
    8. ',n' → logprob: -8.314741134643555
    9. '   ' → logprob: -8.689741134643555
    10. '[' → logprob: -9.189741134643555

Token 129: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3698005676269531
    2. ' d' → logprob: -1.2448005676269531
    3. 'dist' → logprob: -4.244800567626953
    4. ' dist' → logprob: -4.994800567626953
    5. ' ' → logprob: -12.119800567626953
    6. '   ' → logprob: -12.369800567626953
    7. '	d' → logprob: -13.369800567626953
    8. ')d' → logprob: -13.869800567626953
    9. '(dist' → logprob: -14.244800567626953
    10. '	dist' → logprob: -14.244800567626953

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2529735863208771
    2. ' +' → logprob: -1.5029735565185547
    3. '[' → logprob: -6.877973556518555
    4. '<|end|>' → logprob: -12.502973556518555
    5. '+n' → logprob: -12.877973556518555
    6. '+[' → logprob: -14.002973556518555
    7. '＋' → logprob: -14.377973556518555
    8. ' ' → logprob: -14.502973556518555
    9. ' +
' → logprob: -14.627973556518555
    10. '+t' → logprob: -14.877973556518555

Token 131: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08532208949327469
    2. ' nxt' → logprob: -2.710322141647339
    3. '1' → logprob: -4.46032190322876
    4. 'graph' → logprob: -6.33532190322876
    5. ' n' → logprob: -6.71032190322876
    6. ' graph' → logprob: -7.96032190322876
    7. ' ' → logprob: -8.460322380065918
    8. '   ' → logprob: -10.085322380065918
    9. 'nx' → logprob: -10.210322380065918
    10. '	n' → logprob: -12.085322380065918

Token 132: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018880510702729225
    2. '1' → logprob: -4.143880367279053
    3. 'graph' → logprob: -6.268880367279053
    4. ' nxt' → logprob: -7.143880367279053
    5. ' n' → logprob: -10.393880844116211
    6. ' graph' → logprob: -10.393880844116211
    7. '   ' → logprob: -10.518880844116211
    8. ' ' → logprob: -10.643880844116211
    9. 'nx' → logprob: -11.143880844116211
    10. 'dist' → logprob: -12.268880844116211

Token 133: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9549979567527771
    2. '
' → logprob: -1.7049980163574219
    3. '<|end|>' → logprob: -1.7049980163574219
    4. '           ' → logprob: -1.8299980163574219
    5. 'if' → logprob: -2.704998016357422
    6. '<|end|>' → logprob: -5.204998016357422
    7. '               ' → logprob: -5.954998016357422
    8. ')' → logprob: -5.954998016357422
    9. ' ' → logprob: -6.329998016357422
    10. '            
' → logprob: -6.329998016357422

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5546815395355225
    2. '           ' → logprob: -0.9296815395355225
    3. 'if' (adapté à ' if') → logprob: -3.5546815395355225
    4. ' ' → logprob: -6.929681777954102
    5. '       ' → logprob: -7.054681777954102
    6. '               ' → logprob: -8.179681777954102
    7. '          ' → logprob: -9.679681777954102
    8. '            ' → logprob: -9.804681777954102
    9. '   ' → logprob: -9.929681777954102
    10. '        ' → logprob: -10.554681777954102

Token 136: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6276636719703674
    2. ' d' → logprob: -0.8776636719703674
    3. 'dist' → logprob: -3.6276636123657227
    4. 'd' → logprob: -3.7526636123657227
    5. '	dist' → logprob: -8.627663612365723
    6. '	d' → logprob: -9.502663612365723
    7. ' ' → logprob: -9.627663612365723
    8. '(dist' → logprob: -10.627663612365723
    9. '   ' → logprob: -11.627663612365723
    10. 'Dist' → logprob: -11.877663612365723

Token 137: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1994775377388578e-05
    2. '[' → logprob: -11.500012397766113
    3. '[next' → logprob: -14.125012397766113
    4. 'n' → logprob: -14.625012397766113
    5. '[
' → logprob: -15.750012397766113
    6. '[N' → logprob: -15.750012397766113
    7. ' [' → logprob: -16.250011444091797
    8. ']' → logprob: -16.875011444091797
    9. '```' → logprob: -17.375011444091797
    10. '][' → logprob: -17.500011444091797

Token 138: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -9.372294698550832e-06
    2. 'x' → logprob: -12.375009536743164
    3. '[n' → logprob: -13.000009536743164
    4. '[' → logprob: -13.375009536743164
    5. '[x' → logprob: -14.625009536743164
    6. '[next' → logprob: -15.250009536743164
    7. '```' → logprob: -15.750009536743164
    8. ']' → logprob: -16.375009536743164
    9. 'ext' → logprob: -16.375009536743164
    10. 'xta' → logprob: -16.625009536743164

Token 139: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.636349081993103
    2. '>' → logprob: -0.761349081993103
    3. ']' → logprob: -6.261349201202393
    4. '[' → logprob: -6.886349201202393
    5. '[n' → logprob: -7.511349201202393
    6. ']>' → logprob: -9.136348724365234
    7. '>d' → logprob: -9.636348724365234
    8. ' ' → logprob: -10.136348724365234
    9. '">' → logprob: -11.136348724365234
    10. '>[' → logprob: -12.261348724365234

Token 140: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4742893576622009
    2. '>' → logprob: -0.9742893576622009
    3. '>d' → logprob: -8.849288940429688
    4. ' ' → logprob: -10.349288940429688
    5. '[' → logprob: -10.474288940429688
    6. '">' → logprob: -13.224288940429688
    7. '＞' → logprob: -13.849288940429688
    8. '   ' → logprob: -14.224288940429688
    9. '()>' → logprob: -14.349288940429688
    10. '>null' → logprob: -15.161788940429688

Token 141: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.34844982624053955
    2. 'd' → logprob: -1.2234498262405396
    3. '	d' → logprob: -13.34844970703125
    4. ' ' → logprob: -13.72344970703125
    5. ')d' → logprob: -14.47344970703125
    6. '<|end|>' → logprob: -14.72344970703125
    7. '>d' → logprob: -15.22344970703125
    8. ' ' → logprob: -15.59844970703125
    9. '=d' → logprob: -15.91094970703125
    10. '   ' → logprob: -15.91094970703125

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004562943649943918
    2. '+' → logprob: -8.500455856323242
    3. '_' → logprob: -8.750455856323242
    4. ' +' → logprob: -9.375455856323242
    5. ' ' → logprob: -12.125455856323242
    6. 'd' → logprob: -13.750455856323242
    7. ' d' → logprob: -14.375455856323242
    8. '+d' → logprob: -14.687955856323242
    9. ' _' → logprob: -15.375455856323242
    10. '' → logprob: -15.500455856323242

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3486289978027344
    2. ':
' → logprob: -1.2236289978027344
    3. '):
' → logprob: -9.223628997802734
    4. '               ' → logprob: -10.348628997802734
    5. ':
' → logprob: -11.473628997802734
    6. '):' → logprob: -11.473628997802734
    7. ':

' → logprob: -11.723628997802734
    8. ' :
' → logprob: -11.848628997802734
    9. '           ' → logprob: -12.098628997802734
    10. '():
' → logprob: -12.973628997802734

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003689509117975831
    2. ':' → logprob: -5.878689289093018
    3. ':
' → logprob: -7.378689289093018
    4. '           ' → logprob: -9.378689765930176
    5. '):
' → logprob: -10.253689765930176
    6. ',' → logprob: -10.753689765930176
    7. ' :
' → logprob: -10.878689765930176
    8. ' :' → logprob: -11.128689765930176
    9. '=' → logprob: -11.378689765930176
    10. '                
' → logprob: -11.503689765930176

Token 145: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.02306714840233326
    2. 'dist' (adapté à ' dist') → logprob: -3.8980672359466553
    3. '               ' → logprob: -6.148066997528076
    4. '                ' → logprob: -8.273067474365234
    5. '                   ' → logprob: -9.523067474365234
    6. '_dist' → logprob: -11.273067474365234
    7. '	dist' → logprob: -11.398067474365234
    8. ' ' → logprob: -11.773067474365234
    9. ' ' → logprob: -12.023067474365234
    10. '(dist' → logprob: -13.273067474365234

Token 146: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.3080716346157715e-05
    2. '[' → logprob: -11.125022888183594
    3. '[next' → logprob: -12.750022888183594
    4. ' [' → logprob: -13.000022888183594
    5. '```' → logprob: -14.625022888183594
    6. ']' → logprob: -14.625022888183594
    7. '   ' → logprob: -15.375022888183594
    8. 'n' → logprob: -15.375022888183594
    9. '][' → logprob: -15.750022888183594
    10. '\[' → logprob: -15.750022888183594

Token 147: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.870950215263292e-05
    2. 'x' → logprob: -10.000048637390137
    3. '```' → logprob: -14.375048637390137
    4. '   ' → logprob: -14.625048637390137
    5. '       ' → logprob: -14.625048637390137
    6. 't' → logprob: -14.625048637390137
    7. '1' → logprob: -14.625048637390137
    8. ']' → logprob: -15.750048637390137
    9. ' nxt' → logprob: -15.750048637390137
    10. '[' → logprob: -15.875048637390137

Token 148: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6068714261054993
    2. ']' → logprob: -1.1068713665008545
    3. '=' → logprob: -2.1068713665008545
    4. ']=' → logprob: -6.606871604919434
    5. ' ]' → logprob: -6.731871604919434
    6. ')' → logprob: -9.106871604919434
    7. ' ' → logprob: -9.981871604919434
    8. ',' → logprob: -11.856871604919434
    9. '[' → logprob: -12.106871604919434
    10. ' =)' → logprob: -12.231871604919434

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. '＝' → logprob: -15.701414108276367
    4. ',' → logprob: -16.201414108276367
    5. '.=' → logprob: -16.701414108276367
    6. ')' → logprob: -16.951414108276367
    7. ' ' → logprob: -16.951414108276367
    8. ' =
' → logprob: -17.076414108276367
    9. '>' → logprob: -17.076414108276367
    10. '[' → logprob: -17.576414108276367

Token 150: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5759397745132446
    2. ' d' → logprob: -0.8259397745132446
    3. '               ' → logprob: -16.575939178466797
    4. '	d' → logprob: -16.825939178466797
    5. '                   ' → logprob: -16.950939178466797
    6. ')d' → logprob: -17.075939178466797
    7. ' ' → logprob: -17.700939178466797
    8. '```' → logprob: -17.825939178466797
    9. '                ' → logprob: -18.200939178466797
    10. '$d' → logprob: -18.325939178466797

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -14.12500286102295
    3. '[' → logprob: -14.75000286102295
    4. ',' → logprob: -14.75000286102295
    5. '+' → logprob: -15.12500286102295
    6. ' +' → logprob: -16.437501907348633
    7. '```' → logprob: -16.625001907348633
    8. '_' → logprob: -16.687501907348633
    9. '' → logprob: -16.750001907348633
    10. '[
' → logprob: -17.000001907348633

Token 152: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.302704761968926e-05
    2. '<|end|>' → logprob: -10.500073432922363
    3. '			' → logprob: -10.875073432922363
    4. ' he' → logprob: -11.375073432922363
    5. ',' → logprob: -12.125073432922363
    6. '              ' → logprob: -13.125073432922363
    7. '                
' → logprob: -13.375073432922363
    8. '       ' → logprob: -13.875073432922363
    9. '                ' → logprob: -13.875073432922363
    10. '           ' → logprob: -14.375073432922363

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002353640884393826
    2. ' he' → logprob: -8.500235557556152
    3. '			' → logprob: -11.250235557556152
    4. '<|end|>' → logprob: -11.500235557556152
    5. '              ' → logprob: -12.750235557556152
    6. 'he' → logprob: -13.875235557556152
    7. '                ' → logprob: -14.000235557556152
    8. '       ' → logprob: -14.250235557556152
    9. '                
' → logprob: -14.375235557556152
    10. '           ' → logprob: -14.375235557556152

Token 154: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.054930463433265686
    2. ' he' → logprob: -2.9299304485321045
    3. '               ' → logprob: -10.054930686950684
    4. '           ' → logprob: -13.304930686950684
    5. '   ' → logprob: -14.054930686950684
    6. '                   ' → logprob: -14.054930686950684
    7. 'heap' → logprob: -14.679930686950684
    8. '              ' → logprob: -15.304930686950684
    9. '```' → logprob: -15.304930686950684
    10. ' ' → logprob: -15.429930686950684

Token 155: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0280383548888494e-06
    2. 'pp' → logprob: -14.625000953674316
    3. ' app' → logprob: -14.875000953674316
    4. 'ap' → logprob: -16.500001907348633
    5. 'App' → logprob: -17.500001907348633
    6. 'append' → logprob: -18.125001907348633
    7. 'apps' → logprob: -18.625001907348633
    8. 'APP' → logprob: -19.000001907348633
    9. '(app' → logprob: -19.000001907348633
    10. '	app' → logprob: -19.125001907348633

Token 156: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.319370302458992e-06
    2. 'push' → logprob: -12.500005722045898
    3. 'sh' → logprob: -14.125005722045898
    4. 'op' → logprob: -14.625005722045898
    5. '   ' → logprob: -16.2500057220459
    6. 'app' → logprob: -17.0000057220459
    7. 'u' → logprob: -17.1250057220459
    8. '```' → logprob: -17.7500057220459
    9. 'us' → logprob: -18.0000057220459
    10. 'p' → logprob: -18.1250057220459

Token 157: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -12.87500286102295
    3. '((' → logprob: -15.87500286102295
    4. '(
' → logprob: -16.250003814697266
    5. '(queue' → logprob: -17.250003814697266
    6. '```' → logprob: -18.625003814697266
    7. ')' → logprob: -18.875003814697266
    8. 'que' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.875003814697266
    10. ',' → logprob: -20.250003814697266

Token 158: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.03810529410839081
    2. '(' → logprob: -3.2881052494049072
    3. ' que' → logprob: -10.413105010986328
    4. ')' → logprob: -11.288105010986328
    5. '   ' → logprob: -11.413105010986328
    6. 'ques' → logprob: -12.663105010986328
    7. 'quee' → logprob: -13.163105010986328
    8. '```' → logprob: -13.163105010986328
    9. ',' → logprob: -14.413105010986328
    10. '  ' → logprob: -14.663105010986328

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05187611281871796
    2. '(' → logprob: -3.0518760681152344
    3. ' (' → logprob: -6.176876068115234
    4. ',(' → logprob: -7.301876068115234
    5. ' ,' → logprob: -7.676876068115234
    6. '((' → logprob: -10.426876068115234
    7. '(n' → logprob: -10.926876068115234
    8. ')' → logprob: -11.676876068115234
    9. '(queue' → logprob: -11.801876068115234
    10. '   ' → logprob: -13.551876068115234

Token 160: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.08184055238962173
    2. ' (' → logprob: -2.5818405151367188
    3. '(' → logprob: -5.831840515136719
    4. '(n' → logprob: -11.456840515136719
    5. '((' → logprob: -13.331840515136719
    6. ' ' → logprob: -14.956840515136719
    7. '(dp' → logprob: -15.081840515136719
    8. '(dist' → logprob: -15.081840515136719
    9. '(D' → logprob: -15.331840515136719
    10. '   ' → logprob: -15.581840515136719

Token 161: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000194361709873192
    2. ' d' → logprob: -8.750194549560547
    3. 'dist' → logprob: -10.250194549560547
    4. ' dist' → logprob: -16.250194549560547
    5. '   ' → logprob: -16.375194549560547
    6. '1' → logprob: -17.000194549560547
    7. ')d' → logprob: -17.250194549560547
    8. '(d' → logprob: -17.375194549560547
    9. ')' → logprob: -17.375194549560547
    10. ' ' → logprob: -17.875194549560547

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. ',' → logprob: -10.75002384185791
    3. '_' → logprob: -14.00002384185791
    4. ' ,' → logprob: -14.37502384185791
    5. ' ' → logprob: -16.000022888183594
    6. '' → logprob: -16.375022888183594
    7. '```' → logprob: -16.875022888183594
    8. '_,' → logprob: -17.125022888183594
    9. '۱' → logprob: -17.312522888183594
    10. ',d' → logprob: -17.312522888183594

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026455431361682713
    2. ',n' → logprob: -8.250264167785645
    3. ' ,' → logprob: -12.750264167785645
    4. ',
' → logprob: -15.125264167785645
    5. '‌,' → logprob: -17.62526512145996
    6. ')' → logprob: -17.75026512145996
    7. ',next' → logprob: -17.75026512145996
    8. 'n' → logprob: -18.50026512145996
    9. '[' → logprob: -18.87526512145996
    10. '`,' → logprob: -18.87526512145996

Token 164: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14268651604652405
    2. ' nxt' → logprob: -2.017686605453491
    3. '	n' → logprob: -12.89268684387207
    4. ' n' → logprob: -12.89268684387207
    5. ' ' → logprob: -13.76768684387207
    6. '[n' → logprob: -14.01768684387207
    7. ')n' → logprob: -14.39268684387207
    8. '   ' → logprob: -14.39268684387207
    9. 'n't' → logprob: -15.01768684387207
    10. ')' → logprob: -15.14268684387207

Token 165: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008369080605916679
    2. ')' → logprob: -7.2508368492126465
    3. '))
' → logprob: -9.000837326049805
    4. ' ))' → logprob: -13.500837326049805
    5. ')))' → logprob: -13.750837326049805
    6. ')
' → logprob: -14.500837326049805
    7. '       ' → logprob: -16.125837326049805
    8. '           ' → logprob: -16.250837326049805
    9. '))

' → logprob: -16.250837326049805
    10. '   ' → logprob: -16.625837326049805

Token 166: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0967693105340004
    2. '   ' → logprob: -2.596769332885742
    3. ' return' → logprob: -4.096769332885742
    4. '	return' → logprob: -6.971769332885742
    5. ':return' → logprob: -9.971769332885742
    6. ')' → logprob: -10.471769332885742
    7. '<|end|>' → logprob: -10.596769332885742
    8. ' ' → logprob: -11.346769332885742
    9. '       ' → logprob: -11.721769332885742
    10. ')return' → logprob: -11.971769332885742

Token 168: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008635842241346836
    2. ' dist' → logprob: -4.758635997772217
    3. '(dist' → logprob: -10.758635520935059
    4. '	dist' → logprob: -17.258636474609375
    5. '_dist' → logprob: -18.633636474609375
    6. 'Dist' → logprob: -20.508636474609375
    7. '.dist' → logprob: -20.883636474609375
    8. 'diff' → logprob: -22.133636474609375
    9. '[' → logprob: -22.258636474609375
    10. '   ' → logprob: -23.008636474609375

Token 169: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2562507390975952
    2. '<|end|>' → logprob: -1.6312507390975952
    3. '

' → logprob: -5.381250858306885
    4. '[' → logprob: -5.381250858306885
    5. '(N' → logprob: -5.506250858306885
    6. '(' → logprob: -5.881250858306885
    7. '' → logprob: -6.006250858306885
    8. '(
' → logprob: -6.381250858306885
    9. '[N' → logprob: -6.631250858306885
    10. '[
' → logprob: -6.631250858306885

Token 170: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06540874391794205
    2. '
' → logprob: -3.065408706665039
    3. '#' → logprob: -4.690408706665039
    4. 'n' → logprob: -5.440408706665039
    5. '(N' → logprob: -7.565408706665039
    6. '(' → logprob: -7.815408706665039
    7. 'def' → logprob: -7.815408706665039
    8. '' → logprob: -7.815408706665039
    9. '<|end|>' → logprob: -8.065408706665039
    10. '  
' → logprob: -8.315408706665039

Token 171: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008875728584825993
    2. '=' → logprob: -5.508875846862793
    3. ' =' → logprob: -5.508875846862793
    4. ' ,' → logprob: -7.258875846862793
    5. ' ' → logprob: -11.258875846862793
    6. ',N' → logprob: -12.008875846862793
    7. '<|end|>' → logprob: -13.258875846862793
    8. ')' → logprob: -14.133875846862793
    9. ',int' → logprob: -14.133875846862793
    10. ',n' → logprob: -14.133875846862793

Token 172: ' ir' (ID: 3288)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34848129749298096
    2. 'int' → logprob: -1.348481297492981
    3. ' ir' → logprob: -3.9734811782836914
    4. ' ' → logprob: -4.473481178283691
    5. 'ir' → logprob: -6.098481178283691
    6. '10' → logprob: -6.723481178283691
    7. '5' → logprob: -7.473481178283691
    8. ' lr' → logprob: -8.973481178283691
    9. '0' → logprob: -9.848481178283691
    10. 'lr' → logprob: -9.973481178283691

Token 173: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.368516743183136
    2. ' ' → logprob: -1.9935166835784912
    3. ' M' → logprob: -2.368516683578491
    4. 'M' → logprob: -3.618516683578491
    5. ',M' → logprob: -3.743516683578491
    6. '<|end|>' → logprob: -3.868516683578491
    7. ' ,' → logprob: -6.99351692199707
    8. ',K' → logprob: -7.24351692199707
    9. '  ' → logprob: -7.36851692199707
    10. ' K' → logprob: -7.49351692199707

Token 174: 'graph' (ID: 7978)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.07908817380666733
    2. 'graph' → logprob: -2.5790882110595703
    3. 'K' → logprob: -9.20408821105957
    4. 'Q' → logprob: -10.07908821105957
    5. ' graph' → logprob: -10.45408821105957
    6. ' M' → logprob: -11.82908821105957
    7. 'N' → logprob: -12.07908821105957
    8. 'E' → logprob: -12.32908821105957
    9. 'Graph' → logprob: -14.32908821105957
    10. '```' → logprob: -14.32908821105957

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043100386857986
    2. '=' → logprob: -3.2880430221557617
    3. '[' → logprob: -14.663043022155762
    4. ' ' → logprob: -15.288043022155762
    5. ')' → logprob: -15.413043022155762
    6. '=[]' → logprob: -16.038043975830078
    7. ']' → logprob: -16.288043975830078
    8. 's' → logprob: -16.663043975830078
    9. ',' → logprob: -16.663043975830078
    10. '[]' → logprob: -16.788043975830078

Token 176: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030292464420199394
    2. ' [[]' → logprob: -3.530292510986328
    3. '{' → logprob: -7.530292510986328
    4. '{}' → logprob: -13.030292510986328
    5. ' [' → logprob: -13.155292510986328
    6. 'default' → logprob: -14.905292510986328
    7. '   ' → logprob: -15.530292510986328
    8. ' {' → logprob: -15.780292510986328
    9. ' ' → logprob: -16.155292510986328
    10. '[]' → logprob: -16.530292510986328

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2817537486553192
    2. 'for' → logprob: -1.4067537784576416
    3. ')' → logprob: -7.7817535400390625
    4. ',' → logprob: -9.656753540039062
    5. ' ' → logprob: -9.656753540039062
    6. ']' → logprob: -10.656753540039062
    7. '	for' → logprob: -11.781753540039062
    8. '
' → logprob: -11.906753540039062
    9. ' f' → logprob: -12.781753540039062
    10. '+' → logprob: -13.156753540039062

Token 178: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013951188884675503
    2. 'in' → logprob: -7.251395225524902
    3. 'range' → logprob: -8.376395225524902
    4. ' range' → logprob: -8.751395225524902
    5. ' in' → logprob: -8.876395225524902
    6. 'i' → logprob: -9.376395225524902
    7. ' _' → logprob: -10.126395225524902
    8. ' i' → logprob: -11.376395225524902
    9. '(' → logprob: -12.126395225524902
    10. '(_' → logprob: -12.626395225524902

Token 179: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3211100697517395
    2. ' in' → logprob: -1.3211100101470947
    3. 'range' → logprob: -4.946110248565674
    4. ' range' → logprob: -7.821110248565674
    5. 'i' → logprob: -8.821109771728516
    6. '_' → logprob: -9.071109771728516
    7. ' ' → logprob: -10.821109771728516
    8. ' i' → logprob: -11.071109771728516
    9. 'N' → logprob: -13.446109771728516
    10. '(N' → logprob: -13.571109771728516

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234356038272381
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -14.380234718322754
    4. '(N' → logprob: -18.880233764648438
    5. '	range' → logprob: -20.755233764648438
    6. 'in' → logprob: -21.880233764648438
    7. ' ' → logprob: -22.130233764648438
    8. '   ' → logprob: -22.255233764648438
    9. '0' → logprob: -22.505233764648438
    10. ')' → logprob: -22.630233764648438

Token 181: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'N' → logprob: -14.750059127807617
    4. '(n' → logprob: -16.625059127807617
    5. ' (' → logprob: -17.000059127807617
    6. '((' → logprob: -17.500059127807617
    7. '(
' → logprob: -18.625059127807617
    8. ')' → logprob: -19.750059127807617
    9. '	N' → logprob: -20.000059127807617
    10. ')(' → logprob: -20.500059127807617

Token 182: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010915198363363743
    2. ' +' → logprob: -6.876091480255127
    3. ')]' → logprob: -9.751091957092285
    4. ')' → logprob: -15.126091957092285
    5. '+
' → logprob: -15.501091957092285
    6. '+

' → logprob: -17.12609100341797
    7. '+)' → logprob: -17.50109100341797
    8. '+]' → logprob: -17.50109100341797
    9. ')])' → logprob: -18.62609100341797
    10. '+i' → logprob: -18.62609100341797

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '2' → logprob: -17.250804901123047
    4. '   ' → logprob: -17.875804901123047
    5. ')' → logprob: -18.250804901123047
    6. '(' → logprob: -18.750804901123047
    7. '  ' → logprob: -18.875804901123047
    8. '0' → logprob: -19.313304901123047
    9. '7' → logprob: -19.375804901123047
    10. '１' → logprob: -19.625804901123047

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -17.625
    4. '   ' → logprob: -18.875
    5. '１' → logprob: -19.375
    6. '```' → logprob: -19.625
    7. '(' → logprob: -20.25
    8. '2' → logprob: -20.75
    9. '
' → logprob: -21.0
    10. '  ' → logprob: -21.875

Token 185: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24150478839874268
    2. ')]' → logprob: -1.7415047883987427
    3. ')' → logprob: -3.241504669189453
    4. '])' → logprob: -8.616504669189453
    5. ']
' → logprob: -11.866504669189453
    6. ')])' → logprob: -13.491504669189453
    7. ' ]' → logprob: -13.616504669189453
    8. '])]' → logprob: -14.116504669189453
    9. '()]' → logprob: -14.241504669189453
    10. ')],' → logprob: -15.491504669189453

Token 186: 'for' (ID: 1938)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.003107130527496338
    2. 'for' → logprob: -6.378107070922852
    3. 'Q' → logprob: -6.878107070922852
    4. 'E' → logprob: -8.128107070922852
    5. 'u' → logprob: -10.503107070922852
    6. 'm' → logprob: -11.378107070922852
    7. 'K' → logprob: -11.503107070922852
    8. ' M' → logprob: -11.628107070922852
    9. 'U' → logprob: -12.378107070922852
    10. 'a' → logprob: -13.128107070922852

Token 187: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011142375878989697
    2. ' _' → logprob: -4.511142253875732
    3. ' i' → logprob: -9.38614273071289
    4. '_i' → logprob: -11.88614273071289
    5. 'i' → logprob: -12.88614273071289
    6. ' ' → logprob: -13.63614273071289
    7. '_=' → logprob: -17.63614273071289
    8. ' in' → logprob: -18.26114273071289
    9. '＿' → logprob: -18.26114273071289
    10. '__' → logprob: -18.26114273071289

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22567082941532135
    2. 'in' → logprob: -1.6006708145141602
    3. ' ' → logprob: -8.35067081451416
    4. 'i' → logprob: -11.72567081451416
    5. '```' → logprob: -12.47567081451416
    6. ' i' → logprob: -12.60067081451416
    7. '	in' → logprob: -13.35067081451416
    8. '<|end|>' → logprob: -13.85067081451416
    9. 'n' → logprob: -13.97567081451416
    10. 'import' → logprob: -14.35067081451416

Token 189: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033581978641450405
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -16.500335693359375
    4. '(range' → logprob: -16.750335693359375
    5. 'graph' → logprob: -16.875335693359375
    6. 'rang' → logprob: -17.250335693359375
    7. 'r' → logprob: -17.375335693359375
    8. ' ' → logprob: -17.750335693359375
    9. 'ran' → logprob: -18.625335693359375
    10. 'ra' → logprob: -18.750335693359375

Token 190: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001705246395431459
    2. '(' → logprob: -9.375170707702637
    3. '(M' → logprob: -9.625170707702637
    4. 'N' → logprob: -11.125170707702637
    5. '(int' → logprob: -13.500170707702637
    6. '(Q' → logprob: -13.625170707702637
    7. '((' → logprob: -14.625170707702637
    8. '(n' → logprob: -14.625170707702637
    9. '(K' → logprob: -14.875170707702637
    10. ' (' → logprob: -15.625170707702637

Token 191: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10142765939235687
    2. ' -' → logprob: -2.3514275550842285
    3. '):' → logprob: -6.7264275550842285
    4. '):
' → logprob: -11.726428031921387
    5. ' ):' → logprob: -12.351428031921387
    6. '*' → logprob: -13.101428031921387
    7. ' ' → logprob: -13.226428031921387
    8. ')' → logprob: -13.476428031921387
    9. '+' → logprob: -14.101428031921387
    10. '1' → logprob: -14.351428031921387

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '2' → logprob: -16.252185821533203
    4. '0' → logprob: -17.752185821533203
    5. '１' → logprob: -18.314685821533203
    6. '<|end|>' → logprob: -18.439685821533203
    7. '```' → logprob: -18.564685821533203
    8. ')' → logprob: -19.127185821533203
    9. '۱' → logprob: -19.564685821533203
    10. '   ' → logprob: -19.627185821533203

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -15.375051498413086
    4. '１' → logprob: -17.187551498413086
    5. '১' → logprob: -17.875051498413086
    6. '۱' → logprob: -17.937551498413086
    7. '  ' → logprob: -18.125051498413086
    8. '   ' → logprob: -18.125051498413086
    9. '१' → logprob: -18.250051498413086
    10. '0' → logprob: -18.937551498413086

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009771197102963924
    2. '):
' → logprob: -4.759771347045898
    3. ':' → logprob: -7.134771347045898
    4. ' ):' → logprob: -8.634771347045898
    5. ')' → logprob: -8.759771347045898
    6. '):
' → logprob: -11.509771347045898
    7. ',' → logprob: -11.759771347045898
    8. ']:' → logprob: -13.259771347045898
    9. ' ):
' → logprob: -13.759771347045898
    10. ':
' → logprob: -14.384771347045898

Token 195: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3933124840259552
    2. 'u' → logprob: -1.5183124542236328
    3. ' u' → logprob: -2.768312454223633
    4. ' a' → logprob: -3.143312454223633
    5. '   ' → logprob: -9.143312454223633
    6. 'x' → logprob: -10.893312454223633
    7. '	u' → logprob: -10.893312454223633
    8. '	a' → logprob: -11.268312454223633
    9. 's' → logprob: -11.643312454223633
    10. 'v' → logprob: -12.143312454223633

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.029807770624756813
    2. 'u' → logprob: -3.5298078060150146
    3. 'x' → logprob: -10.404808044433594
    4. 'p' → logprob: -11.404808044433594
    5. ' a' → logprob: -12.029808044433594
    6. 'A' → logprob: -12.654808044433594
    7. 'v' → logprob: -13.029808044433594
    8. 'f' → logprob: -13.654808044433594
    9. ' u' → logprob: -13.779808044433594
    10. '   ' → logprob: -14.029808044433594

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018520120065659285
    2. ',b' → logprob: -6.876852035522461
    3. ' ,' → logprob: -7.126852035522461
    4. ',a' → logprob: -12.126852035522461
    5. ',input' → logprob: -13.376852035522461
    6. ',v' → logprob: -13.501852035522461
    7. 'b' → logprob: -13.501852035522461
    8. ',n' → logprob: -13.626852035522461
    9. ',int' → logprob: -13.876852035522461
    10. ',user' → logprob: -14.501852035522461

Token 198: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759413838386536
    2. ' b' → logprob: -0.8259413838386536
    3. ' ' → logprob: -13.20094108581543
    4. '<|end|>' → logprob: -17.20094108581543
    5. ',b' → logprob: -19.82594108581543
    6. '_' → logprob: -20.07594108581543
    7. 'c' → logprob: -20.20094108581543
    8. 'space' → logprob: -20.45094108581543
    9. '_b' → logprob: -20.57594108581543
    10. ' ‌' → logprob: -21.07594108581543

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -16.264163970947266
    4. ',' → logprob: -17.764163970947266
    5. '=int' → logprob: -18.014163970947266
    6. '=

' → logprob: -18.139163970947266
    7. '=input' → logprob: -18.764163970947266
    8. ' ' → logprob: -18.764163970947266
    9. '=line' → logprob: -18.764163970947266
    10. '_=' → logprob: -18.889163970947266

Token 200: ' lr' (ID: 58770)
  Prédit: ' lr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lr' → logprob: -0.38694578409194946
    2. 'lr' → logprob: -1.1369457244873047
    3. ' ' → logprob: -10.011945724487305
    4. ' ' → logprob: -11.511945724487305
    5. ' ir' → logprob: -11.636945724487305
    6. 'ir' → logprob: -12.011945724487305
    7. '_lr' → logprob: -13.136945724487305
    8. ' map' → logprob: -13.761945724487305
    9. 'map' → logprob: -14.511945724487305
    10. '.lr' → logprob: -15.386945724487305

Token 201: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017181389266625047
    2. '()
' → logprob: -6.501718044281006
    3. 'a' → logprob: -9.376718521118164
    4. '();' → logprob: -9.876718521118164
    5. '(' → logprob: -10.126718521118164
    6. ')' → logprob: -11.376718521118164
    7. '()]' → logprob: -12.376718521118164
    8. ' ()' → logprob: -12.501718521118164
    9. '[' → logprob: -12.751718521118164
    10. '()
' → logprob: -13.126718521118164

Token 202: '   ' (ID: 271)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6749354600906372
    2. '   ' → logprob: -1.1749354600906372
    3. 'graph' → logprob: -1.7999354600906372
    4. '	graph' → logprob: -4.174935340881348
    5. '
' → logprob: -7.424935340881348
    6. ' 
' → logprob: -8.299935340881348
    7. '    
' → logprob: -8.799935340881348
    8. '(graph' → logprob: -9.049935340881348
    9. '<|end|>' → logprob: -9.924935340881348
    10. '.graph' → logprob: -10.924935340881348

Token 203: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.38690173625946045
    2. ' graph' → logprob: -1.1369017362594604
    3. '	graph' → logprob: -11.01190185546875
    4. '.graph' → logprob: -12.63690185546875
    5. '(graph' → logprob: -12.88690185546875
    6. '   ' → logprob: -12.88690185546875
    7. '_graph' → logprob: -13.13690185546875
    8. 'a' → logprob: -13.26190185546875
    9. ' 
' → logprob: -13.76190185546875
    10. ' a' → logprob: -15.01190185546875

Token 204: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -11.75001049041748
    3. 'a' → logprob: -12.87501049041748
    4. '[b' → logprob: -14.75001049041748
    5. ' [' → logprob: -16.375011444091797
    6. '```' → logprob: -18.750011444091797
    7. ')[' → logprob: -19.000011444091797
    8. '[s' → logprob: -19.625011444091797
    9. '[A' → logprob: -19.875011444091797
    10. '][' → logprob: -20.000011444091797

Token 205: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0023661323357373476
    2. '[a' → logprob: -6.127366065979004
    3. ']' → logprob: -9.377366065979004
    4. '.append' → logprob: -10.002366065979004
    5. '.' → logprob: -10.752366065979004
    6. '[' → logprob: -12.002366065979004
    7. 'a' → logprob: -12.127366065979004
    8. ' ].' → logprob: -12.127366065979004
    9. '[b' → logprob: -12.502366065979004
    10. '   ' → logprob: -12.752366065979004

Token 206: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.75
    4. 'appen' → logprob: -17.75
    5. 'app' → logprob: -19.125
    6. '	append' → logprob: -19.75
    7. '_append' → logprob: -19.875
    8. 'Append' → logprob: -20.125
    9. 'push' → logprob: -20.375
    10. 'ap' → logprob: -21.125

Token 207: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.061054359131958e-06
    2. 'b' → logprob: -11.750007629394531
    3. '(' → logprob: -16.12500762939453
    4. ' b' → logprob: -18.50000762939453
    5. ')b' → logprob: -19.37500762939453
    6. '(
' → logprob: -19.62500762939453
    7. '	b' → logprob: -20.00000762939453
    8. ' (' → logprob: -21.00000762939453
    9. '(B' → logprob: -22.25000762939453
    10. ',b' → logprob: -22.62500762939453

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759493708610535
    2. ')
' → logprob: -0.8259493708610535
    3. ')
' → logprob: -11.950949668884277
    4. '   ' → logprob: -13.200949668884277
    5. ' )
' → logprob: -14.200949668884277
    6. ')a' → logprob: -14.450949668884277
    7. ' )' → logprob: -15.825949668884277
    8. ')b' → logprob: -16.57594871520996
    9. ')

' → logprob: -16.95094871520996
    10. 'a' → logprob: -17.07594871520996

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012916464766021818
    2. '<|end|>' → logprob: -9.500128746032715
    3. '    
' → logprob: -10.375128746032715
    4. ' ' → logprob: -12.625128746032715
    5. '   ' → logprob: -13.000128746032715
    6. '  
' → logprob: -13.125128746032715
    7. '
' → logprob: -13.125128746032715
    8. ')' → logprob: -13.125128746032715
    9. ' 
' → logprob: -13.125128746032715
    10. '[' → logprob: -13.125128746032715

Token 210: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.10023859143257141
    2. ' graph' → logprob: -2.350238561630249
    3. '	graph' → logprob: -10.725238800048828
    4. '   ' → logprob: -11.600238800048828
    5. '(graph' → logprob: -14.350238800048828
    6. '.graph' → logprob: -16.600238800048828
    7. '_graph' → logprob: -16.850238800048828
    8. 'graphql' → logprob: -17.225238800048828
    9. 'Graph' → logprob: -17.725238800048828
    10. ' ' → logprob: -18.975238800048828

Token 211: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.87501335144043
    3. '[a' → logprob: -12.00001335144043
    4. ' [' → logprob: -17.37501335144043
    5. 'b' → logprob: -18.37501335144043
    6. '[s' → logprob: -18.75001335144043
    7. '[B' → logprob: -18.75001335144043
    8. '[
' → logprob: -19.75001335144043
    9. '```' → logprob: -20.62501335144043
    10. '[u' → logprob: -21.87501335144043

Token 212: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.008610556833446026
    2. ').' → logprob: -4.883610725402832
    3. '.' → logprob: -7.508610725402832
    4. ']' → logprob: -8.258610725402832
    5. '.append' → logprob: -9.008610725402832
    6. ')' → logprob: -9.633610725402832
    7. '}.' → logprob: -12.633610725402832
    8. ' .' → logprob: -13.758610725402832
    9. '   ' → logprob: -13.883610725402832
    10. ' ].' → logprob: -14.008610725402832

Token 213: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. 'appen' → logprob: -14.750000953674316
    3. ' append' → logprob: -17.0
    4. '.append' → logprob: -18.5
    5. 'app' → logprob: -18.75
    6. '	append' → logprob: -19.25
    7. 'a' → logprob: -20.625
    8. 'appe' → logprob: -20.75
    9. 'pp' → logprob: -21.0
    10. '_append' → logprob: -21.875

Token 214: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. 'a' → logprob: -14.25001335144043
    4. '(
' → logprob: -17.50001335144043
    5. ' (' → logprob: -19.00001335144043
    6. ')' → logprob: -19.25001335144043
    7. '(A' → logprob: -20.87501335144043
    8. ')a' → logprob: -21.00001335144043
    9. '((' → logprob: -21.12501335144043
    10. '()' → logprob: -21.12501335144043

Token 215: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. ')a' → logprob: -19.375001907348633
    6. ')

' → logprob: -19.500001907348633
    7. ')#' → logprob: -19.500001907348633
    8. '`)' → logprob: -19.875001907348633
    9. '),' → logprob: -20.000001907348633
    10. '))' → logprob: -20.125001907348633

Token 216: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007643067743629217
    2. 'start' → logprob: -5.507643222808838
    3. 'd' → logprob: -6.007643222808838
    4. 'x' → logprob: -8.63264274597168
    5. 'root' → logprob: -8.75764274597168
    6. 'first' → logprob: -9.00764274597168
    7. 'D' → logprob: -9.25764274597168
    8. 'ans' → logprob: -9.63264274597168
    9. 'dp' → logprob: -9.63264274597168
    10. 'p' → logprob: -10.00764274597168

Token 217: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.684405505657196
    2. '=' → logprob: -1.0594055652618408
    3. '_' → logprob: -3.184405565261841
    4. '_from' → logprob: -3.559405565261841
    5. ' =' → logprob: -3.684405565261841
    6. '_start' → logprob: -4.184405326843262
    7. '_a' → logprob: -4.434405326843262
    8. '(' → logprob: -5.059405326843262
    9. 'A' → logprob: -5.309405326843262
    10. 's' → logprob: -5.559405326843262

Token 218: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001330360071733594
    2. ' d' → logprob: -6.626330375671387
    3. '(d' → logprob: -12.876330375671387
    4. '[' → logprob: -13.876330375671387
    5. '(' → logprob: -14.876330375671387
    6. '[d' → logprob: -15.376330375671387
    7. 'dist' → logprob: -16.00132942199707
    8. '   ' → logprob: -17.12632942199707
    9. '	d' → logprob: -17.25132942199707
    10. '_d' → logprob: -17.25132942199707

Token 219: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.167648876318708e-05
    2. 'ijk' → logprob: -10.875041961669922
    3. 'ij' → logprob: -11.125041961669922
    4. '(' → logprob: -12.500041961669922
    5. 'ist' → logprob: -12.625041961669922
    6. 'jik' → logprob: -15.250041961669922
    7. '(i' → logprob: -15.500041961669922
    8. 'i' → logprob: -15.625041961669922
    9. 'ik' → logprob: -15.875041961669922
    10. 'ijks' → logprob: -17.250041961669922

Token 220: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -12.375005722045898
    3. '(s' → logprob: -14.500005722045898
    4. '(
' → logprob: -15.375005722045898
    5. ' (' → logprob: -15.500005722045898
    6. '(N' → logprob: -16.0000057220459
    7. '(dist' → logprob: -16.1250057220459
    8. '((' → logprob: -16.7500057220459
    9. 'a' → logprob: -16.8750057220459
    10. 'def' → logprob: -17.2500057220459

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.885492621222511e-05
    2. ' ' → logprob: -9.625068664550781
    3. '2' → logprob: -13.500068664550781
    4. 'N' → logprob: -14.375068664550781
    5. '(' → logprob: -15.875068664550781
    6. ')' → logprob: -16.00006866455078
    7. '   ' → logprob: -16.18756866455078
    8. '3' → logprob: -16.56256866455078
    9. 'a' → logprob: -16.87506866455078
    10. 's' → logprob: -17.06256866455078

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06214873120188713
    2. ')
' → logprob: -2.8121488094329834
    3. ')

' → logprob: -8.687149047851562
    4. ')
' → logprob: -11.812149047851562
    5. '[' → logprob: -12.937149047851562
    6. ')[' → logprob: -13.687149047851562
    7. ' )' → logprob: -15.312149047851562
    8. ')#' → logprob: -15.937149047851562
    9. ')

' → logprob: -15.937149047851562
    10. ')`' → logprob: -16.187149047851562

Token 223: 'dist' (ID: 24126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6378276944160461
    2. 'max' → logprob: -1.8878276348114014
    3. 'dist' → logprob: -2.3878276348114014
    4. 'print' → logprob: -2.6378276348114014
    5. 'ans' → logprob: -3.5128276348114014
    6. 'node' → logprob: -4.0128278732299805
    7. 'q' → logprob: -4.0128278732299805
    8. 'idx' → logprob: -4.1378278732299805
    9. 'far' → logprob: -4.7628278732299805
    10. 'x' → logprob: -4.8878278732299805

Token 224: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' sorted' (ID: 20099)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014032802544534206
    2. ' d' → logprob: -4.88903284072876
    3. 'dist' → logprob: -5.88903284072876
    4. '[' → logprob: -6.26403284072876
    5. '[d' → logprob: -6.51403284072876
    6. ' [' → logprob: -9.764032363891602
    7. 'list' → logprob: -10.014032363891602
    8. 'max' → logprob: -10.514032363891602
    9. '[-' → logprob: -10.764032363891602
    10. '[max' → logprob: -10.889032363891602

Token 226: '([(' (ID: 156282)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.010458730161190033
    2. '(range' → logprob: -4.635458946228027
    3. '((' → logprob: -8.260458946228027
    4. '([' → logprob: -8.885458946228027
    5. '([(' → logprob: -8.885458946228027
    6. '(' → logprob: -9.760458946228027
    7. 'dist' → logprob: -9.760458946228027
    8. '(en' → logprob: -10.010458946228027
    9. '(list' → logprob: -13.885458946228027
    10. '(filter' → logprob: -14.010458946228027

Token 227: 'x' (ID: 87)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3183634877204895
    2. 'dist' → logprob: -1.3183634281158447
    3. 'v' → logprob: -5.568363666534424
    4. 'i' → logprob: -7.318363666534424
    5. 'c' → logprob: -8.193363189697266
    6. 'val' → logprob: -9.568363189697266
    7. 'x' → logprob: -9.568363189697266
    8. 'di' → logprob: -9.943363189697266
    9. 'distance' → logprob: -9.943363189697266
    10. '(dist' → logprob: -11.193363189697266

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10026609152555466
    2. ',i' → logprob: -2.3502659797668457
    3. ',index' → logprob: -10.475266456604004
    4. ' ,' → logprob: -10.600266456604004
    5. ',x' → logprob: -13.850266456604004
    6. '[i' → logprob: -14.225266456604004
    7. ',k' → logprob: -14.225266456604004
    8. ',pos' → logprob: -14.350266456604004
    9. 'i' → logprob: -14.600266456604004
    10. 'idx' → logprob: -14.850266456604004

Token 229: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001705246395431459
    2. 'idx' → logprob: -8.750170707702637
    3. ' i' → logprob: -12.125170707702637
    4. '-i' → logprob: -13.125170707702637
    5. ')' → logprob: -13.375170707702637
    6. ')i' → logprob: -13.875170707702637
    7. '-' → logprob: -14.375170707702637
    8. 'v' → logprob: -14.500170707702637
    9. 'd' → logprob: -15.000170707702637
    10. 'x' → logprob: -16.00016975402832

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '[' → logprob: -16.500001907348633
    5. ',)' → logprob: -17.875001907348633
    6. '))' → logprob: -18.875001907348633
    7. 'ex' → logprob: -18.875001907348633
    8. ',' → logprob: -19.250001907348633
    9. ')]' → logprob: -19.375001907348633
    10. ')...' → logprob: -19.500001907348633

Token 231: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006855101673863828
    2. 'for' → logprob: -7.500685691833496
    3. ' for' → logprob: -9.125685691833496
    4. ' )' → logprob: -10.750685691833496
    5. '[' → logprob: -14.375685691833496
    6. ' ' → logprob: -14.500685691833496
    7. ')
' → logprob: -15.125685691833496
    8. ',' → logprob: -15.500685691833496
    9. '   ' → logprob: -15.625685691833496
    10. '
' → logprob: -16.12568473815918

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02633676491677761
    2. ' i' → logprob: -3.651336669921875
    3. ',' → logprob: -10.776336669921875
    4. ',i' → logprob: -11.776336669921875
    5. 'enumer' → logprob: -13.151336669921875
    6. ' range' → logprob: -13.276336669921875
    7. '(i' → logprob: -13.276336669921875
    8. 'x' → logprob: -13.651336669921875
    9. 'range' → logprob: -14.401336669921875
    10. '	i' → logprob: -15.526336669921875

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5184764862060547
    2. 'in' → logprob: -1.0184764862060547
    3. ' in' → logprob: -3.1434764862060547
    4. ',x' → logprob: -8.768476486206055
    5. ' ,' → logprob: -9.768476486206055
    6. ',i' → logprob: -10.268476486206055
    7. 'i' → logprob: -11.143476486206055
    8. ' ' → logprob: -11.393476486206055
    9. 'range' → logprob: -12.143476486206055
    10. ',in' → logprob: -12.393476486206055

Token 234: ' x' (ID: 1215)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0982850044965744
    2. 'in' → logprob: -2.723284959793091
    3. ' enumerate' → logprob: -3.973284959793091
    4. ' in' → logprob: -4.72328519821167
    5. 'x' → logprob: -9.723284721374512
    6. 'en' → logprob: -9.723284721374512
    7. 'range' → logprob: -10.098284721374512
    8. '
' → logprob: -10.473284721374512
    9. 'e' → logprob: -10.598284721374512
    10. 'v' → logprob: -11.848284721374512

Token 235: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4287849962711334
    2. ' in' → logprob: -1.053784966468811
    3. ')' → logprob: -9.67878532409668
    4. ',' → logprob: -11.17878532409668
    5. ' ' → logprob: -12.92878532409668
    6. 'import' → logprob: -13.80378532409668
    7. 'enumer' → logprob: -14.05378532409668
    8. '	in' → logprob: -14.42878532409668
    9. 'inthe' → logprob: -14.92878532409668
    10. ' )' → logprob: -15.30378532409668

Token 236: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5759403705596924
    2. ' enumerate' → logprob: -0.8259403705596924
    3. 'en' → logprob: -14.200940132141113
    4. '(en' → logprob: -16.45094108581543
    5. 'Enumer' → logprob: -16.57594108581543
    6. 'enum' → logprob: -16.70094108581543
    7. '```' → logprob: -17.32594108581543
    8. ' en' → logprob: -18.07594108581543
    9. 'enqueue' → logprob: -18.70094108581543
    10. ' in' → logprob: -18.95094108581543

Token 237: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.4140441635390744e-05
    2. 'dist' → logprob: -11.500014305114746
    3. '(en' → logprob: -12.625014305114746
    4. '(' → logprob: -15.000014305114746
    5. ' dist' → logprob: -16.25001335144043
    6. '	dist' → logprob: -16.87501335144043
    7. '(d' → logprob: -17.62501335144043
    8. '(distance' → logprob: -18.12501335144043
    9. ' (' → logprob: -18.37501335144043
    10. '((' → logprob: -18.75001335144043

Token 238: ')],' (ID: 60559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012800035066902637
    2. ' if' → logprob: -5.137800216674805
    3. ')][' → logprob: -6.012800216674805
    4. 'if' → logprob: -6.137800216674805
    5. ')])' → logprob: -6.262800216674805
    6. ' )' → logprob: -8.762800216674805
    7. '[' → logprob: -10.012800216674805
    8. ')],' → logprob: -10.137800216674805
    9. '1' → logprob: -10.137800216674805
    10. ' ' → logprob: -11.137800216674805

Token 239: ' reverse' (ID: 18199)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.08073987066745758
    2. '1' → logprob: -3.080739974975586
    3. ' key' → logprob: -3.580739974975586
    4. 'reverse' → logprob: -5.580739974975586
    5. ' reverse' → logprob: -11.455739974975586
    6. '(key' → logprob: -12.830739974975586
    7. ' ' → logprob: -13.580739974975586
    8. ',key' → logprob: -14.330739974975586
    9. '	key' → logprob: -14.455739974975586
    10. ')' → logprob: -16.330739974975586

Token 240: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0038125456776469946
    2. '=' → logprob: -5.628812313079834
    3. '(True' → logprob: -8.878812789916992
    4. '(' → logprob: -9.878812789916992
    5. ')' → logprob: -11.878812789916992
    6. '()' → logprob: -11.878812789916992
    7. '())' → logprob: -13.378812789916992
    8. '=False' → logprob: -13.503812789916992
    9. '(),' → logprob: -13.503812789916992
    10. ')=' → logprob: -14.253812789916992

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8961017202818766e-05
    2. ')
' → logprob: -10.500059127807617
    3. ')[' → logprob: -10.625059127807617
    4. ',' → logprob: -13.375059127807617
    5. '[' → logprob: -13.500059127807617
    6. '))' → logprob: -13.625059127807617
    7. ' )' → logprob: -13.750059127807617
    8. '())' → logprob: -15.125059127807617
    9. ')

' → logprob: -15.250059127807617
    10. ')`' → logprob: -15.375059127807617

Token 242: 'new' (ID: 1389)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016514869406819344
    2. ')' → logprob: -5.266514778137207
    3. '[' → logprob: -5.391514778137207
    4. '(' → logprob: -6.391514778137207
    5. 'pr' → logprob: -6.516514778137207
    6. 'for' → logprob: -6.766514778137207
    7. 'i' → logprob: -7.641514778137207
    8. '0' → logprob: -8.016514778137207
    9. '1' → logprob: -8.891514778137207
    10. 'ans' → logprob: -9.266514778137207

Token 243: '_root' (ID: 29989)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.9964815974235535
    2. '_dist' → logprob: -0.9964815974235535
    3. 'dist' → logprob: -1.9964816570281982
    4. '_idx' → logprob: -3.8714816570281982
    5. 'node' → logprob: -4.246481418609619
    6. '_nodes' → logprob: -4.496481418609619
    7. '_index' → logprob: -4.621481418609619
    8. '_,' → logprob: -4.621481418609619
    9. '_distance' → logprob: -4.871481418609619
    10. ',' → logprob: -4.996481418609619

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45160573720932007
    2. '=' → logprob: -1.3266057968139648
    3. ',' → logprob: -2.326605796813965
    4. '_' → logprob: -9.326605796813965
    5. ',_' → logprob: -9.576605796813965
    6. '_idx' → logprob: -9.701605796813965
    7. ' ,' → logprob: -9.826605796813965
    8. '_distance' → logprob: -10.826605796813965
    9. ')' → logprob: -10.951605796813965
    10. '_dist' → logprob: -11.326605796813965

Token 245: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.47407984733581543
    2. ' dist' → logprob: -0.9740798473358154
    3. '_dist' → logprob: -13.849080085754395
    4. '(dist' → logprob: -14.099080085754395
    5. '	dist' → logprob: -14.974080085754395
    6. ' ' → logprob: -15.099080085754395
    7. '0' → logprob: -15.599080085754395
    8. 'd' → logprob: -16.099079132080078
    9. ' ' → logprob: -16.599079132080078
    10. '1' → logprob: -16.724079132080078

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0087516784551553e-05
    2. '[-' → logprob: -12.25001049041748
    3. '[
' → logprob: -13.37501049041748
    4. '0' → logprob: -13.87501049041748
    5. ' [' → logprob: -13.87501049041748
    6. '1' → logprob: -14.37501049041748
    7. '
' → logprob: -14.87501049041748
    8. '\[' → logprob: -15.25001049041748
    9. '```' → logprob: -15.25001049041748
    10. '][' → logprob: -16.000009536743164

Token 247: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047714399988763034
    2. '[' → logprob: -8.250476837158203
    3. '1' → logprob: -8.625476837158203
    4. ' ' → logprob: -10.375476837158203
    5. '```' → logprob: -13.875476837158203
    6. '
' → logprob: -14.125476837158203
    7. '   ' → logprob: -14.312976837158203
    8. '][' → logprob: -14.375476837158203
    9. ' [' → logprob: -14.500476837158203
    10. '-' → logprob: -15.875476837158203

Token 248: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.302704761968926e-05
    2. '[' → logprob: -9.875073432922363
    3. ' ][' → logprob: -11.500073432922363
    4. ']' → logprob: -11.625073432922363
    5. '1' → logprob: -14.000073432922363
    6. '][-' → logprob: -14.250073432922363
    7. ')[' → logprob: -15.750073432922363
    8. '
' → logprob: -15.875073432922363
    9. '"][' → logprob: -16.000072479248047
    10. '-' → logprob: -16.125072479248047

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -16.75
    4. '
' → logprob: -18.125
    5. '   ' → logprob: -18.125
    6. '۱' → logprob: -18.25
    7. '::-' → logprob: -19.375
    8. '0' → logprob: -19.625
    9. '１' → logprob: -19.75
    10. ' ' → logprob: -20.125

Token 250: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002859916305169463
    2. ']' → logprob: -5.877860069274902
    3. ')]' → logprob: -10.377860069274902
    4. '])' → logprob: -11.127860069274902
    5. ')
' → logprob: -13.002860069274902
    6. '<|end|>' → logprob: -13.127860069274902
    7. ' )' → logprob: -13.377860069274902
    8. '+' → logprob: -14.377860069274902
    9. '}' → logprob: -14.752860069274902
    10. '))' → logprob: -14.877860069274902

Token 251: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006912283133715391
    2. 'new' → logprob: -7.7506914138793945
    3. 'print' → logprob: -9.000691413879395
    4. 'd' → logprob: -10.375691413879395
    5. 'res' → logprob: -10.500691413879395
    6. 'ans' → logprob: -11.125691413879395
    7. 'max' → logprob: -11.500691413879395
    8. '
' → logprob: -11.625691413879395
    9. 'result' → logprob: -12.125691413879395
    10. 'depth' → logprob: -12.250691413879395

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932561993598938
    2. ' =' → logprob: -0.6932561993598938
    3. 'new' → logprob: -9.693256378173828
    4. '_new' → logprob: -11.318256378173828
    5. '<|end|>' → logprob: -11.693256378173828
    6. ',' → logprob: -12.318256378173828
    7. '[' → logprob: -12.443256378173828
    8. '2' → logprob: -12.568256378173828
    9. ')' → logprob: -12.693256378173828
    10. '1' → logprob: -13.193256378173828

Token 253: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019294669618830085
    2. ' d' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.00192928314209
    4. ' ' → logprob: -17.126930236816406
    5. '	d' → logprob: -17.876930236816406
    6. '  ' → logprob: -18.001930236816406
    7. ')d' → logprob: -19.626930236816406
    8. '[d' → logprob: -20.126930236816406
    9. '[' → logprob: -20.251930236816406
    10. '```' → logprob: -21.126930236816406

Token 254: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0009399275877512991
    2. 'ijk' → logprob: -7.125939846038818
    3. 'ij' → logprob: -9.625940322875977
    4. 'jik' → logprob: -10.125940322875977
    5. 'jk' → logprob: -11.125940322875977
    6. 'j' → logprob: -12.625940322875977
    7. '[i' → logprob: -13.375940322875977
    8. 'ist' → logprob: -13.500940322875977
    9. '```' → logprob: -13.500940322875977
    10. 'ijkl' → logprob: -13.625940322875977

Token 255: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.500028610229492
    3. 'new' → logprob: -14.125028610229492
    4. '(n' → logprob: -15.750028610229492
    5. '(
' → logprob: -16.125028610229492
    6. '(ne' → logprob: -16.625028610229492
    7. ')new' → logprob: -16.625028610229492
    8. '(New' → logprob: -17.750028610229492
    9. ',new' → logprob: -17.750028610229492
    10. ' (' → logprob: -18.375028610229492

Token 256: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -6.2729995988775045e-06
    2. 'root' → logprob: -12.000006675720215
    3. '_' → logprob: -17.1250057220459
    4. ' root' → logprob: -17.5000057220459
    5. '(root' → logprob: -18.1250057220459
    6. '_ro' → logprob: -19.3750057220459
    7. '```' → logprob: -19.6250057220459
    8. '_ROOT' → logprob: -19.8750057220459
    9. '[root' → logprob: -20.3750057220459
    10. '_new' → logprob: -20.7500057220459

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ')
' → logprob: -11.875009536743164
    3. '())' → logprob: -13.250009536743164
    4. '()' → logprob: -14.875009536743164
    5. ' )' → logprob: -15.625009536743164
    6. ')

' → logprob: -17.000009536743164
    7. ')#' → logprob: -17.250009536743164
    8. ')[' → logprob: -18.000009536743164
    9. ')return' → logprob: -18.500009536743164
    10. '[' → logprob: -18.625009536743164

Token 258: 'diam' (ID: 98903)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19290578365325928
    2. 'ans' → logprob: -2.442905902862549
    3. 'dist' → logprob: -2.817905902862549
    4. 'max' → logprob: -4.317905902862549
    5. 'res' → logprob: -5.692905902862549
    6. 'answer' → logprob: -5.817905902862549
    7. 'x' → logprob: -6.317905902862549
    8. 'fur' → logprob: -6.817905902862549
    9. 'for' → logprob: -6.942905902862549
    10. 'f' → logprob: -7.192905902862549

Token 259: 'eter' (ID: 2377)
  Prédit: 'eter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.3364241421222687
    2. 'dist' → logprob: -1.7114241123199463
    3. '=' → logprob: -2.9614241123199463
    4. ' =' → logprob: -3.8364241123199463
    5. 'et' → logprob: -4.586424350738525
    6. 'ist' → logprob: -4.711424350738525
    7. '_dist' → logprob: -4.711424350738525
    8. 'eters' → logprob: -6.586424350738525
    9. 'etr' → logprob: -7.711424350738525
    10. 'ax' → logprob: -8.586423873901367

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2522364854812622
    2. '=' → logprob: -1.5022364854812622
    3. ',' → logprob: -8.377236366271973
    4. '_' → logprob: -10.252236366271973
    5. '_length' → logprob: -10.377236366271973
    6. '_=' → logprob: -13.252236366271973
    7. '=max' → logprob: -13.752236366271973
    8. '_dist' → logprob: -14.127236366271973
    9. 'length' → logprob: -14.127236366271973
    10. ' ' → logprob: -14.252236366271973

Token 261: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019479141337797046
    2. ' max' → logprob: -6.25194787979126
    3. 'dist' → logprob: -10.876948356628418
    4. '(max' → logprob: -15.501948356628418
    5. '[max' → logprob: -16.2519474029541
    6. 'sorted' → logprob: -17.2519474029541
    7. ' dist' → logprob: -17.6269474029541
    8. '	max' → logprob: -18.0019474029541
    9. 'min' → logprob: -18.3769474029541
    10. '=max' → logprob: -18.5019474029541

Token 262: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -3.5358694731257856e-05
    2. '(d' → logprob: -11.375035285949707
    3. '([' → logprob: -11.375035285949707
    4. 'dist' → logprob: -11.625035285949707
    5. '(x' → logprob: -12.875035285949707
    6. '(' → logprob: -14.875035285949707
    7. '((' → logprob: -15.250035285949707
    8. '(i' → logprob: -16.125036239624023
    9. '(distance' → logprob: -16.875036239624023
    10. '	dist' → logprob: -17.250036239624023

Token 263: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007616918068379164
    2. '[' → logprob: -4.882616996765137
    3. ')[' → logprob: -12.257616996765137
    4. ')-' → logprob: -13.007616996765137
    5. ' )' → logprob: -13.132616996765137
    6. ')
' → logprob: -14.257616996765137
    7. '))' → logprob: -14.757616996765137
    8. '[])' → logprob: -15.507616996765137
    9. '())' → logprob: -16.00761604309082
    10. ');' → logprob: -16.25761604309082

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006308287265710533
    2. '])' → logprob: -7.500630855560303
    3. ':' → logprob: -10.250630378723145
    4. ')' → logprob: -11.000630378723145
    5. '[' → logprob: -11.250630378723145
    6. '(' → logprob: -12.125630378723145
    7. '2' → logprob: -13.250630378723145
    8. '])[' → logprob: -13.500630378723145
    9. '])-' → logprob: -14.500630378723145
    10. '})' → logprob: -15.000630378723145

Token 265: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.107425062713446e-06
    2. '])' → logprob: -12.750006675720215
    3. ':]' → logprob: -13.125006675720215
    4. ':])
' → logprob: -13.250006675720215
    5. ':].' → logprob: -15.500006675720215
    6. ':)' → logprob: -15.875006675720215
    7. ':],' → logprob: -16.12500762939453
    8. '[' → logprob: -17.12500762939453
    9. '+' → logprob: -18.00000762939453
    10. '：' → logprob: -18.37500762939453

Token 266: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002522626891732216
    2. ')' → logprob: -6.0025224685668945
    3. '])
' → logprob: -10.252522468566895
    4. ' ])' → logprob: -12.002522468566895
    5. ']' → logprob: -12.752522468566895
    6. ']),' → logprob: -14.877522468566895
    7. ')
' → logprob: -15.127522468566895
    8. ' )' → logprob: -15.252522468566895
    9. ')])' → logprob: -15.252522468566895
    10. '2' → logprob: -15.377522468566895

Token 267: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010090247727930546
    2. '
' → logprob: -4.885090351104736
    3. '<|end|>' → logprob: -6.385090351104736
    4. ' print' → logprob: -7.635090351104736
    5. '#' → logprob: -9.135089874267578
    6. '#print' → logprob: -9.760089874267578
    7. ',' → logprob: -10.135089874267578
    8. 'for' → logprob: -10.760089874267578
    9. ')' → logprob: -10.885089874267578
    10. '```' → logprob: -11.135089874267578

Token 268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0548846572637558
    2. ' ' → logprob: -2.929884672164917
    3. ' ' → logprob: -14.554884910583496
    4. '0' → logprob: -14.804884910583496
    5. '+' → logprob: -14.804884910583496
    6. '(' → logprob: -15.179884910583496
    7. ' (' → logprob: -15.304884910583496
    8. ' -' → logprob: -15.804884910583496
    9. ' new' → logprob: -15.804884910583496
    10. '-' → logprob: -16.05488395690918

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6944889426231384
    2. 'max' → logprob: -0.6944889426231384
    3. 'dist' → logprob: -7.444489002227783
    4. ' max' → logprob: -7.569489002227783
    5. ' ' → logprob: -8.819488525390625
    6. '(max' → logprob: -9.694488525390625
    7. '0' → logprob: -12.194488525390625
    8. '+' → logprob: -12.319488525390625
    9. 'new' → logprob: -12.319488525390625
    10. '(' → logprob: -12.819488525390625

Token 270: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10535295307636261
    2. '<|end|>' → logprob: -2.3553528785705566
    3. ')' → logprob: -6.230352878570557
    4. '#print' → logprob: -7.230352878570557
    5. '#' → logprob: -7.355352878570557
    6. '
' → logprob: -7.480352878570557
    7. 'for' → logprob: -7.605352878570557
    8. '```' → logprob: -8.730353355407715
    9. 'pr' → logprob: -9.105353355407715
    10. ' print' → logprob: -9.980353355407715

Token 271: 'bl' (ID: 1751)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.579495235811919e-05
    2. 'pr' → logprob: -10.12509536743164
    3. 'for' → logprob: -10.12509536743164
    4. 'diam' → logprob: -12.12509536743164
    5. ')' → logprob: -12.75009536743164
    6. 'p' → logprob: -13.62509536743164
    7. 'prin' → logprob: -13.62509536743164
    8. '#print' → logprob: -14.00009536743164
    9. '```' → logprob: -14.75009536743164
    10. 'if' → logprob: -14.75009536743164

Token 272: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.104737788438797
    2. 'print' → logprob: -2.8547377586364746
    3. 'og' → logprob: -3.6047377586364746
    4. 'ock' → logprob: -5.229737758636475
    5. 'oom' → logprob: -5.604737758636475
    6. 'ist' → logprob: -6.729737758636475
    7. 'ank' → logprob: -6.854737758636475
    8. 'en' → logprob: -7.354737758636475
    9. 'e' → logprob: -7.854737758636475
    10. 'ocks' → logprob: -7.979737758636475

Token 273: ' diameter' (ID: 32514)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6006341576576233
    2. '[]' → logprob: -1.6006340980529785
    3. 'diam' → logprob: -2.1006340980529785
    4. 'dist' → logprob: -2.9756340980529785
    5. '[N' → logprob: -3.7256340980529785
    6. ' [' → logprob: -4.3506340980529785
    7. '0' → logprob: -4.3506340980529785
    8. ' []' → logprob: -5.6006340980529785
    9. 'N' → logprob: -5.7256340980529785
    10. '["' → logprob: -6.1006340980529785

Token 274: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.114310622215271
    2. '+' → logprob: -2.1143107414245605
    3. '<|end|>' → logprob: -2.1143107414245605
    4. '//' → logprob: -2.2393107414245605
    5. ' ' → logprob: -2.2393107414245605
    6. '#' → logprob: -3.1143107414245605
    7. '%' → logprob: -3.3643107414245605
    8. '-' → logprob: -3.7393107414245605
    9. ' +' → logprob: -3.8643107414245605
    10. '
' → logprob: -3.9893107414245605

Token 275: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.500108141452074e-05
    2. ' ' → logprob: -10.875035285949707
    3. '3' → logprob: -11.125035285949707
    4. 'k' → logprob: -14.875035285949707
    5. '1' → logprob: -15.375035285949707
    6. '```' → logprob: -15.625035285949707
    7. '4' → logprob: -16.12503433227539
    8. '(' → logprob: -16.12503433227539
    9. '   ' → logprob: -17.06253433227539
    10. '  ' → logprob: -17.18753433227539

Token 276: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '3' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '(' → logprob: -15.375003814697266
    5. '```' → logprob: -15.500003814697266
    6. 'k' → logprob: -15.875003814697266
    7. '1' → logprob: -16.000003814697266
    8. '4' → logprob: -16.500003814697266
    9. '`' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.437503814697266

Token 277: ' !=' (ID: 1666)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2052527368068695
    2. 'if' → logprob: -1.705252766609192
    3. ' if' → logprob: -6.330252647399902
    4. '<|end|>' → logprob: -6.705252647399902
    5. ' 
' → logprob: -8.330252647399902
    6. 'print' → logprob: -8.705252647399902
    7. 'for' → logprob: -9.330252647399902
    8. '\n' → logprob: -9.330252647399902
    9. '

' → logprob: -9.955252647399902
    10. '' → logprob: -10.455252647399902

Token 278: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007395883440040052
    2. ' ' → logprob: -7.250739574432373
    3. '1' → logprob: -10.750740051269531
    4. '=' → logprob: -12.375740051269531
    5. '2' → logprob: -12.500740051269531
    6. '```' → logprob: -17.12574005126953
    7. '۰' → logprob: -17.18824005126953
    8. '  ' → logprob: -17.50074005126953
    9. '
' → logprob: -17.93824005126953
    10. ' =' → logprob: -18.18824005126953

Token 279: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001499060745118186
    2. ' ' → logprob: -9.000149726867676
    3. '1' → logprob: -10.625149726867676
    4. '2' → logprob: -13.250149726867676
    5. '01' → logprob: -16.125150680541992
    6. '۰' → logprob: -16.375150680541992
    7. '０' → logprob: -16.750150680541992
    8. '012' → logprob: -16.750150680541992
    9. '०' → logprob: -17.937650680541992
    10. '02' → logprob: -18.000150680541992

Token 280: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5985098481178284
    2. '<|end|>' → logprob: -1.3485097885131836
    3. 'if' → logprob: -1.8485097885131836
    4. 'print' → logprob: -3.8485097885131836
    5. 'for' → logprob: -4.973509788513184
    6. ' if' → logprob: -6.723509788513184
    7. ')' → logprob: -7.098509788513184
    8. '\n' → logprob: -7.223509788513184
    9. '#' → logprob: -7.723509788513184
    10. '```' → logprob: -8.473509788513184

Token 281: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5267807245254517
    2. 'if' → logprob: -1.0267807245254517
    3. 'for' → logprob: -3.651780605316162
    4. 'pr' → logprob: -3.776780605316162
    5. 'p' → logprob: -6.901780605316162
    6. 'i' → logprob: -8.65178108215332
    7. 'bl' → logprob: -8.65178108215332
    8. 'answer' → logprob: -8.77678108215332
    9. 'ans' → logprob: -8.90178108215332
    10. 'result' → logprob: -9.27678108215332

Token 282: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04406674578785896
    2. '(' → logprob: -4.044066905975342
    3. '('' → logprob: -4.044066905975342
    4. '(bl' → logprob: -4.919066905975342
    5. '(("' → logprob: -8.544066429138184
    6. '(int' → logprob: -8.794066429138184
    7. '((' → logprob: -9.419066429138184
    8. '(d' → logprob: -9.419066429138184
    9. '(""' → logprob: -9.669066429138184
    10. '(-' → logprob: -10.169066429138184

Token 283: 'First' (ID: 7127)
  Prédit: 'Second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.7432907223701477
    2. 'First' → logprob: -1.493290662765503
    3. ''' → logprob: -2.368290662765503
    4. 'Sn' → logprob: -2.993290662765503
    5. 'White' → logprob: -3.118290662765503
    6. 'F' → logprob: -3.118290662765503
    7. '"' → logprob: -3.993290662765503
    8. 'Bob' → logprob: -4.743290901184082
    9. 'Yes' → logprob: -5.118290901184082
    10. 'B' → logprob: -5.493290901184082

Token 284: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002288352930918336
    2. 'Player' → logprob: -7.002288341522217
    3. '')' → logprob: -7.127288341522217
    4. '"' → logprob: -8.877288818359375
    5. ' Player' → logprob: -9.377288818359375
    6. ' '' → logprob: -9.502288818359375
    7. 'if' → logprob: -9.627288818359375
    8. ' if' → logprob: -9.627288818359375
    9. 'Win' → logprob: -11.502288818359375
    10. 'Winner' → logprob: -11.502288818359375

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7493172883987427
    2. ' if' → logprob: -0.9993172883987427
    3. ''' → logprob: -1.8743172883987427
    4. ')' → logprob: -5.374317169189453
    5. ' ' → logprob: -7.499317169189453
    6. '()' → logprob: -8.499317169189453
    7. '"' → logprob: -9.124317169189453
    8. ' '' → logprob: -9.374317169189453
    9. '')' → logprob: -10.624317169189453
    10. '  ' → logprob: -10.749317169189453

Token 286: ' bl' (ID: 1162)
  Prédit: ' bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bl' → logprob: -0.08117501437664032
    2. 'bl' → logprob: -2.5811750888824463
    3. ' not' → logprob: -6.206174850463867
    4. ' ' → logprob: -9.081174850463867
    5. 'not' → logprob: -9.331174850463867
    6. '(bl' → logprob: -10.081174850463867
    7. ' ' → logprob: -11.206174850463867
    8. 'b' → logprob: -13.518674850463867
    9. '   ' → logprob: -14.331174850463867
    10. ' b' → logprob: -14.393674850463867

Token 287: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04859759286046028
    2. 'else' → logprob: -3.048597574234009
    3. ' ' → logprob: -11.54859733581543
    4. '	else' → logprob: -15.29859733581543
    5. ' ' → logprob: -15.79859733581543
    6. '==' → logprob: -17.29859733581543
    7. ' els' → logprob: -17.54859733581543
    8. 'e' → logprob: -17.54859733581543
    9. '>' → logprob: -17.79859733581543
    10. '```' → logprob: -18.54859733581543

Token 288: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0059343669563531876
    2. ' '' → logprob: -5.130934238433838
    3. '"' → logprob: -12.630934715270996
    4. ' ' → logprob: -14.130934715270996
    5. '('' → logprob: -15.005934715270996
    6. '	' → logprob: -15.130934715270996
    7. 'Second' → logprob: -15.255934715270996
    8. ' ' → logprob: -15.380934715270996
    9. ''S' → logprob: -15.630934715270996
    10. '   ' → logprob: -16.13093376159668

Token 289: 'Second' (ID: 17422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12779775261878967
    2. 'Second' → logprob: -2.127797842025757
    3. '"' → logprob: -7.127797603607178
    4. ' Second' → logprob: -10.252798080444336
    5. 'second' → logprob: -11.502798080444336
    6. 'Third' → logprob: -11.752798080444336
    7. 'print' → logprob: -12.877798080444336
    8. 'First' → logprob: -13.127798080444336
    9. ''S' → logprob: -13.502798080444336
    10. ' '' → logprob: -13.627798080444336

Token 290: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006718809716403484
    2. ')' → logprob: -5.006718635559082
    3. '")' → logprob: -13.256718635559082
    4. ''' → logprob: -14.506718635559082
    5. '}')' → logprob: -15.506718635559082
    6. ')'' → logprob: -15.631718635559082
    7. '')
' → logprob: -15.756718635559082
    8. '('' → logprob: -16.1317195892334
    9. '()' → logprob: -16.1317195892334
    10. '`)' → logprob: -16.3817195892334


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 288
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 252
Précision stricte (1ère position): 41.32%
Précision adaptée (1ère position): 44.10%
Précision (top 10): 87.50%
================================================================================
